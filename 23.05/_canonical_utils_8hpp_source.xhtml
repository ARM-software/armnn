<!-- Copyright (c) 2020 ARM Limited. -->
<!--                                 -->
<!-- SPDX-License-Identifier: MIT    -->
<!--                                 -->
<!-- HTML header for doxygen 1.8.13-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.17"/>
<meta name="robots" content="NOINDEX, NOFOLLOW" />
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>ArmNN: shim/sl/canonical/CanonicalUtils.hpp Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script>
<script type="text/javascript" async="async" src="http://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="stylesheet.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <img alt="ArmNN" src="Arm_NN_horizontal_blue.png" style="max-width: 10rem; margin-top: .5rem; margin-left 10px"/>
  <td style="padding-left: 0.5em;">
   <div id="projectname">
   &#160;<span id="projectnumber">23.05</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.17 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "search",false,'Search');
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(document).ready(function(){initNavTree('_canonical_utils_8hpp_source.xhtml',''); initResizable(); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="headertitle">
<div class="title">CanonicalUtils.hpp</div>  </div>
</div><!--header-->
<div class="contents">
<a href="_canonical_utils_8hpp.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="comment">//</span></div>
<div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="comment">// Copyright Â© 2022 Arm Ltd and Contributors. All rights reserved.</span></div>
<div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="comment">// SPDX-License-Identifier: MIT</span></div>
<div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="comment">//</span></div>
<div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160; </div>
<div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="preprocessor">#pragma once</span></div>
<div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="preprocessor">#include &lt;<a class="code" href="_arm_n_n_8hpp.xhtml">armnn/ArmNN.hpp</a>&gt;</span></div>
<div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160; </div>
<div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="preprocessor">#include &lt;CpuExecutor.h&gt;</span></div>
<div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="preprocessor">#include &lt;nnapi/OperandTypes.h&gt;</span></div>
<div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;<span class="preprocessor">#include &lt;nnapi/Result.h&gt;</span></div>
<div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;<span class="preprocessor">#include &lt;nnapi/Types.h&gt;</span></div>
<div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160; </div>
<div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;<span class="preprocessor">#include &lt;vector&gt;</span></div>
<div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;<span class="preprocessor">#include &lt;string&gt;</span></div>
<div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;<span class="preprocessor">#include &lt;fstream&gt;</span></div>
<div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;<span class="preprocessor">#include &lt;iomanip&gt;</span></div>
<div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160; </div>
<div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;<span class="keyword">namespace </span><a class="code" href="namespacearmnn__driver.xhtml">armnn_driver</a></div>
<div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;{</div>
<div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160; </div>
<div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;<span class="keyword">using namespace </span><a class="code" href="namespaceandroid_1_1nn.xhtml">android::nn</a>;</div>
<div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160; </div>
<div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;<span class="keyword">extern</span> <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_permutation_vector.xhtml">armnn::PermutationVector</a> <a class="code" href="namespacearmnn__driver.xhtml#ae059aea66ee0867a204aa2f2d9abb42c">g_DontPermute</a>;</div>
<div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160; </div>
<div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> OperandType&gt;</div>
<div class="line"><a name="l00027"></a><span class="lineno"><a class="line" href="classarmnn__driver_1_1_unsupported_operand.xhtml">   27</a></span>&#160;<span class="keyword">class </span><a class="code" href="classarmnn__driver_1_1_unsupported_operand.xhtml">UnsupportedOperand</a>: <span class="keyword">public</span> std::runtime_error</div>
<div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;{</div>
<div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;<span class="keyword">public</span>:</div>
<div class="line"><a name="l00030"></a><span class="lineno"><a class="line" href="classarmnn__driver_1_1_unsupported_operand.xhtml#a23f5b5cbca1bac3dba723a81ae3f37f9">   30</a></span>&#160;    <a class="code" href="classarmnn__driver_1_1_unsupported_operand.xhtml#a23f5b5cbca1bac3dba723a81ae3f37f9">UnsupportedOperand</a>(<span class="keyword">const</span> <a class="code" href="namespacearmnn__driver.xhtml#a53bfb6eb38a90244ba166b641a6965d9">OperandType</a> type)</div>
<div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;        : <a class="code" href="namespacestd.xhtml">std</a>::runtime_error(<span class="stringliteral">&quot;Operand type is unsupported&quot;</span>)</div>
<div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;        , m_type(type)</div>
<div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;    {}</div>
<div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160; </div>
<div class="line"><a name="l00035"></a><span class="lineno"><a class="line" href="classarmnn__driver_1_1_unsupported_operand.xhtml#adbccd9c087443cf759711a3e62da9a84">   35</a></span>&#160;    <a class="code" href="namespacearmnn__driver.xhtml#a53bfb6eb38a90244ba166b641a6965d9">OperandType</a> <a class="code" href="classarmnn__driver_1_1_unsupported_operand.xhtml#adbccd9c087443cf759711a3e62da9a84">m_type</a>;</div>
<div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;};</div>
<div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;<span class="comment"></span> </div>
<div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;<span class="comment">/// Swizzles tensor data in @a input according to the dimension mappings.</span></div>
<div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;<span class="comment"></span><span class="keywordtype">void</span> <a class="code" href="namespacearmnn__driver.xhtml#a5665b88a0b22c6341dd8075048981689">SwizzleAndroidNn4dTensorToArmNn</a>(<a class="code" href="classarmnn_1_1_tensor_info.xhtml">armnn::TensorInfo</a>&amp; tensor,</div>
<div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;                                     <span class="keyword">const</span> <span class="keywordtype">void</span>* input,</div>
<div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;                                     <span class="keywordtype">void</span>* output,</div>
<div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;                                     <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_permutation_vector.xhtml">armnn::PermutationVector</a>&amp; mappings);</div>
<div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;<span class="comment"></span> </div>
<div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;<span class="comment">/// Returns a pointer to a specific location in a pool`</span></div>
<div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;<span class="comment"></span><span class="keywordtype">void</span>* <a class="code" href="namespacearmnn__driver.xhtml#a96666c2945d7fe8c34aee30a449287d5">GetMemoryFromPool</a>(DataLocation location,</div>
<div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;                        <span class="keyword">const</span> std::vector&lt;android::nn::RunTimePoolInfo&gt;&amp; memPools);</div>
<div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160; </div>
<div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;<span class="keywordtype">void</span>* <a class="code" href="namespacearmnn__driver.xhtml#a915f2652854e417e26afc297f12e107c">GetMemoryFromPointer</a>(<span class="keyword">const</span> Request::Argument&amp; requestArg);</div>
<div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160; </div>
<div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;<a class="code" href="classarmnn_1_1_tensor_info.xhtml">armnn::TensorInfo</a> <a class="code" href="namespacearmnn__driver.xhtml#a93f4874062e34819806d36b74c73dc61">GetTensorInfoForOperand</a>(<span class="keyword">const</span> <a class="code" href="namespacearmnn__driver.xhtml#aa9b4bc8d4cfb04be14771dbb1bc1a1ac">Operand</a>&amp; operand);</div>
<div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160; </div>
<div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;std::string <a class="code" href="namespacearmnn__driver.xhtml#ac0532f3c7d143a04aee7f5991ee5d381">GetOperandSummary</a>(<span class="keyword">const</span> <a class="code" href="namespacearmnn__driver.xhtml#aa9b4bc8d4cfb04be14771dbb1bc1a1ac">Operand</a>&amp; operand);</div>
<div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160; </div>
<div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;<span class="keywordtype">bool</span> <a class="code" href="namespacearmnn__driver.xhtml#ab3c135a0d4b1152f6b989ea6afddd6bc">isQuantizedOperand</a>(<span class="keyword">const</span> <a class="code" href="namespacearmnn__driver.xhtml#a53bfb6eb38a90244ba166b641a6965d9">OperandType</a>&amp; operandType);</div>
<div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160; </div>
<div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;std::string <a class="code" href="namespacearmnn__driver.xhtml#a31b494d1b36f5ed7fc7556a0fbc2c17c">GetModelSummary</a>(<span class="keyword">const</span> <a class="code" href="namespacearmnn__driver.xhtml#a923b39ec5f83672f50289cbaf5de6798">Model</a>&amp; model);</div>
<div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160; </div>
<div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> TensorType&gt;</div>
<div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;<span class="keywordtype">void</span> <a class="code" href="namespacearmnn__driver.xhtml#aa25bddb175983b2d3e0965440323d789">DumpTensor</a>(<span class="keyword">const</span> std::string&amp; dumpDir,</div>
<div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;                <span class="keyword">const</span> std::string&amp; requestName,</div>
<div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;                <span class="keyword">const</span> std::string&amp; tensorName,</div>
<div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;                <span class="keyword">const</span> TensorType&amp; tensor);</div>
<div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160; </div>
<div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;<span class="keywordtype">void</span> <a class="code" href="namespacearmnn__driver.xhtml#aa313ae79f70102e3451d45d3387c2e46">DumpJsonProfilingIfRequired</a>(<span class="keywordtype">bool</span> gpuProfilingEnabled,</div>
<div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;                                 <span class="keyword">const</span> std::string&amp; dumpDir,</div>
<div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;                                 <a class="code" href="namespacearmnn.xhtml#a0d8160388a127c1a23b37bc88dc6e2ec">armnn::NetworkId</a> networkId,</div>
<div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;                                 <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_i_profiler.xhtml">armnn::IProfiler</a>* profiler);</div>
<div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160; </div>
<div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;std::string <a class="code" href="namespacearmnn__driver.xhtml#a5304cf930377fc082e7494d20de2be12">ExportNetworkGraphToDotFile</a>(<span class="keyword">const</span> <a class="code" href="classarmnn_1_1_i_optimized_network.xhtml">armnn::IOptimizedNetwork</a>&amp; optimizedNetwork,</div>
<div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;                                        <span class="keyword">const</span> std::string&amp; dumpDir);</div>
<div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160; </div>
<div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;std::string <a class="code" href="namespacearmnn__driver.xhtml#a31f074135a3dba97d9baf1dffd0a07fd">SerializeNetwork</a>(<span class="keyword">const</span> <a class="code" href="classarmnn_1_1_i_network.xhtml">armnn::INetwork</a>&amp; network,</div>
<div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;                             <span class="keyword">const</span> std::string&amp; dumpDir,</div>
<div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;                             std::vector&lt;uint8_t&gt;&amp; dataCacheData,</div>
<div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;                             <span class="keywordtype">bool</span> dataCachingActive = <span class="keyword">true</span>);</div>
<div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160; </div>
<div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;<span class="keywordtype">void</span> <a class="code" href="namespacearmnn__driver.xhtml#a3d30e31a46482fbc714fc34e0d5a1c90">RenameExportedFiles</a>(<span class="keyword">const</span> std::string&amp; existingSerializedFileName,</div>
<div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;                         <span class="keyword">const</span> std::string&amp; existingDotFileName,</div>
<div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;                         <span class="keyword">const</span> std::string&amp; dumpDir,</div>
<div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;                         <span class="keyword">const</span> <a class="code" href="namespacearmnn.xhtml#a0d8160388a127c1a23b37bc88dc6e2ec">armnn::NetworkId</a> networkId);</div>
<div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160; </div>
<div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;<span class="keywordtype">void</span> <a class="code" href="namespacearmnn__driver.xhtml#a00b317cd97319ac7b6a248a768ceb201">RenameFile</a>(<span class="keyword">const</span> std::string&amp; existingName,</div>
<div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;                <span class="keyword">const</span> std::string&amp; extension,</div>
<div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;                <span class="keyword">const</span> std::string&amp; dumpDir,</div>
<div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;                <span class="keyword">const</span> <a class="code" href="namespacearmnn.xhtml#a0d8160388a127c1a23b37bc88dc6e2ec">armnn::NetworkId</a> networkId);</div>
<div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;<span class="comment"></span> </div>
<div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;<span class="comment">/// Checks if a tensor info represents a dynamic tensor</span></div>
<div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;<span class="comment"></span><span class="keywordtype">bool</span> <a class="code" href="namespacearmnn__driver.xhtml#a208149d5c08f84debf8b265bb508fe02">IsDynamicTensor</a>(<span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_info.xhtml">armnn::TensorInfo</a>&amp; outputInfo);</div>
<div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;<span class="comment"></span> </div>
<div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;<span class="comment">/// Checks for ArmNN support of dynamic tensors.</span></div>
<div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;<span class="comment"></span><span class="keywordtype">bool</span> <a class="code" href="namespacearmnn__driver.xhtml#a85d53debffd9611a3b5bc6031afd5073">AreDynamicTensorsSupported</a>(<span class="keywordtype">void</span>);</div>
<div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160; </div>
<div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;std::string <a class="code" href="namespacearmnn__driver.xhtml#a419cd7b9bad83f31f6db8ba9a3b9517a">GetFileTimestamp</a>();</div>
<div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160; </div>
<div class="line"><a name="l00095"></a><span class="lineno"><a class="line" href="namespacearmnn__driver.xhtml#a93d7282d7b5701a723304d87fcdc3a43">   95</a></span>&#160;<span class="keyword">inline</span> OutputShape <a class="code" href="namespacearmnn__driver.xhtml#a93d7282d7b5701a723304d87fcdc3a43">ComputeShape</a>(<span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_info.xhtml">armnn::TensorInfo</a>&amp; info)</div>
<div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;{</div>
<div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;    OutputShape shape;</div>
<div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160; </div>
<div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;    <a class="code" href="classarmnn_1_1_tensor_shape.xhtml">armnn::TensorShape</a> tensorShape = info.GetShape();</div>
<div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;    <span class="comment">// Android will expect scalars as a zero dimensional tensor</span></div>
<div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;    <span class="keywordflow">if</span>(tensorShape.<a class="code" href="classarmnn_1_1_tensor_shape.xhtml#a5a212540c00931bd2a4b4041beda33ae">GetDimensionality</a>() == <a class="code" href="namespacearmnn.xhtml#a8e1f31031ad31cd8cc22d7c9daa32681af60357a8d17e45793298323f1b372a74">armnn::Dimensionality::Scalar</a>)</div>
<div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;    {</div>
<div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;         shape.dimensions = std::vector&lt;uint32_t&gt;{};</div>
<div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;    }</div>
<div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;    <span class="keywordflow">else</span></div>
<div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;    {</div>
<div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;        std::vector&lt;uint32_t&gt; dimensions;</div>
<div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;        <span class="keyword">const</span> <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> numDims = tensorShape.<a class="code" href="classarmnn_1_1_tensor_shape.xhtml#a157e27d41e9f6b21f0d3c025fa47dc24">GetNumDimensions</a>();</div>
<div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;        dimensions.resize(numDims);</div>
<div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;        <span class="keywordflow">for</span> (<span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> outputIdx = 0u; outputIdx &lt; numDims; ++outputIdx)</div>
<div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;        {</div>
<div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;            dimensions[outputIdx] = tensorShape[outputIdx];</div>
<div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;        }</div>
<div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;        shape.dimensions = dimensions;</div>
<div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;    }</div>
<div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160; </div>
<div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;    shape.isSufficient = <span class="keyword">true</span>;</div>
<div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160; </div>
<div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;    <span class="keywordflow">return</span> shape;</div>
<div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;}</div>
<div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160; </div>
<div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;<span class="keywordtype">void</span> <a class="code" href="namespacearmnn__driver.xhtml#a7c1c80ee0f432b6b621c40571410195a">CommitPools</a>(std::vector&lt;::android::nn::RunTimePoolInfo&gt;&amp; memPools);</div>
<div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160; </div>
<div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;} <span class="comment">// namespace armnn_driver</span></div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<div class="ttc" id="anamespacearmnn__driver_xhtml"><div class="ttname"><a href="namespacearmnn__driver.xhtml">armnn_driver</a></div><div class="ttdoc">Helper classes.</div><div class="ttdef"><b>Definition:</b> <a href="_armnn_device_8cpp_source.xhtml#l00037">ArmnnDevice.cpp:37</a></div></div>
<div class="ttc" id="anamespacearmnn__driver_xhtml_a5665b88a0b22c6341dd8075048981689"><div class="ttname"><a href="namespacearmnn__driver.xhtml#a5665b88a0b22c6341dd8075048981689">armnn_driver::SwizzleAndroidNn4dTensorToArmNn</a></div><div class="ttdeci">void SwizzleAndroidNn4dTensorToArmNn(armnn::TensorInfo &amp;tensorInfo, const void *input, void *output, const armnn::PermutationVector &amp;mappings)</div><div class="ttdoc">Swizzles tensor data in input according to the dimension mappings.</div><div class="ttdef"><b>Definition:</b> <a href="_canonical_utils_8cpp_source.xhtml#l00040">CanonicalUtils.cpp:40</a></div></div>
<div class="ttc" id="aclassarmnn__driver_1_1_unsupported_operand_xhtml"><div class="ttname"><a href="classarmnn__driver_1_1_unsupported_operand.xhtml">armnn_driver::UnsupportedOperand</a></div><div class="ttdef"><b>Definition:</b> <a href="_canonical_utils_8hpp_source.xhtml#l00027">CanonicalUtils.hpp:27</a></div></div>
<div class="ttc" id="aclassarmnn_1_1_tensor_shape_xhtml_a5a212540c00931bd2a4b4041beda33ae"><div class="ttname"><a href="classarmnn_1_1_tensor_shape.xhtml#a5a212540c00931bd2a4b4041beda33ae">armnn::TensorShape::GetDimensionality</a></div><div class="ttdeci">Dimensionality GetDimensionality() const</div><div class="ttdoc">Function that returns the tensor type.</div><div class="ttdef"><b>Definition:</b> <a href="_tensor_8hpp_source.xhtml#l00092">Tensor.hpp:92</a></div></div>
<div class="ttc" id="anamespacearmnn__driver_xhtml_ab3c135a0d4b1152f6b989ea6afddd6bc"><div class="ttname"><a href="namespacearmnn__driver.xhtml#ab3c135a0d4b1152f6b989ea6afddd6bc">armnn_driver::isQuantizedOperand</a></div><div class="ttdeci">bool isQuantizedOperand(const OperandType &amp;operandType)</div><div class="ttdef"><b>Definition:</b> <a href="_canonical_utils_8cpp_source.xhtml#l00505">CanonicalUtils.cpp:505</a></div></div>
<div class="ttc" id="aclassarmnn_1_1_i_optimized_network_xhtml"><div class="ttname"><a href="classarmnn_1_1_i_optimized_network.xhtml">armnn::IOptimizedNetwork</a></div><div class="ttdef"><b>Definition:</b> <a href="_i_network_8hpp_source.xhtml#l00862">INetwork.hpp:862</a></div></div>
<div class="ttc" id="anamespacearmnn__driver_xhtml_a915f2652854e417e26afc297f12e107c"><div class="ttname"><a href="namespacearmnn__driver.xhtml#a915f2652854e417e26afc297f12e107c">armnn_driver::GetMemoryFromPointer</a></div><div class="ttdeci">void * GetMemoryFromPointer(const Request::Argument &amp;requestArg)</div><div class="ttdef"><b>Definition:</b> <a href="_canonical_utils_8cpp_source.xhtml#l00077">CanonicalUtils.cpp:77</a></div></div>
<div class="ttc" id="anamespacearmnn_xhtml_a8e1f31031ad31cd8cc22d7c9daa32681af60357a8d17e45793298323f1b372a74"><div class="ttname"><a href="namespacearmnn.xhtml#a8e1f31031ad31cd8cc22d7c9daa32681af60357a8d17e45793298323f1b372a74">armnn::Dimensionality::Scalar</a></div><div class="ttdeci">@ Scalar</div></div>
<div class="ttc" id="a_arm_n_n_8hpp_xhtml"><div class="ttname"><a href="_arm_n_n_8hpp.xhtml">ArmNN.hpp</a></div></div>
<div class="ttc" id="anamespacearmnn__driver_xhtml_aa313ae79f70102e3451d45d3387c2e46"><div class="ttname"><a href="namespacearmnn__driver.xhtml#aa313ae79f70102e3451d45d3387c2e46">armnn_driver::DumpJsonProfilingIfRequired</a></div><div class="ttdeci">void DumpJsonProfilingIfRequired(bool gpuProfilingEnabled, const std::string &amp;dumpDir, armnn::NetworkId networkId, const armnn::IProfiler *profiler)</div><div class="ttdef"><b>Definition:</b> <a href="_canonical_utils_8cpp_source.xhtml#l00350">CanonicalUtils.cpp:350</a></div></div>
<div class="ttc" id="anamespacearmnn__driver_xhtml_a923b39ec5f83672f50289cbaf5de6798"><div class="ttname"><a href="namespacearmnn__driver.xhtml#a923b39ec5f83672f50289cbaf5de6798">armnn_driver::Model</a></div><div class="ttdeci">::android::nn::Model Model</div><div class="ttdoc">Helper classes.</div><div class="ttdef"><b>Definition:</b> <a href="_conversion_utils_8hpp_source.xhtml#l00043">ConversionUtils.hpp:43</a></div></div>
<div class="ttc" id="anamespacearmnn__driver_xhtml_a85d53debffd9611a3b5bc6031afd5073"><div class="ttname"><a href="namespacearmnn__driver.xhtml#a85d53debffd9611a3b5bc6031afd5073">armnn_driver::AreDynamicTensorsSupported</a></div><div class="ttdeci">bool AreDynamicTensorsSupported()</div><div class="ttdoc">Checks for ArmNN support of dynamic tensors.</div><div class="ttdef"><b>Definition:</b> <a href="_canonical_utils_8cpp_source.xhtml#l00500">CanonicalUtils.cpp:500</a></div></div>
<div class="ttc" id="anamespacearmnn__driver_xhtml_a31f074135a3dba97d9baf1dffd0a07fd"><div class="ttname"><a href="namespacearmnn__driver.xhtml#a31f074135a3dba97d9baf1dffd0a07fd">armnn_driver::SerializeNetwork</a></div><div class="ttdeci">std::string SerializeNetwork(const armnn::INetwork &amp;network, const std::string &amp;dumpDir, std::vector&lt; uint8_t &gt; &amp;dataCacheData, bool dataCachingActive)</div><div class="ttdef"><b>Definition:</b> <a href="_canonical_utils_8cpp_source.xhtml#l00427">CanonicalUtils.cpp:427</a></div></div>
<div class="ttc" id="anamespacearmnn__driver_xhtml_ac0532f3c7d143a04aee7f5991ee5d381"><div class="ttname"><a href="namespacearmnn__driver.xhtml#ac0532f3c7d143a04aee7f5991ee5d381">armnn_driver::GetOperandSummary</a></div><div class="ttdeci">std::string GetOperandSummary(const Operand &amp;operand)</div><div class="ttdef"><b>Definition:</b> <a href="_canonical_utils_8cpp_source.xhtml#l00189">CanonicalUtils.cpp:189</a></div></div>
<div class="ttc" id="anamespacearmnn__driver_xhtml_a5304cf930377fc082e7494d20de2be12"><div class="ttname"><a href="namespacearmnn__driver.xhtml#a5304cf930377fc082e7494d20de2be12">armnn_driver::ExportNetworkGraphToDotFile</a></div><div class="ttdeci">std::string ExportNetworkGraphToDotFile(const armnn::IOptimizedNetwork &amp;optimizedNetwork, const std::string &amp;dumpDir)</div><div class="ttdef"><b>Definition:</b> <a href="_canonical_utils_8cpp_source.xhtml#l00387">CanonicalUtils.cpp:387</a></div></div>
<div class="ttc" id="anamespacearmnn__driver_xhtml_aa9b4bc8d4cfb04be14771dbb1bc1a1ac"><div class="ttname"><a href="namespacearmnn__driver.xhtml#aa9b4bc8d4cfb04be14771dbb1bc1a1ac">armnn_driver::Operand</a></div><div class="ttdeci">::android::nn::Operand Operand</div><div class="ttdef"><b>Definition:</b> <a href="_conversion_utils_8hpp_source.xhtml#l00044">ConversionUtils.hpp:44</a></div></div>
<div class="ttc" id="aclassarmnn_1_1_tensor_shape_xhtml"><div class="ttname"><a href="classarmnn_1_1_tensor_shape.xhtml">armnn::TensorShape</a></div><div class="ttdef"><b>Definition:</b> <a href="_tensor_8hpp_source.xhtml#l00020">Tensor.hpp:20</a></div></div>
<div class="ttc" id="anamespacearmnn__driver_xhtml_a3d30e31a46482fbc714fc34e0d5a1c90"><div class="ttname"><a href="namespacearmnn__driver.xhtml#a3d30e31a46482fbc714fc34e0d5a1c90">armnn_driver::RenameExportedFiles</a></div><div class="ttdeci">void RenameExportedFiles(const std::string &amp;existingSerializedFileName, const std::string &amp;existingDotFileName, const std::string &amp;dumpDir, const armnn::NetworkId networkId)</div><div class="ttdef"><b>Definition:</b> <a href="_canonical_utils_8cpp_source.xhtml#l00575">CanonicalUtils.cpp:575</a></div></div>
<div class="ttc" id="anamespacearmnn__driver_xhtml_a419cd7b9bad83f31f6db8ba9a3b9517a"><div class="ttname"><a href="namespacearmnn__driver.xhtml#a419cd7b9bad83f31f6db8ba9a3b9517a">armnn_driver::GetFileTimestamp</a></div><div class="ttdeci">std::string GetFileTimestamp()</div><div class="ttdef"><b>Definition:</b> <a href="_canonical_utils_8cpp_source.xhtml#l00555">CanonicalUtils.cpp:555</a></div></div>
<div class="ttc" id="anamespacearmnn__driver_xhtml_a93d7282d7b5701a723304d87fcdc3a43"><div class="ttname"><a href="namespacearmnn__driver.xhtml#a93d7282d7b5701a723304d87fcdc3a43">armnn_driver::ComputeShape</a></div><div class="ttdeci">OutputShape ComputeShape(const armnn::TensorInfo &amp;info)</div><div class="ttdef"><b>Definition:</b> <a href="_canonical_utils_8hpp_source.xhtml#l00095">CanonicalUtils.hpp:95</a></div></div>
<div class="ttc" id="aclassarmnn_1_1_tensor_info_xhtml"><div class="ttname"><a href="classarmnn_1_1_tensor_info.xhtml">armnn::TensorInfo</a></div><div class="ttdef"><b>Definition:</b> <a href="_tensor_8hpp_source.xhtml#l00152">Tensor.hpp:152</a></div></div>
<div class="ttc" id="anamespacearmnn_xhtml_a0d8160388a127c1a23b37bc88dc6e2ec"><div class="ttname"><a href="namespacearmnn.xhtml#a0d8160388a127c1a23b37bc88dc6e2ec">armnn::NetworkId</a></div><div class="ttdeci">int NetworkId</div><div class="ttdef"><b>Definition:</b> <a href="_i_runtime_8hpp_source.xhtml#l00035">IRuntime.hpp:35</a></div></div>
<div class="ttc" id="aclassarmnn_1_1_i_profiler_xhtml"><div class="ttname"><a href="classarmnn_1_1_i_profiler.xhtml">armnn::IProfiler</a></div><div class="ttdef"><b>Definition:</b> <a href="_i_profiler_8hpp_source.xhtml#l00021">IProfiler.hpp:21</a></div></div>
<div class="ttc" id="anamespacearmnn__driver_xhtml_a208149d5c08f84debf8b265bb508fe02"><div class="ttname"><a href="namespacearmnn__driver.xhtml#a208149d5c08f84debf8b265bb508fe02">armnn_driver::IsDynamicTensor</a></div><div class="ttdeci">bool IsDynamicTensor(const armnn::TensorInfo &amp;tensorInfo)</div><div class="ttdoc">Checks if a tensor info represents a dynamic tensor.</div><div class="ttdef"><b>Definition:</b> <a href="_canonical_utils_8cpp_source.xhtml#l00486">CanonicalUtils.cpp:486</a></div></div>
<div class="ttc" id="aclassarmnn_1_1_permutation_vector_xhtml"><div class="ttname"><a href="classarmnn_1_1_permutation_vector.xhtml">armnn::PermutationVector</a></div><div class="ttdef"><b>Definition:</b> <a href="_types_8hpp_source.xhtml#l00306">Types.hpp:306</a></div></div>
<div class="ttc" id="anamespacearmnn__driver_xhtml_a31b494d1b36f5ed7fc7556a0fbc2c17c"><div class="ttname"><a href="namespacearmnn__driver.xhtml#a31b494d1b36f5ed7fc7556a0fbc2c17c">armnn_driver::GetModelSummary</a></div><div class="ttdeci">std::string GetModelSummary(const Model &amp;model)</div><div class="ttdef"><b>Definition:</b> <a href="_canonical_utils_8cpp_source.xhtml#l00521">CanonicalUtils.cpp:521</a></div></div>
<div class="ttc" id="aclassarmnn__driver_1_1_unsupported_operand_xhtml_adbccd9c087443cf759711a3e62da9a84"><div class="ttname"><a href="classarmnn__driver_1_1_unsupported_operand.xhtml#adbccd9c087443cf759711a3e62da9a84">armnn_driver::UnsupportedOperand::m_type</a></div><div class="ttdeci">OperandType m_type</div><div class="ttdef"><b>Definition:</b> <a href="_canonical_utils_8hpp_source.xhtml#l00035">CanonicalUtils.hpp:35</a></div></div>
<div class="ttc" id="anamespacearmnn__driver_xhtml_aa25bddb175983b2d3e0965440323d789"><div class="ttname"><a href="namespacearmnn__driver.xhtml#aa25bddb175983b2d3e0965440323d789">armnn_driver::DumpTensor</a></div><div class="ttdeci">void DumpTensor(const std::string &amp;dumpDir, const std::string &amp;requestName, const std::string &amp;tensorName, const TensorType &amp;tensor)</div><div class="ttdef"><b>Definition:</b> <a href="_canonical_utils_8cpp_source.xhtml#l00217">CanonicalUtils.cpp:217</a></div></div>
<div class="ttc" id="aclassarmnn_1_1_tensor_shape_xhtml_a157e27d41e9f6b21f0d3c025fa47dc24"><div class="ttname"><a href="classarmnn_1_1_tensor_shape.xhtml#a157e27d41e9f6b21f0d3c025fa47dc24">armnn::TensorShape::GetNumDimensions</a></div><div class="ttdeci">unsigned int GetNumDimensions() const</div><div class="ttdoc">Function that returns the tensor rank.</div><div class="ttdef"><b>Definition:</b> <a href="_tensor_8cpp_source.xhtml#l00174">Tensor.cpp:174</a></div></div>
<div class="ttc" id="anamespacearmnn__driver_xhtml_a96666c2945d7fe8c34aee30a449287d5"><div class="ttname"><a href="namespacearmnn__driver.xhtml#a96666c2945d7fe8c34aee30a449287d5">armnn_driver::GetMemoryFromPool</a></div><div class="ttdeci">void * GetMemoryFromPool(DataLocation location, const std::vector&lt; android::nn::RunTimePoolInfo &gt; &amp;memPools)</div><div class="ttdoc">Returns a pointer to a specific location in a pool`.</div><div class="ttdef"><b>Definition:</b> <a href="_canonical_utils_8cpp_source.xhtml#l00066">CanonicalUtils.cpp:66</a></div></div>
<div class="ttc" id="aclassarmnn_1_1_i_network_xhtml"><div class="ttname"><a href="classarmnn_1_1_i_network.xhtml">armnn::INetwork</a></div><div class="ttdoc">Main network class which provides the interface for building up a neural network.</div><div class="ttdef"><b>Definition:</b> <a href="_i_network_8hpp_source.xhtml#l00335">INetwork.hpp:335</a></div></div>
<div class="ttc" id="anamespacearmnn__driver_xhtml_ae059aea66ee0867a204aa2f2d9abb42c"><div class="ttname"><a href="namespacearmnn__driver.xhtml#ae059aea66ee0867a204aa2f2d9abb42c">armnn_driver::g_DontPermute</a></div><div class="ttdeci">const armnn::PermutationVector g_DontPermute</div><div class="ttdef"><b>Definition:</b> <a href="_canonical_utils_8cpp_source.xhtml#l00038">CanonicalUtils.cpp:38</a></div></div>
<div class="ttc" id="aclassarmnn__driver_1_1_unsupported_operand_xhtml_a23f5b5cbca1bac3dba723a81ae3f37f9"><div class="ttname"><a href="classarmnn__driver_1_1_unsupported_operand.xhtml#a23f5b5cbca1bac3dba723a81ae3f37f9">armnn_driver::UnsupportedOperand::UnsupportedOperand</a></div><div class="ttdeci">UnsupportedOperand(const OperandType type)</div><div class="ttdef"><b>Definition:</b> <a href="_canonical_utils_8hpp_source.xhtml#l00030">CanonicalUtils.hpp:30</a></div></div>
<div class="ttc" id="anamespacestd_xhtml"><div class="ttname"><a href="namespacestd.xhtml">std</a></div><div class="ttdef"><b>Definition:</b> <a href="_backend_id_8hpp_source.xhtml#l00149">BackendId.hpp:149</a></div></div>
<div class="ttc" id="anamespacearmnn__driver_xhtml_a7c1c80ee0f432b6b621c40571410195a"><div class="ttname"><a href="namespacearmnn__driver.xhtml#a7c1c80ee0f432b6b621c40571410195a">armnn_driver::CommitPools</a></div><div class="ttdeci">void CommitPools(std::vector&lt;::android::nn::RunTimePoolInfo &gt; &amp;memPools)</div><div class="ttdef"><b>Definition:</b> <a href="_canonical_utils_8cpp_source.xhtml#l00610">CanonicalUtils.cpp:610</a></div></div>
<div class="ttc" id="anamespacearmnn__driver_xhtml_a93f4874062e34819806d36b74c73dc61"><div class="ttname"><a href="namespacearmnn__driver.xhtml#a93f4874062e34819806d36b74c73dc61">armnn_driver::GetTensorInfoForOperand</a></div><div class="ttdeci">armnn::TensorInfo GetTensorInfoForOperand(const Operand &amp;operand)</div><div class="ttdef"><b>Definition:</b> <a href="_canonical_utils_8cpp_source.xhtml#l00097">CanonicalUtils.cpp:97</a></div></div>
<div class="ttc" id="anamespacearmnn__driver_xhtml_a53bfb6eb38a90244ba166b641a6965d9"><div class="ttname"><a href="namespacearmnn__driver.xhtml#a53bfb6eb38a90244ba166b641a6965d9">armnn_driver::OperandType</a></div><div class="ttdeci">::android::nn::OperandType OperandType</div><div class="ttdef"><b>Definition:</b> <a href="_conversion_utils_8hpp_source.xhtml#l00046">ConversionUtils.hpp:46</a></div></div>
<div class="ttc" id="anamespacearmnn__driver_xhtml_a00b317cd97319ac7b6a248a768ceb201"><div class="ttname"><a href="namespacearmnn__driver.xhtml#a00b317cd97319ac7b6a248a768ceb201">armnn_driver::RenameFile</a></div><div class="ttdeci">void RenameFile(const std::string &amp;existingName, const std::string &amp;extension, const std::string &amp;dumpDir, const armnn::NetworkId networkId)</div><div class="ttdef"><b>Definition:</b> <a href="_canonical_utils_8cpp_source.xhtml#l00588">CanonicalUtils.cpp:588</a></div></div>
<div class="ttc" id="anamespaceandroid_1_1nn_xhtml"><div class="ttname"><a href="namespaceandroid_1_1nn.xhtml">android::nn</a></div><div class="ttdef"><b>Definition:</b> <a href="support__library__service_8cpp_source.xhtml#l00010">support_library_service.cpp:10</a></div></div>
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="dir_b4dbf96392bc72a402a7206cbda88a03.xhtml">shim</a></li><li class="navelem"><a class="el" href="dir_09eea26cf0279feb9fcfb9b796a3e57e.xhtml">sl</a></li><li class="navelem"><a class="el" href="dir_6de13b49022bb7cfc6557e28050d5cbe.xhtml">canonical</a></li><li class="navelem"><a class="el" href="_canonical_utils_8hpp.xhtml">CanonicalUtils.hpp</a></li>
    <li class="footer">Generated on Thu May 18 2023 10:35:39 for ArmNN by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.17 </li>
  </ul>
</div>
</body>
</html>
