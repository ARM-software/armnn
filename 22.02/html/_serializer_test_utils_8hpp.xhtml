<!-- Copyright (c) 2020 ARM Limited. -->
<!--                                 -->
<!-- SPDX-License-Identifier: MIT    -->
<!--                                 -->
<!-- HTML header for doxygen 1.8.13-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.13"/>
<meta name="robots" content="NOINDEX, NOFOLLOW" />
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>ArmNN: src/armnnSerializer/test/SerializerTestUtils.hpp File Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script><script type="text/javascript" src="http://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="stylesheet.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <img alt="ArmNN" src="Arm_NN_horizontal_blue.png" style="max-width: 10rem; margin-top: .5rem; margin-left 10px"/>
  <td style="padding-left: 0.5em;">
   <div id="projectname">
   &#160;<span id="projectnumber">22.02</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.13 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
$(document).ready(function(){initNavTree('_serializer_test_utils_8hpp.xhtml','');});
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="summary">
<a href="#nested-classes">Classes</a> &#124;
<a href="#func-members">Functions</a>  </div>
  <div class="headertitle">
<div class="title">SerializerTestUtils.hpp File Reference</div>  </div>
</div><!--header-->
<div class="contents">
<div class="textblock"><code>#include &lt;<a class="el" href="_descriptors_8hpp_source.xhtml">armnn/Descriptors.hpp</a>&gt;</code><br />
<code>#include &lt;<a class="el" href="_i_network_8hpp_source.xhtml">armnn/INetwork.hpp</a>&gt;</code><br />
<code>#include &lt;<a class="el" href="_types_utils_8hpp_source.xhtml">armnn/TypesUtils.hpp</a>&gt;</code><br />
<code>#include &lt;<a class="el" href="_i_deserializer_8hpp_source.xhtml">armnnDeserializer/IDeserializer.hpp</a>&gt;</code><br />
<code>#include &lt;<a class="el" href="_ignore_unused_8hpp_source.xhtml">armnn/utility/IgnoreUnused.hpp</a>&gt;</code><br />
<code>#include &lt;random&gt;</code><br />
<code>#include &lt;vector&gt;</code><br />
<code>#include &lt;cstdlib&gt;</code><br />
<code>#include &lt;doctest/doctest.h&gt;</code><br />
</div>
<p><a href="_serializer_test_utils_8hpp_source.xhtml">Go to the source code of this file.</a></p>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="nested-classes"></a>
Classes</h2></td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_layer_verifier_base.xhtml">LayerVerifierBase</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_layer_verifier_base_with_descriptor.xhtml">LayerVerifierBaseWithDescriptor&lt; Descriptor &gt;</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_layer_verifier_base_with_descriptor_and_constants.xhtml">LayerVerifierBaseWithDescriptorAndConstants&lt; Descriptor &gt;</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="func-members"></a>
Functions</h2></td></tr>
<tr class="memitem:a59d03e40f8f051241e46091cca50d31f"><td class="memItemLeft" align="right" valign="top"><a class="el" href="namespacearmnn.xhtml#ace74f6f9feb95a964a49d79458232703">armnn::INetworkPtr</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_serializer_test_utils_8hpp.xhtml#a59d03e40f8f051241e46091cca50d31f">DeserializeNetwork</a> (const std::string &amp;serializerString)</td></tr>
<tr class="separator:a59d03e40f8f051241e46091cca50d31f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a228162aa622e2e39abb4f498c761ab5e"><td class="memItemLeft" align="right" valign="top">std::string&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_serializer_test_utils_8hpp.xhtml#a228162aa622e2e39abb4f498c761ab5e">SerializeNetwork</a> (const <a class="el" href="classarmnn_1_1_i_network.xhtml">armnn::INetwork</a> &amp;network)</td></tr>
<tr class="separator:a228162aa622e2e39abb4f498c761ab5e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a104f74b01c30ad4a17d765309a9731bd"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_serializer_test_utils_8hpp.xhtml#a104f74b01c30ad4a17d765309a9731bd">CompareConstTensor</a> (const <a class="el" href="classarmnn_1_1_const_tensor.xhtml">armnn::ConstTensor</a> &amp;tensor1, const <a class="el" href="classarmnn_1_1_const_tensor.xhtml">armnn::ConstTensor</a> &amp;tensor2)</td></tr>
<tr class="separator:a104f74b01c30ad4a17d765309a9731bd"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac67c744dcc3724ed775868c5b0ba22e3"><td class="memTemplParams" colspan="2">template&lt;typename T &gt; </td></tr>
<tr class="memitem:ac67c744dcc3724ed775868c5b0ba22e3"><td class="memTemplItemLeft" align="right" valign="top">void&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="_serializer_test_utils_8hpp.xhtml#ac67c744dcc3724ed775868c5b0ba22e3">CompareConstTensorData</a> (const void *data1, const void *data2, unsigned int numElements)</td></tr>
<tr class="separator:ac67c744dcc3724ed775868c5b0ba22e3"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<h2 class="groupheader">Function Documentation</h2>
<a id="a104f74b01c30ad4a17d765309a9731bd"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a104f74b01c30ad4a17d765309a9731bd">&#9670;&nbsp;</a></span>CompareConstTensor()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void CompareConstTensor </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_const_tensor.xhtml">armnn::ConstTensor</a> &amp;&#160;</td>
          <td class="paramname"><em>tensor1</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_const_tensor.xhtml">armnn::ConstTensor</a> &amp;&#160;</td>
          <td class="paramname"><em>tensor2</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_serializer_test_utils_8cpp_source.xhtml#l00116">116</a> of file <a class="el" href="_serializer_test_utils_8cpp_source.xhtml">SerializerTestUtils.cpp</a>.</p>

<p class="reference">References <a class="el" href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a27226c864bac7454a8504f8edb15d95b">armnn::Boolean</a>, <a class="el" href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a166495adc0d0f53bee6baecc577f5204">armnn::Float32</a>, <a class="el" href="_tensor_8hpp_source.xhtml#l00300">BaseTensor&lt; MemoryType &gt;::GetDataType()</a>, <a class="el" href="_types_utils_8hpp_source.xhtml#l00202">armnn::GetDataTypeName()</a>, <a class="el" href="_tensor_8hpp_source.xhtml#l00305">BaseTensor&lt; MemoryType &gt;::GetMemoryArea()</a>, <a class="el" href="_tensor_8hpp_source.xhtml#l00303">BaseTensor&lt; MemoryType &gt;::GetNumElements()</a>, <a class="el" href="_tensor_8hpp_source.xhtml#l00297">BaseTensor&lt; MemoryType &gt;::GetShape()</a>, <a class="el" href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a0a3f57c876f5a230244c38e1453a8a6e">armnn::QAsymmU8</a>, <a class="el" href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a9945327825b115e93a3b89f4302e76db">armnn::QSymmS8</a>, and <a class="el" href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6accedffbc6e5308e33d3843e8bdc0dad7">armnn::Signed32</a>.</p>

<p class="reference">Referenced by <a class="el" href="_serializer_test_utils_8hpp_source.xhtml#l00119">LayerVerifierBaseWithDescriptorAndConstants&lt; Descriptor &gt;::ExecuteStrategy()</a>, and <a class="el" href="_serializer_tests_8cpp_source.xhtml#l00024">TEST_SUITE()</a>.</p>
<div class="fragment"><div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;{</div><div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;    CHECK(tensor1.<a class="code" href="classarmnn_1_1_base_tensor.xhtml#a8b5d0f8a24e9d9238f412260a552acf8">GetShape</a>() == tensor2.<a class="code" href="classarmnn_1_1_base_tensor.xhtml#a8b5d0f8a24e9d9238f412260a552acf8">GetShape</a>());</div><div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;    CHECK(<a class="code" href="namespacearmnn.xhtml#a81b5ff8545adad19a1c9d4ca076d552c">GetDataTypeName</a>(tensor1.<a class="code" href="classarmnn_1_1_base_tensor.xhtml#aea909c7327109228ef618d459015def3">GetDataType</a>()) == <a class="code" href="namespacearmnn.xhtml#a81b5ff8545adad19a1c9d4ca076d552c">GetDataTypeName</a>(tensor2.<a class="code" href="classarmnn_1_1_base_tensor.xhtml#aea909c7327109228ef618d459015def3">GetDataType</a>()));</div><div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;</div><div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;    <span class="keywordflow">switch</span> (tensor1.<a class="code" href="classarmnn_1_1_base_tensor.xhtml#aea909c7327109228ef618d459015def3">GetDataType</a>())</div><div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;    {</div><div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;        <span class="keywordflow">case</span> <a class="code" href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a166495adc0d0f53bee6baecc577f5204">armnn::DataType::Float32</a>:</div><div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;            CompareConstTensorData&lt;const float*&gt;(</div><div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;                tensor1.<a class="code" href="classarmnn_1_1_base_tensor.xhtml#aa81f67ac64f0c249e26499600c45d996">GetMemoryArea</a>(), tensor2.<a class="code" href="classarmnn_1_1_base_tensor.xhtml#aa81f67ac64f0c249e26499600c45d996">GetMemoryArea</a>(), tensor1.<a class="code" href="classarmnn_1_1_base_tensor.xhtml#a8846406ac37fbd2204f0be16ee05d5b7">GetNumElements</a>());</div><div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;            <span class="keywordflow">break</span>;</div><div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;        <span class="keywordflow">case</span> <a class="code" href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a0a3f57c876f5a230244c38e1453a8a6e">armnn::DataType::QAsymmU8</a>:</div><div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;        <span class="keywordflow">case</span> <a class="code" href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a27226c864bac7454a8504f8edb15d95b">armnn::DataType::Boolean</a>:</div><div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;            CompareConstTensorData&lt;const uint8_t*&gt;(</div><div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;                tensor1.<a class="code" href="classarmnn_1_1_base_tensor.xhtml#aa81f67ac64f0c249e26499600c45d996">GetMemoryArea</a>(), tensor2.<a class="code" href="classarmnn_1_1_base_tensor.xhtml#aa81f67ac64f0c249e26499600c45d996">GetMemoryArea</a>(), tensor1.<a class="code" href="classarmnn_1_1_base_tensor.xhtml#a8846406ac37fbd2204f0be16ee05d5b7">GetNumElements</a>());</div><div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;            <span class="keywordflow">break</span>;</div><div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;        <span class="keywordflow">case</span> <a class="code" href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a9945327825b115e93a3b89f4302e76db">armnn::DataType::QSymmS8</a>:</div><div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;            CompareConstTensorData&lt;const int8_t*&gt;(</div><div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;                tensor1.<a class="code" href="classarmnn_1_1_base_tensor.xhtml#aa81f67ac64f0c249e26499600c45d996">GetMemoryArea</a>(), tensor2.<a class="code" href="classarmnn_1_1_base_tensor.xhtml#aa81f67ac64f0c249e26499600c45d996">GetMemoryArea</a>(), tensor1.<a class="code" href="classarmnn_1_1_base_tensor.xhtml#a8846406ac37fbd2204f0be16ee05d5b7">GetNumElements</a>());</div><div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;            <span class="keywordflow">break</span>;</div><div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;        <span class="keywordflow">case</span> <a class="code" href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6accedffbc6e5308e33d3843e8bdc0dad7">armnn::DataType::Signed32</a>:</div><div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;            CompareConstTensorData&lt;const int32_t*&gt;(</div><div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;                tensor1.<a class="code" href="classarmnn_1_1_base_tensor.xhtml#aa81f67ac64f0c249e26499600c45d996">GetMemoryArea</a>(), tensor2.<a class="code" href="classarmnn_1_1_base_tensor.xhtml#aa81f67ac64f0c249e26499600c45d996">GetMemoryArea</a>(), tensor1.<a class="code" href="classarmnn_1_1_base_tensor.xhtml#a8846406ac37fbd2204f0be16ee05d5b7">GetNumElements</a>());</div><div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;            <span class="keywordflow">break</span>;</div><div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;        <span class="keywordflow">default</span>:</div><div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;            <span class="comment">// Note that Float16 is not yet implemented</span></div><div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;            MESSAGE(<span class="stringliteral">&quot;Unexpected datatype&quot;</span>);</div><div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;            CHECK(<span class="keyword">false</span>);</div><div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;    }</div><div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;}</div><div class="ttc" id="namespacearmnn_xhtml_ad8ed01ff3ff33333d8e19db4d2818bb6a27226c864bac7454a8504f8edb15d95b"><div class="ttname"><a href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a27226c864bac7454a8504f8edb15d95b">armnn::DataType::Boolean</a></div></div>
<div class="ttc" id="namespacearmnn_xhtml_ad8ed01ff3ff33333d8e19db4d2818bb6accedffbc6e5308e33d3843e8bdc0dad7"><div class="ttname"><a href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6accedffbc6e5308e33d3843e8bdc0dad7">armnn::DataType::Signed32</a></div></div>
<div class="ttc" id="classarmnn_1_1_base_tensor_xhtml_a8b5d0f8a24e9d9238f412260a552acf8"><div class="ttname"><a href="classarmnn_1_1_base_tensor.xhtml#a8b5d0f8a24e9d9238f412260a552acf8">armnn::BaseTensor::GetShape</a></div><div class="ttdeci">const TensorShape &amp; GetShape() const</div><div class="ttdef"><b>Definition:</b> <a href="_tensor_8hpp_source.xhtml#l00297">Tensor.hpp:297</a></div></div>
<div class="ttc" id="classarmnn_1_1_base_tensor_xhtml_a8846406ac37fbd2204f0be16ee05d5b7"><div class="ttname"><a href="classarmnn_1_1_base_tensor.xhtml#a8846406ac37fbd2204f0be16ee05d5b7">armnn::BaseTensor::GetNumElements</a></div><div class="ttdeci">unsigned int GetNumElements() const</div><div class="ttdef"><b>Definition:</b> <a href="_tensor_8hpp_source.xhtml#l00303">Tensor.hpp:303</a></div></div>
<div class="ttc" id="classarmnn_1_1_base_tensor_xhtml_aa81f67ac64f0c249e26499600c45d996"><div class="ttname"><a href="classarmnn_1_1_base_tensor.xhtml#aa81f67ac64f0c249e26499600c45d996">armnn::BaseTensor::GetMemoryArea</a></div><div class="ttdeci">MemoryType GetMemoryArea() const</div><div class="ttdef"><b>Definition:</b> <a href="_tensor_8hpp_source.xhtml#l00305">Tensor.hpp:305</a></div></div>
<div class="ttc" id="namespacearmnn_xhtml_a81b5ff8545adad19a1c9d4ca076d552c"><div class="ttname"><a href="namespacearmnn.xhtml#a81b5ff8545adad19a1c9d4ca076d552c">armnn::GetDataTypeName</a></div><div class="ttdeci">constexpr const char * GetDataTypeName(DataType dataType)</div><div class="ttdef"><b>Definition:</b> <a href="_types_utils_8hpp_source.xhtml#l00202">TypesUtils.hpp:202</a></div></div>
<div class="ttc" id="namespacearmnn_xhtml_ad8ed01ff3ff33333d8e19db4d2818bb6a0a3f57c876f5a230244c38e1453a8a6e"><div class="ttname"><a href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a0a3f57c876f5a230244c38e1453a8a6e">armnn::DataType::QAsymmU8</a></div></div>
<div class="ttc" id="namespacearmnn_xhtml_ad8ed01ff3ff33333d8e19db4d2818bb6a166495adc0d0f53bee6baecc577f5204"><div class="ttname"><a href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a166495adc0d0f53bee6baecc577f5204">armnn::DataType::Float32</a></div></div>
<div class="ttc" id="namespacearmnn_xhtml_ad8ed01ff3ff33333d8e19db4d2818bb6a9945327825b115e93a3b89f4302e76db"><div class="ttname"><a href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a9945327825b115e93a3b89f4302e76db">armnn::DataType::QSymmS8</a></div></div>
<div class="ttc" id="classarmnn_1_1_base_tensor_xhtml_aea909c7327109228ef618d459015def3"><div class="ttname"><a href="classarmnn_1_1_base_tensor.xhtml#aea909c7327109228ef618d459015def3">armnn::BaseTensor::GetDataType</a></div><div class="ttdeci">DataType GetDataType() const</div><div class="ttdef"><b>Definition:</b> <a href="_tensor_8hpp_source.xhtml#l00300">Tensor.hpp:300</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="ac67c744dcc3724ed775868c5b0ba22e3"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ac67c744dcc3724ed775868c5b0ba22e3">&#9670;&nbsp;</a></span>CompareConstTensorData()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void CompareConstTensorData </td>
          <td>(</td>
          <td class="paramtype">const void *&#160;</td>
          <td class="paramname"><em>data1</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const void *&#160;</td>
          <td class="paramname"><em>data2</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">unsigned int&#160;</td>
          <td class="paramname"><em>numElements</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_serializer_test_utils_8hpp_source.xhtml#l00093">93</a> of file <a class="el" href="_serializer_test_utils_8hpp_source.xhtml">SerializerTestUtils.hpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;{</div><div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;    T typedData1 = <span class="keyword">static_cast&lt;</span>T<span class="keyword">&gt;</span>(data1);</div><div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;    T typedData2 = <span class="keyword">static_cast&lt;</span>T<span class="keyword">&gt;</span>(data2);</div><div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;    CHECK(typedData1);</div><div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;    CHECK(typedData2);</div><div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;</div><div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;    <span class="keywordflow">for</span> (<span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> i = 0; i &lt; numElements; i++)</div><div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;    {</div><div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;        CHECK(typedData1[i] == typedData2[i]);</div><div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;    }</div><div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;}</div></div><!-- fragment -->
</div>
</div>
<a id="a59d03e40f8f051241e46091cca50d31f"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a59d03e40f8f051241e46091cca50d31f">&#9670;&nbsp;</a></span>DeserializeNetwork()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="namespacearmnn.xhtml#ace74f6f9feb95a964a49d79458232703">armnn::INetworkPtr</a> DeserializeNetwork </td>
          <td>(</td>
          <td class="paramtype">const std::string &amp;&#160;</td>
          <td class="paramname"><em>serializerString</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_serializer_test_utils_8cpp_source.xhtml#l00147">147</a> of file <a class="el" href="_serializer_test_utils_8cpp_source.xhtml">SerializerTestUtils.cpp</a>.</p>

<p class="reference">Referenced by <a class="el" href="_comparison_serialization_tests_8cpp_source.xhtml#l00017">TEST_SUITE()</a>.</p>
<div class="fragment"><div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;{</div><div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;    std::vector&lt;std::uint8_t&gt; <span class="keyword">const</span> serializerVector{serializerString.begin(), serializerString.end()};</div><div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;    <span class="keywordflow">return</span> IDeserializer::Create()-&gt;CreateNetworkFromBinary(serializerVector);</div><div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;}</div></div><!-- fragment -->
</div>
</div>
<a id="a228162aa622e2e39abb4f498c761ab5e"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a228162aa622e2e39abb4f498c761ab5e">&#9670;&nbsp;</a></span>SerializeNetwork()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">std::string SerializeNetwork </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_i_network.xhtml">armnn::INetwork</a> &amp;&#160;</td>
          <td class="paramname"><em>network</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_serializer_test_utils_8cpp_source.xhtml#l00153">153</a> of file <a class="el" href="_serializer_test_utils_8cpp_source.xhtml">SerializerTestUtils.cpp</a>.</p>

<p class="reference">References <a class="el" href="_serializer_8cpp_source.xhtml#l00035">ISerializer::Create()</a>.</p>

<p class="reference">Referenced by <a class="el" href="_comparison_serialization_tests_8cpp_source.xhtml#l00017">TEST_SUITE()</a>.</p>
<div class="fragment"><div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;{</div><div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;    <a class="code" href="namespacearmnn_serializer.xhtml#a550a83250b3ddebf15d5c13c224e3609">armnnSerializer::ISerializerPtr</a> <a class="code" href="namespacearmnn_serializer.xhtml">serializer</a> = <a class="code" href="classarmnn_serializer_1_1_i_serializer.xhtml#a3c51b5b078572dee02528bfae7202524">armnnSerializer::ISerializer::Create</a>();</div><div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;</div><div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160;    serializer-&gt;Serialize(network);</div><div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;</div><div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160;    std::stringstream stream;</div><div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160;    serializer-&gt;SaveSerializedToStream(stream);</div><div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160;</div><div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160;    std::string serializerString{stream.str()};</div><div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160;    <span class="keywordflow">return</span> serializerString;</div><div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;}</div><div class="ttc" id="namespacearmnn_serializer_xhtml"><div class="ttname"><a href="namespacearmnn_serializer.xhtml">armnnSerializer</a></div><div class="ttdef"><b>Definition:</b> <a href="_i_serializer_8hpp_source.xhtml#l00011">ISerializer.hpp:11</a></div></div>
<div class="ttc" id="namespacearmnn_serializer_xhtml_a550a83250b3ddebf15d5c13c224e3609"><div class="ttname"><a href="namespacearmnn_serializer.xhtml#a550a83250b3ddebf15d5c13c224e3609">armnnSerializer::ISerializerPtr</a></div><div class="ttdeci">std::unique_ptr&lt; ISerializer, void(*)(ISerializer *serializer)&gt; ISerializerPtr</div><div class="ttdef"><b>Definition:</b> <a href="_i_serializer_8hpp_source.xhtml#l00015">ISerializer.hpp:15</a></div></div>
<div class="ttc" id="classarmnn_serializer_1_1_i_serializer_xhtml_a3c51b5b078572dee02528bfae7202524"><div class="ttname"><a href="classarmnn_serializer_1_1_i_serializer.xhtml#a3c51b5b078572dee02528bfae7202524">armnnSerializer::ISerializer::Create</a></div><div class="ttdeci">static ISerializerPtr Create()</div><div class="ttdef"><b>Definition:</b> <a href="_serializer_8cpp_source.xhtml#l00035">Serializer.cpp:35</a></div></div>
</div><!-- fragment -->
</div>
</div>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="dir_68267d1309a1af8e8297ef4c3efbcdba.xhtml">src</a></li><li class="navelem"><a class="el" href="dir_bff0d59bec81fb3d13742442d8f4421d.xhtml">armnnSerializer</a></li><li class="navelem"><a class="el" href="dir_fa9774f03679f86fc845ac51a8a81eba.xhtml">test</a></li><li class="navelem"><a class="el" href="_serializer_test_utils_8hpp.xhtml">SerializerTestUtils.hpp</a></li>
    <li class="footer">Generated on Tue Feb 22 2022 11:39:38 for ArmNN by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.13 </li>
  </ul>
</div>
</body>
</html>
