<!-- Copyright (c) 2020 ARM Limited. -->
<!--                                 -->
<!-- SPDX-License-Identifier: MIT    -->
<!--                                 -->
<!-- HTML header for doxygen 1.8.13-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.13"/>
<meta name="robots" content="NOINDEX, NOFOLLOW" />
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>ArmNN: src/backends/backendsCommon/test/layerTests/LogicalTestImpl.hpp File Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script><script type="text/javascript" src="http://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="stylesheet.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <img alt="ArmNN" src="Arm_NN_horizontal_blue.png" style="max-width: 10rem; margin-top: .5rem; margin-left 10px"/>
  <td style="padding-left: 0.5em;">
   <div id="projectname">
   &#160;<span id="projectnumber">22.05.01</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.13 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
$(document).ready(function(){initNavTree('_logical_test_impl_8hpp.xhtml','');});
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="summary">
<a href="#func-members">Functions</a>  </div>
  <div class="headertitle">
<div class="title">LogicalTestImpl.hpp File Reference</div>  </div>
</div><!--header-->
<div class="contents">
<div class="textblock"><code>#include &lt;<a class="el" href="include_2armnn_test_utils_2_layer_test_result_8hpp_source.xhtml">armnnTestUtils/LayerTestResult.hpp</a>&gt;</code><br />
<code>#include &lt;<a class="el" href="_i_backend_internal_8hpp_source.xhtml">armnn/backends/IBackendInternal.hpp</a>&gt;</code><br />
<code>#include &lt;<a class="el" href="include_2armnn_2backends_2_workload_factory_8hpp_source.xhtml">armnn/backends/WorkloadFactory.hpp</a>&gt;</code><br />
</div>
<p><a href="_logical_test_impl_8hpp_source.xhtml">Go to the source code of this file.</a></p>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="func-members"></a>
Functions</h2></td></tr>
<tr class="memitem:afcf67ea94facd8c1f2dafa0835907882"><td class="memItemLeft" align="right" valign="top"><a class="el" href="struct_layer_test_result.xhtml">LayerTestResult</a>&lt; uint8_t, 4 &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_logical_test_impl_8hpp.xhtml#afcf67ea94facd8c1f2dafa0835907882">LogicalNotTest</a> (<a class="el" href="classarmnn_1_1_i_workload_factory.xhtml">armnn::IWorkloadFactory</a> &amp;workloadFactory, const <a class="el" href="classarmnn_1_1_i_backend_internal.xhtml#a693b40e6b94e958836aeb0410ca186bd">armnn::IBackendInternal::IMemoryManagerSharedPtr</a> &amp;memoryManager, const <a class="el" href="classarmnn_1_1_i_tensor_handle_factory.xhtml">armnn::ITensorHandleFactory</a> &amp;tensorHandleFactory)</td></tr>
<tr class="separator:afcf67ea94facd8c1f2dafa0835907882"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a832e2e0b30c5730a3185a6cf630eba80"><td class="memItemLeft" align="right" valign="top"><a class="el" href="struct_layer_test_result.xhtml">LayerTestResult</a>&lt; uint8_t, 4 &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_logical_test_impl_8hpp.xhtml#a832e2e0b30c5730a3185a6cf630eba80">LogicalNotIntTest</a> (<a class="el" href="classarmnn_1_1_i_workload_factory.xhtml">armnn::IWorkloadFactory</a> &amp;workloadFactory, const <a class="el" href="classarmnn_1_1_i_backend_internal.xhtml#a693b40e6b94e958836aeb0410ca186bd">armnn::IBackendInternal::IMemoryManagerSharedPtr</a> &amp;memoryManager, const <a class="el" href="classarmnn_1_1_i_tensor_handle_factory.xhtml">armnn::ITensorHandleFactory</a> &amp;tensorHandleFactory)</td></tr>
<tr class="separator:a832e2e0b30c5730a3185a6cf630eba80"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3ae0ac93173ddba4f948e6154eee8e4e"><td class="memItemLeft" align="right" valign="top"><a class="el" href="struct_layer_test_result.xhtml">LayerTestResult</a>&lt; uint8_t, 4 &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_logical_test_impl_8hpp.xhtml#a3ae0ac93173ddba4f948e6154eee8e4e">LogicalAndTest</a> (<a class="el" href="classarmnn_1_1_i_workload_factory.xhtml">armnn::IWorkloadFactory</a> &amp;workloadFactory, const <a class="el" href="classarmnn_1_1_i_backend_internal.xhtml#a693b40e6b94e958836aeb0410ca186bd">armnn::IBackendInternal::IMemoryManagerSharedPtr</a> &amp;memoryManager, const <a class="el" href="classarmnn_1_1_i_tensor_handle_factory.xhtml">armnn::ITensorHandleFactory</a> &amp;tensorHandleFactory)</td></tr>
<tr class="separator:a3ae0ac93173ddba4f948e6154eee8e4e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:acce4d24bfc069740b462d5e9d3ca703b"><td class="memItemLeft" align="right" valign="top"><a class="el" href="struct_layer_test_result.xhtml">LayerTestResult</a>&lt; uint8_t, 4 &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_logical_test_impl_8hpp.xhtml#acce4d24bfc069740b462d5e9d3ca703b">LogicalOrTest</a> (<a class="el" href="classarmnn_1_1_i_workload_factory.xhtml">armnn::IWorkloadFactory</a> &amp;workloadFactory, const <a class="el" href="classarmnn_1_1_i_backend_internal.xhtml#a693b40e6b94e958836aeb0410ca186bd">armnn::IBackendInternal::IMemoryManagerSharedPtr</a> &amp;memoryManager, const <a class="el" href="classarmnn_1_1_i_tensor_handle_factory.xhtml">armnn::ITensorHandleFactory</a> &amp;tensorHandleFactory)</td></tr>
<tr class="separator:acce4d24bfc069740b462d5e9d3ca703b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:afd808a5a4d47078e50ff3f370edd49fc"><td class="memItemLeft" align="right" valign="top"><a class="el" href="struct_layer_test_result.xhtml">LayerTestResult</a>&lt; uint8_t, 4 &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_logical_test_impl_8hpp.xhtml#afd808a5a4d47078e50ff3f370edd49fc">LogicalAndIntTest</a> (<a class="el" href="classarmnn_1_1_i_workload_factory.xhtml">armnn::IWorkloadFactory</a> &amp;workloadFactory, const <a class="el" href="classarmnn_1_1_i_backend_internal.xhtml#a693b40e6b94e958836aeb0410ca186bd">armnn::IBackendInternal::IMemoryManagerSharedPtr</a> &amp;memoryManager, const <a class="el" href="classarmnn_1_1_i_tensor_handle_factory.xhtml">armnn::ITensorHandleFactory</a> &amp;tensorHandleFactory)</td></tr>
<tr class="separator:afd808a5a4d47078e50ff3f370edd49fc"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0d9ea4d93e7e42c82c1285188652cc11"><td class="memItemLeft" align="right" valign="top"><a class="el" href="struct_layer_test_result.xhtml">LayerTestResult</a>&lt; uint8_t, 4 &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_logical_test_impl_8hpp.xhtml#a0d9ea4d93e7e42c82c1285188652cc11">LogicalOrIntTest</a> (<a class="el" href="classarmnn_1_1_i_workload_factory.xhtml">armnn::IWorkloadFactory</a> &amp;workloadFactory, const <a class="el" href="classarmnn_1_1_i_backend_internal.xhtml#a693b40e6b94e958836aeb0410ca186bd">armnn::IBackendInternal::IMemoryManagerSharedPtr</a> &amp;memoryManager, const <a class="el" href="classarmnn_1_1_i_tensor_handle_factory.xhtml">armnn::ITensorHandleFactory</a> &amp;tensorHandleFactory)</td></tr>
<tr class="separator:a0d9ea4d93e7e42c82c1285188652cc11"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a824634ec1d8f6d7ccdbffa571f6be213"><td class="memItemLeft" align="right" valign="top"><a class="el" href="struct_layer_test_result.xhtml">LayerTestResult</a>&lt; uint8_t, 4 &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_logical_test_impl_8hpp.xhtml#a824634ec1d8f6d7ccdbffa571f6be213">LogicalAndBroadcast1Test</a> (<a class="el" href="classarmnn_1_1_i_workload_factory.xhtml">armnn::IWorkloadFactory</a> &amp;workloadFactory, const <a class="el" href="classarmnn_1_1_i_backend_internal.xhtml#a693b40e6b94e958836aeb0410ca186bd">armnn::IBackendInternal::IMemoryManagerSharedPtr</a> &amp;memoryManager, const <a class="el" href="classarmnn_1_1_i_tensor_handle_factory.xhtml">armnn::ITensorHandleFactory</a> &amp;tensorHandleFactory)</td></tr>
<tr class="separator:a824634ec1d8f6d7ccdbffa571f6be213"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9405e5bb7134cf16012a466e32991baf"><td class="memItemLeft" align="right" valign="top"><a class="el" href="struct_layer_test_result.xhtml">LayerTestResult</a>&lt; uint8_t, 4 &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_logical_test_impl_8hpp.xhtml#a9405e5bb7134cf16012a466e32991baf">LogicalOrBroadcast1Test</a> (<a class="el" href="classarmnn_1_1_i_workload_factory.xhtml">armnn::IWorkloadFactory</a> &amp;workloadFactory, const <a class="el" href="classarmnn_1_1_i_backend_internal.xhtml#a693b40e6b94e958836aeb0410ca186bd">armnn::IBackendInternal::IMemoryManagerSharedPtr</a> &amp;memoryManager, const <a class="el" href="classarmnn_1_1_i_tensor_handle_factory.xhtml">armnn::ITensorHandleFactory</a> &amp;tensorHandleFactory)</td></tr>
<tr class="separator:a9405e5bb7134cf16012a466e32991baf"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af1cc210d3bec3960b6f7e3eb23c3a128"><td class="memItemLeft" align="right" valign="top"><a class="el" href="struct_layer_test_result.xhtml">LayerTestResult</a>&lt; uint8_t, 4 &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_logical_test_impl_8hpp.xhtml#af1cc210d3bec3960b6f7e3eb23c3a128">LogicalAndBroadcast2Test</a> (<a class="el" href="classarmnn_1_1_i_workload_factory.xhtml">armnn::IWorkloadFactory</a> &amp;workloadFactory, const <a class="el" href="classarmnn_1_1_i_backend_internal.xhtml#a693b40e6b94e958836aeb0410ca186bd">armnn::IBackendInternal::IMemoryManagerSharedPtr</a> &amp;memoryManager, const <a class="el" href="classarmnn_1_1_i_tensor_handle_factory.xhtml">armnn::ITensorHandleFactory</a> &amp;tensorHandleFactory)</td></tr>
<tr class="separator:af1cc210d3bec3960b6f7e3eb23c3a128"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8d53c98177956fcac78ebff5839294ce"><td class="memItemLeft" align="right" valign="top"><a class="el" href="struct_layer_test_result.xhtml">LayerTestResult</a>&lt; uint8_t, 4 &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_logical_test_impl_8hpp.xhtml#a8d53c98177956fcac78ebff5839294ce">LogicalOrBroadcast2Test</a> (<a class="el" href="classarmnn_1_1_i_workload_factory.xhtml">armnn::IWorkloadFactory</a> &amp;workloadFactory, const <a class="el" href="classarmnn_1_1_i_backend_internal.xhtml#a693b40e6b94e958836aeb0410ca186bd">armnn::IBackendInternal::IMemoryManagerSharedPtr</a> &amp;memoryManager, const <a class="el" href="classarmnn_1_1_i_tensor_handle_factory.xhtml">armnn::ITensorHandleFactory</a> &amp;tensorHandleFactory)</td></tr>
<tr class="separator:a8d53c98177956fcac78ebff5839294ce"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6ae9d15484317daa691ce776d8620568"><td class="memItemLeft" align="right" valign="top"><a class="el" href="struct_layer_test_result.xhtml">LayerTestResult</a>&lt; uint8_t, 4 &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_logical_test_impl_8hpp.xhtml#a6ae9d15484317daa691ce776d8620568">LogicalAndBroadcast3Test</a> (<a class="el" href="classarmnn_1_1_i_workload_factory.xhtml">armnn::IWorkloadFactory</a> &amp;workloadFactory, const <a class="el" href="classarmnn_1_1_i_backend_internal.xhtml#a693b40e6b94e958836aeb0410ca186bd">armnn::IBackendInternal::IMemoryManagerSharedPtr</a> &amp;memoryManager, const <a class="el" href="classarmnn_1_1_i_tensor_handle_factory.xhtml">armnn::ITensorHandleFactory</a> &amp;tensorHandleFactory)</td></tr>
<tr class="separator:a6ae9d15484317daa691ce776d8620568"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9aa3bdf558634703ddb446407b9df729"><td class="memItemLeft" align="right" valign="top"><a class="el" href="struct_layer_test_result.xhtml">LayerTestResult</a>&lt; uint8_t, 4 &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_logical_test_impl_8hpp.xhtml#a9aa3bdf558634703ddb446407b9df729">LogicalOrBroadcast3Test</a> (<a class="el" href="classarmnn_1_1_i_workload_factory.xhtml">armnn::IWorkloadFactory</a> &amp;workloadFactory, const <a class="el" href="classarmnn_1_1_i_backend_internal.xhtml#a693b40e6b94e958836aeb0410ca186bd">armnn::IBackendInternal::IMemoryManagerSharedPtr</a> &amp;memoryManager, const <a class="el" href="classarmnn_1_1_i_tensor_handle_factory.xhtml">armnn::ITensorHandleFactory</a> &amp;tensorHandleFactory)</td></tr>
<tr class="separator:a9aa3bdf558634703ddb446407b9df729"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<h2 class="groupheader">Function Documentation</h2>
<a id="a824634ec1d8f6d7ccdbffa571f6be213"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a824634ec1d8f6d7ccdbffa571f6be213">&#9670;&nbsp;</a></span>LogicalAndBroadcast1Test()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="struct_layer_test_result.xhtml">LayerTestResult</a>&lt;uint8_t, 4&gt; LogicalAndBroadcast1Test </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classarmnn_1_1_i_workload_factory.xhtml">armnn::IWorkloadFactory</a> &amp;&#160;</td>
          <td class="paramname"><em>workloadFactory</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_i_backend_internal.xhtml#a693b40e6b94e958836aeb0410ca186bd">armnn::IBackendInternal::IMemoryManagerSharedPtr</a> &amp;&#160;</td>
          <td class="paramname"><em>memoryManager</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_i_tensor_handle_factory.xhtml">armnn::ITensorHandleFactory</a> &amp;&#160;</td>
          <td class="paramname"><em>tensorHandleFactory</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_logical_test_impl_8cpp_source.xhtml#l00466">466</a> of file <a class="el" href="_logical_test_impl_8cpp_source.xhtml">LogicalTestImpl.cpp</a>.</p>

<p class="reference">References <a class="el" href="namespacearmnn.xhtml#a2da4db0140d1a6dc69c9c82e9ef5379ea103aa83df42877d5f9baeafdbf620b55">armnn::LogicalAnd</a>.</p>

<p class="reference">Referenced by <a class="el" href="_cl_layer_tests_8cpp_source.xhtml#l00027">TEST_SUITE()</a>.</p>
<div class="fragment"><div class="line"><a name="l00470"></a><span class="lineno">  470</span>&#160;{</div><div class="line"><a name="l00471"></a><span class="lineno">  471</span>&#160;    <span class="keywordflow">return</span> LogicalBinaryTestHelper&lt;4&gt;(workloadFactory,</div><div class="line"><a name="l00472"></a><span class="lineno">  472</span>&#160;                                      memoryManager,</div><div class="line"><a name="l00473"></a><span class="lineno">  473</span>&#160;                                      <a class="code" href="namespacearmnn.xhtml#a2da4db0140d1a6dc69c9c82e9ef5379ea103aa83df42877d5f9baeafdbf620b55">armnn::LogicalBinaryOperation::LogicalAnd</a>,</div><div class="line"><a name="l00474"></a><span class="lineno">  474</span>&#160;                                      s_BroadcastBinary1TestData.m_InputShape0,</div><div class="line"><a name="l00475"></a><span class="lineno">  475</span>&#160;                                      s_BroadcastBinary1TestData.m_InputShape1,</div><div class="line"><a name="l00476"></a><span class="lineno">  476</span>&#160;                                      s_BroadcastBinary1TestData.m_InputData0,</div><div class="line"><a name="l00477"></a><span class="lineno">  477</span>&#160;                                      s_BroadcastBinary1TestData.m_InputData1,</div><div class="line"><a name="l00478"></a><span class="lineno">  478</span>&#160;                                      s_BroadcastBinary1TestData.m_OutputShape,</div><div class="line"><a name="l00479"></a><span class="lineno">  479</span>&#160;                                      s_BroadcastBinary1TestData.m_OutputAnd,</div><div class="line"><a name="l00480"></a><span class="lineno">  480</span>&#160;                                      tensorHandleFactory);</div><div class="line"><a name="l00481"></a><span class="lineno">  481</span>&#160;}</div><div class="ttc" id="namespacearmnn_xhtml_a2da4db0140d1a6dc69c9c82e9ef5379ea103aa83df42877d5f9baeafdbf620b55"><div class="ttname"><a href="namespacearmnn.xhtml#a2da4db0140d1a6dc69c9c82e9ef5379ea103aa83df42877d5f9baeafdbf620b55">armnn::LogicalBinaryOperation::LogicalAnd</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="af1cc210d3bec3960b6f7e3eb23c3a128"></a>
<h2 class="memtitle"><span class="permalink"><a href="#af1cc210d3bec3960b6f7e3eb23c3a128">&#9670;&nbsp;</a></span>LogicalAndBroadcast2Test()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="struct_layer_test_result.xhtml">LayerTestResult</a>&lt;uint8_t, 4&gt; LogicalAndBroadcast2Test </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classarmnn_1_1_i_workload_factory.xhtml">armnn::IWorkloadFactory</a> &amp;&#160;</td>
          <td class="paramname"><em>workloadFactory</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_i_backend_internal.xhtml#a693b40e6b94e958836aeb0410ca186bd">armnn::IBackendInternal::IMemoryManagerSharedPtr</a> &amp;&#160;</td>
          <td class="paramname"><em>memoryManager</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_i_tensor_handle_factory.xhtml">armnn::ITensorHandleFactory</a> &amp;&#160;</td>
          <td class="paramname"><em>tensorHandleFactory</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_logical_test_impl_8cpp_source.xhtml#l00502">502</a> of file <a class="el" href="_logical_test_impl_8cpp_source.xhtml">LogicalTestImpl.cpp</a>.</p>

<p class="reference">References <a class="el" href="namespacearmnn.xhtml#a2da4db0140d1a6dc69c9c82e9ef5379ea103aa83df42877d5f9baeafdbf620b55">armnn::LogicalAnd</a>.</p>

<p class="reference">Referenced by <a class="el" href="_cl_layer_tests_8cpp_source.xhtml#l00027">TEST_SUITE()</a>.</p>
<div class="fragment"><div class="line"><a name="l00506"></a><span class="lineno">  506</span>&#160;{</div><div class="line"><a name="l00507"></a><span class="lineno">  507</span>&#160;    <span class="keywordflow">return</span> LogicalBinaryTestHelper&lt;4&gt;(workloadFactory,</div><div class="line"><a name="l00508"></a><span class="lineno">  508</span>&#160;                                      memoryManager,</div><div class="line"><a name="l00509"></a><span class="lineno">  509</span>&#160;                                      <a class="code" href="namespacearmnn.xhtml#a2da4db0140d1a6dc69c9c82e9ef5379ea103aa83df42877d5f9baeafdbf620b55">armnn::LogicalBinaryOperation::LogicalAnd</a>,</div><div class="line"><a name="l00510"></a><span class="lineno">  510</span>&#160;                                      s_BroadcastBinary2TestData.m_InputShape0,</div><div class="line"><a name="l00511"></a><span class="lineno">  511</span>&#160;                                      s_BroadcastBinary2TestData.m_InputShape1,</div><div class="line"><a name="l00512"></a><span class="lineno">  512</span>&#160;                                      s_BroadcastBinary2TestData.m_InputData0,</div><div class="line"><a name="l00513"></a><span class="lineno">  513</span>&#160;                                      s_BroadcastBinary2TestData.m_InputData1,</div><div class="line"><a name="l00514"></a><span class="lineno">  514</span>&#160;                                      s_BroadcastBinary2TestData.m_OutputShape,</div><div class="line"><a name="l00515"></a><span class="lineno">  515</span>&#160;                                      s_BroadcastBinary2TestData.m_OutputAnd,</div><div class="line"><a name="l00516"></a><span class="lineno">  516</span>&#160;                                      tensorHandleFactory);</div><div class="line"><a name="l00517"></a><span class="lineno">  517</span>&#160;}</div><div class="ttc" id="namespacearmnn_xhtml_a2da4db0140d1a6dc69c9c82e9ef5379ea103aa83df42877d5f9baeafdbf620b55"><div class="ttname"><a href="namespacearmnn.xhtml#a2da4db0140d1a6dc69c9c82e9ef5379ea103aa83df42877d5f9baeafdbf620b55">armnn::LogicalBinaryOperation::LogicalAnd</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="a6ae9d15484317daa691ce776d8620568"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a6ae9d15484317daa691ce776d8620568">&#9670;&nbsp;</a></span>LogicalAndBroadcast3Test()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="struct_layer_test_result.xhtml">LayerTestResult</a>&lt;uint8_t, 4&gt; LogicalAndBroadcast3Test </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classarmnn_1_1_i_workload_factory.xhtml">armnn::IWorkloadFactory</a> &amp;&#160;</td>
          <td class="paramname"><em>workloadFactory</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_i_backend_internal.xhtml#a693b40e6b94e958836aeb0410ca186bd">armnn::IBackendInternal::IMemoryManagerSharedPtr</a> &amp;&#160;</td>
          <td class="paramname"><em>memoryManager</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_i_tensor_handle_factory.xhtml">armnn::ITensorHandleFactory</a> &amp;&#160;</td>
          <td class="paramname"><em>tensorHandleFactory</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_logical_test_impl_8cpp_source.xhtml#l00538">538</a> of file <a class="el" href="_logical_test_impl_8cpp_source.xhtml">LogicalTestImpl.cpp</a>.</p>

<p class="reference">References <a class="el" href="namespacearmnn.xhtml#a2da4db0140d1a6dc69c9c82e9ef5379ea103aa83df42877d5f9baeafdbf620b55">armnn::LogicalAnd</a>.</p>

<p class="reference">Referenced by <a class="el" href="_cl_layer_tests_8cpp_source.xhtml#l00027">TEST_SUITE()</a>.</p>
<div class="fragment"><div class="line"><a name="l00542"></a><span class="lineno">  542</span>&#160;{</div><div class="line"><a name="l00543"></a><span class="lineno">  543</span>&#160;    <span class="keywordflow">return</span> LogicalBinaryTestHelper&lt;4&gt;(workloadFactory,</div><div class="line"><a name="l00544"></a><span class="lineno">  544</span>&#160;                                      memoryManager,</div><div class="line"><a name="l00545"></a><span class="lineno">  545</span>&#160;                                      <a class="code" href="namespacearmnn.xhtml#a2da4db0140d1a6dc69c9c82e9ef5379ea103aa83df42877d5f9baeafdbf620b55">armnn::LogicalBinaryOperation::LogicalAnd</a>,</div><div class="line"><a name="l00546"></a><span class="lineno">  546</span>&#160;                                      s_BroadcastBinary3TestData.m_InputShape0,</div><div class="line"><a name="l00547"></a><span class="lineno">  547</span>&#160;                                      s_BroadcastBinary3TestData.m_InputShape1,</div><div class="line"><a name="l00548"></a><span class="lineno">  548</span>&#160;                                      s_BroadcastBinary3TestData.m_InputData0,</div><div class="line"><a name="l00549"></a><span class="lineno">  549</span>&#160;                                      s_BroadcastBinary3TestData.m_InputData1,</div><div class="line"><a name="l00550"></a><span class="lineno">  550</span>&#160;                                      s_BroadcastBinary3TestData.m_OutputShape,</div><div class="line"><a name="l00551"></a><span class="lineno">  551</span>&#160;                                      s_BroadcastBinary3TestData.m_OutputAnd,</div><div class="line"><a name="l00552"></a><span class="lineno">  552</span>&#160;                                      tensorHandleFactory);</div><div class="line"><a name="l00553"></a><span class="lineno">  553</span>&#160;}</div><div class="ttc" id="namespacearmnn_xhtml_a2da4db0140d1a6dc69c9c82e9ef5379ea103aa83df42877d5f9baeafdbf620b55"><div class="ttname"><a href="namespacearmnn.xhtml#a2da4db0140d1a6dc69c9c82e9ef5379ea103aa83df42877d5f9baeafdbf620b55">armnn::LogicalBinaryOperation::LogicalAnd</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="afd808a5a4d47078e50ff3f370edd49fc"></a>
<h2 class="memtitle"><span class="permalink"><a href="#afd808a5a4d47078e50ff3f370edd49fc">&#9670;&nbsp;</a></span>LogicalAndIntTest()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="struct_layer_test_result.xhtml">LayerTestResult</a>&lt;uint8_t, 4&gt; LogicalAndIntTest </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classarmnn_1_1_i_workload_factory.xhtml">armnn::IWorkloadFactory</a> &amp;&#160;</td>
          <td class="paramname"><em>workloadFactory</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_i_backend_internal.xhtml#a693b40e6b94e958836aeb0410ca186bd">armnn::IBackendInternal::IMemoryManagerSharedPtr</a> &amp;&#160;</td>
          <td class="paramname"><em>memoryManager</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_i_tensor_handle_factory.xhtml">armnn::ITensorHandleFactory</a> &amp;&#160;</td>
          <td class="paramname"><em>tensorHandleFactory</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_logical_test_impl_8cpp_source.xhtml#l00432">432</a> of file <a class="el" href="_logical_test_impl_8cpp_source.xhtml">LogicalTestImpl.cpp</a>.</p>

<p class="reference">References <a class="el" href="namespacearmnn.xhtml#a2da4db0140d1a6dc69c9c82e9ef5379ea103aa83df42877d5f9baeafdbf620b55">armnn::LogicalAnd</a>.</p>

<p class="reference">Referenced by <a class="el" href="_cl_layer_tests_8cpp_source.xhtml#l00027">TEST_SUITE()</a>.</p>
<div class="fragment"><div class="line"><a name="l00435"></a><span class="lineno">  435</span>&#160;{</div><div class="line"><a name="l00436"></a><span class="lineno">  436</span>&#160;    <span class="keywordflow">return</span> LogicalBinaryTestHelper&lt;4&gt;(workloadFactory,</div><div class="line"><a name="l00437"></a><span class="lineno">  437</span>&#160;                                      memoryManager,</div><div class="line"><a name="l00438"></a><span class="lineno">  438</span>&#160;                                      <a class="code" href="namespacearmnn.xhtml#a2da4db0140d1a6dc69c9c82e9ef5379ea103aa83df42877d5f9baeafdbf620b55">armnn::LogicalBinaryOperation::LogicalAnd</a>,</div><div class="line"><a name="l00439"></a><span class="lineno">  439</span>&#160;                                      s_SimpleBinaryIntTestData.m_InputShape0,</div><div class="line"><a name="l00440"></a><span class="lineno">  440</span>&#160;                                      s_SimpleBinaryIntTestData.m_InputShape1,</div><div class="line"><a name="l00441"></a><span class="lineno">  441</span>&#160;                                      s_SimpleBinaryIntTestData.m_InputData0,</div><div class="line"><a name="l00442"></a><span class="lineno">  442</span>&#160;                                      s_SimpleBinaryIntTestData.m_InputData1,</div><div class="line"><a name="l00443"></a><span class="lineno">  443</span>&#160;                                      s_SimpleBinaryIntTestData.m_OutputShape,</div><div class="line"><a name="l00444"></a><span class="lineno">  444</span>&#160;                                      s_SimpleBinaryIntTestData.m_OutputAnd,</div><div class="line"><a name="l00445"></a><span class="lineno">  445</span>&#160;                                      tensorHandleFactory);</div><div class="line"><a name="l00446"></a><span class="lineno">  446</span>&#160;}</div><div class="ttc" id="namespacearmnn_xhtml_a2da4db0140d1a6dc69c9c82e9ef5379ea103aa83df42877d5f9baeafdbf620b55"><div class="ttname"><a href="namespacearmnn.xhtml#a2da4db0140d1a6dc69c9c82e9ef5379ea103aa83df42877d5f9baeafdbf620b55">armnn::LogicalBinaryOperation::LogicalAnd</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="a3ae0ac93173ddba4f948e6154eee8e4e"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a3ae0ac93173ddba4f948e6154eee8e4e">&#9670;&nbsp;</a></span>LogicalAndTest()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="struct_layer_test_result.xhtml">LayerTestResult</a>&lt;uint8_t, 4&gt; LogicalAndTest </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classarmnn_1_1_i_workload_factory.xhtml">armnn::IWorkloadFactory</a> &amp;&#160;</td>
          <td class="paramname"><em>workloadFactory</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_i_backend_internal.xhtml#a693b40e6b94e958836aeb0410ca186bd">armnn::IBackendInternal::IMemoryManagerSharedPtr</a> &amp;&#160;</td>
          <td class="paramname"><em>memoryManager</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_i_tensor_handle_factory.xhtml">armnn::ITensorHandleFactory</a> &amp;&#160;</td>
          <td class="paramname"><em>tensorHandleFactory</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_logical_test_impl_8cpp_source.xhtml#l00398">398</a> of file <a class="el" href="_logical_test_impl_8cpp_source.xhtml">LogicalTestImpl.cpp</a>.</p>

<p class="reference">References <a class="el" href="namespacearmnn.xhtml#a2da4db0140d1a6dc69c9c82e9ef5379ea103aa83df42877d5f9baeafdbf620b55">armnn::LogicalAnd</a>.</p>

<p class="reference">Referenced by <a class="el" href="_cl_layer_tests_8cpp_source.xhtml#l00027">TEST_SUITE()</a>.</p>
<div class="fragment"><div class="line"><a name="l00401"></a><span class="lineno">  401</span>&#160;{</div><div class="line"><a name="l00402"></a><span class="lineno">  402</span>&#160;    <span class="keywordflow">return</span> LogicalBinaryTestHelper&lt;4&gt;(workloadFactory,</div><div class="line"><a name="l00403"></a><span class="lineno">  403</span>&#160;                                      memoryManager,</div><div class="line"><a name="l00404"></a><span class="lineno">  404</span>&#160;                                      <a class="code" href="namespacearmnn.xhtml#a2da4db0140d1a6dc69c9c82e9ef5379ea103aa83df42877d5f9baeafdbf620b55">armnn::LogicalBinaryOperation::LogicalAnd</a>,</div><div class="line"><a name="l00405"></a><span class="lineno">  405</span>&#160;                                      s_SimpleBinaryTestData.m_InputShape0,</div><div class="line"><a name="l00406"></a><span class="lineno">  406</span>&#160;                                      s_SimpleBinaryTestData.m_InputShape1,</div><div class="line"><a name="l00407"></a><span class="lineno">  407</span>&#160;                                      s_SimpleBinaryTestData.m_InputData0,</div><div class="line"><a name="l00408"></a><span class="lineno">  408</span>&#160;                                      s_SimpleBinaryTestData.m_InputData1,</div><div class="line"><a name="l00409"></a><span class="lineno">  409</span>&#160;                                      s_SimpleBinaryTestData.m_OutputShape,</div><div class="line"><a name="l00410"></a><span class="lineno">  410</span>&#160;                                      s_SimpleBinaryTestData.m_OutputAnd,</div><div class="line"><a name="l00411"></a><span class="lineno">  411</span>&#160;                                      tensorHandleFactory);</div><div class="line"><a name="l00412"></a><span class="lineno">  412</span>&#160;}</div><div class="ttc" id="namespacearmnn_xhtml_a2da4db0140d1a6dc69c9c82e9ef5379ea103aa83df42877d5f9baeafdbf620b55"><div class="ttname"><a href="namespacearmnn.xhtml#a2da4db0140d1a6dc69c9c82e9ef5379ea103aa83df42877d5f9baeafdbf620b55">armnn::LogicalBinaryOperation::LogicalAnd</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="a832e2e0b30c5730a3185a6cf630eba80"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a832e2e0b30c5730a3185a6cf630eba80">&#9670;&nbsp;</a></span>LogicalNotIntTest()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="struct_layer_test_result.xhtml">LayerTestResult</a>&lt;uint8_t, 4&gt; LogicalNotIntTest </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classarmnn_1_1_i_workload_factory.xhtml">armnn::IWorkloadFactory</a> &amp;&#160;</td>
          <td class="paramname"><em>workloadFactory</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_i_backend_internal.xhtml#a693b40e6b94e958836aeb0410ca186bd">armnn::IBackendInternal::IMemoryManagerSharedPtr</a> &amp;&#160;</td>
          <td class="paramname"><em>memoryManager</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_i_tensor_handle_factory.xhtml">armnn::ITensorHandleFactory</a> &amp;&#160;</td>
          <td class="paramname"><em>tensorHandleFactory</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_logical_test_impl_8cpp_source.xhtml#l00383">383</a> of file <a class="el" href="_logical_test_impl_8cpp_source.xhtml">LogicalTestImpl.cpp</a>.</p>

<p class="reference">References <a class="el" href="namespacearmnn.xhtml#a1cfaa710db2a54673b21d2ea2da757c8a2a25ebd8c909241e3f7818389b804ecc">armnn::LogicalNot</a>.</p>

<p class="reference">Referenced by <a class="el" href="_cl_layer_tests_8cpp_source.xhtml#l00027">TEST_SUITE()</a>.</p>
<div class="fragment"><div class="line"><a name="l00386"></a><span class="lineno">  386</span>&#160;{</div><div class="line"><a name="l00387"></a><span class="lineno">  387</span>&#160;    <span class="keywordflow">return</span> LogicalUnaryTestHelper&lt;4&gt;(workloadFactory,</div><div class="line"><a name="l00388"></a><span class="lineno">  388</span>&#160;                                     memoryManager,</div><div class="line"><a name="l00389"></a><span class="lineno">  389</span>&#160;                                     <a class="code" href="namespacearmnn.xhtml#a1cfaa710db2a54673b21d2ea2da757c8a2a25ebd8c909241e3f7818389b804ecc">armnn::UnaryOperation::LogicalNot</a>,</div><div class="line"><a name="l00390"></a><span class="lineno">  390</span>&#160;                                     s_SimpleUnaryIntTestData.m_InputShape,</div><div class="line"><a name="l00391"></a><span class="lineno">  391</span>&#160;                                     s_SimpleUnaryIntTestData.m_InputData,</div><div class="line"><a name="l00392"></a><span class="lineno">  392</span>&#160;                                     s_SimpleUnaryIntTestData.m_OutputShape,</div><div class="line"><a name="l00393"></a><span class="lineno">  393</span>&#160;                                     s_SimpleUnaryIntTestData.m_OutputNot,</div><div class="line"><a name="l00394"></a><span class="lineno">  394</span>&#160;                                     tensorHandleFactory);</div><div class="line"><a name="l00395"></a><span class="lineno">  395</span>&#160;}</div><div class="ttc" id="namespacearmnn_xhtml_a1cfaa710db2a54673b21d2ea2da757c8a2a25ebd8c909241e3f7818389b804ecc"><div class="ttname"><a href="namespacearmnn.xhtml#a1cfaa710db2a54673b21d2ea2da757c8a2a25ebd8c909241e3f7818389b804ecc">armnn::UnaryOperation::LogicalNot</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="afcf67ea94facd8c1f2dafa0835907882"></a>
<h2 class="memtitle"><span class="permalink"><a href="#afcf67ea94facd8c1f2dafa0835907882">&#9670;&nbsp;</a></span>LogicalNotTest()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="struct_layer_test_result.xhtml">LayerTestResult</a>&lt;uint8_t, 4&gt; LogicalNotTest </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classarmnn_1_1_i_workload_factory.xhtml">armnn::IWorkloadFactory</a> &amp;&#160;</td>
          <td class="paramname"><em>workloadFactory</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_i_backend_internal.xhtml#a693b40e6b94e958836aeb0410ca186bd">armnn::IBackendInternal::IMemoryManagerSharedPtr</a> &amp;&#160;</td>
          <td class="paramname"><em>memoryManager</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_i_tensor_handle_factory.xhtml">armnn::ITensorHandleFactory</a> &amp;&#160;</td>
          <td class="paramname"><em>tensorHandleFactory</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_logical_test_impl_8cpp_source.xhtml#l00368">368</a> of file <a class="el" href="_logical_test_impl_8cpp_source.xhtml">LogicalTestImpl.cpp</a>.</p>

<p class="reference">References <a class="el" href="namespacearmnn.xhtml#a1cfaa710db2a54673b21d2ea2da757c8a2a25ebd8c909241e3f7818389b804ecc">armnn::LogicalNot</a>.</p>

<p class="reference">Referenced by <a class="el" href="_cl_layer_tests_8cpp_source.xhtml#l00027">TEST_SUITE()</a>.</p>
<div class="fragment"><div class="line"><a name="l00371"></a><span class="lineno">  371</span>&#160;{</div><div class="line"><a name="l00372"></a><span class="lineno">  372</span>&#160;    <span class="keywordflow">return</span> LogicalUnaryTestHelper&lt;4&gt;(workloadFactory,</div><div class="line"><a name="l00373"></a><span class="lineno">  373</span>&#160;                                     memoryManager,</div><div class="line"><a name="l00374"></a><span class="lineno">  374</span>&#160;                                     <a class="code" href="namespacearmnn.xhtml#a1cfaa710db2a54673b21d2ea2da757c8a2a25ebd8c909241e3f7818389b804ecc">armnn::UnaryOperation::LogicalNot</a>,</div><div class="line"><a name="l00375"></a><span class="lineno">  375</span>&#160;                                     s_SimpleUnaryTestData.m_InputShape,</div><div class="line"><a name="l00376"></a><span class="lineno">  376</span>&#160;                                     s_SimpleUnaryTestData.m_InputData,</div><div class="line"><a name="l00377"></a><span class="lineno">  377</span>&#160;                                     s_SimpleUnaryTestData.m_OutputShape,</div><div class="line"><a name="l00378"></a><span class="lineno">  378</span>&#160;                                     s_SimpleUnaryTestData.m_OutputNot,</div><div class="line"><a name="l00379"></a><span class="lineno">  379</span>&#160;                                     tensorHandleFactory);</div><div class="line"><a name="l00380"></a><span class="lineno">  380</span>&#160;}</div><div class="ttc" id="namespacearmnn_xhtml_a1cfaa710db2a54673b21d2ea2da757c8a2a25ebd8c909241e3f7818389b804ecc"><div class="ttname"><a href="namespacearmnn.xhtml#a1cfaa710db2a54673b21d2ea2da757c8a2a25ebd8c909241e3f7818389b804ecc">armnn::UnaryOperation::LogicalNot</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="a9405e5bb7134cf16012a466e32991baf"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a9405e5bb7134cf16012a466e32991baf">&#9670;&nbsp;</a></span>LogicalOrBroadcast1Test()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="struct_layer_test_result.xhtml">LayerTestResult</a>&lt;uint8_t, 4&gt; LogicalOrBroadcast1Test </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classarmnn_1_1_i_workload_factory.xhtml">armnn::IWorkloadFactory</a> &amp;&#160;</td>
          <td class="paramname"><em>workloadFactory</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_i_backend_internal.xhtml#a693b40e6b94e958836aeb0410ca186bd">armnn::IBackendInternal::IMemoryManagerSharedPtr</a> &amp;&#160;</td>
          <td class="paramname"><em>memoryManager</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_i_tensor_handle_factory.xhtml">armnn::ITensorHandleFactory</a> &amp;&#160;</td>
          <td class="paramname"><em>tensorHandleFactory</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_logical_test_impl_8cpp_source.xhtml#l00484">484</a> of file <a class="el" href="_logical_test_impl_8cpp_source.xhtml">LogicalTestImpl.cpp</a>.</p>

<p class="reference">References <a class="el" href="namespacearmnn.xhtml#a2da4db0140d1a6dc69c9c82e9ef5379ea74ce78827b02c650a20b149765388247">armnn::LogicalOr</a>.</p>

<p class="reference">Referenced by <a class="el" href="_cl_layer_tests_8cpp_source.xhtml#l00027">TEST_SUITE()</a>.</p>
<div class="fragment"><div class="line"><a name="l00488"></a><span class="lineno">  488</span>&#160;{</div><div class="line"><a name="l00489"></a><span class="lineno">  489</span>&#160;    <span class="keywordflow">return</span> LogicalBinaryTestHelper&lt;4&gt;(workloadFactory,</div><div class="line"><a name="l00490"></a><span class="lineno">  490</span>&#160;                                      memoryManager,</div><div class="line"><a name="l00491"></a><span class="lineno">  491</span>&#160;                                      <a class="code" href="namespacearmnn.xhtml#a2da4db0140d1a6dc69c9c82e9ef5379ea74ce78827b02c650a20b149765388247">armnn::LogicalBinaryOperation::LogicalOr</a>,</div><div class="line"><a name="l00492"></a><span class="lineno">  492</span>&#160;                                      s_BroadcastBinary1TestData.m_InputShape0,</div><div class="line"><a name="l00493"></a><span class="lineno">  493</span>&#160;                                      s_BroadcastBinary1TestData.m_InputShape1,</div><div class="line"><a name="l00494"></a><span class="lineno">  494</span>&#160;                                      s_BroadcastBinary1TestData.m_InputData0,</div><div class="line"><a name="l00495"></a><span class="lineno">  495</span>&#160;                                      s_BroadcastBinary1TestData.m_InputData1,</div><div class="line"><a name="l00496"></a><span class="lineno">  496</span>&#160;                                      s_BroadcastBinary1TestData.m_OutputShape,</div><div class="line"><a name="l00497"></a><span class="lineno">  497</span>&#160;                                      s_BroadcastBinary1TestData.m_OutputOr,</div><div class="line"><a name="l00498"></a><span class="lineno">  498</span>&#160;                                      tensorHandleFactory);</div><div class="line"><a name="l00499"></a><span class="lineno">  499</span>&#160;}</div><div class="ttc" id="namespacearmnn_xhtml_a2da4db0140d1a6dc69c9c82e9ef5379ea74ce78827b02c650a20b149765388247"><div class="ttname"><a href="namespacearmnn.xhtml#a2da4db0140d1a6dc69c9c82e9ef5379ea74ce78827b02c650a20b149765388247">armnn::LogicalBinaryOperation::LogicalOr</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="a8d53c98177956fcac78ebff5839294ce"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a8d53c98177956fcac78ebff5839294ce">&#9670;&nbsp;</a></span>LogicalOrBroadcast2Test()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="struct_layer_test_result.xhtml">LayerTestResult</a>&lt;uint8_t, 4&gt; LogicalOrBroadcast2Test </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classarmnn_1_1_i_workload_factory.xhtml">armnn::IWorkloadFactory</a> &amp;&#160;</td>
          <td class="paramname"><em>workloadFactory</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_i_backend_internal.xhtml#a693b40e6b94e958836aeb0410ca186bd">armnn::IBackendInternal::IMemoryManagerSharedPtr</a> &amp;&#160;</td>
          <td class="paramname"><em>memoryManager</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_i_tensor_handle_factory.xhtml">armnn::ITensorHandleFactory</a> &amp;&#160;</td>
          <td class="paramname"><em>tensorHandleFactory</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_logical_test_impl_8cpp_source.xhtml#l00520">520</a> of file <a class="el" href="_logical_test_impl_8cpp_source.xhtml">LogicalTestImpl.cpp</a>.</p>

<p class="reference">References <a class="el" href="namespacearmnn.xhtml#a2da4db0140d1a6dc69c9c82e9ef5379ea74ce78827b02c650a20b149765388247">armnn::LogicalOr</a>.</p>

<p class="reference">Referenced by <a class="el" href="_cl_layer_tests_8cpp_source.xhtml#l00027">TEST_SUITE()</a>.</p>
<div class="fragment"><div class="line"><a name="l00524"></a><span class="lineno">  524</span>&#160;{</div><div class="line"><a name="l00525"></a><span class="lineno">  525</span>&#160;    <span class="keywordflow">return</span> LogicalBinaryTestHelper&lt;4&gt;(workloadFactory,</div><div class="line"><a name="l00526"></a><span class="lineno">  526</span>&#160;                                      memoryManager,</div><div class="line"><a name="l00527"></a><span class="lineno">  527</span>&#160;                                      <a class="code" href="namespacearmnn.xhtml#a2da4db0140d1a6dc69c9c82e9ef5379ea74ce78827b02c650a20b149765388247">armnn::LogicalBinaryOperation::LogicalOr</a>,</div><div class="line"><a name="l00528"></a><span class="lineno">  528</span>&#160;                                      s_BroadcastBinary2TestData.m_InputShape0,</div><div class="line"><a name="l00529"></a><span class="lineno">  529</span>&#160;                                      s_BroadcastBinary2TestData.m_InputShape1,</div><div class="line"><a name="l00530"></a><span class="lineno">  530</span>&#160;                                      s_BroadcastBinary2TestData.m_InputData0,</div><div class="line"><a name="l00531"></a><span class="lineno">  531</span>&#160;                                      s_BroadcastBinary2TestData.m_InputData1,</div><div class="line"><a name="l00532"></a><span class="lineno">  532</span>&#160;                                      s_BroadcastBinary2TestData.m_OutputShape,</div><div class="line"><a name="l00533"></a><span class="lineno">  533</span>&#160;                                      s_BroadcastBinary2TestData.m_OutputOr,</div><div class="line"><a name="l00534"></a><span class="lineno">  534</span>&#160;                                      tensorHandleFactory);</div><div class="line"><a name="l00535"></a><span class="lineno">  535</span>&#160;}</div><div class="ttc" id="namespacearmnn_xhtml_a2da4db0140d1a6dc69c9c82e9ef5379ea74ce78827b02c650a20b149765388247"><div class="ttname"><a href="namespacearmnn.xhtml#a2da4db0140d1a6dc69c9c82e9ef5379ea74ce78827b02c650a20b149765388247">armnn::LogicalBinaryOperation::LogicalOr</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="a9aa3bdf558634703ddb446407b9df729"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a9aa3bdf558634703ddb446407b9df729">&#9670;&nbsp;</a></span>LogicalOrBroadcast3Test()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="struct_layer_test_result.xhtml">LayerTestResult</a>&lt;uint8_t, 4&gt; LogicalOrBroadcast3Test </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classarmnn_1_1_i_workload_factory.xhtml">armnn::IWorkloadFactory</a> &amp;&#160;</td>
          <td class="paramname"><em>workloadFactory</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_i_backend_internal.xhtml#a693b40e6b94e958836aeb0410ca186bd">armnn::IBackendInternal::IMemoryManagerSharedPtr</a> &amp;&#160;</td>
          <td class="paramname"><em>memoryManager</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_i_tensor_handle_factory.xhtml">armnn::ITensorHandleFactory</a> &amp;&#160;</td>
          <td class="paramname"><em>tensorHandleFactory</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_logical_test_impl_8cpp_source.xhtml#l00556">556</a> of file <a class="el" href="_logical_test_impl_8cpp_source.xhtml">LogicalTestImpl.cpp</a>.</p>

<p class="reference">References <a class="el" href="namespacearmnn.xhtml#a2da4db0140d1a6dc69c9c82e9ef5379ea74ce78827b02c650a20b149765388247">armnn::LogicalOr</a>.</p>

<p class="reference">Referenced by <a class="el" href="_cl_layer_tests_8cpp_source.xhtml#l00027">TEST_SUITE()</a>.</p>
<div class="fragment"><div class="line"><a name="l00560"></a><span class="lineno">  560</span>&#160;{</div><div class="line"><a name="l00561"></a><span class="lineno">  561</span>&#160;    <span class="keywordflow">return</span> LogicalBinaryTestHelper&lt;4&gt;(workloadFactory,</div><div class="line"><a name="l00562"></a><span class="lineno">  562</span>&#160;                                      memoryManager,</div><div class="line"><a name="l00563"></a><span class="lineno">  563</span>&#160;                                      <a class="code" href="namespacearmnn.xhtml#a2da4db0140d1a6dc69c9c82e9ef5379ea74ce78827b02c650a20b149765388247">armnn::LogicalBinaryOperation::LogicalOr</a>,</div><div class="line"><a name="l00564"></a><span class="lineno">  564</span>&#160;                                      s_BroadcastBinary3TestData.m_InputShape0,</div><div class="line"><a name="l00565"></a><span class="lineno">  565</span>&#160;                                      s_BroadcastBinary3TestData.m_InputShape1,</div><div class="line"><a name="l00566"></a><span class="lineno">  566</span>&#160;                                      s_BroadcastBinary3TestData.m_InputData0,</div><div class="line"><a name="l00567"></a><span class="lineno">  567</span>&#160;                                      s_BroadcastBinary3TestData.m_InputData1,</div><div class="line"><a name="l00568"></a><span class="lineno">  568</span>&#160;                                      s_BroadcastBinary3TestData.m_OutputShape,</div><div class="line"><a name="l00569"></a><span class="lineno">  569</span>&#160;                                      s_BroadcastBinary3TestData.m_OutputOr,</div><div class="line"><a name="l00570"></a><span class="lineno">  570</span>&#160;                                      tensorHandleFactory);</div><div class="line"><a name="l00571"></a><span class="lineno">  571</span>&#160;}</div><div class="ttc" id="namespacearmnn_xhtml_a2da4db0140d1a6dc69c9c82e9ef5379ea74ce78827b02c650a20b149765388247"><div class="ttname"><a href="namespacearmnn.xhtml#a2da4db0140d1a6dc69c9c82e9ef5379ea74ce78827b02c650a20b149765388247">armnn::LogicalBinaryOperation::LogicalOr</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="a0d9ea4d93e7e42c82c1285188652cc11"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a0d9ea4d93e7e42c82c1285188652cc11">&#9670;&nbsp;</a></span>LogicalOrIntTest()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="struct_layer_test_result.xhtml">LayerTestResult</a>&lt;uint8_t, 4&gt; LogicalOrIntTest </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classarmnn_1_1_i_workload_factory.xhtml">armnn::IWorkloadFactory</a> &amp;&#160;</td>
          <td class="paramname"><em>workloadFactory</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_i_backend_internal.xhtml#a693b40e6b94e958836aeb0410ca186bd">armnn::IBackendInternal::IMemoryManagerSharedPtr</a> &amp;&#160;</td>
          <td class="paramname"><em>memoryManager</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_i_tensor_handle_factory.xhtml">armnn::ITensorHandleFactory</a> &amp;&#160;</td>
          <td class="paramname"><em>tensorHandleFactory</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_logical_test_impl_8cpp_source.xhtml#l00449">449</a> of file <a class="el" href="_logical_test_impl_8cpp_source.xhtml">LogicalTestImpl.cpp</a>.</p>

<p class="reference">References <a class="el" href="namespacearmnn.xhtml#a2da4db0140d1a6dc69c9c82e9ef5379ea74ce78827b02c650a20b149765388247">armnn::LogicalOr</a>.</p>

<p class="reference">Referenced by <a class="el" href="_cl_layer_tests_8cpp_source.xhtml#l00027">TEST_SUITE()</a>.</p>
<div class="fragment"><div class="line"><a name="l00452"></a><span class="lineno">  452</span>&#160;{</div><div class="line"><a name="l00453"></a><span class="lineno">  453</span>&#160;    <span class="keywordflow">return</span> LogicalBinaryTestHelper&lt;4&gt;(workloadFactory,</div><div class="line"><a name="l00454"></a><span class="lineno">  454</span>&#160;                                      memoryManager,</div><div class="line"><a name="l00455"></a><span class="lineno">  455</span>&#160;                                      <a class="code" href="namespacearmnn.xhtml#a2da4db0140d1a6dc69c9c82e9ef5379ea74ce78827b02c650a20b149765388247">armnn::LogicalBinaryOperation::LogicalOr</a>,</div><div class="line"><a name="l00456"></a><span class="lineno">  456</span>&#160;                                      s_SimpleBinaryIntTestData.m_InputShape0,</div><div class="line"><a name="l00457"></a><span class="lineno">  457</span>&#160;                                      s_SimpleBinaryIntTestData.m_InputShape1,</div><div class="line"><a name="l00458"></a><span class="lineno">  458</span>&#160;                                      s_SimpleBinaryIntTestData.m_InputData0,</div><div class="line"><a name="l00459"></a><span class="lineno">  459</span>&#160;                                      s_SimpleBinaryIntTestData.m_InputData1,</div><div class="line"><a name="l00460"></a><span class="lineno">  460</span>&#160;                                      s_SimpleBinaryIntTestData.m_OutputShape,</div><div class="line"><a name="l00461"></a><span class="lineno">  461</span>&#160;                                      s_SimpleBinaryIntTestData.m_OutputOr,</div><div class="line"><a name="l00462"></a><span class="lineno">  462</span>&#160;                                      tensorHandleFactory);</div><div class="line"><a name="l00463"></a><span class="lineno">  463</span>&#160;}</div><div class="ttc" id="namespacearmnn_xhtml_a2da4db0140d1a6dc69c9c82e9ef5379ea74ce78827b02c650a20b149765388247"><div class="ttname"><a href="namespacearmnn.xhtml#a2da4db0140d1a6dc69c9c82e9ef5379ea74ce78827b02c650a20b149765388247">armnn::LogicalBinaryOperation::LogicalOr</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="acce4d24bfc069740b462d5e9d3ca703b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#acce4d24bfc069740b462d5e9d3ca703b">&#9670;&nbsp;</a></span>LogicalOrTest()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="struct_layer_test_result.xhtml">LayerTestResult</a>&lt;uint8_t, 4&gt; LogicalOrTest </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classarmnn_1_1_i_workload_factory.xhtml">armnn::IWorkloadFactory</a> &amp;&#160;</td>
          <td class="paramname"><em>workloadFactory</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_i_backend_internal.xhtml#a693b40e6b94e958836aeb0410ca186bd">armnn::IBackendInternal::IMemoryManagerSharedPtr</a> &amp;&#160;</td>
          <td class="paramname"><em>memoryManager</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_i_tensor_handle_factory.xhtml">armnn::ITensorHandleFactory</a> &amp;&#160;</td>
          <td class="paramname"><em>tensorHandleFactory</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_logical_test_impl_8cpp_source.xhtml#l00415">415</a> of file <a class="el" href="_logical_test_impl_8cpp_source.xhtml">LogicalTestImpl.cpp</a>.</p>

<p class="reference">References <a class="el" href="namespacearmnn.xhtml#a2da4db0140d1a6dc69c9c82e9ef5379ea74ce78827b02c650a20b149765388247">armnn::LogicalOr</a>.</p>

<p class="reference">Referenced by <a class="el" href="_cl_layer_tests_8cpp_source.xhtml#l00027">TEST_SUITE()</a>.</p>
<div class="fragment"><div class="line"><a name="l00418"></a><span class="lineno">  418</span>&#160;{</div><div class="line"><a name="l00419"></a><span class="lineno">  419</span>&#160;    <span class="keywordflow">return</span> LogicalBinaryTestHelper&lt;4&gt;(workloadFactory,</div><div class="line"><a name="l00420"></a><span class="lineno">  420</span>&#160;                                      memoryManager,</div><div class="line"><a name="l00421"></a><span class="lineno">  421</span>&#160;                                      <a class="code" href="namespacearmnn.xhtml#a2da4db0140d1a6dc69c9c82e9ef5379ea74ce78827b02c650a20b149765388247">armnn::LogicalBinaryOperation::LogicalOr</a>,</div><div class="line"><a name="l00422"></a><span class="lineno">  422</span>&#160;                                      s_SimpleBinaryTestData.m_InputShape0,</div><div class="line"><a name="l00423"></a><span class="lineno">  423</span>&#160;                                      s_SimpleBinaryTestData.m_InputShape1,</div><div class="line"><a name="l00424"></a><span class="lineno">  424</span>&#160;                                      s_SimpleBinaryTestData.m_InputData0,</div><div class="line"><a name="l00425"></a><span class="lineno">  425</span>&#160;                                      s_SimpleBinaryTestData.m_InputData1,</div><div class="line"><a name="l00426"></a><span class="lineno">  426</span>&#160;                                      s_SimpleBinaryTestData.m_OutputShape,</div><div class="line"><a name="l00427"></a><span class="lineno">  427</span>&#160;                                      s_SimpleBinaryTestData.m_OutputOr,</div><div class="line"><a name="l00428"></a><span class="lineno">  428</span>&#160;                                      tensorHandleFactory);</div><div class="line"><a name="l00429"></a><span class="lineno">  429</span>&#160;}</div><div class="ttc" id="namespacearmnn_xhtml_a2da4db0140d1a6dc69c9c82e9ef5379ea74ce78827b02c650a20b149765388247"><div class="ttname"><a href="namespacearmnn.xhtml#a2da4db0140d1a6dc69c9c82e9ef5379ea74ce78827b02c650a20b149765388247">armnn::LogicalBinaryOperation::LogicalOr</a></div></div>
</div><!-- fragment -->
</div>
</div>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="dir_68267d1309a1af8e8297ef4c3efbcdba.xhtml">src</a></li><li class="navelem"><a class="el" href="dir_0f3cdec46afbc61a1ded8e1687c9c9a0.xhtml">backends</a></li><li class="navelem"><a class="el" href="dir_797a213d7d01b98ef12d53b0820ea64e.xhtml">backendsCommon</a></li><li class="navelem"><a class="el" href="dir_28bfe507f7e135bdae07c2a6b7f66696.xhtml">test</a></li><li class="navelem"><a class="el" href="dir_99a30439342d160875b21dac3498ad7f.xhtml">layerTests</a></li><li class="navelem"><a class="el" href="_logical_test_impl_8hpp.xhtml">LogicalTestImpl.hpp</a></li>
    <li class="footer">Generated on Fri Jun 17 2022 13:20:26 for ArmNN by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.13 </li>
  </ul>
</div>
</body>
</html>
