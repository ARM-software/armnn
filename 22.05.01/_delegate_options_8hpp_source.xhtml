<!-- Copyright (c) 2020 ARM Limited. -->
<!--                                 -->
<!-- SPDX-License-Identifier: MIT    -->
<!--                                 -->
<!-- HTML header for doxygen 1.8.13-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.13"/>
<meta name="robots" content="NOINDEX, NOFOLLOW" />
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>ArmNN: delegate/include/DelegateOptions.hpp Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script><script type="text/javascript" src="http://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="stylesheet.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <img alt="ArmNN" src="Arm_NN_horizontal_blue.png" style="max-width: 10rem; margin-top: .5rem; margin-left 10px"/>
  <td style="padding-left: 0.5em;">
   <div id="projectname">
   &#160;<span id="projectnumber">22.05.01</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.13 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
$(document).ready(function(){initNavTree('_delegate_options_8hpp_source.xhtml','');});
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="headertitle">
<div class="title">DelegateOptions.hpp</div>  </div>
</div><!--header-->
<div class="contents">
<a href="_delegate_options_8hpp.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="comment">//</span></div><div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="comment">// Copyright Â© 2020 Arm Ltd and Contributors. All rights reserved.</span></div><div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="comment">// SPDX-License-Identifier: MIT</span></div><div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="comment">//</span></div><div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;</div><div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="preprocessor">#pragma once</span></div><div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;</div><div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="preprocessor">#include &lt;<a class="code" href="_arm_n_n_8hpp.xhtml">armnn/ArmNN.hpp</a>&gt;</span></div><div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="preprocessor">#include &lt;<a class="code" href="_logging_8hpp.xhtml">armnn/Logging.hpp</a>&gt;</span></div><div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="preprocessor">#include &lt;<a class="code" href="_optional_8hpp.xhtml">armnn/Optional.hpp</a>&gt;</span></div><div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;</div><div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;<span class="preprocessor">#include &lt;client/include/ProfilingOptions.hpp&gt;</span></div><div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;</div><div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;<span class="preprocessor">#include &lt;set&gt;</span></div><div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;<span class="preprocessor">#include &lt;string&gt;</span></div><div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;<span class="preprocessor">#include &lt;vector&gt;</span></div><div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;</div><div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;<span class="keyword">namespace </span><a class="code" href="namespacearmnn_delegate.xhtml">armnnDelegate</a></div><div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;{</div><div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;</div><div class="line"><a name="l00021"></a><span class="lineno"><a class="line" href="classarmnn_delegate_1_1_delegate_options.xhtml">   21</a></span>&#160;<span class="keyword">class </span><a class="code" href="classarmnn_delegate_1_1_delegate_options.xhtml">DelegateOptions</a></div><div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;{</div><div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;<span class="keyword">public</span>:</div><div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;    <a class="code" href="classarmnn_delegate_1_1_delegate_options.xhtml#a318c3a715a80b7288e39c7daa8ef8494">DelegateOptions</a>(<a class="code" href="namespacearmnn.xhtml#ae2f04a162585c0a5222a537efd5456ae">armnn::Compute</a> computeDevice,</div><div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;                    <span class="keyword">const</span> std::vector&lt;armnn::BackendOptions&gt;&amp; backendOptions = {},</div><div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;                    <a class="code" href="classarmnn_1_1_optional.xhtml">armnn::Optional&lt;armnn::LogSeverity&gt;</a> logSeverityLevel = <a class="code" href="structarmnn_1_1_empty_optional.xhtml">armnn::EmptyOptional</a>());</div><div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;</div><div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;    <a class="code" href="classarmnn_delegate_1_1_delegate_options.xhtml#a318c3a715a80b7288e39c7daa8ef8494">DelegateOptions</a>(<span class="keyword">const</span> std::vector&lt;armnn::BackendId&gt;&amp; backends,</div><div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;                    <span class="keyword">const</span> std::vector&lt;armnn::BackendOptions&gt;&amp; backendOptions = {},</div><div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;                    <a class="code" href="classarmnn_1_1_optional.xhtml">armnn::Optional&lt;armnn::LogSeverity&gt;</a> logSeverityLevel = <a class="code" href="structarmnn_1_1_empty_optional.xhtml">armnn::EmptyOptional</a>());</div><div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;</div><div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;    <a class="code" href="classarmnn_delegate_1_1_delegate_options.xhtml#a318c3a715a80b7288e39c7daa8ef8494">DelegateOptions</a>(<a class="code" href="namespacearmnn.xhtml#ae2f04a162585c0a5222a537efd5456ae">armnn::Compute</a> computeDevice,</div><div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;                    <span class="keyword">const</span> <a class="code" href="structarmnn_1_1_optimizer_options.xhtml">armnn::OptimizerOptions</a>&amp; optimizerOptions,</div><div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;                    <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_optional.xhtml">armnn::Optional&lt;armnn::LogSeverity&gt;</a>&amp; logSeverityLevel = <a class="code" href="structarmnn_1_1_empty_optional.xhtml">armnn::EmptyOptional</a>(),</div><div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;                    <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_optional.xhtml">armnn::Optional&lt;armnn::DebugCallbackFunction&gt;</a>&amp; func = <a class="code" href="structarmnn_1_1_empty_optional.xhtml">armnn::EmptyOptional</a>());</div><div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;</div><div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;    <a class="code" href="classarmnn_delegate_1_1_delegate_options.xhtml#a318c3a715a80b7288e39c7daa8ef8494">DelegateOptions</a>(<span class="keyword">const</span> std::vector&lt;armnn::BackendId&gt;&amp; backends,</div><div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;                    <span class="keyword">const</span> <a class="code" href="structarmnn_1_1_optimizer_options.xhtml">armnn::OptimizerOptions</a>&amp; optimizerOptions,</div><div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;                    <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_optional.xhtml">armnn::Optional&lt;armnn::LogSeverity&gt;</a>&amp; logSeverityLevel = <a class="code" href="structarmnn_1_1_empty_optional.xhtml">armnn::EmptyOptional</a>(),</div><div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;                    <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_optional.xhtml">armnn::Optional&lt;armnn::DebugCallbackFunction&gt;</a>&amp; func = <a class="code" href="structarmnn_1_1_empty_optional.xhtml">armnn::EmptyOptional</a>());</div><div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;</div><div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;<span class="comment">    /**</span></div><div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;<span class="comment">     * This constructor processes delegate options in form of command line arguments.</span></div><div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;<span class="comment">     * It works in conjunction with the TfLite external delegate plugin.</span></div><div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;<span class="comment">     *</span></div><div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;<span class="comment">     * Available options:</span></div><div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;<span class="comment">     *</span></div><div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;<span class="comment">     *    Option key: &quot;backends&quot; \n</span></div><div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;<span class="comment">     *    Possible values: [&quot;EthosNPU&quot;/&quot;GpuAcc&quot;/&quot;CpuAcc&quot;/&quot;CpuRef&quot;] \n</span></div><div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;<span class="comment">     *    Descriptions: A comma separated list without whitespaces of</span></div><div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;<span class="comment">     *                  backends which should be used for execution. Falls</span></div><div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;<span class="comment">     *                  back to next backend in list if previous doesn&#39;t</span></div><div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;<span class="comment">     *                  provide support for operation. e.g. &quot;GpuAcc,CpuAcc&quot;</span></div><div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;<span class="comment">     *</span></div><div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;<span class="comment">     *    Option key: &quot;dynamic-backends-path&quot; \n</span></div><div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;<span class="comment">     *    Possible values: [filenameString] \n</span></div><div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;<span class="comment">     *    Descriptions: This is the directory that will be searched for any dynamic backends.</span></div><div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;<span class="comment">     *</span></div><div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;<span class="comment">     *    Option key: &quot;logging-severity&quot; \n</span></div><div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;<span class="comment">     *    Possible values: [&quot;trace&quot;/&quot;debug&quot;/&quot;info&quot;/&quot;warning&quot;/&quot;error&quot;/&quot;fatal&quot;] \n</span></div><div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;<span class="comment">     *    Description: Sets the logging severity level for ArmNN. Logging</span></div><div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;<span class="comment">     *                 is turned off if this option is not provided.</span></div><div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;<span class="comment">     *</span></div><div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;<span class="comment">     *    Option key: &quot;gpu-tuning-level&quot; \n</span></div><div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;<span class="comment">     *    Possible values: [&quot;0&quot;/&quot;1&quot;/&quot;2&quot;/&quot;3&quot;] \n</span></div><div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;<span class="comment">     *    Description: 0=UseOnly(default), 1=RapidTuning, 2=NormalTuning,</span></div><div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;<span class="comment">     *                 3=ExhaustiveTuning. Requires option gpu-tuning-file.</span></div><div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;<span class="comment">     *                 1,2 and 3 will create a tuning-file, 0 will apply the</span></div><div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;<span class="comment">     *                 tunings from an existing file</span></div><div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;<span class="comment">     *</span></div><div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;<span class="comment">     *    Option key: &quot;gpu-mlgo-tuning-file&quot; \n</span></div><div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;<span class="comment">     *    Possible values: [filenameString] \n</span></div><div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;<span class="comment">     *    Description: File name for the MLGO tuning file</span></div><div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;<span class="comment">     *</span></div><div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;<span class="comment">     *    Option key: &quot;gpu-tuning-file&quot; \n</span></div><div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;<span class="comment">     *    Possible values: [filenameString] \n</span></div><div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;<span class="comment">     *    Description: File name for the tuning file.</span></div><div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;<span class="comment">     *</span></div><div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;<span class="comment">     *    Option key: &quot;gpu-enable-profiling&quot; \n</span></div><div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;<span class="comment">     *    Possible values: [&quot;true&quot;/&quot;false&quot;] \n</span></div><div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;<span class="comment">     *    Description: Enables GPU profiling</span></div><div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;<span class="comment">     *</span></div><div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;<span class="comment">     *    Option key: &quot;gpu-kernel-profiling-enabled&quot; \n</span></div><div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;<span class="comment">     *    Possible values: [&quot;true&quot;/&quot;false&quot;] \n</span></div><div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;<span class="comment">     *    Description: Enables GPU kernel profiling</span></div><div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;<span class="comment">     *</span></div><div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;<span class="comment">     *    Option key: &quot;save-cached-network&quot; \n</span></div><div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;<span class="comment">     *    Possible values: [&quot;true&quot;/&quot;false&quot;] \n</span></div><div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;<span class="comment">     *    Description: Enables saving of the cached network to a file,</span></div><div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;<span class="comment">     *                 specified with the cached-network-filepath option</span></div><div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;<span class="comment">     *</span></div><div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;<span class="comment">     *    Option key: &quot;cached-network-filepath&quot; \n</span></div><div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;<span class="comment">     *    Possible values: [filenameString] \n</span></div><div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;<span class="comment">     *    Description: If non-empty, the given file will be used to load/save the cached network.</span></div><div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;<span class="comment">     *                 If save-cached-network is given then the cached network will be saved to the given file.</span></div><div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;<span class="comment">     *                 To save the cached network a file must already exist.</span></div><div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;<span class="comment">     *                 If save-cached-network is not given then the cached network will be loaded from the given file.</span></div><div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;<span class="comment">     *                 This will remove initial compilation time of kernels and speed up the first execution.</span></div><div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;<span class="comment">     *</span></div><div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;<span class="comment">     *    Option key: &quot;enable-fast-math&quot; \n</span></div><div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;<span class="comment">     *    Possible values: [&quot;true&quot;/&quot;false&quot;] \n</span></div><div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;<span class="comment">     *    Description: Enables fast_math options in backends that support it</span></div><div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;<span class="comment">     *</span></div><div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;<span class="comment">     *    Option key: &quot;number-of-threads&quot; \n</span></div><div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;<span class="comment">     *    Possible values: [&quot;1&quot;-&quot;64&quot;] \n</span></div><div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;<span class="comment">     *    Description: Assign the number of threads used by the CpuAcc backend.</span></div><div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;<span class="comment">     *                 Default is set to 0 (Backend will decide number of threads to use).</span></div><div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;<span class="comment">     *</span></div><div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;<span class="comment">     *    Option key: &quot;reduce-fp32-to-fp16&quot; \n</span></div><div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;<span class="comment">     *    Possible values: [&quot;true&quot;/&quot;false&quot;] \n</span></div><div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;<span class="comment">     *    Description: Reduce Fp32 data to Fp16 for faster processing</span></div><div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;<span class="comment">     *</span></div><div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;<span class="comment">     *    Option key: &quot;reduce-fp32-to-bf16&quot; \n</span></div><div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;<span class="comment">     *    Possible values: [&quot;true&quot;/&quot;false&quot;] \n</span></div><div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;<span class="comment">     *    Description: Reduce Fp32 data to Bf16 for faster processing</span></div><div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;<span class="comment">     *</span></div><div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;<span class="comment">     *    Option key: &quot;debug-data&quot; \n</span></div><div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;<span class="comment">     *    Possible values: [&quot;true&quot;/&quot;false&quot;] \n</span></div><div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;<span class="comment">     *    Description: Add debug data for easier troubleshooting</span></div><div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;<span class="comment">     *</span></div><div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;<span class="comment">     *    Option key: &quot;memory-import&quot; \n</span></div><div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;<span class="comment">     *    Possible values: [&quot;true&quot;/&quot;false&quot;] \n</span></div><div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;<span class="comment">     *    Description: Enable memory import</span></div><div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;<span class="comment">     *</span></div><div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;<span class="comment">     *    Option key: &quot;enable-internal-profiling&quot; \n</span></div><div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;<span class="comment">     *    Possible values: [&quot;true&quot;/&quot;false&quot;] \n</span></div><div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;<span class="comment">     *    Description: Enable the internal profiling feature.</span></div><div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;<span class="comment">     *</span></div><div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;<span class="comment">     *    Option key: &quot;internal-profiling-detail&quot; \n</span></div><div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;<span class="comment">     *    Possible values: [1/2] \n</span></div><div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;<span class="comment">     *    Description: Set the detail on the internal profiling. 1 = DetailsWithEvents, 2 = DetailsOnly.</span></div><div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;<span class="comment">     *</span></div><div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;<span class="comment">     *    Option key: &quot;enable-external-profiling&quot; \n</span></div><div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;<span class="comment">     *    Possible values: [&quot;true&quot;/&quot;false&quot;] \n</span></div><div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;<span class="comment">     *    Description: Enable the external profiling feature.</span></div><div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;<span class="comment">     *</span></div><div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;<span class="comment">     *    Option key: &quot;timeline-profiling&quot; \n</span></div><div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;<span class="comment">     *    Possible values: [&quot;true&quot;/&quot;false&quot;] \n</span></div><div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;<span class="comment">     *    Description: Indicates whether external timeline profiling is enabled or not.</span></div><div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;<span class="comment">     *</span></div><div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;<span class="comment">     *    Option key: &quot;outgoing-capture-file&quot; \n</span></div><div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;<span class="comment">     *    Possible values: [filenameString] \n</span></div><div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;<span class="comment">     *    Description: Path to a file in which outgoing timeline profiling messages will be stored.</span></div><div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;<span class="comment">     *</span></div><div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;<span class="comment">     *    Option key: &quot;incoming-capture-file&quot; \n</span></div><div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;<span class="comment">     *    Possible values: [filenameString] \n</span></div><div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;<span class="comment">     *    Description: Path to a file in which incoming timeline profiling messages will be stored.</span></div><div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;<span class="comment">     *</span></div><div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;<span class="comment">     *    Option key: &quot;file-only-external-profiling&quot; \n</span></div><div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;<span class="comment">     *    Possible values: [&quot;true&quot;/&quot;false&quot;] \n</span></div><div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;<span class="comment">     *    Description: Enable profiling output to file only.</span></div><div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;<span class="comment">     *</span></div><div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;<span class="comment">     *    Option key: &quot;counter-capture-period&quot; \n</span></div><div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;<span class="comment">     *    Possible values: Integer, Default is 10000u</span></div><div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;<span class="comment">     *    Description: Value in microseconds of the profiling capture period. \n</span></div><div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160;<span class="comment">     *</span></div><div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;<span class="comment">     *    Option key: &quot;profiling-file-format&quot; \n</span></div><div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160;<span class="comment">     *    Possible values: String of [&quot;binary&quot;] \n</span></div><div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160;<span class="comment">     *    Description: The format of the file used for outputting profiling data. Currently on &quot;binary&quot; is supported.</span></div><div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160;<span class="comment">     *</span></div><div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160;<span class="comment">     *    Option key: &quot;serialize-to-dot&quot; \n</span></div><div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160;<span class="comment">     *    Possible values: [filenameString] \n</span></div><div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;<span class="comment">     *    Description: Serialize the optimized network to the file specified in &quot;dot&quot; format.</span></div><div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160;<span class="comment">     *</span></div><div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160;<span class="comment">     *    Option key: &quot;infer-output-shape&quot; \n</span></div><div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160;<span class="comment">     *    Possible values: [&quot;true&quot;/&quot;false&quot;] \n</span></div><div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160;<span class="comment">     *    Description: Infers output tensor shape from input tensor shape and validate where applicable.</span></div><div class="line"><a name="l00169"></a><span class="lineno">  169</span>&#160;<span class="comment">     *</span></div><div class="line"><a name="l00170"></a><span class="lineno">  170</span>&#160;<span class="comment">     *    Option key: &quot;allow-expanded-dims&quot; \n</span></div><div class="line"><a name="l00171"></a><span class="lineno">  171</span>&#160;<span class="comment">     *    Possible values: [&quot;true&quot;/&quot;false&quot;] \n</span></div><div class="line"><a name="l00172"></a><span class="lineno">  172</span>&#160;<span class="comment">     *    Description: If true will disregard dimensions with a size of 1 when validating tensor shapes but tensor</span></div><div class="line"><a name="l00173"></a><span class="lineno">  173</span>&#160;<span class="comment">     *                 sizes must still match. \n</span></div><div class="line"><a name="l00174"></a><span class="lineno">  174</span>&#160;<span class="comment">     *                 This is an Experimental parameter that is incompatible with &quot;infer-output-shape&quot;. \n</span></div><div class="line"><a name="l00175"></a><span class="lineno">  175</span>&#160;<span class="comment">     *                 This parameter may be removed in a later update.</span></div><div class="line"><a name="l00176"></a><span class="lineno">  176</span>&#160;<span class="comment">     *</span></div><div class="line"><a name="l00177"></a><span class="lineno">  177</span>&#160;<span class="comment">     * @param[in]     option_keys     Delegate option names</span></div><div class="line"><a name="l00178"></a><span class="lineno">  178</span>&#160;<span class="comment">     * @param[in]     options_values  Delegate option values</span></div><div class="line"><a name="l00179"></a><span class="lineno">  179</span>&#160;<span class="comment">     * @param[in]     num_options     Number of delegate options</span></div><div class="line"><a name="l00180"></a><span class="lineno">  180</span>&#160;<span class="comment">     * @param[in,out] report_error    Error callback function</span></div><div class="line"><a name="l00181"></a><span class="lineno">  181</span>&#160;<span class="comment">     *</span></div><div class="line"><a name="l00182"></a><span class="lineno">  182</span>&#160;<span class="comment">     */</span></div><div class="line"><a name="l00183"></a><span class="lineno">  183</span>&#160;    <a class="code" href="classarmnn_delegate_1_1_delegate_options.xhtml#a318c3a715a80b7288e39c7daa8ef8494">DelegateOptions</a>(<span class="keywordtype">char</span> <span class="keyword">const</span>* <span class="keyword">const</span>* options_keys,</div><div class="line"><a name="l00184"></a><span class="lineno">  184</span>&#160;                    <span class="keywordtype">char</span> <span class="keyword">const</span>* <span class="keyword">const</span>* options_values,</div><div class="line"><a name="l00185"></a><span class="lineno">  185</span>&#160;                    <span class="keywordtype">size_t</span> num_options,</div><div class="line"><a name="l00186"></a><span class="lineno">  186</span>&#160;                    <span class="keywordtype">void</span> (*report_error)(<span class="keyword">const</span> <span class="keywordtype">char</span>*));</div><div class="line"><a name="l00187"></a><span class="lineno">  187</span>&#160;</div><div class="line"><a name="l00188"></a><span class="lineno"><a class="line" href="classarmnn_delegate_1_1_delegate_options.xhtml#ad95feca4087d8e42ecacc1950a3d3901">  188</a></span>&#160;    <span class="keyword">const</span> std::vector&lt;armnn::BackendId&gt;&amp; <a class="code" href="classarmnn_delegate_1_1_delegate_options.xhtml#ad95feca4087d8e42ecacc1950a3d3901">GetBackends</a>()<span class="keyword"> const </span>{ <span class="keywordflow">return</span> m_Backends; }</div><div class="line"><a name="l00189"></a><span class="lineno">  189</span>&#160;</div><div class="line"><a name="l00190"></a><span class="lineno"><a class="line" href="classarmnn_delegate_1_1_delegate_options.xhtml#ad9d8dd6ed903c0ae3c4baa3e9d2e4ea5">  190</a></span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classarmnn_delegate_1_1_delegate_options.xhtml#ad9d8dd6ed903c0ae3c4baa3e9d2e4ea5">SetBackends</a>(<span class="keyword">const</span> std::vector&lt;armnn::BackendId&gt;&amp; backends) { m_Backends = backends; }</div><div class="line"><a name="l00191"></a><span class="lineno">  191</span>&#160;</div><div class="line"><a name="l00192"></a><span class="lineno"><a class="line" href="classarmnn_delegate_1_1_delegate_options.xhtml#a8a27ca08addbe8e28ea471eacd053c51">  192</a></span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classarmnn_delegate_1_1_delegate_options.xhtml#a8a27ca08addbe8e28ea471eacd053c51">SetDynamicBackendsPath</a>(<span class="keyword">const</span> std::string&amp; dynamicBackendsPath)</div><div class="line"><a name="l00193"></a><span class="lineno">  193</span>&#160;    {</div><div class="line"><a name="l00194"></a><span class="lineno">  194</span>&#160;        m_RuntimeOptions.<a class="code" href="structarmnn_1_1_i_runtime_1_1_creation_options.xhtml#ae43cf4b5df0068ee6a9151c98947248b">m_DynamicBackendsPath</a> = dynamicBackendsPath;</div><div class="line"><a name="l00195"></a><span class="lineno">  195</span>&#160;    }</div><div class="line"><a name="l00196"></a><span class="lineno"><a class="line" href="classarmnn_delegate_1_1_delegate_options.xhtml#ae3e575de32e1d9d3e7ff51dc84146b76">  196</a></span>&#160;    <span class="keyword">const</span> std::string&amp; <a class="code" href="classarmnn_delegate_1_1_delegate_options.xhtml#ae3e575de32e1d9d3e7ff51dc84146b76">GetDynamicBackendsPath</a>()<span class="keyword"> const</span></div><div class="line"><a name="l00197"></a><span class="lineno">  197</span>&#160;<span class="keyword">    </span>{</div><div class="line"><a name="l00198"></a><span class="lineno">  198</span>&#160;        <span class="keywordflow">return</span> m_RuntimeOptions.<a class="code" href="structarmnn_1_1_i_runtime_1_1_creation_options.xhtml#ae43cf4b5df0068ee6a9151c98947248b">m_DynamicBackendsPath</a>;</div><div class="line"><a name="l00199"></a><span class="lineno">  199</span>&#160;    }</div><div class="line"><a name="l00200"></a><span class="lineno">  200</span>&#160;</div><div class="line"><a name="l00201"></a><span class="lineno"><a class="line" href="classarmnn_delegate_1_1_delegate_options.xhtml#a7ee32e8d6a1ec9d0c86690525b805f58">  201</a></span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classarmnn_delegate_1_1_delegate_options.xhtml#a7ee32e8d6a1ec9d0c86690525b805f58">SetGpuProfilingState</a>(<span class="keywordtype">bool</span> gpuProfilingState)</div><div class="line"><a name="l00202"></a><span class="lineno">  202</span>&#160;    {</div><div class="line"><a name="l00203"></a><span class="lineno">  203</span>&#160;        m_RuntimeOptions.<a class="code" href="structarmnn_1_1_i_runtime_1_1_creation_options.xhtml#a2fe8c3eadf4f4f9c0c664a24a2a298f9">m_EnableGpuProfiling</a> = gpuProfilingState;</div><div class="line"><a name="l00204"></a><span class="lineno">  204</span>&#160;    }</div><div class="line"><a name="l00205"></a><span class="lineno"><a class="line" href="classarmnn_delegate_1_1_delegate_options.xhtml#a8018270f803b5931d0e8fc90894adabf">  205</a></span>&#160;    <span class="keywordtype">bool</span> <a class="code" href="classarmnn_delegate_1_1_delegate_options.xhtml#a8018270f803b5931d0e8fc90894adabf">GetGpuProfilingState</a>()</div><div class="line"><a name="l00206"></a><span class="lineno">  206</span>&#160;    {</div><div class="line"><a name="l00207"></a><span class="lineno">  207</span>&#160;        <span class="keywordflow">return</span> m_RuntimeOptions.<a class="code" href="structarmnn_1_1_i_runtime_1_1_creation_options.xhtml#a2fe8c3eadf4f4f9c0c664a24a2a298f9">m_EnableGpuProfiling</a>;</div><div class="line"><a name="l00208"></a><span class="lineno">  208</span>&#160;    }</div><div class="line"><a name="l00209"></a><span class="lineno">  209</span>&#160;</div><div class="line"><a name="l00210"></a><span class="lineno"><a class="line" href="classarmnn_delegate_1_1_delegate_options.xhtml#a601170c5bc75674017b891c58f9f175b">  210</a></span>&#160;    <span class="keyword">const</span> std::vector&lt;armnn::BackendOptions&gt;&amp; <a class="code" href="classarmnn_delegate_1_1_delegate_options.xhtml#a601170c5bc75674017b891c58f9f175b">GetBackendOptions</a>()<span class="keyword"> const</span></div><div class="line"><a name="l00211"></a><span class="lineno">  211</span>&#160;<span class="keyword">    </span>{</div><div class="line"><a name="l00212"></a><span class="lineno">  212</span>&#160;        <span class="keywordflow">return</span> m_RuntimeOptions.<a class="code" href="structarmnn_1_1_i_runtime_1_1_creation_options.xhtml#aecebc69597fe0d38a3964031c6eeb0a8">m_BackendOptions</a>;</div><div class="line"><a name="l00213"></a><span class="lineno">  213</span>&#160;    }</div><div class="line"><a name="l00214"></a><span class="lineno">  214</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00215"></a><span class="lineno">  215</span>&#160;<span class="comment">    /// Appends a backend option to the list of backend options</span></div><div class="line"><a name="l00216"></a><span class="lineno"><a class="line" href="classarmnn_delegate_1_1_delegate_options.xhtml#a8b99570afa7d17ce4b1c7dab770fe467">  216</a></span>&#160;<span class="comment"></span>    <span class="keywordtype">void</span> <a class="code" href="classarmnn_delegate_1_1_delegate_options.xhtml#a8b99570afa7d17ce4b1c7dab770fe467">AddBackendOption</a>(<span class="keyword">const</span> <a class="code" href="structarmnn_1_1_backend_options.xhtml">armnn::BackendOptions</a>&amp; option)</div><div class="line"><a name="l00217"></a><span class="lineno">  217</span>&#160;    {</div><div class="line"><a name="l00218"></a><span class="lineno">  218</span>&#160;        m_RuntimeOptions.<a class="code" href="structarmnn_1_1_i_runtime_1_1_creation_options.xhtml#aecebc69597fe0d38a3964031c6eeb0a8">m_BackendOptions</a>.push_back(option);</div><div class="line"><a name="l00219"></a><span class="lineno">  219</span>&#160;    }</div><div class="line"><a name="l00220"></a><span class="lineno">  220</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00221"></a><span class="lineno">  221</span>&#160;<span class="comment">    /// Sets the severity level for logging within ArmNN that will be used on creation of the delegate</span></div><div class="line"><a name="l00222"></a><span class="lineno"><a class="line" href="classarmnn_delegate_1_1_delegate_options.xhtml#a98cd1055c58e98f7009c4e770fac96ec">  222</a></span>&#160;<span class="comment"></span>    <span class="keywordtype">void</span> <a class="code" href="classarmnn_delegate_1_1_delegate_options.xhtml#a98cd1055c58e98f7009c4e770fac96ec">SetLoggingSeverity</a>(<span class="keyword">const</span> <a class="code" href="namespacearmnn.xhtml#a93a3ba385cad27c4774e5fe64c025d3d">armnn::LogSeverity</a>&amp; level) { m_LoggingSeverity = level; }</div><div class="line"><a name="l00223"></a><span class="lineno"><a class="line" href="classarmnn_delegate_1_1_delegate_options.xhtml#a337e16dd51a972e2162870e01d48dbc2">  223</a></span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classarmnn_delegate_1_1_delegate_options.xhtml#a337e16dd51a972e2162870e01d48dbc2">SetLoggingSeverity</a>(<span class="keyword">const</span> std::string&amp; level) { m_LoggingSeverity = <a class="code" href="namespacearmnn.xhtml#aaaddf7d8f68eae6c1bf90e4ec3cb5490">armnn::StringToLogLevel</a>(level); }</div><div class="line"><a name="l00224"></a><span class="lineno">  224</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00225"></a><span class="lineno">  225</span>&#160;<span class="comment">    /// Returns the severity level for logging within ArmNN</span></div><div class="line"><a name="l00226"></a><span class="lineno"><a class="line" href="classarmnn_delegate_1_1_delegate_options.xhtml#ad0c06976f83fdc6c393ad85ea23d97b6">  226</a></span>&#160;<span class="comment"></span>    <a class="code" href="namespacearmnn.xhtml#a93a3ba385cad27c4774e5fe64c025d3d">armnn::LogSeverity</a> <a class="code" href="classarmnn_delegate_1_1_delegate_options.xhtml#ad0c06976f83fdc6c393ad85ea23d97b6">GetLoggingSeverity</a>() { <span class="keywordflow">return</span> m_LoggingSeverity.<a class="code" href="classarmnn_1_1_optional_reference_switch.xhtml#a77c7d528ac063d870b8c8426ec81c1c3">value</a>(); }</div><div class="line"><a name="l00227"></a><span class="lineno">  227</span>&#160;</div><div class="line"><a name="l00228"></a><span class="lineno"><a class="line" href="classarmnn_delegate_1_1_delegate_options.xhtml#a9c8c866c00936945dcb0bac65195488b">  228</a></span>&#160;    <span class="keywordtype">bool</span> <a class="code" href="classarmnn_delegate_1_1_delegate_options.xhtml#a9c8c866c00936945dcb0bac65195488b">IsLoggingEnabled</a>() { <span class="keywordflow">return</span> m_LoggingSeverity.<a class="code" href="classarmnn_1_1_optional_base.xhtml#a86b749ce2c4bc627fa8a1fcfaf0e314f">has_value</a>(); }</div><div class="line"><a name="l00229"></a><span class="lineno">  229</span>&#160;</div><div class="line"><a name="l00230"></a><span class="lineno"><a class="line" href="classarmnn_delegate_1_1_delegate_options.xhtml#a7a24e0a6cebcc7d3383b83baac556be4">  230</a></span>&#160;    <span class="keyword">const</span> <a class="code" href="structarmnn_1_1_optimizer_options.xhtml">armnn::OptimizerOptions</a>&amp; <a class="code" href="classarmnn_delegate_1_1_delegate_options.xhtml#a7a24e0a6cebcc7d3383b83baac556be4">GetOptimizerOptions</a>()<span class="keyword"> const </span>{ <span class="keywordflow">return</span> m_OptimizerOptions; }</div><div class="line"><a name="l00231"></a><span class="lineno">  231</span>&#160;</div><div class="line"><a name="l00232"></a><span class="lineno"><a class="line" href="classarmnn_delegate_1_1_delegate_options.xhtml#ab4a44278190ff1282d94d6a1a39e77ee">  232</a></span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classarmnn_delegate_1_1_delegate_options.xhtml#ab4a44278190ff1282d94d6a1a39e77ee">SetOptimizerOptions</a>(<span class="keyword">const</span> <a class="code" href="structarmnn_1_1_optimizer_options.xhtml">armnn::OptimizerOptions</a>&amp; optimizerOptions) { m_OptimizerOptions = optimizerOptions; }</div><div class="line"><a name="l00233"></a><span class="lineno">  233</span>&#160;</div><div class="line"><a name="l00234"></a><span class="lineno"><a class="line" href="classarmnn_delegate_1_1_delegate_options.xhtml#a88eb9e3a0ed5f64cfc6fe460d1621520">  234</a></span>&#160;    <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_optional.xhtml">armnn::Optional&lt;armnn::DebugCallbackFunction&gt;</a>&amp; <a class="code" href="classarmnn_delegate_1_1_delegate_options.xhtml#a88eb9e3a0ed5f64cfc6fe460d1621520">GetDebugCallbackFunction</a>()<span class="keyword"> const</span></div><div class="line"><a name="l00235"></a><span class="lineno">  235</span>&#160;<span class="keyword">        </span>{ <span class="keywordflow">return</span> m_DebugCallbackFunc; }</div><div class="line"><a name="l00236"></a><span class="lineno">  236</span>&#160;</div><div class="line"><a name="l00237"></a><span class="lineno"><a class="line" href="classarmnn_delegate_1_1_delegate_options.xhtml#ab4b9928f6e55a3017ee9754cfc84ea36">  237</a></span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classarmnn_delegate_1_1_delegate_options.xhtml#ab4b9928f6e55a3017ee9754cfc84ea36">SetInternalProfilingParams</a>(<span class="keywordtype">bool</span> internalProfilingState,</div><div class="line"><a name="l00238"></a><span class="lineno">  238</span>&#160;                                    <span class="keyword">const</span> <a class="code" href="namespacearmnn.xhtml#ae060224135f57f926cbda9d2732a2b1f">armnn::ProfilingDetailsMethod</a>&amp; internalProfilingDetail)</div><div class="line"><a name="l00239"></a><span class="lineno">  239</span>&#160;        { m_InternalProfilingEnabled = internalProfilingState; m_InternalProfilingDetail = internalProfilingDetail; }</div><div class="line"><a name="l00240"></a><span class="lineno">  240</span>&#160;</div><div class="line"><a name="l00241"></a><span class="lineno"><a class="line" href="classarmnn_delegate_1_1_delegate_options.xhtml#a4d3e79b955e63ba0c0d7e7a1ca93ea42">  241</a></span>&#160;    <span class="keywordtype">bool</span> <a class="code" href="classarmnn_delegate_1_1_delegate_options.xhtml#a4d3e79b955e63ba0c0d7e7a1ca93ea42">GetInternalProfilingState</a>()<span class="keyword"> const </span>{ <span class="keywordflow">return</span> m_InternalProfilingEnabled; }</div><div class="line"><a name="l00242"></a><span class="lineno"><a class="line" href="classarmnn_delegate_1_1_delegate_options.xhtml#a60f9e33ac7235792518b087eb7185516">  242</a></span>&#160;    <span class="keyword">const</span> <a class="code" href="namespacearmnn.xhtml#ae060224135f57f926cbda9d2732a2b1f">armnn::ProfilingDetailsMethod</a>&amp; <a class="code" href="classarmnn_delegate_1_1_delegate_options.xhtml#a60f9e33ac7235792518b087eb7185516">GetInternalProfilingDetail</a>()<span class="keyword"> const </span>{ <span class="keywordflow">return</span> m_InternalProfilingDetail; }</div><div class="line"><a name="l00243"></a><span class="lineno">  243</span>&#160;</div><div class="line"><a name="l00244"></a><span class="lineno"><a class="line" href="classarmnn_delegate_1_1_delegate_options.xhtml#abfd26a0521c63aaf8857067e4b6b6e3e">  244</a></span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classarmnn_delegate_1_1_delegate_options.xhtml#abfd26a0521c63aaf8857067e4b6b6e3e">SetExternalProfilingParams</a>(</div><div class="line"><a name="l00245"></a><span class="lineno">  245</span>&#160;        <span class="keyword">const</span> arm::pipe::ProfilingOptions&amp; externalProfilingParams)</div><div class="line"><a name="l00246"></a><span class="lineno">  246</span>&#160;        { m_ProfilingOptions = externalProfilingParams; }</div><div class="line"><a name="l00247"></a><span class="lineno">  247</span>&#160;</div><div class="line"><a name="l00248"></a><span class="lineno"><a class="line" href="classarmnn_delegate_1_1_delegate_options.xhtml#a0bababf4a76395e5a7edb0c598b53b90">  248</a></span>&#160;    <span class="keyword">const</span> arm::pipe::ProfilingOptions&amp; <a class="code" href="classarmnn_delegate_1_1_delegate_options.xhtml#a0bababf4a76395e5a7edb0c598b53b90">GetExternalProfilingParams</a>()<span class="keyword"> const</span></div><div class="line"><a name="l00249"></a><span class="lineno">  249</span>&#160;<span class="keyword">        </span>{ <span class="keywordflow">return</span> m_ProfilingOptions; }</div><div class="line"><a name="l00250"></a><span class="lineno">  250</span>&#160;</div><div class="line"><a name="l00251"></a><span class="lineno"><a class="line" href="classarmnn_delegate_1_1_delegate_options.xhtml#aa129c803762837a534c58471f6b39413">  251</a></span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classarmnn_delegate_1_1_delegate_options.xhtml#aa129c803762837a534c58471f6b39413">SetSerializeToDot</a>(<span class="keyword">const</span> std::string&amp; serializeToDotFile) { m_SerializeToDot = serializeToDotFile; }</div><div class="line"><a name="l00252"></a><span class="lineno"><a class="line" href="classarmnn_delegate_1_1_delegate_options.xhtml#aafdb5fa0e0d61cfd7b269eede7e91046">  252</a></span>&#160;    <span class="keyword">const</span> std::string&amp; <a class="code" href="classarmnn_delegate_1_1_delegate_options.xhtml#aafdb5fa0e0d61cfd7b269eede7e91046">GetSerializeToDot</a>()<span class="keyword"> const </span>{ <span class="keywordflow">return</span> m_SerializeToDot; }</div><div class="line"><a name="l00253"></a><span class="lineno">  253</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00254"></a><span class="lineno">  254</span>&#160;<span class="comment">    /// @Note: This might overwrite options that were set with other setter functions of DelegateOptions</span></div><div class="line"><a name="l00255"></a><span class="lineno"><a class="line" href="classarmnn_delegate_1_1_delegate_options.xhtml#a330be86acf8d6ede8319274aff01aee4">  255</a></span>&#160;<span class="comment"></span>    <span class="keywordtype">void</span> <a class="code" href="classarmnn_delegate_1_1_delegate_options.xhtml#a330be86acf8d6ede8319274aff01aee4">SetRuntimeOptions</a>(<span class="keyword">const</span> <a class="code" href="structarmnn_1_1_i_runtime_1_1_creation_options.xhtml">armnn::IRuntime::CreationOptions</a>&amp; runtimeOptions)</div><div class="line"><a name="l00256"></a><span class="lineno">  256</span>&#160;    {</div><div class="line"><a name="l00257"></a><span class="lineno">  257</span>&#160;        m_RuntimeOptions = runtimeOptions;</div><div class="line"><a name="l00258"></a><span class="lineno">  258</span>&#160;    }</div><div class="line"><a name="l00259"></a><span class="lineno">  259</span>&#160;</div><div class="line"><a name="l00260"></a><span class="lineno"><a class="line" href="classarmnn_delegate_1_1_delegate_options.xhtml#ab35238cff48724ffccd7a9e39f0d6904">  260</a></span>&#160;    <span class="keyword">const</span> <a class="code" href="structarmnn_1_1_i_runtime_1_1_creation_options.xhtml">armnn::IRuntime::CreationOptions</a>&amp; <a class="code" href="classarmnn_delegate_1_1_delegate_options.xhtml#ab35238cff48724ffccd7a9e39f0d6904">GetRuntimeOptions</a>()</div><div class="line"><a name="l00261"></a><span class="lineno">  261</span>&#160;    {</div><div class="line"><a name="l00262"></a><span class="lineno">  262</span>&#160;        <span class="keywordflow">return</span> m_RuntimeOptions;</div><div class="line"><a name="l00263"></a><span class="lineno">  263</span>&#160;    }</div><div class="line"><a name="l00264"></a><span class="lineno">  264</span>&#160;</div><div class="line"><a name="l00265"></a><span class="lineno">  265</span>&#160;<span class="keyword">private</span>:<span class="comment"></span></div><div class="line"><a name="l00266"></a><span class="lineno">  266</span>&#160;<span class="comment">    /// Which backend to run Delegate on.</span></div><div class="line"><a name="l00267"></a><span class="lineno">  267</span>&#160;<span class="comment">    /// Examples of possible values are: CpuRef, CpuAcc, GpuAcc.</span></div><div class="line"><a name="l00268"></a><span class="lineno">  268</span>&#160;<span class="comment">    /// CpuRef as default.</span></div><div class="line"><a name="l00269"></a><span class="lineno">  269</span>&#160;<span class="comment"></span>    std::vector&lt;armnn::BackendId&gt; m_Backends = { <a class="code" href="namespacearmnn.xhtml#ae2f04a162585c0a5222a537efd5456aea83c2c4e9b658ccafbcbe6309c5d84c64">armnn::Compute::CpuRef</a> };</div><div class="line"><a name="l00270"></a><span class="lineno">  270</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00271"></a><span class="lineno">  271</span>&#160;<span class="comment">    /// Creation options for the ArmNN runtime</span></div><div class="line"><a name="l00272"></a><span class="lineno">  272</span>&#160;<span class="comment">    /// Contains options for global settings that are valid for the whole lifetime of ArmNN</span></div><div class="line"><a name="l00273"></a><span class="lineno">  273</span>&#160;<span class="comment">    /// i.e. BackendOptions, DynamicBackendPath, ExternalProfilingOptions and more</span></div><div class="line"><a name="l00274"></a><span class="lineno">  274</span>&#160;<span class="comment"></span>    <a class="code" href="structarmnn_1_1_i_runtime_1_1_creation_options.xhtml">armnn::IRuntime::CreationOptions</a> m_RuntimeOptions;</div><div class="line"><a name="l00275"></a><span class="lineno">  275</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00276"></a><span class="lineno">  276</span>&#160;<span class="comment">    /// Options for the optimization step for the network</span></div><div class="line"><a name="l00277"></a><span class="lineno">  277</span>&#160;<span class="comment"></span>    <a class="code" href="structarmnn_1_1_optimizer_options.xhtml">armnn::OptimizerOptions</a> m_OptimizerOptions;</div><div class="line"><a name="l00278"></a><span class="lineno">  278</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00279"></a><span class="lineno">  279</span>&#160;<span class="comment">    /// External profiling options.</span></div><div class="line"><a name="l00280"></a><span class="lineno">  280</span>&#160;<span class="comment"></span>    arm::pipe::ProfilingOptions m_ProfilingOptions;</div><div class="line"><a name="l00281"></a><span class="lineno">  281</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00282"></a><span class="lineno">  282</span>&#160;<span class="comment">    /// Internal profiling options.</span></div><div class="line"><a name="l00283"></a><span class="lineno">  283</span>&#160;<span class="comment">    /// Indicates whether internal profiling is enabled or not.</span></div><div class="line"><a name="l00284"></a><span class="lineno">  284</span>&#160;<span class="comment"></span>    <span class="keywordtype">bool</span> m_InternalProfilingEnabled = <span class="keyword">false</span>;<span class="comment"></span></div><div class="line"><a name="l00285"></a><span class="lineno">  285</span>&#160;<span class="comment">    /// Sets the level of detail output by the profiling. Options are DetailsWithEvents = 1 and DetailsOnly = 2</span></div><div class="line"><a name="l00286"></a><span class="lineno">  286</span>&#160;<span class="comment"></span>    <a class="code" href="namespacearmnn.xhtml#ae060224135f57f926cbda9d2732a2b1f">armnn::ProfilingDetailsMethod</a> m_InternalProfilingDetail = <a class="code" href="namespacearmnn.xhtml#ae060224135f57f926cbda9d2732a2b1fa497ab261a562e316736c2cb59b839d32">armnn::ProfilingDetailsMethod::DetailsWithEvents</a>;</div><div class="line"><a name="l00287"></a><span class="lineno">  287</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00288"></a><span class="lineno">  288</span>&#160;<span class="comment">    /// Severity level for logging within ArmNN that will be used on creation of the delegate</span></div><div class="line"><a name="l00289"></a><span class="lineno">  289</span>&#160;<span class="comment"></span>    <a class="code" href="classarmnn_1_1_optional.xhtml">armnn::Optional&lt;armnn::LogSeverity&gt;</a> m_LoggingSeverity;</div><div class="line"><a name="l00290"></a><span class="lineno">  290</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00291"></a><span class="lineno">  291</span>&#160;<span class="comment">    /// A callback function to debug layers performing custom computations on intermediate tensors.</span></div><div class="line"><a name="l00292"></a><span class="lineno">  292</span>&#160;<span class="comment">    /// If a function is not registered, and debug is enabled in OptimizerOptions,</span></div><div class="line"><a name="l00293"></a><span class="lineno">  293</span>&#160;<span class="comment">    /// debug will print information of the intermediate tensors.</span></div><div class="line"><a name="l00294"></a><span class="lineno">  294</span>&#160;<span class="comment"></span>    <a class="code" href="classarmnn_1_1_optional.xhtml">armnn::Optional&lt;armnn::DebugCallbackFunction&gt;</a> m_DebugCallbackFunc;</div><div class="line"><a name="l00295"></a><span class="lineno">  295</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00296"></a><span class="lineno">  296</span>&#160;<span class="comment">    /// If not empty then the optimized model will be serialized to a file with this file name in &quot;dot&quot; format.</span></div><div class="line"><a name="l00297"></a><span class="lineno">  297</span>&#160;<span class="comment"></span>    std::string m_SerializeToDot = <span class="stringliteral">&quot;&quot;</span>;</div><div class="line"><a name="l00298"></a><span class="lineno">  298</span>&#160;};</div><div class="line"><a name="l00299"></a><span class="lineno">  299</span>&#160;</div><div class="line"><a name="l00300"></a><span class="lineno">  300</span>&#160;} <span class="comment">// namespace armnnDelegate</span></div><div class="ttc" id="namespacearmnn_xhtml_ae2f04a162585c0a5222a537efd5456aea83c2c4e9b658ccafbcbe6309c5d84c64"><div class="ttname"><a href="namespacearmnn.xhtml#ae2f04a162585c0a5222a537efd5456aea83c2c4e9b658ccafbcbe6309c5d84c64">armnn::Compute::CpuRef</a></div><div class="ttdoc">CPU Execution: Reference C++ kernels. </div></div>
<div class="ttc" id="classarmnn_1_1_optional_xhtml"><div class="ttname"><a href="classarmnn_1_1_optional.xhtml">armnn::Optional&lt; armnn::LogSeverity &gt;</a></div></div>
<div class="ttc" id="classarmnn_delegate_1_1_delegate_options_xhtml_aa129c803762837a534c58471f6b39413"><div class="ttname"><a href="classarmnn_delegate_1_1_delegate_options.xhtml#aa129c803762837a534c58471f6b39413">armnnDelegate::DelegateOptions::SetSerializeToDot</a></div><div class="ttdeci">void SetSerializeToDot(const std::string &amp;serializeToDotFile)</div><div class="ttdef"><b>Definition:</b> <a href="_delegate_options_8hpp_source.xhtml#l00251">DelegateOptions.hpp:251</a></div></div>
<div class="ttc" id="namespacearmnn_xhtml_aaaddf7d8f68eae6c1bf90e4ec3cb5490"><div class="ttname"><a href="namespacearmnn.xhtml#aaaddf7d8f68eae6c1bf90e4ec3cb5490">armnn::StringToLogLevel</a></div><div class="ttdeci">LogSeverity StringToLogLevel(std::string level)</div><div class="ttdef"><b>Definition:</b> <a href="_logging_8hpp_source.xhtml#l00036">Logging.hpp:36</a></div></div>
<div class="ttc" id="_arm_n_n_8hpp_xhtml"><div class="ttname"><a href="_arm_n_n_8hpp.xhtml">ArmNN.hpp</a></div></div>
<div class="ttc" id="classarmnn_delegate_1_1_delegate_options_xhtml_a4d3e79b955e63ba0c0d7e7a1ca93ea42"><div class="ttname"><a href="classarmnn_delegate_1_1_delegate_options.xhtml#a4d3e79b955e63ba0c0d7e7a1ca93ea42">armnnDelegate::DelegateOptions::GetInternalProfilingState</a></div><div class="ttdeci">bool GetInternalProfilingState() const</div><div class="ttdef"><b>Definition:</b> <a href="_delegate_options_8hpp_source.xhtml#l00241">DelegateOptions.hpp:241</a></div></div>
<div class="ttc" id="classarmnn_1_1_optional_reference_switch_xhtml_a77c7d528ac063d870b8c8426ec81c1c3"><div class="ttname"><a href="classarmnn_1_1_optional_reference_switch.xhtml#a77c7d528ac063d870b8c8426ec81c1c3">armnn::OptionalReferenceSwitch::value</a></div><div class="ttdeci">const T &amp; value() const</div><div class="ttdef"><b>Definition:</b> <a href="_optional_8hpp_source.xhtml#l00146">Optional.hpp:146</a></div></div>
<div class="ttc" id="namespacearmnn_xhtml_ae060224135f57f926cbda9d2732a2b1f"><div class="ttname"><a href="namespacearmnn.xhtml#ae060224135f57f926cbda9d2732a2b1f">armnn::ProfilingDetailsMethod</a></div><div class="ttdeci">ProfilingDetailsMethod</div><div class="ttdoc">Define the behaviour of the internal profiler when outputting network details. </div><div class="ttdef"><b>Definition:</b> <a href="_types_8hpp_source.xhtml#l00071">Types.hpp:71</a></div></div>
<div class="ttc" id="classarmnn_delegate_1_1_delegate_options_xhtml_ae3e575de32e1d9d3e7ff51dc84146b76"><div class="ttname"><a href="classarmnn_delegate_1_1_delegate_options.xhtml#ae3e575de32e1d9d3e7ff51dc84146b76">armnnDelegate::DelegateOptions::GetDynamicBackendsPath</a></div><div class="ttdeci">const std::string &amp; GetDynamicBackendsPath() const</div><div class="ttdef"><b>Definition:</b> <a href="_delegate_options_8hpp_source.xhtml#l00196">DelegateOptions.hpp:196</a></div></div>
<div class="ttc" id="classarmnn_delegate_1_1_delegate_options_xhtml_abfd26a0521c63aaf8857067e4b6b6e3e"><div class="ttname"><a href="classarmnn_delegate_1_1_delegate_options.xhtml#abfd26a0521c63aaf8857067e4b6b6e3e">armnnDelegate::DelegateOptions::SetExternalProfilingParams</a></div><div class="ttdeci">void SetExternalProfilingParams(const arm::pipe::ProfilingOptions &amp;externalProfilingParams)</div><div class="ttdef"><b>Definition:</b> <a href="_delegate_options_8hpp_source.xhtml#l00244">DelegateOptions.hpp:244</a></div></div>
<div class="ttc" id="namespacearmnn_xhtml_ae060224135f57f926cbda9d2732a2b1fa497ab261a562e316736c2cb59b839d32"><div class="ttname"><a href="namespacearmnn.xhtml#ae060224135f57f926cbda9d2732a2b1fa497ab261a562e316736c2cb59b839d32">armnn::ProfilingDetailsMethod::DetailsWithEvents</a></div></div>
<div class="ttc" id="structarmnn_1_1_i_runtime_1_1_creation_options_xhtml_aecebc69597fe0d38a3964031c6eeb0a8"><div class="ttname"><a href="structarmnn_1_1_i_runtime_1_1_creation_options.xhtml#aecebc69597fe0d38a3964031c6eeb0a8">armnn::IRuntime::CreationOptions::m_BackendOptions</a></div><div class="ttdeci">std::vector&lt; BackendOptions &gt; m_BackendOptions</div><div class="ttdoc">Pass backend specific options. </div><div class="ttdef"><b>Definition:</b> <a href="_i_runtime_8hpp_source.xhtml#l00189">IRuntime.hpp:189</a></div></div>
<div class="ttc" id="classarmnn_delegate_1_1_delegate_options_xhtml_aafdb5fa0e0d61cfd7b269eede7e91046"><div class="ttname"><a href="classarmnn_delegate_1_1_delegate_options.xhtml#aafdb5fa0e0d61cfd7b269eede7e91046">armnnDelegate::DelegateOptions::GetSerializeToDot</a></div><div class="ttdeci">const std::string &amp; GetSerializeToDot() const</div><div class="ttdef"><b>Definition:</b> <a href="_delegate_options_8hpp_source.xhtml#l00252">DelegateOptions.hpp:252</a></div></div>
<div class="ttc" id="namespacearmnn_xhtml_ae2f04a162585c0a5222a537efd5456ae"><div class="ttname"><a href="namespacearmnn.xhtml#ae2f04a162585c0a5222a537efd5456ae">armnn::Compute</a></div><div class="ttdeci">Compute</div><div class="ttdoc">The Compute enum is now deprecated and it is now being replaced by BackendId. </div><div class="ttdef"><b>Definition:</b> <a href="_backend_id_8hpp_source.xhtml#l00021">BackendId.hpp:21</a></div></div>
<div class="ttc" id="classarmnn_delegate_1_1_delegate_options_xhtml_a7a24e0a6cebcc7d3383b83baac556be4"><div class="ttname"><a href="classarmnn_delegate_1_1_delegate_options.xhtml#a7a24e0a6cebcc7d3383b83baac556be4">armnnDelegate::DelegateOptions::GetOptimizerOptions</a></div><div class="ttdeci">const armnn::OptimizerOptions &amp; GetOptimizerOptions() const</div><div class="ttdef"><b>Definition:</b> <a href="_delegate_options_8hpp_source.xhtml#l00230">DelegateOptions.hpp:230</a></div></div>
<div class="ttc" id="classarmnn_delegate_1_1_delegate_options_xhtml_a318c3a715a80b7288e39c7daa8ef8494"><div class="ttname"><a href="classarmnn_delegate_1_1_delegate_options.xhtml#a318c3a715a80b7288e39c7daa8ef8494">armnnDelegate::DelegateOptions::DelegateOptions</a></div><div class="ttdeci">DelegateOptions(armnn::Compute computeDevice, const std::vector&lt; armnn::BackendOptions &gt; &amp;backendOptions={}, armnn::Optional&lt; armnn::LogSeverity &gt; logSeverityLevel=armnn::EmptyOptional())</div></div>
<div class="ttc" id="_optional_8hpp_xhtml"><div class="ttname"><a href="_optional_8hpp.xhtml">Optional.hpp</a></div></div>
<div class="ttc" id="classarmnn_delegate_1_1_delegate_options_xhtml_a601170c5bc75674017b891c58f9f175b"><div class="ttname"><a href="classarmnn_delegate_1_1_delegate_options.xhtml#a601170c5bc75674017b891c58f9f175b">armnnDelegate::DelegateOptions::GetBackendOptions</a></div><div class="ttdeci">const std::vector&lt; armnn::BackendOptions &gt; &amp; GetBackendOptions() const</div><div class="ttdef"><b>Definition:</b> <a href="_delegate_options_8hpp_source.xhtml#l00210">DelegateOptions.hpp:210</a></div></div>
<div class="ttc" id="classarmnn_delegate_1_1_delegate_options_xhtml_a98cd1055c58e98f7009c4e770fac96ec"><div class="ttname"><a href="classarmnn_delegate_1_1_delegate_options.xhtml#a98cd1055c58e98f7009c4e770fac96ec">armnnDelegate::DelegateOptions::SetLoggingSeverity</a></div><div class="ttdeci">void SetLoggingSeverity(const armnn::LogSeverity &amp;level)</div><div class="ttdoc">Sets the severity level for logging within ArmNN that will be used on creation of the delegate...</div><div class="ttdef"><b>Definition:</b> <a href="_delegate_options_8hpp_source.xhtml#l00222">DelegateOptions.hpp:222</a></div></div>
<div class="ttc" id="classarmnn_1_1_optional_base_xhtml_a86b749ce2c4bc627fa8a1fcfaf0e314f"><div class="ttname"><a href="classarmnn_1_1_optional_base.xhtml#a86b749ce2c4bc627fa8a1fcfaf0e314f">armnn::OptionalBase::has_value</a></div><div class="ttdeci">bool has_value() const noexcept</div><div class="ttdef"><b>Definition:</b> <a href="_optional_8hpp_source.xhtml#l00053">Optional.hpp:53</a></div></div>
<div class="ttc" id="classarmnn_delegate_1_1_delegate_options_xhtml_ab35238cff48724ffccd7a9e39f0d6904"><div class="ttname"><a href="classarmnn_delegate_1_1_delegate_options.xhtml#ab35238cff48724ffccd7a9e39f0d6904">armnnDelegate::DelegateOptions::GetRuntimeOptions</a></div><div class="ttdeci">const armnn::IRuntime::CreationOptions &amp; GetRuntimeOptions()</div><div class="ttdef"><b>Definition:</b> <a href="_delegate_options_8hpp_source.xhtml#l00260">DelegateOptions.hpp:260</a></div></div>
<div class="ttc" id="structarmnn_1_1_optimizer_options_xhtml"><div class="ttname"><a href="structarmnn_1_1_optimizer_options.xhtml">armnn::OptimizerOptions</a></div><div class="ttdoc">ArmNN performs an optimization on each model/network before it gets loaded for execution. </div><div class="ttdef"><b>Definition:</b> <a href="_i_network_8hpp_source.xhtml#l00137">INetwork.hpp:137</a></div></div>
<div class="ttc" id="classarmnn_delegate_1_1_delegate_options_xhtml_a60f9e33ac7235792518b087eb7185516"><div class="ttname"><a href="classarmnn_delegate_1_1_delegate_options.xhtml#a60f9e33ac7235792518b087eb7185516">armnnDelegate::DelegateOptions::GetInternalProfilingDetail</a></div><div class="ttdeci">const armnn::ProfilingDetailsMethod &amp; GetInternalProfilingDetail() const</div><div class="ttdef"><b>Definition:</b> <a href="_delegate_options_8hpp_source.xhtml#l00242">DelegateOptions.hpp:242</a></div></div>
<div class="ttc" id="_logging_8hpp_xhtml"><div class="ttname"><a href="_logging_8hpp.xhtml">Logging.hpp</a></div></div>
<div class="ttc" id="namespacearmnn_delegate_xhtml"><div class="ttname"><a href="namespacearmnn_delegate.xhtml">armnnDelegate</a></div><div class="ttdef"><b>Definition:</b> <a href="armnn__delegate_8hpp_source.xhtml#l00024">armnn_delegate.hpp:24</a></div></div>
<div class="ttc" id="structarmnn_1_1_i_runtime_1_1_creation_options_xhtml"><div class="ttname"><a href="structarmnn_1_1_i_runtime_1_1_creation_options.xhtml">armnn::IRuntime::CreationOptions</a></div><div class="ttdef"><b>Definition:</b> <a href="_i_runtime_8hpp_source.xhtml#l00077">IRuntime.hpp:77</a></div></div>
<div class="ttc" id="structarmnn_1_1_backend_options_xhtml"><div class="ttname"><a href="structarmnn_1_1_backend_options.xhtml">armnn::BackendOptions</a></div><div class="ttdoc">Struct for the users to pass backend specific options. </div><div class="ttdef"><b>Definition:</b> <a href="_backend_options_8hpp_source.xhtml#l00022">BackendOptions.hpp:22</a></div></div>
<div class="ttc" id="structarmnn_1_1_i_runtime_1_1_creation_options_xhtml_ae43cf4b5df0068ee6a9151c98947248b"><div class="ttname"><a href="structarmnn_1_1_i_runtime_1_1_creation_options.xhtml#ae43cf4b5df0068ee6a9151c98947248b">armnn::IRuntime::CreationOptions::m_DynamicBackendsPath</a></div><div class="ttdeci">std::string m_DynamicBackendsPath</div><div class="ttdoc">Setting this value will override the paths set by the DYNAMIC_BACKEND_PATHS compiler directive Only a...</div><div class="ttdef"><b>Definition:</b> <a href="_i_runtime_8hpp_source.xhtml#l00098">IRuntime.hpp:98</a></div></div>
<div class="ttc" id="structarmnn_1_1_i_runtime_1_1_creation_options_xhtml_a2fe8c3eadf4f4f9c0c664a24a2a298f9"><div class="ttname"><a href="structarmnn_1_1_i_runtime_1_1_creation_options.xhtml#a2fe8c3eadf4f4f9c0c664a24a2a298f9">armnn::IRuntime::CreationOptions::m_EnableGpuProfiling</a></div><div class="ttdeci">bool m_EnableGpuProfiling</div><div class="ttdoc">Setting this flag will allow the user to obtain GPU profiling information from the runtime...</div><div class="ttdef"><b>Definition:</b> <a href="_i_runtime_8hpp_source.xhtml#l00093">IRuntime.hpp:93</a></div></div>
<div class="ttc" id="structarmnn_1_1_empty_optional_xhtml"><div class="ttname"><a href="structarmnn_1_1_empty_optional.xhtml">armnn::EmptyOptional</a></div><div class="ttdoc">EmptyOptional is used to initialize the Optional class in case we want to have default value for an O...</div><div class="ttdef"><b>Definition:</b> <a href="_optional_8hpp_source.xhtml#l00032">Optional.hpp:32</a></div></div>
<div class="ttc" id="classarmnn_delegate_1_1_delegate_options_xhtml_a9c8c866c00936945dcb0bac65195488b"><div class="ttname"><a href="classarmnn_delegate_1_1_delegate_options.xhtml#a9c8c866c00936945dcb0bac65195488b">armnnDelegate::DelegateOptions::IsLoggingEnabled</a></div><div class="ttdeci">bool IsLoggingEnabled()</div><div class="ttdef"><b>Definition:</b> <a href="_delegate_options_8hpp_source.xhtml#l00228">DelegateOptions.hpp:228</a></div></div>
<div class="ttc" id="classarmnn_delegate_1_1_delegate_options_xhtml_a8a27ca08addbe8e28ea471eacd053c51"><div class="ttname"><a href="classarmnn_delegate_1_1_delegate_options.xhtml#a8a27ca08addbe8e28ea471eacd053c51">armnnDelegate::DelegateOptions::SetDynamicBackendsPath</a></div><div class="ttdeci">void SetDynamicBackendsPath(const std::string &amp;dynamicBackendsPath)</div><div class="ttdef"><b>Definition:</b> <a href="_delegate_options_8hpp_source.xhtml#l00192">DelegateOptions.hpp:192</a></div></div>
<div class="ttc" id="classarmnn_delegate_1_1_delegate_options_xhtml_ad9d8dd6ed903c0ae3c4baa3e9d2e4ea5"><div class="ttname"><a href="classarmnn_delegate_1_1_delegate_options.xhtml#ad9d8dd6ed903c0ae3c4baa3e9d2e4ea5">armnnDelegate::DelegateOptions::SetBackends</a></div><div class="ttdeci">void SetBackends(const std::vector&lt; armnn::BackendId &gt; &amp;backends)</div><div class="ttdef"><b>Definition:</b> <a href="_delegate_options_8hpp_source.xhtml#l00190">DelegateOptions.hpp:190</a></div></div>
<div class="ttc" id="classarmnn_delegate_1_1_delegate_options_xhtml_ad95feca4087d8e42ecacc1950a3d3901"><div class="ttname"><a href="classarmnn_delegate_1_1_delegate_options.xhtml#ad95feca4087d8e42ecacc1950a3d3901">armnnDelegate::DelegateOptions::GetBackends</a></div><div class="ttdeci">const std::vector&lt; armnn::BackendId &gt; &amp; GetBackends() const</div><div class="ttdef"><b>Definition:</b> <a href="_delegate_options_8hpp_source.xhtml#l00188">DelegateOptions.hpp:188</a></div></div>
<div class="ttc" id="classarmnn_delegate_1_1_delegate_options_xhtml"><div class="ttname"><a href="classarmnn_delegate_1_1_delegate_options.xhtml">armnnDelegate::DelegateOptions</a></div><div class="ttdef"><b>Definition:</b> <a href="_delegate_options_8hpp_source.xhtml#l00021">DelegateOptions.hpp:21</a></div></div>
<div class="ttc" id="classarmnn_delegate_1_1_delegate_options_xhtml_a88eb9e3a0ed5f64cfc6fe460d1621520"><div class="ttname"><a href="classarmnn_delegate_1_1_delegate_options.xhtml#a88eb9e3a0ed5f64cfc6fe460d1621520">armnnDelegate::DelegateOptions::GetDebugCallbackFunction</a></div><div class="ttdeci">const armnn::Optional&lt; armnn::DebugCallbackFunction &gt; &amp; GetDebugCallbackFunction() const</div><div class="ttdef"><b>Definition:</b> <a href="_delegate_options_8hpp_source.xhtml#l00234">DelegateOptions.hpp:234</a></div></div>
<div class="ttc" id="classarmnn_delegate_1_1_delegate_options_xhtml_a8b99570afa7d17ce4b1c7dab770fe467"><div class="ttname"><a href="classarmnn_delegate_1_1_delegate_options.xhtml#a8b99570afa7d17ce4b1c7dab770fe467">armnnDelegate::DelegateOptions::AddBackendOption</a></div><div class="ttdeci">void AddBackendOption(const armnn::BackendOptions &amp;option)</div><div class="ttdoc">Appends a backend option to the list of backend options. </div><div class="ttdef"><b>Definition:</b> <a href="_delegate_options_8hpp_source.xhtml#l00216">DelegateOptions.hpp:216</a></div></div>
<div class="ttc" id="classarmnn_delegate_1_1_delegate_options_xhtml_ad0c06976f83fdc6c393ad85ea23d97b6"><div class="ttname"><a href="classarmnn_delegate_1_1_delegate_options.xhtml#ad0c06976f83fdc6c393ad85ea23d97b6">armnnDelegate::DelegateOptions::GetLoggingSeverity</a></div><div class="ttdeci">armnn::LogSeverity GetLoggingSeverity()</div><div class="ttdoc">Returns the severity level for logging within ArmNN. </div><div class="ttdef"><b>Definition:</b> <a href="_delegate_options_8hpp_source.xhtml#l00226">DelegateOptions.hpp:226</a></div></div>
<div class="ttc" id="classarmnn_delegate_1_1_delegate_options_xhtml_a8018270f803b5931d0e8fc90894adabf"><div class="ttname"><a href="classarmnn_delegate_1_1_delegate_options.xhtml#a8018270f803b5931d0e8fc90894adabf">armnnDelegate::DelegateOptions::GetGpuProfilingState</a></div><div class="ttdeci">bool GetGpuProfilingState()</div><div class="ttdef"><b>Definition:</b> <a href="_delegate_options_8hpp_source.xhtml#l00205">DelegateOptions.hpp:205</a></div></div>
<div class="ttc" id="classarmnn_delegate_1_1_delegate_options_xhtml_ab4a44278190ff1282d94d6a1a39e77ee"><div class="ttname"><a href="classarmnn_delegate_1_1_delegate_options.xhtml#ab4a44278190ff1282d94d6a1a39e77ee">armnnDelegate::DelegateOptions::SetOptimizerOptions</a></div><div class="ttdeci">void SetOptimizerOptions(const armnn::OptimizerOptions &amp;optimizerOptions)</div><div class="ttdef"><b>Definition:</b> <a href="_delegate_options_8hpp_source.xhtml#l00232">DelegateOptions.hpp:232</a></div></div>
<div class="ttc" id="classarmnn_delegate_1_1_delegate_options_xhtml_a7ee32e8d6a1ec9d0c86690525b805f58"><div class="ttname"><a href="classarmnn_delegate_1_1_delegate_options.xhtml#a7ee32e8d6a1ec9d0c86690525b805f58">armnnDelegate::DelegateOptions::SetGpuProfilingState</a></div><div class="ttdeci">void SetGpuProfilingState(bool gpuProfilingState)</div><div class="ttdef"><b>Definition:</b> <a href="_delegate_options_8hpp_source.xhtml#l00201">DelegateOptions.hpp:201</a></div></div>
<div class="ttc" id="classarmnn_delegate_1_1_delegate_options_xhtml_a337e16dd51a972e2162870e01d48dbc2"><div class="ttname"><a href="classarmnn_delegate_1_1_delegate_options.xhtml#a337e16dd51a972e2162870e01d48dbc2">armnnDelegate::DelegateOptions::SetLoggingSeverity</a></div><div class="ttdeci">void SetLoggingSeverity(const std::string &amp;level)</div><div class="ttdef"><b>Definition:</b> <a href="_delegate_options_8hpp_source.xhtml#l00223">DelegateOptions.hpp:223</a></div></div>
<div class="ttc" id="namespacearmnn_xhtml_a93a3ba385cad27c4774e5fe64c025d3d"><div class="ttname"><a href="namespacearmnn.xhtml#a93a3ba385cad27c4774e5fe64c025d3d">armnn::LogSeverity</a></div><div class="ttdeci">LogSeverity</div><div class="ttdef"><b>Definition:</b> <a href="_utils_8hpp_source.xhtml#l00014">Utils.hpp:14</a></div></div>
<div class="ttc" id="classarmnn_delegate_1_1_delegate_options_xhtml_ab4b9928f6e55a3017ee9754cfc84ea36"><div class="ttname"><a href="classarmnn_delegate_1_1_delegate_options.xhtml#ab4b9928f6e55a3017ee9754cfc84ea36">armnnDelegate::DelegateOptions::SetInternalProfilingParams</a></div><div class="ttdeci">void SetInternalProfilingParams(bool internalProfilingState, const armnn::ProfilingDetailsMethod &amp;internalProfilingDetail)</div><div class="ttdef"><b>Definition:</b> <a href="_delegate_options_8hpp_source.xhtml#l00237">DelegateOptions.hpp:237</a></div></div>
<div class="ttc" id="classarmnn_delegate_1_1_delegate_options_xhtml_a0bababf4a76395e5a7edb0c598b53b90"><div class="ttname"><a href="classarmnn_delegate_1_1_delegate_options.xhtml#a0bababf4a76395e5a7edb0c598b53b90">armnnDelegate::DelegateOptions::GetExternalProfilingParams</a></div><div class="ttdeci">const arm::pipe::ProfilingOptions &amp; GetExternalProfilingParams() const</div><div class="ttdef"><b>Definition:</b> <a href="_delegate_options_8hpp_source.xhtml#l00248">DelegateOptions.hpp:248</a></div></div>
<div class="ttc" id="classarmnn_delegate_1_1_delegate_options_xhtml_a330be86acf8d6ede8319274aff01aee4"><div class="ttname"><a href="classarmnn_delegate_1_1_delegate_options.xhtml#a330be86acf8d6ede8319274aff01aee4">armnnDelegate::DelegateOptions::SetRuntimeOptions</a></div><div class="ttdeci">void SetRuntimeOptions(const armnn::IRuntime::CreationOptions &amp;runtimeOptions)</div><div class="ttdoc">: This might overwrite options that were set with other setter functions of DelegateOptions ...</div><div class="ttdef"><b>Definition:</b> <a href="_delegate_options_8hpp_source.xhtml#l00255">DelegateOptions.hpp:255</a></div></div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="dir_8dcde0c2eaea8bb7ad9196fbb23d9248.xhtml">delegate</a></li><li class="navelem"><a class="el" href="dir_ff7186a105a681fd13556c7920962981.xhtml">include</a></li><li class="navelem"><a class="el" href="_delegate_options_8hpp.xhtml">DelegateOptions.hpp</a></li>
    <li class="footer">Generated on Fri Jun 17 2022 13:19:41 for ArmNN by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.13 </li>
  </ul>
</div>
</body>
</html>
