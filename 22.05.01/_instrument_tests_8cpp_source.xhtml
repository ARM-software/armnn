<!-- Copyright (c) 2020 ARM Limited. -->
<!--                                 -->
<!-- SPDX-License-Identifier: MIT    -->
<!--                                 -->
<!-- HTML header for doxygen 1.8.13-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.13"/>
<meta name="robots" content="NOINDEX, NOFOLLOW" />
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>ArmNN: src/armnn/test/InstrumentTests.cpp Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script><script type="text/javascript" src="http://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="stylesheet.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <img alt="ArmNN" src="Arm_NN_horizontal_blue.png" style="max-width: 10rem; margin-top: .5rem; margin-left 10px"/>
  <td style="padding-left: 0.5em;">
   <div id="projectname">
   &#160;<span id="projectnumber">22.05.01</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.13 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
$(document).ready(function(){initNavTree('_instrument_tests_8cpp_source.xhtml','');});
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="headertitle">
<div class="title">InstrumentTests.cpp</div>  </div>
</div><!--header-->
<div class="contents">
<a href="_instrument_tests_8cpp.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="comment">//</span></div><div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="comment">// Copyright Â© 2017 Arm Ltd. All rights reserved.</span></div><div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="comment">// SPDX-License-Identifier: MIT</span></div><div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="comment">//</span></div><div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="preprocessor">#include &lt;doctest/doctest.h&gt;</span></div><div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;</div><div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_wall_clock_timer_8hpp.xhtml">WallClockTimer.hpp</a>&quot;</span></div><div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;</div><div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="preprocessor">#include &lt;chrono&gt;</span></div><div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="preprocessor">#include &lt;thread&gt;</span></div><div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;</div><div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;<span class="keyword">using namespace </span><a class="code" href="namespacearmnn.xhtml">armnn</a>;</div><div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;</div><div class="line"><a name="l00014"></a><span class="lineno"><a class="line" href="_instrument_tests_8cpp.xhtml#a02e8d84276fe5b42aa2177e0ef349611">   14</a></span>&#160;<a class="code" href="namespacearmnn.xhtml#a1621fb2f10314c394c9023d3e090d394">TEST_SUITE</a>(<span class="stringliteral">&quot;Instruments&quot;</span>)</div><div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;{</div><div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;TEST_CASE(<span class="stringliteral">&quot;WallClockTimerInMicroseconds&quot;</span>)</div><div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;{</div><div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;    <a class="code" href="classarmnn_1_1_wall_clock_timer.xhtml">WallClockTimer</a> wallClockTimer;</div><div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;</div><div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;    CHECK((std::string(wallClockTimer.<a class="code" href="classarmnn_1_1_wall_clock_timer.xhtml#ad47edad463024345ce1409153c259215">GetName</a>()) == std::string(<span class="stringliteral">&quot;WallClockTimer&quot;</span>)));</div><div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;</div><div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;    <span class="comment">// start the timer</span></div><div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;    wallClockTimer.<a class="code" href="classarmnn_1_1_wall_clock_timer.xhtml#a156f3866ca69d98b4d9e6e1c1b3ec7da">Start</a>();</div><div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;</div><div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;    <span class="comment">// wait for 10 microseconds</span></div><div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;    std::this_thread::sleep_for(std::chrono::microseconds(10));</div><div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;</div><div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;   <span class="comment">// stop the timer</span></div><div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;    wallClockTimer.<a class="code" href="classarmnn_1_1_wall_clock_timer.xhtml#a634c58de2126b4a4e6a2a093e60e1290">Stop</a>();</div><div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;</div><div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;    CHECK((wallClockTimer.<a class="code" href="classarmnn_1_1_wall_clock_timer.xhtml#a86ea36032637c02c045f2d433036a203">GetMeasurements</a>().front().m_Name == <a class="code" href="classarmnn_1_1_wall_clock_timer.xhtml#aece42eedfcac1aa046e0dff4763b300a">WallClockTimer::WALL_CLOCK_TIME</a>));</div><div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;</div><div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;    <span class="comment">// check that WallClockTimer measurement should be &gt;= 10 microseconds</span></div><div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;    CHECK_GE(wallClockTimer.<a class="code" href="classarmnn_1_1_wall_clock_timer.xhtml#a86ea36032637c02c045f2d433036a203">GetMeasurements</a>().front().m_Value, std::chrono::microseconds(10).count());</div><div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;}</div><div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;</div><div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;TEST_CASE(<span class="stringliteral">&quot;WallClockTimerInNanoseconds&quot;</span>)</div><div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;{</div><div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;    <a class="code" href="classarmnn_1_1_wall_clock_timer.xhtml">WallClockTimer</a> wallClockTimer;</div><div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;</div><div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;    CHECK((std::string(wallClockTimer.<a class="code" href="classarmnn_1_1_wall_clock_timer.xhtml#ad47edad463024345ce1409153c259215">GetName</a>()) == std::string(<span class="stringliteral">&quot;WallClockTimer&quot;</span>)));</div><div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;</div><div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;    <span class="comment">// start the timer</span></div><div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;    wallClockTimer.<a class="code" href="classarmnn_1_1_wall_clock_timer.xhtml#a156f3866ca69d98b4d9e6e1c1b3ec7da">Start</a>();</div><div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;</div><div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;    <span class="comment">// wait for 500 nanoseconds - 0.5 microseconds</span></div><div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;    std::this_thread::sleep_for(std::chrono::nanoseconds(500));</div><div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;</div><div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;    <span class="comment">// stop the timer</span></div><div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;    wallClockTimer.<a class="code" href="classarmnn_1_1_wall_clock_timer.xhtml#a634c58de2126b4a4e6a2a093e60e1290">Stop</a>();</div><div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;</div><div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;    CHECK((wallClockTimer.<a class="code" href="classarmnn_1_1_wall_clock_timer.xhtml#a86ea36032637c02c045f2d433036a203">GetMeasurements</a>().front().m_Name == <a class="code" href="classarmnn_1_1_wall_clock_timer.xhtml#aece42eedfcac1aa046e0dff4763b300a">WallClockTimer::WALL_CLOCK_TIME</a>));</div><div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;</div><div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;    <span class="comment">// delta is 0.5 microseconds</span></div><div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;    <span class="keyword">const</span> <span class="keyword">auto</span> delta =</div><div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;        std::chrono::duration_cast&lt;std::chrono::duration&lt;double, std::micro&gt;&gt;(std::chrono::nanoseconds(500));</div><div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;</div><div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;    <span class="comment">// check that WallClockTimer measurement should be &gt;= 0.5 microseconds</span></div><div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;    CHECK_GE(wallClockTimer.<a class="code" href="classarmnn_1_1_wall_clock_timer.xhtml#a86ea36032637c02c045f2d433036a203">GetMeasurements</a>().front().m_Value, delta.count());</div><div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;}</div><div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;</div><div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;}</div><div class="ttc" id="namespacearmnn_xhtml_a1621fb2f10314c394c9023d3e090d394"><div class="ttname"><a href="namespacearmnn.xhtml#a1621fb2f10314c394c9023d3e090d394">armnn::TEST_SUITE</a></div><div class="ttdeci">TEST_SUITE(&quot;TestConstTensorLayerVisitor&quot;)</div><div class="ttdef"><b>Definition:</b> <a href="_const_tensor_layer_visitor_8cpp_source.xhtml#l00110">ConstTensorLayerVisitor.cpp:110</a></div></div>
<div class="ttc" id="_wall_clock_timer_8hpp_xhtml"><div class="ttname"><a href="_wall_clock_timer_8hpp.xhtml">WallClockTimer.hpp</a></div></div>
<div class="ttc" id="classarmnn_1_1_wall_clock_timer_xhtml"><div class="ttname"><a href="classarmnn_1_1_wall_clock_timer.xhtml">armnn::WallClockTimer</a></div><div class="ttdef"><b>Definition:</b> <a href="_wall_clock_timer_8hpp_source.xhtml#l00038">WallClockTimer.hpp:38</a></div></div>
<div class="ttc" id="namespacearmnn_xhtml"><div class="ttname"><a href="namespacearmnn.xhtml">armnn</a></div><div class="ttdoc">Copyright (c) 2021 ARM Limited and Contributors. </div><div class="ttdef"><b>Definition:</b> <a href="01__00__quick__start_8dox_source.xhtml#l00006">01_00_quick_start.dox:6</a></div></div>
<div class="ttc" id="classarmnn_1_1_wall_clock_timer_xhtml_a156f3866ca69d98b4d9e6e1c1b3ec7da"><div class="ttname"><a href="classarmnn_1_1_wall_clock_timer.xhtml#a156f3866ca69d98b4d9e6e1c1b3ec7da">armnn::WallClockTimer::Start</a></div><div class="ttdeci">void Start() override</div><div class="ttdef"><b>Definition:</b> <a href="_wall_clock_timer_8cpp_source.xhtml#l00020">WallClockTimer.cpp:20</a></div></div>
<div class="ttc" id="classarmnn_1_1_wall_clock_timer_xhtml_ad47edad463024345ce1409153c259215"><div class="ttname"><a href="classarmnn_1_1_wall_clock_timer.xhtml#ad47edad463024345ce1409153c259215">armnn::WallClockTimer::GetName</a></div><div class="ttdeci">const char * GetName() const override</div><div class="ttdef"><b>Definition:</b> <a href="_wall_clock_timer_8cpp_source.xhtml#l00015">WallClockTimer.cpp:15</a></div></div>
<div class="ttc" id="classarmnn_1_1_wall_clock_timer_xhtml_a634c58de2126b4a4e6a2a093e60e1290"><div class="ttname"><a href="classarmnn_1_1_wall_clock_timer.xhtml#a634c58de2126b4a4e6a2a093e60e1290">armnn::WallClockTimer::Stop</a></div><div class="ttdeci">void Stop() override</div><div class="ttdef"><b>Definition:</b> <a href="_wall_clock_timer_8cpp_source.xhtml#l00025">WallClockTimer.cpp:25</a></div></div>
<div class="ttc" id="classarmnn_1_1_wall_clock_timer_xhtml_aece42eedfcac1aa046e0dff4763b300a"><div class="ttname"><a href="classarmnn_1_1_wall_clock_timer.xhtml#aece42eedfcac1aa046e0dff4763b300a">armnn::WallClockTimer::WALL_CLOCK_TIME</a></div><div class="ttdeci">static const std::string WALL_CLOCK_TIME</div><div class="ttdef"><b>Definition:</b> <a href="_wall_clock_timer_8hpp_source.xhtml#l00063">WallClockTimer.hpp:63</a></div></div>
<div class="ttc" id="classarmnn_1_1_wall_clock_timer_xhtml_a86ea36032637c02c045f2d433036a203"><div class="ttname"><a href="classarmnn_1_1_wall_clock_timer.xhtml#a86ea36032637c02c045f2d433036a203">armnn::WallClockTimer::GetMeasurements</a></div><div class="ttdeci">std::vector&lt; Measurement &gt; GetMeasurements() const override</div><div class="ttdef"><b>Definition:</b> <a href="_wall_clock_timer_8cpp_source.xhtml#l00030">WallClockTimer.cpp:30</a></div></div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="dir_68267d1309a1af8e8297ef4c3efbcdba.xhtml">src</a></li><li class="navelem"><a class="el" href="dir_e0a84d05c80a2ef4231141dcbbeac5c8.xhtml">armnn</a></li><li class="navelem"><a class="el" href="dir_9d86fd1fbecbedf5bdb69c7e7235fe5f.xhtml">test</a></li><li class="navelem"><a class="el" href="_instrument_tests_8cpp.xhtml">InstrumentTests.cpp</a></li>
    <li class="footer">Generated on Fri Jun 17 2022 13:19:42 for ArmNN by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.13 </li>
  </ul>
</div>
</body>
</html>
