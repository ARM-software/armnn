<!-- Copyright (c) 2020 ARM Limited. -->
<!--                                 -->
<!-- SPDX-License-Identifier: MIT    -->
<!--                                 -->
<!-- HTML header for doxygen 1.8.13-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.17"/>
<meta name="robots" content="NOINDEX, NOFOLLOW" />
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>ArmNN: shim/sl/canonical/ArmnnPreparedModel.hpp Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script>
<script type="text/javascript" async="async" src="http://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="stylesheet.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <img alt="ArmNN" src="Arm_NN_horizontal_blue.png" style="max-width: 10rem; margin-top: .5rem; margin-left 10px"/>
  <td style="padding-left: 0.5em;">
   <div id="projectname">
   &#160;<span id="projectnumber">23.02</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.17 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "search",false,'Search');
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(document).ready(function(){initNavTree('_armnn_prepared_model_8hpp_source.xhtml',''); initResizable(); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="headertitle">
<div class="title">ArmnnPreparedModel.hpp</div>  </div>
</div><!--header-->
<div class="contents">
<a href="_armnn_prepared_model_8hpp.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="comment">//</span></div>
<div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="comment">// Copyright Â© 2022 Arm Ltd and Contributors. All rights reserved.</span></div>
<div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="comment">// SPDX-License-Identifier: MIT</span></div>
<div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="comment">//</span></div>
<div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160; </div>
<div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="preprocessor">#pragma once</span></div>
<div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160; </div>
<div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_armnn_driver_8hpp.xhtml">ArmnnDriver.hpp</a>&quot;</span></div>
<div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_armnn_driver_impl_8hpp.xhtml">ArmnnDriverImpl.hpp</a>&quot;</span></div>
<div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_model_to_i_network_transformer_8hpp.xhtml">ModelToINetworkTransformer.hpp</a>&quot;</span></div>
<div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160; </div>
<div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;<span class="preprocessor">#include &lt;<a class="code" href="_arm_n_n_8hpp.xhtml">armnn/ArmNN.hpp</a>&gt;</span></div>
<div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160; </div>
<div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;<span class="preprocessor">#include &lt;BufferTracker.h&gt;</span></div>
<div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;<span class="preprocessor">#include &lt;CpuExecutor.h&gt;</span></div>
<div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;<span class="preprocessor">#include &lt;nnapi/IExecution.h&gt;</span></div>
<div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;<span class="preprocessor">#include &lt;nnapi/IPreparedModel.h&gt;</span></div>
<div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;<span class="preprocessor">#include &lt;nnapi/Result.h&gt;</span></div>
<div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;<span class="preprocessor">#include &lt;nnapi/Types.h&gt;</span></div>
<div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160; </div>
<div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;<span class="preprocessor">#include &lt;memory&gt;</span></div>
<div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;<span class="preprocessor">#include &lt;tuple&gt;</span></div>
<div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;<span class="preprocessor">#include &lt;utility&gt;</span></div>
<div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;<span class="preprocessor">#include &lt;vector&gt;</span></div>
<div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;<span class="preprocessor">#include &lt;string&gt;</span></div>
<div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160; </div>
<div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;<span class="keyword">namespace </span><a class="code" href="namespacearmnn__driver.xhtml">armnn_driver</a></div>
<div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;{</div>
<div class="line"><a name="l00029"></a><span class="lineno"><a class="line" href="structarmnn__driver_1_1_canonical_execution_context.xhtml">   29</a></span>&#160;    <span class="keyword">struct </span><a class="code" href="structarmnn__driver_1_1_canonical_execution_context.xhtml">CanonicalExecutionContext</a></div>
<div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;    {</div>
<div class="line"><a name="l00031"></a><span class="lineno"><a class="line" href="structarmnn__driver_1_1_canonical_execution_context.xhtml#aeb7cb4ac5b343a8eb2efd91aeee37743">   31</a></span>&#160;        ::android::nn::MeasureTiming    <a class="code" href="structarmnn__driver_1_1_canonical_execution_context.xhtml#aeb7cb4ac5b343a8eb2efd91aeee37743">measureTimings</a> =</div>
<div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;                ::android::nn::MeasureTiming::NO;</div>
<div class="line"><a name="l00033"></a><span class="lineno"><a class="line" href="structarmnn__driver_1_1_canonical_execution_context.xhtml#ab6f19cc463ef7a388af5de182a393ed2">   33</a></span>&#160;        android::nn::TimePoint <a class="code" href="structarmnn__driver_1_1_canonical_execution_context.xhtml#ab6f19cc463ef7a388af5de182a393ed2">driverStart</a>;</div>
<div class="line"><a name="l00034"></a><span class="lineno"><a class="line" href="structarmnn__driver_1_1_canonical_execution_context.xhtml#a45f03338910173fc12dd2ac19521a742">   34</a></span>&#160;        android::nn::TimePoint <a class="code" href="structarmnn__driver_1_1_canonical_execution_context.xhtml#a45f03338910173fc12dd2ac19521a742">driverEnd</a>;</div>
<div class="line"><a name="l00035"></a><span class="lineno"><a class="line" href="structarmnn__driver_1_1_canonical_execution_context.xhtml#a6da5957063ca094917c6e5bfeac65898">   35</a></span>&#160;        android::nn::TimePoint <a class="code" href="structarmnn__driver_1_1_canonical_execution_context.xhtml#a6da5957063ca094917c6e5bfeac65898">deviceStart</a>;</div>
<div class="line"><a name="l00036"></a><span class="lineno"><a class="line" href="structarmnn__driver_1_1_canonical_execution_context.xhtml#ac4711bb6ab33a33529c62c2c6842a831">   36</a></span>&#160;        android::nn::TimePoint <a class="code" href="structarmnn__driver_1_1_canonical_execution_context.xhtml#ac4711bb6ab33a33529c62c2c6842a831">deviceEnd</a>;</div>
<div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;    };</div>
<div class="line"><a name="l00038"></a><span class="lineno"><a class="line" href="classarmnn__driver_1_1_armnn_prepared_model.xhtml">   38</a></span>&#160;<span class="keyword">class </span><a class="code" href="classarmnn__driver_1_1_armnn_prepared_model.xhtml">ArmnnPreparedModel</a> final : <span class="keyword">public</span> IPreparedModel,</div>
<div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;                                 <span class="keyword">public</span> std::enable_shared_from_this&lt;ArmnnPreparedModel&gt;</div>
<div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;{</div>
<div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;<span class="keyword">public</span>:</div>
<div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;    <a class="code" href="classarmnn__driver_1_1_armnn_prepared_model.xhtml#a4905d77691ee9a2e9705e90557f64c2b">ArmnnPreparedModel</a>(<a class="code" href="namespacearmnn.xhtml#a0d8160388a127c1a23b37bc88dc6e2ec">armnn::NetworkId</a> networkId,</div>
<div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;                       <a class="code" href="classarmnn_1_1_i_runtime.xhtml">armnn::IRuntime</a>* runtime,</div>
<div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;                       <span class="keyword">const</span> <a class="code" href="namespacearmnn__driver.xhtml#a923b39ec5f83672f50289cbaf5de6798">Model</a>&amp; model,</div>
<div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;                       <span class="keyword">const</span> std::string&amp; requestInputsAndOutputsDumpDir,</div>
<div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;                       <span class="keyword">const</span> <span class="keywordtype">bool</span> gpuProfilingEnabled,</div>
<div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;                       Priority priority = Priority::MEDIUM);</div>
<div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160; </div>
<div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;    <a class="code" href="classarmnn__driver_1_1_armnn_prepared_model.xhtml#a4905d77691ee9a2e9705e90557f64c2b">ArmnnPreparedModel</a>(<a class="code" href="namespacearmnn.xhtml#a0d8160388a127c1a23b37bc88dc6e2ec">armnn::NetworkId</a> networkId,</div>
<div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;                       <a class="code" href="classarmnn_1_1_i_runtime.xhtml">armnn::IRuntime</a>* runtime,</div>
<div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;                       <span class="keyword">const</span> std::string&amp; requestInputsAndOutputsDumpDir,</div>
<div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;                       <span class="keyword">const</span> <span class="keywordtype">bool</span> gpuProfilingEnabled,</div>
<div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;                       Priority priority = Priority::MEDIUM,</div>
<div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;                       <span class="keyword">const</span> <span class="keywordtype">bool</span> prepareModelFromCache = <span class="keyword">false</span>);</div>
<div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160; </div>
<div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;    <span class="keyword">virtual</span> <a class="code" href="classarmnn__driver_1_1_armnn_prepared_model.xhtml#ac8ea5639172e7326168e2b73ed07e47e">~ArmnnPreparedModel</a>();</div>
<div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160; </div>
<div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;    ExecutionResult&lt;std::pair&lt;std::vector&lt;OutputShape&gt;, Timing&gt;&gt; <a class="code" href="classarmnn__driver_1_1_armnn_prepared_model.xhtml#a67e5c38788f9b0152baee24e8f57bc2b">execute</a>(</div>
<div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;        <span class="keyword">const</span> Request&amp; request,</div>
<div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;        MeasureTiming measureTiming,</div>
<div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;        <span class="keyword">const</span> OptionalTimePoint&amp; deadline,</div>
<div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;        <span class="keyword">const</span> OptionalDuration&amp; loopTimeoutDuration,</div>
<div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;        <span class="keyword">const</span> std::vector&lt;android::nn::TokenValuePair&gt;&amp; hints,</div>
<div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;        <span class="keyword">const</span> std::vector&lt;android::nn::ExtensionNameAndPrefix&gt;&amp; extensionNameToPrefix) <span class="keyword">const override</span>;</div>
<div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160; </div>
<div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;    GeneralResult&lt;std::pair&lt;SyncFence, ExecuteFencedInfoCallback&gt;&gt; <a class="code" href="classarmnn__driver_1_1_armnn_prepared_model.xhtml#a8d70cd869c7c1eda1c5891ba7e015661">executeFenced</a>(</div>
<div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;        <span class="keyword">const</span> Request&amp; request,</div>
<div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;        <span class="keyword">const</span> std::vector&lt;SyncFence&gt;&amp; waitFor,</div>
<div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;        MeasureTiming measureTiming,</div>
<div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;        <span class="keyword">const</span> OptionalTimePoint&amp; deadline,</div>
<div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;        <span class="keyword">const</span> OptionalDuration&amp; loopTimeoutDuration,</div>
<div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;        <span class="keyword">const</span> OptionalDuration&amp; timeoutDurationAfterFence,</div>
<div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;        <span class="keyword">const</span> std::vector&lt;android::nn::TokenValuePair&gt;&amp; hints,</div>
<div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;        <span class="keyword">const</span> std::vector&lt;android::nn::ExtensionNameAndPrefix&gt;&amp; extensionNameToPrefix) <span class="keyword">const override</span>;</div>
<div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160; </div>
<div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;    GeneralResult&lt;android::nn::SharedExecution&gt; <a class="code" href="classarmnn__driver_1_1_armnn_prepared_model.xhtml#ab108fedcef5c0d766444eb2def3b7bad">createReusableExecution</a>(</div>
<div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;        <span class="keyword">const</span> Request&amp; request,</div>
<div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;        MeasureTiming measureTiming,</div>
<div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;        <span class="keyword">const</span> OptionalDuration&amp; loopTimeoutDuration,</div>
<div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;        <span class="keyword">const</span> std::vector&lt;android::nn::TokenValuePair&gt;&amp; hints,</div>
<div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;        <span class="keyword">const</span> std::vector&lt;android::nn::ExtensionNameAndPrefix&gt;&amp; extensionNameToPrefix) <span class="keyword">const override</span>;</div>
<div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160; </div>
<div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;    GeneralResult&lt;SharedBurst&gt; <a class="code" href="classarmnn__driver_1_1_armnn_prepared_model.xhtml#a6d898cab83b5bb67f5b8f6a766ea245b">configureExecutionBurst</a>() <span class="keyword">const override</span>;</div>
<div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160; </div>
<div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;    std::any <a class="code" href="classarmnn__driver_1_1_armnn_prepared_model.xhtml#a0481f4c1ca5608339a5688daf256a4e4">getUnderlyingResource</a>() <span class="keyword">const override</span>;</div>
<div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;<span class="comment"></span> </div>
<div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;<span class="comment">    /// execute the graph prepared from the request</span></div>
<div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;<span class="comment"></span>    <a class="code" href="namespacearmnn__driver.xhtml#a1fa5070fa0d079873acaf7581de8a2ad">ErrorStatus</a> <a class="code" href="classarmnn__driver_1_1_armnn_prepared_model.xhtml#af62ba010a5b9f3187cfeb50db1dcad0a">ExecuteGraph</a>(</div>
<div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;        std::shared_ptr&lt;std::vector&lt;android::nn::RunTimePoolInfo&gt;&gt;&amp; pMemPools,</div>
<div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;        <a class="code" href="namespacearmnn.xhtml#aa01bce88f89975a5a031db4cc8861527">armnn::InputTensors</a>&amp; inputTensors,</div>
<div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;        <a class="code" href="namespacearmnn.xhtml#a8f091a512915d1cb29a4ebf13dfc53ea">armnn::OutputTensors</a>&amp; outputTensors,</div>
<div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;        <a class="code" href="structarmnn__driver_1_1_canonical_execution_context.xhtml">CanonicalExecutionContext</a>  callback,</div>
<div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;        <span class="keyword">const</span> <span class="keywordtype">bool</span> pointerMemory = <span class="keyword">false</span>) <span class="keyword">const</span>;</div>
<div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160; </div>
<div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;    Priority <a class="code" href="classarmnn__driver_1_1_armnn_prepared_model.xhtml#ac88833eb361390437abc2a81ab43d04a">GetModelPriority</a>() <span class="keyword">const</span>;</div>
<div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;<span class="comment"></span> </div>
<div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;<span class="comment">    /// Executes this model with dummy inputs (e.g. all zeroes).</span></div>
<div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;<span class="comment">    /// \return false on failure, otherwise true</span></div>
<div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;<span class="comment"></span>    <span class="keywordtype">bool</span> <a class="code" href="classarmnn__driver_1_1_armnn_prepared_model.xhtml#ad84aace3d1df79ad6fa37dcd952c085f">ExecuteWithDummyInputs</a>(<span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> numInputs, <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> numOutputs) <span class="keyword">const</span>;</div>
<div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160; </div>
<div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;<span class="keyword">private</span>:</div>
<div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;    <span class="keywordtype">void</span> Init();</div>
<div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;    <a class="code" href="namespacearmnn__driver.xhtml#a1fa5070fa0d079873acaf7581de8a2ad">ErrorStatus</a> PrepareMemoryForInputs(</div>
<div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;        <a class="code" href="namespacearmnn.xhtml#aa01bce88f89975a5a031db4cc8861527">armnn::InputTensors</a>&amp; inputs,</div>
<div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;        <span class="keyword">const</span> Request&amp; request,</div>
<div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;        <span class="keyword">const</span> std::vector&lt;android::nn::RunTimePoolInfo&gt;&amp; memPools) <span class="keyword">const</span>;</div>
<div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160; </div>
<div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;    <a class="code" href="namespacearmnn__driver.xhtml#a1fa5070fa0d079873acaf7581de8a2ad">ErrorStatus</a> PrepareMemoryForOutputs(</div>
<div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;        <a class="code" href="namespacearmnn.xhtml#a8f091a512915d1cb29a4ebf13dfc53ea">armnn::OutputTensors</a>&amp; outputs,</div>
<div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;        std::vector&lt;OutputShape&gt; &amp;outputShapes,</div>
<div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;        <span class="keyword">const</span> Request&amp; request,</div>
<div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;        <span class="keyword">const</span> std::vector&lt;android::nn::RunTimePoolInfo&gt;&amp; memPools) <span class="keyword">const</span>;</div>
<div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160; </div>
<div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;    <a class="code" href="namespacearmnn__driver.xhtml#a1fa5070fa0d079873acaf7581de8a2ad">ErrorStatus</a> PrepareMemoryForIO(<a class="code" href="namespacearmnn.xhtml#aa01bce88f89975a5a031db4cc8861527">armnn::InputTensors</a>&amp; inputs,</div>
<div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;                                   <a class="code" href="namespacearmnn.xhtml#a8f091a512915d1cb29a4ebf13dfc53ea">armnn::OutputTensors</a>&amp; outputs,</div>
<div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;                                   std::vector&lt;android::nn::RunTimePoolInfo&gt;&amp; memPools,</div>
<div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;                                   <span class="keyword">const</span> Request&amp; request,</div>
<div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;                                   <span class="keyword">const</span> <span class="keywordtype">bool</span> pointerMemory = <span class="keyword">false</span>) <span class="keyword">const</span>;</div>
<div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160; </div>
<div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;    <span class="keyword">template</span> &lt;<span class="keyword">typename</span> TensorBindingCollection&gt;</div>
<div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;    <span class="keywordtype">void</span> DumpTensorsIfRequired(<span class="keywordtype">char</span> <span class="keyword">const</span>* tensorNamePrefix, <span class="keyword">const</span> TensorBindingCollection&amp; tensorBindings) <span class="keyword">const</span>;</div>
<div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;<span class="comment"></span> </div>
<div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;<span class="comment">    /// schedule the graph prepared from the request for execution</span></div>
<div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;<span class="comment"></span>    <a class="code" href="namespacearmnn.xhtml#a0d8160388a127c1a23b37bc88dc6e2ec">armnn::NetworkId</a>                        m_NetworkId;</div>
<div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;    <a class="code" href="classarmnn_1_1_i_runtime.xhtml">armnn::IRuntime</a>*                        m_Runtime;</div>
<div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160; </div>
<div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;    <span class="keyword">const</span> <a class="code" href="namespacearmnn__driver.xhtml#a923b39ec5f83672f50289cbaf5de6798">Model</a>                             m_Model;</div>
<div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;    <span class="keyword">const</span> std::string&amp;                      m_RequestInputsAndOutputsDumpDir;</div>
<div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">bool</span>                              m_GpuProfilingEnabled;</div>
<div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;    Priority                                m_ModelPriority;</div>
<div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">bool</span>                              m_PrepareFromCache;</div>
<div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;};</div>
<div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160; </div>
<div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;}</div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<div class="ttc" id="aclassarmnn__driver_1_1_armnn_prepared_model_xhtml_a6d898cab83b5bb67f5b8f6a766ea245b"><div class="ttname"><a href="classarmnn__driver_1_1_armnn_prepared_model.xhtml#a6d898cab83b5bb67f5b8f6a766ea245b">armnn_driver::ArmnnPreparedModel::configureExecutionBurst</a></div><div class="ttdeci">GeneralResult&lt; SharedBurst &gt; configureExecutionBurst() const override</div><div class="ttdef"><b>Definition:</b> <a href="_armnn_prepared_model_8cpp_source.xhtml#l00600">ArmnnPreparedModel.cpp:600</a></div></div>
<div class="ttc" id="anamespacearmnn__driver_xhtml"><div class="ttname"><a href="namespacearmnn__driver.xhtml">armnn_driver</a></div><div class="ttdoc">Helper classes.</div><div class="ttdef"><b>Definition:</b> <a href="_armnn_device_8cpp_source.xhtml#l00037">ArmnnDevice.cpp:37</a></div></div>
<div class="ttc" id="aclassarmnn__driver_1_1_armnn_prepared_model_xhtml_af62ba010a5b9f3187cfeb50db1dcad0a"><div class="ttname"><a href="classarmnn__driver_1_1_armnn_prepared_model.xhtml#af62ba010a5b9f3187cfeb50db1dcad0a">armnn_driver::ArmnnPreparedModel::ExecuteGraph</a></div><div class="ttdeci">ErrorStatus ExecuteGraph(std::shared_ptr&lt; std::vector&lt; android::nn::RunTimePoolInfo &gt;&gt; &amp;pMemPools, armnn::InputTensors &amp;inputTensors, armnn::OutputTensors &amp;outputTensors, CanonicalExecutionContext callback, const bool pointerMemory=false) const</div><div class="ttdoc">execute the graph prepared from the request</div><div class="ttdef"><b>Definition:</b> <a href="_armnn_prepared_model_8cpp_source.xhtml#l00375">ArmnnPreparedModel.cpp:375</a></div></div>
<div class="ttc" id="astructarmnn__driver_1_1_canonical_execution_context_xhtml_aeb7cb4ac5b343a8eb2efd91aeee37743"><div class="ttname"><a href="structarmnn__driver_1_1_canonical_execution_context.xhtml#aeb7cb4ac5b343a8eb2efd91aeee37743">armnn_driver::CanonicalExecutionContext::measureTimings</a></div><div class="ttdeci">::android::nn::MeasureTiming measureTimings</div><div class="ttdef"><b>Definition:</b> <a href="_armnn_prepared_model_8hpp_source.xhtml#l00031">ArmnnPreparedModel.hpp:31</a></div></div>
<div class="ttc" id="astructarmnn__driver_1_1_canonical_execution_context_xhtml_a45f03338910173fc12dd2ac19521a742"><div class="ttname"><a href="structarmnn__driver_1_1_canonical_execution_context.xhtml#a45f03338910173fc12dd2ac19521a742">armnn_driver::CanonicalExecutionContext::driverEnd</a></div><div class="ttdeci">android::nn::TimePoint driverEnd</div><div class="ttdef"><b>Definition:</b> <a href="_armnn_prepared_model_8hpp_source.xhtml#l00034">ArmnnPreparedModel.hpp:34</a></div></div>
<div class="ttc" id="a_armnn_driver_impl_8hpp_xhtml"><div class="ttname"><a href="_armnn_driver_impl_8hpp.xhtml">ArmnnDriverImpl.hpp</a></div></div>
<div class="ttc" id="a_arm_n_n_8hpp_xhtml"><div class="ttname"><a href="_arm_n_n_8hpp.xhtml">ArmNN.hpp</a></div></div>
<div class="ttc" id="aclassarmnn__driver_1_1_armnn_prepared_model_xhtml_ac8ea5639172e7326168e2b73ed07e47e"><div class="ttname"><a href="classarmnn__driver_1_1_armnn_prepared_model.xhtml#ac8ea5639172e7326168e2b73ed07e47e">armnn_driver::ArmnnPreparedModel::~ArmnnPreparedModel</a></div><div class="ttdeci">virtual ~ArmnnPreparedModel()</div><div class="ttdef"><b>Definition:</b> <a href="_armnn_prepared_model_8cpp_source.xhtml#l00628">ArmnnPreparedModel.cpp:628</a></div></div>
<div class="ttc" id="anamespacearmnn__driver_xhtml_a923b39ec5f83672f50289cbaf5de6798"><div class="ttname"><a href="namespacearmnn__driver.xhtml#a923b39ec5f83672f50289cbaf5de6798">armnn_driver::Model</a></div><div class="ttdeci">::android::nn::Model Model</div><div class="ttdoc">Helper classes.</div><div class="ttdef"><b>Definition:</b> <a href="_conversion_utils_8hpp_source.xhtml#l00043">ConversionUtils.hpp:43</a></div></div>
<div class="ttc" id="aclassarmnn__driver_1_1_armnn_prepared_model_xhtml_a4905d77691ee9a2e9705e90557f64c2b"><div class="ttname"><a href="classarmnn__driver_1_1_armnn_prepared_model.xhtml#a4905d77691ee9a2e9705e90557f64c2b">armnn_driver::ArmnnPreparedModel::ArmnnPreparedModel</a></div><div class="ttdeci">ArmnnPreparedModel(armnn::NetworkId networkId, armnn::IRuntime *runtime, const Model &amp;model, const std::string &amp;requestInputsAndOutputsDumpDir, const bool gpuProfilingEnabled, Priority priority=Priority::MEDIUM)</div><div class="ttdef"><b>Definition:</b> <a href="_armnn_prepared_model_8cpp_source.xhtml#l00126">ArmnnPreparedModel.cpp:126</a></div></div>
<div class="ttc" id="astructarmnn__driver_1_1_canonical_execution_context_xhtml_ac4711bb6ab33a33529c62c2c6842a831"><div class="ttname"><a href="structarmnn__driver_1_1_canonical_execution_context.xhtml#ac4711bb6ab33a33529c62c2c6842a831">armnn_driver::CanonicalExecutionContext::deviceEnd</a></div><div class="ttdeci">android::nn::TimePoint deviceEnd</div><div class="ttdef"><b>Definition:</b> <a href="_armnn_prepared_model_8hpp_source.xhtml#l00036">ArmnnPreparedModel.hpp:36</a></div></div>
<div class="ttc" id="astructarmnn__driver_1_1_canonical_execution_context_xhtml_a6da5957063ca094917c6e5bfeac65898"><div class="ttname"><a href="structarmnn__driver_1_1_canonical_execution_context.xhtml#a6da5957063ca094917c6e5bfeac65898">armnn_driver::CanonicalExecutionContext::deviceStart</a></div><div class="ttdeci">android::nn::TimePoint deviceStart</div><div class="ttdef"><b>Definition:</b> <a href="_armnn_prepared_model_8hpp_source.xhtml#l00035">ArmnnPreparedModel.hpp:35</a></div></div>
<div class="ttc" id="anamespacearmnn_xhtml_aa01bce88f89975a5a031db4cc8861527"><div class="ttname"><a href="namespacearmnn.xhtml#aa01bce88f89975a5a031db4cc8861527">armnn::InputTensors</a></div><div class="ttdeci">std::vector&lt; std::pair&lt; LayerBindingId, class ConstTensor &gt; &gt; InputTensors</div><div class="ttdef"><b>Definition:</b> <a href="_tensor_8hpp_source.xhtml#l00392">Tensor.hpp:392</a></div></div>
<div class="ttc" id="astructarmnn__driver_1_1_canonical_execution_context_xhtml_ab6f19cc463ef7a388af5de182a393ed2"><div class="ttname"><a href="structarmnn__driver_1_1_canonical_execution_context.xhtml#ab6f19cc463ef7a388af5de182a393ed2">armnn_driver::CanonicalExecutionContext::driverStart</a></div><div class="ttdeci">android::nn::TimePoint driverStart</div><div class="ttdef"><b>Definition:</b> <a href="_armnn_prepared_model_8hpp_source.xhtml#l00033">ArmnnPreparedModel.hpp:33</a></div></div>
<div class="ttc" id="aclassarmnn__driver_1_1_armnn_prepared_model_xhtml"><div class="ttname"><a href="classarmnn__driver_1_1_armnn_prepared_model.xhtml">armnn_driver::ArmnnPreparedModel</a></div><div class="ttdef"><b>Definition:</b> <a href="_armnn_prepared_model_8hpp_source.xhtml#l00038">ArmnnPreparedModel.hpp:38</a></div></div>
<div class="ttc" id="anamespacearmnn_xhtml_a0d8160388a127c1a23b37bc88dc6e2ec"><div class="ttname"><a href="namespacearmnn.xhtml#a0d8160388a127c1a23b37bc88dc6e2ec">armnn::NetworkId</a></div><div class="ttdeci">int NetworkId</div><div class="ttdef"><b>Definition:</b> <a href="_i_runtime_8hpp_source.xhtml#l00035">IRuntime.hpp:35</a></div></div>
<div class="ttc" id="a_armnn_driver_8hpp_xhtml"><div class="ttname"><a href="_armnn_driver_8hpp.xhtml">ArmnnDriver.hpp</a></div></div>
<div class="ttc" id="anamespacearmnn__driver_xhtml_a1fa5070fa0d079873acaf7581de8a2ad"><div class="ttname"><a href="namespacearmnn__driver.xhtml#a1fa5070fa0d079873acaf7581de8a2ad">armnn_driver::ErrorStatus</a></div><div class="ttdeci">::android::nn::ErrorStatus ErrorStatus</div><div class="ttdef"><b>Definition:</b> <a href="_conversion_utils_8hpp_source.xhtml#l00049">ConversionUtils.hpp:49</a></div></div>
<div class="ttc" id="aclassarmnn__driver_1_1_armnn_prepared_model_xhtml_ab108fedcef5c0d766444eb2def3b7bad"><div class="ttname"><a href="classarmnn__driver_1_1_armnn_prepared_model.xhtml#ab108fedcef5c0d766444eb2def3b7bad">armnn_driver::ArmnnPreparedModel::createReusableExecution</a></div><div class="ttdeci">GeneralResult&lt; android::nn::SharedExecution &gt; createReusableExecution(const Request &amp;request, MeasureTiming measureTiming, const OptionalDuration &amp;loopTimeoutDuration, const std::vector&lt; android::nn::TokenValuePair &gt; &amp;hints, const std::vector&lt; android::nn::ExtensionNameAndPrefix &gt; &amp;extensionNameToPrefix) const override</div><div class="ttdef"><b>Definition:</b> <a href="_armnn_prepared_model_8cpp_source.xhtml#l00586">ArmnnPreparedModel.cpp:586</a></div></div>
<div class="ttc" id="aclassarmnn__driver_1_1_armnn_prepared_model_xhtml_ac88833eb361390437abc2a81ab43d04a"><div class="ttname"><a href="classarmnn__driver_1_1_armnn_prepared_model.xhtml#ac88833eb361390437abc2a81ab43d04a">armnn_driver::ArmnnPreparedModel::GetModelPriority</a></div><div class="ttdeci">Priority GetModelPriority() const</div><div class="ttdef"><b>Definition:</b> <a href="_armnn_prepared_model_8cpp_source.xhtml#l00472">ArmnnPreparedModel.cpp:472</a></div></div>
<div class="ttc" id="aclassarmnn_1_1_i_runtime_xhtml"><div class="ttname"><a href="classarmnn_1_1_i_runtime.xhtml">armnn::IRuntime</a></div><div class="ttdef"><b>Definition:</b> <a href="_i_runtime_8hpp_source.xhtml#l00082">IRuntime.hpp:82</a></div></div>
<div class="ttc" id="anamespacearmnn_xhtml_a8f091a512915d1cb29a4ebf13dfc53ea"><div class="ttname"><a href="namespacearmnn.xhtml#a8f091a512915d1cb29a4ebf13dfc53ea">armnn::OutputTensors</a></div><div class="ttdeci">std::vector&lt; std::pair&lt; LayerBindingId, class Tensor &gt; &gt; OutputTensors</div><div class="ttdef"><b>Definition:</b> <a href="_tensor_8hpp_source.xhtml#l00393">Tensor.hpp:393</a></div></div>
<div class="ttc" id="astructarmnn__driver_1_1_canonical_execution_context_xhtml"><div class="ttname"><a href="structarmnn__driver_1_1_canonical_execution_context.xhtml">armnn_driver::CanonicalExecutionContext</a></div><div class="ttdef"><b>Definition:</b> <a href="_armnn_prepared_model_8hpp_source.xhtml#l00029">ArmnnPreparedModel.hpp:29</a></div></div>
<div class="ttc" id="a_model_to_i_network_transformer_8hpp_xhtml"><div class="ttname"><a href="_model_to_i_network_transformer_8hpp.xhtml">ModelToINetworkTransformer.hpp</a></div></div>
<div class="ttc" id="aclassarmnn__driver_1_1_armnn_prepared_model_xhtml_a8d70cd869c7c1eda1c5891ba7e015661"><div class="ttname"><a href="classarmnn__driver_1_1_armnn_prepared_model.xhtml#a8d70cd869c7c1eda1c5891ba7e015661">armnn_driver::ArmnnPreparedModel::executeFenced</a></div><div class="ttdeci">GeneralResult&lt; std::pair&lt; SyncFence, ExecuteFencedInfoCallback &gt; &gt; executeFenced(const Request &amp;request, const std::vector&lt; SyncFence &gt; &amp;waitFor, MeasureTiming measureTiming, const OptionalTimePoint &amp;deadline, const OptionalDuration &amp;loopTimeoutDuration, const OptionalDuration &amp;timeoutDurationAfterFence, const std::vector&lt; android::nn::TokenValuePair &gt; &amp;hints, const std::vector&lt; android::nn::ExtensionNameAndPrefix &gt; &amp;extensionNameToPrefix) const override</div><div class="ttdef"><b>Definition:</b> <a href="_armnn_prepared_model_8cpp_source.xhtml#l00478">ArmnnPreparedModel.cpp:478</a></div></div>
<div class="ttc" id="aclassarmnn__driver_1_1_armnn_prepared_model_xhtml_a67e5c38788f9b0152baee24e8f57bc2b"><div class="ttname"><a href="classarmnn__driver_1_1_armnn_prepared_model.xhtml#a67e5c38788f9b0152baee24e8f57bc2b">armnn_driver::ArmnnPreparedModel::execute</a></div><div class="ttdeci">ExecutionResult&lt; std::pair&lt; std::vector&lt; OutputShape &gt;, Timing &gt; &gt; execute(const Request &amp;request, MeasureTiming measureTiming, const OptionalTimePoint &amp;deadline, const OptionalDuration &amp;loopTimeoutDuration, const std::vector&lt; android::nn::TokenValuePair &gt; &amp;hints, const std::vector&lt; android::nn::ExtensionNameAndPrefix &gt; &amp;extensionNameToPrefix) const override</div><div class="ttdef"><b>Definition:</b> <a href="_armnn_prepared_model_8cpp_source.xhtml#l00295">ArmnnPreparedModel.cpp:295</a></div></div>
<div class="ttc" id="aclassarmnn__driver_1_1_armnn_prepared_model_xhtml_ad84aace3d1df79ad6fa37dcd952c085f"><div class="ttname"><a href="classarmnn__driver_1_1_armnn_prepared_model.xhtml#ad84aace3d1df79ad6fa37dcd952c085f">armnn_driver::ArmnnPreparedModel::ExecuteWithDummyInputs</a></div><div class="ttdeci">bool ExecuteWithDummyInputs(unsigned int numInputs, unsigned int numOutputs) const</div><div class="ttdoc">Executes this model with dummy inputs (e.g.</div><div class="ttdef"><b>Definition:</b> <a href="_armnn_prepared_model_8cpp_source.xhtml#l00648">ArmnnPreparedModel.cpp:648</a></div></div>
<div class="ttc" id="aclassarmnn__driver_1_1_armnn_prepared_model_xhtml_a0481f4c1ca5608339a5688daf256a4e4"><div class="ttname"><a href="classarmnn__driver_1_1_armnn_prepared_model.xhtml#a0481f4c1ca5608339a5688daf256a4e4">armnn_driver::ArmnnPreparedModel::getUnderlyingResource</a></div><div class="ttdeci">std::any getUnderlyingResource() const override</div><div class="ttdef"><b>Definition:</b> <a href="_armnn_prepared_model_8cpp_source.xhtml#l00606">ArmnnPreparedModel.cpp:606</a></div></div>
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="dir_b4dbf96392bc72a402a7206cbda88a03.xhtml">shim</a></li><li class="navelem"><a class="el" href="dir_09eea26cf0279feb9fcfb9b796a3e57e.xhtml">sl</a></li><li class="navelem"><a class="el" href="dir_6de13b49022bb7cfc6557e28050d5cbe.xhtml">canonical</a></li><li class="navelem"><a class="el" href="_armnn_prepared_model_8hpp.xhtml">ArmnnPreparedModel.hpp</a></li>
    <li class="footer">Generated on Wed Mar 22 2023 15:52:59 for ArmNN by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.17 </li>
  </ul>
</div>
</body>
</html>
