<!-- Copyright (c) 2020 ARM Limited. -->
<!--                                 -->
<!-- SPDX-License-Identifier: MIT    -->
<!--                                 -->
<!-- HTML header for doxygen 1.8.13-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.13"/>
<meta name="robots" content="NOINDEX, NOFOLLOW" />
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>ArmNN: src/armnn/LayersFwd.hpp Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script><script type="text/javascript" src="http://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="stylesheet.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <img alt="ArmNN" src="Arm_NN_horizontal_blue.png" style="max-width: 10rem; margin-top: .5rem; margin-left 10px"/>
  <td style="padding-left: 0.5em;">
   <div id="projectname">
   &#160;<span id="projectnumber">22.11</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.13 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
$(document).ready(function(){initNavTree('_layers_fwd_8hpp_source.xhtml','');});
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="headertitle">
<div class="title">LayersFwd.hpp</div>  </div>
</div><!--header-->
<div class="contents">
<a href="_layers_fwd_8hpp.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="comment">//</span></div><div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="comment">// Copyright Â© 2017 Arm Ltd and Contributors. All rights reserved.</span></div><div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="comment">// SPDX-License-Identifier: MIT</span></div><div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="comment">//</span></div><div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="preprocessor">#pragma once</span></div><div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;</div><div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_internal_types_8hpp.xhtml">InternalTypes.hpp</a>&quot;</span></div><div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;</div><div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_activation_layer_8hpp.xhtml">layers/ActivationLayer.hpp</a>&quot;</span></div><div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_addition_layer_8hpp.xhtml">layers/AdditionLayer.hpp</a>&quot;</span></div><div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_arg_min_max_layer_8hpp.xhtml">layers/ArgMinMaxLayer.hpp</a>&quot;</span></div><div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_batch_mat_mul_layer_8hpp.xhtml">layers/BatchMatMulLayer.hpp</a>&quot;</span></div><div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_batch_normalization_layer_8hpp.xhtml">layers/BatchNormalizationLayer.hpp</a>&quot;</span></div><div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_batch_to_space_nd_layer_8hpp.xhtml">layers/BatchToSpaceNdLayer.hpp</a>&quot;</span></div><div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_cast_layer_8hpp.xhtml">layers/CastLayer.hpp</a>&quot;</span></div><div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_channel_shuffle_layer_8hpp.xhtml">layers/ChannelShuffleLayer.hpp</a>&quot;</span></div><div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_comparison_layer_8hpp.xhtml">layers/ComparisonLayer.hpp</a>&quot;</span></div><div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_concat_layer_8hpp.xhtml">layers/ConcatLayer.hpp</a>&quot;</span></div><div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_constant_layer_8hpp.xhtml">layers/ConstantLayer.hpp</a>&quot;</span></div><div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_convert_bf16_to_fp32_layer_8hpp.xhtml">layers/ConvertBf16ToFp32Layer.hpp</a>&quot;</span></div><div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_convert_fp16_to_fp32_layer_8hpp.xhtml">layers/ConvertFp16ToFp32Layer.hpp</a>&quot;</span></div><div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_convert_fp32_to_bf16_layer_8hpp.xhtml">layers/ConvertFp32ToBf16Layer.hpp</a>&quot;</span></div><div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_convert_fp32_to_fp16_layer_8hpp.xhtml">layers/ConvertFp32ToFp16Layer.hpp</a>&quot;</span></div><div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_convolution2d_layer_8hpp.xhtml">layers/Convolution2dLayer.hpp</a>&quot;</span></div><div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_convolution3d_layer_8hpp.xhtml">layers/Convolution3dLayer.hpp</a>&quot;</span></div><div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_debug_layer_8hpp.xhtml">layers/DebugLayer.hpp</a>&quot;</span></div><div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_depth_to_space_layer_8hpp.xhtml">layers/DepthToSpaceLayer.hpp</a>&quot;</span></div><div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_depthwise_convolution2d_layer_8hpp.xhtml">layers/DepthwiseConvolution2dLayer.hpp</a>&quot;</span></div><div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_dequantize_layer_8hpp.xhtml">layers/DequantizeLayer.hpp</a>&quot;</span></div><div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_detection_post_process_layer_8hpp.xhtml">layers/DetectionPostProcessLayer.hpp</a>&quot;</span></div><div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_division_layer_8hpp.xhtml">layers/DivisionLayer.hpp</a>&quot;</span></div><div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_elementwise_unary_layer_8hpp.xhtml">layers/ElementwiseUnaryLayer.hpp</a>&quot;</span></div><div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_fake_quantization_layer_8hpp.xhtml">layers/FakeQuantizationLayer.hpp</a>&quot;</span></div><div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_fill_layer_8hpp.xhtml">layers/FillLayer.hpp</a>&quot;</span></div><div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_floor_layer_8hpp.xhtml">layers/FloorLayer.hpp</a>&quot;</span></div><div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_fully_connected_layer_8hpp.xhtml">layers/FullyConnectedLayer.hpp</a>&quot;</span></div><div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_gather_layer_8hpp.xhtml">layers/GatherLayer.hpp</a>&quot;</span></div><div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_gather_nd_layer_8hpp.xhtml">layers/GatherNdLayer.hpp</a>&quot;</span></div><div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_input_layer_8hpp.xhtml">layers/InputLayer.hpp</a>&quot;</span></div><div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_instance_normalization_layer_8hpp.xhtml">layers/InstanceNormalizationLayer.hpp</a>&quot;</span></div><div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_l2_normalization_layer_8hpp.xhtml">layers/L2NormalizationLayer.hpp</a>&quot;</span></div><div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_logical_binary_layer_8hpp.xhtml">layers/LogicalBinaryLayer.hpp</a>&quot;</span></div><div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_log_softmax_layer_8hpp.xhtml">layers/LogSoftmaxLayer.hpp</a>&quot;</span></div><div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_lstm_layer_8hpp.xhtml">layers/LstmLayer.hpp</a>&quot;</span></div><div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_map_layer_8hpp.xhtml">layers/MapLayer.hpp</a>&quot;</span></div><div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_maximum_layer_8hpp.xhtml">layers/MaximumLayer.hpp</a>&quot;</span></div><div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_mean_layer_8hpp.xhtml">layers/MeanLayer.hpp</a>&quot;</span></div><div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_mem_copy_layer_8hpp.xhtml">layers/MemCopyLayer.hpp</a>&quot;</span></div><div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_mem_import_layer_8hpp.xhtml">layers/MemImportLayer.hpp</a>&quot;</span></div><div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_merge_layer_8hpp.xhtml">layers/MergeLayer.hpp</a>&quot;</span></div><div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_minimum_layer_8hpp.xhtml">layers/MinimumLayer.hpp</a>&quot;</span></div><div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_multiplication_layer_8hpp.xhtml">layers/MultiplicationLayer.hpp</a>&quot;</span></div><div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_normalization_layer_8hpp.xhtml">layers/NormalizationLayer.hpp</a>&quot;</span></div><div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_output_layer_8hpp.xhtml">layers/OutputLayer.hpp</a>&quot;</span></div><div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_pad_layer_8hpp.xhtml">layers/PadLayer.hpp</a>&quot;</span></div><div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_permute_layer_8hpp.xhtml">layers/PermuteLayer.hpp</a>&quot;</span></div><div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_pooling2d_layer_8hpp.xhtml">layers/Pooling2dLayer.hpp</a>&quot;</span></div><div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_pooling3d_layer_8hpp.xhtml">layers/Pooling3dLayer.hpp</a>&quot;</span></div><div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_pre_compiled_layer_8hpp.xhtml">layers/PreCompiledLayer.hpp</a>&quot;</span></div><div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_prelu_layer_8hpp.xhtml">layers/PreluLayer.hpp</a>&quot;</span></div><div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_quantize_layer_8hpp.xhtml">layers/QuantizeLayer.hpp</a>&quot;</span></div><div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_q_lstm_layer_8hpp.xhtml">layers/QLstmLayer.hpp</a>&quot;</span></div><div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_quantized_lstm_layer_8hpp.xhtml">layers/QuantizedLstmLayer.hpp</a>&quot;</span></div><div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_rank_layer_8hpp.xhtml">layers/RankLayer.hpp</a>&quot;</span></div><div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_reduce_layer_8hpp.xhtml">layers/ReduceLayer.hpp</a>&quot;</span></div><div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_reshape_layer_8hpp.xhtml">layers/ReshapeLayer.hpp</a>&quot;</span></div><div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_resize_layer_8hpp.xhtml">layers/ResizeLayer.hpp</a>&quot;</span></div><div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_shape_layer_8hpp.xhtml">layers/ShapeLayer.hpp</a>&quot;</span></div><div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_slice_layer_8hpp.xhtml">layers/SliceLayer.hpp</a>&quot;</span></div><div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_softmax_layer_8hpp.xhtml">layers/SoftmaxLayer.hpp</a>&quot;</span></div><div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_space_to_batch_nd_layer_8hpp.xhtml">layers/SpaceToBatchNdLayer.hpp</a>&quot;</span></div><div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_space_to_depth_layer_8hpp.xhtml">layers/SpaceToDepthLayer.hpp</a>&quot;</span></div><div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_splitter_layer_8hpp.xhtml">layers/SplitterLayer.hpp</a>&quot;</span></div><div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_stack_layer_8hpp.xhtml">layers/StackLayer.hpp</a>&quot;</span></div><div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_stand_in_layer_8hpp.xhtml">layers/StandInLayer.hpp</a>&quot;</span></div><div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_strided_slice_layer_8hpp.xhtml">layers/StridedSliceLayer.hpp</a>&quot;</span></div><div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_subtraction_layer_8hpp.xhtml">layers/SubtractionLayer.hpp</a>&quot;</span></div><div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_switch_layer_8hpp.xhtml">layers/SwitchLayer.hpp</a>&quot;</span></div><div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_transpose_convolution2d_layer_8hpp.xhtml">layers/TransposeConvolution2dLayer.hpp</a>&quot;</span></div><div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_transpose_layer_8hpp.xhtml">layers/TransposeLayer.hpp</a>&quot;</span></div><div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_unidirectional_sequence_lstm_layer_8hpp.xhtml">layers/UnidirectionalSequenceLstmLayer.hpp</a>&quot;</span></div><div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_unmap_layer_8hpp.xhtml">layers/UnmapLayer.hpp</a>&quot;</span></div><div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;</div><div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;<span class="keyword">namespace </span><a class="code" href="namespacearmnn.xhtml">armnn</a></div><div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;{</div><div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;</div><div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;<span class="keyword">template</span> &lt;LayerType Type&gt;</div><div class="line"><a name="l00088"></a><span class="lineno"><a class="line" href="structarmnn_1_1_layer_type_of_impl.xhtml">   88</a></span>&#160;<span class="keyword">struct </span><a class="code" href="structarmnn_1_1_layer_type_of_impl.xhtml">LayerTypeOfImpl</a>;</div><div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;</div><div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;<span class="keyword">template</span> &lt;LayerType Type&gt;</div><div class="line"><a name="l00091"></a><span class="lineno"><a class="line" href="namespacearmnn.xhtml#a6b5db6cc9aad8ec0ac7b14f859aacdab">   91</a></span>&#160;<span class="keyword">using</span> <a class="code" href="namespacearmnn.xhtml#a6b5db6cc9aad8ec0ac7b14f859aacdab">LayerTypeOf</a> = <span class="keyword">typename</span> <a class="code" href="structarmnn_1_1_layer_type_of_impl.xhtml">LayerTypeOfImpl&lt;Type&gt;::Type</a>;</div><div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;</div><div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt;</div><div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;constexpr <a class="code" href="namespacearmnn.xhtml#a56943a0946e5f15e5e58054b8e7a04a4">LayerType</a> <a class="code" href="namespacearmnn.xhtml#ac4fb1513cf6f4f3f40ab3d6559ec4067">LayerEnumOf</a>(<span class="keyword">const</span> T* = <span class="keyword">nullptr</span>);</div><div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;</div><div class="line"><a name="l00096"></a><span class="lineno"><a class="line" href="_layers_fwd_8hpp.xhtml#aa4c29d874deb128391826e87b8bb0ff6">   96</a></span>&#160;<span class="preprocessor">#define DECLARE_LAYER_IMPL(_, LayerName)                     \</span></div><div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;<span class="preprocessor">    class LayerName##Layer;                                  \</span></div><div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;<span class="preprocessor">    template &lt;&gt;                                              \</span></div><div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;<span class="preprocessor">    struct LayerTypeOfImpl&lt;LayerType::_##LayerName&gt;          \</span></div><div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;<span class="preprocessor">    {                                                        \</span></div><div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;<span class="preprocessor">        using Type = LayerName##Layer;                       \</span></div><div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;<span class="preprocessor">    };                                                       \</span></div><div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;<span class="preprocessor">    template &lt;&gt;                                              \</span></div><div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;<span class="preprocessor">    constexpr LayerType LayerEnumOf(const LayerName##Layer*) \</span></div><div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;<span class="preprocessor">    {                                                        \</span></div><div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;<span class="preprocessor">        return LayerType::_##LayerName;                      \</span></div><div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;<span class="preprocessor">    }</span></div><div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;</div><div class="line"><a name="l00109"></a><span class="lineno"><a class="line" href="_layers_fwd_8hpp.xhtml#a463a20a2d0283b17eb95358102c8c9e1">  109</a></span>&#160;<span class="preprocessor">#define DECLARE_LAYER(LayerName) DECLARE_LAYER_IMPL(, LayerName)</span></div><div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;</div><div class="line"><a name="l00111"></a><span class="lineno"><a class="line" href="namespacearmnn.xhtml#afb1e69829289fb07cc349c0884f27abd">  111</a></span>&#160;<a class="code" href="_layers_fwd_8hpp.xhtml#a463a20a2d0283b17eb95358102c8c9e1">DECLARE_LAYER</a>(<a class="code" href="namespacearmnn.xhtml#a7636fbbc4f8ea2d0cf9f3ac2d12a4c62">Activation</a>)</div><div class="line"><a name="l00112"></a><span class="lineno"><a class="line" href="namespacearmnn.xhtml#acc630e11a5baa28ad5723568a7a60109">  112</a></span>&#160;<a class="code" href="_layers_fwd_8hpp.xhtml#a463a20a2d0283b17eb95358102c8c9e1">DECLARE_LAYER</a>(Addition)</div><div class="line"><a name="l00113"></a><span class="lineno"><a class="line" href="namespacearmnn.xhtml#a324e860c347972fce7a1c07531bed06e">  113</a></span>&#160;<a class="code" href="_layers_fwd_8hpp.xhtml#a463a20a2d0283b17eb95358102c8c9e1">DECLARE_LAYER</a>(<a class="code" href="namespacearmnn.xhtml#ad441be836a142e8935e0413f4a22c9ec">ArgMinMax</a>)</div><div class="line"><a name="l00114"></a><span class="lineno"><a class="line" href="namespacearmnn.xhtml#a317945cbed8d24f155e43d976a355c14">  114</a></span>&#160;<a class="code" href="_layers_fwd_8hpp.xhtml#a463a20a2d0283b17eb95358102c8c9e1">DECLARE_LAYER</a>(<a class="code" href="classarmnn_1_1_batch_mat_mul.xhtml">BatchMatMul</a>)</div><div class="line"><a name="l00115"></a><span class="lineno"><a class="line" href="namespacearmnn.xhtml#ae22db3ab5196edbb2e4e5244adc512e3">  115</a></span>&#160;<a class="code" href="_layers_fwd_8hpp.xhtml#a463a20a2d0283b17eb95358102c8c9e1">DECLARE_LAYER</a>(BatchNormalization)</div><div class="line"><a name="l00116"></a><span class="lineno"><a class="line" href="namespacearmnn.xhtml#a87ffe3fb58ec36989d343e53e23fb0f8">  116</a></span>&#160;<a class="code" href="_layers_fwd_8hpp.xhtml#a463a20a2d0283b17eb95358102c8c9e1">DECLARE_LAYER</a>(<a class="code" href="namespacearmnn.xhtml#a8746512fab5ec10c2c57800c66311ba7">BatchToSpaceNd</a>)</div><div class="line"><a name="l00117"></a><span class="lineno"><a class="line" href="namespacearmnn.xhtml#a0bce3e1a80419bc6966f60c8f2db9b92">  117</a></span>&#160;<a class="code" href="_layers_fwd_8hpp.xhtml#a463a20a2d0283b17eb95358102c8c9e1">DECLARE_LAYER</a>(Cast)</div><div class="line"><a name="l00118"></a><span class="lineno"><a class="line" href="namespacearmnn.xhtml#af99801cff508d065bede5283a0ea1dc9">  118</a></span>&#160;<a class="code" href="_layers_fwd_8hpp.xhtml#a463a20a2d0283b17eb95358102c8c9e1">DECLARE_LAYER</a>(ChannelShuffle)</div><div class="line"><a name="l00119"></a><span class="lineno"><a class="line" href="namespacearmnn.xhtml#a43b8024cb70c07116be132ca28b12a21">  119</a></span>&#160;<a class="code" href="_layers_fwd_8hpp.xhtml#a463a20a2d0283b17eb95358102c8c9e1">DECLARE_LAYER</a>(Comparison)</div><div class="line"><a name="l00120"></a><span class="lineno"><a class="line" href="namespacearmnn.xhtml#a300c356944bb1e9d2dff6191d1c3501c">  120</a></span>&#160;<a class="code" href="_layers_fwd_8hpp.xhtml#a463a20a2d0283b17eb95358102c8c9e1">DECLARE_LAYER</a>(Concat)</div><div class="line"><a name="l00121"></a><span class="lineno"><a class="line" href="namespacearmnn.xhtml#a307007c2249288fe158bfdfaf9e1c413">  121</a></span>&#160;<a class="code" href="_layers_fwd_8hpp.xhtml#a463a20a2d0283b17eb95358102c8c9e1">DECLARE_LAYER</a>(Constant)</div><div class="line"><a name="l00122"></a><span class="lineno"><a class="line" href="namespacearmnn.xhtml#ac5837b21d9501669ef31d1a74661671c">  122</a></span>&#160;<a class="code" href="_layers_fwd_8hpp.xhtml#a463a20a2d0283b17eb95358102c8c9e1">DECLARE_LAYER</a>(ConvertBf16ToFp32)</div><div class="line"><a name="l00123"></a><span class="lineno"><a class="line" href="namespacearmnn.xhtml#a4471d39d8390fc550c1f8688639e66f5">  123</a></span>&#160;<a class="code" href="_layers_fwd_8hpp.xhtml#a463a20a2d0283b17eb95358102c8c9e1">DECLARE_LAYER</a>(ConvertFp16ToFp32)</div><div class="line"><a name="l00124"></a><span class="lineno"><a class="line" href="namespacearmnn.xhtml#afa4c37edb872b9dd64f0f0153a93e43f">  124</a></span>&#160;<a class="code" href="_layers_fwd_8hpp.xhtml#a463a20a2d0283b17eb95358102c8c9e1">DECLARE_LAYER</a>(ConvertFp32ToBf16)</div><div class="line"><a name="l00125"></a><span class="lineno"><a class="line" href="namespacearmnn.xhtml#af8df06bed5f1257864645e45948afa5c">  125</a></span>&#160;<a class="code" href="_layers_fwd_8hpp.xhtml#a463a20a2d0283b17eb95358102c8c9e1">DECLARE_LAYER</a>(ConvertFp32ToFp16)</div><div class="line"><a name="l00126"></a><span class="lineno"><a class="line" href="namespacearmnn.xhtml#ab2f52d0c728933e36f581a07676d9fe9">  126</a></span>&#160;<a class="code" href="_layers_fwd_8hpp.xhtml#a463a20a2d0283b17eb95358102c8c9e1">DECLARE_LAYER</a>(Convolution2d)</div><div class="line"><a name="l00127"></a><span class="lineno"><a class="line" href="namespacearmnn.xhtml#a8aa8025b92a7d302536ab63c1f0ea99c">  127</a></span>&#160;<a class="code" href="_layers_fwd_8hpp.xhtml#a463a20a2d0283b17eb95358102c8c9e1">DECLARE_LAYER</a>(Convolution3d)</div><div class="line"><a name="l00128"></a><span class="lineno"><a class="line" href="namespacearmnn.xhtml#ad596268fcd03c87a4b6fde86f4732546">  128</a></span>&#160;<a class="code" href="_layers_fwd_8hpp.xhtml#a463a20a2d0283b17eb95358102c8c9e1">DECLARE_LAYER</a>(<a class="code" href="namespacearmnn.xhtml#a181ecb133401da6ff2916c192ca04d48">Debug</a>)</div><div class="line"><a name="l00129"></a><span class="lineno"><a class="line" href="namespacearmnn.xhtml#a939154289f544a02baec0735b27b8894">  129</a></span>&#160;<a class="code" href="_layers_fwd_8hpp.xhtml#a463a20a2d0283b17eb95358102c8c9e1">DECLARE_LAYER</a>(<a class="code" href="namespacearmnn.xhtml#ab023d9a7687e35c0f108458a094c1f56">DepthToSpace</a>)</div><div class="line"><a name="l00130"></a><span class="lineno"><a class="line" href="namespacearmnn.xhtml#a26a46c27bca08b5bd26abba341f1d795">  130</a></span>&#160;<a class="code" href="_layers_fwd_8hpp.xhtml#a463a20a2d0283b17eb95358102c8c9e1">DECLARE_LAYER</a>(DepthwiseConvolution2d)</div><div class="line"><a name="l00131"></a><span class="lineno"><a class="line" href="namespacearmnn.xhtml#a95e2d190d7483017b4f4841dd07776e5">  131</a></span>&#160;<a class="code" href="_layers_fwd_8hpp.xhtml#a463a20a2d0283b17eb95358102c8c9e1">DECLARE_LAYER</a>(<a class="code" href="namespacearmnn.xhtml#a855293b1be0581fb61ef6a1c5b027d0f">Dequantize</a>)</div><div class="line"><a name="l00132"></a><span class="lineno"><a class="line" href="namespacearmnn.xhtml#a22772d461066f995cd72d13066b0f46d">  132</a></span>&#160;<a class="code" href="_layers_fwd_8hpp.xhtml#a463a20a2d0283b17eb95358102c8c9e1">DECLARE_LAYER</a>(<a class="code" href="namespacearmnn.xhtml#ae76ce23fa9fc18e56448d52b37dd3f32">DetectionPostProcess</a>)</div><div class="line"><a name="l00133"></a><span class="lineno"><a class="line" href="namespacearmnn.xhtml#a955b1001b8c57c60ce443a1e31468f20">  133</a></span>&#160;<a class="code" href="_layers_fwd_8hpp.xhtml#a463a20a2d0283b17eb95358102c8c9e1">DECLARE_LAYER</a>(Division)</div><div class="line"><a name="l00134"></a><span class="lineno"><a class="line" href="namespacearmnn.xhtml#a72f7601d11f32c8d9ccb49a80fcf662a">  134</a></span>&#160;<a class="code" href="_layers_fwd_8hpp.xhtml#a463a20a2d0283b17eb95358102c8c9e1">DECLARE_LAYER</a>(ElementwiseUnary)</div><div class="line"><a name="l00135"></a><span class="lineno"><a class="line" href="namespacearmnn.xhtml#a4acae0cdcdfab8e941af5c4e42e58cb3">  135</a></span>&#160;<a class="code" href="_layers_fwd_8hpp.xhtml#a463a20a2d0283b17eb95358102c8c9e1">DECLARE_LAYER</a>(<a class="code" href="namespacearmnn.xhtml#ab3c0b7e1a78b1b98c24934221f36a7c3">FakeQuantization</a>)</div><div class="line"><a name="l00136"></a><span class="lineno"><a class="line" href="namespacearmnn.xhtml#a12fdb9a7f3cb197316e3e67e036216dc">  136</a></span>&#160;<a class="code" href="_layers_fwd_8hpp.xhtml#a463a20a2d0283b17eb95358102c8c9e1">DECLARE_LAYER</a>(<a class="code" href="namespacearmnn.xhtml#a88bebdfe6309aa2cd6831cfa73c296f0">Fill</a>)</div><div class="line"><a name="l00137"></a><span class="lineno"><a class="line" href="namespacearmnn.xhtml#a575f5487e62465b6b9edbc447a26f32f">  137</a></span>&#160;<a class="code" href="_layers_fwd_8hpp.xhtml#a463a20a2d0283b17eb95358102c8c9e1">DECLARE_LAYER</a>(Floor)</div><div class="line"><a name="l00138"></a><span class="lineno"><a class="line" href="namespacearmnn.xhtml#aa689e4a3aa77e9d9e5851f566c5eb8b3">  138</a></span>&#160;<a class="code" href="_layers_fwd_8hpp.xhtml#a463a20a2d0283b17eb95358102c8c9e1">DECLARE_LAYER</a>(<a class="code" href="namespacearmnn.xhtml#a435f9350a94adfbb0d5b9abb5f430914">FullyConnected</a>)</div><div class="line"><a name="l00139"></a><span class="lineno"><a class="line" href="namespacearmnn.xhtml#a548fb17a9bff172e751ae4bd3add62b5">  139</a></span>&#160;<a class="code" href="_layers_fwd_8hpp.xhtml#a463a20a2d0283b17eb95358102c8c9e1">DECLARE_LAYER</a>(<a class="code" href="namespacearmnn.xhtml#a38c9c1724b660b2558a19895b681a8fb">Gather</a>)</div><div class="line"><a name="l00140"></a><span class="lineno"><a class="line" href="namespacearmnn.xhtml#af786ed151cee66263c0ce890d11d15c9">  140</a></span>&#160;<a class="code" href="_layers_fwd_8hpp.xhtml#a463a20a2d0283b17eb95358102c8c9e1">DECLARE_LAYER</a>(GatherNd)</div><div class="line"><a name="l00141"></a><span class="lineno"><a class="line" href="namespacearmnn.xhtml#adef1c8c63daa9d348a29e74eac33a054">  141</a></span>&#160;<a class="code" href="_layers_fwd_8hpp.xhtml#a463a20a2d0283b17eb95358102c8c9e1">DECLARE_LAYER</a>(Input)</div><div class="line"><a name="l00142"></a><span class="lineno"><a class="line" href="namespacearmnn.xhtml#a57bcf309be7adcc91001834979f87bde">  142</a></span>&#160;<a class="code" href="_layers_fwd_8hpp.xhtml#a463a20a2d0283b17eb95358102c8c9e1">DECLARE_LAYER</a>(InstanceNormalization)</div><div class="line"><a name="l00143"></a><span class="lineno"><a class="line" href="namespacearmnn.xhtml#a36f16b97bcb662caaa4eae24ea16cccf">  143</a></span>&#160;<a class="code" href="_layers_fwd_8hpp.xhtml#a463a20a2d0283b17eb95358102c8c9e1">DECLARE_LAYER</a>(L2Normalization)</div><div class="line"><a name="l00144"></a><span class="lineno"><a class="line" href="namespacearmnn.xhtml#a78bb83e7a83c970a54ffe923386a79d0">  144</a></span>&#160;<a class="code" href="_layers_fwd_8hpp.xhtml#a463a20a2d0283b17eb95358102c8c9e1">DECLARE_LAYER</a>(LogicalBinary)</div><div class="line"><a name="l00145"></a><span class="lineno"><a class="line" href="namespacearmnn.xhtml#afb6f9bd4f43118749a0336074bed7b35">  145</a></span>&#160;<a class="code" href="_layers_fwd_8hpp.xhtml#a463a20a2d0283b17eb95358102c8c9e1">DECLARE_LAYER</a>(<a class="code" href="namespacearmnn.xhtml#ac52e04c0e349e25bcdaa72c27395ef8f">LogSoftmax</a>)</div><div class="line"><a name="l00146"></a><span class="lineno"><a class="line" href="namespacearmnn.xhtml#a0d08fb555c6d1cba705fd73b71797a28">  146</a></span>&#160;<a class="code" href="_layers_fwd_8hpp.xhtml#a463a20a2d0283b17eb95358102c8c9e1">DECLARE_LAYER</a>(Lstm)</div><div class="line"><a name="l00147"></a><span class="lineno"><a class="line" href="namespacearmnn.xhtml#ac2bd34e0328cda2e23ccb4c79fa72960">  147</a></span>&#160;<a class="code" href="_layers_fwd_8hpp.xhtml#a463a20a2d0283b17eb95358102c8c9e1">DECLARE_LAYER</a>(Map)</div><div class="line"><a name="l00148"></a><span class="lineno"><a class="line" href="namespacearmnn.xhtml#a6b231c8a547d4030d9a4a1618810c20b">  148</a></span>&#160;<a class="code" href="_layers_fwd_8hpp.xhtml#a463a20a2d0283b17eb95358102c8c9e1">DECLARE_LAYER</a>(Maximum)</div><div class="line"><a name="l00149"></a><span class="lineno"><a class="line" href="namespacearmnn.xhtml#af079ba32db74f53aba1ad19193cd2a4b">  149</a></span>&#160;<a class="code" href="_layers_fwd_8hpp.xhtml#a463a20a2d0283b17eb95358102c8c9e1">DECLARE_LAYER</a>(Mean)</div><div class="line"><a name="l00150"></a><span class="lineno"><a class="line" href="namespacearmnn.xhtml#aa17969606f64ea581c28431f2395e653">  150</a></span>&#160;<a class="code" href="_layers_fwd_8hpp.xhtml#a463a20a2d0283b17eb95358102c8c9e1">DECLARE_LAYER</a>(MemCopy)</div><div class="line"><a name="l00151"></a><span class="lineno"><a class="line" href="namespacearmnn.xhtml#a70f3d83f6d1e3918eab895c8083058fa">  151</a></span>&#160;<a class="code" href="_layers_fwd_8hpp.xhtml#a463a20a2d0283b17eb95358102c8c9e1">DECLARE_LAYER</a>(MemImport)</div><div class="line"><a name="l00152"></a><span class="lineno"><a class="line" href="namespacearmnn.xhtml#a9e8199bdc39f928f694591a41d7aa0c0">  152</a></span>&#160;<a class="code" href="_layers_fwd_8hpp.xhtml#a463a20a2d0283b17eb95358102c8c9e1">DECLARE_LAYER</a>(Merge)</div><div class="line"><a name="l00153"></a><span class="lineno"><a class="line" href="namespacearmnn.xhtml#ad32a13408ace1c1fa520ed64a2cbe70f">  153</a></span>&#160;<a class="code" href="_layers_fwd_8hpp.xhtml#a463a20a2d0283b17eb95358102c8c9e1">DECLARE_LAYER</a>(Minimum)</div><div class="line"><a name="l00154"></a><span class="lineno"><a class="line" href="namespacearmnn.xhtml#a40f1546c0fa69f318eeab4b29cc64b70">  154</a></span>&#160;<a class="code" href="_layers_fwd_8hpp.xhtml#a463a20a2d0283b17eb95358102c8c9e1">DECLARE_LAYER</a>(Multiplication)</div><div class="line"><a name="l00155"></a><span class="lineno"><a class="line" href="namespacearmnn.xhtml#a140713619ee498a149854a5376b8d072">  155</a></span>&#160;<a class="code" href="_layers_fwd_8hpp.xhtml#a463a20a2d0283b17eb95358102c8c9e1">DECLARE_LAYER</a>(Normalization)</div><div class="line"><a name="l00156"></a><span class="lineno"><a class="line" href="namespacearmnn.xhtml#a7a6e68f66d1d3819640b0f2d46a55fd1">  156</a></span>&#160;<a class="code" href="_layers_fwd_8hpp.xhtml#a463a20a2d0283b17eb95358102c8c9e1">DECLARE_LAYER</a>(Output)</div><div class="line"><a name="l00157"></a><span class="lineno"><a class="line" href="namespacearmnn.xhtml#ab6f1994db909dcc399cb1f8bc50c2d3d">  157</a></span>&#160;<a class="code" href="_layers_fwd_8hpp.xhtml#a463a20a2d0283b17eb95358102c8c9e1">DECLARE_LAYER</a>(<a class="code" href="namespacearmnn.xhtml#a3c62b52d21e28088f040a4b6c2a06022">Pad</a>)</div><div class="line"><a name="l00158"></a><span class="lineno"><a class="line" href="namespacearmnn.xhtml#a1e6b17606926b8f69dbeda7f7ff1df95">  158</a></span>&#160;<a class="code" href="_layers_fwd_8hpp.xhtml#a463a20a2d0283b17eb95358102c8c9e1">DECLARE_LAYER</a>(<a class="code" href="namespacearmnn_utils.xhtml#af3c74017185773dd61d8ca6662d65d43">Permute</a>)</div><div class="line"><a name="l00159"></a><span class="lineno"><a class="line" href="namespacearmnn.xhtml#ade84059b48b38da3a233bed287864c5b">  159</a></span>&#160;<a class="code" href="_layers_fwd_8hpp.xhtml#a463a20a2d0283b17eb95358102c8c9e1">DECLARE_LAYER</a>(<a class="code" href="namespacearmnn.xhtml#ae2e93e304cf516841c521e3eaee025cd">Pooling2d</a>)</div><div class="line"><a name="l00160"></a><span class="lineno"><a class="line" href="namespacearmnn.xhtml#a5afa84427b91f83f2977382da7a9c62f">  160</a></span>&#160;<a class="code" href="_layers_fwd_8hpp.xhtml#a463a20a2d0283b17eb95358102c8c9e1">DECLARE_LAYER</a>(<a class="code" href="namespacearmnn.xhtml#a69acbef24cd1cc572b93fc3e1e6ac030">Pooling3d</a>)</div><div class="line"><a name="l00161"></a><span class="lineno"><a class="line" href="namespacearmnn.xhtml#a6e5eaa19ff232f11daa9a1c6caccf7fe">  161</a></span>&#160;<a class="code" href="_layers_fwd_8hpp.xhtml#a463a20a2d0283b17eb95358102c8c9e1">DECLARE_LAYER</a>(PreCompiled)</div><div class="line"><a name="l00162"></a><span class="lineno"><a class="line" href="namespacearmnn.xhtml#a58a5defa35b12773a97760efadffef4f">  162</a></span>&#160;<a class="code" href="_layers_fwd_8hpp.xhtml#a463a20a2d0283b17eb95358102c8c9e1">DECLARE_LAYER</a>(Prelu)</div><div class="line"><a name="l00163"></a><span class="lineno"><a class="line" href="namespacearmnn.xhtml#aaaaf64c0888ab25bfae770bd4c2ec34b">  163</a></span>&#160;<a class="code" href="_layers_fwd_8hpp.xhtml#a463a20a2d0283b17eb95358102c8c9e1">DECLARE_LAYER</a>(<a class="code" href="namespacearmnn.xhtml#ad773a034fb9983e15f3094b4c5c7c30c">Quantize</a>)</div><div class="line"><a name="l00164"></a><span class="lineno"><a class="line" href="namespacearmnn.xhtml#a1da1712abdf8eb56a3fd34d09a30f88a">  164</a></span>&#160;<a class="code" href="_layers_fwd_8hpp.xhtml#a463a20a2d0283b17eb95358102c8c9e1">DECLARE_LAYER</a>(QLstm)</div><div class="line"><a name="l00165"></a><span class="lineno"><a class="line" href="namespacearmnn.xhtml#a31bcd6f755df954a4d7b020a09499105">  165</a></span>&#160;<a class="code" href="_layers_fwd_8hpp.xhtml#a463a20a2d0283b17eb95358102c8c9e1">DECLARE_LAYER</a>(QuantizedLstm)</div><div class="line"><a name="l00166"></a><span class="lineno"><a class="line" href="namespacearmnn.xhtml#a0c5d6fb244a3e38da85257afb91edd80">  166</a></span>&#160;<a class="code" href="_layers_fwd_8hpp.xhtml#a463a20a2d0283b17eb95358102c8c9e1">DECLARE_LAYER</a>(Rank)</div><div class="line"><a name="l00167"></a><span class="lineno"><a class="line" href="namespacearmnn.xhtml#a2419883b22222c7bad914095ae3a9ad2">  167</a></span>&#160;<a class="code" href="_layers_fwd_8hpp.xhtml#a463a20a2d0283b17eb95358102c8c9e1">DECLARE_LAYER</a>(<a class="code" href="namespacearmnn.xhtml#ad64b7a275169ba1b1ba2d15679f7e8b1">Reduce</a>)</div><div class="line"><a name="l00168"></a><span class="lineno"><a class="line" href="namespacearmnn.xhtml#a6a17f58da2071720e3003a56a092aab3">  168</a></span>&#160;<a class="code" href="_layers_fwd_8hpp.xhtml#a463a20a2d0283b17eb95358102c8c9e1">DECLARE_LAYER</a>(Reshape)</div><div class="line"><a name="l00169"></a><span class="lineno"><a class="line" href="namespacearmnn.xhtml#aafc370ea363f0565c3a8bced1e37c79e">  169</a></span>&#160;<a class="code" href="_layers_fwd_8hpp.xhtml#a463a20a2d0283b17eb95358102c8c9e1">DECLARE_LAYER</a>(<a class="code" href="namespacearmnn.xhtml#a6894316aa645fd5e837739135bef04bb">Resize</a>)</div><div class="line"><a name="l00170"></a><span class="lineno"><a class="line" href="namespacearmnn.xhtml#a914ed6d4cdc4525ff0020148d4c4155c">  170</a></span>&#160;<a class="code" href="_layers_fwd_8hpp.xhtml#a463a20a2d0283b17eb95358102c8c9e1">DECLARE_LAYER</a>(Shape)</div><div class="line"><a name="l00171"></a><span class="lineno"><a class="line" href="namespacearmnn.xhtml#a3cbbb4e00618b072ace46751e660a295">  171</a></span>&#160;<a class="code" href="_layers_fwd_8hpp.xhtml#a463a20a2d0283b17eb95358102c8c9e1">DECLARE_LAYER</a>(<a class="code" href="namespacearmnn.xhtml#a044ea0cc993d4d1fbe4ec877b17b8d39">Slice</a>)</div><div class="line"><a name="l00172"></a><span class="lineno"><a class="line" href="namespacearmnn.xhtml#af6af4b51e08d3e811620811ab5e0cd2d">  172</a></span>&#160;<a class="code" href="_layers_fwd_8hpp.xhtml#a463a20a2d0283b17eb95358102c8c9e1">DECLARE_LAYER</a>(<a class="code" href="namespacearmnn.xhtml#aa999ff2585ad75b95954a9323f63c32b">Softmax</a>)</div><div class="line"><a name="l00173"></a><span class="lineno"><a class="line" href="namespacearmnn.xhtml#ac2d31ced5505a9d05287f5b71d25e34a">  173</a></span>&#160;<a class="code" href="_layers_fwd_8hpp.xhtml#a463a20a2d0283b17eb95358102c8c9e1">DECLARE_LAYER</a>(<a class="code" href="namespacearmnn.xhtml#a4a180e425d4c19b2cdea4ce5760180e1">SpaceToBatchNd</a>)</div><div class="line"><a name="l00174"></a><span class="lineno"><a class="line" href="namespacearmnn.xhtml#a81c31de4f532a95ab85ed6d999029332">  174</a></span>&#160;<a class="code" href="_layers_fwd_8hpp.xhtml#a463a20a2d0283b17eb95358102c8c9e1">DECLARE_LAYER</a>(<a class="code" href="namespacearmnn.xhtml#a5e1dc69443b64ad16b669388a6023f7a">SpaceToDepth</a>)</div><div class="line"><a name="l00175"></a><span class="lineno"><a class="line" href="namespacearmnn.xhtml#a24d3abbfc1ed81df673452c7148aa0cc">  175</a></span>&#160;<a class="code" href="_layers_fwd_8hpp.xhtml#a463a20a2d0283b17eb95358102c8c9e1">DECLARE_LAYER</a>(<a class="code" href="namespacearmnn.xhtml#ac90715a0439d1e77922996a27ef3a534">Splitter</a>)</div><div class="line"><a name="l00176"></a><span class="lineno"><a class="line" href="namespacearmnn.xhtml#ab676aab9119d1417764849099a099ecf">  176</a></span>&#160;<a class="code" href="_layers_fwd_8hpp.xhtml#a463a20a2d0283b17eb95358102c8c9e1">DECLARE_LAYER</a>(<a class="code" href="namespacearmnn.xhtml#ac245fda400649db10eed0dc96c1b5c37">Stack</a>)</div><div class="line"><a name="l00177"></a><span class="lineno"><a class="line" href="namespacearmnn.xhtml#a1b5ff142f1d4420a8d83d9bcff1bfff4">  177</a></span>&#160;<a class="code" href="_layers_fwd_8hpp.xhtml#a463a20a2d0283b17eb95358102c8c9e1">DECLARE_LAYER</a>(StandIn)</div><div class="line"><a name="l00178"></a><span class="lineno"><a class="line" href="namespacearmnn.xhtml#ad640080ff4ea3e4f9ff05823e32ce15f">  178</a></span>&#160;<a class="code" href="_layers_fwd_8hpp.xhtml#a463a20a2d0283b17eb95358102c8c9e1">DECLARE_LAYER</a>(<a class="code" href="namespacearmnn.xhtml#a86d7a7168ac00b75b4971f9aad623698">StridedSlice</a>)</div><div class="line"><a name="l00179"></a><span class="lineno"><a class="line" href="namespacearmnn.xhtml#a9cc235c8c5e2ef3d2788cd558d676b0a">  179</a></span>&#160;<a class="code" href="_layers_fwd_8hpp.xhtml#a463a20a2d0283b17eb95358102c8c9e1">DECLARE_LAYER</a>(Subtraction)</div><div class="line"><a name="l00180"></a><span class="lineno"><a class="line" href="namespacearmnn.xhtml#a110b9fdf7f17a1d065cd59ebc4bb76f7">  180</a></span>&#160;<a class="code" href="_layers_fwd_8hpp.xhtml#a463a20a2d0283b17eb95358102c8c9e1">DECLARE_LAYER</a>(Switch)</div><div class="line"><a name="l00181"></a><span class="lineno"><a class="line" href="namespacearmnn.xhtml#af44c8ebb1b55f4c42cc301d0bf030aa5">  181</a></span>&#160;<a class="code" href="_layers_fwd_8hpp.xhtml#a463a20a2d0283b17eb95358102c8c9e1">DECLARE_LAYER</a>(<a class="code" href="namespacearmnn_utils.xhtml#a405d5f966ec992d1717711e5a2d7909d">Transpose</a>)</div><div class="line"><a name="l00182"></a><span class="lineno"><a class="line" href="namespacearmnn.xhtml#a60af5a86cf0261d0bdf4312736ab4461">  182</a></span>&#160;<a class="code" href="_layers_fwd_8hpp.xhtml#a463a20a2d0283b17eb95358102c8c9e1">DECLARE_LAYER</a>(TransposeConvolution2d)</div><div class="line"><a name="l00183"></a><span class="lineno"><a class="line" href="namespacearmnn.xhtml#a598dbe8e8dfddfede22b52ebd0d437cb">  183</a></span>&#160;<a class="code" href="_layers_fwd_8hpp.xhtml#a463a20a2d0283b17eb95358102c8c9e1">DECLARE_LAYER</a>(UnidirectionalSequenceLstm)</div><div class="line"><a name="l00184"></a><span class="lineno"><a class="line" href="namespacearmnn.xhtml#aac367be4f6169b13d3a8a9250d2283d6">  184</a></span>&#160;<a class="code" href="_layers_fwd_8hpp.xhtml#a463a20a2d0283b17eb95358102c8c9e1">DECLARE_LAYER</a>(Unmap)</div><div class="line"><a name="l00185"></a><span class="lineno">  185</span>&#160;}</div><div class="ttc" id="_gather_layer_8hpp_xhtml"><div class="ttname"><a href="_gather_layer_8hpp.xhtml">GatherLayer.hpp</a></div></div>
<div class="ttc" id="namespacearmnn_xhtml_ac4fb1513cf6f4f3f40ab3d6559ec4067"><div class="ttname"><a href="namespacearmnn.xhtml#ac4fb1513cf6f4f3f40ab3d6559ec4067">armnn::LayerEnumOf</a></div><div class="ttdeci">constexpr LayerType LayerEnumOf(const T *=nullptr)</div></div>
<div class="ttc" id="namespacearmnn_xhtml_a855293b1be0581fb61ef6a1c5b027d0f"><div class="ttname"><a href="namespacearmnn.xhtml#a855293b1be0581fb61ef6a1c5b027d0f">armnn::Dequantize</a></div><div class="ttdeci">float Dequantize(QuantizedType value, float scale, int32_t offset)</div><div class="ttdoc">Dequantize an 8-bit data type into a floating point data type. </div><div class="ttdef"><b>Definition:</b> <a href="_types_utils_8cpp_source.xhtml#l00046">TypesUtils.cpp:46</a></div></div>
<div class="ttc" id="_depth_to_space_layer_8hpp_xhtml"><div class="ttname"><a href="_depth_to_space_layer_8hpp.xhtml">DepthToSpaceLayer.hpp</a></div></div>
<div class="ttc" id="namespacearmnn_xhtml_a044ea0cc993d4d1fbe4ec877b17b8d39"><div class="ttname"><a href="namespacearmnn.xhtml#a044ea0cc993d4d1fbe4ec877b17b8d39">armnn::Slice</a></div><div class="ttdeci">void Slice(const TensorInfo &amp;inputInfo, const SliceDescriptor &amp;descriptor, const void *inputData, void *outputData, unsigned int dataTypeSize)</div><div class="ttdef"><b>Definition:</b> <a href="_slice_8cpp_source.xhtml#l00014">Slice.cpp:14</a></div></div>
<div class="ttc" id="_splitter_layer_8hpp_xhtml"><div class="ttname"><a href="_splitter_layer_8hpp.xhtml">SplitterLayer.hpp</a></div></div>
<div class="ttc" id="_map_layer_8hpp_xhtml"><div class="ttname"><a href="_map_layer_8hpp.xhtml">MapLayer.hpp</a></div></div>
<div class="ttc" id="_logical_binary_layer_8hpp_xhtml"><div class="ttname"><a href="_logical_binary_layer_8hpp.xhtml">LogicalBinaryLayer.hpp</a></div></div>
<div class="ttc" id="classarmnn_1_1_batch_mat_mul_xhtml"><div class="ttname"><a href="classarmnn_1_1_batch_mat_mul.xhtml">armnn::BatchMatMul</a></div><div class="ttdef"><b>Definition:</b> <a href="_batch_mat_mul_impl_8hpp_source.xhtml#l00016">BatchMatMulImpl.hpp:16</a></div></div>
<div class="ttc" id="namespacearmnn_xhtml_a6b5db6cc9aad8ec0ac7b14f859aacdab"><div class="ttname"><a href="namespacearmnn.xhtml#a6b5db6cc9aad8ec0ac7b14f859aacdab">armnn::LayerTypeOf</a></div><div class="ttdeci">typename LayerTypeOfImpl&lt; Type &gt;::Type LayerTypeOf</div><div class="ttdef"><b>Definition:</b> <a href="_layers_fwd_8hpp_source.xhtml#l00091">LayersFwd.hpp:91</a></div></div>
<div class="ttc" id="_pooling2d_layer_8hpp_xhtml"><div class="ttname"><a href="_pooling2d_layer_8hpp.xhtml">Pooling2dLayer.hpp</a></div></div>
<div class="ttc" id="namespacearmnn_xhtml_ac90715a0439d1e77922996a27ef3a534"><div class="ttname"><a href="namespacearmnn.xhtml#ac90715a0439d1e77922996a27ef3a534">armnn::Splitter</a></div><div class="ttdeci">void Splitter(const SplitterQueueDescriptor &amp;data, std::vector&lt; ITensorHandle *&gt; inputs, std::vector&lt; ITensorHandle *&gt; outputs)</div><div class="ttdef"><b>Definition:</b> <a href="_splitter_8hpp_source.xhtml#l00017">Splitter.hpp:17</a></div></div>
<div class="ttc" id="_activation_layer_8hpp_xhtml"><div class="ttname"><a href="_activation_layer_8hpp.xhtml">ActivationLayer.hpp</a></div></div>
<div class="ttc" id="namespacearmnn_xhtml_ac245fda400649db10eed0dc96c1b5c37"><div class="ttname"><a href="namespacearmnn.xhtml#ac245fda400649db10eed0dc96c1b5c37">armnn::Stack</a></div><div class="ttdeci">void Stack(const StackQueueDescriptor &amp;data, std::vector&lt; std::unique_ptr&lt; Decoder&lt; float &gt;&gt;&gt; &amp;inputs, Encoder&lt; float &gt; &amp;output, const TensorInfo &amp;inputInfo, const TensorInfo &amp;outputInfo)</div><div class="ttdef"><b>Definition:</b> <a href="_stack_8cpp_source.xhtml#l00012">Stack.cpp:12</a></div></div>
<div class="ttc" id="_permute_layer_8hpp_xhtml"><div class="ttname"><a href="_permute_layer_8hpp.xhtml">PermuteLayer.hpp</a></div></div>
<div class="ttc" id="namespacearmnn_xhtml_a88bebdfe6309aa2cd6831cfa73c296f0"><div class="ttname"><a href="namespacearmnn.xhtml#a88bebdfe6309aa2cd6831cfa73c296f0">armnn::Fill</a></div><div class="ttdeci">void Fill(Encoder&lt; float &gt; &amp;output, const TensorShape &amp;desiredOutputShape, const float value)</div><div class="ttdoc">Creates a tensor and fills it with a scalar value. </div><div class="ttdef"><b>Definition:</b> <a href="_fill_8cpp_source.xhtml#l00013">Fill.cpp:13</a></div></div>
<div class="ttc" id="_convolution3d_layer_8hpp_xhtml"><div class="ttname"><a href="_convolution3d_layer_8hpp.xhtml">Convolution3dLayer.hpp</a></div></div>
<div class="ttc" id="namespacearmnn_xhtml_ad64b7a275169ba1b1ba2d15679f7e8b1"><div class="ttname"><a href="namespacearmnn.xhtml#ad64b7a275169ba1b1ba2d15679f7e8b1">armnn::Reduce</a></div><div class="ttdeci">void Reduce(const TensorInfo &amp;inputInfo, const TensorInfo &amp;outputInfo, Decoder&lt; float &gt; &amp;input, Encoder&lt; float &gt; &amp;output, const std::vector&lt; uint32_t &gt; axis, const ReduceOperation reduceOperation)</div><div class="ttdef"><b>Definition:</b> <a href="_reduce_8cpp_source.xhtml#l00070">Reduce.cpp:70</a></div></div>
<div class="ttc" id="_minimum_layer_8hpp_xhtml"><div class="ttname"><a href="_minimum_layer_8hpp.xhtml">MinimumLayer.hpp</a></div></div>
<div class="ttc" id="_stand_in_layer_8hpp_xhtml"><div class="ttname"><a href="_stand_in_layer_8hpp.xhtml">StandInLayer.hpp</a></div></div>
<div class="ttc" id="_instance_normalization_layer_8hpp_xhtml"><div class="ttname"><a href="_instance_normalization_layer_8hpp.xhtml">InstanceNormalizationLayer.hpp</a></div></div>
<div class="ttc" id="_addition_layer_8hpp_xhtml"><div class="ttname"><a href="_addition_layer_8hpp.xhtml">AdditionLayer.hpp</a></div></div>
<div class="ttc" id="_comparison_layer_8hpp_xhtml"><div class="ttname"><a href="_comparison_layer_8hpp.xhtml">ComparisonLayer.hpp</a></div></div>
<div class="ttc" id="_slice_layer_8hpp_xhtml"><div class="ttname"><a href="_slice_layer_8hpp.xhtml">SliceLayer.hpp</a></div></div>
<div class="ttc" id="_floor_layer_8hpp_xhtml"><div class="ttname"><a href="_floor_layer_8hpp.xhtml">FloorLayer.hpp</a></div></div>
<div class="ttc" id="_debug_layer_8hpp_xhtml"><div class="ttname"><a href="_debug_layer_8hpp.xhtml">DebugLayer.hpp</a></div></div>
<div class="ttc" id="namespacearmnn_utils_xhtml_a405d5f966ec992d1717711e5a2d7909d"><div class="ttname"><a href="namespacearmnn_utils.xhtml#a405d5f966ec992d1717711e5a2d7909d">armnnUtils::Transpose</a></div><div class="ttdeci">void Transpose(const armnn::TensorShape &amp;dstShape, const armnn::PermutationVector &amp;mappings, const void *src, void *dst, size_t dataTypeSize)</div><div class="ttdef"><b>Definition:</b> <a href="_transpose_8cpp_source.xhtml#l00120">Transpose.cpp:120</a></div></div>
<div class="ttc" id="namespacearmnn_xhtml_ab023d9a7687e35c0f108458a094c1f56"><div class="ttname"><a href="namespacearmnn.xhtml#ab023d9a7687e35c0f108458a094c1f56">armnn::DepthToSpace</a></div><div class="ttdeci">void DepthToSpace(const TensorInfo &amp;inputInfo, const DepthToSpaceDescriptor &amp;descriptor, const void *inputData, void *outputData, unsigned int dataTypeSize)</div><div class="ttdef"><b>Definition:</b> <a href="_depth_to_space_8cpp_source.xhtml#l00018">DepthToSpace.cpp:18</a></div></div>
<div class="ttc" id="namespacearmnn_xhtml_ad441be836a142e8935e0413f4a22c9ec"><div class="ttname"><a href="namespacearmnn.xhtml#ad441be836a142e8935e0413f4a22c9ec">armnn::ArgMinMax</a></div><div class="ttdeci">void ArgMinMax(Decoder&lt; float &gt; &amp;in, OUT *out, const TensorInfo &amp;inputTensorInfo, const TensorInfo &amp;outputTensorInfo, ArgMinMaxFunction function, int axis)</div><div class="ttdef"><b>Definition:</b> <a href="_arg_min_max_8cpp_source.xhtml#l00016">ArgMinMax.cpp:16</a></div></div>
<div class="ttc" id="namespacearmnn_xhtml"><div class="ttname"><a href="namespacearmnn.xhtml">armnn</a></div><div class="ttdoc">Copyright (c) 2021 ARM Limited and Contributors. </div><div class="ttdef"><b>Definition:</b> <a href="01__00__quick__start_8dox_source.xhtml#l00006">01_00_quick_start.dox:6</a></div></div>
<div class="ttc" id="_switch_layer_8hpp_xhtml"><div class="ttname"><a href="_switch_layer_8hpp.xhtml">SwitchLayer.hpp</a></div></div>
<div class="ttc" id="_unidirectional_sequence_lstm_layer_8hpp_xhtml"><div class="ttname"><a href="_unidirectional_sequence_lstm_layer_8hpp.xhtml">UnidirectionalSequenceLstmLayer.hpp</a></div></div>
<div class="ttc" id="_batch_to_space_nd_layer_8hpp_xhtml"><div class="ttname"><a href="_batch_to_space_nd_layer_8hpp.xhtml">BatchToSpaceNdLayer.hpp</a></div></div>
<div class="ttc" id="_multiplication_layer_8hpp_xhtml"><div class="ttname"><a href="_multiplication_layer_8hpp.xhtml">MultiplicationLayer.hpp</a></div></div>
<div class="ttc" id="namespacearmnn_xhtml_ab3c0b7e1a78b1b98c24934221f36a7c3"><div class="ttname"><a href="namespacearmnn.xhtml#ab3c0b7e1a78b1b98c24934221f36a7c3">armnn::FakeQuantization</a></div><div class="ttdeci">void FakeQuantization(const float *inputData, float *outputData, uint32_t numElements, float min, float max)</div><div class="ttdef"><b>Definition:</b> <a href="_ref_fake_quantization_float32_workload_8cpp_source.xhtml#l00017">RefFakeQuantizationFloat32Workload.cpp:17</a></div></div>
<div class="ttc" id="_q_lstm_layer_8hpp_xhtml"><div class="ttname"><a href="_q_lstm_layer_8hpp.xhtml">QLstmLayer.hpp</a></div></div>
<div class="ttc" id="_reshape_layer_8hpp_xhtml"><div class="ttname"><a href="_reshape_layer_8hpp.xhtml">ReshapeLayer.hpp</a></div></div>
<div class="ttc" id="_internal_types_8hpp_xhtml"><div class="ttname"><a href="_internal_types_8hpp.xhtml">InternalTypes.hpp</a></div></div>
<div class="ttc" id="_arg_min_max_layer_8hpp_xhtml"><div class="ttname"><a href="_arg_min_max_layer_8hpp.xhtml">ArgMinMaxLayer.hpp</a></div></div>
<div class="ttc" id="_output_layer_8hpp_xhtml"><div class="ttname"><a href="_output_layer_8hpp.xhtml">OutputLayer.hpp</a></div></div>
<div class="ttc" id="_constant_layer_8hpp_xhtml"><div class="ttname"><a href="_constant_layer_8hpp.xhtml">ConstantLayer.hpp</a></div></div>
<div class="ttc" id="_pad_layer_8hpp_xhtml"><div class="ttname"><a href="_pad_layer_8hpp.xhtml">PadLayer.hpp</a></div></div>
<div class="ttc" id="_merge_layer_8hpp_xhtml"><div class="ttname"><a href="_merge_layer_8hpp.xhtml">MergeLayer.hpp</a></div></div>
<div class="ttc" id="_elementwise_unary_layer_8hpp_xhtml"><div class="ttname"><a href="_elementwise_unary_layer_8hpp.xhtml">ElementwiseUnaryLayer.hpp</a></div></div>
<div class="ttc" id="_detection_post_process_layer_8hpp_xhtml"><div class="ttname"><a href="_detection_post_process_layer_8hpp.xhtml">DetectionPostProcessLayer.hpp</a></div></div>
<div class="ttc" id="_normalization_layer_8hpp_xhtml"><div class="ttname"><a href="_normalization_layer_8hpp.xhtml">NormalizationLayer.hpp</a></div></div>
<div class="ttc" id="_prelu_layer_8hpp_xhtml"><div class="ttname"><a href="_prelu_layer_8hpp.xhtml">PreluLayer.hpp</a></div></div>
<div class="ttc" id="namespacearmnn_utils_xhtml_af3c74017185773dd61d8ca6662d65d43"><div class="ttname"><a href="namespacearmnn_utils.xhtml#af3c74017185773dd61d8ca6662d65d43">armnnUtils::Permute</a></div><div class="ttdeci">void Permute(const armnn::TensorShape &amp;dstShape, const armnn::PermutationVector &amp;mappings, const void *src, void *dst, size_t dataTypeSize)</div><div class="ttdef"><b>Definition:</b> <a href="_permute_8cpp_source.xhtml#l00131">Permute.cpp:131</a></div></div>
<div class="ttc" id="_unmap_layer_8hpp_xhtml"><div class="ttname"><a href="_unmap_layer_8hpp.xhtml">UnmapLayer.hpp</a></div></div>
<div class="ttc" id="namespacearmnn_xhtml_ae76ce23fa9fc18e56448d52b37dd3f32"><div class="ttname"><a href="namespacearmnn.xhtml#ae76ce23fa9fc18e56448d52b37dd3f32">armnn::DetectionPostProcess</a></div><div class="ttdeci">void DetectionPostProcess(const TensorInfo &amp;boxEncodingsInfo, const TensorInfo &amp;scoresInfo, const TensorInfo &amp;anchorsInfo, const TensorInfo &amp;detectionBoxesInfo, const TensorInfo &amp;detectionClassesInfo, const TensorInfo &amp;detectionScoresInfo, const TensorInfo &amp;numDetectionsInfo, const DetectionPostProcessDescriptor &amp;desc, Decoder&lt; float &gt; &amp;boxEncodings, Decoder&lt; float &gt; &amp;scores, Decoder&lt; float &gt; &amp;anchors, float *detectionBoxes, float *detectionClasses, float *detectionScores, float *numDetections)</div><div class="ttdef"><b>Definition:</b> <a href="_detection_post_process_8cpp_source.xhtml#l00140">DetectionPostProcess.cpp:140</a></div></div>
<div class="ttc" id="_cast_layer_8hpp_xhtml"><div class="ttname"><a href="_cast_layer_8hpp.xhtml">CastLayer.hpp</a></div></div>
<div class="ttc" id="_division_layer_8hpp_xhtml"><div class="ttname"><a href="_division_layer_8hpp.xhtml">DivisionLayer.hpp</a></div></div>
<div class="ttc" id="_channel_shuffle_layer_8hpp_xhtml"><div class="ttname"><a href="_channel_shuffle_layer_8hpp.xhtml">ChannelShuffleLayer.hpp</a></div></div>
<div class="ttc" id="_mem_copy_layer_8hpp_xhtml"><div class="ttname"><a href="_mem_copy_layer_8hpp.xhtml">MemCopyLayer.hpp</a></div></div>
<div class="ttc" id="_mean_layer_8hpp_xhtml"><div class="ttname"><a href="_mean_layer_8hpp.xhtml">MeanLayer.hpp</a></div></div>
<div class="ttc" id="namespacearmnn_xhtml_a38c9c1724b660b2558a19895b681a8fb"><div class="ttname"><a href="namespacearmnn.xhtml#a38c9c1724b660b2558a19895b681a8fb">armnn::Gather</a></div><div class="ttdeci">void Gather(const TensorInfo &amp;paramsInfo, const TensorInfo &amp;indicesInfo, const TensorInfo &amp;outputInfo, Decoder&lt; float &gt; &amp;params, const int32_t *indices, Encoder&lt; float &gt; &amp;output, const int32_t axis)</div><div class="ttdef"><b>Definition:</b> <a href="_gather_8cpp_source.xhtml#l00017">Gather.cpp:17</a></div></div>
<div class="ttc" id="_rank_layer_8hpp_xhtml"><div class="ttname"><a href="_rank_layer_8hpp.xhtml">RankLayer.hpp</a></div></div>
<div class="ttc" id="_quantized_lstm_layer_8hpp_xhtml"><div class="ttname"><a href="_quantized_lstm_layer_8hpp.xhtml">QuantizedLstmLayer.hpp</a></div></div>
<div class="ttc" id="structarmnn_1_1_layer_type_of_impl_xhtml"><div class="ttname"><a href="structarmnn_1_1_layer_type_of_impl.xhtml">armnn::LayerTypeOfImpl</a></div><div class="ttdef"><b>Definition:</b> <a href="_layers_fwd_8hpp_source.xhtml#l00088">LayersFwd.hpp:88</a></div></div>
<div class="ttc" id="_convolution2d_layer_8hpp_xhtml"><div class="ttname"><a href="_convolution2d_layer_8hpp.xhtml">Convolution2dLayer.hpp</a></div></div>
<div class="ttc" id="namespacearmnn_xhtml_a7636fbbc4f8ea2d0cf9f3ac2d12a4c62"><div class="ttname"><a href="namespacearmnn.xhtml#a7636fbbc4f8ea2d0cf9f3ac2d12a4c62">armnn::Activation</a></div><div class="ttdeci">float Activation(float in, ActivationFunction function, float a, float b)</div><div class="ttdef"><b>Definition:</b> <a href="_activation_8cpp_source.xhtml#l00013">Activation.cpp:13</a></div></div>
<div class="ttc" id="namespacearmnn_xhtml_a181ecb133401da6ff2916c192ca04d48"><div class="ttname"><a href="namespacearmnn.xhtml#a181ecb133401da6ff2916c192ca04d48">armnn::Debug</a></div><div class="ttdeci">void Debug(const TensorInfo &amp;inputInfo, const T *inputData, LayerGuid guid, const std::string &amp;layerName, unsigned int slotIndex, bool outputsToFile)</div><div class="ttdef"><b>Definition:</b> <a href="_debug_8cpp_source.xhtml#l00097">Debug.cpp:97</a></div></div>
<div class="ttc" id="_log_softmax_layer_8hpp_xhtml"><div class="ttname"><a href="_log_softmax_layer_8hpp.xhtml">LogSoftmaxLayer.hpp</a></div></div>
<div class="ttc" id="namespacearmnn_xhtml_a3c62b52d21e28088f040a4b6c2a06022"><div class="ttname"><a href="namespacearmnn.xhtml#a3c62b52d21e28088f040a4b6c2a06022">armnn::Pad</a></div><div class="ttdeci">void Pad(const TensorInfo &amp;inputInfo, const TensorInfo &amp;outputInfo, const ITensorHandle *inputHandle, ITensorHandle *outputHandle, const PadQueueDescriptor &amp;data)</div><div class="ttdef"><b>Definition:</b> <a href="_pad_8cpp_source.xhtml#l00039">Pad.cpp:39</a></div></div>
<div class="ttc" id="namespacearmnn_xhtml_ad773a034fb9983e15f3094b4c5c7c30c"><div class="ttname"><a href="namespacearmnn.xhtml#ad773a034fb9983e15f3094b4c5c7c30c">armnn::Quantize</a></div><div class="ttdeci">QuantizedType Quantize(float value, float scale, int32_t offset)</div><div class="ttdoc">Quantize a floating point data type into an 8-bit data type. </div><div class="ttdef"><b>Definition:</b> <a href="_types_utils_8cpp_source.xhtml#l00030">TypesUtils.cpp:30</a></div></div>
<div class="ttc" id="_reduce_layer_8hpp_xhtml"><div class="ttname"><a href="_reduce_layer_8hpp.xhtml">ReduceLayer.hpp</a></div></div>
<div class="ttc" id="_input_layer_8hpp_xhtml"><div class="ttname"><a href="_input_layer_8hpp.xhtml">InputLayer.hpp</a></div></div>
<div class="ttc" id="namespacearmnn_xhtml_ac52e04c0e349e25bcdaa72c27395ef8f"><div class="ttname"><a href="namespacearmnn.xhtml#ac52e04c0e349e25bcdaa72c27395ef8f">armnn::LogSoftmax</a></div><div class="ttdeci">void LogSoftmax(Decoder&lt; float &gt; &amp;input, Encoder&lt; float &gt; &amp;output, const TensorInfo &amp;inputInfo, const LogSoftmaxDescriptor &amp;descriptor)</div><div class="ttdef"><b>Definition:</b> <a href="_log_softmax_8cpp_source.xhtml#l00029">LogSoftmax.cpp:29</a></div></div>
<div class="ttc" id="_depthwise_convolution2d_layer_8hpp_xhtml"><div class="ttname"><a href="_depthwise_convolution2d_layer_8hpp.xhtml">DepthwiseConvolution2dLayer.hpp</a></div></div>
<div class="ttc" id="_softmax_layer_8hpp_xhtml"><div class="ttname"><a href="_softmax_layer_8hpp.xhtml">SoftmaxLayer.hpp</a></div></div>
<div class="ttc" id="namespacearmnn_xhtml_a4a180e425d4c19b2cdea4ce5760180e1"><div class="ttname"><a href="namespacearmnn.xhtml#a4a180e425d4c19b2cdea4ce5760180e1">armnn::SpaceToBatchNd</a></div><div class="ttdeci">void SpaceToBatchNd(const TensorInfo &amp;inputInfo, const TensorInfo &amp;outputInfo, const SpaceToBatchNdDescriptor &amp;params, Decoder&lt; float &gt; &amp;inputData, Encoder&lt; float &gt; &amp;outputData)</div><div class="ttdef"><b>Definition:</b> <a href="_space_to_batch_nd_8cpp_source.xhtml#l00034">SpaceToBatchNd.cpp:34</a></div></div>
<div class="ttc" id="_strided_slice_layer_8hpp_xhtml"><div class="ttname"><a href="_strided_slice_layer_8hpp.xhtml">StridedSliceLayer.hpp</a></div></div>
<div class="ttc" id="_transpose_convolution2d_layer_8hpp_xhtml"><div class="ttname"><a href="_transpose_convolution2d_layer_8hpp.xhtml">TransposeConvolution2dLayer.hpp</a></div></div>
<div class="ttc" id="_convert_bf16_to_fp32_layer_8hpp_xhtml"><div class="ttname"><a href="_convert_bf16_to_fp32_layer_8hpp.xhtml">ConvertBf16ToFp32Layer.hpp</a></div></div>
<div class="ttc" id="_fake_quantization_layer_8hpp_xhtml"><div class="ttname"><a href="_fake_quantization_layer_8hpp.xhtml">FakeQuantizationLayer.hpp</a></div></div>
<div class="ttc" id="_batch_normalization_layer_8hpp_xhtml"><div class="ttname"><a href="_batch_normalization_layer_8hpp.xhtml">BatchNormalizationLayer.hpp</a></div></div>
<div class="ttc" id="_resize_layer_8hpp_xhtml"><div class="ttname"><a href="_resize_layer_8hpp.xhtml">ResizeLayer.hpp</a></div></div>
<div class="ttc" id="_batch_mat_mul_layer_8hpp_xhtml"><div class="ttname"><a href="_batch_mat_mul_layer_8hpp.xhtml">BatchMatMulLayer.hpp</a></div></div>
<div class="ttc" id="_pre_compiled_layer_8hpp_xhtml"><div class="ttname"><a href="_pre_compiled_layer_8hpp.xhtml">PreCompiledLayer.hpp</a></div></div>
<div class="ttc" id="_concat_layer_8hpp_xhtml"><div class="ttname"><a href="_concat_layer_8hpp.xhtml">ConcatLayer.hpp</a></div></div>
<div class="ttc" id="_quantize_layer_8hpp_xhtml"><div class="ttname"><a href="_quantize_layer_8hpp.xhtml">QuantizeLayer.hpp</a></div></div>
<div class="ttc" id="_convert_fp32_to_bf16_layer_8hpp_xhtml"><div class="ttname"><a href="_convert_fp32_to_bf16_layer_8hpp.xhtml">ConvertFp32ToBf16Layer.hpp</a></div></div>
<div class="ttc" id="_space_to_batch_nd_layer_8hpp_xhtml"><div class="ttname"><a href="_space_to_batch_nd_layer_8hpp.xhtml">SpaceToBatchNdLayer.hpp</a></div></div>
<div class="ttc" id="namespacearmnn_xhtml_a86d7a7168ac00b75b4971f9aad623698"><div class="ttname"><a href="namespacearmnn.xhtml#a86d7a7168ac00b75b4971f9aad623698">armnn::StridedSlice</a></div><div class="ttdeci">void StridedSlice(const TensorInfo &amp;inputInfo, const StridedSliceDescriptor &amp;params, const void *inputData, void *outputData, unsigned int dataTypeSize)</div><div class="ttdef"><b>Definition:</b> <a href="_strided_slice_8cpp_source.xhtml#l00090">StridedSlice.cpp:90</a></div></div>
<div class="ttc" id="_layers_fwd_8hpp_xhtml_a463a20a2d0283b17eb95358102c8c9e1"><div class="ttname"><a href="_layers_fwd_8hpp.xhtml#a463a20a2d0283b17eb95358102c8c9e1">DECLARE_LAYER</a></div><div class="ttdeci">#define DECLARE_LAYER(LayerName)</div><div class="ttdef"><b>Definition:</b> <a href="_layers_fwd_8hpp_source.xhtml#l00109">LayersFwd.hpp:109</a></div></div>
<div class="ttc" id="_pooling3d_layer_8hpp_xhtml"><div class="ttname"><a href="_pooling3d_layer_8hpp.xhtml">Pooling3dLayer.hpp</a></div></div>
<div class="ttc" id="_maximum_layer_8hpp_xhtml"><div class="ttname"><a href="_maximum_layer_8hpp.xhtml">MaximumLayer.hpp</a></div></div>
<div class="ttc" id="_subtraction_layer_8hpp_xhtml"><div class="ttname"><a href="_subtraction_layer_8hpp.xhtml">SubtractionLayer.hpp</a></div></div>
<div class="ttc" id="_l2_normalization_layer_8hpp_xhtml"><div class="ttname"><a href="_l2_normalization_layer_8hpp.xhtml">L2NormalizationLayer.hpp</a></div></div>
<div class="ttc" id="_convert_fp32_to_fp16_layer_8hpp_xhtml"><div class="ttname"><a href="_convert_fp32_to_fp16_layer_8hpp.xhtml">ConvertFp32ToFp16Layer.hpp</a></div></div>
<div class="ttc" id="_shape_layer_8hpp_xhtml"><div class="ttname"><a href="_shape_layer_8hpp.xhtml">ShapeLayer.hpp</a></div></div>
<div class="ttc" id="_fully_connected_layer_8hpp_xhtml"><div class="ttname"><a href="_fully_connected_layer_8hpp.xhtml">FullyConnectedLayer.hpp</a></div></div>
<div class="ttc" id="_lstm_layer_8hpp_xhtml"><div class="ttname"><a href="_lstm_layer_8hpp.xhtml">LstmLayer.hpp</a></div></div>
<div class="ttc" id="namespacearmnn_xhtml_a69acbef24cd1cc572b93fc3e1e6ac030"><div class="ttname"><a href="namespacearmnn.xhtml#a69acbef24cd1cc572b93fc3e1e6ac030">armnn::Pooling3d</a></div><div class="ttdeci">void Pooling3d(Decoder&lt; float &gt; &amp;rInputDecoder, Encoder&lt; float &gt; &amp;rOutputEncoder, const TensorInfo &amp;inputInfo, const TensorInfo &amp;outputInfo, const Pooling3dDescriptor &amp;params)</div><div class="ttdoc">Computes the Pooling3d operation. </div><div class="ttdef"><b>Definition:</b> <a href="_pooling3d_8cpp_source.xhtml#l00172">Pooling3d.cpp:172</a></div></div>
<div class="ttc" id="namespacearmnn_xhtml_a5e1dc69443b64ad16b669388a6023f7a"><div class="ttname"><a href="namespacearmnn.xhtml#a5e1dc69443b64ad16b669388a6023f7a">armnn::SpaceToDepth</a></div><div class="ttdeci">void SpaceToDepth(const TensorInfo &amp;inputInfo, const TensorInfo &amp;outputInfo, const SpaceToDepthDescriptor &amp;params, Decoder&lt; float &gt; &amp;inputData, Encoder&lt; float &gt; &amp;outputData)</div><div class="ttdef"><b>Definition:</b> <a href="_space_to_depth_8cpp_source.xhtml#l00036">SpaceToDepth.cpp:36</a></div></div>
<div class="ttc" id="_dequantize_layer_8hpp_xhtml"><div class="ttname"><a href="_dequantize_layer_8hpp.xhtml">DequantizeLayer.hpp</a></div></div>
<div class="ttc" id="namespacearmnn_xhtml_a8746512fab5ec10c2c57800c66311ba7"><div class="ttname"><a href="namespacearmnn.xhtml#a8746512fab5ec10c2c57800c66311ba7">armnn::BatchToSpaceNd</a></div><div class="ttdeci">void BatchToSpaceNd(const DataLayoutIndexed &amp;dataLayout, const TensorInfo &amp;inputTensorInfo, const TensorInfo &amp;outputTensorInfo, const std::vector&lt; unsigned int &gt; &amp;blockShape, const std::vector&lt; std::pair&lt; unsigned int, unsigned int &gt;&gt; &amp;cropsData, Decoder&lt; float &gt; &amp;inputDecoder, Encoder&lt; float &gt; &amp;outputEncoder)</div><div class="ttdef"><b>Definition:</b> <a href="_batch_to_space_nd_8cpp_source.xhtml#l00035">BatchToSpaceNd.cpp:35</a></div></div>
<div class="ttc" id="_convert_fp16_to_fp32_layer_8hpp_xhtml"><div class="ttname"><a href="_convert_fp16_to_fp32_layer_8hpp.xhtml">ConvertFp16ToFp32Layer.hpp</a></div></div>
<div class="ttc" id="namespacearmnn_xhtml_ae2e93e304cf516841c521e3eaee025cd"><div class="ttname"><a href="namespacearmnn.xhtml#ae2e93e304cf516841c521e3eaee025cd">armnn::Pooling2d</a></div><div class="ttdeci">void Pooling2d(Decoder&lt; float &gt; &amp;rInputDecoder, Encoder&lt; float &gt; &amp;rOutputEncoder, const TensorInfo &amp;inputInfo, const TensorInfo &amp;outputInfo, const Pooling2dDescriptor &amp;params)</div><div class="ttdoc">Computes the Pooling2d operation. </div><div class="ttdef"><b>Definition:</b> <a href="_pooling2d_8cpp_source.xhtml#l00142">Pooling2d.cpp:142</a></div></div>
<div class="ttc" id="_transpose_layer_8hpp_xhtml"><div class="ttname"><a href="_transpose_layer_8hpp.xhtml">TransposeLayer.hpp</a></div></div>
<div class="ttc" id="_mem_import_layer_8hpp_xhtml"><div class="ttname"><a href="_mem_import_layer_8hpp.xhtml">MemImportLayer.hpp</a></div></div>
<div class="ttc" id="_fill_layer_8hpp_xhtml"><div class="ttname"><a href="_fill_layer_8hpp.xhtml">FillLayer.hpp</a></div></div>
<div class="ttc" id="_gather_nd_layer_8hpp_xhtml"><div class="ttname"><a href="_gather_nd_layer_8hpp.xhtml">GatherNdLayer.hpp</a></div></div>
<div class="ttc" id="namespacearmnn_xhtml_aa999ff2585ad75b95954a9323f63c32b"><div class="ttname"><a href="namespacearmnn.xhtml#aa999ff2585ad75b95954a9323f63c32b">armnn::Softmax</a></div><div class="ttdeci">void Softmax(Decoder&lt; float &gt; &amp;in, Encoder&lt; float &gt; &amp;out, const TensorInfo &amp;inputTensorInfo, float beta, int axis)</div><div class="ttdoc">Computes the softmax function on some inputs, into outputs, with a shape given by tensorInfo...</div><div class="ttdef"><b>Definition:</b> <a href="_softmax_8cpp_source.xhtml#l00017">Softmax.cpp:17</a></div></div>
<div class="ttc" id="_space_to_depth_layer_8hpp_xhtml"><div class="ttname"><a href="_space_to_depth_layer_8hpp.xhtml">SpaceToDepthLayer.hpp</a></div></div>
<div class="ttc" id="namespacearmnn_xhtml_a6894316aa645fd5e837739135bef04bb"><div class="ttname"><a href="namespacearmnn.xhtml#a6894316aa645fd5e837739135bef04bb">armnn::Resize</a></div><div class="ttdeci">void Resize(Decoder&lt; float &gt; &amp;in, const TensorInfo &amp;inputInfo, Encoder&lt; float &gt; &amp;out, const TensorInfo &amp;outputInfo, DataLayoutIndexed dataLayout, armnn::ResizeMethod resizeMethod, bool alignCorners, bool halfPixelCenters)</div><div class="ttdef"><b>Definition:</b> <a href="_resize_8cpp_source.xhtml#l00065">Resize.cpp:65</a></div></div>
<div class="ttc" id="namespacearmnn_xhtml_a435f9350a94adfbb0d5b9abb5f430914"><div class="ttname"><a href="namespacearmnn.xhtml#a435f9350a94adfbb0d5b9abb5f430914">armnn::FullyConnected</a></div><div class="ttdeci">void FullyConnected(const TensorShape &amp;rInputShape, Decoder&lt; float &gt; &amp;rInputDecoder, const TensorShape &amp;rOutputShape, Encoder&lt; float &gt; &amp;rOutputEncoder, const TensorShape &amp;rWeightsShape, Decoder&lt; float &gt; &amp;rWeightDecoder, Decoder&lt; float &gt; *pBiasDecoder, const bool biasEnabled, const unsigned int K, const bool transposeWeights)</div><div class="ttdoc">Performs a matrix multiplication and optionally adds a bias. </div><div class="ttdef"><b>Definition:</b> <a href="_fully_connected_8cpp_source.xhtml#l00015">FullyConnected.cpp:15</a></div></div>
<div class="ttc" id="_stack_layer_8hpp_xhtml"><div class="ttname"><a href="_stack_layer_8hpp.xhtml">StackLayer.hpp</a></div></div>
<div class="ttc" id="namespacearmnn_xhtml_a56943a0946e5f15e5e58054b8e7a04a4"><div class="ttname"><a href="namespacearmnn.xhtml#a56943a0946e5f15e5e58054b8e7a04a4">armnn::LayerType</a></div><div class="ttdeci">LayerType</div><div class="ttdoc">When adding a new layer, adapt also the LastLayer enum value in the enum class LayerType below...</div><div class="ttdef"><b>Definition:</b> <a href="_types_8hpp_source.xhtml#l00468">Types.hpp:468</a></div></div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="dir_68267d1309a1af8e8297ef4c3efbcdba.xhtml">src</a></li><li class="navelem"><a class="el" href="dir_e0a84d05c80a2ef4231141dcbbeac5c8.xhtml">armnn</a></li><li class="navelem"><a class="el" href="_layers_fwd_8hpp.xhtml">LayersFwd.hpp</a></li>
    <li class="footer">Generated on Wed Nov 23 2022 10:57:37 for ArmNN by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.13 </li>
  </ul>
</div>
</body>
</html>
