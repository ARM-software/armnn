<!-- Copyright (c) 2020 ARM Limited. -->
<!--                                 -->
<!-- SPDX-License-Identifier: MIT    -->
<!--                                 -->
<!-- HTML header for doxygen 1.8.13-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.13"/>
<meta name="robots" content="NOINDEX, NOFOLLOW" />
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>ArmNN: yolov3 Namespace Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script><script type="text/javascript" src="http://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="stylesheet.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <img alt="ArmNN" src="Arm_NN_horizontal_blue.png" style="max-width: 10rem; margin-top: .5rem; margin-left 10px"/>
  <td style="padding-left: 0.5em;">
   <div id="projectname">
   &#160;<span id="projectnumber">22.08</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.13 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
$(document).ready(function(){initNavTree('namespaceyolov3.xhtml','');});
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="summary">
<a href="#nested-classes">Classes</a> &#124;
<a href="#func-members">Functions</a>  </div>
  <div class="headertitle">
<div class="title">yolov3 Namespace Reference</div>  </div>
</div><!--header-->
<div class="contents">
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="nested-classes"></a>
Classes</h2></td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structyolov3_1_1_box.xhtml">Box</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight"><a class="el" href="structyolov3_1_1_box.xhtml" title="Box representation structure. ">Box</a> representation structure.  <a href="structyolov3_1_1_box.xhtml#details">More...</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structyolov3_1_1_detection.xhtml">Detection</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight"><a class="el" href="structyolov3_1_1_detection.xhtml" title="Detection structure. ">Detection</a> structure.  <a href="structyolov3_1_1_detection.xhtml#details">More...</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structyolov3_1_1_n_m_s_config.xhtml">NMSConfig</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">Non Maxima Suprresion configuration meta-data.  <a href="structyolov3_1_1_n_m_s_config.xhtml#details">More...</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="func-members"></a>
Functions</h2></td></tr>
<tr class="memitem:a81be14d2d01feb34d4d9a84f52121ea6"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespaceyolov3.xhtml#a81be14d2d01feb34d4d9a84f52121ea6">compare_detection</a> (const <a class="el" href="structyolov3_1_1_detection.xhtml">yolov3::Detection</a> &amp;detection, const std::vector&lt; float &gt; &amp;expected)</td></tr>
<tr class="memdesc:a81be14d2d01feb34d4d9a84f52121ea6"><td class="mdescLeft">&#160;</td><td class="mdescRight">Compare a detection object with a vector of float values.  <a href="#a81be14d2d01feb34d4d9a84f52121ea6">More...</a><br /></td></tr>
<tr class="separator:a81be14d2d01feb34d4d9a84f52121ea6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8151de4c14e5e853818753516cb87c26"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespaceyolov3.xhtml#a8151de4c14e5e853818753516cb87c26">print_detection</a> (std::ostream &amp;os, const std::vector&lt; <a class="el" href="structyolov3_1_1_detection.xhtml">Detection</a> &gt; &amp;detections)</td></tr>
<tr class="memdesc:a8151de4c14e5e853818753516cb87c26"><td class="mdescLeft">&#160;</td><td class="mdescRight">Print identified yolo detections.  <a href="#a8151de4c14e5e853818753516cb87c26">More...</a><br /></td></tr>
<tr class="separator:a8151de4c14e5e853818753516cb87c26"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7cf18c5c3391effbaf3234792876cd52"><td class="memItemLeft" align="right" valign="top">std::vector&lt; <a class="el" href="structyolov3_1_1_detection.xhtml">Detection</a> &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespaceyolov3.xhtml#a7cf18c5c3391effbaf3234792876cd52">nms</a> (const <a class="el" href="structyolov3_1_1_n_m_s_config.xhtml">NMSConfig</a> &amp;config, const std::vector&lt; float &gt; &amp;detected_boxes)</td></tr>
<tr class="memdesc:a7cf18c5c3391effbaf3234792876cd52"><td class="mdescLeft">&#160;</td><td class="mdescRight">Perform Non-Maxima Supression on a list of given detections.  <a href="#a7cf18c5c3391effbaf3234792876cd52">More...</a><br /></td></tr>
<tr class="separator:a7cf18c5c3391effbaf3234792876cd52"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<h2 class="groupheader">Function Documentation</h2>
<a id="a81be14d2d01feb34d4d9a84f52121ea6"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a81be14d2d01feb34d4d9a84f52121ea6">&#9670;&nbsp;</a></span>compare_detection()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool compare_detection </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="structyolov3_1_1_detection.xhtml">yolov3::Detection</a> &amp;&#160;</td>
          <td class="paramname"><em>detection</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const std::vector&lt; float &gt; &amp;&#160;</td>
          <td class="paramname"><em>expected</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Compare a detection object with a vector of float values. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">detection</td><td>[in] <a class="el" href="structyolov3_1_1_detection.xhtml" title="Detection structure. ">Detection</a> object </td></tr>
    <tr><td class="paramname">expected</td><td>[in] Vector of expected float values </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>Boolean to represent if they match or not </dd></dl>

<p class="definition">Definition at line <a class="el" href="_n_m_s_8cpp_source.xhtml#l00084">84</a> of file <a class="el" href="_n_m_s_8cpp_source.xhtml">NMS.cpp</a>.</p>

<p class="reference">References <a class="el" href="_n_m_s_8hpp_source.xhtml#l00030">Detection::box</a>, <a class="el" href="_n_m_s_8hpp_source.xhtml#l00032">Detection::classes</a>, <a class="el" href="_n_m_s_8hpp_source.xhtml#l00031">Detection::confidence</a>, <a class="el" href="_n_m_s_8hpp_source.xhtml#l00023">Box::xmax</a>, <a class="el" href="_n_m_s_8hpp_source.xhtml#l00022">Box::xmin</a>, <a class="el" href="_n_m_s_8hpp_source.xhtml#l00025">Box::ymax</a>, and <a class="el" href="_n_m_s_8hpp_source.xhtml#l00024">Box::ymin</a>.</p>

<p class="reference">Referenced by <a class="el" href="_tf_lite_yolo_v3_big-_armnn_8cpp_source.xhtml#l00226">CheckAccuracy()</a>.</p>
<div class="fragment"><div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;{</div><div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;    <span class="keywordtype">float</span> tolerance = 0.001f;</div><div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;    <span class="keywordflow">return</span> (std::fabs(detection.<a class="code" href="structyolov3_1_1_detection.xhtml#a1ceea7e0cd778a72b2a6e1ffe886d407">classes</a>[0] - expected[0]) &lt; tolerance  &amp;&amp;</div><div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;            std::fabs(detection.<a class="code" href="structyolov3_1_1_detection.xhtml#ab19e728e80bc2fc43d8e82c3602f8333">box</a>.<a class="code" href="structyolov3_1_1_box.xhtml#a058f249a5e6d20724cb0784b40a183e8">xmin</a>   - expected[1]) &lt; tolerance  &amp;&amp;</div><div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;            std::fabs(detection.<a class="code" href="structyolov3_1_1_detection.xhtml#ab19e728e80bc2fc43d8e82c3602f8333">box</a>.<a class="code" href="structyolov3_1_1_box.xhtml#a5c6190dc7aa1bd7aafb9592a64f7046d">ymin</a>   - expected[2]) &lt; tolerance  &amp;&amp;</div><div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;            std::fabs(detection.<a class="code" href="structyolov3_1_1_detection.xhtml#ab19e728e80bc2fc43d8e82c3602f8333">box</a>.<a class="code" href="structyolov3_1_1_box.xhtml#a9c42f51718ed192ed1841a53d2b0e507">xmax</a>   - expected[3]) &lt; tolerance  &amp;&amp;</div><div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;            std::fabs(detection.<a class="code" href="structyolov3_1_1_detection.xhtml#ab19e728e80bc2fc43d8e82c3602f8333">box</a>.<a class="code" href="structyolov3_1_1_box.xhtml#acee1a082369857c7ee64924a0d9bc706">ymax</a>   - expected[4]) &lt; tolerance  &amp;&amp;</div><div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;            std::fabs(detection.<a class="code" href="structyolov3_1_1_detection.xhtml#a058b8558da894ebfbef73d1a9b57deaa">confidence</a> - expected[5]) &lt; tolerance  );</div><div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;}</div><div class="ttc" id="structyolov3_1_1_detection_xhtml_a058b8558da894ebfbef73d1a9b57deaa"><div class="ttname"><a href="structyolov3_1_1_detection.xhtml#a058b8558da894ebfbef73d1a9b57deaa">yolov3::Detection::confidence</a></div><div class="ttdeci">float confidence</div><div class="ttdoc">Confidence of detection. </div><div class="ttdef"><b>Definition:</b> <a href="_n_m_s_8hpp_source.xhtml#l00031">NMS.hpp:31</a></div></div>
<div class="ttc" id="structyolov3_1_1_box_xhtml_a5c6190dc7aa1bd7aafb9592a64f7046d"><div class="ttname"><a href="structyolov3_1_1_box.xhtml#a5c6190dc7aa1bd7aafb9592a64f7046d">yolov3::Box::ymin</a></div><div class="ttdeci">float ymin</div><div class="ttdoc">Y-pos position of the low left coordinate. </div><div class="ttdef"><b>Definition:</b> <a href="_n_m_s_8hpp_source.xhtml#l00024">NMS.hpp:24</a></div></div>
<div class="ttc" id="structyolov3_1_1_box_xhtml_a058f249a5e6d20724cb0784b40a183e8"><div class="ttname"><a href="structyolov3_1_1_box.xhtml#a058f249a5e6d20724cb0784b40a183e8">yolov3::Box::xmin</a></div><div class="ttdeci">float xmin</div><div class="ttdoc">X-pos position of the low left coordinate. </div><div class="ttdef"><b>Definition:</b> <a href="_n_m_s_8hpp_source.xhtml#l00022">NMS.hpp:22</a></div></div>
<div class="ttc" id="structyolov3_1_1_box_xhtml_a9c42f51718ed192ed1841a53d2b0e507"><div class="ttname"><a href="structyolov3_1_1_box.xhtml#a9c42f51718ed192ed1841a53d2b0e507">yolov3::Box::xmax</a></div><div class="ttdeci">float xmax</div><div class="ttdoc">X-pos position of the top right coordinate. </div><div class="ttdef"><b>Definition:</b> <a href="_n_m_s_8hpp_source.xhtml#l00023">NMS.hpp:23</a></div></div>
<div class="ttc" id="structyolov3_1_1_detection_xhtml_a1ceea7e0cd778a72b2a6e1ffe886d407"><div class="ttname"><a href="structyolov3_1_1_detection.xhtml#a1ceea7e0cd778a72b2a6e1ffe886d407">yolov3::Detection::classes</a></div><div class="ttdeci">std::vector&lt; float &gt; classes</div><div class="ttdoc">Probability of classes. </div><div class="ttdef"><b>Definition:</b> <a href="_n_m_s_8hpp_source.xhtml#l00032">NMS.hpp:32</a></div></div>
<div class="ttc" id="structyolov3_1_1_detection_xhtml_ab19e728e80bc2fc43d8e82c3602f8333"><div class="ttname"><a href="structyolov3_1_1_detection.xhtml#ab19e728e80bc2fc43d8e82c3602f8333">yolov3::Detection::box</a></div><div class="ttdeci">Box box</div><div class="ttdoc">Detection box. </div><div class="ttdef"><b>Definition:</b> <a href="_n_m_s_8hpp_source.xhtml#l00030">NMS.hpp:30</a></div></div>
<div class="ttc" id="structyolov3_1_1_box_xhtml_acee1a082369857c7ee64924a0d9bc706"><div class="ttname"><a href="structyolov3_1_1_box.xhtml#acee1a082369857c7ee64924a0d9bc706">yolov3::Box::ymax</a></div><div class="ttdeci">float ymax</div><div class="ttdoc">Y-pos position of the top right coordinate. </div><div class="ttdef"><b>Definition:</b> <a href="_n_m_s_8hpp_source.xhtml#l00025">NMS.hpp:25</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="a7cf18c5c3391effbaf3234792876cd52"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a7cf18c5c3391effbaf3234792876cd52">&#9670;&nbsp;</a></span>nms()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">std::vector&lt; <a class="el" href="structyolov3_1_1_detection.xhtml">Detection</a> &gt; nms </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="structyolov3_1_1_n_m_s_config.xhtml">NMSConfig</a> &amp;&#160;</td>
          <td class="paramname"><em>config</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const std::vector&lt; float &gt; &amp;&#160;</td>
          <td class="paramname"><em>detected_boxes</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Perform Non-Maxima Supression on a list of given detections. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">config</td><td>Configuration metadata for NMS </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">detected_boxes</td><td>Detected boxes</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>A vector with the final detections </dd></dl>

<p class="definition">Definition at line <a class="el" href="_n_m_s_8cpp_source.xhtml#l00113">113</a> of file <a class="el" href="_n_m_s_8cpp_source.xhtml">NMS.cpp</a>.</p>

<p class="reference">References <a class="el" href="_n_m_s_8hpp_source.xhtml#l00032">Detection::classes</a>, <a class="el" href="_n_m_s_8hpp_source.xhtml#l00017">NMSConfig::iou_threshold</a>, and <a class="el" href="_n_m_s_8hpp_source.xhtml#l00014">NMSConfig::num_classes</a>.</p>
<div class="fragment"><div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;                                                                   {</div><div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;    <span class="comment">// Get detections that comply with the expected confidence threshold</span></div><div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;    std::vector&lt;Detection&gt; detections =</div><div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;        convert_to_detections(config, detected_boxes);</div><div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;</div><div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> num_detections = <span class="keyword">static_cast&lt;</span><span class="keywordtype">unsigned</span> <span class="keywordtype">int</span><span class="keyword">&gt;</span>(detections.size());</div><div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;    <span class="keywordflow">for</span> (<span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> c = 0; c &lt; config.num_classes; ++c)</div><div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;    {</div><div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;        <span class="comment">// Sort classes</span></div><div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;        std::sort(detections.begin(), detections.begin() + <span class="keyword">static_cast&lt;</span>std::ptrdiff_t<span class="keyword">&gt;</span>(num_detections),</div><div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;                  [c](Detection&amp; detection1, Detection&amp; detection2)</div><div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;                    {</div><div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;                        <span class="keywordflow">return</span> (detection1.classes[c] - detection2.classes[c]) &gt; 0;</div><div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;                    });</div><div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;        <span class="comment">// Clear detections with high IoU</span></div><div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;        <span class="keywordflow">for</span> (<span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> d = 0; d &lt; num_detections; ++d)</div><div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;        {</div><div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;            <span class="comment">// Check if class is already cleared/invalidated</span></div><div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;            <span class="keywordflow">if</span> (detections[d].classes[c] == 0.f)</div><div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;            {</div><div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;                <span class="keywordflow">continue</span>;</div><div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;            }</div><div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;</div><div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;            <span class="comment">// Filter out boxes on IoU threshold</span></div><div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;            <span class="keyword">const</span> Box&amp; box1 = detections[d].box;</div><div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;            <span class="keywordflow">for</span> (<span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> b = d + 1; b &lt; num_detections; ++b)</div><div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;            {</div><div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;                <span class="keyword">const</span> Box&amp; box2 = detections[b].box;</div><div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;                <span class="keywordflow">if</span> (iou(box1, box2) &gt; config.iou_threshold)</div><div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;                {</div><div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;                    detections[b].classes[c] = 0.f;</div><div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;                }</div><div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;            }</div><div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;        }</div><div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;    }</div><div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;    <span class="keywordflow">return</span> detections;</div><div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;}</div></div><!-- fragment -->
</div>
</div>
<a id="a8151de4c14e5e853818753516cb87c26"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a8151de4c14e5e853818753516cb87c26">&#9670;&nbsp;</a></span>print_detection()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void print_detection </td>
          <td>(</td>
          <td class="paramtype">std::ostream &amp;&#160;</td>
          <td class="paramname"><em>os</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const std::vector&lt; <a class="el" href="structyolov3_1_1_detection.xhtml">Detection</a> &gt; &amp;&#160;</td>
          <td class="paramname"><em>detections</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Print identified yolo detections. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in,out]</td><td class="paramname">os</td><td>Output stream to print to </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">detections</td><td>Detections to print </td></tr>
  </table>
  </dd>
</dl>

<p class="definition">Definition at line <a class="el" href="_n_m_s_8cpp_source.xhtml#l00096">96</a> of file <a class="el" href="_n_m_s_8cpp_source.xhtml">NMS.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;{</div><div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;    <span class="keywordflow">for</span> (<span class="keyword">const</span> <span class="keyword">auto</span>&amp; detection : detections)</div><div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;    {</div><div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;        <span class="keywordflow">for</span> (<span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> c = 0; c &lt; detection.classes.size(); ++c)</div><div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;        {</div><div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;            <span class="keywordflow">if</span> (detection.classes[c] != 0.0f)</div><div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;            {</div><div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;                os &lt;&lt; c &lt;&lt; <span class="stringliteral">&quot; &quot;</span> &lt;&lt; detection.classes[c] &lt;&lt; <span class="stringliteral">&quot; &quot;</span> &lt;&lt; detection.box.xmin</div><div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;                   &lt;&lt; <span class="stringliteral">&quot; &quot;</span> &lt;&lt; detection.box.ymin &lt;&lt; <span class="stringliteral">&quot; &quot;</span> &lt;&lt; detection.box.xmax &lt;&lt; <span class="stringliteral">&quot; &quot;</span></div><div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;                   &lt;&lt; detection.box.ymax &lt;&lt; std::endl;</div><div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;            }</div><div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;        }</div><div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;    }</div><div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;}</div></div><!-- fragment -->
</div>
</div>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="namespaceyolov3.xhtml">yolov3</a></li>
    <li class="footer">Generated on Fri Aug 19 2022 14:38:43 for ArmNN by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.13 </li>
  </ul>
</div>
</body>
</html>
