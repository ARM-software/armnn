<!-- Copyright (c) 2020 ARM Limited. -->
<!--                                 -->
<!-- SPDX-License-Identifier: MIT    -->
<!--                                 -->
<!-- HTML header for doxygen 1.8.13-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.13"/>
<meta name="robots" content="NOINDEX, NOFOLLOW" />
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>ArmNN: include/armnn/Deprecated.hpp File Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script><script type="text/javascript" src="http://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="stylesheet.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <img alt="ArmNN" src="Arm_NN_horizontal_blue.png" style="max-width: 10rem; margin-top: .5rem; margin-left 10px"/>
  <td style="padding-left: 0.5em;">
   <div id="projectname">
   &#160;<span id="projectnumber">22.02</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.13 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
$(document).ready(function(){initNavTree('_deprecated_8hpp.xhtml','');});
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="summary">
<a href="#define-members">Macros</a>  </div>
  <div class="headertitle">
<div class="title">Deprecated.hpp File Reference</div>  </div>
</div><!--header-->
<div class="contents">

<p><a href="_deprecated_8hpp_source.xhtml">Go to the source code of this file.</a></p>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="define-members"></a>
Macros</h2></td></tr>
<tr class="memitem:ab66a241a0ed3ee89c866e777b035d0ed"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_deprecated_8hpp.xhtml#ab66a241a0ed3ee89c866e777b035d0ed">ARMNN_NO_DEPRECATE_WARN_BEGIN</a></td></tr>
<tr class="separator:ab66a241a0ed3ee89c866e777b035d0ed"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad762b11b48e5c1d1c1743f529485728a"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_deprecated_8hpp.xhtml#ad762b11b48e5c1d1c1743f529485728a">ARMNN_NO_DEPRECATE_WARN_END</a></td></tr>
<tr class="separator:ad762b11b48e5c1d1c1743f529485728a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a90359488b89729403b0245dcee714cf0"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_deprecated_8hpp.xhtml#a90359488b89729403b0245dcee714cf0">ARMNN_SUPPRESS_DEPRECATE_WARNING</a>(func)</td></tr>
<tr class="separator:a90359488b89729403b0245dcee714cf0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8c75b095bdac041c0049d4a3089446fa"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_deprecated_8hpp.xhtml#a8c75b095bdac041c0049d4a3089446fa">ARMNN_DEPRECATED</a>&#160;&#160;&#160;[[deprecated]]</td></tr>
<tr class="separator:a8c75b095bdac041c0049d4a3089446fa"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a76fb13a018f8e01087a7ae0eb23509e1"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_deprecated_8hpp.xhtml#a76fb13a018f8e01087a7ae0eb23509e1">ARMNN_DEPRECATED_MSG</a>(message)&#160;&#160;&#160;[[deprecated(message)]]</td></tr>
<tr class="separator:a76fb13a018f8e01087a7ae0eb23509e1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af16119336bd0dfbfbc83fc283151067e"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_deprecated_8hpp.xhtml#af16119336bd0dfbfbc83fc283151067e">ARMNN_DEPRECATED_MSG_REMOVAL_DATE</a>(message,  removed_in_release)&#160;&#160;&#160;[[deprecated(&quot;Expected to be removed in release &quot; #removed_in_release &quot;. &quot; message)]]</td></tr>
<tr class="separator:af16119336bd0dfbfbc83fc283151067e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9d4e820f84d78cb85b1194164c8f8d8d"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_deprecated_8hpp.xhtml#a9d4e820f84d78cb85b1194164c8f8d8d">ARMNN_DEPRECATED_MSG_CHANGE_DATE</a>(message,  signature_changed_in_release)&#160;&#160;&#160;[[deprecated(&quot;Expected to have signature changed in release &quot; #signature_changed_in_release &quot;. &quot; message)]]</td></tr>
<tr class="separator:a9d4e820f84d78cb85b1194164c8f8d8d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:afa734d5599f0494b4590bfa9b35b2d95"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_deprecated_8hpp.xhtml#afa734d5599f0494b4590bfa9b35b2d95">ARMNN_DEPRECATED_ENUM</a>&#160;&#160;&#160;<a class="el" href="_deprecated_8hpp.xhtml#a8c75b095bdac041c0049d4a3089446fa">ARMNN_DEPRECATED</a></td></tr>
<tr class="separator:afa734d5599f0494b4590bfa9b35b2d95"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a086b9723704bff3477c44f0141652c9c"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_deprecated_8hpp.xhtml#a086b9723704bff3477c44f0141652c9c">ARMNN_DEPRECATED_ENUM_MSG</a>(message)&#160;&#160;&#160;<a class="el" href="_deprecated_8hpp.xhtml#a76fb13a018f8e01087a7ae0eb23509e1">ARMNN_DEPRECATED_MSG</a>(message)</td></tr>
<tr class="separator:a086b9723704bff3477c44f0141652c9c"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<h2 class="groupheader">Macro Definition Documentation</h2>
<a id="a8c75b095bdac041c0049d4a3089446fa"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a8c75b095bdac041c0049d4a3089446fa">&#9670;&nbsp;</a></span>ARMNN_DEPRECATED</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define ARMNN_DEPRECATED&#160;&#160;&#160;[[deprecated]]</td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_deprecated_8hpp_source.xhtml#l00042">42</a> of file <a class="el" href="_deprecated_8hpp_source.xhtml">Deprecated.hpp</a>.</p>

</div>
</div>
<a id="afa734d5599f0494b4590bfa9b35b2d95"></a>
<h2 class="memtitle"><span class="permalink"><a href="#afa734d5599f0494b4590bfa9b35b2d95">&#9670;&nbsp;</a></span>ARMNN_DEPRECATED_ENUM</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define ARMNN_DEPRECATED_ENUM&#160;&#160;&#160;<a class="el" href="_deprecated_8hpp.xhtml#a8c75b095bdac041c0049d4a3089446fa">ARMNN_DEPRECATED</a></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_deprecated_8hpp_source.xhtml#l00053">53</a> of file <a class="el" href="_deprecated_8hpp_source.xhtml">Deprecated.hpp</a>.</p>

</div>
</div>
<a id="a086b9723704bff3477c44f0141652c9c"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a086b9723704bff3477c44f0141652c9c">&#9670;&nbsp;</a></span>ARMNN_DEPRECATED_ENUM_MSG</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define ARMNN_DEPRECATED_ENUM_MSG</td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">message</td><td>)</td>
          <td>&#160;&#160;&#160;<a class="el" href="_deprecated_8hpp.xhtml#a76fb13a018f8e01087a7ae0eb23509e1">ARMNN_DEPRECATED_MSG</a>(message)</td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_deprecated_8hpp_source.xhtml#l00054">54</a> of file <a class="el" href="_deprecated_8hpp_source.xhtml">Deprecated.hpp</a>.</p>

</div>
</div>
<a id="a76fb13a018f8e01087a7ae0eb23509e1"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a76fb13a018f8e01087a7ae0eb23509e1">&#9670;&nbsp;</a></span>ARMNN_DEPRECATED_MSG</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define ARMNN_DEPRECATED_MSG</td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">message</td><td>)</td>
          <td>&#160;&#160;&#160;[[deprecated(message)]]</td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_deprecated_8hpp_source.xhtml#l00043">43</a> of file <a class="el" href="_deprecated_8hpp_source.xhtml">Deprecated.hpp</a>.</p>

<p class="reference">Referenced by <a class="el" href="include_2armnn_2backends_2_workload_factory_8hpp_source.xhtml#l00027">IWorkloadFactory::AfterWorkloadsCreated()</a>, <a class="el" href="_sample_dynamic_workload_factory_8hpp_source.xhtml#l00033">SampleDynamicWorkloadFactory::CreateSubTensorHandle()</a>, <a class="el" href="_ref_workload_factory_8hpp_source.xhtml#l00052">RefWorkloadFactory::CreateSubTensorHandle()</a>, <a class="el" href="include_2armnn_test_utils_2_mock_backend_8hpp_source.xhtml#l00059">MockWorkloadFactory::CreateSubTensorHandle()</a>, <a class="el" href="include_2armnn_test_utils_2_mock_backend_8hpp_source.xhtml#l00067">MockWorkloadFactory::CreateTensorHandle()</a>, <a class="el" href="_sample_dynamic_workload_factory_8hpp_source.xhtml#l00030">SampleDynamicWorkloadFactory::SupportsSubTensors()</a>, <a class="el" href="_neon_workload_factory_8hpp_source.xhtml#l00039">NeonWorkloadFactory::SupportsSubTensors()</a>, <a class="el" href="_cl_workload_factory_8hpp_source.xhtml#l00042">ClWorkloadFactory::SupportsSubTensors()</a>, <a class="el" href="_ref_workload_factory_8hpp_source.xhtml#l00049">RefWorkloadFactory::SupportsSubTensors()</a>, and <a class="el" href="include_2armnn_test_utils_2_mock_backend_8hpp_source.xhtml#l00053">MockWorkloadFactory::SupportsSubTensors()</a>.</p>

</div>
</div>
<a id="a9d4e820f84d78cb85b1194164c8f8d8d"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a9d4e820f84d78cb85b1194164c8f8d8d">&#9670;&nbsp;</a></span>ARMNN_DEPRECATED_MSG_CHANGE_DATE</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define ARMNN_DEPRECATED_MSG_CHANGE_DATE</td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">message, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">signature_changed_in_release&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td>&#160;&#160;&#160;[[deprecated(&quot;Expected to have signature changed in release &quot; #signature_changed_in_release &quot;. &quot; message)]]</td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_deprecated_8hpp_source.xhtml#l00046">46</a> of file <a class="el" href="_deprecated_8hpp_source.xhtml">Deprecated.hpp</a>.</p>

</div>
</div>
<a id="af16119336bd0dfbfbc83fc283151067e"></a>
<h2 class="memtitle"><span class="permalink"><a href="#af16119336bd0dfbfbc83fc283151067e">&#9670;&nbsp;</a></span>ARMNN_DEPRECATED_MSG_REMOVAL_DATE</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define ARMNN_DEPRECATED_MSG_REMOVAL_DATE</td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">message, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">removed_in_release&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td>&#160;&#160;&#160;[[deprecated(&quot;Expected to be removed in release &quot; #removed_in_release &quot;. &quot; message)]]</td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_deprecated_8hpp_source.xhtml#l00044">44</a> of file <a class="el" href="_deprecated_8hpp_source.xhtml">Deprecated.hpp</a>.</p>

</div>
</div>
<a id="ab66a241a0ed3ee89c866e777b035d0ed"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ab66a241a0ed3ee89c866e777b035d0ed">&#9670;&nbsp;</a></span>ARMNN_NO_DEPRECATE_WARN_BEGIN</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define ARMNN_NO_DEPRECATE_WARN_BEGIN</td>
        </tr>
      </table>
</div><div class="memdoc">
<dl><dt><b>Examples: </b></dt><dd><a class="el" href="_custom_memory_allocator_sample_8cpp-example.xhtml#a13">CustomMemoryAllocatorSample.cpp</a>.</dd>
</dl>
<p class="definition">Definition at line <a class="el" href="_deprecated_8hpp_source.xhtml#l00033">33</a> of file <a class="el" href="_deprecated_8hpp_source.xhtml">Deprecated.hpp</a>.</p>

<p class="reference">Referenced by <a class="el" href="_network_8cpp_source.xhtml#l00469">INetwork::AddChannelShuffleLayer()</a>, <a class="el" href="_network_8cpp_source.xhtml#l02835">NetworkImpl::AddPrecompiledLayer()</a>, <a class="el" href="_layer_visitor_base_8hpp_source.xhtml#l00020">VisitorNoThrowPolicy::Apply()</a>, <a class="el" href="_addition_layer_8cpp_source.xhtml#l00030">AdditionLayer::Clone()</a>, <a class="el" href="_subtraction_layer_8cpp_source.xhtml#l00030">SubtractionLayer::Clone()</a>, <a class="el" href="_maximum_layer_8cpp_source.xhtml#l00029">MaximumLayer::Clone()</a>, <a class="el" href="_minimum_layer_8cpp_source.xhtml#l00030">MinimumLayer::Clone()</a>, <a class="el" href="_multiplication_layer_8cpp_source.xhtml#l00030">MultiplicationLayer::Clone()</a>, <a class="el" href="_division_layer_8cpp_source.xhtml#l00030">DivisionLayer::Clone()</a>, <a class="el" href="_output_layer_8hpp_source.xhtml#l00027">OutputLayer::CreateTensorHandles()</a>, <a class="el" href="_output_handler_8cpp_source.xhtml#l00021">OutputHandler::CreateTensorHandles()</a>, <a class="el" href="_cl_custom_allocator_tests_8cpp_source.xhtml#l00063">CreateTestNetwork()</a>, <a class="el" href="_loaded_network_8cpp_source.xhtml#l01821">LoadedNetwork::CreateWorkingMemHandle()</a>, <a class="el" href="_splitter_layer_8cpp_source.xhtml#l00021">SplitterLayer::CreateWorkload()</a>, <a class="el" href="_concat_layer_8cpp_source.xhtml#l00023">ConcatLayer::CreateWorkload()</a>, <a class="el" href="_subgraph_view_8cpp_source.xhtml#l00342">SubgraphView::endIConnectable()</a>, <a class="el" href="_detection_post_process_layer_8cpp_source.xhtml#l00076">DetectionPostProcessLayer::GetConstantTensorsByRef()</a>, <a class="el" href="_batch_normalization_layer_8cpp_source.xhtml#l00068">BatchNormalizationLayer::GetConstantTensorsByRef()</a>, <a class="el" href="_transpose_convolution2d_layer_8cpp_source.xhtml#l00119">TransposeConvolution2dLayer::GetConstantTensorsByRef()</a>, <a class="el" href="_depthwise_convolution2d_layer_8cpp_source.xhtml#l00146">DepthwiseConvolution2dLayer::GetConstantTensorsByRef()</a>, <a class="el" href="_fully_connected_layer_8cpp_source.xhtml#l00078">FullyConnectedLayer::GetConstantTensorsByRef()</a>, <a class="el" href="_convolution2d_layer_8cpp_source.xhtml#l00141">Convolution2dLayer::GetConstantTensorsByRef()</a>, <a class="el" href="_lstm_layer_8cpp_source.xhtml#l00270">LstmLayer::GetConstantTensorsByRef()</a>, <a class="el" href="_unidirectional_sequence_lstm_layer_8cpp_source.xhtml#l00277">UnidirectionalSequenceLstmLayer::GetConstantTensorsByRef()</a>, <a class="el" href="_quantized_lstm_layer_8cpp_source.xhtml#l00151">QuantizedLstmLayer::GetConstantTensorsByRef()</a>, <a class="el" href="_q_lstm_layer_8cpp_source.xhtml#l00272">QLstmLayer::GetConstantTensorsByRef()</a>, <a class="el" href="_network_8hpp_source.xhtml#l00037">NetworkImpl::GetGraph()</a>, <a class="el" href="_merge_layer_8cpp_source.xhtml#l00048">MergeLayer::InferOutputShapes()</a>, <a class="el" href="_slice_layer_8cpp_source.xhtml#l00052">SliceLayer::InferOutputShapes()</a>, <a class="el" href="_shape_layer_8cpp_source.xhtml#l00052">ShapeLayer::InferOutputShapes()</a>, <a class="el" href="_batch_to_space_nd_layer_8cpp_source.xhtml#l00060">BatchToSpaceNdLayer::InferOutputShapes()</a>, <a class="el" href="_backend_helper_8cpp_source.xhtml#l00114">armnn::IsCapabilitySupported()</a>, <a class="el" href="_reshape_layer_8hpp_source.xhtml#l00042">ReshapeLayer::IsEqual()</a>, <a class="el" href="_transpose_layer_8hpp_source.xhtml#l00055">TransposeLayer::IsEqual()</a>, <a class="el" href="_permute_layer_8hpp_source.xhtml#l00057">PermuteLayer::IsEqual()</a>, <a class="el" href="_workload_factory_8cpp_source.xhtml#l01528">IWorkloadFactory::IsLayerSupported()</a>, <a class="el" href="_constant_layer_8hpp_source.xhtml#l00040">ConstantLayer::ReleaseConstantData()</a>, <a class="el" href="_pre_compiled_layer_8cpp_source.xhtml#l00047">PreCompiledLayer::SetPreCompiledObject()</a>, <a class="el" href="_subgraph_view_tests_8cpp_source.xhtml#l00169">TEST_SUITE()</a>, <a class="el" href="_rank_layer_8cpp_source.xhtml#l00034">RankLayer::ValidateTensorShapesFromInputs()</a>, <a class="el" href="_quantize_layer_8cpp_source.xhtml#l00035">QuantizeLayer::ValidateTensorShapesFromInputs()</a>, <a class="el" href="_activation_layer_8cpp_source.xhtml#l00033">ActivationLayer::ValidateTensorShapesFromInputs()</a>, <a class="el" href="_convert_fp32_to_fp16_layer_8cpp_source.xhtml#l00034">ConvertFp32ToFp16Layer::ValidateTensorShapesFromInputs()</a>, <a class="el" href="_fill_layer_8cpp_source.xhtml#l00034">FillLayer::ValidateTensorShapesFromInputs()</a>, <a class="el" href="_reduce_layer_8cpp_source.xhtml#l00043">ReduceLayer::ValidateTensorShapesFromInputs()</a>, <a class="el" href="_resize_layer_8cpp_source.xhtml#l00063">ResizeLayer::ValidateTensorShapesFromInputs()</a>, <a class="el" href="_input_layer_8cpp_source.xhtml#l00031">InputLayer::ValidateTensorShapesFromInputs()</a>, <a class="el" href="_softmax_layer_8cpp_source.xhtml#l00034">SoftmaxLayer::ValidateTensorShapesFromInputs()</a>, <a class="el" href="_instance_normalization_layer_8cpp_source.xhtml#l00034">InstanceNormalizationLayer::ValidateTensorShapesFromInputs()</a>, <a class="el" href="_convert_fp32_to_bf16_layer_8cpp_source.xhtml#l00035">ConvertFp32ToBf16Layer::ValidateTensorShapesFromInputs()</a>, <a class="el" href="_rsqrt_layer_8cpp_source.xhtml#l00036">RsqrtLayer::ValidateTensorShapesFromInputs()</a>, <a class="el" href="_map_layer_8cpp_source.xhtml#l00037">MapLayer::ValidateTensorShapesFromInputs()</a>, <a class="el" href="_stack_layer_8cpp_source.xhtml#l00063">StackLayer::ValidateTensorShapesFromInputs()</a>, <a class="el" href="_cast_layer_8cpp_source.xhtml#l00034">CastLayer::ValidateTensorShapesFromInputs()</a>, <a class="el" href="_l2_normalization_layer_8cpp_source.xhtml#l00034">L2NormalizationLayer::ValidateTensorShapesFromInputs()</a>, <a class="el" href="_fake_quantization_layer_8cpp_source.xhtml#l00034">FakeQuantizationLayer::ValidateTensorShapesFromInputs()</a>, <a class="el" href="_debug_layer_8cpp_source.xhtml#l00039">DebugLayer::ValidateTensorShapesFromInputs()</a>, <a class="el" href="_floor_layer_8cpp_source.xhtml#l00034">FloorLayer::ValidateTensorShapesFromInputs()</a>, <a class="el" href="_convert_fp16_to_fp32_layer_8cpp_source.xhtml#l00035">ConvertFp16ToFp32Layer::ValidateTensorShapesFromInputs()</a>, <a class="el" href="_mem_copy_layer_8cpp_source.xhtml#l00037">MemCopyLayer::ValidateTensorShapesFromInputs()</a>, <a class="el" href="_mem_import_layer_8cpp_source.xhtml#l00037">MemImportLayer::ValidateTensorShapesFromInputs()</a>, <a class="el" href="_dequantize_layer_8cpp_source.xhtml#l00033">DequantizeLayer::ValidateTensorShapesFromInputs()</a>, <a class="el" href="_unmap_layer_8cpp_source.xhtml#l00037">UnmapLayer::ValidateTensorShapesFromInputs()</a>, <a class="el" href="_pooling2d_layer_8cpp_source.xhtml#l00105">Pooling2dLayer::ValidateTensorShapesFromInputs()</a>, <a class="el" href="_pooling3d_layer_8cpp_source.xhtml#l00109">Pooling3dLayer::ValidateTensorShapesFromInputs()</a>, <a class="el" href="_normalization_layer_8cpp_source.xhtml#l00034">NormalizationLayer::ValidateTensorShapesFromInputs()</a>, <a class="el" href="_abs_layer_8cpp_source.xhtml#l00036">AbsLayer::ValidateTensorShapesFromInputs()</a>, <a class="el" href="_convert_bf16_to_fp32_layer_8cpp_source.xhtml#l00035">ConvertBf16ToFp32Layer::ValidateTensorShapesFromInputs()</a>, <a class="el" href="_transpose_layer_8cpp_source.xhtml#l00045">TransposeLayer::ValidateTensorShapesFromInputs()</a>, <a class="el" href="_log_softmax_layer_8cpp_source.xhtml#l00034">LogSoftmaxLayer::ValidateTensorShapesFromInputs()</a>, <a class="el" href="_stand_in_layer_8cpp_source.xhtml#l00037">StandInLayer::ValidateTensorShapesFromInputs()</a>, <a class="el" href="_channel_shuffle_layer_8cpp_source.xhtml#l00035">ChannelShuffleLayer::ValidateTensorShapesFromInputs()</a>, <a class="el" href="_mean_layer_8cpp_source.xhtml#l00044">MeanLayer::ValidateTensorShapesFromInputs()</a>, <a class="el" href="_pad_layer_8cpp_source.xhtml#l00061">PadLayer::ValidateTensorShapesFromInputs()</a>, <a class="el" href="_reshape_layer_8cpp_source.xhtml#l00041">ReshapeLayer::ValidateTensorShapesFromInputs()</a>, <a class="el" href="_constant_layer_8cpp_source.xhtml#l00045">ConstantLayer::ValidateTensorShapesFromInputs()</a>, <a class="el" href="_permute_layer_8cpp_source.xhtml#l00045">PermuteLayer::ValidateTensorShapesFromInputs()</a>, <a class="el" href="_convolution3d_layer_8cpp_source.xhtml#l00107">Convolution3dLayer::ValidateTensorShapesFromInputs()</a>, <a class="el" href="_strided_slice_layer_8cpp_source.xhtml#l00099">StridedSliceLayer::ValidateTensorShapesFromInputs()</a>, <a class="el" href="_gather_layer_8cpp_source.xhtml#l00074">GatherLayer::ValidateTensorShapesFromInputs()</a>, <a class="el" href="_arg_min_max_layer_8cpp_source.xhtml#l00074">ArgMinMaxLayer::ValidateTensorShapesFromInputs()</a>, <a class="el" href="_elementwise_unary_layer_8cpp_source.xhtml#l00043">ElementwiseUnaryLayer::ValidateTensorShapesFromInputs()</a>, <a class="el" href="_space_to_batch_nd_layer_8cpp_source.xhtml#l00070">SpaceToBatchNdLayer::ValidateTensorShapesFromInputs()</a>, <a class="el" href="_comparison_layer_8cpp_source.xhtml#l00060">ComparisonLayer::ValidateTensorShapesFromInputs()</a>, <a class="el" href="_depth_to_space_layer_8cpp_source.xhtml#l00062">DepthToSpaceLayer::ValidateTensorShapesFromInputs()</a>, <a class="el" href="_prelu_layer_8cpp_source.xhtml#l00100">PreluLayer::ValidateTensorShapesFromInputs()</a>, <a class="el" href="_logical_binary_layer_8cpp_source.xhtml#l00058">LogicalBinaryLayer::ValidateTensorShapesFromInputs()</a>, <a class="el" href="_space_to_depth_layer_8cpp_source.xhtml#l00064">SpaceToDepthLayer::ValidateTensorShapesFromInputs()</a>, and <a class="el" href="_output_layer_8cpp_source.xhtml#l00032">OutputLayer::ValidateTensorShapesFromInputs()</a>.</p>

</div>
</div>
<a id="ad762b11b48e5c1d1c1743f529485728a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ad762b11b48e5c1d1c1743f529485728a">&#9670;&nbsp;</a></span>ARMNN_NO_DEPRECATE_WARN_END</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define ARMNN_NO_DEPRECATE_WARN_END</td>
        </tr>
      </table>
</div><div class="memdoc">
<dl><dt><b>Examples: </b></dt><dd><a class="el" href="_custom_memory_allocator_sample_8cpp-example.xhtml#a16">CustomMemoryAllocatorSample.cpp</a>.</dd>
</dl>
<p class="definition">Definition at line <a class="el" href="_deprecated_8hpp_source.xhtml#l00034">34</a> of file <a class="el" href="_deprecated_8hpp_source.xhtml">Deprecated.hpp</a>.</p>

<p class="reference">Referenced by <a class="el" href="_channel_shuffle_layer_8cpp_source.xhtml#l00051">ChannelShuffleLayer::Accept()</a>, <a class="el" href="_rank_layer_8cpp_source.xhtml#l00046">RankLayer::Accept()</a>, <a class="el" href="_addition_layer_8cpp_source.xhtml#l00036">AdditionLayer::Accept()</a>, <a class="el" href="_quantize_layer_8cpp_source.xhtml#l00049">QuantizeLayer::Accept()</a>, <a class="el" href="_maximum_layer_8cpp_source.xhtml#l00035">MaximumLayer::Accept()</a>, <a class="el" href="_subtraction_layer_8cpp_source.xhtml#l00036">SubtractionLayer::Accept()</a>, <a class="el" href="_minimum_layer_8cpp_source.xhtml#l00036">MinimumLayer::Accept()</a>, <a class="el" href="_multiplication_layer_8cpp_source.xhtml#l00036">MultiplicationLayer::Accept()</a>, <a class="el" href="_division_layer_8cpp_source.xhtml#l00036">DivisionLayer::Accept()</a>, <a class="el" href="_activation_layer_8cpp_source.xhtml#l00049">ActivationLayer::Accept()</a>, <a class="el" href="_reduce_layer_8cpp_source.xhtml#l00106">ReduceLayer::Accept()</a>, <a class="el" href="_fill_layer_8cpp_source.xhtml#l00055">FillLayer::Accept()</a>, <a class="el" href="_convert_fp32_to_fp16_layer_8cpp_source.xhtml#l00051">ConvertFp32ToFp16Layer::Accept()</a>, <a class="el" href="_convert_bf16_to_fp32_layer_8cpp_source.xhtml#l00051">ConvertBf16ToFp32Layer::Accept()</a>, <a class="el" href="_floor_layer_8cpp_source.xhtml#l00049">FloorLayer::Accept()</a>, <a class="el" href="_rsqrt_layer_8cpp_source.xhtml#l00052">RsqrtLayer::Accept()</a>, <a class="el" href="_softmax_layer_8cpp_source.xhtml#l00050">SoftmaxLayer::Accept()</a>, <a class="el" href="_input_layer_8cpp_source.xhtml#l00039">InputLayer::Accept()</a>, <a class="el" href="_instance_normalization_layer_8cpp_source.xhtml#l00050">InstanceNormalizationLayer::Accept()</a>, <a class="el" href="_convert_fp16_to_fp32_layer_8cpp_source.xhtml#l00051">ConvertFp16ToFp32Layer::Accept()</a>, <a class="el" href="_l2_normalization_layer_8cpp_source.xhtml#l00050">L2NormalizationLayer::Accept()</a>, <a class="el" href="_cast_layer_8cpp_source.xhtml#l00050">CastLayer::Accept()</a>, <a class="el" href="_switch_layer_8cpp_source.xhtml#l00056">SwitchLayer::Accept()</a>, <a class="el" href="_convert_fp32_to_bf16_layer_8cpp_source.xhtml#l00052">ConvertFp32ToBf16Layer::Accept()</a>, <a class="el" href="_unmap_layer_8cpp_source.xhtml#l00045">UnmapLayer::Accept()</a>, <a class="el" href="_map_layer_8cpp_source.xhtml#l00045">MapLayer::Accept()</a>, <a class="el" href="_mem_copy_layer_8cpp_source.xhtml#l00053">MemCopyLayer::Accept()</a>, <a class="el" href="_mem_import_layer_8cpp_source.xhtml#l00053">MemImportLayer::Accept()</a>, <a class="el" href="_debug_layer_8cpp_source.xhtml#l00056">DebugLayer::Accept()</a>, <a class="el" href="_normalization_layer_8cpp_source.xhtml#l00050">NormalizationLayer::Accept()</a>, <a class="el" href="_dequantize_layer_8cpp_source.xhtml#l00050">DequantizeLayer::Accept()</a>, <a class="el" href="_abs_layer_8cpp_source.xhtml#l00051">AbsLayer::Accept()</a>, <a class="el" href="_fake_quantization_layer_8cpp_source.xhtml#l00050">FakeQuantizationLayer::Accept()</a>, <a class="el" href="_log_softmax_layer_8cpp_source.xhtml#l00049">LogSoftmaxLayer::Accept()</a>, <a class="el" href="_mean_layer_8cpp_source.xhtml#l00107">MeanLayer::Accept()</a>, <a class="el" href="_merge_layer_8cpp_source.xhtml#l00062">MergeLayer::Accept()</a>, <a class="el" href="_pre_compiled_layer_8cpp_source.xhtml#l00053">PreCompiledLayer::Accept()</a>, <a class="el" href="_arg_min_max_layer_8cpp_source.xhtml#l00090">ArgMinMaxLayer::Accept()</a>, <a class="el" href="_resize_layer_8cpp_source.xhtml#l00079">ResizeLayer::Accept()</a>, <a class="el" href="_gather_layer_8cpp_source.xhtml#l00093">GatherLayer::Accept()</a>, <a class="el" href="_shape_layer_8cpp_source.xhtml#l00063">ShapeLayer::Accept()</a>, <a class="el" href="_slice_layer_8cpp_source.xhtml#l00063">SliceLayer::Accept()</a>, <a class="el" href="_stack_layer_8cpp_source.xhtml#l00099">StackLayer::Accept()</a>, <a class="el" href="_strided_slice_layer_8cpp_source.xhtml#l00115">StridedSliceLayer::Accept()</a>, <a class="el" href="_batch_to_space_nd_layer_8cpp_source.xhtml#l00099">BatchToSpaceNdLayer::Accept()</a>, <a class="el" href="_pooling2d_layer_8cpp_source.xhtml#l00121">Pooling2dLayer::Accept()</a>, <a class="el" href="_pooling3d_layer_8cpp_source.xhtml#l00125">Pooling3dLayer::Accept()</a>, <a class="el" href="_detection_post_process_layer_8cpp_source.xhtml#l00083">DetectionPostProcessLayer::Accept()</a>, <a class="el" href="_elementwise_unary_layer_8cpp_source.xhtml#l00059">ElementwiseUnaryLayer::Accept()</a>, <a class="el" href="_space_to_batch_nd_layer_8cpp_source.xhtml#l00087">SpaceToBatchNdLayer::Accept()</a>, <a class="el" href="_space_to_depth_layer_8cpp_source.xhtml#l00081">SpaceToDepthLayer::Accept()</a>, <a class="el" href="_logical_binary_layer_8cpp_source.xhtml#l00076">LogicalBinaryLayer::Accept()</a>, <a class="el" href="_depth_to_space_layer_8cpp_source.xhtml#l00079">DepthToSpaceLayer::Accept()</a>, <a class="el" href="_pad_layer_8cpp_source.xhtml#l00077">PadLayer::Accept()</a>, <a class="el" href="_comparison_layer_8cpp_source.xhtml#l00078">ComparisonLayer::Accept()</a>, <a class="el" href="_prelu_layer_8cpp_source.xhtml#l00120">PreluLayer::Accept()</a>, <a class="el" href="_stand_in_layer_8cpp_source.xhtml#l00045">StandInLayer::Accept()</a>, <a class="el" href="_convolution3d_layer_8cpp_source.xhtml#l00128">Convolution3dLayer::Accept()</a>, <a class="el" href="_batch_normalization_layer_8cpp_source.xhtml#l00075">BatchNormalizationLayer::Accept()</a>, <a class="el" href="_constant_layer_8cpp_source.xhtml#l00066">ConstantLayer::Accept()</a>, <a class="el" href="_transpose_convolution2d_layer_8cpp_source.xhtml#l00126">TransposeConvolution2dLayer::Accept()</a>, <a class="el" href="_output_layer_8cpp_source.xhtml#l00041">OutputLayer::Accept()</a>, <a class="el" href="_depthwise_convolution2d_layer_8cpp_source.xhtml#l00153">DepthwiseConvolution2dLayer::Accept()</a>, <a class="el" href="_convolution2d_layer_8cpp_source.xhtml#l00148">Convolution2dLayer::Accept()</a>, <a class="el" href="_splitter_layer_8cpp_source.xhtml#l00245">SplitterLayer::Accept()</a>, <a class="el" href="_fully_connected_layer_8cpp_source.xhtml#l00085">FullyConnectedLayer::Accept()</a>, <a class="el" href="_unidirectional_sequence_lstm_layer_8cpp_source.xhtml#l00312">UnidirectionalSequenceLstmLayer::Accept()</a>, <a class="el" href="_lstm_layer_8cpp_source.xhtml#l00305">LstmLayer::Accept()</a>, <a class="el" href="_concat_layer_8cpp_source.xhtml#l00322">ConcatLayer::Accept()</a>, <a class="el" href="_reshape_layer_8cpp_source.xhtml#l00057">ReshapeLayer::Accept()</a>, <a class="el" href="_transpose_layer_8cpp_source.xhtml#l00061">TransposeLayer::Accept()</a>, <a class="el" href="_permute_layer_8cpp_source.xhtml#l00061">PermuteLayer::Accept()</a>, <a class="el" href="_quantized_lstm_layer_8cpp_source.xhtml#l00174">QuantizedLstmLayer::Accept()</a>, <a class="el" href="_q_lstm_layer_8cpp_source.xhtml#l00307">QLstmLayer::Accept()</a>, <a class="el" href="_network_8cpp_source.xhtml#l02869">NetworkImpl::Accept()</a>, <a class="el" href="_network_8cpp_source.xhtml#l00469">INetwork::AddChannelShuffleLayer()</a>, <a class="el" href="include_2armnn_2backends_2_workload_data_8hpp_source.xhtml#l00346">armnn::ARMNN_DEPRECATED_MSG_REMOVAL_DATE()</a>, <a class="el" href="_output_layer_8hpp_source.xhtml#l00027">OutputLayer::CreateTensorHandles()</a>, <a class="el" href="_output_handler_8cpp_source.xhtml#l00021">OutputHandler::CreateTensorHandles()</a>, <a class="el" href="_cl_custom_allocator_tests_8cpp_source.xhtml#l00063">CreateTestNetwork()</a>, <a class="el" href="_loaded_network_8cpp_source.xhtml#l01821">LoadedNetwork::CreateWorkingMemHandle()</a>, <a class="el" href="_splitter_layer_8cpp_source.xhtml#l00021">SplitterLayer::CreateWorkload()</a>, <a class="el" href="_concat_layer_8cpp_source.xhtml#l00023">ConcatLayer::CreateWorkload()</a>, <a class="el" href="_workload_factory_8cpp_source.xhtml#l01541">IWorkloadFactory::CreateWorkload()</a>, <a class="el" href="_subgraph_view_8cpp_source.xhtml#l00342">SubgraphView::endIConnectable()</a>, <a class="el" href="_network_8hpp_source.xhtml#l00037">NetworkImpl::GetGraph()</a>, <a class="el" href="_backend_helper_8cpp_source.xhtml#l00114">armnn::IsCapabilitySupported()</a>, <a class="el" href="_reshape_layer_8hpp_source.xhtml#l00042">ReshapeLayer::IsEqual()</a>, <a class="el" href="_transpose_layer_8hpp_source.xhtml#l00055">TransposeLayer::IsEqual()</a>, <a class="el" href="_permute_layer_8hpp_source.xhtml#l00057">PermuteLayer::IsEqual()</a>, <a class="el" href="_i_layer_support_8cpp_source.xhtml#l00018">ILayerSupport::IsLayerSupported()</a>, <a class="el" href="_constant_layer_8hpp_source.xhtml#l00040">ConstantLayer::ReleaseConstantData()</a>, <a class="el" href="_subgraph_view_tests_8cpp_source.xhtml#l00169">TEST_SUITE()</a>, and <a class="el" href="_layer_visitor_base_8hpp_source.xhtml#l00256">LayerVisitorBase&lt; DefaultPolicy &gt;::VisitTransposeLayer()</a>.</p>

</div>
</div>
<a id="a90359488b89729403b0245dcee714cf0"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a90359488b89729403b0245dcee714cf0">&#9670;&nbsp;</a></span>ARMNN_SUPPRESS_DEPRECATE_WARNING</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define ARMNN_SUPPRESS_DEPRECATE_WARNING</td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">func</td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<b>Value:</b><div class="fragment"><div class="line">ARMNN_NO_DEPRECATE_WARN_BEGIN \</div><div class="line">func; \</div><div class="line">ARMNN_NO_DEPRECATE_WARN_END</div></div><!-- fragment -->
<p class="definition">Definition at line <a class="el" href="_deprecated_8hpp_source.xhtml#l00037">37</a> of file <a class="el" href="_deprecated_8hpp_source.xhtml">Deprecated.hpp</a>.</p>

</div>
</div>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="dir_d44c64559bbebec7f509842c48db8b23.xhtml">include</a></li><li class="navelem"><a class="el" href="dir_2b72cc348e06937955e62ebdd8a13436.xhtml">armnn</a></li><li class="navelem"><a class="el" href="_deprecated_8hpp.xhtml">Deprecated.hpp</a></li>
    <li class="footer">Generated on Tue Feb 22 2022 11:39:36 for ArmNN by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.13 </li>
  </ul>
</div>
</body>
</html>
