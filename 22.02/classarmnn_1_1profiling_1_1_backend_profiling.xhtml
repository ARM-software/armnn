<!-- Copyright (c) 2020 ARM Limited. -->
<!--                                 -->
<!-- SPDX-License-Identifier: MIT    -->
<!--                                 -->
<!-- HTML header for doxygen 1.8.13-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.13"/>
<meta name="robots" content="NOINDEX, NOFOLLOW" />
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>ArmNN: BackendProfiling Class Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script><script type="text/javascript" src="http://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="stylesheet.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <img alt="ArmNN" src="Arm_NN_horizontal_blue.png" style="max-width: 10rem; margin-top: .5rem; margin-left 10px"/>
  <td style="padding-left: 0.5em;">
   <div id="projectname">
   &#160;<span id="projectnumber">22.02</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.13 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
$(document).ready(function(){initNavTree('classarmnn_1_1profiling_1_1_backend_profiling.xhtml','');});
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="summary">
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="classarmnn_1_1profiling_1_1_backend_profiling-members.xhtml">List of all members</a>  </div>
  <div class="headertitle">
<div class="title">BackendProfiling Class Reference</div>  </div>
</div><!--header-->
<div class="contents">

<p><code>#include &lt;<a class="el" href="_backend_profiling_8hpp_source.xhtml">BackendProfiling.hpp</a>&gt;</code></p>
<div class="dynheader">
Inheritance diagram for BackendProfiling:</div>
<div class="dyncontent">
 <div class="center">
  <img src="classarmnn_1_1profiling_1_1_backend_profiling.png" usemap="#BackendProfiling_map" alt=""/>
  <map id="BackendProfiling_map" name="BackendProfiling_map">
<area href="classarmnn_1_1profiling_1_1_i_backend_profiling.xhtml" alt="IBackendProfiling" shape="rect" coords="0,0,111,24"/>
</map>
 </div></div>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:a7160ce0a355e687efa2e27615d135621"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1profiling_1_1_backend_profiling.xhtml#a7160ce0a355e687efa2e27615d135621">BackendProfiling</a> (const <a class="el" href="structarmnn_1_1_i_runtime_1_1_creation_options.xhtml">IRuntime::CreationOptions</a> &amp;options, <a class="el" href="classarmnn_1_1profiling_1_1_profiling_service.xhtml">ProfilingService</a> &amp;profilingService, const <a class="el" href="classarmnn_1_1_backend_id.xhtml">BackendId</a> &amp;backendId)</td></tr>
<tr class="separator:a7160ce0a355e687efa2e27615d135621"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad6461bdc54c179fce4e84258ec56dc61"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1profiling_1_1_backend_profiling.xhtml#ad6461bdc54c179fce4e84258ec56dc61">~BackendProfiling</a> ()</td></tr>
<tr class="separator:ad6461bdc54c179fce4e84258ec56dc61"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0ac323cf9d8c03c718065cd775bc2a48"><td class="memItemLeft" align="right" valign="top">std::unique_ptr&lt; <a class="el" href="classarmnn_1_1profiling_1_1_i_register_backend_counters.xhtml">IRegisterBackendCounters</a> &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1profiling_1_1_backend_profiling.xhtml#a0ac323cf9d8c03c718065cd775bc2a48">GetCounterRegistrationInterface</a> (uint16_t currentMaxGlobalCounterID) override</td></tr>
<tr class="separator:a0ac323cf9d8c03c718065cd775bc2a48"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a24eb027ca494ee70c27e6322494325d8"><td class="memItemLeft" align="right" valign="top">std::unique_ptr&lt; <a class="el" href="classarmnn_1_1profiling_1_1_i_send_timeline_packet.xhtml">ISendTimelinePacket</a> &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1profiling_1_1_backend_profiling.xhtml#a24eb027ca494ee70c27e6322494325d8">GetSendTimelinePacket</a> () override</td></tr>
<tr class="separator:a24eb027ca494ee70c27e6322494325d8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a281672bed6fd49540270725a3eea867b"><td class="memItemLeft" align="right" valign="top">IProfilingGuidGenerator &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1profiling_1_1_backend_profiling.xhtml#a281672bed6fd49540270725a3eea867b">GetProfilingGuidGenerator</a> () override</td></tr>
<tr class="separator:a281672bed6fd49540270725a3eea867b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa51df0c342290615803a99525816e3e3"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1profiling_1_1_backend_profiling.xhtml#aa51df0c342290615803a99525816e3e3">ReportCounters</a> (const std::vector&lt; <a class="el" href="structarmnn_1_1profiling_1_1_timestamp.xhtml">Timestamp</a> &gt; &amp;) override</td></tr>
<tr class="separator:aa51df0c342290615803a99525816e3e3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a23d09d59f5da5d396a89c9543204dce3"><td class="memItemLeft" align="right" valign="top"><a class="el" href="structarmnn_1_1profiling_1_1_counter_status.xhtml">CounterStatus</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1profiling_1_1_backend_profiling.xhtml#a23d09d59f5da5d396a89c9543204dce3">GetCounterStatus</a> (uint16_t backendCounterId) override</td></tr>
<tr class="separator:a23d09d59f5da5d396a89c9543204dce3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a54b66ce39aa9a413d8d68f6e2569af45"><td class="memItemLeft" align="right" valign="top">std::vector&lt; <a class="el" href="structarmnn_1_1profiling_1_1_counter_status.xhtml">CounterStatus</a> &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1profiling_1_1_backend_profiling.xhtml#a54b66ce39aa9a413d8d68f6e2569af45">GetActiveCounters</a> () override</td></tr>
<tr class="separator:a54b66ce39aa9a413d8d68f6e2569af45"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a70db5b1cdd0d22c1fa912c6e8b9089ce"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1profiling_1_1_backend_profiling.xhtml#a70db5b1cdd0d22c1fa912c6e8b9089ce">IsProfilingEnabled</a> () const override</td></tr>
<tr class="separator:a70db5b1cdd0d22c1fa912c6e8b9089ce"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pub_methods_classarmnn_1_1profiling_1_1_i_backend_profiling"><td colspan="2" onclick="javascript:toggleInherit('pub_methods_classarmnn_1_1profiling_1_1_i_backend_profiling')"><img src="closed.png" alt="-"/>&#160;Public Member Functions inherited from <a class="el" href="classarmnn_1_1profiling_1_1_i_backend_profiling.xhtml">IBackendProfiling</a></td></tr>
<tr class="memitem:a1179976118abc3d6765a5b2fea4be35c inherit pub_methods_classarmnn_1_1profiling_1_1_i_backend_profiling"><td class="memItemLeft" align="right" valign="top">virtual&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1profiling_1_1_i_backend_profiling.xhtml#a1179976118abc3d6765a5b2fea4be35c">~IBackendProfiling</a> ()</td></tr>
<tr class="separator:a1179976118abc3d6765a5b2fea4be35c inherit pub_methods_classarmnn_1_1profiling_1_1_i_backend_profiling"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock">
<p class="definition">Definition at line <a class="el" href="_backend_profiling_8hpp_source.xhtml#l00017">17</a> of file <a class="el" href="_backend_profiling_8hpp_source.xhtml">BackendProfiling.hpp</a>.</p>
</div><h2 class="groupheader">Constructor &amp; Destructor Documentation</h2>
<a id="a7160ce0a355e687efa2e27615d135621"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a7160ce0a355e687efa2e27615d135621">&#9670;&nbsp;</a></span>BackendProfiling()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarmnn_1_1profiling_1_1_backend_profiling.xhtml">BackendProfiling</a> </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="structarmnn_1_1_i_runtime_1_1_creation_options.xhtml">IRuntime::CreationOptions</a> &amp;&#160;</td>
          <td class="paramname"><em>options</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="classarmnn_1_1profiling_1_1_profiling_service.xhtml">ProfilingService</a> &amp;&#160;</td>
          <td class="paramname"><em>profilingService</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_backend_id.xhtml">BackendId</a> &amp;&#160;</td>
          <td class="paramname"><em>backendId</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_backend_profiling_8hpp_source.xhtml#l00020">20</a> of file <a class="el" href="_backend_profiling_8hpp_source.xhtml">BackendProfiling.hpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;            : m_Options(options),</div><div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;              m_ProfilingService(profilingService),</div><div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;              m_BackendId(backendId) {}</div></div><!-- fragment -->
</div>
</div>
<a id="ad6461bdc54c179fce4e84258ec56dc61"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ad6461bdc54c179fce4e84258ec56dc61">&#9670;&nbsp;</a></span>~BackendProfiling()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">~<a class="el" href="classarmnn_1_1profiling_1_1_backend_profiling.xhtml">BackendProfiling</a> </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_backend_profiling_8hpp_source.xhtml#l00027">27</a> of file <a class="el" href="_backend_profiling_8hpp_source.xhtml">BackendProfiling.hpp</a>.</p>

<p class="reference">References <a class="el" href="_backend_profiling_8cpp_source.xhtml#l00067">BackendProfiling::GetActiveCounters()</a>, <a class="el" href="_backend_profiling_8cpp_source.xhtml#l00016">BackendProfiling::GetCounterRegistrationInterface()</a>, <a class="el" href="_backend_profiling_8cpp_source.xhtml#l00051">BackendProfiling::GetCounterStatus()</a>, <a class="el" href="_backend_profiling_8cpp_source.xhtml#l00027">BackendProfiling::GetProfilingGuidGenerator()</a>, <a class="el" href="_backend_profiling_8cpp_source.xhtml#l00022">BackendProfiling::GetSendTimelinePacket()</a>, <a class="el" href="_backend_profiling_8cpp_source.xhtml#l00090">BackendProfiling::IsProfilingEnabled()</a>, and <a class="el" href="_backend_profiling_8cpp_source.xhtml#l00033">BackendProfiling::ReportCounters()</a>.</p>
<div class="fragment"><div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;    {}</div></div><!-- fragment -->
</div>
</div>
<h2 class="groupheader">Member Function Documentation</h2>
<a id="a54b66ce39aa9a413d8d68f6e2569af45"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a54b66ce39aa9a413d8d68f6e2569af45">&#9670;&nbsp;</a></span>GetActiveCounters()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">std::vector&lt; <a class="el" href="structarmnn_1_1profiling_1_1_counter_status.xhtml">CounterStatus</a> &gt; GetActiveCounters </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Implements <a class="el" href="classarmnn_1_1profiling_1_1_i_backend_profiling.xhtml#a33b3b8d541860022fe9edecfee7284d6">IBackendProfiling</a>.</p>

<p class="definition">Definition at line <a class="el" href="_backend_profiling_8cpp_source.xhtml#l00067">67</a> of file <a class="el" href="_backend_profiling_8cpp_source.xhtml">BackendProfiling.cpp</a>.</p>

<p class="reference">References <a class="el" href="classarmnn_1_1profiling_1_1_i_counter_mappings.xhtml#a8c03a58ac20b34e541bad78df16859e8">ICounterMappings::GetBackendId()</a>, <a class="el" href="_profiling_service_8cpp_source.xhtml#l00275">ProfilingService::GetCaptureData()</a>, <a class="el" href="_holder_8cpp_source.xhtml#l00044">CaptureData::GetCapturePeriod()</a>, <a class="el" href="_holder_8cpp_source.xhtml#l00049">CaptureData::GetCounterIds()</a>, and <a class="el" href="_profiling_service_8cpp_source.xhtml#l00265">ProfilingService::GetCounterMappings()</a>.</p>

<p class="reference">Referenced by <a class="el" href="_backend_profiling_8hpp_source.xhtml#l00027">BackendProfiling::~BackendProfiling()</a>.</p>
<div class="fragment"><div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;{</div><div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;    CaptureData captureData = m_ProfilingService.<a class="code" href="classarmnn_1_1profiling_1_1_profiling_service.xhtml#aff23669159bfc39106dc16d50c0a6e5f">GetCaptureData</a>();</div><div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;</div><div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;    <span class="keyword">const</span> std::vector&lt;uint16_t&gt;&amp; globalCounterIds = captureData.<a class="code" href="classarmnn_1_1profiling_1_1_capture_data.xhtml#a47fc9ce6c654658dfeb9f8ed2071885e">GetCounterIds</a>();</div><div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;    std::vector&lt;CounterStatus&gt; activeCounterIds;</div><div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;</div><div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;    <span class="keywordflow">for</span> (<span class="keyword">auto</span> globalCounterId : globalCounterIds) {</div><div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;        <span class="comment">// Get pair of local counterId and backendId using globalCounterId</span></div><div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;        <span class="keyword">const</span> std::pair&lt;uint16_t, armnn::BackendId&gt;&amp; backendCounterIdPair =</div><div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;                m_ProfilingService.<a class="code" href="classarmnn_1_1profiling_1_1_profiling_service.xhtml#aed969262d8bf6d59eb8f65fb89d47959">GetCounterMappings</a>().<a class="code" href="classarmnn_1_1profiling_1_1_i_counter_mappings.xhtml#a8c03a58ac20b34e541bad78df16859e8">GetBackendId</a>(globalCounterId);</div><div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;        <span class="keywordflow">if</span> (backendCounterIdPair.second == m_BackendId)</div><div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;        {</div><div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;            activeCounterIds.emplace_back(backendCounterIdPair.first,</div><div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;                                          globalCounterId,</div><div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;                                          <span class="keyword">true</span>,</div><div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;                                          captureData.GetCapturePeriod());</div><div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;        }</div><div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;    }</div><div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;</div><div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;    <span class="keywordflow">return</span> activeCounterIds;</div><div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;}</div><div class="ttc" id="classarmnn_1_1profiling_1_1_capture_data_xhtml_a47fc9ce6c654658dfeb9f8ed2071885e"><div class="ttname"><a href="classarmnn_1_1profiling_1_1_capture_data.xhtml#a47fc9ce6c654658dfeb9f8ed2071885e">armnn::profiling::CaptureData::GetCounterIds</a></div><div class="ttdeci">const std::vector&lt; uint16_t &gt; &amp; GetCounterIds() const</div><div class="ttdef"><b>Definition:</b> <a href="_holder_8cpp_source.xhtml#l00049">Holder.cpp:49</a></div></div>
<div class="ttc" id="classarmnn_1_1profiling_1_1_profiling_service_xhtml_aed969262d8bf6d59eb8f65fb89d47959"><div class="ttname"><a href="classarmnn_1_1profiling_1_1_profiling_service.xhtml#aed969262d8bf6d59eb8f65fb89d47959">armnn::profiling::ProfilingService::GetCounterMappings</a></div><div class="ttdeci">const ICounterMappings &amp; GetCounterMappings() const override</div><div class="ttdef"><b>Definition:</b> <a href="_profiling_service_8cpp_source.xhtml#l00265">ProfilingService.cpp:265</a></div></div>
<div class="ttc" id="classarmnn_1_1profiling_1_1_profiling_service_xhtml_aff23669159bfc39106dc16d50c0a6e5f"><div class="ttname"><a href="classarmnn_1_1profiling_1_1_profiling_service.xhtml#aff23669159bfc39106dc16d50c0a6e5f">armnn::profiling::ProfilingService::GetCaptureData</a></div><div class="ttdeci">CaptureData GetCaptureData() override</div><div class="ttdef"><b>Definition:</b> <a href="_profiling_service_8cpp_source.xhtml#l00275">ProfilingService.cpp:275</a></div></div>
<div class="ttc" id="classarmnn_1_1profiling_1_1_i_counter_mappings_xhtml_a8c03a58ac20b34e541bad78df16859e8"><div class="ttname"><a href="classarmnn_1_1profiling_1_1_i_counter_mappings.xhtml#a8c03a58ac20b34e541bad78df16859e8">armnn::profiling::ICounterMappings::GetBackendId</a></div><div class="ttdeci">virtual const std::pair&lt; uint16_t, armnn::BackendId &gt; &amp; GetBackendId(uint16_t globalCounterId) const =0</div></div>
</div><!-- fragment -->
</div>
</div>
<a id="a0ac323cf9d8c03c718065cd775bc2a48"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a0ac323cf9d8c03c718065cd775bc2a48">&#9670;&nbsp;</a></span>GetCounterRegistrationInterface()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">std::unique_ptr&lt; <a class="el" href="classarmnn_1_1profiling_1_1_i_register_backend_counters.xhtml">IRegisterBackendCounters</a> &gt; GetCounterRegistrationInterface </td>
          <td>(</td>
          <td class="paramtype">uint16_t&#160;</td>
          <td class="paramname"><em>currentMaxGlobalCounterID</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Implements <a class="el" href="classarmnn_1_1profiling_1_1_i_backend_profiling.xhtml#a3af5b700b06e401119749bd3a80bacf0">IBackendProfiling</a>.</p>

<p class="definition">Definition at line <a class="el" href="_backend_profiling_8cpp_source.xhtml#l00016">16</a> of file <a class="el" href="_backend_profiling_8cpp_source.xhtml">BackendProfiling.cpp</a>.</p>

<p class="reference">Referenced by <a class="el" href="_backend_profiling_8hpp_source.xhtml#l00027">BackendProfiling::~BackendProfiling()</a>.</p>
<div class="fragment"><div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;{</div><div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;    <span class="keywordflow">return</span> std::make_unique&lt;RegisterBackendCounters&gt;(</div><div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;        RegisterBackendCounters(currentMaxGlobalCounterID, m_BackendId, m_ProfilingService));</div><div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;}</div></div><!-- fragment -->
</div>
</div>
<a id="a23d09d59f5da5d396a89c9543204dce3"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a23d09d59f5da5d396a89c9543204dce3">&#9670;&nbsp;</a></span>GetCounterStatus()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="structarmnn_1_1profiling_1_1_counter_status.xhtml">CounterStatus</a> GetCounterStatus </td>
          <td>(</td>
          <td class="paramtype">uint16_t&#160;</td>
          <td class="paramname"><em>backendCounterId</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Implements <a class="el" href="classarmnn_1_1profiling_1_1_i_backend_profiling.xhtml#ab159fe93b4a4357f55b55920e03b9af6">IBackendProfiling</a>.</p>

<p class="definition">Definition at line <a class="el" href="_backend_profiling_8cpp_source.xhtml#l00051">51</a> of file <a class="el" href="_backend_profiling_8cpp_source.xhtml">BackendProfiling.cpp</a>.</p>

<p class="reference">References <a class="el" href="_profiling_service_8cpp_source.xhtml#l00275">ProfilingService::GetCaptureData()</a>, <a class="el" href="_holder_8cpp_source.xhtml#l00044">CaptureData::GetCapturePeriod()</a>, <a class="el" href="_profiling_service_8cpp_source.xhtml#l00265">ProfilingService::GetCounterMappings()</a>, <a class="el" href="classarmnn_1_1profiling_1_1_i_counter_mappings.xhtml#a83e6db8d13e21158334ca6722b20fa67">ICounterMappings::GetGlobalId()</a>, <a class="el" href="_holder_8cpp_source.xhtml#l00061">CaptureData::IsCounterIdInCaptureData()</a>, <a class="el" href="_i_backend_profiling_8hpp_source.xhtml#l00047">CounterStatus::m_Enabled</a>, and <a class="el" href="_i_backend_profiling_8hpp_source.xhtml#l00048">CounterStatus::m_SamplingRateInMicroseconds</a>.</p>

<p class="reference">Referenced by <a class="el" href="_backend_profiling_8hpp_source.xhtml#l00027">BackendProfiling::~BackendProfiling()</a>.</p>
<div class="fragment"><div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;{</div><div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;    uint16_t globalCounterId = m_ProfilingService.<a class="code" href="classarmnn_1_1profiling_1_1_profiling_service.xhtml#aed969262d8bf6d59eb8f65fb89d47959">GetCounterMappings</a>().<a class="code" href="classarmnn_1_1profiling_1_1_i_counter_mappings.xhtml#a83e6db8d13e21158334ca6722b20fa67">GetGlobalId</a>(backendCounterId, m_BackendId);</div><div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;    CaptureData captureData = m_ProfilingService.<a class="code" href="classarmnn_1_1profiling_1_1_profiling_service.xhtml#aff23669159bfc39106dc16d50c0a6e5f">GetCaptureData</a>();</div><div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;</div><div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;    CounterStatus counterStatus(backendCounterId, globalCounterId, <span class="keyword">false</span>, 0);</div><div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;</div><div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;    <span class="keywordflow">if</span> (captureData.IsCounterIdInCaptureData(globalCounterId))</div><div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;    {</div><div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;        counterStatus.m_Enabled = <span class="keyword">true</span>;</div><div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;        counterStatus.m_SamplingRateInMicroseconds = captureData.GetCapturePeriod();</div><div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;    }</div><div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;</div><div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;    <span class="keywordflow">return</span> counterStatus;</div><div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;}</div><div class="ttc" id="classarmnn_1_1profiling_1_1_profiling_service_xhtml_aed969262d8bf6d59eb8f65fb89d47959"><div class="ttname"><a href="classarmnn_1_1profiling_1_1_profiling_service.xhtml#aed969262d8bf6d59eb8f65fb89d47959">armnn::profiling::ProfilingService::GetCounterMappings</a></div><div class="ttdeci">const ICounterMappings &amp; GetCounterMappings() const override</div><div class="ttdef"><b>Definition:</b> <a href="_profiling_service_8cpp_source.xhtml#l00265">ProfilingService.cpp:265</a></div></div>
<div class="ttc" id="classarmnn_1_1profiling_1_1_profiling_service_xhtml_aff23669159bfc39106dc16d50c0a6e5f"><div class="ttname"><a href="classarmnn_1_1profiling_1_1_profiling_service.xhtml#aff23669159bfc39106dc16d50c0a6e5f">armnn::profiling::ProfilingService::GetCaptureData</a></div><div class="ttdeci">CaptureData GetCaptureData() override</div><div class="ttdef"><b>Definition:</b> <a href="_profiling_service_8cpp_source.xhtml#l00275">ProfilingService.cpp:275</a></div></div>
<div class="ttc" id="classarmnn_1_1profiling_1_1_i_counter_mappings_xhtml_a83e6db8d13e21158334ca6722b20fa67"><div class="ttname"><a href="classarmnn_1_1profiling_1_1_i_counter_mappings.xhtml#a83e6db8d13e21158334ca6722b20fa67">armnn::profiling::ICounterMappings::GetGlobalId</a></div><div class="ttdeci">virtual uint16_t GetGlobalId(uint16_t backendCounterId, const armnn::BackendId &amp;backendId) const =0</div></div>
</div><!-- fragment -->
</div>
</div>
<a id="a281672bed6fd49540270725a3eea867b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a281672bed6fd49540270725a3eea867b">&#9670;&nbsp;</a></span>GetProfilingGuidGenerator()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">IProfilingGuidGenerator &amp; GetProfilingGuidGenerator </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Implements <a class="el" href="classarmnn_1_1profiling_1_1_i_backend_profiling.xhtml#a9b9e803df01765cbfe9c9148fe757db5">IBackendProfiling</a>.</p>

<p class="definition">Definition at line <a class="el" href="_backend_profiling_8cpp_source.xhtml#l00027">27</a> of file <a class="el" href="_backend_profiling_8cpp_source.xhtml">BackendProfiling.cpp</a>.</p>

<p class="reference">Referenced by <a class="el" href="_backend_profiling_8hpp_source.xhtml#l00027">BackendProfiling::~BackendProfiling()</a>.</p>
<div class="fragment"><div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;{</div><div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;    <span class="comment">// The profiling service is our Guid Generator.</span></div><div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;    <span class="keywordflow">return</span> m_ProfilingService;</div><div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;}</div></div><!-- fragment -->
</div>
</div>
<a id="a24eb027ca494ee70c27e6322494325d8"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a24eb027ca494ee70c27e6322494325d8">&#9670;&nbsp;</a></span>GetSendTimelinePacket()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">std::unique_ptr&lt; <a class="el" href="classarmnn_1_1profiling_1_1_i_send_timeline_packet.xhtml">ISendTimelinePacket</a> &gt; GetSendTimelinePacket </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Implements <a class="el" href="classarmnn_1_1profiling_1_1_i_backend_profiling.xhtml#af3bab90857bb0cd2363f654cdd257e34">IBackendProfiling</a>.</p>

<p class="definition">Definition at line <a class="el" href="_backend_profiling_8cpp_source.xhtml#l00022">22</a> of file <a class="el" href="_backend_profiling_8cpp_source.xhtml">BackendProfiling.cpp</a>.</p>

<p class="reference">References <a class="el" href="_profiling_service_8cpp_source.xhtml#l00329">ProfilingService::GetSendTimelinePacket()</a>.</p>

<p class="reference">Referenced by <a class="el" href="_backend_profiling_8hpp_source.xhtml#l00027">BackendProfiling::~BackendProfiling()</a>.</p>
<div class="fragment"><div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;{</div><div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;    <span class="keywordflow">return</span> m_ProfilingService.<a class="code" href="classarmnn_1_1profiling_1_1_profiling_service.xhtml#a71c4eb6e11d491f84df504cf7f5a6337">GetSendTimelinePacket</a>();</div><div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;}</div><div class="ttc" id="classarmnn_1_1profiling_1_1_profiling_service_xhtml_a71c4eb6e11d491f84df504cf7f5a6337"><div class="ttname"><a href="classarmnn_1_1profiling_1_1_profiling_service.xhtml#a71c4eb6e11d491f84df504cf7f5a6337">armnn::profiling::ProfilingService::GetSendTimelinePacket</a></div><div class="ttdeci">std::unique_ptr&lt; ISendTimelinePacket &gt; GetSendTimelinePacket() const override</div><div class="ttdef"><b>Definition:</b> <a href="_profiling_service_8cpp_source.xhtml#l00329">ProfilingService.cpp:329</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="a70db5b1cdd0d22c1fa912c6e8b9089ce"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a70db5b1cdd0d22c1fa912c6e8b9089ce">&#9670;&nbsp;</a></span>IsProfilingEnabled()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool IsProfilingEnabled </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Implements <a class="el" href="classarmnn_1_1profiling_1_1_i_backend_profiling.xhtml#a93ee1c2509b9db845936a291b575dd17">IBackendProfiling</a>.</p>

<p class="definition">Definition at line <a class="el" href="_backend_profiling_8cpp_source.xhtml#l00090">90</a> of file <a class="el" href="_backend_profiling_8cpp_source.xhtml">BackendProfiling.cpp</a>.</p>

<p class="reference">References <a class="el" href="_profiling_service_8cpp_source.xhtml#l00057">ProfilingService::IsProfilingEnabled()</a>.</p>

<p class="reference">Referenced by <a class="el" href="_backend_profiling_8hpp_source.xhtml#l00027">BackendProfiling::~BackendProfiling()</a>.</p>
<div class="fragment"><div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;{</div><div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;    <span class="keywordflow">return</span> m_ProfilingService.<a class="code" href="classarmnn_1_1profiling_1_1_profiling_service.xhtml#a70db5b1cdd0d22c1fa912c6e8b9089ce">IsProfilingEnabled</a>();</div><div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;}</div><div class="ttc" id="classarmnn_1_1profiling_1_1_profiling_service_xhtml_a70db5b1cdd0d22c1fa912c6e8b9089ce"><div class="ttname"><a href="classarmnn_1_1profiling_1_1_profiling_service.xhtml#a70db5b1cdd0d22c1fa912c6e8b9089ce">armnn::profiling::ProfilingService::IsProfilingEnabled</a></div><div class="ttdeci">bool IsProfilingEnabled() const override</div><div class="ttdef"><b>Definition:</b> <a href="_profiling_service_8cpp_source.xhtml#l00057">ProfilingService.cpp:57</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="aa51df0c342290615803a99525816e3e3"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aa51df0c342290615803a99525816e3e3">&#9670;&nbsp;</a></span>ReportCounters()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void ReportCounters </td>
          <td>(</td>
          <td class="paramtype">const std::vector&lt; <a class="el" href="structarmnn_1_1profiling_1_1_timestamp.xhtml">Timestamp</a> &gt; &amp;&#160;</td>
          <td class="paramname"><em>timestamps</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Implements <a class="el" href="classarmnn_1_1profiling_1_1_i_backend_profiling.xhtml#a691685749cd1a917b8e6e9cb1afcc045">IBackendProfiling</a>.</p>

<p class="definition">Definition at line <a class="el" href="_backend_profiling_8cpp_source.xhtml#l00033">33</a> of file <a class="el" href="_backend_profiling_8cpp_source.xhtml">BackendProfiling.cpp</a>.</p>

<p class="reference">References <a class="el" href="_profiling_service_8cpp_source.xhtml#l00265">ProfilingService::GetCounterMappings()</a>, <a class="el" href="classarmnn_1_1profiling_1_1_i_counter_mappings.xhtml#a83e6db8d13e21158334ca6722b20fa67">ICounterMappings::GetGlobalId()</a>, <a class="el" href="_profiling_service_8hpp_source.xhtml#l00204">ProfilingService::GetSendCounterPacket()</a>, and <a class="el" href="classarmnn_1_1profiling_1_1_i_send_counter_packet.xhtml#aeacf0722dbf513d511b46a9bf43bfa4a">ISendCounterPacket::SendPeriodicCounterCapturePacket()</a>.</p>

<p class="reference">Referenced by <a class="el" href="_backend_profiling_8hpp_source.xhtml#l00027">BackendProfiling::~BackendProfiling()</a>.</p>
<div class="fragment"><div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;{</div><div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;    <span class="keywordflow">for</span> (<span class="keyword">const</span> <span class="keyword">auto</span>&amp; timestampInfo : timestamps)</div><div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;    {</div><div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;        std::vector&lt;CounterValue&gt; backendCounterValues = timestampInfo.counterValues;</div><div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;        for_each(backendCounterValues.begin(), backendCounterValues.end(), [&amp;](CounterValue&amp; backendCounterValue)</div><div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;        {</div><div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;            <span class="comment">// translate the counterId to globalCounterId</span></div><div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;            backendCounterValue.counterId = m_ProfilingService.<a class="code" href="classarmnn_1_1profiling_1_1_profiling_service.xhtml#aed969262d8bf6d59eb8f65fb89d47959">GetCounterMappings</a>().<a class="code" href="classarmnn_1_1profiling_1_1_i_counter_mappings.xhtml#a83e6db8d13e21158334ca6722b20fa67">GetGlobalId</a>(</div><div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;                backendCounterValue.counterId, m_BackendId);</div><div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;        });</div><div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;</div><div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;        <span class="comment">// Send Periodic Counter Capture Packet for the Timestamp</span></div><div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;        m_ProfilingService.<a class="code" href="classarmnn_1_1profiling_1_1_profiling_service.xhtml#a28c5bcb3adea9e2476255acf1fc0647e">GetSendCounterPacket</a>().<a class="code" href="classarmnn_1_1profiling_1_1_i_send_counter_packet.xhtml#aeacf0722dbf513d511b46a9bf43bfa4a">SendPeriodicCounterCapturePacket</a>(</div><div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;            timestampInfo.timestamp, backendCounterValues);</div><div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;    }</div><div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;}</div><div class="ttc" id="classarmnn_1_1profiling_1_1_profiling_service_xhtml_aed969262d8bf6d59eb8f65fb89d47959"><div class="ttname"><a href="classarmnn_1_1profiling_1_1_profiling_service.xhtml#aed969262d8bf6d59eb8f65fb89d47959">armnn::profiling::ProfilingService::GetCounterMappings</a></div><div class="ttdeci">const ICounterMappings &amp; GetCounterMappings() const override</div><div class="ttdef"><b>Definition:</b> <a href="_profiling_service_8cpp_source.xhtml#l00265">ProfilingService.cpp:265</a></div></div>
<div class="ttc" id="classarmnn_1_1profiling_1_1_i_send_counter_packet_xhtml_aeacf0722dbf513d511b46a9bf43bfa4a"><div class="ttname"><a href="classarmnn_1_1profiling_1_1_i_send_counter_packet.xhtml#aeacf0722dbf513d511b46a9bf43bfa4a">armnn::profiling::ISendCounterPacket::SendPeriodicCounterCapturePacket</a></div><div class="ttdeci">virtual void SendPeriodicCounterCapturePacket(uint64_t timestamp, const IndexValuePairsVector &amp;values)=0</div><div class="ttdoc">Create and write a PeriodicCounterCapturePacket from the parameters to the buffer. </div></div>
<div class="ttc" id="classarmnn_1_1profiling_1_1_profiling_service_xhtml_a28c5bcb3adea9e2476255acf1fc0647e"><div class="ttname"><a href="classarmnn_1_1profiling_1_1_profiling_service.xhtml#a28c5bcb3adea9e2476255acf1fc0647e">armnn::profiling::ProfilingService::GetSendCounterPacket</a></div><div class="ttdeci">ISendCounterPacket &amp; GetSendCounterPacket() override</div><div class="ttdef"><b>Definition:</b> <a href="_profiling_service_8hpp_source.xhtml#l00204">ProfilingService.hpp:204</a></div></div>
<div class="ttc" id="classarmnn_1_1profiling_1_1_i_counter_mappings_xhtml_a83e6db8d13e21158334ca6722b20fa67"><div class="ttname"><a href="classarmnn_1_1profiling_1_1_i_counter_mappings.xhtml#a83e6db8d13e21158334ca6722b20fa67">armnn::profiling::ICounterMappings::GetGlobalId</a></div><div class="ttdeci">virtual uint16_t GetGlobalId(uint16_t backendCounterId, const armnn::BackendId &amp;backendId) const =0</div></div>
</div><!-- fragment -->
</div>
</div>
<hr/>The documentation for this class was generated from the following files:<ul>
<li>src/profiling/backends/<a class="el" href="_backend_profiling_8hpp_source.xhtml">BackendProfiling.hpp</a></li>
<li>src/profiling/backends/<a class="el" href="_backend_profiling_8cpp_source.xhtml">BackendProfiling.cpp</a></li>
</ul>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="namespacearmnn.xhtml">armnn</a></li><li class="navelem"><a class="el" href="namespacearmnn_1_1profiling.xhtml">profiling</a></li><li class="navelem"><a class="el" href="classarmnn_1_1profiling_1_1_backend_profiling.xhtml">BackendProfiling</a></li>
    <li class="footer">Generated on Wed Mar 9 2022 12:01:25 for ArmNN by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.13 </li>
  </ul>
</div>
</body>
</html>
