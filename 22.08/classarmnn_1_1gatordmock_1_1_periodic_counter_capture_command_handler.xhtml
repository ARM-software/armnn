<!-- Copyright (c) 2020 ARM Limited. -->
<!--                                 -->
<!-- SPDX-License-Identifier: MIT    -->
<!--                                 -->
<!-- HTML header for doxygen 1.8.13-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.13"/>
<meta name="robots" content="NOINDEX, NOFOLLOW" />
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>ArmNN: PeriodicCounterCaptureCommandHandler Class Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script><script type="text/javascript" src="http://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="stylesheet.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <img alt="ArmNN" src="Arm_NN_horizontal_blue.png" style="max-width: 10rem; margin-top: .5rem; margin-left 10px"/>
  <td style="padding-left: 0.5em;">
   <div id="projectname">
   &#160;<span id="projectnumber">22.08</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.13 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
$(document).ready(function(){initNavTree('classarmnn_1_1gatordmock_1_1_periodic_counter_capture_command_handler.xhtml','');});
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="summary">
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="#pub-attribs">Public Attributes</a> &#124;
<a href="classarmnn_1_1gatordmock_1_1_periodic_counter_capture_command_handler-members.xhtml">List of all members</a>  </div>
  <div class="headertitle">
<div class="title">PeriodicCounterCaptureCommandHandler Class Reference</div>  </div>
</div><!--header-->
<div class="contents">

<p><code>#include &lt;<a class="el" href="_periodic_counter_capture_command_handler_8hpp_source.xhtml">PeriodicCounterCaptureCommandHandler.hpp</a>&gt;</code></p>
<div class="dynheader">
Inheritance diagram for PeriodicCounterCaptureCommandHandler:</div>
<div class="dyncontent">
 <div class="center">
  <img src="classarmnn_1_1gatordmock_1_1_periodic_counter_capture_command_handler.png" usemap="#PeriodicCounterCaptureCommandHandler_map" alt=""/>
  <map id="PeriodicCounterCaptureCommandHandler_map" name="PeriodicCounterCaptureCommandHandler_map">
</map>
 </div></div>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:aaf3aabfe724bff5217ac412352e02e73"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1gatordmock_1_1_periodic_counter_capture_command_handler.xhtml#aaf3aabfe724bff5217ac412352e02e73">PeriodicCounterCaptureCommandHandler</a> (uint32_t familyId, uint32_t packetId, uint32_t version, bool quietOperation=false)</td></tr>
<tr class="separator:aaf3aabfe724bff5217ac412352e02e73"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7f194544050d3b16f7363a93a234b89c"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1gatordmock_1_1_periodic_counter_capture_command_handler.xhtml#a7f194544050d3b16f7363a93a234b89c">operator()</a> (const arm::pipe::Packet &amp;packet) override</td></tr>
<tr class="separator:a7f194544050d3b16f7363a93a234b89c"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-attribs"></a>
Public Attributes</h2></td></tr>
<tr class="memitem:a9626b6860f10b55ee178d0b340627a8d"><td class="memItemLeft" align="right" valign="top"><a class="el" href="structarmnn_1_1gatordmock_1_1_counter_capture_values.xhtml">CounterCaptureValues</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1gatordmock_1_1_periodic_counter_capture_command_handler.xhtml#a9626b6860f10b55ee178d0b340627a8d">m_CounterCaptureValues</a></td></tr>
<tr class="separator:a9626b6860f10b55ee178d0b340627a8d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:adf4c1e497ab037106ba8ae0ac077ac0f"><td class="memItemLeft" align="right" valign="top">uint64_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1gatordmock_1_1_periodic_counter_capture_command_handler.xhtml#adf4c1e497ab037106ba8ae0ac077ac0f">m_CurrentPeriodValue</a> = 0</td></tr>
<tr class="separator:adf4c1e497ab037106ba8ae0ac077ac0f"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock">
<p class="definition">Definition at line <a class="el" href="_periodic_counter_capture_command_handler_8hpp_source.xhtml#l00026">26</a> of file <a class="el" href="_periodic_counter_capture_command_handler_8hpp_source.xhtml">PeriodicCounterCaptureCommandHandler.hpp</a>.</p>
</div><h2 class="groupheader">Constructor &amp; Destructor Documentation</h2>
<a id="aaf3aabfe724bff5217ac412352e02e73"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aaf3aabfe724bff5217ac412352e02e73">&#9670;&nbsp;</a></span>PeriodicCounterCaptureCommandHandler()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarmnn_1_1gatordmock_1_1_periodic_counter_capture_command_handler.xhtml">PeriodicCounterCaptureCommandHandler</a> </td>
          <td>(</td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>familyId</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>packetId</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>version</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>quietOperation</em> = <code>false</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">familyId</td><td>The family of the packets this handler will service </td></tr>
    <tr><td class="paramname">packetId</td><td>The id of packets this handler will process. </td></tr>
    <tr><td class="paramname">version</td><td>The version of that id. </td></tr>
    <tr><td class="paramname">quietOperation</td><td><a class="el" href="classarmnn_1_1_optional.xhtml">Optional</a> parameter to turn off printouts. This is useful for unittests. </td></tr>
  </table>
  </dd>
</dl>

<p class="definition">Definition at line <a class="el" href="_periodic_counter_capture_command_handler_8hpp_source.xhtml#l00036">36</a> of file <a class="el" href="_periodic_counter_capture_command_handler_8hpp_source.xhtml">PeriodicCounterCaptureCommandHandler.hpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;        : CommandHandlerFunctor(familyId, packetId, version)</div><div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;        , m_QuietOperation(quietOperation)</div><div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;    {}</div></div><!-- fragment -->
</div>
</div>
<h2 class="groupheader">Member Function Documentation</h2>
<a id="a7f194544050d3b16f7363a93a234b89c"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a7f194544050d3b16f7363a93a234b89c">&#9670;&nbsp;</a></span>operator()()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void operator() </td>
          <td>(</td>
          <td class="paramtype">const arm::pipe::Packet &amp;&#160;</td>
          <td class="paramname"><em>packet</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">override</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_periodic_counter_capture_command_handler_8cpp_source.xhtml#l00075">75</a> of file <a class="el" href="_periodic_counter_capture_command_handler_8cpp_source.xhtml">PeriodicCounterCaptureCommandHandler.cpp</a>.</p>

<p class="reference">References <a class="el" href="_periodic_counter_capture_command_handler_8hpp_source.xhtml#l00046">PeriodicCounterCaptureCommandHandler::m_CounterCaptureValues</a>, <a class="el" href="_periodic_counter_capture_command_handler_8hpp_source.xhtml#l00048">PeriodicCounterCaptureCommandHandler::m_CurrentPeriodValue</a>, <a class="el" href="_periodic_counter_capture_command_handler_8hpp_source.xhtml#l00021">CounterCaptureValues::m_Timestamp</a>, <a class="el" href="_periodic_counter_capture_command_handler_8hpp_source.xhtml#l00022">CounterCaptureValues::m_Uids</a>, and <a class="el" href="_periodic_counter_capture_command_handler_8hpp_source.xhtml#l00023">CounterCaptureValues::m_Values</a>.</p>
<div class="fragment"><div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;{</div><div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;    ParseData(packet);</div><div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;    <span class="keywordflow">if</span> (!m_QuietOperation)    <span class="comment">// Are we supposed to print to stdout?</span></div><div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;    {</div><div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;        std::string header, body, uidString, valueString;</div><div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;</div><div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;        <span class="keywordflow">for</span> (uint16_t uid : <a class="code" href="classarmnn_1_1gatordmock_1_1_periodic_counter_capture_command_handler.xhtml#a9626b6860f10b55ee178d0b340627a8d">m_CounterCaptureValues</a>.<a class="code" href="structarmnn_1_1gatordmock_1_1_counter_capture_values.xhtml#af697af5118a291003f6aaeb195fe67a4">m_Uids</a>)</div><div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;        {</div><div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;            uidString.append(std::to_string(uid));</div><div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;            uidString.append(<span class="stringliteral">&quot;, &quot;</span>);</div><div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;        }</div><div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;</div><div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;        <span class="keywordflow">for</span> (uint32_t val : <a class="code" href="classarmnn_1_1gatordmock_1_1_periodic_counter_capture_command_handler.xhtml#a9626b6860f10b55ee178d0b340627a8d">m_CounterCaptureValues</a>.<a class="code" href="structarmnn_1_1gatordmock_1_1_counter_capture_values.xhtml#a7cc61b58879de844c7917b87f09e308f">m_Values</a>)</div><div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;        {</div><div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;            valueString.append(std::to_string(val));</div><div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;            valueString.append(<span class="stringliteral">&quot;, &quot;</span>);</div><div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;        }</div><div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;</div><div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;        body.append(arm::pipe::CentreAlignFormatting(std::to_string(<a class="code" href="classarmnn_1_1gatordmock_1_1_periodic_counter_capture_command_handler.xhtml#a9626b6860f10b55ee178d0b340627a8d">m_CounterCaptureValues</a>.<a class="code" href="structarmnn_1_1gatordmock_1_1_counter_capture_values.xhtml#a595556c01c62177551f934f16c6616a1">m_Timestamp</a>), 10));</div><div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;        body.append(<span class="stringliteral">&quot; | &quot;</span>);</div><div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;        body.append(arm::pipe::CentreAlignFormatting(std::to_string(<a class="code" href="classarmnn_1_1gatordmock_1_1_periodic_counter_capture_command_handler.xhtml#adf4c1e497ab037106ba8ae0ac077ac0f">m_CurrentPeriodValue</a>), 13));</div><div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;        body.append(<span class="stringliteral">&quot; | &quot;</span>);</div><div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;        body.append(arm::pipe::CentreAlignFormatting(uidString, 10));</div><div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;        body.append(<span class="stringliteral">&quot; | &quot;</span>);</div><div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;        body.append(arm::pipe::CentreAlignFormatting(valueString, 10));</div><div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;        body.append(<span class="stringliteral">&quot;\n&quot;</span>);</div><div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;</div><div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;        <span class="keywordflow">if</span> (!m_HeaderPrinted)</div><div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;        {</div><div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;            header.append(arm::pipe::CentreAlignFormatting(<span class="stringliteral">&quot; Timestamp&quot;</span>, 11));</div><div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;            header.append(<span class="stringliteral">&quot; | &quot;</span>);</div><div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;            header.append(arm::pipe::CentreAlignFormatting(<span class="stringliteral">&quot;Period (us)&quot;</span>, 13));</div><div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;            header.append(<span class="stringliteral">&quot; | &quot;</span>);</div><div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;            header.append(arm::pipe::CentreAlignFormatting(<span class="stringliteral">&quot;UID&#39;s&quot;</span>, static_cast&lt;int&gt;(uidString.size())));</div><div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;            header.append(<span class="stringliteral">&quot; | &quot;</span>);</div><div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;            header.append(arm::pipe::CentreAlignFormatting(<span class="stringliteral">&quot;Values&quot;</span>, 10));</div><div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;            header.append(<span class="stringliteral">&quot;\n&quot;</span>);</div><div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;</div><div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;            std::cout &lt;&lt; header;</div><div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;            m_HeaderPrinted = <span class="keyword">true</span>;</div><div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;        }</div><div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;</div><div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;        std::cout &lt;&lt; std::string(body.size(), <span class="charliteral">&#39;-&#39;</span>) &lt;&lt; <span class="stringliteral">&quot;\n&quot;</span>;</div><div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;</div><div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;        std::cout &lt;&lt; body;</div><div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;    }</div><div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;}</div><div class="ttc" id="classarmnn_1_1gatordmock_1_1_periodic_counter_capture_command_handler_xhtml_adf4c1e497ab037106ba8ae0ac077ac0f"><div class="ttname"><a href="classarmnn_1_1gatordmock_1_1_periodic_counter_capture_command_handler.xhtml#adf4c1e497ab037106ba8ae0ac077ac0f">armnn::gatordmock::PeriodicCounterCaptureCommandHandler::m_CurrentPeriodValue</a></div><div class="ttdeci">uint64_t m_CurrentPeriodValue</div><div class="ttdef"><b>Definition:</b> <a href="_periodic_counter_capture_command_handler_8hpp_source.xhtml#l00048">PeriodicCounterCaptureCommandHandler.hpp:48</a></div></div>
<div class="ttc" id="structarmnn_1_1gatordmock_1_1_counter_capture_values_xhtml_a7cc61b58879de844c7917b87f09e308f"><div class="ttname"><a href="structarmnn_1_1gatordmock_1_1_counter_capture_values.xhtml#a7cc61b58879de844c7917b87f09e308f">armnn::gatordmock::CounterCaptureValues::m_Values</a></div><div class="ttdeci">std::vector&lt; uint32_t &gt; m_Values</div><div class="ttdef"><b>Definition:</b> <a href="_periodic_counter_capture_command_handler_8hpp_source.xhtml#l00023">PeriodicCounterCaptureCommandHandler.hpp:23</a></div></div>
<div class="ttc" id="classarmnn_1_1gatordmock_1_1_periodic_counter_capture_command_handler_xhtml_a9626b6860f10b55ee178d0b340627a8d"><div class="ttname"><a href="classarmnn_1_1gatordmock_1_1_periodic_counter_capture_command_handler.xhtml#a9626b6860f10b55ee178d0b340627a8d">armnn::gatordmock::PeriodicCounterCaptureCommandHandler::m_CounterCaptureValues</a></div><div class="ttdeci">CounterCaptureValues m_CounterCaptureValues</div><div class="ttdef"><b>Definition:</b> <a href="_periodic_counter_capture_command_handler_8hpp_source.xhtml#l00046">PeriodicCounterCaptureCommandHandler.hpp:46</a></div></div>
<div class="ttc" id="structarmnn_1_1gatordmock_1_1_counter_capture_values_xhtml_af697af5118a291003f6aaeb195fe67a4"><div class="ttname"><a href="structarmnn_1_1gatordmock_1_1_counter_capture_values.xhtml#af697af5118a291003f6aaeb195fe67a4">armnn::gatordmock::CounterCaptureValues::m_Uids</a></div><div class="ttdeci">std::vector&lt; uint16_t &gt; m_Uids</div><div class="ttdef"><b>Definition:</b> <a href="_periodic_counter_capture_command_handler_8hpp_source.xhtml#l00022">PeriodicCounterCaptureCommandHandler.hpp:22</a></div></div>
<div class="ttc" id="structarmnn_1_1gatordmock_1_1_counter_capture_values_xhtml_a595556c01c62177551f934f16c6616a1"><div class="ttname"><a href="structarmnn_1_1gatordmock_1_1_counter_capture_values.xhtml#a595556c01c62177551f934f16c6616a1">armnn::gatordmock::CounterCaptureValues::m_Timestamp</a></div><div class="ttdeci">uint64_t m_Timestamp</div><div class="ttdef"><b>Definition:</b> <a href="_periodic_counter_capture_command_handler_8hpp_source.xhtml#l00021">PeriodicCounterCaptureCommandHandler.hpp:21</a></div></div>
</div><!-- fragment -->
</div>
</div>
<h2 class="groupheader">Member Data Documentation</h2>
<a id="a9626b6860f10b55ee178d0b340627a8d"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a9626b6860f10b55ee178d0b340627a8d">&#9670;&nbsp;</a></span>m_CounterCaptureValues</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="structarmnn_1_1gatordmock_1_1_counter_capture_values.xhtml">CounterCaptureValues</a> m_CounterCaptureValues</td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_periodic_counter_capture_command_handler_8hpp_source.xhtml#l00046">46</a> of file <a class="el" href="_periodic_counter_capture_command_handler_8hpp_source.xhtml">PeriodicCounterCaptureCommandHandler.hpp</a>.</p>

<p class="reference">Referenced by <a class="el" href="_periodic_counter_capture_command_handler_8cpp_source.xhtml#l00075">PeriodicCounterCaptureCommandHandler::operator()()</a>, and <a class="el" href="_gatord_mock_tests_8cpp_source.xhtml#l00028">TEST_SUITE()</a>.</p>

</div>
</div>
<a id="adf4c1e497ab037106ba8ae0ac077ac0f"></a>
<h2 class="memtitle"><span class="permalink"><a href="#adf4c1e497ab037106ba8ae0ac077ac0f">&#9670;&nbsp;</a></span>m_CurrentPeriodValue</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">uint64_t m_CurrentPeriodValue = 0</td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_periodic_counter_capture_command_handler_8hpp_source.xhtml#l00048">48</a> of file <a class="el" href="_periodic_counter_capture_command_handler_8hpp_source.xhtml">PeriodicCounterCaptureCommandHandler.hpp</a>.</p>

<p class="reference">Referenced by <a class="el" href="_periodic_counter_capture_command_handler_8cpp_source.xhtml#l00075">PeriodicCounterCaptureCommandHandler::operator()()</a>, and <a class="el" href="_gatord_mock_tests_8cpp_source.xhtml#l00028">TEST_SUITE()</a>.</p>

</div>
</div>
<hr/>The documentation for this class was generated from the following files:<ul>
<li>tests/profiling/gatordmock/<a class="el" href="_periodic_counter_capture_command_handler_8hpp_source.xhtml">PeriodicCounterCaptureCommandHandler.hpp</a></li>
<li>tests/profiling/gatordmock/<a class="el" href="_periodic_counter_capture_command_handler_8cpp_source.xhtml">PeriodicCounterCaptureCommandHandler.cpp</a></li>
</ul>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="namespacearmnn.xhtml">armnn</a></li><li class="navelem"><a class="el" href="namespacearmnn_1_1gatordmock.xhtml">gatordmock</a></li><li class="navelem"><a class="el" href="classarmnn_1_1gatordmock_1_1_periodic_counter_capture_command_handler.xhtml">PeriodicCounterCaptureCommandHandler</a></li>
    <li class="footer">Generated on Fri Aug 19 2022 14:38:42 for ArmNN by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.13 </li>
  </ul>
</div>
</body>
</html>
