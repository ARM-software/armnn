<!-- Copyright (c) 2020 ARM Limited. -->
<!--                                 -->
<!-- SPDX-License-Identifier: MIT    -->
<!--                                 -->
<!-- HTML header for doxygen 1.8.13-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.17"/>
<meta name="robots" content="NOINDEX, NOFOLLOW" />
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>ArmNN: src/backends/backendsCommon/LayerSupportBase.cpp Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script>
<script type="text/javascript" async="async" src="http://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="stylesheet.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <img alt="ArmNN" src="Arm_NN_horizontal_blue.png" style="max-width: 10rem; margin-top: .5rem; margin-left 10px"/>
  <td style="padding-left: 0.5em;">
   <div id="projectname">
   &#160;<span id="projectnumber">23.05</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.17 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "search",false,'Search');
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(document).ready(function(){initNavTree('_layer_support_base_8cpp_source.xhtml',''); initResizable(); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="headertitle">
<div class="title">LayerSupportBase.cpp</div>  </div>
</div><!--header-->
<div class="contents">
<a href="_layer_support_base_8cpp.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="comment">//</span></div>
<div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="comment">// Copyright Â© 2017 Arm Ltd and Contributors. All rights reserved.</span></div>
<div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="comment">// SPDX-License-Identifier: MIT</span></div>
<div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="comment">//</span></div>
<div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160; </div>
<div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="preprocessor">#include &lt;<a class="code" href="_deprecated_8hpp.xhtml">armnn/Deprecated.hpp</a>&gt;</span></div>
<div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="preprocessor">#include &lt;<a class="code" href="_exceptions_8hpp.xhtml">armnn/Exceptions.hpp</a>&gt;</span></div>
<div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="preprocessor">#include &lt;<a class="code" href="_types_8hpp.xhtml">armnn/Types.hpp</a>&gt;</span></div>
<div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160; </div>
<div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="preprocessor">#include &lt;<a class="code" href="_layer_support_base_8hpp.xhtml">backendsCommon/LayerSupportBase.hpp</a>&gt;</span></div>
<div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160; </div>
<div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;<span class="preprocessor">#include &lt;<a class="code" href="_ignore_unused_8hpp.xhtml">armnn/utility/IgnoreUnused.hpp</a>&gt;</span></div>
<div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;<span class="preprocessor">#include &lt;<a class="code" href="_polymorphic_downcast_8hpp.xhtml">armnn/utility/PolymorphicDowncast.hpp</a>&gt;</span></div>
<div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160; </div>
<div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;<span class="keyword">namespace</span></div>
<div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;{</div>
<div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160; </div>
<div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;<span class="keywordtype">bool</span> DefaultLayerSupport(<span class="keyword">const</span> <span class="keywordtype">char</span>* func,</div>
<div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;                         <span class="keyword">const</span> <span class="keywordtype">char</span>* file,</div>
<div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;                         <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> line,</div>
<div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;                         <a class="code" href="classarmnn_1_1_optional.xhtml">armnn::Optional&lt;std::string&amp;&gt;</a> reasonIfUnsupported)</div>
<div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;{</div>
<div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;    <span class="comment">// NOTE: We only need to return the reason if the optional parameter is not empty</span></div>
<div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;    <span class="keywordflow">if</span> (reasonIfUnsupported)</div>
<div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;    {</div>
<div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;        std::stringstream message;</div>
<div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;        message &lt;&lt; func &lt;&lt; <span class="stringliteral">&quot; is not implemented [&quot;</span> &lt;&lt; file &lt;&lt; <span class="stringliteral">&quot;:&quot;</span> &lt;&lt; line &lt;&lt; <span class="stringliteral">&quot;]&quot;</span>;</div>
<div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160; </div>
<div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;        reasonIfUnsupported.<a class="code" href="classarmnn_1_1_optional_reference_switch.xhtml#a77c7d528ac063d870b8c8426ec81c1c3">value</a>() = message.str();</div>
<div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;    }</div>
<div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160; </div>
<div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;    <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;}</div>
<div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160; </div>
<div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;} <span class="comment">// anonymous namespace</span></div>
<div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160; </div>
<div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;<span class="keyword">namespace </span><a class="code" href="namespacearmnn.xhtml">armnn</a></div>
<div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;{</div>
<div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160; </div>
<div class="line"><a name="l00040"></a><span class="lineno"><a class="line" href="classarmnn_1_1_layer_support_base.xhtml#a4da81c0c187071252d23c014db1c867d">   40</a></span>&#160;<span class="keywordtype">bool</span> <a class="code" href="classarmnn_1_1_layer_support_base.xhtml#a4da81c0c187071252d23c014db1c867d">LayerSupportBase::IsLayerSupported</a>(<span class="keyword">const</span> <a class="code" href="namespacearmnn.xhtml#a56943a0946e5f15e5e58054b8e7a04a4">LayerType</a>&amp; type,</div>
<div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;                                        <span class="keyword">const</span> std::vector&lt;TensorInfo&gt;&amp; infos,</div>
<div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;                                        <span class="keyword">const</span> <a class="code" href="structarmnn_1_1_base_descriptor.xhtml">BaseDescriptor</a>&amp; descriptor,</div>
<div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;                                        <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_optional.xhtml">Optional&lt;LstmInputParamsInfo&gt;</a>&amp;,</div>
<div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;                                        <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_optional.xhtml">Optional&lt;QuantizedLstmInputParamsInfo&gt;</a>&amp;,</div>
<div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;                                        <a class="code" href="classarmnn_1_1_optional.xhtml">Optional&lt;std::string&amp;&gt;</a> reasonIfUnsupported)<span class="keyword"> const</span></div>
<div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;    <span class="keywordflow">switch</span>(type)</div>
<div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;    {</div>
<div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;        <span class="keywordflow">case</span> <a class="code" href="namespacearmnn.xhtml#a56943a0946e5f15e5e58054b8e7a04a4a4dd48794eb3305a0f5aece88b111a97b">LayerType::MemCopy</a>:</div>
<div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;            <span class="keywordflow">return</span> <a class="code" href="classarmnn_1_1_layer_support_base.xhtml#ae12212269e173407398a6d4fef80f76f">IsMemCopySupported</a>(infos[0], infos[1], <a class="code" href="classarmnn_1_1_i_layer_support.xhtml#ac75f9a02b051716a0cc1cc0818dfe454">reasonIfUnsupported</a>);</div>
<div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;        <span class="keywordflow">case</span> <a class="code" href="namespacearmnn.xhtml#a56943a0946e5f15e5e58054b8e7a04a4a115bfc5d633eae55c67f9588acdd2bf9">LayerType::MemImport</a>:</div>
<div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;            <span class="keywordflow">return</span> <a class="code" href="classarmnn_1_1_layer_support_base.xhtml#a3ff6fcb839280edf41013d349df4f848">IsMemImportSupported</a>(infos[0], infos[1], <a class="code" href="classarmnn_1_1_i_layer_support.xhtml#ac75f9a02b051716a0cc1cc0818dfe454">reasonIfUnsupported</a>);</div>
<div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;        <span class="keywordflow">case</span> <a class="code" href="namespacearmnn.xhtml#a56943a0946e5f15e5e58054b8e7a04a4a93bca63ecbb003649425dd0e4ba79a99">LayerType::StandIn</a>:</div>
<div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;        {</div>
<div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;            <span class="keyword">auto</span> desc = *(PolymorphicDowncast&lt;const StandInDescriptor*&gt;(&amp;<a class="code" href="classarmnn_1_1_i_layer_support.xhtml#a859feaa966620ae0ea88abf5226f2d04">descriptor</a>));</div>
<div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160; </div>
<div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;            <span class="keywordflow">if</span> (infos.size() != (desc.m_NumInputs + desc.m_NumOutputs))</div>
<div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;            {</div>
<div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;                <span class="keywordflow">throw</span> <a class="code" href="classarmnn_1_1_invalid_argument_exception.xhtml">InvalidArgumentException</a>(<span class="stringliteral">&quot;Number of StandIn layer TensorInfos does not equal &quot;</span></div>
<div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;                                               <span class="stringliteral">&quot;the combined number of input and output slots assigned &quot;</span></div>
<div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;                                               <span class="stringliteral">&quot;to the StandIn descriptor&quot;</span>);</div>
<div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;            }</div>
<div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160; </div>
<div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;            std::vector&lt;const TensorInfo*&gt; inputInfos;</div>
<div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;            <span class="keywordflow">for</span> (uint32_t i = 0; i &lt; desc.m_NumInputs; i++)</div>
<div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;            {</div>
<div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;                inputInfos.push_back(&amp;infos[i]);</div>
<div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;            }</div>
<div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;            std::vector&lt;const TensorInfo*&gt; outputInfos;</div>
<div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;            <span class="keywordflow">for</span> (uint32_t i = desc.m_NumInputs; i &lt; infos.size(); i++)</div>
<div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;            {</div>
<div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;                outputInfos.push_back(&amp;infos[i]);</div>
<div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;            }</div>
<div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160; </div>
<div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;            <span class="keywordflow">return</span> <a class="code" href="classarmnn_1_1_layer_support_base.xhtml#a99da2ac37691d245f1a50d2b4dda5321">IsStandInSupported</a>(inputInfos,</div>
<div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;                                      outputInfos,</div>
<div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;                                      desc,</div>
<div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;                                      <a class="code" href="classarmnn_1_1_i_layer_support.xhtml#ac75f9a02b051716a0cc1cc0818dfe454">reasonIfUnsupported</a>);</div>
<div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;        }</div>
<div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;        <span class="keywordflow">default</span>:</div>
<div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;            <span class="keywordflow">return</span> DefaultLayerSupport(__func__, __FILE__, __LINE__, <a class="code" href="classarmnn_1_1_i_layer_support.xhtml#ac75f9a02b051716a0cc1cc0818dfe454">reasonIfUnsupported</a>);</div>
<div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;    }</div>
<div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;}</div>
<div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160; </div>
<div class="line"><a name="l00085"></a><span class="lineno"><a class="line" href="classarmnn_1_1_layer_support_base.xhtml#acd148b61eab388a9313c61f4c7a96c4b">   85</a></span>&#160;<span class="keywordtype">bool</span> <a class="code" href="classarmnn_1_1_layer_support_base.xhtml#acd148b61eab388a9313c61f4c7a96c4b">LayerSupportBase::IsActivationSupported</a>(<span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a>&amp;, <span class="comment">// input</span></div>
<div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;                                             <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a>&amp;, <span class="comment">//output</span></div>
<div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;                                             <span class="keyword">const</span> <a class="code" href="structarmnn_1_1_activation_descriptor.xhtml">ActivationDescriptor</a>&amp;, <span class="comment">// descriptor</span></div>
<div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;                                             <a class="code" href="classarmnn_1_1_optional.xhtml">Optional&lt;std::string&amp;&gt;</a> reasonIfUnsupported)<span class="keyword"> const</span></div>
<div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;    <span class="keywordflow">return</span> DefaultLayerSupport(__func__, __FILE__, __LINE__, <a class="code" href="classarmnn_1_1_i_layer_support.xhtml#ac75f9a02b051716a0cc1cc0818dfe454">reasonIfUnsupported</a>);</div>
<div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;}</div>
<div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160; </div>
<div class="line"><a name="l00093"></a><span class="lineno"><a class="line" href="classarmnn_1_1_layer_support_base.xhtml#a06a955e172cf18898d966eab7383efa1">   93</a></span>&#160;<span class="keywordtype">bool</span> <a class="code" href="classarmnn_1_1_layer_support_base.xhtml#a06a955e172cf18898d966eab7383efa1">LayerSupportBase::IsAdditionSupported</a>(<span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a>&amp;, <span class="comment">// input0</span></div>
<div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;                                           <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a>&amp;, <span class="comment">// input1</span></div>
<div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;                                           <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a>&amp;, <span class="comment">// output</span></div>
<div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;                                           <a class="code" href="classarmnn_1_1_optional.xhtml">Optional&lt;std::string&amp;&gt;</a> reasonIfUnsupported)<span class="keyword"> const</span></div>
<div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;    <span class="keywordflow">return</span> DefaultLayerSupport(__func__, __FILE__, __LINE__, <a class="code" href="classarmnn_1_1_i_layer_support.xhtml#ac75f9a02b051716a0cc1cc0818dfe454">reasonIfUnsupported</a>);</div>
<div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;}</div>
<div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160; </div>
<div class="line"><a name="l00101"></a><span class="lineno"><a class="line" href="classarmnn_1_1_layer_support_base.xhtml#a7224fbfbc4c5a2b3710543e3f574171f">  101</a></span>&#160;<span class="keywordtype">bool</span> <a class="code" href="classarmnn_1_1_layer_support_base.xhtml#a7224fbfbc4c5a2b3710543e3f574171f">LayerSupportBase::IsArgMinMaxSupported</a>(<span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_info.xhtml">armnn::TensorInfo</a>&amp;, <span class="comment">// input</span></div>
<div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;                                            <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_info.xhtml">armnn::TensorInfo</a>&amp;, <span class="comment">// output</span></div>
<div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;                                            <span class="keyword">const</span> <a class="code" href="structarmnn_1_1_arg_min_max_descriptor.xhtml">armnn::ArgMinMaxDescriptor</a>&amp;, <span class="comment">// descriptor</span></div>
<div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;                                            <a class="code" href="classarmnn_1_1_optional.xhtml">armnn::Optional&lt;std::string &amp;&gt;</a> reasonIfUnsupported)<span class="keyword"> const</span></div>
<div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;    <span class="keywordflow">return</span> DefaultLayerSupport(__func__, __FILE__, __LINE__, <a class="code" href="classarmnn_1_1_i_layer_support.xhtml#ac75f9a02b051716a0cc1cc0818dfe454">reasonIfUnsupported</a>);</div>
<div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;}</div>
<div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160; </div>
<div class="line"><a name="l00109"></a><span class="lineno"><a class="line" href="classarmnn_1_1_layer_support_base.xhtml#a450ddf4b4335cb37e07e3b0171b00096">  109</a></span>&#160;<span class="keywordtype">bool</span> <a class="code" href="classarmnn_1_1_layer_support_base.xhtml#a450ddf4b4335cb37e07e3b0171b00096">LayerSupportBase::IsBatchNormalizationSupported</a>(<span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a>&amp;, <span class="comment">//input</span></div>
<div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;                                                     <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a>&amp;, <span class="comment">// output</span></div>
<div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;                                                     <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a>&amp;, <span class="comment">//mean</span></div>
<div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;                                                     <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a>&amp;, <span class="comment">//var</span></div>
<div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;                                                     <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a>&amp;, <span class="comment">//beta</span></div>
<div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;                                                     <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a>&amp;, <span class="comment">//gamma</span></div>
<div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;                                                     <span class="keyword">const</span> <a class="code" href="structarmnn_1_1_batch_normalization_descriptor.xhtml">BatchNormalizationDescriptor</a>&amp;, <span class="comment">// descriptor</span></div>
<div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;                                                     <a class="code" href="classarmnn_1_1_optional.xhtml">Optional&lt;std::string&amp;&gt;</a> reasonIfUnsupported)<span class="keyword"> const</span></div>
<div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;    <span class="keywordflow">return</span> DefaultLayerSupport(__func__, __FILE__, __LINE__, <a class="code" href="classarmnn_1_1_i_layer_support.xhtml#ac75f9a02b051716a0cc1cc0818dfe454">reasonIfUnsupported</a>);</div>
<div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;}</div>
<div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160; </div>
<div class="line"><a name="l00121"></a><span class="lineno"><a class="line" href="classarmnn_1_1_layer_support_base.xhtml#a30cbe4bc4e20ae9b2aac66a108088919">  121</a></span>&#160;<span class="keywordtype">bool</span> <a class="code" href="classarmnn_1_1_layer_support_base.xhtml#a30cbe4bc4e20ae9b2aac66a108088919">LayerSupportBase::IsBatchToSpaceNdSupported</a>(<span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a>&amp;, <span class="comment">// input</span></div>
<div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;                                                 <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a>&amp;, <span class="comment">// output</span></div>
<div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;                                                 <span class="keyword">const</span> <a class="code" href="structarmnn_1_1_batch_to_space_nd_descriptor.xhtml">BatchToSpaceNdDescriptor</a>&amp;, <span class="comment">//descriptor</span></div>
<div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;                                                 <a class="code" href="classarmnn_1_1_optional.xhtml">Optional&lt;std::string&amp;&gt;</a> reasonIfUnsupported)<span class="keyword"> const</span></div>
<div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;    <span class="keywordflow">return</span> DefaultLayerSupport(__func__, __FILE__, __LINE__, <a class="code" href="classarmnn_1_1_i_layer_support.xhtml#ac75f9a02b051716a0cc1cc0818dfe454">reasonIfUnsupported</a>);</div>
<div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;}</div>
<div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160; </div>
<div class="line"><a name="l00129"></a><span class="lineno"><a class="line" href="classarmnn_1_1_layer_support_base.xhtml#ac680aa10b0a3768da4c23e691881b5ea">  129</a></span>&#160;<span class="keywordtype">bool</span> <a class="code" href="classarmnn_1_1_layer_support_base.xhtml#ac680aa10b0a3768da4c23e691881b5ea">LayerSupportBase::IsCastSupported</a>(<span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a>&amp;, <span class="comment">//input</span></div>
<div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;                                       <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a>&amp;, <span class="comment">//output</span></div>
<div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;                                       <a class="code" href="classarmnn_1_1_optional.xhtml">Optional&lt;std::string &amp;&gt;</a> reasonIfUnsupported)<span class="keyword"> const</span></div>
<div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;    <span class="keywordflow">return</span> DefaultLayerSupport(__func__, __FILE__, __LINE__, <a class="code" href="classarmnn_1_1_i_layer_support.xhtml#ac75f9a02b051716a0cc1cc0818dfe454">reasonIfUnsupported</a>);</div>
<div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;}</div>
<div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160; </div>
<div class="line"><a name="l00136"></a><span class="lineno"><a class="line" href="classarmnn_1_1_layer_support_base.xhtml#a1362503332222029f9d73d40520f35bd">  136</a></span>&#160;<span class="keywordtype">bool</span> <a class="code" href="classarmnn_1_1_layer_support_base.xhtml#a1362503332222029f9d73d40520f35bd">LayerSupportBase::IsChannelShuffleSupported</a>(<span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a>&amp;, <span class="comment">//input</span></div>
<div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;                                                 <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a>&amp;, <span class="comment">//output</span></div>
<div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;                                                 <span class="keyword">const</span> <a class="code" href="structarmnn_1_1_channel_shuffle_descriptor.xhtml">ChannelShuffleDescriptor</a>&amp;, <span class="comment">//descriptor</span></div>
<div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;                                                 <a class="code" href="classarmnn_1_1_optional.xhtml">Optional&lt;std::string &amp;&gt;</a> reasonIfUnsupported)<span class="keyword"> const</span></div>
<div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;    <span class="keywordflow">return</span> DefaultLayerSupport(__func__, __FILE__, __LINE__, <a class="code" href="classarmnn_1_1_i_layer_support.xhtml#ac75f9a02b051716a0cc1cc0818dfe454">reasonIfUnsupported</a>);</div>
<div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;}</div>
<div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160; </div>
<div class="line"><a name="l00144"></a><span class="lineno"><a class="line" href="classarmnn_1_1_layer_support_base.xhtml#a387c184902d9f09d35bb22b076cb245d">  144</a></span>&#160;<span class="keywordtype">bool</span> <a class="code" href="classarmnn_1_1_layer_support_base.xhtml#a387c184902d9f09d35bb22b076cb245d">LayerSupportBase::IsComparisonSupported</a>(<span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a>&amp;, <span class="comment">// input0</span></div>
<div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;                                             <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a>&amp;, <span class="comment">// input1</span></div>
<div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;                                             <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a>&amp;, <span class="comment">// output</span></div>
<div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;                                             <span class="keyword">const</span> <a class="code" href="structarmnn_1_1_comparison_descriptor.xhtml">ComparisonDescriptor</a>&amp;, <span class="comment">// descriptor</span></div>
<div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;                                             <a class="code" href="classarmnn_1_1_optional.xhtml">Optional&lt;std::string&amp;&gt;</a> reasonIfUnsupported)<span class="keyword"> const</span></div>
<div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;    <span class="keywordflow">return</span> DefaultLayerSupport(__func__, __FILE__, __LINE__, <a class="code" href="classarmnn_1_1_i_layer_support.xhtml#ac75f9a02b051716a0cc1cc0818dfe454">reasonIfUnsupported</a>);</div>
<div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;}</div>
<div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160; </div>
<div class="line"><a name="l00153"></a><span class="lineno"><a class="line" href="classarmnn_1_1_layer_support_base.xhtml#af6465e7a85f4ef0013c7d7161cd07a4d">  153</a></span>&#160;<span class="keywordtype">bool</span> <a class="code" href="classarmnn_1_1_layer_support_base.xhtml#af6465e7a85f4ef0013c7d7161cd07a4d">LayerSupportBase::IsConcatSupported</a>(<span class="keyword">const</span> std::vector&lt;const TensorInfo*&gt;, <span class="comment">// inputs</span></div>
<div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;                                         <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a>&amp;, <span class="comment">// output</span></div>
<div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;                                         <span class="keyword">const</span> <a class="code" href="structarmnn_1_1_origins_descriptor.xhtml">OriginsDescriptor</a>&amp;, <span class="comment">// descriptor</span></div>
<div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;                                         <a class="code" href="classarmnn_1_1_optional.xhtml">Optional&lt;std::string&amp;&gt;</a> reasonIfUnsupported)<span class="keyword"> const</span></div>
<div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;    <span class="keywordflow">return</span> DefaultLayerSupport(__func__, __FILE__, __LINE__, <a class="code" href="classarmnn_1_1_i_layer_support.xhtml#ac75f9a02b051716a0cc1cc0818dfe454">reasonIfUnsupported</a>);</div>
<div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160;}</div>
<div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160; </div>
<div class="line"><a name="l00161"></a><span class="lineno"><a class="line" href="classarmnn_1_1_layer_support_base.xhtml#a57aee9aba2e2ad5d0bd9f65acd05b6e4">  161</a></span>&#160;<span class="keywordtype">bool</span> <a class="code" href="classarmnn_1_1_layer_support_base.xhtml#a57aee9aba2e2ad5d0bd9f65acd05b6e4">LayerSupportBase::IsConstantSupported</a>(<span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a>&amp;, <span class="comment">// output</span></div>
<div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160;                                           <a class="code" href="classarmnn_1_1_optional.xhtml">Optional&lt;std::string&amp;&gt;</a> reasonIfUnsupported)<span class="keyword"> const</span></div>
<div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;    <span class="keywordflow">return</span> DefaultLayerSupport(__func__, __FILE__, __LINE__, <a class="code" href="classarmnn_1_1_i_layer_support.xhtml#ac75f9a02b051716a0cc1cc0818dfe454">reasonIfUnsupported</a>);</div>
<div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160;}</div>
<div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160; </div>
<div class="line"><a name="l00167"></a><span class="lineno"><a class="line" href="classarmnn_1_1_layer_support_base.xhtml#a95dac0c44b7e759694a97778bfbea954">  167</a></span>&#160;<span class="keywordtype">bool</span> <a class="code" href="classarmnn_1_1_layer_support_base.xhtml#a95dac0c44b7e759694a97778bfbea954">LayerSupportBase::IsConvertFp16ToFp32Supported</a>(<span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a>&amp;, <span class="comment">// input</span></div>
<div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160;                                                    <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a>&amp;, <span class="comment">// output</span></div>
<div class="line"><a name="l00169"></a><span class="lineno">  169</span>&#160;                                                    <a class="code" href="classarmnn_1_1_optional.xhtml">Optional&lt;std::string&amp;&gt;</a> reasonIfUnsupported)<span class="keyword"> const</span></div>
<div class="line"><a name="l00170"></a><span class="lineno">  170</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l00171"></a><span class="lineno">  171</span>&#160;    <span class="keywordflow">return</span> DefaultLayerSupport(__func__, __FILE__, __LINE__, <a class="code" href="classarmnn_1_1_i_layer_support.xhtml#ac75f9a02b051716a0cc1cc0818dfe454">reasonIfUnsupported</a>);</div>
<div class="line"><a name="l00172"></a><span class="lineno">  172</span>&#160;}</div>
<div class="line"><a name="l00173"></a><span class="lineno">  173</span>&#160; </div>
<div class="line"><a name="l00174"></a><span class="lineno"><a class="line" href="classarmnn_1_1_layer_support_base.xhtml#a5f9272cdf0224364e1bb9b47efe4130a">  174</a></span>&#160;<span class="keywordtype">bool</span> <a class="code" href="classarmnn_1_1_layer_support_base.xhtml#a5f9272cdf0224364e1bb9b47efe4130a">LayerSupportBase::IsConvertFp32ToFp16Supported</a>(<span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a>&amp;, <span class="comment">// input</span></div>
<div class="line"><a name="l00175"></a><span class="lineno">  175</span>&#160;                                                    <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a>&amp;, <span class="comment">// output</span></div>
<div class="line"><a name="l00176"></a><span class="lineno">  176</span>&#160;                                                    <a class="code" href="classarmnn_1_1_optional.xhtml">Optional&lt;std::string&amp;&gt;</a> reasonIfUnsupported)<span class="keyword"> const</span></div>
<div class="line"><a name="l00177"></a><span class="lineno">  177</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l00178"></a><span class="lineno">  178</span>&#160;    <span class="keywordflow">return</span> DefaultLayerSupport(__func__, __FILE__, __LINE__, <a class="code" href="classarmnn_1_1_i_layer_support.xhtml#ac75f9a02b051716a0cc1cc0818dfe454">reasonIfUnsupported</a>);</div>
<div class="line"><a name="l00179"></a><span class="lineno">  179</span>&#160;}</div>
<div class="line"><a name="l00180"></a><span class="lineno">  180</span>&#160; </div>
<div class="line"><a name="l00181"></a><span class="lineno"><a class="line" href="classarmnn_1_1_layer_support_base.xhtml#a4bd807090f4cb45bbfaa9c67e49532f5">  181</a></span>&#160;<span class="keywordtype">bool</span> <a class="code" href="classarmnn_1_1_layer_support_base.xhtml#a4bd807090f4cb45bbfaa9c67e49532f5">LayerSupportBase::IsConvolution2dSupported</a>(<span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a>&amp;, <span class="comment">// input</span></div>
<div class="line"><a name="l00182"></a><span class="lineno">  182</span>&#160;                                                <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a>&amp;, <span class="comment">// output</span></div>
<div class="line"><a name="l00183"></a><span class="lineno">  183</span>&#160;                                                <span class="keyword">const</span> <a class="code" href="structarmnn_1_1_convolution2d_descriptor.xhtml">Convolution2dDescriptor</a>&amp;, <span class="comment">// descriptor</span></div>
<div class="line"><a name="l00184"></a><span class="lineno">  184</span>&#160;                                                <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a>&amp;, <span class="comment">// weights</span></div>
<div class="line"><a name="l00185"></a><span class="lineno">  185</span>&#160;                                                <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_optional.xhtml">Optional&lt;TensorInfo&gt;</a>&amp;, <span class="comment">// biases</span></div>
<div class="line"><a name="l00186"></a><span class="lineno">  186</span>&#160;                                                <a class="code" href="classarmnn_1_1_optional.xhtml">Optional&lt;std::string&amp;&gt;</a> reasonIfUnsupported)<span class="keyword"> const</span></div>
<div class="line"><a name="l00187"></a><span class="lineno">  187</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l00188"></a><span class="lineno">  188</span>&#160;    <span class="keywordflow">return</span> DefaultLayerSupport(__func__, __FILE__, __LINE__, <a class="code" href="classarmnn_1_1_i_layer_support.xhtml#ac75f9a02b051716a0cc1cc0818dfe454">reasonIfUnsupported</a>);</div>
<div class="line"><a name="l00189"></a><span class="lineno">  189</span>&#160;}</div>
<div class="line"><a name="l00190"></a><span class="lineno">  190</span>&#160; </div>
<div class="line"><a name="l00191"></a><span class="lineno"><a class="line" href="classarmnn_1_1_layer_support_base.xhtml#abe850b2a5be4ce4617cb51ceb5344756">  191</a></span>&#160;<span class="keywordtype">bool</span> <a class="code" href="classarmnn_1_1_layer_support_base.xhtml#abe850b2a5be4ce4617cb51ceb5344756">LayerSupportBase::IsConvolution3dSupported</a>(<span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a>&amp;, <span class="comment">// input</span></div>
<div class="line"><a name="l00192"></a><span class="lineno">  192</span>&#160;                                                <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a>&amp;, <span class="comment">// output</span></div>
<div class="line"><a name="l00193"></a><span class="lineno">  193</span>&#160;                                                <span class="keyword">const</span> <a class="code" href="structarmnn_1_1_convolution3d_descriptor.xhtml">Convolution3dDescriptor</a>&amp;, <span class="comment">// descriptor</span></div>
<div class="line"><a name="l00194"></a><span class="lineno">  194</span>&#160;                                                <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a>&amp;, <span class="comment">// weights</span></div>
<div class="line"><a name="l00195"></a><span class="lineno">  195</span>&#160;                                                <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_optional.xhtml">Optional&lt;TensorInfo&gt;</a>&amp;, <span class="comment">// biases</span></div>
<div class="line"><a name="l00196"></a><span class="lineno">  196</span>&#160;                                                <a class="code" href="classarmnn_1_1_optional.xhtml">Optional&lt;std::string&amp;&gt;</a> reasonIfUnsupported)<span class="keyword"> const</span></div>
<div class="line"><a name="l00197"></a><span class="lineno">  197</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l00198"></a><span class="lineno">  198</span>&#160;    <span class="keywordflow">return</span> DefaultLayerSupport(__func__, __FILE__, __LINE__, <a class="code" href="classarmnn_1_1_i_layer_support.xhtml#ac75f9a02b051716a0cc1cc0818dfe454">reasonIfUnsupported</a>);</div>
<div class="line"><a name="l00199"></a><span class="lineno">  199</span>&#160;}</div>
<div class="line"><a name="l00200"></a><span class="lineno">  200</span>&#160; </div>
<div class="line"><a name="l00201"></a><span class="lineno"><a class="line" href="classarmnn_1_1_layer_support_base.xhtml#aeb2631acff8b8d0dc61334ff9f8a957a">  201</a></span>&#160;<span class="keywordtype">bool</span> <a class="code" href="classarmnn_1_1_layer_support_base.xhtml#aeb2631acff8b8d0dc61334ff9f8a957a">LayerSupportBase::IsDebugSupported</a>(<span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a>&amp;, <span class="comment">// input</span></div>
<div class="line"><a name="l00202"></a><span class="lineno">  202</span>&#160;                                        <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a>&amp;, <span class="comment">// output</span></div>
<div class="line"><a name="l00203"></a><span class="lineno">  203</span>&#160;                                        <a class="code" href="classarmnn_1_1_optional.xhtml">Optional&lt;std::string&amp;&gt;</a> reasonIfUnsupported)<span class="keyword"> const</span></div>
<div class="line"><a name="l00204"></a><span class="lineno">  204</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l00205"></a><span class="lineno">  205</span>&#160;    <span class="keywordflow">return</span> DefaultLayerSupport(__func__, __FILE__, __LINE__, <a class="code" href="classarmnn_1_1_i_layer_support.xhtml#ac75f9a02b051716a0cc1cc0818dfe454">reasonIfUnsupported</a>);</div>
<div class="line"><a name="l00206"></a><span class="lineno">  206</span>&#160;}</div>
<div class="line"><a name="l00207"></a><span class="lineno">  207</span>&#160; </div>
<div class="line"><a name="l00208"></a><span class="lineno"><a class="line" href="classarmnn_1_1_layer_support_base.xhtml#a84f23a37f7fd69269f072e114b7f0afb">  208</a></span>&#160;<span class="keywordtype">bool</span> <a class="code" href="classarmnn_1_1_layer_support_base.xhtml#a84f23a37f7fd69269f072e114b7f0afb">LayerSupportBase::IsDepthToSpaceSupported</a>(<span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a>&amp;, <span class="comment">// input</span></div>
<div class="line"><a name="l00209"></a><span class="lineno">  209</span>&#160;                                               <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a>&amp;, <span class="comment">// output</span></div>
<div class="line"><a name="l00210"></a><span class="lineno">  210</span>&#160;                                               <span class="keyword">const</span> <a class="code" href="structarmnn_1_1_space_to_depth_descriptor.xhtml">DepthToSpaceDescriptor</a>&amp;, <span class="comment">// descriptor</span></div>
<div class="line"><a name="l00211"></a><span class="lineno">  211</span>&#160;                                               <a class="code" href="classarmnn_1_1_optional.xhtml">Optional&lt;std::string&amp;&gt;</a> reasonIfUnsupported)<span class="keyword"> const</span></div>
<div class="line"><a name="l00212"></a><span class="lineno">  212</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l00213"></a><span class="lineno">  213</span>&#160;    <span class="keywordflow">return</span> DefaultLayerSupport(__func__, __FILE__, __LINE__, <a class="code" href="classarmnn_1_1_i_layer_support.xhtml#ac75f9a02b051716a0cc1cc0818dfe454">reasonIfUnsupported</a>);</div>
<div class="line"><a name="l00214"></a><span class="lineno">  214</span>&#160;}</div>
<div class="line"><a name="l00215"></a><span class="lineno">  215</span>&#160; </div>
<div class="line"><a name="l00216"></a><span class="lineno"><a class="line" href="classarmnn_1_1_layer_support_base.xhtml#a56c4df05190f0f465e8501ae831af234">  216</a></span>&#160;<span class="keywordtype">bool</span> <a class="code" href="classarmnn_1_1_layer_support_base.xhtml#a56c4df05190f0f465e8501ae831af234">LayerSupportBase::IsDepthwiseConvolutionSupported</a>(<span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a>&amp;, <span class="comment">//input</span></div>
<div class="line"><a name="l00217"></a><span class="lineno">  217</span>&#160;                                                       <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a>&amp;, <span class="comment">//output</span></div>
<div class="line"><a name="l00218"></a><span class="lineno">  218</span>&#160;                                                       <span class="keyword">const</span> <a class="code" href="structarmnn_1_1_depthwise_convolution2d_descriptor.xhtml">DepthwiseConvolution2dDescriptor</a>&amp;, <span class="comment">// descriptor</span></div>
<div class="line"><a name="l00219"></a><span class="lineno">  219</span>&#160;                                                       <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a>&amp;, <span class="comment">// weights</span></div>
<div class="line"><a name="l00220"></a><span class="lineno">  220</span>&#160;                                                       <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_optional.xhtml">Optional&lt;TensorInfo&gt;</a>&amp;, <span class="comment">// biases</span></div>
<div class="line"><a name="l00221"></a><span class="lineno">  221</span>&#160;                                                       <a class="code" href="classarmnn_1_1_optional.xhtml">Optional&lt;std::string&amp;&gt;</a> reasonIfUnsupported)<span class="keyword"> const</span></div>
<div class="line"><a name="l00222"></a><span class="lineno">  222</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l00223"></a><span class="lineno">  223</span>&#160;    <span class="keywordflow">return</span> DefaultLayerSupport(__func__, __FILE__, __LINE__, <a class="code" href="classarmnn_1_1_i_layer_support.xhtml#ac75f9a02b051716a0cc1cc0818dfe454">reasonIfUnsupported</a>);</div>
<div class="line"><a name="l00224"></a><span class="lineno">  224</span>&#160;}</div>
<div class="line"><a name="l00225"></a><span class="lineno">  225</span>&#160; </div>
<div class="line"><a name="l00226"></a><span class="lineno"><a class="line" href="classarmnn_1_1_layer_support_base.xhtml#a866844299dc03c65ca41be5990bf19e8">  226</a></span>&#160;<span class="keywordtype">bool</span> <a class="code" href="classarmnn_1_1_layer_support_base.xhtml#a866844299dc03c65ca41be5990bf19e8">LayerSupportBase::IsDequantizeSupported</a>(<span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a>&amp;, <span class="comment">// input</span></div>
<div class="line"><a name="l00227"></a><span class="lineno">  227</span>&#160;                                             <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a>&amp;, <span class="comment">// output</span></div>
<div class="line"><a name="l00228"></a><span class="lineno">  228</span>&#160;                                             <a class="code" href="classarmnn_1_1_optional.xhtml">Optional&lt;std::string&amp;&gt;</a> reasonIfUnsupported)<span class="keyword"> const</span></div>
<div class="line"><a name="l00229"></a><span class="lineno">  229</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l00230"></a><span class="lineno">  230</span>&#160;    <span class="keywordflow">return</span> DefaultLayerSupport(__func__, __FILE__, __LINE__, <a class="code" href="classarmnn_1_1_i_layer_support.xhtml#ac75f9a02b051716a0cc1cc0818dfe454">reasonIfUnsupported</a>);</div>
<div class="line"><a name="l00231"></a><span class="lineno">  231</span>&#160;}</div>
<div class="line"><a name="l00232"></a><span class="lineno">  232</span>&#160; </div>
<div class="line"><a name="l00233"></a><span class="lineno"><a class="line" href="classarmnn_1_1_layer_support_base.xhtml#a884cfe928faf62853edc9607142efce9">  233</a></span>&#160;<span class="keywordtype">bool</span> <a class="code" href="classarmnn_1_1_layer_support_base.xhtml#a884cfe928faf62853edc9607142efce9">LayerSupportBase::IsDetectionPostProcessSupported</a>(<span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a>&amp;, <span class="comment">// boxEncodings</span></div>
<div class="line"><a name="l00234"></a><span class="lineno">  234</span>&#160;                                                       <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a>&amp;, <span class="comment">// scores</span></div>
<div class="line"><a name="l00235"></a><span class="lineno">  235</span>&#160;                                                       <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a>&amp;, <span class="comment">// anchors</span></div>
<div class="line"><a name="l00236"></a><span class="lineno">  236</span>&#160;                                                       <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a>&amp;, <span class="comment">// detectionBoxes</span></div>
<div class="line"><a name="l00237"></a><span class="lineno">  237</span>&#160;                                                       <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a>&amp;, <span class="comment">// detectionClasses</span></div>
<div class="line"><a name="l00238"></a><span class="lineno">  238</span>&#160;                                                       <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a>&amp;, <span class="comment">// detectionScores</span></div>
<div class="line"><a name="l00239"></a><span class="lineno">  239</span>&#160;                                                       <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a>&amp;, <span class="comment">// numDetections</span></div>
<div class="line"><a name="l00240"></a><span class="lineno">  240</span>&#160;                                                       <span class="keyword">const</span> <a class="code" href="structarmnn_1_1_detection_post_process_descriptor.xhtml">DetectionPostProcessDescriptor</a>&amp;, <span class="comment">//descriptor</span></div>
<div class="line"><a name="l00241"></a><span class="lineno">  241</span>&#160;                                                       <a class="code" href="classarmnn_1_1_optional.xhtml">Optional&lt;std::string&amp;&gt;</a> reasonIfUnsupported)<span class="keyword"> const</span></div>
<div class="line"><a name="l00242"></a><span class="lineno">  242</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l00243"></a><span class="lineno">  243</span>&#160;    <span class="keywordflow">return</span> DefaultLayerSupport(__func__, __FILE__, __LINE__, <a class="code" href="classarmnn_1_1_i_layer_support.xhtml#ac75f9a02b051716a0cc1cc0818dfe454">reasonIfUnsupported</a>);</div>
<div class="line"><a name="l00244"></a><span class="lineno">  244</span>&#160;}</div>
<div class="line"><a name="l00245"></a><span class="lineno">  245</span>&#160; </div>
<div class="line"><a name="l00246"></a><span class="lineno"><a class="line" href="classarmnn_1_1_layer_support_base.xhtml#abcbd5fad9ab8476db32cec8db3f4346e">  246</a></span>&#160;<span class="keywordtype">bool</span> <a class="code" href="classarmnn_1_1_layer_support_base.xhtml#abcbd5fad9ab8476db32cec8db3f4346e">LayerSupportBase::IsDilatedDepthwiseConvolutionSupported</a>(<span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a>&amp;, <span class="comment">// input</span></div>
<div class="line"><a name="l00247"></a><span class="lineno">  247</span>&#160;                                                              <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a>&amp;, <span class="comment">// output</span></div>
<div class="line"><a name="l00248"></a><span class="lineno">  248</span>&#160;                                                              <span class="keyword">const</span> <a class="code" href="structarmnn_1_1_depthwise_convolution2d_descriptor.xhtml">DepthwiseConvolution2dDescriptor</a>&amp;, <span class="comment">// descriptor</span></div>
<div class="line"><a name="l00249"></a><span class="lineno">  249</span>&#160;                                                              <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a>&amp;,<span class="comment">// weights</span></div>
<div class="line"><a name="l00250"></a><span class="lineno">  250</span>&#160;                                                              <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_optional.xhtml">Optional&lt;TensorInfo&gt;</a>&amp;, <span class="comment">// biases</span></div>
<div class="line"><a name="l00251"></a><span class="lineno">  251</span>&#160;                                                              <a class="code" href="classarmnn_1_1_optional.xhtml">Optional&lt;std::string&amp;&gt;</a> reasonIfUnsupported)<span class="keyword"> const</span></div>
<div class="line"><a name="l00252"></a><span class="lineno">  252</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l00253"></a><span class="lineno">  253</span>&#160;    <span class="keywordflow">return</span> DefaultLayerSupport(__func__, __FILE__, __LINE__, <a class="code" href="classarmnn_1_1_i_layer_support.xhtml#ac75f9a02b051716a0cc1cc0818dfe454">reasonIfUnsupported</a>);</div>
<div class="line"><a name="l00254"></a><span class="lineno">  254</span>&#160;}</div>
<div class="line"><a name="l00255"></a><span class="lineno">  255</span>&#160; </div>
<div class="line"><a name="l00256"></a><span class="lineno"><a class="line" href="classarmnn_1_1_layer_support_base.xhtml#ad4217d27bcb41e14cd023552004b21a3">  256</a></span>&#160;<span class="keywordtype">bool</span> <a class="code" href="classarmnn_1_1_layer_support_base.xhtml#ad4217d27bcb41e14cd023552004b21a3">LayerSupportBase::IsDivisionSupported</a>(<span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a>&amp;, <span class="comment">// input0</span></div>
<div class="line"><a name="l00257"></a><span class="lineno">  257</span>&#160;                                           <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a>&amp;, <span class="comment">// input1</span></div>
<div class="line"><a name="l00258"></a><span class="lineno">  258</span>&#160;                                           <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a>&amp;, <span class="comment">// output</span></div>
<div class="line"><a name="l00259"></a><span class="lineno">  259</span>&#160;                                           <a class="code" href="classarmnn_1_1_optional.xhtml">Optional&lt;std::string&amp;&gt;</a> reasonIfUnsupported)<span class="keyword"> const</span></div>
<div class="line"><a name="l00260"></a><span class="lineno">  260</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l00261"></a><span class="lineno">  261</span>&#160;    <span class="keywordflow">return</span> DefaultLayerSupport(__func__, __FILE__, __LINE__, <a class="code" href="classarmnn_1_1_i_layer_support.xhtml#ac75f9a02b051716a0cc1cc0818dfe454">reasonIfUnsupported</a>);</div>
<div class="line"><a name="l00262"></a><span class="lineno">  262</span>&#160;}</div>
<div class="line"><a name="l00263"></a><span class="lineno">  263</span>&#160; </div>
<div class="line"><a name="l00264"></a><span class="lineno"><a class="line" href="classarmnn_1_1_layer_support_base.xhtml#aeec02af89681b711706472de7be52871">  264</a></span>&#160;<span class="keywordtype">bool</span> <a class="code" href="classarmnn_1_1_layer_support_base.xhtml#aeec02af89681b711706472de7be52871">LayerSupportBase::IsElementwiseUnarySupported</a>(<span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a>&amp;, <span class="comment">// input</span></div>
<div class="line"><a name="l00265"></a><span class="lineno">  265</span>&#160;                                                   <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a>&amp;, <span class="comment">// output</span></div>
<div class="line"><a name="l00266"></a><span class="lineno">  266</span>&#160;                                                   <span class="keyword">const</span> <a class="code" href="structarmnn_1_1_elementwise_unary_descriptor.xhtml">ElementwiseUnaryDescriptor</a>&amp;, <span class="comment">// descriptor</span></div>
<div class="line"><a name="l00267"></a><span class="lineno">  267</span>&#160;                                                   <a class="code" href="classarmnn_1_1_optional.xhtml">Optional&lt;std::string&amp;&gt;</a> reasonIfUnsupported)<span class="keyword"> const</span></div>
<div class="line"><a name="l00268"></a><span class="lineno">  268</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l00269"></a><span class="lineno">  269</span>&#160;    <span class="keywordflow">return</span> DefaultLayerSupport(__func__, __FILE__, __LINE__, <a class="code" href="classarmnn_1_1_i_layer_support.xhtml#ac75f9a02b051716a0cc1cc0818dfe454">reasonIfUnsupported</a>);</div>
<div class="line"><a name="l00270"></a><span class="lineno">  270</span>&#160;}</div>
<div class="line"><a name="l00271"></a><span class="lineno">  271</span>&#160; </div>
<div class="line"><a name="l00272"></a><span class="lineno"><a class="line" href="classarmnn_1_1_layer_support_base.xhtml#a06cd4c70d33d2f49a3418a65d8f45f14">  272</a></span>&#160;<span class="keywordtype">bool</span> <a class="code" href="classarmnn_1_1_layer_support_base.xhtml#a06cd4c70d33d2f49a3418a65d8f45f14">LayerSupportBase::IsFakeQuantizationSupported</a>(<span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a>&amp;, <span class="comment">// input</span></div>
<div class="line"><a name="l00273"></a><span class="lineno">  273</span>&#160;                                                   <span class="keyword">const</span> <a class="code" href="structarmnn_1_1_fake_quantization_descriptor.xhtml">FakeQuantizationDescriptor</a>&amp;, <span class="comment">// descriptor</span></div>
<div class="line"><a name="l00274"></a><span class="lineno">  274</span>&#160;                                                   <a class="code" href="classarmnn_1_1_optional.xhtml">Optional&lt;std::string&amp;&gt;</a> reasonIfUnsupported)<span class="keyword"> const</span></div>
<div class="line"><a name="l00275"></a><span class="lineno">  275</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l00276"></a><span class="lineno">  276</span>&#160;    <span class="keywordflow">return</span> DefaultLayerSupport(__func__, __FILE__, __LINE__, <a class="code" href="classarmnn_1_1_i_layer_support.xhtml#ac75f9a02b051716a0cc1cc0818dfe454">reasonIfUnsupported</a>);</div>
<div class="line"><a name="l00277"></a><span class="lineno">  277</span>&#160;}</div>
<div class="line"><a name="l00278"></a><span class="lineno">  278</span>&#160; </div>
<div class="line"><a name="l00279"></a><span class="lineno"><a class="line" href="classarmnn_1_1_layer_support_base.xhtml#ab747f27ee2acb8409799d6ea1af0dff7">  279</a></span>&#160;<span class="keywordtype">bool</span> <a class="code" href="classarmnn_1_1_layer_support_base.xhtml#ab747f27ee2acb8409799d6ea1af0dff7">LayerSupportBase::IsFillSupported</a>(<span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a>&amp;, <span class="comment">// input</span></div>
<div class="line"><a name="l00280"></a><span class="lineno">  280</span>&#160;                                       <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a>&amp;, <span class="comment">// output</span></div>
<div class="line"><a name="l00281"></a><span class="lineno">  281</span>&#160;                                       <span class="keyword">const</span> <a class="code" href="structarmnn_1_1_fill_descriptor.xhtml">FillDescriptor</a>&amp;, <span class="comment">// descriptor</span></div>
<div class="line"><a name="l00282"></a><span class="lineno">  282</span>&#160;                                       <a class="code" href="classarmnn_1_1_optional.xhtml">Optional&lt;std::string&amp;&gt;</a> reasonIfUnsupported)<span class="keyword"> const</span></div>
<div class="line"><a name="l00283"></a><span class="lineno">  283</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l00284"></a><span class="lineno">  284</span>&#160;    <span class="keywordflow">return</span> DefaultLayerSupport(__func__, __FILE__, __LINE__, <a class="code" href="classarmnn_1_1_i_layer_support.xhtml#ac75f9a02b051716a0cc1cc0818dfe454">reasonIfUnsupported</a>);</div>
<div class="line"><a name="l00285"></a><span class="lineno">  285</span>&#160;}</div>
<div class="line"><a name="l00286"></a><span class="lineno">  286</span>&#160; </div>
<div class="line"><a name="l00287"></a><span class="lineno"><a class="line" href="classarmnn_1_1_layer_support_base.xhtml#ae054f879bca9ff680f7e42ae97cc5ed3">  287</a></span>&#160;<span class="keywordtype">bool</span> <a class="code" href="classarmnn_1_1_layer_support_base.xhtml#ae054f879bca9ff680f7e42ae97cc5ed3">LayerSupportBase::IsFloorSupported</a>(<span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a>&amp;, <span class="comment">// input</span></div>
<div class="line"><a name="l00288"></a><span class="lineno">  288</span>&#160;                                        <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a>&amp;, <span class="comment">// output</span></div>
<div class="line"><a name="l00289"></a><span class="lineno">  289</span>&#160;                                        <a class="code" href="classarmnn_1_1_optional.xhtml">Optional&lt;std::string&amp;&gt;</a> reasonIfUnsupported)<span class="keyword"> const</span></div>
<div class="line"><a name="l00290"></a><span class="lineno">  290</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l00291"></a><span class="lineno">  291</span>&#160;    <span class="keywordflow">return</span> DefaultLayerSupport(__func__, __FILE__, __LINE__, <a class="code" href="classarmnn_1_1_i_layer_support.xhtml#ac75f9a02b051716a0cc1cc0818dfe454">reasonIfUnsupported</a>);</div>
<div class="line"><a name="l00292"></a><span class="lineno">  292</span>&#160;}</div>
<div class="line"><a name="l00293"></a><span class="lineno">  293</span>&#160; </div>
<div class="line"><a name="l00294"></a><span class="lineno"><a class="line" href="classarmnn_1_1_layer_support_base.xhtml#a7249912502bfa13dad25038e8fb9379b">  294</a></span>&#160;<span class="keywordtype">bool</span> <a class="code" href="classarmnn_1_1_layer_support_base.xhtml#a7249912502bfa13dad25038e8fb9379b">LayerSupportBase::IsFullyConnectedSupported</a>(<span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a>&amp;, <span class="comment">// input</span></div>
<div class="line"><a name="l00295"></a><span class="lineno">  295</span>&#160;                                                 <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a>&amp;, <span class="comment">// output</span></div>
<div class="line"><a name="l00296"></a><span class="lineno">  296</span>&#160;                                                 <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a>&amp;, <span class="comment">// weights</span></div>
<div class="line"><a name="l00297"></a><span class="lineno">  297</span>&#160;                                                 <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a>&amp;, <span class="comment">// biases</span></div>
<div class="line"><a name="l00298"></a><span class="lineno">  298</span>&#160;                                                 <span class="keyword">const</span> <a class="code" href="structarmnn_1_1_fully_connected_descriptor.xhtml">FullyConnectedDescriptor</a>&amp;, <span class="comment">// descriptor</span></div>
<div class="line"><a name="l00299"></a><span class="lineno">  299</span>&#160;                                                 <a class="code" href="classarmnn_1_1_optional.xhtml">Optional&lt;std::string&amp;&gt;</a> reasonIfUnsupported)<span class="keyword"> const</span></div>
<div class="line"><a name="l00300"></a><span class="lineno">  300</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l00301"></a><span class="lineno">  301</span>&#160;    <span class="keywordflow">return</span> DefaultLayerSupport(__func__, __FILE__, __LINE__, <a class="code" href="classarmnn_1_1_i_layer_support.xhtml#ac75f9a02b051716a0cc1cc0818dfe454">reasonIfUnsupported</a>);</div>
<div class="line"><a name="l00302"></a><span class="lineno">  302</span>&#160;}</div>
<div class="line"><a name="l00303"></a><span class="lineno">  303</span>&#160; </div>
<div class="line"><a name="l00304"></a><span class="lineno"><a class="line" href="classarmnn_1_1_layer_support_base.xhtml#a97a643c5aa50c3419dab27c24cade1e0">  304</a></span>&#160;<span class="keywordtype">bool</span> <a class="code" href="classarmnn_1_1_layer_support_base.xhtml#a97a643c5aa50c3419dab27c24cade1e0">LayerSupportBase::IsGatherSupported</a>(<span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_info.xhtml">armnn::TensorInfo</a>&amp;, <span class="comment">// input0</span></div>
<div class="line"><a name="l00305"></a><span class="lineno">  305</span>&#160;                                         <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_info.xhtml">armnn::TensorInfo</a>&amp;, <span class="comment">// input1</span></div>
<div class="line"><a name="l00306"></a><span class="lineno">  306</span>&#160;                                         <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_info.xhtml">armnn::TensorInfo</a>&amp;, <span class="comment">// output</span></div>
<div class="line"><a name="l00307"></a><span class="lineno">  307</span>&#160;                                         <span class="keyword">const</span> <a class="code" href="structarmnn_1_1_gather_descriptor.xhtml">GatherDescriptor</a>&amp;, <span class="comment">// descriptor</span></div>
<div class="line"><a name="l00308"></a><span class="lineno">  308</span>&#160;                                         <a class="code" href="classarmnn_1_1_optional.xhtml">armnn::Optional&lt;std::string&amp;&gt;</a> reasonIfUnsupported)<span class="keyword"> const</span></div>
<div class="line"><a name="l00309"></a><span class="lineno">  309</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l00310"></a><span class="lineno">  310</span>&#160;    <span class="keywordflow">return</span> DefaultLayerSupport(__func__, __FILE__, __LINE__, <a class="code" href="classarmnn_1_1_i_layer_support.xhtml#ac75f9a02b051716a0cc1cc0818dfe454">reasonIfUnsupported</a>);</div>
<div class="line"><a name="l00311"></a><span class="lineno">  311</span>&#160;}</div>
<div class="line"><a name="l00312"></a><span class="lineno">  312</span>&#160; </div>
<div class="line"><a name="l00313"></a><span class="lineno"><a class="line" href="classarmnn_1_1_layer_support_base.xhtml#a5d0dbfd77d3461ded89d3bf6a4eab62c">  313</a></span>&#160;<span class="keywordtype">bool</span> <a class="code" href="classarmnn_1_1_layer_support_base.xhtml#a5d0dbfd77d3461ded89d3bf6a4eab62c">LayerSupportBase::IsInputSupported</a>(<span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a>&amp;, <span class="comment">// input</span></div>
<div class="line"><a name="l00314"></a><span class="lineno">  314</span>&#160;                                        <a class="code" href="classarmnn_1_1_optional.xhtml">Optional&lt;std::string&amp;&gt;</a> reasonIfUnsupported)<span class="keyword"> const</span></div>
<div class="line"><a name="l00315"></a><span class="lineno">  315</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l00316"></a><span class="lineno">  316</span>&#160;    <span class="keywordflow">return</span> DefaultLayerSupport(__func__, __FILE__, __LINE__, <a class="code" href="classarmnn_1_1_i_layer_support.xhtml#ac75f9a02b051716a0cc1cc0818dfe454">reasonIfUnsupported</a>);</div>
<div class="line"><a name="l00317"></a><span class="lineno">  317</span>&#160;}</div>
<div class="line"><a name="l00318"></a><span class="lineno">  318</span>&#160; </div>
<div class="line"><a name="l00319"></a><span class="lineno"><a class="line" href="classarmnn_1_1_layer_support_base.xhtml#a9ee45bf624e40815207a2117f8e02b5d">  319</a></span>&#160;<span class="keywordtype">bool</span> <a class="code" href="classarmnn_1_1_layer_support_base.xhtml#a9ee45bf624e40815207a2117f8e02b5d">LayerSupportBase::IsInstanceNormalizationSupported</a>(<span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a>&amp;, <span class="comment">// input</span></div>
<div class="line"><a name="l00320"></a><span class="lineno">  320</span>&#160;                                                        <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a>&amp;, <span class="comment">// output</span></div>
<div class="line"><a name="l00321"></a><span class="lineno">  321</span>&#160;                                                        <span class="keyword">const</span> <a class="code" href="structarmnn_1_1_instance_normalization_descriptor.xhtml">InstanceNormalizationDescriptor</a>&amp;, <span class="comment">// descriptor</span></div>
<div class="line"><a name="l00322"></a><span class="lineno">  322</span>&#160;                                                        <a class="code" href="classarmnn_1_1_optional.xhtml">Optional&lt;std::string&amp;&gt;</a> reasonIfUnsupported)<span class="keyword"> const</span></div>
<div class="line"><a name="l00323"></a><span class="lineno">  323</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l00324"></a><span class="lineno">  324</span>&#160;    <span class="keywordflow">return</span> DefaultLayerSupport(__func__, __FILE__, __LINE__, <a class="code" href="classarmnn_1_1_i_layer_support.xhtml#ac75f9a02b051716a0cc1cc0818dfe454">reasonIfUnsupported</a>);</div>
<div class="line"><a name="l00325"></a><span class="lineno">  325</span>&#160;}</div>
<div class="line"><a name="l00326"></a><span class="lineno">  326</span>&#160; </div>
<div class="line"><a name="l00327"></a><span class="lineno"><a class="line" href="classarmnn_1_1_layer_support_base.xhtml#ad17197c4dc4dd190610d6d205108255a">  327</a></span>&#160;<span class="keywordtype">bool</span> <a class="code" href="classarmnn_1_1_layer_support_base.xhtml#ad17197c4dc4dd190610d6d205108255a">LayerSupportBase::IsL2NormalizationSupported</a>(<span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a>&amp;, <span class="comment">// input</span></div>
<div class="line"><a name="l00328"></a><span class="lineno">  328</span>&#160;                                                  <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a>&amp;, <span class="comment">// output</span></div>
<div class="line"><a name="l00329"></a><span class="lineno">  329</span>&#160;                                                  <span class="keyword">const</span> <a class="code" href="structarmnn_1_1_l2_normalization_descriptor.xhtml">L2NormalizationDescriptor</a>&amp;, <span class="comment">// descriptor</span></div>
<div class="line"><a name="l00330"></a><span class="lineno">  330</span>&#160;                                                  <a class="code" href="classarmnn_1_1_optional.xhtml">Optional&lt;std::string&amp;&gt;</a> reasonIfUnsupported)<span class="keyword"> const</span></div>
<div class="line"><a name="l00331"></a><span class="lineno">  331</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l00332"></a><span class="lineno">  332</span>&#160;    <span class="keywordflow">return</span> DefaultLayerSupport(__func__, __FILE__, __LINE__, <a class="code" href="classarmnn_1_1_i_layer_support.xhtml#ac75f9a02b051716a0cc1cc0818dfe454">reasonIfUnsupported</a>);</div>
<div class="line"><a name="l00333"></a><span class="lineno">  333</span>&#160;}</div>
<div class="line"><a name="l00334"></a><span class="lineno">  334</span>&#160; </div>
<div class="line"><a name="l00335"></a><span class="lineno"><a class="line" href="classarmnn_1_1_layer_support_base.xhtml#a66ebc7658ecd90158cfb7b03606f0bda">  335</a></span>&#160;<span class="keywordtype">bool</span> <a class="code" href="classarmnn_1_1_layer_support_base.xhtml#a66ebc7658ecd90158cfb7b03606f0bda">LayerSupportBase::IsLogicalBinarySupported</a>(<span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a>&amp;, <span class="comment">// input0</span></div>
<div class="line"><a name="l00336"></a><span class="lineno">  336</span>&#160;                                                <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a>&amp;, <span class="comment">// input1</span></div>
<div class="line"><a name="l00337"></a><span class="lineno">  337</span>&#160;                                                <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a>&amp;, <span class="comment">// output</span></div>
<div class="line"><a name="l00338"></a><span class="lineno">  338</span>&#160;                                                <span class="keyword">const</span> <a class="code" href="structarmnn_1_1_logical_binary_descriptor.xhtml">LogicalBinaryDescriptor</a>&amp;, <span class="comment">// descriptor</span></div>
<div class="line"><a name="l00339"></a><span class="lineno">  339</span>&#160;                                                <a class="code" href="classarmnn_1_1_optional.xhtml">Optional&lt;std::string&amp;&gt;</a> reasonIfUnsupported)<span class="keyword"> const</span></div>
<div class="line"><a name="l00340"></a><span class="lineno">  340</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l00341"></a><span class="lineno">  341</span>&#160;    <span class="keywordflow">return</span> DefaultLayerSupport(__func__, __FILE__, __LINE__, <a class="code" href="classarmnn_1_1_i_layer_support.xhtml#ac75f9a02b051716a0cc1cc0818dfe454">reasonIfUnsupported</a>);</div>
<div class="line"><a name="l00342"></a><span class="lineno">  342</span>&#160;}</div>
<div class="line"><a name="l00343"></a><span class="lineno">  343</span>&#160; </div>
<div class="line"><a name="l00344"></a><span class="lineno"><a class="line" href="classarmnn_1_1_layer_support_base.xhtml#a7b8c4b4fd867e2e68a3ae1e2adb090f5">  344</a></span>&#160;<span class="keywordtype">bool</span> <a class="code" href="classarmnn_1_1_layer_support_base.xhtml#a7b8c4b4fd867e2e68a3ae1e2adb090f5">LayerSupportBase::IsLogicalUnarySupported</a>(<span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a>&amp;, <span class="comment">// input</span></div>
<div class="line"><a name="l00345"></a><span class="lineno">  345</span>&#160;                                               <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a>&amp;, <span class="comment">// output</span></div>
<div class="line"><a name="l00346"></a><span class="lineno">  346</span>&#160;                                               <span class="keyword">const</span> <a class="code" href="structarmnn_1_1_elementwise_unary_descriptor.xhtml">ElementwiseUnaryDescriptor</a>&amp;, <span class="comment">// descriptor</span></div>
<div class="line"><a name="l00347"></a><span class="lineno">  347</span>&#160;                                               <a class="code" href="classarmnn_1_1_optional.xhtml">Optional&lt;std::string&amp;&gt;</a> reasonIfUnsupported)<span class="keyword"> const</span></div>
<div class="line"><a name="l00348"></a><span class="lineno">  348</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l00349"></a><span class="lineno">  349</span>&#160;    <span class="keywordflow">return</span> DefaultLayerSupport(__func__, __FILE__, __LINE__, <a class="code" href="classarmnn_1_1_i_layer_support.xhtml#ac75f9a02b051716a0cc1cc0818dfe454">reasonIfUnsupported</a>);</div>
<div class="line"><a name="l00350"></a><span class="lineno">  350</span>&#160;}</div>
<div class="line"><a name="l00351"></a><span class="lineno">  351</span>&#160; </div>
<div class="line"><a name="l00352"></a><span class="lineno"><a class="line" href="classarmnn_1_1_layer_support_base.xhtml#ae13d577a85b2b121febb2fe43899fd6c">  352</a></span>&#160;<span class="keywordtype">bool</span> <a class="code" href="classarmnn_1_1_layer_support_base.xhtml#ae13d577a85b2b121febb2fe43899fd6c">LayerSupportBase::IsLogSoftmaxSupported</a>(<span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a>&amp;, <span class="comment">// input</span></div>
<div class="line"><a name="l00353"></a><span class="lineno">  353</span>&#160;                                             <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a>&amp;, <span class="comment">// output</span></div>
<div class="line"><a name="l00354"></a><span class="lineno">  354</span>&#160;                                             <span class="keyword">const</span> <a class="code" href="structarmnn_1_1_softmax_descriptor.xhtml">LogSoftmaxDescriptor</a>&amp;, <span class="comment">// descriptor</span></div>
<div class="line"><a name="l00355"></a><span class="lineno">  355</span>&#160;                                             <a class="code" href="classarmnn_1_1_optional.xhtml">Optional&lt;std::string&amp;&gt;</a> reasonIfUnsupported)<span class="keyword"> const</span></div>
<div class="line"><a name="l00356"></a><span class="lineno">  356</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l00357"></a><span class="lineno">  357</span>&#160;    <span class="keywordflow">return</span> DefaultLayerSupport(__func__, __FILE__, __LINE__, <a class="code" href="classarmnn_1_1_i_layer_support.xhtml#ac75f9a02b051716a0cc1cc0818dfe454">reasonIfUnsupported</a>);</div>
<div class="line"><a name="l00358"></a><span class="lineno">  358</span>&#160;}</div>
<div class="line"><a name="l00359"></a><span class="lineno">  359</span>&#160; </div>
<div class="line"><a name="l00360"></a><span class="lineno"><a class="line" href="classarmnn_1_1_layer_support_base.xhtml#a533ad0fa8ff06bef939f4260a8183350">  360</a></span>&#160;<span class="keywordtype">bool</span> <a class="code" href="classarmnn_1_1_layer_support_base.xhtml#a533ad0fa8ff06bef939f4260a8183350">LayerSupportBase::IsLstmSupported</a>(<span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a>&amp;, <span class="comment">// input</span></div>
<div class="line"><a name="l00361"></a><span class="lineno">  361</span>&#160;                                       <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a>&amp;, <span class="comment">// outputStateIn</span></div>
<div class="line"><a name="l00362"></a><span class="lineno">  362</span>&#160;                                       <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a>&amp;, <span class="comment">// cellStateIn</span></div>
<div class="line"><a name="l00363"></a><span class="lineno">  363</span>&#160;                                       <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a>&amp;, <span class="comment">// scratchBuffer</span></div>
<div class="line"><a name="l00364"></a><span class="lineno">  364</span>&#160;                                       <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a>&amp;, <span class="comment">// outputStateOut</span></div>
<div class="line"><a name="l00365"></a><span class="lineno">  365</span>&#160;                                       <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a>&amp;, <span class="comment">// cellStateOut</span></div>
<div class="line"><a name="l00366"></a><span class="lineno">  366</span>&#160;                                       <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a>&amp;, <span class="comment">// output</span></div>
<div class="line"><a name="l00367"></a><span class="lineno">  367</span>&#160;                                       <span class="keyword">const</span> <a class="code" href="structarmnn_1_1_lstm_descriptor.xhtml">LstmDescriptor</a>&amp;, <span class="comment">// descriptor</span></div>
<div class="line"><a name="l00368"></a><span class="lineno">  368</span>&#160;                                       <span class="keyword">const</span> <a class="code" href="structarmnn_1_1_lstm_input_params_info.xhtml">LstmInputParamsInfo</a>&amp;, <span class="comment">// paramsInfo</span></div>
<div class="line"><a name="l00369"></a><span class="lineno">  369</span>&#160;                                       <a class="code" href="classarmnn_1_1_optional.xhtml">Optional&lt;std::string&amp;&gt;</a> reasonIfUnsupported)<span class="keyword"> const</span></div>
<div class="line"><a name="l00370"></a><span class="lineno">  370</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l00371"></a><span class="lineno">  371</span>&#160;    <span class="keywordflow">return</span> DefaultLayerSupport(__func__, __FILE__, __LINE__, <a class="code" href="classarmnn_1_1_i_layer_support.xhtml#ac75f9a02b051716a0cc1cc0818dfe454">reasonIfUnsupported</a>);</div>
<div class="line"><a name="l00372"></a><span class="lineno">  372</span>&#160;}</div>
<div class="line"><a name="l00373"></a><span class="lineno">  373</span>&#160; </div>
<div class="line"><a name="l00374"></a><span class="lineno"><a class="line" href="classarmnn_1_1_layer_support_base.xhtml#ac92df5c79bae4ccdc68d9d2045fa2110">  374</a></span>&#160;<span class="keywordtype">bool</span> <a class="code" href="classarmnn_1_1_layer_support_base.xhtml#ac92df5c79bae4ccdc68d9d2045fa2110">LayerSupportBase::IsMaximumSupported</a>(<span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a>&amp;, <span class="comment">// input0</span></div>
<div class="line"><a name="l00375"></a><span class="lineno">  375</span>&#160;                                          <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a>&amp;, <span class="comment">// input1</span></div>
<div class="line"><a name="l00376"></a><span class="lineno">  376</span>&#160;                                          <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a>&amp;, <span class="comment">// output</span></div>
<div class="line"><a name="l00377"></a><span class="lineno">  377</span>&#160;                                          <a class="code" href="classarmnn_1_1_optional.xhtml">Optional&lt;std::string&amp;&gt;</a> reasonIfUnsupported)<span class="keyword"> const</span></div>
<div class="line"><a name="l00378"></a><span class="lineno">  378</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l00379"></a><span class="lineno">  379</span>&#160;    <span class="keywordflow">return</span> DefaultLayerSupport(__func__, __FILE__, __LINE__, <a class="code" href="classarmnn_1_1_i_layer_support.xhtml#ac75f9a02b051716a0cc1cc0818dfe454">reasonIfUnsupported</a>);</div>
<div class="line"><a name="l00380"></a><span class="lineno">  380</span>&#160;}</div>
<div class="line"><a name="l00381"></a><span class="lineno">  381</span>&#160; </div>
<div class="line"><a name="l00382"></a><span class="lineno"><a class="line" href="classarmnn_1_1_layer_support_base.xhtml#ad9869f2a0cbe051fcc87fb1405d4091d">  382</a></span>&#160;<span class="keywordtype">bool</span> <a class="code" href="classarmnn_1_1_layer_support_base.xhtml#ad9869f2a0cbe051fcc87fb1405d4091d">LayerSupportBase::IsMeanSupported</a>(<span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a>&amp;, <span class="comment">// input</span></div>
<div class="line"><a name="l00383"></a><span class="lineno">  383</span>&#160;                                       <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a>&amp;, <span class="comment">// output</span></div>
<div class="line"><a name="l00384"></a><span class="lineno">  384</span>&#160;                                       <span class="keyword">const</span> <a class="code" href="structarmnn_1_1_mean_descriptor.xhtml">MeanDescriptor</a>&amp;, <span class="comment">// descriptor</span></div>
<div class="line"><a name="l00385"></a><span class="lineno">  385</span>&#160;                                       <a class="code" href="classarmnn_1_1_optional.xhtml">Optional&lt;std::string&amp;&gt;</a> reasonIfUnsupported)<span class="keyword"> const</span></div>
<div class="line"><a name="l00386"></a><span class="lineno">  386</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l00387"></a><span class="lineno">  387</span>&#160;    <span class="keywordflow">return</span> DefaultLayerSupport(__func__, __FILE__, __LINE__, <a class="code" href="classarmnn_1_1_i_layer_support.xhtml#ac75f9a02b051716a0cc1cc0818dfe454">reasonIfUnsupported</a>);</div>
<div class="line"><a name="l00388"></a><span class="lineno">  388</span>&#160;}</div>
<div class="line"><a name="l00389"></a><span class="lineno">  389</span>&#160; </div>
<div class="line"><a name="l00390"></a><span class="lineno"><a class="line" href="classarmnn_1_1_layer_support_base.xhtml#ae12212269e173407398a6d4fef80f76f">  390</a></span>&#160;<span class="keywordtype">bool</span> <a class="code" href="classarmnn_1_1_layer_support_base.xhtml#ae12212269e173407398a6d4fef80f76f">LayerSupportBase::IsMemCopySupported</a>(<span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_info.xhtml">armnn::TensorInfo</a>&amp;, <span class="comment">// input</span></div>
<div class="line"><a name="l00391"></a><span class="lineno">  391</span>&#160;                                          <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_info.xhtml">armnn::TensorInfo</a>&amp;, <span class="comment">// output</span></div>
<div class="line"><a name="l00392"></a><span class="lineno">  392</span>&#160;                                          <a class="code" href="classarmnn_1_1_optional.xhtml">armnn::Optional&lt;std::string &amp;&gt;</a> ) <span class="keyword">const</span> <span class="comment">// reasonIfUnsupported</span></div>
<div class="line"><a name="l00393"></a><span class="lineno">  393</span>&#160;{</div>
<div class="line"><a name="l00394"></a><span class="lineno">  394</span>&#160;    <span class="keywordflow">return</span> <span class="keyword">true</span>;</div>
<div class="line"><a name="l00395"></a><span class="lineno">  395</span>&#160;}</div>
<div class="line"><a name="l00396"></a><span class="lineno">  396</span>&#160; </div>
<div class="line"><a name="l00397"></a><span class="lineno"><a class="line" href="classarmnn_1_1_layer_support_base.xhtml#a3ff6fcb839280edf41013d349df4f848">  397</a></span>&#160;<span class="keywordtype">bool</span> <a class="code" href="classarmnn_1_1_layer_support_base.xhtml#a3ff6fcb839280edf41013d349df4f848">LayerSupportBase::IsMemImportSupported</a>(<span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_info.xhtml">armnn::TensorInfo</a>&amp;, <span class="comment">// input</span></div>
<div class="line"><a name="l00398"></a><span class="lineno">  398</span>&#160;                                            <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_info.xhtml">armnn::TensorInfo</a>&amp;, <span class="comment">// output</span></div>
<div class="line"><a name="l00399"></a><span class="lineno">  399</span>&#160;                                            <a class="code" href="classarmnn_1_1_optional.xhtml">armnn::Optional&lt;std::string &amp;&gt;</a> ) <span class="keyword">const</span> <span class="comment">// reasonIfUnsupported</span></div>
<div class="line"><a name="l00400"></a><span class="lineno">  400</span>&#160;{</div>
<div class="line"><a name="l00401"></a><span class="lineno">  401</span>&#160;    <span class="keywordflow">return</span> <span class="keyword">true</span>;</div>
<div class="line"><a name="l00402"></a><span class="lineno">  402</span>&#160;}</div>
<div class="line"><a name="l00403"></a><span class="lineno">  403</span>&#160; </div>
<div class="line"><a name="l00404"></a><span class="lineno"><a class="line" href="classarmnn_1_1_layer_support_base.xhtml#a93a1d7a75c6802d3c4f7911f35e1cfa8">  404</a></span>&#160;<span class="keywordtype">bool</span> <a class="code" href="classarmnn_1_1_layer_support_base.xhtml#a93a1d7a75c6802d3c4f7911f35e1cfa8">LayerSupportBase::IsMergeSupported</a>(<span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a>&amp;, <span class="comment">// input0</span></div>
<div class="line"><a name="l00405"></a><span class="lineno">  405</span>&#160;                                        <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a>&amp;, <span class="comment">// input1</span></div>
<div class="line"><a name="l00406"></a><span class="lineno">  406</span>&#160;                                        <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a>&amp;, <span class="comment">// output</span></div>
<div class="line"><a name="l00407"></a><span class="lineno">  407</span>&#160;                                        <a class="code" href="classarmnn_1_1_optional.xhtml">Optional&lt;std::string&amp;&gt;</a> reasonIfUnsupported)<span class="keyword"> const</span></div>
<div class="line"><a name="l00408"></a><span class="lineno">  408</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l00409"></a><span class="lineno">  409</span>&#160;    <span class="keywordflow">return</span> DefaultLayerSupport(__func__, __FILE__, __LINE__, <a class="code" href="classarmnn_1_1_i_layer_support.xhtml#ac75f9a02b051716a0cc1cc0818dfe454">reasonIfUnsupported</a>);</div>
<div class="line"><a name="l00410"></a><span class="lineno">  410</span>&#160;}</div>
<div class="line"><a name="l00411"></a><span class="lineno">  411</span>&#160; </div>
<div class="line"><a name="l00412"></a><span class="lineno"><a class="line" href="classarmnn_1_1_layer_support_base.xhtml#a4eb9b602052470f8eadcfa7a63b17d54">  412</a></span>&#160;<span class="keywordtype">bool</span> <a class="code" href="classarmnn_1_1_layer_support_base.xhtml#a4eb9b602052470f8eadcfa7a63b17d54">LayerSupportBase::IsMinimumSupported</a>(<span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a>&amp;, <span class="comment">// input0</span></div>
<div class="line"><a name="l00413"></a><span class="lineno">  413</span>&#160;                                          <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a>&amp;, <span class="comment">// input1</span></div>
<div class="line"><a name="l00414"></a><span class="lineno">  414</span>&#160;                                          <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a>&amp;, <span class="comment">// output</span></div>
<div class="line"><a name="l00415"></a><span class="lineno">  415</span>&#160;                                          <a class="code" href="classarmnn_1_1_optional.xhtml">Optional&lt;std::string&amp;&gt;</a> reasonIfUnsupported)<span class="keyword"> const</span></div>
<div class="line"><a name="l00416"></a><span class="lineno">  416</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l00417"></a><span class="lineno">  417</span>&#160;    <span class="keywordflow">return</span> DefaultLayerSupport(__func__, __FILE__, __LINE__, <a class="code" href="classarmnn_1_1_i_layer_support.xhtml#ac75f9a02b051716a0cc1cc0818dfe454">reasonIfUnsupported</a>);</div>
<div class="line"><a name="l00418"></a><span class="lineno">  418</span>&#160;}</div>
<div class="line"><a name="l00419"></a><span class="lineno">  419</span>&#160; </div>
<div class="line"><a name="l00420"></a><span class="lineno"><a class="line" href="classarmnn_1_1_layer_support_base.xhtml#ab5960d08e30fb9542125688580c5f623">  420</a></span>&#160;<span class="keywordtype">bool</span> <a class="code" href="classarmnn_1_1_layer_support_base.xhtml#ab5960d08e30fb9542125688580c5f623">LayerSupportBase::IsMultiplicationSupported</a>(<span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a>&amp;, <span class="comment">// input0</span></div>
<div class="line"><a name="l00421"></a><span class="lineno">  421</span>&#160;                                                 <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a>&amp;, <span class="comment">// input1</span></div>
<div class="line"><a name="l00422"></a><span class="lineno">  422</span>&#160;                                                 <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a>&amp;, <span class="comment">// output</span></div>
<div class="line"><a name="l00423"></a><span class="lineno">  423</span>&#160;                                                 <a class="code" href="classarmnn_1_1_optional.xhtml">Optional&lt;std::string&amp;&gt;</a> reasonIfUnsupported)<span class="keyword"> const</span></div>
<div class="line"><a name="l00424"></a><span class="lineno">  424</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l00425"></a><span class="lineno">  425</span>&#160;    <span class="keywordflow">return</span> DefaultLayerSupport(__func__, __FILE__, __LINE__, <a class="code" href="classarmnn_1_1_i_layer_support.xhtml#ac75f9a02b051716a0cc1cc0818dfe454">reasonIfUnsupported</a>);</div>
<div class="line"><a name="l00426"></a><span class="lineno">  426</span>&#160;}</div>
<div class="line"><a name="l00427"></a><span class="lineno">  427</span>&#160; </div>
<div class="line"><a name="l00428"></a><span class="lineno"><a class="line" href="classarmnn_1_1_layer_support_base.xhtml#aedd6e4de83db27813fad327c29402033">  428</a></span>&#160;<span class="keywordtype">bool</span> <a class="code" href="classarmnn_1_1_layer_support_base.xhtml#aedd6e4de83db27813fad327c29402033">LayerSupportBase::IsNormalizationSupported</a>(<span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a>&amp;, <span class="comment">// input</span></div>
<div class="line"><a name="l00429"></a><span class="lineno">  429</span>&#160;                                                <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a>&amp;, <span class="comment">// output</span></div>
<div class="line"><a name="l00430"></a><span class="lineno">  430</span>&#160;                                                <span class="keyword">const</span> <a class="code" href="structarmnn_1_1_normalization_descriptor.xhtml">NormalizationDescriptor</a>&amp;, <span class="comment">// descriptor</span></div>
<div class="line"><a name="l00431"></a><span class="lineno">  431</span>&#160;                                                <a class="code" href="classarmnn_1_1_optional.xhtml">Optional&lt;std::string&amp;&gt;</a> reasonIfUnsupported)<span class="keyword"> const</span></div>
<div class="line"><a name="l00432"></a><span class="lineno">  432</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l00433"></a><span class="lineno">  433</span>&#160;    <span class="keywordflow">return</span> DefaultLayerSupport(__func__, __FILE__, __LINE__, <a class="code" href="classarmnn_1_1_i_layer_support.xhtml#ac75f9a02b051716a0cc1cc0818dfe454">reasonIfUnsupported</a>);</div>
<div class="line"><a name="l00434"></a><span class="lineno">  434</span>&#160;}</div>
<div class="line"><a name="l00435"></a><span class="lineno">  435</span>&#160; </div>
<div class="line"><a name="l00436"></a><span class="lineno"><a class="line" href="classarmnn_1_1_layer_support_base.xhtml#ac2078e9d66b086cf1225f0610b05a520">  436</a></span>&#160;<span class="keywordtype">bool</span> <a class="code" href="classarmnn_1_1_layer_support_base.xhtml#ac2078e9d66b086cf1225f0610b05a520">LayerSupportBase::IsOutputSupported</a>(<span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a>&amp;, <span class="comment">// output</span></div>
<div class="line"><a name="l00437"></a><span class="lineno">  437</span>&#160;                                         <a class="code" href="classarmnn_1_1_optional.xhtml">Optional&lt;std::string&amp;&gt;</a> reasonIfUnsupported)<span class="keyword"> const</span></div>
<div class="line"><a name="l00438"></a><span class="lineno">  438</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l00439"></a><span class="lineno">  439</span>&#160;    <span class="keywordflow">return</span> DefaultLayerSupport(__func__, __FILE__, __LINE__, <a class="code" href="classarmnn_1_1_i_layer_support.xhtml#ac75f9a02b051716a0cc1cc0818dfe454">reasonIfUnsupported</a>);</div>
<div class="line"><a name="l00440"></a><span class="lineno">  440</span>&#160;}</div>
<div class="line"><a name="l00441"></a><span class="lineno">  441</span>&#160; </div>
<div class="line"><a name="l00442"></a><span class="lineno"><a class="line" href="classarmnn_1_1_layer_support_base.xhtml#aef4e4cfc054c2fd0e9bd0947909ebe83">  442</a></span>&#160;<span class="keywordtype">bool</span> <a class="code" href="classarmnn_1_1_layer_support_base.xhtml#aef4e4cfc054c2fd0e9bd0947909ebe83">LayerSupportBase::IsPadSupported</a>(<span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a>&amp;, <span class="comment">// input</span></div>
<div class="line"><a name="l00443"></a><span class="lineno">  443</span>&#160;                                      <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a>&amp;, <span class="comment">// output</span></div>
<div class="line"><a name="l00444"></a><span class="lineno">  444</span>&#160;                                      <span class="keyword">const</span> <a class="code" href="structarmnn_1_1_pad_descriptor.xhtml">PadDescriptor</a>&amp;, <span class="comment">// descriptor</span></div>
<div class="line"><a name="l00445"></a><span class="lineno">  445</span>&#160;                                      <a class="code" href="classarmnn_1_1_optional.xhtml">Optional&lt;std::string&amp;&gt;</a> reasonIfUnsupported)<span class="keyword"> const</span></div>
<div class="line"><a name="l00446"></a><span class="lineno">  446</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l00447"></a><span class="lineno">  447</span>&#160;    <span class="keywordflow">return</span> DefaultLayerSupport(__func__, __FILE__, __LINE__, <a class="code" href="classarmnn_1_1_i_layer_support.xhtml#ac75f9a02b051716a0cc1cc0818dfe454">reasonIfUnsupported</a>);</div>
<div class="line"><a name="l00448"></a><span class="lineno">  448</span>&#160;}</div>
<div class="line"><a name="l00449"></a><span class="lineno">  449</span>&#160; </div>
<div class="line"><a name="l00450"></a><span class="lineno"><a class="line" href="classarmnn_1_1_layer_support_base.xhtml#a336cc17b9c2cd4e7f667c7fcf5c9377e">  450</a></span>&#160;<span class="keywordtype">bool</span> <a class="code" href="classarmnn_1_1_layer_support_base.xhtml#a336cc17b9c2cd4e7f667c7fcf5c9377e">LayerSupportBase::IsPermuteSupported</a>(<span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a>&amp;, <span class="comment">// input</span></div>
<div class="line"><a name="l00451"></a><span class="lineno">  451</span>&#160;                                          <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a>&amp;, <span class="comment">// output</span></div>
<div class="line"><a name="l00452"></a><span class="lineno">  452</span>&#160;                                          <span class="keyword">const</span> <a class="code" href="structarmnn_1_1_permute_descriptor.xhtml">PermuteDescriptor</a>&amp;, <span class="comment">// descriptor</span></div>
<div class="line"><a name="l00453"></a><span class="lineno">  453</span>&#160;                                          <a class="code" href="classarmnn_1_1_optional.xhtml">Optional&lt;std::string&amp;&gt;</a> reasonIfUnsupported)<span class="keyword"> const</span></div>
<div class="line"><a name="l00454"></a><span class="lineno">  454</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l00455"></a><span class="lineno">  455</span>&#160;    <span class="keywordflow">return</span> DefaultLayerSupport(__func__, __FILE__, __LINE__, <a class="code" href="classarmnn_1_1_i_layer_support.xhtml#ac75f9a02b051716a0cc1cc0818dfe454">reasonIfUnsupported</a>);</div>
<div class="line"><a name="l00456"></a><span class="lineno">  456</span>&#160;}</div>
<div class="line"><a name="l00457"></a><span class="lineno">  457</span>&#160; </div>
<div class="line"><a name="l00458"></a><span class="lineno"><a class="line" href="classarmnn_1_1_layer_support_base.xhtml#ad6262dc3169d8e809c272b31b25aaa6a">  458</a></span>&#160;<span class="keywordtype">bool</span> <a class="code" href="classarmnn_1_1_layer_support_base.xhtml#ad6262dc3169d8e809c272b31b25aaa6a">LayerSupportBase::IsPooling2dSupported</a>(<span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a>&amp;, <span class="comment">// input</span></div>
<div class="line"><a name="l00459"></a><span class="lineno">  459</span>&#160;                                            <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a>&amp;, <span class="comment">// output</span></div>
<div class="line"><a name="l00460"></a><span class="lineno">  460</span>&#160;                                            <span class="keyword">const</span> <a class="code" href="structarmnn_1_1_pooling2d_descriptor.xhtml">Pooling2dDescriptor</a>&amp;, <span class="comment">// descriptor</span></div>
<div class="line"><a name="l00461"></a><span class="lineno">  461</span>&#160;                                            <a class="code" href="classarmnn_1_1_optional.xhtml">Optional&lt;std::string&amp;&gt;</a> reasonIfUnsupported)<span class="keyword"> const</span></div>
<div class="line"><a name="l00462"></a><span class="lineno">  462</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l00463"></a><span class="lineno">  463</span>&#160;    <span class="keywordflow">return</span> DefaultLayerSupport(__func__, __FILE__, __LINE__, <a class="code" href="classarmnn_1_1_i_layer_support.xhtml#ac75f9a02b051716a0cc1cc0818dfe454">reasonIfUnsupported</a>);</div>
<div class="line"><a name="l00464"></a><span class="lineno">  464</span>&#160;}</div>
<div class="line"><a name="l00465"></a><span class="lineno">  465</span>&#160; </div>
<div class="line"><a name="l00466"></a><span class="lineno"><a class="line" href="classarmnn_1_1_layer_support_base.xhtml#a70c3043f5b6dd3091646fb2c1648a5f5">  466</a></span>&#160;<span class="keywordtype">bool</span> <a class="code" href="classarmnn_1_1_layer_support_base.xhtml#a70c3043f5b6dd3091646fb2c1648a5f5">LayerSupportBase::IsPooling3dSupported</a>(<span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a>&amp;, <span class="comment">// input</span></div>
<div class="line"><a name="l00467"></a><span class="lineno">  467</span>&#160;                                            <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a>&amp;, <span class="comment">// output</span></div>
<div class="line"><a name="l00468"></a><span class="lineno">  468</span>&#160;                                            <span class="keyword">const</span> <a class="code" href="structarmnn_1_1_pooling3d_descriptor.xhtml">Pooling3dDescriptor</a>&amp;, <span class="comment">// descriptor</span></div>
<div class="line"><a name="l00469"></a><span class="lineno">  469</span>&#160;                                            <a class="code" href="classarmnn_1_1_optional.xhtml">Optional&lt;std::string&amp;&gt;</a> reasonIfUnsupported)<span class="keyword"> const</span></div>
<div class="line"><a name="l00470"></a><span class="lineno">  470</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l00471"></a><span class="lineno">  471</span>&#160;    <span class="keywordflow">return</span> DefaultLayerSupport(__func__, __FILE__, __LINE__, <a class="code" href="classarmnn_1_1_i_layer_support.xhtml#ac75f9a02b051716a0cc1cc0818dfe454">reasonIfUnsupported</a>);</div>
<div class="line"><a name="l00472"></a><span class="lineno">  472</span>&#160;}</div>
<div class="line"><a name="l00473"></a><span class="lineno">  473</span>&#160; </div>
<div class="line"><a name="l00474"></a><span class="lineno"><a class="line" href="classarmnn_1_1_layer_support_base.xhtml#a56d839ce23fcd124ff86b31ce5f786b1">  474</a></span>&#160;<span class="keywordtype">bool</span> <a class="code" href="classarmnn_1_1_layer_support_base.xhtml#a56d839ce23fcd124ff86b31ce5f786b1">LayerSupportBase::IsPreCompiledSupported</a>(<span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a>&amp;, <span class="comment">// input</span></div>
<div class="line"><a name="l00475"></a><span class="lineno">  475</span>&#160;                                              <span class="keyword">const</span> <a class="code" href="structarmnn_1_1_pre_compiled_descriptor.xhtml">PreCompiledDescriptor</a>&amp;, <span class="comment">// descriptor</span></div>
<div class="line"><a name="l00476"></a><span class="lineno">  476</span>&#160;                                              <a class="code" href="classarmnn_1_1_optional.xhtml">Optional&lt;std::string&amp;&gt;</a> reasonIfUnsupported)<span class="keyword"> const</span></div>
<div class="line"><a name="l00477"></a><span class="lineno">  477</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l00478"></a><span class="lineno">  478</span>&#160;    <span class="keywordflow">return</span> DefaultLayerSupport(__func__, __FILE__, __LINE__, <a class="code" href="classarmnn_1_1_i_layer_support.xhtml#ac75f9a02b051716a0cc1cc0818dfe454">reasonIfUnsupported</a>);</div>
<div class="line"><a name="l00479"></a><span class="lineno">  479</span>&#160;}</div>
<div class="line"><a name="l00480"></a><span class="lineno">  480</span>&#160; </div>
<div class="line"><a name="l00481"></a><span class="lineno"><a class="line" href="classarmnn_1_1_layer_support_base.xhtml#a3d0fd89e5c982e1e0cfcaef64995499a">  481</a></span>&#160;<span class="keywordtype">bool</span> <a class="code" href="classarmnn_1_1_layer_support_base.xhtml#a3d0fd89e5c982e1e0cfcaef64995499a">LayerSupportBase::IsPreluSupported</a>(<span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a>&amp;, <span class="comment">// input</span></div>
<div class="line"><a name="l00482"></a><span class="lineno">  482</span>&#160;                                        <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a>&amp;, <span class="comment">// alpha</span></div>
<div class="line"><a name="l00483"></a><span class="lineno">  483</span>&#160;                                        <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a>&amp;, <span class="comment">// output</span></div>
<div class="line"><a name="l00484"></a><span class="lineno">  484</span>&#160;                                        <a class="code" href="classarmnn_1_1_optional.xhtml">Optional&lt;std::string &amp;&gt;</a> reasonIfUnsupported)<span class="keyword"> const</span></div>
<div class="line"><a name="l00485"></a><span class="lineno">  485</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l00486"></a><span class="lineno">  486</span>&#160;    <span class="keywordflow">return</span> DefaultLayerSupport(__func__, __FILE__, __LINE__, <a class="code" href="classarmnn_1_1_i_layer_support.xhtml#ac75f9a02b051716a0cc1cc0818dfe454">reasonIfUnsupported</a>);</div>
<div class="line"><a name="l00487"></a><span class="lineno">  487</span>&#160;}</div>
<div class="line"><a name="l00488"></a><span class="lineno">  488</span>&#160; </div>
<div class="line"><a name="l00489"></a><span class="lineno"><a class="line" href="classarmnn_1_1_layer_support_base.xhtml#ab4474f6170d9abd571f612b2dae34820">  489</a></span>&#160;<span class="keywordtype">bool</span> <a class="code" href="classarmnn_1_1_layer_support_base.xhtml#ab4474f6170d9abd571f612b2dae34820">LayerSupportBase::IsQuantizeSupported</a>(<span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_info.xhtml">armnn::TensorInfo</a>&amp;, <span class="comment">// input</span></div>
<div class="line"><a name="l00490"></a><span class="lineno">  490</span>&#160;                                           <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_info.xhtml">armnn::TensorInfo</a>&amp;, <span class="comment">// output</span></div>
<div class="line"><a name="l00491"></a><span class="lineno">  491</span>&#160;                                           <a class="code" href="classarmnn_1_1_optional.xhtml">armnn::Optional&lt;std::string&amp;&gt;</a> reasonIfUnsupported)<span class="keyword"> const</span></div>
<div class="line"><a name="l00492"></a><span class="lineno">  492</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l00493"></a><span class="lineno">  493</span>&#160;    <span class="keywordflow">return</span> DefaultLayerSupport(__func__, __FILE__, __LINE__, <a class="code" href="classarmnn_1_1_i_layer_support.xhtml#ac75f9a02b051716a0cc1cc0818dfe454">reasonIfUnsupported</a>);</div>
<div class="line"><a name="l00494"></a><span class="lineno">  494</span>&#160;}</div>
<div class="line"><a name="l00495"></a><span class="lineno">  495</span>&#160; </div>
<div class="line"><a name="l00496"></a><span class="lineno"><a class="line" href="classarmnn_1_1_layer_support_base.xhtml#a052a3d7389be3a0993c9f9a508fa435e">  496</a></span>&#160;<span class="keywordtype">bool</span> <a class="code" href="classarmnn_1_1_layer_support_base.xhtml#a052a3d7389be3a0993c9f9a508fa435e">LayerSupportBase::IsQLstmSupported</a>(<span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a>&amp;, <span class="comment">// input</span></div>
<div class="line"><a name="l00497"></a><span class="lineno">  497</span>&#160;                                        <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a>&amp;, <span class="comment">// previousOutputIn</span></div>
<div class="line"><a name="l00498"></a><span class="lineno">  498</span>&#160;                                        <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a>&amp;, <span class="comment">// previousCellStateIn</span></div>
<div class="line"><a name="l00499"></a><span class="lineno">  499</span>&#160;                                        <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a>&amp;, <span class="comment">// outputStateOut</span></div>
<div class="line"><a name="l00500"></a><span class="lineno">  500</span>&#160;                                        <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a>&amp;, <span class="comment">// cellStateOut</span></div>
<div class="line"><a name="l00501"></a><span class="lineno">  501</span>&#160;                                        <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a>&amp;, <span class="comment">// output</span></div>
<div class="line"><a name="l00502"></a><span class="lineno">  502</span>&#160;                                        <span class="keyword">const</span> <a class="code" href="structarmnn_1_1_q_lstm_descriptor.xhtml">QLstmDescriptor</a>&amp;, <span class="comment">// descriptor</span></div>
<div class="line"><a name="l00503"></a><span class="lineno">  503</span>&#160;                                        <span class="keyword">const</span> <a class="code" href="structarmnn_1_1_lstm_input_params_info.xhtml">LstmInputParamsInfo</a>&amp;, <span class="comment">// paramsInfo</span></div>
<div class="line"><a name="l00504"></a><span class="lineno">  504</span>&#160;                                        <a class="code" href="classarmnn_1_1_optional.xhtml">Optional&lt;std::string&amp;&gt;</a> reasonIfUnsupported)<span class="keyword"> const</span></div>
<div class="line"><a name="l00505"></a><span class="lineno">  505</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l00506"></a><span class="lineno">  506</span>&#160;    <span class="keywordflow">return</span> DefaultLayerSupport(__func__, __FILE__, __LINE__, <a class="code" href="classarmnn_1_1_i_layer_support.xhtml#ac75f9a02b051716a0cc1cc0818dfe454">reasonIfUnsupported</a>);</div>
<div class="line"><a name="l00507"></a><span class="lineno">  507</span>&#160;}</div>
<div class="line"><a name="l00508"></a><span class="lineno">  508</span>&#160; </div>
<div class="line"><a name="l00509"></a><span class="lineno"><a class="line" href="classarmnn_1_1_layer_support_base.xhtml#a7956a5f8822ae4071b4c5f133bf05a82">  509</a></span>&#160;<span class="keywordtype">bool</span> <a class="code" href="classarmnn_1_1_layer_support_base.xhtml#a7956a5f8822ae4071b4c5f133bf05a82">LayerSupportBase::IsQuantizedLstmSupported</a>(<span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a>&amp;, <span class="comment">// input</span></div>
<div class="line"><a name="l00510"></a><span class="lineno">  510</span>&#160;                                                <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a>&amp;, <span class="comment">// previousCellStateIn</span></div>
<div class="line"><a name="l00511"></a><span class="lineno">  511</span>&#160;                                                <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a>&amp;, <span class="comment">// previousOutputIn</span></div>
<div class="line"><a name="l00512"></a><span class="lineno">  512</span>&#160;                                                <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a>&amp;, <span class="comment">// cellStateOut</span></div>
<div class="line"><a name="l00513"></a><span class="lineno">  513</span>&#160;                                                <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a>&amp;, <span class="comment">// output</span></div>
<div class="line"><a name="l00514"></a><span class="lineno">  514</span>&#160;                                                <span class="keyword">const</span> <a class="code" href="structarmnn_1_1_quantized_lstm_input_params_info.xhtml">QuantizedLstmInputParamsInfo</a>&amp;, <span class="comment">// paramsInfo</span></div>
<div class="line"><a name="l00515"></a><span class="lineno">  515</span>&#160;                                                <a class="code" href="classarmnn_1_1_optional.xhtml">Optional&lt;std::string&amp;&gt;</a> reasonIfUnsupported)<span class="keyword"> const</span></div>
<div class="line"><a name="l00516"></a><span class="lineno">  516</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l00517"></a><span class="lineno">  517</span>&#160;    <span class="keywordflow">return</span> DefaultLayerSupport(__func__, __FILE__, __LINE__, <a class="code" href="classarmnn_1_1_i_layer_support.xhtml#ac75f9a02b051716a0cc1cc0818dfe454">reasonIfUnsupported</a>);</div>
<div class="line"><a name="l00518"></a><span class="lineno">  518</span>&#160;}</div>
<div class="line"><a name="l00519"></a><span class="lineno">  519</span>&#160; </div>
<div class="line"><a name="l00520"></a><span class="lineno"><a class="line" href="classarmnn_1_1_layer_support_base.xhtml#ac7cec5ce0429fcac8459a0cac24bbcc8">  520</a></span>&#160;<span class="keywordtype">bool</span> <a class="code" href="classarmnn_1_1_layer_support_base.xhtml#ac7cec5ce0429fcac8459a0cac24bbcc8">LayerSupportBase::IsRankSupported</a>(<span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a>&amp;, <span class="comment">// input</span></div>
<div class="line"><a name="l00521"></a><span class="lineno">  521</span>&#160;                                       <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a>&amp;,  <span class="comment">// output</span></div>
<div class="line"><a name="l00522"></a><span class="lineno">  522</span>&#160;                                       <a class="code" href="classarmnn_1_1_optional.xhtml">Optional&lt;std::string&amp;&gt;</a> reasonIfUnsupported)<span class="keyword"> const</span></div>
<div class="line"><a name="l00523"></a><span class="lineno">  523</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l00524"></a><span class="lineno">  524</span>&#160;    <span class="keywordflow">return</span> DefaultLayerSupport(__func__, __FILE__, __LINE__, <a class="code" href="classarmnn_1_1_i_layer_support.xhtml#ac75f9a02b051716a0cc1cc0818dfe454">reasonIfUnsupported</a>);</div>
<div class="line"><a name="l00525"></a><span class="lineno">  525</span>&#160;}</div>
<div class="line"><a name="l00526"></a><span class="lineno">  526</span>&#160; </div>
<div class="line"><a name="l00527"></a><span class="lineno"><a class="line" href="classarmnn_1_1_layer_support_base.xhtml#a9fe9a6e2b79cc5c97e582f1fe0e1f514">  527</a></span>&#160;<span class="keywordtype">bool</span> <a class="code" href="classarmnn_1_1_layer_support_base.xhtml#a9fe9a6e2b79cc5c97e582f1fe0e1f514">LayerSupportBase::IsReduceSupported</a>(<span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a>&amp; <span class="comment">/*input*/</span>,</div>
<div class="line"><a name="l00528"></a><span class="lineno">  528</span>&#160;                                         <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a>&amp; <span class="comment">/*output*/</span>,</div>
<div class="line"><a name="l00529"></a><span class="lineno">  529</span>&#160;                                         <span class="keyword">const</span> <a class="code" href="structarmnn_1_1_reduce_descriptor.xhtml">ReduceDescriptor</a>&amp; <span class="comment">/*descriptor*/</span>,</div>
<div class="line"><a name="l00530"></a><span class="lineno">  530</span>&#160;                                         <a class="code" href="classarmnn_1_1_optional.xhtml">Optional&lt;std::string&amp;&gt;</a> reasonIfUnsupported)<span class="keyword"> const</span></div>
<div class="line"><a name="l00531"></a><span class="lineno">  531</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l00532"></a><span class="lineno">  532</span>&#160;    <span class="keywordflow">return</span> DefaultLayerSupport(__func__, __FILE__, __LINE__, <a class="code" href="classarmnn_1_1_i_layer_support.xhtml#ac75f9a02b051716a0cc1cc0818dfe454">reasonIfUnsupported</a>);</div>
<div class="line"><a name="l00533"></a><span class="lineno">  533</span>&#160;}</div>
<div class="line"><a name="l00534"></a><span class="lineno">  534</span>&#160; </div>
<div class="line"><a name="l00535"></a><span class="lineno"><a class="line" href="classarmnn_1_1_layer_support_base.xhtml#ab226977f41ce8cc1ee82c314949bb184">  535</a></span>&#160;<span class="keywordtype">bool</span> <a class="code" href="classarmnn_1_1_layer_support_base.xhtml#ab226977f41ce8cc1ee82c314949bb184">LayerSupportBase::IsReshapeSupported</a>(<span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a>&amp;, <span class="comment">// input</span></div>
<div class="line"><a name="l00536"></a><span class="lineno">  536</span>&#160;                                          <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a>&amp;, <span class="comment">// output</span></div>
<div class="line"><a name="l00537"></a><span class="lineno">  537</span>&#160;                                          <span class="keyword">const</span> <a class="code" href="structarmnn_1_1_reshape_descriptor.xhtml">ReshapeDescriptor</a>&amp;, <span class="comment">// descriptor</span></div>
<div class="line"><a name="l00538"></a><span class="lineno">  538</span>&#160;                                          <a class="code" href="classarmnn_1_1_optional.xhtml">Optional&lt;std::string&amp;&gt;</a> reasonIfUnsupported)<span class="keyword"> const</span></div>
<div class="line"><a name="l00539"></a><span class="lineno">  539</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l00540"></a><span class="lineno">  540</span>&#160;    <span class="keywordflow">return</span> DefaultLayerSupport(__func__, __FILE__, __LINE__, <a class="code" href="classarmnn_1_1_i_layer_support.xhtml#ac75f9a02b051716a0cc1cc0818dfe454">reasonIfUnsupported</a>);</div>
<div class="line"><a name="l00541"></a><span class="lineno">  541</span>&#160;}</div>
<div class="line"><a name="l00542"></a><span class="lineno">  542</span>&#160; </div>
<div class="line"><a name="l00543"></a><span class="lineno"><a class="line" href="classarmnn_1_1_layer_support_base.xhtml#a629a1df03491e1bdc19dbd415fd2ad74">  543</a></span>&#160;<span class="keywordtype">bool</span> <a class="code" href="classarmnn_1_1_layer_support_base.xhtml#a629a1df03491e1bdc19dbd415fd2ad74">LayerSupportBase::IsResizeSupported</a>(<span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a>&amp;, <span class="comment">// input</span></div>
<div class="line"><a name="l00544"></a><span class="lineno">  544</span>&#160;                                         <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a>&amp;, <span class="comment">// output</span></div>
<div class="line"><a name="l00545"></a><span class="lineno">  545</span>&#160;                                         <span class="keyword">const</span> <a class="code" href="structarmnn_1_1_resize_descriptor.xhtml">ResizeDescriptor</a>&amp;, <span class="comment">// descriptor</span></div>
<div class="line"><a name="l00546"></a><span class="lineno">  546</span>&#160;                                         <a class="code" href="classarmnn_1_1_optional.xhtml">Optional&lt;std::string&amp;&gt;</a> reasonIfUnsupported)<span class="keyword"> const</span></div>
<div class="line"><a name="l00547"></a><span class="lineno">  547</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l00548"></a><span class="lineno">  548</span>&#160;    <span class="keywordflow">return</span> DefaultLayerSupport(__func__, __FILE__, __LINE__, <a class="code" href="classarmnn_1_1_i_layer_support.xhtml#ac75f9a02b051716a0cc1cc0818dfe454">reasonIfUnsupported</a>);</div>
<div class="line"><a name="l00549"></a><span class="lineno">  549</span>&#160;}</div>
<div class="line"><a name="l00550"></a><span class="lineno">  550</span>&#160; </div>
<div class="line"><a name="l00551"></a><span class="lineno"><a class="line" href="classarmnn_1_1_layer_support_base.xhtml#a0d720441480c7b7af4285f628f07fbcd">  551</a></span>&#160;<span class="keywordtype">bool</span> <a class="code" href="classarmnn_1_1_layer_support_base.xhtml#a0d720441480c7b7af4285f628f07fbcd">LayerSupportBase::IsShapeSupported</a>(<span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a>&amp;, <span class="comment">// input</span></div>
<div class="line"><a name="l00552"></a><span class="lineno">  552</span>&#160;                                        <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a>&amp;, <span class="comment">// output</span></div>
<div class="line"><a name="l00553"></a><span class="lineno">  553</span>&#160;                                        <a class="code" href="classarmnn_1_1_optional.xhtml">Optional&lt;std::string&amp;&gt;</a> reasonIfUnsupported)<span class="keyword"> const</span></div>
<div class="line"><a name="l00554"></a><span class="lineno">  554</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l00555"></a><span class="lineno">  555</span>&#160;    <span class="keywordflow">return</span> DefaultLayerSupport(__func__, __FILE__, __LINE__, <a class="code" href="classarmnn_1_1_i_layer_support.xhtml#ac75f9a02b051716a0cc1cc0818dfe454">reasonIfUnsupported</a>);</div>
<div class="line"><a name="l00556"></a><span class="lineno">  556</span>&#160;}</div>
<div class="line"><a name="l00557"></a><span class="lineno">  557</span>&#160; </div>
<div class="line"><a name="l00558"></a><span class="lineno"><a class="line" href="classarmnn_1_1_layer_support_base.xhtml#a227dac81ac83d16f474881c2252d14cc">  558</a></span>&#160;<span class="keywordtype">bool</span> <a class="code" href="classarmnn_1_1_layer_support_base.xhtml#a227dac81ac83d16f474881c2252d14cc">LayerSupportBase::IsSliceSupported</a>(<span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a>&amp;, <span class="comment">// input</span></div>
<div class="line"><a name="l00559"></a><span class="lineno">  559</span>&#160;                                        <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a>&amp;, <span class="comment">// output</span></div>
<div class="line"><a name="l00560"></a><span class="lineno">  560</span>&#160;                                        <span class="keyword">const</span> <a class="code" href="structarmnn_1_1_slice_descriptor.xhtml">SliceDescriptor</a>&amp;, <span class="comment">// descriptor</span></div>
<div class="line"><a name="l00561"></a><span class="lineno">  561</span>&#160;                                        <a class="code" href="classarmnn_1_1_optional.xhtml">Optional&lt;std::string&amp;&gt;</a> reasonIfUnsupported)<span class="keyword"> const</span></div>
<div class="line"><a name="l00562"></a><span class="lineno">  562</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l00563"></a><span class="lineno">  563</span>&#160;    <span class="keywordflow">return</span> DefaultLayerSupport(__func__, __FILE__, __LINE__, <a class="code" href="classarmnn_1_1_i_layer_support.xhtml#ac75f9a02b051716a0cc1cc0818dfe454">reasonIfUnsupported</a>);</div>
<div class="line"><a name="l00564"></a><span class="lineno">  564</span>&#160;}</div>
<div class="line"><a name="l00565"></a><span class="lineno">  565</span>&#160; </div>
<div class="line"><a name="l00566"></a><span class="lineno"><a class="line" href="classarmnn_1_1_layer_support_base.xhtml#a3115a72a9cca31fb27b40da54a435dfa">  566</a></span>&#160;<span class="keywordtype">bool</span> <a class="code" href="classarmnn_1_1_layer_support_base.xhtml#a3115a72a9cca31fb27b40da54a435dfa">LayerSupportBase::IsSoftmaxSupported</a>(<span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a>&amp;, <span class="comment">// input</span></div>
<div class="line"><a name="l00567"></a><span class="lineno">  567</span>&#160;                                          <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a>&amp;, <span class="comment">// output</span></div>
<div class="line"><a name="l00568"></a><span class="lineno">  568</span>&#160;                                          <span class="keyword">const</span> <a class="code" href="structarmnn_1_1_softmax_descriptor.xhtml">SoftmaxDescriptor</a>&amp;, <span class="comment">// descriptor</span></div>
<div class="line"><a name="l00569"></a><span class="lineno">  569</span>&#160;                                          <a class="code" href="classarmnn_1_1_optional.xhtml">Optional&lt;std::string&amp;&gt;</a> reasonIfUnsupported)<span class="keyword"> const</span></div>
<div class="line"><a name="l00570"></a><span class="lineno">  570</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l00571"></a><span class="lineno">  571</span>&#160;    <span class="keywordflow">return</span> DefaultLayerSupport(__func__, __FILE__, __LINE__, <a class="code" href="classarmnn_1_1_i_layer_support.xhtml#ac75f9a02b051716a0cc1cc0818dfe454">reasonIfUnsupported</a>);</div>
<div class="line"><a name="l00572"></a><span class="lineno">  572</span>&#160;}</div>
<div class="line"><a name="l00573"></a><span class="lineno">  573</span>&#160;<span class="comment">/**/</span></div>
<div class="line"><a name="l00574"></a><span class="lineno"><a class="line" href="classarmnn_1_1_layer_support_base.xhtml#aa421c466a09cc8048aa0b700b7e300d8">  574</a></span>&#160;<span class="keywordtype">bool</span> <a class="code" href="classarmnn_1_1_layer_support_base.xhtml#aa421c466a09cc8048aa0b700b7e300d8">LayerSupportBase::IsSpaceToBatchNdSupported</a>(<span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a>&amp;, <span class="comment">// input</span></div>
<div class="line"><a name="l00575"></a><span class="lineno">  575</span>&#160;                                                 <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a>&amp;, <span class="comment">// output</span></div>
<div class="line"><a name="l00576"></a><span class="lineno">  576</span>&#160;                                                 <span class="keyword">const</span> <a class="code" href="structarmnn_1_1_space_to_batch_nd_descriptor.xhtml">SpaceToBatchNdDescriptor</a>&amp;, <span class="comment">// descriptor</span></div>
<div class="line"><a name="l00577"></a><span class="lineno">  577</span>&#160;                                                 <a class="code" href="classarmnn_1_1_optional.xhtml">Optional&lt;std::string&amp;&gt;</a> reasonIfUnsupported)<span class="keyword"> const</span></div>
<div class="line"><a name="l00578"></a><span class="lineno">  578</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l00579"></a><span class="lineno">  579</span>&#160;    <span class="keywordflow">return</span> DefaultLayerSupport(__func__, __FILE__, __LINE__, <a class="code" href="classarmnn_1_1_i_layer_support.xhtml#ac75f9a02b051716a0cc1cc0818dfe454">reasonIfUnsupported</a>);</div>
<div class="line"><a name="l00580"></a><span class="lineno">  580</span>&#160;}</div>
<div class="line"><a name="l00581"></a><span class="lineno">  581</span>&#160; </div>
<div class="line"><a name="l00582"></a><span class="lineno"><a class="line" href="classarmnn_1_1_layer_support_base.xhtml#a78c8c01a898f4bdcebddeda9f3d39a51">  582</a></span>&#160;<span class="keywordtype">bool</span> <a class="code" href="classarmnn_1_1_layer_support_base.xhtml#a78c8c01a898f4bdcebddeda9f3d39a51">LayerSupportBase::IsSpaceToDepthSupported</a>(<span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a>&amp;, <span class="comment">// input</span></div>
<div class="line"><a name="l00583"></a><span class="lineno">  583</span>&#160;                                               <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a>&amp;, <span class="comment">// output</span></div>
<div class="line"><a name="l00584"></a><span class="lineno">  584</span>&#160;                                               <span class="keyword">const</span> <a class="code" href="structarmnn_1_1_space_to_depth_descriptor.xhtml">SpaceToDepthDescriptor</a>&amp;, <span class="comment">// descriptor</span></div>
<div class="line"><a name="l00585"></a><span class="lineno">  585</span>&#160;                                               <a class="code" href="classarmnn_1_1_optional.xhtml">Optional&lt;std::string&amp;&gt;</a> reasonIfUnsupported)<span class="keyword"> const</span></div>
<div class="line"><a name="l00586"></a><span class="lineno">  586</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l00587"></a><span class="lineno">  587</span>&#160;    <span class="keywordflow">return</span> DefaultLayerSupport(__func__, __FILE__, __LINE__, <a class="code" href="classarmnn_1_1_i_layer_support.xhtml#ac75f9a02b051716a0cc1cc0818dfe454">reasonIfUnsupported</a>);</div>
<div class="line"><a name="l00588"></a><span class="lineno">  588</span>&#160;}</div>
<div class="line"><a name="l00589"></a><span class="lineno">  589</span>&#160; </div>
<div class="line"><a name="l00590"></a><span class="lineno"><a class="line" href="classarmnn_1_1_layer_support_base.xhtml#a159deb89f2f5dbc1a12b8d365162760f">  590</a></span>&#160;<span class="keywordtype">bool</span> <a class="code" href="classarmnn_1_1_layer_support_base.xhtml#a159deb89f2f5dbc1a12b8d365162760f">LayerSupportBase::IsSplitterSupported</a>(<span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a>&amp;, <span class="comment">// input</span></div>
<div class="line"><a name="l00591"></a><span class="lineno">  591</span>&#160;                                           <span class="keyword">const</span> std::vector&lt;std::reference_wrapper&lt;TensorInfo&gt;&gt;&amp;, <span class="comment">// outputs</span></div>
<div class="line"><a name="l00592"></a><span class="lineno">  592</span>&#160;                                           <span class="keyword">const</span> <a class="code" href="structarmnn_1_1_views_descriptor.xhtml">ViewsDescriptor</a>&amp;, <span class="comment">// descriptor</span></div>
<div class="line"><a name="l00593"></a><span class="lineno">  593</span>&#160;                                           <a class="code" href="classarmnn_1_1_optional.xhtml">Optional&lt;std::string&amp;&gt;</a> reasonIfUnsupported)<span class="keyword"> const</span></div>
<div class="line"><a name="l00594"></a><span class="lineno">  594</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l00595"></a><span class="lineno">  595</span>&#160;    <span class="keywordflow">return</span> DefaultLayerSupport(__func__, __FILE__, __LINE__, <a class="code" href="classarmnn_1_1_i_layer_support.xhtml#ac75f9a02b051716a0cc1cc0818dfe454">reasonIfUnsupported</a>);</div>
<div class="line"><a name="l00596"></a><span class="lineno">  596</span>&#160;}</div>
<div class="line"><a name="l00597"></a><span class="lineno">  597</span>&#160; </div>
<div class="line"><a name="l00598"></a><span class="lineno"><a class="line" href="classarmnn_1_1_layer_support_base.xhtml#a0d99d635906837ed6c582aba6ca6b178">  598</a></span>&#160;<span class="keywordtype">bool</span> <a class="code" href="classarmnn_1_1_layer_support_base.xhtml#a0d99d635906837ed6c582aba6ca6b178">LayerSupportBase::IsStackSupported</a>(<span class="keyword">const</span> std::vector&lt;const TensorInfo*&gt;&amp;, <span class="comment">// inputs</span></div>
<div class="line"><a name="l00599"></a><span class="lineno">  599</span>&#160;                                        <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a>&amp;, <span class="comment">// output</span></div>
<div class="line"><a name="l00600"></a><span class="lineno">  600</span>&#160;                                        <span class="keyword">const</span> <a class="code" href="structarmnn_1_1_stack_descriptor.xhtml">StackDescriptor</a>&amp;, <span class="comment">// descriptor</span></div>
<div class="line"><a name="l00601"></a><span class="lineno">  601</span>&#160;                                        <a class="code" href="classarmnn_1_1_optional.xhtml">Optional&lt;std::string&amp;&gt;</a> reasonIfUnsupported)<span class="keyword"> const</span></div>
<div class="line"><a name="l00602"></a><span class="lineno">  602</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l00603"></a><span class="lineno">  603</span>&#160;    <span class="keywordflow">return</span> DefaultLayerSupport(__func__, __FILE__, __LINE__, <a class="code" href="classarmnn_1_1_i_layer_support.xhtml#ac75f9a02b051716a0cc1cc0818dfe454">reasonIfUnsupported</a>);</div>
<div class="line"><a name="l00604"></a><span class="lineno">  604</span>&#160;}</div>
<div class="line"><a name="l00605"></a><span class="lineno">  605</span>&#160; </div>
<div class="line"><a name="l00606"></a><span class="lineno"><a class="line" href="classarmnn_1_1_layer_support_base.xhtml#a99da2ac37691d245f1a50d2b4dda5321">  606</a></span>&#160;<span class="keywordtype">bool</span> <a class="code" href="classarmnn_1_1_layer_support_base.xhtml#a99da2ac37691d245f1a50d2b4dda5321">LayerSupportBase::IsStandInSupported</a>(<span class="keyword">const</span> std::vector&lt;const TensorInfo*&gt;&amp;, <span class="comment">// inputs</span></div>
<div class="line"><a name="l00607"></a><span class="lineno">  607</span>&#160;                                          <span class="keyword">const</span> std::vector&lt;const TensorInfo*&gt;&amp;, <span class="comment">// outputs</span></div>
<div class="line"><a name="l00608"></a><span class="lineno">  608</span>&#160;                                          <span class="keyword">const</span> <a class="code" href="structarmnn_1_1_stand_in_descriptor.xhtml">StandInDescriptor</a>&amp;, <span class="comment">// descriptor</span></div>
<div class="line"><a name="l00609"></a><span class="lineno">  609</span>&#160;                                          <a class="code" href="classarmnn_1_1_optional.xhtml">Optional&lt;std::string&amp;&gt;</a> reasonIfUnsupported)<span class="keyword"> const</span></div>
<div class="line"><a name="l00610"></a><span class="lineno">  610</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l00611"></a><span class="lineno">  611</span>&#160;    <span class="keywordflow">if</span> (<a class="code" href="classarmnn_1_1_i_layer_support.xhtml#ac75f9a02b051716a0cc1cc0818dfe454">reasonIfUnsupported</a>)</div>
<div class="line"><a name="l00612"></a><span class="lineno">  612</span>&#160;    {</div>
<div class="line"><a name="l00613"></a><span class="lineno">  613</span>&#160;        std::stringstream message;</div>
<div class="line"><a name="l00614"></a><span class="lineno">  614</span>&#160;        message &lt;&lt; <span class="stringliteral">&quot;StandIn layer is not executable via backends&quot;</span>;</div>
<div class="line"><a name="l00615"></a><span class="lineno">  615</span>&#160; </div>
<div class="line"><a name="l00616"></a><span class="lineno">  616</span>&#160;        <a class="code" href="classarmnn_1_1_i_layer_support.xhtml#ac75f9a02b051716a0cc1cc0818dfe454">reasonIfUnsupported</a>.value() = message.str();</div>
<div class="line"><a name="l00617"></a><span class="lineno">  617</span>&#160;    }</div>
<div class="line"><a name="l00618"></a><span class="lineno">  618</span>&#160; </div>
<div class="line"><a name="l00619"></a><span class="lineno">  619</span>&#160;    <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line"><a name="l00620"></a><span class="lineno">  620</span>&#160;}</div>
<div class="line"><a name="l00621"></a><span class="lineno">  621</span>&#160; </div>
<div class="line"><a name="l00622"></a><span class="lineno"><a class="line" href="classarmnn_1_1_layer_support_base.xhtml#aaaa749f75b5ca145f6ad41aa210dbd19">  622</a></span>&#160;<span class="keywordtype">bool</span> <a class="code" href="classarmnn_1_1_layer_support_base.xhtml#aaaa749f75b5ca145f6ad41aa210dbd19">LayerSupportBase::IsStridedSliceSupported</a>(<span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a>&amp;, <span class="comment">// input</span></div>
<div class="line"><a name="l00623"></a><span class="lineno">  623</span>&#160;                                               <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a>&amp;, <span class="comment">// output</span></div>
<div class="line"><a name="l00624"></a><span class="lineno">  624</span>&#160;                                               <span class="keyword">const</span> <a class="code" href="structarmnn_1_1_strided_slice_descriptor.xhtml">StridedSliceDescriptor</a>&amp;, <span class="comment">// descriptor</span></div>
<div class="line"><a name="l00625"></a><span class="lineno">  625</span>&#160;                                               <a class="code" href="classarmnn_1_1_optional.xhtml">Optional&lt;std::string&amp;&gt;</a> reasonIfUnsupported)<span class="keyword"> const</span></div>
<div class="line"><a name="l00626"></a><span class="lineno">  626</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l00627"></a><span class="lineno">  627</span>&#160;    <span class="keywordflow">return</span> DefaultLayerSupport(__func__, __FILE__, __LINE__, <a class="code" href="classarmnn_1_1_i_layer_support.xhtml#ac75f9a02b051716a0cc1cc0818dfe454">reasonIfUnsupported</a>);</div>
<div class="line"><a name="l00628"></a><span class="lineno">  628</span>&#160;}</div>
<div class="line"><a name="l00629"></a><span class="lineno">  629</span>&#160; </div>
<div class="line"><a name="l00630"></a><span class="lineno"><a class="line" href="classarmnn_1_1_layer_support_base.xhtml#a8a520378fa336d155e23478456eb45fe">  630</a></span>&#160;<span class="keywordtype">bool</span> <a class="code" href="classarmnn_1_1_layer_support_base.xhtml#a8a520378fa336d155e23478456eb45fe">LayerSupportBase::IsSubtractionSupported</a>(<span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a>&amp;, <span class="comment">// input0</span></div>
<div class="line"><a name="l00631"></a><span class="lineno">  631</span>&#160;                                              <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a>&amp;, <span class="comment">// input1</span></div>
<div class="line"><a name="l00632"></a><span class="lineno">  632</span>&#160;                                              <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a>&amp;, <span class="comment">// output</span></div>
<div class="line"><a name="l00633"></a><span class="lineno">  633</span>&#160;                                              <a class="code" href="classarmnn_1_1_optional.xhtml">Optional&lt;std::string&amp;&gt;</a> reasonIfUnsupported)<span class="keyword"> const</span></div>
<div class="line"><a name="l00634"></a><span class="lineno">  634</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l00635"></a><span class="lineno">  635</span>&#160;    <span class="keywordflow">return</span> DefaultLayerSupport(__func__, __FILE__, __LINE__, <a class="code" href="classarmnn_1_1_i_layer_support.xhtml#ac75f9a02b051716a0cc1cc0818dfe454">reasonIfUnsupported</a>);</div>
<div class="line"><a name="l00636"></a><span class="lineno">  636</span>&#160;}</div>
<div class="line"><a name="l00637"></a><span class="lineno">  637</span>&#160; </div>
<div class="line"><a name="l00638"></a><span class="lineno"><a class="line" href="classarmnn_1_1_layer_support_base.xhtml#a41569ebd2d1c9777e057bc60e8bc88ae">  638</a></span>&#160;<span class="keywordtype">bool</span> <a class="code" href="classarmnn_1_1_layer_support_base.xhtml#a41569ebd2d1c9777e057bc60e8bc88ae">LayerSupportBase::IsSwitchSupported</a>(<span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a>&amp;, <span class="comment">// input0</span></div>
<div class="line"><a name="l00639"></a><span class="lineno">  639</span>&#160;                                         <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a>&amp;, <span class="comment">// input1</span></div>
<div class="line"><a name="l00640"></a><span class="lineno">  640</span>&#160;                                         <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a>&amp;, <span class="comment">// output0</span></div>
<div class="line"><a name="l00641"></a><span class="lineno">  641</span>&#160;                                         <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a>&amp;, <span class="comment">// output1</span></div>
<div class="line"><a name="l00642"></a><span class="lineno">  642</span>&#160;                                         <a class="code" href="classarmnn_1_1_optional.xhtml">Optional&lt;std::string&amp;&gt;</a> reasonIfUnsupported)<span class="keyword"> const</span></div>
<div class="line"><a name="l00643"></a><span class="lineno">  643</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l00644"></a><span class="lineno">  644</span>&#160;    <span class="keywordflow">return</span> DefaultLayerSupport(__func__, __FILE__, __LINE__, <a class="code" href="classarmnn_1_1_i_layer_support.xhtml#ac75f9a02b051716a0cc1cc0818dfe454">reasonIfUnsupported</a>);</div>
<div class="line"><a name="l00645"></a><span class="lineno">  645</span>&#160;}</div>
<div class="line"><a name="l00646"></a><span class="lineno">  646</span>&#160; </div>
<div class="line"><a name="l00647"></a><span class="lineno"><a class="line" href="classarmnn_1_1_layer_support_base.xhtml#abfc649259b4e9d8bb830da564f7556c6">  647</a></span>&#160;<span class="keywordtype">bool</span> <a class="code" href="classarmnn_1_1_layer_support_base.xhtml#abfc649259b4e9d8bb830da564f7556c6">LayerSupportBase::IsTransposeConvolution2dSupported</a>(<span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a>&amp;, <span class="comment">// input</span></div>
<div class="line"><a name="l00648"></a><span class="lineno">  648</span>&#160;                                                         <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a>&amp;, <span class="comment">// output</span></div>
<div class="line"><a name="l00649"></a><span class="lineno">  649</span>&#160;                                                         <span class="keyword">const</span> <a class="code" href="structarmnn_1_1_transpose_convolution2d_descriptor.xhtml">TransposeConvolution2dDescriptor</a>&amp;, <span class="comment">// descriptor</span></div>
<div class="line"><a name="l00650"></a><span class="lineno">  650</span>&#160;                                                         <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a>&amp;, <span class="comment">// weights</span></div>
<div class="line"><a name="l00651"></a><span class="lineno">  651</span>&#160;                                                         <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_optional.xhtml">Optional&lt;TensorInfo&gt;</a>&amp;, <span class="comment">// biases</span></div>
<div class="line"><a name="l00652"></a><span class="lineno">  652</span>&#160;                                                         <a class="code" href="classarmnn_1_1_optional.xhtml">Optional&lt;std::string&amp;&gt;</a> reasonIfUnsupported)<span class="keyword"> const</span></div>
<div class="line"><a name="l00653"></a><span class="lineno">  653</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l00654"></a><span class="lineno">  654</span>&#160;    <span class="keywordflow">return</span> DefaultLayerSupport(__func__, __FILE__, __LINE__, <a class="code" href="classarmnn_1_1_i_layer_support.xhtml#ac75f9a02b051716a0cc1cc0818dfe454">reasonIfUnsupported</a>);</div>
<div class="line"><a name="l00655"></a><span class="lineno">  655</span>&#160;} </div>
<div class="line"><a name="l00656"></a><span class="lineno">  656</span>&#160; </div>
<div class="line"><a name="l00657"></a><span class="lineno"><a class="line" href="classarmnn_1_1_layer_support_base.xhtml#a5d8316c4fac71a34c0f95745a0cae0a8">  657</a></span>&#160;<span class="keywordtype">bool</span> <a class="code" href="classarmnn_1_1_layer_support_base.xhtml#a5d8316c4fac71a34c0f95745a0cae0a8">LayerSupportBase::IsTransposeSupported</a>(<span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a>&amp;, <span class="comment">// input </span></div>
<div class="line"><a name="l00658"></a><span class="lineno">  658</span>&#160;                                            <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a>&amp;, <span class="comment">// output</span></div>
<div class="line"><a name="l00659"></a><span class="lineno">  659</span>&#160;                                            <span class="keyword">const</span> <a class="code" href="structarmnn_1_1_transpose_descriptor.xhtml">TransposeDescriptor</a>&amp;, <span class="comment">// descriptor</span></div>
<div class="line"><a name="l00660"></a><span class="lineno">  660</span>&#160;                                            <a class="code" href="classarmnn_1_1_optional.xhtml">Optional&lt;std::string&amp;&gt;</a> reasonIfUnsupported)<span class="keyword"> const</span></div>
<div class="line"><a name="l00661"></a><span class="lineno">  661</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l00662"></a><span class="lineno">  662</span>&#160;    <span class="keywordflow">return</span> DefaultLayerSupport(__func__, __FILE__, __LINE__, <a class="code" href="classarmnn_1_1_i_layer_support.xhtml#ac75f9a02b051716a0cc1cc0818dfe454">reasonIfUnsupported</a>);</div>
<div class="line"><a name="l00663"></a><span class="lineno">  663</span>&#160;}</div>
<div class="line"><a name="l00664"></a><span class="lineno">  664</span>&#160; </div>
<div class="line"><a name="l00665"></a><span class="lineno"><a class="line" href="classarmnn_1_1_layer_support_base.xhtml#a4522416bd1c86a58e232254d1a24bed1">  665</a></span>&#160;<span class="keywordtype">bool</span> <a class="code" href="classarmnn_1_1_layer_support_base.xhtml#a4522416bd1c86a58e232254d1a24bed1">LayerSupportBase::IsUnidirectionalSequenceLstmSupported</a>(<span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a>&amp;, <span class="comment">// input</span></div>
<div class="line"><a name="l00666"></a><span class="lineno">  666</span>&#160;                                                             <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a>&amp;, <span class="comment">// outputStateIn</span></div>
<div class="line"><a name="l00667"></a><span class="lineno">  667</span>&#160;                                                             <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a>&amp;, <span class="comment">// cellStateIn</span></div>
<div class="line"><a name="l00668"></a><span class="lineno">  668</span>&#160;                                                             <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a>&amp;, <span class="comment">// outputStateOut</span></div>
<div class="line"><a name="l00669"></a><span class="lineno">  669</span>&#160;                                                             <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a>&amp;, <span class="comment">// cellStateOut</span></div>
<div class="line"><a name="l00670"></a><span class="lineno">  670</span>&#160;                                                             <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a>&amp;, <span class="comment">// output</span></div>
<div class="line"><a name="l00671"></a><span class="lineno">  671</span>&#160;                                                             <span class="keyword">const</span> <a class="code" href="structarmnn_1_1_lstm_descriptor.xhtml">LstmDescriptor</a>&amp;, <span class="comment">// descriptor</span></div>
<div class="line"><a name="l00672"></a><span class="lineno">  672</span>&#160;                                                             <span class="keyword">const</span> <a class="code" href="structarmnn_1_1_lstm_input_params_info.xhtml">LstmInputParamsInfo</a>&amp;, <span class="comment">// paramsInfo</span></div>
<div class="line"><a name="l00673"></a><span class="lineno">  673</span>&#160;                                                             <a class="code" href="classarmnn_1_1_optional.xhtml">Optional&lt;std::string&amp;&gt;</a> reasonIfUnsupported)<span class="keyword"> const</span></div>
<div class="line"><a name="l00674"></a><span class="lineno">  674</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l00675"></a><span class="lineno">  675</span>&#160;    <span class="keywordflow">return</span> DefaultLayerSupport(__func__, __FILE__, __LINE__, <a class="code" href="classarmnn_1_1_i_layer_support.xhtml#ac75f9a02b051716a0cc1cc0818dfe454">reasonIfUnsupported</a>);</div>
<div class="line"><a name="l00676"></a><span class="lineno">  676</span>&#160;}</div>
<div class="line"><a name="l00677"></a><span class="lineno">  677</span>&#160; </div>
<div class="line"><a name="l00678"></a><span class="lineno">  678</span>&#160;} <span class="comment">// namespace armnn</span></div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<div class="ttc" id="aclassarmnn_1_1_layer_support_base_xhtml_a3ff6fcb839280edf41013d349df4f848"><div class="ttname"><a href="classarmnn_1_1_layer_support_base.xhtml#a3ff6fcb839280edf41013d349df4f848">armnn::LayerSupportBase::IsMemImportSupported</a></div><div class="ttdeci">bool IsMemImportSupported(const TensorInfo &amp;input, const TensorInfo &amp;output, Optional&lt; std::string &amp; &gt; reasonIfUnsupported=EmptyOptional()) const override</div><div class="ttdef"><b>Definition:</b> <a href="_layer_support_base_8cpp_source.xhtml#l00397">LayerSupportBase.cpp:397</a></div></div>
<div class="ttc" id="aclassarmnn_1_1_layer_support_base_xhtml_a159deb89f2f5dbc1a12b8d365162760f"><div class="ttname"><a href="classarmnn_1_1_layer_support_base.xhtml#a159deb89f2f5dbc1a12b8d365162760f">armnn::LayerSupportBase::IsSplitterSupported</a></div><div class="ttdeci">bool IsSplitterSupported(const TensorInfo &amp;input, const std::vector&lt; std::reference_wrapper&lt; TensorInfo &gt;&gt; &amp;outputs, const ViewsDescriptor &amp;descriptor, Optional&lt; std::string &amp; &gt; reasonIfUnsupported=EmptyOptional()) const override</div><div class="ttdef"><b>Definition:</b> <a href="_layer_support_base_8cpp_source.xhtml#l00590">LayerSupportBase.cpp:590</a></div></div>
<div class="ttc" id="aclassarmnn_1_1_layer_support_base_xhtml_a57aee9aba2e2ad5d0bd9f65acd05b6e4"><div class="ttname"><a href="classarmnn_1_1_layer_support_base.xhtml#a57aee9aba2e2ad5d0bd9f65acd05b6e4">armnn::LayerSupportBase::IsConstantSupported</a></div><div class="ttdeci">bool IsConstantSupported(const TensorInfo &amp;output, Optional&lt; std::string &amp; &gt; reasonIfUnsupported=EmptyOptional()) const override</div><div class="ttdef"><b>Definition:</b> <a href="_layer_support_base_8cpp_source.xhtml#l00161">LayerSupportBase.cpp:161</a></div></div>
<div class="ttc" id="anamespacearmnn_xhtml_a56943a0946e5f15e5e58054b8e7a04a4a4dd48794eb3305a0f5aece88b111a97b"><div class="ttname"><a href="namespacearmnn.xhtml#a56943a0946e5f15e5e58054b8e7a04a4a4dd48794eb3305a0f5aece88b111a97b">armnn::LayerType::MemCopy</a></div><div class="ttdeci">@ MemCopy</div></div>
<div class="ttc" id="aclassarmnn_1_1_layer_support_base_xhtml_ac2078e9d66b086cf1225f0610b05a520"><div class="ttname"><a href="classarmnn_1_1_layer_support_base.xhtml#ac2078e9d66b086cf1225f0610b05a520">armnn::LayerSupportBase::IsOutputSupported</a></div><div class="ttdeci">bool IsOutputSupported(const TensorInfo &amp;output, Optional&lt; std::string &amp; &gt; reasonIfUnsupported=EmptyOptional()) const override</div><div class="ttdef"><b>Definition:</b> <a href="_layer_support_base_8cpp_source.xhtml#l00436">LayerSupportBase.cpp:436</a></div></div>
<div class="ttc" id="astructarmnn_1_1_lstm_input_params_info_xhtml"><div class="ttname"><a href="structarmnn_1_1_lstm_input_params_info.xhtml">armnn::LstmInputParamsInfo</a></div><div class="ttdef"><b>Definition:</b> <a href="_lstm_params_8hpp_source.xhtml#l00063">LstmParams.hpp:63</a></div></div>
<div class="ttc" id="astructarmnn_1_1_gather_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_gather_descriptor.xhtml">armnn::GatherDescriptor</a></div><div class="ttdoc">A GatherDescriptor for the GatherLayer.</div><div class="ttdef"><b>Definition:</b> <a href="_descriptors_8hpp_source.xhtml#l00932">Descriptors.hpp:932</a></div></div>
<div class="ttc" id="astructarmnn_1_1_normalization_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_normalization_descriptor.xhtml">armnn::NormalizationDescriptor</a></div><div class="ttdoc">A NormalizationDescriptor for the NormalizationLayer.</div><div class="ttdef"><b>Definition:</b> <a href="_descriptors_8hpp_source.xhtml#l00757">Descriptors.hpp:757</a></div></div>
<div class="ttc" id="astructarmnn_1_1_transpose_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_transpose_descriptor.xhtml">armnn::TransposeDescriptor</a></div><div class="ttdoc">A TransposeDescriptor for the TransposeLayer.</div><div class="ttdef"><b>Definition:</b> <a href="_descriptors_8hpp_source.xhtml#l01457">Descriptors.hpp:1457</a></div></div>
<div class="ttc" id="aclassarmnn_1_1_layer_support_base_xhtml_a56c4df05190f0f465e8501ae831af234"><div class="ttname"><a href="classarmnn_1_1_layer_support_base.xhtml#a56c4df05190f0f465e8501ae831af234">armnn::LayerSupportBase::IsDepthwiseConvolutionSupported</a></div><div class="ttdeci">bool IsDepthwiseConvolutionSupported(const TensorInfo &amp;input, const TensorInfo &amp;output, const DepthwiseConvolution2dDescriptor &amp;descriptor, const TensorInfo &amp;weights, const Optional&lt; TensorInfo &gt; &amp;biases, Optional&lt; std::string &amp; &gt; reasonIfUnsupported=EmptyOptional()) const override</div><div class="ttdef"><b>Definition:</b> <a href="_layer_support_base_8cpp_source.xhtml#l00216">LayerSupportBase.cpp:216</a></div></div>
<div class="ttc" id="aclassarmnn_1_1_layer_support_base_xhtml_abfc649259b4e9d8bb830da564f7556c6"><div class="ttname"><a href="classarmnn_1_1_layer_support_base.xhtml#abfc649259b4e9d8bb830da564f7556c6">armnn::LayerSupportBase::IsTransposeConvolution2dSupported</a></div><div class="ttdeci">bool IsTransposeConvolution2dSupported(const TensorInfo &amp;input, const TensorInfo &amp;output, const TransposeConvolution2dDescriptor &amp;descriptor, const TensorInfo &amp;weights, const Optional&lt; TensorInfo &gt; &amp;biases, Optional&lt; std::string &amp; &gt; reasonIfUnsupported=EmptyOptional()) const override</div><div class="ttdef"><b>Definition:</b> <a href="_layer_support_base_8cpp_source.xhtml#l00647">LayerSupportBase.cpp:647</a></div></div>
<div class="ttc" id="aclassarmnn_1_1_layer_support_base_xhtml_a06cd4c70d33d2f49a3418a65d8f45f14"><div class="ttname"><a href="classarmnn_1_1_layer_support_base.xhtml#a06cd4c70d33d2f49a3418a65d8f45f14">armnn::LayerSupportBase::IsFakeQuantizationSupported</a></div><div class="ttdeci">bool IsFakeQuantizationSupported(const TensorInfo &amp;input, const FakeQuantizationDescriptor &amp;descriptor, Optional&lt; std::string &amp; &gt; reasonIfUnsupported=EmptyOptional()) const override</div><div class="ttdef"><b>Definition:</b> <a href="_layer_support_base_8cpp_source.xhtml#l00272">LayerSupportBase.cpp:272</a></div></div>
<div class="ttc" id="astructarmnn_1_1_elementwise_unary_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_elementwise_unary_descriptor.xhtml">armnn::ElementwiseUnaryDescriptor</a></div><div class="ttdoc">A ElementwiseUnaryDescriptor for the ElementwiseUnaryLayer.</div><div class="ttdef"><b>Definition:</b> <a href="_descriptors_8hpp_source.xhtml#l00129">Descriptors.hpp:129</a></div></div>
<div class="ttc" id="astructarmnn_1_1_pad_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_pad_descriptor.xhtml">armnn::PadDescriptor</a></div><div class="ttdoc">A PadDescriptor for the PadLayer.</div><div class="ttdef"><b>Definition:</b> <a href="_descriptors_8hpp_source.xhtml#l01163">Descriptors.hpp:1163</a></div></div>
<div class="ttc" id="astructarmnn_1_1_softmax_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_softmax_descriptor.xhtml">armnn::SoftmaxDescriptor</a></div><div class="ttdoc">A SoftmaxDescriptor for the SoftmaxLayer.</div><div class="ttdef"><b>Definition:</b> <a href="_descriptors_8hpp_source.xhtml#l00177">Descriptors.hpp:177</a></div></div>
<div class="ttc" id="aclassarmnn_1_1_layer_support_base_xhtml_aaaa749f75b5ca145f6ad41aa210dbd19"><div class="ttname"><a href="classarmnn_1_1_layer_support_base.xhtml#aaaa749f75b5ca145f6ad41aa210dbd19">armnn::LayerSupportBase::IsStridedSliceSupported</a></div><div class="ttdeci">bool IsStridedSliceSupported(const TensorInfo &amp;input, const TensorInfo &amp;output, const StridedSliceDescriptor &amp;descriptor, Optional&lt; std::string &amp; &gt; reasonIfUnsupported=EmptyOptional()) const override</div><div class="ttdef"><b>Definition:</b> <a href="_layer_support_base_8cpp_source.xhtml#l00622">LayerSupportBase.cpp:622</a></div></div>
<div class="ttc" id="aclassarmnn_1_1_layer_support_base_xhtml_ae054f879bca9ff680f7e42ae97cc5ed3"><div class="ttname"><a href="classarmnn_1_1_layer_support_base.xhtml#ae054f879bca9ff680f7e42ae97cc5ed3">armnn::LayerSupportBase::IsFloorSupported</a></div><div class="ttdeci">bool IsFloorSupported(const TensorInfo &amp;input, const TensorInfo &amp;output, Optional&lt; std::string &amp; &gt; reasonIfUnsupported=EmptyOptional()) const override</div><div class="ttdef"><b>Definition:</b> <a href="_layer_support_base_8cpp_source.xhtml#l00287">LayerSupportBase.cpp:287</a></div></div>
<div class="ttc" id="aclassarmnn_1_1_layer_support_base_xhtml_a70c3043f5b6dd3091646fb2c1648a5f5"><div class="ttname"><a href="classarmnn_1_1_layer_support_base.xhtml#a70c3043f5b6dd3091646fb2c1648a5f5">armnn::LayerSupportBase::IsPooling3dSupported</a></div><div class="ttdeci">bool IsPooling3dSupported(const TensorInfo &amp;input, const TensorInfo &amp;output, const Pooling3dDescriptor &amp;descriptor, Optional&lt; std::string &amp; &gt; reasonIfUnsupported=EmptyOptional()) const override</div><div class="ttdef"><b>Definition:</b> <a href="_layer_support_base_8cpp_source.xhtml#l00466">LayerSupportBase.cpp:466</a></div></div>
<div class="ttc" id="astructarmnn_1_1_stack_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_stack_descriptor.xhtml">armnn::StackDescriptor</a></div><div class="ttdoc">A StackDescriptor for the StackLayer.</div><div class="ttdef"><b>Definition:</b> <a href="_descriptors_8hpp_source.xhtml#l01218">Descriptors.hpp:1218</a></div></div>
<div class="ttc" id="astructarmnn_1_1_slice_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_slice_descriptor.xhtml">armnn::SliceDescriptor</a></div><div class="ttdoc">A SliceDescriptor for the SliceLayer.</div><div class="ttdef"><b>Definition:</b> <a href="_descriptors_8hpp_source.xhtml#l01195">Descriptors.hpp:1195</a></div></div>
<div class="ttc" id="aclassarmnn_1_1_layer_support_base_xhtml_a9ee45bf624e40815207a2117f8e02b5d"><div class="ttname"><a href="classarmnn_1_1_layer_support_base.xhtml#a9ee45bf624e40815207a2117f8e02b5d">armnn::LayerSupportBase::IsInstanceNormalizationSupported</a></div><div class="ttdeci">bool IsInstanceNormalizationSupported(const TensorInfo &amp;input, const TensorInfo &amp;output, const InstanceNormalizationDescriptor &amp;descriptor, Optional&lt; std::string &amp; &gt; reasonIfUnsupported=EmptyOptional()) const override</div><div class="ttdef"><b>Definition:</b> <a href="_layer_support_base_8cpp_source.xhtml#l00319">LayerSupportBase.cpp:319</a></div></div>
<div class="ttc" id="astructarmnn_1_1_activation_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_activation_descriptor.xhtml">armnn::ActivationDescriptor</a></div><div class="ttdoc">An ActivationDescriptor for the ActivationLayer.</div><div class="ttdef"><b>Definition:</b> <a href="_descriptors_8hpp_source.xhtml#l00036">Descriptors.hpp:36</a></div></div>
<div class="ttc" id="aclassarmnn_1_1_i_layer_support_xhtml_ac75f9a02b051716a0cc1cc0818dfe454"><div class="ttname"><a href="classarmnn_1_1_i_layer_support.xhtml#ac75f9a02b051716a0cc1cc0818dfe454">armnn::ILayerSupport::reasonIfUnsupported</a></div><div class="ttdeci">const TensorInfo const ActivationDescriptor Optional&lt; std::string &amp; &gt; reasonIfUnsupported</div><div class="ttdef"><b>Definition:</b> <a href="_i_layer_support_8hpp_source.xhtml#l00043">ILayerSupport.hpp:43</a></div></div>
<div class="ttc" id="astructarmnn_1_1_lstm_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_lstm_descriptor.xhtml">armnn::LstmDescriptor</a></div><div class="ttdoc">An LstmDescriptor for the LstmLayer.</div><div class="ttdef"><b>Definition:</b> <a href="_descriptors_8hpp_source.xhtml#l01069">Descriptors.hpp:1069</a></div></div>
<div class="ttc" id="astructarmnn_1_1_fully_connected_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_fully_connected_descriptor.xhtml">armnn::FullyConnectedDescriptor</a></div><div class="ttdoc">A FullyConnectedDescriptor for the FullyConnectedLayer.</div><div class="ttdef"><b>Definition:</b> <a href="_descriptors_8hpp_source.xhtml#l00495">Descriptors.hpp:495</a></div></div>
<div class="ttc" id="aclassarmnn_1_1_layer_support_base_xhtml_acd148b61eab388a9313c61f4c7a96c4b"><div class="ttname"><a href="classarmnn_1_1_layer_support_base.xhtml#acd148b61eab388a9313c61f4c7a96c4b">armnn::LayerSupportBase::IsActivationSupported</a></div><div class="ttdeci">bool IsActivationSupported(const TensorInfo &amp;input, const TensorInfo &amp;output, const ActivationDescriptor &amp;descriptor, Optional&lt; std::string &amp; &gt; reasonIfUnsupported=EmptyOptional()) const override</div><div class="ttdef"><b>Definition:</b> <a href="_layer_support_base_8cpp_source.xhtml#l00085">LayerSupportBase.cpp:85</a></div></div>
<div class="ttc" id="aclassarmnn_1_1_layer_support_base_xhtml_a06a955e172cf18898d966eab7383efa1"><div class="ttname"><a href="classarmnn_1_1_layer_support_base.xhtml#a06a955e172cf18898d966eab7383efa1">armnn::LayerSupportBase::IsAdditionSupported</a></div><div class="ttdeci">bool IsAdditionSupported(const TensorInfo &amp;input0, const TensorInfo &amp;input1, const TensorInfo &amp;output, Optional&lt; std::string &amp; &gt; reasonIfUnsupported=EmptyOptional()) const override</div><div class="ttdef"><b>Definition:</b> <a href="_layer_support_base_8cpp_source.xhtml#l00093">LayerSupportBase.cpp:93</a></div></div>
<div class="ttc" id="astructarmnn_1_1_resize_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_resize_descriptor.xhtml">armnn::ResizeDescriptor</a></div><div class="ttdoc">A ResizeDescriptor for the ResizeLayer.</div><div class="ttdef"><b>Definition:</b> <a href="_descriptors_8hpp_source.xhtml#l00952">Descriptors.hpp:952</a></div></div>
<div class="ttc" id="aclassarmnn_1_1_layer_support_base_xhtml_ad4217d27bcb41e14cd023552004b21a3"><div class="ttname"><a href="classarmnn_1_1_layer_support_base.xhtml#ad4217d27bcb41e14cd023552004b21a3">armnn::LayerSupportBase::IsDivisionSupported</a></div><div class="ttdeci">bool IsDivisionSupported(const TensorInfo &amp;input0, const TensorInfo &amp;input1, const TensorInfo &amp;output, Optional&lt; std::string &amp; &gt; reasonIfUnsupported=EmptyOptional()) const override</div><div class="ttdef"><b>Definition:</b> <a href="_layer_support_base_8cpp_source.xhtml#l00256">LayerSupportBase.cpp:256</a></div></div>
<div class="ttc" id="astructarmnn_1_1_strided_slice_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_strided_slice_descriptor.xhtml">armnn::StridedSliceDescriptor</a></div><div class="ttdoc">A StridedSliceDescriptor for the StridedSliceLayer.</div><div class="ttdef"><b>Definition:</b> <a href="_descriptors_8hpp_source.xhtml#l01270">Descriptors.hpp:1270</a></div></div>
<div class="ttc" id="aclassarmnn_1_1_layer_support_base_xhtml_ac92df5c79bae4ccdc68d9d2045fa2110"><div class="ttname"><a href="classarmnn_1_1_layer_support_base.xhtml#ac92df5c79bae4ccdc68d9d2045fa2110">armnn::LayerSupportBase::IsMaximumSupported</a></div><div class="ttdeci">bool IsMaximumSupported(const TensorInfo &amp;input0, const TensorInfo &amp;input1, const TensorInfo &amp;output, Optional&lt; std::string &amp; &gt; reasonIfUnsupported=EmptyOptional()) const override</div><div class="ttdef"><b>Definition:</b> <a href="_layer_support_base_8cpp_source.xhtml#l00374">LayerSupportBase.cpp:374</a></div></div>
<div class="ttc" id="astructarmnn_1_1_pooling3d_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_pooling3d_descriptor.xhtml">armnn::Pooling3dDescriptor</a></div><div class="ttdoc">A Pooling3dDescriptor for the Pooling3dLayer.</div><div class="ttdef"><b>Definition:</b> <a href="_descriptors_8hpp_source.xhtml#l00419">Descriptors.hpp:419</a></div></div>
<div class="ttc" id="astructarmnn_1_1_reduce_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_reduce_descriptor.xhtml">armnn::ReduceDescriptor</a></div><div class="ttdoc">A ReduceDescriptor for the REDUCE operators.</div><div class="ttdef"><b>Definition:</b> <a href="_descriptors_8hpp_source.xhtml#l01505">Descriptors.hpp:1505</a></div></div>
<div class="ttc" id="a_polymorphic_downcast_8hpp_xhtml"><div class="ttname"><a href="_polymorphic_downcast_8hpp.xhtml">PolymorphicDowncast.hpp</a></div></div>
<div class="ttc" id="astructarmnn_1_1_comparison_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_comparison_descriptor.xhtml">armnn::ComparisonDescriptor</a></div><div class="ttdoc">A ComparisonDescriptor for the ComparisonLayer.</div><div class="ttdef"><b>Definition:</b> <a href="_descriptors_8hpp_source.xhtml#l00089">Descriptors.hpp:89</a></div></div>
<div class="ttc" id="astructarmnn_1_1_stand_in_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_stand_in_descriptor.xhtml">armnn::StandInDescriptor</a></div><div class="ttdoc">A StandInDescriptor for the StandIn layer.</div><div class="ttdef"><b>Definition:</b> <a href="_descriptors_8hpp_source.xhtml#l01248">Descriptors.hpp:1248</a></div></div>
<div class="ttc" id="aclassarmnn_1_1_layer_support_base_xhtml_ac680aa10b0a3768da4c23e691881b5ea"><div class="ttname"><a href="classarmnn_1_1_layer_support_base.xhtml#ac680aa10b0a3768da4c23e691881b5ea">armnn::LayerSupportBase::IsCastSupported</a></div><div class="ttdeci">bool IsCastSupported(const TensorInfo &amp;input, const TensorInfo &amp;output, Optional&lt; std::string &amp; &gt; reasonIfUnsupported=EmptyOptional()) const override</div><div class="ttdef"><b>Definition:</b> <a href="_layer_support_base_8cpp_source.xhtml#l00129">LayerSupportBase.cpp:129</a></div></div>
<div class="ttc" id="aclassarmnn_1_1_layer_support_base_xhtml_a4eb9b602052470f8eadcfa7a63b17d54"><div class="ttname"><a href="classarmnn_1_1_layer_support_base.xhtml#a4eb9b602052470f8eadcfa7a63b17d54">armnn::LayerSupportBase::IsMinimumSupported</a></div><div class="ttdeci">bool IsMinimumSupported(const TensorInfo &amp;input0, const TensorInfo &amp;input1, const TensorInfo &amp;output, Optional&lt; std::string &amp; &gt; reasonIfUnsupported=EmptyOptional()) const override</div><div class="ttdef"><b>Definition:</b> <a href="_layer_support_base_8cpp_source.xhtml#l00412">LayerSupportBase.cpp:412</a></div></div>
<div class="ttc" id="aclassarmnn_1_1_layer_support_base_xhtml_a93a1d7a75c6802d3c4f7911f35e1cfa8"><div class="ttname"><a href="classarmnn_1_1_layer_support_base.xhtml#a93a1d7a75c6802d3c4f7911f35e1cfa8">armnn::LayerSupportBase::IsMergeSupported</a></div><div class="ttdeci">bool IsMergeSupported(const TensorInfo &amp;input0, const TensorInfo &amp;input1, const TensorInfo &amp;output, Optional&lt; std::string &amp; &gt; reasonIfUnsupported=EmptyOptional()) const override</div><div class="ttdef"><b>Definition:</b> <a href="_layer_support_base_8cpp_source.xhtml#l00404">LayerSupportBase.cpp:404</a></div></div>
<div class="ttc" id="aclassarmnn_1_1_layer_support_base_xhtml_ac7cec5ce0429fcac8459a0cac24bbcc8"><div class="ttname"><a href="classarmnn_1_1_layer_support_base.xhtml#ac7cec5ce0429fcac8459a0cac24bbcc8">armnn::LayerSupportBase::IsRankSupported</a></div><div class="ttdeci">bool IsRankSupported(const TensorInfo &amp;input, const TensorInfo &amp;output, Optional&lt; std::string &amp; &gt; reasonIfUnsupported) const override</div><div class="ttdef"><b>Definition:</b> <a href="_layer_support_base_8cpp_source.xhtml#l00520">LayerSupportBase.cpp:520</a></div></div>
<div class="ttc" id="aclassarmnn_1_1_layer_support_base_xhtml_a0d720441480c7b7af4285f628f07fbcd"><div class="ttname"><a href="classarmnn_1_1_layer_support_base.xhtml#a0d720441480c7b7af4285f628f07fbcd">armnn::LayerSupportBase::IsShapeSupported</a></div><div class="ttdeci">bool IsShapeSupported(const TensorInfo &amp;input, const TensorInfo &amp;output, Optional&lt; std::string &amp; &gt; reasonIfUnsupported=EmptyOptional()) const override</div><div class="ttdef"><b>Definition:</b> <a href="_layer_support_base_8cpp_source.xhtml#l00551">LayerSupportBase.cpp:551</a></div></div>
<div class="ttc" id="astructarmnn_1_1_views_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_views_descriptor.xhtml">armnn::ViewsDescriptor</a></div><div class="ttdoc">A ViewsDescriptor for the SplitterLayer.</div><div class="ttdef"><b>Definition:</b> <a href="_descriptors_8hpp_source.xhtml#l00244">Descriptors.hpp:244</a></div></div>
<div class="ttc" id="aclassarmnn_1_1_layer_support_base_xhtml_a052a3d7389be3a0993c9f9a508fa435e"><div class="ttname"><a href="classarmnn_1_1_layer_support_base.xhtml#a052a3d7389be3a0993c9f9a508fa435e">armnn::LayerSupportBase::IsQLstmSupported</a></div><div class="ttdeci">bool IsQLstmSupported(const TensorInfo &amp;input, const TensorInfo &amp;previousOutputIn, const TensorInfo &amp;previousCellStateIn, const TensorInfo &amp;outputStateOut, const TensorInfo &amp;cellStateOut, const TensorInfo &amp;output, const QLstmDescriptor &amp;descriptor, const LstmInputParamsInfo &amp;paramsInfo, Optional&lt; std::string &amp; &gt; reasonIfUnsupported=EmptyOptional()) const override</div><div class="ttdef"><b>Definition:</b> <a href="_layer_support_base_8cpp_source.xhtml#l00496">LayerSupportBase.cpp:496</a></div></div>
<div class="ttc" id="aclassarmnn_1_1_layer_support_base_xhtml_a7956a5f8822ae4071b4c5f133bf05a82"><div class="ttname"><a href="classarmnn_1_1_layer_support_base.xhtml#a7956a5f8822ae4071b4c5f133bf05a82">armnn::LayerSupportBase::IsQuantizedLstmSupported</a></div><div class="ttdeci">bool IsQuantizedLstmSupported(const TensorInfo &amp;input, const TensorInfo &amp;previousCellStateIn, const TensorInfo &amp;previousOutputIn, const TensorInfo &amp;cellStateOut, const TensorInfo &amp;output, const QuantizedLstmInputParamsInfo &amp;paramsInfo, Optional&lt; std::string &amp; &gt; reasonIfUnsupported=EmptyOptional()) const override</div><div class="ttdef"><b>Definition:</b> <a href="_layer_support_base_8cpp_source.xhtml#l00509">LayerSupportBase.cpp:509</a></div></div>
<div class="ttc" id="astructarmnn_1_1_pre_compiled_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_pre_compiled_descriptor.xhtml">armnn::PreCompiledDescriptor</a></div><div class="ttdoc">A PreCompiledDescriptor for the PreCompiledLayer.</div><div class="ttdef"><b>Definition:</b> <a href="_descriptors_8hpp_source.xhtml#l01334">Descriptors.hpp:1334</a></div></div>
<div class="ttc" id="aclassarmnn_1_1_layer_support_base_xhtml_a41569ebd2d1c9777e057bc60e8bc88ae"><div class="ttname"><a href="classarmnn_1_1_layer_support_base.xhtml#a41569ebd2d1c9777e057bc60e8bc88ae">armnn::LayerSupportBase::IsSwitchSupported</a></div><div class="ttdeci">bool IsSwitchSupported(const TensorInfo &amp;input0, const TensorInfo &amp;input1, const TensorInfo &amp;output0, const TensorInfo &amp;output1, Optional&lt; std::string &amp; &gt; reasonIfUnsupported=EmptyOptional()) const override</div><div class="ttdef"><b>Definition:</b> <a href="_layer_support_base_8cpp_source.xhtml#l00638">LayerSupportBase.cpp:638</a></div></div>
<div class="ttc" id="anamespacearmnn_xhtml"><div class="ttname"><a href="namespacearmnn.xhtml">armnn</a></div><div class="ttdoc">Copyright (c) 2021 ARM Limited and Contributors.</div><div class="ttdef"><b>Definition:</b> <a href="01__00__quick__start_8dox_source.xhtml#l00006">01_00_quick_start.dox:6</a></div></div>
<div class="ttc" id="aclassarmnn_1_1_layer_support_base_xhtml_a1362503332222029f9d73d40520f35bd"><div class="ttname"><a href="classarmnn_1_1_layer_support_base.xhtml#a1362503332222029f9d73d40520f35bd">armnn::LayerSupportBase::IsChannelShuffleSupported</a></div><div class="ttdeci">bool IsChannelShuffleSupported(const TensorInfo &amp;input, const TensorInfo &amp;output, const ChannelShuffleDescriptor &amp;descriptor, Optional&lt; std::string &amp; &gt; reasonIfUnsupported=EmptyOptional()) const override</div><div class="ttdef"><b>Definition:</b> <a href="_layer_support_base_8cpp_source.xhtml#l00136">LayerSupportBase.cpp:136</a></div></div>
<div class="ttc" id="astructarmnn_1_1_batch_to_space_nd_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_batch_to_space_nd_descriptor.xhtml">armnn::BatchToSpaceNdDescriptor</a></div><div class="ttdoc">A BatchToSpaceNdDescriptor for the BatchToSpaceNdLayer.</div><div class="ttdef"><b>Definition:</b> <a href="_descriptors_8hpp_source.xhtml#l00863">Descriptors.hpp:863</a></div></div>
<div class="ttc" id="aclassarmnn_1_1_optional_reference_switch_xhtml_a77c7d528ac063d870b8c8426ec81c1c3"><div class="ttname"><a href="classarmnn_1_1_optional_reference_switch.xhtml#a77c7d528ac063d870b8c8426ec81c1c3">armnn::OptionalReferenceSwitch::value</a></div><div class="ttdeci">const T &amp; value() const</div><div class="ttdef"><b>Definition:</b> <a href="_optional_8hpp_source.xhtml#l00146">Optional.hpp:146</a></div></div>
<div class="ttc" id="aclassarmnn_1_1_layer_support_base_xhtml_a97a643c5aa50c3419dab27c24cade1e0"><div class="ttname"><a href="classarmnn_1_1_layer_support_base.xhtml#a97a643c5aa50c3419dab27c24cade1e0">armnn::LayerSupportBase::IsGatherSupported</a></div><div class="ttdeci">bool IsGatherSupported(const TensorInfo &amp;input0, const TensorInfo &amp;input1, const TensorInfo &amp;output, const GatherDescriptor &amp;descriptor, Optional&lt; std::string &amp; &gt; reasonIfUnsupported=EmptyOptional()) const override</div><div class="ttdef"><b>Definition:</b> <a href="_layer_support_base_8cpp_source.xhtml#l00304">LayerSupportBase.cpp:304</a></div></div>
<div class="ttc" id="astructarmnn_1_1_space_to_depth_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_space_to_depth_descriptor.xhtml">armnn::SpaceToDepthDescriptor</a></div><div class="ttdoc">A SpaceToDepthDescriptor for the SpaceToDepthLayer.</div><div class="ttdef"><b>Definition:</b> <a href="_descriptors_8hpp_source.xhtml#l01042">Descriptors.hpp:1042</a></div></div>
<div class="ttc" id="aclassarmnn_1_1_layer_support_base_xhtml_a336cc17b9c2cd4e7f667c7fcf5c9377e"><div class="ttname"><a href="classarmnn_1_1_layer_support_base.xhtml#a336cc17b9c2cd4e7f667c7fcf5c9377e">armnn::LayerSupportBase::IsPermuteSupported</a></div><div class="ttdeci">bool IsPermuteSupported(const TensorInfo &amp;input, const TensorInfo &amp;output, const PermuteDescriptor &amp;descriptor, Optional&lt; std::string &amp; &gt; reasonIfUnsupported=EmptyOptional()) const override</div><div class="ttdef"><b>Definition:</b> <a href="_layer_support_base_8cpp_source.xhtml#l00450">LayerSupportBase.cpp:450</a></div></div>
<div class="ttc" id="aclassarmnn_1_1_layer_support_base_xhtml_a7224fbfbc4c5a2b3710543e3f574171f"><div class="ttname"><a href="classarmnn_1_1_layer_support_base.xhtml#a7224fbfbc4c5a2b3710543e3f574171f">armnn::LayerSupportBase::IsArgMinMaxSupported</a></div><div class="ttdeci">bool IsArgMinMaxSupported(const TensorInfo &amp;input, const TensorInfo &amp;output, const ArgMinMaxDescriptor &amp;descriptor, Optional&lt; std::string &amp; &gt; reasonIfUnsupported=EmptyOptional()) const override</div><div class="ttdef"><b>Definition:</b> <a href="_layer_support_base_8cpp_source.xhtml#l00101">LayerSupportBase.cpp:101</a></div></div>
<div class="ttc" id="aclassarmnn_1_1_layer_support_base_xhtml_ad9869f2a0cbe051fcc87fb1405d4091d"><div class="ttname"><a href="classarmnn_1_1_layer_support_base.xhtml#ad9869f2a0cbe051fcc87fb1405d4091d">armnn::LayerSupportBase::IsMeanSupported</a></div><div class="ttdeci">bool IsMeanSupported(const TensorInfo &amp;input, const TensorInfo &amp;output, const MeanDescriptor &amp;descriptor, Optional&lt; std::string &amp; &gt; reasonIfUnsupported=EmptyOptional()) const override</div><div class="ttdef"><b>Definition:</b> <a href="_layer_support_base_8cpp_source.xhtml#l00382">LayerSupportBase.cpp:382</a></div></div>
<div class="ttc" id="aclassarmnn_1_1_layer_support_base_xhtml_aeb2631acff8b8d0dc61334ff9f8a957a"><div class="ttname"><a href="classarmnn_1_1_layer_support_base.xhtml#aeb2631acff8b8d0dc61334ff9f8a957a">armnn::LayerSupportBase::IsDebugSupported</a></div><div class="ttdeci">bool IsDebugSupported(const TensorInfo &amp;input, const TensorInfo &amp;output, Optional&lt; std::string &amp; &gt; reasonIfUnsupported=EmptyOptional()) const override</div><div class="ttdef"><b>Definition:</b> <a href="_layer_support_base_8cpp_source.xhtml#l00201">LayerSupportBase.cpp:201</a></div></div>
<div class="ttc" id="astructarmnn_1_1_detection_post_process_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_detection_post_process_descriptor.xhtml">armnn::DetectionPostProcessDescriptor</a></div><div class="ttdef"><b>Definition:</b> <a href="_descriptors_8hpp_source.xhtml#l00701">Descriptors.hpp:701</a></div></div>
<div class="ttc" id="aclassarmnn_1_1_i_layer_support_xhtml_a859feaa966620ae0ea88abf5226f2d04"><div class="ttname"><a href="classarmnn_1_1_i_layer_support.xhtml#a859feaa966620ae0ea88abf5226f2d04">armnn::ILayerSupport::descriptor</a></div><div class="ttdeci">const TensorInfo const ActivationDescriptor &amp; descriptor</div><div class="ttdef"><b>Definition:</b> <a href="_i_layer_support_8hpp_source.xhtml#l00042">ILayerSupport.hpp:42</a></div></div>
<div class="ttc" id="aclassarmnn_1_1_layer_support_base_xhtml_a884cfe928faf62853edc9607142efce9"><div class="ttname"><a href="classarmnn_1_1_layer_support_base.xhtml#a884cfe928faf62853edc9607142efce9">armnn::LayerSupportBase::IsDetectionPostProcessSupported</a></div><div class="ttdeci">bool IsDetectionPostProcessSupported(const TensorInfo &amp;boxEncodings, const TensorInfo &amp;scores, const TensorInfo &amp;anchors, const TensorInfo &amp;detectionBoxes, const TensorInfo &amp;detectionClasses, const TensorInfo &amp;detectionScores, const TensorInfo &amp;numDetections, const DetectionPostProcessDescriptor &amp;descriptor, Optional&lt; std::string &amp; &gt; reasonIfUnsupported=EmptyOptional()) const override</div><div class="ttdef"><b>Definition:</b> <a href="_layer_support_base_8cpp_source.xhtml#l00233">LayerSupportBase.cpp:233</a></div></div>
<div class="ttc" id="astructarmnn_1_1_fill_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_fill_descriptor.xhtml">armnn::FillDescriptor</a></div><div class="ttdoc">A FillDescriptor for the FillLayer.</div><div class="ttdef"><b>Definition:</b> <a href="_descriptors_8hpp_source.xhtml#l00913">Descriptors.hpp:913</a></div></div>
<div class="ttc" id="anamespacearmnn_xhtml_a56943a0946e5f15e5e58054b8e7a04a4"><div class="ttname"><a href="namespacearmnn.xhtml#a56943a0946e5f15e5e58054b8e7a04a4">armnn::LayerType</a></div><div class="ttdeci">LayerType</div><div class="ttdoc">When adding a new layer, adapt also the LastLayer enum value in the enum class LayerType below.</div><div class="ttdef"><b>Definition:</b> <a href="_types_8hpp_source.xhtml#l00479">Types.hpp:479</a></div></div>
<div class="ttc" id="aclassarmnn_1_1_layer_support_base_xhtml_aef4e4cfc054c2fd0e9bd0947909ebe83"><div class="ttname"><a href="classarmnn_1_1_layer_support_base.xhtml#aef4e4cfc054c2fd0e9bd0947909ebe83">armnn::LayerSupportBase::IsPadSupported</a></div><div class="ttdeci">bool IsPadSupported(const TensorInfo &amp;input, const TensorInfo &amp;output, const PadDescriptor &amp;descriptor, Optional&lt; std::string &amp; &gt; reasonIfUnsupported=EmptyOptional()) const override</div><div class="ttdef"><b>Definition:</b> <a href="_layer_support_base_8cpp_source.xhtml#l00442">LayerSupportBase.cpp:442</a></div></div>
<div class="ttc" id="aclassarmnn_1_1_layer_support_base_xhtml_a9fe9a6e2b79cc5c97e582f1fe0e1f514"><div class="ttname"><a href="classarmnn_1_1_layer_support_base.xhtml#a9fe9a6e2b79cc5c97e582f1fe0e1f514">armnn::LayerSupportBase::IsReduceSupported</a></div><div class="ttdeci">bool IsReduceSupported(const TensorInfo &amp;input, const TensorInfo &amp;output, const ReduceDescriptor &amp;descriptor, Optional&lt; std::string &amp; &gt; reasonIfUnsupported=EmptyOptional()) const override</div><div class="ttdef"><b>Definition:</b> <a href="_layer_support_base_8cpp_source.xhtml#l00527">LayerSupportBase.cpp:527</a></div></div>
<div class="ttc" id="aclassarmnn_1_1_layer_support_base_xhtml_a450ddf4b4335cb37e07e3b0171b00096"><div class="ttname"><a href="classarmnn_1_1_layer_support_base.xhtml#a450ddf4b4335cb37e07e3b0171b00096">armnn::LayerSupportBase::IsBatchNormalizationSupported</a></div><div class="ttdeci">bool IsBatchNormalizationSupported(const TensorInfo &amp;input, const TensorInfo &amp;output, const TensorInfo &amp;mean, const TensorInfo &amp;var, const TensorInfo &amp;beta, const TensorInfo &amp;gamma, const BatchNormalizationDescriptor &amp;descriptor, Optional&lt; std::string &amp; &gt; reasonIfUnsupported=EmptyOptional()) const override</div><div class="ttdef"><b>Definition:</b> <a href="_layer_support_base_8cpp_source.xhtml#l00109">LayerSupportBase.cpp:109</a></div></div>
<div class="ttc" id="aclassarmnn_1_1_layer_support_base_xhtml_a95dac0c44b7e759694a97778bfbea954"><div class="ttname"><a href="classarmnn_1_1_layer_support_base.xhtml#a95dac0c44b7e759694a97778bfbea954">armnn::LayerSupportBase::IsConvertFp16ToFp32Supported</a></div><div class="ttdeci">bool IsConvertFp16ToFp32Supported(const TensorInfo &amp;input, const TensorInfo &amp;output, Optional&lt; std::string &amp; &gt; reasonIfUnsupported=EmptyOptional()) const override</div><div class="ttdef"><b>Definition:</b> <a href="_layer_support_base_8cpp_source.xhtml#l00167">LayerSupportBase.cpp:167</a></div></div>
<div class="ttc" id="astructarmnn_1_1_depthwise_convolution2d_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_depthwise_convolution2d_descriptor.xhtml">armnn::DepthwiseConvolution2dDescriptor</a></div><div class="ttdoc">A DepthwiseConvolution2dDescriptor for the DepthwiseConvolution2dLayer.</div><div class="ttdef"><b>Definition:</b> <a href="_descriptors_8hpp_source.xhtml#l00647">Descriptors.hpp:647</a></div></div>
<div class="ttc" id="astructarmnn_1_1_mean_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_mean_descriptor.xhtml">armnn::MeanDescriptor</a></div><div class="ttdoc">A MeanDescriptor for the MeanLayer.</div><div class="ttdef"><b>Definition:</b> <a href="_descriptors_8hpp_source.xhtml#l01139">Descriptors.hpp:1139</a></div></div>
<div class="ttc" id="aclassarmnn_1_1_layer_support_base_xhtml_aa421c466a09cc8048aa0b700b7e300d8"><div class="ttname"><a href="classarmnn_1_1_layer_support_base.xhtml#aa421c466a09cc8048aa0b700b7e300d8">armnn::LayerSupportBase::IsSpaceToBatchNdSupported</a></div><div class="ttdeci">bool IsSpaceToBatchNdSupported(const TensorInfo &amp;input, const TensorInfo &amp;output, const SpaceToBatchNdDescriptor &amp;descriptor, Optional&lt; std::string &amp; &gt; reasonIfUnsupported=EmptyOptional()) const override</div><div class="ttdef"><b>Definition:</b> <a href="_layer_support_base_8cpp_source.xhtml#l00574">LayerSupportBase.cpp:574</a></div></div>
<div class="ttc" id="aclassarmnn_1_1_layer_support_base_xhtml_ab226977f41ce8cc1ee82c314949bb184"><div class="ttname"><a href="classarmnn_1_1_layer_support_base.xhtml#ab226977f41ce8cc1ee82c314949bb184">armnn::LayerSupportBase::IsReshapeSupported</a></div><div class="ttdeci">bool IsReshapeSupported(const TensorInfo &amp;input, const TensorInfo &amp;output, const ReshapeDescriptor &amp;descriptor, Optional&lt; std::string &amp; &gt; reasonIfUnsupported=EmptyOptional()) const override</div><div class="ttdef"><b>Definition:</b> <a href="_layer_support_base_8cpp_source.xhtml#l00535">LayerSupportBase.cpp:535</a></div></div>
<div class="ttc" id="astructarmnn_1_1_l2_normalization_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_l2_normalization_descriptor.xhtml">armnn::L2NormalizationDescriptor</a></div><div class="ttdoc">A L2NormalizationDescriptor for the L2NormalizationLayer.</div><div class="ttdef"><b>Definition:</b> <a href="_descriptors_8hpp_source.xhtml#l00797">Descriptors.hpp:797</a></div></div>
<div class="ttc" id="aclassarmnn_1_1_layer_support_base_xhtml_a5f9272cdf0224364e1bb9b47efe4130a"><div class="ttname"><a href="classarmnn_1_1_layer_support_base.xhtml#a5f9272cdf0224364e1bb9b47efe4130a">armnn::LayerSupportBase::IsConvertFp32ToFp16Supported</a></div><div class="ttdeci">bool IsConvertFp32ToFp16Supported(const TensorInfo &amp;input, const TensorInfo &amp;output, Optional&lt; std::string &amp; &gt; reasonIfUnsupported=EmptyOptional()) const override</div><div class="ttdef"><b>Definition:</b> <a href="_layer_support_base_8cpp_source.xhtml#l00174">LayerSupportBase.cpp:174</a></div></div>
<div class="ttc" id="astructarmnn_1_1_channel_shuffle_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_channel_shuffle_descriptor.xhtml">armnn::ChannelShuffleDescriptor</a></div><div class="ttdoc">A ChannelShuffleDescriptor for the ChannelShuffle operator.</div><div class="ttdef"><b>Definition:</b> <a href="_descriptors_8hpp_source.xhtml#l01529">Descriptors.hpp:1529</a></div></div>
<div class="ttc" id="astructarmnn_1_1_convolution3d_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_convolution3d_descriptor.xhtml">armnn::Convolution3dDescriptor</a></div><div class="ttdoc">A Convolution3dDescriptor for the Convolution3dLayer.</div><div class="ttdef"><b>Definition:</b> <a href="_descriptors_8hpp_source.xhtml#l00576">Descriptors.hpp:576</a></div></div>
<div class="ttc" id="aclassarmnn_1_1_layer_support_base_xhtml_a5d0dbfd77d3461ded89d3bf6a4eab62c"><div class="ttname"><a href="classarmnn_1_1_layer_support_base.xhtml#a5d0dbfd77d3461ded89d3bf6a4eab62c">armnn::LayerSupportBase::IsInputSupported</a></div><div class="ttdeci">bool IsInputSupported(const TensorInfo &amp;input, Optional&lt; std::string &amp; &gt; reasonIfUnsupported=EmptyOptional()) const override</div><div class="ttdef"><b>Definition:</b> <a href="_layer_support_base_8cpp_source.xhtml#l00313">LayerSupportBase.cpp:313</a></div></div>
<div class="ttc" id="aclassarmnn_1_1_layer_support_base_xhtml_a4da81c0c187071252d23c014db1c867d"><div class="ttname"><a href="classarmnn_1_1_layer_support_base.xhtml#a4da81c0c187071252d23c014db1c867d">armnn::LayerSupportBase::IsLayerSupported</a></div><div class="ttdeci">bool IsLayerSupported(const LayerType &amp;type, const std::vector&lt; TensorInfo &gt; &amp;infos, const BaseDescriptor &amp;descriptor, const Optional&lt; LstmInputParamsInfo &gt; &amp;lstmParamsInfo=EmptyOptional(), const Optional&lt; QuantizedLstmInputParamsInfo &gt; &amp;quantizedLstmParamsInfo=EmptyOptional(), Optional&lt; std::string &amp; &gt; reasonIfUnsupported=EmptyOptional()) const override</div><div class="ttdef"><b>Definition:</b> <a href="_layer_support_base_8cpp_source.xhtml#l00040">LayerSupportBase.cpp:40</a></div></div>
<div class="ttc" id="aclassarmnn_1_1_layer_support_base_xhtml_ab747f27ee2acb8409799d6ea1af0dff7"><div class="ttname"><a href="classarmnn_1_1_layer_support_base.xhtml#ab747f27ee2acb8409799d6ea1af0dff7">armnn::LayerSupportBase::IsFillSupported</a></div><div class="ttdeci">virtual bool IsFillSupported(const TensorInfo &amp;input, const TensorInfo &amp;output, const FillDescriptor &amp;descriptor, Optional&lt; std::string &amp; &gt; reasonIfUnsupported=EmptyOptional()) const override</div><div class="ttdef"><b>Definition:</b> <a href="_layer_support_base_8cpp_source.xhtml#l00279">LayerSupportBase.cpp:279</a></div></div>
<div class="ttc" id="aclassarmnn_1_1_layer_support_base_xhtml_a99da2ac37691d245f1a50d2b4dda5321"><div class="ttname"><a href="classarmnn_1_1_layer_support_base.xhtml#a99da2ac37691d245f1a50d2b4dda5321">armnn::LayerSupportBase::IsStandInSupported</a></div><div class="ttdeci">bool IsStandInSupported(const std::vector&lt; const TensorInfo * &gt; &amp;inputs, const std::vector&lt; const TensorInfo * &gt; &amp;outputs, const StandInDescriptor &amp;descriptor, Optional&lt; std::string &amp; &gt; reasonIfUnsupported=EmptyOptional()) const override</div><div class="ttdef"><b>Definition:</b> <a href="_layer_support_base_8cpp_source.xhtml#l00606">LayerSupportBase.cpp:606</a></div></div>
<div class="ttc" id="aclassarmnn_1_1_tensor_info_xhtml"><div class="ttname"><a href="classarmnn_1_1_tensor_info.xhtml">armnn::TensorInfo</a></div><div class="ttdef"><b>Definition:</b> <a href="_tensor_8hpp_source.xhtml#l00152">Tensor.hpp:152</a></div></div>
<div class="ttc" id="aclassarmnn_1_1_layer_support_base_xhtml_ab4474f6170d9abd571f612b2dae34820"><div class="ttname"><a href="classarmnn_1_1_layer_support_base.xhtml#ab4474f6170d9abd571f612b2dae34820">armnn::LayerSupportBase::IsQuantizeSupported</a></div><div class="ttdeci">bool IsQuantizeSupported(const TensorInfo &amp;input, const TensorInfo &amp;output, Optional&lt; std::string &amp; &gt; reasonIfUnsupported=EmptyOptional()) const override</div><div class="ttdef"><b>Definition:</b> <a href="_layer_support_base_8cpp_source.xhtml#l00489">LayerSupportBase.cpp:489</a></div></div>
<div class="ttc" id="astructarmnn_1_1_convolution2d_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_convolution2d_descriptor.xhtml">armnn::Convolution2dDescriptor</a></div><div class="ttdoc">A Convolution2dDescriptor for the Convolution2dLayer.</div><div class="ttdef"><b>Definition:</b> <a href="_descriptors_8hpp_source.xhtml#l00522">Descriptors.hpp:522</a></div></div>
<div class="ttc" id="aclassarmnn_1_1_layer_support_base_xhtml_af6465e7a85f4ef0013c7d7161cd07a4d"><div class="ttname"><a href="classarmnn_1_1_layer_support_base.xhtml#af6465e7a85f4ef0013c7d7161cd07a4d">armnn::LayerSupportBase::IsConcatSupported</a></div><div class="ttdeci">bool IsConcatSupported(const std::vector&lt; const TensorInfo * &gt; inputs, const TensorInfo &amp;output, const OriginsDescriptor &amp;descriptor, Optional&lt; std::string &amp; &gt; reasonIfUnsupported=EmptyOptional()) const override</div><div class="ttdef"><b>Definition:</b> <a href="_layer_support_base_8cpp_source.xhtml#l00153">LayerSupportBase.cpp:153</a></div></div>
<div class="ttc" id="aclassarmnn_1_1_layer_support_base_xhtml_a84f23a37f7fd69269f072e114b7f0afb"><div class="ttname"><a href="classarmnn_1_1_layer_support_base.xhtml#a84f23a37f7fd69269f072e114b7f0afb">armnn::LayerSupportBase::IsDepthToSpaceSupported</a></div><div class="ttdeci">bool IsDepthToSpaceSupported(const TensorInfo &amp;input, const TensorInfo &amp;output, const DepthToSpaceDescriptor &amp;descriptor, Optional&lt; std::string &amp; &gt; reasonIfUnsupported=EmptyOptional()) const override</div><div class="ttdef"><b>Definition:</b> <a href="_layer_support_base_8cpp_source.xhtml#l00208">LayerSupportBase.cpp:208</a></div></div>
<div class="ttc" id="astructarmnn_1_1_batch_normalization_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_batch_normalization_descriptor.xhtml">armnn::BatchNormalizationDescriptor</a></div><div class="ttdoc">A BatchNormalizationDescriptor for the BatchNormalizationLayer.</div><div class="ttdef"><b>Definition:</b> <a href="_descriptors_8hpp_source.xhtml#l00816">Descriptors.hpp:816</a></div></div>
<div class="ttc" id="astructarmnn_1_1_q_lstm_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_q_lstm_descriptor.xhtml">armnn::QLstmDescriptor</a></div><div class="ttdoc">A QLstmDescriptor for the QLstmLayer.</div><div class="ttdef"><b>Definition:</b> <a href="_descriptors_8hpp_source.xhtml#l01347">Descriptors.hpp:1347</a></div></div>
<div class="ttc" id="aclassarmnn_1_1_layer_support_base_xhtml_a5d8316c4fac71a34c0f95745a0cae0a8"><div class="ttname"><a href="classarmnn_1_1_layer_support_base.xhtml#a5d8316c4fac71a34c0f95745a0cae0a8">armnn::LayerSupportBase::IsTransposeSupported</a></div><div class="ttdeci">bool IsTransposeSupported(const TensorInfo &amp;input, const TensorInfo &amp;output, const TransposeDescriptor &amp;descriptor, Optional&lt; std::string &amp; &gt; reasonIfUnsupported=EmptyOptional()) const override</div><div class="ttdef"><b>Definition:</b> <a href="_layer_support_base_8cpp_source.xhtml#l00657">LayerSupportBase.cpp:657</a></div></div>
<div class="ttc" id="aclassarmnn_1_1_layer_support_base_xhtml_a7249912502bfa13dad25038e8fb9379b"><div class="ttname"><a href="classarmnn_1_1_layer_support_base.xhtml#a7249912502bfa13dad25038e8fb9379b">armnn::LayerSupportBase::IsFullyConnectedSupported</a></div><div class="ttdeci">bool IsFullyConnectedSupported(const TensorInfo &amp;input, const TensorInfo &amp;output, const TensorInfo &amp;weights, const TensorInfo &amp;biases, const FullyConnectedDescriptor &amp;descriptor, Optional&lt; std::string &amp; &gt; reasonIfUnsupported=EmptyOptional()) const override</div><div class="ttdef"><b>Definition:</b> <a href="_layer_support_base_8cpp_source.xhtml#l00294">LayerSupportBase.cpp:294</a></div></div>
<div class="ttc" id="aclassarmnn_1_1_layer_support_base_xhtml_ad17197c4dc4dd190610d6d205108255a"><div class="ttname"><a href="classarmnn_1_1_layer_support_base.xhtml#ad17197c4dc4dd190610d6d205108255a">armnn::LayerSupportBase::IsL2NormalizationSupported</a></div><div class="ttdeci">bool IsL2NormalizationSupported(const TensorInfo &amp;input, const TensorInfo &amp;output, const L2NormalizationDescriptor &amp;descriptor, Optional&lt; std::string &amp; &gt; reasonIfUnsupported=EmptyOptional()) const override</div><div class="ttdef"><b>Definition:</b> <a href="_layer_support_base_8cpp_source.xhtml#l00327">LayerSupportBase.cpp:327</a></div></div>
<div class="ttc" id="aclassarmnn_1_1_layer_support_base_xhtml_aeec02af89681b711706472de7be52871"><div class="ttname"><a href="classarmnn_1_1_layer_support_base.xhtml#aeec02af89681b711706472de7be52871">armnn::LayerSupportBase::IsElementwiseUnarySupported</a></div><div class="ttdeci">bool IsElementwiseUnarySupported(const TensorInfo &amp;input, const TensorInfo &amp;output, const ElementwiseUnaryDescriptor &amp;descriptor, Optional&lt; std::string &amp; &gt; reasonIfUnsupported=EmptyOptional()) const override</div><div class="ttdef"><b>Definition:</b> <a href="_layer_support_base_8cpp_source.xhtml#l00264">LayerSupportBase.cpp:264</a></div></div>
<div class="ttc" id="anamespacearmnn_xhtml_a56943a0946e5f15e5e58054b8e7a04a4a93bca63ecbb003649425dd0e4ba79a99"><div class="ttname"><a href="namespacearmnn.xhtml#a56943a0946e5f15e5e58054b8e7a04a4a93bca63ecbb003649425dd0e4ba79a99">armnn::LayerType::StandIn</a></div><div class="ttdeci">@ StandIn</div></div>
<div class="ttc" id="aclassarmnn_1_1_layer_support_base_xhtml_a3d0fd89e5c982e1e0cfcaef64995499a"><div class="ttname"><a href="classarmnn_1_1_layer_support_base.xhtml#a3d0fd89e5c982e1e0cfcaef64995499a">armnn::LayerSupportBase::IsPreluSupported</a></div><div class="ttdeci">bool IsPreluSupported(const TensorInfo &amp;input, const TensorInfo &amp;alpha, const TensorInfo &amp;output, Optional&lt; std::string &amp; &gt; reasonIfUnsupported) const override</div><div class="ttdef"><b>Definition:</b> <a href="_layer_support_base_8cpp_source.xhtml#l00481">LayerSupportBase.cpp:481</a></div></div>
<div class="ttc" id="aclassarmnn_1_1_layer_support_base_xhtml_a533ad0fa8ff06bef939f4260a8183350"><div class="ttname"><a href="classarmnn_1_1_layer_support_base.xhtml#a533ad0fa8ff06bef939f4260a8183350">armnn::LayerSupportBase::IsLstmSupported</a></div><div class="ttdeci">bool IsLstmSupported(const TensorInfo &amp;input, const TensorInfo &amp;outputStateIn, const TensorInfo &amp;cellStateIn, const TensorInfo &amp;scratchBuffer, const TensorInfo &amp;outputStateOut, const TensorInfo &amp;cellStateOut, const TensorInfo &amp;output, const LstmDescriptor &amp;descriptor, const LstmInputParamsInfo &amp;paramsInfo, Optional&lt; std::string &amp; &gt; reasonIfUnsupported=EmptyOptional()) const override</div><div class="ttdef"><b>Definition:</b> <a href="_layer_support_base_8cpp_source.xhtml#l00360">LayerSupportBase.cpp:360</a></div></div>
<div class="ttc" id="aclassarmnn_1_1_layer_support_base_xhtml_a3115a72a9cca31fb27b40da54a435dfa"><div class="ttname"><a href="classarmnn_1_1_layer_support_base.xhtml#a3115a72a9cca31fb27b40da54a435dfa">armnn::LayerSupportBase::IsSoftmaxSupported</a></div><div class="ttdeci">bool IsSoftmaxSupported(const TensorInfo &amp;input, const TensorInfo &amp;output, const SoftmaxDescriptor &amp;descriptor, Optional&lt; std::string &amp; &gt; reasonIfUnsupported=EmptyOptional()) const override</div><div class="ttdef"><b>Definition:</b> <a href="_layer_support_base_8cpp_source.xhtml#l00566">LayerSupportBase.cpp:566</a></div></div>
<div class="ttc" id="aclassarmnn_1_1_layer_support_base_xhtml_a8a520378fa336d155e23478456eb45fe"><div class="ttname"><a href="classarmnn_1_1_layer_support_base.xhtml#a8a520378fa336d155e23478456eb45fe">armnn::LayerSupportBase::IsSubtractionSupported</a></div><div class="ttdeci">bool IsSubtractionSupported(const TensorInfo &amp;input0, const TensorInfo &amp;input1, const TensorInfo &amp;output, Optional&lt; std::string &amp; &gt; reasonIfUnsupported=EmptyOptional()) const override</div><div class="ttdef"><b>Definition:</b> <a href="_layer_support_base_8cpp_source.xhtml#l00630">LayerSupportBase.cpp:630</a></div></div>
<div class="ttc" id="aclassarmnn_1_1_layer_support_base_xhtml_a387c184902d9f09d35bb22b076cb245d"><div class="ttname"><a href="classarmnn_1_1_layer_support_base.xhtml#a387c184902d9f09d35bb22b076cb245d">armnn::LayerSupportBase::IsComparisonSupported</a></div><div class="ttdeci">bool IsComparisonSupported(const TensorInfo &amp;input0, const TensorInfo &amp;input1, const TensorInfo &amp;output, const ComparisonDescriptor &amp;descriptor, Optional&lt; std::string &amp; &gt; reasonIfUnsupported=EmptyOptional()) const override</div><div class="ttdef"><b>Definition:</b> <a href="_layer_support_base_8cpp_source.xhtml#l00144">LayerSupportBase.cpp:144</a></div></div>
<div class="ttc" id="aclassarmnn_1_1_layer_support_base_xhtml_a0d99d635906837ed6c582aba6ca6b178"><div class="ttname"><a href="classarmnn_1_1_layer_support_base.xhtml#a0d99d635906837ed6c582aba6ca6b178">armnn::LayerSupportBase::IsStackSupported</a></div><div class="ttdeci">bool IsStackSupported(const std::vector&lt; const TensorInfo * &gt; &amp;inputs, const TensorInfo &amp;output, const StackDescriptor &amp;descriptor, Optional&lt; std::string &amp; &gt; reasonIfUnsupported=EmptyOptional()) const override</div><div class="ttdef"><b>Definition:</b> <a href="_layer_support_base_8cpp_source.xhtml#l00598">LayerSupportBase.cpp:598</a></div></div>
<div class="ttc" id="aclassarmnn_1_1_layer_support_base_xhtml_a7b8c4b4fd867e2e68a3ae1e2adb090f5"><div class="ttname"><a href="classarmnn_1_1_layer_support_base.xhtml#a7b8c4b4fd867e2e68a3ae1e2adb090f5">armnn::LayerSupportBase::IsLogicalUnarySupported</a></div><div class="ttdeci">bool IsLogicalUnarySupported(const TensorInfo &amp;input, const TensorInfo &amp;output, const ElementwiseUnaryDescriptor &amp;descriptor, Optional&lt; std::string &amp; &gt; reasonIfUnsupported=EmptyOptional()) const override</div><div class="ttdef"><b>Definition:</b> <a href="_layer_support_base_8cpp_source.xhtml#l00344">LayerSupportBase.cpp:344</a></div></div>
<div class="ttc" id="aclassarmnn_1_1_layer_support_base_xhtml_abcbd5fad9ab8476db32cec8db3f4346e"><div class="ttname"><a href="classarmnn_1_1_layer_support_base.xhtml#abcbd5fad9ab8476db32cec8db3f4346e">armnn::LayerSupportBase::IsDilatedDepthwiseConvolutionSupported</a></div><div class="ttdeci">bool IsDilatedDepthwiseConvolutionSupported(const TensorInfo &amp;input, const TensorInfo &amp;output, const DepthwiseConvolution2dDescriptor &amp;descriptor, const TensorInfo &amp;weights, const Optional&lt; TensorInfo &gt; &amp;biases, Optional&lt; std::string &amp; &gt; reasonIfUnsupported=EmptyOptional()) const override</div><div class="ttdef"><b>Definition:</b> <a href="_layer_support_base_8cpp_source.xhtml#l00246">LayerSupportBase.cpp:246</a></div></div>
<div class="ttc" id="astructarmnn_1_1_base_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_base_descriptor.xhtml">armnn::BaseDescriptor</a></div><div class="ttdoc">Base class for all descriptors.</div><div class="ttdef"><b>Definition:</b> <a href="_descriptors_8hpp_source.xhtml#l00022">Descriptors.hpp:22</a></div></div>
<div class="ttc" id="astructarmnn_1_1_origins_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_origins_descriptor.xhtml">armnn::OriginsDescriptor</a></div><div class="ttdoc">An OriginsDescriptor for the ConcatLayer.</div><div class="ttdef"><b>Definition:</b> <a href="_descriptors_8hpp_source.xhtml#l00201">Descriptors.hpp:201</a></div></div>
<div class="ttc" id="astructarmnn_1_1_reshape_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_reshape_descriptor.xhtml">armnn::ReshapeDescriptor</a></div><div class="ttdoc">A ReshapeDescriptor for the ReshapeLayer.</div><div class="ttdef"><b>Definition:</b> <a href="_descriptors_8hpp_source.xhtml#l00990">Descriptors.hpp:990</a></div></div>
<div class="ttc" id="astructarmnn_1_1_permute_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_permute_descriptor.xhtml">armnn::PermuteDescriptor</a></div><div class="ttdoc">A PermuteDescriptor for the PermuteLayer.</div><div class="ttdef"><b>Definition:</b> <a href="_descriptors_8hpp_source.xhtml#l00149">Descriptors.hpp:149</a></div></div>
<div class="ttc" id="astructarmnn_1_1_transpose_convolution2d_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_transpose_convolution2d_descriptor.xhtml">armnn::TransposeConvolution2dDescriptor</a></div><div class="ttdoc">A TransposeConvolution2dDescriptor for the TransposeConvolution2dLayer.</div><div class="ttdef"><b>Definition:</b> <a href="_descriptors_8hpp_source.xhtml#l01407">Descriptors.hpp:1407</a></div></div>
<div class="ttc" id="aclassarmnn_1_1_layer_support_base_xhtml_a4bd807090f4cb45bbfaa9c67e49532f5"><div class="ttname"><a href="classarmnn_1_1_layer_support_base.xhtml#a4bd807090f4cb45bbfaa9c67e49532f5">armnn::LayerSupportBase::IsConvolution2dSupported</a></div><div class="ttdeci">bool IsConvolution2dSupported(const TensorInfo &amp;input, const TensorInfo &amp;output, const Convolution2dDescriptor &amp;descriptor, const TensorInfo &amp;weights, const Optional&lt; TensorInfo &gt; &amp;biases, Optional&lt; std::string &amp; &gt; reasonIfUnsupported=EmptyOptional()) const override</div><div class="ttdef"><b>Definition:</b> <a href="_layer_support_base_8cpp_source.xhtml#l00181">LayerSupportBase.cpp:181</a></div></div>
<div class="ttc" id="astructarmnn_1_1_pooling2d_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_pooling2d_descriptor.xhtml">armnn::Pooling2dDescriptor</a></div><div class="ttdoc">A Pooling2dDescriptor for the Pooling2dLayer.</div><div class="ttdef"><b>Definition:</b> <a href="_descriptors_8hpp_source.xhtml#l00359">Descriptors.hpp:359</a></div></div>
<div class="ttc" id="aclassarmnn_1_1_layer_support_base_xhtml_a56d839ce23fcd124ff86b31ce5f786b1"><div class="ttname"><a href="classarmnn_1_1_layer_support_base.xhtml#a56d839ce23fcd124ff86b31ce5f786b1">armnn::LayerSupportBase::IsPreCompiledSupported</a></div><div class="ttdeci">bool IsPreCompiledSupported(const TensorInfo &amp;input, const PreCompiledDescriptor &amp;descriptor, Optional&lt; std::string &amp; &gt; reasonIfUnsupported=EmptyOptional()) const override</div><div class="ttdef"><b>Definition:</b> <a href="_layer_support_base_8cpp_source.xhtml#l00474">LayerSupportBase.cpp:474</a></div></div>
<div class="ttc" id="astructarmnn_1_1_logical_binary_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_logical_binary_descriptor.xhtml">armnn::LogicalBinaryDescriptor</a></div><div class="ttdoc">A LogicalBinaryDescriptor for the LogicalBinaryLayer.</div><div class="ttdef"><b>Definition:</b> <a href="_descriptors_8hpp_source.xhtml#l01485">Descriptors.hpp:1485</a></div></div>
<div class="ttc" id="a_exceptions_8hpp_xhtml"><div class="ttname"><a href="_exceptions_8hpp.xhtml">Exceptions.hpp</a></div></div>
<div class="ttc" id="aclassarmnn_1_1_layer_support_base_xhtml_a866844299dc03c65ca41be5990bf19e8"><div class="ttname"><a href="classarmnn_1_1_layer_support_base.xhtml#a866844299dc03c65ca41be5990bf19e8">armnn::LayerSupportBase::IsDequantizeSupported</a></div><div class="ttdeci">bool IsDequantizeSupported(const TensorInfo &amp;input, const TensorInfo &amp;output, Optional&lt; std::string &amp; &gt; reasonIfUnsupported=EmptyOptional()) const override</div><div class="ttdef"><b>Definition:</b> <a href="_layer_support_base_8cpp_source.xhtml#l00226">LayerSupportBase.cpp:226</a></div></div>
<div class="ttc" id="aclassarmnn_1_1_optional_xhtml"><div class="ttname"><a href="classarmnn_1_1_optional.xhtml">armnn::Optional&lt; std::string &amp; &gt;</a></div></div>
<div class="ttc" id="aclassarmnn_1_1_layer_support_base_xhtml_a227dac81ac83d16f474881c2252d14cc"><div class="ttname"><a href="classarmnn_1_1_layer_support_base.xhtml#a227dac81ac83d16f474881c2252d14cc">armnn::LayerSupportBase::IsSliceSupported</a></div><div class="ttdeci">bool IsSliceSupported(const TensorInfo &amp;input, const TensorInfo &amp;output, const SliceDescriptor &amp;descriptor, Optional&lt; std::string &amp; &gt; reasonIfUnsupported=EmptyOptional()) const override</div><div class="ttdef"><b>Definition:</b> <a href="_layer_support_base_8cpp_source.xhtml#l00558">LayerSupportBase.cpp:558</a></div></div>
<div class="ttc" id="aclassarmnn_1_1_layer_support_base_xhtml_ad6262dc3169d8e809c272b31b25aaa6a"><div class="ttname"><a href="classarmnn_1_1_layer_support_base.xhtml#ad6262dc3169d8e809c272b31b25aaa6a">armnn::LayerSupportBase::IsPooling2dSupported</a></div><div class="ttdeci">bool IsPooling2dSupported(const TensorInfo &amp;input, const TensorInfo &amp;output, const Pooling2dDescriptor &amp;descriptor, Optional&lt; std::string &amp; &gt; reasonIfUnsupported=EmptyOptional()) const override</div><div class="ttdef"><b>Definition:</b> <a href="_layer_support_base_8cpp_source.xhtml#l00458">LayerSupportBase.cpp:458</a></div></div>
<div class="ttc" id="aclassarmnn_1_1_layer_support_base_xhtml_aedd6e4de83db27813fad327c29402033"><div class="ttname"><a href="classarmnn_1_1_layer_support_base.xhtml#aedd6e4de83db27813fad327c29402033">armnn::LayerSupportBase::IsNormalizationSupported</a></div><div class="ttdeci">bool IsNormalizationSupported(const TensorInfo &amp;input, const TensorInfo &amp;output, const NormalizationDescriptor &amp;descriptor, Optional&lt; std::string &amp; &gt; reasonIfUnsupported=EmptyOptional()) const override</div><div class="ttdef"><b>Definition:</b> <a href="_layer_support_base_8cpp_source.xhtml#l00428">LayerSupportBase.cpp:428</a></div></div>
<div class="ttc" id="astructarmnn_1_1_arg_min_max_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_arg_min_max_descriptor.xhtml">armnn::ArgMinMaxDescriptor</a></div><div class="ttdoc">An ArgMinMaxDescriptor for ArgMinMaxLayer.</div><div class="ttdef"><b>Definition:</b> <a href="_descriptors_8hpp_source.xhtml#l00067">Descriptors.hpp:67</a></div></div>
<div class="ttc" id="astructarmnn_1_1_fake_quantization_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_fake_quantization_descriptor.xhtml">armnn::FakeQuantizationDescriptor</a></div><div class="ttdoc">A FakeQuantizationDescriptor for the FakeQuantizationLayer.</div><div class="ttdef"><b>Definition:</b> <a href="_descriptors_8hpp_source.xhtml#l00894">Descriptors.hpp:894</a></div></div>
<div class="ttc" id="aclassarmnn_1_1_layer_support_base_xhtml_a66ebc7658ecd90158cfb7b03606f0bda"><div class="ttname"><a href="classarmnn_1_1_layer_support_base.xhtml#a66ebc7658ecd90158cfb7b03606f0bda">armnn::LayerSupportBase::IsLogicalBinarySupported</a></div><div class="ttdeci">bool IsLogicalBinarySupported(const TensorInfo &amp;input0, const TensorInfo &amp;input1, const TensorInfo &amp;output, const LogicalBinaryDescriptor &amp;descriptor, Optional&lt; std::string &amp; &gt; reasonIfUnsupported=EmptyOptional()) const override</div><div class="ttdef"><b>Definition:</b> <a href="_layer_support_base_8cpp_source.xhtml#l00335">LayerSupportBase.cpp:335</a></div></div>
<div class="ttc" id="aclassarmnn_1_1_layer_support_base_xhtml_abe850b2a5be4ce4617cb51ceb5344756"><div class="ttname"><a href="classarmnn_1_1_layer_support_base.xhtml#abe850b2a5be4ce4617cb51ceb5344756">armnn::LayerSupportBase::IsConvolution3dSupported</a></div><div class="ttdeci">bool IsConvolution3dSupported(const TensorInfo &amp;input, const TensorInfo &amp;output, const Convolution3dDescriptor &amp;descriptor, const TensorInfo &amp;weights, const Optional&lt; TensorInfo &gt; &amp;biases, Optional&lt; std::string &amp; &gt; reasonIfUnsupported=EmptyOptional()) const override</div><div class="ttdef"><b>Definition:</b> <a href="_layer_support_base_8cpp_source.xhtml#l00191">LayerSupportBase.cpp:191</a></div></div>
<div class="ttc" id="a_ignore_unused_8hpp_xhtml"><div class="ttname"><a href="_ignore_unused_8hpp.xhtml">IgnoreUnused.hpp</a></div></div>
<div class="ttc" id="aclassarmnn_1_1_layer_support_base_xhtml_ab5960d08e30fb9542125688580c5f623"><div class="ttname"><a href="classarmnn_1_1_layer_support_base.xhtml#ab5960d08e30fb9542125688580c5f623">armnn::LayerSupportBase::IsMultiplicationSupported</a></div><div class="ttdeci">bool IsMultiplicationSupported(const TensorInfo &amp;input0, const TensorInfo &amp;input1, const TensorInfo &amp;output, Optional&lt; std::string &amp; &gt; reasonIfUnsupported=EmptyOptional()) const override</div><div class="ttdef"><b>Definition:</b> <a href="_layer_support_base_8cpp_source.xhtml#l00420">LayerSupportBase.cpp:420</a></div></div>
<div class="ttc" id="astructarmnn_1_1_quantized_lstm_input_params_info_xhtml"><div class="ttname"><a href="structarmnn_1_1_quantized_lstm_input_params_info.xhtml">armnn::QuantizedLstmInputParamsInfo</a></div><div class="ttdef"><b>Definition:</b> <a href="_quantized_lstm_params_8hpp_source.xhtml#l00119">QuantizedLstmParams.hpp:119</a></div></div>
<div class="ttc" id="aclassarmnn_1_1_layer_support_base_xhtml_a4522416bd1c86a58e232254d1a24bed1"><div class="ttname"><a href="classarmnn_1_1_layer_support_base.xhtml#a4522416bd1c86a58e232254d1a24bed1">armnn::LayerSupportBase::IsUnidirectionalSequenceLstmSupported</a></div><div class="ttdeci">bool IsUnidirectionalSequenceLstmSupported(const TensorInfo &amp;input, const TensorInfo &amp;outputStateIn, const TensorInfo &amp;cellStateIn, const TensorInfo &amp;outputStateOut, const TensorInfo &amp;cellStateOut, const TensorInfo &amp;output, const LstmDescriptor &amp;descriptor, const LstmInputParamsInfo &amp;paramsInfo, Optional&lt; std::string &amp; &gt; reasonIfUnsupported=EmptyOptional()) const override</div><div class="ttdef"><b>Definition:</b> <a href="_layer_support_base_8cpp_source.xhtml#l00665">LayerSupportBase.cpp:665</a></div></div>
<div class="ttc" id="aclassarmnn_1_1_layer_support_base_xhtml_a30cbe4bc4e20ae9b2aac66a108088919"><div class="ttname"><a href="classarmnn_1_1_layer_support_base.xhtml#a30cbe4bc4e20ae9b2aac66a108088919">armnn::LayerSupportBase::IsBatchToSpaceNdSupported</a></div><div class="ttdeci">bool IsBatchToSpaceNdSupported(const TensorInfo &amp;input, const TensorInfo &amp;output, const BatchToSpaceNdDescriptor &amp;descriptor, Optional&lt; std::string &amp; &gt; reasonIfUnsupported=EmptyOptional()) const override</div><div class="ttdef"><b>Definition:</b> <a href="_layer_support_base_8cpp_source.xhtml#l00121">LayerSupportBase.cpp:121</a></div></div>
<div class="ttc" id="a_types_8hpp_xhtml"><div class="ttname"><a href="_types_8hpp.xhtml">Types.hpp</a></div></div>
<div class="ttc" id="aclassarmnn_1_1_invalid_argument_exception_xhtml"><div class="ttname"><a href="classarmnn_1_1_invalid_argument_exception.xhtml">armnn::InvalidArgumentException</a></div><div class="ttdef"><b>Definition:</b> <a href="_exceptions_8hpp_source.xhtml#l00080">Exceptions.hpp:80</a></div></div>
<div class="ttc" id="anamespacearmnn_xhtml_a56943a0946e5f15e5e58054b8e7a04a4a115bfc5d633eae55c67f9588acdd2bf9"><div class="ttname"><a href="namespacearmnn.xhtml#a56943a0946e5f15e5e58054b8e7a04a4a115bfc5d633eae55c67f9588acdd2bf9">armnn::LayerType::MemImport</a></div><div class="ttdeci">@ MemImport</div></div>
<div class="ttc" id="aclassarmnn_1_1_layer_support_base_xhtml_a78c8c01a898f4bdcebddeda9f3d39a51"><div class="ttname"><a href="classarmnn_1_1_layer_support_base.xhtml#a78c8c01a898f4bdcebddeda9f3d39a51">armnn::LayerSupportBase::IsSpaceToDepthSupported</a></div><div class="ttdeci">bool IsSpaceToDepthSupported(const TensorInfo &amp;input, const TensorInfo &amp;output, const SpaceToDepthDescriptor &amp;descriptor, Optional&lt; std::string &amp; &gt; reasonIfUnsupported=EmptyOptional()) const override</div><div class="ttdef"><b>Definition:</b> <a href="_layer_support_base_8cpp_source.xhtml#l00582">LayerSupportBase.cpp:582</a></div></div>
<div class="ttc" id="astructarmnn_1_1_instance_normalization_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_instance_normalization_descriptor.xhtml">armnn::InstanceNormalizationDescriptor</a></div><div class="ttdoc">An InstanceNormalizationDescriptor for InstanceNormalizationLayer.</div><div class="ttdef"><b>Definition:</b> <a href="_descriptors_8hpp_source.xhtml#l00835">Descriptors.hpp:835</a></div></div>
<div class="ttc" id="aclassarmnn_1_1_layer_support_base_xhtml_ae12212269e173407398a6d4fef80f76f"><div class="ttname"><a href="classarmnn_1_1_layer_support_base.xhtml#ae12212269e173407398a6d4fef80f76f">armnn::LayerSupportBase::IsMemCopySupported</a></div><div class="ttdeci">bool IsMemCopySupported(const TensorInfo &amp;input, const TensorInfo &amp;output, Optional&lt; std::string &amp; &gt; reasonIfUnsupported=EmptyOptional()) const override</div><div class="ttdef"><b>Definition:</b> <a href="_layer_support_base_8cpp_source.xhtml#l00390">LayerSupportBase.cpp:390</a></div></div>
<div class="ttc" id="aclassarmnn_1_1_layer_support_base_xhtml_a629a1df03491e1bdc19dbd415fd2ad74"><div class="ttname"><a href="classarmnn_1_1_layer_support_base.xhtml#a629a1df03491e1bdc19dbd415fd2ad74">armnn::LayerSupportBase::IsResizeSupported</a></div><div class="ttdeci">bool IsResizeSupported(const TensorInfo &amp;input, const TensorInfo &amp;output, const ResizeDescriptor &amp;descriptor, Optional&lt; std::string &amp; &gt; reasonIfUnsupported=EmptyOptional()) const override</div><div class="ttdef"><b>Definition:</b> <a href="_layer_support_base_8cpp_source.xhtml#l00543">LayerSupportBase.cpp:543</a></div></div>
<div class="ttc" id="aclassarmnn_1_1_layer_support_base_xhtml_ae13d577a85b2b121febb2fe43899fd6c"><div class="ttname"><a href="classarmnn_1_1_layer_support_base.xhtml#ae13d577a85b2b121febb2fe43899fd6c">armnn::LayerSupportBase::IsLogSoftmaxSupported</a></div><div class="ttdeci">bool IsLogSoftmaxSupported(const TensorInfo &amp;input, const TensorInfo &amp;output, const LogSoftmaxDescriptor &amp;descriptor, Optional&lt; std::string &amp; &gt; reasonIfUnsupported=EmptyOptional()) const override</div><div class="ttdef"><b>Definition:</b> <a href="_layer_support_base_8cpp_source.xhtml#l00352">LayerSupportBase.cpp:352</a></div></div>
<div class="ttc" id="a_layer_support_base_8hpp_xhtml"><div class="ttname"><a href="_layer_support_base_8hpp.xhtml">LayerSupportBase.hpp</a></div></div>
<div class="ttc" id="a_deprecated_8hpp_xhtml"><div class="ttname"><a href="_deprecated_8hpp.xhtml">Deprecated.hpp</a></div></div>
<div class="ttc" id="astructarmnn_1_1_space_to_batch_nd_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_space_to_batch_nd_descriptor.xhtml">armnn::SpaceToBatchNdDescriptor</a></div><div class="ttdoc">A SpaceToBatchNdDescriptor for the SpaceToBatchNdLayer.</div><div class="ttdef"><b>Definition:</b> <a href="_descriptors_8hpp_source.xhtml#l01010">Descriptors.hpp:1010</a></div></div>
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="dir_68267d1309a1af8e8297ef4c3efbcdba.xhtml">src</a></li><li class="navelem"><a class="el" href="dir_0f3cdec46afbc61a1ded8e1687c9c9a0.xhtml">backends</a></li><li class="navelem"><a class="el" href="dir_797a213d7d01b98ef12d53b0820ea64e.xhtml">backendsCommon</a></li><li class="navelem"><a class="el" href="_layer_support_base_8cpp.xhtml">LayerSupportBase.cpp</a></li>
    <li class="footer">Generated on Thu May 18 2023 10:35:41 for ArmNN by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.17 </li>
  </ul>
</div>
</body>
</html>
