<!-- Copyright (c) 2020 ARM Limited. -->
<!--                                 -->
<!-- SPDX-License-Identifier: MIT    -->
<!--                                 -->
<!-- HTML header for doxygen 1.8.13-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.13"/>
<meta name="robots" content="NOINDEX, NOFOLLOW" />
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>ArmNN: MockProfilingService Class Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script><script type="text/javascript" src="http://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="stylesheet.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <img alt="ArmNN" src="Arm_NN_horizontal_blue.png" style="max-width: 10rem; margin-top: .5rem; margin-left 10px"/>
  <td style="padding-left: 0.5em;">
   <div id="projectname">
   &#160;<span id="projectnumber">22.05</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.13 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
$(document).ready(function(){initNavTree('classarm_1_1pipe_1_1_mock_profiling_service.xhtml','');});
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="summary">
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="classarm_1_1pipe_1_1_mock_profiling_service-members.xhtml">List of all members</a>  </div>
  <div class="headertitle">
<div class="title">MockProfilingService Class Reference</div>  </div>
</div><!--header-->
<div class="contents">

<p><code>#include &lt;<a class="el" href="_profiling_mocks_8hpp_source.xhtml">ProfilingMocks.hpp</a>&gt;</code></p>
<div class="dynheader">
Inheritance diagram for MockProfilingService:</div>
<div class="dyncontent">
 <div class="center">
  <img src="classarm_1_1pipe_1_1_mock_profiling_service.png" usemap="#MockProfilingService_map" alt=""/>
  <map id="MockProfilingService_map" name="MockProfilingService_map">
</map>
 </div></div>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:a1ad55e1b889b39fa0a89398e42a694bb"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm_1_1pipe_1_1_mock_profiling_service.xhtml#a1ad55e1b889b39fa0a89398e42a694bb">MockProfilingService</a> (uint16_t maxGlobalCounterId, IInitialiseProfilingService &amp;initialiser, <a class="el" href="classarm_1_1pipe_1_1_mock_buffer_manager.xhtml">MockBufferManager</a> &amp;mockBufferManager, bool isProfilingEnabled, const CaptureData &amp;captureData)</td></tr>
<tr class="separator:a1ad55e1b889b39fa0a89398e42a694bb"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aeea32305626f921e1e9f99434dbf9049"><td class="memItemLeft" align="right" valign="top">ProfilingDynamicGuid&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm_1_1pipe_1_1_mock_profiling_service.xhtml#aeea32305626f921e1e9f99434dbf9049">NextGuid</a> () override</td></tr>
<tr class="memdesc:aeea32305626f921e1e9f99434dbf9049"><td class="mdescLeft">&#160;</td><td class="mdescRight">Return the next random Guid in the sequence.  <a href="#aeea32305626f921e1e9f99434dbf9049">More...</a><br /></td></tr>
<tr class="separator:aeea32305626f921e1e9f99434dbf9049"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:afd19633513acfc3ae294aa90b1e13a04"><td class="memItemLeft" align="right" valign="top">ProfilingStaticGuid&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm_1_1pipe_1_1_mock_profiling_service.xhtml#afd19633513acfc3ae294aa90b1e13a04">GenerateStaticId</a> (const std::string &amp;str) override</td></tr>
<tr class="memdesc:afd19633513acfc3ae294aa90b1e13a04"><td class="mdescLeft">&#160;</td><td class="mdescRight">Create a ProfilingStaticGuid based on a hash of the string.  <a href="#afd19633513acfc3ae294aa90b1e13a04">More...</a><br /></td></tr>
<tr class="separator:afd19633513acfc3ae294aa90b1e13a04"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a81f774c9319ff5d5b5bf4875e816d989"><td class="memItemLeft" align="right" valign="top">std::unique_ptr&lt; ISendTimelinePacket &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm_1_1pipe_1_1_mock_profiling_service.xhtml#a81f774c9319ff5d5b5bf4875e816d989">GetSendTimelinePacket</a> () const override</td></tr>
<tr class="separator:a81f774c9319ff5d5b5bf4875e816d989"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a37bec1c830464c365aa4434edd0de35a"><td class="memItemLeft" align="right" valign="top">const ICounterMappings &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm_1_1pipe_1_1_mock_profiling_service.xhtml#a37bec1c830464c365aa4434edd0de35a">GetCounterMappings</a> () const override</td></tr>
<tr class="separator:a37bec1c830464c365aa4434edd0de35a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a28c5bcb3adea9e2476255acf1fc0647e"><td class="memItemLeft" align="right" valign="top">ISendCounterPacket &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm_1_1pipe_1_1_mock_profiling_service.xhtml#a28c5bcb3adea9e2476255acf1fc0647e">GetSendCounterPacket</a> () override</td></tr>
<tr class="separator:a28c5bcb3adea9e2476255acf1fc0647e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a70db5b1cdd0d22c1fa912c6e8b9089ce"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm_1_1pipe_1_1_mock_profiling_service.xhtml#a70db5b1cdd0d22c1fa912c6e8b9089ce">IsProfilingEnabled</a> () const override</td></tr>
<tr class="separator:a70db5b1cdd0d22c1fa912c6e8b9089ce"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aff23669159bfc39106dc16d50c0a6e5f"><td class="memItemLeft" align="right" valign="top">CaptureData&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm_1_1pipe_1_1_mock_profiling_service.xhtml#aff23669159bfc39106dc16d50c0a6e5f">GetCaptureData</a> () override</td></tr>
<tr class="separator:aff23669159bfc39106dc16d50c0a6e5f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5b024b98d38b08227727867341a420a9"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm_1_1pipe_1_1_mock_profiling_service.xhtml#a5b024b98d38b08227727867341a420a9">RegisterMapping</a> (uint16_t globalCounterId, uint16_t backendCounterId, const std::string &amp;backendId)</td></tr>
<tr class="separator:a5b024b98d38b08227727867341a420a9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a372de693ad40b3f42839c8ec6ac845f4"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm_1_1pipe_1_1_mock_profiling_service.xhtml#a372de693ad40b3f42839c8ec6ac845f4">Reset</a> ()</td></tr>
<tr class="separator:a372de693ad40b3f42839c8ec6ac845f4"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock">
<p class="definition">Definition at line <a class="el" href="_profiling_mocks_8hpp_source.xhtml#l00631">631</a> of file <a class="el" href="_profiling_mocks_8hpp_source.xhtml">ProfilingMocks.hpp</a>.</p>
</div><h2 class="groupheader">Constructor &amp; Destructor Documentation</h2>
<a id="a1ad55e1b889b39fa0a89398e42a694bb"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a1ad55e1b889b39fa0a89398e42a694bb">&#9670;&nbsp;</a></span>MockProfilingService()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarm_1_1pipe_1_1_mock_profiling_service.xhtml">MockProfilingService</a> </td>
          <td>(</td>
          <td class="paramtype">uint16_t&#160;</td>
          <td class="paramname"><em>maxGlobalCounterId</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">IInitialiseProfilingService &amp;&#160;</td>
          <td class="paramname"><em>initialiser</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="classarm_1_1pipe_1_1_mock_buffer_manager.xhtml">MockBufferManager</a> &amp;&#160;</td>
          <td class="paramname"><em>mockBufferManager</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>isProfilingEnabled</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const CaptureData &amp;&#160;</td>
          <td class="paramname"><em>captureData</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_profiling_mocks_8hpp_source.xhtml#l00634">634</a> of file <a class="el" href="_profiling_mocks_8hpp_source.xhtml">ProfilingMocks.hpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00638"></a><span class="lineno">  638</span>&#160;                                                         :</div><div class="line"><a name="l00639"></a><span class="lineno">  639</span>&#160;        ProfilingService(maxGlobalCounterId,</div><div class="line"><a name="l00640"></a><span class="lineno">  640</span>&#160;                         initialiser,</div><div class="line"><a name="l00641"></a><span class="lineno">  641</span>&#160;                         arm::pipe::ARMNN_SOFTWARE_INFO,</div><div class="line"><a name="l00642"></a><span class="lineno">  642</span>&#160;                         arm::pipe::ARMNN_SOFTWARE_VERSION,</div><div class="line"><a name="l00643"></a><span class="lineno">  643</span>&#160;                         arm::pipe::ARMNN_HARDWARE_VERSION),</div><div class="line"><a name="l00644"></a><span class="lineno">  644</span>&#160;        m_SendCounterPacket(mockBufferManager,</div><div class="line"><a name="l00645"></a><span class="lineno">  645</span>&#160;                            arm::pipe::ARMNN_SOFTWARE_INFO,</div><div class="line"><a name="l00646"></a><span class="lineno">  646</span>&#160;                            arm::pipe::ARMNN_SOFTWARE_VERSION,</div><div class="line"><a name="l00647"></a><span class="lineno">  647</span>&#160;                            arm::pipe::ARMNN_HARDWARE_VERSION),</div><div class="line"><a name="l00648"></a><span class="lineno">  648</span>&#160;        m_IsProfilingEnabled(isProfilingEnabled),</div><div class="line"><a name="l00649"></a><span class="lineno">  649</span>&#160;        m_CaptureData(captureData)</div><div class="line"><a name="l00650"></a><span class="lineno">  650</span>&#160;    {}</div></div><!-- fragment -->
</div>
</div>
<h2 class="groupheader">Member Function Documentation</h2>
<a id="afd19633513acfc3ae294aa90b1e13a04"></a>
<h2 class="memtitle"><span class="permalink"><a href="#afd19633513acfc3ae294aa90b1e13a04">&#9670;&nbsp;</a></span>GenerateStaticId()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">ProfilingStaticGuid GenerateStaticId </td>
          <td>(</td>
          <td class="paramtype">const std::string &amp;&#160;</td>
          <td class="paramname"><em>str</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">override</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Create a ProfilingStaticGuid based on a hash of the string. </p>

<p class="definition">Definition at line <a class="el" href="_profiling_mocks_8hpp_source.xhtml#l00659">659</a> of file <a class="el" href="_profiling_mocks_8hpp_source.xhtml">ProfilingMocks.hpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00660"></a><span class="lineno">  660</span>&#160;    {</div><div class="line"><a name="l00661"></a><span class="lineno">  661</span>&#160;        <span class="keywordflow">return</span> m_GuidGenerator.GenerateStaticId(str);</div><div class="line"><a name="l00662"></a><span class="lineno">  662</span>&#160;    }</div></div><!-- fragment -->
</div>
</div>
<a id="aff23669159bfc39106dc16d50c0a6e5f"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aff23669159bfc39106dc16d50c0a6e5f">&#9670;&nbsp;</a></span>GetCaptureData()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">CaptureData GetCaptureData </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">override</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_profiling_mocks_8hpp_source.xhtml#l00684">684</a> of file <a class="el" href="_profiling_mocks_8hpp_source.xhtml">ProfilingMocks.hpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00685"></a><span class="lineno">  685</span>&#160;    {</div><div class="line"><a name="l00686"></a><span class="lineno">  686</span>&#160;        CaptureData copy(m_CaptureData);</div><div class="line"><a name="l00687"></a><span class="lineno">  687</span>&#160;        <span class="keywordflow">return</span> copy;</div><div class="line"><a name="l00688"></a><span class="lineno">  688</span>&#160;    }</div></div><!-- fragment -->
</div>
</div>
<a id="a37bec1c830464c365aa4434edd0de35a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a37bec1c830464c365aa4434edd0de35a">&#9670;&nbsp;</a></span>GetCounterMappings()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">const ICounterMappings&amp; GetCounterMappings </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">override</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_profiling_mocks_8hpp_source.xhtml#l00669">669</a> of file <a class="el" href="_profiling_mocks_8hpp_source.xhtml">ProfilingMocks.hpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00670"></a><span class="lineno">  670</span>&#160;    {</div><div class="line"><a name="l00671"></a><span class="lineno">  671</span>&#160;        <span class="keywordflow">return</span> m_CounterMapping;</div><div class="line"><a name="l00672"></a><span class="lineno">  672</span>&#160;    }</div></div><!-- fragment -->
</div>
</div>
<a id="a28c5bcb3adea9e2476255acf1fc0647e"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a28c5bcb3adea9e2476255acf1fc0647e">&#9670;&nbsp;</a></span>GetSendCounterPacket()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">ISendCounterPacket&amp; GetSendCounterPacket </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">override</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_profiling_mocks_8hpp_source.xhtml#l00674">674</a> of file <a class="el" href="_profiling_mocks_8hpp_source.xhtml">ProfilingMocks.hpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00675"></a><span class="lineno">  675</span>&#160;    {</div><div class="line"><a name="l00676"></a><span class="lineno">  676</span>&#160;        <span class="keywordflow">return</span> m_SendCounterPacket;</div><div class="line"><a name="l00677"></a><span class="lineno">  677</span>&#160;    }</div></div><!-- fragment -->
</div>
</div>
<a id="a81f774c9319ff5d5b5bf4875e816d989"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a81f774c9319ff5d5b5bf4875e816d989">&#9670;&nbsp;</a></span>GetSendTimelinePacket()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">std::unique_ptr&lt;ISendTimelinePacket&gt; GetSendTimelinePacket </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">override</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_profiling_mocks_8hpp_source.xhtml#l00664">664</a> of file <a class="el" href="_profiling_mocks_8hpp_source.xhtml">ProfilingMocks.hpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00665"></a><span class="lineno">  665</span>&#160;    {</div><div class="line"><a name="l00666"></a><span class="lineno">  666</span>&#160;        <span class="keywordflow">return</span> <span class="keyword">nullptr</span>;</div><div class="line"><a name="l00667"></a><span class="lineno">  667</span>&#160;    }</div></div><!-- fragment -->
</div>
</div>
<a id="a70db5b1cdd0d22c1fa912c6e8b9089ce"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a70db5b1cdd0d22c1fa912c6e8b9089ce">&#9670;&nbsp;</a></span>IsProfilingEnabled()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool IsProfilingEnabled </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">override</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_profiling_mocks_8hpp_source.xhtml#l00679">679</a> of file <a class="el" href="_profiling_mocks_8hpp_source.xhtml">ProfilingMocks.hpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00680"></a><span class="lineno">  680</span>&#160;    {</div><div class="line"><a name="l00681"></a><span class="lineno">  681</span>&#160;        <span class="keywordflow">return</span> m_IsProfilingEnabled;</div><div class="line"><a name="l00682"></a><span class="lineno">  682</span>&#160;    }</div></div><!-- fragment -->
</div>
</div>
<a id="aeea32305626f921e1e9f99434dbf9049"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aeea32305626f921e1e9f99434dbf9049">&#9670;&nbsp;</a></span>NextGuid()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">ProfilingDynamicGuid NextGuid </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">override</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Return the next random Guid in the sequence. </p>

<p class="definition">Definition at line <a class="el" href="_profiling_mocks_8hpp_source.xhtml#l00653">653</a> of file <a class="el" href="_profiling_mocks_8hpp_source.xhtml">ProfilingMocks.hpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00654"></a><span class="lineno">  654</span>&#160;    {</div><div class="line"><a name="l00655"></a><span class="lineno">  655</span>&#160;        <span class="keywordflow">return</span> m_GuidGenerator.NextGuid();</div><div class="line"><a name="l00656"></a><span class="lineno">  656</span>&#160;    }</div></div><!-- fragment -->
</div>
</div>
<a id="a5b024b98d38b08227727867341a420a9"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a5b024b98d38b08227727867341a420a9">&#9670;&nbsp;</a></span>RegisterMapping()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void RegisterMapping </td>
          <td>(</td>
          <td class="paramtype">uint16_t&#160;</td>
          <td class="paramname"><em>globalCounterId</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint16_t&#160;</td>
          <td class="paramname"><em>backendCounterId</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const std::string &amp;&#160;</td>
          <td class="paramname"><em>backendId</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_profiling_mocks_8hpp_source.xhtml#l00690">690</a> of file <a class="el" href="_profiling_mocks_8hpp_source.xhtml">ProfilingMocks.hpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00693"></a><span class="lineno">  693</span>&#160;    {</div><div class="line"><a name="l00694"></a><span class="lineno">  694</span>&#160;        m_CounterMapping.RegisterMapping(globalCounterId, backendCounterId, backendId);</div><div class="line"><a name="l00695"></a><span class="lineno">  695</span>&#160;    }</div></div><!-- fragment -->
</div>
</div>
<a id="a372de693ad40b3f42839c8ec6ac845f4"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a372de693ad40b3f42839c8ec6ac845f4">&#9670;&nbsp;</a></span>Reset()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void Reset </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_profiling_mocks_8hpp_source.xhtml#l00697">697</a> of file <a class="el" href="_profiling_mocks_8hpp_source.xhtml">ProfilingMocks.hpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00698"></a><span class="lineno">  698</span>&#160;    {</div><div class="line"><a name="l00699"></a><span class="lineno">  699</span>&#160;        m_CounterMapping.Reset();</div><div class="line"><a name="l00700"></a><span class="lineno">  700</span>&#160;    }</div></div><!-- fragment -->
</div>
</div>
<hr/>The documentation for this class was generated from the following file:<ul>
<li>src/profiling/test/<a class="el" href="_profiling_mocks_8hpp_source.xhtml">ProfilingMocks.hpp</a></li>
</ul>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="namespacearm.xhtml">arm</a></li><li class="navelem"><a class="el" href="namespacearm_1_1pipe.xhtml">pipe</a></li><li class="navelem"><a class="el" href="classarm_1_1pipe_1_1_mock_profiling_service.xhtml">MockProfilingService</a></li>
    <li class="footer">Generated on Tue May 24 2022 11:27:20 for ArmNN by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.13 </li>
  </ul>
</div>
</body>
</html>
