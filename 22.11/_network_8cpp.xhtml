<!-- Copyright (c) 2020 ARM Limited. -->
<!--                                 -->
<!-- SPDX-License-Identifier: MIT    -->
<!--                                 -->
<!-- HTML header for doxygen 1.8.13-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.13"/>
<meta name="robots" content="NOINDEX, NOFOLLOW" />
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>ArmNN: src/armnn/Network.cpp File Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script><script type="text/javascript" src="http://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="stylesheet.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <img alt="ArmNN" src="Arm_NN_horizontal_blue.png" style="max-width: 10rem; margin-top: .5rem; margin-left 10px"/>
  <td style="padding-left: 0.5em;">
   <div id="projectname">
   &#160;<span id="projectnumber">22.11</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.13 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
$(document).ready(function(){initNavTree('_network_8cpp.xhtml','');});
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="summary">
<a href="#namespaces">Namespaces</a> &#124;
<a href="#func-members">Functions</a>  </div>
  <div class="headertitle">
<div class="title">Network.cpp File Reference</div>  </div>
</div><!--header-->
<div class="contents">
<div class="textblock"><code>#include &quot;<a class="el" href="_network_8hpp_source.xhtml">Network.hpp</a>&quot;</code><br />
<code>#include &quot;<a class="el" href="_graph_8hpp_source.xhtml">Graph.hpp</a>&quot;</code><br />
<code>#include &quot;<a class="el" href="_layer_8hpp_source.xhtml">Layer.hpp</a>&quot;</code><br />
<code>#include &quot;<a class="el" href="_device_spec_8hpp_source.xhtml">DeviceSpec.hpp</a>&quot;</code><br />
<code>#include &quot;<a class="el" href="_optimizer_8hpp_source.xhtml">Optimizer.hpp</a>&quot;</code><br />
<code>#include &quot;<a class="el" href="_subgraph_view_selector_8hpp_source.xhtml">SubgraphViewSelector.hpp</a>&quot;</code><br />
<code>#include &quot;<a class="el" href="_backend_settings_8hpp_source.xhtml">BackendSettings.hpp</a>&quot;</code><br />
<code>#include &quot;<a class="el" href="_all_8hpp_source.xhtml">optimizations/All.hpp</a>&quot;</code><br />
<code>#include &quot;<a class="el" href="_filesystem_8hpp_source.xhtml">armnnUtils/Filesystem.hpp</a>&quot;</code><br />
<code>#include &lt;<a class="el" href="_tensor_handle_8hpp_source.xhtml">armnn/backends/TensorHandle.hpp</a>&gt;</code><br />
<code>#include &lt;<a class="el" href="_workload_factory_8hpp_source.xhtml">armnn/backends/WorkloadFactory.hpp</a>&gt;</code><br />
<code>#include &lt;<a class="el" href="_i_backend_internal_8hpp_source.xhtml">armnn/backends/IBackendInternal.hpp</a>&gt;</code><br />
<code>#include &lt;<a class="el" href="_tensor_handle_factory_registry_8hpp_source.xhtml">backendsCommon/TensorHandleFactoryRegistry.hpp</a>&gt;</code><br />
<code>#include &lt;<a class="el" href="_exceptions_8hpp_source.xhtml">armnn/Exceptions.hpp</a>&gt;</code><br />
<code>#include &lt;<a class="el" href="_utils_8hpp_source.xhtml">armnn/Utils.hpp</a>&gt;</code><br />
<code>#include &lt;<a class="el" href="_types_utils_8hpp_source.xhtml">armnn/TypesUtils.hpp</a>&gt;</code><br />
<code>#include &lt;<a class="el" href="_backend_registry_8hpp_source.xhtml">armnn/BackendRegistry.hpp</a>&gt;</code><br />
<code>#include &lt;<a class="el" href="_logging_8hpp_source.xhtml">armnn/Logging.hpp</a>&gt;</code><br />
<code>#include &lt;<a class="el" href="_assert_8hpp_source.xhtml">armnn/utility/Assert.hpp</a>&gt;</code><br />
<code>#include &lt;<a class="el" href="_ignore_unused_8hpp_source.xhtml">armnn/utility/IgnoreUnused.hpp</a>&gt;</code><br />
<code>#include &lt;<a class="el" href="_polymorphic_downcast_8hpp_source.xhtml">armnn/utility/PolymorphicDowncast.hpp</a>&gt;</code><br />
<code>#include &lt;client/include/IProfilingService.hpp&gt;</code><br />
<code>#include &lt;common/include/ProfilingGuid.hpp&gt;</code><br />
<code>#include &lt;fmt/format.h&gt;</code><br />
<code>#include &lt;fcntl.h&gt;</code><br />
<code>#include &lt;algorithm&gt;</code><br />
<code>#include &lt;fstream&gt;</code><br />
<code>#include &lt;memory&gt;</code><br />
<code>#include &lt;vector&gt;</code><br />
</div>
<p><a href="_network_8cpp_source.xhtml">Go to the source code of this file.</a></p>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="namespaces"></a>
Namespaces</h2></td></tr>
<tr class="memitem:namespacearmnn"><td class="memItemLeft" align="right" valign="top"> &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearmnn.xhtml">armnn</a></td></tr>
<tr class="memdesc:namespacearmnn"><td class="mdescLeft">&#160;</td><td class="mdescRight">Copyright (c) 2021 ARM Limited and Contributors. <br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="func-members"></a>
Functions</h2></td></tr>
<tr class="memitem:a7658f93d899c8646515a29370e6aa994"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearmnn.xhtml#a7658f93d899c8646515a29370e6aa994">ReportError</a> (const std::string &amp;errorMessage, Optional&lt; std::vector&lt; std::string &gt; &amp;&gt; errorMessages)</td></tr>
<tr class="separator:a7658f93d899c8646515a29370e6aa994"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a38e626422579decc13e3ee37da1a84c9"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearmnn.xhtml#a38e626422579decc13e3ee37da1a84c9">ReportWarning</a> (const std::string &amp;warningMessage, Optional&lt; std::vector&lt; std::string &gt; &amp;&gt; warningMessages)</td></tr>
<tr class="separator:a38e626422579decc13e3ee37da1a84c9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae50fff9aa2a1ce46392d8641c10aa3bc"><td class="memItemLeft" align="right" valign="top">OptimizationResult&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearmnn.xhtml#ae50fff9aa2a1ce46392d8641c10aa3bc">ReturnWithError</a> (OptimizationResult res, const Layer *layer, const BackendSettings &amp;backendSettings, Optional&lt; std::vector&lt; std::string &gt; &amp;&gt; errMessages)</td></tr>
<tr class="separator:ae50fff9aa2a1ce46392d8641c10aa3bc"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af002111f64aee648e3258247075cae36"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearmnn.xhtml#af002111f64aee648e3258247075cae36">CheckScaleSetOnQuantizedType</a> (Layer *layer, Optional&lt; std::vector&lt; std::string &gt; &amp;&gt; errMessages)</td></tr>
<tr class="separator:af002111f64aee648e3258247075cae36"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a33d586a0d9bbb1f12ac7a3ba8d03e21e"><td class="memTemplParams" colspan="2">template&lt;typename LayerT &gt; </td></tr>
<tr class="memitem:a33d586a0d9bbb1f12ac7a3ba8d03e21e"><td class="memTemplItemLeft" align="right" valign="top">LayerT *&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="namespacearmnn.xhtml#a33d586a0d9bbb1f12ac7a3ba8d03e21e">ConvertBf16ToFp32Weight</a> (Layer *l)</td></tr>
<tr class="separator:a33d586a0d9bbb1f12ac7a3ba8d03e21e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a56f168327453ea4461cbc1c0ac7f15b6"><td class="memItemLeft" align="right" valign="top">OptimizationResult&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearmnn.xhtml#a56f168327453ea4461cbc1c0ac7f15b6">AttemptBackendAssignment</a> (BackendSettings &amp;backendSettings, Graph &amp;graph, Layer *layer, BackendId backend, DataType dataTypeIn, DataType dataTypeOut, const std::vector&lt; BackendId &gt; &amp;availablePreferredBackends, std::string &amp;reasonIfUnsupported, Optional&lt; std::vector&lt; std::string &gt; &amp;&gt; errMessages)</td></tr>
<tr class="separator:a56f168327453ea4461cbc1c0ac7f15b6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3a26a0174216ded9353ca943a66709dc"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearmnn.xhtml#a3a26a0174216ded9353ca943a66709dc">AssignBackendsIConnectable</a> (OptimizedNetworkImpl *optNetObjPtr, IConnectableLayer *it, Optional&lt; std::vector&lt; std::string &gt; &amp;&gt; errMessages, OptimizationResult &amp;result, BackendSettings &amp;backendSettings, std::vector&lt; BackendId &gt; &amp;availablePreferredBackends)</td></tr>
<tr class="separator:a3a26a0174216ded9353ca943a66709dc"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a224df72b3d7a3bba8609bc167286e3f7"><td class="memItemLeft" align="right" valign="top">OptimizationResult&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearmnn.xhtml#a224df72b3d7a3bba8609bc167286e3f7">AssignBackends</a> (OptimizedNetworkImpl *optNetObjPtr, BackendSettings &amp;backendSettings, Graph::Iterator &amp;firstLayer, Graph::Iterator &amp;lastLayer, Optional&lt; std::vector&lt; std::string &gt; &amp;&gt; errMessages)</td></tr>
<tr class="separator:a224df72b3d7a3bba8609bc167286e3f7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a42b993acd5865dfb937686b9760801e1"><td class="memItemLeft" align="right" valign="top">OptimizationResult&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearmnn.xhtml#a42b993acd5865dfb937686b9760801e1">AssignBackends</a> (OptimizedNetworkImpl *optNetObjPtr, BackendSettings &amp;backendSettings, SubgraphView::IConnectableLayerIterator &amp;firstLayer, SubgraphView::IConnectableLayerIterator &amp;lastLayer, Optional&lt; std::vector&lt; std::string &gt; &amp;&gt; errMessages)</td></tr>
<tr class="separator:a42b993acd5865dfb937686b9760801e1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a48e4d70ae8893f6f1a8ebfced5b03a07"><td class="memItemLeft" align="right" valign="top">OptimizationResult&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearmnn.xhtml#a48e4d70ae8893f6f1a8ebfced5b03a07">AssignBackends</a> (OptimizedNetworkImpl *optNetObjPtr, BackendSettings &amp;backendSettings, SubgraphView &amp;subgraph, Optional&lt; std::vector&lt; std::string &gt; &amp;&gt; errMessages)</td></tr>
<tr class="separator:a48e4d70ae8893f6f1a8ebfced5b03a07"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1ec6b4c20ed294a96cf94c33c24caaf5"><td class="memItemLeft" align="right" valign="top">BackendsMap&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearmnn.xhtml#a1ec6b4c20ed294a96cf94c33c24caaf5">CreateSupportedBackends</a> (TensorHandleFactoryRegistry &amp;handleFactoryRegistry, BackendSettings &amp;backendSettings)</td></tr>
<tr class="separator:a1ec6b4c20ed294a96cf94c33c24caaf5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9f31d956861d8277fa5f8fb877dbbb6c"><td class="memItemLeft" align="right" valign="top">OptimizationResult&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearmnn.xhtml#a9f31d956861d8277fa5f8fb877dbbb6c">ApplyBackendOptimizations</a> (OptimizedNetworkImpl *optNetObjPtr, BackendSettings &amp;backendSettings, BackendsMap &amp;backends, const ModelOptions &amp;modelOptions, Optional&lt; std::vector&lt; std::string &gt; &amp;&gt; errMessages)</td></tr>
<tr class="separator:a9f31d956861d8277fa5f8fb877dbbb6c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5ee4a1cca55f69b31e625c786655ed1a"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearmnn.xhtml#a5ee4a1cca55f69b31e625c786655ed1a">RequiresCopy</a> (ITensorHandleFactory::FactoryId src, ITensorHandleFactory::FactoryId dst, TensorHandleFactoryRegistry &amp;registry)</td></tr>
<tr class="separator:a5ee4a1cca55f69b31e625c786655ed1a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5f34318a121e010053655204df94720c"><td class="memItemLeft" align="right" valign="top">ITensorHandleFactory::FactoryId&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearmnn.xhtml#a5f34318a121e010053655204df94720c">CalculateSlotOptionForInput</a> (BackendsMap &amp;backends, OutputSlot &amp;slot, TensorHandleFactoryRegistry &amp;registry, bool importEnabled)</td></tr>
<tr class="separator:a5f34318a121e010053655204df94720c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab46c7f5f4736d550ab0e5e05a0fff4a9"><td class="memItemLeft" align="right" valign="top">ITensorHandleFactory::FactoryId&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearmnn.xhtml#ab46c7f5f4736d550ab0e5e05a0fff4a9">CalculateSlotOptionForOutput</a> (BackendsMap &amp;backends, OutputSlot &amp;slot, TensorHandleFactoryRegistry &amp;registry)</td></tr>
<tr class="separator:ab46c7f5f4736d550ab0e5e05a0fff4a9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad52508167694d6d259525b3eec1a4267"><td class="memItemLeft" align="right" valign="top">ITensorHandleFactory::FactoryId&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearmnn.xhtml#ad52508167694d6d259525b3eec1a4267">CalculateSlotOption</a> (BackendsMap &amp;backends, OutputSlot &amp;outputSlot, TensorHandleFactoryRegistry &amp;registry, bool exportEnabled)</td></tr>
<tr class="separator:ad52508167694d6d259525b3eec1a4267"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a738d3243c1dc564304d78908c6112e4f"><td class="memItemLeft" align="right" valign="top">EdgeStrategy&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearmnn.xhtml#a738d3243c1dc564304d78908c6112e4f">CalculateEdgeStrategy</a> (BackendsMap &amp;backends, ITensorHandleFactory::FactoryId srcFactoryId, const Layer &amp;layer, const Layer &amp;connectedLayer, TensorHandleFactoryRegistry &amp;registry, bool importEnabled)</td></tr>
<tr class="separator:a738d3243c1dc564304d78908c6112e4f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:abdde0870cf702c8284c9693c68093fd3"><td class="memItemLeft" align="right" valign="top">OptimizationResult&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearmnn.xhtml#abdde0870cf702c8284c9693c68093fd3">SelectTensorHandleStrategy</a> (Graph &amp;optGraph, BackendsMap &amp;backends, TensorHandleFactoryRegistry &amp;registry, bool importEnabled, bool exportEnabled, Optional&lt; std::vector&lt; std::string &gt; &amp;&gt; errMessages)</td></tr>
<tr class="separator:abdde0870cf702c8284c9693c68093fd3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a25ff4c2830094e33a67f0963a3e4b24c"><td class="memItemLeft" align="right" valign="top">IOptimizedNetworkPtr&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearmnn.xhtml#a25ff4c2830094e33a67f0963a3e4b24c">Optimize</a> (const Graph &amp;inGraph, const std::vector&lt; BackendId &gt; &amp;backendPreferences, const IDeviceSpec &amp;deviceSpec, const OptimizerOptions &amp;options, Optional&lt; std::vector&lt; std::string &gt; &amp;&gt; messages=EmptyOptional())</td></tr>
<tr class="memdesc:a25ff4c2830094e33a67f0963a3e4b24c"><td class="mdescLeft">&#160;</td><td class="mdescRight">Create an optimized version of the network.  <a href="namespacearmnn.xhtml#a25ff4c2830094e33a67f0963a3e4b24c">More...</a><br /></td></tr>
<tr class="separator:a25ff4c2830094e33a67f0963a3e4b24c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a82e98ef05fd67036d1195ba17174d685"><td class="memItemLeft" align="right" valign="top">IOptimizedNetworkPtr&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearmnn.xhtml#a82e98ef05fd67036d1195ba17174d685">Optimize</a> (const INetwork &amp;network, const std::vector&lt; BackendId &gt; &amp;backendPreferences, const IDeviceSpec &amp;deviceSpec, const OptimizerOptions &amp;options=OptimizerOptions(), Optional&lt; std::vector&lt; std::string &gt; &amp;&gt; messages=EmptyOptional())</td></tr>
<tr class="memdesc:a82e98ef05fd67036d1195ba17174d685"><td class="mdescLeft">&#160;</td><td class="mdescRight">Create an optimized version of the network.  <a href="namespacearmnn.xhtml#a82e98ef05fd67036d1195ba17174d685">More...</a><br /></td></tr>
<tr class="separator:a82e98ef05fd67036d1195ba17174d685"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="dir_68267d1309a1af8e8297ef4c3efbcdba.xhtml">src</a></li><li class="navelem"><a class="el" href="dir_e0a84d05c80a2ef4231141dcbbeac5c8.xhtml">armnn</a></li><li class="navelem"><a class="el" href="_network_8cpp.xhtml">Network.cpp</a></li>
    <li class="footer">Generated on Wed Nov 23 2022 10:57:38 for ArmNN by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.13 </li>
  </ul>
</div>
</body>
</html>
