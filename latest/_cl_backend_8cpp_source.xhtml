<!-- Copyright (c) 2020 ARM Limited. -->
<!--                                 -->
<!-- SPDX-License-Identifier: MIT    -->
<!--                                 -->
<!-- HTML header for doxygen 1.8.13-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.17"/>
<meta name="robots" content="NOINDEX, NOFOLLOW" />
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>ArmNN: src/backends/cl/ClBackend.cpp Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script>
<script type="text/javascript" async="async" src="http://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="stylesheet.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <img alt="ArmNN" src="Arm_NN_horizontal_blue.png" style="max-width: 10rem; margin-top: .5rem; margin-left 10px"/>
  <td style="padding-left: 0.5em;">
   <div id="projectname">
   &#160;<span id="projectnumber">23.02</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.17 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "search",false,'Search');
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(document).ready(function(){initNavTree('_cl_backend_8cpp_source.xhtml',''); initResizable(); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="headertitle">
<div class="title">ClBackend.cpp</div>  </div>
</div><!--header-->
<div class="contents">
<a href="_cl_backend_8cpp.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="comment">//</span></div>
<div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="comment">// Copyright Â© 2022 Arm Ltd. All rights reserved.</span></div>
<div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="comment">// SPDX-License-Identifier: MIT</span></div>
<div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="comment">//</span></div>
<div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160; </div>
<div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_cl_backend_8hpp.xhtml">ClBackend.hpp</a>&quot;</span></div>
<div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_cl_backend_context_8hpp.xhtml">ClBackendContext.hpp</a>&quot;</span></div>
<div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_cl_backend_default_allocator_8hpp.xhtml">ClBackendDefaultAllocator.hpp</a>&quot;</span></div>
<div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_cl_backend_id_8hpp.xhtml">ClBackendId.hpp</a>&quot;</span></div>
<div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_cl_backend_model_context_8hpp.xhtml">ClBackendModelContext.hpp</a>&quot;</span></div>
<div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_cl_import_tensor_handle_factory_8hpp.xhtml">ClImportTensorHandleFactory.hpp</a>&quot;</span></div>
<div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_cl_layer_support_8hpp.xhtml">ClLayerSupport.hpp</a>&quot;</span></div>
<div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_cl_tensor_handle_factory_8hpp.xhtml">ClTensorHandleFactory.hpp</a>&quot;</span></div>
<div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_cl_workload_factory_8hpp.xhtml">ClWorkloadFactory.hpp</a>&quot;</span></div>
<div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160; </div>
<div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;<span class="preprocessor">#include &lt;<a class="code" href="_backend_registry_8hpp.xhtml">armnn/BackendRegistry.hpp</a>&gt;</span></div>
<div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;<span class="preprocessor">#include &lt;<a class="code" href="_descriptors_8hpp.xhtml">armnn/Descriptors.hpp</a>&gt;</span></div>
<div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160; </div>
<div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;<span class="preprocessor">#include &lt;<a class="code" href="_arm_compute_subgraph_utils_8hpp.xhtml">aclCommon/ArmComputeSubgraphUtils.hpp</a>&gt;</span></div>
<div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;<span class="preprocessor">#include &lt;<a class="code" href="_arm_compute_utils_8hpp.xhtml">aclCommon/ArmComputeUtils.hpp</a>&gt;</span></div>
<div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;<span class="preprocessor">#include &lt;<a class="code" href="_base_memory_manager_8hpp.xhtml">aclCommon/BaseMemoryManager.hpp</a>&gt;</span></div>
<div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160; </div>
<div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;<span class="preprocessor">#include &lt;<a class="code" href="include_2armnn_2backends_2_i_backend_context_8hpp.xhtml">armnn/backends/IBackendContext.hpp</a>&gt;</span></div>
<div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;<span class="preprocessor">#include &lt;<a class="code" href="include_2armnn_2backends_2_i_memory_manager_8hpp.xhtml">armnn/backends/IMemoryManager.hpp</a>&gt;</span></div>
<div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;<span class="preprocessor">#include &lt;<a class="code" href="_polymorphic_downcast_8hpp.xhtml">armnn/utility/PolymorphicDowncast.hpp</a>&gt;</span></div>
<div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160; </div>
<div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_cl_addition_workload_8hpp.xhtml">workloads/ClAdditionWorkload.hpp</a>&quot;</span></div>
<div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_cl_batch_normalization_float_workload_8hpp.xhtml">workloads/ClBatchNormalizationFloatWorkload.hpp</a>&quot;</span></div>
<div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_cl_convolution2d_workload_8hpp.xhtml">workloads/ClConvolution2dWorkload.hpp</a>&quot;</span></div>
<div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_cl_depthwise_convolution_workload_8hpp.xhtml">workloads/ClDepthwiseConvolutionWorkload.hpp</a>&quot;</span></div>
<div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_cl_division_workload_8hpp.xhtml">workloads/ClDivisionWorkload.hpp</a>&quot;</span></div>
<div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_cl_fully_connected_workload_8hpp.xhtml">workloads/ClFullyConnectedWorkload.hpp</a>&quot;</span></div>
<div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_cl_multiplication_workload_8hpp.xhtml">workloads/ClMultiplicationWorkload.hpp</a>&quot;</span></div>
<div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_cl_reduce_workload_8hpp.xhtml">workloads/ClReduceWorkload.hpp</a>&quot;</span></div>
<div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_cl_subtraction_workload_8hpp.xhtml">workloads/ClSubtractionWorkload.hpp</a>&quot;</span></div>
<div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160; </div>
<div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;<span class="preprocessor">#include &lt;<a class="code" href="_optimizer_8hpp.xhtml">Optimizer.hpp</a>&gt;</span></div>
<div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160; </div>
<div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;<span class="preprocessor">#include &lt;arm_compute/core/Types.h&gt;</span></div>
<div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;<span class="preprocessor">#include &lt;arm_compute/runtime/CL/CLBufferAllocator.h&gt;</span></div>
<div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160; </div>
<div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;<span class="keyword">namespace </span><a class="code" href="namespacearmnn.xhtml">armnn</a></div>
<div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;{</div>
<div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160; </div>
<div class="line"><a name="l00045"></a><span class="lineno"><a class="line" href="classarmnn_1_1_cl_backend.xhtml#a177af502214bbc8123fbb4a3c4f0a1b8">   45</a></span>&#160;<span class="keyword">const</span> <a class="code" href="classarmnn_1_1_backend_id.xhtml">BackendId</a>&amp; <a class="code" href="classarmnn_1_1_cl_backend.xhtml#a177af502214bbc8123fbb4a3c4f0a1b8">ClBackend::GetIdStatic</a>()</div>
<div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;{</div>
<div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;    <span class="keyword">static</span> <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_backend_id.xhtml">BackendId</a> s_Id{<a class="code" href="namespacearmnn.xhtml#adfe10e7086e3e3b98927cf84aee03dd0">ClBackendId</a>()};</div>
<div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;    <span class="keywordflow">return</span> s_Id;</div>
<div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;}</div>
<div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160; </div>
<div class="line"><a name="l00051"></a><span class="lineno"><a class="line" href="classarmnn_1_1_cl_backend.xhtml#a93fcb3bff141d8c77b53466a44b58eee">   51</a></span>&#160;<a class="code" href="classarmnn_1_1_i_backend_internal.xhtml#a12bff6d51d63dac1375c89bc8415dc46">IBackendInternal::IMemoryManagerUniquePtr</a> <a class="code" href="classarmnn_1_1_cl_backend.xhtml#a93fcb3bff141d8c77b53466a44b58eee">ClBackend::CreateMemoryManager</a>()<span class="keyword"> const</span></div>
<div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;    <span class="keywordflow">if</span> (<a class="code" href="classarmnn_1_1_cl_backend.xhtml#adda2579a4649278c81f18a1d3915b3a0">m_UsingCustomAllocator</a>)</div>
<div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;    {</div>
<div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;        <span class="keywordflow">return</span> std::make_unique&lt;ClMemoryManager&gt;(<a class="code" href="classarmnn_1_1_cl_backend.xhtml#af1937f516c364d9d99cb502249e7179d">m_CustomAllocator</a>);</div>
<div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;    }</div>
<div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;    <span class="keywordflow">return</span> std::make_unique&lt;ClMemoryManager&gt;(std::make_unique&lt;arm_compute::CLBufferAllocator&gt;());</div>
<div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;}</div>
<div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160; </div>
<div class="line"><a name="l00060"></a><span class="lineno"><a class="line" href="classarmnn_1_1_cl_backend.xhtml#a8e19e275c8162e34e6d8d10a9245dbc9">   60</a></span>&#160;<a class="code" href="classarmnn_1_1_i_backend_internal.xhtml#a72ca1cf423bda4b0a9ffb789627126de">IBackendInternal::IWorkloadFactoryPtr</a> <a class="code" href="classarmnn_1_1_cl_backend.xhtml#a8e19e275c8162e34e6d8d10a9245dbc9">ClBackend::CreateWorkloadFactory</a>(</div>
<div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;    <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_i_backend_internal.xhtml#a693b40e6b94e958836aeb0410ca186bd">IBackendInternal::IMemoryManagerSharedPtr</a>&amp; memoryManager)<span class="keyword"> const</span></div>
<div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;    <span class="keywordflow">return</span> std::make_unique&lt;ClWorkloadFactory&gt;(</div>
<div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;        PolymorphicPointerDowncast&lt;ClMemoryManager&gt;(memoryManager));</div>
<div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;}</div>
<div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160; </div>
<div class="line"><a name="l00067"></a><span class="lineno"><a class="line" href="classarmnn_1_1_cl_backend.xhtml#a19441d1c63ca23efb8d4305933bcb712">   67</a></span>&#160;<a class="code" href="classarmnn_1_1_i_backend_internal.xhtml#a72ca1cf423bda4b0a9ffb789627126de">IBackendInternal::IWorkloadFactoryPtr</a> <a class="code" href="classarmnn_1_1_cl_backend.xhtml#a8e19e275c8162e34e6d8d10a9245dbc9">ClBackend::CreateWorkloadFactory</a>(</div>
<div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;    <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_i_backend_internal.xhtml#a693b40e6b94e958836aeb0410ca186bd">IBackendInternal::IMemoryManagerSharedPtr</a>&amp; memoryManager, <span class="keyword">const</span> <a class="code" href="namespacearmnn.xhtml#a5b6893cda5b69359a4244c06054da18f">ModelOptions</a>&amp; modelOptions)<span class="keyword"> const</span></div>
<div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;    <span class="keywordflow">return</span> std::make_unique&lt;ClWorkloadFactory&gt;(</div>
<div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;        PolymorphicPointerDowncast&lt;ClMemoryManager&gt;(memoryManager), <a class="code" href="classarmnn_1_1_cl_backend.xhtml#a2482b4a7d5bde88e9b963be08017ce2b">CreateBackendSpecificModelContext</a>(modelOptions));</div>
<div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;}</div>
<div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160; </div>
<div class="line"><a name="l00074"></a><span class="lineno"><a class="line" href="classarmnn_1_1_cl_backend.xhtml#aa2d432e503780e146c08729323da519a">   74</a></span>&#160;<a class="code" href="classarmnn_1_1_i_backend_internal.xhtml#a72ca1cf423bda4b0a9ffb789627126de">IBackendInternal::IWorkloadFactoryPtr</a> <a class="code" href="classarmnn_1_1_cl_backend.xhtml#a8e19e275c8162e34e6d8d10a9245dbc9">ClBackend::CreateWorkloadFactory</a>(</div>
<div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;    <a class="code" href="classarmnn_1_1_tensor_handle_factory_registry.xhtml">TensorHandleFactoryRegistry</a>&amp; registry)<span class="keyword"> const</span></div>
<div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;    std::shared_ptr&lt;ClMemoryManager&gt; memoryManager;</div>
<div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;    <span class="keywordflow">if</span> (<a class="code" href="classarmnn_1_1_cl_backend.xhtml#adda2579a4649278c81f18a1d3915b3a0">m_UsingCustomAllocator</a>)</div>
<div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;    {</div>
<div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;        memoryManager = std::make_shared&lt;ClMemoryManager&gt;(<a class="code" href="classarmnn_1_1_cl_backend.xhtml#af1937f516c364d9d99cb502249e7179d">m_CustomAllocator</a>);</div>
<div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;    }</div>
<div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;    <span class="keywordflow">else</span></div>
<div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;    {</div>
<div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;        memoryManager = std::make_shared&lt;ClMemoryManager&gt;(std::make_unique&lt;arm_compute::CLBufferAllocator&gt;());</div>
<div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;    }</div>
<div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160; </div>
<div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;    std::unique_ptr&lt;ITensorHandleFactory&gt; factory = std::make_unique&lt;ClTensorHandleFactory&gt;(memoryManager);</div>
<div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;    std::unique_ptr&lt;ITensorHandleFactory&gt; importFactory = std::make_unique&lt;ClImportTensorHandleFactory&gt;(</div>
<div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;        <span class="keyword">static_cast&lt;</span><a class="code" href="namespacearmnn.xhtml#a5b05f3b7208ec7cea3338e30057c0bac">MemorySourceFlags</a><span class="keyword">&gt;</span>(<a class="code" href="namespacearmnn.xhtml#a14fcd7f88d11cea0a018269dca5f9277a1131a914388fac73e5f07b0ba0aad523">MemorySource::Malloc</a>), <span class="keyword">static_cast&lt;</span><a class="code" href="namespacearmnn.xhtml#a5b05f3b7208ec7cea3338e30057c0bac">MemorySourceFlags</a><span class="keyword">&gt;</span>(<a class="code" href="namespacearmnn.xhtml#a14fcd7f88d11cea0a018269dca5f9277a1131a914388fac73e5f07b0ba0aad523">MemorySource::Malloc</a>));</div>
<div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160; </div>
<div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;    registry.<a class="code" href="classarmnn_1_1_tensor_handle_factory_registry.xhtml#afae069d084e8541c8970d17d26011ac6">RegisterCopyAndImportFactoryPair</a>(factory-&gt;GetId(), importFactory-&gt;GetId());</div>
<div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;    registry.<a class="code" href="classarmnn_1_1_tensor_handle_factory_registry.xhtml#afae069d084e8541c8970d17d26011ac6">RegisterCopyAndImportFactoryPair</a>(importFactory-&gt;GetId(), factory-&gt;GetId());</div>
<div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160; </div>
<div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;    registry.<a class="code" href="classarmnn_1_1_tensor_handle_factory_registry.xhtml#a958ab0c60b6bfdfba5cc075211edec37">RegisterMemoryManager</a>(memoryManager);</div>
<div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;    registry.<a class="code" href="classarmnn_1_1_tensor_handle_factory_registry.xhtml#a05f82bd846630bb3aa8afe22ef6f15fc">RegisterFactory</a>(std::move(factory));</div>
<div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;    registry.<a class="code" href="classarmnn_1_1_tensor_handle_factory_registry.xhtml#a05f82bd846630bb3aa8afe22ef6f15fc">RegisterFactory</a>(std::move(importFactory));</div>
<div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160; </div>
<div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;    <span class="keywordflow">return</span> std::make_unique&lt;ClWorkloadFactory&gt;(</div>
<div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;            PolymorphicPointerDowncast&lt;ClMemoryManager&gt;(memoryManager));</div>
<div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;}</div>
<div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160; </div>
<div class="line"><a name="l00102"></a><span class="lineno"><a class="line" href="classarmnn_1_1_cl_backend.xhtml#a95c304f397c4ef9f0108834e16631219">  102</a></span>&#160;<a class="code" href="classarmnn_1_1_i_backend_internal.xhtml#a72ca1cf423bda4b0a9ffb789627126de">IBackendInternal::IWorkloadFactoryPtr</a> <a class="code" href="classarmnn_1_1_cl_backend.xhtml#a8e19e275c8162e34e6d8d10a9245dbc9">ClBackend::CreateWorkloadFactory</a>(</div>
<div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;    <a class="code" href="classarmnn_1_1_tensor_handle_factory_registry.xhtml">TensorHandleFactoryRegistry</a>&amp; registry, <span class="keyword">const</span> <a class="code" href="namespacearmnn.xhtml#a5b6893cda5b69359a4244c06054da18f">ModelOptions</a>&amp; modelOptions)<span class="keyword"> const</span></div>
<div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;    std::shared_ptr&lt;ClMemoryManager&gt; memoryManager;</div>
<div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;    <span class="keywordflow">if</span> (<a class="code" href="classarmnn_1_1_cl_backend.xhtml#adda2579a4649278c81f18a1d3915b3a0">m_UsingCustomAllocator</a>)</div>
<div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;    {</div>
<div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;        memoryManager = std::make_shared&lt;ClMemoryManager&gt;(<a class="code" href="classarmnn_1_1_cl_backend.xhtml#af1937f516c364d9d99cb502249e7179d">m_CustomAllocator</a>);</div>
<div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;    }</div>
<div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;    <span class="keywordflow">else</span></div>
<div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;    {</div>
<div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;        memoryManager = std::make_shared&lt;ClMemoryManager&gt;(std::make_unique&lt;arm_compute::CLBufferAllocator&gt;());</div>
<div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;    }</div>
<div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160; </div>
<div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;    std::unique_ptr&lt;ITensorHandleFactory&gt; factory = std::make_unique&lt;ClTensorHandleFactory&gt;(memoryManager);</div>
<div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;    std::unique_ptr&lt;ITensorHandleFactory&gt; importFactory = std::make_unique&lt;ClImportTensorHandleFactory&gt;(</div>
<div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;        <span class="keyword">static_cast&lt;</span><a class="code" href="namespacearmnn.xhtml#a5b05f3b7208ec7cea3338e30057c0bac">MemorySourceFlags</a><span class="keyword">&gt;</span>(<a class="code" href="namespacearmnn.xhtml#a14fcd7f88d11cea0a018269dca5f9277a1131a914388fac73e5f07b0ba0aad523">MemorySource::Malloc</a>), <span class="keyword">static_cast&lt;</span><a class="code" href="namespacearmnn.xhtml#a5b05f3b7208ec7cea3338e30057c0bac">MemorySourceFlags</a><span class="keyword">&gt;</span>(<a class="code" href="namespacearmnn.xhtml#a14fcd7f88d11cea0a018269dca5f9277a1131a914388fac73e5f07b0ba0aad523">MemorySource::Malloc</a>));</div>
<div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160; </div>
<div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;    registry.<a class="code" href="classarmnn_1_1_tensor_handle_factory_registry.xhtml#afae069d084e8541c8970d17d26011ac6">RegisterCopyAndImportFactoryPair</a>(factory-&gt;GetId(), importFactory-&gt;GetId());</div>
<div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;    registry.<a class="code" href="classarmnn_1_1_tensor_handle_factory_registry.xhtml#afae069d084e8541c8970d17d26011ac6">RegisterCopyAndImportFactoryPair</a>(importFactory-&gt;GetId(), factory-&gt;GetId());</div>
<div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160; </div>
<div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;    registry.<a class="code" href="classarmnn_1_1_tensor_handle_factory_registry.xhtml#a958ab0c60b6bfdfba5cc075211edec37">RegisterMemoryManager</a>(memoryManager);</div>
<div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;    registry.<a class="code" href="classarmnn_1_1_tensor_handle_factory_registry.xhtml#a05f82bd846630bb3aa8afe22ef6f15fc">RegisterFactory</a>(std::move(factory));</div>
<div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;    registry.<a class="code" href="classarmnn_1_1_tensor_handle_factory_registry.xhtml#a05f82bd846630bb3aa8afe22ef6f15fc">RegisterFactory</a>(std::move(importFactory));</div>
<div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160; </div>
<div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;    <span class="keywordflow">return</span> std::make_unique&lt;ClWorkloadFactory&gt;(</div>
<div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;        PolymorphicPointerDowncast&lt;ClMemoryManager&gt;(memoryManager), <a class="code" href="classarmnn_1_1_cl_backend.xhtml#a2482b4a7d5bde88e9b963be08017ce2b">CreateBackendSpecificModelContext</a>(modelOptions));</div>
<div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;}</div>
<div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160; </div>
<div class="line"><a name="l00130"></a><span class="lineno"><a class="line" href="classarmnn_1_1_cl_backend.xhtml#a5362d5d9510627da3c9d5db2e669d64a">  130</a></span>&#160;<a class="code" href="classarmnn_1_1_i_backend_internal.xhtml#a72ca1cf423bda4b0a9ffb789627126de">IBackendInternal::IWorkloadFactoryPtr</a> <a class="code" href="classarmnn_1_1_cl_backend.xhtml#a8e19e275c8162e34e6d8d10a9245dbc9">ClBackend::CreateWorkloadFactory</a>(</div>
<div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;    <a class="code" href="classarmnn_1_1_tensor_handle_factory_registry.xhtml">TensorHandleFactoryRegistry</a>&amp; registry,</div>
<div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;    <span class="keyword">const</span> <a class="code" href="namespacearmnn.xhtml#a5b6893cda5b69359a4244c06054da18f">ModelOptions</a>&amp; modelOptions,</div>
<div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;    <a class="code" href="namespacearmnn.xhtml#a5b05f3b7208ec7cea3338e30057c0bac">MemorySourceFlags</a> inputFlags,</div>
<div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;    <a class="code" href="namespacearmnn.xhtml#a5b05f3b7208ec7cea3338e30057c0bac">MemorySourceFlags</a> outputFlags)<span class="keyword"> const</span></div>
<div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;    <span class="comment">// To allow force import if inputFlags/outputFlags are Undefined, set it as Malloc</span></div>
<div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;    <span class="keywordflow">if</span> (inputFlags == <span class="keyword">static_cast&lt;</span><a class="code" href="namespacearmnn.xhtml#a5b05f3b7208ec7cea3338e30057c0bac">MemorySourceFlags</a><span class="keyword">&gt;</span>(<a class="code" href="namespacearmnn.xhtml#a14fcd7f88d11cea0a018269dca5f9277aec0fc0100c4fc1ce4eea230c3dc10360">MemorySource::Undefined</a>))</div>
<div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;    {</div>
<div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;        inputFlags = <span class="keyword">static_cast&lt;</span><a class="code" href="namespacearmnn.xhtml#a5b05f3b7208ec7cea3338e30057c0bac">MemorySourceFlags</a><span class="keyword">&gt;</span>(<a class="code" href="namespacearmnn.xhtml#a14fcd7f88d11cea0a018269dca5f9277a1131a914388fac73e5f07b0ba0aad523">MemorySource::Malloc</a>);</div>
<div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;    }</div>
<div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;    <span class="keywordflow">if</span> (outputFlags == <span class="keyword">static_cast&lt;</span><a class="code" href="namespacearmnn.xhtml#a5b05f3b7208ec7cea3338e30057c0bac">MemorySourceFlags</a><span class="keyword">&gt;</span>(<a class="code" href="namespacearmnn.xhtml#a14fcd7f88d11cea0a018269dca5f9277aec0fc0100c4fc1ce4eea230c3dc10360">MemorySource::Undefined</a>))</div>
<div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;    {</div>
<div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;        outputFlags = <span class="keyword">static_cast&lt;</span><a class="code" href="namespacearmnn.xhtml#a5b05f3b7208ec7cea3338e30057c0bac">MemorySourceFlags</a><span class="keyword">&gt;</span>(<a class="code" href="namespacearmnn.xhtml#a14fcd7f88d11cea0a018269dca5f9277a1131a914388fac73e5f07b0ba0aad523">MemorySource::Malloc</a>);</div>
<div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;    }</div>
<div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;    std::shared_ptr&lt;ClMemoryManager&gt; memoryManager;</div>
<div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;    <span class="keywordflow">if</span> (<a class="code" href="classarmnn_1_1_cl_backend.xhtml#adda2579a4649278c81f18a1d3915b3a0">m_UsingCustomAllocator</a>)</div>
<div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;    {</div>
<div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;        memoryManager = std::make_shared&lt;ClMemoryManager&gt;(<a class="code" href="classarmnn_1_1_cl_backend.xhtml#af1937f516c364d9d99cb502249e7179d">m_CustomAllocator</a>);</div>
<div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;    }</div>
<div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;    <span class="keywordflow">else</span></div>
<div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;    {</div>
<div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;        memoryManager = std::make_shared&lt;ClMemoryManager&gt;(std::make_unique&lt;arm_compute::CLBufferAllocator&gt;());</div>
<div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;    }</div>
<div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160; </div>
<div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;    std::unique_ptr&lt;ITensorHandleFactory&gt; factory = std::make_unique&lt;ClTensorHandleFactory&gt;(memoryManager);</div>
<div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;    std::unique_ptr&lt;ITensorHandleFactory&gt; importFactory = std::make_unique&lt;ClImportTensorHandleFactory&gt;(</div>
<div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160;            inputFlags, outputFlags);</div>
<div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160; </div>
<div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160;    registry.<a class="code" href="classarmnn_1_1_tensor_handle_factory_registry.xhtml#afae069d084e8541c8970d17d26011ac6">RegisterCopyAndImportFactoryPair</a>(factory-&gt;GetId(), importFactory-&gt;GetId());</div>
<div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160;    registry.<a class="code" href="classarmnn_1_1_tensor_handle_factory_registry.xhtml#afae069d084e8541c8970d17d26011ac6">RegisterCopyAndImportFactoryPair</a>(importFactory-&gt;GetId(), factory-&gt;GetId());</div>
<div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160; </div>
<div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160;    registry.<a class="code" href="classarmnn_1_1_tensor_handle_factory_registry.xhtml#a958ab0c60b6bfdfba5cc075211edec37">RegisterMemoryManager</a>(memoryManager);</div>
<div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160;    registry.<a class="code" href="classarmnn_1_1_tensor_handle_factory_registry.xhtml#a05f82bd846630bb3aa8afe22ef6f15fc">RegisterFactory</a>(std::move(factory));</div>
<div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;    registry.<a class="code" href="classarmnn_1_1_tensor_handle_factory_registry.xhtml#a05f82bd846630bb3aa8afe22ef6f15fc">RegisterFactory</a>(std::move(importFactory));</div>
<div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160; </div>
<div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160;    <span class="keywordflow">return</span> std::make_unique&lt;ClWorkloadFactory&gt;(</div>
<div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160;        PolymorphicPointerDowncast&lt;ClMemoryManager&gt;(memoryManager), <a class="code" href="classarmnn_1_1_cl_backend.xhtml#a2482b4a7d5bde88e9b963be08017ce2b">CreateBackendSpecificModelContext</a>(modelOptions));</div>
<div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160;}</div>
<div class="line"><a name="l00169"></a><span class="lineno">  169</span>&#160; </div>
<div class="line"><a name="l00170"></a><span class="lineno"><a class="line" href="classarmnn_1_1_cl_backend.xhtml#a63559c7f206c265f5fff5ffcc8a58e3e">  170</a></span>&#160;std::vector&lt;ITensorHandleFactory::FactoryId&gt; <a class="code" href="classarmnn_1_1_cl_backend.xhtml#a63559c7f206c265f5fff5ffcc8a58e3e">ClBackend::GetHandleFactoryPreferences</a>()<span class="keyword"> const</span></div>
<div class="line"><a name="l00171"></a><span class="lineno">  171</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l00172"></a><span class="lineno">  172</span>&#160;    <span class="keywordflow">return</span> std::vector&lt;ITensorHandleFactory::FactoryId&gt; {<a class="code" href="classarmnn_1_1_cl_tensor_handle_factory.xhtml#acdecb5b442434112c2cc8fc48c0ea922">ClTensorHandleFactory::GetIdStatic</a>(),</div>
<div class="line"><a name="l00173"></a><span class="lineno">  173</span>&#160;                                                         <a class="code" href="classarmnn_1_1_cl_import_tensor_handle_factory.xhtml#acdecb5b442434112c2cc8fc48c0ea922">ClImportTensorHandleFactory::GetIdStatic</a>()};</div>
<div class="line"><a name="l00174"></a><span class="lineno">  174</span>&#160;}</div>
<div class="line"><a name="l00175"></a><span class="lineno">  175</span>&#160; </div>
<div class="line"><a name="l00176"></a><span class="lineno"><a class="line" href="classarmnn_1_1_cl_backend.xhtml#a531177ce89c53c6af616175b0b05e5c0">  176</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="classarmnn_1_1_cl_backend.xhtml#a531177ce89c53c6af616175b0b05e5c0">ClBackend::RegisterTensorHandleFactories</a>(<a class="code" href="classarmnn_1_1_tensor_handle_factory_registry.xhtml">TensorHandleFactoryRegistry</a>&amp; registry)</div>
<div class="line"><a name="l00177"></a><span class="lineno">  177</span>&#160;{</div>
<div class="line"><a name="l00178"></a><span class="lineno">  178</span>&#160;    std::shared_ptr&lt;ClMemoryManager&gt; memoryManager;</div>
<div class="line"><a name="l00179"></a><span class="lineno">  179</span>&#160;    <span class="keywordflow">if</span> (<a class="code" href="classarmnn_1_1_cl_backend.xhtml#adda2579a4649278c81f18a1d3915b3a0">m_UsingCustomAllocator</a>)</div>
<div class="line"><a name="l00180"></a><span class="lineno">  180</span>&#160;    {</div>
<div class="line"><a name="l00181"></a><span class="lineno">  181</span>&#160;        memoryManager = std::make_shared&lt;ClMemoryManager&gt;(<a class="code" href="classarmnn_1_1_cl_backend.xhtml#af1937f516c364d9d99cb502249e7179d">m_CustomAllocator</a>);</div>
<div class="line"><a name="l00182"></a><span class="lineno">  182</span>&#160;    }</div>
<div class="line"><a name="l00183"></a><span class="lineno">  183</span>&#160;    <span class="keywordflow">else</span></div>
<div class="line"><a name="l00184"></a><span class="lineno">  184</span>&#160;    {</div>
<div class="line"><a name="l00185"></a><span class="lineno">  185</span>&#160;        memoryManager = std::make_shared&lt;ClMemoryManager&gt;(std::make_unique&lt;arm_compute::CLBufferAllocator&gt;());</div>
<div class="line"><a name="l00186"></a><span class="lineno">  186</span>&#160;    }</div>
<div class="line"><a name="l00187"></a><span class="lineno">  187</span>&#160; </div>
<div class="line"><a name="l00188"></a><span class="lineno">  188</span>&#160;    std::unique_ptr&lt;ITensorHandleFactory&gt; factory = std::make_unique&lt;ClTensorHandleFactory&gt;(memoryManager);</div>
<div class="line"><a name="l00189"></a><span class="lineno">  189</span>&#160;    std::unique_ptr&lt;ITensorHandleFactory&gt; importFactory = std::make_unique&lt;ClImportTensorHandleFactory&gt;(</div>
<div class="line"><a name="l00190"></a><span class="lineno">  190</span>&#160;        <span class="keyword">static_cast&lt;</span><a class="code" href="namespacearmnn.xhtml#a5b05f3b7208ec7cea3338e30057c0bac">MemorySourceFlags</a><span class="keyword">&gt;</span>(<a class="code" href="namespacearmnn.xhtml#a14fcd7f88d11cea0a018269dca5f9277a1131a914388fac73e5f07b0ba0aad523">MemorySource::Malloc</a>), <span class="keyword">static_cast&lt;</span><a class="code" href="namespacearmnn.xhtml#a5b05f3b7208ec7cea3338e30057c0bac">MemorySourceFlags</a><span class="keyword">&gt;</span>(<a class="code" href="namespacearmnn.xhtml#a14fcd7f88d11cea0a018269dca5f9277a1131a914388fac73e5f07b0ba0aad523">MemorySource::Malloc</a>));</div>
<div class="line"><a name="l00191"></a><span class="lineno">  191</span>&#160; </div>
<div class="line"><a name="l00192"></a><span class="lineno">  192</span>&#160;    registry.<a class="code" href="classarmnn_1_1_tensor_handle_factory_registry.xhtml#afae069d084e8541c8970d17d26011ac6">RegisterCopyAndImportFactoryPair</a>(factory-&gt;GetId(), importFactory-&gt;GetId());</div>
<div class="line"><a name="l00193"></a><span class="lineno">  193</span>&#160;    registry.<a class="code" href="classarmnn_1_1_tensor_handle_factory_registry.xhtml#afae069d084e8541c8970d17d26011ac6">RegisterCopyAndImportFactoryPair</a>(importFactory-&gt;GetId(), factory-&gt;GetId());</div>
<div class="line"><a name="l00194"></a><span class="lineno">  194</span>&#160; </div>
<div class="line"><a name="l00195"></a><span class="lineno">  195</span>&#160;    registry.<a class="code" href="classarmnn_1_1_tensor_handle_factory_registry.xhtml#a958ab0c60b6bfdfba5cc075211edec37">RegisterMemoryManager</a>(memoryManager);</div>
<div class="line"><a name="l00196"></a><span class="lineno">  196</span>&#160;    registry.<a class="code" href="classarmnn_1_1_tensor_handle_factory_registry.xhtml#a05f82bd846630bb3aa8afe22ef6f15fc">RegisterFactory</a>(std::move(factory));</div>
<div class="line"><a name="l00197"></a><span class="lineno">  197</span>&#160;    registry.<a class="code" href="classarmnn_1_1_tensor_handle_factory_registry.xhtml#a05f82bd846630bb3aa8afe22ef6f15fc">RegisterFactory</a>(std::move(importFactory));</div>
<div class="line"><a name="l00198"></a><span class="lineno">  198</span>&#160; </div>
<div class="line"><a name="l00199"></a><span class="lineno">  199</span>&#160;}</div>
<div class="line"><a name="l00200"></a><span class="lineno">  200</span>&#160; </div>
<div class="line"><a name="l00201"></a><span class="lineno"><a class="line" href="classarmnn_1_1_cl_backend.xhtml#a5f7312e595427f00078975f71c61dd8f">  201</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="classarmnn_1_1_cl_backend.xhtml#a531177ce89c53c6af616175b0b05e5c0">ClBackend::RegisterTensorHandleFactories</a>(<a class="code" href="classarmnn_1_1_tensor_handle_factory_registry.xhtml">TensorHandleFactoryRegistry</a>&amp; registry,</div>
<div class="line"><a name="l00202"></a><span class="lineno">  202</span>&#160;                                              <a class="code" href="namespacearmnn.xhtml#a5b05f3b7208ec7cea3338e30057c0bac">MemorySourceFlags</a> inputFlags,</div>
<div class="line"><a name="l00203"></a><span class="lineno">  203</span>&#160;                                              <a class="code" href="namespacearmnn.xhtml#a5b05f3b7208ec7cea3338e30057c0bac">MemorySourceFlags</a> outputFlags)</div>
<div class="line"><a name="l00204"></a><span class="lineno">  204</span>&#160;{</div>
<div class="line"><a name="l00205"></a><span class="lineno">  205</span>&#160;    <span class="comment">// To allow force import if inputFlags/outputFlags are Undefined, set it as Malloc</span></div>
<div class="line"><a name="l00206"></a><span class="lineno">  206</span>&#160;    <span class="keywordflow">if</span> (inputFlags == <span class="keyword">static_cast&lt;</span><a class="code" href="namespacearmnn.xhtml#a5b05f3b7208ec7cea3338e30057c0bac">MemorySourceFlags</a><span class="keyword">&gt;</span>(<a class="code" href="namespacearmnn.xhtml#a14fcd7f88d11cea0a018269dca5f9277aec0fc0100c4fc1ce4eea230c3dc10360">MemorySource::Undefined</a>))</div>
<div class="line"><a name="l00207"></a><span class="lineno">  207</span>&#160;    {</div>
<div class="line"><a name="l00208"></a><span class="lineno">  208</span>&#160;        inputFlags = <span class="keyword">static_cast&lt;</span><a class="code" href="namespacearmnn.xhtml#a5b05f3b7208ec7cea3338e30057c0bac">MemorySourceFlags</a><span class="keyword">&gt;</span>(<a class="code" href="namespacearmnn.xhtml#a14fcd7f88d11cea0a018269dca5f9277a1131a914388fac73e5f07b0ba0aad523">MemorySource::Malloc</a>);</div>
<div class="line"><a name="l00209"></a><span class="lineno">  209</span>&#160;    }</div>
<div class="line"><a name="l00210"></a><span class="lineno">  210</span>&#160;    <span class="keywordflow">if</span> (outputFlags == <span class="keyword">static_cast&lt;</span><a class="code" href="namespacearmnn.xhtml#a5b05f3b7208ec7cea3338e30057c0bac">MemorySourceFlags</a><span class="keyword">&gt;</span>(<a class="code" href="namespacearmnn.xhtml#a14fcd7f88d11cea0a018269dca5f9277aec0fc0100c4fc1ce4eea230c3dc10360">MemorySource::Undefined</a>))</div>
<div class="line"><a name="l00211"></a><span class="lineno">  211</span>&#160;    {</div>
<div class="line"><a name="l00212"></a><span class="lineno">  212</span>&#160;        outputFlags = <span class="keyword">static_cast&lt;</span><a class="code" href="namespacearmnn.xhtml#a5b05f3b7208ec7cea3338e30057c0bac">MemorySourceFlags</a><span class="keyword">&gt;</span>(<a class="code" href="namespacearmnn.xhtml#a14fcd7f88d11cea0a018269dca5f9277a1131a914388fac73e5f07b0ba0aad523">MemorySource::Malloc</a>);</div>
<div class="line"><a name="l00213"></a><span class="lineno">  213</span>&#160;    }</div>
<div class="line"><a name="l00214"></a><span class="lineno">  214</span>&#160;    std::shared_ptr&lt;ClMemoryManager&gt; memoryManager;</div>
<div class="line"><a name="l00215"></a><span class="lineno">  215</span>&#160;    <span class="keywordflow">if</span> (<a class="code" href="classarmnn_1_1_cl_backend.xhtml#adda2579a4649278c81f18a1d3915b3a0">m_UsingCustomAllocator</a>)</div>
<div class="line"><a name="l00216"></a><span class="lineno">  216</span>&#160;    {</div>
<div class="line"><a name="l00217"></a><span class="lineno">  217</span>&#160;        memoryManager = std::make_shared&lt;ClMemoryManager&gt;(<a class="code" href="classarmnn_1_1_cl_backend.xhtml#af1937f516c364d9d99cb502249e7179d">m_CustomAllocator</a>);</div>
<div class="line"><a name="l00218"></a><span class="lineno">  218</span>&#160;    }</div>
<div class="line"><a name="l00219"></a><span class="lineno">  219</span>&#160;    <span class="keywordflow">else</span></div>
<div class="line"><a name="l00220"></a><span class="lineno">  220</span>&#160;    {</div>
<div class="line"><a name="l00221"></a><span class="lineno">  221</span>&#160;        memoryManager = std::make_shared&lt;ClMemoryManager&gt;(std::make_unique&lt;arm_compute::CLBufferAllocator&gt;());</div>
<div class="line"><a name="l00222"></a><span class="lineno">  222</span>&#160;    }</div>
<div class="line"><a name="l00223"></a><span class="lineno">  223</span>&#160; </div>
<div class="line"><a name="l00224"></a><span class="lineno">  224</span>&#160;    std::unique_ptr&lt;ITensorHandleFactory&gt; factory = std::make_unique&lt;ClTensorHandleFactory&gt;(memoryManager);</div>
<div class="line"><a name="l00225"></a><span class="lineno">  225</span>&#160;    std::unique_ptr&lt;ITensorHandleFactory&gt; importFactory = std::make_unique&lt;ClImportTensorHandleFactory&gt;(</div>
<div class="line"><a name="l00226"></a><span class="lineno">  226</span>&#160;            inputFlags, outputFlags);</div>
<div class="line"><a name="l00227"></a><span class="lineno">  227</span>&#160; </div>
<div class="line"><a name="l00228"></a><span class="lineno">  228</span>&#160;    registry.<a class="code" href="classarmnn_1_1_tensor_handle_factory_registry.xhtml#afae069d084e8541c8970d17d26011ac6">RegisterCopyAndImportFactoryPair</a>(factory-&gt;GetId(), importFactory-&gt;GetId());</div>
<div class="line"><a name="l00229"></a><span class="lineno">  229</span>&#160;    registry.<a class="code" href="classarmnn_1_1_tensor_handle_factory_registry.xhtml#afae069d084e8541c8970d17d26011ac6">RegisterCopyAndImportFactoryPair</a>(importFactory-&gt;GetId(), factory-&gt;GetId());</div>
<div class="line"><a name="l00230"></a><span class="lineno">  230</span>&#160; </div>
<div class="line"><a name="l00231"></a><span class="lineno">  231</span>&#160;    registry.<a class="code" href="classarmnn_1_1_tensor_handle_factory_registry.xhtml#a958ab0c60b6bfdfba5cc075211edec37">RegisterMemoryManager</a>(memoryManager);</div>
<div class="line"><a name="l00232"></a><span class="lineno">  232</span>&#160;    registry.<a class="code" href="classarmnn_1_1_tensor_handle_factory_registry.xhtml#a05f82bd846630bb3aa8afe22ef6f15fc">RegisterFactory</a>(std::move(factory));</div>
<div class="line"><a name="l00233"></a><span class="lineno">  233</span>&#160;    registry.<a class="code" href="classarmnn_1_1_tensor_handle_factory_registry.xhtml#a05f82bd846630bb3aa8afe22ef6f15fc">RegisterFactory</a>(std::move(importFactory));</div>
<div class="line"><a name="l00234"></a><span class="lineno">  234</span>&#160;}</div>
<div class="line"><a name="l00235"></a><span class="lineno">  235</span>&#160; </div>
<div class="line"><a name="l00236"></a><span class="lineno"><a class="line" href="classarmnn_1_1_cl_backend.xhtml#a801cf3170dc777aca3e6f926d1bd70a5">  236</a></span>&#160;<a class="code" href="classarmnn_1_1_i_backend_internal.xhtml#ada6d56575c0fe53cf23c7ae4610c6367">IBackendInternal::IBackendContextPtr</a> <a class="code" href="classarmnn_1_1_cl_backend.xhtml#a801cf3170dc777aca3e6f926d1bd70a5">ClBackend::CreateBackendContext</a>(<span class="keyword">const</span> <a class="code" href="structarmnn_1_1_i_runtime_1_1_creation_options.xhtml">IRuntime::CreationOptions</a>&amp; options)<span class="keyword"> const</span></div>
<div class="line"><a name="l00237"></a><span class="lineno">  237</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l00238"></a><span class="lineno">  238</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="classarmnn_1_1_i_backend_internal.xhtml#ada6d56575c0fe53cf23c7ae4610c6367">IBackendContextPtr</a>{<span class="keyword">new</span> <a class="code" href="classarmnn_1_1_cl_backend_context.xhtml">ClBackendContext</a>{options}};</div>
<div class="line"><a name="l00239"></a><span class="lineno">  239</span>&#160;}</div>
<div class="line"><a name="l00240"></a><span class="lineno">  240</span>&#160; </div>
<div class="line"><a name="l00241"></a><span class="lineno"><a class="line" href="classarmnn_1_1_cl_backend.xhtml#a68c2ef244261cc9649799284774af132">  241</a></span>&#160;<a class="code" href="classarmnn_1_1_i_backend_internal.xhtml#ae44a82b0e485e551a0f77150b1076e06">IBackendInternal::IBackendProfilingContextPtr</a> <a class="code" href="classarmnn_1_1_cl_backend.xhtml#a68c2ef244261cc9649799284774af132">ClBackend::CreateBackendProfilingContext</a>(</div>
<div class="line"><a name="l00242"></a><span class="lineno">  242</span>&#160;    <span class="keyword">const</span> <a class="code" href="structarmnn_1_1_i_runtime_1_1_creation_options.xhtml">IRuntime::CreationOptions</a>&amp;, <a class="code" href="classarmnn_1_1_i_backend_internal.xhtml#a335964abd41c91f7e6ef5c65865a7b98">IBackendProfilingPtr</a>&amp;)</div>
<div class="line"><a name="l00243"></a><span class="lineno">  243</span>&#160;{</div>
<div class="line"><a name="l00244"></a><span class="lineno">  244</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="classarmnn_1_1_i_backend_internal.xhtml#ae44a82b0e485e551a0f77150b1076e06">IBackendProfilingContextPtr</a>{};</div>
<div class="line"><a name="l00245"></a><span class="lineno">  245</span>&#160;}</div>
<div class="line"><a name="l00246"></a><span class="lineno">  246</span>&#160; </div>
<div class="line"><a name="l00247"></a><span class="lineno"><a class="line" href="classarmnn_1_1_cl_backend.xhtml#a2482b4a7d5bde88e9b963be08017ce2b">  247</a></span>&#160;<a class="code" href="classarmnn_1_1_i_backend_internal.xhtml#a4d0238968a7643dbb170547dd22bba54">IBackendInternal::IBackendSpecificModelContextPtr</a> <a class="code" href="classarmnn_1_1_cl_backend.xhtml#a2482b4a7d5bde88e9b963be08017ce2b">ClBackend::CreateBackendSpecificModelContext</a>(</div>
<div class="line"><a name="l00248"></a><span class="lineno">  248</span>&#160;    <span class="keyword">const</span> <a class="code" href="namespacearmnn.xhtml#a5b6893cda5b69359a4244c06054da18f">ModelOptions</a>&amp; modelOptions)<span class="keyword"> const</span></div>
<div class="line"><a name="l00249"></a><span class="lineno">  249</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l00250"></a><span class="lineno">  250</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="classarmnn_1_1_i_backend_internal.xhtml#a4d0238968a7643dbb170547dd22bba54">IBackendSpecificModelContextPtr</a>{<span class="keyword">new</span> <a class="code" href="classarmnn_1_1_cl_backend_model_context.xhtml">ClBackendModelContext</a>{modelOptions}};</div>
<div class="line"><a name="l00251"></a><span class="lineno">  251</span>&#160;}</div>
<div class="line"><a name="l00252"></a><span class="lineno">  252</span>&#160; </div>
<div class="line"><a name="l00253"></a><span class="lineno"><a class="line" href="classarmnn_1_1_cl_backend.xhtml#a93d4285a3ea5e4e3b35578484d889daa">  253</a></span>&#160;<a class="code" href="classarmnn_1_1_i_backend_internal.xhtml#a11fa919c11fe46aad613b2e960fcfe90">IBackendInternal::ILayerSupportSharedPtr</a> <a class="code" href="classarmnn_1_1_cl_backend.xhtml#a93d4285a3ea5e4e3b35578484d889daa">ClBackend::GetLayerSupport</a>()<span class="keyword"> const</span></div>
<div class="line"><a name="l00254"></a><span class="lineno">  254</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l00255"></a><span class="lineno">  255</span>&#160;    <span class="keyword">static</span> <a class="code" href="classarmnn_1_1_i_backend_internal.xhtml#a11fa919c11fe46aad613b2e960fcfe90">ILayerSupportSharedPtr</a> layerSupport</div>
<div class="line"><a name="l00256"></a><span class="lineno">  256</span>&#160;        {</div>
<div class="line"><a name="l00257"></a><span class="lineno">  257</span>&#160;            <span class="keyword">new</span> <a class="code" href="classarmnn_1_1_cl_layer_support.xhtml">ClLayerSupport</a>(<a class="code" href="classarmnn_1_1_i_backend_internal.xhtml#a4d0238968a7643dbb170547dd22bba54">IBackendInternal::IBackendSpecificModelContextPtr</a>{})</div>
<div class="line"><a name="l00258"></a><span class="lineno">  258</span>&#160;        };</div>
<div class="line"><a name="l00259"></a><span class="lineno">  259</span>&#160;    <span class="keywordflow">return</span> layerSupport;</div>
<div class="line"><a name="l00260"></a><span class="lineno">  260</span>&#160;}</div>
<div class="line"><a name="l00261"></a><span class="lineno">  261</span>&#160; </div>
<div class="line"><a name="l00262"></a><span class="lineno"><a class="line" href="classarmnn_1_1_cl_backend.xhtml#a9e458b98037dbb048877d0fc3fdbd17d">  262</a></span>&#160;<a class="code" href="classarmnn_1_1_i_backend_internal.xhtml#a11fa919c11fe46aad613b2e960fcfe90">IBackendInternal::ILayerSupportSharedPtr</a> <a class="code" href="classarmnn_1_1_cl_backend.xhtml#a93d4285a3ea5e4e3b35578484d889daa">ClBackend::GetLayerSupport</a>(<span class="keyword">const</span> <a class="code" href="namespacearmnn.xhtml#a5b6893cda5b69359a4244c06054da18f">ModelOptions</a>&amp; modelOptions)<span class="keyword"> const</span></div>
<div class="line"><a name="l00263"></a><span class="lineno">  263</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l00264"></a><span class="lineno">  264</span>&#160;    <span class="keyword">static</span> <a class="code" href="classarmnn_1_1_i_backend_internal.xhtml#a11fa919c11fe46aad613b2e960fcfe90">ILayerSupportSharedPtr</a> layerSupport</div>
<div class="line"><a name="l00265"></a><span class="lineno">  265</span>&#160;    {</div>
<div class="line"><a name="l00266"></a><span class="lineno">  266</span>&#160;        <span class="keyword">new</span> <a class="code" href="classarmnn_1_1_cl_layer_support.xhtml">ClLayerSupport</a>(<a class="code" href="classarmnn_1_1_cl_backend.xhtml#a2482b4a7d5bde88e9b963be08017ce2b">CreateBackendSpecificModelContext</a>(modelOptions))</div>
<div class="line"><a name="l00267"></a><span class="lineno">  267</span>&#160;    };</div>
<div class="line"><a name="l00268"></a><span class="lineno">  268</span>&#160;    <span class="keywordflow">return</span> layerSupport;</div>
<div class="line"><a name="l00269"></a><span class="lineno">  269</span>&#160;}</div>
<div class="line"><a name="l00270"></a><span class="lineno">  270</span>&#160; </div>
<div class="line"><a name="l00271"></a><span class="lineno"><a class="line" href="classarmnn_1_1_cl_backend.xhtml#afb75bad43612f5314622c4fa8a16e63d">  271</a></span>&#160;std::unique_ptr&lt;ICustomAllocator&gt; <a class="code" href="classarmnn_1_1_cl_backend.xhtml#afb75bad43612f5314622c4fa8a16e63d">ClBackend::GetDefaultAllocator</a>()<span class="keyword"> const</span></div>
<div class="line"><a name="l00272"></a><span class="lineno">  272</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l00273"></a><span class="lineno">  273</span>&#160;    <span class="keywordflow">return</span> std::make_unique&lt;ClBackendDefaultAllocator&gt;();</div>
<div class="line"><a name="l00274"></a><span class="lineno">  274</span>&#160;}</div>
<div class="line"><a name="l00275"></a><span class="lineno">  275</span>&#160; </div>
<div class="line"><a name="l00276"></a><span class="lineno"><a class="line" href="classarmnn_1_1_cl_backend.xhtml#a339efc194a1738cd93fcdde4d948a5cd">  276</a></span>&#160;<a class="code" href="classarmnn_1_1_optimization_views.xhtml">OptimizationViews</a> <a class="code" href="classarmnn_1_1_cl_backend.xhtml#a339efc194a1738cd93fcdde4d948a5cd">ClBackend::OptimizeSubgraphView</a>(<span class="keyword">const</span> <a class="code" href="classarmnn_1_1_subgraph_view.xhtml">SubgraphView</a>&amp; subgraph,</div>
<div class="line"><a name="l00277"></a><span class="lineno">  277</span>&#160;                                                  <span class="keyword">const</span> <a class="code" href="namespacearmnn.xhtml#a5b6893cda5b69359a4244c06054da18f">ModelOptions</a>&amp; modelOptions)<span class="keyword"> const</span></div>
<div class="line"><a name="l00278"></a><span class="lineno">  278</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l00279"></a><span class="lineno">  279</span>&#160;    <a class="code" href="classarmnn_1_1_optimization_views.xhtml">OptimizationViews</a> optimizationViews(modelOptions);</div>
<div class="line"><a name="l00280"></a><span class="lineno">  280</span>&#160; </div>
<div class="line"><a name="l00281"></a><span class="lineno">  281</span>&#160;    <span class="keyword">auto</span> it = subgraph.<a class="code" href="classarmnn_1_1_subgraph_view.xhtml#a0761bda72b62372d1495cbe9771a75a9">endIConnectable</a>();</div>
<div class="line"><a name="l00282"></a><span class="lineno">  282</span>&#160;    <span class="keywordtype">bool</span> isFastMathEnabled = <span class="keyword">false</span>;</div>
<div class="line"><a name="l00283"></a><span class="lineno">  283</span>&#160;    std::map&lt;LayerGuid, Layer*&gt; untouched;</div>
<div class="line"><a name="l00284"></a><span class="lineno">  284</span>&#160; </div>
<div class="line"><a name="l00285"></a><span class="lineno">  285</span>&#160;    <span class="keywordflow">while</span> (it != subgraph.<a class="code" href="classarmnn_1_1_subgraph_view.xhtml#ae7f023c08e38703a2b8286013885b409">beginIConnectable</a>())</div>
<div class="line"><a name="l00286"></a><span class="lineno">  286</span>&#160;    {</div>
<div class="line"><a name="l00287"></a><span class="lineno">  287</span>&#160;        --it;</div>
<div class="line"><a name="l00288"></a><span class="lineno">  288</span>&#160;        <a class="code" href="classarmnn_1_1_layer.xhtml">Layer</a>&amp; base = *(PolymorphicDowncast&lt;Layer*&gt;(*it));</div>
<div class="line"><a name="l00289"></a><span class="lineno">  289</span>&#160;        untouched.insert({base.<a class="code" href="classarmnn_1_1_layer.xhtml#a8dc12f0ee5b232d397bd18ced1a72a64">GetGuid</a>(), &amp;base});</div>
<div class="line"><a name="l00290"></a><span class="lineno">  290</span>&#160;    }</div>
<div class="line"><a name="l00291"></a><span class="lineno">  291</span>&#160; </div>
<div class="line"><a name="l00292"></a><span class="lineno">  292</span>&#160;    it = subgraph.<a class="code" href="classarmnn_1_1_subgraph_view.xhtml#a0761bda72b62372d1495cbe9771a75a9">endIConnectable</a>();</div>
<div class="line"><a name="l00293"></a><span class="lineno">  293</span>&#160;<span class="preprocessor">#if defined(ARMCOMPUTECL_ENABLED)</span></div>
<div class="line"><a name="l00294"></a><span class="lineno">  294</span>&#160;    <a class="code" href="classarmnn_1_1_i_backend_internal.xhtml#a4d0238968a7643dbb170547dd22bba54">IBackendInternal::IBackendSpecificModelContextPtr</a> modelContextPtr = <a class="code" href="classarmnn_1_1_cl_backend.xhtml#a2482b4a7d5bde88e9b963be08017ce2b">CreateBackendSpecificModelContext</a>(modelOptions);</div>
<div class="line"><a name="l00295"></a><span class="lineno">  295</span>&#160; </div>
<div class="line"><a name="l00296"></a><span class="lineno">  296</span>&#160;    <span class="keywordflow">if</span> (modelContextPtr)</div>
<div class="line"><a name="l00297"></a><span class="lineno">  297</span>&#160;    {</div>
<div class="line"><a name="l00298"></a><span class="lineno">  298</span>&#160;        <span class="keyword">auto</span> clModelOptions = <span class="keyword">dynamic_cast&lt;</span><a class="code" href="classarmnn_1_1_cl_backend_model_context.xhtml">ClBackendModelContext</a>*<span class="keyword">&gt;</span>(modelContextPtr.get());</div>
<div class="line"><a name="l00299"></a><span class="lineno">  299</span>&#160;        <span class="keywordflow">if</span> (clModelOptions)</div>
<div class="line"><a name="l00300"></a><span class="lineno">  300</span>&#160;        {</div>
<div class="line"><a name="l00301"></a><span class="lineno">  301</span>&#160;            isFastMathEnabled = clModelOptions-&gt;<a class="code" href="classarmnn_1_1_cl_backend_model_context.xhtml#abfe9aa4fa74aca0f9a925752bbbb0f79">IsFastMathEnabled</a>();</div>
<div class="line"><a name="l00302"></a><span class="lineno">  302</span>&#160;        }</div>
<div class="line"><a name="l00303"></a><span class="lineno">  303</span>&#160;    }</div>
<div class="line"><a name="l00304"></a><span class="lineno">  304</span>&#160;<span class="preprocessor">#endif</span></div>
<div class="line"><a name="l00305"></a><span class="lineno">  305</span>&#160;    <span class="keywordflow">while</span> (it != subgraph.<a class="code" href="classarmnn_1_1_subgraph_view.xhtml#ae7f023c08e38703a2b8286013885b409">beginIConnectable</a>())</div>
<div class="line"><a name="l00306"></a><span class="lineno">  306</span>&#160;    {</div>
<div class="line"><a name="l00307"></a><span class="lineno">  307</span>&#160;        --it;</div>
<div class="line"><a name="l00308"></a><span class="lineno">  308</span>&#160;        <a class="code" href="classarmnn_1_1_layer.xhtml">Layer</a>&amp; base = *(PolymorphicDowncast&lt;Layer*&gt;(*it));</div>
<div class="line"><a name="l00309"></a><span class="lineno">  309</span>&#160; </div>
<div class="line"><a name="l00310"></a><span class="lineno">  310</span>&#160;        <span class="comment">// Fuse activation into previous layer if supported by backend</span></div>
<div class="line"><a name="l00311"></a><span class="lineno">  311</span>&#160;        <span class="keywordflow">if</span> ((base.<a class="code" href="classarmnn_1_1_layer.xhtml#ad8e15c530c929ab823d89ae9fd2d3f11">GetType</a>() == <a class="code" href="namespacearmnn.xhtml#a56943a0946e5f15e5e58054b8e7a04a4af97adbfc88b7012a0243215b1076e7e7">LayerType::DepthwiseConvolution2d</a> || base.<a class="code" href="classarmnn_1_1_layer.xhtml#ad8e15c530c929ab823d89ae9fd2d3f11">GetType</a>() == <a class="code" href="namespacearmnn.xhtml#a56943a0946e5f15e5e58054b8e7a04a4adb033d2f81b68f9a17e8f62de69fed4a">LayerType::Convolution2d</a></div>
<div class="line"><a name="l00312"></a><span class="lineno">  312</span>&#160;            || base.<a class="code" href="classarmnn_1_1_layer.xhtml#ad8e15c530c929ab823d89ae9fd2d3f11">GetType</a>() == <a class="code" href="namespacearmnn.xhtml#a56943a0946e5f15e5e58054b8e7a04a4ae4743c3ec15d1d84169b17264634692e">LayerType::BatchNormalization</a> || base.<a class="code" href="classarmnn_1_1_layer.xhtml#ad8e15c530c929ab823d89ae9fd2d3f11">GetType</a>() == <a class="code" href="namespacearmnn.xhtml#a56943a0946e5f15e5e58054b8e7a04a4acab78faff25393e9defd1911cb58133e">LayerType::FullyConnected</a></div>
<div class="line"><a name="l00313"></a><span class="lineno">  313</span>&#160;            || base.<a class="code" href="classarmnn_1_1_layer.xhtml#ad8e15c530c929ab823d89ae9fd2d3f11">GetType</a>() == <a class="code" href="namespacearmnn.xhtml#a56943a0946e5f15e5e58054b8e7a04a4a7c5531bbefed0945814f874baf9e0e0f">LayerType::Addition</a> || base.<a class="code" href="classarmnn_1_1_layer.xhtml#ad8e15c530c929ab823d89ae9fd2d3f11">GetType</a>() == <a class="code" href="namespacearmnn.xhtml#a56943a0946e5f15e5e58054b8e7a04a4a27d1a1f7b7c2180e5b20ce9e3d00e2dd">LayerType::Multiplication</a></div>
<div class="line"><a name="l00314"></a><span class="lineno">  314</span>&#160;            || base.<a class="code" href="classarmnn_1_1_layer.xhtml#ad8e15c530c929ab823d89ae9fd2d3f11">GetType</a>() == <a class="code" href="namespacearmnn.xhtml#a56943a0946e5f15e5e58054b8e7a04a4a6eb8b8b560161603402c0238b3a7d8b0">LayerType::Subtraction</a> || base.<a class="code" href="classarmnn_1_1_layer.xhtml#ad8e15c530c929ab823d89ae9fd2d3f11">GetType</a>() == <a class="code" href="namespacearmnn.xhtml#a56943a0946e5f15e5e58054b8e7a04a4a3025cdaab2deb0bb2cd642449e570833">LayerType::Division</a>)</div>
<div class="line"><a name="l00315"></a><span class="lineno">  315</span>&#160;            &amp;&amp; (base.<a class="code" href="classarmnn_1_1_layer.xhtml#aefb14147290b6b928c5fc924ba035acc">GetAdditionalInformation</a>&lt;<a class="code" href="structarmnn_1_1_activation_descriptor.xhtml">ActivationDescriptor</a>&gt;() == <span class="keyword">nullptr</span>))</div>
<div class="line"><a name="l00316"></a><span class="lineno">  316</span>&#160;        {</div>
<div class="line"><a name="l00317"></a><span class="lineno">  317</span>&#160;            <span class="keywordflow">for</span> (<span class="keyword">auto</span> output = base.<a class="code" href="classarmnn_1_1_layer.xhtml#a817d4be6dd88f532d36f51748ec14185">BeginOutputSlots</a>(); output != base.<a class="code" href="classarmnn_1_1_layer.xhtml#a55f76d98fcd2f5cdac3e2b14536cb7ab">EndOutputSlots</a>(); ++output)</div>
<div class="line"><a name="l00318"></a><span class="lineno">  318</span>&#160;            {</div>
<div class="line"><a name="l00319"></a><span class="lineno">  319</span>&#160;                <span class="keywordflow">if</span> (output-&gt;GetNumConnections() == 1)</div>
<div class="line"><a name="l00320"></a><span class="lineno">  320</span>&#160;                {</div>
<div class="line"><a name="l00321"></a><span class="lineno">  321</span>&#160;                    <span class="keywordflow">for</span> (<span class="keyword">auto</span>&amp;&amp; childInput : output-&gt;GetConnections())</div>
<div class="line"><a name="l00322"></a><span class="lineno">  322</span>&#160;                    {</div>
<div class="line"><a name="l00323"></a><span class="lineno">  323</span>&#160;                        <span class="keywordflow">if</span> ((childInput-&gt;GetOwningLayer().GetType() == <a class="code" href="namespacearmnn.xhtml#a56943a0946e5f15e5e58054b8e7a04a4aa9a62e70841c4d06dd16306a85700d36">LayerType::Activation</a>) &amp;&amp;</div>
<div class="line"><a name="l00324"></a><span class="lineno">  324</span>&#160;                            (checkDataTypeInputandOutput(childInput-&gt;GetOwningLayer())))</div>
<div class="line"><a name="l00325"></a><span class="lineno">  325</span>&#160;                        {</div>
<div class="line"><a name="l00326"></a><span class="lineno">  326</span>&#160;                            <a class="code" href="classarmnn_1_1_layer.xhtml">Layer</a>&amp; child = childInput-&gt;GetOwningLayer();</div>
<div class="line"><a name="l00327"></a><span class="lineno">  327</span>&#160; </div>
<div class="line"><a name="l00328"></a><span class="lineno">  328</span>&#160;                            <span class="keyword">auto</span>* activationLayer = PolymorphicDowncast&lt;ActivationLayer*&gt;(&amp;child);</div>
<div class="line"><a name="l00329"></a><span class="lineno">  329</span>&#160; </div>
<div class="line"><a name="l00330"></a><span class="lineno">  330</span>&#160;                            <span class="keyword">const</span> std::string name = std::string(<span class="stringliteral">&quot;fused-&quot;</span>) + child.<a class="code" href="classarmnn_1_1_layer.xhtml#a7ddf0cf6f620d59c10e63495ace795d0">GetName</a>() + std::string(<span class="stringliteral">&quot;-into-&quot;</span>) +</div>
<div class="line"><a name="l00331"></a><span class="lineno">  331</span>&#160;                                                     base.<a class="code" href="classarmnn_1_1_layer.xhtml#a7ddf0cf6f620d59c10e63495ace795d0">GetName</a>();</div>
<div class="line"><a name="l00332"></a><span class="lineno">  332</span>&#160; </div>
<div class="line"><a name="l00333"></a><span class="lineno">  333</span>&#160;                            <span class="comment">// Get params from activation layer</span></div>
<div class="line"><a name="l00334"></a><span class="lineno">  334</span>&#160;                            <a class="code" href="structarmnn_1_1_activation_descriptor.xhtml">ActivationDescriptor</a> activationDesc = activationLayer-&gt;GetParameters();</div>
<div class="line"><a name="l00335"></a><span class="lineno">  335</span>&#160; </div>
<div class="line"><a name="l00336"></a><span class="lineno">  336</span>&#160;                            <span class="keywordflow">if</span> (base.<a class="code" href="classarmnn_1_1_layer.xhtml#ad8e15c530c929ab823d89ae9fd2d3f11">GetType</a>() == <a class="code" href="namespacearmnn.xhtml#a56943a0946e5f15e5e58054b8e7a04a4adb033d2f81b68f9a17e8f62de69fed4a">LayerType::Convolution2d</a>)</div>
<div class="line"><a name="l00337"></a><span class="lineno">  337</span>&#160;                            {</div>
<div class="line"><a name="l00338"></a><span class="lineno">  338</span>&#160;                                <a class="code" href="classarmnn_1_1_convolution2d_layer.xhtml">Convolution2dLayer</a>* baseLayer = PolymorphicDowncast&lt;Convolution2dLayer*&gt;(&amp;base);</div>
<div class="line"><a name="l00339"></a><span class="lineno">  339</span>&#160; </div>
<div class="line"><a name="l00340"></a><span class="lineno">  340</span>&#160;                                <a class="code" href="classarmnn_1_1_optional.xhtml">Optional&lt;TensorInfo&gt;</a> biases;</div>
<div class="line"><a name="l00341"></a><span class="lineno">  341</span>&#160; </div>
<div class="line"><a name="l00342"></a><span class="lineno">  342</span>&#160;                                <span class="keywordflow">if</span> (baseLayer-&gt;<a class="code" href="classarmnn_1_1_layer_with_parameters.xhtml#afa3e8a8f23589b1eaddbe203825bbdcf">GetParameters</a>().<a class="code" href="structarmnn_1_1_convolution2d_descriptor.xhtml#aea202e14d8874cefd9a0f778022b7e25">m_BiasEnabled</a>)</div>
<div class="line"><a name="l00343"></a><span class="lineno">  343</span>&#160;                                {</div>
<div class="line"><a name="l00344"></a><span class="lineno">  344</span>&#160;                                    biases = baseLayer-&gt;<a class="code" href="classarmnn_1_1_layer.xhtml#acf8b8e23bf647836592982f97088d375">GetInputSlot</a>(2).<a class="code" href="classarmnn_1_1_input_slot.xhtml#a9effd325a6d512a3f8ff4bd207d53255">GetConnectedOutputSlot</a>()-&gt;<a class="code" href="classarmnn_1_1_output_slot.xhtml#ada2ad7d1caeeb4ef6195c8925fad6a65">GetTensorInfo</a>();</div>
<div class="line"><a name="l00345"></a><span class="lineno">  345</span>&#160;                                }</div>
<div class="line"><a name="l00346"></a><span class="lineno">  346</span>&#160; </div>
<div class="line"><a name="l00347"></a><span class="lineno">  347</span>&#160;                                <a class="code" href="namespacearmnn.xhtml#a67a0db04d321a74b7e7fcfd3f1a3f70b">arm_compute::Status</a> status = <a class="code" href="namespacearmnn.xhtml#a61cf0886d4c1a6e24c101a57ccb2ec31">ClConvolution2dWorkloadValidate</a>(</div>
<div class="line"><a name="l00348"></a><span class="lineno">  348</span>&#160;                                        baseLayer-&gt;<a class="code" href="classarmnn_1_1_layer.xhtml#acf8b8e23bf647836592982f97088d375">GetInputSlot</a>(0).<a class="code" href="classarmnn_1_1_input_slot.xhtml#a9effd325a6d512a3f8ff4bd207d53255">GetConnectedOutputSlot</a>()-&gt;<a class="code" href="classarmnn_1_1_output_slot.xhtml#ada2ad7d1caeeb4ef6195c8925fad6a65">GetTensorInfo</a>(),</div>
<div class="line"><a name="l00349"></a><span class="lineno">  349</span>&#160;                                        activationLayer-&gt;GetInputSlot(0).GetConnectedOutputSlot()-&gt;GetTensorInfo(),</div>
<div class="line"><a name="l00350"></a><span class="lineno">  350</span>&#160;                                        baseLayer-&gt;<a class="code" href="classarmnn_1_1_layer_with_parameters.xhtml#afa3e8a8f23589b1eaddbe203825bbdcf">GetParameters</a>(),</div>
<div class="line"><a name="l00351"></a><span class="lineno">  351</span>&#160;                                        baseLayer-&gt;<a class="code" href="classarmnn_1_1_layer.xhtml#acf8b8e23bf647836592982f97088d375">GetInputSlot</a>(1).<a class="code" href="classarmnn_1_1_input_slot.xhtml#a9effd325a6d512a3f8ff4bd207d53255">GetConnectedOutputSlot</a>()-&gt;<a class="code" href="classarmnn_1_1_output_slot.xhtml#ada2ad7d1caeeb4ef6195c8925fad6a65">GetTensorInfo</a>(),</div>
<div class="line"><a name="l00352"></a><span class="lineno">  352</span>&#160;                                        biases,</div>
<div class="line"><a name="l00353"></a><span class="lineno">  353</span>&#160;                                        isFastMathEnabled,</div>
<div class="line"><a name="l00354"></a><span class="lineno">  354</span>&#160;                                        &amp;activationDesc);</div>
<div class="line"><a name="l00355"></a><span class="lineno">  355</span>&#160; </div>
<div class="line"><a name="l00356"></a><span class="lineno">  356</span>&#160;                                <span class="keywordflow">if</span> (status)</div>
<div class="line"><a name="l00357"></a><span class="lineno">  357</span>&#160;                                {</div>
<div class="line"><a name="l00358"></a><span class="lineno">  358</span>&#160;                                    FuseConvolution2dLayer&lt;Convolution2dLayer&gt;(optimizationViews,</div>
<div class="line"><a name="l00359"></a><span class="lineno">  359</span>&#160;                                                                               baseLayer,</div>
<div class="line"><a name="l00360"></a><span class="lineno">  360</span>&#160;                                                                               activationLayer,</div>
<div class="line"><a name="l00361"></a><span class="lineno">  361</span>&#160;                                                                               activationDesc,</div>
<div class="line"><a name="l00362"></a><span class="lineno">  362</span>&#160;                                                                               name);</div>
<div class="line"><a name="l00363"></a><span class="lineno">  363</span>&#160;                                    untouched.erase(baseLayer-&gt;<a class="code" href="classarmnn_1_1_layer.xhtml#a8dc12f0ee5b232d397bd18ced1a72a64">GetGuid</a>());</div>
<div class="line"><a name="l00364"></a><span class="lineno">  364</span>&#160;                                    untouched.erase(activationLayer-&gt;GetGuid());</div>
<div class="line"><a name="l00365"></a><span class="lineno">  365</span>&#160;                                }</div>
<div class="line"><a name="l00366"></a><span class="lineno">  366</span>&#160;                            }</div>
<div class="line"><a name="l00367"></a><span class="lineno">  367</span>&#160;                            <span class="keywordflow">else</span> <span class="keywordflow">if</span> (base.<a class="code" href="classarmnn_1_1_layer.xhtml#ad8e15c530c929ab823d89ae9fd2d3f11">GetType</a>() == <a class="code" href="namespacearmnn.xhtml#a56943a0946e5f15e5e58054b8e7a04a4af97adbfc88b7012a0243215b1076e7e7">LayerType::DepthwiseConvolution2d</a>)</div>
<div class="line"><a name="l00368"></a><span class="lineno">  368</span>&#160;                            {</div>
<div class="line"><a name="l00369"></a><span class="lineno">  369</span>&#160;                                <a class="code" href="classarmnn_1_1_depthwise_convolution2d_layer.xhtml">DepthwiseConvolution2dLayer</a>* baseLayer =</div>
<div class="line"><a name="l00370"></a><span class="lineno">  370</span>&#160;                                        PolymorphicDowncast&lt;DepthwiseConvolution2dLayer*&gt;(&amp;base);</div>
<div class="line"><a name="l00371"></a><span class="lineno">  371</span>&#160; </div>
<div class="line"><a name="l00372"></a><span class="lineno">  372</span>&#160;                                <a class="code" href="classarmnn_1_1_optional.xhtml">Optional&lt;TensorInfo&gt;</a> biases;</div>
<div class="line"><a name="l00373"></a><span class="lineno">  373</span>&#160; </div>
<div class="line"><a name="l00374"></a><span class="lineno">  374</span>&#160;                                <span class="keywordflow">if</span> (baseLayer-&gt;<a class="code" href="classarmnn_1_1_layer_with_parameters.xhtml#afa3e8a8f23589b1eaddbe203825bbdcf">GetParameters</a>().<a class="code" href="structarmnn_1_1_depthwise_convolution2d_descriptor.xhtml#aea202e14d8874cefd9a0f778022b7e25">m_BiasEnabled</a>)</div>
<div class="line"><a name="l00375"></a><span class="lineno">  375</span>&#160;                                {</div>
<div class="line"><a name="l00376"></a><span class="lineno">  376</span>&#160;                                    biases = baseLayer-&gt;<a class="code" href="classarmnn_1_1_layer.xhtml#acf8b8e23bf647836592982f97088d375">GetInputSlot</a>(2).<a class="code" href="classarmnn_1_1_input_slot.xhtml#a9effd325a6d512a3f8ff4bd207d53255">GetConnectedOutputSlot</a>()-&gt;<a class="code" href="classarmnn_1_1_output_slot.xhtml#ada2ad7d1caeeb4ef6195c8925fad6a65">GetTensorInfo</a>();</div>
<div class="line"><a name="l00377"></a><span class="lineno">  377</span>&#160;                                }</div>
<div class="line"><a name="l00378"></a><span class="lineno">  378</span>&#160; </div>
<div class="line"><a name="l00379"></a><span class="lineno">  379</span>&#160;                                <a class="code" href="namespacearmnn.xhtml#a67a0db04d321a74b7e7fcfd3f1a3f70b">arm_compute::Status</a> status = <a class="code" href="namespacearmnn.xhtml#aa6670a2fcf9f365da69f3f3092dfa64b">ClDepthwiseConvolutionWorkloadValidate</a>(</div>
<div class="line"><a name="l00380"></a><span class="lineno">  380</span>&#160;                                        baseLayer-&gt;<a class="code" href="classarmnn_1_1_layer.xhtml#acf8b8e23bf647836592982f97088d375">GetInputSlot</a>(0).<a class="code" href="classarmnn_1_1_input_slot.xhtml#a9effd325a6d512a3f8ff4bd207d53255">GetConnectedOutputSlot</a>()-&gt;<a class="code" href="classarmnn_1_1_output_slot.xhtml#ada2ad7d1caeeb4ef6195c8925fad6a65">GetTensorInfo</a>(),</div>
<div class="line"><a name="l00381"></a><span class="lineno">  381</span>&#160;                                        activationLayer-&gt;GetInputSlot(0).GetConnectedOutputSlot()-&gt;GetTensorInfo(),</div>
<div class="line"><a name="l00382"></a><span class="lineno">  382</span>&#160;                                        baseLayer-&gt;<a class="code" href="classarmnn_1_1_layer_with_parameters.xhtml#afa3e8a8f23589b1eaddbe203825bbdcf">GetParameters</a>(),</div>
<div class="line"><a name="l00383"></a><span class="lineno">  383</span>&#160;                                        baseLayer-&gt;<a class="code" href="classarmnn_1_1_layer.xhtml#acf8b8e23bf647836592982f97088d375">GetInputSlot</a>(1).<a class="code" href="classarmnn_1_1_input_slot.xhtml#a9effd325a6d512a3f8ff4bd207d53255">GetConnectedOutputSlot</a>()-&gt;<a class="code" href="classarmnn_1_1_output_slot.xhtml#ada2ad7d1caeeb4ef6195c8925fad6a65">GetTensorInfo</a>(),</div>
<div class="line"><a name="l00384"></a><span class="lineno">  384</span>&#160;                                        biases,</div>
<div class="line"><a name="l00385"></a><span class="lineno">  385</span>&#160;                                        &amp;activationDesc);</div>
<div class="line"><a name="l00386"></a><span class="lineno">  386</span>&#160; </div>
<div class="line"><a name="l00387"></a><span class="lineno">  387</span>&#160;                                <span class="keywordflow">if</span> (status)</div>
<div class="line"><a name="l00388"></a><span class="lineno">  388</span>&#160;                                {</div>
<div class="line"><a name="l00389"></a><span class="lineno">  389</span>&#160;                                    FuseDepthwiseConvolution2dLayer&lt;DepthwiseConvolution2dLayer&gt;(optimizationViews,</div>
<div class="line"><a name="l00390"></a><span class="lineno">  390</span>&#160;                                                                                                 baseLayer,</div>
<div class="line"><a name="l00391"></a><span class="lineno">  391</span>&#160;                                                                                                 activationLayer,</div>
<div class="line"><a name="l00392"></a><span class="lineno">  392</span>&#160;                                                                                                 activationDesc,</div>
<div class="line"><a name="l00393"></a><span class="lineno">  393</span>&#160;                                                                                                 name);</div>
<div class="line"><a name="l00394"></a><span class="lineno">  394</span>&#160;                                    untouched.erase(baseLayer-&gt;<a class="code" href="classarmnn_1_1_layer.xhtml#a8dc12f0ee5b232d397bd18ced1a72a64">GetGuid</a>());</div>
<div class="line"><a name="l00395"></a><span class="lineno">  395</span>&#160;                                    untouched.erase(activationLayer-&gt;GetGuid());</div>
<div class="line"><a name="l00396"></a><span class="lineno">  396</span>&#160;                                }</div>
<div class="line"><a name="l00397"></a><span class="lineno">  397</span>&#160;                            }</div>
<div class="line"><a name="l00398"></a><span class="lineno">  398</span>&#160;                            <span class="keywordflow">else</span> <span class="keywordflow">if</span> (base.<a class="code" href="classarmnn_1_1_layer.xhtml#ad8e15c530c929ab823d89ae9fd2d3f11">GetType</a>() == <a class="code" href="namespacearmnn.xhtml#a56943a0946e5f15e5e58054b8e7a04a4acab78faff25393e9defd1911cb58133e">LayerType::FullyConnected</a>)</div>
<div class="line"><a name="l00399"></a><span class="lineno">  399</span>&#160;                            {</div>
<div class="line"><a name="l00400"></a><span class="lineno">  400</span>&#160;                                <a class="code" href="classarmnn_1_1_fully_connected_layer.xhtml">FullyConnectedLayer</a>* baseLayer = PolymorphicDowncast&lt;FullyConnectedLayer*&gt;(&amp;base);</div>
<div class="line"><a name="l00401"></a><span class="lineno">  401</span>&#160;                                <a class="code" href="structarmnn_1_1_fully_connected_descriptor.xhtml">FullyConnectedDescriptor</a> descriptor = baseLayer-&gt;<a class="code" href="classarmnn_1_1_layer_with_parameters.xhtml#afa3e8a8f23589b1eaddbe203825bbdcf">GetParameters</a>();</div>
<div class="line"><a name="l00402"></a><span class="lineno">  402</span>&#160; </div>
<div class="line"><a name="l00403"></a><span class="lineno">  403</span>&#160;                                <span class="comment">// As bias is optional only try to get TensorInfo from input if bias is enabled.</span></div>
<div class="line"><a name="l00404"></a><span class="lineno">  404</span>&#160;                                <a class="code" href="classarmnn_1_1_optional.xhtml">Optional&lt;TensorInfo&gt;</a> biases;</div>
<div class="line"><a name="l00405"></a><span class="lineno">  405</span>&#160;                                <span class="keywordflow">if</span> (descriptor.<a class="code" href="structarmnn_1_1_fully_connected_descriptor.xhtml#aea202e14d8874cefd9a0f778022b7e25">m_BiasEnabled</a>)</div>
<div class="line"><a name="l00406"></a><span class="lineno">  406</span>&#160;                                {</div>
<div class="line"><a name="l00407"></a><span class="lineno">  407</span>&#160;                                    biases = baseLayer-&gt;<a class="code" href="classarmnn_1_1_layer.xhtml#acf8b8e23bf647836592982f97088d375">GetInputSlot</a>(2).<a class="code" href="classarmnn_1_1_input_slot.xhtml#a9effd325a6d512a3f8ff4bd207d53255">GetConnectedOutputSlot</a>()-&gt;<a class="code" href="classarmnn_1_1_output_slot.xhtml#ada2ad7d1caeeb4ef6195c8925fad6a65">GetTensorInfo</a>();</div>
<div class="line"><a name="l00408"></a><span class="lineno">  408</span>&#160;                                }</div>
<div class="line"><a name="l00409"></a><span class="lineno">  409</span>&#160; </div>
<div class="line"><a name="l00410"></a><span class="lineno">  410</span>&#160;                                <a class="code" href="namespacearmnn.xhtml#a67a0db04d321a74b7e7fcfd3f1a3f70b">arm_compute::Status</a> status = <a class="code" href="namespacearmnn.xhtml#a18c7eef8533ca0acbbe081cd1a1fec98">ClFullyConnectedWorkloadValidate</a>(</div>
<div class="line"><a name="l00411"></a><span class="lineno">  411</span>&#160;                                        baseLayer-&gt;<a class="code" href="classarmnn_1_1_layer.xhtml#acf8b8e23bf647836592982f97088d375">GetInputSlot</a>(0).<a class="code" href="classarmnn_1_1_input_slot.xhtml#a9effd325a6d512a3f8ff4bd207d53255">GetConnectedOutputSlot</a>()-&gt;<a class="code" href="classarmnn_1_1_output_slot.xhtml#ada2ad7d1caeeb4ef6195c8925fad6a65">GetTensorInfo</a>(),</div>
<div class="line"><a name="l00412"></a><span class="lineno">  412</span>&#160;                                        activationLayer-&gt;GetInputSlot(0).GetConnectedOutputSlot()-&gt;GetTensorInfo(),</div>
<div class="line"><a name="l00413"></a><span class="lineno">  413</span>&#160;                                        baseLayer-&gt;<a class="code" href="classarmnn_1_1_layer.xhtml#acf8b8e23bf647836592982f97088d375">GetInputSlot</a>(1).<a class="code" href="classarmnn_1_1_input_slot.xhtml#a9effd325a6d512a3f8ff4bd207d53255">GetConnectedOutputSlot</a>()-&gt;<a class="code" href="classarmnn_1_1_output_slot.xhtml#ada2ad7d1caeeb4ef6195c8925fad6a65">GetTensorInfo</a>(),</div>
<div class="line"><a name="l00414"></a><span class="lineno">  414</span>&#160;                                        biases,</div>
<div class="line"><a name="l00415"></a><span class="lineno">  415</span>&#160;                                        baseLayer-&gt;<a class="code" href="classarmnn_1_1_layer_with_parameters.xhtml#afa3e8a8f23589b1eaddbe203825bbdcf">GetParameters</a>(),</div>
<div class="line"><a name="l00416"></a><span class="lineno">  416</span>&#160;                                        &amp;activationDesc);</div>
<div class="line"><a name="l00417"></a><span class="lineno">  417</span>&#160; </div>
<div class="line"><a name="l00418"></a><span class="lineno">  418</span>&#160;                                <span class="keywordflow">if</span> (status)</div>
<div class="line"><a name="l00419"></a><span class="lineno">  419</span>&#160;                                {</div>
<div class="line"><a name="l00420"></a><span class="lineno">  420</span>&#160;                                    FuseFullyConnectedLayer&lt;FullyConnectedLayer&gt;(optimizationViews,</div>
<div class="line"><a name="l00421"></a><span class="lineno">  421</span>&#160;                                                                                 baseLayer,</div>
<div class="line"><a name="l00422"></a><span class="lineno">  422</span>&#160;                                                                                 activationLayer,</div>
<div class="line"><a name="l00423"></a><span class="lineno">  423</span>&#160;                                                                                 activationDesc,</div>
<div class="line"><a name="l00424"></a><span class="lineno">  424</span>&#160;                                                                                 name);</div>
<div class="line"><a name="l00425"></a><span class="lineno">  425</span>&#160;                                    untouched.erase(baseLayer-&gt;<a class="code" href="classarmnn_1_1_layer.xhtml#a8dc12f0ee5b232d397bd18ced1a72a64">GetGuid</a>());</div>
<div class="line"><a name="l00426"></a><span class="lineno">  426</span>&#160;                                    untouched.erase(activationLayer-&gt;GetGuid());</div>
<div class="line"><a name="l00427"></a><span class="lineno">  427</span>&#160;                                }</div>
<div class="line"><a name="l00428"></a><span class="lineno">  428</span>&#160;                            }</div>
<div class="line"><a name="l00429"></a><span class="lineno">  429</span>&#160;                            <span class="keywordflow">else</span> <span class="keywordflow">if</span> (base.<a class="code" href="classarmnn_1_1_layer.xhtml#ad8e15c530c929ab823d89ae9fd2d3f11">GetType</a>() == <a class="code" href="namespacearmnn.xhtml#a56943a0946e5f15e5e58054b8e7a04a4ae4743c3ec15d1d84169b17264634692e">LayerType::BatchNormalization</a>)</div>
<div class="line"><a name="l00430"></a><span class="lineno">  430</span>&#160;                            {</div>
<div class="line"><a name="l00431"></a><span class="lineno">  431</span>&#160;                                <a class="code" href="classarmnn_1_1_batch_normalization_layer.xhtml">BatchNormalizationLayer</a>* baseLayer =</div>
<div class="line"><a name="l00432"></a><span class="lineno">  432</span>&#160;                                        PolymorphicDowncast&lt;BatchNormalizationLayer*&gt;(&amp;base);</div>
<div class="line"><a name="l00433"></a><span class="lineno">  433</span>&#160; </div>
<div class="line"><a name="l00434"></a><span class="lineno">  434</span>&#160;                                <a class="code" href="namespacearmnn.xhtml#a67a0db04d321a74b7e7fcfd3f1a3f70b">arm_compute::Status</a> status = <a class="code" href="namespacearmnn.xhtml#a29bd65c1ec4ff9f75b636ec8e7b038be">ClBatchNormalizationValidate</a>(</div>
<div class="line"><a name="l00435"></a><span class="lineno">  435</span>&#160;                                        baseLayer-&gt;<a class="code" href="classarmnn_1_1_layer.xhtml#acf8b8e23bf647836592982f97088d375">GetInputSlot</a>(0).<a class="code" href="classarmnn_1_1_input_slot.xhtml#a9effd325a6d512a3f8ff4bd207d53255">GetConnectedOutputSlot</a>()-&gt;<a class="code" href="classarmnn_1_1_output_slot.xhtml#ada2ad7d1caeeb4ef6195c8925fad6a65">GetTensorInfo</a>(),</div>
<div class="line"><a name="l00436"></a><span class="lineno">  436</span>&#160;                                        activationLayer-&gt;GetInputSlot(0).GetConnectedOutputSlot()-&gt;GetTensorInfo(),</div>
<div class="line"><a name="l00437"></a><span class="lineno">  437</span>&#160;                                        baseLayer-&gt;<a class="code" href="classarmnn_1_1_batch_normalization_layer.xhtml#a2dfc280952c7939299c304fcbf855b97">m_Mean</a>-&gt;GetTensorInfo(),</div>
<div class="line"><a name="l00438"></a><span class="lineno">  438</span>&#160;                                        baseLayer-&gt;<a class="code" href="classarmnn_1_1_batch_normalization_layer.xhtml#a7d38a70f30295f365c3a98fc7fa4a229">m_Variance</a>-&gt;GetTensorInfo(),</div>
<div class="line"><a name="l00439"></a><span class="lineno">  439</span>&#160;                                        baseLayer-&gt;<a class="code" href="classarmnn_1_1_batch_normalization_layer.xhtml#a7645e8ead378db5ad17eadbdb9df4da6">m_Beta</a>-&gt;GetTensorInfo(),</div>
<div class="line"><a name="l00440"></a><span class="lineno">  440</span>&#160;                                        baseLayer-&gt;<a class="code" href="classarmnn_1_1_batch_normalization_layer.xhtml#a5da51be22147d174ff661810c32675b0">m_Gamma</a>-&gt;GetTensorInfo(),</div>
<div class="line"><a name="l00441"></a><span class="lineno">  441</span>&#160;                                        baseLayer-&gt;<a class="code" href="classarmnn_1_1_layer_with_parameters.xhtml#afa3e8a8f23589b1eaddbe203825bbdcf">GetParameters</a>(),</div>
<div class="line"><a name="l00442"></a><span class="lineno">  442</span>&#160;                                        &amp;activationDesc);</div>
<div class="line"><a name="l00443"></a><span class="lineno">  443</span>&#160; </div>
<div class="line"><a name="l00444"></a><span class="lineno">  444</span>&#160;                                <span class="keywordflow">if</span> (status)</div>
<div class="line"><a name="l00445"></a><span class="lineno">  445</span>&#160;                                {</div>
<div class="line"><a name="l00446"></a><span class="lineno">  446</span>&#160;                                    <a class="code" href="classarmnn_1_1_batch_normalization_layer.xhtml">BatchNormalizationLayer</a>* replacementLayer =</div>
<div class="line"><a name="l00447"></a><span class="lineno">  447</span>&#160;                                        FuseBatchNormalizationLayer&lt;BatchNormalizationLayer&gt;(optimizationViews,</div>
<div class="line"><a name="l00448"></a><span class="lineno">  448</span>&#160;                                                                                             baseLayer,</div>
<div class="line"><a name="l00449"></a><span class="lineno">  449</span>&#160;                                                                                             activationLayer,</div>
<div class="line"><a name="l00450"></a><span class="lineno">  450</span>&#160;                                                                                             activationDesc,</div>
<div class="line"><a name="l00451"></a><span class="lineno">  451</span>&#160;                                                                                             name);</div>
<div class="line"><a name="l00452"></a><span class="lineno">  452</span>&#160; </div>
<div class="line"><a name="l00453"></a><span class="lineno">  453</span>&#160;                                    replacementLayer-&gt;<a class="code" href="classarmnn_1_1_batch_normalization_layer.xhtml#a7645e8ead378db5ad17eadbdb9df4da6">m_Beta</a>     = std::move(baseLayer-&gt;<a class="code" href="classarmnn_1_1_batch_normalization_layer.xhtml#a7645e8ead378db5ad17eadbdb9df4da6">m_Beta</a>);</div>
<div class="line"><a name="l00454"></a><span class="lineno">  454</span>&#160;                                    replacementLayer-&gt;<a class="code" href="classarmnn_1_1_batch_normalization_layer.xhtml#a5da51be22147d174ff661810c32675b0">m_Gamma</a>    = std::move(baseLayer-&gt;<a class="code" href="classarmnn_1_1_batch_normalization_layer.xhtml#a5da51be22147d174ff661810c32675b0">m_Gamma</a>);</div>
<div class="line"><a name="l00455"></a><span class="lineno">  455</span>&#160;                                    replacementLayer-&gt;<a class="code" href="classarmnn_1_1_batch_normalization_layer.xhtml#a2dfc280952c7939299c304fcbf855b97">m_Mean</a>     = std::move(baseLayer-&gt;<a class="code" href="classarmnn_1_1_batch_normalization_layer.xhtml#a2dfc280952c7939299c304fcbf855b97">m_Mean</a>);</div>
<div class="line"><a name="l00456"></a><span class="lineno">  456</span>&#160;                                    replacementLayer-&gt;<a class="code" href="classarmnn_1_1_batch_normalization_layer.xhtml#a7d38a70f30295f365c3a98fc7fa4a229">m_Variance</a> = std::move(baseLayer-&gt;<a class="code" href="classarmnn_1_1_batch_normalization_layer.xhtml#a7d38a70f30295f365c3a98fc7fa4a229">m_Variance</a>);</div>
<div class="line"><a name="l00457"></a><span class="lineno">  457</span>&#160;                                    untouched.erase(baseLayer-&gt;<a class="code" href="classarmnn_1_1_layer.xhtml#a8dc12f0ee5b232d397bd18ced1a72a64">GetGuid</a>());</div>
<div class="line"><a name="l00458"></a><span class="lineno">  458</span>&#160;                                    untouched.erase(activationLayer-&gt;GetGuid());</div>
<div class="line"><a name="l00459"></a><span class="lineno">  459</span>&#160;                                }</div>
<div class="line"><a name="l00460"></a><span class="lineno">  460</span>&#160;                            }</div>
<div class="line"><a name="l00461"></a><span class="lineno">  461</span>&#160;                            <span class="keywordflow">else</span> <span class="keywordflow">if</span> (base.<a class="code" href="classarmnn_1_1_layer.xhtml#ad8e15c530c929ab823d89ae9fd2d3f11">GetType</a>() == <a class="code" href="namespacearmnn.xhtml#a56943a0946e5f15e5e58054b8e7a04a4a7c5531bbefed0945814f874baf9e0e0f">LayerType::Addition</a>)</div>
<div class="line"><a name="l00462"></a><span class="lineno">  462</span>&#160;                            {</div>
<div class="line"><a name="l00463"></a><span class="lineno">  463</span>&#160;                                <a class="code" href="classarmnn_1_1_addition_layer.xhtml">AdditionLayer</a>* baseLayer = PolymorphicDowncast&lt;AdditionLayer*&gt;(&amp;base);</div>
<div class="line"><a name="l00464"></a><span class="lineno">  464</span>&#160; </div>
<div class="line"><a name="l00465"></a><span class="lineno">  465</span>&#160;                                <a class="code" href="namespacearmnn.xhtml#a67a0db04d321a74b7e7fcfd3f1a3f70b">arm_compute::Status</a> status = <a class="code" href="namespacearmnn.xhtml#a24fc3e8e29d3fa56cc6b2d81e48625d1">ClAdditionValidate</a>(</div>
<div class="line"><a name="l00466"></a><span class="lineno">  466</span>&#160;                                        baseLayer-&gt;<a class="code" href="classarmnn_1_1_layer.xhtml#acf8b8e23bf647836592982f97088d375">GetInputSlot</a>(0).<a class="code" href="classarmnn_1_1_input_slot.xhtml#a9effd325a6d512a3f8ff4bd207d53255">GetConnectedOutputSlot</a>()-&gt;<a class="code" href="classarmnn_1_1_output_slot.xhtml#ada2ad7d1caeeb4ef6195c8925fad6a65">GetTensorInfo</a>(),</div>
<div class="line"><a name="l00467"></a><span class="lineno">  467</span>&#160;                                        baseLayer-&gt;<a class="code" href="classarmnn_1_1_layer.xhtml#acf8b8e23bf647836592982f97088d375">GetInputSlot</a>(1).<a class="code" href="classarmnn_1_1_input_slot.xhtml#a9effd325a6d512a3f8ff4bd207d53255">GetConnectedOutputSlot</a>()-&gt;<a class="code" href="classarmnn_1_1_output_slot.xhtml#ada2ad7d1caeeb4ef6195c8925fad6a65">GetTensorInfo</a>(),</div>
<div class="line"><a name="l00468"></a><span class="lineno">  468</span>&#160;                                        activationLayer-&gt;GetInputSlot(0).GetConnectedOutputSlot()-&gt;GetTensorInfo(),</div>
<div class="line"><a name="l00469"></a><span class="lineno">  469</span>&#160;                                        &amp;activationDesc);</div>
<div class="line"><a name="l00470"></a><span class="lineno">  470</span>&#160; </div>
<div class="line"><a name="l00471"></a><span class="lineno">  471</span>&#160;                                <span class="keywordflow">if</span> (status)</div>
<div class="line"><a name="l00472"></a><span class="lineno">  472</span>&#160;                                {</div>
<div class="line"><a name="l00473"></a><span class="lineno">  473</span>&#160;                                    FuseAdditionLayer&lt;AdditionLayer&gt;(optimizationViews,</div>
<div class="line"><a name="l00474"></a><span class="lineno">  474</span>&#160;                                                                     baseLayer,</div>
<div class="line"><a name="l00475"></a><span class="lineno">  475</span>&#160;                                                                     activationLayer,</div>
<div class="line"><a name="l00476"></a><span class="lineno">  476</span>&#160;                                                                     activationDesc,</div>
<div class="line"><a name="l00477"></a><span class="lineno">  477</span>&#160;                                                                     name);</div>
<div class="line"><a name="l00478"></a><span class="lineno">  478</span>&#160;                                    untouched.erase(baseLayer-&gt;<a class="code" href="classarmnn_1_1_layer.xhtml#a8dc12f0ee5b232d397bd18ced1a72a64">GetGuid</a>());</div>
<div class="line"><a name="l00479"></a><span class="lineno">  479</span>&#160;                                    untouched.erase(activationLayer-&gt;GetGuid());</div>
<div class="line"><a name="l00480"></a><span class="lineno">  480</span>&#160;                                }</div>
<div class="line"><a name="l00481"></a><span class="lineno">  481</span>&#160;                            }</div>
<div class="line"><a name="l00482"></a><span class="lineno">  482</span>&#160;                            <span class="keywordflow">else</span> <span class="keywordflow">if</span> (base.<a class="code" href="classarmnn_1_1_layer.xhtml#ad8e15c530c929ab823d89ae9fd2d3f11">GetType</a>() == <a class="code" href="namespacearmnn.xhtml#a56943a0946e5f15e5e58054b8e7a04a4a3025cdaab2deb0bb2cd642449e570833">LayerType::Division</a>)</div>
<div class="line"><a name="l00483"></a><span class="lineno">  483</span>&#160;                            {</div>
<div class="line"><a name="l00484"></a><span class="lineno">  484</span>&#160;                                <a class="code" href="classarmnn_1_1_division_layer.xhtml">DivisionLayer</a>* baseLayer = PolymorphicDowncast&lt;DivisionLayer*&gt;(&amp;base);</div>
<div class="line"><a name="l00485"></a><span class="lineno">  485</span>&#160; </div>
<div class="line"><a name="l00486"></a><span class="lineno">  486</span>&#160;                                <a class="code" href="namespacearmnn.xhtml#a67a0db04d321a74b7e7fcfd3f1a3f70b">arm_compute::Status</a> status = <a class="code" href="namespacearmnn.xhtml#a0591ff61ac269187164ea23713d33852">ClDivisionWorkloadValidate</a>(</div>
<div class="line"><a name="l00487"></a><span class="lineno">  487</span>&#160;                                        baseLayer-&gt;<a class="code" href="classarmnn_1_1_layer.xhtml#acf8b8e23bf647836592982f97088d375">GetInputSlot</a>(0).<a class="code" href="classarmnn_1_1_input_slot.xhtml#a9effd325a6d512a3f8ff4bd207d53255">GetConnectedOutputSlot</a>()-&gt;<a class="code" href="classarmnn_1_1_output_slot.xhtml#ada2ad7d1caeeb4ef6195c8925fad6a65">GetTensorInfo</a>(),</div>
<div class="line"><a name="l00488"></a><span class="lineno">  488</span>&#160;                                        baseLayer-&gt;<a class="code" href="classarmnn_1_1_layer.xhtml#acf8b8e23bf647836592982f97088d375">GetInputSlot</a>(1).<a class="code" href="classarmnn_1_1_input_slot.xhtml#a9effd325a6d512a3f8ff4bd207d53255">GetConnectedOutputSlot</a>()-&gt;<a class="code" href="classarmnn_1_1_output_slot.xhtml#ada2ad7d1caeeb4ef6195c8925fad6a65">GetTensorInfo</a>(),</div>
<div class="line"><a name="l00489"></a><span class="lineno">  489</span>&#160;                                        activationLayer-&gt;GetInputSlot(0).GetConnectedOutputSlot()-&gt;GetTensorInfo(),</div>
<div class="line"><a name="l00490"></a><span class="lineno">  490</span>&#160;                                        &amp;activationDesc);</div>
<div class="line"><a name="l00491"></a><span class="lineno">  491</span>&#160; </div>
<div class="line"><a name="l00492"></a><span class="lineno">  492</span>&#160;                                <span class="keywordflow">if</span> (status)</div>
<div class="line"><a name="l00493"></a><span class="lineno">  493</span>&#160;                                {</div>
<div class="line"><a name="l00494"></a><span class="lineno">  494</span>&#160;                                    FuseDivisionLayer&lt;DivisionLayer&gt;(optimizationViews,</div>
<div class="line"><a name="l00495"></a><span class="lineno">  495</span>&#160;                                                                     baseLayer,</div>
<div class="line"><a name="l00496"></a><span class="lineno">  496</span>&#160;                                                                     activationLayer,</div>
<div class="line"><a name="l00497"></a><span class="lineno">  497</span>&#160;                                                                     activationDesc,</div>
<div class="line"><a name="l00498"></a><span class="lineno">  498</span>&#160;                                                                     name);</div>
<div class="line"><a name="l00499"></a><span class="lineno">  499</span>&#160;                                    untouched.erase(baseLayer-&gt;<a class="code" href="classarmnn_1_1_layer.xhtml#a8dc12f0ee5b232d397bd18ced1a72a64">GetGuid</a>());</div>
<div class="line"><a name="l00500"></a><span class="lineno">  500</span>&#160;                                    untouched.erase(activationLayer-&gt;GetGuid());</div>
<div class="line"><a name="l00501"></a><span class="lineno">  501</span>&#160;                                }</div>
<div class="line"><a name="l00502"></a><span class="lineno">  502</span>&#160;                            }</div>
<div class="line"><a name="l00503"></a><span class="lineno">  503</span>&#160;                            <span class="keywordflow">else</span> <span class="keywordflow">if</span> (base.<a class="code" href="classarmnn_1_1_layer.xhtml#ad8e15c530c929ab823d89ae9fd2d3f11">GetType</a>() == <a class="code" href="namespacearmnn.xhtml#a56943a0946e5f15e5e58054b8e7a04a4a27d1a1f7b7c2180e5b20ce9e3d00e2dd">LayerType::Multiplication</a>)</div>
<div class="line"><a name="l00504"></a><span class="lineno">  504</span>&#160;                            {</div>
<div class="line"><a name="l00505"></a><span class="lineno">  505</span>&#160;                                <a class="code" href="classarmnn_1_1_multiplication_layer.xhtml">MultiplicationLayer</a>* baseLayer = PolymorphicDowncast&lt;MultiplicationLayer*&gt;(&amp;base);</div>
<div class="line"><a name="l00506"></a><span class="lineno">  506</span>&#160; </div>
<div class="line"><a name="l00507"></a><span class="lineno">  507</span>&#160;                                <a class="code" href="namespacearmnn.xhtml#a67a0db04d321a74b7e7fcfd3f1a3f70b">arm_compute::Status</a> status = <a class="code" href="namespacearmnn.xhtml#a9638165cb6c1baae3b2b5fd9f0f75201">ClMultiplicationWorkloadValidate</a>(</div>
<div class="line"><a name="l00508"></a><span class="lineno">  508</span>&#160;                                        baseLayer-&gt;<a class="code" href="classarmnn_1_1_layer.xhtml#acf8b8e23bf647836592982f97088d375">GetInputSlot</a>(0).<a class="code" href="classarmnn_1_1_input_slot.xhtml#a9effd325a6d512a3f8ff4bd207d53255">GetConnectedOutputSlot</a>()-&gt;<a class="code" href="classarmnn_1_1_output_slot.xhtml#ada2ad7d1caeeb4ef6195c8925fad6a65">GetTensorInfo</a>(),</div>
<div class="line"><a name="l00509"></a><span class="lineno">  509</span>&#160;                                        baseLayer-&gt;<a class="code" href="classarmnn_1_1_layer.xhtml#acf8b8e23bf647836592982f97088d375">GetInputSlot</a>(1).<a class="code" href="classarmnn_1_1_input_slot.xhtml#a9effd325a6d512a3f8ff4bd207d53255">GetConnectedOutputSlot</a>()-&gt;<a class="code" href="classarmnn_1_1_output_slot.xhtml#ada2ad7d1caeeb4ef6195c8925fad6a65">GetTensorInfo</a>(),</div>
<div class="line"><a name="l00510"></a><span class="lineno">  510</span>&#160;                                        activationLayer-&gt;GetInputSlot(0).GetConnectedOutputSlot()-&gt;GetTensorInfo(),</div>
<div class="line"><a name="l00511"></a><span class="lineno">  511</span>&#160;                                        &amp;activationDesc);</div>
<div class="line"><a name="l00512"></a><span class="lineno">  512</span>&#160; </div>
<div class="line"><a name="l00513"></a><span class="lineno">  513</span>&#160;                                <span class="keywordflow">if</span> (status)</div>
<div class="line"><a name="l00514"></a><span class="lineno">  514</span>&#160;                                {</div>
<div class="line"><a name="l00515"></a><span class="lineno">  515</span>&#160;                                    FuseMultiplicationLayer&lt;MultiplicationLayer&gt;(optimizationViews,</div>
<div class="line"><a name="l00516"></a><span class="lineno">  516</span>&#160;                                                                                 baseLayer,</div>
<div class="line"><a name="l00517"></a><span class="lineno">  517</span>&#160;                                                                                 activationLayer,</div>
<div class="line"><a name="l00518"></a><span class="lineno">  518</span>&#160;                                                                                 activationDesc,</div>
<div class="line"><a name="l00519"></a><span class="lineno">  519</span>&#160;                                                                                 name);</div>
<div class="line"><a name="l00520"></a><span class="lineno">  520</span>&#160;                                    untouched.erase(baseLayer-&gt;<a class="code" href="classarmnn_1_1_layer.xhtml#a8dc12f0ee5b232d397bd18ced1a72a64">GetGuid</a>());</div>
<div class="line"><a name="l00521"></a><span class="lineno">  521</span>&#160;                                    untouched.erase(activationLayer-&gt;GetGuid());</div>
<div class="line"><a name="l00522"></a><span class="lineno">  522</span>&#160;                                }</div>
<div class="line"><a name="l00523"></a><span class="lineno">  523</span>&#160;                            }</div>
<div class="line"><a name="l00524"></a><span class="lineno">  524</span>&#160;                            <span class="keywordflow">else</span> <span class="keywordflow">if</span> (base.<a class="code" href="classarmnn_1_1_layer.xhtml#ad8e15c530c929ab823d89ae9fd2d3f11">GetType</a>() == <a class="code" href="namespacearmnn.xhtml#a56943a0946e5f15e5e58054b8e7a04a4a6eb8b8b560161603402c0238b3a7d8b0">LayerType::Subtraction</a>)</div>
<div class="line"><a name="l00525"></a><span class="lineno">  525</span>&#160;                            {</div>
<div class="line"><a name="l00526"></a><span class="lineno">  526</span>&#160;                                <a class="code" href="classarmnn_1_1_subtraction_layer.xhtml">SubtractionLayer</a>* baseLayer = PolymorphicDowncast&lt;SubtractionLayer*&gt;(&amp;base);</div>
<div class="line"><a name="l00527"></a><span class="lineno">  527</span>&#160; </div>
<div class="line"><a name="l00528"></a><span class="lineno">  528</span>&#160;                                <a class="code" href="namespacearmnn.xhtml#a67a0db04d321a74b7e7fcfd3f1a3f70b">arm_compute::Status</a> status = <a class="code" href="namespacearmnn.xhtml#afa9933f1d9de469ffba5ba0fcee769f8">ClSubtractionValidate</a>(</div>
<div class="line"><a name="l00529"></a><span class="lineno">  529</span>&#160;                                        baseLayer-&gt;<a class="code" href="classarmnn_1_1_layer.xhtml#acf8b8e23bf647836592982f97088d375">GetInputSlot</a>(0).<a class="code" href="classarmnn_1_1_input_slot.xhtml#a9effd325a6d512a3f8ff4bd207d53255">GetConnectedOutputSlot</a>()-&gt;<a class="code" href="classarmnn_1_1_output_slot.xhtml#ada2ad7d1caeeb4ef6195c8925fad6a65">GetTensorInfo</a>(),</div>
<div class="line"><a name="l00530"></a><span class="lineno">  530</span>&#160;                                        baseLayer-&gt;<a class="code" href="classarmnn_1_1_layer.xhtml#acf8b8e23bf647836592982f97088d375">GetInputSlot</a>(1).<a class="code" href="classarmnn_1_1_input_slot.xhtml#a9effd325a6d512a3f8ff4bd207d53255">GetConnectedOutputSlot</a>()-&gt;<a class="code" href="classarmnn_1_1_output_slot.xhtml#ada2ad7d1caeeb4ef6195c8925fad6a65">GetTensorInfo</a>(),</div>
<div class="line"><a name="l00531"></a><span class="lineno">  531</span>&#160;                                        activationLayer-&gt;GetInputSlot(0).GetConnectedOutputSlot()-&gt;GetTensorInfo(),</div>
<div class="line"><a name="l00532"></a><span class="lineno">  532</span>&#160;                                        &amp;activationDesc);</div>
<div class="line"><a name="l00533"></a><span class="lineno">  533</span>&#160; </div>
<div class="line"><a name="l00534"></a><span class="lineno">  534</span>&#160;                                <span class="keywordflow">if</span> (status)</div>
<div class="line"><a name="l00535"></a><span class="lineno">  535</span>&#160;                                {</div>
<div class="line"><a name="l00536"></a><span class="lineno">  536</span>&#160;                                    FuseSubtractionLayer&lt;SubtractionLayer&gt;(optimizationViews,</div>
<div class="line"><a name="l00537"></a><span class="lineno">  537</span>&#160;                                                                           baseLayer,</div>
<div class="line"><a name="l00538"></a><span class="lineno">  538</span>&#160;                                                                           activationLayer,</div>
<div class="line"><a name="l00539"></a><span class="lineno">  539</span>&#160;                                                                           activationDesc,</div>
<div class="line"><a name="l00540"></a><span class="lineno">  540</span>&#160;                                                                           name);</div>
<div class="line"><a name="l00541"></a><span class="lineno">  541</span>&#160;                                    untouched.erase(baseLayer-&gt;<a class="code" href="classarmnn_1_1_layer.xhtml#a8dc12f0ee5b232d397bd18ced1a72a64">GetGuid</a>());</div>
<div class="line"><a name="l00542"></a><span class="lineno">  542</span>&#160;                                    untouched.erase(activationLayer-&gt;GetGuid());</div>
<div class="line"><a name="l00543"></a><span class="lineno">  543</span>&#160;                                }</div>
<div class="line"><a name="l00544"></a><span class="lineno">  544</span>&#160;                            }</div>
<div class="line"><a name="l00545"></a><span class="lineno">  545</span>&#160;                        }</div>
<div class="line"><a name="l00546"></a><span class="lineno">  546</span>&#160;                    }</div>
<div class="line"><a name="l00547"></a><span class="lineno">  547</span>&#160;                }</div>
<div class="line"><a name="l00548"></a><span class="lineno">  548</span>&#160;            }</div>
<div class="line"><a name="l00549"></a><span class="lineno">  549</span>&#160;        }</div>
<div class="line"><a name="l00550"></a><span class="lineno">  550</span>&#160; </div>
<div class="line"><a name="l00551"></a><span class="lineno">  551</span>&#160;        <span class="comment">// Separate reduce layer with multiple axes into multiple reduce layers with 1 axis.</span></div>
<div class="line"><a name="l00552"></a><span class="lineno">  552</span>&#160;        <span class="keywordflow">if</span> (base.<a class="code" href="classarmnn_1_1_layer.xhtml#ad8e15c530c929ab823d89ae9fd2d3f11">GetType</a>() == <a class="code" href="namespacearmnn.xhtml#a56943a0946e5f15e5e58054b8e7a04a4aec4875f03ff0bb0b26cf76ac7f41e3c8">LayerType::Reduce</a>)</div>
<div class="line"><a name="l00553"></a><span class="lineno">  553</span>&#160;        {</div>
<div class="line"><a name="l00554"></a><span class="lineno">  554</span>&#160;            <a class="code" href="classarmnn_1_1_reduce_layer.xhtml">ReduceLayer</a>* baseLayer            = PolymorphicDowncast&lt;ReduceLayer*&gt;(&amp;base);</div>
<div class="line"><a name="l00555"></a><span class="lineno">  555</span>&#160;            <a class="code" href="structarmnn_1_1_reduce_descriptor.xhtml">ReduceDescriptor</a> reduceDescriptor = baseLayer-&gt;<a class="code" href="classarmnn_1_1_layer_with_parameters.xhtml#afa3e8a8f23589b1eaddbe203825bbdcf">GetParameters</a>();</div>
<div class="line"><a name="l00556"></a><span class="lineno">  556</span>&#160; </div>
<div class="line"><a name="l00557"></a><span class="lineno">  557</span>&#160;            <span class="keywordflow">if</span> (!reduceDescriptor.<a class="code" href="structarmnn_1_1_reduce_descriptor.xhtml#aa1c6fc8c96404252f1072632fc5acb59">m_vAxis</a>.empty() &amp;&amp; reduceDescriptor.<a class="code" href="structarmnn_1_1_reduce_descriptor.xhtml#aa1c6fc8c96404252f1072632fc5acb59">m_vAxis</a>.size() &gt; 1)</div>
<div class="line"><a name="l00558"></a><span class="lineno">  558</span>&#160;            {</div>
<div class="line"><a name="l00559"></a><span class="lineno">  559</span>&#160;                <span class="comment">// Add new layers to the graph and connect them.</span></div>
<div class="line"><a name="l00560"></a><span class="lineno">  560</span>&#160;                std::vector&lt;IConnectableLayer*&gt; layers = ChainReduceLayers&lt;ReduceLayer&gt;(optimizationViews,</div>
<div class="line"><a name="l00561"></a><span class="lineno">  561</span>&#160;                                                                                        baseLayer,</div>
<div class="line"><a name="l00562"></a><span class="lineno">  562</span>&#160;                                                                                        reduceDescriptor);</div>
<div class="line"><a name="l00563"></a><span class="lineno">  563</span>&#160; </div>
<div class="line"><a name="l00564"></a><span class="lineno">  564</span>&#160;                <span class="comment">// Replace existing baselayer with new subgraph.</span></div>
<div class="line"><a name="l00565"></a><span class="lineno">  565</span>&#160;                ReplaceLayers&lt;ReduceLayer&gt;(optimizationViews, baseLayer, layers);</div>
<div class="line"><a name="l00566"></a><span class="lineno">  566</span>&#160;                untouched.erase(baseLayer-&gt;<a class="code" href="classarmnn_1_1_layer.xhtml#a8dc12f0ee5b232d397bd18ced1a72a64">GetGuid</a>());</div>
<div class="line"><a name="l00567"></a><span class="lineno">  567</span>&#160;            }</div>
<div class="line"><a name="l00568"></a><span class="lineno">  568</span>&#160;        }</div>
<div class="line"><a name="l00569"></a><span class="lineno">  569</span>&#160; </div>
<div class="line"><a name="l00570"></a><span class="lineno">  570</span>&#160;        <span class="comment">// Special case to fuse padding into average pooling 2d for quantized datatype.</span></div>
<div class="line"><a name="l00571"></a><span class="lineno">  571</span>&#160;        <span class="comment">// Required to be done as a backend specific optimization as Neon does not support this special case.</span></div>
<div class="line"><a name="l00572"></a><span class="lineno">  572</span>&#160;        <span class="keywordflow">if</span> (base.<a class="code" href="classarmnn_1_1_layer.xhtml#ad8e15c530c929ab823d89ae9fd2d3f11">GetType</a>() == <a class="code" href="namespacearmnn.xhtml#a56943a0946e5f15e5e58054b8e7a04a4ad662867a41bfb30b9f75dda2b5849001">LayerType::Pooling2d</a>)</div>
<div class="line"><a name="l00573"></a><span class="lineno">  573</span>&#160;        {</div>
<div class="line"><a name="l00574"></a><span class="lineno">  574</span>&#160;            <a class="code" href="classarmnn_1_1_pooling2d_layer.xhtml">Pooling2dLayer</a>* baseLayer = PolymorphicDowncast&lt;Pooling2dLayer*&gt;(&amp;base);</div>
<div class="line"><a name="l00575"></a><span class="lineno">  575</span>&#160;            <a class="code" href="structarmnn_1_1_pooling2d_descriptor.xhtml">Pooling2dDescriptor</a> poolingDescriptor = baseLayer-&gt;<a class="code" href="classarmnn_1_1_layer_with_parameters.xhtml#afa3e8a8f23589b1eaddbe203825bbdcf">GetParameters</a>();</div>
<div class="line"><a name="l00576"></a><span class="lineno">  576</span>&#160; </div>
<div class="line"><a name="l00577"></a><span class="lineno">  577</span>&#160;            <span class="keywordflow">if</span> (baseLayer-&gt;<a class="code" href="classarmnn_1_1_layer.xhtml#acf8b8e23bf647836592982f97088d375">GetInputSlot</a>(0).<a class="code" href="classarmnn_1_1_input_slot.xhtml#a9effd325a6d512a3f8ff4bd207d53255">GetConnectedOutputSlot</a>()-&gt;<a class="code" href="classarmnn_1_1_output_slot.xhtml#a7ddaf04177053a536f0e7be83a642bc6">GetOwningLayer</a>().<a class="code" href="classarmnn_1_1_layer.xhtml#ad8e15c530c929ab823d89ae9fd2d3f11">GetType</a>() == <a class="code" href="namespacearmnn.xhtml#a56943a0946e5f15e5e58054b8e7a04a4ade43468adaf6acb2c38ebc0c1176f82f">LayerType::Pad</a>)</div>
<div class="line"><a name="l00578"></a><span class="lineno">  578</span>&#160;            {</div>
<div class="line"><a name="l00579"></a><span class="lineno">  579</span>&#160;                <a class="code" href="classarmnn_1_1_pad_layer.xhtml">PadLayer</a>* padLayer = PolymorphicDowncast&lt;PadLayer*&gt;(</div>
<div class="line"><a name="l00580"></a><span class="lineno">  580</span>&#160;                    &amp;baseLayer-&gt;<a class="code" href="classarmnn_1_1_layer.xhtml#acf8b8e23bf647836592982f97088d375">GetInputSlot</a>(0).<a class="code" href="classarmnn_1_1_input_slot.xhtml#a9effd325a6d512a3f8ff4bd207d53255">GetConnectedOutputSlot</a>()-&gt;<a class="code" href="classarmnn_1_1_output_slot.xhtml#a7ddaf04177053a536f0e7be83a642bc6">GetOwningLayer</a>());</div>
<div class="line"><a name="l00581"></a><span class="lineno">  581</span>&#160;                <span class="keywordflow">if</span> (padLayer-&gt;<a class="code" href="classarmnn_1_1_layer.xhtml#a0e36688a43c35668d8db5257274c68fe">GetOutputSlot</a>(0).<a class="code" href="classarmnn_1_1_output_slot.xhtml#a25b0119c02aece1d341b99953d169c0f">GetNumConnections</a>() == 1 &amp;&amp;</div>
<div class="line"><a name="l00582"></a><span class="lineno">  582</span>&#160;                    <a class="code" href="namespacearmnn_1_1optimizations_1_1pad__fold.xhtml#a33ffc65d1f6581b0789d3d3a033f698e">optimizations::pad_fold::TryFoldPadIntoLayer2d</a>(padLayer-&gt;<a class="code" href="classarmnn_1_1_layer_with_parameters.xhtml#afa3e8a8f23589b1eaddbe203825bbdcf">GetParameters</a>(),</div>
<div class="line"><a name="l00583"></a><span class="lineno">  583</span>&#160;                                                                   poolingDescriptor,</div>
<div class="line"><a name="l00584"></a><span class="lineno">  584</span>&#160;                                                                   padLayer-&gt;<a class="code" href="classarmnn_1_1_layer.xhtml#a0e36688a43c35668d8db5257274c68fe">GetOutputSlot</a>().<a class="code" href="classarmnn_1_1_output_slot.xhtml#ada2ad7d1caeeb4ef6195c8925fad6a65">GetTensorInfo</a>(),</div>
<div class="line"><a name="l00585"></a><span class="lineno">  585</span>&#160;                                                                   <span class="keyword">true</span>))</div>
<div class="line"><a name="l00586"></a><span class="lineno">  586</span>&#160;                {</div>
<div class="line"><a name="l00587"></a><span class="lineno">  587</span>&#160;                    FoldPadIntoAveragePool2d&lt;Pooling2dLayer&gt;(optimizationViews, baseLayer,</div>
<div class="line"><a name="l00588"></a><span class="lineno">  588</span>&#160;                                                             poolingDescriptor, padLayer);</div>
<div class="line"><a name="l00589"></a><span class="lineno">  589</span>&#160;                    untouched.erase(baseLayer-&gt;<a class="code" href="classarmnn_1_1_layer.xhtml#a8dc12f0ee5b232d397bd18ced1a72a64">GetGuid</a>());</div>
<div class="line"><a name="l00590"></a><span class="lineno">  590</span>&#160;                    untouched.erase(padLayer-&gt;<a class="code" href="classarmnn_1_1_layer.xhtml#a8dc12f0ee5b232d397bd18ced1a72a64">GetGuid</a>());</div>
<div class="line"><a name="l00591"></a><span class="lineno">  591</span>&#160;                }</div>
<div class="line"><a name="l00592"></a><span class="lineno">  592</span>&#160;            }</div>
<div class="line"><a name="l00593"></a><span class="lineno">  593</span>&#160;        }</div>
<div class="line"><a name="l00594"></a><span class="lineno">  594</span>&#160;    }</div>
<div class="line"><a name="l00595"></a><span class="lineno">  595</span>&#160; </div>
<div class="line"><a name="l00596"></a><span class="lineno">  596</span>&#160;    <span class="keywordflow">if</span> (optimizationViews.<a class="code" href="classarmnn_1_1_optimization_views.xhtml#a9a1555f25af4a0ae2c0a1fc0ed9aded8">GetSubstitutions</a>().empty())</div>
<div class="line"><a name="l00597"></a><span class="lineno">  597</span>&#160;    {</div>
<div class="line"><a name="l00598"></a><span class="lineno">  598</span>&#160;        optimizationViews.<a class="code" href="classarmnn_1_1_optimization_views.xhtml#a28e41bdd6b719a3d60a1a0de2e1ebc95">AddUntouchedSubgraph</a>(<a class="code" href="classarmnn_1_1_subgraph_view.xhtml">SubgraphView</a>(subgraph));</div>
<div class="line"><a name="l00599"></a><span class="lineno">  599</span>&#160;    }</div>
<div class="line"><a name="l00600"></a><span class="lineno">  600</span>&#160;    <span class="keywordflow">else</span></div>
<div class="line"><a name="l00601"></a><span class="lineno">  601</span>&#160;    {</div>
<div class="line"><a name="l00602"></a><span class="lineno">  602</span>&#160;        <a class="code" href="namespacearmnn.xhtml#a5afd10e5e84ebf5cb8cfc8707492eda7">ReportUntouchedLayers</a>(optimizationViews, untouched);</div>
<div class="line"><a name="l00603"></a><span class="lineno">  603</span>&#160;    }</div>
<div class="line"><a name="l00604"></a><span class="lineno">  604</span>&#160; </div>
<div class="line"><a name="l00605"></a><span class="lineno">  605</span>&#160;    <span class="keywordflow">return</span> optimizationViews;</div>
<div class="line"><a name="l00606"></a><span class="lineno">  606</span>&#160;}</div>
<div class="line"><a name="l00607"></a><span class="lineno">  607</span>&#160; </div>
<div class="line"><a name="l00608"></a><span class="lineno">  608</span>&#160;} <span class="comment">// namespace armnn</span></div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<div class="ttc" id="anamespacearmnn_xhtml_a0591ff61ac269187164ea23713d33852"><div class="ttname"><a href="namespacearmnn.xhtml#a0591ff61ac269187164ea23713d33852">armnn::ClDivisionWorkloadValidate</a></div><div class="ttdeci">arm_compute::Status ClDivisionWorkloadValidate(const TensorInfo &amp;input0, const TensorInfo &amp;input1, const TensorInfo &amp;output, const ActivationDescriptor *activationDescriptor)</div><div class="ttdef"><b>Definition:</b> <a href="_cl_division_workload_8cpp_source.xhtml#l00018">ClDivisionWorkload.cpp:18</a></div></div>
<div class="ttc" id="ainclude_2armnn_2backends_2_i_memory_manager_8hpp_xhtml"><div class="ttname"><a href="include_2armnn_2backends_2_i_memory_manager_8hpp.xhtml">IMemoryManager.hpp</a></div></div>
<div class="ttc" id="aclassarmnn_1_1_batch_normalization_layer_xhtml_a2dfc280952c7939299c304fcbf855b97"><div class="ttname"><a href="classarmnn_1_1_batch_normalization_layer.xhtml#a2dfc280952c7939299c304fcbf855b97">armnn::BatchNormalizationLayer::m_Mean</a></div><div class="ttdeci">std::shared_ptr&lt; ConstTensorHandle &gt; m_Mean</div><div class="ttdoc">A unique pointer to store Mean values.</div><div class="ttdef"><b>Definition:</b> <a href="_batch_normalization_layer_8hpp_source.xhtml#l00019">BatchNormalizationLayer.hpp:19</a></div></div>
<div class="ttc" id="aclassarmnn_1_1_backend_id_xhtml"><div class="ttname"><a href="classarmnn_1_1_backend_id.xhtml">armnn::BackendId</a></div><div class="ttdef"><b>Definition:</b> <a href="_backend_id_8hpp_source.xhtml#l00075">BackendId.hpp:75</a></div></div>
<div class="ttc" id="anamespacearmnn_xhtml_a56943a0946e5f15e5e58054b8e7a04a4acab78faff25393e9defd1911cb58133e"><div class="ttname"><a href="namespacearmnn.xhtml#a56943a0946e5f15e5e58054b8e7a04a4acab78faff25393e9defd1911cb58133e">armnn::LayerType::FullyConnected</a></div><div class="ttdeci">@ FullyConnected</div></div>
<div class="ttc" id="astructarmnn_1_1_convolution2d_descriptor_xhtml_aea202e14d8874cefd9a0f778022b7e25"><div class="ttname"><a href="structarmnn_1_1_convolution2d_descriptor.xhtml#aea202e14d8874cefd9a0f778022b7e25">armnn::Convolution2dDescriptor::m_BiasEnabled</a></div><div class="ttdeci">bool m_BiasEnabled</div><div class="ttdoc">Enable/disable bias.</div><div class="ttdef"><b>Definition:</b> <a href="_descriptors_8hpp_source.xhtml#l00550">Descriptors.hpp:550</a></div></div>
<div class="ttc" id="astructarmnn_1_1_fully_connected_descriptor_xhtml_aea202e14d8874cefd9a0f778022b7e25"><div class="ttname"><a href="structarmnn_1_1_fully_connected_descriptor.xhtml#aea202e14d8874cefd9a0f778022b7e25">armnn::FullyConnectedDescriptor::m_BiasEnabled</a></div><div class="ttdeci">bool m_BiasEnabled</div><div class="ttdoc">Enable/disable bias.</div><div class="ttdef"><b>Definition:</b> <a href="_descriptors_8hpp_source.xhtml#l00494">Descriptors.hpp:494</a></div></div>
<div class="ttc" id="anamespacearmnn_xhtml_a14fcd7f88d11cea0a018269dca5f9277aec0fc0100c4fc1ce4eea230c3dc10360"><div class="ttname"><a href="namespacearmnn.xhtml#a14fcd7f88d11cea0a018269dca5f9277aec0fc0100c4fc1ce4eea230c3dc10360">armnn::MemorySource::Undefined</a></div><div class="ttdeci">@ Undefined</div></div>
<div class="ttc" id="aclassarmnn_1_1_batch_normalization_layer_xhtml"><div class="ttname"><a href="classarmnn_1_1_batch_normalization_layer.xhtml">armnn::BatchNormalizationLayer</a></div><div class="ttdoc">This layer represents a batch normalization operation.</div><div class="ttdef"><b>Definition:</b> <a href="_batch_normalization_layer_8hpp_source.xhtml#l00015">BatchNormalizationLayer.hpp:15</a></div></div>
<div class="ttc" id="aclassarmnn_1_1_input_slot_xhtml_a9effd325a6d512a3f8ff4bd207d53255"><div class="ttname"><a href="classarmnn_1_1_input_slot.xhtml#a9effd325a6d512a3f8ff4bd207d53255">armnn::InputSlot::GetConnectedOutputSlot</a></div><div class="ttdeci">const OutputSlot * GetConnectedOutputSlot() const</div><div class="ttdef"><b>Definition:</b> <a href="_layer_8hpp_source.xhtml#l00056">Layer.hpp:56</a></div></div>
<div class="ttc" id="astructarmnn_1_1_activation_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_activation_descriptor.xhtml">armnn::ActivationDescriptor</a></div><div class="ttdoc">An ActivationDescriptor for the ActivationLayer.</div><div class="ttdef"><b>Definition:</b> <a href="_descriptors_8hpp_source.xhtml#l00036">Descriptors.hpp:36</a></div></div>
<div class="ttc" id="aclassarmnn_1_1_tensor_handle_factory_registry_xhtml"><div class="ttname"><a href="classarmnn_1_1_tensor_handle_factory_registry.xhtml">armnn::TensorHandleFactoryRegistry</a></div><div class="ttdef"><b>Definition:</b> <a href="_tensor_handle_factory_registry_8hpp_source.xhtml#l00023">TensorHandleFactoryRegistry.hpp:23</a></div></div>
<div class="ttc" id="a_cl_subtraction_workload_8hpp_xhtml"><div class="ttname"><a href="_cl_subtraction_workload_8hpp.xhtml">ClSubtractionWorkload.hpp</a></div></div>
<div class="ttc" id="astructarmnn_1_1_fully_connected_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_fully_connected_descriptor.xhtml">armnn::FullyConnectedDescriptor</a></div><div class="ttdoc">A FullyConnectedDescriptor for the FullyConnectedLayer.</div><div class="ttdef"><b>Definition:</b> <a href="_descriptors_8hpp_source.xhtml#l00475">Descriptors.hpp:475</a></div></div>
<div class="ttc" id="aclassarmnn_1_1_cl_backend_xhtml_a93d4285a3ea5e4e3b35578484d889daa"><div class="ttname"><a href="classarmnn_1_1_cl_backend.xhtml#a93d4285a3ea5e4e3b35578484d889daa">armnn::ClBackend::GetLayerSupport</a></div><div class="ttdeci">IBackendInternal::ILayerSupportSharedPtr GetLayerSupport() const override</div><div class="ttdef"><b>Definition:</b> <a href="_cl_backend_8cpp_source.xhtml#l00253">ClBackend.cpp:253</a></div></div>
<div class="ttc" id="ainclude_2armnn_2backends_2_i_backend_context_8hpp_xhtml"><div class="ttname"><a href="include_2armnn_2backends_2_i_backend_context_8hpp.xhtml">IBackendContext.hpp</a></div></div>
<div class="ttc" id="aclassarmnn_1_1_subgraph_view_xhtml_ae7f023c08e38703a2b8286013885b409"><div class="ttname"><a href="classarmnn_1_1_subgraph_view.xhtml#ae7f023c08e38703a2b8286013885b409">armnn::SubgraphView::beginIConnectable</a></div><div class="ttdeci">IConnectableLayerIterator beginIConnectable()</div><div class="ttdef"><b>Definition:</b> <a href="_subgraph_view_8cpp_source.xhtml#l00324">SubgraphView.cpp:324</a></div></div>
<div class="ttc" id="anamespacearmnn_xhtml_a14fcd7f88d11cea0a018269dca5f9277a1131a914388fac73e5f07b0ba0aad523"><div class="ttname"><a href="namespacearmnn.xhtml#a14fcd7f88d11cea0a018269dca5f9277a1131a914388fac73e5f07b0ba0aad523">armnn::MemorySource::Malloc</a></div><div class="ttdeci">@ Malloc</div></div>
<div class="ttc" id="aclassarmnn_1_1_cl_backend_xhtml_a177af502214bbc8123fbb4a3c4f0a1b8"><div class="ttname"><a href="classarmnn_1_1_cl_backend.xhtml#a177af502214bbc8123fbb4a3c4f0a1b8">armnn::ClBackend::GetIdStatic</a></div><div class="ttdeci">static const BackendId &amp; GetIdStatic()</div><div class="ttdef"><b>Definition:</b> <a href="_cl_backend_8cpp_source.xhtml#l00045">ClBackend.cpp:45</a></div></div>
<div class="ttc" id="anamespacearmnn_xhtml_a56943a0946e5f15e5e58054b8e7a04a4a6eb8b8b560161603402c0238b3a7d8b0"><div class="ttname"><a href="namespacearmnn.xhtml#a56943a0946e5f15e5e58054b8e7a04a4a6eb8b8b560161603402c0238b3a7d8b0">armnn::LayerType::Subtraction</a></div><div class="ttdeci">@ Subtraction</div></div>
<div class="ttc" id="aclassarmnn_1_1_i_backend_internal_xhtml_a72ca1cf423bda4b0a9ffb789627126de"><div class="ttname"><a href="classarmnn_1_1_i_backend_internal.xhtml#a72ca1cf423bda4b0a9ffb789627126de">armnn::IBackendInternal::IWorkloadFactoryPtr</a></div><div class="ttdeci">std::unique_ptr&lt; IWorkloadFactory &gt; IWorkloadFactoryPtr</div><div class="ttdef"><b>Definition:</b> <a href="_i_backend_internal_8hpp_source.xhtml#l00089">IBackendInternal.hpp:89</a></div></div>
<div class="ttc" id="anamespacearmnn_xhtml_a56943a0946e5f15e5e58054b8e7a04a4adb033d2f81b68f9a17e8f62de69fed4a"><div class="ttname"><a href="namespacearmnn.xhtml#a56943a0946e5f15e5e58054b8e7a04a4adb033d2f81b68f9a17e8f62de69fed4a">armnn::LayerType::Convolution2d</a></div><div class="ttdeci">@ Convolution2d</div></div>
<div class="ttc" id="astructarmnn_1_1_reduce_descriptor_xhtml_aa1c6fc8c96404252f1072632fc5acb59"><div class="ttname"><a href="structarmnn_1_1_reduce_descriptor.xhtml#aa1c6fc8c96404252f1072632fc5acb59">armnn::ReduceDescriptor::m_vAxis</a></div><div class="ttdeci">std::vector&lt; uint32_t &gt; m_vAxis</div><div class="ttdoc">The indices of the dimensions to reduce.</div><div class="ttdef"><b>Definition:</b> <a href="_descriptors_8hpp_source.xhtml#l01503">Descriptors.hpp:1503</a></div></div>
<div class="ttc" id="a_cl_depthwise_convolution_workload_8hpp_xhtml"><div class="ttname"><a href="_cl_depthwise_convolution_workload_8hpp.xhtml">ClDepthwiseConvolutionWorkload.hpp</a></div></div>
<div class="ttc" id="astructarmnn_1_1_reduce_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_reduce_descriptor.xhtml">armnn::ReduceDescriptor</a></div><div class="ttdoc">A ReduceDescriptor for the REDUCE operators.</div><div class="ttdef"><b>Definition:</b> <a href="_descriptors_8hpp_source.xhtml#l01485">Descriptors.hpp:1485</a></div></div>
<div class="ttc" id="astructarmnn_1_1_i_runtime_1_1_creation_options_xhtml"><div class="ttname"><a href="structarmnn_1_1_i_runtime_1_1_creation_options.xhtml">armnn::IRuntime::CreationOptions</a></div><div class="ttdef"><b>Definition:</b> <a href="_i_runtime_8hpp_source.xhtml#l00085">IRuntime.hpp:85</a></div></div>
<div class="ttc" id="aclassarmnn_1_1_multiplication_layer_xhtml"><div class="ttname"><a href="classarmnn_1_1_multiplication_layer.xhtml">armnn::MultiplicationLayer</a></div><div class="ttdoc">This layer represents a multiplication operation.</div><div class="ttdef"><b>Definition:</b> <a href="_multiplication_layer_8hpp_source.xhtml#l00014">MultiplicationLayer.hpp:14</a></div></div>
<div class="ttc" id="a_polymorphic_downcast_8hpp_xhtml"><div class="ttname"><a href="_polymorphic_downcast_8hpp.xhtml">PolymorphicDowncast.hpp</a></div></div>
<div class="ttc" id="aclassarmnn_1_1_layer_xhtml"><div class="ttname"><a href="classarmnn_1_1_layer.xhtml">armnn::Layer</a></div><div class="ttdef"><b>Definition:</b> <a href="_layer_8hpp_source.xhtml#l00217">Layer.hpp:217</a></div></div>
<div class="ttc" id="anamespacearmnn_xhtml_a5b6893cda5b69359a4244c06054da18f"><div class="ttname"><a href="namespacearmnn.xhtml#a5b6893cda5b69359a4244c06054da18f">armnn::ModelOptions</a></div><div class="ttdeci">std::vector&lt; BackendOptions &gt; ModelOptions</div><div class="ttdef"><b>Definition:</b> <a href="_backend_options_8hpp_source.xhtml#l00018">BackendOptions.hpp:18</a></div></div>
<div class="ttc" id="aclassarmnn_1_1_cl_backend_xhtml_adda2579a4649278c81f18a1d3915b3a0"><div class="ttname"><a href="classarmnn_1_1_cl_backend.xhtml#adda2579a4649278c81f18a1d3915b3a0">armnn::ClBackend::m_UsingCustomAllocator</a></div><div class="ttdeci">bool m_UsingCustomAllocator</div><div class="ttdef"><b>Definition:</b> <a href="_cl_backend_8hpp_source.xhtml#l00300">ClBackend.hpp:300</a></div></div>
<div class="ttc" id="anamespacearmnn_xhtml_a29bd65c1ec4ff9f75b636ec8e7b038be"><div class="ttname"><a href="namespacearmnn.xhtml#a29bd65c1ec4ff9f75b636ec8e7b038be">armnn::ClBatchNormalizationValidate</a></div><div class="ttdeci">arm_compute::Status ClBatchNormalizationValidate(const TensorInfo &amp;input, const TensorInfo &amp;output, const TensorInfo &amp;mean, const TensorInfo &amp;var, const TensorInfo &amp;beta, const TensorInfo &amp;gamma, const BatchNormalizationDescriptor &amp;descriptor, const ActivationDescriptor *activationDescriptor)</div><div class="ttdef"><b>Definition:</b> <a href="_cl_batch_normalization_float_workload_8cpp_source.xhtml#l00019">ClBatchNormalizationFloatWorkload.cpp:19</a></div></div>
<div class="ttc" id="a_arm_compute_subgraph_utils_8hpp_xhtml"><div class="ttname"><a href="_arm_compute_subgraph_utils_8hpp.xhtml">ArmComputeSubgraphUtils.hpp</a></div></div>
<div class="ttc" id="astructarmnn_1_1_depthwise_convolution2d_descriptor_xhtml_aea202e14d8874cefd9a0f778022b7e25"><div class="ttname"><a href="structarmnn_1_1_depthwise_convolution2d_descriptor.xhtml#aea202e14d8874cefd9a0f778022b7e25">armnn::DepthwiseConvolution2dDescriptor::m_BiasEnabled</a></div><div class="ttdeci">bool m_BiasEnabled</div><div class="ttdoc">Enable/disable bias.</div><div class="ttdef"><b>Definition:</b> <a href="_descriptors_8hpp_source.xhtml#l00676">Descriptors.hpp:676</a></div></div>
<div class="ttc" id="a_cl_addition_workload_8hpp_xhtml"><div class="ttname"><a href="_cl_addition_workload_8hpp.xhtml">ClAdditionWorkload.hpp</a></div></div>
<div class="ttc" id="aclassarmnn_1_1_cl_backend_xhtml_a93fcb3bff141d8c77b53466a44b58eee"><div class="ttname"><a href="classarmnn_1_1_cl_backend.xhtml#a93fcb3bff141d8c77b53466a44b58eee">armnn::ClBackend::CreateMemoryManager</a></div><div class="ttdeci">IBackendInternal::IMemoryManagerUniquePtr CreateMemoryManager() const override</div><div class="ttdef"><b>Definition:</b> <a href="_cl_backend_8cpp_source.xhtml#l00051">ClBackend.cpp:51</a></div></div>
<div class="ttc" id="a_cl_tensor_handle_factory_8hpp_xhtml"><div class="ttname"><a href="_cl_tensor_handle_factory_8hpp.xhtml">ClTensorHandleFactory.hpp</a></div></div>
<div class="ttc" id="anamespacearmnn_xhtml_a56943a0946e5f15e5e58054b8e7a04a4ade43468adaf6acb2c38ebc0c1176f82f"><div class="ttname"><a href="namespacearmnn.xhtml#a56943a0946e5f15e5e58054b8e7a04a4ade43468adaf6acb2c38ebc0c1176f82f">armnn::LayerType::Pad</a></div><div class="ttdeci">@ Pad</div></div>
<div class="ttc" id="anamespacearmnn_xhtml_a56943a0946e5f15e5e58054b8e7a04a4a7c5531bbefed0945814f874baf9e0e0f"><div class="ttname"><a href="namespacearmnn.xhtml#a56943a0946e5f15e5e58054b8e7a04a4a7c5531bbefed0945814f874baf9e0e0f">armnn::LayerType::Addition</a></div><div class="ttdeci">@ Addition</div></div>
<div class="ttc" id="aclassarmnn_1_1_cl_tensor_handle_factory_xhtml_acdecb5b442434112c2cc8fc48c0ea922"><div class="ttname"><a href="classarmnn_1_1_cl_tensor_handle_factory.xhtml#acdecb5b442434112c2cc8fc48c0ea922">armnn::ClTensorHandleFactory::GetIdStatic</a></div><div class="ttdeci">static const FactoryId &amp; GetIdStatic()</div><div class="ttdef"><b>Definition:</b> <a href="_cl_tensor_handle_factory_8cpp_source.xhtml#l00093">ClTensorHandleFactory.cpp:93</a></div></div>
<div class="ttc" id="anamespacearmnn_xhtml_a56943a0946e5f15e5e58054b8e7a04a4ae4743c3ec15d1d84169b17264634692e"><div class="ttname"><a href="namespacearmnn.xhtml#a56943a0946e5f15e5e58054b8e7a04a4ae4743c3ec15d1d84169b17264634692e">armnn::LayerType::BatchNormalization</a></div><div class="ttdeci">@ BatchNormalization</div></div>
<div class="ttc" id="a_cl_backend_model_context_8hpp_xhtml"><div class="ttname"><a href="_cl_backend_model_context_8hpp.xhtml">ClBackendModelContext.hpp</a></div></div>
<div class="ttc" id="anamespacearmnn_xhtml_a56943a0946e5f15e5e58054b8e7a04a4aec4875f03ff0bb0b26cf76ac7f41e3c8"><div class="ttname"><a href="namespacearmnn.xhtml#a56943a0946e5f15e5e58054b8e7a04a4aec4875f03ff0bb0b26cf76ac7f41e3c8">armnn::LayerType::Reduce</a></div><div class="ttdeci">@ Reduce</div></div>
<div class="ttc" id="aclassarmnn_1_1_cl_backend_context_xhtml"><div class="ttname"><a href="classarmnn_1_1_cl_backend_context.xhtml">armnn::ClBackendContext</a></div><div class="ttdef"><b>Definition:</b> <a href="_cl_backend_context_8hpp_source.xhtml#l00017">ClBackendContext.hpp:17</a></div></div>
<div class="ttc" id="aclassarmnn_1_1_tensor_handle_factory_registry_xhtml_a05f82bd846630bb3aa8afe22ef6f15fc"><div class="ttname"><a href="classarmnn_1_1_tensor_handle_factory_registry.xhtml#a05f82bd846630bb3aa8afe22ef6f15fc">armnn::TensorHandleFactoryRegistry::RegisterFactory</a></div><div class="ttdeci">void RegisterFactory(std::unique_ptr&lt; ITensorHandleFactory &gt; allocator)</div><div class="ttdoc">Register a TensorHandleFactory and transfer ownership.</div><div class="ttdef"><b>Definition:</b> <a href="_tensor_handle_factory_registry_8cpp_source.xhtml#l00012">TensorHandleFactoryRegistry.cpp:12</a></div></div>
<div class="ttc" id="a_cl_fully_connected_workload_8hpp_xhtml"><div class="ttname"><a href="_cl_fully_connected_workload_8hpp.xhtml">ClFullyConnectedWorkload.hpp</a></div></div>
<div class="ttc" id="anamespacearmnn_xhtml_a56943a0946e5f15e5e58054b8e7a04a4a3025cdaab2deb0bb2cd642449e570833"><div class="ttname"><a href="namespacearmnn.xhtml#a56943a0946e5f15e5e58054b8e7a04a4a3025cdaab2deb0bb2cd642449e570833">armnn::LayerType::Division</a></div><div class="ttdeci">@ Division</div></div>
<div class="ttc" id="aclassarmnn_1_1_i_backend_internal_xhtml_a693b40e6b94e958836aeb0410ca186bd"><div class="ttname"><a href="classarmnn_1_1_i_backend_internal.xhtml#a693b40e6b94e958836aeb0410ca186bd">armnn::IBackendInternal::IMemoryManagerSharedPtr</a></div><div class="ttdeci">std::shared_ptr&lt; IMemoryManager &gt; IMemoryManagerSharedPtr</div><div class="ttdef"><b>Definition:</b> <a href="_i_backend_internal_8hpp_source.xhtml#l00099">IBackendInternal.hpp:99</a></div></div>
<div class="ttc" id="anamespacearmnn_xhtml_a5afd10e5e84ebf5cb8cfc8707492eda7"><div class="ttname"><a href="namespacearmnn.xhtml#a5afd10e5e84ebf5cb8cfc8707492eda7">armnn::ReportUntouchedLayers</a></div><div class="ttdeci">void ReportUntouchedLayers(OptimizationViews &amp;optimizationViews, std::map&lt; LayerGuid, Layer * &gt; untouched)</div><div class="ttdef"><b>Definition:</b> <a href="_subgraph_utils_8hpp_source.xhtml#l00052">SubgraphUtils.hpp:52</a></div></div>
<div class="ttc" id="anamespacearmnn_xhtml"><div class="ttname"><a href="namespacearmnn.xhtml">armnn</a></div><div class="ttdoc">Copyright (c) 2021 ARM Limited and Contributors.</div><div class="ttdef"><b>Definition:</b> <a href="01__00__quick__start_8dox_source.xhtml#l00006">01_00_quick_start.dox:6</a></div></div>
<div class="ttc" id="aclassarmnn_1_1_i_backend_internal_xhtml_a12bff6d51d63dac1375c89bc8415dc46"><div class="ttname"><a href="classarmnn_1_1_i_backend_internal.xhtml#a12bff6d51d63dac1375c89bc8415dc46">armnn::IBackendInternal::IMemoryManagerUniquePtr</a></div><div class="ttdeci">std::unique_ptr&lt; IMemoryManager &gt; IMemoryManagerUniquePtr</div><div class="ttdef"><b>Definition:</b> <a href="_i_backend_internal_8hpp_source.xhtml#l00098">IBackendInternal.hpp:98</a></div></div>
<div class="ttc" id="aclassarmnn_1_1_subgraph_view_xhtml_a0761bda72b62372d1495cbe9771a75a9"><div class="ttname"><a href="classarmnn_1_1_subgraph_view.xhtml#a0761bda72b62372d1495cbe9771a75a9">armnn::SubgraphView::endIConnectable</a></div><div class="ttdeci">IConnectableLayerIterator endIConnectable()</div><div class="ttdef"><b>Definition:</b> <a href="_subgraph_view_8cpp_source.xhtml#l00329">SubgraphView.cpp:329</a></div></div>
<div class="ttc" id="anamespacearmnn_1_1optimizations_1_1pad__fold_xhtml_a33ffc65d1f6581b0789d3d3a033f698e"><div class="ttname"><a href="namespacearmnn_1_1optimizations_1_1pad__fold.xhtml#a33ffc65d1f6581b0789d3d3a033f698e">armnn::optimizations::pad_fold::TryFoldPadIntoLayer2d</a></div><div class="ttdeci">bool TryFoldPadIntoLayer2d(const PadDescriptor &amp;padDescriptor, Descriptor &amp;layerDescriptor, const TensorInfo &amp;tensorInfo)</div><div class="ttdef"><b>Definition:</b> <a href="_fold_pad_into_layer2d_8hpp_source.xhtml#l00088">FoldPadIntoLayer2d.hpp:88</a></div></div>
<div class="ttc" id="aclassarmnn_1_1_output_slot_xhtml_ada2ad7d1caeeb4ef6195c8925fad6a65"><div class="ttname"><a href="classarmnn_1_1_output_slot.xhtml#ada2ad7d1caeeb4ef6195c8925fad6a65">armnn::OutputSlot::GetTensorInfo</a></div><div class="ttdeci">const TensorInfo &amp; GetTensorInfo() const override</div><div class="ttdef"><b>Definition:</b> <a href="_layer_8cpp_source.xhtml#l00092">Layer.cpp:92</a></div></div>
<div class="ttc" id="aclassarmnn_1_1_optimization_views_xhtml"><div class="ttname"><a href="classarmnn_1_1_optimization_views.xhtml">armnn::OptimizationViews</a></div><div class="ttdef"><b>Definition:</b> <a href="include_2armnn_2backends_2_optimization_views_8hpp_source.xhtml#l00018">OptimizationViews.hpp:18</a></div></div>
<div class="ttc" id="a_cl_multiplication_workload_8hpp_xhtml"><div class="ttname"><a href="_cl_multiplication_workload_8hpp.xhtml">ClMultiplicationWorkload.hpp</a></div></div>
<div class="ttc" id="a_cl_layer_support_8hpp_xhtml"><div class="ttname"><a href="_cl_layer_support_8hpp.xhtml">ClLayerSupport.hpp</a></div></div>
<div class="ttc" id="aclassarmnn_1_1_cl_backend_xhtml_a531177ce89c53c6af616175b0b05e5c0"><div class="ttname"><a href="classarmnn_1_1_cl_backend.xhtml#a531177ce89c53c6af616175b0b05e5c0">armnn::ClBackend::RegisterTensorHandleFactories</a></div><div class="ttdeci">void RegisterTensorHandleFactories(TensorHandleFactoryRegistry &amp;registry) override</div><div class="ttdoc">(Optional) Register TensorHandleFactories Either this method or CreateMemoryManager() and IWorkloadFa...</div><div class="ttdef"><b>Definition:</b> <a href="_cl_backend_8cpp_source.xhtml#l00176">ClBackend.cpp:176</a></div></div>
<div class="ttc" id="a_cl_convolution2d_workload_8hpp_xhtml"><div class="ttname"><a href="_cl_convolution2d_workload_8hpp.xhtml">ClConvolution2dWorkload.hpp</a></div></div>
<div class="ttc" id="anamespacearmnn_xhtml_a56943a0946e5f15e5e58054b8e7a04a4aa9a62e70841c4d06dd16306a85700d36"><div class="ttname"><a href="namespacearmnn.xhtml#a56943a0946e5f15e5e58054b8e7a04a4aa9a62e70841c4d06dd16306a85700d36">armnn::LayerType::Activation</a></div><div class="ttdeci">@ Activation</div></div>
<div class="ttc" id="a_cl_backend_context_8hpp_xhtml"><div class="ttname"><a href="_cl_backend_context_8hpp.xhtml">ClBackendContext.hpp</a></div></div>
<div class="ttc" id="anamespacearmnn_xhtml_a9638165cb6c1baae3b2b5fd9f0f75201"><div class="ttname"><a href="namespacearmnn.xhtml#a9638165cb6c1baae3b2b5fd9f0f75201">armnn::ClMultiplicationWorkloadValidate</a></div><div class="ttdeci">arm_compute::Status ClMultiplicationWorkloadValidate(const TensorInfo &amp;input0, const TensorInfo &amp;input1, const TensorInfo &amp;output, const ActivationDescriptor *activationDescriptor)</div><div class="ttdef"><b>Definition:</b> <a href="_cl_multiplication_workload_8cpp_source.xhtml#l00018">ClMultiplicationWorkload.cpp:18</a></div></div>
<div class="ttc" id="aclassarmnn_1_1_cl_backend_model_context_xhtml"><div class="ttname"><a href="classarmnn_1_1_cl_backend_model_context.xhtml">armnn::ClBackendModelContext</a></div><div class="ttdoc">The ClBackendModelContext is used to pass in CL specific backend ModelOptions.</div><div class="ttdef"><b>Definition:</b> <a href="_cl_backend_model_context_8hpp_source.xhtml#l00028">ClBackendModelContext.hpp:28</a></div></div>
<div class="ttc" id="anamespacearmnn_xhtml_adfe10e7086e3e3b98927cf84aee03dd0"><div class="ttname"><a href="namespacearmnn.xhtml#adfe10e7086e3e3b98927cf84aee03dd0">armnn::ClBackendId</a></div><div class="ttdeci">constexpr const char * ClBackendId()</div><div class="ttdef"><b>Definition:</b> <a href="_cl_backend_id_8hpp_source.xhtml#l00010">ClBackendId.hpp:10</a></div></div>
<div class="ttc" id="a_cl_division_workload_8hpp_xhtml"><div class="ttname"><a href="_cl_division_workload_8hpp.xhtml">ClDivisionWorkload.hpp</a></div></div>
<div class="ttc" id="anamespacearmnn_xhtml_afa9933f1d9de469ffba5ba0fcee769f8"><div class="ttname"><a href="namespacearmnn.xhtml#afa9933f1d9de469ffba5ba0fcee769f8">armnn::ClSubtractionValidate</a></div><div class="ttdeci">arm_compute::Status ClSubtractionValidate(const TensorInfo &amp;input0, const TensorInfo &amp;input1, const TensorInfo &amp;output, const ActivationDescriptor *activationDescriptor)</div><div class="ttdef"><b>Definition:</b> <a href="_cl_subtraction_workload_8cpp_source.xhtml#l00046">ClSubtractionWorkload.cpp:46</a></div></div>
<div class="ttc" id="a_cl_workload_factory_8hpp_xhtml"><div class="ttname"><a href="_cl_workload_factory_8hpp.xhtml">ClWorkloadFactory.hpp</a></div></div>
<div class="ttc" id="aclassarmnn_1_1_i_backend_internal_xhtml_a4d0238968a7643dbb170547dd22bba54"><div class="ttname"><a href="classarmnn_1_1_i_backend_internal.xhtml#a4d0238968a7643dbb170547dd22bba54">armnn::IBackendInternal::IBackendSpecificModelContextPtr</a></div><div class="ttdeci">std::shared_ptr&lt; IBackendModelContext &gt; IBackendSpecificModelContextPtr</div><div class="ttdef"><b>Definition:</b> <a href="_i_backend_internal_8hpp_source.xhtml#l00096">IBackendInternal.hpp:96</a></div></div>
<div class="ttc" id="anamespacearmnn_xhtml_a56943a0946e5f15e5e58054b8e7a04a4af97adbfc88b7012a0243215b1076e7e7"><div class="ttname"><a href="namespacearmnn.xhtml#a56943a0946e5f15e5e58054b8e7a04a4af97adbfc88b7012a0243215b1076e7e7">armnn::LayerType::DepthwiseConvolution2d</a></div><div class="ttdeci">@ DepthwiseConvolution2d</div></div>
<div class="ttc" id="a_base_memory_manager_8hpp_xhtml"><div class="ttname"><a href="_base_memory_manager_8hpp.xhtml">BaseMemoryManager.hpp</a></div></div>
<div class="ttc" id="anamespacearmnn_xhtml_a18c7eef8533ca0acbbe081cd1a1fec98"><div class="ttname"><a href="namespacearmnn.xhtml#a18c7eef8533ca0acbbe081cd1a1fec98">armnn::ClFullyConnectedWorkloadValidate</a></div><div class="ttdeci">arm_compute::Status ClFullyConnectedWorkloadValidate(const TensorInfo &amp;input, const TensorInfo &amp;output, const TensorInfo &amp;weights, const Optional&lt; TensorInfo &gt; &amp;biases, const FullyConnectedDescriptor &amp;descriptor, const ActivationDescriptor *activationDescriptor)</div><div class="ttdef"><b>Definition:</b> <a href="_cl_fully_connected_workload_8cpp_source.xhtml#l00019">ClFullyConnectedWorkload.cpp:19</a></div></div>
<div class="ttc" id="aclassarmnn_1_1_layer_xhtml_a0e36688a43c35668d8db5257274c68fe"><div class="ttname"><a href="classarmnn_1_1_layer.xhtml#a0e36688a43c35668d8db5257274c68fe">armnn::Layer::GetOutputSlot</a></div><div class="ttdeci">const OutputSlot &amp; GetOutputSlot(unsigned int index=0) const override</div><div class="ttdoc">Get the const output slot handle by slot index.</div><div class="ttdef"><b>Definition:</b> <a href="_layer_8hpp_source.xhtml#l00326">Layer.hpp:326</a></div></div>
<div class="ttc" id="aclassarmnn_1_1_optimization_views_xhtml_a28e41bdd6b719a3d60a1a0de2e1ebc95"><div class="ttname"><a href="classarmnn_1_1_optimization_views.xhtml#a28e41bdd6b719a3d60a1a0de2e1ebc95">armnn::OptimizationViews::AddUntouchedSubgraph</a></div><div class="ttdeci">void AddUntouchedSubgraph(SubgraphView &amp;&amp;subgraph)</div><div class="ttdef"><b>Definition:</b> <a href="include_2armnn_2backends_2_optimization_views_8hpp_source.xhtml#l00049">OptimizationViews.hpp:49</a></div></div>
<div class="ttc" id="aclassarmnn_1_1_cl_backend_xhtml_afb75bad43612f5314622c4fa8a16e63d"><div class="ttname"><a href="classarmnn_1_1_cl_backend.xhtml#afb75bad43612f5314622c4fa8a16e63d">armnn::ClBackend::GetDefaultAllocator</a></div><div class="ttdeci">std::unique_ptr&lt; ICustomAllocator &gt; GetDefaultAllocator() const override</div><div class="ttdoc">Returns the default memory allocator for the backend.</div><div class="ttdef"><b>Definition:</b> <a href="_cl_backend_8cpp_source.xhtml#l00271">ClBackend.cpp:271</a></div></div>
<div class="ttc" id="a_cl_reduce_workload_8hpp_xhtml"><div class="ttname"><a href="_cl_reduce_workload_8hpp.xhtml">ClReduceWorkload.hpp</a></div></div>
<div class="ttc" id="aclassarmnn_1_1_subtraction_layer_xhtml"><div class="ttname"><a href="classarmnn_1_1_subtraction_layer.xhtml">armnn::SubtractionLayer</a></div><div class="ttdoc">This layer represents a subtraction operation.</div><div class="ttdef"><b>Definition:</b> <a href="_subtraction_layer_8hpp_source.xhtml#l00014">SubtractionLayer.hpp:14</a></div></div>
<div class="ttc" id="aclassarmnn_1_1_tensor_handle_factory_registry_xhtml_afae069d084e8541c8970d17d26011ac6"><div class="ttname"><a href="classarmnn_1_1_tensor_handle_factory_registry.xhtml#afae069d084e8541c8970d17d26011ac6">armnn::TensorHandleFactoryRegistry::RegisterCopyAndImportFactoryPair</a></div><div class="ttdeci">void RegisterCopyAndImportFactoryPair(ITensorHandleFactory::FactoryId copyFactoryId, ITensorHandleFactory::FactoryId importFactoryId)</div><div class="ttdoc">Register a pair of TensorHandleFactory Id for Memory Copy and TensorHandleFactory Id for Memory Impor...</div><div class="ttdef"><b>Definition:</b> <a href="_tensor_handle_factory_registry_8cpp_source.xhtml#l00066">TensorHandleFactoryRegistry.cpp:66</a></div></div>
<div class="ttc" id="anamespacearmnn_xhtml_aa6670a2fcf9f365da69f3f3092dfa64b"><div class="ttname"><a href="namespacearmnn.xhtml#aa6670a2fcf9f365da69f3f3092dfa64b">armnn::ClDepthwiseConvolutionWorkloadValidate</a></div><div class="ttdeci">arm_compute::Status ClDepthwiseConvolutionWorkloadValidate(const TensorInfo &amp;input, const TensorInfo &amp;output, const DepthwiseConvolution2dDescriptor &amp;descriptor, const TensorInfo &amp;weights, const Optional&lt; TensorInfo &gt; &amp;biases, const ActivationDescriptor *activationDescriptor)</div><div class="ttdef"><b>Definition:</b> <a href="_cl_depthwise_convolution_workload_8cpp_source.xhtml#l00026">ClDepthwiseConvolutionWorkload.cpp:26</a></div></div>
<div class="ttc" id="a_optimizer_8hpp_xhtml"><div class="ttname"><a href="_optimizer_8hpp.xhtml">Optimizer.hpp</a></div></div>
<div class="ttc" id="aclassarmnn_1_1_layer_xhtml_ad8e15c530c929ab823d89ae9fd2d3f11"><div class="ttname"><a href="classarmnn_1_1_layer.xhtml#ad8e15c530c929ab823d89ae9fd2d3f11">armnn::Layer::GetType</a></div><div class="ttdeci">LayerType GetType() const override</div><div class="ttdoc">Returns the armnn::LayerType of this layer.</div><div class="ttdef"><b>Definition:</b> <a href="_layer_8hpp_source.xhtml#l00273">Layer.hpp:273</a></div></div>
<div class="ttc" id="anamespacearmnn_xhtml_a56943a0946e5f15e5e58054b8e7a04a4ad662867a41bfb30b9f75dda2b5849001"><div class="ttname"><a href="namespacearmnn.xhtml#a56943a0946e5f15e5e58054b8e7a04a4ad662867a41bfb30b9f75dda2b5849001">armnn::LayerType::Pooling2d</a></div><div class="ttdeci">@ Pooling2d</div></div>
<div class="ttc" id="aclassarmnn_1_1_subgraph_view_xhtml"><div class="ttname"><a href="classarmnn_1_1_subgraph_view.xhtml">armnn::SubgraphView</a></div><div class="ttdoc">The SubgraphView class represents a subgraph of a Graph.</div><div class="ttdef"><b>Definition:</b> <a href="_subgraph_view_8hpp_source.xhtml#l00031">SubgraphView.hpp:31</a></div></div>
<div class="ttc" id="aclassarmnn_1_1_i_backend_internal_xhtml_ae44a82b0e485e551a0f77150b1076e06"><div class="ttname"><a href="classarmnn_1_1_i_backend_internal.xhtml#ae44a82b0e485e551a0f77150b1076e06">armnn::IBackendInternal::IBackendProfilingContextPtr</a></div><div class="ttdeci">std::shared_ptr&lt; arm::pipe::IBackendProfilingContext &gt; IBackendProfilingContextPtr</div><div class="ttdoc">This is the bridge between backend and backend profiling we'll keep it in the backend namespace.</div><div class="ttdef"><b>Definition:</b> <a href="_i_backend_internal_8hpp_source.xhtml#l00092">IBackendInternal.hpp:92</a></div></div>
<div class="ttc" id="a_arm_compute_utils_8hpp_xhtml"><div class="ttname"><a href="_arm_compute_utils_8hpp.xhtml">ArmComputeUtils.hpp</a></div></div>
<div class="ttc" id="aclassarmnn_1_1_layer_xhtml_a817d4be6dd88f532d36f51748ec14185"><div class="ttname"><a href="classarmnn_1_1_layer.xhtml#a817d4be6dd88f532d36f51748ec14185">armnn::Layer::BeginOutputSlots</a></div><div class="ttdeci">std::vector&lt; OutputSlot &gt;::iterator BeginOutputSlots()</div><div class="ttdef"><b>Definition:</b> <a href="_layer_8hpp_source.xhtml#l00253">Layer.hpp:253</a></div></div>
<div class="ttc" id="anamespacearmnn_xhtml_a67a0db04d321a74b7e7fcfd3f1a3f70b"><div class="ttname"><a href="namespacearmnn.xhtml#a67a0db04d321a74b7e7fcfd3f1a3f70b">armnn::Status</a></div><div class="ttdeci">Status</div><div class="ttdef"><b>Definition:</b> <a href="_types_8hpp_source.xhtml#l00042">Types.hpp:42</a></div></div>
<div class="ttc" id="a_cl_backend_8hpp_xhtml"><div class="ttname"><a href="_cl_backend_8hpp.xhtml">ClBackend.hpp</a></div></div>
<div class="ttc" id="aclassarmnn_1_1_reduce_layer_xhtml"><div class="ttname"><a href="classarmnn_1_1_reduce_layer.xhtml">armnn::ReduceLayer</a></div><div class="ttdoc">This layer represents a reduction operation.</div><div class="ttdef"><b>Definition:</b> <a href="_reduce_layer_8hpp_source.xhtml#l00014">ReduceLayer.hpp:14</a></div></div>
<div class="ttc" id="aclassarmnn_1_1_cl_import_tensor_handle_factory_xhtml_acdecb5b442434112c2cc8fc48c0ea922"><div class="ttname"><a href="classarmnn_1_1_cl_import_tensor_handle_factory.xhtml#acdecb5b442434112c2cc8fc48c0ea922">armnn::ClImportTensorHandleFactory::GetIdStatic</a></div><div class="ttdeci">static const FactoryId &amp; GetIdStatic()</div><div class="ttdef"><b>Definition:</b> <a href="_cl_import_tensor_handle_factory_8cpp_source.xhtml#l00093">ClImportTensorHandleFactory.cpp:93</a></div></div>
<div class="ttc" id="aclassarmnn_1_1_output_slot_xhtml_a7ddaf04177053a536f0e7be83a642bc6"><div class="ttname"><a href="classarmnn_1_1_output_slot.xhtml#a7ddaf04177053a536f0e7be83a642bc6">armnn::OutputSlot::GetOwningLayer</a></div><div class="ttdeci">Layer &amp; GetOwningLayer() const</div><div class="ttdef"><b>Definition:</b> <a href="_layer_8hpp_source.xhtml#l00119">Layer.hpp:119</a></div></div>
<div class="ttc" id="aclassarmnn_1_1_i_backend_internal_xhtml_a11fa919c11fe46aad613b2e960fcfe90"><div class="ttname"><a href="classarmnn_1_1_i_backend_internal.xhtml#a11fa919c11fe46aad613b2e960fcfe90">armnn::IBackendInternal::ILayerSupportSharedPtr</a></div><div class="ttdeci">std::shared_ptr&lt; ILayerSupport &gt; ILayerSupportSharedPtr</div><div class="ttdef"><b>Definition:</b> <a href="_i_backend_internal_8hpp_source.xhtml#l00094">IBackendInternal.hpp:94</a></div></div>
<div class="ttc" id="aclassarmnn_1_1_cl_backend_xhtml_a339efc194a1738cd93fcdde4d948a5cd"><div class="ttname"><a href="classarmnn_1_1_cl_backend.xhtml#a339efc194a1738cd93fcdde4d948a5cd">armnn::ClBackend::OptimizeSubgraphView</a></div><div class="ttdeci">OptimizationViews OptimizeSubgraphView(const SubgraphView &amp;subgraph, const ModelOptions &amp;modelOptions) const override</div><div class="ttdef"><b>Definition:</b> <a href="_cl_backend_8cpp_source.xhtml#l00276">ClBackend.cpp:276</a></div></div>
<div class="ttc" id="aclassarmnn_1_1_fully_connected_layer_xhtml"><div class="ttname"><a href="classarmnn_1_1_fully_connected_layer.xhtml">armnn::FullyConnectedLayer</a></div><div class="ttdoc">This layer represents a fully connected operation.</div><div class="ttdef"><b>Definition:</b> <a href="_fully_connected_layer_8hpp_source.xhtml#l00015">FullyConnectedLayer.hpp:15</a></div></div>
<div class="ttc" id="a_backend_registry_8hpp_xhtml"><div class="ttname"><a href="_backend_registry_8hpp.xhtml">BackendRegistry.hpp</a></div></div>
<div class="ttc" id="aclassarmnn_1_1_pad_layer_xhtml"><div class="ttname"><a href="classarmnn_1_1_pad_layer.xhtml">armnn::PadLayer</a></div><div class="ttdoc">This layer represents a pad operation.</div><div class="ttdef"><b>Definition:</b> <a href="_pad_layer_8hpp_source.xhtml#l00014">PadLayer.hpp:14</a></div></div>
<div class="ttc" id="aclassarmnn_1_1_batch_normalization_layer_xhtml_a7645e8ead378db5ad17eadbdb9df4da6"><div class="ttname"><a href="classarmnn_1_1_batch_normalization_layer.xhtml#a7645e8ead378db5ad17eadbdb9df4da6">armnn::BatchNormalizationLayer::m_Beta</a></div><div class="ttdeci">std::shared_ptr&lt; ConstTensorHandle &gt; m_Beta</div><div class="ttdoc">A unique pointer to store Beta values.</div><div class="ttdef"><b>Definition:</b> <a href="_batch_normalization_layer_8hpp_source.xhtml#l00023">BatchNormalizationLayer.hpp:23</a></div></div>
<div class="ttc" id="aclassarmnn_1_1_cl_backend_xhtml_a8e19e275c8162e34e6d8d10a9245dbc9"><div class="ttname"><a href="classarmnn_1_1_cl_backend.xhtml#a8e19e275c8162e34e6d8d10a9245dbc9">armnn::ClBackend::CreateWorkloadFactory</a></div><div class="ttdeci">IBackendInternal::IWorkloadFactoryPtr CreateWorkloadFactory(const IBackendInternal::IMemoryManagerSharedPtr &amp;memoryManager=nullptr) const override</div><div class="ttdef"><b>Definition:</b> <a href="_cl_backend_8cpp_source.xhtml#l00060">ClBackend.cpp:60</a></div></div>
<div class="ttc" id="aclassarmnn_1_1_cl_backend_xhtml_a2482b4a7d5bde88e9b963be08017ce2b"><div class="ttname"><a href="classarmnn_1_1_cl_backend.xhtml#a2482b4a7d5bde88e9b963be08017ce2b">armnn::ClBackend::CreateBackendSpecificModelContext</a></div><div class="ttdeci">IBackendInternal::IBackendSpecificModelContextPtr CreateBackendSpecificModelContext(const ModelOptions &amp;modelOptions) const override</div><div class="ttdef"><b>Definition:</b> <a href="_cl_backend_8cpp_source.xhtml#l00247">ClBackend.cpp:247</a></div></div>
<div class="ttc" id="aclassarmnn_1_1_pooling2d_layer_xhtml"><div class="ttname"><a href="classarmnn_1_1_pooling2d_layer.xhtml">armnn::Pooling2dLayer</a></div><div class="ttdoc">This layer represents a pooling 2d operation.</div><div class="ttdef"><b>Definition:</b> <a href="_pooling2d_layer_8hpp_source.xhtml#l00013">Pooling2dLayer.hpp:13</a></div></div>
<div class="ttc" id="aclassarmnn_1_1_layer_xhtml_a55f76d98fcd2f5cdac3e2b14536cb7ab"><div class="ttname"><a href="classarmnn_1_1_layer.xhtml#a55f76d98fcd2f5cdac3e2b14536cb7ab">armnn::Layer::EndOutputSlots</a></div><div class="ttdeci">std::vector&lt; OutputSlot &gt;::iterator EndOutputSlots()</div><div class="ttdef"><b>Definition:</b> <a href="_layer_8hpp_source.xhtml#l00254">Layer.hpp:254</a></div></div>
<div class="ttc" id="aclassarmnn_1_1_layer_xhtml_acf8b8e23bf647836592982f97088d375"><div class="ttname"><a href="classarmnn_1_1_layer.xhtml#acf8b8e23bf647836592982f97088d375">armnn::Layer::GetInputSlot</a></div><div class="ttdeci">const InputSlot &amp; GetInputSlot(unsigned int index) const override</div><div class="ttdoc">Get a const input slot handle by slot index.</div><div class="ttdef"><b>Definition:</b> <a href="_layer_8hpp_source.xhtml#l00324">Layer.hpp:324</a></div></div>
<div class="ttc" id="aclassarmnn_1_1_cl_backend_xhtml_a63559c7f206c265f5fff5ffcc8a58e3e"><div class="ttname"><a href="classarmnn_1_1_cl_backend.xhtml#a63559c7f206c265f5fff5ffcc8a58e3e">armnn::ClBackend::GetHandleFactoryPreferences</a></div><div class="ttdeci">std::vector&lt; ITensorHandleFactory::FactoryId &gt; GetHandleFactoryPreferences() const override</div><div class="ttdoc">(Optional) Returns a vector of supported TensorHandleFactory ids in preference order.</div><div class="ttdef"><b>Definition:</b> <a href="_cl_backend_8cpp_source.xhtml#l00170">ClBackend.cpp:170</a></div></div>
<div class="ttc" id="aclassarmnn_1_1_layer_xhtml_aefb14147290b6b928c5fc924ba035acc"><div class="ttname"><a href="classarmnn_1_1_layer.xhtml#aefb14147290b6b928c5fc924ba035acc">armnn::Layer::GetAdditionalInformation</a></div><div class="ttdeci">std::shared_ptr&lt; T &gt; GetAdditionalInformation() const</div><div class="ttdef"><b>Definition:</b> <a href="_layer_8hpp_source.xhtml#l00355">Layer.hpp:355</a></div></div>
<div class="ttc" id="aclassarmnn_1_1_cl_backend_model_context_xhtml_abfe9aa4fa74aca0f9a925752bbbb0f79"><div class="ttname"><a href="classarmnn_1_1_cl_backend_model_context.xhtml#abfe9aa4fa74aca0f9a925752bbbb0f79">armnn::ClBackendModelContext::IsFastMathEnabled</a></div><div class="ttdeci">bool IsFastMathEnabled() const</div><div class="ttdef"><b>Definition:</b> <a href="_cl_backend_model_context_8cpp_source.xhtml#l00066">ClBackendModelContext.cpp:66</a></div></div>
<div class="ttc" id="aclassarmnn_1_1_depthwise_convolution2d_layer_xhtml"><div class="ttname"><a href="classarmnn_1_1_depthwise_convolution2d_layer.xhtml">armnn::DepthwiseConvolution2dLayer</a></div><div class="ttdoc">This layer represents a depthwise convolution 2d operation.</div><div class="ttdef"><b>Definition:</b> <a href="_depthwise_convolution2d_layer_8hpp_source.xhtml#l00015">DepthwiseConvolution2dLayer.hpp:15</a></div></div>
<div class="ttc" id="aclassarmnn_1_1_layer_xhtml_a8dc12f0ee5b232d397bd18ced1a72a64"><div class="ttname"><a href="classarmnn_1_1_layer.xhtml#a8dc12f0ee5b232d397bd18ced1a72a64">armnn::Layer::GetGuid</a></div><div class="ttdeci">LayerGuid GetGuid() const final</div><div class="ttdoc">Returns the unique id of the layer.</div><div class="ttdef"><b>Definition:</b> <a href="_layer_8hpp_source.xhtml#l00330">Layer.hpp:330</a></div></div>
<div class="ttc" id="aclassarmnn_1_1_cl_backend_xhtml_af1937f516c364d9d99cb502249e7179d"><div class="ttname"><a href="classarmnn_1_1_cl_backend.xhtml#af1937f516c364d9d99cb502249e7179d">armnn::ClBackend::m_CustomAllocator</a></div><div class="ttdeci">std::shared_ptr&lt; ClBackendCustomAllocatorWrapper &gt; m_CustomAllocator</div><div class="ttdef"><b>Definition:</b> <a href="_cl_backend_8hpp_source.xhtml#l00299">ClBackend.hpp:299</a></div></div>
<div class="ttc" id="a_cl_batch_normalization_float_workload_8hpp_xhtml"><div class="ttname"><a href="_cl_batch_normalization_float_workload_8hpp.xhtml">ClBatchNormalizationFloatWorkload.hpp</a></div></div>
<div class="ttc" id="aclassarmnn_1_1_cl_backend_xhtml_a801cf3170dc777aca3e6f926d1bd70a5"><div class="ttname"><a href="classarmnn_1_1_cl_backend.xhtml#a801cf3170dc777aca3e6f926d1bd70a5">armnn::ClBackend::CreateBackendContext</a></div><div class="ttdeci">IBackendInternal::IBackendContextPtr CreateBackendContext(const IRuntime::CreationOptions &amp;) const override</div><div class="ttdoc">Create the runtime context of the backend.</div><div class="ttdef"><b>Definition:</b> <a href="_cl_backend_8cpp_source.xhtml#l00236">ClBackend.cpp:236</a></div></div>
<div class="ttc" id="astructarmnn_1_1_pooling2d_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_pooling2d_descriptor.xhtml">armnn::Pooling2dDescriptor</a></div><div class="ttdoc">A Pooling2dDescriptor for the Pooling2dLayer.</div><div class="ttdef"><b>Definition:</b> <a href="_descriptors_8hpp_source.xhtml#l00339">Descriptors.hpp:339</a></div></div>
<div class="ttc" id="aclassarmnn_1_1_addition_layer_xhtml"><div class="ttname"><a href="classarmnn_1_1_addition_layer.xhtml">armnn::AdditionLayer</a></div><div class="ttdoc">This layer represents an addition operation.</div><div class="ttdef"><b>Definition:</b> <a href="_addition_layer_8hpp_source.xhtml#l00013">AdditionLayer.hpp:13</a></div></div>
<div class="ttc" id="aclassarmnn_1_1_output_slot_xhtml_a25b0119c02aece1d341b99953d169c0f"><div class="ttname"><a href="classarmnn_1_1_output_slot.xhtml#a25b0119c02aece1d341b99953d169c0f">armnn::OutputSlot::GetNumConnections</a></div><div class="ttdeci">unsigned int GetNumConnections() const override</div><div class="ttdef"><b>Definition:</b> <a href="_layer_8hpp_source.xhtml#l00145">Layer.hpp:145</a></div></div>
<div class="ttc" id="aclassarmnn_1_1_optional_xhtml"><div class="ttname"><a href="classarmnn_1_1_optional.xhtml">armnn::Optional</a></div><div class="ttdef"><b>Definition:</b> <a href="_optional_8hpp_source.xhtml#l00270">Optional.hpp:270</a></div></div>
<div class="ttc" id="a_descriptors_8hpp_xhtml"><div class="ttname"><a href="_descriptors_8hpp.xhtml">Descriptors.hpp</a></div></div>
<div class="ttc" id="aclassarmnn_1_1_i_backend_internal_xhtml_ada6d56575c0fe53cf23c7ae4610c6367"><div class="ttname"><a href="classarmnn_1_1_i_backend_internal.xhtml#ada6d56575c0fe53cf23c7ae4610c6367">armnn::IBackendInternal::IBackendContextPtr</a></div><div class="ttdeci">std::unique_ptr&lt; IBackendContext &gt; IBackendContextPtr</div><div class="ttdef"><b>Definition:</b> <a href="_i_backend_internal_8hpp_source.xhtml#l00090">IBackendInternal.hpp:90</a></div></div>
<div class="ttc" id="a_cl_backend_default_allocator_8hpp_xhtml"><div class="ttname"><a href="_cl_backend_default_allocator_8hpp.xhtml">ClBackendDefaultAllocator.hpp</a></div></div>
<div class="ttc" id="aclassarmnn_1_1_i_backend_internal_xhtml_a335964abd41c91f7e6ef5c65865a7b98"><div class="ttname"><a href="classarmnn_1_1_i_backend_internal.xhtml#a335964abd41c91f7e6ef5c65865a7b98">armnn::IBackendInternal::IBackendProfilingPtr</a></div><div class="ttdeci">std::unique_ptr&lt; arm::pipe::IBackendProfiling &gt; IBackendProfilingPtr</div><div class="ttdef"><b>Definition:</b> <a href="_i_backend_internal_8hpp_source.xhtml#l00093">IBackendInternal.hpp:93</a></div></div>
<div class="ttc" id="aclassarmnn_1_1_optimization_views_xhtml_a9a1555f25af4a0ae2c0a1fc0ed9aded8"><div class="ttname"><a href="classarmnn_1_1_optimization_views.xhtml#a9a1555f25af4a0ae2c0a1fc0ed9aded8">armnn::OptimizationViews::GetSubstitutions</a></div><div class="ttdeci">const Substitutions &amp; GetSubstitutions() const</div><div class="ttdef"><b>Definition:</b> <a href="include_2armnn_2backends_2_optimization_views_8hpp_source.xhtml#l00054">OptimizationViews.hpp:54</a></div></div>
<div class="ttc" id="aclassarmnn_1_1_tensor_handle_factory_registry_xhtml_a958ab0c60b6bfdfba5cc075211edec37"><div class="ttname"><a href="classarmnn_1_1_tensor_handle_factory_registry.xhtml#a958ab0c60b6bfdfba5cc075211edec37">armnn::TensorHandleFactoryRegistry::RegisterMemoryManager</a></div><div class="ttdeci">void RegisterMemoryManager(std::shared_ptr&lt; IMemoryManager &gt; memoryManger)</div><div class="ttdoc">Register a memory manager with shared ownership.</div><div class="ttdef"><b>Definition:</b> <a href="_tensor_handle_factory_registry_8cpp_source.xhtml#l00034">TensorHandleFactoryRegistry.cpp:34</a></div></div>
<div class="ttc" id="anamespacearmnn_xhtml_a61cf0886d4c1a6e24c101a57ccb2ec31"><div class="ttname"><a href="namespacearmnn.xhtml#a61cf0886d4c1a6e24c101a57ccb2ec31">armnn::ClConvolution2dWorkloadValidate</a></div><div class="ttdeci">arm_compute::Status ClConvolution2dWorkloadValidate(const TensorInfo &amp;input, const TensorInfo &amp;output, const Convolution2dDescriptor &amp;descriptor, const TensorInfo &amp;weights, const Optional&lt; TensorInfo &gt; &amp;biases, bool isFastMathEnabled, const ActivationDescriptor *activationDescriptor)</div><div class="ttdef"><b>Definition:</b> <a href="_cl_convolution2d_workload_8cpp_source.xhtml#l00023">ClConvolution2dWorkload.cpp:23</a></div></div>
<div class="ttc" id="aclassarmnn_1_1_layer_xhtml_a7ddf0cf6f620d59c10e63495ace795d0"><div class="ttname"><a href="classarmnn_1_1_layer.xhtml#a7ddf0cf6f620d59c10e63495ace795d0">armnn::Layer::GetName</a></div><div class="ttdeci">const char * GetName() const override</div><div class="ttdoc">Returns the name of the layer.</div><div class="ttdef"><b>Definition:</b> <a href="_layer_8hpp_source.xhtml#l00319">Layer.hpp:319</a></div></div>
<div class="ttc" id="aclassarmnn_1_1_division_layer_xhtml"><div class="ttname"><a href="classarmnn_1_1_division_layer.xhtml">armnn::DivisionLayer</a></div><div class="ttdoc">This layer represents a division operation.</div><div class="ttdef"><b>Definition:</b> <a href="_division_layer_8hpp_source.xhtml#l00014">DivisionLayer.hpp:14</a></div></div>
<div class="ttc" id="aclassarmnn_1_1_convolution2d_layer_xhtml"><div class="ttname"><a href="classarmnn_1_1_convolution2d_layer.xhtml">armnn::Convolution2dLayer</a></div><div class="ttdoc">This layer represents a convolution 2d operation.</div><div class="ttdef"><b>Definition:</b> <a href="_convolution2d_layer_8hpp_source.xhtml#l00015">Convolution2dLayer.hpp:15</a></div></div>
<div class="ttc" id="anamespacearmnn_xhtml_a24fc3e8e29d3fa56cc6b2d81e48625d1"><div class="ttname"><a href="namespacearmnn.xhtml#a24fc3e8e29d3fa56cc6b2d81e48625d1">armnn::ClAdditionValidate</a></div><div class="ttdeci">arm_compute::Status ClAdditionValidate(const TensorInfo &amp;input0, const TensorInfo &amp;input1, const TensorInfo &amp;output, const ActivationDescriptor *activationDescriptor)</div><div class="ttdef"><b>Definition:</b> <a href="_cl_addition_workload_8cpp_source.xhtml#l00045">ClAdditionWorkload.cpp:45</a></div></div>
<div class="ttc" id="aclassarmnn_1_1_batch_normalization_layer_xhtml_a5da51be22147d174ff661810c32675b0"><div class="ttname"><a href="classarmnn_1_1_batch_normalization_layer.xhtml#a5da51be22147d174ff661810c32675b0">armnn::BatchNormalizationLayer::m_Gamma</a></div><div class="ttdeci">std::shared_ptr&lt; ConstTensorHandle &gt; m_Gamma</div><div class="ttdoc">A unique pointer to store Gamma values.</div><div class="ttdef"><b>Definition:</b> <a href="_batch_normalization_layer_8hpp_source.xhtml#l00025">BatchNormalizationLayer.hpp:25</a></div></div>
<div class="ttc" id="aclassarmnn_1_1_layer_with_parameters_xhtml_afa3e8a8f23589b1eaddbe203825bbdcf"><div class="ttname"><a href="classarmnn_1_1_layer_with_parameters.xhtml#afa3e8a8f23589b1eaddbe203825bbdcf">armnn::LayerWithParameters::GetParameters</a></div><div class="ttdeci">const Parameters &amp; GetParameters() const override</div><div class="ttdoc">If the layer has a descriptor return it.</div><div class="ttdef"><b>Definition:</b> <a href="_layer_with_parameters_8hpp_source.xhtml#l00019">LayerWithParameters.hpp:19</a></div></div>
<div class="ttc" id="anamespacearmnn_xhtml_a5b05f3b7208ec7cea3338e30057c0bac"><div class="ttname"><a href="namespacearmnn.xhtml#a5b05f3b7208ec7cea3338e30057c0bac">armnn::MemorySourceFlags</a></div><div class="ttdeci">unsigned int MemorySourceFlags</div><div class="ttdef"><b>Definition:</b> <a href="_memory_sources_8hpp_source.xhtml#l00015">MemorySources.hpp:15</a></div></div>
<div class="ttc" id="anamespacearmnn_xhtml_a56943a0946e5f15e5e58054b8e7a04a4a27d1a1f7b7c2180e5b20ce9e3d00e2dd"><div class="ttname"><a href="namespacearmnn.xhtml#a56943a0946e5f15e5e58054b8e7a04a4a27d1a1f7b7c2180e5b20ce9e3d00e2dd">armnn::LayerType::Multiplication</a></div><div class="ttdeci">@ Multiplication</div></div>
<div class="ttc" id="aclassarmnn_1_1_cl_layer_support_xhtml"><div class="ttname"><a href="classarmnn_1_1_cl_layer_support.xhtml">armnn::ClLayerSupport</a></div><div class="ttdef"><b>Definition:</b> <a href="_cl_layer_support_8hpp_source.xhtml#l00014">ClLayerSupport.hpp:14</a></div></div>
<div class="ttc" id="aclassarmnn_1_1_batch_normalization_layer_xhtml_a7d38a70f30295f365c3a98fc7fa4a229"><div class="ttname"><a href="classarmnn_1_1_batch_normalization_layer.xhtml#a7d38a70f30295f365c3a98fc7fa4a229">armnn::BatchNormalizationLayer::m_Variance</a></div><div class="ttdeci">std::shared_ptr&lt; ConstTensorHandle &gt; m_Variance</div><div class="ttdoc">A unique pointer to store Variance values.</div><div class="ttdef"><b>Definition:</b> <a href="_batch_normalization_layer_8hpp_source.xhtml#l00021">BatchNormalizationLayer.hpp:21</a></div></div>
<div class="ttc" id="aclassarmnn_1_1_cl_backend_xhtml_a68c2ef244261cc9649799284774af132"><div class="ttname"><a href="classarmnn_1_1_cl_backend.xhtml#a68c2ef244261cc9649799284774af132">armnn::ClBackend::CreateBackendProfilingContext</a></div><div class="ttdeci">IBackendInternal::IBackendProfilingContextPtr CreateBackendProfilingContext(const IRuntime::CreationOptions &amp;, IBackendProfilingPtr &amp;backendProfiling) override</div><div class="ttdoc">Create context specifically used for profiling interaction from backends.</div><div class="ttdef"><b>Definition:</b> <a href="_cl_backend_8cpp_source.xhtml#l00241">ClBackend.cpp:241</a></div></div>
<div class="ttc" id="a_cl_backend_id_8hpp_xhtml"><div class="ttname"><a href="_cl_backend_id_8hpp.xhtml">ClBackendId.hpp</a></div></div>
<div class="ttc" id="a_cl_import_tensor_handle_factory_8hpp_xhtml"><div class="ttname"><a href="_cl_import_tensor_handle_factory_8hpp.xhtml">ClImportTensorHandleFactory.hpp</a></div></div>
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="dir_68267d1309a1af8e8297ef4c3efbcdba.xhtml">src</a></li><li class="navelem"><a class="el" href="dir_0f3cdec46afbc61a1ded8e1687c9c9a0.xhtml">backends</a></li><li class="navelem"><a class="el" href="dir_1ad86c6d39ab715a831555571b9e98a5.xhtml">cl</a></li><li class="navelem"><a class="el" href="_cl_backend_8cpp.xhtml">ClBackend.cpp</a></li>
    <li class="footer">Generated on Wed Mar 22 2023 15:53:01 for ArmNN by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.17 </li>
  </ul>
</div>
</body>
</html>
