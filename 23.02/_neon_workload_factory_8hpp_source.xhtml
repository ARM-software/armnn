<!-- Copyright (c) 2020 ARM Limited. -->
<!--                                 -->
<!-- SPDX-License-Identifier: MIT    -->
<!--                                 -->
<!-- HTML header for doxygen 1.8.13-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.13"/>
<meta name="robots" content="NOINDEX, NOFOLLOW" />
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>ArmNN: src/backends/neon/NeonWorkloadFactory.hpp Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script><script type="text/javascript" src="http://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="stylesheet.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <img alt="ArmNN" src="Arm_NN_horizontal_blue.png" style="max-width: 10rem; margin-top: .5rem; margin-left 10px"/>
  <td style="padding-left: 0.5em;">
   <div id="projectname">
   &#160;<span id="projectnumber">23.02</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.13 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
$(document).ready(function(){initNavTree('_neon_workload_factory_8hpp_source.xhtml','');});
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="headertitle">
<div class="title">NeonWorkloadFactory.hpp</div>  </div>
</div><!--header-->
<div class="contents">
<a href="_neon_workload_factory_8hpp.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="comment">//</span></div><div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="comment">// Copyright Â© 2017 Arm Ltd and Contributors. All rights reserved.</span></div><div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="comment">// SPDX-License-Identifier: MIT</span></div><div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="comment">//</span></div><div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="preprocessor">#pragma once</span></div><div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;</div><div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="preprocessor">#include &lt;<a class="code" href="_optional_8hpp.xhtml">armnn/Optional.hpp</a>&gt;</span></div><div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="preprocessor">#include &lt;<a class="code" href="_i_backend_internal_8hpp.xhtml">armnn/backends/IBackendInternal.hpp</a>&gt;</span></div><div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;</div><div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="preprocessor">#include &lt;<a class="code" href="_workload_factory_base_8hpp.xhtml">backendsCommon/WorkloadFactoryBase.hpp</a>&gt;</span></div><div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;<span class="preprocessor">#include &lt;<a class="code" href="_base_memory_manager_8hpp.xhtml">aclCommon/BaseMemoryManager.hpp</a>&gt;</span></div><div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;<span class="preprocessor">#include &lt;<a class="code" href="_ignore_unused_8hpp.xhtml">armnn/utility/IgnoreUnused.hpp</a>&gt;</span></div><div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;</div><div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;<span class="preprocessor">#include &lt;arm_compute/runtime/IScheduler.h&gt;</span></div><div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;</div><div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;<span class="keyword">namespace </span><a class="code" href="namespacearmnn.xhtml">armnn</a></div><div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;{</div><div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;</div><div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;<span class="comment">// Neon workload factory.</span></div><div class="line"><a name="l00020"></a><span class="lineno"><a class="line" href="classarmnn_1_1_neon_workload_factory.xhtml">   20</a></span>&#160;<span class="keyword">class </span><a class="code" href="classarmnn_1_1_neon_workload_factory.xhtml">NeonWorkloadFactory</a> : <span class="keyword">public</span> <a class="code" href="classarmnn_1_1_workload_factory_base.xhtml">WorkloadFactoryBase</a></div><div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;{</div><div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;<span class="keyword">public</span>:</div><div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;    <a class="code" href="classarmnn_1_1_neon_workload_factory.xhtml#a19a681524fa55169540fcccb9dcefaa6">NeonWorkloadFactory</a>(<span class="keyword">const</span> std::shared_ptr&lt;NeonMemoryManager&gt;&amp; memoryManager);</div><div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;</div><div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;    <a class="code" href="classarmnn_1_1_neon_workload_factory.xhtml#a19a681524fa55169540fcccb9dcefaa6">NeonWorkloadFactory</a>(<span class="keyword">const</span> std::shared_ptr&lt;NeonMemoryManager&gt;&amp; memoryManager,</div><div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;                        <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_i_backend_internal.xhtml#a4d0238968a7643dbb170547dd22bba54">IBackendInternal::IBackendSpecificModelContextPtr</a>&amp; modelContextPtr);</div><div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;</div><div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;    <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_backend_id.xhtml">BackendId</a>&amp; <a class="code" href="classarmnn_1_1_neon_workload_factory.xhtml#ae2cd7e29596b68884bfaade25f8f0dc0">GetBackendId</a>() <span class="keyword">const override</span>;</div><div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;</div><div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;    <span class="keyword">static</span> <span class="keywordtype">bool</span> <a class="code" href="classarmnn_1_1_neon_workload_factory.xhtml#a9992ea7c353e8597fbd8ae426f4612ae">IsLayerSupported</a>(<span class="keyword">const</span> <a class="code" href="classarmnn_1_1_layer.xhtml">Layer</a>&amp; layer,</div><div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;                                 <a class="code" href="classarmnn_1_1_optional.xhtml">Optional&lt;DataType&gt;</a> dataType,</div><div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;                                 std::string&amp; outReasonIfUnsupported);</div><div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;</div><div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;    <span class="keyword">static</span> <span class="keywordtype">bool</span> <a class="code" href="classarmnn_1_1_neon_workload_factory.xhtml#a9992ea7c353e8597fbd8ae426f4612ae">IsLayerSupported</a>(<span class="keyword">const</span> <a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml">IConnectableLayer</a>&amp; layer,</div><div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;                                 <a class="code" href="classarmnn_1_1_optional.xhtml">Optional&lt;DataType&gt;</a> dataType,</div><div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;                                 std::string&amp; outReasonIfUnsupported,</div><div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;                                 <span class="keyword">const</span> <a class="code" href="namespacearmnn.xhtml#a5b6893cda5b69359a4244c06054da18f">ModelOptions</a>&amp; modelOptions);</div><div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;</div><div class="line"><a name="l00039"></a><span class="lineno"><a class="line" href="classarmnn_1_1_neon_workload_factory.xhtml#aed0a782f32856bde72bc10d9381dc11e">   39</a></span>&#160;    <span class="keywordtype">bool</span> <a class="code" href="classarmnn_1_1_neon_workload_factory.xhtml#aed0a782f32856bde72bc10d9381dc11e">SupportsSubTensors</a>()<span class="keyword"> const override </span>{ <span class="keywordflow">return</span> <span class="keyword">true</span>; }</div><div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;</div><div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;    <a class="code" href="_deprecated_8hpp.xhtml#a76fb13a018f8e01087a7ae0eb23509e1">ARMNN_DEPRECATED_MSG</a>(<span class="stringliteral">&quot;Use ITensorHandleFactory::CreateSubTensorHandle instead&quot;</span>)</div><div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;    std::unique_ptr&lt;ITensorHandle&gt; <a class="code" href="classarmnn_1_1_neon_workload_factory.xhtml#abefb9df9d7a54cf2f82047ea350d0388">CreateSubTensorHandle</a>(<a class="code" href="classarmnn_1_1_i_tensor_handle.xhtml">ITensorHandle</a>&amp; parent,</div><div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;                                                         <a class="code" href="classarmnn_1_1_tensor_shape.xhtml">TensorShape</a> <span class="keyword">const</span>&amp; subTensorShape,</div><div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;                                                         <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> <span class="keyword">const</span>* subTensorOrigin) <span class="keyword">const override</span>;</div><div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;</div><div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;    <a class="code" href="_deprecated_8hpp.xhtml#a76fb13a018f8e01087a7ae0eb23509e1">ARMNN_DEPRECATED_MSG</a>(<span class="stringliteral">&quot;Use ITensorHandleFactory::CreateTensorHandle instead&quot;</span>)</div><div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;    std::unique_ptr&lt;ITensorHandle&gt; <a class="code" href="classarmnn_1_1_neon_workload_factory.xhtml#a7239477811c44d4398f0c2d291d9ea76">CreateTensorHandle</a>(<span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a>&amp; tensorInfo,</div><div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;                                                      <span class="keyword">const</span> <span class="keywordtype">bool</span> IsMemoryManaged = <span class="keyword">true</span>) <span class="keyword">const override</span>;</div><div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;</div><div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;    <a class="code" href="_deprecated_8hpp.xhtml#a76fb13a018f8e01087a7ae0eb23509e1">ARMNN_DEPRECATED_MSG</a>(<span class="stringliteral">&quot;Use ITensorHandleFactory::CreateTensorHandle instead&quot;</span>)</div><div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;    std::unique_ptr&lt;ITensorHandle&gt; <a class="code" href="classarmnn_1_1_neon_workload_factory.xhtml#a7239477811c44d4398f0c2d291d9ea76">CreateTensorHandle</a>(<span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a>&amp; tensorInfo,</div><div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;                                                      <a class="code" href="namespacearmnn.xhtml#ad1d5cce2d9e9a5d61c243e5c989112e0">DataLayout</a> dataLayout,</div><div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;                                                      <span class="keyword">const</span> <span class="keywordtype">bool</span> IsMemoryManaged = <span class="keyword">true</span>) <span class="keyword">const override</span>;</div><div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;</div><div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;    std::unique_ptr&lt;IWorkload&gt; <a class="code" href="classarmnn_1_1_neon_workload_factory.xhtml#a739bcc341b89c98a5d38717370ebcaa6">CreateWorkload</a>(<a class="code" href="namespacearmnn.xhtml#a56943a0946e5f15e5e58054b8e7a04a4">LayerType</a> type,</div><div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;                                              <span class="keyword">const</span> <a class="code" href="structarmnn_1_1_queue_descriptor.xhtml">QueueDescriptor</a>&amp; descriptor,</div><div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;                                              <span class="keyword">const</span> <a class="code" href="structarmnn_1_1_workload_info.xhtml">WorkloadInfo</a>&amp; <a class="code" href="namespacearmnn.xhtml#a4dc0adc6737b5944e7671bee71788407acaf9b6b99962bf5c2264824231d7a40c">info</a>) <span class="keyword">const override</span>;</div><div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;</div><div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;    <a class="code" href="_deprecated_8hpp.xhtml#af16119336bd0dfbfbc83fc283151067e">ARMNN_DEPRECATED_MSG_REMOVAL_DATE</a>(<span class="stringliteral">&quot;Use ABI stable &quot;</span></div><div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;    <span class="stringliteral">&quot;CreateWorkload(LayerType, const QueueDescriptor&amp;, const WorkloadInfo&amp; info) instead.&quot;</span>, <span class="stringliteral">&quot;23.08&quot;</span>)</div><div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;    std::unique_ptr&lt;IWorkload&gt; <a class="code" href="classarmnn_1_1_workload_factory_base.xhtml#a789a347180c49b2403e435857501f623">CreateActivation</a>(<span class="keyword">const</span> <a class="code" href="structarmnn_1_1_activation_queue_descriptor.xhtml">ActivationQueueDescriptor</a>&amp; descriptor,</div><div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;                                                <span class="keyword">const</span> <a class="code" href="structarmnn_1_1_workload_info.xhtml">WorkloadInfo</a>&amp; info) <span class="keyword">const override</span>;</div><div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;</div><div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;    <a class="code" href="_deprecated_8hpp.xhtml#af16119336bd0dfbfbc83fc283151067e">ARMNN_DEPRECATED_MSG_REMOVAL_DATE</a>(<span class="stringliteral">&quot;Use ABI stable &quot;</span></div><div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;    <span class="stringliteral">&quot;CreateWorkload(LayerType, const QueueDescriptor&amp;, const WorkloadInfo&amp; info) instead.&quot;</span>, <span class="stringliteral">&quot;23.08&quot;</span>)</div><div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;    std::unique_ptr&lt;IWorkload&gt; <a class="code" href="classarmnn_1_1_workload_factory_base.xhtml#ac1f4d42be05893f74b1237c3356c3c0c">CreateAddition</a>(<span class="keyword">const</span> <a class="code" href="structarmnn_1_1_addition_queue_descriptor.xhtml">AdditionQueueDescriptor</a>&amp; descriptor,</div><div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;                                              <span class="keyword">const</span> <a class="code" href="structarmnn_1_1_workload_info.xhtml">WorkloadInfo</a>&amp; info) <span class="keyword">const override</span>;</div><div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;</div><div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;    <a class="code" href="_deprecated_8hpp.xhtml#af16119336bd0dfbfbc83fc283151067e">ARMNN_DEPRECATED_MSG_REMOVAL_DATE</a>(<span class="stringliteral">&quot;Use ABI stable &quot;</span></div><div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;    <span class="stringliteral">&quot;CreateWorkload(LayerType, const QueueDescriptor&amp;, const WorkloadInfo&amp; info) instead.&quot;</span>, <span class="stringliteral">&quot;23.08&quot;</span>)</div><div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;    std::unique_ptr&lt;IWorkload&gt; <a class="code" href="classarmnn_1_1_workload_factory_base.xhtml#a4269d65bcf8068290752d75164934a25">CreateArgMinMax</a>(<span class="keyword">const</span> <a class="code" href="structarmnn_1_1_arg_min_max_queue_descriptor.xhtml">ArgMinMaxQueueDescriptor</a>&amp; descriptor,</div><div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;                                               <span class="keyword">const</span> <a class="code" href="structarmnn_1_1_workload_info.xhtml">WorkloadInfo</a>&amp; info) <span class="keyword">const override</span>;</div><div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;</div><div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;    <a class="code" href="_deprecated_8hpp.xhtml#af16119336bd0dfbfbc83fc283151067e">ARMNN_DEPRECATED_MSG_REMOVAL_DATE</a>(<span class="stringliteral">&quot;Use ABI stable &quot;</span></div><div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;    <span class="stringliteral">&quot;CreateWorkload(LayerType, const QueueDescriptor&amp;, const WorkloadInfo&amp; info) instead.&quot;</span>, <span class="stringliteral">&quot;23.08&quot;</span>)</div><div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;    std::unique_ptr&lt;IWorkload&gt; <a class="code" href="classarmnn_1_1_workload_factory_base.xhtml#a666c75e9db051b9b07f137a74af8d8b4">CreateBatchNormalization</a>(<span class="keyword">const</span> <a class="code" href="structarmnn_1_1_batch_normalization_queue_descriptor.xhtml">BatchNormalizationQueueDescriptor</a>&amp; descriptor,</div><div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;                                                        <span class="keyword">const</span> <a class="code" href="structarmnn_1_1_workload_info.xhtml">WorkloadInfo</a>&amp; info) <span class="keyword">const override</span>;</div><div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;</div><div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;    <a class="code" href="_deprecated_8hpp.xhtml#af16119336bd0dfbfbc83fc283151067e">ARMNN_DEPRECATED_MSG_REMOVAL_DATE</a>(<span class="stringliteral">&quot;Use ABI stable &quot;</span></div><div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;    <span class="stringliteral">&quot;CreateWorkload(LayerType, const QueueDescriptor&amp;, const WorkloadInfo&amp; info) instead.&quot;</span>, <span class="stringliteral">&quot;23.08&quot;</span>)</div><div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;    std::unique_ptr&lt;IWorkload&gt; <a class="code" href="classarmnn_1_1_workload_factory_base.xhtml#a52094433136e6cae57398d861cd483f9">CreateBatchToSpaceNd</a>(<span class="keyword">const</span> <a class="code" href="structarmnn_1_1_batch_to_space_nd_queue_descriptor.xhtml">BatchToSpaceNdQueueDescriptor</a>&amp; descriptor,</div><div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;                                                    <span class="keyword">const</span> <a class="code" href="structarmnn_1_1_workload_info.xhtml">WorkloadInfo</a>&amp; <a class="code" href="namespacearmnn.xhtml#a93a3ba385cad27c4774e5fe64c025d3da4059b0251f66a18cb56f544728796875">Info</a>) <span class="keyword">const override</span>;</div><div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;</div><div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;    <a class="code" href="_deprecated_8hpp.xhtml#af16119336bd0dfbfbc83fc283151067e">ARMNN_DEPRECATED_MSG_REMOVAL_DATE</a>(<span class="stringliteral">&quot;Use ABI stable &quot;</span></div><div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;    <span class="stringliteral">&quot;CreateWorkload(LayerType, const QueueDescriptor&amp;, const WorkloadInfo&amp; info) instead.&quot;</span>, <span class="stringliteral">&quot;23.08&quot;</span>)</div><div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;    std::unique_ptr&lt;IWorkload&gt; CreateCast(<span class="keyword">const</span> <a class="code" href="structarmnn_1_1_cast_queue_descriptor.xhtml">CastQueueDescriptor</a>&amp; descriptor,</div><div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;                                          <span class="keyword">const</span> <a class="code" href="structarmnn_1_1_workload_info.xhtml">WorkloadInfo</a>&amp; info) <span class="keyword">const override</span>;</div><div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;</div><div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;    <a class="code" href="_deprecated_8hpp.xhtml#af16119336bd0dfbfbc83fc283151067e">ARMNN_DEPRECATED_MSG_REMOVAL_DATE</a>(<span class="stringliteral">&quot;Use ABI stable &quot;</span></div><div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;    <span class="stringliteral">&quot;CreateWorkload(LayerType, const QueueDescriptor&amp;, const WorkloadInfo&amp; info) instead.&quot;</span>, <span class="stringliteral">&quot;23.08&quot;</span>)</div><div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;    std::unique_ptr&lt;IWorkload&gt; CreateChannelShuffle(<span class="keyword">const</span> <a class="code" href="structarmnn_1_1_channel_shuffle_queue_descriptor.xhtml">ChannelShuffleQueueDescriptor</a>&amp; descriptor,</div><div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;                                                    <span class="keyword">const</span> <a class="code" href="structarmnn_1_1_workload_info.xhtml">WorkloadInfo</a>&amp; info) <span class="keyword">const override</span>;</div><div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;</div><div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;    <a class="code" href="_deprecated_8hpp.xhtml#af16119336bd0dfbfbc83fc283151067e">ARMNN_DEPRECATED_MSG_REMOVAL_DATE</a>(<span class="stringliteral">&quot;Use ABI stable &quot;</span></div><div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;    <span class="stringliteral">&quot;CreateWorkload(LayerType, const QueueDescriptor&amp;, const WorkloadInfo&amp; info) instead.&quot;</span>, <span class="stringliteral">&quot;23.08&quot;</span>)</div><div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;    std::unique_ptr&lt;IWorkload&gt; <a class="code" href="classarmnn_1_1_workload_factory_base.xhtml#a3d5de4e35ccddc5cfe79e530558d5184">CreateComparison</a>(<span class="keyword">const</span> <a class="code" href="structarmnn_1_1_comparison_queue_descriptor.xhtml">ComparisonQueueDescriptor</a>&amp; descriptor,</div><div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;                                                <span class="keyword">const</span> <a class="code" href="structarmnn_1_1_workload_info.xhtml">WorkloadInfo</a>&amp; Info) <span class="keyword">const override</span>;</div><div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;</div><div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;    <a class="code" href="_deprecated_8hpp.xhtml#af16119336bd0dfbfbc83fc283151067e">ARMNN_DEPRECATED_MSG_REMOVAL_DATE</a>(<span class="stringliteral">&quot;Use ABI stable &quot;</span></div><div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;    <span class="stringliteral">&quot;CreateWorkload(LayerType, const QueueDescriptor&amp;, const WorkloadInfo&amp; info) instead.&quot;</span>, <span class="stringliteral">&quot;23.08&quot;</span>)</div><div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;    std::unique_ptr&lt;IWorkload&gt; <a class="code" href="classarmnn_1_1_workload_factory_base.xhtml#a713c3685138355b145f4d17e473bf543">CreateConcat</a>(<span class="keyword">const</span> <a class="code" href="structarmnn_1_1_concat_queue_descriptor.xhtml">ConcatQueueDescriptor</a>&amp; descriptor,</div><div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;                                            <span class="keyword">const</span> <a class="code" href="structarmnn_1_1_workload_info.xhtml">WorkloadInfo</a>&amp; info) <span class="keyword">const override</span>;</div><div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;</div><div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;    <a class="code" href="_deprecated_8hpp.xhtml#af16119336bd0dfbfbc83fc283151067e">ARMNN_DEPRECATED_MSG_REMOVAL_DATE</a>(<span class="stringliteral">&quot;Use ABI stable &quot;</span></div><div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;    <span class="stringliteral">&quot;CreateWorkload(LayerType, const QueueDescriptor&amp;, const WorkloadInfo&amp; info) instead.&quot;</span>, <span class="stringliteral">&quot;23.08&quot;</span>)</div><div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;    std::unique_ptr&lt;IWorkload&gt; <a class="code" href="classarmnn_1_1_workload_factory_base.xhtml#a0da6f270ae7ce126b29a8918d858e814">CreateConstant</a>(<span class="keyword">const</span> <a class="code" href="structarmnn_1_1_constant_queue_descriptor.xhtml">ConstantQueueDescriptor</a>&amp; descriptor,</div><div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;                                              <span class="keyword">const</span> <a class="code" href="structarmnn_1_1_workload_info.xhtml">WorkloadInfo</a>&amp; info) <span class="keyword">const override</span>;</div><div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;</div><div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;    <a class="code" href="_deprecated_8hpp.xhtml#af16119336bd0dfbfbc83fc283151067e">ARMNN_DEPRECATED_MSG_REMOVAL_DATE</a>(<span class="stringliteral">&quot;Use ABI stable &quot;</span></div><div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;    <span class="stringliteral">&quot;CreateWorkload(LayerType, const QueueDescriptor&amp;, const WorkloadInfo&amp; info) instead.&quot;</span>, <span class="stringliteral">&quot;23.08&quot;</span>)</div><div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;    std::unique_ptr&lt;IWorkload&gt; <a class="code" href="classarmnn_1_1_workload_factory_base.xhtml#a4e3b8d5650cb78c97a2eceb034209187">CreateConvertFp16ToFp32</a>(<span class="keyword">const</span> <a class="code" href="structarmnn_1_1_convert_fp16_to_fp32_queue_descriptor.xhtml">ConvertFp16ToFp32QueueDescriptor</a>&amp; descriptor,</div><div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;                                                       <span class="keyword">const</span> <a class="code" href="structarmnn_1_1_workload_info.xhtml">WorkloadInfo</a>&amp; info) <span class="keyword">const override</span>;</div><div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;</div><div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;    <a class="code" href="_deprecated_8hpp.xhtml#af16119336bd0dfbfbc83fc283151067e">ARMNN_DEPRECATED_MSG_REMOVAL_DATE</a>(<span class="stringliteral">&quot;Use ABI stable &quot;</span></div><div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;    <span class="stringliteral">&quot;CreateWorkload(LayerType, const QueueDescriptor&amp;, const WorkloadInfo&amp; info) instead.&quot;</span>, <span class="stringliteral">&quot;23.08&quot;</span>)</div><div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;    std::unique_ptr&lt;IWorkload&gt; <a class="code" href="classarmnn_1_1_workload_factory_base.xhtml#a17042914356fe13b708c3702cb82ab7f">CreateConvertFp32ToFp16</a>(<span class="keyword">const</span> <a class="code" href="structarmnn_1_1_convert_fp32_to_fp16_queue_descriptor.xhtml">ConvertFp32ToFp16QueueDescriptor</a>&amp; descriptor,</div><div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;                                                       <span class="keyword">const</span> <a class="code" href="structarmnn_1_1_workload_info.xhtml">WorkloadInfo</a>&amp; info) <span class="keyword">const override</span>;</div><div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;</div><div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;    <a class="code" href="_deprecated_8hpp.xhtml#af16119336bd0dfbfbc83fc283151067e">ARMNN_DEPRECATED_MSG_REMOVAL_DATE</a>(<span class="stringliteral">&quot;Use ABI stable &quot;</span></div><div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;    <span class="stringliteral">&quot;CreateWorkload(LayerType, const QueueDescriptor&amp;, const WorkloadInfo&amp; info) instead.&quot;</span>, <span class="stringliteral">&quot;23.08&quot;</span>)</div><div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;    std::unique_ptr&lt;IWorkload&gt; <a class="code" href="classarmnn_1_1_workload_factory_base.xhtml#a4a781a9541d2c44c5fec0ffc8434447c">CreateConvolution2d</a>(<span class="keyword">const</span> <a class="code" href="structarmnn_1_1_convolution2d_queue_descriptor.xhtml">Convolution2dQueueDescriptor</a>&amp; descriptor,</div><div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;                                                   <span class="keyword">const</span> <a class="code" href="structarmnn_1_1_workload_info.xhtml">WorkloadInfo</a>&amp; info) <span class="keyword">const override</span>;</div><div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;</div><div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;    <a class="code" href="_deprecated_8hpp.xhtml#af16119336bd0dfbfbc83fc283151067e">ARMNN_DEPRECATED_MSG_REMOVAL_DATE</a>(<span class="stringliteral">&quot;Use ABI stable &quot;</span></div><div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;    <span class="stringliteral">&quot;CreateWorkload(LayerType, const QueueDescriptor&amp;, const WorkloadInfo&amp; info) instead.&quot;</span>, <span class="stringliteral">&quot;23.08&quot;</span>)</div><div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;    std::unique_ptr&lt;IWorkload&gt; CreateConvolution3d(<span class="keyword">const</span> <a class="code" href="structarmnn_1_1_convolution3d_queue_descriptor.xhtml">Convolution3dQueueDescriptor</a>&amp; descriptor,</div><div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;                                                   <span class="keyword">const</span> <a class="code" href="structarmnn_1_1_workload_info.xhtml">WorkloadInfo</a>&amp; info) <span class="keyword">const override</span>;</div><div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;</div><div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;    <a class="code" href="_deprecated_8hpp.xhtml#af16119336bd0dfbfbc83fc283151067e">ARMNN_DEPRECATED_MSG_REMOVAL_DATE</a>(<span class="stringliteral">&quot;Use ABI stable &quot;</span></div><div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;    <span class="stringliteral">&quot;CreateWorkload(LayerType, const QueueDescriptor&amp;, const WorkloadInfo&amp; info) instead.&quot;</span>, <span class="stringliteral">&quot;23.08&quot;</span>)</div><div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;    std::unique_ptr&lt;IWorkload&gt; <a class="code" href="classarmnn_1_1_workload_factory_base.xhtml#ad99e6a9f4e78ba4690429850de69fadd">CreateDebug</a>(<span class="keyword">const</span> <a class="code" href="structarmnn_1_1_debug_queue_descriptor.xhtml">DebugQueueDescriptor</a>&amp; descriptor,</div><div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;                                           <span class="keyword">const</span> <a class="code" href="structarmnn_1_1_workload_info.xhtml">WorkloadInfo</a>&amp; info) <span class="keyword">const override</span>;</div><div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;</div><div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;    <a class="code" href="_deprecated_8hpp.xhtml#af16119336bd0dfbfbc83fc283151067e">ARMNN_DEPRECATED_MSG_REMOVAL_DATE</a>(<span class="stringliteral">&quot;Use ABI stable &quot;</span></div><div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;    <span class="stringliteral">&quot;CreateWorkload(LayerType, const QueueDescriptor&amp;, const WorkloadInfo&amp; info) instead.&quot;</span>, <span class="stringliteral">&quot;23.08&quot;</span>)</div><div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;    std::unique_ptr&lt;IWorkload&gt; <a class="code" href="classarmnn_1_1_workload_factory_base.xhtml#a1b2165c83d6501e8ede91324c31a95f4">CreateDepthToSpace</a>(<span class="keyword">const</span> <a class="code" href="structarmnn_1_1_depth_to_space_queue_descriptor.xhtml">DepthToSpaceQueueDescriptor</a>&amp; descriptor,</div><div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;                                                  <span class="keyword">const</span> <a class="code" href="structarmnn_1_1_workload_info.xhtml">WorkloadInfo</a>&amp; info) <span class="keyword">const override</span>;</div><div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;</div><div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;    <a class="code" href="_deprecated_8hpp.xhtml#af16119336bd0dfbfbc83fc283151067e">ARMNN_DEPRECATED_MSG_REMOVAL_DATE</a>(<span class="stringliteral">&quot;Use ABI stable &quot;</span></div><div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;    <span class="stringliteral">&quot;CreateWorkload(LayerType, const QueueDescriptor&amp;, const WorkloadInfo&amp; info) instead.&quot;</span>, <span class="stringliteral">&quot;23.08&quot;</span>)</div><div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;    std::unique_ptr&lt;IWorkload&gt; <a class="code" href="classarmnn_1_1_workload_factory_base.xhtml#a2314defaf9c8b1ffcf59e7e509a959d6">CreateDepthwiseConvolution2d</a>(<span class="keyword">const</span> <a class="code" href="structarmnn_1_1_depthwise_convolution2d_queue_descriptor.xhtml">DepthwiseConvolution2dQueueDescriptor</a>&amp; descriptor,</div><div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;                                                            <span class="keyword">const</span> <a class="code" href="structarmnn_1_1_workload_info.xhtml">WorkloadInfo</a>&amp; info) <span class="keyword">const override</span>;</div><div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;</div><div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;    <a class="code" href="_deprecated_8hpp.xhtml#af16119336bd0dfbfbc83fc283151067e">ARMNN_DEPRECATED_MSG_REMOVAL_DATE</a>(<span class="stringliteral">&quot;Use ABI stable &quot;</span></div><div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;    <span class="stringliteral">&quot;CreateWorkload(LayerType, const QueueDescriptor&amp;, const WorkloadInfo&amp; info) instead.&quot;</span>, <span class="stringliteral">&quot;23.08&quot;</span>)</div><div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;    std::unique_ptr&lt;IWorkload&gt; <a class="code" href="classarmnn_1_1_workload_factory_base.xhtml#a1f17745331f928011cc1ea162866b8e7">CreateDequantize</a>(<span class="keyword">const</span> <a class="code" href="structarmnn_1_1_dequantize_queue_descriptor.xhtml">DequantizeQueueDescriptor</a>&amp; descriptor,</div><div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;                                                <span class="keyword">const</span> <a class="code" href="structarmnn_1_1_workload_info.xhtml">WorkloadInfo</a>&amp; info) <span class="keyword">const override</span>;</div><div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;</div><div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;    <a class="code" href="_deprecated_8hpp.xhtml#af16119336bd0dfbfbc83fc283151067e">ARMNN_DEPRECATED_MSG_REMOVAL_DATE</a>(<span class="stringliteral">&quot;Use ABI stable &quot;</span></div><div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;    <span class="stringliteral">&quot;CreateWorkload(LayerType, const QueueDescriptor&amp;, const WorkloadInfo&amp; info) instead.&quot;</span>, <span class="stringliteral">&quot;23.08&quot;</span>)</div><div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;    std::unique_ptr&lt;IWorkload&gt; <a class="code" href="classarmnn_1_1_workload_factory_base.xhtml#ac8ff2a4e63a9954fd6b3e9fc6dfa9bf0">CreateDetectionPostProcess</a>(<span class="keyword">const</span> <a class="code" href="structarmnn_1_1_detection_post_process_queue_descriptor.xhtml">DetectionPostProcessQueueDescriptor</a>&amp; descriptor,</div><div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;                                                          <span class="keyword">const</span> <a class="code" href="structarmnn_1_1_workload_info.xhtml">WorkloadInfo</a>&amp; info) <span class="keyword">const override</span>;</div><div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;</div><div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;    <a class="code" href="_deprecated_8hpp.xhtml#af16119336bd0dfbfbc83fc283151067e">ARMNN_DEPRECATED_MSG_REMOVAL_DATE</a>(<span class="stringliteral">&quot;Use ABI stable &quot;</span></div><div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;    <span class="stringliteral">&quot;CreateWorkload(LayerType, const QueueDescriptor&amp;, const WorkloadInfo&amp; info) instead.&quot;</span>, <span class="stringliteral">&quot;23.08&quot;</span>)</div><div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;    std::unique_ptr&lt;IWorkload&gt; <a class="code" href="classarmnn_1_1_workload_factory_base.xhtml#a1c7e383368cb078a1faac0a4e4f763a1">CreateDivision</a>(<span class="keyword">const</span> <a class="code" href="structarmnn_1_1_division_queue_descriptor.xhtml">DivisionQueueDescriptor</a>&amp; descriptor,</div><div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160;                                              <span class="keyword">const</span> <a class="code" href="structarmnn_1_1_workload_info.xhtml">WorkloadInfo</a>&amp; info) <span class="keyword">const override</span>;</div><div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;</div><div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160;    <a class="code" href="_deprecated_8hpp.xhtml#af16119336bd0dfbfbc83fc283151067e">ARMNN_DEPRECATED_MSG_REMOVAL_DATE</a>(<span class="stringliteral">&quot;Use ABI stable &quot;</span></div><div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160;    <span class="stringliteral">&quot;CreateWorkload(LayerType, const QueueDescriptor&amp;, const WorkloadInfo&amp; info) instead.&quot;</span>, <span class="stringliteral">&quot;23.08&quot;</span>)</div><div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160;    std::unique_ptr&lt;IWorkload&gt; <a class="code" href="classarmnn_1_1_workload_factory_base.xhtml#a09f09645c2289d5d47dbea7c011d5f0e">CreateElementwiseUnary</a>(<span class="keyword">const</span> <a class="code" href="structarmnn_1_1_elementwise_unary_queue_descriptor.xhtml">ElementwiseUnaryQueueDescriptor</a>&amp; descriptor,</div><div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160;                                                      <span class="keyword">const</span> <a class="code" href="structarmnn_1_1_workload_info.xhtml">WorkloadInfo</a>&amp; Info) <span class="keyword">const override</span>;</div><div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160;</div><div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;    <a class="code" href="_deprecated_8hpp.xhtml#af16119336bd0dfbfbc83fc283151067e">ARMNN_DEPRECATED_MSG_REMOVAL_DATE</a>(<span class="stringliteral">&quot;Use ABI stable &quot;</span></div><div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160;    <span class="stringliteral">&quot;CreateWorkload(LayerType, const QueueDescriptor&amp;, const WorkloadInfo&amp; info) instead.&quot;</span>, <span class="stringliteral">&quot;23.08&quot;</span>)</div><div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160;    std::unique_ptr&lt;IWorkload&gt; CreateFill(<span class="keyword">const</span> <a class="code" href="structarmnn_1_1_fill_queue_descriptor.xhtml">FillQueueDescriptor</a>&amp; descriptor,</div><div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160;                                          <span class="keyword">const</span> <a class="code" href="structarmnn_1_1_workload_info.xhtml">WorkloadInfo</a>&amp; info) <span class="keyword">const override</span>;</div><div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160;</div><div class="line"><a name="l00169"></a><span class="lineno">  169</span>&#160;    <a class="code" href="_deprecated_8hpp.xhtml#af16119336bd0dfbfbc83fc283151067e">ARMNN_DEPRECATED_MSG_REMOVAL_DATE</a>(<span class="stringliteral">&quot;Use ABI stable &quot;</span></div><div class="line"><a name="l00170"></a><span class="lineno">  170</span>&#160;    <span class="stringliteral">&quot;CreateWorkload(LayerType, const QueueDescriptor&amp;, const WorkloadInfo&amp; info) instead.&quot;</span>, <span class="stringliteral">&quot;23.08&quot;</span>)</div><div class="line"><a name="l00171"></a><span class="lineno">  171</span>&#160;    std::unique_ptr&lt;IWorkload&gt; <a class="code" href="classarmnn_1_1_workload_factory_base.xhtml#a4101fcf76e3bbc979b2276631617aabe">CreateFloor</a>(<span class="keyword">const</span> <a class="code" href="structarmnn_1_1_floor_queue_descriptor.xhtml">FloorQueueDescriptor</a>&amp; descriptor,</div><div class="line"><a name="l00172"></a><span class="lineno">  172</span>&#160;                                           <span class="keyword">const</span> <a class="code" href="structarmnn_1_1_workload_info.xhtml">WorkloadInfo</a>&amp; info) <span class="keyword">const override</span>;</div><div class="line"><a name="l00173"></a><span class="lineno">  173</span>&#160;</div><div class="line"><a name="l00174"></a><span class="lineno">  174</span>&#160;    <a class="code" href="_deprecated_8hpp.xhtml#af16119336bd0dfbfbc83fc283151067e">ARMNN_DEPRECATED_MSG_REMOVAL_DATE</a>(<span class="stringliteral">&quot;Use ABI stable &quot;</span></div><div class="line"><a name="l00175"></a><span class="lineno">  175</span>&#160;    <span class="stringliteral">&quot;CreateWorkload(LayerType, const QueueDescriptor&amp;, const WorkloadInfo&amp; info) instead.&quot;</span>, <span class="stringliteral">&quot;23.08&quot;</span>)</div><div class="line"><a name="l00176"></a><span class="lineno">  176</span>&#160;    std::unique_ptr&lt;IWorkload&gt; <a class="code" href="classarmnn_1_1_workload_factory_base.xhtml#af5ace6034148c3fe048db884058f04cf">CreateFullyConnected</a>(<span class="keyword">const</span> <a class="code" href="structarmnn_1_1_fully_connected_queue_descriptor.xhtml">FullyConnectedQueueDescriptor</a>&amp; descriptor,</div><div class="line"><a name="l00177"></a><span class="lineno">  177</span>&#160;                                                    <span class="keyword">const</span> <a class="code" href="structarmnn_1_1_workload_info.xhtml">WorkloadInfo</a>&amp; info) <span class="keyword">const override</span>;</div><div class="line"><a name="l00178"></a><span class="lineno">  178</span>&#160;</div><div class="line"><a name="l00179"></a><span class="lineno">  179</span>&#160;    <a class="code" href="_deprecated_8hpp.xhtml#af16119336bd0dfbfbc83fc283151067e">ARMNN_DEPRECATED_MSG_REMOVAL_DATE</a>(<span class="stringliteral">&quot;Use ABI stable &quot;</span></div><div class="line"><a name="l00180"></a><span class="lineno">  180</span>&#160;    <span class="stringliteral">&quot;CreateWorkload(LayerType, const QueueDescriptor&amp;, const WorkloadInfo&amp; info) instead.&quot;</span>, <span class="stringliteral">&quot;23.08&quot;</span>)</div><div class="line"><a name="l00181"></a><span class="lineno">  181</span>&#160;    std::unique_ptr&lt;IWorkload&gt; <a class="code" href="classarmnn_1_1_workload_factory_base.xhtml#ada3f450379ba7b4989344de72a16f1d2">CreateGather</a>(<span class="keyword">const</span> <a class="code" href="structarmnn_1_1_gather_queue_descriptor.xhtml">GatherQueueDescriptor</a>&amp; descriptor,</div><div class="line"><a name="l00182"></a><span class="lineno">  182</span>&#160;                                            <span class="keyword">const</span> <a class="code" href="structarmnn_1_1_workload_info.xhtml">WorkloadInfo</a>&amp; info) <span class="keyword">const override</span>;</div><div class="line"><a name="l00183"></a><span class="lineno">  183</span>&#160;</div><div class="line"><a name="l00184"></a><span class="lineno">  184</span>&#160;    <a class="code" href="_deprecated_8hpp.xhtml#af16119336bd0dfbfbc83fc283151067e">ARMNN_DEPRECATED_MSG_REMOVAL_DATE</a>(<span class="stringliteral">&quot;Use ABI stable &quot;</span></div><div class="line"><a name="l00185"></a><span class="lineno">  185</span>&#160;    <span class="stringliteral">&quot;CreateWorkload(LayerType, const QueueDescriptor&amp;, const WorkloadInfo&amp; info) instead.&quot;</span>, <span class="stringliteral">&quot;23.08&quot;</span>)</div><div class="line"><a name="l00186"></a><span class="lineno">  186</span>&#160;    std::unique_ptr&lt;IWorkload&gt; <a class="code" href="classarmnn_1_1_workload_factory_base.xhtml#a3dcc96078130874f1be15a7148868539">CreateInput</a>(<span class="keyword">const</span> <a class="code" href="structarmnn_1_1_mem_copy_queue_descriptor.xhtml">InputQueueDescriptor</a>&amp; descriptor,</div><div class="line"><a name="l00187"></a><span class="lineno">  187</span>&#160;                                           <span class="keyword">const</span> <a class="code" href="structarmnn_1_1_workload_info.xhtml">WorkloadInfo</a>&amp; info) <span class="keyword">const override</span>;</div><div class="line"><a name="l00188"></a><span class="lineno">  188</span>&#160;</div><div class="line"><a name="l00189"></a><span class="lineno">  189</span>&#160;    <a class="code" href="_deprecated_8hpp.xhtml#af16119336bd0dfbfbc83fc283151067e">ARMNN_DEPRECATED_MSG_REMOVAL_DATE</a>(<span class="stringliteral">&quot;Use ABI stable &quot;</span></div><div class="line"><a name="l00190"></a><span class="lineno">  190</span>&#160;    <span class="stringliteral">&quot;CreateWorkload(LayerType, const QueueDescriptor&amp;, const WorkloadInfo&amp; info) instead.&quot;</span>, <span class="stringliteral">&quot;23.08&quot;</span>)</div><div class="line"><a name="l00191"></a><span class="lineno">  191</span>&#160;    std::unique_ptr&lt;IWorkload&gt; <a class="code" href="classarmnn_1_1_workload_factory_base.xhtml#a77110c4dd8fe747ba0d441265f781076">CreateInstanceNormalization</a>(<span class="keyword">const</span> <a class="code" href="structarmnn_1_1_instance_normalization_queue_descriptor.xhtml">InstanceNormalizationQueueDescriptor</a>&amp; descriptor,</div><div class="line"><a name="l00192"></a><span class="lineno">  192</span>&#160;                                                           <span class="keyword">const</span> <a class="code" href="structarmnn_1_1_workload_info.xhtml">WorkloadInfo</a>&amp; info) <span class="keyword">const override</span>;</div><div class="line"><a name="l00193"></a><span class="lineno">  193</span>&#160;</div><div class="line"><a name="l00194"></a><span class="lineno">  194</span>&#160;    <a class="code" href="_deprecated_8hpp.xhtml#af16119336bd0dfbfbc83fc283151067e">ARMNN_DEPRECATED_MSG_REMOVAL_DATE</a>(<span class="stringliteral">&quot;Use ABI stable &quot;</span></div><div class="line"><a name="l00195"></a><span class="lineno">  195</span>&#160;    <span class="stringliteral">&quot;CreateWorkload(LayerType, const QueueDescriptor&amp;, const WorkloadInfo&amp; info) instead.&quot;</span>, <span class="stringliteral">&quot;23.08&quot;</span>)</div><div class="line"><a name="l00196"></a><span class="lineno">  196</span>&#160;    std::unique_ptr&lt;IWorkload&gt; <a class="code" href="classarmnn_1_1_workload_factory_base.xhtml#af12076c82b1b7f0c48c1ed71df206b4d">CreateL2Normalization</a>(<span class="keyword">const</span> <a class="code" href="structarmnn_1_1_l2_normalization_queue_descriptor.xhtml">L2NormalizationQueueDescriptor</a>&amp; descriptor,</div><div class="line"><a name="l00197"></a><span class="lineno">  197</span>&#160;                                                     <span class="keyword">const</span> <a class="code" href="structarmnn_1_1_workload_info.xhtml">WorkloadInfo</a>&amp; info) <span class="keyword">const override</span>;</div><div class="line"><a name="l00198"></a><span class="lineno">  198</span>&#160;</div><div class="line"><a name="l00199"></a><span class="lineno">  199</span>&#160;    <a class="code" href="_deprecated_8hpp.xhtml#af16119336bd0dfbfbc83fc283151067e">ARMNN_DEPRECATED_MSG_REMOVAL_DATE</a>(<span class="stringliteral">&quot;Use ABI stable &quot;</span></div><div class="line"><a name="l00200"></a><span class="lineno">  200</span>&#160;    <span class="stringliteral">&quot;CreateWorkload(LayerType, const QueueDescriptor&amp;, const WorkloadInfo&amp; info) instead.&quot;</span>, <span class="stringliteral">&quot;23.08&quot;</span>)</div><div class="line"><a name="l00201"></a><span class="lineno">  201</span>&#160;    std::unique_ptr&lt;IWorkload&gt; CreateLogicalBinary(<span class="keyword">const</span> <a class="code" href="structarmnn_1_1_logical_binary_queue_descriptor.xhtml">LogicalBinaryQueueDescriptor</a>&amp; descriptor,</div><div class="line"><a name="l00202"></a><span class="lineno">  202</span>&#160;                                                   <span class="keyword">const</span> <a class="code" href="structarmnn_1_1_workload_info.xhtml">WorkloadInfo</a>&amp; info) <span class="keyword">const override</span>;</div><div class="line"><a name="l00203"></a><span class="lineno">  203</span>&#160;</div><div class="line"><a name="l00204"></a><span class="lineno">  204</span>&#160;    <a class="code" href="_deprecated_8hpp.xhtml#af16119336bd0dfbfbc83fc283151067e">ARMNN_DEPRECATED_MSG_REMOVAL_DATE</a>(<span class="stringliteral">&quot;Use ABI stable &quot;</span></div><div class="line"><a name="l00205"></a><span class="lineno">  205</span>&#160;    <span class="stringliteral">&quot;CreateWorkload(LayerType, const QueueDescriptor&amp;, const WorkloadInfo&amp; info) instead.&quot;</span>, <span class="stringliteral">&quot;23.08&quot;</span>)</div><div class="line"><a name="l00206"></a><span class="lineno">  206</span>&#160;    std::unique_ptr&lt;IWorkload&gt; <a class="code" href="classarmnn_1_1_workload_factory_base.xhtml#a04a3ae3944eb63e7e94c6e9676815864">CreateLogSoftmax</a>(<span class="keyword">const</span> <a class="code" href="structarmnn_1_1_log_softmax_queue_descriptor.xhtml">LogSoftmaxQueueDescriptor</a>&amp; descriptor,</div><div class="line"><a name="l00207"></a><span class="lineno">  207</span>&#160;                                                <span class="keyword">const</span> <a class="code" href="structarmnn_1_1_workload_info.xhtml">WorkloadInfo</a>&amp; info) <span class="keyword">const override</span>;</div><div class="line"><a name="l00208"></a><span class="lineno">  208</span>&#160;</div><div class="line"><a name="l00209"></a><span class="lineno">  209</span>&#160;    <a class="code" href="_deprecated_8hpp.xhtml#af16119336bd0dfbfbc83fc283151067e">ARMNN_DEPRECATED_MSG_REMOVAL_DATE</a>(<span class="stringliteral">&quot;Use ABI stable &quot;</span></div><div class="line"><a name="l00210"></a><span class="lineno">  210</span>&#160;    <span class="stringliteral">&quot;CreateWorkload(LayerType, const QueueDescriptor&amp;, const WorkloadInfo&amp; info) instead.&quot;</span>, <span class="stringliteral">&quot;23.08&quot;</span>)</div><div class="line"><a name="l00211"></a><span class="lineno">  211</span>&#160;    std::unique_ptr&lt;IWorkload&gt; <a class="code" href="classarmnn_1_1_workload_factory_base.xhtml#af6cc3669898b498592dc28600aa6f0cd">CreateLstm</a>(<span class="keyword">const</span> <a class="code" href="structarmnn_1_1_lstm_queue_descriptor.xhtml">LstmQueueDescriptor</a>&amp; descriptor,</div><div class="line"><a name="l00212"></a><span class="lineno">  212</span>&#160;                                          <span class="keyword">const</span> <a class="code" href="structarmnn_1_1_workload_info.xhtml">WorkloadInfo</a>&amp; info) <span class="keyword">const override</span>;</div><div class="line"><a name="l00213"></a><span class="lineno">  213</span>&#160;</div><div class="line"><a name="l00214"></a><span class="lineno">  214</span>&#160;    <a class="code" href="_deprecated_8hpp.xhtml#af16119336bd0dfbfbc83fc283151067e">ARMNN_DEPRECATED_MSG_REMOVAL_DATE</a>(<span class="stringliteral">&quot;Use ABI stable &quot;</span></div><div class="line"><a name="l00215"></a><span class="lineno">  215</span>&#160;    <span class="stringliteral">&quot;CreateWorkload(LayerType, const QueueDescriptor&amp;, const WorkloadInfo&amp; info) instead.&quot;</span>, <span class="stringliteral">&quot;23.08&quot;</span>)</div><div class="line"><a name="l00216"></a><span class="lineno">  216</span>&#160;    std::unique_ptr&lt;IWorkload&gt; <a class="code" href="classarmnn_1_1_workload_factory_base.xhtml#a9e67be0a653c173ba94e38137dc4bbde">CreateMaximum</a>(<span class="keyword">const</span> <a class="code" href="structarmnn_1_1_maximum_queue_descriptor.xhtml">MaximumQueueDescriptor</a>&amp; descriptor,</div><div class="line"><a name="l00217"></a><span class="lineno">  217</span>&#160;                                             <span class="keyword">const</span> <a class="code" href="structarmnn_1_1_workload_info.xhtml">WorkloadInfo</a>&amp; info) <span class="keyword">const override</span>;</div><div class="line"><a name="l00218"></a><span class="lineno">  218</span>&#160;</div><div class="line"><a name="l00219"></a><span class="lineno">  219</span>&#160;    <a class="code" href="_deprecated_8hpp.xhtml#af16119336bd0dfbfbc83fc283151067e">ARMNN_DEPRECATED_MSG_REMOVAL_DATE</a>(<span class="stringliteral">&quot;Use ABI stable &quot;</span></div><div class="line"><a name="l00220"></a><span class="lineno">  220</span>&#160;    <span class="stringliteral">&quot;CreateWorkload(LayerType, const QueueDescriptor&amp;, const WorkloadInfo&amp; info) instead.&quot;</span>, <span class="stringliteral">&quot;23.08&quot;</span>)</div><div class="line"><a name="l00221"></a><span class="lineno">  221</span>&#160;    std::unique_ptr&lt;IWorkload&gt; <a class="code" href="classarmnn_1_1_workload_factory_base.xhtml#aabe4842ade5647ac5bbee5e446e49a5c">CreateMean</a>(<span class="keyword">const</span> <a class="code" href="structarmnn_1_1_mean_queue_descriptor.xhtml">MeanQueueDescriptor</a>&amp; descriptor,</div><div class="line"><a name="l00222"></a><span class="lineno">  222</span>&#160;                                          <span class="keyword">const</span> <a class="code" href="structarmnn_1_1_workload_info.xhtml">WorkloadInfo</a>&amp; Info) <span class="keyword">const override</span>;</div><div class="line"><a name="l00223"></a><span class="lineno">  223</span>&#160;</div><div class="line"><a name="l00224"></a><span class="lineno">  224</span>&#160;    <a class="code" href="_deprecated_8hpp.xhtml#af16119336bd0dfbfbc83fc283151067e">ARMNN_DEPRECATED_MSG_REMOVAL_DATE</a>(<span class="stringliteral">&quot;Use ABI stable &quot;</span></div><div class="line"><a name="l00225"></a><span class="lineno">  225</span>&#160;    <span class="stringliteral">&quot;CreateWorkload(LayerType, const QueueDescriptor&amp;, const WorkloadInfo&amp; info) instead.&quot;</span>, <span class="stringliteral">&quot;23.08&quot;</span>)</div><div class="line"><a name="l00226"></a><span class="lineno">  226</span>&#160;    std::unique_ptr&lt;IWorkload&gt; <a class="code" href="classarmnn_1_1_workload_factory_base.xhtml#a73e9a5c2c3eff38766f03adb98abdd26">CreateMemCopy</a>(<span class="keyword">const</span> <a class="code" href="structarmnn_1_1_mem_copy_queue_descriptor.xhtml">MemCopyQueueDescriptor</a>&amp; descriptor,</div><div class="line"><a name="l00227"></a><span class="lineno">  227</span>&#160;                                             <span class="keyword">const</span> <a class="code" href="structarmnn_1_1_workload_info.xhtml">WorkloadInfo</a>&amp; info) <span class="keyword">const override</span>;</div><div class="line"><a name="l00228"></a><span class="lineno">  228</span>&#160;</div><div class="line"><a name="l00229"></a><span class="lineno">  229</span>&#160;    <a class="code" href="_deprecated_8hpp.xhtml#af16119336bd0dfbfbc83fc283151067e">ARMNN_DEPRECATED_MSG_REMOVAL_DATE</a>(<span class="stringliteral">&quot;Use ABI stable &quot;</span></div><div class="line"><a name="l00230"></a><span class="lineno">  230</span>&#160;    <span class="stringliteral">&quot;CreateWorkload(LayerType, const QueueDescriptor&amp;, const WorkloadInfo&amp; info) instead.&quot;</span>, <span class="stringliteral">&quot;23.08&quot;</span>)</div><div class="line"><a name="l00231"></a><span class="lineno">  231</span>&#160;    std::unique_ptr&lt;IWorkload&gt; <a class="code" href="classarmnn_1_1_workload_factory_base.xhtml#ad16ff72d909eb48f3dc8e1015c4a5078">CreateMemImport</a>(<span class="keyword">const</span> <a class="code" href="structarmnn_1_1_mem_import_queue_descriptor.xhtml">MemImportQueueDescriptor</a>&amp; descriptor,</div><div class="line"><a name="l00232"></a><span class="lineno">  232</span>&#160;                                               <span class="keyword">const</span> <a class="code" href="structarmnn_1_1_workload_info.xhtml">WorkloadInfo</a>&amp; info) <span class="keyword">const override</span>;</div><div class="line"><a name="l00233"></a><span class="lineno">  233</span>&#160;</div><div class="line"><a name="l00234"></a><span class="lineno">  234</span>&#160;    <a class="code" href="_deprecated_8hpp.xhtml#af16119336bd0dfbfbc83fc283151067e">ARMNN_DEPRECATED_MSG_REMOVAL_DATE</a>(<span class="stringliteral">&quot;Use ABI stable &quot;</span></div><div class="line"><a name="l00235"></a><span class="lineno">  235</span>&#160;    <span class="stringliteral">&quot;CreateWorkload(LayerType, const QueueDescriptor&amp;, const WorkloadInfo&amp; info) instead.&quot;</span>, <span class="stringliteral">&quot;23.08&quot;</span>)</div><div class="line"><a name="l00236"></a><span class="lineno">  236</span>&#160;    std::unique_ptr&lt;IWorkload&gt; <a class="code" href="classarmnn_1_1_workload_factory_base.xhtml#a1ba2b05e3c2028d4bc3db29fc0edf122">CreateMinimum</a>(<span class="keyword">const</span> <a class="code" href="structarmnn_1_1_minimum_queue_descriptor.xhtml">MinimumQueueDescriptor</a>&amp; descriptor,</div><div class="line"><a name="l00237"></a><span class="lineno">  237</span>&#160;                                             <span class="keyword">const</span> <a class="code" href="structarmnn_1_1_workload_info.xhtml">WorkloadInfo</a>&amp; info) <span class="keyword">const override</span>;</div><div class="line"><a name="l00238"></a><span class="lineno">  238</span>&#160;</div><div class="line"><a name="l00239"></a><span class="lineno">  239</span>&#160;    <a class="code" href="_deprecated_8hpp.xhtml#af16119336bd0dfbfbc83fc283151067e">ARMNN_DEPRECATED_MSG_REMOVAL_DATE</a>(<span class="stringliteral">&quot;Use ABI stable &quot;</span></div><div class="line"><a name="l00240"></a><span class="lineno">  240</span>&#160;    <span class="stringliteral">&quot;CreateWorkload(LayerType, const QueueDescriptor&amp;, const WorkloadInfo&amp; info) instead.&quot;</span>, <span class="stringliteral">&quot;23.08&quot;</span>)</div><div class="line"><a name="l00241"></a><span class="lineno">  241</span>&#160;    std::unique_ptr&lt;IWorkload&gt; <a class="code" href="classarmnn_1_1_workload_factory_base.xhtml#a848fc4ff47d5e9c68d2e26f6523b4e58">CreateMultiplication</a>(<span class="keyword">const</span> <a class="code" href="structarmnn_1_1_multiplication_queue_descriptor.xhtml">MultiplicationQueueDescriptor</a>&amp; descriptor,</div><div class="line"><a name="l00242"></a><span class="lineno">  242</span>&#160;                                                    <span class="keyword">const</span> <a class="code" href="structarmnn_1_1_workload_info.xhtml">WorkloadInfo</a>&amp; info) <span class="keyword">const override</span>;</div><div class="line"><a name="l00243"></a><span class="lineno">  243</span>&#160;</div><div class="line"><a name="l00244"></a><span class="lineno">  244</span>&#160;    <a class="code" href="_deprecated_8hpp.xhtml#af16119336bd0dfbfbc83fc283151067e">ARMNN_DEPRECATED_MSG_REMOVAL_DATE</a>(<span class="stringliteral">&quot;Use ABI stable &quot;</span></div><div class="line"><a name="l00245"></a><span class="lineno">  245</span>&#160;    <span class="stringliteral">&quot;CreateWorkload(LayerType, const QueueDescriptor&amp;, const WorkloadInfo&amp; info) instead.&quot;</span>, <span class="stringliteral">&quot;23.08&quot;</span>)</div><div class="line"><a name="l00246"></a><span class="lineno">  246</span>&#160;    std::unique_ptr&lt;IWorkload&gt; <a class="code" href="classarmnn_1_1_workload_factory_base.xhtml#a6df587611b4c46b591527f3d594f4a11">CreateNormalization</a>(<span class="keyword">const</span> <a class="code" href="structarmnn_1_1_normalization_queue_descriptor.xhtml">NormalizationQueueDescriptor</a>&amp; descriptor,</div><div class="line"><a name="l00247"></a><span class="lineno">  247</span>&#160;                                                   <span class="keyword">const</span> <a class="code" href="structarmnn_1_1_workload_info.xhtml">WorkloadInfo</a>&amp; info) <span class="keyword">const override</span>;</div><div class="line"><a name="l00248"></a><span class="lineno">  248</span>&#160;</div><div class="line"><a name="l00249"></a><span class="lineno">  249</span>&#160;    <a class="code" href="_deprecated_8hpp.xhtml#af16119336bd0dfbfbc83fc283151067e">ARMNN_DEPRECATED_MSG_REMOVAL_DATE</a>(<span class="stringliteral">&quot;Use ABI stable &quot;</span></div><div class="line"><a name="l00250"></a><span class="lineno">  250</span>&#160;    <span class="stringliteral">&quot;CreateWorkload(LayerType, const QueueDescriptor&amp;, const WorkloadInfo&amp; info) instead.&quot;</span>, <span class="stringliteral">&quot;23.08&quot;</span>)</div><div class="line"><a name="l00251"></a><span class="lineno">  251</span>&#160;    std::unique_ptr&lt;IWorkload&gt; <a class="code" href="classarmnn_1_1_workload_factory_base.xhtml#afd952ccd68a1b2231b77db1f9131a61b">CreateOutput</a>(<span class="keyword">const</span> <a class="code" href="structarmnn_1_1_mem_copy_queue_descriptor.xhtml">OutputQueueDescriptor</a>&amp; descriptor,</div><div class="line"><a name="l00252"></a><span class="lineno">  252</span>&#160;                                            <span class="keyword">const</span> <a class="code" href="structarmnn_1_1_workload_info.xhtml">WorkloadInfo</a>&amp; info) <span class="keyword">const override</span>;</div><div class="line"><a name="l00253"></a><span class="lineno">  253</span>&#160;</div><div class="line"><a name="l00254"></a><span class="lineno">  254</span>&#160;    <a class="code" href="_deprecated_8hpp.xhtml#af16119336bd0dfbfbc83fc283151067e">ARMNN_DEPRECATED_MSG_REMOVAL_DATE</a>(<span class="stringliteral">&quot;Use ABI stable &quot;</span></div><div class="line"><a name="l00255"></a><span class="lineno">  255</span>&#160;    <span class="stringliteral">&quot;CreateWorkload(LayerType, const QueueDescriptor&amp;, const WorkloadInfo&amp; info) instead.&quot;</span>, <span class="stringliteral">&quot;23.08&quot;</span>)</div><div class="line"><a name="l00256"></a><span class="lineno">  256</span>&#160;    std::unique_ptr&lt;IWorkload&gt; <a class="code" href="classarmnn_1_1_workload_factory_base.xhtml#a06a69eab86af31e0daa17c99b9038bf1">CreatePad</a>(<span class="keyword">const</span> <a class="code" href="structarmnn_1_1_pad_queue_descriptor.xhtml">PadQueueDescriptor</a>&amp; descriptor,</div><div class="line"><a name="l00257"></a><span class="lineno">  257</span>&#160;                                         <span class="keyword">const</span> <a class="code" href="structarmnn_1_1_workload_info.xhtml">WorkloadInfo</a>&amp; info) <span class="keyword">const override</span>;</div><div class="line"><a name="l00258"></a><span class="lineno">  258</span>&#160;</div><div class="line"><a name="l00259"></a><span class="lineno">  259</span>&#160;    <a class="code" href="_deprecated_8hpp.xhtml#af16119336bd0dfbfbc83fc283151067e">ARMNN_DEPRECATED_MSG_REMOVAL_DATE</a>(<span class="stringliteral">&quot;Use ABI stable &quot;</span></div><div class="line"><a name="l00260"></a><span class="lineno">  260</span>&#160;    <span class="stringliteral">&quot;CreateWorkload(LayerType, const QueueDescriptor&amp;, const WorkloadInfo&amp; info) instead.&quot;</span>, <span class="stringliteral">&quot;23.08&quot;</span>)</div><div class="line"><a name="l00261"></a><span class="lineno">  261</span>&#160;    std::unique_ptr&lt;IWorkload&gt; <a class="code" href="classarmnn_1_1_workload_factory_base.xhtml#a32983845590ec2dc9e644491793fd557">CreatePermute</a>(<span class="keyword">const</span> <a class="code" href="structarmnn_1_1_permute_queue_descriptor.xhtml">PermuteQueueDescriptor</a>&amp; descriptor,</div><div class="line"><a name="l00262"></a><span class="lineno">  262</span>&#160;                                             <span class="keyword">const</span> <a class="code" href="structarmnn_1_1_workload_info.xhtml">WorkloadInfo</a>&amp; info) <span class="keyword">const override</span>;</div><div class="line"><a name="l00263"></a><span class="lineno">  263</span>&#160;</div><div class="line"><a name="l00264"></a><span class="lineno">  264</span>&#160;    <a class="code" href="_deprecated_8hpp.xhtml#af16119336bd0dfbfbc83fc283151067e">ARMNN_DEPRECATED_MSG_REMOVAL_DATE</a>(<span class="stringliteral">&quot;Use ABI stable &quot;</span></div><div class="line"><a name="l00265"></a><span class="lineno">  265</span>&#160;    <span class="stringliteral">&quot;CreateWorkload(LayerType, const QueueDescriptor&amp;, const WorkloadInfo&amp; info) instead.&quot;</span>, <span class="stringliteral">&quot;23.08&quot;</span>)</div><div class="line"><a name="l00266"></a><span class="lineno">  266</span>&#160;    std::unique_ptr&lt;IWorkload&gt; <a class="code" href="classarmnn_1_1_workload_factory_base.xhtml#abf1f324933ada657d13faf8d1d32a907">CreatePooling2d</a>(<span class="keyword">const</span> <a class="code" href="structarmnn_1_1_pooling2d_queue_descriptor.xhtml">Pooling2dQueueDescriptor</a>&amp; descriptor,</div><div class="line"><a name="l00267"></a><span class="lineno">  267</span>&#160;                                               <span class="keyword">const</span> <a class="code" href="structarmnn_1_1_workload_info.xhtml">WorkloadInfo</a>&amp; info) <span class="keyword">const override</span>;</div><div class="line"><a name="l00268"></a><span class="lineno">  268</span>&#160;</div><div class="line"><a name="l00269"></a><span class="lineno">  269</span>&#160;    <a class="code" href="_deprecated_8hpp.xhtml#af16119336bd0dfbfbc83fc283151067e">ARMNN_DEPRECATED_MSG_REMOVAL_DATE</a>(<span class="stringliteral">&quot;Use ABI stable &quot;</span></div><div class="line"><a name="l00270"></a><span class="lineno">  270</span>&#160;    <span class="stringliteral">&quot;CreateWorkload(LayerType, const QueueDescriptor&amp;, const WorkloadInfo&amp; info) instead.&quot;</span>, <span class="stringliteral">&quot;23.08&quot;</span>)</div><div class="line"><a name="l00271"></a><span class="lineno">  271</span>&#160;    std::unique_ptr&lt;IWorkload&gt; <a class="code" href="classarmnn_1_1_workload_factory_base.xhtml#a21a5aef5f1850d8b5f797d97632409b8">CreatePreCompiled</a>(<span class="keyword">const</span> <a class="code" href="structarmnn_1_1_pre_compiled_queue_descriptor.xhtml">PreCompiledQueueDescriptor</a>&amp; descriptor,</div><div class="line"><a name="l00272"></a><span class="lineno">  272</span>&#160;                                                 <span class="keyword">const</span> <a class="code" href="structarmnn_1_1_workload_info.xhtml">WorkloadInfo</a>&amp; info) <span class="keyword">const override</span>;</div><div class="line"><a name="l00273"></a><span class="lineno">  273</span>&#160;</div><div class="line"><a name="l00274"></a><span class="lineno">  274</span>&#160;    <a class="code" href="_deprecated_8hpp.xhtml#af16119336bd0dfbfbc83fc283151067e">ARMNN_DEPRECATED_MSG_REMOVAL_DATE</a>(<span class="stringliteral">&quot;Use ABI stable &quot;</span></div><div class="line"><a name="l00275"></a><span class="lineno">  275</span>&#160;    <span class="stringliteral">&quot;CreateWorkload(LayerType, const QueueDescriptor&amp;, const WorkloadInfo&amp; info) instead.&quot;</span>, <span class="stringliteral">&quot;23.08&quot;</span>)</div><div class="line"><a name="l00276"></a><span class="lineno">  276</span>&#160;    std::unique_ptr&lt;IWorkload&gt; <a class="code" href="classarmnn_1_1_workload_factory_base.xhtml#a8040319bef721ad05a9fdf75060aaafe">CreatePrelu</a>(<span class="keyword">const</span> <a class="code" href="structarmnn_1_1_prelu_queue_descriptor.xhtml">PreluQueueDescriptor</a>&amp; descriptor,</div><div class="line"><a name="l00277"></a><span class="lineno">  277</span>&#160;                                           <span class="keyword">const</span> <a class="code" href="structarmnn_1_1_workload_info.xhtml">WorkloadInfo</a>&amp; info) <span class="keyword">const override</span>;</div><div class="line"><a name="l00278"></a><span class="lineno">  278</span>&#160;</div><div class="line"><a name="l00279"></a><span class="lineno">  279</span>&#160;    <a class="code" href="_deprecated_8hpp.xhtml#af16119336bd0dfbfbc83fc283151067e">ARMNN_DEPRECATED_MSG_REMOVAL_DATE</a>(<span class="stringliteral">&quot;Use ABI stable &quot;</span></div><div class="line"><a name="l00280"></a><span class="lineno">  280</span>&#160;    <span class="stringliteral">&quot;CreateWorkload(LayerType, const QueueDescriptor&amp;, const WorkloadInfo&amp; info) instead.&quot;</span>, <span class="stringliteral">&quot;23.08&quot;</span>)</div><div class="line"><a name="l00281"></a><span class="lineno">  281</span>&#160;    std::unique_ptr&lt;IWorkload&gt; CreateQLstm(<span class="keyword">const</span> <a class="code" href="structarmnn_1_1_q_lstm_queue_descriptor.xhtml">QLstmQueueDescriptor</a>&amp; descriptor,</div><div class="line"><a name="l00282"></a><span class="lineno">  282</span>&#160;                                           <span class="keyword">const</span> <a class="code" href="structarmnn_1_1_workload_info.xhtml">WorkloadInfo</a>&amp; info) <span class="keyword">const override</span>;</div><div class="line"><a name="l00283"></a><span class="lineno">  283</span>&#160;</div><div class="line"><a name="l00284"></a><span class="lineno">  284</span>&#160;    <a class="code" href="_deprecated_8hpp.xhtml#af16119336bd0dfbfbc83fc283151067e">ARMNN_DEPRECATED_MSG_REMOVAL_DATE</a>(<span class="stringliteral">&quot;Use ABI stable &quot;</span></div><div class="line"><a name="l00285"></a><span class="lineno">  285</span>&#160;    <span class="stringliteral">&quot;CreateWorkload(LayerType, const QueueDescriptor&amp;, const WorkloadInfo&amp; info) instead.&quot;</span>, <span class="stringliteral">&quot;23.08&quot;</span>)</div><div class="line"><a name="l00286"></a><span class="lineno">  286</span>&#160;    std::unique_ptr&lt;IWorkload&gt; <a class="code" href="classarmnn_1_1_workload_factory_base.xhtml#ae51a441630e32e5a850d3d639f0e7847">CreateQuantize</a>(<span class="keyword">const</span> <a class="code" href="structarmnn_1_1_quantize_queue_descriptor.xhtml">QuantizeQueueDescriptor</a>&amp; descriptor,</div><div class="line"><a name="l00287"></a><span class="lineno">  287</span>&#160;                                              <span class="keyword">const</span> <a class="code" href="structarmnn_1_1_workload_info.xhtml">WorkloadInfo</a>&amp; info) <span class="keyword">const override</span>;</div><div class="line"><a name="l00288"></a><span class="lineno">  288</span>&#160;</div><div class="line"><a name="l00289"></a><span class="lineno">  289</span>&#160;    <a class="code" href="_deprecated_8hpp.xhtml#af16119336bd0dfbfbc83fc283151067e">ARMNN_DEPRECATED_MSG_REMOVAL_DATE</a>(<span class="stringliteral">&quot;Use ABI stable &quot;</span></div><div class="line"><a name="l00290"></a><span class="lineno">  290</span>&#160;    <span class="stringliteral">&quot;CreateWorkload(LayerType, const QueueDescriptor&amp;, const WorkloadInfo&amp; info) instead.&quot;</span>, <span class="stringliteral">&quot;23.08&quot;</span>)</div><div class="line"><a name="l00291"></a><span class="lineno">  291</span>&#160;    std::unique_ptr&lt;IWorkload&gt; <a class="code" href="classarmnn_1_1_workload_factory_base.xhtml#abd228c95f2ec95cbb2abcaa0dbacc018">CreateQuantizedLstm</a>(<span class="keyword">const</span> <a class="code" href="structarmnn_1_1_quantized_lstm_queue_descriptor.xhtml">QuantizedLstmQueueDescriptor</a>&amp; descriptor,</div><div class="line"><a name="l00292"></a><span class="lineno">  292</span>&#160;                                                   <span class="keyword">const</span> <a class="code" href="structarmnn_1_1_workload_info.xhtml">WorkloadInfo</a>&amp; info) <span class="keyword">const override</span>;</div><div class="line"><a name="l00293"></a><span class="lineno">  293</span>&#160;</div><div class="line"><a name="l00294"></a><span class="lineno">  294</span>&#160;    <a class="code" href="_deprecated_8hpp.xhtml#af16119336bd0dfbfbc83fc283151067e">ARMNN_DEPRECATED_MSG_REMOVAL_DATE</a>(<span class="stringliteral">&quot;Use ABI stable &quot;</span></div><div class="line"><a name="l00295"></a><span class="lineno">  295</span>&#160;    <span class="stringliteral">&quot;CreateWorkload(LayerType, const QueueDescriptor&amp;, const WorkloadInfo&amp; info) instead.&quot;</span>, <span class="stringliteral">&quot;23.08&quot;</span>)</div><div class="line"><a name="l00296"></a><span class="lineno">  296</span>&#160;    std::unique_ptr&lt;IWorkload&gt; <a class="code" href="classarmnn_1_1_workload_factory_base.xhtml#af8ce0da98340225c76ec512e5483dd89">CreateRank</a>(<span class="keyword">const</span> <a class="code" href="structarmnn_1_1_rank_queue_descriptor.xhtml">RankQueueDescriptor</a>&amp; descriptor,</div><div class="line"><a name="l00297"></a><span class="lineno">  297</span>&#160;                                          <span class="keyword">const</span> <a class="code" href="structarmnn_1_1_workload_info.xhtml">WorkloadInfo</a>&amp; info) <span class="keyword">const override</span>;</div><div class="line"><a name="l00298"></a><span class="lineno">  298</span>&#160;</div><div class="line"><a name="l00299"></a><span class="lineno">  299</span>&#160;    <a class="code" href="_deprecated_8hpp.xhtml#af16119336bd0dfbfbc83fc283151067e">ARMNN_DEPRECATED_MSG_REMOVAL_DATE</a>(<span class="stringliteral">&quot;Use ABI stable &quot;</span></div><div class="line"><a name="l00300"></a><span class="lineno">  300</span>&#160;    <span class="stringliteral">&quot;CreateWorkload(LayerType, const QueueDescriptor&amp;, const WorkloadInfo&amp; info) instead.&quot;</span>, <span class="stringliteral">&quot;23.08&quot;</span>)</div><div class="line"><a name="l00301"></a><span class="lineno">  301</span>&#160;    std::unique_ptr&lt;IWorkload&gt; CreateReduce(<span class="keyword">const</span> <a class="code" href="structarmnn_1_1_reduce_queue_descriptor.xhtml">ReduceQueueDescriptor</a>&amp; descriptor,</div><div class="line"><a name="l00302"></a><span class="lineno">  302</span>&#160;                                            <span class="keyword">const</span> <a class="code" href="structarmnn_1_1_workload_info.xhtml">WorkloadInfo</a>&amp; info) <span class="keyword">const override</span>;</div><div class="line"><a name="l00303"></a><span class="lineno">  303</span>&#160;</div><div class="line"><a name="l00304"></a><span class="lineno">  304</span>&#160;    <a class="code" href="_deprecated_8hpp.xhtml#af16119336bd0dfbfbc83fc283151067e">ARMNN_DEPRECATED_MSG_REMOVAL_DATE</a>(<span class="stringliteral">&quot;Use ABI stable &quot;</span></div><div class="line"><a name="l00305"></a><span class="lineno">  305</span>&#160;    <span class="stringliteral">&quot;CreateWorkload(LayerType, const QueueDescriptor&amp;, const WorkloadInfo&amp; info) instead.&quot;</span>, <span class="stringliteral">&quot;23.08&quot;</span>)</div><div class="line"><a name="l00306"></a><span class="lineno">  306</span>&#160;    std::unique_ptr&lt;IWorkload&gt; <a class="code" href="classarmnn_1_1_workload_factory_base.xhtml#a655697a3bf827352acadc5f1dd3a8a34">CreateReshape</a>(<span class="keyword">const</span> <a class="code" href="structarmnn_1_1_reshape_queue_descriptor.xhtml">ReshapeQueueDescriptor</a>&amp; descriptor,</div><div class="line"><a name="l00307"></a><span class="lineno">  307</span>&#160;                                             <span class="keyword">const</span> <a class="code" href="structarmnn_1_1_workload_info.xhtml">WorkloadInfo</a>&amp; info) <span class="keyword">const override</span>;</div><div class="line"><a name="l00308"></a><span class="lineno">  308</span>&#160;</div><div class="line"><a name="l00309"></a><span class="lineno">  309</span>&#160;    <a class="code" href="_deprecated_8hpp.xhtml#af16119336bd0dfbfbc83fc283151067e">ARMNN_DEPRECATED_MSG_REMOVAL_DATE</a>(<span class="stringliteral">&quot;Use ABI stable &quot;</span></div><div class="line"><a name="l00310"></a><span class="lineno">  310</span>&#160;    <span class="stringliteral">&quot;CreateWorkload(LayerType, const QueueDescriptor&amp;, const WorkloadInfo&amp; info) instead.&quot;</span>, <span class="stringliteral">&quot;23.08&quot;</span>)</div><div class="line"><a name="l00311"></a><span class="lineno">  311</span>&#160;    std::unique_ptr&lt;IWorkload&gt; <a class="code" href="classarmnn_1_1_workload_factory_base.xhtml#aa9390326e8445e71c5dee9858084a1b8">CreateResize</a>(<span class="keyword">const</span> <a class="code" href="structarmnn_1_1_resize_queue_descriptor.xhtml">ResizeQueueDescriptor</a>&amp; descriptor,</div><div class="line"><a name="l00312"></a><span class="lineno">  312</span>&#160;                                            <span class="keyword">const</span> <a class="code" href="structarmnn_1_1_workload_info.xhtml">WorkloadInfo</a>&amp; info) <span class="keyword">const override</span>;</div><div class="line"><a name="l00313"></a><span class="lineno">  313</span>&#160;</div><div class="line"><a name="l00314"></a><span class="lineno">  314</span>&#160;    <a class="code" href="_deprecated_8hpp.xhtml#af16119336bd0dfbfbc83fc283151067e">ARMNN_DEPRECATED_MSG_REMOVAL_DATE</a>(<span class="stringliteral">&quot;Use ABI stable &quot;</span></div><div class="line"><a name="l00315"></a><span class="lineno">  315</span>&#160;    <span class="stringliteral">&quot;CreateWorkload(LayerType, const QueueDescriptor&amp;, const WorkloadInfo&amp; info) instead.&quot;</span>, <span class="stringliteral">&quot;23.08&quot;</span>)</div><div class="line"><a name="l00316"></a><span class="lineno">  316</span>&#160;    std::unique_ptr&lt;IWorkload&gt; <a class="code" href="classarmnn_1_1_workload_factory_base.xhtml#a67ee4f8373684cb67f033976fc563081">CreateSlice</a>(<span class="keyword">const</span> <a class="code" href="structarmnn_1_1_slice_queue_descriptor.xhtml">SliceQueueDescriptor</a>&amp; descriptor,</div><div class="line"><a name="l00317"></a><span class="lineno">  317</span>&#160;                                           <span class="keyword">const</span> <a class="code" href="structarmnn_1_1_workload_info.xhtml">WorkloadInfo</a>&amp; info) <span class="keyword">const override</span>;</div><div class="line"><a name="l00318"></a><span class="lineno">  318</span>&#160;</div><div class="line"><a name="l00319"></a><span class="lineno">  319</span>&#160;    <a class="code" href="_deprecated_8hpp.xhtml#af16119336bd0dfbfbc83fc283151067e">ARMNN_DEPRECATED_MSG_REMOVAL_DATE</a>(<span class="stringliteral">&quot;Use ABI stable &quot;</span></div><div class="line"><a name="l00320"></a><span class="lineno">  320</span>&#160;    <span class="stringliteral">&quot;CreateWorkload(LayerType, const QueueDescriptor&amp;, const WorkloadInfo&amp; info) instead.&quot;</span>, <span class="stringliteral">&quot;23.08&quot;</span>)</div><div class="line"><a name="l00321"></a><span class="lineno">  321</span>&#160;    std::unique_ptr&lt;IWorkload&gt; <a class="code" href="classarmnn_1_1_workload_factory_base.xhtml#a6d49c282026484eb1c6e56f56f35348e">CreateSoftmax</a>(<span class="keyword">const</span> <a class="code" href="structarmnn_1_1_softmax_queue_descriptor.xhtml">SoftmaxQueueDescriptor</a>&amp; descriptor,</div><div class="line"><a name="l00322"></a><span class="lineno">  322</span>&#160;                                             <span class="keyword">const</span> <a class="code" href="structarmnn_1_1_workload_info.xhtml">WorkloadInfo</a>&amp; info) <span class="keyword">const override</span>;</div><div class="line"><a name="l00323"></a><span class="lineno">  323</span>&#160;</div><div class="line"><a name="l00324"></a><span class="lineno">  324</span>&#160;    <a class="code" href="_deprecated_8hpp.xhtml#af16119336bd0dfbfbc83fc283151067e">ARMNN_DEPRECATED_MSG_REMOVAL_DATE</a>(<span class="stringliteral">&quot;Use ABI stable &quot;</span></div><div class="line"><a name="l00325"></a><span class="lineno">  325</span>&#160;    <span class="stringliteral">&quot;CreateWorkload(LayerType, const QueueDescriptor&amp;, const WorkloadInfo&amp; info) instead.&quot;</span>, <span class="stringliteral">&quot;23.08&quot;</span>)</div><div class="line"><a name="l00326"></a><span class="lineno">  326</span>&#160;    std::unique_ptr&lt;IWorkload&gt; <a class="code" href="classarmnn_1_1_workload_factory_base.xhtml#a1c9cd3cd798df38358e9047ac4621fe2">CreateSpaceToBatchNd</a>(<span class="keyword">const</span> <a class="code" href="structarmnn_1_1_space_to_batch_nd_queue_descriptor.xhtml">SpaceToBatchNdQueueDescriptor</a>&amp; descriptor,</div><div class="line"><a name="l00327"></a><span class="lineno">  327</span>&#160;                                                    <span class="keyword">const</span> <a class="code" href="structarmnn_1_1_workload_info.xhtml">WorkloadInfo</a>&amp; info) <span class="keyword">const override</span>;</div><div class="line"><a name="l00328"></a><span class="lineno">  328</span>&#160;</div><div class="line"><a name="l00329"></a><span class="lineno">  329</span>&#160;    <a class="code" href="_deprecated_8hpp.xhtml#af16119336bd0dfbfbc83fc283151067e">ARMNN_DEPRECATED_MSG_REMOVAL_DATE</a>(<span class="stringliteral">&quot;Use ABI stable &quot;</span></div><div class="line"><a name="l00330"></a><span class="lineno">  330</span>&#160;    <span class="stringliteral">&quot;CreateWorkload(LayerType, const QueueDescriptor&amp;, const WorkloadInfo&amp; info) instead.&quot;</span>, <span class="stringliteral">&quot;23.08&quot;</span>)</div><div class="line"><a name="l00331"></a><span class="lineno">  331</span>&#160;    std::unique_ptr&lt;IWorkload&gt; <a class="code" href="classarmnn_1_1_workload_factory_base.xhtml#a4069efcce4abfd80a88827ea1509b2f8">CreateSpaceToDepth</a>(<span class="keyword">const</span> <a class="code" href="structarmnn_1_1_space_to_depth_queue_descriptor.xhtml">SpaceToDepthQueueDescriptor</a>&amp; descriptor,</div><div class="line"><a name="l00332"></a><span class="lineno">  332</span>&#160;                                                  <span class="keyword">const</span> <a class="code" href="structarmnn_1_1_workload_info.xhtml">WorkloadInfo</a>&amp; info) <span class="keyword">const override</span>;</div><div class="line"><a name="l00333"></a><span class="lineno">  333</span>&#160;</div><div class="line"><a name="l00334"></a><span class="lineno">  334</span>&#160;    <a class="code" href="_deprecated_8hpp.xhtml#af16119336bd0dfbfbc83fc283151067e">ARMNN_DEPRECATED_MSG_REMOVAL_DATE</a>(<span class="stringliteral">&quot;Use ABI stable &quot;</span></div><div class="line"><a name="l00335"></a><span class="lineno">  335</span>&#160;    <span class="stringliteral">&quot;CreateWorkload(LayerType, const QueueDescriptor&amp;, const WorkloadInfo&amp; info) instead.&quot;</span>, <span class="stringliteral">&quot;23.08&quot;</span>)</div><div class="line"><a name="l00336"></a><span class="lineno">  336</span>&#160;    std::unique_ptr&lt;IWorkload&gt; <a class="code" href="classarmnn_1_1_workload_factory_base.xhtml#a49428ff12e031e5af8bcc66161fa09fd">CreateSplitter</a>(<span class="keyword">const</span> <a class="code" href="structarmnn_1_1_splitter_queue_descriptor.xhtml">SplitterQueueDescriptor</a>&amp; descriptor,</div><div class="line"><a name="l00337"></a><span class="lineno">  337</span>&#160;                                              <span class="keyword">const</span> <a class="code" href="structarmnn_1_1_workload_info.xhtml">WorkloadInfo</a>&amp; info) <span class="keyword">const override</span>;</div><div class="line"><a name="l00338"></a><span class="lineno">  338</span>&#160;</div><div class="line"><a name="l00339"></a><span class="lineno">  339</span>&#160;    <a class="code" href="_deprecated_8hpp.xhtml#af16119336bd0dfbfbc83fc283151067e">ARMNN_DEPRECATED_MSG_REMOVAL_DATE</a>(<span class="stringliteral">&quot;Use ABI stable &quot;</span></div><div class="line"><a name="l00340"></a><span class="lineno">  340</span>&#160;    <span class="stringliteral">&quot;CreateWorkload(LayerType, const QueueDescriptor&amp;, const WorkloadInfo&amp; info) instead.&quot;</span>, <span class="stringliteral">&quot;23.08&quot;</span>)</div><div class="line"><a name="l00341"></a><span class="lineno">  341</span>&#160;    std::unique_ptr&lt;IWorkload&gt; <a class="code" href="classarmnn_1_1_workload_factory_base.xhtml#a90c2655fd294c445ca2727491c8a8c79">CreateStack</a>(<span class="keyword">const</span> <a class="code" href="structarmnn_1_1_stack_queue_descriptor.xhtml">StackQueueDescriptor</a>&amp; descriptor,</div><div class="line"><a name="l00342"></a><span class="lineno">  342</span>&#160;                                           <span class="keyword">const</span> <a class="code" href="structarmnn_1_1_workload_info.xhtml">WorkloadInfo</a>&amp; info) <span class="keyword">const override</span>;</div><div class="line"><a name="l00343"></a><span class="lineno">  343</span>&#160;</div><div class="line"><a name="l00344"></a><span class="lineno">  344</span>&#160;    <a class="code" href="_deprecated_8hpp.xhtml#af16119336bd0dfbfbc83fc283151067e">ARMNN_DEPRECATED_MSG_REMOVAL_DATE</a>(<span class="stringliteral">&quot;Use ABI stable &quot;</span></div><div class="line"><a name="l00345"></a><span class="lineno">  345</span>&#160;    <span class="stringliteral">&quot;CreateWorkload(LayerType, const QueueDescriptor&amp;, const WorkloadInfo&amp; info) instead.&quot;</span>, <span class="stringliteral">&quot;23.08&quot;</span>)</div><div class="line"><a name="l00346"></a><span class="lineno">  346</span>&#160;    std::unique_ptr&lt;IWorkload&gt; <a class="code" href="classarmnn_1_1_workload_factory_base.xhtml#a757d3084d3e11a1840bd2170eb990235">CreateStridedSlice</a>(<span class="keyword">const</span> <a class="code" href="structarmnn_1_1_strided_slice_queue_descriptor.xhtml">StridedSliceQueueDescriptor</a>&amp; descriptor,</div><div class="line"><a name="l00347"></a><span class="lineno">  347</span>&#160;                                                  <span class="keyword">const</span> <a class="code" href="structarmnn_1_1_workload_info.xhtml">WorkloadInfo</a>&amp; info) <span class="keyword">const override</span>;</div><div class="line"><a name="l00348"></a><span class="lineno">  348</span>&#160;</div><div class="line"><a name="l00349"></a><span class="lineno">  349</span>&#160;    <a class="code" href="_deprecated_8hpp.xhtml#af16119336bd0dfbfbc83fc283151067e">ARMNN_DEPRECATED_MSG_REMOVAL_DATE</a>(<span class="stringliteral">&quot;Use ABI stable &quot;</span></div><div class="line"><a name="l00350"></a><span class="lineno">  350</span>&#160;    <span class="stringliteral">&quot;CreateWorkload(LayerType, const QueueDescriptor&amp;, const WorkloadInfo&amp; info) instead.&quot;</span>, <span class="stringliteral">&quot;23.08&quot;</span>)</div><div class="line"><a name="l00351"></a><span class="lineno">  351</span>&#160;    std::unique_ptr&lt;IWorkload&gt; <a class="code" href="classarmnn_1_1_workload_factory_base.xhtml#a088ed247c7ec3bc1603c60f1145014e8">CreateSubtraction</a>(<span class="keyword">const</span> <a class="code" href="structarmnn_1_1_subtraction_queue_descriptor.xhtml">SubtractionQueueDescriptor</a>&amp; descriptor,</div><div class="line"><a name="l00352"></a><span class="lineno">  352</span>&#160;                                                 <span class="keyword">const</span> <a class="code" href="structarmnn_1_1_workload_info.xhtml">WorkloadInfo</a>&amp; info) <span class="keyword">const override</span>;</div><div class="line"><a name="l00353"></a><span class="lineno">  353</span>&#160;</div><div class="line"><a name="l00354"></a><span class="lineno">  354</span>&#160;    <a class="code" href="_deprecated_8hpp.xhtml#af16119336bd0dfbfbc83fc283151067e">ARMNN_DEPRECATED_MSG_REMOVAL_DATE</a>(<span class="stringliteral">&quot;Use ABI stable &quot;</span></div><div class="line"><a name="l00355"></a><span class="lineno">  355</span>&#160;    <span class="stringliteral">&quot;CreateWorkload(LayerType, const QueueDescriptor&amp;, const WorkloadInfo&amp; info) instead.&quot;</span>, <span class="stringliteral">&quot;23.08&quot;</span>)</div><div class="line"><a name="l00356"></a><span class="lineno">  356</span>&#160;    std::unique_ptr&lt;IWorkload&gt; <a class="code" href="classarmnn_1_1_workload_factory_base.xhtml#a07446244299bc12305593358695ea1b4">CreateTranspose</a>(<span class="keyword">const</span> <a class="code" href="structarmnn_1_1_transpose_queue_descriptor.xhtml">TransposeQueueDescriptor</a>&amp; descriptor,</div><div class="line"><a name="l00357"></a><span class="lineno">  357</span>&#160;                                               <span class="keyword">const</span> <a class="code" href="structarmnn_1_1_workload_info.xhtml">WorkloadInfo</a>&amp; info) <span class="keyword">const override</span>;</div><div class="line"><a name="l00358"></a><span class="lineno">  358</span>&#160;</div><div class="line"><a name="l00359"></a><span class="lineno">  359</span>&#160;    <a class="code" href="_deprecated_8hpp.xhtml#af16119336bd0dfbfbc83fc283151067e">ARMNN_DEPRECATED_MSG_REMOVAL_DATE</a>(<span class="stringliteral">&quot;Use ABI stable &quot;</span></div><div class="line"><a name="l00360"></a><span class="lineno">  360</span>&#160;    <span class="stringliteral">&quot;CreateWorkload(LayerType, const QueueDescriptor&amp;, const WorkloadInfo&amp; info) instead.&quot;</span>, <span class="stringliteral">&quot;23.08&quot;</span>)</div><div class="line"><a name="l00361"></a><span class="lineno">  361</span>&#160;    std::unique_ptr&lt;IWorkload&gt; <a class="code" href="classarmnn_1_1_workload_factory_base.xhtml#acb80cd4ff2c145b80554376643fc54db">CreateTransposeConvolution2d</a>(<span class="keyword">const</span> <a class="code" href="structarmnn_1_1_transpose_convolution2d_queue_descriptor.xhtml">TransposeConvolution2dQueueDescriptor</a>&amp; descriptor,</div><div class="line"><a name="l00362"></a><span class="lineno">  362</span>&#160;                                                            <span class="keyword">const</span> <a class="code" href="structarmnn_1_1_workload_info.xhtml">WorkloadInfo</a>&amp; info) <span class="keyword">const override</span>;</div><div class="line"><a name="l00363"></a><span class="lineno">  363</span>&#160;</div><div class="line"><a name="l00364"></a><span class="lineno">  364</span>&#160;<span class="keyword">private</span>:</div><div class="line"><a name="l00365"></a><span class="lineno">  365</span>&#160;    <span class="keywordtype">void</span> SetNumberOfThreads();</div><div class="line"><a name="l00366"></a><span class="lineno">  366</span>&#160;</div><div class="line"><a name="l00367"></a><span class="lineno">  367</span>&#160;    <span class="keyword">mutable</span> std::shared_ptr&lt;NeonMemoryManager&gt; m_MemoryManager;</div><div class="line"><a name="l00368"></a><span class="lineno">  368</span>&#160;    <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_i_backend_internal.xhtml#a4d0238968a7643dbb170547dd22bba54">IBackendInternal::IBackendSpecificModelContextPtr</a> m_ModelContextPtr;</div><div class="line"><a name="l00369"></a><span class="lineno">  369</span>&#160;};</div><div class="line"><a name="l00370"></a><span class="lineno">  370</span>&#160;</div><div class="line"><a name="l00371"></a><span class="lineno">  371</span>&#160;} <span class="comment">// namespace armnn</span></div><div class="ttc" id="structarmnn_1_1_multiplication_queue_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_multiplication_queue_descriptor.xhtml">armnn::MultiplicationQueueDescriptor</a></div><div class="ttdef"><b>Definition:</b> <a href="_workload_data_8hpp_source.xhtml#l00259">WorkloadData.hpp:259</a></div></div>
<div class="ttc" id="structarmnn_1_1_cast_queue_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_cast_queue_descriptor.xhtml">armnn::CastQueueDescriptor</a></div><div class="ttdef"><b>Definition:</b> <a href="_workload_data_8hpp_source.xhtml#l00168">WorkloadData.hpp:168</a></div></div>
<div class="ttc" id="structarmnn_1_1_instance_normalization_queue_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_instance_normalization_queue_descriptor.xhtml">armnn::InstanceNormalizationQueueDescriptor</a></div><div class="ttdef"><b>Definition:</b> <a href="_workload_data_8hpp_source.xhtml#l00348">WorkloadData.hpp:348</a></div></div>
<div class="ttc" id="classarmnn_1_1_workload_factory_base_xhtml_a088ed247c7ec3bc1603c60f1145014e8"><div class="ttname"><a href="classarmnn_1_1_workload_factory_base.xhtml#a088ed247c7ec3bc1603c60f1145014e8">armnn::WorkloadFactoryBase::CreateSubtraction</a></div><div class="ttdeci">std::unique_ptr&lt; IWorkload &gt; CreateSubtraction(const SubtractionQueueDescriptor &amp;, const WorkloadInfo &amp;) const override</div><div class="ttdef"><b>Definition:</b> <a href="_workload_factory_base_8hpp_source.xhtml#l00251">WorkloadFactoryBase.hpp:251</a></div></div>
<div class="ttc" id="structarmnn_1_1_permute_queue_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_permute_queue_descriptor.xhtml">armnn::PermuteQueueDescriptor</a></div><div class="ttdef"><b>Definition:</b> <a href="_workload_data_8hpp_source.xhtml#l00186">WorkloadData.hpp:186</a></div></div>
<div class="ttc" id="_ignore_unused_8hpp_xhtml"><div class="ttname"><a href="_ignore_unused_8hpp.xhtml">IgnoreUnused.hpp</a></div></div>
<div class="ttc" id="classarmnn_1_1_workload_factory_base_xhtml_a09f09645c2289d5d47dbea7c011d5f0e"><div class="ttname"><a href="classarmnn_1_1_workload_factory_base.xhtml#a09f09645c2289d5d47dbea7c011d5f0e">armnn::WorkloadFactoryBase::CreateElementwiseUnary</a></div><div class="ttdeci">std::unique_ptr&lt; IWorkload &gt; CreateElementwiseUnary(const ElementwiseUnaryQueueDescriptor &amp;descriptor, const WorkloadInfo &amp;info) const override</div><div class="ttdef"><b>Definition:</b> <a href="_workload_factory_base_8hpp_source.xhtml#l00110">WorkloadFactoryBase.hpp:110</a></div></div>
<div class="ttc" id="classarmnn_1_1_workload_factory_base_xhtml_a757d3084d3e11a1840bd2170eb990235"><div class="ttname"><a href="classarmnn_1_1_workload_factory_base.xhtml#a757d3084d3e11a1840bd2170eb990235">armnn::WorkloadFactoryBase::CreateStridedSlice</a></div><div class="ttdeci">std::unique_ptr&lt; IWorkload &gt; CreateStridedSlice(const StridedSliceQueueDescriptor &amp;, const WorkloadInfo &amp;) const override</div><div class="ttdef"><b>Definition:</b> <a href="_workload_factory_base_8hpp_source.xhtml#l00263">WorkloadFactoryBase.hpp:263</a></div></div>
<div class="ttc" id="structarmnn_1_1_quantize_queue_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_quantize_queue_descriptor.xhtml">armnn::QuantizeQueueDescriptor</a></div><div class="ttdef"><b>Definition:</b> <a href="_workload_data_8hpp_source.xhtml#l00294">WorkloadData.hpp:294</a></div></div>
<div class="ttc" id="classarmnn_1_1_i_connectable_layer_xhtml"><div class="ttname"><a href="classarmnn_1_1_i_connectable_layer.xhtml">armnn::IConnectableLayer</a></div><div class="ttdoc">Interface for a layer that is connectable to other layers via InputSlots and OutputSlots. </div><div class="ttdef"><b>Definition:</b> <a href="_i_network_8hpp_source.xhtml#l00068">INetwork.hpp:68</a></div></div>
<div class="ttc" id="namespacearmnn_xhtml_ad1d5cce2d9e9a5d61c243e5c989112e0"><div class="ttname"><a href="namespacearmnn.xhtml#ad1d5cce2d9e9a5d61c243e5c989112e0">armnn::DataLayout</a></div><div class="ttdeci">DataLayout</div><div class="ttdef"><b>Definition:</b> <a href="_types_8hpp_source.xhtml#l00062">Types.hpp:62</a></div></div>
<div class="ttc" id="structarmnn_1_1_maximum_queue_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_maximum_queue_descriptor.xhtml">armnn::MaximumQueueDescriptor</a></div><div class="ttdef"><b>Definition:</b> <a href="_workload_data_8hpp_source.xhtml#l00277">WorkloadData.hpp:277</a></div></div>
<div class="ttc" id="structarmnn_1_1_detection_post_process_queue_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_detection_post_process_queue_descriptor.xhtml">armnn::DetectionPostProcessQueueDescriptor</a></div><div class="ttdef"><b>Definition:</b> <a href="_workload_data_8hpp_source.xhtml#l00234">WorkloadData.hpp:234</a></div></div>
<div class="ttc" id="classarmnn_1_1_workload_factory_base_xhtml_a3dcc96078130874f1be15a7148868539"><div class="ttname"><a href="classarmnn_1_1_workload_factory_base.xhtml#a3dcc96078130874f1be15a7148868539">armnn::WorkloadFactoryBase::CreateInput</a></div><div class="ttdeci">std::unique_ptr&lt; IWorkload &gt; CreateInput(const InputQueueDescriptor &amp;, const WorkloadInfo &amp;) const override</div><div class="ttdef"><b>Definition:</b> <a href="_workload_factory_base_8hpp_source.xhtml#l00024">WorkloadFactoryBase.hpp:24</a></div></div>
<div class="ttc" id="structarmnn_1_1_gather_queue_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_gather_queue_descriptor.xhtml">armnn::GatherQueueDescriptor</a></div><div class="ttdef"><b>Definition:</b> <a href="_workload_data_8hpp_source.xhtml#l00502">WorkloadData.hpp:502</a></div></div>
<div class="ttc" id="classarmnn_1_1_optional_xhtml"><div class="ttname"><a href="classarmnn_1_1_optional.xhtml">armnn::Optional</a></div><div class="ttdef"><b>Definition:</b> <a href="_optional_8hpp_source.xhtml#l00270">Optional.hpp:270</a></div></div>
<div class="ttc" id="classarmnn_1_1_workload_factory_base_xhtml_af12076c82b1b7f0c48c1ed71df206b4d"><div class="ttname"><a href="classarmnn_1_1_workload_factory_base.xhtml#af12076c82b1b7f0c48c1ed71df206b4d">armnn::WorkloadFactoryBase::CreateL2Normalization</a></div><div class="ttdeci">std::unique_ptr&lt; IWorkload &gt; CreateL2Normalization(const L2NormalizationQueueDescriptor &amp;, const WorkloadInfo &amp;) const override</div><div class="ttdef"><b>Definition:</b> <a href="_workload_factory_base_8hpp_source.xhtml#l00143">WorkloadFactoryBase.hpp:143</a></div></div>
<div class="ttc" id="structarmnn_1_1_splitter_queue_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_splitter_queue_descriptor.xhtml">armnn::SplitterQueueDescriptor</a></div><div class="ttdef"><b>Definition:</b> <a href="_workload_data_8hpp_source.xhtml#l00111">WorkloadData.hpp:111</a></div></div>
<div class="ttc" id="structarmnn_1_1_constant_queue_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_constant_queue_descriptor.xhtml">armnn::ConstantQueueDescriptor</a></div><div class="ttdef"><b>Definition:</b> <a href="_workload_data_8hpp_source.xhtml#l00363">WorkloadData.hpp:363</a></div></div>
<div class="ttc" id="structarmnn_1_1_quantized_lstm_queue_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_quantized_lstm_queue_descriptor.xhtml">armnn::QuantizedLstmQueueDescriptor</a></div><div class="ttdef"><b>Definition:</b> <a href="_workload_data_8hpp_source.xhtml#l00609">WorkloadData.hpp:609</a></div></div>
<div class="ttc" id="_i_backend_internal_8hpp_xhtml"><div class="ttname"><a href="_i_backend_internal_8hpp.xhtml">IBackendInternal.hpp</a></div></div>
<div class="ttc" id="classarmnn_1_1_tensor_info_xhtml"><div class="ttname"><a href="classarmnn_1_1_tensor_info.xhtml">armnn::TensorInfo</a></div><div class="ttdef"><b>Definition:</b> <a href="_tensor_8hpp_source.xhtml#l00152">Tensor.hpp:152</a></div></div>
<div class="ttc" id="classarmnn_1_1_workload_factory_base_xhtml_a666c75e9db051b9b07f137a74af8d8b4"><div class="ttname"><a href="classarmnn_1_1_workload_factory_base.xhtml#a666c75e9db051b9b07f137a74af8d8b4">armnn::WorkloadFactoryBase::CreateBatchNormalization</a></div><div class="ttdeci">std::unique_ptr&lt; IWorkload &gt; CreateBatchNormalization(const BatchNormalizationQueueDescriptor &amp;, const WorkloadInfo &amp;) const override</div><div class="ttdef"><b>Definition:</b> <a href="_workload_factory_base_8hpp_source.xhtml#l00054">WorkloadFactoryBase.hpp:54</a></div></div>
<div class="ttc" id="structarmnn_1_1_queue_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_queue_descriptor.xhtml">armnn::QueueDescriptor</a></div><div class="ttdef"><b>Definition:</b> <a href="_workload_data_8hpp_source.xhtml#l00024">WorkloadData.hpp:24</a></div></div>
<div class="ttc" id="namespacearmnn_xhtml_a5b6893cda5b69359a4244c06054da18f"><div class="ttname"><a href="namespacearmnn.xhtml#a5b6893cda5b69359a4244c06054da18f">armnn::ModelOptions</a></div><div class="ttdeci">std::vector&lt; BackendOptions &gt; ModelOptions</div><div class="ttdef"><b>Definition:</b> <a href="_backend_options_8hpp_source.xhtml#l00018">BackendOptions.hpp:18</a></div></div>
<div class="ttc" id="classarmnn_1_1_workload_factory_base_xhtml_a6d49c282026484eb1c6e56f56f35348e"><div class="ttname"><a href="classarmnn_1_1_workload_factory_base.xhtml#a6d49c282026484eb1c6e56f56f35348e">armnn::WorkloadFactoryBase::CreateSoftmax</a></div><div class="ttdeci">std::unique_ptr&lt; IWorkload &gt; CreateSoftmax(const SoftmaxQueueDescriptor &amp;, const WorkloadInfo &amp;) const override</div><div class="ttdef"><b>Definition:</b> <a href="_workload_factory_base_8hpp_source.xhtml#l00239">WorkloadFactoryBase.hpp:239</a></div></div>
<div class="ttc" id="classarmnn_1_1_workload_factory_base_xhtml_a1c9cd3cd798df38358e9047ac4621fe2"><div class="ttname"><a href="classarmnn_1_1_workload_factory_base.xhtml#a1c9cd3cd798df38358e9047ac4621fe2">armnn::WorkloadFactoryBase::CreateSpaceToBatchNd</a></div><div class="ttdeci">std::unique_ptr&lt; IWorkload &gt; CreateSpaceToBatchNd(const SpaceToBatchNdQueueDescriptor &amp;, const WorkloadInfo &amp;) const override</div><div class="ttdef"><b>Definition:</b> <a href="_workload_factory_base_8hpp_source.xhtml#l00243">WorkloadFactoryBase.hpp:243</a></div></div>
<div class="ttc" id="classarmnn_1_1_workload_factory_base_xhtml_abf1f324933ada657d13faf8d1d32a907"><div class="ttname"><a href="classarmnn_1_1_workload_factory_base.xhtml#abf1f324933ada657d13faf8d1d32a907">armnn::WorkloadFactoryBase::CreatePooling2d</a></div><div class="ttdeci">std::unique_ptr&lt; IWorkload &gt; CreatePooling2d(const Pooling2dQueueDescriptor &amp;, const WorkloadInfo &amp;) const override</div><div class="ttdef"><b>Definition:</b> <a href="_workload_factory_base_8hpp_source.xhtml#l00199">WorkloadFactoryBase.hpp:199</a></div></div>
<div class="ttc" id="classarmnn_1_1_workload_factory_base_xhtml_aabe4842ade5647ac5bbee5e446e49a5c"><div class="ttname"><a href="classarmnn_1_1_workload_factory_base.xhtml#aabe4842ade5647ac5bbee5e446e49a5c">armnn::WorkloadFactoryBase::CreateMean</a></div><div class="ttdeci">std::unique_ptr&lt; IWorkload &gt; CreateMean(const MeanQueueDescriptor &amp;, const WorkloadInfo &amp;) const override</div><div class="ttdef"><b>Definition:</b> <a href="_workload_factory_base_8hpp_source.xhtml#l00159">WorkloadFactoryBase.hpp:159</a></div></div>
<div class="ttc" id="classarmnn_1_1_workload_factory_base_xhtml_a06a69eab86af31e0daa17c99b9038bf1"><div class="ttname"><a href="classarmnn_1_1_workload_factory_base.xhtml#a06a69eab86af31e0daa17c99b9038bf1">armnn::WorkloadFactoryBase::CreatePad</a></div><div class="ttdeci">std::unique_ptr&lt; IWorkload &gt; CreatePad(const PadQueueDescriptor &amp;, const WorkloadInfo &amp;) const override</div><div class="ttdef"><b>Definition:</b> <a href="_workload_factory_base_8hpp_source.xhtml#l00191">WorkloadFactoryBase.hpp:191</a></div></div>
<div class="ttc" id="structarmnn_1_1_convolution3d_queue_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_convolution3d_queue_descriptor.xhtml">armnn::Convolution3dQueueDescriptor</a></div><div class="ttdef"><b>Definition:</b> <a href="_workload_data_8hpp_source.xhtml#l00211">WorkloadData.hpp:211</a></div></div>
<div class="ttc" id="classarmnn_1_1_workload_factory_base_xhtml_af6cc3669898b498592dc28600aa6f0cd"><div class="ttname"><a href="classarmnn_1_1_workload_factory_base.xhtml#af6cc3669898b498592dc28600aa6f0cd">armnn::WorkloadFactoryBase::CreateLstm</a></div><div class="ttdeci">std::unique_ptr&lt; IWorkload &gt; CreateLstm(const LstmQueueDescriptor &amp;, const WorkloadInfo &amp;) const override</div><div class="ttdef"><b>Definition:</b> <a href="_workload_factory_base_8hpp_source.xhtml#l00151">WorkloadFactoryBase.hpp:151</a></div></div>
<div class="ttc" id="structarmnn_1_1_stack_queue_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_stack_queue_descriptor.xhtml">armnn::StackQueueDescriptor</a></div><div class="ttdef"><b>Definition:</b> <a href="_workload_data_8hpp_source.xhtml#l00152">WorkloadData.hpp:152</a></div></div>
<div class="ttc" id="classarmnn_1_1_workload_factory_base_xhtml_a1b2165c83d6501e8ede91324c31a95f4"><div class="ttname"><a href="classarmnn_1_1_workload_factory_base.xhtml#a1b2165c83d6501e8ede91324c31a95f4">armnn::WorkloadFactoryBase::CreateDepthToSpace</a></div><div class="ttdeci">std::unique_ptr&lt; IWorkload &gt; CreateDepthToSpace(const DepthToSpaceQueueDescriptor &amp;, const WorkloadInfo &amp;) const override</div><div class="ttdef"><b>Definition:</b> <a href="_workload_factory_base_8hpp_source.xhtml#l00090">WorkloadFactoryBase.hpp:90</a></div></div>
<div class="ttc" id="classarmnn_1_1_workload_factory_base_xhtml_a04a3ae3944eb63e7e94c6e9676815864"><div class="ttname"><a href="classarmnn_1_1_workload_factory_base.xhtml#a04a3ae3944eb63e7e94c6e9676815864">armnn::WorkloadFactoryBase::CreateLogSoftmax</a></div><div class="ttdeci">std::unique_ptr&lt; IWorkload &gt; CreateLogSoftmax(const LogSoftmaxQueueDescriptor &amp;, const WorkloadInfo &amp;) const override</div><div class="ttdef"><b>Definition:</b> <a href="_workload_factory_base_8hpp_source.xhtml#l00147">WorkloadFactoryBase.hpp:147</a></div></div>
<div class="ttc" id="classarmnn_1_1_workload_factory_base_xhtml_a3d5de4e35ccddc5cfe79e530558d5184"><div class="ttname"><a href="classarmnn_1_1_workload_factory_base.xhtml#a3d5de4e35ccddc5cfe79e530558d5184">armnn::WorkloadFactoryBase::CreateComparison</a></div><div class="ttdeci">std::unique_ptr&lt; IWorkload &gt; CreateComparison(const ComparisonQueueDescriptor &amp;, const WorkloadInfo &amp;) const override</div><div class="ttdef"><b>Definition:</b> <a href="_workload_factory_base_8hpp_source.xhtml#l00062">WorkloadFactoryBase.hpp:62</a></div></div>
<div class="ttc" id="structarmnn_1_1_addition_queue_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_addition_queue_descriptor.xhtml">armnn::AdditionQueueDescriptor</a></div><div class="ttdef"><b>Definition:</b> <a href="_workload_data_8hpp_source.xhtml#l00253">WorkloadData.hpp:253</a></div></div>
<div class="ttc" id="structarmnn_1_1_minimum_queue_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_minimum_queue_descriptor.xhtml">armnn::MinimumQueueDescriptor</a></div><div class="ttdef"><b>Definition:</b> <a href="_workload_data_8hpp_source.xhtml#l00468">WorkloadData.hpp:468</a></div></div>
<div class="ttc" id="_base_memory_manager_8hpp_xhtml"><div class="ttname"><a href="_base_memory_manager_8hpp.xhtml">BaseMemoryManager.hpp</a></div></div>
<div class="ttc" id="classarmnn_1_1_workload_factory_base_xhtml_a07446244299bc12305593358695ea1b4"><div class="ttname"><a href="classarmnn_1_1_workload_factory_base.xhtml#a07446244299bc12305593358695ea1b4">armnn::WorkloadFactoryBase::CreateTranspose</a></div><div class="ttdeci">std::unique_ptr&lt; IWorkload &gt; CreateTranspose(const TransposeQueueDescriptor &amp;, const WorkloadInfo &amp;) const override</div><div class="ttdef"><b>Definition:</b> <a href="_workload_factory_base_8hpp_source.xhtml#l00271">WorkloadFactoryBase.hpp:271</a></div></div>
<div class="ttc" id="classarmnn_1_1_neon_workload_factory_xhtml"><div class="ttname"><a href="classarmnn_1_1_neon_workload_factory.xhtml">armnn::NeonWorkloadFactory</a></div><div class="ttdef"><b>Definition:</b> <a href="_neon_workload_factory_8hpp_source.xhtml#l00020">NeonWorkloadFactory.hpp:20</a></div></div>
<div class="ttc" id="namespacearmnn_xhtml"><div class="ttname"><a href="namespacearmnn.xhtml">armnn</a></div><div class="ttdoc">Copyright (c) 2021 ARM Limited and Contributors. </div><div class="ttdef"><b>Definition:</b> <a href="01__00__quick__start_8dox_source.xhtml#l00006">01_00_quick_start.dox:6</a></div></div>
<div class="ttc" id="structarmnn_1_1_fully_connected_queue_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_fully_connected_queue_descriptor.xhtml">armnn::FullyConnectedQueueDescriptor</a></div><div class="ttdef"><b>Definition:</b> <a href="_workload_data_8hpp_source.xhtml#l00180">WorkloadData.hpp:180</a></div></div>
<div class="ttc" id="classarmnn_1_1_neon_workload_factory_xhtml_abefb9df9d7a54cf2f82047ea350d0388"><div class="ttname"><a href="classarmnn_1_1_neon_workload_factory.xhtml#abefb9df9d7a54cf2f82047ea350d0388">armnn::NeonWorkloadFactory::CreateSubTensorHandle</a></div><div class="ttdeci">std::unique_ptr&lt; ITensorHandle &gt; CreateSubTensorHandle(ITensorHandle &amp;parent, TensorShape const &amp;subTensorShape, unsigned int const *subTensorOrigin) const override</div><div class="ttdef"><b>Definition:</b> <a href="_neon_workload_factory_8cpp_source.xhtml#l00086">NeonWorkloadFactory.cpp:86</a></div></div>
<div class="ttc" id="structarmnn_1_1_prelu_queue_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_prelu_queue_descriptor.xhtml">armnn::PreluQueueDescriptor</a></div><div class="ttdef"><b>Definition:</b> <a href="_workload_data_8hpp_source.xhtml#l00534">WorkloadData.hpp:534</a></div></div>
<div class="ttc" id="classarmnn_1_1_tensor_shape_xhtml"><div class="ttname"><a href="classarmnn_1_1_tensor_shape.xhtml">armnn::TensorShape</a></div><div class="ttdef"><b>Definition:</b> <a href="_tensor_8hpp_source.xhtml#l00020">Tensor.hpp:20</a></div></div>
<div class="ttc" id="structarmnn_1_1_batch_to_space_nd_queue_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_batch_to_space_nd_queue_descriptor.xhtml">armnn::BatchToSpaceNdQueueDescriptor</a></div><div class="ttdef"><b>Definition:</b> <a href="_workload_data_8hpp_source.xhtml#l00457">WorkloadData.hpp:457</a></div></div>
<div class="ttc" id="structarmnn_1_1_softmax_queue_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_softmax_queue_descriptor.xhtml">armnn::SoftmaxQueueDescriptor</a></div><div class="ttdef"><b>Definition:</b> <a href="_workload_data_8hpp_source.xhtml#l00105">WorkloadData.hpp:105</a></div></div>
<div class="ttc" id="structarmnn_1_1_division_queue_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_division_queue_descriptor.xhtml">armnn::DivisionQueueDescriptor</a></div><div class="ttdef"><b>Definition:</b> <a href="_workload_data_8hpp_source.xhtml#l00265">WorkloadData.hpp:265</a></div></div>
<div class="ttc" id="classarmnn_1_1_workload_factory_base_xhtml_a1f17745331f928011cc1ea162866b8e7"><div class="ttname"><a href="classarmnn_1_1_workload_factory_base.xhtml#a1f17745331f928011cc1ea162866b8e7">armnn::WorkloadFactoryBase::CreateDequantize</a></div><div class="ttdeci">std::unique_ptr&lt; IWorkload &gt; CreateDequantize(const DequantizeQueueDescriptor &amp;, const WorkloadInfo &amp;) const override</div><div class="ttdef"><b>Definition:</b> <a href="_workload_factory_base_8hpp_source.xhtml#l00098">WorkloadFactoryBase.hpp:98</a></div></div>
<div class="ttc" id="classarmnn_1_1_workload_factory_base_xhtml_a49428ff12e031e5af8bcc66161fa09fd"><div class="ttname"><a href="classarmnn_1_1_workload_factory_base.xhtml#a49428ff12e031e5af8bcc66161fa09fd">armnn::WorkloadFactoryBase::CreateSplitter</a></div><div class="ttdeci">std::unique_ptr&lt; IWorkload &gt; CreateSplitter(const SplitterQueueDescriptor &amp;, const WorkloadInfo &amp;) const override</div><div class="ttdef"><b>Definition:</b> <a href="_workload_factory_base_8hpp_source.xhtml#l00255">WorkloadFactoryBase.hpp:255</a></div></div>
<div class="ttc" id="structarmnn_1_1_subtraction_queue_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_subtraction_queue_descriptor.xhtml">armnn::SubtractionQueueDescriptor</a></div><div class="ttdef"><b>Definition:</b> <a href="_workload_data_8hpp_source.xhtml#l00271">WorkloadData.hpp:271</a></div></div>
<div class="ttc" id="classarmnn_1_1_workload_factory_base_xhtml_a17042914356fe13b708c3702cb82ab7f"><div class="ttname"><a href="classarmnn_1_1_workload_factory_base.xhtml#a17042914356fe13b708c3702cb82ab7f">armnn::WorkloadFactoryBase::CreateConvertFp32ToFp16</a></div><div class="ttdeci">std::unique_ptr&lt; IWorkload &gt; CreateConvertFp32ToFp16(const ConvertFp32ToFp16QueueDescriptor &amp;, const WorkloadInfo &amp;) const override</div><div class="ttdef"><b>Definition:</b> <a href="_workload_factory_base_8hpp_source.xhtml#l00078">WorkloadFactoryBase.hpp:78</a></div></div>
<div class="ttc" id="classarmnn_1_1_workload_factory_base_xhtml_a6df587611b4c46b591527f3d594f4a11"><div class="ttname"><a href="classarmnn_1_1_workload_factory_base.xhtml#a6df587611b4c46b591527f3d594f4a11">armnn::WorkloadFactoryBase::CreateNormalization</a></div><div class="ttdeci">std::unique_ptr&lt; IWorkload &gt; CreateNormalization(const NormalizationQueueDescriptor &amp;, const WorkloadInfo &amp;) const override</div><div class="ttdef"><b>Definition:</b> <a href="_workload_factory_base_8hpp_source.xhtml#l00183">WorkloadFactoryBase.hpp:183</a></div></div>
<div class="ttc" id="structarmnn_1_1_pad_queue_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_pad_queue_descriptor.xhtml">armnn::PadQueueDescriptor</a></div><div class="ttdef"><b>Definition:</b> <a href="_workload_data_8hpp_source.xhtml#l00289">WorkloadData.hpp:289</a></div></div>
<div class="ttc" id="structarmnn_1_1_concat_queue_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_concat_queue_descriptor.xhtml">armnn::ConcatQueueDescriptor</a></div><div class="ttdef"><b>Definition:</b> <a href="_workload_data_8hpp_source.xhtml#l00130">WorkloadData.hpp:130</a></div></div>
<div class="ttc" id="classarmnn_1_1_workload_factory_base_xhtml_a2314defaf9c8b1ffcf59e7e509a959d6"><div class="ttname"><a href="classarmnn_1_1_workload_factory_base.xhtml#a2314defaf9c8b1ffcf59e7e509a959d6">armnn::WorkloadFactoryBase::CreateDepthwiseConvolution2d</a></div><div class="ttdeci">std::unique_ptr&lt; IWorkload &gt; CreateDepthwiseConvolution2d(const DepthwiseConvolution2dQueueDescriptor &amp;, const WorkloadInfo &amp;) const override</div><div class="ttdef"><b>Definition:</b> <a href="_workload_factory_base_8hpp_source.xhtml#l00094">WorkloadFactoryBase.hpp:94</a></div></div>
<div class="ttc" id="classarmnn_1_1_workload_factory_base_xhtml_a77110c4dd8fe747ba0d441265f781076"><div class="ttname"><a href="classarmnn_1_1_workload_factory_base.xhtml#a77110c4dd8fe747ba0d441265f781076">armnn::WorkloadFactoryBase::CreateInstanceNormalization</a></div><div class="ttdeci">std::unique_ptr&lt; IWorkload &gt; CreateInstanceNormalization(const InstanceNormalizationQueueDescriptor &amp;, const WorkloadInfo &amp;) const override</div><div class="ttdef"><b>Definition:</b> <a href="_workload_factory_base_8hpp_source.xhtml#l00139">WorkloadFactoryBase.hpp:139</a></div></div>
<div class="ttc" id="namespacearmnn_xhtml_a93a3ba385cad27c4774e5fe64c025d3da4059b0251f66a18cb56f544728796875"><div class="ttname"><a href="namespacearmnn.xhtml#a93a3ba385cad27c4774e5fe64c025d3da4059b0251f66a18cb56f544728796875">armnn::LogSeverity::Info</a></div></div>
<div class="ttc" id="classarmnn_1_1_workload_factory_base_xhtml_acb80cd4ff2c145b80554376643fc54db"><div class="ttname"><a href="classarmnn_1_1_workload_factory_base.xhtml#acb80cd4ff2c145b80554376643fc54db">armnn::WorkloadFactoryBase::CreateTransposeConvolution2d</a></div><div class="ttdeci">std::unique_ptr&lt; IWorkload &gt; CreateTransposeConvolution2d(const TransposeConvolution2dQueueDescriptor &amp;, const WorkloadInfo &amp;) const override</div><div class="ttdef"><b>Definition:</b> <a href="_workload_factory_base_8hpp_source.xhtml#l00275">WorkloadFactoryBase.hpp:275</a></div></div>
<div class="ttc" id="structarmnn_1_1_space_to_depth_queue_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_space_to_depth_queue_descriptor.xhtml">armnn::SpaceToDepthQueueDescriptor</a></div><div class="ttdef"><b>Definition:</b> <a href="_workload_data_8hpp_source.xhtml#l00385">WorkloadData.hpp:385</a></div></div>
<div class="ttc" id="classarmnn_1_1_neon_workload_factory_xhtml_a19a681524fa55169540fcccb9dcefaa6"><div class="ttname"><a href="classarmnn_1_1_neon_workload_factory.xhtml#a19a681524fa55169540fcccb9dcefaa6">armnn::NeonWorkloadFactory::NeonWorkloadFactory</a></div><div class="ttdeci">NeonWorkloadFactory(const std::shared_ptr&lt; NeonMemoryManager &gt; &amp;memoryManager)</div><div class="ttdef"><b>Definition:</b> <a href="_neon_workload_factory_8cpp_source.xhtml#l00073">NeonWorkloadFactory.cpp:73</a></div></div>
<div class="ttc" id="structarmnn_1_1_resize_queue_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_resize_queue_descriptor.xhtml">armnn::ResizeQueueDescriptor</a></div><div class="ttdef"><b>Definition:</b> <a href="_workload_data_8hpp_source.xhtml#l00329">WorkloadData.hpp:329</a></div></div>
<div class="ttc" id="classarmnn_1_1_neon_workload_factory_xhtml_a9992ea7c353e8597fbd8ae426f4612ae"><div class="ttname"><a href="classarmnn_1_1_neon_workload_factory.xhtml#a9992ea7c353e8597fbd8ae426f4612ae">armnn::NeonWorkloadFactory::IsLayerSupported</a></div><div class="ttdeci">static bool IsLayerSupported(const Layer &amp;layer, Optional&lt; DataType &gt; dataType, std::string &amp;outReasonIfUnsupported)</div><div class="ttdef"><b>Definition:</b> <a href="_neon_workload_factory_8cpp_source.xhtml#l00034">NeonWorkloadFactory.cpp:34</a></div></div>
<div class="ttc" id="structarmnn_1_1_space_to_batch_nd_queue_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_space_to_batch_nd_queue_descriptor.xhtml">armnn::SpaceToBatchNdQueueDescriptor</a></div><div class="ttdef"><b>Definition:</b> <a href="_workload_data_8hpp_source.xhtml#l00380">WorkloadData.hpp:380</a></div></div>
<div class="ttc" id="structarmnn_1_1_floor_queue_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_floor_queue_descriptor.xhtml">armnn::FloorQueueDescriptor</a></div><div class="ttdef"><b>Definition:</b> <a href="_workload_data_8hpp_source.xhtml#l00390">WorkloadData.hpp:390</a></div></div>
<div class="ttc" id="classarmnn_1_1_workload_factory_base_xhtml_a4069efcce4abfd80a88827ea1509b2f8"><div class="ttname"><a href="classarmnn_1_1_workload_factory_base.xhtml#a4069efcce4abfd80a88827ea1509b2f8">armnn::WorkloadFactoryBase::CreateSpaceToDepth</a></div><div class="ttdeci">std::unique_ptr&lt; IWorkload &gt; CreateSpaceToDepth(const SpaceToDepthQueueDescriptor &amp;, const WorkloadInfo &amp;) const override</div><div class="ttdef"><b>Definition:</b> <a href="_workload_factory_base_8hpp_source.xhtml#l00247">WorkloadFactoryBase.hpp:247</a></div></div>
<div class="ttc" id="classarmnn_1_1_workload_factory_base_xhtml_a713c3685138355b145f4d17e473bf543"><div class="ttname"><a href="classarmnn_1_1_workload_factory_base.xhtml#a713c3685138355b145f4d17e473bf543">armnn::WorkloadFactoryBase::CreateConcat</a></div><div class="ttdeci">std::unique_ptr&lt; IWorkload &gt; CreateConcat(const ConcatQueueDescriptor &amp;, const WorkloadInfo &amp;) const override</div><div class="ttdef"><b>Definition:</b> <a href="_workload_factory_base_8hpp_source.xhtml#l00066">WorkloadFactoryBase.hpp:66</a></div></div>
<div class="ttc" id="classarmnn_1_1_workload_factory_base_xhtml_a8040319bef721ad05a9fdf75060aaafe"><div class="ttname"><a href="classarmnn_1_1_workload_factory_base.xhtml#a8040319bef721ad05a9fdf75060aaafe">armnn::WorkloadFactoryBase::CreatePrelu</a></div><div class="ttdeci">std::unique_ptr&lt; IWorkload &gt; CreatePrelu(const PreluQueueDescriptor &amp;, const WorkloadInfo &amp;) const override</div><div class="ttdef"><b>Definition:</b> <a href="_workload_factory_base_8hpp_source.xhtml#l00211">WorkloadFactoryBase.hpp:211</a></div></div>
<div class="ttc" id="classarmnn_1_1_workload_factory_base_xhtml_a52094433136e6cae57398d861cd483f9"><div class="ttname"><a href="classarmnn_1_1_workload_factory_base.xhtml#a52094433136e6cae57398d861cd483f9">armnn::WorkloadFactoryBase::CreateBatchToSpaceNd</a></div><div class="ttdeci">std::unique_ptr&lt; IWorkload &gt; CreateBatchToSpaceNd(const BatchToSpaceNdQueueDescriptor &amp;, const WorkloadInfo &amp;) const override</div><div class="ttdef"><b>Definition:</b> <a href="_workload_factory_base_8hpp_source.xhtml#l00058">WorkloadFactoryBase.hpp:58</a></div></div>
<div class="ttc" id="classarmnn_1_1_workload_factory_base_xhtml_a4269d65bcf8068290752d75164934a25"><div class="ttname"><a href="classarmnn_1_1_workload_factory_base.xhtml#a4269d65bcf8068290752d75164934a25">armnn::WorkloadFactoryBase::CreateArgMinMax</a></div><div class="ttdeci">std::unique_ptr&lt; IWorkload &gt; CreateArgMinMax(const ArgMinMaxQueueDescriptor &amp;, const WorkloadInfo &amp;) const override</div><div class="ttdef"><b>Definition:</b> <a href="_workload_factory_base_8hpp_source.xhtml#l00050">WorkloadFactoryBase.hpp:50</a></div></div>
<div class="ttc" id="classarmnn_1_1_workload_factory_base_xhtml_a32983845590ec2dc9e644491793fd557"><div class="ttname"><a href="classarmnn_1_1_workload_factory_base.xhtml#a32983845590ec2dc9e644491793fd557">armnn::WorkloadFactoryBase::CreatePermute</a></div><div class="ttdeci">std::unique_ptr&lt; IWorkload &gt; CreatePermute(const PermuteQueueDescriptor &amp;, const WorkloadInfo &amp;) const override</div><div class="ttdef"><b>Definition:</b> <a href="_workload_factory_base_8hpp_source.xhtml#l00195">WorkloadFactoryBase.hpp:195</a></div></div>
<div class="ttc" id="_optional_8hpp_xhtml"><div class="ttname"><a href="_optional_8hpp.xhtml">Optional.hpp</a></div></div>
<div class="ttc" id="structarmnn_1_1_lstm_queue_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_lstm_queue_descriptor.xhtml">armnn::LstmQueueDescriptor</a></div><div class="ttdef"><b>Definition:</b> <a href="_workload_data_8hpp_source.xhtml#l00395">WorkloadData.hpp:395</a></div></div>
<div class="ttc" id="classarmnn_1_1_i_backend_internal_xhtml_a4d0238968a7643dbb170547dd22bba54"><div class="ttname"><a href="classarmnn_1_1_i_backend_internal.xhtml#a4d0238968a7643dbb170547dd22bba54">armnn::IBackendInternal::IBackendSpecificModelContextPtr</a></div><div class="ttdeci">std::shared_ptr&lt; IBackendModelContext &gt; IBackendSpecificModelContextPtr</div><div class="ttdef"><b>Definition:</b> <a href="_i_backend_internal_8hpp_source.xhtml#l00096">IBackendInternal.hpp:96</a></div></div>
<div class="ttc" id="classarmnn_1_1_workload_factory_base_xhtml_ad99e6a9f4e78ba4690429850de69fadd"><div class="ttname"><a href="classarmnn_1_1_workload_factory_base.xhtml#ad99e6a9f4e78ba4690429850de69fadd">armnn::WorkloadFactoryBase::CreateDebug</a></div><div class="ttdeci">std::unique_ptr&lt; IWorkload &gt; CreateDebug(const DebugQueueDescriptor &amp;, const WorkloadInfo &amp;) const override</div><div class="ttdef"><b>Definition:</b> <a href="_workload_factory_base_8hpp_source.xhtml#l00086">WorkloadFactoryBase.hpp:86</a></div></div>
<div class="ttc" id="classarmnn_1_1_i_tensor_handle_xhtml"><div class="ttname"><a href="classarmnn_1_1_i_tensor_handle.xhtml">armnn::ITensorHandle</a></div><div class="ttdef"><b>Definition:</b> <a href="include_2armnn_2backends_2_i_tensor_handle_8hpp_source.xhtml#l00015">ITensorHandle.hpp:15</a></div></div>
<div class="ttc" id="classarmnn_1_1_neon_workload_factory_xhtml_aed0a782f32856bde72bc10d9381dc11e"><div class="ttname"><a href="classarmnn_1_1_neon_workload_factory.xhtml#aed0a782f32856bde72bc10d9381dc11e">armnn::NeonWorkloadFactory::SupportsSubTensors</a></div><div class="ttdeci">bool SupportsSubTensors() const override</div><div class="ttdef"><b>Definition:</b> <a href="_neon_workload_factory_8hpp_source.xhtml#l00039">NeonWorkloadFactory.hpp:39</a></div></div>
<div class="ttc" id="classarmnn_1_1_workload_factory_base_xhtml_a0da6f270ae7ce126b29a8918d858e814"><div class="ttname"><a href="classarmnn_1_1_workload_factory_base.xhtml#a0da6f270ae7ce126b29a8918d858e814">armnn::WorkloadFactoryBase::CreateConstant</a></div><div class="ttdeci">std::unique_ptr&lt; IWorkload &gt; CreateConstant(const ConstantQueueDescriptor &amp;, const WorkloadInfo &amp;) const override</div><div class="ttdef"><b>Definition:</b> <a href="_workload_factory_base_8hpp_source.xhtml#l00070">WorkloadFactoryBase.hpp:70</a></div></div>
<div class="ttc" id="classarmnn_1_1_workload_factory_base_xhtml_a4a781a9541d2c44c5fec0ffc8434447c"><div class="ttname"><a href="classarmnn_1_1_workload_factory_base.xhtml#a4a781a9541d2c44c5fec0ffc8434447c">armnn::WorkloadFactoryBase::CreateConvolution2d</a></div><div class="ttdeci">std::unique_ptr&lt; IWorkload &gt; CreateConvolution2d(const Convolution2dQueueDescriptor &amp;, const WorkloadInfo &amp;) const override</div><div class="ttdef"><b>Definition:</b> <a href="_workload_factory_base_8hpp_source.xhtml#l00082">WorkloadFactoryBase.hpp:82</a></div></div>
<div class="ttc" id="structarmnn_1_1_comparison_queue_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_comparison_queue_descriptor.xhtml">armnn::ComparisonQueueDescriptor</a></div><div class="ttdef"><b>Definition:</b> <a href="_workload_data_8hpp_source.xhtml#l00661">WorkloadData.hpp:661</a></div></div>
<div class="ttc" id="classarmnn_1_1_workload_factory_base_xhtml_af5ace6034148c3fe048db884058f04cf"><div class="ttname"><a href="classarmnn_1_1_workload_factory_base.xhtml#af5ace6034148c3fe048db884058f04cf">armnn::WorkloadFactoryBase::CreateFullyConnected</a></div><div class="ttdeci">std::unique_ptr&lt; IWorkload &gt; CreateFullyConnected(const FullyConnectedQueueDescriptor &amp;, const WorkloadInfo &amp;) const override</div><div class="ttdef"><b>Definition:</b> <a href="_workload_factory_base_8hpp_source.xhtml#l00131">WorkloadFactoryBase.hpp:131</a></div></div>
<div class="ttc" id="classarmnn_1_1_neon_workload_factory_xhtml_ae2cd7e29596b68884bfaade25f8f0dc0"><div class="ttname"><a href="classarmnn_1_1_neon_workload_factory.xhtml#ae2cd7e29596b68884bfaade25f8f0dc0">armnn::NeonWorkloadFactory::GetBackendId</a></div><div class="ttdeci">const BackendId &amp; GetBackendId() const override</div><div class="ttdef"><b>Definition:</b> <a href="_neon_workload_factory_8cpp_source.xhtml#l00049">NeonWorkloadFactory.cpp:49</a></div></div>
<div class="ttc" id="classarmnn_1_1_workload_factory_base_xhtml_a1ba2b05e3c2028d4bc3db29fc0edf122"><div class="ttname"><a href="classarmnn_1_1_workload_factory_base.xhtml#a1ba2b05e3c2028d4bc3db29fc0edf122">armnn::WorkloadFactoryBase::CreateMinimum</a></div><div class="ttdeci">std::unique_ptr&lt; IWorkload &gt; CreateMinimum(const MinimumQueueDescriptor &amp;, const WorkloadInfo &amp;) const override</div><div class="ttdef"><b>Definition:</b> <a href="_workload_factory_base_8hpp_source.xhtml#l00175">WorkloadFactoryBase.hpp:175</a></div></div>
<div class="ttc" id="structarmnn_1_1_convert_fp16_to_fp32_queue_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_convert_fp16_to_fp32_queue_descriptor.xhtml">armnn::ConvertFp16ToFp32QueueDescriptor</a></div><div class="ttdef"><b>Definition:</b> <a href="_workload_data_8hpp_source.xhtml#l00447">WorkloadData.hpp:447</a></div></div>
<div class="ttc" id="classarmnn_1_1_workload_factory_base_xhtml_a655697a3bf827352acadc5f1dd3a8a34"><div class="ttname"><a href="classarmnn_1_1_workload_factory_base.xhtml#a655697a3bf827352acadc5f1dd3a8a34">armnn::WorkloadFactoryBase::CreateReshape</a></div><div class="ttdeci">std::unique_ptr&lt; IWorkload &gt; CreateReshape(const ReshapeQueueDescriptor &amp;, const WorkloadInfo &amp;) const override</div><div class="ttdef"><b>Definition:</b> <a href="_workload_factory_base_8hpp_source.xhtml#l00227">WorkloadFactoryBase.hpp:227</a></div></div>
<div class="ttc" id="structarmnn_1_1_reduce_queue_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_reduce_queue_descriptor.xhtml">armnn::ReduceQueueDescriptor</a></div><div class="ttdef"><b>Definition:</b> <a href="_workload_data_8hpp_source.xhtml#l00676">WorkloadData.hpp:676</a></div></div>
<div class="ttc" id="classarmnn_1_1_workload_factory_base_xhtml_a4101fcf76e3bbc979b2276631617aabe"><div class="ttname"><a href="classarmnn_1_1_workload_factory_base.xhtml#a4101fcf76e3bbc979b2276631617aabe">armnn::WorkloadFactoryBase::CreateFloor</a></div><div class="ttdeci">std::unique_ptr&lt; IWorkload &gt; CreateFloor(const FloorQueueDescriptor &amp;, const WorkloadInfo &amp;) const override</div><div class="ttdef"><b>Definition:</b> <a href="_workload_factory_base_8hpp_source.xhtml#l00127">WorkloadFactoryBase.hpp:127</a></div></div>
<div class="ttc" id="classarmnn_1_1_workload_factory_base_xhtml_af8ce0da98340225c76ec512e5483dd89"><div class="ttname"><a href="classarmnn_1_1_workload_factory_base.xhtml#af8ce0da98340225c76ec512e5483dd89">armnn::WorkloadFactoryBase::CreateRank</a></div><div class="ttdeci">std::unique_ptr&lt; IWorkload &gt; CreateRank(const RankQueueDescriptor &amp;, const WorkloadInfo &amp;) const override</div><div class="ttdef"><b>Definition:</b> <a href="_workload_factory_base_8hpp_source.xhtml#l00223">WorkloadFactoryBase.hpp:223</a></div></div>
<div class="ttc" id="structarmnn_1_1_rank_queue_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_rank_queue_descriptor.xhtml">armnn::RankQueueDescriptor</a></div><div class="ttdef"><b>Definition:</b> <a href="_workload_data_8hpp_source.xhtml#l00324">WorkloadData.hpp:324</a></div></div>
<div class="ttc" id="structarmnn_1_1_logical_binary_queue_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_logical_binary_queue_descriptor.xhtml">armnn::LogicalBinaryQueueDescriptor</a></div><div class="ttdef"><b>Definition:</b> <a href="_workload_data_8hpp_source.xhtml#l00671">WorkloadData.hpp:671</a></div></div>
<div class="ttc" id="structarmnn_1_1_convert_fp32_to_fp16_queue_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_convert_fp32_to_fp16_queue_descriptor.xhtml">armnn::ConvertFp32ToFp16QueueDescriptor</a></div><div class="ttdef"><b>Definition:</b> <a href="_workload_data_8hpp_source.xhtml#l00452">WorkloadData.hpp:452</a></div></div>
<div class="ttc" id="classarmnn_1_1_workload_factory_base_xhtml_ac8ff2a4e63a9954fd6b3e9fc6dfa9bf0"><div class="ttname"><a href="classarmnn_1_1_workload_factory_base.xhtml#ac8ff2a4e63a9954fd6b3e9fc6dfa9bf0">armnn::WorkloadFactoryBase::CreateDetectionPostProcess</a></div><div class="ttdeci">std::unique_ptr&lt; IWorkload &gt; CreateDetectionPostProcess(const DetectionPostProcessQueueDescriptor &amp;, const WorkloadInfo &amp;) const override</div><div class="ttdef"><b>Definition:</b> <a href="_workload_factory_base_8hpp_source.xhtml#l00102">WorkloadFactoryBase.hpp:102</a></div></div>
<div class="ttc" id="classarmnn_1_1_workload_factory_base_xhtml_ae51a441630e32e5a850d3d639f0e7847"><div class="ttname"><a href="classarmnn_1_1_workload_factory_base.xhtml#ae51a441630e32e5a850d3d639f0e7847">armnn::WorkloadFactoryBase::CreateQuantize</a></div><div class="ttdeci">std::unique_ptr&lt; IWorkload &gt; CreateQuantize(const QuantizeQueueDescriptor &amp;, const WorkloadInfo &amp;) const override</div><div class="ttdef"><b>Definition:</b> <a href="_workload_factory_base_8hpp_source.xhtml#l00215">WorkloadFactoryBase.hpp:215</a></div></div>
<div class="ttc" id="classarmnn_1_1_workload_factory_base_xhtml_ac1f4d42be05893f74b1237c3356c3c0c"><div class="ttname"><a href="classarmnn_1_1_workload_factory_base.xhtml#ac1f4d42be05893f74b1237c3356c3c0c">armnn::WorkloadFactoryBase::CreateAddition</a></div><div class="ttdeci">std::unique_ptr&lt; IWorkload &gt; CreateAddition(const AdditionQueueDescriptor &amp;, const WorkloadInfo &amp;) const override</div><div class="ttdef"><b>Definition:</b> <a href="_workload_factory_base_8hpp_source.xhtml#l00046">WorkloadFactoryBase.hpp:46</a></div></div>
<div class="ttc" id="structarmnn_1_1_transpose_convolution2d_queue_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_transpose_convolution2d_queue_descriptor.xhtml">armnn::TransposeConvolution2dQueueDescriptor</a></div><div class="ttdef"><b>Definition:</b> <a href="_workload_data_8hpp_source.xhtml#l00539">WorkloadData.hpp:539</a></div></div>
<div class="ttc" id="structarmnn_1_1_convolution2d_queue_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_convolution2d_queue_descriptor.xhtml">armnn::Convolution2dQueueDescriptor</a></div><div class="ttdef"><b>Definition:</b> <a href="_workload_data_8hpp_source.xhtml#l00205">WorkloadData.hpp:205</a></div></div>
<div class="ttc" id="structarmnn_1_1_mem_copy_queue_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_mem_copy_queue_descriptor.xhtml">armnn::MemCopyQueueDescriptor</a></div><div class="ttdef"><b>Definition:</b> <a href="_workload_data_8hpp_source.xhtml#l00086">WorkloadData.hpp:86</a></div></div>
<div class="ttc" id="structarmnn_1_1_fill_queue_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_fill_queue_descriptor.xhtml">armnn::FillQueueDescriptor</a></div><div class="ttdef"><b>Definition:</b> <a href="_workload_data_8hpp_source.xhtml#l00174">WorkloadData.hpp:174</a></div></div>
<div class="ttc" id="_deprecated_8hpp_xhtml_af16119336bd0dfbfbc83fc283151067e"><div class="ttname"><a href="_deprecated_8hpp.xhtml#af16119336bd0dfbfbc83fc283151067e">ARMNN_DEPRECATED_MSG_REMOVAL_DATE</a></div><div class="ttdeci">#define ARMNN_DEPRECATED_MSG_REMOVAL_DATE(message, removed_in_release)</div><div class="ttdef"><b>Definition:</b> <a href="_deprecated_8hpp_source.xhtml#l00044">Deprecated.hpp:44</a></div></div>
<div class="ttc" id="classarmnn_1_1_workload_factory_base_xhtml_ada3f450379ba7b4989344de72a16f1d2"><div class="ttname"><a href="classarmnn_1_1_workload_factory_base.xhtml#ada3f450379ba7b4989344de72a16f1d2">armnn::WorkloadFactoryBase::CreateGather</a></div><div class="ttdeci">std::unique_ptr&lt; IWorkload &gt; CreateGather(const GatherQueueDescriptor &amp;, const WorkloadInfo &amp;) const override</div><div class="ttdef"><b>Definition:</b> <a href="_workload_factory_base_8hpp_source.xhtml#l00135">WorkloadFactoryBase.hpp:135</a></div></div>
<div class="ttc" id="structarmnn_1_1_slice_queue_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_slice_queue_descriptor.xhtml">armnn::SliceQueueDescriptor</a></div><div class="ttdef"><b>Definition:</b> <a href="_workload_data_8hpp_source.xhtml#l00651">WorkloadData.hpp:651</a></div></div>
<div class="ttc" id="structarmnn_1_1_depth_to_space_queue_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_depth_to_space_queue_descriptor.xhtml">armnn::DepthToSpaceQueueDescriptor</a></div><div class="ttdef"><b>Definition:</b> <a href="_workload_data_8hpp_source.xhtml#l00656">WorkloadData.hpp:656</a></div></div>
<div class="ttc" id="structarmnn_1_1_l2_normalization_queue_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_l2_normalization_queue_descriptor.xhtml">armnn::L2NormalizationQueueDescriptor</a></div><div class="ttdef"><b>Definition:</b> <a href="_workload_data_8hpp_source.xhtml#l00353">WorkloadData.hpp:353</a></div></div>
<div class="ttc" id="_workload_factory_base_8hpp_xhtml"><div class="ttname"><a href="_workload_factory_base_8hpp.xhtml">WorkloadFactoryBase.hpp</a></div></div>
<div class="ttc" id="structarmnn_1_1_transpose_queue_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_transpose_queue_descriptor.xhtml">armnn::TransposeQueueDescriptor</a></div><div class="ttdef"><b>Definition:</b> <a href="_workload_data_8hpp_source.xhtml#l00552">WorkloadData.hpp:552</a></div></div>
<div class="ttc" id="structarmnn_1_1_strided_slice_queue_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_strided_slice_queue_descriptor.xhtml">armnn::StridedSliceQueueDescriptor</a></div><div class="ttdef"><b>Definition:</b> <a href="_workload_data_8hpp_source.xhtml#l00462">WorkloadData.hpp:462</a></div></div>
<div class="ttc" id="structarmnn_1_1_q_lstm_queue_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_q_lstm_queue_descriptor.xhtml">armnn::QLstmQueueDescriptor</a></div><div class="ttdef"><b>Definition:</b> <a href="_workload_data_8hpp_source.xhtml#l00557">WorkloadData.hpp:557</a></div></div>
<div class="ttc" id="classarmnn_1_1_workload_factory_base_xhtml_a1c7e383368cb078a1faac0a4e4f763a1"><div class="ttname"><a href="classarmnn_1_1_workload_factory_base.xhtml#a1c7e383368cb078a1faac0a4e4f763a1">armnn::WorkloadFactoryBase::CreateDivision</a></div><div class="ttdeci">std::unique_ptr&lt; IWorkload &gt; CreateDivision(const DivisionQueueDescriptor &amp;, const WorkloadInfo &amp;) const override</div><div class="ttdef"><b>Definition:</b> <a href="_workload_factory_base_8hpp_source.xhtml#l00106">WorkloadFactoryBase.hpp:106</a></div></div>
<div class="ttc" id="classarmnn_1_1_workload_factory_base_xhtml_a21a5aef5f1850d8b5f797d97632409b8"><div class="ttname"><a href="classarmnn_1_1_workload_factory_base.xhtml#a21a5aef5f1850d8b5f797d97632409b8">armnn::WorkloadFactoryBase::CreatePreCompiled</a></div><div class="ttdeci">std::unique_ptr&lt; IWorkload &gt; CreatePreCompiled(const PreCompiledQueueDescriptor &amp;, const WorkloadInfo &amp;) const override</div><div class="ttdef"><b>Definition:</b> <a href="_workload_factory_base_8hpp_source.xhtml#l00207">WorkloadFactoryBase.hpp:207</a></div></div>
<div class="ttc" id="namespacearmnn_xhtml_a4dc0adc6737b5944e7671bee71788407acaf9b6b99962bf5c2264824231d7a40c"><div class="ttname"><a href="namespacearmnn.xhtml#a4dc0adc6737b5944e7671bee71788407acaf9b6b99962bf5c2264824231d7a40c">armnn::BoostLogSeverityMapping::info</a></div></div>
<div class="ttc" id="structarmnn_1_1_arg_min_max_queue_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_arg_min_max_queue_descriptor.xhtml">armnn::ArgMinMaxQueueDescriptor</a></div><div class="ttdef"><b>Definition:</b> <a href="_workload_data_8hpp_source.xhtml#l00163">WorkloadData.hpp:163</a></div></div>
<div class="ttc" id="classarmnn_1_1_neon_workload_factory_xhtml_a739bcc341b89c98a5d38717370ebcaa6"><div class="ttname"><a href="classarmnn_1_1_neon_workload_factory.xhtml#a739bcc341b89c98a5d38717370ebcaa6">armnn::NeonWorkloadFactory::CreateWorkload</a></div><div class="ttdeci">std::unique_ptr&lt; IWorkload &gt; CreateWorkload(LayerType type, const QueueDescriptor &amp;descriptor, const WorkloadInfo &amp;info) const override</div><div class="ttdef"><b>Definition:</b> <a href="_neon_workload_factory_8cpp_source.xhtml#l00134">NeonWorkloadFactory.cpp:134</a></div></div>
<div class="ttc" id="structarmnn_1_1_batch_normalization_queue_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_batch_normalization_queue_descriptor.xhtml">armnn::BatchNormalizationQueueDescriptor</a></div><div class="ttdef"><b>Definition:</b> <a href="_workload_data_8hpp_source.xhtml#l00306">WorkloadData.hpp:306</a></div></div>
<div class="ttc" id="structarmnn_1_1_mem_import_queue_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_mem_import_queue_descriptor.xhtml">armnn::MemImportQueueDescriptor</a></div><div class="ttdef"><b>Definition:</b> <a href="_workload_data_8hpp_source.xhtml#l00094">WorkloadData.hpp:94</a></div></div>
<div class="ttc" id="classarmnn_1_1_workload_factory_base_xhtml_a90c2655fd294c445ca2727491c8a8c79"><div class="ttname"><a href="classarmnn_1_1_workload_factory_base.xhtml#a90c2655fd294c445ca2727491c8a8c79">armnn::WorkloadFactoryBase::CreateStack</a></div><div class="ttdeci">std::unique_ptr&lt; IWorkload &gt; CreateStack(const StackQueueDescriptor &amp;, const WorkloadInfo &amp;) const override</div><div class="ttdef"><b>Definition:</b> <a href="_workload_factory_base_8hpp_source.xhtml#l00259">WorkloadFactoryBase.hpp:259</a></div></div>
<div class="ttc" id="classarmnn_1_1_workload_factory_base_xhtml_afd952ccd68a1b2231b77db1f9131a61b"><div class="ttname"><a href="classarmnn_1_1_workload_factory_base.xhtml#afd952ccd68a1b2231b77db1f9131a61b">armnn::WorkloadFactoryBase::CreateOutput</a></div><div class="ttdeci">std::unique_ptr&lt; IWorkload &gt; CreateOutput(const OutputQueueDescriptor &amp;, const WorkloadInfo &amp;) const override</div><div class="ttdef"><b>Definition:</b> <a href="_workload_factory_base_8hpp_source.xhtml#l00187">WorkloadFactoryBase.hpp:187</a></div></div>
<div class="ttc" id="structarmnn_1_1_workload_info_xhtml"><div class="ttname"><a href="structarmnn_1_1_workload_info.xhtml">armnn::WorkloadInfo</a></div><div class="ttdoc">Contains information about TensorInfos of a layer. </div><div class="ttdef"><b>Definition:</b> <a href="include_2armnn_2backends_2_workload_info_8hpp_source.xhtml#l00016">WorkloadInfo.hpp:16</a></div></div>
<div class="ttc" id="classarmnn_1_1_workload_factory_base_xhtml_aa9390326e8445e71c5dee9858084a1b8"><div class="ttname"><a href="classarmnn_1_1_workload_factory_base.xhtml#aa9390326e8445e71c5dee9858084a1b8">armnn::WorkloadFactoryBase::CreateResize</a></div><div class="ttdeci">std::unique_ptr&lt; IWorkload &gt; CreateResize(const ResizeQueueDescriptor &amp;, const WorkloadInfo &amp;) const override</div><div class="ttdef"><b>Definition:</b> <a href="_workload_factory_base_8hpp_source.xhtml#l00231">WorkloadFactoryBase.hpp:231</a></div></div>
<div class="ttc" id="structarmnn_1_1_channel_shuffle_queue_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_channel_shuffle_queue_descriptor.xhtml">armnn::ChannelShuffleQueueDescriptor</a></div><div class="ttdef"><b>Definition:</b> <a href="_workload_data_8hpp_source.xhtml#l00738">WorkloadData.hpp:738</a></div></div>
<div class="ttc" id="classarmnn_1_1_workload_factory_base_xhtml_a67ee4f8373684cb67f033976fc563081"><div class="ttname"><a href="classarmnn_1_1_workload_factory_base.xhtml#a67ee4f8373684cb67f033976fc563081">armnn::WorkloadFactoryBase::CreateSlice</a></div><div class="ttdeci">std::unique_ptr&lt; IWorkload &gt; CreateSlice(const SliceQueueDescriptor &amp;, const WorkloadInfo &amp;) const override</div><div class="ttdef"><b>Definition:</b> <a href="_workload_factory_base_8hpp_source.xhtml#l00235">WorkloadFactoryBase.hpp:235</a></div></div>
<div class="ttc" id="_deprecated_8hpp_xhtml_a76fb13a018f8e01087a7ae0eb23509e1"><div class="ttname"><a href="_deprecated_8hpp.xhtml#a76fb13a018f8e01087a7ae0eb23509e1">ARMNN_DEPRECATED_MSG</a></div><div class="ttdeci">#define ARMNN_DEPRECATED_MSG(message)</div><div class="ttdef"><b>Definition:</b> <a href="_deprecated_8hpp_source.xhtml#l00043">Deprecated.hpp:43</a></div></div>
<div class="ttc" id="classarmnn_1_1_workload_factory_base_xhtml_a4e3b8d5650cb78c97a2eceb034209187"><div class="ttname"><a href="classarmnn_1_1_workload_factory_base.xhtml#a4e3b8d5650cb78c97a2eceb034209187">armnn::WorkloadFactoryBase::CreateConvertFp16ToFp32</a></div><div class="ttdeci">std::unique_ptr&lt; IWorkload &gt; CreateConvertFp16ToFp32(const ConvertFp16ToFp32QueueDescriptor &amp;, const WorkloadInfo &amp;) const override</div><div class="ttdef"><b>Definition:</b> <a href="_workload_factory_base_8hpp_source.xhtml#l00074">WorkloadFactoryBase.hpp:74</a></div></div>
<div class="ttc" id="structarmnn_1_1_pre_compiled_queue_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_pre_compiled_queue_descriptor.xhtml">armnn::PreCompiledQueueDescriptor</a></div><div class="ttdef"><b>Definition:</b> <a href="_workload_data_8hpp_source.xhtml#l00507">WorkloadData.hpp:507</a></div></div>
<div class="ttc" id="classarmnn_1_1_workload_factory_base_xhtml_a848fc4ff47d5e9c68d2e26f6523b4e58"><div class="ttname"><a href="classarmnn_1_1_workload_factory_base.xhtml#a848fc4ff47d5e9c68d2e26f6523b4e58">armnn::WorkloadFactoryBase::CreateMultiplication</a></div><div class="ttdeci">std::unique_ptr&lt; IWorkload &gt; CreateMultiplication(const MultiplicationQueueDescriptor &amp;, const WorkloadInfo &amp;) const override</div><div class="ttdef"><b>Definition:</b> <a href="_workload_factory_base_8hpp_source.xhtml#l00179">WorkloadFactoryBase.hpp:179</a></div></div>
<div class="ttc" id="classarmnn_1_1_workload_factory_base_xhtml"><div class="ttname"><a href="classarmnn_1_1_workload_factory_base.xhtml">armnn::WorkloadFactoryBase</a></div><div class="ttdef"><b>Definition:</b> <a href="_workload_factory_base_8hpp_source.xhtml#l00013">WorkloadFactoryBase.hpp:13</a></div></div>
<div class="ttc" id="structarmnn_1_1_dequantize_queue_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_dequantize_queue_descriptor.xhtml">armnn::DequantizeQueueDescriptor</a></div><div class="ttdef"><b>Definition:</b> <a href="_workload_data_8hpp_source.xhtml#l00519">WorkloadData.hpp:519</a></div></div>
<div class="ttc" id="structarmnn_1_1_pooling2d_queue_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_pooling2d_queue_descriptor.xhtml">armnn::Pooling2dQueueDescriptor</a></div><div class="ttdef"><b>Definition:</b> <a href="_workload_data_8hpp_source.xhtml#l00192">WorkloadData.hpp:192</a></div></div>
<div class="ttc" id="classarmnn_1_1_workload_factory_base_xhtml_a9e67be0a653c173ba94e38137dc4bbde"><div class="ttname"><a href="classarmnn_1_1_workload_factory_base.xhtml#a9e67be0a653c173ba94e38137dc4bbde">armnn::WorkloadFactoryBase::CreateMaximum</a></div><div class="ttdeci">std::unique_ptr&lt; IWorkload &gt; CreateMaximum(const MaximumQueueDescriptor &amp;, const WorkloadInfo &amp;) const override</div><div class="ttdef"><b>Definition:</b> <a href="_workload_factory_base_8hpp_source.xhtml#l00155">WorkloadFactoryBase.hpp:155</a></div></div>
<div class="ttc" id="classarmnn_1_1_workload_factory_base_xhtml_a789a347180c49b2403e435857501f623"><div class="ttname"><a href="classarmnn_1_1_workload_factory_base.xhtml#a789a347180c49b2403e435857501f623">armnn::WorkloadFactoryBase::CreateActivation</a></div><div class="ttdeci">std::unique_ptr&lt; IWorkload &gt; CreateActivation(const ActivationQueueDescriptor &amp;, const WorkloadInfo &amp;) const override</div><div class="ttdef"><b>Definition:</b> <a href="_workload_factory_base_8hpp_source.xhtml#l00042">WorkloadFactoryBase.hpp:42</a></div></div>
<div class="ttc" id="structarmnn_1_1_mean_queue_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_mean_queue_descriptor.xhtml">armnn::MeanQueueDescriptor</a></div><div class="ttdef"><b>Definition:</b> <a href="_workload_data_8hpp_source.xhtml#l00283">WorkloadData.hpp:283</a></div></div>
<div class="ttc" id="structarmnn_1_1_log_softmax_queue_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_log_softmax_queue_descriptor.xhtml">armnn::LogSoftmaxQueueDescriptor</a></div><div class="ttdef"><b>Definition:</b> <a href="_workload_data_8hpp_source.xhtml#l00358">WorkloadData.hpp:358</a></div></div>
<div class="ttc" id="classarmnn_1_1_workload_factory_base_xhtml_ad16ff72d909eb48f3dc8e1015c4a5078"><div class="ttname"><a href="classarmnn_1_1_workload_factory_base.xhtml#ad16ff72d909eb48f3dc8e1015c4a5078">armnn::WorkloadFactoryBase::CreateMemImport</a></div><div class="ttdeci">std::unique_ptr&lt; IWorkload &gt; CreateMemImport(const MemImportQueueDescriptor &amp;, const WorkloadInfo &amp;) const override</div><div class="ttdef"><b>Definition:</b> <a href="_workload_factory_base_8hpp_source.xhtml#l00167">WorkloadFactoryBase.hpp:167</a></div></div>
<div class="ttc" id="structarmnn_1_1_reshape_queue_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_reshape_queue_descriptor.xhtml">armnn::ReshapeQueueDescriptor</a></div><div class="ttdef"><b>Definition:</b> <a href="_workload_data_8hpp_source.xhtml#l00375">WorkloadData.hpp:375</a></div></div>
<div class="ttc" id="classarmnn_1_1_workload_factory_base_xhtml_a73e9a5c2c3eff38766f03adb98abdd26"><div class="ttname"><a href="classarmnn_1_1_workload_factory_base.xhtml#a73e9a5c2c3eff38766f03adb98abdd26">armnn::WorkloadFactoryBase::CreateMemCopy</a></div><div class="ttdeci">std::unique_ptr&lt; IWorkload &gt; CreateMemCopy(const MemCopyQueueDescriptor &amp;, const WorkloadInfo &amp;) const override</div><div class="ttdef"><b>Definition:</b> <a href="_workload_factory_base_8hpp_source.xhtml#l00163">WorkloadFactoryBase.hpp:163</a></div></div>
<div class="ttc" id="structarmnn_1_1_debug_queue_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_debug_queue_descriptor.xhtml">armnn::DebugQueueDescriptor</a></div><div class="ttdef"><b>Definition:</b> <a href="_workload_data_8hpp_source.xhtml#l00479">WorkloadData.hpp:479</a></div></div>
<div class="ttc" id="structarmnn_1_1_elementwise_unary_queue_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_elementwise_unary_queue_descriptor.xhtml">armnn::ElementwiseUnaryQueueDescriptor</a></div><div class="ttdef"><b>Definition:</b> <a href="_workload_data_8hpp_source.xhtml#l00666">WorkloadData.hpp:666</a></div></div>
<div class="ttc" id="classarmnn_1_1_layer_xhtml"><div class="ttname"><a href="classarmnn_1_1_layer.xhtml">armnn::Layer</a></div><div class="ttdef"><b>Definition:</b> <a href="_layer_8hpp_source.xhtml#l00217">Layer.hpp:217</a></div></div>
<div class="ttc" id="structarmnn_1_1_depthwise_convolution2d_queue_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_depthwise_convolution2d_queue_descriptor.xhtml">armnn::DepthwiseConvolution2dQueueDescriptor</a></div><div class="ttdoc">Depthwise Convolution 2D layer workload data. </div><div class="ttdef"><b>Definition:</b> <a href="_workload_data_8hpp_source.xhtml#l00229">WorkloadData.hpp:229</a></div></div>
<div class="ttc" id="structarmnn_1_1_activation_queue_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_activation_queue_descriptor.xhtml">armnn::ActivationQueueDescriptor</a></div><div class="ttdef"><b>Definition:</b> <a href="_workload_data_8hpp_source.xhtml#l00158">WorkloadData.hpp:158</a></div></div>
<div class="ttc" id="classarmnn_1_1_workload_factory_base_xhtml_abd228c95f2ec95cbb2abcaa0dbacc018"><div class="ttname"><a href="classarmnn_1_1_workload_factory_base.xhtml#abd228c95f2ec95cbb2abcaa0dbacc018">armnn::WorkloadFactoryBase::CreateQuantizedLstm</a></div><div class="ttdeci">std::unique_ptr&lt; IWorkload &gt; CreateQuantizedLstm(const QuantizedLstmQueueDescriptor &amp;, const WorkloadInfo &amp;) const override</div><div class="ttdef"><b>Definition:</b> <a href="_workload_factory_base_8hpp_source.xhtml#l00219">WorkloadFactoryBase.hpp:219</a></div></div>
<div class="ttc" id="classarmnn_1_1_neon_workload_factory_xhtml_a7239477811c44d4398f0c2d291d9ea76"><div class="ttname"><a href="classarmnn_1_1_neon_workload_factory.xhtml#a7239477811c44d4398f0c2d291d9ea76">armnn::NeonWorkloadFactory::CreateTensorHandle</a></div><div class="ttdeci">std::unique_ptr&lt; ITensorHandle &gt; CreateTensorHandle(const TensorInfo &amp;tensorInfo, const bool IsMemoryManaged=true) const override</div><div class="ttdef"><b>Definition:</b> <a href="_neon_workload_factory_8cpp_source.xhtml#l00111">NeonWorkloadFactory.cpp:111</a></div></div>
<div class="ttc" id="namespacearmnn_xhtml_a56943a0946e5f15e5e58054b8e7a04a4"><div class="ttname"><a href="namespacearmnn.xhtml#a56943a0946e5f15e5e58054b8e7a04a4">armnn::LayerType</a></div><div class="ttdeci">LayerType</div><div class="ttdoc">When adding a new layer, adapt also the LastLayer enum value in the enum class LayerType below...</div><div class="ttdef"><b>Definition:</b> <a href="_types_8hpp_source.xhtml#l00466">Types.hpp:466</a></div></div>
<div class="ttc" id="classarmnn_1_1_backend_id_xhtml"><div class="ttname"><a href="classarmnn_1_1_backend_id.xhtml">armnn::BackendId</a></div><div class="ttdef"><b>Definition:</b> <a href="_backend_id_8hpp_source.xhtml#l00075">BackendId.hpp:75</a></div></div>
<div class="ttc" id="structarmnn_1_1_normalization_queue_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_normalization_queue_descriptor.xhtml">armnn::NormalizationQueueDescriptor</a></div><div class="ttdef"><b>Definition:</b> <a href="_workload_data_8hpp_source.xhtml#l00247">WorkloadData.hpp:247</a></div></div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="dir_68267d1309a1af8e8297ef4c3efbcdba.xhtml">src</a></li><li class="navelem"><a class="el" href="dir_0f3cdec46afbc61a1ded8e1687c9c9a0.xhtml">backends</a></li><li class="navelem"><a class="el" href="dir_d86eb514662c7c08e168285f21d00ea1.xhtml">neon</a></li><li class="navelem"><a class="el" href="_neon_workload_factory_8hpp.xhtml">NeonWorkloadFactory.hpp</a></li>
    <li class="footer">Generated on Fri Feb 24 2023 10:24:26 for ArmNN by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.13 </li>
  </ul>
</div>
</body>
</html>
