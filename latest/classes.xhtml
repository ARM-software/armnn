<!-- Copyright (c) 2020 ARM Limited. -->
<!--                                 -->
<!-- SPDX-License-Identifier: MIT    -->
<!--                                 -->
<!-- HTML header for doxygen 1.8.13-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.17"/>
<meta name="robots" content="NOINDEX, NOFOLLOW" />
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>ArmNN: Class Index</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script>
<script type="text/javascript" async="async" src="http://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="stylesheet.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <img alt="ArmNN" src="Arm_NN_horizontal_blue.png" style="max-width: 10rem; margin-top: .5rem; margin-left 10px"/>
  <td style="padding-left: 0.5em;">
   <div id="projectname">
   &#160;<span id="projectnumber">23.02</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.17 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "search",false,'Search');
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(document).ready(function(){initNavTree('classes.xhtml',''); initResizable(); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="headertitle">
<div class="title">Class Index</div>  </div>
</div><!--header-->
<div class="contents">
<div class="qindex"><a class="qindex" href="#letter_a">a</a>&#160;|&#160;<a class="qindex" href="#letter_b">b</a>&#160;|&#160;<a class="qindex" href="#letter_c">c</a>&#160;|&#160;<a class="qindex" href="#letter_d">d</a>&#160;|&#160;<a class="qindex" href="#letter_e">e</a>&#160;|&#160;<a class="qindex" href="#letter_f">f</a>&#160;|&#160;<a class="qindex" href="#letter_g">g</a>&#160;|&#160;<a class="qindex" href="#letter_h">h</a>&#160;|&#160;<a class="qindex" href="#letter_i">i</a>&#160;|&#160;<a class="qindex" href="#letter_j">j</a>&#160;|&#160;<a class="qindex" href="#letter_l">l</a>&#160;|&#160;<a class="qindex" href="#letter_m">m</a>&#160;|&#160;<a class="qindex" href="#letter_n">n</a>&#160;|&#160;<a class="qindex" href="#letter_o">o</a>&#160;|&#160;<a class="qindex" href="#letter_p">p</a>&#160;|&#160;<a class="qindex" href="#letter_q">q</a>&#160;|&#160;<a class="qindex" href="#letter_r">r</a>&#160;|&#160;<a class="qindex" href="#letter_s">s</a>&#160;|&#160;<a class="qindex" href="#letter_t">t</a>&#160;|&#160;<a class="qindex" href="#letter_u">u</a>&#160;|&#160;<a class="qindex" href="#letter_v">v</a>&#160;|&#160;<a class="qindex" href="#letter_w">w</a></div>
<table class="classindex">
<tr><td rowspan="2" valign="bottom"><a name="letter_a"></a><table border="0" cellspacing="0" cellpadding="0"><tr><td><div class="ah">&#160;&#160;a&#160;&#160;</div></td></tr></table>
</td>
<td rowspan="2" valign="bottom"><a name="letter_d"></a><table border="0" cellspacing="0" cellpadding="0"><tr><td><div class="ah">&#160;&#160;d&#160;&#160;</div></td></tr></table>
</td>
<td valign="top"><a class="el" href="structarmnn_1_1_layer_type_of_impl_3_01_layer_type_1_1_convolution3d_01_4.xhtml">LayerTypeOfImpl&lt; LayerType::Convolution3d &gt;</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="classarmnn_1_1_neon_strided_slice_workload.xhtml">NeonStridedSliceWorkload</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="structarmnn_1_1_reshape_queue_descriptor.xhtml">ReshapeQueueDescriptor</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
</tr>
<tr><td valign="top"><a class="el" href="structarmnn_1_1_layer_type_of_impl_3_01_layer_type_1_1_debug_01_4.xhtml">LayerTypeOfImpl&lt; LayerType::Debug &gt;</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="classarmnn_1_1_neon_sub_tensor_handle.xhtml">NeonSubTensorHandle</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="structarmnn_1_1_resize_descriptor.xhtml">ResizeDescriptor</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
</tr>
<tr><td valign="top"><a class="el" href="structarmnn_1_1abs.xhtml">abs</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="classarmnn_utils_1_1_data_layout_indexed.xhtml">DataLayoutIndexed</a> (<a class="el" href="namespacearmnn_utils.xhtml">armnnUtils</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="structarmnn_1_1_layer_type_of_impl_3_01_layer_type_1_1_depth_to_space_01_4.xhtml">LayerTypeOfImpl&lt; LayerType::DepthToSpace &gt;</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="classarmnn_1_1_neon_subtraction_workload.xhtml">NeonSubtractionWorkload</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="classarmnn_1_1_resize_layer.xhtml">ResizeLayer</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
</tr>
<tr><td valign="top"><a class="el" href="classarmnn_1_1_abs_layer.xhtml">AbsLayer</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="classarmnn_1_1_debug_layer.xhtml">DebugLayer</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="structarmnn_1_1_layer_type_of_impl_3_01_layer_type_1_1_depthwise_convolution2d_01_4.xhtml">LayerTypeOfImpl&lt; LayerType::DepthwiseConvolution2d &gt;</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="classarmnn_1_1_neon_tensor_handle.xhtml">NeonTensorHandle</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="structarmnn_1_1_resize_queue_descriptor.xhtml">ResizeQueueDescriptor</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
</tr>
<tr><td valign="top"><a class="el" href="structarmnn_1_1_abs_queue_descriptor.xhtml">AbsQueueDescriptor</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="structarmnn_1_1_debug_queue_descriptor.xhtml">DebugQueueDescriptor</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="structarmnn_1_1_layer_type_of_impl_3_01_layer_type_1_1_dequantize_01_4.xhtml">LayerTypeOfImpl&lt; LayerType::Dequantize &gt;</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="classarmnn_1_1_neon_tensor_handle_factory.xhtml">NeonTensorHandleFactory</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="structarmnn_1_1_resolve_type_impl.xhtml">ResolveTypeImpl</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
</tr>
<tr><td valign="top"><a class="el" href="structarmnn_1_1_activation_descriptor.xhtml">ActivationDescriptor</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="classarmnn_1_1_decoder.xhtml">Decoder</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="structarmnn_1_1_layer_type_of_impl_3_01_layer_type_1_1_detection_post_process_01_4.xhtml">LayerTypeOfImpl&lt; LayerType::DetectionPostProcess &gt;</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="classarmnn_1_1_neon_timer.xhtml">NeonTimer</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="structarmnn_1_1_resolve_type_impl_3_01_data_type_1_1_b_float16_01_4.xhtml">ResolveTypeImpl&lt; DataType::BFloat16 &gt;</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
</tr>
<tr><td valign="top"><a class="el" href="classarmnn_1_1_activation_layer.xhtml">ActivationLayer</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="classarmnn_1_1_default_allocator.xhtml">DefaultAllocator</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="structarmnn_1_1_layer_type_of_impl_3_01_layer_type_1_1_division_01_4.xhtml">LayerTypeOfImpl&lt; LayerType::Division &gt;</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="classarmnn_1_1_neon_transpose_convolution2d_workload.xhtml">NeonTransposeConvolution2dWorkload</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="structarmnn_1_1_resolve_type_impl_3_01_data_type_1_1_boolean_01_4.xhtml">ResolveTypeImpl&lt; DataType::Boolean &gt;</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
</tr>
<tr><td valign="top"><a class="el" href="structarmnn_1_1_activation_queue_descriptor.xhtml">ActivationQueueDescriptor</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="classarmnn_delegate_1_1_delegate.xhtml">Delegate</a> (<a class="el" href="namespacearmnn_delegate.xhtml">armnnDelegate</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="structarmnn_1_1_layer_type_of_impl_3_01_layer_type_1_1_elementwise_unary_01_4.xhtml">LayerTypeOfImpl&lt; LayerType::ElementwiseUnary &gt;</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="classarmnn_1_1_neon_transpose_workload.xhtml">NeonTransposeWorkload</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="structarmnn_1_1_resolve_type_impl_3_01_data_type_1_1_float16_01_4.xhtml">ResolveTypeImpl&lt; DataType::Float16 &gt;</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
</tr>
<tr><td valign="top"><a class="el" href="classarmnn_1_1optimizations_1_1_add_broadcast_reshape_layer_impl.xhtml">AddBroadcastReshapeLayerImpl</a> (<a class="el" href="namespacearmnn_1_1optimizations.xhtml">armnn::optimizations</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="structarmnn_delegate_1_1_delegate_data.xhtml">DelegateData</a> (<a class="el" href="namespacearmnn_delegate.xhtml">armnnDelegate</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="structarmnn_1_1_layer_type_of_impl_3_01_layer_type_1_1_fake_quantization_01_4.xhtml">LayerTypeOfImpl&lt; LayerType::FakeQuantization &gt;</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="classarmnn_1_1_neon_unidirectional_sequence_lstm_float_workload.xhtml">NeonUnidirectionalSequenceLstmFloatWorkload</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="structarmnn_1_1_resolve_type_impl_3_01_data_type_1_1_float32_01_4.xhtml">ResolveTypeImpl&lt; DataType::Float32 &gt;</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
</tr>
<tr><td valign="top"><a class="el" href="classarmnn_1_1optimizations_1_1_add_debug_impl.xhtml">AddDebugImpl</a> (<a class="el" href="namespacearmnn_1_1optimizations.xhtml">armnn::optimizations</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="classarmnn_delegate_1_1_delegate_options.xhtml">DelegateOptions</a> (<a class="el" href="namespacearmnn_delegate.xhtml">armnnDelegate</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="structarmnn_1_1_layer_type_of_impl_3_01_layer_type_1_1_fill_01_4.xhtml">LayerTypeOfImpl&lt; LayerType::Fill &gt;</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="classarmnn_1_1_neon_unidirectional_sequence_lstm_workload.xhtml">NeonUnidirectionalSequenceLstmWorkload</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="structarmnn_1_1_resolve_type_impl_3_01_data_type_1_1_q_asymm_s8_01_4.xhtml">ResolveTypeImpl&lt; DataType::QAsymmS8 &gt;</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
</tr>
<tr><td valign="top"><a class="el" href="classarmnn_1_1optimizations_1_1_add_debug_to_file_impl.xhtml">AddDebugToFileImpl</a> (<a class="el" href="namespacearmnn_1_1optimizations.xhtml">armnn::optimizations</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="classarmnn_1_1_depth_to_space_layer.xhtml">DepthToSpaceLayer</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="structarmnn_1_1_layer_type_of_impl_3_01_layer_type_1_1_floor_01_4.xhtml">LayerTypeOfImpl&lt; LayerType::Floor &gt;</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="classarmnn_1_1_neon_workload_factory.xhtml">NeonWorkloadFactory</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="structarmnn_1_1_resolve_type_impl_3_01_data_type_1_1_q_asymm_u8_01_4.xhtml">ResolveTypeImpl&lt; DataType::QAsymmU8 &gt;</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
</tr>
<tr><td valign="top"><a class="el" href="classarmnn_1_1_added_layer_observable.xhtml">AddedLayerObservable</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="structarmnn_1_1_depth_to_space_queue_descriptor.xhtml">DepthToSpaceQueueDescriptor</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="structarmnn_1_1_layer_type_of_impl_3_01_layer_type_1_1_fully_connected_01_4.xhtml">LayerTypeOfImpl&lt; LayerType::FullyConnected &gt;</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="classarmnn_1_1_network_impl.xhtml">NetworkImpl</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="structarmnn_1_1_resolve_type_impl_3_01_data_type_1_1_q_symm_s16_01_4.xhtml">ResolveTypeImpl&lt; DataType::QSymmS16 &gt;</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
</tr>
<tr><td valign="top"><a class="el" href="classarmnn_1_1_addition_layer.xhtml">AdditionLayer</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="structarmnn_1_1_depthwise_convolution2d_descriptor.xhtml">DepthwiseConvolution2dDescriptor</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="structarmnn_1_1_layer_type_of_impl_3_01_layer_type_1_1_gather_01_4.xhtml">LayerTypeOfImpl&lt; LayerType::Gather &gt;</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="classarmnn_1_1_node_content.xhtml">NodeContent</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="structarmnn_1_1_resolve_type_impl_3_01_data_type_1_1_q_symm_s8_01_4.xhtml">ResolveTypeImpl&lt; DataType::QSymmS8 &gt;</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
</tr>
<tr><td valign="top"><a class="el" href="structarmnn_1_1_addition_queue_descriptor.xhtml">AdditionQueueDescriptor</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="classarmnn_1_1_depthwise_convolution2d_layer.xhtml">DepthwiseConvolution2dLayer</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="structarmnn_1_1_layer_type_of_impl_3_01_layer_type_1_1_gather_nd_01_4.xhtml">LayerTypeOfImpl&lt; LayerType::GatherNd &gt;</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="structarmnn_1_1_normalization_descriptor.xhtml">NormalizationDescriptor</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="structarmnn_1_1_resolve_type_impl_3_01_data_type_1_1_signed32_01_4.xhtml">ResolveTypeImpl&lt; DataType::Signed32 &gt;</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
</tr>
<tr><td valign="top"><a class="el" href="structarmnn_1_1_allocator.xhtml">Allocator</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="structarmnn_1_1_depthwise_convolution2d_queue_descriptor.xhtml">DepthwiseConvolution2dQueueDescriptor</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="structarmnn_1_1_layer_type_of_impl_3_01_layer_type_1_1_input_01_4.xhtml">LayerTypeOfImpl&lt; LayerType::Input &gt;</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="classarmnn_1_1_normalization_layer.xhtml">NormalizationLayer</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="structarmnn_1_1_resolve_type_impl_3_01_data_type_1_1_signed64_01_4.xhtml">ResolveTypeImpl&lt; DataType::Signed64 &gt;</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
</tr>
<tr><td valign="top"><a class="el" href="structarmnn_1_1_arg_min_max_descriptor.xhtml">ArgMinMaxDescriptor</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="classarmnn_1_1_dequantize_layer.xhtml">DequantizeLayer</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="structarmnn_1_1_layer_type_of_impl_3_01_layer_type_1_1_instance_normalization_01_4.xhtml">LayerTypeOfImpl&lt; LayerType::InstanceNormalization &gt;</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="structarmnn_1_1_normalization_queue_descriptor.xhtml">NormalizationQueueDescriptor</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="structarmnn_1_1rsqrt.xhtml">rsqrt</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
</tr>
<tr><td valign="top"><a class="el" href="classarmnn_1_1_arg_min_max_layer.xhtml">ArgMinMaxLayer</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="structarmnn_1_1_dequantize_queue_descriptor.xhtml">DequantizeQueueDescriptor</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="structarmnn_1_1_layer_type_of_impl_3_01_layer_type_1_1_l2_normalization_01_4.xhtml">LayerTypeOfImpl&lt; LayerType::L2Normalization &gt;</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="structarmnn_1_1_no_throw_strategy.xhtml">NoThrowStrategy</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="classarmnn_1_1_rsqrt_layer.xhtml">RsqrtLayer</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
</tr>
<tr><td valign="top"><a class="el" href="structarmnn_1_1_arg_min_max_queue_descriptor.xhtml">ArgMinMaxQueueDescriptor</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="classarmnn_deserializer_1_1_i_deserializer_1_1_deserializer_impl.xhtml">IDeserializer::DeserializerImpl</a> (<a class="el" href="namespacearmnn_deserializer.xhtml">armnnDeserializer</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="structarmnn_1_1_layer_type_of_impl_3_01_layer_type_1_1_logical_binary_01_4.xhtml">LayerTypeOfImpl&lt; LayerType::LogicalBinary &gt;</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="structarmnn_1_1_null_descriptor.xhtml">NullDescriptor</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="structarmnn_1_1_rsqrt_queue_descriptor.xhtml">RsqrtQueueDescriptor</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
</tr>
<tr><td valign="top"><a class="el" href="classarmnn__driver_1_1_armnn_device.xhtml">ArmnnDevice</a> (<a class="el" href="namespacearmnn__driver.xhtml">armnn_driver</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="structarmnn_1_1_detection_post_process_descriptor.xhtml">DetectionPostProcessDescriptor</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="structarmnn_1_1_layer_type_of_impl_3_01_layer_type_1_1_log_softmax_01_4.xhtml">LayerTypeOfImpl&lt; LayerType::LogSoftmax &gt;</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="classarmnn_1_1_null_pointer_exception.xhtml">NullPointerException</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="structarmnn_1_1_rule.xhtml">Rule</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
</tr>
<tr><td valign="top"><a class="el" href="classarmnn__driver_1_1_armnn_driver.xhtml">ArmnnDriver</a> (<a class="el" href="namespacearmnn__driver.xhtml">armnn_driver</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="classarmnn_1_1_detection_post_process_layer.xhtml">DetectionPostProcessLayer</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="structarmnn_1_1_layer_type_of_impl_3_01_layer_type_1_1_lstm_01_4.xhtml">LayerTypeOfImpl&lt; LayerType::Lstm &gt;</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="classarmnn_1_1_null_workload.xhtml">NullWorkload</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="classarmnn_1_1_runtime_exception.xhtml">RuntimeException</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
</tr>
<tr><td valign="top"><a class="el" href="classarmnn__driver_1_1_armnn_driver_impl.xhtml">ArmnnDriverImpl</a> (<a class="el" href="namespacearmnn__driver.xhtml">armnn_driver</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="structarmnn_1_1_detection_post_process_queue_descriptor.xhtml">DetectionPostProcessQueueDescriptor</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="structarmnn_1_1_layer_type_of_impl_3_01_layer_type_1_1_map_01_4.xhtml">LayerTypeOfImpl&lt; LayerType::Map &gt;</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td rowspan="2" valign="bottom"><a name="letter_o"></a><table border="0" cellspacing="0" cellpadding="0"><tr><td><div class="ah">&#160;&#160;o&#160;&#160;</div></td></tr></table>
</td>
<td valign="top"><a class="el" href="structarmnn_1_1_runtime_impl.xhtml">RuntimeImpl</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
</tr>
<tr><td valign="top"><a class="el" href="classarmnn__driver_1_1_armnn_prepared_model.xhtml">ArmnnPreparedModel</a> (<a class="el" href="namespacearmnn__driver.xhtml">armnn_driver</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="classarmnn_1_1_device_spec.xhtml">DeviceSpec</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="structarmnn_1_1_layer_type_of_impl_3_01_layer_type_1_1_maximum_01_4.xhtml">LayerTypeOfImpl&lt; LayerType::Maximum &gt;</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td rowspan="2" valign="bottom"><a name="letter_s"></a><table border="0" cellspacing="0" cellpadding="0"><tr><td><div class="ah">&#160;&#160;s&#160;&#160;</div></td></tr></table>
</td>
</tr>
<tr><td valign="top"><a class="el" href="classarmnn_1_1_arm_n_n_profiling_service_initialiser.xhtml">ArmNNProfilingServiceInitialiser</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="classarmnn_1_1_division_layer.xhtml">DivisionLayer</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="structarmnn_1_1_layer_type_of_impl_3_01_layer_type_1_1_mean_01_4.xhtml">LayerTypeOfImpl&lt; LayerType::Mean &gt;</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="classarmnn_onnx_parser_1_1_onnx_parser_impl.xhtml">OnnxParserImpl</a> (<a class="el" href="namespacearmnn_onnx_parser.xhtml">armnnOnnxParser</a>)&#160;&#160;&#160;</td>
</tr>
<tr><td valign="top"><a class="el" href="classarmnn_delegate_1_1_armnn_subgraph.xhtml">ArmnnSubgraph</a> (<a class="el" href="namespacearmnn_delegate.xhtml">armnnDelegate</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="structarmnn_1_1_division_queue_descriptor.xhtml">DivisionQueueDescriptor</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="structarmnn_1_1_layer_type_of_impl_3_01_layer_type_1_1_mem_copy_01_4.xhtml">LayerTypeOfImpl&lt; LayerType::MemCopy &gt;</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="classarmnn_1_1_open_cl_timer.xhtml">OpenClTimer</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="classsdb_1_1_sample_dynamic_addition_workload.xhtml">SampleDynamicAdditionWorkload</a> (<a class="el" href="namespacesdb.xhtml">sdb</a>)&#160;&#160;&#160;</td>
</tr>
<tr><td valign="top"><a class="el" href="classarmnn_1_1experimental_1_1_async_callback_manager.xhtml">AsyncCallbackManager</a> (<a class="el" href="namespacearmnn_1_1experimental.xhtml">armnn::experimental</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="classarmnn_1_1_dot_attribute_set.xhtml">DotAttributeSet</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="structarmnn_1_1_layer_type_of_impl_3_01_layer_type_1_1_mem_import_01_4.xhtml">LayerTypeOfImpl&lt; LayerType::MemImport &gt;</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="classarmnn_1_1_optimization.xhtml">Optimization</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="classsdb_1_1_sample_dynamic_layer_support.xhtml">SampleDynamicLayerSupport</a> (<a class="el" href="namespacesdb.xhtml">sdb</a>)&#160;&#160;&#160;</td>
</tr>
<tr><td valign="top"><a class="el" href="classarmnn_1_1experimental_1_1_async_execution_callback.xhtml">AsyncExecutionCallback</a> (<a class="el" href="namespacearmnn_1_1experimental.xhtml">armnn::experimental</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="classarmnn_1_1_dot_base.xhtml">DotBase</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="structarmnn_1_1_layer_type_of_impl_3_01_layer_type_1_1_merge_01_4.xhtml">LayerTypeOfImpl&lt; LayerType::Merge &gt;</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="structarmnn_1_1_optimization_result.xhtml">OptimizationResult</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="classsdb_1_1_sample_dynamic_tensor_handle_factory.xhtml">SampleDynamicTensorHandleFactory</a> (<a class="el" href="namespacesdb.xhtml">sdb</a>)&#160;&#160;&#160;</td>
</tr>
<tr><td rowspan="2" valign="bottom"><a name="letter_b"></a><table border="0" cellspacing="0" cellpadding="0"><tr><td><div class="ah">&#160;&#160;b&#160;&#160;</div></td></tr></table>
</td>
<td valign="top"><a class="el" href="classarmnn_1_1_dot_defaults.xhtml">DotDefaults</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="structarmnn_1_1_layer_type_of_impl_3_01_layer_type_1_1_minimum_01_4.xhtml">LayerTypeOfImpl&lt; LayerType::Minimum &gt;</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="classarmnn_1_1_optimization_views.xhtml">OptimizationViews</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="classsdb_1_1_sample_dynamic_workload_factory.xhtml">SampleDynamicWorkloadFactory</a> (<a class="el" href="namespacesdb.xhtml">sdb</a>)&#160;&#160;&#160;</td>
</tr>
<tr><td valign="top"><a class="el" href="classarmnn_1_1_dot_edge.xhtml">DotEdge</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="structarmnn_1_1_layer_type_of_impl_3_01_layer_type_1_1_multiplication_01_4.xhtml">LayerTypeOfImpl&lt; LayerType::Multiplication &gt;</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="classarmnn_1_1optimizations_1_1_optimize_consecutive_reshapes_impl.xhtml">OptimizeConsecutiveReshapesImpl</a> (<a class="el" href="namespacearmnn_1_1optimizations.xhtml">armnn::optimizations</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="classsdb_1_1_sample_memory_manager.xhtml">SampleMemoryManager</a> (<a class="el" href="namespacesdb.xhtml">sdb</a>)&#160;&#160;&#160;</td>
</tr>
<tr><td valign="top"><a class="el" href="classarmnn_1_1_backend_capability_exception.xhtml">BackendCapabilityException</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="classarmnn_1_1_dot_graph.xhtml">DotGraph</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="structarmnn_1_1_layer_type_of_impl_3_01_layer_type_1_1_normalization_01_4.xhtml">LayerTypeOfImpl&lt; LayerType::Normalization &gt;</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="classarmnn_1_1_optimized_network_impl.xhtml">OptimizedNetworkImpl</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="classsdb_1_1_sample_tensor_handle.xhtml">SampleTensorHandle</a> (<a class="el" href="namespacesdb.xhtml">sdb</a>)&#160;&#160;&#160;</td>
</tr>
<tr><td valign="top"><a class="el" href="classarmnn_1_1_backend_id.xhtml">BackendId</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="classarmnn_1_1_dot_node.xhtml">DotNode</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="structarmnn_1_1_layer_type_of_impl_3_01_layer_type_1_1_output_01_4.xhtml">LayerTypeOfImpl&lt; LayerType::Output &gt;</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="classarmnn_1_1_optimize_for_connection.xhtml">OptimizeForConnection</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="classarmnn_1_1_scaled_int32_decoder.xhtml">ScaledInt32Decoder</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
</tr>
<tr><td valign="top"><a class="el" href="structarmnn_1_1_backend_options_1_1_backend_option.xhtml">BackendOptions::BackendOption</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="classarmnn__driver_1_1_driver_options.xhtml">DriverOptions</a> (<a class="el" href="namespacearmnn__driver.xhtml">armnn_driver</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="structarmnn_1_1_layer_type_of_impl_3_01_layer_type_1_1_pad_01_4.xhtml">LayerTypeOfImpl&lt; LayerType::Pad &gt;</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="classarmnn_1_1_optimize_for_connection_impl.xhtml">OptimizeForConnectionImpl</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="classarmnn_1_1_scaled_int32_per_axis_decoder.xhtml">ScaledInt32PerAxisDecoder</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
</tr>
<tr><td valign="top"><a class="el" href="structarmnn_1_1_backend_options.xhtml">BackendOptions</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="classarmnn_1_1_dynamic_backend.xhtml">DynamicBackend</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="structarmnn_1_1_layer_type_of_impl_3_01_layer_type_1_1_permute_01_4.xhtml">LayerTypeOfImpl&lt; LayerType::Permute &gt;</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="classarmnn_1_1_optimize_for_exclusive_connection.xhtml">OptimizeForExclusiveConnection</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="classarmnn_1_1_scoped_profiling_event.xhtml">ScopedProfilingEvent</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
</tr>
<tr><td valign="top"><a class="el" href="classarmnn_1_1_backend_registry.xhtml">BackendRegistry</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="classarmnn_1_1_dynamic_backend_utils.xhtml">DynamicBackendUtils</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="structarmnn_1_1_layer_type_of_impl_3_01_layer_type_1_1_pooling2d_01_4.xhtml">LayerTypeOfImpl&lt; LayerType::Pooling2d &gt;</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="classarmnn_1_1_optimize_for_exclusive_connection_impl.xhtml">OptimizeForExclusiveConnectionImpl</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="structarmnn_1_1_scoped_record.xhtml">ScopedRecord</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
</tr>
<tr><td valign="top"><a class="el" href="structarmnn_1_1_backend_settings.xhtml">BackendSettings</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td rowspan="2" valign="bottom"><a name="letter_e"></a><table border="0" cellspacing="0" cellpadding="0"><tr><td><div class="ah">&#160;&#160;e&#160;&#160;</div></td></tr></table>
</td>
<td valign="top"><a class="el" href="structarmnn_1_1_layer_type_of_impl_3_01_layer_type_1_1_pooling3d_01_4.xhtml">LayerTypeOfImpl&lt; LayerType::Pooling3d &gt;</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="classarmnn_1_1_optimize_for_type.xhtml">OptimizeForType</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="classarmnn_1_1_scoped_tensor_handle.xhtml">ScopedTensorHandle</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
</tr>
<tr><td valign="top"><a class="el" href="classarmnn_1_1_backend_unavailable_exception.xhtml">BackendUnavailableException</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="structarmnn_1_1_layer_type_of_impl_3_01_layer_type_1_1_pre_compiled_01_4.xhtml">LayerTypeOfImpl&lt; LayerType::PreCompiled &gt;</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="classarmnn_1_1_optimize_for_type_impl.xhtml">OptimizeForTypeImpl</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="structarmnn_utils_1_1_selective_quantizer.xhtml">SelectiveQuantizer</a> (<a class="el" href="namespacearmnn_utils.xhtml">armnnUtils</a>)&#160;&#160;&#160;</td>
</tr>
<tr><td valign="top"><a class="el" href="structarmnn_1_1_backend_version.xhtml">BackendVersion</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="classarmnn_1_1_elementwise_base_layer.xhtml">ElementwiseBaseLayer</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="structarmnn_1_1_layer_type_of_impl_3_01_layer_type_1_1_prelu_01_4.xhtml">LayerTypeOfImpl&lt; LayerType::Prelu &gt;</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="classarmnn_1_1_optimize_for_type_impl_3_01_layer_00_01_wrapped_01_4.xhtml">OptimizeForTypeImpl&lt; Layer, Wrapped &gt;</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="structarmnn_utils_1_1_selective_quantizer_3_01armnn_1_1_b_float16_00_01false_01_4.xhtml">SelectiveQuantizer&lt; armnn::BFloat16, false &gt;</a> (<a class="el" href="namespacearmnn_utils.xhtml">armnnUtils</a>)&#160;&#160;&#160;</td>
</tr>
<tr><td valign="top"><a class="el" href="classarmnn_1_1_bad_optional_access_exception.xhtml">BadOptionalAccessException</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="structarmnn_1_1_elementwise_binary_function.xhtml">ElementwiseBinaryFunction</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="structarmnn_1_1_layer_type_of_impl_3_01_layer_type_1_1_q_lstm_01_4.xhtml">LayerTypeOfImpl&lt; LayerType::QLstm &gt;</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="classarmnn_1_1optimizations_1_1_optimize_inverse_conversions_impl.xhtml">OptimizeInverseConversionsImpl</a> (<a class="el" href="namespacearmnn_1_1optimizations.xhtml">armnn::optimizations</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="structarmnn_utils_1_1_selective_quantizer_3_01armnn_1_1_half_00_01false_01_4.xhtml">SelectiveQuantizer&lt; armnn::Half, false &gt;</a> (<a class="el" href="namespacearmnn_utils.xhtml">armnnUtils</a>)&#160;&#160;&#160;</td>
</tr>
<tr><td valign="top"><a class="el" href="structarmnn_1_1_base_descriptor.xhtml">BaseDescriptor</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="structarmnn_1_1_elementwise_unary_descriptor.xhtml">ElementwiseUnaryDescriptor</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="structarmnn_1_1_layer_type_of_impl_3_01_layer_type_1_1_quantize_01_4.xhtml">LayerTypeOfImpl&lt; LayerType::Quantize &gt;</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="classarmnn_1_1optimizations_1_1_optimize_inverse_permutes_impl.xhtml">OptimizeInversePermutesImpl</a> (<a class="el" href="namespacearmnn_1_1optimizations.xhtml">armnn::optimizations</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="structarmnn_utils_1_1_selective_quantizer_3_01_t_00_01false_01_4.xhtml">SelectiveQuantizer&lt; T, false &gt;</a> (<a class="el" href="namespacearmnn_utils.xhtml">armnnUtils</a>)&#160;&#160;&#160;</td>
</tr>
<tr><td valign="top"><a class="el" href="classarmnn_1_1_base_iterator.xhtml">BaseIterator</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="structarmnn_1_1_elementwise_unary_function.xhtml">ElementwiseUnaryFunction</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="structarmnn_1_1_layer_type_of_impl_3_01_layer_type_1_1_quantized_lstm_01_4.xhtml">LayerTypeOfImpl&lt; LayerType::QuantizedLstm &gt;</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="classarmnn_1_1_optimizer.xhtml">Optimizer</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="classarmnn_serializer_1_1_i_serializer_1_1_serializer_impl.xhtml">ISerializer::SerializerImpl</a> (<a class="el" href="namespacearmnn_serializer.xhtml">armnnSerializer</a>)&#160;&#160;&#160;</td>
</tr>
<tr><td valign="top"><a class="el" href="classarmnn_1_1_base_memory_manager.xhtml">BaseMemoryManager</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="classarmnn_1_1_elementwise_unary_layer.xhtml">ElementwiseUnaryLayer</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="structarmnn_1_1_layer_type_of_impl_3_01_layer_type_1_1_rank_01_4.xhtml">LayerTypeOfImpl&lt; LayerType::Rank &gt;</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="structarmnn_1_1_optimizer_options.xhtml">OptimizerOptions</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="classarmnn_serializer_1_1_serializer_strategy.xhtml">SerializerStrategy</a> (<a class="el" href="namespacearmnn_serializer.xhtml">armnnSerializer</a>)&#160;&#160;&#160;</td>
</tr>
<tr><td valign="top"><a class="el" href="classarmnn_1_1_base_tensor.xhtml">BaseTensor</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="structarmnn_1_1_elementwise_unary_queue_descriptor.xhtml">ElementwiseUnaryQueueDescriptor</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="structarmnn_1_1_layer_type_of_impl_3_01_layer_type_1_1_reduce_01_4.xhtml">LayerTypeOfImpl&lt; LayerType::Reduce &gt;</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="classarmnn_1_1_optional.xhtml">Optional</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="classarmnn_1_1_shape_layer.xhtml">ShapeLayer</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
</tr>
<tr><td valign="top"><a class="el" href="classarmnn_1_1_base_workload.xhtml">BaseWorkload</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="structarmnn_1_1_empty_optional.xhtml">EmptyOptional</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="structarmnn_1_1_layer_type_of_impl_3_01_layer_type_1_1_reshape_01_4.xhtml">LayerTypeOfImpl&lt; LayerType::Reshape &gt;</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="classarmnn_1_1_optional_base.xhtml">OptionalBase</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="structarmnn_1_1_shape_queue_descriptor.xhtml">ShapeQueueDescriptor</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
</tr>
<tr><td valign="top"><a class="el" href="classarmnn_1_1_batch_mat_mul.xhtml">BatchMatMul</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="classarmnn_1_1_encoder.xhtml">Encoder</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="structarmnn_1_1_layer_type_of_impl_3_01_layer_type_1_1_resize_01_4.xhtml">LayerTypeOfImpl&lt; LayerType::Resize &gt;</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="classarmnn_1_1_optional_reference_switch.xhtml">OptionalReferenceSwitch</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="structarmnn_1_1_shapes_are_broadcast_compatible.xhtml">ShapesAreBroadcastCompatible</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
</tr>
<tr><td valign="top"><a class="el" href="structarmnn_1_1_batch_mat_mul_descriptor.xhtml">BatchMatMulDescriptor</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="structarmnn_1_1_equal_queue_descriptor.xhtml">EqualQueueDescriptor</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="structarmnn_1_1_layer_type_of_impl_3_01_layer_type_1_1_shape_01_4.xhtml">LayerTypeOfImpl&lt; LayerType::Shape &gt;</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="classarmnn_1_1_optional_reference_switch_3_01true_00_01_t_01_4.xhtml">OptionalReferenceSwitch&lt; true, T &gt;</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="structarmnn_1_1_shapes_are_same_rank.xhtml">ShapesAreSameRank</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
</tr>
<tr><td valign="top"><a class="el" href="classarmnn_1_1_batch_mat_mul_layer.xhtml">BatchMatMulLayer</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="classarmnn_1_1_erased_layer_names_observable.xhtml">ErasedLayerNamesObservable</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="structarmnn_1_1_layer_type_of_impl_3_01_layer_type_1_1_slice_01_4.xhtml">LayerTypeOfImpl&lt; LayerType::Slice &gt;</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="structarmnn_1_1_origins_descriptor.xhtml">OriginsDescriptor</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="structarmnn_1_1_shapes_are_same_total_size.xhtml">ShapesAreSameTotalSize</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
</tr>
<tr><td valign="top"><a class="el" href="structarmnn_1_1_batch_mat_mul_queue_descriptor.xhtml">BatchMatMulQueueDescriptor</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="classarmnn_1_1_event.xhtml">Event</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="structarmnn_1_1_layer_type_of_impl_3_01_layer_type_1_1_softmax_01_4.xhtml">LayerTypeOfImpl&lt; LayerType::Softmax &gt;</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="classarmnn_1_1_output_handler.xhtml">OutputHandler</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="classarmnn_1_1_simple_logger.xhtml">SimpleLogger</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
</tr>
<tr><td valign="top"><a class="el" href="structarmnn_1_1_batch_normalization_descriptor.xhtml">BatchNormalizationDescriptor</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="classarmnn_1_1_exception.xhtml">Exception</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="structarmnn_1_1_layer_type_of_impl_3_01_layer_type_1_1_space_to_batch_nd_01_4.xhtml">LayerTypeOfImpl&lt; LayerType::SpaceToBatchNd &gt;</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="classarmnn_1_1_output_layer.xhtml">OutputLayer</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="structarmnn_1_1sin.xhtml">sin</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
</tr>
<tr><td valign="top"><a class="el" href="classarmnn_1_1_batch_normalization_layer.xhtml">BatchNormalizationLayer</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="structarmnn_1_1experimental_1_1_execution_data.xhtml">ExecutionData</a> (<a class="el" href="namespacearmnn_1_1experimental.xhtml">armnn::experimental</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="structarmnn_1_1_layer_type_of_impl_3_01_layer_type_1_1_space_to_depth_01_4.xhtml">LayerTypeOfImpl&lt; LayerType::SpaceToDepth &gt;</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="structarmnn_1_1_graph_1_1_output_layers_accessor.xhtml">Graph::OutputLayersAccessor</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="classarmnn_1_1_single_axis_priority_list.xhtml">SingleAxisPriorityList</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
</tr>
<tr><td valign="top"><a class="el" href="structarmnn_1_1_batch_normalization_queue_descriptor.xhtml">BatchNormalizationQueueDescriptor</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="classarmnn_1_1_execution_frame.xhtml">ExecutionFrame</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="structarmnn_1_1_layer_type_of_impl_3_01_layer_type_1_1_splitter_01_4.xhtml">LayerTypeOfImpl&lt; LayerType::Splitter &gt;</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="structarmnn_1_1experimental_1_1_working_mem_handle_1_1_output_mem_descriptor_coords.xhtml">WorkingMemHandle::OutputMemDescriptorCoords</a> (<a class="el" href="namespacearmnn_1_1experimental.xhtml">armnn::experimental</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="structarmnn_1_1_slice_descriptor.xhtml">SliceDescriptor</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
</tr>
<tr><td valign="top"><a class="el" href="structarmnn_1_1_batch_to_space_nd_descriptor.xhtml">BatchToSpaceNdDescriptor</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="structarmnn_1_1exp.xhtml">exp</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="structarmnn_1_1_layer_type_of_impl_3_01_layer_type_1_1_stack_01_4.xhtml">LayerTypeOfImpl&lt; LayerType::Stack &gt;</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="classarmnn_1_1_output_slot.xhtml">OutputSlot</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="classarmnn_1_1_slice_layer.xhtml">SliceLayer</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
</tr>
<tr><td valign="top"><a class="el" href="classarmnn_1_1_batch_to_space_nd_layer.xhtml">BatchToSpaceNdLayer</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="structarmnn_1_1_i_runtime_1_1_creation_options_1_1_external_profiling_options.xhtml">IRuntime::CreationOptions::ExternalProfilingOptions</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="structarmnn_1_1_layer_type_of_impl_3_01_layer_type_1_1_stand_in_01_4.xhtml">LayerTypeOfImpl&lt; LayerType::StandIn &gt;</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td rowspan="2" valign="bottom"><a name="letter_p"></a><table border="0" cellspacing="0" cellpadding="0"><tr><td><div class="ah">&#160;&#160;p&#160;&#160;</div></td></tr></table>
</td>
<td valign="top"><a class="el" href="structarmnn_1_1_slice_queue_descriptor.xhtml">SliceQueueDescriptor</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
</tr>
<tr><td valign="top"><a class="el" href="structarmnn_1_1_batch_to_space_nd_queue_descriptor.xhtml">BatchToSpaceNdQueueDescriptor</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td rowspan="2" valign="bottom"><a name="letter_f"></a><table border="0" cellspacing="0" cellpadding="0"><tr><td><div class="ah">&#160;&#160;f&#160;&#160;</div></td></tr></table>
</td>
<td valign="top"><a class="el" href="structarmnn_1_1_layer_type_of_impl_3_01_layer_type_1_1_strided_slice_01_4.xhtml">LayerTypeOfImpl&lt; LayerType::StridedSlice &gt;</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="structarmnn_1_1_softmax_descriptor.xhtml">SoftmaxDescriptor</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
</tr>
<tr><td valign="top"><a class="el" href="classarmnn_1_1_b_float16.xhtml">BFloat16</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="structarmnn_1_1_layer_type_of_impl_3_01_layer_type_1_1_subtraction_01_4.xhtml">LayerTypeOfImpl&lt; LayerType::Subtraction &gt;</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="structarmnn_1_1_pad_descriptor.xhtml">PadDescriptor</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="classarmnn_1_1_softmax_layer.xhtml">SoftmaxLayer</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
</tr>
<tr><td valign="top"><a class="el" href="structarmnn_1_1_bias_and_weights_types_compatible.xhtml">BiasAndWeightsTypesCompatible</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="structarmnn_1_1_fake_quantization_descriptor.xhtml">FakeQuantizationDescriptor</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="structarmnn_1_1_layer_type_of_impl_3_01_layer_type_1_1_switch_01_4.xhtml">LayerTypeOfImpl&lt; LayerType::Switch &gt;</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="classarmnn_1_1_pad_layer.xhtml">PadLayer</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="structarmnn_1_1_softmax_queue_descriptor.xhtml">SoftmaxQueueDescriptor</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
</tr>
<tr><td valign="top"><a class="el" href="structarmnn_1_1_bias_and_weights_types_match.xhtml">BiasAndWeightsTypesMatch</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="classarmnn_1_1_fake_quantization_layer.xhtml">FakeQuantizationLayer</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="structarmnn_1_1_layer_type_of_impl_3_01_layer_type_1_1_transpose_01_4.xhtml">LayerTypeOfImpl&lt; LayerType::Transpose &gt;</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="structarmnn_1_1_pad_queue_descriptor.xhtml">PadQueueDescriptor</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="structarmnn_1_1_space_to_batch_nd_descriptor.xhtml">SpaceToBatchNdDescriptor</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
</tr>
<tr><td valign="top"><a class="el" href="classarmnn_1_1_bindable_layer.xhtml">BindableLayer</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="structarmnn_1_1_fake_quantization_queue_descriptor.xhtml">FakeQuantizationQueueDescriptor</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="structarmnn_1_1_layer_type_of_impl_3_01_layer_type_1_1_transpose_convolution2d_01_4.xhtml">LayerTypeOfImpl&lt; LayerType::TransposeConvolution2d &gt;</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="classarmnn_1_1_parse_exception.xhtml">ParseException</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="classarmnn_1_1_space_to_batch_nd_layer.xhtml">SpaceToBatchNdLayer</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
</tr>
<tr><td valign="top"><a class="el" href="structarmnn_deserializer_1_1_binding_point_info.xhtml">BindingPointInfo</a> (<a class="el" href="namespacearmnn_deserializer.xhtml">armnnDeserializer</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="classarmnn_1_1_file_not_found_exception.xhtml">FileNotFoundException</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="structarmnn_1_1_layer_type_of_impl_3_01_layer_type_1_1_unidirectional_sequence_lstm_01_4.xhtml">LayerTypeOfImpl&lt; LayerType::UnidirectionalSequenceLstm &gt;</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="structarmnn_utils_1_1_parser_prototxt_fixture.xhtml">ParserPrototxtFixture</a> (<a class="el" href="namespacearmnn_utils.xhtml">armnnUtils</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="structarmnn_1_1_space_to_batch_nd_queue_descriptor.xhtml">SpaceToBatchNdQueueDescriptor</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
</tr>
<tr><td valign="top"><a class="el" href="classarmnn_1_1_boolean_decoder.xhtml">BooleanDecoder</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="structarmnn_1_1_fill_descriptor.xhtml">FillDescriptor</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="structarmnn_1_1_layer_type_of_impl_3_01_layer_type_1_1_unmap_01_4.xhtml">LayerTypeOfImpl&lt; LayerType::Unmap &gt;</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="classarmnn_1_1_passthrough_tensor_handle.xhtml">PassthroughTensorHandle</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="structarmnn_1_1_space_to_depth_descriptor.xhtml">SpaceToDepthDescriptor</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
</tr>
<tr><td valign="top"><a class="el" href="classarmnn_1_1_boolean_decoder_bool.xhtml">BooleanDecoderBool</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="classarmnn_1_1_fill_layer.xhtml">FillLayer</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="classarmnn_1_1_layer_validation_exception.xhtml">LayerValidationException</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="classarmnn_1_1_per_axis_iterator.xhtml">PerAxisIterator</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="classarmnn_1_1_space_to_depth_layer.xhtml">SpaceToDepthLayer</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
</tr>
<tr><td valign="top"><a class="el" href="classarmnn_1_1_boolean_encoder.xhtml">BooleanEncoder</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="structarmnn_1_1_fill_queue_descriptor.xhtml">FillQueueDescriptor</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="classarmnn_1_1_layer_with_parameters.xhtml">LayerWithParameters</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="classarmnn_1_1_permutation_vector.xhtml">PermutationVector</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="structarmnn_1_1_space_to_depth_queue_descriptor.xhtml">SpaceToDepthQueueDescriptor</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
</tr>
<tr><td valign="top"><a class="el" href="structarmnn_1_1_broadcast_loop.xhtml">BroadcastLoop</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="classarmnn_1_1_first_input_typed_workload.xhtml">FirstInputTypedWorkload</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="classarmnn_1_1_loaded_network.xhtml">LoadedNetwork</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="classarmnn_1_1optimizations_1_1_permute_and_batch_to_space_as_depth_to_space_impl.xhtml">PermuteAndBatchToSpaceAsDepthToSpaceImpl</a> (<a class="el" href="namespacearmnn_1_1optimizations.xhtml">armnn::optimizations</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="classarmnn_1_1_splitter_layer.xhtml">SplitterLayer</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
</tr>
<tr><td valign="top"><a class="el" href="structarmnn_1_1_buffer_storage.xhtml">BufferStorage</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="structarmnn_1_1_f_l_a_t_b_u_f_f_e_r_s___f_i_n_a_l___c_l_a_s_s.xhtml">FLATBUFFERS_FINAL_CLASS</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="structarmnn_1_1log.xhtml">log</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="classarmnn_1_1optimizations_1_1_permute_as_reshape_impl.xhtml">PermuteAsReshapeImpl</a> (<a class="el" href="namespacearmnn_1_1optimizations.xhtml">armnn::optimizations</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="structarmnn_1_1_splitter_queue_descriptor.xhtml">SplitterQueueDescriptor</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
</tr>
<tr><td rowspan="2" valign="bottom"><a name="letter_c"></a><table border="0" cellspacing="0" cellpadding="0"><tr><td><div class="ah">&#160;&#160;c&#160;&#160;</div></td></tr></table>
</td>
<td valign="top"><a class="el" href="classarmnn_1_1_float16_decoder.xhtml">Float16Decoder</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="structarmnn_1_1_logical_binary_descriptor.xhtml">LogicalBinaryDescriptor</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="classarmnn_1_1optimizations_1_1_permute_depthwise_conv2d_weights_impl.xhtml">PermuteDepthwiseConv2dWeightsImpl</a> (<a class="el" href="namespacearmnn_1_1optimizations.xhtml">armnn::optimizations</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="structarmnn_1_1sqrt.xhtml">sqrt</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
</tr>
<tr><td valign="top"><a class="el" href="classarmnn_1_1_float16_encoder.xhtml">Float16Encoder</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="structarmnn_1_1_logical_binary_function.xhtml">LogicalBinaryFunction</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="structarmnn_1_1_permute_descriptor.xhtml">PermuteDescriptor</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="classarmnn_1_1optimizations_1_1_squash_equal_siblings_impl.xhtml">SquashEqualSiblingsImpl</a> (<a class="el" href="namespacearmnn_1_1optimizations.xhtml">armnn::optimizations</a>)&#160;&#160;&#160;</td>
</tr>
<tr><td valign="top"><a class="el" href="structarmnn__driver_1_1_canonical_execution_context.xhtml">CanonicalExecutionContext</a> (<a class="el" href="namespacearmnn__driver.xhtml">armnn_driver</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="structarmnn_1_1optimizations_1_1_float16_to_float32.xhtml">Float16ToFloat32</a> (<a class="el" href="namespacearmnn_1_1optimizations.xhtml">armnn::optimizations</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="classarmnn_1_1_logical_binary_layer.xhtml">LogicalBinaryLayer</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="classarmnn_1_1_permute_layer.xhtml">PermuteLayer</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="structarmnn_1_1_stack_descriptor.xhtml">StackDescriptor</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
</tr>
<tr><td valign="top"><a class="el" href="structarmnn_1_1_capability.xhtml">Capability</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="classarmnn_1_1_float32_decoder.xhtml">Float32Decoder</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="structarmnn_1_1_logical_binary_queue_descriptor.xhtml">LogicalBinaryQueueDescriptor</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="structarmnn_1_1_permute_queue_descriptor.xhtml">PermuteQueueDescriptor</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="classarmnn_1_1_stack_layer.xhtml">StackLayer</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
</tr>
<tr><td valign="top"><a class="el" href="classarmnn_1_1_cast_layer.xhtml">CastLayer</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="classarmnn_1_1_float32_encoder.xhtml">Float32Encoder</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="structarmnn_1_1_logical_unary_function.xhtml">LogicalUnaryFunction</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="classarmnn_1_1_polymorphic_downcast_exception.xhtml">PolymorphicDowncastException</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="structarmnn_1_1_stack_queue_descriptor.xhtml">StackQueueDescriptor</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
</tr>
<tr><td valign="top"><a class="el" href="structarmnn_1_1_cast_queue_descriptor.xhtml">CastQueueDescriptor</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="structarmnn_1_1optimizations_1_1_float32_to_float16.xhtml">Float32ToFloat16</a> (<a class="el" href="namespacearmnn_1_1optimizations.xhtml">armnn::optimizations</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="classarmnn_1_1_log_sink.xhtml">LogSink</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="classarmnn_1_1_ref_memory_manager_1_1_pool.xhtml">RefMemoryManager::Pool</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="classarmnn_1_1_standard_output_sink.xhtml">StandardOutputSink</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
</tr>
<tr><td valign="top"><a class="el" href="structarmnn_1_1_channel_shuffle_descriptor.xhtml">ChannelShuffleDescriptor</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="classarmnn_utils_1_1_floating_point_converter.xhtml">FloatingPointConverter</a> (<a class="el" href="namespacearmnn_utils.xhtml">armnnUtils</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="classarmnn_1_1_log_softmax_layer.xhtml">LogSoftmaxLayer</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="classarmnn_1_1_tosa_ref_memory_manager_1_1_pool.xhtml">TosaRefMemoryManager::Pool</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="structarmnn_1_1_stand_in_descriptor.xhtml">StandInDescriptor</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
</tr>
<tr><td valign="top"><a class="el" href="classarmnn_1_1_channel_shuffle_layer.xhtml">ChannelShuffleLayer</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="classarmnn_1_1_floor_layer.xhtml">FloorLayer</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="structarmnn_1_1_log_softmax_queue_descriptor.xhtml">LogSoftmaxQueueDescriptor</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="classsdb_1_1_sample_memory_manager_1_1_pool.xhtml">SampleMemoryManager::Pool</a> (<a class="el" href="namespacesdb.xhtml">sdb</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="classarmnn_1_1_stand_in_layer.xhtml">StandInLayer</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
</tr>
<tr><td valign="top"><a class="el" href="structarmnn_1_1_channel_shuffle_queue_descriptor.xhtml">ChannelShuffleQueueDescriptor</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="structarmnn_1_1_floor_queue_descriptor.xhtml">FloorQueueDescriptor</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="structarmnn_1_1_lstm_basic_parameters.xhtml">LstmBasicParameters</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="structarmnn_1_1_pooling2d_descriptor.xhtml">Pooling2dDescriptor</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="structarmnn_1_1_backend_registry_1_1_static_registry_initializer.xhtml">BackendRegistry::StaticRegistryInitializer</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
</tr>
<tr><td valign="top"><a class="el" href="structarmnn_1_1_check_location.xhtml">CheckLocation</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="classarmnn_1_1optimizations_1_1pad__fold_1_1_fold_pad_into_convolution2d_impl.xhtml">FoldPadIntoConvolution2dImpl</a> (<a class="el" href="namespacearmnn_1_1optimizations_1_1pad__fold.xhtml">armnn::optimizations::pad_fold</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="structarmnn_1_1_lstm_descriptor.xhtml">LstmDescriptor</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="classarmnn_1_1_pooling2d_layer.xhtml">Pooling2dLayer</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="classarmnn_1_1_strategy_base.xhtml">StrategyBase</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
</tr>
<tr><td valign="top"><a class="el" href="classarmnn_1_1_cl_abs_workload.xhtml">ClAbsWorkload</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="classarmnn_1_1optimizations_1_1pad__fold_1_1_fold_pad_into_depthwise_convolution2d_impl.xhtml">FoldPadIntoDepthwiseConvolution2dImpl</a> (<a class="el" href="namespacearmnn_1_1optimizations_1_1pad__fold.xhtml">armnn::optimizations::pad_fold</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="structarmnn_1_1_lstm_input_params.xhtml">LstmInputParams</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="structarmnn_1_1_pooling2d_queue_descriptor.xhtml">Pooling2dQueueDescriptor</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="structarmnn_1_1_strategy_factory.xhtml">StrategyFactory</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
</tr>
<tr><td valign="top"><a class="el" href="classarmnn_1_1_cl_activation_workload.xhtml">ClActivationWorkload</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="classarmnn_1_1optimizations_1_1pad__fold_1_1_fold_pad_into_pooling2d_impl.xhtml">FoldPadIntoPooling2dImpl</a> (<a class="el" href="namespacearmnn_1_1optimizations_1_1pad__fold.xhtml">armnn::optimizations::pad_fold</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="structarmnn_1_1_lstm_input_params_info.xhtml">LstmInputParamsInfo</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="structarmnn_1_1_pooling3d_descriptor.xhtml">Pooling3dDescriptor</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="classarmnn_1_1_strategy_validator.xhtml">StrategyValidator</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
</tr>
<tr><td valign="top"><a class="el" href="classarmnn_1_1_cl_addition_workload.xhtml">ClAdditionWorkload</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="structarmnn_1_1_fully_connected_descriptor.xhtml">FullyConnectedDescriptor</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="classarmnn_1_1_lstm_layer.xhtml">LstmLayer</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="classarmnn_1_1_pooling3d_layer.xhtml">Pooling3dLayer</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="structarmnn_1_1_strided_slice_descriptor.xhtml">StridedSliceDescriptor</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
</tr>
<tr><td valign="top"><a class="el" href="classarmnn_1_1_cl_arg_min_max_workload.xhtml">ClArgMinMaxWorkload</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="classarmnn_1_1_fully_connected_layer.xhtml">FullyConnectedLayer</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="structarmnn_1_1_lstm_opt_cifg_parameters.xhtml">LstmOptCifgParameters</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="structarmnn_1_1_pooling3d_queue_descriptor.xhtml">Pooling3dQueueDescriptor</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="classarmnn_1_1_strided_slice_layer.xhtml">StridedSliceLayer</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
</tr>
<tr><td valign="top"><a class="el" href="classarmnn_1_1_cl_backend.xhtml">ClBackend</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="structarmnn_1_1_fully_connected_queue_descriptor.xhtml">FullyConnectedQueueDescriptor</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="structarmnn_1_1_lstm_opt_layer_norm_parameters.xhtml">LstmOptLayerNormParameters</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="structarmnn_1_1_pre_compiled_descriptor.xhtml">PreCompiledDescriptor</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="structarmnn_1_1_strided_slice_queue_descriptor.xhtml">StridedSliceQueueDescriptor</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
</tr>
<tr><td valign="top"><a class="el" href="classarmnn_1_1_cl_backend_context.xhtml">ClBackendContext</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="classarmnn_1_1optimizations_1_1_fuse_batch_norm.xhtml">FuseBatchNorm</a> (<a class="el" href="namespacearmnn_1_1optimizations.xhtml">armnn::optimizations</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="structarmnn_1_1_lstm_opt_peephole_parameters.xhtml">LstmOptPeepholeParameters</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="classarmnn_1_1_pre_compiled_layer.xhtml">PreCompiledLayer</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="structarmnn_1_1_stringify_layer_parameters.xhtml">StringifyLayerParameters</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
</tr>
<tr><td valign="top"><a class="el" href="classarmnn_1_1_cl_backend_1_1_cl_backend_custom_allocator_memory_region.xhtml">ClBackend::ClBackendCustomAllocatorMemoryRegion</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td rowspan="2" valign="bottom"><a name="letter_g"></a><table border="0" cellspacing="0" cellpadding="0"><tr><td><div class="ah">&#160;&#160;g&#160;&#160;</div></td></tr></table>
</td>
<td valign="top"><a class="el" href="structarmnn_1_1_lstm_opt_projection_parameters.xhtml">LstmOptProjectionParameters</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="structarmnn_1_1_pre_compiled_queue_descriptor.xhtml">PreCompiledQueueDescriptor</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="structarmnn_1_1_stringify_layer_parameters_3_01_activation_descriptor_01_4.xhtml">StringifyLayerParameters&lt; ActivationDescriptor &gt;</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
</tr>
<tr><td valign="top"><a class="el" href="classarmnn_1_1_cl_backend_1_1_cl_backend_custom_allocator_wrapper.xhtml">ClBackend::ClBackendCustomAllocatorWrapper</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="structarmnn_1_1_lstm_queue_descriptor.xhtml">LstmQueueDescriptor</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="classarmnn_1_1_prelu_layer.xhtml">PreluLayer</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="structarmnn_1_1_stringify_layer_parameters_3_01_batch_mat_mul_descriptor_01_4.xhtml">StringifyLayerParameters&lt; BatchMatMulDescriptor &gt;</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
</tr>
<tr><td valign="top"><a class="el" href="classarmnn_1_1_cl_backend_default_allocator.xhtml">ClBackendDefaultAllocator</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="structarmnn_1_1_gather_descriptor.xhtml">GatherDescriptor</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td rowspan="2" valign="bottom"><a name="letter_m"></a><table border="0" cellspacing="0" cellpadding="0"><tr><td><div class="ah">&#160;&#160;m&#160;&#160;</div></td></tr></table>
</td>
<td valign="top"><a class="el" href="structarmnn_1_1_prelu_queue_descriptor.xhtml">PreluQueueDescriptor</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="structarmnn_1_1_stringify_layer_parameters_3_01_batch_normalization_descriptor_01_4.xhtml">StringifyLayerParameters&lt; BatchNormalizationDescriptor &gt;</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
</tr>
<tr><td valign="top"><a class="el" href="classarmnn_1_1_cl_backend_model_context.xhtml">ClBackendModelContext</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="classarmnn_1_1_gather_layer.xhtml">GatherLayer</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="classarmnn_1_1_profiler_impl.xhtml">ProfilerImpl</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="structarmnn_1_1_stringify_layer_parameters_3_01_batch_to_space_nd_descriptor_01_4.xhtml">StringifyLayerParameters&lt; BatchToSpaceNdDescriptor &gt;</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
</tr>
<tr><td valign="top"><a class="el" href="classarmnn_1_1_cl_base_workload.xhtml">ClBaseWorkload</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="classarmnn_1_1_gather_nd_layer.xhtml">GatherNdLayer</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="classarmnn_1_1_managed_const_tensor_handle.xhtml">ManagedConstTensorHandle</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="classarmnn_1_1_profiler_manager.xhtml">ProfilerManager</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="structarmnn_1_1_stringify_layer_parameters_3_01_channel_shuffle_descriptor_01_4.xhtml">StringifyLayerParameters&lt; ChannelShuffleDescriptor &gt;</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
</tr>
<tr><td valign="top"><a class="el" href="classarmnn_1_1_cl_batch_mat_mul_workload.xhtml">ClBatchMatMulWorkload</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="structarmnn_1_1_gather_nd_queue_descriptor.xhtml">GatherNdQueueDescriptor</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="classarmnn_1_1_map_layer.xhtml">MapLayer</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="classarmnn_1_1_profiling_details.xhtml">ProfilingDetails</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="structarmnn_1_1_stringify_layer_parameters_3_01_comparison_descriptor_01_4.xhtml">StringifyLayerParameters&lt; ComparisonDescriptor &gt;</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
</tr>
<tr><td valign="top"><a class="el" href="classarmnn_1_1_cl_batch_normalization_float_workload.xhtml">ClBatchNormalizationFloatWorkload</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="structarmnn_1_1_gather_queue_descriptor.xhtml">GatherQueueDescriptor</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="structarmnn_1_1_map_queue_descriptor.xhtml">MapQueueDescriptor</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="structarmnn_1_1_profiler_impl_1_1_profiling_event_stats.xhtml">ProfilerImpl::ProfilingEventStats</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="structarmnn_1_1_stringify_layer_parameters_3_01_convolution2d_descriptor_01_4.xhtml">StringifyLayerParameters&lt; Convolution2dDescriptor &gt;</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
</tr>
<tr><td valign="top"><a class="el" href="classarmnn_1_1_cl_batch_to_space_nd_workload.xhtml">ClBatchToSpaceNdWorkload</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="classarmnn_1_1_graph.xhtml">Graph</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="classarmnn_1_1_map_workload.xhtml">MapWorkload</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="structarmnn_1_1_program_builder.xhtml">ProgramBuilder</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="structarmnn_1_1_stringify_layer_parameters_3_01_convolution3d_descriptor_01_4.xhtml">StringifyLayerParameters&lt; Convolution3dDescriptor &gt;</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
</tr>
<tr><td valign="top"><a class="el" href="classarmnn_1_1_cl_cast_workload.xhtml">ClCastWorkload</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="classarmnn_1_1_graph_observable.xhtml">GraphObservable</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="structarmnn_1_1_profiler_impl_1_1_marker.xhtml">ProfilerImpl::Marker</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td rowspan="2" valign="bottom"><a name="letter_q"></a><table border="0" cellspacing="0" cellpadding="0"><tr><td><div class="ah">&#160;&#160;q&#160;&#160;</div></td></tr></table>
</td>
<td valign="top"><a class="el" href="structarmnn_1_1_stringify_layer_parameters_3_01_depthwise_convolution2d_descriptor_01_4.xhtml">StringifyLayerParameters&lt; DepthwiseConvolution2dDescriptor &gt;</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
</tr>
<tr><td valign="top"><a class="el" href="classarmnn_1_1_cl_channel_shuffle_workload.xhtml">ClChannelShuffleWorkload</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="classarmnn_1_1_graph_validation_exception.xhtml">GraphValidationException</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="structarmnn_1_1maximum.xhtml">maximum</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="structarmnn_1_1_stringify_layer_parameters_3_01_detection_post_process_descriptor_01_4.xhtml">StringifyLayerParameters&lt; DetectionPostProcessDescriptor &gt;</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
</tr>
<tr><td valign="top"><a class="el" href="classarmnn_1_1_cl_comparison_workload.xhtml">ClComparisonWorkload</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="structarmnn_1_1_greater_queue_descriptor.xhtml">GreaterQueueDescriptor</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="classarmnn_1_1_maximum_layer.xhtml">MaximumLayer</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="classarmnn_1_1_q_a_symm8_decoder.xhtml">QASymm8Decoder</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="structarmnn_1_1_stringify_layer_parameters_3_01_elementwise_unary_descriptor_01_4.xhtml">StringifyLayerParameters&lt; ElementwiseUnaryDescriptor &gt;</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
</tr>
<tr><td valign="top"><a class="el" href="classarmnn_1_1_cl_concat_workload.xhtml">ClConcatWorkload</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td rowspan="2" valign="bottom"><a name="letter_h"></a><table border="0" cellspacing="0" cellpadding="0"><tr><td><div class="ah">&#160;&#160;h&#160;&#160;</div></td></tr></table>
</td>
<td valign="top"><a class="el" href="structarmnn_1_1_maximum_queue_descriptor.xhtml">MaximumQueueDescriptor</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="classarmnn_1_1_q_a_symm8_encoder.xhtml">QASymm8Encoder</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="structarmnn_1_1_stringify_layer_parameters_3_01_fake_quantization_descriptor_01_4.xhtml">StringifyLayerParameters&lt; FakeQuantizationDescriptor &gt;</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
</tr>
<tr><td valign="top"><a class="el" href="classarmnn_1_1_cl_constant_workload.xhtml">ClConstantWorkload</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="structarmnn_1_1_mean_descriptor.xhtml">MeanDescriptor</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="classarmnn_1_1_q_a_symm_s8_decoder.xhtml">QASymmS8Decoder</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="structarmnn_1_1_stringify_layer_parameters_3_01_fully_connected_descriptor_01_4.xhtml">StringifyLayerParameters&lt; FullyConnectedDescriptor &gt;</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
</tr>
<tr><td valign="top"><a class="el" href="structarmnn_1_1_cl_context_builder.xhtml">ClContextBuilder</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="structstd_1_1hash_3_01armnn_1_1_backend_id_01_4.xhtml">hash&lt; armnn::BackendId &gt;</a> (<a class="el" href="namespacestd.xhtml">std</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="classarmnn_1_1_mean_layer.xhtml">MeanLayer</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="classarmnn_1_1_q_a_symm_s8_encoder.xhtml">QASymmS8Encoder</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="structarmnn_1_1_stringify_layer_parameters_3_01_gather_descriptor_01_4.xhtml">StringifyLayerParameters&lt; GatherDescriptor &gt;</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
</tr>
<tr><td valign="top"><a class="el" href="classarmnn_1_1_cl_context_control.xhtml">ClContextControl</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="classarmnn_1_1_html_bold.xhtml">HtmlBold</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="structarmnn_1_1_mean_queue_descriptor.xhtml">MeanQueueDescriptor</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="structarmnn_1_1_q_lstm_basic_parameters.xhtml">QLstmBasicParameters</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="structarmnn_1_1_stringify_layer_parameters_3_01_l2_normalization_descriptor_01_4.xhtml">StringifyLayerParameters&lt; L2NormalizationDescriptor &gt;</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
</tr>
<tr><td valign="top"><a class="el" href="classarmnn_1_1_cl_context_deserializer.xhtml">ClContextDeserializer</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="classarmnn_1_1_html_font.xhtml">HtmlFont</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="structarmnn_1_1_measurement.xhtml">Measurement</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="structarmnn_1_1_q_lstm_descriptor.xhtml">QLstmDescriptor</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="structarmnn_1_1_stringify_layer_parameters_3_01_lstm_descriptor_01_4.xhtml">StringifyLayerParameters&lt; LstmDescriptor &gt;</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
</tr>
<tr><td valign="top"><a class="el" href="classarmnn_1_1_cl_context_serializer.xhtml">ClContextSerializer</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="classarmnn_1_1_html_section.xhtml">HtmlSection</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="structarmnn_1_1_mem_bin.xhtml">MemBin</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="classarmnn_1_1_q_lstm_layer.xhtml">QLstmLayer</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="structarmnn_1_1_stringify_layer_parameters_3_01_mean_descriptor_01_4.xhtml">StringifyLayerParameters&lt; MeanDescriptor &gt;</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
</tr>
<tr><td valign="top"><a class="el" href="classarmnn_1_1_cl_convert_fp16_to_fp32_workload.xhtml">ClConvertFp16ToFp32Workload</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="classarmnn_1_1_html_simple_tag.xhtml">HtmlSimpleTag</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="structarmnn_1_1_mem_block.xhtml">MemBlock</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="structarmnn_1_1_q_lstm_opt_cifg_parameters.xhtml">QLstmOptCifgParameters</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="structarmnn_1_1_stringify_layer_parameters_3_01_normalization_descriptor_01_4.xhtml">StringifyLayerParameters&lt; NormalizationDescriptor &gt;</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
</tr>
<tr><td valign="top"><a class="el" href="classarmnn_1_1_cl_convert_fp32_to_fp16_workload.xhtml">ClConvertFp32ToFp16Workload</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td rowspan="2" valign="bottom"><a name="letter_i"></a><table border="0" cellspacing="0" cellpadding="0"><tr><td><div class="ah">&#160;&#160;i&#160;&#160;</div></td></tr></table>
</td>
<td valign="top"><a class="el" href="classarmnn_1_1_mem_copy_layer.xhtml">MemCopyLayer</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="structarmnn_1_1_q_lstm_opt_layer_norm_parameters.xhtml">QLstmOptLayerNormParameters</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="structarmnn_1_1_stringify_layer_parameters_3_01_origins_descriptor_01_4.xhtml">StringifyLayerParameters&lt; OriginsDescriptor &gt;</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
</tr>
<tr><td valign="top"><a class="el" href="classarmnn_1_1_cl_convolution2d_workload.xhtml">ClConvolution2dWorkload</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="structarmnn_1_1_mem_copy_queue_descriptor.xhtml">MemCopyQueueDescriptor</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="structarmnn_1_1_q_lstm_opt_peephole_parameters.xhtml">QLstmOptPeepholeParameters</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="structarmnn_1_1_stringify_layer_parameters_3_01_pad_descriptor_01_4.xhtml">StringifyLayerParameters&lt; PadDescriptor &gt;</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
</tr>
<tr><td valign="top"><a class="el" href="classarmnn_1_1_cl_convolution3d_workload.xhtml">ClConvolution3dWorkload</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="classarmnn_1_1_i_acl_tensor_handle.xhtml">IAclTensorHandle</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="classarmnn_1_1_mem_import_layer.xhtml">MemImportLayer</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="structarmnn_1_1_q_lstm_opt_projection_parameters.xhtml">QLstmOptProjectionParameters</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="structarmnn_1_1_stringify_layer_parameters_3_01_permute_descriptor_01_4.xhtml">StringifyLayerParameters&lt; PermuteDescriptor &gt;</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
</tr>
<tr><td valign="top"><a class="el" href="classarmnn_1_1_cl_depth_to_space_workload.xhtml">ClDepthToSpaceWorkload</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="classarmnn_1_1experimental_1_1_i_async_execution_callback.xhtml">IAsyncExecutionCallback</a> (<a class="el" href="namespacearmnn_1_1experimental.xhtml">armnn::experimental</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="structarmnn_1_1_mem_import_queue_descriptor.xhtml">MemImportQueueDescriptor</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="structarmnn_1_1_q_lstm_queue_descriptor.xhtml">QLstmQueueDescriptor</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="structarmnn_1_1_stringify_layer_parameters_3_01_pooling2d_descriptor_01_4.xhtml">StringifyLayerParameters&lt; Pooling2dDescriptor &gt;</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
</tr>
<tr><td valign="top"><a class="el" href="classarmnn_1_1_cl_depthwise_convolution_workload.xhtml">ClDepthwiseConvolutionWorkload</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="classarmnn_1_1_i_backend.xhtml">IBackend</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="classarmnn_1_1_memory_export_exception.xhtml">MemoryExportException</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="classarmnn_1_1_q_symm16_decoder.xhtml">QSymm16Decoder</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="structarmnn_1_1_stringify_layer_parameters_3_01_pooling3d_descriptor_01_4.xhtml">StringifyLayerParameters&lt; Pooling3dDescriptor &gt;</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
</tr>
<tr><td valign="top"><a class="el" href="classarmnn_1_1_cl_dequantize_workload.xhtml">ClDequantizeWorkload</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="classarmnn_1_1_i_backend_context.xhtml">IBackendContext</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="classarmnn_1_1_memory_import_exception.xhtml">MemoryImportException</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="classarmnn_1_1_q_symm16_encoder.xhtml">QSymm16Encoder</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="structarmnn_1_1_stringify_layer_parameters_3_01_pre_compiled_descriptor_01_4.xhtml">StringifyLayerParameters&lt; PreCompiledDescriptor &gt;</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
</tr>
<tr><td valign="top"><a class="el" href="classarmnn_1_1_cl_division_workload.xhtml">ClDivisionWorkload</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="classarmnn_1_1_i_backend_internal.xhtml">IBackendInternal</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="structarmnn_1_1_memory_info.xhtml">MemoryInfo</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="classarmnn_1_1_q_symm8_per_axis_decoder.xhtml">QSymm8PerAxisDecoder</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="structarmnn_1_1_stringify_layer_parameters_3_01_reduce_descriptor_01_4.xhtml">StringifyLayerParameters&lt; ReduceDescriptor &gt;</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
</tr>
<tr><td valign="top"><a class="el" href="classarmnn_1_1_cl_exp_workload.xhtml">ClExpWorkload</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="classarmnn_1_1_i_backend_model_context.xhtml">IBackendModelContext</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="classarmnn_1_1_memory_manager.xhtml">MemoryManager</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="classarmnn_1_1_q_symm8_per_axis_encoder.xhtml">QSymm8PerAxisEncoder</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="structarmnn_1_1_stringify_layer_parameters_3_01_reshape_descriptor_01_4.xhtml">StringifyLayerParameters&lt; ReshapeDescriptor &gt;</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
</tr>
<tr><td valign="top"><a class="el" href="classarmnn_1_1_cl_fill_workload.xhtml">ClFillWorkload</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="classarmnn_1_1_i_cl_tensor_handle.xhtml">IClTensorHandle</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="structarmnn_1_1_memory_requirements.xhtml">MemoryRequirements</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="classarmnn_1_1_q_symm_s8_decoder.xhtml">QSymmS8Decoder</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="structarmnn_1_1_stringify_layer_parameters_3_01_resize_descriptor_01_4.xhtml">StringifyLayerParameters&lt; ResizeDescriptor &gt;</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
</tr>
<tr><td valign="top"><a class="el" href="classarmnn_1_1_cl_floor_float_workload.xhtml">ClFloorFloatWorkload</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="classarmnn_1_1_i_c_l_tensor_proxy.xhtml">ICLTensorProxy</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="classarmnn_1_1_memory_validation_exception.xhtml">MemoryValidationException</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="classarmnn_1_1_q_symm_s8_encoder.xhtml">QSymmS8Encoder</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="structarmnn_1_1_stringify_layer_parameters_3_01_softmax_descriptor_01_4.xhtml">StringifyLayerParameters&lt; SoftmaxDescriptor &gt;</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
</tr>
<tr><td valign="top"><a class="el" href="classarmnn_1_1_cl_fully_connected_workload.xhtml">ClFullyConnectedWorkload</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="classarmnn_1_1_i_connectable_layer.xhtml">IConnectableLayer</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="structarmnn_1_1_mem_sync_queue_descriptor.xhtml">MemSyncQueueDescriptor</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="structarmnn_1_1_quantization_parameters_are_equal.xhtml">QuantizationParametersAreEqual</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="structarmnn_1_1_stringify_layer_parameters_3_01_space_to_batch_nd_descriptor_01_4.xhtml">StringifyLayerParameters&lt; SpaceToBatchNdDescriptor &gt;</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
</tr>
<tr><td valign="top"><a class="el" href="classarmnn_1_1_cl_gather_nd_workload.xhtml">ClGatherNdWorkload</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="classarmnn_1_1_i_custom_allocator.xhtml">ICustomAllocator</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="classarmnn_1_1_merge_layer.xhtml">MergeLayer</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="structarmnn_1_1_quantized_lstm_input_params.xhtml">QuantizedLstmInputParams</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="structarmnn_1_1_stringify_layer_parameters_3_01_space_to_depth_descriptor_01_4.xhtml">StringifyLayerParameters&lt; SpaceToDepthDescriptor &gt;</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
</tr>
<tr><td valign="top"><a class="el" href="classarmnn_1_1_cl_gather_workload.xhtml">ClGatherWorkload</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="classarmnn_deserializer_1_1_i_deserializer.xhtml">IDeserializer</a> (<a class="el" href="namespacearmnn_deserializer.xhtml">armnnDeserializer</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="structarmnn_1_1_merge_queue_descriptor.xhtml">MergeQueueDescriptor</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="structarmnn_1_1_quantized_lstm_input_params_info.xhtml">QuantizedLstmInputParamsInfo</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="structarmnn_1_1_stringify_layer_parameters_3_01_stack_descriptor_01_4.xhtml">StringifyLayerParameters&lt; StackDescriptor &gt;</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
</tr>
<tr><td valign="top"><a class="el" href="classarmnn_1_1_cl_import_sub_tensor_handle.xhtml">ClImportSubTensorHandle</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="classarmnn_1_1_i_device_spec.xhtml">IDeviceSpec</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="structarmnn_1_1minimum.xhtml">minimum</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="classarmnn_1_1_quantized_lstm_layer.xhtml">QuantizedLstmLayer</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="structarmnn_1_1_stringify_layer_parameters_3_01_strided_slice_descriptor_01_4.xhtml">StringifyLayerParameters&lt; StridedSliceDescriptor &gt;</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
</tr>
<tr><td valign="top"><a class="el" href="classarmnn_1_1_cl_import_tensor_handle.xhtml">ClImportTensorHandle</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="classarmnn_1_1_i_execution_frame.xhtml">IExecutionFrame</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="classarmnn_1_1_minimum_layer.xhtml">MinimumLayer</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="structarmnn_1_1_quantized_lstm_parameters.xhtml">QuantizedLstmParameters</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="structarmnn_1_1_stringify_layer_parameters_3_01_transpose_convolution2d_descriptor_01_4.xhtml">StringifyLayerParameters&lt; TransposeConvolution2dDescriptor &gt;</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
</tr>
<tr><td valign="top"><a class="el" href="classarmnn_1_1_cl_import_tensor_handle_factory.xhtml">ClImportTensorHandleFactory</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="classarmnn_1_1_i_gpu_acc_tuned_parameters.xhtml">IGpuAccTunedParameters</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="structarmnn_1_1_minimum_queue_descriptor.xhtml">MinimumQueueDescriptor</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="structarmnn_1_1_quantized_lstm_queue_descriptor.xhtml">QuantizedLstmQueueDescriptor</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="structarmnn_1_1_stringify_layer_parameters_3_01_transpose_descriptor_01_4.xhtml">StringifyLayerParameters&lt; TransposeDescriptor &gt;</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
</tr>
<tr><td valign="top"><a class="el" href="classarmnn_1_1_cl_instance_normalization_workload.xhtml">ClInstanceNormalizationWorkload</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="classarmnn_1_1_i_graph_observable.xhtml">IGraphObservable</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="classarmnn_1_1_mock_tensor_handle_factory.xhtml">MockTensorHandleFactory</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="structarmnn_1_1_quantized_multiplier_smaller_than_one.xhtml">QuantizedMultiplierSmallerThanOne</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="structarmnn_1_1_stringify_layer_parameters_3_01_views_descriptor_01_4.xhtml">StringifyLayerParameters&lt; ViewsDescriptor &gt;</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
</tr>
<tr><td valign="top"><a class="el" href="classarmnn_1_1_cl_l2_normalization_float_workload.xhtml">ClL2NormalizationFloatWorkload</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="classarmnn_1_1_i_input_slot.xhtml">IInputSlot</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="structarmnn_1_1timelinedecoder_1_1_j_s_o_n_timeline_decoder_1_1_model.xhtml">JSONTimelineDecoder::Model</a> (<a class="el" href="namespacearmnn_1_1timelinedecoder.xhtml">armnn::timelinedecoder</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="classarmnn_1_1_quantize_layer.xhtml">QuantizeLayer</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="structarmnn_1_1_string_mapping.xhtml">StringMapping</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
</tr>
<tr><td valign="top"><a class="el" href="classarmnn_1_1_cl_layer_support.xhtml">ClLayerSupport</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="classarmnn_1_1_i_layer_support.xhtml">ILayerSupport</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="classarmnn_utils_1_1_model_accuracy_checker.xhtml">ModelAccuracyChecker</a> (<a class="el" href="namespacearmnn_utils.xhtml">armnnUtils</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="structarmnn_1_1_quantize_queue_descriptor.xhtml">QuantizeQueueDescriptor</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="classarmnn_1_1_subgraph_view.xhtml">SubgraphView</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
</tr>
<tr><td valign="top"><a class="el" href="classarmnn_1_1_cl_logical_and_workload.xhtml">ClLogicalAndWorkload</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="classarmnn_1_1_i_memory_manager.xhtml">IMemoryManager</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="classarmnn__driver_1_1_model_to_i_network_transformer.xhtml">ModelToINetworkTransformer</a> (<a class="el" href="namespacearmnn__driver.xhtml">armnn_driver</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="structarmnn_1_1_queue_descriptor.xhtml">QueueDescriptor</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="classarmnn_1_1_subgraph_view_selector.xhtml">SubgraphViewSelector</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
</tr>
<tr><td valign="top"><a class="el" href="classarmnn_1_1_cl_logical_not_workload.xhtml">ClLogicalNotWorkload</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="classarmnn_1_1_i_memory_optimizer_strategy.xhtml">IMemoryOptimizerStrategy</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="classarmnn_1_1optimizations_1_1_move_permute_up_impl.xhtml">MovePermuteUpImpl</a> (<a class="el" href="namespacearmnn_1_1optimizations.xhtml">armnn::optimizations</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="structarmnn_1_1_queue_descriptor_with_parameters.xhtml">QueueDescriptorWithParameters</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="structarmnn_1_1_optimization_views_1_1_substitution_pair.xhtml">OptimizationViews::SubstitutionPair</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
</tr>
<tr><td valign="top"><a class="el" href="classarmnn_1_1_cl_logical_or_workload.xhtml">ClLogicalOrWorkload</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="structarmnn_1_1_i_memory_optimizer_strategy_factory.xhtml">IMemoryOptimizerStrategyFactory</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="classarmnn_1_1optimizations_1_1_move_transpose_up_impl.xhtml">MoveTransposeUpImpl</a> (<a class="el" href="namespacearmnn_1_1optimizations.xhtml">armnn::optimizations</a>)&#160;&#160;&#160;</td>
<td rowspan="2" valign="bottom"><a name="letter_r"></a><table border="0" cellspacing="0" cellpadding="0"><tr><td><div class="ah">&#160;&#160;r&#160;&#160;</div></td></tr></table>
</td>
<td valign="top"><a class="el" href="classarmnn_1_1_subtraction_layer.xhtml">SubtractionLayer</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
</tr>
<tr><td valign="top"><a class="el" href="classarmnn_1_1_cl_log_softmax_workload.xhtml">ClLogSoftmaxWorkload</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="classarmnn_1_1_import_mem_generic_workload.xhtml">ImportMemGenericWorkload</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="classarmnn_1_1_multiplication_layer.xhtml">MultiplicationLayer</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="structarmnn_1_1_subtraction_queue_descriptor.xhtml">SubtractionQueueDescriptor</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
</tr>
<tr><td valign="top"><a class="el" href="classarmnn_1_1_cl_log_workload.xhtml">ClLogWorkload</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="classarmnn_1_1_i_network.xhtml">INetwork</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="structarmnn_1_1_multiplication_queue_descriptor.xhtml">MultiplicationQueueDescriptor</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="classarmnn_1_1_range_tracker.xhtml">RangeTracker</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="classarmnn_1_1_switch_layer.xhtml">SwitchLayer</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
</tr>
<tr><td valign="top"><a class="el" href="classarmnn_1_1_cl_lstm_float_workload.xhtml">ClLstmFloatWorkload</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="structarmnn_1_1_i_network_properties.xhtml">INetworkProperties</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="classarmnn_1_1_multi_typed_workload.xhtml">MultiTypedWorkload</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="classarmnn_1_1_rank_layer.xhtml">RankLayer</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="structarmnn_1_1_switch_queue_descriptor.xhtml">SwitchQueueDescriptor</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
</tr>
<tr><td valign="top"><a class="el" href="classarmnn_1_1_cl_maximum_workload.xhtml">ClMaximumWorkload</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="classarmnn_1_1_input_layer.xhtml">InputLayer</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td rowspan="2" valign="bottom"><a name="letter_n"></a><table border="0" cellspacing="0" cellpadding="0"><tr><td><div class="ah">&#160;&#160;n&#160;&#160;</div></td></tr></table>
</td>
<td valign="top"><a class="el" href="structarmnn_1_1_rank_queue_descriptor.xhtml">RankQueueDescriptor</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="classarmnn_1_1_sync_mem_generic_workload.xhtml">SyncMemGenericWorkload</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
</tr>
<tr><td valign="top"><a class="el" href="classarmnn_1_1_cl_mean_workload.xhtml">ClMeanWorkload</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="structarmnn_1_1_graph_1_1_input_layers_accessor.xhtml">Graph::InputLayersAccessor</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="structarmnn_1_1_reduce_descriptor.xhtml">ReduceDescriptor</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td rowspan="2" valign="bottom"><a name="letter_t"></a><table border="0" cellspacing="0" cellpadding="0"><tr><td><div class="ah">&#160;&#160;t&#160;&#160;</div></td></tr></table>
</td>
</tr>
<tr><td valign="top"><a class="el" href="classarmnn_1_1_cl_memory_manager.xhtml">ClMemoryManager</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="structarmnn_1_1experimental_1_1_working_mem_handle_1_1_input_mem_descriptor_coords.xhtml">WorkingMemHandle::InputMemDescriptorCoords</a> (<a class="el" href="namespacearmnn_1_1experimental.xhtml">armnn::experimental</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="classarmnn_1_1_neon_abs_workload.xhtml">NeonAbsWorkload</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="classarmnn_1_1_reduce_layer.xhtml">ReduceLayer</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
</tr>
<tr><td valign="top"><a class="el" href="classarmnn_1_1_cl_minimum_workload.xhtml">ClMinimumWorkload</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="classarmnn_1_1_input_slot.xhtml">InputSlot</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="classarmnn_1_1_neon_activation_workload.xhtml">NeonActivationWorkload</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="structarmnn_1_1_reduce_queue_descriptor.xhtml">ReduceQueueDescriptor</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="classarmnn_1_1_tensor.xhtml">Tensor</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
</tr>
<tr><td valign="top"><a class="el" href="classarmnn_1_1_cl_multiplication_workload.xhtml">ClMultiplicationWorkload</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="structarmnn_1_1_instance_normalization_descriptor.xhtml">InstanceNormalizationDescriptor</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="classarmnn_1_1_neon_addition_workload.xhtml">NeonAdditionWorkload</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="classarmnn_1_1_ref_activation_workload.xhtml">RefActivationWorkload</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="classarmnn_1_1_tensor_buffer_array_view.xhtml">TensorBufferArrayView</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
</tr>
<tr><td valign="top"><a class="el" href="classarmnn_1_1_cl_neg_workload.xhtml">ClNegWorkload</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="classarmnn_1_1_instance_normalization_layer.xhtml">InstanceNormalizationLayer</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="classarmnn_1_1_neon_arg_min_max_workload.xhtml">NeonArgMinMaxWorkload</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="classarmnn_1_1_ref_arg_min_max_workload.xhtml">RefArgMinMaxWorkload</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="classarmnn_1_1_tensor_handle.xhtml">TensorHandle</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
</tr>
<tr><td valign="top"><a class="el" href="classarmnn_1_1_cl_normalization_float_workload.xhtml">ClNormalizationFloatWorkload</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="structarmnn_1_1_instance_normalization_queue_descriptor.xhtml">InstanceNormalizationQueueDescriptor</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="classarmnn_1_1_neon_backend.xhtml">NeonBackend</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="classarmnn_1_1_ref_backend.xhtml">RefBackend</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="classarmnn_1_1_tensor_handle_factory_registry.xhtml">TensorHandleFactoryRegistry</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
</tr>
<tr><td valign="top"><a class="el" href="classarmnn_1_1_cl_pad_workload.xhtml">ClPadWorkload</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="classarmnn_1_1_instrument.xhtml">Instrument</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="classarmnn_1_1_neon_backend_model_context.xhtml">NeonBackendModelContext</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="classarmnn_1_1_ref_base_workload.xhtml">RefBaseWorkload</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
</tr>
<tr><td valign="top"><a class="el" href="classarmnn_1_1_cl_permute_workload.xhtml">ClPermuteWorkload</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="classarmnn_1_1_int32_decoder.xhtml">Int32Decoder</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="classarmnn_1_1_neon_base_workload.xhtml">NeonBaseWorkload</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="classarmnn_1_1_ref_batch_mat_mul_workload.xhtml">RefBatchMatMulWorkload</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="structarmnn_1_1_tensor_memory.xhtml">TensorMemory</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
</tr>
<tr><td valign="top"><a class="el" href="classarmnn_1_1_cl_pooling2d_workload.xhtml">ClPooling2dWorkload</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="classarmnn_1_1_int32_encoder.xhtml">Int32Encoder</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="classarmnn_1_1_neon_batch_mat_mul_workload.xhtml">NeonBatchMatMulWorkload</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="classarmnn_1_1_ref_batch_normalization_workload.xhtml">RefBatchNormalizationWorkload</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="structarmnn_1_1_tensor_num_dimensions_are_correct.xhtml">TensorNumDimensionsAreCorrect</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
</tr>
<tr><td valign="top"><a class="el" href="classarmnn_1_1_cl_pooling3d_workload.xhtml">ClPooling3dWorkload</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="classarmnn_1_1_int32_to_int32t_decoder.xhtml">Int32ToInt32tDecoder</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="classarmnn_1_1_neon_batch_normalization_workload.xhtml">NeonBatchNormalizationWorkload</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="classarmnn_1_1_ref_batch_to_space_nd_workload.xhtml">RefBatchToSpaceNdWorkload</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="structarmnn_1_1_tensor_num_dimensions_are_greater_or_equal_to.xhtml">TensorNumDimensionsAreGreaterOrEqualTo</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
</tr>
<tr><td valign="top"><a class="el" href="classarmnn_1_1_cl_prelu_workload.xhtml">ClPreluWorkload</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="classarmnn_1_1_int32_to_int32t_encoder.xhtml">Int32ToInt32tEncoder</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="classarmnn_1_1_neon_batch_to_space_nd_workload.xhtml">NeonBatchToSpaceNdWorkload</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="classarmnn_1_1_ref_cast_workload.xhtml">RefCastWorkload</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="classarmnn_1_1_tensor_shape.xhtml">TensorShape</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
</tr>
<tr><td valign="top"><a class="el" href="classarmnn_1_1_cl_q_lstm_workload.xhtml">ClQLstmWorkload</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="classarmnn_1_1_invalid_argument_exception.xhtml">InvalidArgumentException</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="classarmnn_1_1_neon_cast_workload.xhtml">NeonCastWorkload</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="classarmnn_1_1_ref_channel_shuffle_workload.xhtml">RefChannelShuffleWorkload</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="classarmnn_tf_lite_parser_1_1_tf_lite_parser_impl.xhtml">TfLiteParserImpl</a> (<a class="el" href="namespacearmnn_tf_lite_parser.xhtml">armnnTfLiteParser</a>)&#160;&#160;&#160;</td>
</tr>
<tr><td valign="top"><a class="el" href="classarmnn_1_1_cl_quantized_lstm_workload.xhtml">ClQuantizedLstmWorkload</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="classarmnn_onnx_parser_1_1_i_onnx_parser.xhtml">IOnnxParser</a> (<a class="el" href="namespacearmnn_onnx_parser.xhtml">armnnOnnxParser</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="classarmnn_1_1_neon_channel_shuffle_workload.xhtml">NeonChannelShuffleWorkload</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="classarmnn_1_1_ref_comparison_workload.xhtml">RefComparisonWorkload</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="structarmnn_tf_lite_parser_1_1_i_tf_lite_parser_1_1_tf_lite_parser_options.xhtml">ITfLiteParser::TfLiteParserOptions</a> (<a class="el" href="namespacearmnn_tf_lite_parser.xhtml">armnnTfLiteParser</a>)&#160;&#160;&#160;</td>
</tr>
<tr><td valign="top"><a class="el" href="classarmnn_1_1_cl_quantize_workload.xhtml">ClQuantizeWorkload</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="classarmnn_1_1_i_optimized_network.xhtml">IOptimizedNetwork</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="classarmnn_1_1_neon_comparison_workload.xhtml">NeonComparisonWorkload</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="classarmnn_1_1_ref_concat_workload.xhtml">RefConcatWorkload</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="classarmnn_1_1experimental_1_1_threadpool.xhtml">Threadpool</a> (<a class="el" href="namespacearmnn_1_1experimental.xhtml">armnn::experimental</a>)&#160;&#160;&#160;</td>
</tr>
<tr><td valign="top"><a class="el" href="structarmnn_1_1_cl_rank_workload.xhtml">ClRankWorkload</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="classarmnn_1_1_i_output_slot.xhtml">IOutputSlot</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="classarmnn_1_1_neon_concat_workload.xhtml">NeonConcatWorkload</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="classarmnn_1_1_ref_constant_workload.xhtml">RefConstantWorkload</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="structarmnn_1_1_throwing_strategy.xhtml">ThrowingStrategy</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
</tr>
<tr><td valign="top"><a class="el" href="classarmnn_1_1_cl_reduce_workload.xhtml">ClReduceWorkload</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="classarmnn_1_1_i_profiler.xhtml">IProfiler</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="classarmnn_1_1_neon_constant_workload.xhtml">NeonConstantWorkload</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="classarmnn_1_1_ref_convert_fp16_to_fp32_workload.xhtml">RefConvertFp16ToFp32Workload</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="classarmnn_1_1_timeout_exception.xhtml">TimeoutException</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
</tr>
<tr><td valign="top"><a class="el" href="classarmnn_1_1_cl_reshape_workload.xhtml">ClReshapeWorkload</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="classarmnn_1_1_i_runtime.xhtml">IRuntime</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="classarmnn_1_1_neon_convert_fp16_to_fp32_workload.xhtml">NeonConvertFp16ToFp32Workload</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="classarmnn_1_1_ref_convert_fp32_to_fp16_workload.xhtml">RefConvertFp32ToFp16Workload</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="struct_tosa_assert_size.xhtml">TosaAssertSize</a>&#160;&#160;&#160;</td>
</tr>
<tr><td valign="top"><a class="el" href="classarmnn_1_1_cl_resize_workload.xhtml">ClResizeWorkload</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="structstd_1_1is__floating__point_3_01armnn_1_1_half_01_4.xhtml">is_floating_point&lt; armnn::Half &gt;</a> (<a class="el" href="namespacestd.xhtml">std</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="classarmnn_1_1_neon_convert_fp32_to_fp16_workload.xhtml">NeonConvertFp32ToFp16Workload</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="classarmnn_1_1_ref_convolution2d_workload.xhtml">RefConvolution2dWorkload</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="struct_tosa_container_contains_three_types.xhtml">TosaContainerContainsThreeTypes</a>&#160;&#160;&#160;</td>
</tr>
<tr><td valign="top"><a class="el" href="classarmnn_1_1_cl_rsqrt_workload.xhtml">ClRsqrtWorkload</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="structstd_1_1is__floating__point_3_01const_01armnn_1_1_half_01_4.xhtml">is_floating_point&lt; const armnn::Half &gt;</a> (<a class="el" href="namespacestd.xhtml">std</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="classarmnn_1_1_neon_convolution2d_workload.xhtml">NeonConvolution2dWorkload</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="classarmnn_1_1_ref_convolution3d_workload.xhtml">RefConvolution3dWorkload</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="struct_tosa_container_contains_two_types.xhtml">TosaContainerContainsTwoTypes</a>&#160;&#160;&#160;</td>
</tr>
<tr><td valign="top"><a class="el" href="classarmnn_1_1_cl_runtime_unavailable_exception.xhtml">ClRuntimeUnavailableException</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="structstd_1_1is__floating__point_3_01volatile_01armnn_1_1_half_01_4.xhtml">is_floating_point&lt; volatile armnn::Half &gt;</a> (<a class="el" href="namespacestd.xhtml">std</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="classarmnn_1_1_neon_convolution3d_workload.xhtml">NeonConvolution3dWorkload</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="classarmnn_1_1_ref_debug_workload.xhtml">RefDebugWorkload</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="struct_tosa_operator_attribute_of_any.xhtml">TosaOperatorAttributeOfAny</a>&#160;&#160;&#160;</td>
</tr>
<tr><td valign="top"><a class="el" href="classarmnn_1_1_cl_sin_workload.xhtml">ClSinWorkload</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="classarmnn_serializer_1_1_i_serializer.xhtml">ISerializer</a> (<a class="el" href="namespacearmnn_serializer.xhtml">armnnSerializer</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="classarmnn_1_1_neon_depth_to_space_workload.xhtml">NeonDepthToSpaceWorkload</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="classarmnn_1_1_ref_depth_to_space_workload.xhtml">RefDepthToSpaceWorkload</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="classarmnn_1_1_tosa_ref_backend.xhtml">TosaRefBackend</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
</tr>
<tr><td valign="top"><a class="el" href="classarmnn_1_1_cl_slice_workload.xhtml">ClSliceWorkload</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="structarmnn_1_1optimizations_1_1_is_float16_layer.xhtml">IsFloat16Layer</a> (<a class="el" href="namespacearmnn_1_1optimizations.xhtml">armnn::optimizations</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="classarmnn_1_1_neon_depthwise_convolution_workload.xhtml">NeonDepthwiseConvolutionWorkload</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="classarmnn_1_1_ref_depthwise_convolution2d_workload.xhtml">RefDepthwiseConvolution2dWorkload</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="classarmnn_1_1_tosa_ref_base_workload.xhtml">TosaRefBaseWorkload</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
</tr>
<tr><td valign="top"><a class="el" href="classarmnn_1_1_cl_softmax_workload.xhtml">ClSoftmaxWorkload</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="structarmnn_1_1optimizations_1_1_is_float32_layer.xhtml">IsFloat32Layer</a> (<a class="el" href="namespacearmnn_1_1optimizations.xhtml">armnn::optimizations</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="classarmnn_1_1_neon_dequantize_workload.xhtml">NeonDequantizeWorkload</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="classarmnn_1_1_ref_dequantize_workload.xhtml">RefDequantizeWorkload</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="classarmnn_1_1_tosa_ref_layer_support.xhtml">TosaRefLayerSupport</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
</tr>
<tr><td valign="top"><a class="el" href="classarmnn_1_1_cl_space_to_batch_nd_workload.xhtml">ClSpaceToBatchNdWorkload</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="structarmnn_utils_1_1_is_floating_point_iterator.xhtml">IsFloatingPointIterator</a> (<a class="el" href="namespacearmnn_utils.xhtml">armnnUtils</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="classarmnn_1_1_neon_detection_post_process_workload.xhtml">NeonDetectionPostProcessWorkload</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="classarmnn_1_1_ref_detection_post_process_workload.xhtml">RefDetectionPostProcessWorkload</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="classarmnn_1_1_tosa_ref_memory_manager.xhtml">TosaRefMemoryManager</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
</tr>
<tr><td valign="top"><a class="el" href="classarmnn_1_1_cl_space_to_depth_workload.xhtml">ClSpaceToDepthWorkload</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="structarmnn_1_1_is_half_type.xhtml">IsHalfType</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="classarmnn_1_1_neon_division_workload.xhtml">NeonDivisionWorkload</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="classarmnn_1_1_ref_elementwise_unary_workload.xhtml">RefElementwiseUnaryWorkload</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="classarmnn_1_1_tosa_ref_pre_compiled_workload.xhtml">TosaRefPreCompiledWorkload</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
</tr>
<tr><td valign="top"><a class="el" href="classarmnn_1_1_cl_splitter_workload.xhtml">ClSplitterWorkload</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="structarmnn_1_1_is_memory_source.xhtml">IsMemorySource</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="classarmnn_1_1_neon_exp_workload.xhtml">NeonExpWorkload</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="classarmnn_1_1_ref_elementwise_workload.xhtml">RefElementwiseWorkload</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="classarmnn_1_1_tosa_ref_tensor_handle.xhtml">TosaRefTensorHandle</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
</tr>
<tr><td valign="top"><a class="el" href="classarmnn_1_1_cl_sqrt_workload.xhtml">ClSqrtWorkload</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="structarmnn_1_1_is_memory_source_3_01_memory_source_01_4.xhtml">IsMemorySource&lt; MemorySource &gt;</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="classarmnn_1_1_neon_fill_workload.xhtml">NeonFillWorkload</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="classarmnn_1_1_ref_fake_quantization_float32_workload.xhtml">RefFakeQuantizationFloat32Workload</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="classarmnn_1_1_tosa_ref_tensor_handle_factory.xhtml">TosaRefTensorHandleFactory</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
</tr>
<tr><td valign="top"><a class="el" href="classarmnn_1_1_cl_stack_workload.xhtml">ClStackWorkload</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="classarmnn_1_1_i_strategy.xhtml">IStrategy</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="classarmnn_1_1_neon_floor_float_workload.xhtml">NeonFloorFloatWorkload</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="classarmnn_1_1_ref_fill_workload.xhtml">RefFillWorkload</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="classarmnn_1_1_tosa_ref_workload_factory.xhtml">TosaRefWorkloadFactory</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
</tr>
<tr><td valign="top"><a class="el" href="classarmnn_1_1_cl_strided_slice_workload.xhtml">ClStridedSliceWorkload</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="classarmnn_1_1_i_subgraph_view_converter.xhtml">ISubgraphViewConverter</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="classarmnn_1_1_neon_fully_connected_workload.xhtml">NeonFullyConnectedWorkload</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="classarmnn_1_1_ref_floor_workload.xhtml">RefFloorWorkload</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="struct_tosa_tensor_num_dimensions_within_bounds.xhtml">TosaTensorNumDimensionsWithinBounds</a>&#160;&#160;&#160;</td>
</tr>
<tr><td valign="top"><a class="el" href="classarmnn_1_1_cl_sub_tensor_handle.xhtml">ClSubTensorHandle</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="classarmnn_1_1_i_tensor_handle.xhtml">ITensorHandle</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="classarmnn_1_1_neon_gather_nd_workload.xhtml">NeonGatherNdWorkload</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="classarmnn_1_1_ref_fully_connected_workload.xhtml">RefFullyConnectedWorkload</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="struct_tosa_type_any_of.xhtml">TosaTypeAnyOf</a>&#160;&#160;&#160;</td>
</tr>
<tr><td valign="top"><a class="el" href="classarmnn_1_1_cl_subtraction_workload.xhtml">ClSubtractionWorkload</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="classarmnn_1_1_i_tensor_handle_factory.xhtml">ITensorHandleFactory</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="classarmnn_1_1_neon_gather_workload.xhtml">NeonGatherWorkload</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="classarmnn_1_1_ref_gather_nd_workload.xhtml">RefGatherNdWorkload</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="classarmnn_1_1_transform_iterator.xhtml">TransformIterator</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
</tr>
<tr><td valign="top"><a class="el" href="classarmnn_1_1_cl_tensor_handle.xhtml">ClTensorHandle</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="classarmnn_tf_lite_parser_1_1_i_tf_lite_parser.xhtml">ITfLiteParser</a> (<a class="el" href="namespacearmnn_tf_lite_parser.xhtml">armnnTfLiteParser</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="classarmnn_1_1_neon_instance_normalization_workload.xhtml">NeonInstanceNormalizationWorkload</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="classarmnn_1_1_ref_gather_workload.xhtml">RefGatherWorkload</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="classarmnn_1_1optimizations_1_1_transpose_as_reshape_impl.xhtml">TransposeAsReshapeImpl</a> (<a class="el" href="namespacearmnn_1_1optimizations.xhtml">armnn::optimizations</a>)&#160;&#160;&#160;</td>
</tr>
<tr><td valign="top"><a class="el" href="classarmnn_1_1_cl_tensor_handle_factory.xhtml">ClTensorHandleFactory</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="classarmnn_1_1experimental_1_1_i_working_mem_handle.xhtml">IWorkingMemHandle</a> (<a class="el" href="namespacearmnn_1_1experimental.xhtml">armnn::experimental</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="classarmnn_1_1_neon_interceptor_scheduler.xhtml">NeonInterceptorScheduler</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="classarmnn_1_1_ref_instance_normalization_workload.xhtml">RefInstanceNormalizationWorkload</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="structarmnn_1_1_transpose_convolution2d_descriptor.xhtml">TransposeConvolution2dDescriptor</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
</tr>
<tr><td valign="top"><a class="el" href="classarmnn_1_1_cl_transpose_convolution2d_workload.xhtml">ClTransposeConvolution2dWorkload</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="classarmnn_1_1_i_workload.xhtml">IWorkload</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="classarmnn_1_1_neon_l2_normalization_float_workload.xhtml">NeonL2NormalizationFloatWorkload</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="classarmnn_1_1_ref_l2_normalization_workload.xhtml">RefL2NormalizationWorkload</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="classarmnn_1_1_transpose_convolution2d_layer.xhtml">TransposeConvolution2dLayer</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
</tr>
<tr><td valign="top"><a class="el" href="classarmnn_1_1_cl_transpose_workload.xhtml">ClTransposeWorkload</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="classarmnn_1_1_i_workload_factory.xhtml">IWorkloadFactory</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="classarmnn_1_1_neon_layer_support.xhtml">NeonLayerSupport</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="classarmnn_1_1_ref_layer_support.xhtml">RefLayerSupport</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="structarmnn_1_1_transpose_convolution2d_queue_descriptor.xhtml">TransposeConvolution2dQueueDescriptor</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
</tr>
<tr><td valign="top"><a class="el" href="classarmnn_1_1_cl_tuned_parameters.xhtml">ClTunedParameters</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td rowspan="2" valign="bottom"><a name="letter_j"></a><table border="0" cellspacing="0" cellpadding="0"><tr><td><div class="ah">&#160;&#160;j&#160;&#160;</div></td></tr></table>
</td>
<td valign="top"><a class="el" href="classarmnn_1_1_neon_logical_and_workload.xhtml">NeonLogicalAndWorkload</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="classarmnn_1_1_ref_logical_binary_workload.xhtml">RefLogicalBinaryWorkload</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="structarmnn_1_1_transpose_descriptor.xhtml">TransposeDescriptor</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
</tr>
<tr><td valign="top"><a class="el" href="classarmnn_1_1_cl_unidirectional_sequence_lstm_float_workload.xhtml">ClUnidirectionalSequenceLstmFloatWorkload</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="classarmnn_1_1_neon_logical_not_workload.xhtml">NeonLogicalNotWorkload</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="classarmnn_1_1_ref_logical_unary_workload.xhtml">RefLogicalUnaryWorkload</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="classarmnn_1_1_transpose_layer.xhtml">TransposeLayer</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
</tr>
<tr><td valign="top"><a class="el" href="classarmnn_1_1_cl_workload_factory.xhtml">ClWorkloadFactory</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="structarmnn_1_1_json_child_object.xhtml">JsonChildObject</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="classarmnn_1_1_neon_logical_or_workload.xhtml">NeonLogicalOrWorkload</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="classarmnn_1_1_ref_log_softmax_workload.xhtml">RefLogSoftmaxWorkload</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="structarmnn_1_1_transpose_queue_descriptor.xhtml">TransposeQueueDescriptor</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
</tr>
<tr><td valign="top"><a class="el" href="structarmnn_1_1_comparison_descriptor.xhtml">ComparisonDescriptor</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="structarmnn_1_1timelinedecoder_1_1_j_s_o_n_timeline_decoder_1_1_j_s_o_n_entity.xhtml">JSONTimelineDecoder::JSONEntity</a> (<a class="el" href="namespacearmnn_1_1timelinedecoder.xhtml">armnn::timelinedecoder</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="classarmnn_1_1_neon_log_softmax_workload.xhtml">NeonLogSoftmaxWorkload</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="classarmnn_1_1_ref_lstm_workload.xhtml">RefLstmWorkload</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="structarmnn_1_1_type_any_of.xhtml">TypeAnyOf</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
</tr>
<tr><td valign="top"><a class="el" href="classarmnn_1_1_comparison_layer.xhtml">ComparisonLayer</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="classarmnn_1_1_json_printer.xhtml">JsonPrinter</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="classarmnn_1_1_neon_log_workload.xhtml">NeonLogWorkload</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="classarmnn_1_1_ref_mean_workload.xhtml">RefMeanWorkload</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="classarmnn_1_1_typed_iterator.xhtml">TypedIterator</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
</tr>
<tr><td valign="top"><a class="el" href="structarmnn_1_1_comparison_queue_descriptor.xhtml">ComparisonQueueDescriptor</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="classarmnn_1_1timelinedecoder_1_1_j_s_o_n_timeline_decoder.xhtml">JSONTimelineDecoder</a> (<a class="el" href="namespacearmnn_1_1timelinedecoder.xhtml">armnn::timelinedecoder</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="classarmnn_1_1_neon_lstm_float_workload.xhtml">NeonLstmFloatWorkload</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="classarmnn_1_1_ref_memory_manager.xhtml">RefMemoryManager</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="classarmnn_1_1_typed_workload.xhtml">TypedWorkload</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
</tr>
<tr><td valign="top"><a class="el" href="classarmnn_1_1_concat_layer.xhtml">ConcatLayer</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="classarmnn_1_1_json_utils.xhtml">JsonUtils</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="classarmnn_1_1_neon_maximum_workload.xhtml">NeonMaximumWorkload</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="classarmnn_1_1_ref_normalization_workload.xhtml">RefNormalizationWorkload</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="structarmnn_1_1_type_is.xhtml">TypeIs</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
</tr>
<tr><td valign="top"><a class="el" href="structarmnn_1_1_concat_queue_descriptor.xhtml">ConcatQueueDescriptor</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td rowspan="2" valign="bottom"><a name="letter_l"></a><table border="0" cellspacing="0" cellpadding="0"><tr><td><div class="ah">&#160;&#160;l&#160;&#160;</div></td></tr></table>
</td>
<td valign="top"><a class="el" href="classarmnn_1_1_neon_mean_workload.xhtml">NeonMeanWorkload</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="classarmnn_1_1_ref_pad_workload.xhtml">RefPadWorkload</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="structarmnn_1_1_type_not_per_axis_quantized.xhtml">TypeNotPerAxisQuantized</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
</tr>
<tr><td valign="top"><a class="el" href="classarmnn_1_1_constant_layer.xhtml">ConstantLayer</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="classarmnn_1_1_neon_memory_manager.xhtml">NeonMemoryManager</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="classarmnn_1_1_ref_permute_workload.xhtml">RefPermuteWorkload</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="structarmnn_1_1_types_are_equal.xhtml">TypesAreEqual</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
</tr>
<tr><td valign="top"><a class="el" href="classarmnn_1_1_constant_memory_strategy.xhtml">ConstantMemoryStrategy</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="structarmnn_1_1_l2_normalization_descriptor.xhtml">L2NormalizationDescriptor</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="classarmnn_1_1_neon_minimum_workload.xhtml">NeonMinimumWorkload</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="classarmnn_1_1_ref_pooling2d_workload.xhtml">RefPooling2dWorkload</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td rowspan="2" valign="bottom"><a name="letter_u"></a><table border="0" cellspacing="0" cellpadding="0"><tr><td><div class="ah">&#160;&#160;u&#160;&#160;</div></td></tr></table>
</td>
</tr>
<tr><td valign="top"><a class="el" href="structarmnn_1_1_constant_queue_descriptor.xhtml">ConstantQueueDescriptor</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="classarmnn_1_1_l2_normalization_layer.xhtml">L2NormalizationLayer</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="classarmnn_1_1_neon_multiplication_workload.xhtml">NeonMultiplicationWorkload</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="classarmnn_1_1_ref_pooling3d_workload.xhtml">RefPooling3dWorkload</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
</tr>
<tr><td valign="top"><a class="el" href="classarmnn_1_1_const_passthrough_tensor_handle.xhtml">ConstPassthroughTensorHandle</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="structarmnn_1_1_l2_normalization_queue_descriptor.xhtml">L2NormalizationQueueDescriptor</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="classarmnn_1_1_neon_neg_workload.xhtml">NeonNegWorkload</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="classarmnn_1_1_ref_prelu_workload.xhtml">RefPreluWorkload</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="classarmnn_1_1_unidirectional_sequence_lstm_layer.xhtml">UnidirectionalSequenceLstmLayer</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
</tr>
<tr><td valign="top"><a class="el" href="structarmnn_1_1_construct_in_place.xhtml">ConstructInPlace</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="classarmnn_1_1_layer.xhtml">Layer</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="classarmnn_1_1_neon_normalization_float_workload.xhtml">NeonNormalizationFloatWorkload</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="classarmnn_1_1_ref_q_lstm_workload.xhtml">RefQLstmWorkload</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="structarmnn_1_1_unidirectional_sequence_lstm_queue_descriptor.xhtml">UnidirectionalSequenceLstmQueueDescriptor</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
</tr>
<tr><td valign="top"><a class="el" href="classarmnn_1_1_const_tensor.xhtml">ConstTensor</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="classarmnn_1_1_graph_1_1_layer_in_graph_3_01_constant_layer_01_4.xhtml">Graph::LayerInGraph&lt; ConstantLayer &gt;</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="classarmnn_1_1_neon_pad_workload.xhtml">NeonPadWorkload</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="classarmnn_1_1_ref_quantize_workload.xhtml">RefQuantizeWorkload</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="classarmnn_1_1_unimplemented_exception.xhtml">UnimplementedException</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
</tr>
<tr><td valign="top"><a class="el" href="classarmnn_1_1_const_tensor_handle.xhtml">ConstTensorHandle</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="classarmnn_1_1_graph_1_1_layer_in_graph_3_01_input_layer_01_4.xhtml">Graph::LayerInGraph&lt; InputLayer &gt;</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="classarmnn_1_1_neon_permute_workload.xhtml">NeonPermuteWorkload</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="structarmnn_1_1_ref_rank_workload.xhtml">RefRankWorkload</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="classarmnn_1_1_unmap_layer.xhtml">UnmapLayer</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
</tr>
<tr><td valign="top"><a class="el" href="classarmnn__driver_1_1_const_tensor_pin.xhtml">ConstTensorPin</a> (<a class="el" href="namespacearmnn__driver.xhtml">armnn_driver</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="classarmnn_1_1_graph_1_1_layer_in_graph_3_01_output_layer_01_4.xhtml">Graph::LayerInGraph&lt; OutputLayer &gt;</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="classarmnn_1_1_neon_pooling2d_workload.xhtml">NeonPooling2dWorkload</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="classarmnn_1_1_ref_reduce_workload.xhtml">RefReduceWorkload</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="structarmnn_1_1_unmap_queue_descriptor.xhtml">UnmapQueueDescriptor</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
</tr>
<tr><td valign="top"><a class="el" href="structarmnn__driver_1_1_conversion_data.xhtml">ConversionData</a> (<a class="el" href="namespacearmnn__driver.xhtml">armnn_driver</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="classarmnn__driver_1_1_layer_input_handle.xhtml">LayerInputHandle</a> (<a class="el" href="namespacearmnn__driver.xhtml">armnn_driver</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="classarmnn_1_1_neon_pooling3d_workload.xhtml">NeonPooling3dWorkload</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="classarmnn_1_1_ref_reshape_workload.xhtml">RefReshapeWorkload</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="classarmnn_1_1_unmap_workload.xhtml">UnmapWorkload</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
</tr>
<tr><td valign="top"><a class="el" href="classarmnn_1_1optimizations_1_1_convert_constants.xhtml">ConvertConstants</a> (<a class="el" href="namespacearmnn_1_1optimizations.xhtml">armnn::optimizations</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="classarmnn_1_1_layer_support_base.xhtml">LayerSupportBase</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="classarmnn_1_1_neon_prelu_workload.xhtml">NeonPreluWorkload</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="classarmnn_1_1_ref_resize_workload.xhtml">RefResizeWorkload</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="classarmnn__driver_1_1_unsupported_operand.xhtml">UnsupportedOperand</a> (<a class="el" href="namespacearmnn__driver.xhtml">armnn_driver</a>)&#160;&#160;&#160;</td>
</tr>
<tr><td valign="top"><a class="el" href="classarmnn_1_1optimizations_1_1_convert_const_dequantisation_layers_to_const_layers_impl.xhtml">ConvertConstDequantisationLayersToConstLayersImpl</a> (<a class="el" href="namespacearmnn_1_1optimizations.xhtml">armnn::optimizations</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="classarmnn_1_1_layer_support_handle.xhtml">LayerSupportHandle</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="classarmnn_1_1_neon_q_lstm_workload.xhtml">NeonQLstmWorkload</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="structarmnn_1_1_ref_shape_workload.xhtml">RefShapeWorkload</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td rowspan="2" valign="bottom"><a name="letter_v"></a><table border="0" cellspacing="0" cellpadding="0"><tr><td><div class="ah">&#160;&#160;v&#160;&#160;</div></td></tr></table>
</td>
</tr>
<tr><td valign="top"><a class="el" href="classarmnn_1_1optimizations_1_1_convert_const_permute_layers_to_const_layers.xhtml">ConvertConstPermuteLayersToConstLayers</a> (<a class="el" href="namespacearmnn_1_1optimizations.xhtml">armnn::optimizations</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="structarmnn_1_1_layer_type_of_impl.xhtml">LayerTypeOfImpl</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="classarmnn_1_1_neon_quantized_lstm_workload.xhtml">NeonQuantizedLstmWorkload</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="classarmnn_1_1_ref_slice_workload.xhtml">RefSliceWorkload</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
</tr>
<tr><td valign="top"><a class="el" href="classarmnn__driver_1_1_converter.xhtml">Converter</a> (<a class="el" href="namespacearmnn__driver.xhtml">armnn_driver</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="structarmnn_1_1_layer_type_of_impl_3_01_layer_type_1_1_activation_01_4.xhtml">LayerTypeOfImpl&lt; LayerType::Activation &gt;</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="classarmnn_1_1_neon_quantize_workload.xhtml">NeonQuantizeWorkload</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="classarmnn_1_1_ref_softmax_workload.xhtml">RefSoftmaxWorkload</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="classarmnn_1_1_backend_options_1_1_var.xhtml">BackendOptions::Var</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
</tr>
<tr><td valign="top"><a class="el" href="classarmnn_1_1_convert_fp16_to_fp32_layer.xhtml">ConvertFp16ToFp32Layer</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="structarmnn_1_1_layer_type_of_impl_3_01_layer_type_1_1_addition_01_4.xhtml">LayerTypeOfImpl&lt; LayerType::Addition &gt;</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="structarmnn_1_1_neon_rank_workload.xhtml">NeonRankWorkload</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="classarmnn_1_1_ref_space_to_batch_nd_workload.xhtml">RefSpaceToBatchNdWorkload</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="structarmnn_1_1_concat_queue_descriptor_1_1_view_origin.xhtml">ConcatQueueDescriptor::ViewOrigin</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
</tr>
<tr><td valign="top"><a class="el" href="structarmnn_1_1_convert_fp16_to_fp32_queue_descriptor.xhtml">ConvertFp16ToFp32QueueDescriptor</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="structarmnn_1_1_layer_type_of_impl_3_01_layer_type_1_1_arg_min_max_01_4.xhtml">LayerTypeOfImpl&lt; LayerType::ArgMinMax &gt;</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="classarmnn_1_1_neon_reduce_workload.xhtml">NeonReduceWorkload</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="classarmnn_1_1_ref_space_to_depth_workload.xhtml">RefSpaceToDepthWorkload</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="structarmnn_1_1_splitter_queue_descriptor_1_1_view_origin.xhtml">SplitterQueueDescriptor::ViewOrigin</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
</tr>
<tr><td valign="top"><a class="el" href="classarmnn_1_1optimizations_1_1_convert_fp32_network_to_fp16_impl.xhtml">ConvertFp32NetworkToFp16Impl</a> (<a class="el" href="namespacearmnn_1_1optimizations.xhtml">armnn::optimizations</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="structarmnn_1_1_layer_type_of_impl_3_01_layer_type_1_1_batch_mat_mul_01_4.xhtml">LayerTypeOfImpl&lt; LayerType::BatchMatMul &gt;</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="classarmnn_1_1_neon_reshape_workload.xhtml">NeonReshapeWorkload</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="classarmnn_1_1_ref_splitter_workload.xhtml">RefSplitterWorkload</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="structarmnn_1_1_views_descriptor.xhtml">ViewsDescriptor</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
</tr>
<tr><td valign="top"><a class="el" href="classarmnn_1_1_convert_fp32_to_fp16_layer.xhtml">ConvertFp32ToFp16Layer</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="structarmnn_1_1_layer_type_of_impl_3_01_layer_type_1_1_batch_normalization_01_4.xhtml">LayerTypeOfImpl&lt; LayerType::BatchNormalization &gt;</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="classarmnn_1_1_neon_resize_workload.xhtml">NeonResizeWorkload</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="classarmnn_1_1_ref_stack_workload.xhtml">RefStackWorkload</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td rowspan="2" valign="bottom"><a name="letter_w"></a><table border="0" cellspacing="0" cellpadding="0"><tr><td><div class="ah">&#160;&#160;w&#160;&#160;</div></td></tr></table>
</td>
</tr>
<tr><td valign="top"><a class="el" href="structarmnn_1_1_convert_fp32_to_fp16_queue_descriptor.xhtml">ConvertFp32ToFp16QueueDescriptor</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="structarmnn_1_1_layer_type_of_impl_3_01_layer_type_1_1_batch_to_space_nd_01_4.xhtml">LayerTypeOfImpl&lt; LayerType::BatchToSpaceNd &gt;</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="classarmnn_1_1_neon_rsqrt_workload.xhtml">NeonRsqrtWorkload</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="classarmnn_1_1_ref_strided_slice_workload.xhtml">RefStridedSliceWorkload</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
</tr>
<tr><td valign="top"><a class="el" href="structarmnn_1_1_convolution2d_descriptor.xhtml">Convolution2dDescriptor</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="structarmnn_1_1_layer_type_of_impl_3_01_layer_type_1_1_cast_01_4.xhtml">LayerTypeOfImpl&lt; LayerType::Cast &gt;</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="classarmnn_1_1_neon_sin_workload.xhtml">NeonSinWorkload</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="classarmnn_1_1_ref_tensor_handle.xhtml">RefTensorHandle</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="classarmnn_1_1_wall_clock_timer.xhtml">WallClockTimer</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
</tr>
<tr><td valign="top"><a class="el" href="classarmnn_1_1_convolution2d_layer.xhtml">Convolution2dLayer</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="structarmnn_1_1_layer_type_of_impl_3_01_layer_type_1_1_channel_shuffle_01_4.xhtml">LayerTypeOfImpl&lt; LayerType::ChannelShuffle &gt;</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="classarmnn_1_1_neon_slice_workload.xhtml">NeonSliceWorkload</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="classarmnn_1_1_ref_tensor_handle_factory.xhtml">RefTensorHandleFactory</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="structarmnn_1_1experimental_1_1_working_mem_descriptor.xhtml">WorkingMemDescriptor</a> (<a class="el" href="namespacearmnn_1_1experimental.xhtml">armnn::experimental</a>)&#160;&#160;&#160;</td>
</tr>
<tr><td valign="top"><a class="el" href="structarmnn_1_1_convolution2d_queue_descriptor.xhtml">Convolution2dQueueDescriptor</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="structarmnn_1_1_layer_type_of_impl_3_01_layer_type_1_1_comparison_01_4.xhtml">LayerTypeOfImpl&lt; LayerType::Comparison &gt;</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="classarmnn_1_1_neon_softmax_workload.xhtml">NeonSoftmaxWorkload</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="classarmnn_1_1_ref_transpose_convolution2d_workload.xhtml">RefTransposeConvolution2dWorkload</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="classarmnn_1_1experimental_1_1_working_mem_handle.xhtml">WorkingMemHandle</a> (<a class="el" href="namespacearmnn_1_1experimental.xhtml">armnn::experimental</a>)&#160;&#160;&#160;</td>
</tr>
<tr><td valign="top"><a class="el" href="structarmnn_1_1_convolution3d_descriptor.xhtml">Convolution3dDescriptor</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="structarmnn_1_1_layer_type_of_impl_3_01_layer_type_1_1_concat_01_4.xhtml">LayerTypeOfImpl&lt; LayerType::Concat &gt;</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="classarmnn_1_1_neon_space_to_batch_nd_workload.xhtml">NeonSpaceToBatchNdWorkload</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="classarmnn_1_1_ref_transpose_workload.xhtml">RefTransposeWorkload</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="classarmnn_1_1_workload_data_collector.xhtml">WorkloadDataCollector</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
</tr>
<tr><td valign="top"><a class="el" href="classarmnn_1_1_convolution3d_layer.xhtml">Convolution3dLayer</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="structarmnn_1_1_layer_type_of_impl_3_01_layer_type_1_1_constant_01_4.xhtml">LayerTypeOfImpl&lt; LayerType::Constant &gt;</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="classarmnn_1_1_neon_space_to_depth_workload.xhtml">NeonSpaceToDepthWorkload</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="classarmnn_1_1_ref_unidirectional_sequence_lstm_workload.xhtml">RefUnidirectionalSequenceLstmWorkload</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="classarmnn_1_1_workload_factory_base.xhtml">WorkloadFactoryBase</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
</tr>
<tr><td valign="top"><a class="el" href="structarmnn_1_1_convolution3d_queue_descriptor.xhtml">Convolution3dQueueDescriptor</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="structarmnn_1_1_layer_type_of_impl_3_01_layer_type_1_1_convert_fp16_to_fp32_01_4.xhtml">LayerTypeOfImpl&lt; LayerType::ConvertFp16ToFp32 &gt;</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="classarmnn_1_1_neon_splitter_workload.xhtml">NeonSplitterWorkload</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="classarmnn_1_1_ref_workload_factory.xhtml">RefWorkloadFactory</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="structarmnn_1_1_workload_info.xhtml">WorkloadInfo</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
</tr>
<tr><td valign="top"><a class="el" href="classarmnn_1_1_copy_mem_generic_workload.xhtml">CopyMemGenericWorkload</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="structarmnn_1_1_layer_type_of_impl_3_01_layer_type_1_1_convert_fp32_to_fp16_01_4.xhtml">LayerTypeOfImpl&lt; LayerType::ConvertFp32ToFp16 &gt;</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="classarmnn_1_1_neon_sqrt_workload.xhtml">NeonSqrtWorkload</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="structarmnn_1_1_reshape_descriptor.xhtml">ReshapeDescriptor</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td></td></tr>
<tr><td valign="top"><a class="el" href="structarmnn_1_1_i_runtime_1_1_creation_options.xhtml">IRuntime::CreationOptions</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="structarmnn_1_1_layer_type_of_impl_3_01_layer_type_1_1_convolution2d_01_4.xhtml">LayerTypeOfImpl&lt; LayerType::Convolution2d &gt;</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="classarmnn_1_1_neon_stack_workload.xhtml">NeonStackWorkload</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td valign="top"><a class="el" href="classarmnn_1_1_reshape_layer.xhtml">ReshapeLayer</a> (<a class="el" href="namespacearmnn.xhtml">armnn</a>)&#160;&#160;&#160;</td>
<td></td></tr>
<tr><td></td><td></td><td></td><td></td><td></td></tr>
</table>
<div class="qindex"><a class="qindex" href="#letter_a">a</a>&#160;|&#160;<a class="qindex" href="#letter_b">b</a>&#160;|&#160;<a class="qindex" href="#letter_c">c</a>&#160;|&#160;<a class="qindex" href="#letter_d">d</a>&#160;|&#160;<a class="qindex" href="#letter_e">e</a>&#160;|&#160;<a class="qindex" href="#letter_f">f</a>&#160;|&#160;<a class="qindex" href="#letter_g">g</a>&#160;|&#160;<a class="qindex" href="#letter_h">h</a>&#160;|&#160;<a class="qindex" href="#letter_i">i</a>&#160;|&#160;<a class="qindex" href="#letter_j">j</a>&#160;|&#160;<a class="qindex" href="#letter_l">l</a>&#160;|&#160;<a class="qindex" href="#letter_m">m</a>&#160;|&#160;<a class="qindex" href="#letter_n">n</a>&#160;|&#160;<a class="qindex" href="#letter_o">o</a>&#160;|&#160;<a class="qindex" href="#letter_p">p</a>&#160;|&#160;<a class="qindex" href="#letter_q">q</a>&#160;|&#160;<a class="qindex" href="#letter_r">r</a>&#160;|&#160;<a class="qindex" href="#letter_s">s</a>&#160;|&#160;<a class="qindex" href="#letter_t">t</a>&#160;|&#160;<a class="qindex" href="#letter_u">u</a>&#160;|&#160;<a class="qindex" href="#letter_v">v</a>&#160;|&#160;<a class="qindex" href="#letter_w">w</a></div>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="footer">Generated on Wed Mar 22 2023 15:53:10 for ArmNN by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.17 </li>
  </ul>
</div>
</body>
</html>
