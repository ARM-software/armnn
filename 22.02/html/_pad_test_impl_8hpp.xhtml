<!-- Copyright (c) 2020 ARM Limited. -->
<!--                                 -->
<!-- SPDX-License-Identifier: MIT    -->
<!--                                 -->
<!-- HTML header for doxygen 1.8.13-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.13"/>
<meta name="robots" content="NOINDEX, NOFOLLOW" />
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>ArmNN: src/backends/backendsCommon/test/layerTests/PadTestImpl.hpp File Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script><script type="text/javascript" src="http://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="stylesheet.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <img alt="ArmNN" src="Arm_NN_horizontal_blue.png" style="max-width: 10rem; margin-top: .5rem; margin-left 10px"/>
  <td style="padding-left: 0.5em;">
   <div id="projectname">
   &#160;<span id="projectnumber">22.02</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.13 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
$(document).ready(function(){initNavTree('_pad_test_impl_8hpp.xhtml','');});
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="summary">
<a href="#func-members">Functions</a>  </div>
  <div class="headertitle">
<div class="title">PadTestImpl.hpp File Reference</div>  </div>
</div><!--header-->
<div class="contents">
<div class="textblock"><code>#include &lt;<a class="el" href="include_2armnn_test_utils_2_layer_test_result_8hpp_source.xhtml">armnnTestUtils/LayerTestResult.hpp</a>&gt;</code><br />
<code>#include &lt;<a class="el" href="_resolve_type_8hpp_source.xhtml">ResolveType.hpp</a>&gt;</code><br />
<code>#include &lt;<a class="el" href="_types_8hpp_source.xhtml">armnn/Types.hpp</a>&gt;</code><br />
<code>#include &lt;<a class="el" href="_i_backend_internal_8hpp_source.xhtml">armnn/backends/IBackendInternal.hpp</a>&gt;</code><br />
<code>#include &lt;<a class="el" href="include_2armnn_2backends_2_workload_factory_8hpp_source.xhtml">armnn/backends/WorkloadFactory.hpp</a>&gt;</code><br />
</div>
<p><a href="_pad_test_impl_8hpp_source.xhtml">Go to the source code of this file.</a></p>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="func-members"></a>
Functions</h2></td></tr>
<tr class="memitem:accd6a8ab9a490e06e545bc3c8768d0f1"><td class="memTemplParams" colspan="2">template&lt;armnn::DataType ArmnnType, typename T  = armnn::ResolveType&lt;ArmnnType&gt;&gt; </td></tr>
<tr class="memitem:accd6a8ab9a490e06e545bc3c8768d0f1"><td class="memTemplItemLeft" align="right" valign="top"><a class="el" href="struct_layer_test_result.xhtml">LayerTestResult</a>&lt; T, 2 &gt;&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="_pad_test_impl_8hpp.xhtml#accd6a8ab9a490e06e545bc3c8768d0f1">Pad2dTestCommon</a> (<a class="el" href="classarmnn_1_1_i_workload_factory.xhtml">armnn::IWorkloadFactory</a> &amp;workloadFactory, const <a class="el" href="classarmnn_1_1_i_backend_internal.xhtml#a693b40e6b94e958836aeb0410ca186bd">armnn::IBackendInternal::IMemoryManagerSharedPtr</a> &amp;memoryManager, const <a class="el" href="classarmnn_1_1_i_tensor_handle_factory.xhtml">armnn::ITensorHandleFactory</a> &amp;tensorHandleFactory, float qScale, int32_t qOffset, const float customPaddingValue=0.0f)</td></tr>
<tr class="separator:accd6a8ab9a490e06e545bc3c8768d0f1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a71ddcc5b0a641c035988a5e9df441c3a"><td class="memTemplParams" colspan="2">template&lt;armnn::DataType ArmnnType, typename T  = armnn::ResolveType&lt;ArmnnType&gt;&gt; </td></tr>
<tr class="memitem:a71ddcc5b0a641c035988a5e9df441c3a"><td class="memTemplItemLeft" align="right" valign="top"><a class="el" href="struct_layer_test_result.xhtml">LayerTestResult</a>&lt; T, 3 &gt;&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="_pad_test_impl_8hpp.xhtml#a71ddcc5b0a641c035988a5e9df441c3a">Pad3dTestCommon</a> (<a class="el" href="classarmnn_1_1_i_workload_factory.xhtml">armnn::IWorkloadFactory</a> &amp;workloadFactory, const <a class="el" href="classarmnn_1_1_i_backend_internal.xhtml#a693b40e6b94e958836aeb0410ca186bd">armnn::IBackendInternal::IMemoryManagerSharedPtr</a> &amp;memoryManager, const <a class="el" href="classarmnn_1_1_i_tensor_handle_factory.xhtml">armnn::ITensorHandleFactory</a> &amp;tensorHandleFactory, float qScale, int32_t qOffset)</td></tr>
<tr class="separator:a71ddcc5b0a641c035988a5e9df441c3a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa84e31895ca42da6a5ba6268ee247dec"><td class="memTemplParams" colspan="2">template&lt;armnn::DataType ArmnnType, typename T  = armnn::ResolveType&lt;ArmnnType&gt;&gt; </td></tr>
<tr class="memitem:aa84e31895ca42da6a5ba6268ee247dec"><td class="memTemplItemLeft" align="right" valign="top"><a class="el" href="struct_layer_test_result.xhtml">LayerTestResult</a>&lt; T, 4 &gt;&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="_pad_test_impl_8hpp.xhtml#aa84e31895ca42da6a5ba6268ee247dec">Pad4dTestCommon</a> (<a class="el" href="classarmnn_1_1_i_workload_factory.xhtml">armnn::IWorkloadFactory</a> &amp;workloadFactory, const <a class="el" href="classarmnn_1_1_i_backend_internal.xhtml#a693b40e6b94e958836aeb0410ca186bd">armnn::IBackendInternal::IMemoryManagerSharedPtr</a> &amp;memoryManager, const <a class="el" href="classarmnn_1_1_i_tensor_handle_factory.xhtml">armnn::ITensorHandleFactory</a> &amp;tensorHandleFactory, float qScale, int32_t qOffset)</td></tr>
<tr class="separator:aa84e31895ca42da6a5ba6268ee247dec"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae53d36c2ab90a692c77b3ad4ba57254e"><td class="memTemplParams" colspan="2">template&lt;armnn::DataType ArmnnType, typename T  = armnn::ResolveType&lt;ArmnnType&gt;&gt; </td></tr>
<tr class="memitem:ae53d36c2ab90a692c77b3ad4ba57254e"><td class="memTemplItemLeft" align="right" valign="top"><a class="el" href="struct_layer_test_result.xhtml">LayerTestResult</a>&lt; T, 2 &gt;&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="_pad_test_impl_8hpp.xhtml#ae53d36c2ab90a692c77b3ad4ba57254e">PadQAsymmTestCommon</a> (<a class="el" href="classarmnn_1_1_i_workload_factory.xhtml">armnn::IWorkloadFactory</a> &amp;workloadFactory, const <a class="el" href="classarmnn_1_1_i_backend_internal.xhtml#a693b40e6b94e958836aeb0410ca186bd">armnn::IBackendInternal::IMemoryManagerSharedPtr</a> &amp;memoryManager, const <a class="el" href="classarmnn_1_1_i_tensor_handle_factory.xhtml">armnn::ITensorHandleFactory</a> &amp;tensorHandleFactory, float qScale, int32_t qOffset, const float customPaddingValue=0.0f)</td></tr>
<tr class="separator:ae53d36c2ab90a692c77b3ad4ba57254e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa65827cf232a0b5791b20eb8b03d9c5c"><td class="memItemLeft" align="right" valign="top"><a class="el" href="struct_layer_test_result.xhtml">LayerTestResult</a>&lt; uint8_t, 2 &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_pad_test_impl_8hpp.xhtml#aa65827cf232a0b5791b20eb8b03d9c5c">PadUint82dTest</a> (<a class="el" href="classarmnn_1_1_i_workload_factory.xhtml">armnn::IWorkloadFactory</a> &amp;workloadFactory, const <a class="el" href="classarmnn_1_1_i_backend_internal.xhtml#a693b40e6b94e958836aeb0410ca186bd">armnn::IBackendInternal::IMemoryManagerSharedPtr</a> &amp;memoryManager, const <a class="el" href="classarmnn_1_1_i_tensor_handle_factory.xhtml">armnn::ITensorHandleFactory</a> &amp;tensorHandleFactory)</td></tr>
<tr class="separator:aa65827cf232a0b5791b20eb8b03d9c5c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4e40e8762c9877ba27e31e2252965c42"><td class="memItemLeft" align="right" valign="top"><a class="el" href="struct_layer_test_result.xhtml">LayerTestResult</a>&lt; uint8_t, 2 &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_pad_test_impl_8hpp.xhtml#a4e40e8762c9877ba27e31e2252965c42">PadUint82dCustomPaddingTest</a> (<a class="el" href="classarmnn_1_1_i_workload_factory.xhtml">armnn::IWorkloadFactory</a> &amp;workloadFactory, const <a class="el" href="classarmnn_1_1_i_backend_internal.xhtml#a693b40e6b94e958836aeb0410ca186bd">armnn::IBackendInternal::IMemoryManagerSharedPtr</a> &amp;memoryManager, const <a class="el" href="classarmnn_1_1_i_tensor_handle_factory.xhtml">armnn::ITensorHandleFactory</a> &amp;tensorHandleFactory)</td></tr>
<tr class="separator:a4e40e8762c9877ba27e31e2252965c42"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aff0eabfd7144785d8c5bdc8cf2ff3c46"><td class="memItemLeft" align="right" valign="top"><a class="el" href="struct_layer_test_result.xhtml">LayerTestResult</a>&lt; uint8_t, 3 &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_pad_test_impl_8hpp.xhtml#aff0eabfd7144785d8c5bdc8cf2ff3c46">PadUint83dTest</a> (<a class="el" href="classarmnn_1_1_i_workload_factory.xhtml">armnn::IWorkloadFactory</a> &amp;workloadFactory, const <a class="el" href="classarmnn_1_1_i_backend_internal.xhtml#a693b40e6b94e958836aeb0410ca186bd">armnn::IBackendInternal::IMemoryManagerSharedPtr</a> &amp;memoryManager, const <a class="el" href="classarmnn_1_1_i_tensor_handle_factory.xhtml">armnn::ITensorHandleFactory</a> &amp;tensorHandleFactory)</td></tr>
<tr class="separator:aff0eabfd7144785d8c5bdc8cf2ff3c46"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a712c14035a69b62f6b954e35b0ed728d"><td class="memItemLeft" align="right" valign="top"><a class="el" href="struct_layer_test_result.xhtml">LayerTestResult</a>&lt; uint8_t, 4 &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_pad_test_impl_8hpp.xhtml#a712c14035a69b62f6b954e35b0ed728d">PadUint84dTest</a> (<a class="el" href="classarmnn_1_1_i_workload_factory.xhtml">armnn::IWorkloadFactory</a> &amp;workloadFactory, const <a class="el" href="classarmnn_1_1_i_backend_internal.xhtml#a693b40e6b94e958836aeb0410ca186bd">armnn::IBackendInternal::IMemoryManagerSharedPtr</a> &amp;memoryManager, const <a class="el" href="classarmnn_1_1_i_tensor_handle_factory.xhtml">armnn::ITensorHandleFactory</a> &amp;tensorHandleFactory)</td></tr>
<tr class="separator:a712c14035a69b62f6b954e35b0ed728d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3d33148611360a0755e7c437e2e683fd"><td class="memItemLeft" align="right" valign="top"><a class="el" href="struct_layer_test_result.xhtml">LayerTestResult</a>&lt; float, 2 &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_pad_test_impl_8hpp.xhtml#a3d33148611360a0755e7c437e2e683fd">PadFloat322dTest</a> (<a class="el" href="classarmnn_1_1_i_workload_factory.xhtml">armnn::IWorkloadFactory</a> &amp;workloadFactory, const <a class="el" href="classarmnn_1_1_i_backend_internal.xhtml#a693b40e6b94e958836aeb0410ca186bd">armnn::IBackendInternal::IMemoryManagerSharedPtr</a> &amp;memoryManager, const <a class="el" href="classarmnn_1_1_i_tensor_handle_factory.xhtml">armnn::ITensorHandleFactory</a> &amp;tensorHandleFactory)</td></tr>
<tr class="separator:a3d33148611360a0755e7c437e2e683fd"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a334b79a8f152daa9c51be2a8ef29b98e"><td class="memItemLeft" align="right" valign="top"><a class="el" href="struct_layer_test_result.xhtml">LayerTestResult</a>&lt; float, 2 &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_pad_test_impl_8hpp.xhtml#a334b79a8f152daa9c51be2a8ef29b98e">PadFloat322dCustomPaddingTest</a> (<a class="el" href="classarmnn_1_1_i_workload_factory.xhtml">armnn::IWorkloadFactory</a> &amp;workloadFactory, const <a class="el" href="classarmnn_1_1_i_backend_internal.xhtml#a693b40e6b94e958836aeb0410ca186bd">armnn::IBackendInternal::IMemoryManagerSharedPtr</a> &amp;memoryManager, const <a class="el" href="classarmnn_1_1_i_tensor_handle_factory.xhtml">armnn::ITensorHandleFactory</a> &amp;tensorHandleFactory)</td></tr>
<tr class="separator:a334b79a8f152daa9c51be2a8ef29b98e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a162b712570127a53c764f0a90d45e8a8"><td class="memItemLeft" align="right" valign="top"><a class="el" href="struct_layer_test_result.xhtml">LayerTestResult</a>&lt; float, 3 &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_pad_test_impl_8hpp.xhtml#a162b712570127a53c764f0a90d45e8a8">PadFloat323dTest</a> (<a class="el" href="classarmnn_1_1_i_workload_factory.xhtml">armnn::IWorkloadFactory</a> &amp;workloadFactory, const <a class="el" href="classarmnn_1_1_i_backend_internal.xhtml#a693b40e6b94e958836aeb0410ca186bd">armnn::IBackendInternal::IMemoryManagerSharedPtr</a> &amp;memoryManager, const <a class="el" href="classarmnn_1_1_i_tensor_handle_factory.xhtml">armnn::ITensorHandleFactory</a> &amp;tensorHandleFactory)</td></tr>
<tr class="separator:a162b712570127a53c764f0a90d45e8a8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a556815dada60a2ed3d40cfe6aefc0459"><td class="memItemLeft" align="right" valign="top"><a class="el" href="struct_layer_test_result.xhtml">LayerTestResult</a>&lt; float, 4 &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_pad_test_impl_8hpp.xhtml#a556815dada60a2ed3d40cfe6aefc0459">PadFloat324dTest</a> (<a class="el" href="classarmnn_1_1_i_workload_factory.xhtml">armnn::IWorkloadFactory</a> &amp;workloadFactory, const <a class="el" href="classarmnn_1_1_i_backend_internal.xhtml#a693b40e6b94e958836aeb0410ca186bd">armnn::IBackendInternal::IMemoryManagerSharedPtr</a> &amp;memoryManager, const <a class="el" href="classarmnn_1_1_i_tensor_handle_factory.xhtml">armnn::ITensorHandleFactory</a> &amp;tensorHandleFactory)</td></tr>
<tr class="separator:a556815dada60a2ed3d40cfe6aefc0459"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a111af1a67fc0a1f54e7dbc0bc0d3424a"><td class="memItemLeft" align="right" valign="top"><a class="el" href="struct_layer_test_result.xhtml">LayerTestResult</a>&lt; <a class="el" href="classarmnn_1_1_b_float16.xhtml">armnn::BFloat16</a>, 2 &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_pad_test_impl_8hpp.xhtml#a111af1a67fc0a1f54e7dbc0bc0d3424a">PadBFloat162dTest</a> (<a class="el" href="classarmnn_1_1_i_workload_factory.xhtml">armnn::IWorkloadFactory</a> &amp;workloadFactory, const <a class="el" href="classarmnn_1_1_i_backend_internal.xhtml#a693b40e6b94e958836aeb0410ca186bd">armnn::IBackendInternal::IMemoryManagerSharedPtr</a> &amp;memoryManager, const <a class="el" href="classarmnn_1_1_i_tensor_handle_factory.xhtml">armnn::ITensorHandleFactory</a> &amp;tensorHandleFactory)</td></tr>
<tr class="separator:a111af1a67fc0a1f54e7dbc0bc0d3424a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa1063d52bdf72710631277009068e240"><td class="memItemLeft" align="right" valign="top"><a class="el" href="struct_layer_test_result.xhtml">LayerTestResult</a>&lt; <a class="el" href="classarmnn_1_1_b_float16.xhtml">armnn::BFloat16</a>, 2 &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_pad_test_impl_8hpp.xhtml#aa1063d52bdf72710631277009068e240">PadBFloat162dCustomPaddingTest</a> (<a class="el" href="classarmnn_1_1_i_workload_factory.xhtml">armnn::IWorkloadFactory</a> &amp;workloadFactory, const <a class="el" href="classarmnn_1_1_i_backend_internal.xhtml#a693b40e6b94e958836aeb0410ca186bd">armnn::IBackendInternal::IMemoryManagerSharedPtr</a> &amp;memoryManager, const <a class="el" href="classarmnn_1_1_i_tensor_handle_factory.xhtml">armnn::ITensorHandleFactory</a> &amp;tensorHandleFactory)</td></tr>
<tr class="separator:aa1063d52bdf72710631277009068e240"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae87408ffe890b6f4d2bb8de404773b8e"><td class="memItemLeft" align="right" valign="top"><a class="el" href="struct_layer_test_result.xhtml">LayerTestResult</a>&lt; <a class="el" href="classarmnn_1_1_b_float16.xhtml">armnn::BFloat16</a>, 3 &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_pad_test_impl_8hpp.xhtml#ae87408ffe890b6f4d2bb8de404773b8e">PadBFloat163dTest</a> (<a class="el" href="classarmnn_1_1_i_workload_factory.xhtml">armnn::IWorkloadFactory</a> &amp;workloadFactory, const <a class="el" href="classarmnn_1_1_i_backend_internal.xhtml#a693b40e6b94e958836aeb0410ca186bd">armnn::IBackendInternal::IMemoryManagerSharedPtr</a> &amp;memoryManager, const <a class="el" href="classarmnn_1_1_i_tensor_handle_factory.xhtml">armnn::ITensorHandleFactory</a> &amp;tensorHandleFactory)</td></tr>
<tr class="separator:ae87408ffe890b6f4d2bb8de404773b8e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a666c18a19dfa5f67c8eb310ee88eb3d5"><td class="memItemLeft" align="right" valign="top"><a class="el" href="struct_layer_test_result.xhtml">LayerTestResult</a>&lt; <a class="el" href="classarmnn_1_1_b_float16.xhtml">armnn::BFloat16</a>, 4 &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_pad_test_impl_8hpp.xhtml#a666c18a19dfa5f67c8eb310ee88eb3d5">PadBFloat164dTest</a> (<a class="el" href="classarmnn_1_1_i_workload_factory.xhtml">armnn::IWorkloadFactory</a> &amp;workloadFactory, const <a class="el" href="classarmnn_1_1_i_backend_internal.xhtml#a693b40e6b94e958836aeb0410ca186bd">armnn::IBackendInternal::IMemoryManagerSharedPtr</a> &amp;memoryManager, const <a class="el" href="classarmnn_1_1_i_tensor_handle_factory.xhtml">armnn::ITensorHandleFactory</a> &amp;tensorHandleFactory)</td></tr>
<tr class="separator:a666c18a19dfa5f67c8eb310ee88eb3d5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a559cf49994dbac766afe63cc4d19cf95"><td class="memItemLeft" align="right" valign="top"><a class="el" href="struct_layer_test_result.xhtml">LayerTestResult</a>&lt; int8_t, 2 &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_pad_test_impl_8hpp.xhtml#a559cf49994dbac766afe63cc4d19cf95">PadInt82dTest</a> (<a class="el" href="classarmnn_1_1_i_workload_factory.xhtml">armnn::IWorkloadFactory</a> &amp;workloadFactory, const <a class="el" href="classarmnn_1_1_i_backend_internal.xhtml#a693b40e6b94e958836aeb0410ca186bd">armnn::IBackendInternal::IMemoryManagerSharedPtr</a> &amp;memoryManager, const <a class="el" href="classarmnn_1_1_i_tensor_handle_factory.xhtml">armnn::ITensorHandleFactory</a> &amp;tensorHandleFactory)</td></tr>
<tr class="separator:a559cf49994dbac766afe63cc4d19cf95"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2bc8d94473cc694f6cd26ac6e77b1312"><td class="memItemLeft" align="right" valign="top"><a class="el" href="struct_layer_test_result.xhtml">LayerTestResult</a>&lt; int8_t, 2 &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_pad_test_impl_8hpp.xhtml#a2bc8d94473cc694f6cd26ac6e77b1312">PadInt82dCustomPaddingTest</a> (<a class="el" href="classarmnn_1_1_i_workload_factory.xhtml">armnn::IWorkloadFactory</a> &amp;workloadFactory, const <a class="el" href="classarmnn_1_1_i_backend_internal.xhtml#a693b40e6b94e958836aeb0410ca186bd">armnn::IBackendInternal::IMemoryManagerSharedPtr</a> &amp;memoryManager, const <a class="el" href="classarmnn_1_1_i_tensor_handle_factory.xhtml">armnn::ITensorHandleFactory</a> &amp;tensorHandleFactory)</td></tr>
<tr class="separator:a2bc8d94473cc694f6cd26ac6e77b1312"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3b6f6bda7dc699926b88ece30f08a712"><td class="memItemLeft" align="right" valign="top"><a class="el" href="struct_layer_test_result.xhtml">LayerTestResult</a>&lt; int8_t, 3 &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_pad_test_impl_8hpp.xhtml#a3b6f6bda7dc699926b88ece30f08a712">PadInt83dTest</a> (<a class="el" href="classarmnn_1_1_i_workload_factory.xhtml">armnn::IWorkloadFactory</a> &amp;workloadFactory, const <a class="el" href="classarmnn_1_1_i_backend_internal.xhtml#a693b40e6b94e958836aeb0410ca186bd">armnn::IBackendInternal::IMemoryManagerSharedPtr</a> &amp;memoryManager, const <a class="el" href="classarmnn_1_1_i_tensor_handle_factory.xhtml">armnn::ITensorHandleFactory</a> &amp;tensorHandleFactory)</td></tr>
<tr class="separator:a3b6f6bda7dc699926b88ece30f08a712"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8d2641a260cd8d75868eb52bdc9e66e6"><td class="memItemLeft" align="right" valign="top"><a class="el" href="struct_layer_test_result.xhtml">LayerTestResult</a>&lt; int8_t, 4 &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_pad_test_impl_8hpp.xhtml#a8d2641a260cd8d75868eb52bdc9e66e6">PadInt84dTest</a> (<a class="el" href="classarmnn_1_1_i_workload_factory.xhtml">armnn::IWorkloadFactory</a> &amp;workloadFactory, const <a class="el" href="classarmnn_1_1_i_backend_internal.xhtml#a693b40e6b94e958836aeb0410ca186bd">armnn::IBackendInternal::IMemoryManagerSharedPtr</a> &amp;memoryManager, const <a class="el" href="classarmnn_1_1_i_tensor_handle_factory.xhtml">armnn::ITensorHandleFactory</a> &amp;tensorHandleFactory)</td></tr>
<tr class="separator:a8d2641a260cd8d75868eb52bdc9e66e6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2ce2442af7f253f7f9eb62b131bd5e8d"><td class="memItemLeft" align="right" valign="top"><a class="el" href="struct_layer_test_result.xhtml">LayerTestResult</a>&lt; int8_t, 2 &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_pad_test_impl_8hpp.xhtml#a2ce2442af7f253f7f9eb62b131bd5e8d">PadInt82dAsymmTest</a> (<a class="el" href="classarmnn_1_1_i_workload_factory.xhtml">armnn::IWorkloadFactory</a> &amp;workloadFactory, const <a class="el" href="classarmnn_1_1_i_backend_internal.xhtml#a693b40e6b94e958836aeb0410ca186bd">armnn::IBackendInternal::IMemoryManagerSharedPtr</a> &amp;memoryManager, const <a class="el" href="classarmnn_1_1_i_tensor_handle_factory.xhtml">armnn::ITensorHandleFactory</a> &amp;tensorHandleFactory)</td></tr>
<tr class="separator:a2ce2442af7f253f7f9eb62b131bd5e8d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa1b91d1261a469f3315b68e4f104aca5"><td class="memItemLeft" align="right" valign="top"><a class="el" href="struct_layer_test_result.xhtml">LayerTestResult</a>&lt; int8_t, 2 &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_pad_test_impl_8hpp.xhtml#aa1b91d1261a469f3315b68e4f104aca5">PadInt82dCustomPaddingAsymmTest</a> (<a class="el" href="classarmnn_1_1_i_workload_factory.xhtml">armnn::IWorkloadFactory</a> &amp;workloadFactory, const <a class="el" href="classarmnn_1_1_i_backend_internal.xhtml#a693b40e6b94e958836aeb0410ca186bd">armnn::IBackendInternal::IMemoryManagerSharedPtr</a> &amp;memoryManager, const <a class="el" href="classarmnn_1_1_i_tensor_handle_factory.xhtml">armnn::ITensorHandleFactory</a> &amp;tensorHandleFactory)</td></tr>
<tr class="separator:aa1b91d1261a469f3315b68e4f104aca5"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<h2 class="groupheader">Function Documentation</h2>
<a id="accd6a8ab9a490e06e545bc3c8768d0f1"></a>
<h2 class="memtitle"><span class="permalink"><a href="#accd6a8ab9a490e06e545bc3c8768d0f1">&#9670;&nbsp;</a></span>Pad2dTestCommon()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="struct_layer_test_result.xhtml">LayerTestResult</a>&lt;T, 2&gt; Pad2dTestCommon </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classarmnn_1_1_i_workload_factory.xhtml">armnn::IWorkloadFactory</a> &amp;&#160;</td>
          <td class="paramname"><em>workloadFactory</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_i_backend_internal.xhtml#a693b40e6b94e958836aeb0410ca186bd">armnn::IBackendInternal::IMemoryManagerSharedPtr</a> &amp;&#160;</td>
          <td class="paramname"><em>memoryManager</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_i_tensor_handle_factory.xhtml">armnn::ITensorHandleFactory</a> &amp;&#160;</td>
          <td class="paramname"><em>tensorHandleFactory</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>qScale</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int32_t&#160;</td>
          <td class="paramname"><em>qOffset</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const float&#160;</td>
          <td class="paramname"><em>customPaddingValue</em> = <code>0.0f</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_pad_test_impl_8cpp_source.xhtml#l00020">20</a> of file <a class="el" href="_pad_test_impl_8cpp_source.xhtml">PadTestImpl.cpp</a>.</p>

<p class="reference">References <a class="el" href="_tensor_copy_utils_8cpp_source.xhtml#l00014">CopyDataFromITensorHandle()</a>, <a class="el" href="_tensor_copy_utils_8cpp_source.xhtml#l00009">CopyDataToITensorHandle()</a>, <a class="el" href="classarmnn_1_1_i_tensor_handle_factory.xhtml#a375f11dd42ff042435e8771cf287b20c">ITensorHandleFactory::CreateTensorHandle()</a>, <a class="el" href="_workload_factory_8cpp_source.xhtml#l01541">IWorkloadFactory::CreateWorkload()</a>, <a class="el" href="_tensor_8hpp_source.xhtml#l00196">TensorInfo::GetNumElements()</a>, <a class="el" href="_tensor_8hpp_source.xhtml#l00191">TensorInfo::GetShape()</a>, <a class="el" href="_ignore_unused_8hpp_source.xhtml#l00014">armnn::IgnoreUnused()</a>, <a class="el" href="_descriptors_8hpp_source.xhtml#l01170">PadDescriptor::m_PadList</a>, <a class="el" href="_descriptors_8hpp_source.xhtml#l01173">PadDescriptor::m_PadValue</a>, <a class="el" href="include_2armnn_2backends_2_workload_data_8hpp_source.xhtml#l00054">QueueDescriptorWithParameters&lt; LayerDescriptor &gt;::m_Parameters</a>, and <a class="el" href="namespacearmnn.xhtml#a56943a0946e5f15e5e58054b8e7a04a4ade43468adaf6acb2c38ebc0c1176f82f">armnn::Pad</a>.</p>
<div class="fragment"><div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;{</div><div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;    <a class="code" href="namespacearmnn.xhtml#a44affeeb090c3c6a3062830562672e84">IgnoreUnused</a>(memoryManager);</div><div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;    <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_shape.xhtml">armnn::TensorShape</a> inputShape{ 3, 3 };</div><div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;    <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_shape.xhtml">armnn::TensorShape</a> outputShape{ 7, 7 };</div><div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;</div><div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;    <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_info.xhtml">armnn::TensorInfo</a> inputTensorInfo(inputShape, ArmnnType, qScale, qOffset);</div><div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;    <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_info.xhtml">armnn::TensorInfo</a> outputTensorInfo(outputShape, ArmnnType, qScale, qOffset);</div><div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;</div><div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;    std::vector&lt;T&gt; inputValues = armnnUtils::QuantizedVector&lt;T&gt;(</div><div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;        {</div><div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;            <span class="comment">// Height (3) x Width (3)</span></div><div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;            4, 8, 6,</div><div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;            7, 4, 4,</div><div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;            3, 2, 4</div><div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;        },</div><div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;        qScale, qOffset);</div><div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;</div><div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;    <span class="keyword">auto</span> p = customPaddingValue;</div><div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;    std::vector&lt;T&gt; expectedOutputValues = armnnUtils::QuantizedVector&lt;T&gt;(</div><div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;        {</div><div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;            p, p, p, p, p, p, p,</div><div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;            p, p, p, p, p, p, p,</div><div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;            p, p, 4, 8, 6, p, p,</div><div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;            p, p, 7, 4, 4, p, p,</div><div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;            p, p, 3, 2, 4, p, p,</div><div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;            p, p, p, p, p, p, p,</div><div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;            p, p, p, p, p, p, p</div><div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;        },</div><div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;        qScale, qOffset);</div><div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;</div><div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;    std::vector&lt;T&gt; actualOutput(outputTensorInfo.GetNumElements());</div><div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;</div><div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;    std::unique_ptr&lt;armnn::ITensorHandle&gt; inputHandle = tensorHandleFactory.<a class="code" href="classarmnn_1_1_i_tensor_handle_factory.xhtml#a375f11dd42ff042435e8771cf287b20c">CreateTensorHandle</a>(inputTensorInfo);</div><div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;    std::unique_ptr&lt;armnn::ITensorHandle&gt; outputHandle = tensorHandleFactory.<a class="code" href="classarmnn_1_1_i_tensor_handle_factory.xhtml#a375f11dd42ff042435e8771cf287b20c">CreateTensorHandle</a>(outputTensorInfo);</div><div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;</div><div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;    <a class="code" href="structarmnn_1_1_pad_queue_descriptor.xhtml">armnn::PadQueueDescriptor</a> descriptor;</div><div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;</div><div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;    std::vector&lt;std::pair&lt;unsigned int, unsigned int&gt;&gt; padList;</div><div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;    padList.push_back(std::pair&lt;unsigned int, unsigned int&gt;(2,2));</div><div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;    padList.push_back(std::pair&lt;unsigned int, unsigned int&gt;(2,2));</div><div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;</div><div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;    descriptor.<a class="code" href="structarmnn_1_1_queue_descriptor_with_parameters.xhtml#aad91b9bbf7aa365d304febe79a3d1333">m_Parameters</a>.<a class="code" href="structarmnn_1_1_pad_descriptor.xhtml#a85f98c94e11f65a6b73f831735c040f3">m_PadList</a> = padList;</div><div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;    descriptor.<a class="code" href="structarmnn_1_1_queue_descriptor_with_parameters.xhtml#aad91b9bbf7aa365d304febe79a3d1333">m_Parameters</a>.<a class="code" href="structarmnn_1_1_pad_descriptor.xhtml#a410fa919f78af0f0f100bd1594eca4ab">m_PadValue</a> = customPaddingValue;</div><div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;    <a class="code" href="structarmnn_1_1_workload_info.xhtml">armnn::WorkloadInfo</a> <a class="code" href="namespacearmnn.xhtml#a4dc0adc6737b5944e7671bee71788407acaf9b6b99962bf5c2264824231d7a40c">info</a>;</div><div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;</div><div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;    AddInputToWorkload(descriptor, info, inputTensorInfo, inputHandle.get());</div><div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;    AddOutputToWorkload(descriptor, info, outputTensorInfo, outputHandle.get());</div><div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;</div><div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;    std::unique_ptr&lt;armnn::IWorkload&gt; workload = workloadFactory.<a class="code" href="classarmnn_1_1_i_workload_factory.xhtml#a13060ebb89d2c21a7a5d897e99cccf72">CreateWorkload</a>(<a class="code" href="namespacearmnn.xhtml#a56943a0946e5f15e5e58054b8e7a04a4ade43468adaf6acb2c38ebc0c1176f82f">armnn::LayerType::Pad</a>,</div><div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;                                                                                descriptor,</div><div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;                                                                                info);</div><div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;</div><div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;    inputHandle-&gt;Allocate();</div><div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;    outputHandle-&gt;Allocate();</div><div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;</div><div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;    <a class="code" href="include_2armnn_test_utils_2_tensor_copy_utils_8hpp.xhtml#ae15f1a3c55d2db87683577de9fa4437c">CopyDataToITensorHandle</a>(inputHandle.get(), inputValues.data());</div><div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;</div><div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;    workload-&gt;PostAllocationConfigure();</div><div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;    workload-&gt;Execute();</div><div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;</div><div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;    <a class="code" href="include_2armnn_test_utils_2_tensor_copy_utils_8hpp.xhtml#ab5dfed8358e500ed523d78090ec78e88">CopyDataFromITensorHandle</a>(actualOutput.data(), outputHandle.get());</div><div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;</div><div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="struct_layer_test_result.xhtml">LayerTestResult&lt;T, 2&gt;</a>(actualOutput,</div><div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;                                 expectedOutputValues,</div><div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;                                 outputHandle-&gt;GetShape(),</div><div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;                                 outputTensorInfo.GetShape());</div><div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;}</div><div class="ttc" id="structarmnn_1_1_pad_descriptor_xhtml_a410fa919f78af0f0f100bd1594eca4ab"><div class="ttname"><a href="structarmnn_1_1_pad_descriptor.xhtml#a410fa919f78af0f0f100bd1594eca4ab">armnn::PadDescriptor::m_PadValue</a></div><div class="ttdeci">float m_PadValue</div><div class="ttdoc">Optional value to use for padding, defaults to 0. </div><div class="ttdef"><b>Definition:</b> <a href="_descriptors_8hpp_source.xhtml#l01173">Descriptors.hpp:1173</a></div></div>
<div class="ttc" id="classarmnn_1_1_tensor_info_xhtml"><div class="ttname"><a href="classarmnn_1_1_tensor_info.xhtml">armnn::TensorInfo</a></div><div class="ttdef"><b>Definition:</b> <a href="_tensor_8hpp_source.xhtml#l00152">Tensor.hpp:152</a></div></div>
<div class="ttc" id="structarmnn_1_1_pad_descriptor_xhtml_a85f98c94e11f65a6b73f831735c040f3"><div class="ttname"><a href="structarmnn_1_1_pad_descriptor.xhtml#a85f98c94e11f65a6b73f831735c040f3">armnn::PadDescriptor::m_PadList</a></div><div class="ttdeci">std::vector&lt; std::pair&lt; unsigned int, unsigned int &gt; &gt; m_PadList</div><div class="ttdoc">Specifies the padding for input dimension. </div><div class="ttdef"><b>Definition:</b> <a href="_descriptors_8hpp_source.xhtml#l01170">Descriptors.hpp:1170</a></div></div>
<div class="ttc" id="namespacearmnn_xhtml_a44affeeb090c3c6a3062830562672e84"><div class="ttname"><a href="namespacearmnn.xhtml#a44affeeb090c3c6a3062830562672e84">armnn::IgnoreUnused</a></div><div class="ttdeci">void IgnoreUnused(Ts &amp;&amp;...)</div><div class="ttdef"><b>Definition:</b> <a href="_ignore_unused_8hpp_source.xhtml#l00014">IgnoreUnused.hpp:14</a></div></div>
<div class="ttc" id="classarmnn_1_1_tensor_shape_xhtml"><div class="ttname"><a href="classarmnn_1_1_tensor_shape.xhtml">armnn::TensorShape</a></div><div class="ttdef"><b>Definition:</b> <a href="_tensor_8hpp_source.xhtml#l00020">Tensor.hpp:20</a></div></div>
<div class="ttc" id="structarmnn_1_1_queue_descriptor_with_parameters_xhtml_aad91b9bbf7aa365d304febe79a3d1333"><div class="ttname"><a href="structarmnn_1_1_queue_descriptor_with_parameters.xhtml#aad91b9bbf7aa365d304febe79a3d1333">armnn::QueueDescriptorWithParameters::m_Parameters</a></div><div class="ttdeci">LayerDescriptor m_Parameters</div><div class="ttdef"><b>Definition:</b> <a href="include_2armnn_2backends_2_workload_data_8hpp_source.xhtml#l00054">WorkloadData.hpp:54</a></div></div>
<div class="ttc" id="structarmnn_1_1_pad_queue_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_pad_queue_descriptor.xhtml">armnn::PadQueueDescriptor</a></div><div class="ttdef"><b>Definition:</b> <a href="include_2armnn_2backends_2_workload_data_8hpp_source.xhtml#l00304">WorkloadData.hpp:304</a></div></div>
<div class="ttc" id="namespacearmnn_xhtml_a56943a0946e5f15e5e58054b8e7a04a4ade43468adaf6acb2c38ebc0c1176f82f"><div class="ttname"><a href="namespacearmnn.xhtml#a56943a0946e5f15e5e58054b8e7a04a4ade43468adaf6acb2c38ebc0c1176f82f">armnn::LayerType::Pad</a></div></div>
<div class="ttc" id="include_2armnn_test_utils_2_tensor_copy_utils_8hpp_xhtml_ab5dfed8358e500ed523d78090ec78e88"><div class="ttname"><a href="include_2armnn_test_utils_2_tensor_copy_utils_8hpp.xhtml#ab5dfed8358e500ed523d78090ec78e88">CopyDataFromITensorHandle</a></div><div class="ttdeci">void CopyDataFromITensorHandle(void *mem, const armnn::ITensorHandle *tensorHandle)</div><div class="ttdef"><b>Definition:</b> <a href="_tensor_copy_utils_8cpp_source.xhtml#l00014">TensorCopyUtils.cpp:14</a></div></div>
<div class="ttc" id="namespacearmnn_xhtml_a4dc0adc6737b5944e7671bee71788407acaf9b6b99962bf5c2264824231d7a40c"><div class="ttname"><a href="namespacearmnn.xhtml#a4dc0adc6737b5944e7671bee71788407acaf9b6b99962bf5c2264824231d7a40c">armnn::BoostLogSeverityMapping::info</a></div></div>
<div class="ttc" id="include_2armnn_test_utils_2_tensor_copy_utils_8hpp_xhtml_ae15f1a3c55d2db87683577de9fa4437c"><div class="ttname"><a href="include_2armnn_test_utils_2_tensor_copy_utils_8hpp.xhtml#ae15f1a3c55d2db87683577de9fa4437c">CopyDataToITensorHandle</a></div><div class="ttdeci">void CopyDataToITensorHandle(armnn::ITensorHandle *tensorHandle, const void *memory)</div><div class="ttdef"><b>Definition:</b> <a href="_tensor_copy_utils_8cpp_source.xhtml#l00009">TensorCopyUtils.cpp:9</a></div></div>
<div class="ttc" id="structarmnn_1_1_workload_info_xhtml"><div class="ttname"><a href="structarmnn_1_1_workload_info.xhtml">armnn::WorkloadInfo</a></div><div class="ttdoc">Contains information about TensorInfos of a layer. </div><div class="ttdef"><b>Definition:</b> <a href="include_2armnn_2backends_2_workload_info_8hpp_source.xhtml#l00016">WorkloadInfo.hpp:16</a></div></div>
<div class="ttc" id="struct_layer_test_result_xhtml"><div class="ttname"><a href="struct_layer_test_result.xhtml">LayerTestResult</a></div><div class="ttdef"><b>Definition:</b> <a href="include_2armnn_test_utils_2_layer_test_result_8hpp_source.xhtml#l00015">LayerTestResult.hpp:15</a></div></div>
<div class="ttc" id="classarmnn_1_1_i_workload_factory_xhtml_a13060ebb89d2c21a7a5d897e99cccf72"><div class="ttname"><a href="classarmnn_1_1_i_workload_factory.xhtml#a13060ebb89d2c21a7a5d897e99cccf72">armnn::IWorkloadFactory::CreateWorkload</a></div><div class="ttdeci">virtual std::unique_ptr&lt; IWorkload &gt; CreateWorkload(LayerType type, const QueueDescriptor &amp;descriptor, const WorkloadInfo &amp;info) const</div><div class="ttdef"><b>Definition:</b> <a href="_workload_factory_8cpp_source.xhtml#l01541">WorkloadFactory.cpp:1541</a></div></div>
<div class="ttc" id="classarmnn_1_1_i_tensor_handle_factory_xhtml_a375f11dd42ff042435e8771cf287b20c"><div class="ttname"><a href="classarmnn_1_1_i_tensor_handle_factory.xhtml#a375f11dd42ff042435e8771cf287b20c">armnn::ITensorHandleFactory::CreateTensorHandle</a></div><div class="ttdeci">virtual std::unique_ptr&lt; ITensorHandle &gt; CreateTensorHandle(const TensorInfo &amp;tensorInfo) const =0</div></div>
</div><!-- fragment -->
</div>
</div>
<a id="a71ddcc5b0a641c035988a5e9df441c3a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a71ddcc5b0a641c035988a5e9df441c3a">&#9670;&nbsp;</a></span>Pad3dTestCommon()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="struct_layer_test_result.xhtml">LayerTestResult</a>&lt;T, 3&gt; Pad3dTestCommon </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classarmnn_1_1_i_workload_factory.xhtml">armnn::IWorkloadFactory</a> &amp;&#160;</td>
          <td class="paramname"><em>workloadFactory</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_i_backend_internal.xhtml#a693b40e6b94e958836aeb0410ca186bd">armnn::IBackendInternal::IMemoryManagerSharedPtr</a> &amp;&#160;</td>
          <td class="paramname"><em>memoryManager</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_i_tensor_handle_factory.xhtml">armnn::ITensorHandleFactory</a> &amp;&#160;</td>
          <td class="paramname"><em>tensorHandleFactory</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>qScale</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int32_t&#160;</td>
          <td class="paramname"><em>qOffset</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_pad_test_impl_8cpp_source.xhtml#l00096">96</a> of file <a class="el" href="_pad_test_impl_8cpp_source.xhtml">PadTestImpl.cpp</a>.</p>

<p class="reference">References <a class="el" href="_tensor_copy_utils_8cpp_source.xhtml#l00014">CopyDataFromITensorHandle()</a>, <a class="el" href="_tensor_copy_utils_8cpp_source.xhtml#l00009">CopyDataToITensorHandle()</a>, <a class="el" href="classarmnn_1_1_i_tensor_handle_factory.xhtml#a375f11dd42ff042435e8771cf287b20c">ITensorHandleFactory::CreateTensorHandle()</a>, <a class="el" href="_workload_factory_8cpp_source.xhtml#l01541">IWorkloadFactory::CreateWorkload()</a>, <a class="el" href="_tensor_8hpp_source.xhtml#l00196">TensorInfo::GetNumElements()</a>, <a class="el" href="_tensor_8hpp_source.xhtml#l00191">TensorInfo::GetShape()</a>, <a class="el" href="_ignore_unused_8hpp_source.xhtml#l00014">armnn::IgnoreUnused()</a>, <a class="el" href="_descriptors_8hpp_source.xhtml#l01170">PadDescriptor::m_PadList</a>, <a class="el" href="include_2armnn_2backends_2_workload_data_8hpp_source.xhtml#l00054">QueueDescriptorWithParameters&lt; LayerDescriptor &gt;::m_Parameters</a>, and <a class="el" href="namespacearmnn.xhtml#a56943a0946e5f15e5e58054b8e7a04a4ade43468adaf6acb2c38ebc0c1176f82f">armnn::Pad</a>.</p>
<div class="fragment"><div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;{</div><div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;    <a class="code" href="namespacearmnn.xhtml#a44affeeb090c3c6a3062830562672e84">IgnoreUnused</a>(memoryManager);</div><div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;    <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_shape.xhtml">armnn::TensorShape</a> inputShape{ 2, 2, 2 };</div><div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;    <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_shape.xhtml">armnn::TensorShape</a> outputShape{ 3, 5, 6 };</div><div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;</div><div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;    <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_info.xhtml">armnn::TensorInfo</a> inputTensorInfo(inputShape, ArmnnType, qScale, qOffset);</div><div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;    <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_info.xhtml">armnn::TensorInfo</a> outputTensorInfo(outputShape, ArmnnType, qScale, qOffset);</div><div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;</div><div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;    std::vector&lt;T&gt; inputValues = armnnUtils::QuantizedVector&lt;T&gt;(</div><div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;        {</div><div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;            <span class="comment">// Channel 0, Height (2) x Width (2)</span></div><div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;            0, 4,</div><div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;            2, 5,</div><div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;</div><div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;            <span class="comment">// Channel 1, Height (2) x Width (2)</span></div><div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;            6, 1,</div><div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;            5, 2</div><div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;        },</div><div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;        qScale, qOffset);</div><div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;</div><div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;    std::vector&lt;T&gt; expectedOutputValues = armnnUtils::QuantizedVector&lt;T&gt;(</div><div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;        {</div><div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;            0, 0, 0, 0, 0, 0,</div><div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;            0, 0, 0, 0, 0, 0,</div><div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;            0, 0, 0, 4, 0, 0,</div><div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;            0, 0, 2, 5, 0, 0,</div><div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;            0, 0, 0, 0, 0, 0,</div><div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;</div><div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;            0, 0, 0, 0, 0, 0,</div><div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;            0, 0, 0, 0, 0, 0,</div><div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;            0, 0, 6, 1, 0, 0,</div><div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;            0, 0, 5, 2, 0, 0,</div><div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;            0, 0, 0, 0, 0, 0,</div><div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;</div><div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;            0, 0, 0, 0, 0, 0,</div><div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;            0, 0, 0, 0, 0, 0,</div><div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;            0, 0, 0, 0, 0, 0,</div><div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;            0, 0, 0, 0, 0, 0,</div><div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;            0, 0, 0, 0, 0, 0</div><div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;       },</div><div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;       qScale, qOffset);</div><div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;</div><div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;    std::vector&lt;T&gt; actualOutput(outputTensorInfo.GetNumElements());</div><div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;</div><div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;    std::unique_ptr&lt;armnn::ITensorHandle&gt; inputHandle = tensorHandleFactory.<a class="code" href="classarmnn_1_1_i_tensor_handle_factory.xhtml#a375f11dd42ff042435e8771cf287b20c">CreateTensorHandle</a>(inputTensorInfo);</div><div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;    std::unique_ptr&lt;armnn::ITensorHandle&gt; outputHandle = tensorHandleFactory.<a class="code" href="classarmnn_1_1_i_tensor_handle_factory.xhtml#a375f11dd42ff042435e8771cf287b20c">CreateTensorHandle</a>(outputTensorInfo);</div><div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;</div><div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;    <a class="code" href="structarmnn_1_1_pad_queue_descriptor.xhtml">armnn::PadQueueDescriptor</a> descriptor;</div><div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;</div><div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;    std::vector&lt;std::pair&lt;unsigned int, unsigned int&gt;&gt; PadList;</div><div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;    PadList.push_back(std::pair&lt;unsigned int, unsigned int&gt;(0,1));</div><div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;    PadList.push_back(std::pair&lt;unsigned int, unsigned int&gt;(2,1));</div><div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;    PadList.push_back(std::pair&lt;unsigned int, unsigned int&gt;(2,2));</div><div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;</div><div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;    descriptor.<a class="code" href="structarmnn_1_1_queue_descriptor_with_parameters.xhtml#aad91b9bbf7aa365d304febe79a3d1333">m_Parameters</a>.<a class="code" href="structarmnn_1_1_pad_descriptor.xhtml#a85f98c94e11f65a6b73f831735c040f3">m_PadList</a> = PadList;</div><div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160;    <a class="code" href="structarmnn_1_1_workload_info.xhtml">armnn::WorkloadInfo</a> <a class="code" href="namespacearmnn.xhtml#a4dc0adc6737b5944e7671bee71788407acaf9b6b99962bf5c2264824231d7a40c">info</a>;</div><div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;</div><div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160;    AddInputToWorkload(descriptor, info, inputTensorInfo, inputHandle.get());</div><div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160;    AddOutputToWorkload(descriptor, info, outputTensorInfo, outputHandle.get());</div><div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160;</div><div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160;    std::unique_ptr&lt;armnn::IWorkload&gt; workload = workloadFactory.<a class="code" href="classarmnn_1_1_i_workload_factory.xhtml#a13060ebb89d2c21a7a5d897e99cccf72">CreateWorkload</a>(<a class="code" href="namespacearmnn.xhtml#a56943a0946e5f15e5e58054b8e7a04a4ade43468adaf6acb2c38ebc0c1176f82f">armnn::LayerType::Pad</a>,</div><div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160;                                                                                descriptor,</div><div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;                                                                                info);</div><div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160;</div><div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160;    inputHandle-&gt;Allocate();</div><div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160;    outputHandle-&gt;Allocate();</div><div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160;</div><div class="line"><a name="l00169"></a><span class="lineno">  169</span>&#160;    <a class="code" href="include_2armnn_test_utils_2_tensor_copy_utils_8hpp.xhtml#ae15f1a3c55d2db87683577de9fa4437c">CopyDataToITensorHandle</a>(inputHandle.get(), inputValues.data());</div><div class="line"><a name="l00170"></a><span class="lineno">  170</span>&#160;</div><div class="line"><a name="l00171"></a><span class="lineno">  171</span>&#160;    workload-&gt;PostAllocationConfigure();</div><div class="line"><a name="l00172"></a><span class="lineno">  172</span>&#160;    workload-&gt;Execute();</div><div class="line"><a name="l00173"></a><span class="lineno">  173</span>&#160;</div><div class="line"><a name="l00174"></a><span class="lineno">  174</span>&#160;    <a class="code" href="include_2armnn_test_utils_2_tensor_copy_utils_8hpp.xhtml#ab5dfed8358e500ed523d78090ec78e88">CopyDataFromITensorHandle</a>(actualOutput.data(), outputHandle.get());</div><div class="line"><a name="l00175"></a><span class="lineno">  175</span>&#160;</div><div class="line"><a name="l00176"></a><span class="lineno">  176</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="struct_layer_test_result.xhtml">LayerTestResult&lt;T, 3&gt;</a>(actualOutput,</div><div class="line"><a name="l00177"></a><span class="lineno">  177</span>&#160;                                 expectedOutputValues,</div><div class="line"><a name="l00178"></a><span class="lineno">  178</span>&#160;                                 outputHandle-&gt;GetShape(),</div><div class="line"><a name="l00179"></a><span class="lineno">  179</span>&#160;                                 outputTensorInfo.GetShape());</div><div class="line"><a name="l00180"></a><span class="lineno">  180</span>&#160;}</div><div class="ttc" id="classarmnn_1_1_tensor_info_xhtml"><div class="ttname"><a href="classarmnn_1_1_tensor_info.xhtml">armnn::TensorInfo</a></div><div class="ttdef"><b>Definition:</b> <a href="_tensor_8hpp_source.xhtml#l00152">Tensor.hpp:152</a></div></div>
<div class="ttc" id="structarmnn_1_1_pad_descriptor_xhtml_a85f98c94e11f65a6b73f831735c040f3"><div class="ttname"><a href="structarmnn_1_1_pad_descriptor.xhtml#a85f98c94e11f65a6b73f831735c040f3">armnn::PadDescriptor::m_PadList</a></div><div class="ttdeci">std::vector&lt; std::pair&lt; unsigned int, unsigned int &gt; &gt; m_PadList</div><div class="ttdoc">Specifies the padding for input dimension. </div><div class="ttdef"><b>Definition:</b> <a href="_descriptors_8hpp_source.xhtml#l01170">Descriptors.hpp:1170</a></div></div>
<div class="ttc" id="namespacearmnn_xhtml_a44affeeb090c3c6a3062830562672e84"><div class="ttname"><a href="namespacearmnn.xhtml#a44affeeb090c3c6a3062830562672e84">armnn::IgnoreUnused</a></div><div class="ttdeci">void IgnoreUnused(Ts &amp;&amp;...)</div><div class="ttdef"><b>Definition:</b> <a href="_ignore_unused_8hpp_source.xhtml#l00014">IgnoreUnused.hpp:14</a></div></div>
<div class="ttc" id="classarmnn_1_1_tensor_shape_xhtml"><div class="ttname"><a href="classarmnn_1_1_tensor_shape.xhtml">armnn::TensorShape</a></div><div class="ttdef"><b>Definition:</b> <a href="_tensor_8hpp_source.xhtml#l00020">Tensor.hpp:20</a></div></div>
<div class="ttc" id="structarmnn_1_1_queue_descriptor_with_parameters_xhtml_aad91b9bbf7aa365d304febe79a3d1333"><div class="ttname"><a href="structarmnn_1_1_queue_descriptor_with_parameters.xhtml#aad91b9bbf7aa365d304febe79a3d1333">armnn::QueueDescriptorWithParameters::m_Parameters</a></div><div class="ttdeci">LayerDescriptor m_Parameters</div><div class="ttdef"><b>Definition:</b> <a href="include_2armnn_2backends_2_workload_data_8hpp_source.xhtml#l00054">WorkloadData.hpp:54</a></div></div>
<div class="ttc" id="structarmnn_1_1_pad_queue_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_pad_queue_descriptor.xhtml">armnn::PadQueueDescriptor</a></div><div class="ttdef"><b>Definition:</b> <a href="include_2armnn_2backends_2_workload_data_8hpp_source.xhtml#l00304">WorkloadData.hpp:304</a></div></div>
<div class="ttc" id="namespacearmnn_xhtml_a56943a0946e5f15e5e58054b8e7a04a4ade43468adaf6acb2c38ebc0c1176f82f"><div class="ttname"><a href="namespacearmnn.xhtml#a56943a0946e5f15e5e58054b8e7a04a4ade43468adaf6acb2c38ebc0c1176f82f">armnn::LayerType::Pad</a></div></div>
<div class="ttc" id="include_2armnn_test_utils_2_tensor_copy_utils_8hpp_xhtml_ab5dfed8358e500ed523d78090ec78e88"><div class="ttname"><a href="include_2armnn_test_utils_2_tensor_copy_utils_8hpp.xhtml#ab5dfed8358e500ed523d78090ec78e88">CopyDataFromITensorHandle</a></div><div class="ttdeci">void CopyDataFromITensorHandle(void *mem, const armnn::ITensorHandle *tensorHandle)</div><div class="ttdef"><b>Definition:</b> <a href="_tensor_copy_utils_8cpp_source.xhtml#l00014">TensorCopyUtils.cpp:14</a></div></div>
<div class="ttc" id="namespacearmnn_xhtml_a4dc0adc6737b5944e7671bee71788407acaf9b6b99962bf5c2264824231d7a40c"><div class="ttname"><a href="namespacearmnn.xhtml#a4dc0adc6737b5944e7671bee71788407acaf9b6b99962bf5c2264824231d7a40c">armnn::BoostLogSeverityMapping::info</a></div></div>
<div class="ttc" id="include_2armnn_test_utils_2_tensor_copy_utils_8hpp_xhtml_ae15f1a3c55d2db87683577de9fa4437c"><div class="ttname"><a href="include_2armnn_test_utils_2_tensor_copy_utils_8hpp.xhtml#ae15f1a3c55d2db87683577de9fa4437c">CopyDataToITensorHandle</a></div><div class="ttdeci">void CopyDataToITensorHandle(armnn::ITensorHandle *tensorHandle, const void *memory)</div><div class="ttdef"><b>Definition:</b> <a href="_tensor_copy_utils_8cpp_source.xhtml#l00009">TensorCopyUtils.cpp:9</a></div></div>
<div class="ttc" id="structarmnn_1_1_workload_info_xhtml"><div class="ttname"><a href="structarmnn_1_1_workload_info.xhtml">armnn::WorkloadInfo</a></div><div class="ttdoc">Contains information about TensorInfos of a layer. </div><div class="ttdef"><b>Definition:</b> <a href="include_2armnn_2backends_2_workload_info_8hpp_source.xhtml#l00016">WorkloadInfo.hpp:16</a></div></div>
<div class="ttc" id="struct_layer_test_result_xhtml"><div class="ttname"><a href="struct_layer_test_result.xhtml">LayerTestResult</a></div><div class="ttdef"><b>Definition:</b> <a href="include_2armnn_test_utils_2_layer_test_result_8hpp_source.xhtml#l00015">LayerTestResult.hpp:15</a></div></div>
<div class="ttc" id="classarmnn_1_1_i_workload_factory_xhtml_a13060ebb89d2c21a7a5d897e99cccf72"><div class="ttname"><a href="classarmnn_1_1_i_workload_factory.xhtml#a13060ebb89d2c21a7a5d897e99cccf72">armnn::IWorkloadFactory::CreateWorkload</a></div><div class="ttdeci">virtual std::unique_ptr&lt; IWorkload &gt; CreateWorkload(LayerType type, const QueueDescriptor &amp;descriptor, const WorkloadInfo &amp;info) const</div><div class="ttdef"><b>Definition:</b> <a href="_workload_factory_8cpp_source.xhtml#l01541">WorkloadFactory.cpp:1541</a></div></div>
<div class="ttc" id="classarmnn_1_1_i_tensor_handle_factory_xhtml_a375f11dd42ff042435e8771cf287b20c"><div class="ttname"><a href="classarmnn_1_1_i_tensor_handle_factory.xhtml#a375f11dd42ff042435e8771cf287b20c">armnn::ITensorHandleFactory::CreateTensorHandle</a></div><div class="ttdeci">virtual std::unique_ptr&lt; ITensorHandle &gt; CreateTensorHandle(const TensorInfo &amp;tensorInfo) const =0</div></div>
</div><!-- fragment -->
</div>
</div>
<a id="aa84e31895ca42da6a5ba6268ee247dec"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aa84e31895ca42da6a5ba6268ee247dec">&#9670;&nbsp;</a></span>Pad4dTestCommon()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="struct_layer_test_result.xhtml">LayerTestResult</a>&lt;T, 4&gt; Pad4dTestCommon </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classarmnn_1_1_i_workload_factory.xhtml">armnn::IWorkloadFactory</a> &amp;&#160;</td>
          <td class="paramname"><em>workloadFactory</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_i_backend_internal.xhtml#a693b40e6b94e958836aeb0410ca186bd">armnn::IBackendInternal::IMemoryManagerSharedPtr</a> &amp;&#160;</td>
          <td class="paramname"><em>memoryManager</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_i_tensor_handle_factory.xhtml">armnn::ITensorHandleFactory</a> &amp;&#160;</td>
          <td class="paramname"><em>tensorHandleFactory</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>qScale</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int32_t&#160;</td>
          <td class="paramname"><em>qOffset</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_pad_test_impl_8cpp_source.xhtml#l00183">183</a> of file <a class="el" href="_pad_test_impl_8cpp_source.xhtml">PadTestImpl.cpp</a>.</p>

<p class="reference">References <a class="el" href="_tensor_copy_utils_8cpp_source.xhtml#l00014">CopyDataFromITensorHandle()</a>, <a class="el" href="_tensor_copy_utils_8cpp_source.xhtml#l00009">CopyDataToITensorHandle()</a>, <a class="el" href="classarmnn_1_1_i_tensor_handle_factory.xhtml#a375f11dd42ff042435e8771cf287b20c">ITensorHandleFactory::CreateTensorHandle()</a>, <a class="el" href="_workload_factory_8cpp_source.xhtml#l01541">IWorkloadFactory::CreateWorkload()</a>, <a class="el" href="_tensor_8hpp_source.xhtml#l00196">TensorInfo::GetNumElements()</a>, <a class="el" href="_tensor_8hpp_source.xhtml#l00191">TensorInfo::GetShape()</a>, <a class="el" href="_ignore_unused_8hpp_source.xhtml#l00014">armnn::IgnoreUnused()</a>, <a class="el" href="_descriptors_8hpp_source.xhtml#l01170">PadDescriptor::m_PadList</a>, <a class="el" href="include_2armnn_2backends_2_workload_data_8hpp_source.xhtml#l00054">QueueDescriptorWithParameters&lt; LayerDescriptor &gt;::m_Parameters</a>, and <a class="el" href="namespacearmnn.xhtml#a56943a0946e5f15e5e58054b8e7a04a4ade43468adaf6acb2c38ebc0c1176f82f">armnn::Pad</a>.</p>
<div class="fragment"><div class="line"><a name="l00189"></a><span class="lineno">  189</span>&#160;{</div><div class="line"><a name="l00190"></a><span class="lineno">  190</span>&#160;    <a class="code" href="namespacearmnn.xhtml#a44affeeb090c3c6a3062830562672e84">IgnoreUnused</a>(memoryManager);</div><div class="line"><a name="l00191"></a><span class="lineno">  191</span>&#160;    <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_shape.xhtml">armnn::TensorShape</a> inputShape{ 2, 2, 3, 2 };</div><div class="line"><a name="l00192"></a><span class="lineno">  192</span>&#160;    <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_shape.xhtml">armnn::TensorShape</a> outputShape{ 4, 5, 7, 4 };</div><div class="line"><a name="l00193"></a><span class="lineno">  193</span>&#160;</div><div class="line"><a name="l00194"></a><span class="lineno">  194</span>&#160;    <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_info.xhtml">armnn::TensorInfo</a> inputTensorInfo(inputShape, ArmnnType, qScale, qOffset);</div><div class="line"><a name="l00195"></a><span class="lineno">  195</span>&#160;    <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_info.xhtml">armnn::TensorInfo</a> outputTensorInfo(outputShape, ArmnnType, qScale, qOffset);</div><div class="line"><a name="l00196"></a><span class="lineno">  196</span>&#160;</div><div class="line"><a name="l00197"></a><span class="lineno">  197</span>&#160;    std::vector&lt;T&gt; inputValues = armnnUtils::QuantizedVector&lt;T&gt;(</div><div class="line"><a name="l00198"></a><span class="lineno">  198</span>&#160;        {</div><div class="line"><a name="l00199"></a><span class="lineno">  199</span>&#160;            <span class="comment">// Batch 0, Channel 0, Height (3) x Width (2)</span></div><div class="line"><a name="l00200"></a><span class="lineno">  200</span>&#160;             0,  1,</div><div class="line"><a name="l00201"></a><span class="lineno">  201</span>&#160;             2,  3,</div><div class="line"><a name="l00202"></a><span class="lineno">  202</span>&#160;             4,  5,</div><div class="line"><a name="l00203"></a><span class="lineno">  203</span>&#160;</div><div class="line"><a name="l00204"></a><span class="lineno">  204</span>&#160;            <span class="comment">// Batch 0, Channel 1, Height (3) x Width (2)</span></div><div class="line"><a name="l00205"></a><span class="lineno">  205</span>&#160;             6,  7,</div><div class="line"><a name="l00206"></a><span class="lineno">  206</span>&#160;             8,  9,</div><div class="line"><a name="l00207"></a><span class="lineno">  207</span>&#160;            10, 11,</div><div class="line"><a name="l00208"></a><span class="lineno">  208</span>&#160;</div><div class="line"><a name="l00209"></a><span class="lineno">  209</span>&#160;            <span class="comment">// Batch 1, Channel 0, Height (3) x Width (2)</span></div><div class="line"><a name="l00210"></a><span class="lineno">  210</span>&#160;            12, 13,</div><div class="line"><a name="l00211"></a><span class="lineno">  211</span>&#160;            14, 15,</div><div class="line"><a name="l00212"></a><span class="lineno">  212</span>&#160;            16, 17,</div><div class="line"><a name="l00213"></a><span class="lineno">  213</span>&#160;</div><div class="line"><a name="l00214"></a><span class="lineno">  214</span>&#160;            <span class="comment">// Batch 1, Channel 1, Height (3) x Width (2)</span></div><div class="line"><a name="l00215"></a><span class="lineno">  215</span>&#160;            18, 19,</div><div class="line"><a name="l00216"></a><span class="lineno">  216</span>&#160;            20, 21,</div><div class="line"><a name="l00217"></a><span class="lineno">  217</span>&#160;            22, 23</div><div class="line"><a name="l00218"></a><span class="lineno">  218</span>&#160;        },</div><div class="line"><a name="l00219"></a><span class="lineno">  219</span>&#160;        qScale, qOffset);</div><div class="line"><a name="l00220"></a><span class="lineno">  220</span>&#160;</div><div class="line"><a name="l00221"></a><span class="lineno">  221</span>&#160;    std::vector&lt;T&gt; expectedOutputValues = armnnUtils::QuantizedVector&lt;T&gt;(</div><div class="line"><a name="l00222"></a><span class="lineno">  222</span>&#160;        {</div><div class="line"><a name="l00223"></a><span class="lineno">  223</span>&#160;            0, 0, 0, 0,</div><div class="line"><a name="l00224"></a><span class="lineno">  224</span>&#160;            0, 0, 0, 0,</div><div class="line"><a name="l00225"></a><span class="lineno">  225</span>&#160;            0, 0, 0, 0,</div><div class="line"><a name="l00226"></a><span class="lineno">  226</span>&#160;            0, 0, 0, 0,</div><div class="line"><a name="l00227"></a><span class="lineno">  227</span>&#160;            0, 0, 0, 0,</div><div class="line"><a name="l00228"></a><span class="lineno">  228</span>&#160;            0, 0, 0, 0,</div><div class="line"><a name="l00229"></a><span class="lineno">  229</span>&#160;            0, 0, 0, 0,</div><div class="line"><a name="l00230"></a><span class="lineno">  230</span>&#160;</div><div class="line"><a name="l00231"></a><span class="lineno">  231</span>&#160;            0, 0, 0, 0,</div><div class="line"><a name="l00232"></a><span class="lineno">  232</span>&#160;            0, 0, 0, 0,</div><div class="line"><a name="l00233"></a><span class="lineno">  233</span>&#160;            0, 0, 0, 0,</div><div class="line"><a name="l00234"></a><span class="lineno">  234</span>&#160;            0, 0, 0, 0,</div><div class="line"><a name="l00235"></a><span class="lineno">  235</span>&#160;            0, 0, 0, 0,</div><div class="line"><a name="l00236"></a><span class="lineno">  236</span>&#160;            0, 0, 0, 0,</div><div class="line"><a name="l00237"></a><span class="lineno">  237</span>&#160;            0, 0, 0, 0,</div><div class="line"><a name="l00238"></a><span class="lineno">  238</span>&#160;</div><div class="line"><a name="l00239"></a><span class="lineno">  239</span>&#160;            0, 0, 0, 0,</div><div class="line"><a name="l00240"></a><span class="lineno">  240</span>&#160;            0, 0, 0, 0,</div><div class="line"><a name="l00241"></a><span class="lineno">  241</span>&#160;            0, 0, 0, 0,</div><div class="line"><a name="l00242"></a><span class="lineno">  242</span>&#160;            0, 0, 0, 0,</div><div class="line"><a name="l00243"></a><span class="lineno">  243</span>&#160;            0, 0, 0, 0,</div><div class="line"><a name="l00244"></a><span class="lineno">  244</span>&#160;            0, 0, 0, 0,</div><div class="line"><a name="l00245"></a><span class="lineno">  245</span>&#160;            0, 0, 0, 0,</div><div class="line"><a name="l00246"></a><span class="lineno">  246</span>&#160;</div><div class="line"><a name="l00247"></a><span class="lineno">  247</span>&#160;            0, 0, 0, 0,</div><div class="line"><a name="l00248"></a><span class="lineno">  248</span>&#160;            0, 0, 0, 0,</div><div class="line"><a name="l00249"></a><span class="lineno">  249</span>&#160;            0, 0, 0, 0,</div><div class="line"><a name="l00250"></a><span class="lineno">  250</span>&#160;            0, 0, 0, 0,</div><div class="line"><a name="l00251"></a><span class="lineno">  251</span>&#160;            0, 0, 0, 0,</div><div class="line"><a name="l00252"></a><span class="lineno">  252</span>&#160;            0, 0, 0, 0,</div><div class="line"><a name="l00253"></a><span class="lineno">  253</span>&#160;            0, 0, 0, 0,</div><div class="line"><a name="l00254"></a><span class="lineno">  254</span>&#160;</div><div class="line"><a name="l00255"></a><span class="lineno">  255</span>&#160;            0, 0, 0, 0,</div><div class="line"><a name="l00256"></a><span class="lineno">  256</span>&#160;            0, 0, 0, 0,</div><div class="line"><a name="l00257"></a><span class="lineno">  257</span>&#160;            0, 0, 0, 0,</div><div class="line"><a name="l00258"></a><span class="lineno">  258</span>&#160;            0, 0, 0, 0,</div><div class="line"><a name="l00259"></a><span class="lineno">  259</span>&#160;            0, 0, 0, 0,</div><div class="line"><a name="l00260"></a><span class="lineno">  260</span>&#160;            0, 0, 0, 0,</div><div class="line"><a name="l00261"></a><span class="lineno">  261</span>&#160;            0, 0, 0, 0,</div><div class="line"><a name="l00262"></a><span class="lineno">  262</span>&#160;</div><div class="line"><a name="l00263"></a><span class="lineno">  263</span>&#160;            0, 0, 0, 0,</div><div class="line"><a name="l00264"></a><span class="lineno">  264</span>&#160;            0, 0, 0, 0,</div><div class="line"><a name="l00265"></a><span class="lineno">  265</span>&#160;            0, 0, 0, 0,</div><div class="line"><a name="l00266"></a><span class="lineno">  266</span>&#160;            0, 0, 0, 0,</div><div class="line"><a name="l00267"></a><span class="lineno">  267</span>&#160;            0, 0, 0, 0,</div><div class="line"><a name="l00268"></a><span class="lineno">  268</span>&#160;            0, 0, 0, 0,</div><div class="line"><a name="l00269"></a><span class="lineno">  269</span>&#160;            0, 0, 0, 0,</div><div class="line"><a name="l00270"></a><span class="lineno">  270</span>&#160;</div><div class="line"><a name="l00271"></a><span class="lineno">  271</span>&#160;            0, 0, 0, 0,</div><div class="line"><a name="l00272"></a><span class="lineno">  272</span>&#160;            0, 0, 0, 0,</div><div class="line"><a name="l00273"></a><span class="lineno">  273</span>&#160;            0, 0, 0, 0,</div><div class="line"><a name="l00274"></a><span class="lineno">  274</span>&#160;            0, 0, 0, 0,</div><div class="line"><a name="l00275"></a><span class="lineno">  275</span>&#160;            0, 0, 0, 0,</div><div class="line"><a name="l00276"></a><span class="lineno">  276</span>&#160;            0, 0, 0, 0,</div><div class="line"><a name="l00277"></a><span class="lineno">  277</span>&#160;            0, 0, 0, 0,</div><div class="line"><a name="l00278"></a><span class="lineno">  278</span>&#160;</div><div class="line"><a name="l00279"></a><span class="lineno">  279</span>&#160;            0, 0, 0, 0,</div><div class="line"><a name="l00280"></a><span class="lineno">  280</span>&#160;            0, 0, 0, 0,</div><div class="line"><a name="l00281"></a><span class="lineno">  281</span>&#160;            0, 0, 0, 0,</div><div class="line"><a name="l00282"></a><span class="lineno">  282</span>&#160;            0, 0, 1, 0,</div><div class="line"><a name="l00283"></a><span class="lineno">  283</span>&#160;            0, 2, 3, 0,</div><div class="line"><a name="l00284"></a><span class="lineno">  284</span>&#160;            0, 4, 5, 0,</div><div class="line"><a name="l00285"></a><span class="lineno">  285</span>&#160;            0, 0, 0, 0,</div><div class="line"><a name="l00286"></a><span class="lineno">  286</span>&#160;</div><div class="line"><a name="l00287"></a><span class="lineno">  287</span>&#160;            0, 0, 0, 0,</div><div class="line"><a name="l00288"></a><span class="lineno">  288</span>&#160;            0, 0, 0, 0,</div><div class="line"><a name="l00289"></a><span class="lineno">  289</span>&#160;            0, 0, 0, 0,</div><div class="line"><a name="l00290"></a><span class="lineno">  290</span>&#160;            0, 6, 7, 0,</div><div class="line"><a name="l00291"></a><span class="lineno">  291</span>&#160;            0, 8, 9, 0,</div><div class="line"><a name="l00292"></a><span class="lineno">  292</span>&#160;            0, 10, 11, 0,</div><div class="line"><a name="l00293"></a><span class="lineno">  293</span>&#160;            0, 0, 0, 0,</div><div class="line"><a name="l00294"></a><span class="lineno">  294</span>&#160;</div><div class="line"><a name="l00295"></a><span class="lineno">  295</span>&#160;            0, 0, 0, 0,</div><div class="line"><a name="l00296"></a><span class="lineno">  296</span>&#160;            0, 0, 0, 0,</div><div class="line"><a name="l00297"></a><span class="lineno">  297</span>&#160;            0, 0, 0, 0,</div><div class="line"><a name="l00298"></a><span class="lineno">  298</span>&#160;            0, 0, 0, 0,</div><div class="line"><a name="l00299"></a><span class="lineno">  299</span>&#160;            0, 0, 0, 0,</div><div class="line"><a name="l00300"></a><span class="lineno">  300</span>&#160;            0, 0, 0, 0,</div><div class="line"><a name="l00301"></a><span class="lineno">  301</span>&#160;            0, 0, 0, 0,</div><div class="line"><a name="l00302"></a><span class="lineno">  302</span>&#160;</div><div class="line"><a name="l00303"></a><span class="lineno">  303</span>&#160;            0, 0, 0, 0,</div><div class="line"><a name="l00304"></a><span class="lineno">  304</span>&#160;            0, 0, 0, 0,</div><div class="line"><a name="l00305"></a><span class="lineno">  305</span>&#160;            0, 0, 0, 0,</div><div class="line"><a name="l00306"></a><span class="lineno">  306</span>&#160;            0, 0, 0, 0,</div><div class="line"><a name="l00307"></a><span class="lineno">  307</span>&#160;            0, 0, 0, 0,</div><div class="line"><a name="l00308"></a><span class="lineno">  308</span>&#160;            0, 0, 0, 0,</div><div class="line"><a name="l00309"></a><span class="lineno">  309</span>&#160;            0, 0, 0, 0,</div><div class="line"><a name="l00310"></a><span class="lineno">  310</span>&#160;</div><div class="line"><a name="l00311"></a><span class="lineno">  311</span>&#160;            0, 0, 0, 0,</div><div class="line"><a name="l00312"></a><span class="lineno">  312</span>&#160;            0, 0, 0, 0,</div><div class="line"><a name="l00313"></a><span class="lineno">  313</span>&#160;            0, 0, 0, 0,</div><div class="line"><a name="l00314"></a><span class="lineno">  314</span>&#160;            0, 0, 0, 0,</div><div class="line"><a name="l00315"></a><span class="lineno">  315</span>&#160;            0, 0, 0, 0,</div><div class="line"><a name="l00316"></a><span class="lineno">  316</span>&#160;            0, 0, 0, 0,</div><div class="line"><a name="l00317"></a><span class="lineno">  317</span>&#160;            0, 0, 0, 0,</div><div class="line"><a name="l00318"></a><span class="lineno">  318</span>&#160;</div><div class="line"><a name="l00319"></a><span class="lineno">  319</span>&#160;            0, 0, 0, 0,</div><div class="line"><a name="l00320"></a><span class="lineno">  320</span>&#160;            0, 0, 0, 0,</div><div class="line"><a name="l00321"></a><span class="lineno">  321</span>&#160;            0, 0, 0, 0,</div><div class="line"><a name="l00322"></a><span class="lineno">  322</span>&#160;            0, 12, 13, 0,</div><div class="line"><a name="l00323"></a><span class="lineno">  323</span>&#160;            0, 14, 15, 0,</div><div class="line"><a name="l00324"></a><span class="lineno">  324</span>&#160;            0, 16, 17, 0,</div><div class="line"><a name="l00325"></a><span class="lineno">  325</span>&#160;            0, 0, 0, 0,</div><div class="line"><a name="l00326"></a><span class="lineno">  326</span>&#160;</div><div class="line"><a name="l00327"></a><span class="lineno">  327</span>&#160;            0, 0, 0, 0,</div><div class="line"><a name="l00328"></a><span class="lineno">  328</span>&#160;            0, 0, 0, 0,</div><div class="line"><a name="l00329"></a><span class="lineno">  329</span>&#160;            0, 0, 0, 0,</div><div class="line"><a name="l00330"></a><span class="lineno">  330</span>&#160;            0, 18, 19, 0,</div><div class="line"><a name="l00331"></a><span class="lineno">  331</span>&#160;            0, 20, 21, 0,</div><div class="line"><a name="l00332"></a><span class="lineno">  332</span>&#160;            0, 22, 23, 0,</div><div class="line"><a name="l00333"></a><span class="lineno">  333</span>&#160;            0, 0, 0, 0,</div><div class="line"><a name="l00334"></a><span class="lineno">  334</span>&#160;</div><div class="line"><a name="l00335"></a><span class="lineno">  335</span>&#160;            0, 0, 0, 0,</div><div class="line"><a name="l00336"></a><span class="lineno">  336</span>&#160;            0, 0, 0, 0,</div><div class="line"><a name="l00337"></a><span class="lineno">  337</span>&#160;            0, 0, 0, 0,</div><div class="line"><a name="l00338"></a><span class="lineno">  338</span>&#160;            0, 0, 0, 0,</div><div class="line"><a name="l00339"></a><span class="lineno">  339</span>&#160;            0, 0, 0, 0,</div><div class="line"><a name="l00340"></a><span class="lineno">  340</span>&#160;            0, 0, 0, 0,</div><div class="line"><a name="l00341"></a><span class="lineno">  341</span>&#160;            0, 0, 0, 0,</div><div class="line"><a name="l00342"></a><span class="lineno">  342</span>&#160;</div><div class="line"><a name="l00343"></a><span class="lineno">  343</span>&#160;            0, 0, 0, 0,</div><div class="line"><a name="l00344"></a><span class="lineno">  344</span>&#160;            0, 0, 0, 0,</div><div class="line"><a name="l00345"></a><span class="lineno">  345</span>&#160;            0, 0, 0, 0,</div><div class="line"><a name="l00346"></a><span class="lineno">  346</span>&#160;            0, 0, 0, 0,</div><div class="line"><a name="l00347"></a><span class="lineno">  347</span>&#160;            0, 0, 0, 0,</div><div class="line"><a name="l00348"></a><span class="lineno">  348</span>&#160;            0, 0, 0, 0,</div><div class="line"><a name="l00349"></a><span class="lineno">  349</span>&#160;            0, 0, 0, 0,</div><div class="line"><a name="l00350"></a><span class="lineno">  350</span>&#160;</div><div class="line"><a name="l00351"></a><span class="lineno">  351</span>&#160;            0, 0, 0, 0,</div><div class="line"><a name="l00352"></a><span class="lineno">  352</span>&#160;            0, 0, 0, 0,</div><div class="line"><a name="l00353"></a><span class="lineno">  353</span>&#160;            0, 0, 0, 0,</div><div class="line"><a name="l00354"></a><span class="lineno">  354</span>&#160;            0, 0, 0, 0,</div><div class="line"><a name="l00355"></a><span class="lineno">  355</span>&#160;            0, 0, 0, 0,</div><div class="line"><a name="l00356"></a><span class="lineno">  356</span>&#160;            0, 0, 0, 0,</div><div class="line"><a name="l00357"></a><span class="lineno">  357</span>&#160;            0, 0, 0, 0,</div><div class="line"><a name="l00358"></a><span class="lineno">  358</span>&#160;</div><div class="line"><a name="l00359"></a><span class="lineno">  359</span>&#160;            0, 0, 0, 0,</div><div class="line"><a name="l00360"></a><span class="lineno">  360</span>&#160;            0, 0, 0, 0,</div><div class="line"><a name="l00361"></a><span class="lineno">  361</span>&#160;            0, 0, 0, 0,</div><div class="line"><a name="l00362"></a><span class="lineno">  362</span>&#160;            0, 0, 0, 0,</div><div class="line"><a name="l00363"></a><span class="lineno">  363</span>&#160;            0, 0, 0, 0,</div><div class="line"><a name="l00364"></a><span class="lineno">  364</span>&#160;            0, 0, 0, 0,</div><div class="line"><a name="l00365"></a><span class="lineno">  365</span>&#160;            0, 0, 0, 0,</div><div class="line"><a name="l00366"></a><span class="lineno">  366</span>&#160;</div><div class="line"><a name="l00367"></a><span class="lineno">  367</span>&#160;            0, 0, 0, 0,</div><div class="line"><a name="l00368"></a><span class="lineno">  368</span>&#160;            0, 0, 0, 0,</div><div class="line"><a name="l00369"></a><span class="lineno">  369</span>&#160;            0, 0, 0, 0,</div><div class="line"><a name="l00370"></a><span class="lineno">  370</span>&#160;            0, 0, 0, 0,</div><div class="line"><a name="l00371"></a><span class="lineno">  371</span>&#160;            0, 0, 0, 0,</div><div class="line"><a name="l00372"></a><span class="lineno">  372</span>&#160;            0, 0, 0, 0,</div><div class="line"><a name="l00373"></a><span class="lineno">  373</span>&#160;            0, 0, 0, 0,</div><div class="line"><a name="l00374"></a><span class="lineno">  374</span>&#160;</div><div class="line"><a name="l00375"></a><span class="lineno">  375</span>&#160;            0, 0, 0, 0,</div><div class="line"><a name="l00376"></a><span class="lineno">  376</span>&#160;            0, 0, 0, 0,</div><div class="line"><a name="l00377"></a><span class="lineno">  377</span>&#160;            0, 0, 0, 0,</div><div class="line"><a name="l00378"></a><span class="lineno">  378</span>&#160;            0, 0, 0, 0,</div><div class="line"><a name="l00379"></a><span class="lineno">  379</span>&#160;            0, 0, 0, 0,</div><div class="line"><a name="l00380"></a><span class="lineno">  380</span>&#160;            0, 0, 0, 0,</div><div class="line"><a name="l00381"></a><span class="lineno">  381</span>&#160;            0, 0, 0, 0</div><div class="line"><a name="l00382"></a><span class="lineno">  382</span>&#160;        },</div><div class="line"><a name="l00383"></a><span class="lineno">  383</span>&#160;        qScale, qOffset);</div><div class="line"><a name="l00384"></a><span class="lineno">  384</span>&#160;</div><div class="line"><a name="l00385"></a><span class="lineno">  385</span>&#160;    std::vector&lt;T&gt; actualOutput(outputTensorInfo.GetNumElements());</div><div class="line"><a name="l00386"></a><span class="lineno">  386</span>&#160;</div><div class="line"><a name="l00387"></a><span class="lineno">  387</span>&#160;    std::unique_ptr&lt;armnn::ITensorHandle&gt; inputHandle = tensorHandleFactory.<a class="code" href="classarmnn_1_1_i_tensor_handle_factory.xhtml#a375f11dd42ff042435e8771cf287b20c">CreateTensorHandle</a>(inputTensorInfo);</div><div class="line"><a name="l00388"></a><span class="lineno">  388</span>&#160;    std::unique_ptr&lt;armnn::ITensorHandle&gt; outputHandle = tensorHandleFactory.<a class="code" href="classarmnn_1_1_i_tensor_handle_factory.xhtml#a375f11dd42ff042435e8771cf287b20c">CreateTensorHandle</a>(outputTensorInfo);</div><div class="line"><a name="l00389"></a><span class="lineno">  389</span>&#160;</div><div class="line"><a name="l00390"></a><span class="lineno">  390</span>&#160;    <a class="code" href="structarmnn_1_1_pad_queue_descriptor.xhtml">armnn::PadQueueDescriptor</a> descriptor;</div><div class="line"><a name="l00391"></a><span class="lineno">  391</span>&#160;</div><div class="line"><a name="l00392"></a><span class="lineno">  392</span>&#160;    std::vector&lt;std::pair&lt;unsigned int, unsigned int&gt;&gt; PadList;</div><div class="line"><a name="l00393"></a><span class="lineno">  393</span>&#160;    PadList.push_back(std::pair&lt;unsigned int, unsigned int&gt;(1,1));</div><div class="line"><a name="l00394"></a><span class="lineno">  394</span>&#160;    PadList.push_back(std::pair&lt;unsigned int, unsigned int&gt;(2,1));</div><div class="line"><a name="l00395"></a><span class="lineno">  395</span>&#160;    PadList.push_back(std::pair&lt;unsigned int, unsigned int&gt;(3,1));</div><div class="line"><a name="l00396"></a><span class="lineno">  396</span>&#160;    PadList.push_back(std::pair&lt;unsigned int, unsigned int&gt;(1,1));</div><div class="line"><a name="l00397"></a><span class="lineno">  397</span>&#160;</div><div class="line"><a name="l00398"></a><span class="lineno">  398</span>&#160;    descriptor.<a class="code" href="structarmnn_1_1_queue_descriptor_with_parameters.xhtml#aad91b9bbf7aa365d304febe79a3d1333">m_Parameters</a>.<a class="code" href="structarmnn_1_1_pad_descriptor.xhtml#a85f98c94e11f65a6b73f831735c040f3">m_PadList</a> = PadList;</div><div class="line"><a name="l00399"></a><span class="lineno">  399</span>&#160;    <a class="code" href="structarmnn_1_1_workload_info.xhtml">armnn::WorkloadInfo</a> <a class="code" href="namespacearmnn.xhtml#a4dc0adc6737b5944e7671bee71788407acaf9b6b99962bf5c2264824231d7a40c">info</a>;</div><div class="line"><a name="l00400"></a><span class="lineno">  400</span>&#160;</div><div class="line"><a name="l00401"></a><span class="lineno">  401</span>&#160;    AddInputToWorkload(descriptor, info, inputTensorInfo, inputHandle.get());</div><div class="line"><a name="l00402"></a><span class="lineno">  402</span>&#160;    AddOutputToWorkload(descriptor, info, outputTensorInfo, outputHandle.get());</div><div class="line"><a name="l00403"></a><span class="lineno">  403</span>&#160;</div><div class="line"><a name="l00404"></a><span class="lineno">  404</span>&#160;    std::unique_ptr&lt;armnn::IWorkload&gt; workload = workloadFactory.<a class="code" href="classarmnn_1_1_i_workload_factory.xhtml#a13060ebb89d2c21a7a5d897e99cccf72">CreateWorkload</a>(<a class="code" href="namespacearmnn.xhtml#a56943a0946e5f15e5e58054b8e7a04a4ade43468adaf6acb2c38ebc0c1176f82f">armnn::LayerType::Pad</a>,</div><div class="line"><a name="l00405"></a><span class="lineno">  405</span>&#160;                                                                                descriptor,</div><div class="line"><a name="l00406"></a><span class="lineno">  406</span>&#160;                                                                                info);</div><div class="line"><a name="l00407"></a><span class="lineno">  407</span>&#160;</div><div class="line"><a name="l00408"></a><span class="lineno">  408</span>&#160;    inputHandle-&gt;Allocate();</div><div class="line"><a name="l00409"></a><span class="lineno">  409</span>&#160;    outputHandle-&gt;Allocate();</div><div class="line"><a name="l00410"></a><span class="lineno">  410</span>&#160;</div><div class="line"><a name="l00411"></a><span class="lineno">  411</span>&#160;    <a class="code" href="include_2armnn_test_utils_2_tensor_copy_utils_8hpp.xhtml#ae15f1a3c55d2db87683577de9fa4437c">CopyDataToITensorHandle</a>(inputHandle.get(), inputValues.data());</div><div class="line"><a name="l00412"></a><span class="lineno">  412</span>&#160;</div><div class="line"><a name="l00413"></a><span class="lineno">  413</span>&#160;    workload-&gt;PostAllocationConfigure();</div><div class="line"><a name="l00414"></a><span class="lineno">  414</span>&#160;    workload-&gt;Execute();</div><div class="line"><a name="l00415"></a><span class="lineno">  415</span>&#160;</div><div class="line"><a name="l00416"></a><span class="lineno">  416</span>&#160;    <a class="code" href="include_2armnn_test_utils_2_tensor_copy_utils_8hpp.xhtml#ab5dfed8358e500ed523d78090ec78e88">CopyDataFromITensorHandle</a>(actualOutput.data(), outputHandle.get());</div><div class="line"><a name="l00417"></a><span class="lineno">  417</span>&#160;</div><div class="line"><a name="l00418"></a><span class="lineno">  418</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="struct_layer_test_result.xhtml">LayerTestResult&lt;T, 4&gt;</a>(actualOutput,</div><div class="line"><a name="l00419"></a><span class="lineno">  419</span>&#160;                                 expectedOutputValues,</div><div class="line"><a name="l00420"></a><span class="lineno">  420</span>&#160;                                 outputHandle-&gt;GetShape(),</div><div class="line"><a name="l00421"></a><span class="lineno">  421</span>&#160;                                 outputTensorInfo.GetShape());</div><div class="line"><a name="l00422"></a><span class="lineno">  422</span>&#160;}</div><div class="ttc" id="classarmnn_1_1_tensor_info_xhtml"><div class="ttname"><a href="classarmnn_1_1_tensor_info.xhtml">armnn::TensorInfo</a></div><div class="ttdef"><b>Definition:</b> <a href="_tensor_8hpp_source.xhtml#l00152">Tensor.hpp:152</a></div></div>
<div class="ttc" id="structarmnn_1_1_pad_descriptor_xhtml_a85f98c94e11f65a6b73f831735c040f3"><div class="ttname"><a href="structarmnn_1_1_pad_descriptor.xhtml#a85f98c94e11f65a6b73f831735c040f3">armnn::PadDescriptor::m_PadList</a></div><div class="ttdeci">std::vector&lt; std::pair&lt; unsigned int, unsigned int &gt; &gt; m_PadList</div><div class="ttdoc">Specifies the padding for input dimension. </div><div class="ttdef"><b>Definition:</b> <a href="_descriptors_8hpp_source.xhtml#l01170">Descriptors.hpp:1170</a></div></div>
<div class="ttc" id="namespacearmnn_xhtml_a44affeeb090c3c6a3062830562672e84"><div class="ttname"><a href="namespacearmnn.xhtml#a44affeeb090c3c6a3062830562672e84">armnn::IgnoreUnused</a></div><div class="ttdeci">void IgnoreUnused(Ts &amp;&amp;...)</div><div class="ttdef"><b>Definition:</b> <a href="_ignore_unused_8hpp_source.xhtml#l00014">IgnoreUnused.hpp:14</a></div></div>
<div class="ttc" id="classarmnn_1_1_tensor_shape_xhtml"><div class="ttname"><a href="classarmnn_1_1_tensor_shape.xhtml">armnn::TensorShape</a></div><div class="ttdef"><b>Definition:</b> <a href="_tensor_8hpp_source.xhtml#l00020">Tensor.hpp:20</a></div></div>
<div class="ttc" id="structarmnn_1_1_queue_descriptor_with_parameters_xhtml_aad91b9bbf7aa365d304febe79a3d1333"><div class="ttname"><a href="structarmnn_1_1_queue_descriptor_with_parameters.xhtml#aad91b9bbf7aa365d304febe79a3d1333">armnn::QueueDescriptorWithParameters::m_Parameters</a></div><div class="ttdeci">LayerDescriptor m_Parameters</div><div class="ttdef"><b>Definition:</b> <a href="include_2armnn_2backends_2_workload_data_8hpp_source.xhtml#l00054">WorkloadData.hpp:54</a></div></div>
<div class="ttc" id="structarmnn_1_1_pad_queue_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_pad_queue_descriptor.xhtml">armnn::PadQueueDescriptor</a></div><div class="ttdef"><b>Definition:</b> <a href="include_2armnn_2backends_2_workload_data_8hpp_source.xhtml#l00304">WorkloadData.hpp:304</a></div></div>
<div class="ttc" id="namespacearmnn_xhtml_a56943a0946e5f15e5e58054b8e7a04a4ade43468adaf6acb2c38ebc0c1176f82f"><div class="ttname"><a href="namespacearmnn.xhtml#a56943a0946e5f15e5e58054b8e7a04a4ade43468adaf6acb2c38ebc0c1176f82f">armnn::LayerType::Pad</a></div></div>
<div class="ttc" id="include_2armnn_test_utils_2_tensor_copy_utils_8hpp_xhtml_ab5dfed8358e500ed523d78090ec78e88"><div class="ttname"><a href="include_2armnn_test_utils_2_tensor_copy_utils_8hpp.xhtml#ab5dfed8358e500ed523d78090ec78e88">CopyDataFromITensorHandle</a></div><div class="ttdeci">void CopyDataFromITensorHandle(void *mem, const armnn::ITensorHandle *tensorHandle)</div><div class="ttdef"><b>Definition:</b> <a href="_tensor_copy_utils_8cpp_source.xhtml#l00014">TensorCopyUtils.cpp:14</a></div></div>
<div class="ttc" id="namespacearmnn_xhtml_a4dc0adc6737b5944e7671bee71788407acaf9b6b99962bf5c2264824231d7a40c"><div class="ttname"><a href="namespacearmnn.xhtml#a4dc0adc6737b5944e7671bee71788407acaf9b6b99962bf5c2264824231d7a40c">armnn::BoostLogSeverityMapping::info</a></div></div>
<div class="ttc" id="include_2armnn_test_utils_2_tensor_copy_utils_8hpp_xhtml_ae15f1a3c55d2db87683577de9fa4437c"><div class="ttname"><a href="include_2armnn_test_utils_2_tensor_copy_utils_8hpp.xhtml#ae15f1a3c55d2db87683577de9fa4437c">CopyDataToITensorHandle</a></div><div class="ttdeci">void CopyDataToITensorHandle(armnn::ITensorHandle *tensorHandle, const void *memory)</div><div class="ttdef"><b>Definition:</b> <a href="_tensor_copy_utils_8cpp_source.xhtml#l00009">TensorCopyUtils.cpp:9</a></div></div>
<div class="ttc" id="structarmnn_1_1_workload_info_xhtml"><div class="ttname"><a href="structarmnn_1_1_workload_info.xhtml">armnn::WorkloadInfo</a></div><div class="ttdoc">Contains information about TensorInfos of a layer. </div><div class="ttdef"><b>Definition:</b> <a href="include_2armnn_2backends_2_workload_info_8hpp_source.xhtml#l00016">WorkloadInfo.hpp:16</a></div></div>
<div class="ttc" id="struct_layer_test_result_xhtml"><div class="ttname"><a href="struct_layer_test_result.xhtml">LayerTestResult</a></div><div class="ttdef"><b>Definition:</b> <a href="include_2armnn_test_utils_2_layer_test_result_8hpp_source.xhtml#l00015">LayerTestResult.hpp:15</a></div></div>
<div class="ttc" id="classarmnn_1_1_i_workload_factory_xhtml_a13060ebb89d2c21a7a5d897e99cccf72"><div class="ttname"><a href="classarmnn_1_1_i_workload_factory.xhtml#a13060ebb89d2c21a7a5d897e99cccf72">armnn::IWorkloadFactory::CreateWorkload</a></div><div class="ttdeci">virtual std::unique_ptr&lt; IWorkload &gt; CreateWorkload(LayerType type, const QueueDescriptor &amp;descriptor, const WorkloadInfo &amp;info) const</div><div class="ttdef"><b>Definition:</b> <a href="_workload_factory_8cpp_source.xhtml#l01541">WorkloadFactory.cpp:1541</a></div></div>
<div class="ttc" id="classarmnn_1_1_i_tensor_handle_factory_xhtml_a375f11dd42ff042435e8771cf287b20c"><div class="ttname"><a href="classarmnn_1_1_i_tensor_handle_factory.xhtml#a375f11dd42ff042435e8771cf287b20c">armnn::ITensorHandleFactory::CreateTensorHandle</a></div><div class="ttdeci">virtual std::unique_ptr&lt; ITensorHandle &gt; CreateTensorHandle(const TensorInfo &amp;tensorInfo) const =0</div></div>
</div><!-- fragment -->
</div>
</div>
<a id="aa1063d52bdf72710631277009068e240"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aa1063d52bdf72710631277009068e240">&#9670;&nbsp;</a></span>PadBFloat162dCustomPaddingTest()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="struct_layer_test_result.xhtml">LayerTestResult</a>&lt;<a class="el" href="classarmnn_1_1_b_float16.xhtml">armnn::BFloat16</a>, 2&gt; PadBFloat162dCustomPaddingTest </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classarmnn_1_1_i_workload_factory.xhtml">armnn::IWorkloadFactory</a> &amp;&#160;</td>
          <td class="paramname"><em>workloadFactory</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_i_backend_internal.xhtml#a693b40e6b94e958836aeb0410ca186bd">armnn::IBackendInternal::IMemoryManagerSharedPtr</a> &amp;&#160;</td>
          <td class="paramname"><em>memoryManager</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_i_tensor_handle_factory.xhtml">armnn::ITensorHandleFactory</a> &amp;&#160;</td>
          <td class="paramname"><em>tensorHandleFactory</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_pad_test_impl_8cpp_source.xhtml#l00624">624</a> of file <a class="el" href="_pad_test_impl_8cpp_source.xhtml">PadTestImpl.cpp</a>.</p>

<p class="reference">Referenced by <a class="el" href="_ref_layer_tests_8cpp_source.xhtml#l00014">TEST_SUITE()</a>.</p>
<div class="fragment"><div class="line"><a name="l00628"></a><span class="lineno">  628</span>&#160;{</div><div class="line"><a name="l00629"></a><span class="lineno">  629</span>&#160;    <span class="keywordflow">return</span> Pad2dTestCommon&lt;armnn::DataType::BFloat16&gt;(</div><div class="line"><a name="l00630"></a><span class="lineno">  630</span>&#160;            workloadFactory, memoryManager, tensorHandleFactory, 0.0f, 0, 1.0f);</div><div class="line"><a name="l00631"></a><span class="lineno">  631</span>&#160;}</div></div><!-- fragment -->
</div>
</div>
<a id="a111af1a67fc0a1f54e7dbc0bc0d3424a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a111af1a67fc0a1f54e7dbc0bc0d3424a">&#9670;&nbsp;</a></span>PadBFloat162dTest()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="struct_layer_test_result.xhtml">LayerTestResult</a>&lt;<a class="el" href="classarmnn_1_1_b_float16.xhtml">armnn::BFloat16</a>, 2&gt; PadBFloat162dTest </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classarmnn_1_1_i_workload_factory.xhtml">armnn::IWorkloadFactory</a> &amp;&#160;</td>
          <td class="paramname"><em>workloadFactory</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_i_backend_internal.xhtml#a693b40e6b94e958836aeb0410ca186bd">armnn::IBackendInternal::IMemoryManagerSharedPtr</a> &amp;&#160;</td>
          <td class="paramname"><em>memoryManager</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_i_tensor_handle_factory.xhtml">armnn::ITensorHandleFactory</a> &amp;&#160;</td>
          <td class="paramname"><em>tensorHandleFactory</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_pad_test_impl_8cpp_source.xhtml#l00616">616</a> of file <a class="el" href="_pad_test_impl_8cpp_source.xhtml">PadTestImpl.cpp</a>.</p>

<p class="reference">Referenced by <a class="el" href="_ref_layer_tests_8cpp_source.xhtml#l00014">TEST_SUITE()</a>.</p>
<div class="fragment"><div class="line"><a name="l00620"></a><span class="lineno">  620</span>&#160;{</div><div class="line"><a name="l00621"></a><span class="lineno">  621</span>&#160;    <span class="keywordflow">return</span> Pad2dTestCommon&lt;armnn::DataType::BFloat16&gt;(workloadFactory, memoryManager, tensorHandleFactory, 0.0f, 0);</div><div class="line"><a name="l00622"></a><span class="lineno">  622</span>&#160;}</div></div><!-- fragment -->
</div>
</div>
<a id="ae87408ffe890b6f4d2bb8de404773b8e"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ae87408ffe890b6f4d2bb8de404773b8e">&#9670;&nbsp;</a></span>PadBFloat163dTest()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="struct_layer_test_result.xhtml">LayerTestResult</a>&lt;<a class="el" href="classarmnn_1_1_b_float16.xhtml">armnn::BFloat16</a>, 3&gt; PadBFloat163dTest </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classarmnn_1_1_i_workload_factory.xhtml">armnn::IWorkloadFactory</a> &amp;&#160;</td>
          <td class="paramname"><em>workloadFactory</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_i_backend_internal.xhtml#a693b40e6b94e958836aeb0410ca186bd">armnn::IBackendInternal::IMemoryManagerSharedPtr</a> &amp;&#160;</td>
          <td class="paramname"><em>memoryManager</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_i_tensor_handle_factory.xhtml">armnn::ITensorHandleFactory</a> &amp;&#160;</td>
          <td class="paramname"><em>tensorHandleFactory</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_pad_test_impl_8cpp_source.xhtml#l00633">633</a> of file <a class="el" href="_pad_test_impl_8cpp_source.xhtml">PadTestImpl.cpp</a>.</p>

<p class="reference">Referenced by <a class="el" href="_ref_layer_tests_8cpp_source.xhtml#l00014">TEST_SUITE()</a>.</p>
<div class="fragment"><div class="line"><a name="l00637"></a><span class="lineno">  637</span>&#160;{</div><div class="line"><a name="l00638"></a><span class="lineno">  638</span>&#160;    <span class="keywordflow">return</span> Pad3dTestCommon&lt;armnn::DataType::BFloat16&gt;(workloadFactory, memoryManager, tensorHandleFactory, 0.0f, 0);</div><div class="line"><a name="l00639"></a><span class="lineno">  639</span>&#160;}</div></div><!-- fragment -->
</div>
</div>
<a id="a666c18a19dfa5f67c8eb310ee88eb3d5"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a666c18a19dfa5f67c8eb310ee88eb3d5">&#9670;&nbsp;</a></span>PadBFloat164dTest()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="struct_layer_test_result.xhtml">LayerTestResult</a>&lt;<a class="el" href="classarmnn_1_1_b_float16.xhtml">armnn::BFloat16</a>, 4&gt; PadBFloat164dTest </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classarmnn_1_1_i_workload_factory.xhtml">armnn::IWorkloadFactory</a> &amp;&#160;</td>
          <td class="paramname"><em>workloadFactory</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_i_backend_internal.xhtml#a693b40e6b94e958836aeb0410ca186bd">armnn::IBackendInternal::IMemoryManagerSharedPtr</a> &amp;&#160;</td>
          <td class="paramname"><em>memoryManager</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_i_tensor_handle_factory.xhtml">armnn::ITensorHandleFactory</a> &amp;&#160;</td>
          <td class="paramname"><em>tensorHandleFactory</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_pad_test_impl_8cpp_source.xhtml#l00641">641</a> of file <a class="el" href="_pad_test_impl_8cpp_source.xhtml">PadTestImpl.cpp</a>.</p>

<p class="reference">Referenced by <a class="el" href="_ref_layer_tests_8cpp_source.xhtml#l00014">TEST_SUITE()</a>.</p>
<div class="fragment"><div class="line"><a name="l00645"></a><span class="lineno">  645</span>&#160;{</div><div class="line"><a name="l00646"></a><span class="lineno">  646</span>&#160;    <span class="keywordflow">return</span> Pad4dTestCommon&lt;armnn::DataType::BFloat16&gt;(workloadFactory, memoryManager, tensorHandleFactory, 0.0f, 0);</div><div class="line"><a name="l00647"></a><span class="lineno">  647</span>&#160;}</div></div><!-- fragment -->
</div>
</div>
<a id="a334b79a8f152daa9c51be2a8ef29b98e"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a334b79a8f152daa9c51be2a8ef29b98e">&#9670;&nbsp;</a></span>PadFloat322dCustomPaddingTest()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="struct_layer_test_result.xhtml">LayerTestResult</a>&lt;float, 2&gt; PadFloat322dCustomPaddingTest </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classarmnn_1_1_i_workload_factory.xhtml">armnn::IWorkloadFactory</a> &amp;&#160;</td>
          <td class="paramname"><em>workloadFactory</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_i_backend_internal.xhtml#a693b40e6b94e958836aeb0410ca186bd">armnn::IBackendInternal::IMemoryManagerSharedPtr</a> &amp;&#160;</td>
          <td class="paramname"><em>memoryManager</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_i_tensor_handle_factory.xhtml">armnn::ITensorHandleFactory</a> &amp;&#160;</td>
          <td class="paramname"><em>tensorHandleFactory</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_pad_test_impl_8cpp_source.xhtml#l00591">591</a> of file <a class="el" href="_pad_test_impl_8cpp_source.xhtml">PadTestImpl.cpp</a>.</p>

<p class="reference">Referenced by <a class="el" href="_cl_layer_tests_8cpp_source.xhtml#l00027">TEST_SUITE()</a>.</p>
<div class="fragment"><div class="line"><a name="l00595"></a><span class="lineno">  595</span>&#160;{</div><div class="line"><a name="l00596"></a><span class="lineno">  596</span>&#160;    <span class="keywordflow">return</span> Pad2dTestCommon&lt;armnn::DataType::Float32&gt;(</div><div class="line"><a name="l00597"></a><span class="lineno">  597</span>&#160;            workloadFactory, memoryManager, tensorHandleFactory, 0.0f, 0, 1.0f);</div><div class="line"><a name="l00598"></a><span class="lineno">  598</span>&#160;}</div></div><!-- fragment -->
</div>
</div>
<a id="a3d33148611360a0755e7c437e2e683fd"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a3d33148611360a0755e7c437e2e683fd">&#9670;&nbsp;</a></span>PadFloat322dTest()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="struct_layer_test_result.xhtml">LayerTestResult</a>&lt;float, 2&gt; PadFloat322dTest </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classarmnn_1_1_i_workload_factory.xhtml">armnn::IWorkloadFactory</a> &amp;&#160;</td>
          <td class="paramname"><em>workloadFactory</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_i_backend_internal.xhtml#a693b40e6b94e958836aeb0410ca186bd">armnn::IBackendInternal::IMemoryManagerSharedPtr</a> &amp;&#160;</td>
          <td class="paramname"><em>memoryManager</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_i_tensor_handle_factory.xhtml">armnn::ITensorHandleFactory</a> &amp;&#160;</td>
          <td class="paramname"><em>tensorHandleFactory</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_pad_test_impl_8cpp_source.xhtml#l00583">583</a> of file <a class="el" href="_pad_test_impl_8cpp_source.xhtml">PadTestImpl.cpp</a>.</p>

<p class="reference">Referenced by <a class="el" href="_cl_layer_tests_8cpp_source.xhtml#l00027">TEST_SUITE()</a>.</p>
<div class="fragment"><div class="line"><a name="l00587"></a><span class="lineno">  587</span>&#160;{</div><div class="line"><a name="l00588"></a><span class="lineno">  588</span>&#160;    <span class="keywordflow">return</span> Pad2dTestCommon&lt;armnn::DataType::Float32&gt;(workloadFactory, memoryManager, tensorHandleFactory, 0.0f, 0);</div><div class="line"><a name="l00589"></a><span class="lineno">  589</span>&#160;}</div></div><!-- fragment -->
</div>
</div>
<a id="a162b712570127a53c764f0a90d45e8a8"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a162b712570127a53c764f0a90d45e8a8">&#9670;&nbsp;</a></span>PadFloat323dTest()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="struct_layer_test_result.xhtml">LayerTestResult</a>&lt;float, 3&gt; PadFloat323dTest </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classarmnn_1_1_i_workload_factory.xhtml">armnn::IWorkloadFactory</a> &amp;&#160;</td>
          <td class="paramname"><em>workloadFactory</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_i_backend_internal.xhtml#a693b40e6b94e958836aeb0410ca186bd">armnn::IBackendInternal::IMemoryManagerSharedPtr</a> &amp;&#160;</td>
          <td class="paramname"><em>memoryManager</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_i_tensor_handle_factory.xhtml">armnn::ITensorHandleFactory</a> &amp;&#160;</td>
          <td class="paramname"><em>tensorHandleFactory</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_pad_test_impl_8cpp_source.xhtml#l00600">600</a> of file <a class="el" href="_pad_test_impl_8cpp_source.xhtml">PadTestImpl.cpp</a>.</p>

<p class="reference">Referenced by <a class="el" href="_cl_layer_tests_8cpp_source.xhtml#l00027">TEST_SUITE()</a>.</p>
<div class="fragment"><div class="line"><a name="l00604"></a><span class="lineno">  604</span>&#160;{</div><div class="line"><a name="l00605"></a><span class="lineno">  605</span>&#160;    <span class="keywordflow">return</span> Pad3dTestCommon&lt;armnn::DataType::Float32&gt;(workloadFactory, memoryManager, tensorHandleFactory, 0.0f, 0);</div><div class="line"><a name="l00606"></a><span class="lineno">  606</span>&#160;}</div></div><!-- fragment -->
</div>
</div>
<a id="a556815dada60a2ed3d40cfe6aefc0459"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a556815dada60a2ed3d40cfe6aefc0459">&#9670;&nbsp;</a></span>PadFloat324dTest()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="struct_layer_test_result.xhtml">LayerTestResult</a>&lt;float, 4&gt; PadFloat324dTest </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classarmnn_1_1_i_workload_factory.xhtml">armnn::IWorkloadFactory</a> &amp;&#160;</td>
          <td class="paramname"><em>workloadFactory</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_i_backend_internal.xhtml#a693b40e6b94e958836aeb0410ca186bd">armnn::IBackendInternal::IMemoryManagerSharedPtr</a> &amp;&#160;</td>
          <td class="paramname"><em>memoryManager</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_i_tensor_handle_factory.xhtml">armnn::ITensorHandleFactory</a> &amp;&#160;</td>
          <td class="paramname"><em>tensorHandleFactory</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_pad_test_impl_8cpp_source.xhtml#l00608">608</a> of file <a class="el" href="_pad_test_impl_8cpp_source.xhtml">PadTestImpl.cpp</a>.</p>

<p class="reference">Referenced by <a class="el" href="_cl_layer_tests_8cpp_source.xhtml#l00027">TEST_SUITE()</a>.</p>
<div class="fragment"><div class="line"><a name="l00612"></a><span class="lineno">  612</span>&#160;{</div><div class="line"><a name="l00613"></a><span class="lineno">  613</span>&#160;    <span class="keywordflow">return</span> Pad4dTestCommon&lt;armnn::DataType::Float32&gt;(workloadFactory, memoryManager, tensorHandleFactory, 0.0f, 0);</div><div class="line"><a name="l00614"></a><span class="lineno">  614</span>&#160;}</div></div><!-- fragment -->
</div>
</div>
<a id="a2ce2442af7f253f7f9eb62b131bd5e8d"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a2ce2442af7f253f7f9eb62b131bd5e8d">&#9670;&nbsp;</a></span>PadInt82dAsymmTest()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="struct_layer_test_result.xhtml">LayerTestResult</a>&lt;int8_t, 2&gt; PadInt82dAsymmTest </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classarmnn_1_1_i_workload_factory.xhtml">armnn::IWorkloadFactory</a> &amp;&#160;</td>
          <td class="paramname"><em>workloadFactory</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_i_backend_internal.xhtml#a693b40e6b94e958836aeb0410ca186bd">armnn::IBackendInternal::IMemoryManagerSharedPtr</a> &amp;&#160;</td>
          <td class="paramname"><em>memoryManager</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_i_tensor_handle_factory.xhtml">armnn::ITensorHandleFactory</a> &amp;&#160;</td>
          <td class="paramname"><em>tensorHandleFactory</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="aa1b91d1261a469f3315b68e4f104aca5"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aa1b91d1261a469f3315b68e4f104aca5">&#9670;&nbsp;</a></span>PadInt82dCustomPaddingAsymmTest()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="struct_layer_test_result.xhtml">LayerTestResult</a>&lt;int8_t, 2&gt; PadInt82dCustomPaddingAsymmTest </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classarmnn_1_1_i_workload_factory.xhtml">armnn::IWorkloadFactory</a> &amp;&#160;</td>
          <td class="paramname"><em>workloadFactory</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_i_backend_internal.xhtml#a693b40e6b94e958836aeb0410ca186bd">armnn::IBackendInternal::IMemoryManagerSharedPtr</a> &amp;&#160;</td>
          <td class="paramname"><em>memoryManager</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_i_tensor_handle_factory.xhtml">armnn::ITensorHandleFactory</a> &amp;&#160;</td>
          <td class="paramname"><em>tensorHandleFactory</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a2bc8d94473cc694f6cd26ac6e77b1312"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a2bc8d94473cc694f6cd26ac6e77b1312">&#9670;&nbsp;</a></span>PadInt82dCustomPaddingTest()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="struct_layer_test_result.xhtml">LayerTestResult</a>&lt;int8_t, 2&gt; PadInt82dCustomPaddingTest </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classarmnn_1_1_i_workload_factory.xhtml">armnn::IWorkloadFactory</a> &amp;&#160;</td>
          <td class="paramname"><em>workloadFactory</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_i_backend_internal.xhtml#a693b40e6b94e958836aeb0410ca186bd">armnn::IBackendInternal::IMemoryManagerSharedPtr</a> &amp;&#160;</td>
          <td class="paramname"><em>memoryManager</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_i_tensor_handle_factory.xhtml">armnn::ITensorHandleFactory</a> &amp;&#160;</td>
          <td class="paramname"><em>tensorHandleFactory</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_pad_test_impl_8cpp_source.xhtml#l00658">658</a> of file <a class="el" href="_pad_test_impl_8cpp_source.xhtml">PadTestImpl.cpp</a>.</p>

<p class="reference">Referenced by <a class="el" href="_ref_layer_tests_8cpp_source.xhtml#l00014">TEST_SUITE()</a>.</p>
<div class="fragment"><div class="line"><a name="l00662"></a><span class="lineno">  662</span>&#160;{</div><div class="line"><a name="l00663"></a><span class="lineno">  663</span>&#160;    <span class="keywordflow">return</span> Pad2dTestCommon&lt;armnn::DataType::QSymmS8&gt;(</div><div class="line"><a name="l00664"></a><span class="lineno">  664</span>&#160;            workloadFactory, memoryManager, tensorHandleFactory, 1.0f, 0, 1.0f);</div><div class="line"><a name="l00665"></a><span class="lineno">  665</span>&#160;}</div></div><!-- fragment -->
</div>
</div>
<a id="a559cf49994dbac766afe63cc4d19cf95"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a559cf49994dbac766afe63cc4d19cf95">&#9670;&nbsp;</a></span>PadInt82dTest()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="struct_layer_test_result.xhtml">LayerTestResult</a>&lt;int8_t, 2&gt; PadInt82dTest </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classarmnn_1_1_i_workload_factory.xhtml">armnn::IWorkloadFactory</a> &amp;&#160;</td>
          <td class="paramname"><em>workloadFactory</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_i_backend_internal.xhtml#a693b40e6b94e958836aeb0410ca186bd">armnn::IBackendInternal::IMemoryManagerSharedPtr</a> &amp;&#160;</td>
          <td class="paramname"><em>memoryManager</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_i_tensor_handle_factory.xhtml">armnn::ITensorHandleFactory</a> &amp;&#160;</td>
          <td class="paramname"><em>tensorHandleFactory</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_pad_test_impl_8cpp_source.xhtml#l00649">649</a> of file <a class="el" href="_pad_test_impl_8cpp_source.xhtml">PadTestImpl.cpp</a>.</p>

<p class="reference">Referenced by <a class="el" href="_ref_layer_tests_8cpp_source.xhtml#l00014">TEST_SUITE()</a>.</p>
<div class="fragment"><div class="line"><a name="l00653"></a><span class="lineno">  653</span>&#160;{</div><div class="line"><a name="l00654"></a><span class="lineno">  654</span>&#160;    <span class="keywordflow">return</span> Pad2dTestCommon&lt;armnn::DataType::QSymmS8&gt;(</div><div class="line"><a name="l00655"></a><span class="lineno">  655</span>&#160;            workloadFactory, memoryManager, tensorHandleFactory, 1.0f, 0);</div><div class="line"><a name="l00656"></a><span class="lineno">  656</span>&#160;}</div></div><!-- fragment -->
</div>
</div>
<a id="a3b6f6bda7dc699926b88ece30f08a712"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a3b6f6bda7dc699926b88ece30f08a712">&#9670;&nbsp;</a></span>PadInt83dTest()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="struct_layer_test_result.xhtml">LayerTestResult</a>&lt;int8_t, 3&gt; PadInt83dTest </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classarmnn_1_1_i_workload_factory.xhtml">armnn::IWorkloadFactory</a> &amp;&#160;</td>
          <td class="paramname"><em>workloadFactory</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_i_backend_internal.xhtml#a693b40e6b94e958836aeb0410ca186bd">armnn::IBackendInternal::IMemoryManagerSharedPtr</a> &amp;&#160;</td>
          <td class="paramname"><em>memoryManager</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_i_tensor_handle_factory.xhtml">armnn::ITensorHandleFactory</a> &amp;&#160;</td>
          <td class="paramname"><em>tensorHandleFactory</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_pad_test_impl_8cpp_source.xhtml#l00667">667</a> of file <a class="el" href="_pad_test_impl_8cpp_source.xhtml">PadTestImpl.cpp</a>.</p>

<p class="reference">Referenced by <a class="el" href="_ref_layer_tests_8cpp_source.xhtml#l00014">TEST_SUITE()</a>.</p>
<div class="fragment"><div class="line"><a name="l00671"></a><span class="lineno">  671</span>&#160;{</div><div class="line"><a name="l00672"></a><span class="lineno">  672</span>&#160;    <span class="keywordflow">return</span> Pad3dTestCommon&lt;armnn::DataType::QSymmS8&gt;(workloadFactory, memoryManager, tensorHandleFactory, 1.0f, 0);</div><div class="line"><a name="l00673"></a><span class="lineno">  673</span>&#160;}</div></div><!-- fragment -->
</div>
</div>
<a id="a8d2641a260cd8d75868eb52bdc9e66e6"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a8d2641a260cd8d75868eb52bdc9e66e6">&#9670;&nbsp;</a></span>PadInt84dTest()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="struct_layer_test_result.xhtml">LayerTestResult</a>&lt;int8_t, 4&gt; PadInt84dTest </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classarmnn_1_1_i_workload_factory.xhtml">armnn::IWorkloadFactory</a> &amp;&#160;</td>
          <td class="paramname"><em>workloadFactory</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_i_backend_internal.xhtml#a693b40e6b94e958836aeb0410ca186bd">armnn::IBackendInternal::IMemoryManagerSharedPtr</a> &amp;&#160;</td>
          <td class="paramname"><em>memoryManager</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_i_tensor_handle_factory.xhtml">armnn::ITensorHandleFactory</a> &amp;&#160;</td>
          <td class="paramname"><em>tensorHandleFactory</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_pad_test_impl_8cpp_source.xhtml#l00675">675</a> of file <a class="el" href="_pad_test_impl_8cpp_source.xhtml">PadTestImpl.cpp</a>.</p>

<p class="reference">Referenced by <a class="el" href="_ref_layer_tests_8cpp_source.xhtml#l00014">TEST_SUITE()</a>.</p>
<div class="fragment"><div class="line"><a name="l00679"></a><span class="lineno">  679</span>&#160;{</div><div class="line"><a name="l00680"></a><span class="lineno">  680</span>&#160;    <span class="keywordflow">return</span> Pad4dTestCommon&lt;armnn::DataType::QSymmS8&gt;(workloadFactory, memoryManager, tensorHandleFactory, 1.0f, 0);</div><div class="line"><a name="l00681"></a><span class="lineno">  681</span>&#160;}</div></div><!-- fragment -->
</div>
</div>
<a id="ae53d36c2ab90a692c77b3ad4ba57254e"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ae53d36c2ab90a692c77b3ad4ba57254e">&#9670;&nbsp;</a></span>PadQAsymmTestCommon()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="struct_layer_test_result.xhtml">LayerTestResult</a>&lt;T, 2&gt; PadQAsymmTestCommon </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classarmnn_1_1_i_workload_factory.xhtml">armnn::IWorkloadFactory</a> &amp;&#160;</td>
          <td class="paramname"><em>workloadFactory</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_i_backend_internal.xhtml#a693b40e6b94e958836aeb0410ca186bd">armnn::IBackendInternal::IMemoryManagerSharedPtr</a> &amp;&#160;</td>
          <td class="paramname"><em>memoryManager</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_i_tensor_handle_factory.xhtml">armnn::ITensorHandleFactory</a> &amp;&#160;</td>
          <td class="paramname"><em>tensorHandleFactory</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>qScale</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int32_t&#160;</td>
          <td class="paramname"><em>qOffset</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const float&#160;</td>
          <td class="paramname"><em>customPaddingValue</em> = <code>0.0f</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_pad_test_impl_8cpp_source.xhtml#l00425">425</a> of file <a class="el" href="_pad_test_impl_8cpp_source.xhtml">PadTestImpl.cpp</a>.</p>

<p class="reference">References <a class="el" href="_tensor_copy_utils_8cpp_source.xhtml#l00014">CopyDataFromITensorHandle()</a>, <a class="el" href="_tensor_copy_utils_8cpp_source.xhtml#l00009">CopyDataToITensorHandle()</a>, <a class="el" href="classarmnn_1_1_i_tensor_handle_factory.xhtml#a375f11dd42ff042435e8771cf287b20c">ITensorHandleFactory::CreateTensorHandle()</a>, <a class="el" href="_workload_factory_8cpp_source.xhtml#l01541">IWorkloadFactory::CreateWorkload()</a>, <a class="el" href="_tensor_8hpp_source.xhtml#l00196">TensorInfo::GetNumElements()</a>, <a class="el" href="_tensor_8hpp_source.xhtml#l00191">TensorInfo::GetShape()</a>, <a class="el" href="_ignore_unused_8hpp_source.xhtml#l00014">armnn::IgnoreUnused()</a>, <a class="el" href="_descriptors_8hpp_source.xhtml#l01170">PadDescriptor::m_PadList</a>, <a class="el" href="_descriptors_8hpp_source.xhtml#l01173">PadDescriptor::m_PadValue</a>, <a class="el" href="include_2armnn_2backends_2_workload_data_8hpp_source.xhtml#l00054">QueueDescriptorWithParameters&lt; LayerDescriptor &gt;::m_Parameters</a>, and <a class="el" href="namespacearmnn.xhtml#a56943a0946e5f15e5e58054b8e7a04a4ade43468adaf6acb2c38ebc0c1176f82f">armnn::Pad</a>.</p>
<div class="fragment"><div class="line"><a name="l00432"></a><span class="lineno">  432</span>&#160;{</div><div class="line"><a name="l00433"></a><span class="lineno">  433</span>&#160;    <a class="code" href="namespacearmnn.xhtml#a44affeeb090c3c6a3062830562672e84">IgnoreUnused</a>(memoryManager);</div><div class="line"><a name="l00434"></a><span class="lineno">  434</span>&#160;    <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_shape.xhtml">armnn::TensorShape</a> inputShape{ 3, 3 };</div><div class="line"><a name="l00435"></a><span class="lineno">  435</span>&#160;    <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_shape.xhtml">armnn::TensorShape</a> outputShape{ 7, 7 };</div><div class="line"><a name="l00436"></a><span class="lineno">  436</span>&#160;</div><div class="line"><a name="l00437"></a><span class="lineno">  437</span>&#160;    <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_info.xhtml">armnn::TensorInfo</a> inputTensorInfo(inputShape, ArmnnType, qScale, qOffset);</div><div class="line"><a name="l00438"></a><span class="lineno">  438</span>&#160;    <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_info.xhtml">armnn::TensorInfo</a> outputTensorInfo(outputShape, ArmnnType, qScale, qOffset);</div><div class="line"><a name="l00439"></a><span class="lineno">  439</span>&#160;</div><div class="line"><a name="l00440"></a><span class="lineno">  440</span>&#160;    std::vector&lt;T&gt; inputValues =</div><div class="line"><a name="l00441"></a><span class="lineno">  441</span>&#160;        {</div><div class="line"><a name="l00442"></a><span class="lineno">  442</span>&#160;            <span class="comment">// Height (3) x Width (3)</span></div><div class="line"><a name="l00443"></a><span class="lineno">  443</span>&#160;            4, 8, 6,</div><div class="line"><a name="l00444"></a><span class="lineno">  444</span>&#160;            7, 4, 4,</div><div class="line"><a name="l00445"></a><span class="lineno">  445</span>&#160;            3, 2, 4</div><div class="line"><a name="l00446"></a><span class="lineno">  446</span>&#160;        };</div><div class="line"><a name="l00447"></a><span class="lineno">  447</span>&#160;</div><div class="line"><a name="l00448"></a><span class="lineno">  448</span>&#160;    T p = <span class="keyword">static_cast&lt;</span>T<span class="keyword">&gt;</span>(customPaddingValue);</div><div class="line"><a name="l00449"></a><span class="lineno">  449</span>&#160;    std::vector&lt;T&gt; expectedOutputValues =</div><div class="line"><a name="l00450"></a><span class="lineno">  450</span>&#160;        {</div><div class="line"><a name="l00451"></a><span class="lineno">  451</span>&#160;            p, p, p, p, p, p, p,</div><div class="line"><a name="l00452"></a><span class="lineno">  452</span>&#160;            p, p, p, p, p, p, p,</div><div class="line"><a name="l00453"></a><span class="lineno">  453</span>&#160;            p, p, 4, 8, 6, p, p,</div><div class="line"><a name="l00454"></a><span class="lineno">  454</span>&#160;            p, p, 7, 4, 4, p, p,</div><div class="line"><a name="l00455"></a><span class="lineno">  455</span>&#160;            p, p, 3, 2, 4, p, p,</div><div class="line"><a name="l00456"></a><span class="lineno">  456</span>&#160;            p, p, p, p, p, p, p,</div><div class="line"><a name="l00457"></a><span class="lineno">  457</span>&#160;            p, p, p, p, p, p, p</div><div class="line"><a name="l00458"></a><span class="lineno">  458</span>&#160;        };</div><div class="line"><a name="l00459"></a><span class="lineno">  459</span>&#160;</div><div class="line"><a name="l00460"></a><span class="lineno">  460</span>&#160;    std::vector&lt;T&gt; actualOutput(outputTensorInfo.GetNumElements());</div><div class="line"><a name="l00461"></a><span class="lineno">  461</span>&#160;</div><div class="line"><a name="l00462"></a><span class="lineno">  462</span>&#160;    std::unique_ptr&lt;armnn::ITensorHandle&gt; inputHandle = tensorHandleFactory.<a class="code" href="classarmnn_1_1_i_tensor_handle_factory.xhtml#a375f11dd42ff042435e8771cf287b20c">CreateTensorHandle</a>(inputTensorInfo);</div><div class="line"><a name="l00463"></a><span class="lineno">  463</span>&#160;    std::unique_ptr&lt;armnn::ITensorHandle&gt; outputHandle = tensorHandleFactory.<a class="code" href="classarmnn_1_1_i_tensor_handle_factory.xhtml#a375f11dd42ff042435e8771cf287b20c">CreateTensorHandle</a>(outputTensorInfo);</div><div class="line"><a name="l00464"></a><span class="lineno">  464</span>&#160;</div><div class="line"><a name="l00465"></a><span class="lineno">  465</span>&#160;</div><div class="line"><a name="l00466"></a><span class="lineno">  466</span>&#160;    <a class="code" href="structarmnn_1_1_pad_queue_descriptor.xhtml">armnn::PadQueueDescriptor</a> descriptor;</div><div class="line"><a name="l00467"></a><span class="lineno">  467</span>&#160;</div><div class="line"><a name="l00468"></a><span class="lineno">  468</span>&#160;    std::vector&lt;std::pair&lt;unsigned int, unsigned int&gt;&gt; padList;</div><div class="line"><a name="l00469"></a><span class="lineno">  469</span>&#160;    padList.push_back(std::pair&lt;unsigned int, unsigned int&gt;(2,2));</div><div class="line"><a name="l00470"></a><span class="lineno">  470</span>&#160;    padList.push_back(std::pair&lt;unsigned int, unsigned int&gt;(2,2));</div><div class="line"><a name="l00471"></a><span class="lineno">  471</span>&#160;</div><div class="line"><a name="l00472"></a><span class="lineno">  472</span>&#160;    descriptor.<a class="code" href="structarmnn_1_1_queue_descriptor_with_parameters.xhtml#aad91b9bbf7aa365d304febe79a3d1333">m_Parameters</a>.<a class="code" href="structarmnn_1_1_pad_descriptor.xhtml#a85f98c94e11f65a6b73f831735c040f3">m_PadList</a> = padList;</div><div class="line"><a name="l00473"></a><span class="lineno">  473</span>&#160;    descriptor.<a class="code" href="structarmnn_1_1_queue_descriptor_with_parameters.xhtml#aad91b9bbf7aa365d304febe79a3d1333">m_Parameters</a>.<a class="code" href="structarmnn_1_1_pad_descriptor.xhtml#a410fa919f78af0f0f100bd1594eca4ab">m_PadValue</a> = customPaddingValue;</div><div class="line"><a name="l00474"></a><span class="lineno">  474</span>&#160;    <a class="code" href="structarmnn_1_1_workload_info.xhtml">armnn::WorkloadInfo</a> <a class="code" href="namespacearmnn.xhtml#a4dc0adc6737b5944e7671bee71788407acaf9b6b99962bf5c2264824231d7a40c">info</a>;</div><div class="line"><a name="l00475"></a><span class="lineno">  475</span>&#160;</div><div class="line"><a name="l00476"></a><span class="lineno">  476</span>&#160;    AddInputToWorkload(descriptor, info, inputTensorInfo, inputHandle.get());</div><div class="line"><a name="l00477"></a><span class="lineno">  477</span>&#160;    AddOutputToWorkload(descriptor, info, outputTensorInfo, outputHandle.get());</div><div class="line"><a name="l00478"></a><span class="lineno">  478</span>&#160;</div><div class="line"><a name="l00479"></a><span class="lineno">  479</span>&#160;    std::unique_ptr&lt;armnn::IWorkload&gt; workload = workloadFactory.<a class="code" href="classarmnn_1_1_i_workload_factory.xhtml#a13060ebb89d2c21a7a5d897e99cccf72">CreateWorkload</a>(<a class="code" href="namespacearmnn.xhtml#a56943a0946e5f15e5e58054b8e7a04a4ade43468adaf6acb2c38ebc0c1176f82f">armnn::LayerType::Pad</a>,</div><div class="line"><a name="l00480"></a><span class="lineno">  480</span>&#160;                                                                                descriptor,</div><div class="line"><a name="l00481"></a><span class="lineno">  481</span>&#160;                                                                                info);</div><div class="line"><a name="l00482"></a><span class="lineno">  482</span>&#160;</div><div class="line"><a name="l00483"></a><span class="lineno">  483</span>&#160;    inputHandle-&gt;Allocate();</div><div class="line"><a name="l00484"></a><span class="lineno">  484</span>&#160;    outputHandle-&gt;Allocate();</div><div class="line"><a name="l00485"></a><span class="lineno">  485</span>&#160;</div><div class="line"><a name="l00486"></a><span class="lineno">  486</span>&#160;    <a class="code" href="include_2armnn_test_utils_2_tensor_copy_utils_8hpp.xhtml#ae15f1a3c55d2db87683577de9fa4437c">CopyDataToITensorHandle</a>(inputHandle.get(), inputValues.data());</div><div class="line"><a name="l00487"></a><span class="lineno">  487</span>&#160;</div><div class="line"><a name="l00488"></a><span class="lineno">  488</span>&#160;    workload-&gt;PostAllocationConfigure();</div><div class="line"><a name="l00489"></a><span class="lineno">  489</span>&#160;    workload-&gt;Execute();</div><div class="line"><a name="l00490"></a><span class="lineno">  490</span>&#160;</div><div class="line"><a name="l00491"></a><span class="lineno">  491</span>&#160;    <a class="code" href="include_2armnn_test_utils_2_tensor_copy_utils_8hpp.xhtml#ab5dfed8358e500ed523d78090ec78e88">CopyDataFromITensorHandle</a>(actualOutput.data(), outputHandle.get());</div><div class="line"><a name="l00492"></a><span class="lineno">  492</span>&#160;</div><div class="line"><a name="l00493"></a><span class="lineno">  493</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="struct_layer_test_result.xhtml">LayerTestResult&lt;T, 2&gt;</a>(actualOutput,</div><div class="line"><a name="l00494"></a><span class="lineno">  494</span>&#160;                                 expectedOutputValues,</div><div class="line"><a name="l00495"></a><span class="lineno">  495</span>&#160;                                 outputHandle-&gt;GetShape(),</div><div class="line"><a name="l00496"></a><span class="lineno">  496</span>&#160;                                 outputTensorInfo.GetShape());</div><div class="line"><a name="l00497"></a><span class="lineno">  497</span>&#160;}</div><div class="ttc" id="structarmnn_1_1_pad_descriptor_xhtml_a410fa919f78af0f0f100bd1594eca4ab"><div class="ttname"><a href="structarmnn_1_1_pad_descriptor.xhtml#a410fa919f78af0f0f100bd1594eca4ab">armnn::PadDescriptor::m_PadValue</a></div><div class="ttdeci">float m_PadValue</div><div class="ttdoc">Optional value to use for padding, defaults to 0. </div><div class="ttdef"><b>Definition:</b> <a href="_descriptors_8hpp_source.xhtml#l01173">Descriptors.hpp:1173</a></div></div>
<div class="ttc" id="classarmnn_1_1_tensor_info_xhtml"><div class="ttname"><a href="classarmnn_1_1_tensor_info.xhtml">armnn::TensorInfo</a></div><div class="ttdef"><b>Definition:</b> <a href="_tensor_8hpp_source.xhtml#l00152">Tensor.hpp:152</a></div></div>
<div class="ttc" id="structarmnn_1_1_pad_descriptor_xhtml_a85f98c94e11f65a6b73f831735c040f3"><div class="ttname"><a href="structarmnn_1_1_pad_descriptor.xhtml#a85f98c94e11f65a6b73f831735c040f3">armnn::PadDescriptor::m_PadList</a></div><div class="ttdeci">std::vector&lt; std::pair&lt; unsigned int, unsigned int &gt; &gt; m_PadList</div><div class="ttdoc">Specifies the padding for input dimension. </div><div class="ttdef"><b>Definition:</b> <a href="_descriptors_8hpp_source.xhtml#l01170">Descriptors.hpp:1170</a></div></div>
<div class="ttc" id="namespacearmnn_xhtml_a44affeeb090c3c6a3062830562672e84"><div class="ttname"><a href="namespacearmnn.xhtml#a44affeeb090c3c6a3062830562672e84">armnn::IgnoreUnused</a></div><div class="ttdeci">void IgnoreUnused(Ts &amp;&amp;...)</div><div class="ttdef"><b>Definition:</b> <a href="_ignore_unused_8hpp_source.xhtml#l00014">IgnoreUnused.hpp:14</a></div></div>
<div class="ttc" id="classarmnn_1_1_tensor_shape_xhtml"><div class="ttname"><a href="classarmnn_1_1_tensor_shape.xhtml">armnn::TensorShape</a></div><div class="ttdef"><b>Definition:</b> <a href="_tensor_8hpp_source.xhtml#l00020">Tensor.hpp:20</a></div></div>
<div class="ttc" id="structarmnn_1_1_queue_descriptor_with_parameters_xhtml_aad91b9bbf7aa365d304febe79a3d1333"><div class="ttname"><a href="structarmnn_1_1_queue_descriptor_with_parameters.xhtml#aad91b9bbf7aa365d304febe79a3d1333">armnn::QueueDescriptorWithParameters::m_Parameters</a></div><div class="ttdeci">LayerDescriptor m_Parameters</div><div class="ttdef"><b>Definition:</b> <a href="include_2armnn_2backends_2_workload_data_8hpp_source.xhtml#l00054">WorkloadData.hpp:54</a></div></div>
<div class="ttc" id="structarmnn_1_1_pad_queue_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_pad_queue_descriptor.xhtml">armnn::PadQueueDescriptor</a></div><div class="ttdef"><b>Definition:</b> <a href="include_2armnn_2backends_2_workload_data_8hpp_source.xhtml#l00304">WorkloadData.hpp:304</a></div></div>
<div class="ttc" id="namespacearmnn_xhtml_a56943a0946e5f15e5e58054b8e7a04a4ade43468adaf6acb2c38ebc0c1176f82f"><div class="ttname"><a href="namespacearmnn.xhtml#a56943a0946e5f15e5e58054b8e7a04a4ade43468adaf6acb2c38ebc0c1176f82f">armnn::LayerType::Pad</a></div></div>
<div class="ttc" id="include_2armnn_test_utils_2_tensor_copy_utils_8hpp_xhtml_ab5dfed8358e500ed523d78090ec78e88"><div class="ttname"><a href="include_2armnn_test_utils_2_tensor_copy_utils_8hpp.xhtml#ab5dfed8358e500ed523d78090ec78e88">CopyDataFromITensorHandle</a></div><div class="ttdeci">void CopyDataFromITensorHandle(void *mem, const armnn::ITensorHandle *tensorHandle)</div><div class="ttdef"><b>Definition:</b> <a href="_tensor_copy_utils_8cpp_source.xhtml#l00014">TensorCopyUtils.cpp:14</a></div></div>
<div class="ttc" id="namespacearmnn_xhtml_a4dc0adc6737b5944e7671bee71788407acaf9b6b99962bf5c2264824231d7a40c"><div class="ttname"><a href="namespacearmnn.xhtml#a4dc0adc6737b5944e7671bee71788407acaf9b6b99962bf5c2264824231d7a40c">armnn::BoostLogSeverityMapping::info</a></div></div>
<div class="ttc" id="include_2armnn_test_utils_2_tensor_copy_utils_8hpp_xhtml_ae15f1a3c55d2db87683577de9fa4437c"><div class="ttname"><a href="include_2armnn_test_utils_2_tensor_copy_utils_8hpp.xhtml#ae15f1a3c55d2db87683577de9fa4437c">CopyDataToITensorHandle</a></div><div class="ttdeci">void CopyDataToITensorHandle(armnn::ITensorHandle *tensorHandle, const void *memory)</div><div class="ttdef"><b>Definition:</b> <a href="_tensor_copy_utils_8cpp_source.xhtml#l00009">TensorCopyUtils.cpp:9</a></div></div>
<div class="ttc" id="structarmnn_1_1_workload_info_xhtml"><div class="ttname"><a href="structarmnn_1_1_workload_info.xhtml">armnn::WorkloadInfo</a></div><div class="ttdoc">Contains information about TensorInfos of a layer. </div><div class="ttdef"><b>Definition:</b> <a href="include_2armnn_2backends_2_workload_info_8hpp_source.xhtml#l00016">WorkloadInfo.hpp:16</a></div></div>
<div class="ttc" id="struct_layer_test_result_xhtml"><div class="ttname"><a href="struct_layer_test_result.xhtml">LayerTestResult</a></div><div class="ttdef"><b>Definition:</b> <a href="include_2armnn_test_utils_2_layer_test_result_8hpp_source.xhtml#l00015">LayerTestResult.hpp:15</a></div></div>
<div class="ttc" id="classarmnn_1_1_i_workload_factory_xhtml_a13060ebb89d2c21a7a5d897e99cccf72"><div class="ttname"><a href="classarmnn_1_1_i_workload_factory.xhtml#a13060ebb89d2c21a7a5d897e99cccf72">armnn::IWorkloadFactory::CreateWorkload</a></div><div class="ttdeci">virtual std::unique_ptr&lt; IWorkload &gt; CreateWorkload(LayerType type, const QueueDescriptor &amp;descriptor, const WorkloadInfo &amp;info) const</div><div class="ttdef"><b>Definition:</b> <a href="_workload_factory_8cpp_source.xhtml#l01541">WorkloadFactory.cpp:1541</a></div></div>
<div class="ttc" id="classarmnn_1_1_i_tensor_handle_factory_xhtml_a375f11dd42ff042435e8771cf287b20c"><div class="ttname"><a href="classarmnn_1_1_i_tensor_handle_factory.xhtml#a375f11dd42ff042435e8771cf287b20c">armnn::ITensorHandleFactory::CreateTensorHandle</a></div><div class="ttdeci">virtual std::unique_ptr&lt; ITensorHandle &gt; CreateTensorHandle(const TensorInfo &amp;tensorInfo) const =0</div></div>
</div><!-- fragment -->
</div>
</div>
<a id="a4e40e8762c9877ba27e31e2252965c42"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a4e40e8762c9877ba27e31e2252965c42">&#9670;&nbsp;</a></span>PadUint82dCustomPaddingTest()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="struct_layer_test_result.xhtml">LayerTestResult</a>&lt;uint8_t, 2&gt; PadUint82dCustomPaddingTest </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classarmnn_1_1_i_workload_factory.xhtml">armnn::IWorkloadFactory</a> &amp;&#160;</td>
          <td class="paramname"><em>workloadFactory</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_i_backend_internal.xhtml#a693b40e6b94e958836aeb0410ca186bd">armnn::IBackendInternal::IMemoryManagerSharedPtr</a> &amp;&#160;</td>
          <td class="paramname"><em>memoryManager</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_i_tensor_handle_factory.xhtml">armnn::ITensorHandleFactory</a> &amp;&#160;</td>
          <td class="paramname"><em>tensorHandleFactory</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_pad_test_impl_8cpp_source.xhtml#l00558">558</a> of file <a class="el" href="_pad_test_impl_8cpp_source.xhtml">PadTestImpl.cpp</a>.</p>

<p class="reference">Referenced by <a class="el" href="_cl_layer_tests_8cpp_source.xhtml#l00027">TEST_SUITE()</a>.</p>
<div class="fragment"><div class="line"><a name="l00562"></a><span class="lineno">  562</span>&#160;{</div><div class="line"><a name="l00563"></a><span class="lineno">  563</span>&#160;    <span class="keywordflow">return</span> Pad2dTestCommon&lt;armnn::DataType::QAsymmU8&gt;(</div><div class="line"><a name="l00564"></a><span class="lineno">  564</span>&#160;            workloadFactory, memoryManager, tensorHandleFactory, 1.0f, 0, 1.0f);</div><div class="line"><a name="l00565"></a><span class="lineno">  565</span>&#160;}</div></div><!-- fragment -->
</div>
</div>
<a id="aa65827cf232a0b5791b20eb8b03d9c5c"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aa65827cf232a0b5791b20eb8b03d9c5c">&#9670;&nbsp;</a></span>PadUint82dTest()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="struct_layer_test_result.xhtml">LayerTestResult</a>&lt;uint8_t, 2&gt; PadUint82dTest </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classarmnn_1_1_i_workload_factory.xhtml">armnn::IWorkloadFactory</a> &amp;&#160;</td>
          <td class="paramname"><em>workloadFactory</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_i_backend_internal.xhtml#a693b40e6b94e958836aeb0410ca186bd">armnn::IBackendInternal::IMemoryManagerSharedPtr</a> &amp;&#160;</td>
          <td class="paramname"><em>memoryManager</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_i_tensor_handle_factory.xhtml">armnn::ITensorHandleFactory</a> &amp;&#160;</td>
          <td class="paramname"><em>tensorHandleFactory</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_pad_test_impl_8cpp_source.xhtml#l00550">550</a> of file <a class="el" href="_pad_test_impl_8cpp_source.xhtml">PadTestImpl.cpp</a>.</p>

<p class="reference">Referenced by <a class="el" href="_cl_layer_tests_8cpp_source.xhtml#l00027">TEST_SUITE()</a>.</p>
<div class="fragment"><div class="line"><a name="l00554"></a><span class="lineno">  554</span>&#160;{</div><div class="line"><a name="l00555"></a><span class="lineno">  555</span>&#160;    <span class="keywordflow">return</span> Pad2dTestCommon&lt;armnn::DataType::QAsymmU8&gt;(workloadFactory, memoryManager, tensorHandleFactory, 1.0f, 0);</div><div class="line"><a name="l00556"></a><span class="lineno">  556</span>&#160;}</div></div><!-- fragment -->
</div>
</div>
<a id="aff0eabfd7144785d8c5bdc8cf2ff3c46"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aff0eabfd7144785d8c5bdc8cf2ff3c46">&#9670;&nbsp;</a></span>PadUint83dTest()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="struct_layer_test_result.xhtml">LayerTestResult</a>&lt;uint8_t, 3&gt; PadUint83dTest </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classarmnn_1_1_i_workload_factory.xhtml">armnn::IWorkloadFactory</a> &amp;&#160;</td>
          <td class="paramname"><em>workloadFactory</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_i_backend_internal.xhtml#a693b40e6b94e958836aeb0410ca186bd">armnn::IBackendInternal::IMemoryManagerSharedPtr</a> &amp;&#160;</td>
          <td class="paramname"><em>memoryManager</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_i_tensor_handle_factory.xhtml">armnn::ITensorHandleFactory</a> &amp;&#160;</td>
          <td class="paramname"><em>tensorHandleFactory</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_pad_test_impl_8cpp_source.xhtml#l00567">567</a> of file <a class="el" href="_pad_test_impl_8cpp_source.xhtml">PadTestImpl.cpp</a>.</p>

<p class="reference">Referenced by <a class="el" href="_cl_layer_tests_8cpp_source.xhtml#l00027">TEST_SUITE()</a>.</p>
<div class="fragment"><div class="line"><a name="l00571"></a><span class="lineno">  571</span>&#160;{</div><div class="line"><a name="l00572"></a><span class="lineno">  572</span>&#160;    <span class="keywordflow">return</span> Pad3dTestCommon&lt;armnn::DataType::QAsymmU8&gt;(workloadFactory, memoryManager, tensorHandleFactory, 1.0f, 0);</div><div class="line"><a name="l00573"></a><span class="lineno">  573</span>&#160;}</div></div><!-- fragment -->
</div>
</div>
<a id="a712c14035a69b62f6b954e35b0ed728d"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a712c14035a69b62f6b954e35b0ed728d">&#9670;&nbsp;</a></span>PadUint84dTest()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="struct_layer_test_result.xhtml">LayerTestResult</a>&lt;uint8_t, 4&gt; PadUint84dTest </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classarmnn_1_1_i_workload_factory.xhtml">armnn::IWorkloadFactory</a> &amp;&#160;</td>
          <td class="paramname"><em>workloadFactory</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_i_backend_internal.xhtml#a693b40e6b94e958836aeb0410ca186bd">armnn::IBackendInternal::IMemoryManagerSharedPtr</a> &amp;&#160;</td>
          <td class="paramname"><em>memoryManager</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_i_tensor_handle_factory.xhtml">armnn::ITensorHandleFactory</a> &amp;&#160;</td>
          <td class="paramname"><em>tensorHandleFactory</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_pad_test_impl_8cpp_source.xhtml#l00575">575</a> of file <a class="el" href="_pad_test_impl_8cpp_source.xhtml">PadTestImpl.cpp</a>.</p>

<p class="reference">Referenced by <a class="el" href="_cl_layer_tests_8cpp_source.xhtml#l00027">TEST_SUITE()</a>.</p>
<div class="fragment"><div class="line"><a name="l00579"></a><span class="lineno">  579</span>&#160;{</div><div class="line"><a name="l00580"></a><span class="lineno">  580</span>&#160;    <span class="keywordflow">return</span> Pad4dTestCommon&lt;armnn::DataType::QAsymmU8&gt;(workloadFactory, memoryManager, tensorHandleFactory, 1.0f, 0);</div><div class="line"><a name="l00581"></a><span class="lineno">  581</span>&#160;}</div></div><!-- fragment -->
</div>
</div>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="dir_68267d1309a1af8e8297ef4c3efbcdba.xhtml">src</a></li><li class="navelem"><a class="el" href="dir_0f3cdec46afbc61a1ded8e1687c9c9a0.xhtml">backends</a></li><li class="navelem"><a class="el" href="dir_797a213d7d01b98ef12d53b0820ea64e.xhtml">backendsCommon</a></li><li class="navelem"><a class="el" href="dir_28bfe507f7e135bdae07c2a6b7f66696.xhtml">test</a></li><li class="navelem"><a class="el" href="dir_99a30439342d160875b21dac3498ad7f.xhtml">layerTests</a></li><li class="navelem"><a class="el" href="_pad_test_impl_8hpp.xhtml">PadTestImpl.hpp</a></li>
    <li class="footer">Generated on Tue Feb 22 2022 11:39:39 for ArmNN by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.13 </li>
  </ul>
</div>
</body>
</html>
