<!-- Copyright (c) 2020 ARM Limited. -->
<!--                                 -->
<!-- SPDX-License-Identifier: MIT    -->
<!--                                 -->
<!-- HTML header for doxygen 1.8.13-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.13"/>
<meta name="robots" content="NOINDEX, NOFOLLOW" />
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>ArmNN: MockImportLayerSupport Class Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script><script type="text/javascript" src="http://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="stylesheet.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <img alt="ArmNN" src="Arm_NN_horizontal_blue.png" style="max-width: 10rem; margin-top: .5rem; margin-left 10px"/>
  <td style="padding-left: 0.5em;">
   <div id="projectname">
   &#160;<span id="projectnumber">22.05.01</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.13 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
$(document).ready(function(){initNavTree('classarmnn_1_1_mock_import_layer_support.xhtml','');});
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="summary">
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="classarmnn_1_1_mock_import_layer_support-members.xhtml">List of all members</a>  </div>
  <div class="headertitle">
<div class="title">MockImportLayerSupport Class Reference</div>  </div>
</div><!--header-->
<div class="contents">

<p><code>#include &lt;<a class="el" href="_mock_import_layer_support_8hpp_source.xhtml">MockImportLayerSupport.hpp</a>&gt;</code></p>
<div class="dynheader">
Inheritance diagram for MockImportLayerSupport:</div>
<div class="dyncontent">
 <div class="center">
  <img src="classarmnn_1_1_mock_import_layer_support.png" usemap="#MockImportLayerSupport_map" alt=""/>
  <map id="MockImportLayerSupport_map" name="MockImportLayerSupport_map">
<area href="classarmnn_1_1_layer_support_base.xhtml" alt="LayerSupportBase" shape="rect" coords="0,56,154,80"/>
<area href="classarmnn_1_1_i_layer_support.xhtml" alt="ILayerSupport" shape="rect" coords="0,0,154,24"/>
</map>
 </div></div>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:a329ddc3082ce25ddfcf33fab0dbf231c"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_mock_import_layer_support.xhtml#a329ddc3082ce25ddfcf33fab0dbf231c">IsLayerSupported</a> (const <a class="el" href="namespacearmnn.xhtml#a56943a0946e5f15e5e58054b8e7a04a4">LayerType</a> &amp;type, const std::vector&lt; <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &gt; &amp;infos, const <a class="el" href="structarmnn_1_1_base_descriptor.xhtml">BaseDescriptor</a> &amp;, const <a class="el" href="classarmnn_1_1_optional.xhtml">Optional</a>&lt; <a class="el" href="structarmnn_1_1_lstm_input_params_info.xhtml">LstmInputParamsInfo</a> &gt; &amp;, const <a class="el" href="classarmnn_1_1_optional.xhtml">Optional</a>&lt; <a class="el" href="structarmnn_1_1_quantized_lstm_input_params_info.xhtml">QuantizedLstmInputParamsInfo</a> &gt; &amp;, <a class="el" href="classarmnn_1_1_optional.xhtml">Optional</a>&lt; std::string &amp;&gt; <a class="el" href="classarmnn_1_1_i_layer_support.xhtml#ac75f9a02b051716a0cc1cc0818dfe454">reasonIfUnsupported</a>) const override</td></tr>
<tr class="separator:a329ddc3082ce25ddfcf33fab0dbf231c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a48177e22e47448adb3d83e145dadf735"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_mock_import_layer_support.xhtml#a48177e22e47448adb3d83e145dadf735">IsAdditionSupported</a> (const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;input0, const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;<a class="el" href="classarmnn_1_1_i_layer_support.xhtml#ab82416560ced17268c6ba4443a3aac5e">input1</a>, const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;<a class="el" href="classarmnn_1_1_i_layer_support.xhtml#a4e25e081529b7e99e5e454d916ed83fb">output</a>, <a class="el" href="classarmnn_1_1_optional.xhtml">Optional</a>&lt; std::string &amp;&gt; <a class="el" href="classarmnn_1_1_i_layer_support.xhtml#ac75f9a02b051716a0cc1cc0818dfe454">reasonIfUnsupported</a>=<a class="el" href="structarmnn_1_1_empty_optional.xhtml">EmptyOptional</a>()) const override</td></tr>
<tr class="separator:a48177e22e47448adb3d83e145dadf735"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a49cf9ce84cb5e9624ad15ae1e78f9380"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_mock_import_layer_support.xhtml#a49cf9ce84cb5e9624ad15ae1e78f9380">IsInputSupported</a> (const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;input, <a class="el" href="classarmnn_1_1_optional.xhtml">Optional</a>&lt; std::string &amp;&gt; <a class="el" href="classarmnn_1_1_i_layer_support.xhtml#ac75f9a02b051716a0cc1cc0818dfe454">reasonIfUnsupported</a>) const override</td></tr>
<tr class="separator:a49cf9ce84cb5e9624ad15ae1e78f9380"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a204bfa8f305f067b488e9c384c1ccd32"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_mock_import_layer_support.xhtml#a204bfa8f305f067b488e9c384c1ccd32">IsOutputSupported</a> (const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;<a class="el" href="classarmnn_1_1_i_layer_support.xhtml#a4e25e081529b7e99e5e454d916ed83fb">output</a>, <a class="el" href="classarmnn_1_1_optional.xhtml">Optional</a>&lt; std::string &amp;&gt; <a class="el" href="classarmnn_1_1_i_layer_support.xhtml#ac75f9a02b051716a0cc1cc0818dfe454">reasonIfUnsupported</a>) const override</td></tr>
<tr class="separator:a204bfa8f305f067b488e9c384c1ccd32"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pub_methods_classarmnn_1_1_layer_support_base"><td colspan="2" onclick="javascript:toggleInherit('pub_methods_classarmnn_1_1_layer_support_base')"><img src="closed.png" alt="-"/>&#160;Public Member Functions inherited from <a class="el" href="classarmnn_1_1_layer_support_base.xhtml">LayerSupportBase</a></td></tr>
<tr class="memitem:ab3adb3a28736529682e4ff0ea976dcd3 inherit pub_methods_classarmnn_1_1_layer_support_base"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_layer_support_base.xhtml#ab3adb3a28736529682e4ff0ea976dcd3">IsActivationSupported</a> (const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;input, const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;<a class="el" href="classarmnn_1_1_i_layer_support.xhtml#a4e25e081529b7e99e5e454d916ed83fb">output</a>, const <a class="el" href="structarmnn_1_1_activation_descriptor.xhtml">ActivationDescriptor</a> &amp;<a class="el" href="classarmnn_1_1_i_layer_support.xhtml#a859feaa966620ae0ea88abf5226f2d04">descriptor</a>, <a class="el" href="classarmnn_1_1_optional.xhtml">Optional</a>&lt; std::string &amp;&gt; <a class="el" href="classarmnn_1_1_i_layer_support.xhtml#ac75f9a02b051716a0cc1cc0818dfe454">reasonIfUnsupported</a>=<a class="el" href="structarmnn_1_1_empty_optional.xhtml">EmptyOptional</a>()) const override</td></tr>
<tr class="separator:ab3adb3a28736529682e4ff0ea976dcd3 inherit pub_methods_classarmnn_1_1_layer_support_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a48177e22e47448adb3d83e145dadf735 inherit pub_methods_classarmnn_1_1_layer_support_base"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_layer_support_base.xhtml#a48177e22e47448adb3d83e145dadf735">IsAdditionSupported</a> (const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;input0, const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;<a class="el" href="classarmnn_1_1_i_layer_support.xhtml#ab82416560ced17268c6ba4443a3aac5e">input1</a>, const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;<a class="el" href="classarmnn_1_1_i_layer_support.xhtml#a4e25e081529b7e99e5e454d916ed83fb">output</a>, <a class="el" href="classarmnn_1_1_optional.xhtml">Optional</a>&lt; std::string &amp;&gt; <a class="el" href="classarmnn_1_1_i_layer_support.xhtml#ac75f9a02b051716a0cc1cc0818dfe454">reasonIfUnsupported</a>=<a class="el" href="structarmnn_1_1_empty_optional.xhtml">EmptyOptional</a>()) const override</td></tr>
<tr class="separator:a48177e22e47448adb3d83e145dadf735 inherit pub_methods_classarmnn_1_1_layer_support_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0f4841f89f21fd794786b4c03c2425fd inherit pub_methods_classarmnn_1_1_layer_support_base"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_layer_support_base.xhtml#a0f4841f89f21fd794786b4c03c2425fd">IsArgMinMaxSupported</a> (const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;input, const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;<a class="el" href="classarmnn_1_1_i_layer_support.xhtml#a4e25e081529b7e99e5e454d916ed83fb">output</a>, const <a class="el" href="structarmnn_1_1_arg_min_max_descriptor.xhtml">ArgMinMaxDescriptor</a> &amp;<a class="el" href="classarmnn_1_1_i_layer_support.xhtml#a859feaa966620ae0ea88abf5226f2d04">descriptor</a>, <a class="el" href="classarmnn_1_1_optional.xhtml">Optional</a>&lt; std::string &amp;&gt; <a class="el" href="classarmnn_1_1_i_layer_support.xhtml#ac75f9a02b051716a0cc1cc0818dfe454">reasonIfUnsupported</a>=<a class="el" href="structarmnn_1_1_empty_optional.xhtml">EmptyOptional</a>()) const override</td></tr>
<tr class="separator:a0f4841f89f21fd794786b4c03c2425fd inherit pub_methods_classarmnn_1_1_layer_support_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a67c970dd054b991e14369de523ca3a5a inherit pub_methods_classarmnn_1_1_layer_support_base"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_layer_support_base.xhtml#a67c970dd054b991e14369de523ca3a5a">IsBatchNormalizationSupported</a> (const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;input, const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;<a class="el" href="classarmnn_1_1_i_layer_support.xhtml#a4e25e081529b7e99e5e454d916ed83fb">output</a>, const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;<a class="el" href="classarmnn_1_1_i_layer_support.xhtml#a895a8451e0799b95d65caf7ffe0a32d7">mean</a>, const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;<a class="el" href="classarmnn_1_1_i_layer_support.xhtml#a903053b422754682265fba0c03d94a52">var</a>, const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;<a class="el" href="classarmnn_1_1_i_layer_support.xhtml#a83a99de40f6bffaa36f0333d04690b2a">beta</a>, const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;<a class="el" href="classarmnn_1_1_i_layer_support.xhtml#ab5cccb3233f5eff2119e8acc80cec209">gamma</a>, const <a class="el" href="structarmnn_1_1_batch_normalization_descriptor.xhtml">BatchNormalizationDescriptor</a> &amp;<a class="el" href="classarmnn_1_1_i_layer_support.xhtml#a859feaa966620ae0ea88abf5226f2d04">descriptor</a>, <a class="el" href="classarmnn_1_1_optional.xhtml">Optional</a>&lt; std::string &amp;&gt; <a class="el" href="classarmnn_1_1_i_layer_support.xhtml#ac75f9a02b051716a0cc1cc0818dfe454">reasonIfUnsupported</a>=<a class="el" href="structarmnn_1_1_empty_optional.xhtml">EmptyOptional</a>()) const override</td></tr>
<tr class="separator:a67c970dd054b991e14369de523ca3a5a inherit pub_methods_classarmnn_1_1_layer_support_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:adc5695cc25f4055c7ed54bdc8604a098 inherit pub_methods_classarmnn_1_1_layer_support_base"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_layer_support_base.xhtml#adc5695cc25f4055c7ed54bdc8604a098">IsBatchToSpaceNdSupported</a> (const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;input, const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;<a class="el" href="classarmnn_1_1_i_layer_support.xhtml#a4e25e081529b7e99e5e454d916ed83fb">output</a>, const <a class="el" href="structarmnn_1_1_batch_to_space_nd_descriptor.xhtml">BatchToSpaceNdDescriptor</a> &amp;<a class="el" href="classarmnn_1_1_i_layer_support.xhtml#a859feaa966620ae0ea88abf5226f2d04">descriptor</a>, <a class="el" href="classarmnn_1_1_optional.xhtml">Optional</a>&lt; std::string &amp;&gt; <a class="el" href="classarmnn_1_1_i_layer_support.xhtml#ac75f9a02b051716a0cc1cc0818dfe454">reasonIfUnsupported</a>=<a class="el" href="structarmnn_1_1_empty_optional.xhtml">EmptyOptional</a>()) const override</td></tr>
<tr class="separator:adc5695cc25f4055c7ed54bdc8604a098 inherit pub_methods_classarmnn_1_1_layer_support_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae18f598a589683c3094a7bb41dcd3a3e inherit pub_methods_classarmnn_1_1_layer_support_base"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_layer_support_base.xhtml#ae18f598a589683c3094a7bb41dcd3a3e">IsCastSupported</a> (const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;input, const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;<a class="el" href="classarmnn_1_1_i_layer_support.xhtml#a4e25e081529b7e99e5e454d916ed83fb">output</a>, <a class="el" href="classarmnn_1_1_optional.xhtml">Optional</a>&lt; std::string &amp;&gt; <a class="el" href="classarmnn_1_1_i_layer_support.xhtml#ac75f9a02b051716a0cc1cc0818dfe454">reasonIfUnsupported</a>=<a class="el" href="structarmnn_1_1_empty_optional.xhtml">EmptyOptional</a>()) const override</td></tr>
<tr class="separator:ae18f598a589683c3094a7bb41dcd3a3e inherit pub_methods_classarmnn_1_1_layer_support_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6f1cae30d95bbd28dbac2a570c26c5f7 inherit pub_methods_classarmnn_1_1_layer_support_base"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_layer_support_base.xhtml#a6f1cae30d95bbd28dbac2a570c26c5f7">IsChannelShuffleSupported</a> (const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;input, const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;<a class="el" href="classarmnn_1_1_i_layer_support.xhtml#a4e25e081529b7e99e5e454d916ed83fb">output</a>, const <a class="el" href="structarmnn_1_1_channel_shuffle_descriptor.xhtml">ChannelShuffleDescriptor</a> &amp;<a class="el" href="classarmnn_1_1_i_layer_support.xhtml#a859feaa966620ae0ea88abf5226f2d04">descriptor</a>, <a class="el" href="classarmnn_1_1_optional.xhtml">Optional</a>&lt; std::string &amp;&gt; <a class="el" href="classarmnn_1_1_i_layer_support.xhtml#ac75f9a02b051716a0cc1cc0818dfe454">reasonIfUnsupported</a>=<a class="el" href="structarmnn_1_1_empty_optional.xhtml">EmptyOptional</a>()) const override</td></tr>
<tr class="separator:a6f1cae30d95bbd28dbac2a570c26c5f7 inherit pub_methods_classarmnn_1_1_layer_support_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7c52726a684dd76258c61af124012537 inherit pub_methods_classarmnn_1_1_layer_support_base"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_layer_support_base.xhtml#a7c52726a684dd76258c61af124012537">IsComparisonSupported</a> (const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;input0, const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;<a class="el" href="classarmnn_1_1_i_layer_support.xhtml#ab82416560ced17268c6ba4443a3aac5e">input1</a>, const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;<a class="el" href="classarmnn_1_1_i_layer_support.xhtml#a4e25e081529b7e99e5e454d916ed83fb">output</a>, const <a class="el" href="structarmnn_1_1_comparison_descriptor.xhtml">ComparisonDescriptor</a> &amp;<a class="el" href="classarmnn_1_1_i_layer_support.xhtml#a859feaa966620ae0ea88abf5226f2d04">descriptor</a>, <a class="el" href="classarmnn_1_1_optional.xhtml">Optional</a>&lt; std::string &amp;&gt; <a class="el" href="classarmnn_1_1_i_layer_support.xhtml#ac75f9a02b051716a0cc1cc0818dfe454">reasonIfUnsupported</a>=<a class="el" href="structarmnn_1_1_empty_optional.xhtml">EmptyOptional</a>()) const override</td></tr>
<tr class="separator:a7c52726a684dd76258c61af124012537 inherit pub_methods_classarmnn_1_1_layer_support_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1542179a03961e3635bb5bef993c8e0e inherit pub_methods_classarmnn_1_1_layer_support_base"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_layer_support_base.xhtml#a1542179a03961e3635bb5bef993c8e0e">IsConcatSupported</a> (const std::vector&lt; const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> *&gt; inputs, const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;<a class="el" href="classarmnn_1_1_i_layer_support.xhtml#a4e25e081529b7e99e5e454d916ed83fb">output</a>, const <a class="el" href="structarmnn_1_1_origins_descriptor.xhtml">OriginsDescriptor</a> &amp;<a class="el" href="classarmnn_1_1_i_layer_support.xhtml#a859feaa966620ae0ea88abf5226f2d04">descriptor</a>, <a class="el" href="classarmnn_1_1_optional.xhtml">Optional</a>&lt; std::string &amp;&gt; <a class="el" href="classarmnn_1_1_i_layer_support.xhtml#ac75f9a02b051716a0cc1cc0818dfe454">reasonIfUnsupported</a>=<a class="el" href="structarmnn_1_1_empty_optional.xhtml">EmptyOptional</a>()) const override</td></tr>
<tr class="separator:a1542179a03961e3635bb5bef993c8e0e inherit pub_methods_classarmnn_1_1_layer_support_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:adf18c4fa8fc9e0cdae1967990aa90fe8 inherit pub_methods_classarmnn_1_1_layer_support_base"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_layer_support_base.xhtml#adf18c4fa8fc9e0cdae1967990aa90fe8">IsConstantSupported</a> (const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;<a class="el" href="classarmnn_1_1_i_layer_support.xhtml#a4e25e081529b7e99e5e454d916ed83fb">output</a>, <a class="el" href="classarmnn_1_1_optional.xhtml">Optional</a>&lt; std::string &amp;&gt; <a class="el" href="classarmnn_1_1_i_layer_support.xhtml#ac75f9a02b051716a0cc1cc0818dfe454">reasonIfUnsupported</a>=<a class="el" href="structarmnn_1_1_empty_optional.xhtml">EmptyOptional</a>()) const override</td></tr>
<tr class="separator:adf18c4fa8fc9e0cdae1967990aa90fe8 inherit pub_methods_classarmnn_1_1_layer_support_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad330b6e7dcf25410ea878af0557f2197 inherit pub_methods_classarmnn_1_1_layer_support_base"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_layer_support_base.xhtml#ad330b6e7dcf25410ea878af0557f2197">IsConvertBf16ToFp32Supported</a> (const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;input, const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;<a class="el" href="classarmnn_1_1_i_layer_support.xhtml#a4e25e081529b7e99e5e454d916ed83fb">output</a>, <a class="el" href="classarmnn_1_1_optional.xhtml">Optional</a>&lt; std::string &amp;&gt; <a class="el" href="classarmnn_1_1_i_layer_support.xhtml#ac75f9a02b051716a0cc1cc0818dfe454">reasonIfUnsupported</a>=<a class="el" href="structarmnn_1_1_empty_optional.xhtml">EmptyOptional</a>()) const override</td></tr>
<tr class="separator:ad330b6e7dcf25410ea878af0557f2197 inherit pub_methods_classarmnn_1_1_layer_support_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1efcaf6f02892442fefca09f49ea3d7c inherit pub_methods_classarmnn_1_1_layer_support_base"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_layer_support_base.xhtml#a1efcaf6f02892442fefca09f49ea3d7c">IsConvertFp16ToFp32Supported</a> (const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;input, const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;<a class="el" href="classarmnn_1_1_i_layer_support.xhtml#a4e25e081529b7e99e5e454d916ed83fb">output</a>, <a class="el" href="classarmnn_1_1_optional.xhtml">Optional</a>&lt; std::string &amp;&gt; <a class="el" href="classarmnn_1_1_i_layer_support.xhtml#ac75f9a02b051716a0cc1cc0818dfe454">reasonIfUnsupported</a>=<a class="el" href="structarmnn_1_1_empty_optional.xhtml">EmptyOptional</a>()) const override</td></tr>
<tr class="separator:a1efcaf6f02892442fefca09f49ea3d7c inherit pub_methods_classarmnn_1_1_layer_support_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0947498c6cc747db6219a22132a1b89a inherit pub_methods_classarmnn_1_1_layer_support_base"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_layer_support_base.xhtml#a0947498c6cc747db6219a22132a1b89a">IsConvertFp32ToBf16Supported</a> (const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;input, const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;<a class="el" href="classarmnn_1_1_i_layer_support.xhtml#a4e25e081529b7e99e5e454d916ed83fb">output</a>, <a class="el" href="classarmnn_1_1_optional.xhtml">Optional</a>&lt; std::string &amp;&gt; <a class="el" href="classarmnn_1_1_i_layer_support.xhtml#ac75f9a02b051716a0cc1cc0818dfe454">reasonIfUnsupported</a>=<a class="el" href="structarmnn_1_1_empty_optional.xhtml">EmptyOptional</a>()) const override</td></tr>
<tr class="separator:a0947498c6cc747db6219a22132a1b89a inherit pub_methods_classarmnn_1_1_layer_support_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a91fb5f44d8b9427dc45443aa9ebfe13e inherit pub_methods_classarmnn_1_1_layer_support_base"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_layer_support_base.xhtml#a91fb5f44d8b9427dc45443aa9ebfe13e">IsConvertFp32ToFp16Supported</a> (const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;input, const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;<a class="el" href="classarmnn_1_1_i_layer_support.xhtml#a4e25e081529b7e99e5e454d916ed83fb">output</a>, <a class="el" href="classarmnn_1_1_optional.xhtml">Optional</a>&lt; std::string &amp;&gt; <a class="el" href="classarmnn_1_1_i_layer_support.xhtml#ac75f9a02b051716a0cc1cc0818dfe454">reasonIfUnsupported</a>=<a class="el" href="structarmnn_1_1_empty_optional.xhtml">EmptyOptional</a>()) const override</td></tr>
<tr class="separator:a91fb5f44d8b9427dc45443aa9ebfe13e inherit pub_methods_classarmnn_1_1_layer_support_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af7ff06bd8115a6a9cc6d41e5c762798e inherit pub_methods_classarmnn_1_1_layer_support_base"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_layer_support_base.xhtml#af7ff06bd8115a6a9cc6d41e5c762798e">IsConvolution2dSupported</a> (const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;input, const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;<a class="el" href="classarmnn_1_1_i_layer_support.xhtml#a4e25e081529b7e99e5e454d916ed83fb">output</a>, const <a class="el" href="structarmnn_1_1_convolution2d_descriptor.xhtml">Convolution2dDescriptor</a> &amp;<a class="el" href="classarmnn_1_1_i_layer_support.xhtml#a859feaa966620ae0ea88abf5226f2d04">descriptor</a>, const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;<a class="el" href="classarmnn_1_1_i_layer_support.xhtml#a631f893f44415523924016ed3f54a661">weights</a>, const <a class="el" href="classarmnn_1_1_optional.xhtml">Optional</a>&lt; <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &gt; &amp;<a class="el" href="classarmnn_1_1_i_layer_support.xhtml#a71cf13fc7f7aeac054919e0c6dcab52e">biases</a>, <a class="el" href="classarmnn_1_1_optional.xhtml">Optional</a>&lt; std::string &amp;&gt; <a class="el" href="classarmnn_1_1_i_layer_support.xhtml#ac75f9a02b051716a0cc1cc0818dfe454">reasonIfUnsupported</a>=<a class="el" href="structarmnn_1_1_empty_optional.xhtml">EmptyOptional</a>()) const override</td></tr>
<tr class="separator:af7ff06bd8115a6a9cc6d41e5c762798e inherit pub_methods_classarmnn_1_1_layer_support_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a052f289a5b4e48bb2b50c732753e2cfa inherit pub_methods_classarmnn_1_1_layer_support_base"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_layer_support_base.xhtml#a052f289a5b4e48bb2b50c732753e2cfa">IsConvolution3dSupported</a> (const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;input, const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;<a class="el" href="classarmnn_1_1_i_layer_support.xhtml#a4e25e081529b7e99e5e454d916ed83fb">output</a>, const <a class="el" href="structarmnn_1_1_convolution3d_descriptor.xhtml">Convolution3dDescriptor</a> &amp;<a class="el" href="classarmnn_1_1_i_layer_support.xhtml#a859feaa966620ae0ea88abf5226f2d04">descriptor</a>, const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;<a class="el" href="classarmnn_1_1_i_layer_support.xhtml#a631f893f44415523924016ed3f54a661">weights</a>, const <a class="el" href="classarmnn_1_1_optional.xhtml">Optional</a>&lt; <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &gt; &amp;<a class="el" href="classarmnn_1_1_i_layer_support.xhtml#a71cf13fc7f7aeac054919e0c6dcab52e">biases</a>, <a class="el" href="classarmnn_1_1_optional.xhtml">Optional</a>&lt; std::string &amp;&gt; <a class="el" href="classarmnn_1_1_i_layer_support.xhtml#ac75f9a02b051716a0cc1cc0818dfe454">reasonIfUnsupported</a>=<a class="el" href="structarmnn_1_1_empty_optional.xhtml">EmptyOptional</a>()) const override</td></tr>
<tr class="separator:a052f289a5b4e48bb2b50c732753e2cfa inherit pub_methods_classarmnn_1_1_layer_support_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a87a66c5e87a19534ce3e6c374c9b8f09 inherit pub_methods_classarmnn_1_1_layer_support_base"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_layer_support_base.xhtml#a87a66c5e87a19534ce3e6c374c9b8f09">IsDebugSupported</a> (const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;input, const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;<a class="el" href="classarmnn_1_1_i_layer_support.xhtml#a4e25e081529b7e99e5e454d916ed83fb">output</a>, <a class="el" href="classarmnn_1_1_optional.xhtml">Optional</a>&lt; std::string &amp;&gt; <a class="el" href="classarmnn_1_1_i_layer_support.xhtml#ac75f9a02b051716a0cc1cc0818dfe454">reasonIfUnsupported</a>=<a class="el" href="structarmnn_1_1_empty_optional.xhtml">EmptyOptional</a>()) const override</td></tr>
<tr class="separator:a87a66c5e87a19534ce3e6c374c9b8f09 inherit pub_methods_classarmnn_1_1_layer_support_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a128fb9890897e08251a3f621e570cd23 inherit pub_methods_classarmnn_1_1_layer_support_base"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_layer_support_base.xhtml#a128fb9890897e08251a3f621e570cd23">IsDepthToSpaceSupported</a> (const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;input, const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;<a class="el" href="classarmnn_1_1_i_layer_support.xhtml#a4e25e081529b7e99e5e454d916ed83fb">output</a>, const <a class="el" href="namespacearmnn.xhtml#a3647f60510bc8ddaced01c51b0ee8714">DepthToSpaceDescriptor</a> &amp;<a class="el" href="classarmnn_1_1_i_layer_support.xhtml#a859feaa966620ae0ea88abf5226f2d04">descriptor</a>, <a class="el" href="classarmnn_1_1_optional.xhtml">Optional</a>&lt; std::string &amp;&gt; <a class="el" href="classarmnn_1_1_i_layer_support.xhtml#ac75f9a02b051716a0cc1cc0818dfe454">reasonIfUnsupported</a>=<a class="el" href="structarmnn_1_1_empty_optional.xhtml">EmptyOptional</a>()) const override</td></tr>
<tr class="separator:a128fb9890897e08251a3f621e570cd23 inherit pub_methods_classarmnn_1_1_layer_support_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:adc84390751f227fe03a115b5fa10b0fc inherit pub_methods_classarmnn_1_1_layer_support_base"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_layer_support_base.xhtml#adc84390751f227fe03a115b5fa10b0fc">IsDepthwiseConvolutionSupported</a> (const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;input, const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;<a class="el" href="classarmnn_1_1_i_layer_support.xhtml#a4e25e081529b7e99e5e454d916ed83fb">output</a>, const <a class="el" href="structarmnn_1_1_depthwise_convolution2d_descriptor.xhtml">DepthwiseConvolution2dDescriptor</a> &amp;<a class="el" href="classarmnn_1_1_i_layer_support.xhtml#a859feaa966620ae0ea88abf5226f2d04">descriptor</a>, const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;<a class="el" href="classarmnn_1_1_i_layer_support.xhtml#a631f893f44415523924016ed3f54a661">weights</a>, const <a class="el" href="classarmnn_1_1_optional.xhtml">Optional</a>&lt; <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &gt; &amp;<a class="el" href="classarmnn_1_1_i_layer_support.xhtml#a71cf13fc7f7aeac054919e0c6dcab52e">biases</a>, <a class="el" href="classarmnn_1_1_optional.xhtml">Optional</a>&lt; std::string &amp;&gt; <a class="el" href="classarmnn_1_1_i_layer_support.xhtml#ac75f9a02b051716a0cc1cc0818dfe454">reasonIfUnsupported</a>=<a class="el" href="structarmnn_1_1_empty_optional.xhtml">EmptyOptional</a>()) const override</td></tr>
<tr class="separator:adc84390751f227fe03a115b5fa10b0fc inherit pub_methods_classarmnn_1_1_layer_support_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2e89c72cf60df7c2d2d7e5d98822b672 inherit pub_methods_classarmnn_1_1_layer_support_base"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_layer_support_base.xhtml#a2e89c72cf60df7c2d2d7e5d98822b672">IsDequantizeSupported</a> (const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;input, const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;<a class="el" href="classarmnn_1_1_i_layer_support.xhtml#a4e25e081529b7e99e5e454d916ed83fb">output</a>, <a class="el" href="classarmnn_1_1_optional.xhtml">Optional</a>&lt; std::string &amp;&gt; <a class="el" href="classarmnn_1_1_i_layer_support.xhtml#ac75f9a02b051716a0cc1cc0818dfe454">reasonIfUnsupported</a>=<a class="el" href="structarmnn_1_1_empty_optional.xhtml">EmptyOptional</a>()) const override</td></tr>
<tr class="separator:a2e89c72cf60df7c2d2d7e5d98822b672 inherit pub_methods_classarmnn_1_1_layer_support_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a50af275d7755a5bb1be69736d7e4b02f inherit pub_methods_classarmnn_1_1_layer_support_base"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_layer_support_base.xhtml#a50af275d7755a5bb1be69736d7e4b02f">IsDetectionPostProcessSupported</a> (const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;boxEncodings, const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;<a class="el" href="classarmnn_1_1_i_layer_support.xhtml#a97cbe8ac8df2e213185599d693079acf">scores</a>, const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;<a class="el" href="classarmnn_1_1_i_layer_support.xhtml#ae1e19982da8ec2840ca14748c2d8522c">anchors</a>, const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;<a class="el" href="classarmnn_1_1_i_layer_support.xhtml#a6d0c2ca9c78e81a5e9e0f3db51934782">detectionBoxes</a>, const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;<a class="el" href="classarmnn_1_1_i_layer_support.xhtml#a56d52f01c9d80f3710ddace11e534434">detectionClasses</a>, const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;<a class="el" href="classarmnn_1_1_i_layer_support.xhtml#ac8776b306c349e20905e7ae17255b395">detectionScores</a>, const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;<a class="el" href="classarmnn_1_1_i_layer_support.xhtml#a3b204a7fda471668ab54dc967c5a7917">numDetections</a>, const <a class="el" href="structarmnn_1_1_detection_post_process_descriptor.xhtml">DetectionPostProcessDescriptor</a> &amp;<a class="el" href="classarmnn_1_1_i_layer_support.xhtml#a859feaa966620ae0ea88abf5226f2d04">descriptor</a>, <a class="el" href="classarmnn_1_1_optional.xhtml">Optional</a>&lt; std::string &amp;&gt; <a class="el" href="classarmnn_1_1_i_layer_support.xhtml#ac75f9a02b051716a0cc1cc0818dfe454">reasonIfUnsupported</a>=<a class="el" href="structarmnn_1_1_empty_optional.xhtml">EmptyOptional</a>()) const override</td></tr>
<tr class="separator:a50af275d7755a5bb1be69736d7e4b02f inherit pub_methods_classarmnn_1_1_layer_support_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a55d91a97ff664f42cd5cd62b60c15f80 inherit pub_methods_classarmnn_1_1_layer_support_base"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_layer_support_base.xhtml#a55d91a97ff664f42cd5cd62b60c15f80">IsDilatedDepthwiseConvolutionSupported</a> (const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;input, const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;<a class="el" href="classarmnn_1_1_i_layer_support.xhtml#a4e25e081529b7e99e5e454d916ed83fb">output</a>, const <a class="el" href="structarmnn_1_1_depthwise_convolution2d_descriptor.xhtml">DepthwiseConvolution2dDescriptor</a> &amp;<a class="el" href="classarmnn_1_1_i_layer_support.xhtml#a859feaa966620ae0ea88abf5226f2d04">descriptor</a>, const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;<a class="el" href="classarmnn_1_1_i_layer_support.xhtml#a631f893f44415523924016ed3f54a661">weights</a>, const <a class="el" href="classarmnn_1_1_optional.xhtml">Optional</a>&lt; <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &gt; &amp;<a class="el" href="classarmnn_1_1_i_layer_support.xhtml#a71cf13fc7f7aeac054919e0c6dcab52e">biases</a>, <a class="el" href="classarmnn_1_1_optional.xhtml">Optional</a>&lt; std::string &amp;&gt; <a class="el" href="classarmnn_1_1_i_layer_support.xhtml#ac75f9a02b051716a0cc1cc0818dfe454">reasonIfUnsupported</a>=<a class="el" href="structarmnn_1_1_empty_optional.xhtml">EmptyOptional</a>()) const override</td></tr>
<tr class="separator:a55d91a97ff664f42cd5cd62b60c15f80 inherit pub_methods_classarmnn_1_1_layer_support_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a08f55136b1f0907e7083d70d719f697f inherit pub_methods_classarmnn_1_1_layer_support_base"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_layer_support_base.xhtml#a08f55136b1f0907e7083d70d719f697f">IsDivisionSupported</a> (const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;input0, const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;<a class="el" href="classarmnn_1_1_i_layer_support.xhtml#ab82416560ced17268c6ba4443a3aac5e">input1</a>, const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;<a class="el" href="classarmnn_1_1_i_layer_support.xhtml#a4e25e081529b7e99e5e454d916ed83fb">output</a>, <a class="el" href="classarmnn_1_1_optional.xhtml">Optional</a>&lt; std::string &amp;&gt; <a class="el" href="classarmnn_1_1_i_layer_support.xhtml#ac75f9a02b051716a0cc1cc0818dfe454">reasonIfUnsupported</a>=<a class="el" href="structarmnn_1_1_empty_optional.xhtml">EmptyOptional</a>()) const override</td></tr>
<tr class="separator:a08f55136b1f0907e7083d70d719f697f inherit pub_methods_classarmnn_1_1_layer_support_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a61c5b4e5dc224ef0c876e43353b34030 inherit pub_methods_classarmnn_1_1_layer_support_base"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_layer_support_base.xhtml#a61c5b4e5dc224ef0c876e43353b34030">IsElementwiseUnarySupported</a> (const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;input, const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;<a class="el" href="classarmnn_1_1_i_layer_support.xhtml#a4e25e081529b7e99e5e454d916ed83fb">output</a>, const <a class="el" href="structarmnn_1_1_elementwise_unary_descriptor.xhtml">ElementwiseUnaryDescriptor</a> &amp;<a class="el" href="classarmnn_1_1_i_layer_support.xhtml#a859feaa966620ae0ea88abf5226f2d04">descriptor</a>, <a class="el" href="classarmnn_1_1_optional.xhtml">Optional</a>&lt; std::string &amp;&gt; <a class="el" href="classarmnn_1_1_i_layer_support.xhtml#ac75f9a02b051716a0cc1cc0818dfe454">reasonIfUnsupported</a>=<a class="el" href="structarmnn_1_1_empty_optional.xhtml">EmptyOptional</a>()) const override</td></tr>
<tr class="separator:a61c5b4e5dc224ef0c876e43353b34030 inherit pub_methods_classarmnn_1_1_layer_support_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aab7318aa8adc0a8a3b6a1780cfc1f90b inherit pub_methods_classarmnn_1_1_layer_support_base"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_layer_support_base.xhtml#aab7318aa8adc0a8a3b6a1780cfc1f90b">IsFakeQuantizationSupported</a> (const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;input, const <a class="el" href="structarmnn_1_1_fake_quantization_descriptor.xhtml">FakeQuantizationDescriptor</a> &amp;<a class="el" href="classarmnn_1_1_i_layer_support.xhtml#a859feaa966620ae0ea88abf5226f2d04">descriptor</a>, <a class="el" href="classarmnn_1_1_optional.xhtml">Optional</a>&lt; std::string &amp;&gt; <a class="el" href="classarmnn_1_1_i_layer_support.xhtml#ac75f9a02b051716a0cc1cc0818dfe454">reasonIfUnsupported</a>=<a class="el" href="structarmnn_1_1_empty_optional.xhtml">EmptyOptional</a>()) const override</td></tr>
<tr class="separator:aab7318aa8adc0a8a3b6a1780cfc1f90b inherit pub_methods_classarmnn_1_1_layer_support_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:acc5d9a4c8f29984de3bbdca87684f317 inherit pub_methods_classarmnn_1_1_layer_support_base"><td class="memItemLeft" align="right" valign="top">virtual bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_layer_support_base.xhtml#acc5d9a4c8f29984de3bbdca87684f317">IsFillSupported</a> (const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;input, const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;<a class="el" href="classarmnn_1_1_i_layer_support.xhtml#a4e25e081529b7e99e5e454d916ed83fb">output</a>, const <a class="el" href="structarmnn_1_1_fill_descriptor.xhtml">FillDescriptor</a> &amp;<a class="el" href="classarmnn_1_1_i_layer_support.xhtml#a859feaa966620ae0ea88abf5226f2d04">descriptor</a>, <a class="el" href="classarmnn_1_1_optional.xhtml">Optional</a>&lt; std::string &amp;&gt; <a class="el" href="classarmnn_1_1_i_layer_support.xhtml#ac75f9a02b051716a0cc1cc0818dfe454">reasonIfUnsupported</a>=<a class="el" href="structarmnn_1_1_empty_optional.xhtml">EmptyOptional</a>()) const override</td></tr>
<tr class="separator:acc5d9a4c8f29984de3bbdca87684f317 inherit pub_methods_classarmnn_1_1_layer_support_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a53c7593d1aa26207eac5d5814a9d56dc inherit pub_methods_classarmnn_1_1_layer_support_base"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_layer_support_base.xhtml#a53c7593d1aa26207eac5d5814a9d56dc">IsFloorSupported</a> (const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;input, const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;<a class="el" href="classarmnn_1_1_i_layer_support.xhtml#a4e25e081529b7e99e5e454d916ed83fb">output</a>, <a class="el" href="classarmnn_1_1_optional.xhtml">Optional</a>&lt; std::string &amp;&gt; <a class="el" href="classarmnn_1_1_i_layer_support.xhtml#ac75f9a02b051716a0cc1cc0818dfe454">reasonIfUnsupported</a>=<a class="el" href="structarmnn_1_1_empty_optional.xhtml">EmptyOptional</a>()) const override</td></tr>
<tr class="separator:a53c7593d1aa26207eac5d5814a9d56dc inherit pub_methods_classarmnn_1_1_layer_support_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aeaf971dd9dffd6f6bc7e5a1ae6b6af5c inherit pub_methods_classarmnn_1_1_layer_support_base"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_layer_support_base.xhtml#aeaf971dd9dffd6f6bc7e5a1ae6b6af5c">IsFullyConnectedSupported</a> (const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;input, const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;<a class="el" href="classarmnn_1_1_i_layer_support.xhtml#a4e25e081529b7e99e5e454d916ed83fb">output</a>, const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;<a class="el" href="classarmnn_1_1_i_layer_support.xhtml#a631f893f44415523924016ed3f54a661">weights</a>, const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;<a class="el" href="classarmnn_1_1_i_layer_support.xhtml#a71cf13fc7f7aeac054919e0c6dcab52e">biases</a>, const <a class="el" href="structarmnn_1_1_fully_connected_descriptor.xhtml">FullyConnectedDescriptor</a> &amp;<a class="el" href="classarmnn_1_1_i_layer_support.xhtml#a859feaa966620ae0ea88abf5226f2d04">descriptor</a>, <a class="el" href="classarmnn_1_1_optional.xhtml">Optional</a>&lt; std::string &amp;&gt; <a class="el" href="classarmnn_1_1_i_layer_support.xhtml#ac75f9a02b051716a0cc1cc0818dfe454">reasonIfUnsupported</a>=<a class="el" href="structarmnn_1_1_empty_optional.xhtml">EmptyOptional</a>()) const override</td></tr>
<tr class="separator:aeaf971dd9dffd6f6bc7e5a1ae6b6af5c inherit pub_methods_classarmnn_1_1_layer_support_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2f51fda38409c3768a7bd28cedf3f075 inherit pub_methods_classarmnn_1_1_layer_support_base"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_layer_support_base.xhtml#a2f51fda38409c3768a7bd28cedf3f075">IsGatherSupported</a> (const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;input0, const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;<a class="el" href="classarmnn_1_1_i_layer_support.xhtml#ab82416560ced17268c6ba4443a3aac5e">input1</a>, const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;<a class="el" href="classarmnn_1_1_i_layer_support.xhtml#a4e25e081529b7e99e5e454d916ed83fb">output</a>, const <a class="el" href="structarmnn_1_1_gather_descriptor.xhtml">GatherDescriptor</a> &amp;<a class="el" href="classarmnn_1_1_i_layer_support.xhtml#a859feaa966620ae0ea88abf5226f2d04">descriptor</a>, <a class="el" href="classarmnn_1_1_optional.xhtml">Optional</a>&lt; std::string &amp;&gt; <a class="el" href="classarmnn_1_1_i_layer_support.xhtml#ac75f9a02b051716a0cc1cc0818dfe454">reasonIfUnsupported</a>=<a class="el" href="structarmnn_1_1_empty_optional.xhtml">EmptyOptional</a>()) const override</td></tr>
<tr class="separator:a2f51fda38409c3768a7bd28cedf3f075 inherit pub_methods_classarmnn_1_1_layer_support_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad29d99ecd719c640ed22dcf5c688c6a5 inherit pub_methods_classarmnn_1_1_layer_support_base"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_layer_support_base.xhtml#ad29d99ecd719c640ed22dcf5c688c6a5">IsInputSupported</a> (const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;input, <a class="el" href="classarmnn_1_1_optional.xhtml">Optional</a>&lt; std::string &amp;&gt; <a class="el" href="classarmnn_1_1_i_layer_support.xhtml#ac75f9a02b051716a0cc1cc0818dfe454">reasonIfUnsupported</a>=<a class="el" href="structarmnn_1_1_empty_optional.xhtml">EmptyOptional</a>()) const override</td></tr>
<tr class="separator:ad29d99ecd719c640ed22dcf5c688c6a5 inherit pub_methods_classarmnn_1_1_layer_support_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0813546a09bf2caba6794014d1960624 inherit pub_methods_classarmnn_1_1_layer_support_base"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_layer_support_base.xhtml#a0813546a09bf2caba6794014d1960624">IsInstanceNormalizationSupported</a> (const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;input, const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;<a class="el" href="classarmnn_1_1_i_layer_support.xhtml#a4e25e081529b7e99e5e454d916ed83fb">output</a>, const <a class="el" href="structarmnn_1_1_instance_normalization_descriptor.xhtml">InstanceNormalizationDescriptor</a> &amp;<a class="el" href="classarmnn_1_1_i_layer_support.xhtml#a859feaa966620ae0ea88abf5226f2d04">descriptor</a>, <a class="el" href="classarmnn_1_1_optional.xhtml">Optional</a>&lt; std::string &amp;&gt; <a class="el" href="classarmnn_1_1_i_layer_support.xhtml#ac75f9a02b051716a0cc1cc0818dfe454">reasonIfUnsupported</a>=<a class="el" href="structarmnn_1_1_empty_optional.xhtml">EmptyOptional</a>()) const override</td></tr>
<tr class="separator:a0813546a09bf2caba6794014d1960624 inherit pub_methods_classarmnn_1_1_layer_support_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aca4acda7ab553edfda828658d8f3882b inherit pub_methods_classarmnn_1_1_layer_support_base"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_layer_support_base.xhtml#aca4acda7ab553edfda828658d8f3882b">IsL2NormalizationSupported</a> (const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;input, const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;<a class="el" href="classarmnn_1_1_i_layer_support.xhtml#a4e25e081529b7e99e5e454d916ed83fb">output</a>, const <a class="el" href="structarmnn_1_1_l2_normalization_descriptor.xhtml">L2NormalizationDescriptor</a> &amp;<a class="el" href="classarmnn_1_1_i_layer_support.xhtml#a859feaa966620ae0ea88abf5226f2d04">descriptor</a>, <a class="el" href="classarmnn_1_1_optional.xhtml">Optional</a>&lt; std::string &amp;&gt; <a class="el" href="classarmnn_1_1_i_layer_support.xhtml#ac75f9a02b051716a0cc1cc0818dfe454">reasonIfUnsupported</a>=<a class="el" href="structarmnn_1_1_empty_optional.xhtml">EmptyOptional</a>()) const override</td></tr>
<tr class="separator:aca4acda7ab553edfda828658d8f3882b inherit pub_methods_classarmnn_1_1_layer_support_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8fab6937a1010b5ed674b930b4f143cb inherit pub_methods_classarmnn_1_1_layer_support_base"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_layer_support_base.xhtml#a8fab6937a1010b5ed674b930b4f143cb">IsLogicalBinarySupported</a> (const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;input0, const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;<a class="el" href="classarmnn_1_1_i_layer_support.xhtml#ab82416560ced17268c6ba4443a3aac5e">input1</a>, const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;<a class="el" href="classarmnn_1_1_i_layer_support.xhtml#a4e25e081529b7e99e5e454d916ed83fb">output</a>, const <a class="el" href="structarmnn_1_1_logical_binary_descriptor.xhtml">LogicalBinaryDescriptor</a> &amp;<a class="el" href="classarmnn_1_1_i_layer_support.xhtml#a859feaa966620ae0ea88abf5226f2d04">descriptor</a>, <a class="el" href="classarmnn_1_1_optional.xhtml">Optional</a>&lt; std::string &amp;&gt; <a class="el" href="classarmnn_1_1_i_layer_support.xhtml#ac75f9a02b051716a0cc1cc0818dfe454">reasonIfUnsupported</a>=<a class="el" href="structarmnn_1_1_empty_optional.xhtml">EmptyOptional</a>()) const override</td></tr>
<tr class="separator:a8fab6937a1010b5ed674b930b4f143cb inherit pub_methods_classarmnn_1_1_layer_support_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a20134883695508a2192eecd403e7c44b inherit pub_methods_classarmnn_1_1_layer_support_base"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_layer_support_base.xhtml#a20134883695508a2192eecd403e7c44b">IsLogicalUnarySupported</a> (const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;input, const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;<a class="el" href="classarmnn_1_1_i_layer_support.xhtml#a4e25e081529b7e99e5e454d916ed83fb">output</a>, const <a class="el" href="structarmnn_1_1_elementwise_unary_descriptor.xhtml">ElementwiseUnaryDescriptor</a> &amp;<a class="el" href="classarmnn_1_1_i_layer_support.xhtml#a859feaa966620ae0ea88abf5226f2d04">descriptor</a>, <a class="el" href="classarmnn_1_1_optional.xhtml">Optional</a>&lt; std::string &amp;&gt; <a class="el" href="classarmnn_1_1_i_layer_support.xhtml#ac75f9a02b051716a0cc1cc0818dfe454">reasonIfUnsupported</a>=<a class="el" href="structarmnn_1_1_empty_optional.xhtml">EmptyOptional</a>()) const override</td></tr>
<tr class="separator:a20134883695508a2192eecd403e7c44b inherit pub_methods_classarmnn_1_1_layer_support_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa0380b797cb9932fb03067dbe2cdecfb inherit pub_methods_classarmnn_1_1_layer_support_base"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_layer_support_base.xhtml#aa0380b797cb9932fb03067dbe2cdecfb">IsLogSoftmaxSupported</a> (const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;input, const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;<a class="el" href="classarmnn_1_1_i_layer_support.xhtml#a4e25e081529b7e99e5e454d916ed83fb">output</a>, const <a class="el" href="namespacearmnn.xhtml#ac14705405cbcdd580df613de6766fe65">LogSoftmaxDescriptor</a> &amp;<a class="el" href="classarmnn_1_1_i_layer_support.xhtml#a859feaa966620ae0ea88abf5226f2d04">descriptor</a>, <a class="el" href="classarmnn_1_1_optional.xhtml">Optional</a>&lt; std::string &amp;&gt; <a class="el" href="classarmnn_1_1_i_layer_support.xhtml#ac75f9a02b051716a0cc1cc0818dfe454">reasonIfUnsupported</a>=<a class="el" href="structarmnn_1_1_empty_optional.xhtml">EmptyOptional</a>()) const override</td></tr>
<tr class="separator:aa0380b797cb9932fb03067dbe2cdecfb inherit pub_methods_classarmnn_1_1_layer_support_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a862535721737220f62a49f14ff494dd5 inherit pub_methods_classarmnn_1_1_layer_support_base"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_layer_support_base.xhtml#a862535721737220f62a49f14ff494dd5">IsLstmSupported</a> (const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;input, const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;<a class="el" href="classarmnn_1_1_i_layer_support.xhtml#a5a01de4e3851a25f2df77897fb8f7083">outputStateIn</a>, const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;<a class="el" href="classarmnn_1_1_i_layer_support.xhtml#aec04a02758804219fb461623464a8e96">cellStateIn</a>, const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;<a class="el" href="classarmnn_1_1_i_layer_support.xhtml#a4f6f59c4e91c7c37d9a119d615093ed3">scratchBuffer</a>, const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;<a class="el" href="classarmnn_1_1_i_layer_support.xhtml#a44eb2a514bddb31fe20f9e4f04159c9f">outputStateOut</a>, const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;<a class="el" href="classarmnn_1_1_i_layer_support.xhtml#ae1ee2d524d4252bffc0ed67e75882952">cellStateOut</a>, const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;<a class="el" href="classarmnn_1_1_i_layer_support.xhtml#a4e25e081529b7e99e5e454d916ed83fb">output</a>, const <a class="el" href="structarmnn_1_1_lstm_descriptor.xhtml">LstmDescriptor</a> &amp;<a class="el" href="classarmnn_1_1_i_layer_support.xhtml#a859feaa966620ae0ea88abf5226f2d04">descriptor</a>, const <a class="el" href="structarmnn_1_1_lstm_input_params_info.xhtml">LstmInputParamsInfo</a> &amp;<a class="el" href="classarmnn_1_1_i_layer_support.xhtml#aca7a974c8803242968a8d6540275264a">paramsInfo</a>, <a class="el" href="classarmnn_1_1_optional.xhtml">Optional</a>&lt; std::string &amp;&gt; <a class="el" href="classarmnn_1_1_i_layer_support.xhtml#ac75f9a02b051716a0cc1cc0818dfe454">reasonIfUnsupported</a>=<a class="el" href="structarmnn_1_1_empty_optional.xhtml">EmptyOptional</a>()) const override</td></tr>
<tr class="separator:a862535721737220f62a49f14ff494dd5 inherit pub_methods_classarmnn_1_1_layer_support_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:afef9436c86b37b973471f2ae546ac00a inherit pub_methods_classarmnn_1_1_layer_support_base"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_layer_support_base.xhtml#afef9436c86b37b973471f2ae546ac00a">IsMaximumSupported</a> (const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;input0, const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;<a class="el" href="classarmnn_1_1_i_layer_support.xhtml#ab82416560ced17268c6ba4443a3aac5e">input1</a>, const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;<a class="el" href="classarmnn_1_1_i_layer_support.xhtml#a4e25e081529b7e99e5e454d916ed83fb">output</a>, <a class="el" href="classarmnn_1_1_optional.xhtml">Optional</a>&lt; std::string &amp;&gt; <a class="el" href="classarmnn_1_1_i_layer_support.xhtml#ac75f9a02b051716a0cc1cc0818dfe454">reasonIfUnsupported</a>=<a class="el" href="structarmnn_1_1_empty_optional.xhtml">EmptyOptional</a>()) const override</td></tr>
<tr class="separator:afef9436c86b37b973471f2ae546ac00a inherit pub_methods_classarmnn_1_1_layer_support_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab268618580d4f53bf5e9b5a47dee3f6a inherit pub_methods_classarmnn_1_1_layer_support_base"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_layer_support_base.xhtml#ab268618580d4f53bf5e9b5a47dee3f6a">IsMeanSupported</a> (const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;input, const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;<a class="el" href="classarmnn_1_1_i_layer_support.xhtml#a4e25e081529b7e99e5e454d916ed83fb">output</a>, const <a class="el" href="structarmnn_1_1_mean_descriptor.xhtml">MeanDescriptor</a> &amp;<a class="el" href="classarmnn_1_1_i_layer_support.xhtml#a859feaa966620ae0ea88abf5226f2d04">descriptor</a>, <a class="el" href="classarmnn_1_1_optional.xhtml">Optional</a>&lt; std::string &amp;&gt; <a class="el" href="classarmnn_1_1_i_layer_support.xhtml#ac75f9a02b051716a0cc1cc0818dfe454">reasonIfUnsupported</a>=<a class="el" href="structarmnn_1_1_empty_optional.xhtml">EmptyOptional</a>()) const override</td></tr>
<tr class="separator:ab268618580d4f53bf5e9b5a47dee3f6a inherit pub_methods_classarmnn_1_1_layer_support_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9d25fabf725313fda40a41400155bafe inherit pub_methods_classarmnn_1_1_layer_support_base"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_layer_support_base.xhtml#a9d25fabf725313fda40a41400155bafe">IsMemCopySupported</a> (const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;input, const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;<a class="el" href="classarmnn_1_1_i_layer_support.xhtml#a4e25e081529b7e99e5e454d916ed83fb">output</a>, <a class="el" href="classarmnn_1_1_optional.xhtml">Optional</a>&lt; std::string &amp;&gt; <a class="el" href="classarmnn_1_1_i_layer_support.xhtml#ac75f9a02b051716a0cc1cc0818dfe454">reasonIfUnsupported</a>=<a class="el" href="structarmnn_1_1_empty_optional.xhtml">EmptyOptional</a>()) const override</td></tr>
<tr class="separator:a9d25fabf725313fda40a41400155bafe inherit pub_methods_classarmnn_1_1_layer_support_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a334181d8098b943d03ccd820753ace75 inherit pub_methods_classarmnn_1_1_layer_support_base"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_layer_support_base.xhtml#a334181d8098b943d03ccd820753ace75">IsMemImportSupported</a> (const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;input, const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;<a class="el" href="classarmnn_1_1_i_layer_support.xhtml#a4e25e081529b7e99e5e454d916ed83fb">output</a>, <a class="el" href="classarmnn_1_1_optional.xhtml">Optional</a>&lt; std::string &amp;&gt; <a class="el" href="classarmnn_1_1_i_layer_support.xhtml#ac75f9a02b051716a0cc1cc0818dfe454">reasonIfUnsupported</a>=<a class="el" href="structarmnn_1_1_empty_optional.xhtml">EmptyOptional</a>()) const override</td></tr>
<tr class="separator:a334181d8098b943d03ccd820753ace75 inherit pub_methods_classarmnn_1_1_layer_support_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa9bbc383cac59d6f02d2ef7d2cc0076f inherit pub_methods_classarmnn_1_1_layer_support_base"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_layer_support_base.xhtml#aa9bbc383cac59d6f02d2ef7d2cc0076f">IsMergeSupported</a> (const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;input0, const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;<a class="el" href="classarmnn_1_1_i_layer_support.xhtml#ab82416560ced17268c6ba4443a3aac5e">input1</a>, const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;<a class="el" href="classarmnn_1_1_i_layer_support.xhtml#a4e25e081529b7e99e5e454d916ed83fb">output</a>, <a class="el" href="classarmnn_1_1_optional.xhtml">Optional</a>&lt; std::string &amp;&gt; <a class="el" href="classarmnn_1_1_i_layer_support.xhtml#ac75f9a02b051716a0cc1cc0818dfe454">reasonIfUnsupported</a>=<a class="el" href="structarmnn_1_1_empty_optional.xhtml">EmptyOptional</a>()) const override</td></tr>
<tr class="separator:aa9bbc383cac59d6f02d2ef7d2cc0076f inherit pub_methods_classarmnn_1_1_layer_support_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3d0eafb3de560b3482f857b56b2b2116 inherit pub_methods_classarmnn_1_1_layer_support_base"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_layer_support_base.xhtml#a3d0eafb3de560b3482f857b56b2b2116">IsMinimumSupported</a> (const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;input0, const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;<a class="el" href="classarmnn_1_1_i_layer_support.xhtml#ab82416560ced17268c6ba4443a3aac5e">input1</a>, const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;<a class="el" href="classarmnn_1_1_i_layer_support.xhtml#a4e25e081529b7e99e5e454d916ed83fb">output</a>, <a class="el" href="classarmnn_1_1_optional.xhtml">Optional</a>&lt; std::string &amp;&gt; <a class="el" href="classarmnn_1_1_i_layer_support.xhtml#ac75f9a02b051716a0cc1cc0818dfe454">reasonIfUnsupported</a>=<a class="el" href="structarmnn_1_1_empty_optional.xhtml">EmptyOptional</a>()) const override</td></tr>
<tr class="separator:a3d0eafb3de560b3482f857b56b2b2116 inherit pub_methods_classarmnn_1_1_layer_support_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a421e1f3865d99d52613003048342c49a inherit pub_methods_classarmnn_1_1_layer_support_base"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_layer_support_base.xhtml#a421e1f3865d99d52613003048342c49a">IsMultiplicationSupported</a> (const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;input0, const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;<a class="el" href="classarmnn_1_1_i_layer_support.xhtml#ab82416560ced17268c6ba4443a3aac5e">input1</a>, const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;<a class="el" href="classarmnn_1_1_i_layer_support.xhtml#a4e25e081529b7e99e5e454d916ed83fb">output</a>, <a class="el" href="classarmnn_1_1_optional.xhtml">Optional</a>&lt; std::string &amp;&gt; <a class="el" href="classarmnn_1_1_i_layer_support.xhtml#ac75f9a02b051716a0cc1cc0818dfe454">reasonIfUnsupported</a>=<a class="el" href="structarmnn_1_1_empty_optional.xhtml">EmptyOptional</a>()) const override</td></tr>
<tr class="separator:a421e1f3865d99d52613003048342c49a inherit pub_methods_classarmnn_1_1_layer_support_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a994c2065561141bf37fcd2ff7bb4af4d inherit pub_methods_classarmnn_1_1_layer_support_base"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_layer_support_base.xhtml#a994c2065561141bf37fcd2ff7bb4af4d">IsNormalizationSupported</a> (const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;input, const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;<a class="el" href="classarmnn_1_1_i_layer_support.xhtml#a4e25e081529b7e99e5e454d916ed83fb">output</a>, const <a class="el" href="structarmnn_1_1_normalization_descriptor.xhtml">NormalizationDescriptor</a> &amp;<a class="el" href="classarmnn_1_1_i_layer_support.xhtml#a859feaa966620ae0ea88abf5226f2d04">descriptor</a>, <a class="el" href="classarmnn_1_1_optional.xhtml">Optional</a>&lt; std::string &amp;&gt; <a class="el" href="classarmnn_1_1_i_layer_support.xhtml#ac75f9a02b051716a0cc1cc0818dfe454">reasonIfUnsupported</a>=<a class="el" href="structarmnn_1_1_empty_optional.xhtml">EmptyOptional</a>()) const override</td></tr>
<tr class="separator:a994c2065561141bf37fcd2ff7bb4af4d inherit pub_methods_classarmnn_1_1_layer_support_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aef3244c0ef64c8f2f352d21ce0c06985 inherit pub_methods_classarmnn_1_1_layer_support_base"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_layer_support_base.xhtml#aef3244c0ef64c8f2f352d21ce0c06985">IsOutputSupported</a> (const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;<a class="el" href="classarmnn_1_1_i_layer_support.xhtml#a4e25e081529b7e99e5e454d916ed83fb">output</a>, <a class="el" href="classarmnn_1_1_optional.xhtml">Optional</a>&lt; std::string &amp;&gt; <a class="el" href="classarmnn_1_1_i_layer_support.xhtml#ac75f9a02b051716a0cc1cc0818dfe454">reasonIfUnsupported</a>=<a class="el" href="structarmnn_1_1_empty_optional.xhtml">EmptyOptional</a>()) const override</td></tr>
<tr class="separator:aef3244c0ef64c8f2f352d21ce0c06985 inherit pub_methods_classarmnn_1_1_layer_support_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0534291adf9f3436ba331552eba29a43 inherit pub_methods_classarmnn_1_1_layer_support_base"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_layer_support_base.xhtml#a0534291adf9f3436ba331552eba29a43">IsPadSupported</a> (const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;input, const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;<a class="el" href="classarmnn_1_1_i_layer_support.xhtml#a4e25e081529b7e99e5e454d916ed83fb">output</a>, const <a class="el" href="structarmnn_1_1_pad_descriptor.xhtml">PadDescriptor</a> &amp;<a class="el" href="classarmnn_1_1_i_layer_support.xhtml#a859feaa966620ae0ea88abf5226f2d04">descriptor</a>, <a class="el" href="classarmnn_1_1_optional.xhtml">Optional</a>&lt; std::string &amp;&gt; <a class="el" href="classarmnn_1_1_i_layer_support.xhtml#ac75f9a02b051716a0cc1cc0818dfe454">reasonIfUnsupported</a>=<a class="el" href="structarmnn_1_1_empty_optional.xhtml">EmptyOptional</a>()) const override</td></tr>
<tr class="separator:a0534291adf9f3436ba331552eba29a43 inherit pub_methods_classarmnn_1_1_layer_support_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9d553495d9a94fa55588ae159d8bda30 inherit pub_methods_classarmnn_1_1_layer_support_base"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_layer_support_base.xhtml#a9d553495d9a94fa55588ae159d8bda30">IsPermuteSupported</a> (const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;input, const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;<a class="el" href="classarmnn_1_1_i_layer_support.xhtml#a4e25e081529b7e99e5e454d916ed83fb">output</a>, const <a class="el" href="structarmnn_1_1_permute_descriptor.xhtml">PermuteDescriptor</a> &amp;<a class="el" href="classarmnn_1_1_i_layer_support.xhtml#a859feaa966620ae0ea88abf5226f2d04">descriptor</a>, <a class="el" href="classarmnn_1_1_optional.xhtml">Optional</a>&lt; std::string &amp;&gt; <a class="el" href="classarmnn_1_1_i_layer_support.xhtml#ac75f9a02b051716a0cc1cc0818dfe454">reasonIfUnsupported</a>=<a class="el" href="structarmnn_1_1_empty_optional.xhtml">EmptyOptional</a>()) const override</td></tr>
<tr class="separator:a9d553495d9a94fa55588ae159d8bda30 inherit pub_methods_classarmnn_1_1_layer_support_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa955675303d67b1d1fb51fb7f09d8c21 inherit pub_methods_classarmnn_1_1_layer_support_base"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_layer_support_base.xhtml#aa955675303d67b1d1fb51fb7f09d8c21">IsPooling2dSupported</a> (const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;input, const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;<a class="el" href="classarmnn_1_1_i_layer_support.xhtml#a4e25e081529b7e99e5e454d916ed83fb">output</a>, const <a class="el" href="structarmnn_1_1_pooling2d_descriptor.xhtml">Pooling2dDescriptor</a> &amp;<a class="el" href="classarmnn_1_1_i_layer_support.xhtml#a859feaa966620ae0ea88abf5226f2d04">descriptor</a>, <a class="el" href="classarmnn_1_1_optional.xhtml">Optional</a>&lt; std::string &amp;&gt; <a class="el" href="classarmnn_1_1_i_layer_support.xhtml#ac75f9a02b051716a0cc1cc0818dfe454">reasonIfUnsupported</a>=<a class="el" href="structarmnn_1_1_empty_optional.xhtml">EmptyOptional</a>()) const override</td></tr>
<tr class="separator:aa955675303d67b1d1fb51fb7f09d8c21 inherit pub_methods_classarmnn_1_1_layer_support_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5aec1c6fb4f73909a10f72f45815d2cb inherit pub_methods_classarmnn_1_1_layer_support_base"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_layer_support_base.xhtml#a5aec1c6fb4f73909a10f72f45815d2cb">IsPooling3dSupported</a> (const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;input, const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;<a class="el" href="classarmnn_1_1_i_layer_support.xhtml#a4e25e081529b7e99e5e454d916ed83fb">output</a>, const <a class="el" href="structarmnn_1_1_pooling3d_descriptor.xhtml">Pooling3dDescriptor</a> &amp;<a class="el" href="classarmnn_1_1_i_layer_support.xhtml#a859feaa966620ae0ea88abf5226f2d04">descriptor</a>, <a class="el" href="classarmnn_1_1_optional.xhtml">Optional</a>&lt; std::string &amp;&gt; <a class="el" href="classarmnn_1_1_i_layer_support.xhtml#ac75f9a02b051716a0cc1cc0818dfe454">reasonIfUnsupported</a>=<a class="el" href="structarmnn_1_1_empty_optional.xhtml">EmptyOptional</a>()) const override</td></tr>
<tr class="separator:a5aec1c6fb4f73909a10f72f45815d2cb inherit pub_methods_classarmnn_1_1_layer_support_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:adc1a598f2f572564818e3d343af93486 inherit pub_methods_classarmnn_1_1_layer_support_base"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_layer_support_base.xhtml#adc1a598f2f572564818e3d343af93486">IsPreCompiledSupported</a> (const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;input, const <a class="el" href="structarmnn_1_1_pre_compiled_descriptor.xhtml">PreCompiledDescriptor</a> &amp;<a class="el" href="classarmnn_1_1_i_layer_support.xhtml#a859feaa966620ae0ea88abf5226f2d04">descriptor</a>, <a class="el" href="classarmnn_1_1_optional.xhtml">Optional</a>&lt; std::string &amp;&gt; <a class="el" href="classarmnn_1_1_i_layer_support.xhtml#ac75f9a02b051716a0cc1cc0818dfe454">reasonIfUnsupported</a>=<a class="el" href="structarmnn_1_1_empty_optional.xhtml">EmptyOptional</a>()) const override</td></tr>
<tr class="separator:adc1a598f2f572564818e3d343af93486 inherit pub_methods_classarmnn_1_1_layer_support_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a93cf81b28c4275a338f41c536a451158 inherit pub_methods_classarmnn_1_1_layer_support_base"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_layer_support_base.xhtml#a93cf81b28c4275a338f41c536a451158">IsPreluSupported</a> (const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;input, const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;<a class="el" href="classarmnn_1_1_i_layer_support.xhtml#a218e2ebb5babb8323688906b8997eafb">alpha</a>, const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;<a class="el" href="classarmnn_1_1_i_layer_support.xhtml#a4e25e081529b7e99e5e454d916ed83fb">output</a>, <a class="el" href="classarmnn_1_1_optional.xhtml">Optional</a>&lt; std::string &amp;&gt; <a class="el" href="classarmnn_1_1_i_layer_support.xhtml#ac75f9a02b051716a0cc1cc0818dfe454">reasonIfUnsupported</a>) const override</td></tr>
<tr class="separator:a93cf81b28c4275a338f41c536a451158 inherit pub_methods_classarmnn_1_1_layer_support_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad2c7be6b84b04444e514f52f593b3df7 inherit pub_methods_classarmnn_1_1_layer_support_base"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_layer_support_base.xhtml#ad2c7be6b84b04444e514f52f593b3df7">IsQuantizeSupported</a> (const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;input, const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;<a class="el" href="classarmnn_1_1_i_layer_support.xhtml#a4e25e081529b7e99e5e454d916ed83fb">output</a>, <a class="el" href="classarmnn_1_1_optional.xhtml">Optional</a>&lt; std::string &amp;&gt; <a class="el" href="classarmnn_1_1_i_layer_support.xhtml#ac75f9a02b051716a0cc1cc0818dfe454">reasonIfUnsupported</a>=<a class="el" href="structarmnn_1_1_empty_optional.xhtml">EmptyOptional</a>()) const override</td></tr>
<tr class="separator:ad2c7be6b84b04444e514f52f593b3df7 inherit pub_methods_classarmnn_1_1_layer_support_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:adf54bcad228c0ac21f6735d31460cf31 inherit pub_methods_classarmnn_1_1_layer_support_base"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_layer_support_base.xhtml#adf54bcad228c0ac21f6735d31460cf31">IsQLstmSupported</a> (const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;input, const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;<a class="el" href="classarmnn_1_1_i_layer_support.xhtml#a5b09834cc88bb4156e291c37bd2434ff">previousOutputIn</a>, const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;<a class="el" href="classarmnn_1_1_i_layer_support.xhtml#ad5e0e3fb8a59107ac3366028a057db12">previousCellStateIn</a>, const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;<a class="el" href="classarmnn_1_1_i_layer_support.xhtml#a44eb2a514bddb31fe20f9e4f04159c9f">outputStateOut</a>, const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;<a class="el" href="classarmnn_1_1_i_layer_support.xhtml#ae1ee2d524d4252bffc0ed67e75882952">cellStateOut</a>, const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;<a class="el" href="classarmnn_1_1_i_layer_support.xhtml#a4e25e081529b7e99e5e454d916ed83fb">output</a>, const <a class="el" href="structarmnn_1_1_q_lstm_descriptor.xhtml">QLstmDescriptor</a> &amp;<a class="el" href="classarmnn_1_1_i_layer_support.xhtml#a859feaa966620ae0ea88abf5226f2d04">descriptor</a>, const <a class="el" href="structarmnn_1_1_lstm_input_params_info.xhtml">LstmInputParamsInfo</a> &amp;<a class="el" href="classarmnn_1_1_i_layer_support.xhtml#aca7a974c8803242968a8d6540275264a">paramsInfo</a>, <a class="el" href="classarmnn_1_1_optional.xhtml">Optional</a>&lt; std::string &amp;&gt; <a class="el" href="classarmnn_1_1_i_layer_support.xhtml#ac75f9a02b051716a0cc1cc0818dfe454">reasonIfUnsupported</a>=<a class="el" href="structarmnn_1_1_empty_optional.xhtml">EmptyOptional</a>()) const override</td></tr>
<tr class="separator:adf54bcad228c0ac21f6735d31460cf31 inherit pub_methods_classarmnn_1_1_layer_support_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af1be52d9f968bfab069344756bf232c4 inherit pub_methods_classarmnn_1_1_layer_support_base"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_layer_support_base.xhtml#af1be52d9f968bfab069344756bf232c4">IsQuantizedLstmSupported</a> (const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;input, const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;<a class="el" href="classarmnn_1_1_i_layer_support.xhtml#ad5e0e3fb8a59107ac3366028a057db12">previousCellStateIn</a>, const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;<a class="el" href="classarmnn_1_1_i_layer_support.xhtml#a5b09834cc88bb4156e291c37bd2434ff">previousOutputIn</a>, const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;<a class="el" href="classarmnn_1_1_i_layer_support.xhtml#ae1ee2d524d4252bffc0ed67e75882952">cellStateOut</a>, const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;<a class="el" href="classarmnn_1_1_i_layer_support.xhtml#a4e25e081529b7e99e5e454d916ed83fb">output</a>, const <a class="el" href="structarmnn_1_1_quantized_lstm_input_params_info.xhtml">QuantizedLstmInputParamsInfo</a> &amp;<a class="el" href="classarmnn_1_1_i_layer_support.xhtml#aca7a974c8803242968a8d6540275264a">paramsInfo</a>, <a class="el" href="classarmnn_1_1_optional.xhtml">Optional</a>&lt; std::string &amp;&gt; <a class="el" href="classarmnn_1_1_i_layer_support.xhtml#ac75f9a02b051716a0cc1cc0818dfe454">reasonIfUnsupported</a>=<a class="el" href="structarmnn_1_1_empty_optional.xhtml">EmptyOptional</a>()) const override</td></tr>
<tr class="separator:af1be52d9f968bfab069344756bf232c4 inherit pub_methods_classarmnn_1_1_layer_support_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a707638bc045d261dff4faaf4a2acc72b inherit pub_methods_classarmnn_1_1_layer_support_base"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_layer_support_base.xhtml#a707638bc045d261dff4faaf4a2acc72b">IsRankSupported</a> (const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;input, const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;<a class="el" href="classarmnn_1_1_i_layer_support.xhtml#a4e25e081529b7e99e5e454d916ed83fb">output</a>, <a class="el" href="classarmnn_1_1_optional.xhtml">Optional</a>&lt; std::string &amp;&gt; <a class="el" href="classarmnn_1_1_i_layer_support.xhtml#ac75f9a02b051716a0cc1cc0818dfe454">reasonIfUnsupported</a>) const override</td></tr>
<tr class="separator:a707638bc045d261dff4faaf4a2acc72b inherit pub_methods_classarmnn_1_1_layer_support_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a917c126e64314263b8b5f7bca455ddfb inherit pub_methods_classarmnn_1_1_layer_support_base"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_layer_support_base.xhtml#a917c126e64314263b8b5f7bca455ddfb">IsReduceSupported</a> (const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;input, const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;<a class="el" href="classarmnn_1_1_i_layer_support.xhtml#a4e25e081529b7e99e5e454d916ed83fb">output</a>, const <a class="el" href="structarmnn_1_1_reduce_descriptor.xhtml">ReduceDescriptor</a> &amp;<a class="el" href="classarmnn_1_1_i_layer_support.xhtml#a859feaa966620ae0ea88abf5226f2d04">descriptor</a>, <a class="el" href="classarmnn_1_1_optional.xhtml">Optional</a>&lt; std::string &amp;&gt; <a class="el" href="classarmnn_1_1_i_layer_support.xhtml#ac75f9a02b051716a0cc1cc0818dfe454">reasonIfUnsupported</a>=<a class="el" href="structarmnn_1_1_empty_optional.xhtml">EmptyOptional</a>()) const override</td></tr>
<tr class="separator:a917c126e64314263b8b5f7bca455ddfb inherit pub_methods_classarmnn_1_1_layer_support_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa02f01bbcb48c67f5b2efc4132ec5e86 inherit pub_methods_classarmnn_1_1_layer_support_base"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_layer_support_base.xhtml#aa02f01bbcb48c67f5b2efc4132ec5e86">IsReshapeSupported</a> (const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;input, const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;<a class="el" href="classarmnn_1_1_i_layer_support.xhtml#a4e25e081529b7e99e5e454d916ed83fb">output</a>, const <a class="el" href="structarmnn_1_1_reshape_descriptor.xhtml">ReshapeDescriptor</a> &amp;<a class="el" href="classarmnn_1_1_i_layer_support.xhtml#a859feaa966620ae0ea88abf5226f2d04">descriptor</a>, <a class="el" href="classarmnn_1_1_optional.xhtml">Optional</a>&lt; std::string &amp;&gt; <a class="el" href="classarmnn_1_1_i_layer_support.xhtml#ac75f9a02b051716a0cc1cc0818dfe454">reasonIfUnsupported</a>=<a class="el" href="structarmnn_1_1_empty_optional.xhtml">EmptyOptional</a>()) const override</td></tr>
<tr class="separator:aa02f01bbcb48c67f5b2efc4132ec5e86 inherit pub_methods_classarmnn_1_1_layer_support_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3d27a3fc6a7df0b68d80cb113aff8b6c inherit pub_methods_classarmnn_1_1_layer_support_base"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_layer_support_base.xhtml#a3d27a3fc6a7df0b68d80cb113aff8b6c">IsResizeSupported</a> (const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;input, const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;<a class="el" href="classarmnn_1_1_i_layer_support.xhtml#a4e25e081529b7e99e5e454d916ed83fb">output</a>, const <a class="el" href="structarmnn_1_1_resize_descriptor.xhtml">ResizeDescriptor</a> &amp;<a class="el" href="classarmnn_1_1_i_layer_support.xhtml#a859feaa966620ae0ea88abf5226f2d04">descriptor</a>, <a class="el" href="classarmnn_1_1_optional.xhtml">Optional</a>&lt; std::string &amp;&gt; <a class="el" href="classarmnn_1_1_i_layer_support.xhtml#ac75f9a02b051716a0cc1cc0818dfe454">reasonIfUnsupported</a>=<a class="el" href="structarmnn_1_1_empty_optional.xhtml">EmptyOptional</a>()) const override</td></tr>
<tr class="separator:a3d27a3fc6a7df0b68d80cb113aff8b6c inherit pub_methods_classarmnn_1_1_layer_support_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3c6816950ad290155bde03b7fb31e160 inherit pub_methods_classarmnn_1_1_layer_support_base"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_layer_support_base.xhtml#a3c6816950ad290155bde03b7fb31e160">IsShapeSupported</a> (const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;input, const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;<a class="el" href="classarmnn_1_1_i_layer_support.xhtml#a4e25e081529b7e99e5e454d916ed83fb">output</a>, <a class="el" href="classarmnn_1_1_optional.xhtml">Optional</a>&lt; std::string &amp;&gt; <a class="el" href="classarmnn_1_1_i_layer_support.xhtml#ac75f9a02b051716a0cc1cc0818dfe454">reasonIfUnsupported</a>=<a class="el" href="structarmnn_1_1_empty_optional.xhtml">EmptyOptional</a>()) const override</td></tr>
<tr class="separator:a3c6816950ad290155bde03b7fb31e160 inherit pub_methods_classarmnn_1_1_layer_support_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0e14dafa85cfcd4a6b6b752284b51e63 inherit pub_methods_classarmnn_1_1_layer_support_base"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_layer_support_base.xhtml#a0e14dafa85cfcd4a6b6b752284b51e63">IsSliceSupported</a> (const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;input, const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;<a class="el" href="classarmnn_1_1_i_layer_support.xhtml#a4e25e081529b7e99e5e454d916ed83fb">output</a>, const <a class="el" href="structarmnn_1_1_slice_descriptor.xhtml">SliceDescriptor</a> &amp;<a class="el" href="classarmnn_1_1_i_layer_support.xhtml#a859feaa966620ae0ea88abf5226f2d04">descriptor</a>, <a class="el" href="classarmnn_1_1_optional.xhtml">Optional</a>&lt; std::string &amp;&gt; <a class="el" href="classarmnn_1_1_i_layer_support.xhtml#ac75f9a02b051716a0cc1cc0818dfe454">reasonIfUnsupported</a>=<a class="el" href="structarmnn_1_1_empty_optional.xhtml">EmptyOptional</a>()) const override</td></tr>
<tr class="separator:a0e14dafa85cfcd4a6b6b752284b51e63 inherit pub_methods_classarmnn_1_1_layer_support_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8385cf8227907904a6a86fac318fc099 inherit pub_methods_classarmnn_1_1_layer_support_base"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_layer_support_base.xhtml#a8385cf8227907904a6a86fac318fc099">IsSoftmaxSupported</a> (const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;input, const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;<a class="el" href="classarmnn_1_1_i_layer_support.xhtml#a4e25e081529b7e99e5e454d916ed83fb">output</a>, const <a class="el" href="structarmnn_1_1_softmax_descriptor.xhtml">SoftmaxDescriptor</a> &amp;<a class="el" href="classarmnn_1_1_i_layer_support.xhtml#a859feaa966620ae0ea88abf5226f2d04">descriptor</a>, <a class="el" href="classarmnn_1_1_optional.xhtml">Optional</a>&lt; std::string &amp;&gt; <a class="el" href="classarmnn_1_1_i_layer_support.xhtml#ac75f9a02b051716a0cc1cc0818dfe454">reasonIfUnsupported</a>=<a class="el" href="structarmnn_1_1_empty_optional.xhtml">EmptyOptional</a>()) const override</td></tr>
<tr class="separator:a8385cf8227907904a6a86fac318fc099 inherit pub_methods_classarmnn_1_1_layer_support_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3adfc31e079a970e028e537ec05fabf5 inherit pub_methods_classarmnn_1_1_layer_support_base"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_layer_support_base.xhtml#a3adfc31e079a970e028e537ec05fabf5">IsSpaceToBatchNdSupported</a> (const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;input, const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;<a class="el" href="classarmnn_1_1_i_layer_support.xhtml#a4e25e081529b7e99e5e454d916ed83fb">output</a>, const <a class="el" href="structarmnn_1_1_space_to_batch_nd_descriptor.xhtml">SpaceToBatchNdDescriptor</a> &amp;<a class="el" href="classarmnn_1_1_i_layer_support.xhtml#a859feaa966620ae0ea88abf5226f2d04">descriptor</a>, <a class="el" href="classarmnn_1_1_optional.xhtml">Optional</a>&lt; std::string &amp;&gt; <a class="el" href="classarmnn_1_1_i_layer_support.xhtml#ac75f9a02b051716a0cc1cc0818dfe454">reasonIfUnsupported</a>=<a class="el" href="structarmnn_1_1_empty_optional.xhtml">EmptyOptional</a>()) const override</td></tr>
<tr class="separator:a3adfc31e079a970e028e537ec05fabf5 inherit pub_methods_classarmnn_1_1_layer_support_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab2af1e7da9490d29e569d271e16b0d5c inherit pub_methods_classarmnn_1_1_layer_support_base"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_layer_support_base.xhtml#ab2af1e7da9490d29e569d271e16b0d5c">IsSpaceToDepthSupported</a> (const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;input, const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;<a class="el" href="classarmnn_1_1_i_layer_support.xhtml#a4e25e081529b7e99e5e454d916ed83fb">output</a>, const <a class="el" href="structarmnn_1_1_space_to_depth_descriptor.xhtml">SpaceToDepthDescriptor</a> &amp;<a class="el" href="classarmnn_1_1_i_layer_support.xhtml#a859feaa966620ae0ea88abf5226f2d04">descriptor</a>, <a class="el" href="classarmnn_1_1_optional.xhtml">Optional</a>&lt; std::string &amp;&gt; <a class="el" href="classarmnn_1_1_i_layer_support.xhtml#ac75f9a02b051716a0cc1cc0818dfe454">reasonIfUnsupported</a>=<a class="el" href="structarmnn_1_1_empty_optional.xhtml">EmptyOptional</a>()) const override</td></tr>
<tr class="separator:ab2af1e7da9490d29e569d271e16b0d5c inherit pub_methods_classarmnn_1_1_layer_support_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa746e752ce8874669ea549f8e50896da inherit pub_methods_classarmnn_1_1_layer_support_base"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_layer_support_base.xhtml#aa746e752ce8874669ea549f8e50896da">IsSplitterSupported</a> (const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;input, const std::vector&lt; std::reference_wrapper&lt; <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &gt;&gt; &amp;<a class="el" href="classarmnn_1_1_i_layer_support.xhtml#a311602de6b1e53b4feb3b8a37a433f44">outputs</a>, const <a class="el" href="structarmnn_1_1_views_descriptor.xhtml">ViewsDescriptor</a> &amp;<a class="el" href="classarmnn_1_1_i_layer_support.xhtml#a859feaa966620ae0ea88abf5226f2d04">descriptor</a>, <a class="el" href="classarmnn_1_1_optional.xhtml">Optional</a>&lt; std::string &amp;&gt; <a class="el" href="classarmnn_1_1_i_layer_support.xhtml#ac75f9a02b051716a0cc1cc0818dfe454">reasonIfUnsupported</a>=<a class="el" href="structarmnn_1_1_empty_optional.xhtml">EmptyOptional</a>()) const override</td></tr>
<tr class="separator:aa746e752ce8874669ea549f8e50896da inherit pub_methods_classarmnn_1_1_layer_support_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab4609f1baf5fcd295951f3c8abdffd90 inherit pub_methods_classarmnn_1_1_layer_support_base"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_layer_support_base.xhtml#ab4609f1baf5fcd295951f3c8abdffd90">IsStackSupported</a> (const std::vector&lt; const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> *&gt; &amp;inputs, const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;<a class="el" href="classarmnn_1_1_i_layer_support.xhtml#a4e25e081529b7e99e5e454d916ed83fb">output</a>, const <a class="el" href="structarmnn_1_1_stack_descriptor.xhtml">StackDescriptor</a> &amp;<a class="el" href="classarmnn_1_1_i_layer_support.xhtml#a859feaa966620ae0ea88abf5226f2d04">descriptor</a>, <a class="el" href="classarmnn_1_1_optional.xhtml">Optional</a>&lt; std::string &amp;&gt; <a class="el" href="classarmnn_1_1_i_layer_support.xhtml#ac75f9a02b051716a0cc1cc0818dfe454">reasonIfUnsupported</a>=<a class="el" href="structarmnn_1_1_empty_optional.xhtml">EmptyOptional</a>()) const override</td></tr>
<tr class="separator:ab4609f1baf5fcd295951f3c8abdffd90 inherit pub_methods_classarmnn_1_1_layer_support_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a68a4c180fc48e266995db8596f6279d3 inherit pub_methods_classarmnn_1_1_layer_support_base"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_layer_support_base.xhtml#a68a4c180fc48e266995db8596f6279d3">IsStandInSupported</a> (const std::vector&lt; const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> *&gt; &amp;inputs, const std::vector&lt; const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> *&gt; &amp;<a class="el" href="classarmnn_1_1_i_layer_support.xhtml#a311602de6b1e53b4feb3b8a37a433f44">outputs</a>, const <a class="el" href="structarmnn_1_1_stand_in_descriptor.xhtml">StandInDescriptor</a> &amp;<a class="el" href="classarmnn_1_1_i_layer_support.xhtml#a859feaa966620ae0ea88abf5226f2d04">descriptor</a>, <a class="el" href="classarmnn_1_1_optional.xhtml">Optional</a>&lt; std::string &amp;&gt; <a class="el" href="classarmnn_1_1_i_layer_support.xhtml#ac75f9a02b051716a0cc1cc0818dfe454">reasonIfUnsupported</a>=<a class="el" href="structarmnn_1_1_empty_optional.xhtml">EmptyOptional</a>()) const override</td></tr>
<tr class="separator:a68a4c180fc48e266995db8596f6279d3 inherit pub_methods_classarmnn_1_1_layer_support_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac054cb25099005eac854afb1511340f0 inherit pub_methods_classarmnn_1_1_layer_support_base"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_layer_support_base.xhtml#ac054cb25099005eac854afb1511340f0">IsStridedSliceSupported</a> (const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;input, const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;<a class="el" href="classarmnn_1_1_i_layer_support.xhtml#a4e25e081529b7e99e5e454d916ed83fb">output</a>, const <a class="el" href="structarmnn_1_1_strided_slice_descriptor.xhtml">StridedSliceDescriptor</a> &amp;<a class="el" href="classarmnn_1_1_i_layer_support.xhtml#a859feaa966620ae0ea88abf5226f2d04">descriptor</a>, <a class="el" href="classarmnn_1_1_optional.xhtml">Optional</a>&lt; std::string &amp;&gt; <a class="el" href="classarmnn_1_1_i_layer_support.xhtml#ac75f9a02b051716a0cc1cc0818dfe454">reasonIfUnsupported</a>=<a class="el" href="structarmnn_1_1_empty_optional.xhtml">EmptyOptional</a>()) const override</td></tr>
<tr class="separator:ac054cb25099005eac854afb1511340f0 inherit pub_methods_classarmnn_1_1_layer_support_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af6c947e4d4b25bc49d92d18d4ff26736 inherit pub_methods_classarmnn_1_1_layer_support_base"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_layer_support_base.xhtml#af6c947e4d4b25bc49d92d18d4ff26736">IsSubtractionSupported</a> (const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;input0, const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;<a class="el" href="classarmnn_1_1_i_layer_support.xhtml#ab82416560ced17268c6ba4443a3aac5e">input1</a>, const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;<a class="el" href="classarmnn_1_1_i_layer_support.xhtml#a4e25e081529b7e99e5e454d916ed83fb">output</a>, <a class="el" href="classarmnn_1_1_optional.xhtml">Optional</a>&lt; std::string &amp;&gt; <a class="el" href="classarmnn_1_1_i_layer_support.xhtml#ac75f9a02b051716a0cc1cc0818dfe454">reasonIfUnsupported</a>=<a class="el" href="structarmnn_1_1_empty_optional.xhtml">EmptyOptional</a>()) const override</td></tr>
<tr class="separator:af6c947e4d4b25bc49d92d18d4ff26736 inherit pub_methods_classarmnn_1_1_layer_support_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8c12a49b0d261836c11a57916e01805d inherit pub_methods_classarmnn_1_1_layer_support_base"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_layer_support_base.xhtml#a8c12a49b0d261836c11a57916e01805d">IsSwitchSupported</a> (const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;input0, const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;<a class="el" href="classarmnn_1_1_i_layer_support.xhtml#ab82416560ced17268c6ba4443a3aac5e">input1</a>, const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;<a class="el" href="classarmnn_1_1_i_layer_support.xhtml#a5c2243c4c3b723129082dd38daf0387f">output0</a>, const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;<a class="el" href="classarmnn_1_1_i_layer_support.xhtml#a53e5afe9ffb176f1f3c98a4222ceb2b9">output1</a>, <a class="el" href="classarmnn_1_1_optional.xhtml">Optional</a>&lt; std::string &amp;&gt; <a class="el" href="classarmnn_1_1_i_layer_support.xhtml#ac75f9a02b051716a0cc1cc0818dfe454">reasonIfUnsupported</a>=<a class="el" href="structarmnn_1_1_empty_optional.xhtml">EmptyOptional</a>()) const override</td></tr>
<tr class="separator:a8c12a49b0d261836c11a57916e01805d inherit pub_methods_classarmnn_1_1_layer_support_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0c69484f19ed650ad48b716719114e51 inherit pub_methods_classarmnn_1_1_layer_support_base"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_layer_support_base.xhtml#a0c69484f19ed650ad48b716719114e51">IsTransposeConvolution2dSupported</a> (const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;input, const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;<a class="el" href="classarmnn_1_1_i_layer_support.xhtml#a4e25e081529b7e99e5e454d916ed83fb">output</a>, const <a class="el" href="structarmnn_1_1_transpose_convolution2d_descriptor.xhtml">TransposeConvolution2dDescriptor</a> &amp;<a class="el" href="classarmnn_1_1_i_layer_support.xhtml#a859feaa966620ae0ea88abf5226f2d04">descriptor</a>, const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;<a class="el" href="classarmnn_1_1_i_layer_support.xhtml#a631f893f44415523924016ed3f54a661">weights</a>, const <a class="el" href="classarmnn_1_1_optional.xhtml">Optional</a>&lt; <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &gt; &amp;<a class="el" href="classarmnn_1_1_i_layer_support.xhtml#a71cf13fc7f7aeac054919e0c6dcab52e">biases</a>, <a class="el" href="classarmnn_1_1_optional.xhtml">Optional</a>&lt; std::string &amp;&gt; <a class="el" href="classarmnn_1_1_i_layer_support.xhtml#ac75f9a02b051716a0cc1cc0818dfe454">reasonIfUnsupported</a>=<a class="el" href="structarmnn_1_1_empty_optional.xhtml">EmptyOptional</a>()) const override</td></tr>
<tr class="separator:a0c69484f19ed650ad48b716719114e51 inherit pub_methods_classarmnn_1_1_layer_support_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0189645f33641b280877a1b2f6ba9fee inherit pub_methods_classarmnn_1_1_layer_support_base"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_layer_support_base.xhtml#a0189645f33641b280877a1b2f6ba9fee">IsTransposeSupported</a> (const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;input, const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;<a class="el" href="classarmnn_1_1_i_layer_support.xhtml#a4e25e081529b7e99e5e454d916ed83fb">output</a>, const <a class="el" href="structarmnn_1_1_transpose_descriptor.xhtml">TransposeDescriptor</a> &amp;<a class="el" href="classarmnn_1_1_i_layer_support.xhtml#a859feaa966620ae0ea88abf5226f2d04">descriptor</a>, <a class="el" href="classarmnn_1_1_optional.xhtml">Optional</a>&lt; std::string &amp;&gt; <a class="el" href="classarmnn_1_1_i_layer_support.xhtml#ac75f9a02b051716a0cc1cc0818dfe454">reasonIfUnsupported</a>=<a class="el" href="structarmnn_1_1_empty_optional.xhtml">EmptyOptional</a>()) const override</td></tr>
<tr class="separator:a0189645f33641b280877a1b2f6ba9fee inherit pub_methods_classarmnn_1_1_layer_support_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a74149085c116e51500a51f5cdb68e67c inherit pub_methods_classarmnn_1_1_layer_support_base"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_layer_support_base.xhtml#a74149085c116e51500a51f5cdb68e67c">IsUnidirectionalSequenceLstmSupported</a> (const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;input, const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;<a class="el" href="classarmnn_1_1_i_layer_support.xhtml#a5a01de4e3851a25f2df77897fb8f7083">outputStateIn</a>, const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;<a class="el" href="classarmnn_1_1_i_layer_support.xhtml#aec04a02758804219fb461623464a8e96">cellStateIn</a>, const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;<a class="el" href="classarmnn_1_1_i_layer_support.xhtml#a44eb2a514bddb31fe20f9e4f04159c9f">outputStateOut</a>, const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;<a class="el" href="classarmnn_1_1_i_layer_support.xhtml#ae1ee2d524d4252bffc0ed67e75882952">cellStateOut</a>, const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;<a class="el" href="classarmnn_1_1_i_layer_support.xhtml#a4e25e081529b7e99e5e454d916ed83fb">output</a>, const <a class="el" href="structarmnn_1_1_lstm_descriptor.xhtml">LstmDescriptor</a> &amp;<a class="el" href="classarmnn_1_1_i_layer_support.xhtml#a859feaa966620ae0ea88abf5226f2d04">descriptor</a>, const <a class="el" href="structarmnn_1_1_lstm_input_params_info.xhtml">LstmInputParamsInfo</a> &amp;<a class="el" href="classarmnn_1_1_i_layer_support.xhtml#aca7a974c8803242968a8d6540275264a">paramsInfo</a>, <a class="el" href="classarmnn_1_1_optional.xhtml">Optional</a>&lt; std::string &amp;&gt; <a class="el" href="classarmnn_1_1_i_layer_support.xhtml#ac75f9a02b051716a0cc1cc0818dfe454">reasonIfUnsupported</a>=<a class="el" href="structarmnn_1_1_empty_optional.xhtml">EmptyOptional</a>()) const override</td></tr>
<tr class="separator:a74149085c116e51500a51f5cdb68e67c inherit pub_methods_classarmnn_1_1_layer_support_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pub_methods_classarmnn_1_1_i_layer_support"><td colspan="2" onclick="javascript:toggleInherit('pub_methods_classarmnn_1_1_i_layer_support')"><img src="closed.png" alt="-"/>&#160;Public Member Functions inherited from <a class="el" href="classarmnn_1_1_i_layer_support.xhtml">ILayerSupport</a></td></tr>
<tr class="memitem:abbfb82bfc5144e893e11597c535325e4 inherit pub_methods_classarmnn_1_1_i_layer_support"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_i_layer_support.xhtml#abbfb82bfc5144e893e11597c535325e4">ARMNN_DEPRECATED_MSG_REMOVAL_DATE</a> (&quot;This method is deprecated. &quot; &quot;Use ABI Stable <a class="el" href="classarmnn_1_1_i_layer_support.xhtml#ac65dd8d3d726c22b135ffdaaf0fac33e">IsLayerSupported</a> accepting <a class="el" href="namespacearmnn.xhtml#a56943a0946e5f15e5e58054b8e7a04a4">LayerType</a> argument instead.&quot;, &quot;22.11&quot;) virtual bool <a class="el" href="namespacearmnn.xhtml#a6e7dc8639c4b2f0a93031afff5182735">IsActivationSupported</a>(const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;input</td></tr>
<tr class="separator:abbfb82bfc5144e893e11597c535325e4 inherit pub_methods_classarmnn_1_1_i_layer_support"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0245e82d56b9ccea519bb87638f54dd5 inherit pub_methods_classarmnn_1_1_i_layer_support"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_i_layer_support.xhtml#a0245e82d56b9ccea519bb87638f54dd5">ARMNN_DEPRECATED_MSG_REMOVAL_DATE</a> (&quot;This method is deprecated. &quot; &quot;Use ABI Stable <a class="el" href="classarmnn_1_1_i_layer_support.xhtml#ac65dd8d3d726c22b135ffdaaf0fac33e">IsLayerSupported</a> accepting <a class="el" href="namespacearmnn.xhtml#a56943a0946e5f15e5e58054b8e7a04a4">LayerType</a> argument instead.&quot;, &quot;22.11&quot;) virtual bool <a class="el" href="namespacearmnn.xhtml#ab5569e5b664498e011e8bd92cc3cc5b2">IsAdditionSupported</a>(const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;input0</td></tr>
<tr class="separator:a0245e82d56b9ccea519bb87638f54dd5 inherit pub_methods_classarmnn_1_1_i_layer_support"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a07778306251b73c2fcc2690f53d3c0a6 inherit pub_methods_classarmnn_1_1_i_layer_support"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_i_layer_support.xhtml#a07778306251b73c2fcc2690f53d3c0a6">ARMNN_DEPRECATED_MSG_REMOVAL_DATE</a> (&quot;This method is deprecated. &quot; &quot;Use ABI Stable <a class="el" href="classarmnn_1_1_i_layer_support.xhtml#ac65dd8d3d726c22b135ffdaaf0fac33e">IsLayerSupported</a> accepting <a class="el" href="namespacearmnn.xhtml#a56943a0946e5f15e5e58054b8e7a04a4">LayerType</a> argument instead.&quot;, &quot;22.11&quot;) virtual bool IsArgMinMaxSupported(const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;input</td></tr>
<tr class="separator:a07778306251b73c2fcc2690f53d3c0a6 inherit pub_methods_classarmnn_1_1_i_layer_support"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9ff429620e7a9cbf4aef24cf20a4a5f3 inherit pub_methods_classarmnn_1_1_i_layer_support"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_i_layer_support.xhtml#a9ff429620e7a9cbf4aef24cf20a4a5f3">ARMNN_DEPRECATED_MSG_REMOVAL_DATE</a> (&quot;This method is deprecated. &quot; &quot;Use ABI Stable <a class="el" href="classarmnn_1_1_i_layer_support.xhtml#ac65dd8d3d726c22b135ffdaaf0fac33e">IsLayerSupported</a> accepting <a class="el" href="namespacearmnn.xhtml#a56943a0946e5f15e5e58054b8e7a04a4">LayerType</a> argument instead.&quot;, &quot;22.11&quot;) virtual bool <a class="el" href="namespacearmnn.xhtml#a49b7a701c6a0c569015309102221c702">IsBatchNormalizationSupported</a>(const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;input</td></tr>
<tr class="separator:a9ff429620e7a9cbf4aef24cf20a4a5f3 inherit pub_methods_classarmnn_1_1_i_layer_support"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad75f03d6863882332cc2f2b287abbbd3 inherit pub_methods_classarmnn_1_1_i_layer_support"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_i_layer_support.xhtml#ad75f03d6863882332cc2f2b287abbbd3">ARMNN_DEPRECATED_MSG_REMOVAL_DATE</a> (&quot;This method is deprecated. &quot; &quot;Use ABI Stable <a class="el" href="classarmnn_1_1_i_layer_support.xhtml#ac65dd8d3d726c22b135ffdaaf0fac33e">IsLayerSupported</a> accepting <a class="el" href="namespacearmnn.xhtml#a56943a0946e5f15e5e58054b8e7a04a4">LayerType</a> argument instead.&quot;, &quot;22.11&quot;) virtual bool <a class="el" href="namespacearmnn.xhtml#abb893c7adb7b64d0964bd244c46dd06b">IsBatchToSpaceNdSupported</a>(const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;input</td></tr>
<tr class="separator:ad75f03d6863882332cc2f2b287abbbd3 inherit pub_methods_classarmnn_1_1_i_layer_support"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4045c2080dc7ef6e8f8d0e1b6bad9fa3 inherit pub_methods_classarmnn_1_1_i_layer_support"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_i_layer_support.xhtml#a4045c2080dc7ef6e8f8d0e1b6bad9fa3">ARMNN_DEPRECATED_MSG_REMOVAL_DATE</a> (&quot;This method is deprecated. &quot; &quot;Use ABI Stable <a class="el" href="classarmnn_1_1_i_layer_support.xhtml#ac65dd8d3d726c22b135ffdaaf0fac33e">IsLayerSupported</a> accepting <a class="el" href="namespacearmnn.xhtml#a56943a0946e5f15e5e58054b8e7a04a4">LayerType</a> argument instead.&quot;, &quot;22.11&quot;) virtual bool IsCastSupported(const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;input</td></tr>
<tr class="separator:a4045c2080dc7ef6e8f8d0e1b6bad9fa3 inherit pub_methods_classarmnn_1_1_i_layer_support"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a744d99b515d862cf26cffd09ebafb935 inherit pub_methods_classarmnn_1_1_i_layer_support"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_i_layer_support.xhtml#a744d99b515d862cf26cffd09ebafb935">ARMNN_DEPRECATED_MSG_REMOVAL_DATE</a> (&quot;This method is deprecated. &quot; &quot;Use ABI Stable <a class="el" href="classarmnn_1_1_i_layer_support.xhtml#ac65dd8d3d726c22b135ffdaaf0fac33e">IsLayerSupported</a> accepting <a class="el" href="namespacearmnn.xhtml#a56943a0946e5f15e5e58054b8e7a04a4">LayerType</a> argument instead.&quot;, &quot;22.11&quot;) virtual bool IsChannelShuffleSupported(const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;input</td></tr>
<tr class="separator:a744d99b515d862cf26cffd09ebafb935 inherit pub_methods_classarmnn_1_1_i_layer_support"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa6eaa372daca09fe433735dee17cb22e inherit pub_methods_classarmnn_1_1_i_layer_support"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_i_layer_support.xhtml#aa6eaa372daca09fe433735dee17cb22e">ARMNN_DEPRECATED_MSG_REMOVAL_DATE</a> (&quot;This method is deprecated. &quot; &quot;Use ABI Stable <a class="el" href="classarmnn_1_1_i_layer_support.xhtml#ac65dd8d3d726c22b135ffdaaf0fac33e">IsLayerSupported</a> accepting <a class="el" href="namespacearmnn.xhtml#a56943a0946e5f15e5e58054b8e7a04a4">LayerType</a> argument instead.&quot;, &quot;22.11&quot;) virtual bool IsComparisonSupported(const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;input0</td></tr>
<tr class="separator:aa6eaa372daca09fe433735dee17cb22e inherit pub_methods_classarmnn_1_1_i_layer_support"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac7191bcc015006b847e7cfaf67886248 inherit pub_methods_classarmnn_1_1_i_layer_support"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_i_layer_support.xhtml#ac7191bcc015006b847e7cfaf67886248">ARMNN_DEPRECATED_MSG_REMOVAL_DATE</a> (&quot;This method is deprecated. &quot; &quot;Use ABI Stable <a class="el" href="classarmnn_1_1_i_layer_support.xhtml#ac65dd8d3d726c22b135ffdaaf0fac33e">IsLayerSupported</a> accepting <a class="el" href="namespacearmnn.xhtml#a56943a0946e5f15e5e58054b8e7a04a4">LayerType</a> argument instead.&quot;, &quot;22.11&quot;) virtual bool IsConvertBf16ToFp32Supported(const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;input</td></tr>
<tr class="separator:ac7191bcc015006b847e7cfaf67886248 inherit pub_methods_classarmnn_1_1_i_layer_support"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a67a7761a0e1bbd1c3d1032a98f2d38bc inherit pub_methods_classarmnn_1_1_i_layer_support"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_i_layer_support.xhtml#a67a7761a0e1bbd1c3d1032a98f2d38bc">ARMNN_DEPRECATED_MSG_REMOVAL_DATE</a> (&quot;This method is deprecated. &quot; &quot;Use ABI Stable <a class="el" href="classarmnn_1_1_i_layer_support.xhtml#ac65dd8d3d726c22b135ffdaaf0fac33e">IsLayerSupported</a> accepting <a class="el" href="namespacearmnn.xhtml#a56943a0946e5f15e5e58054b8e7a04a4">LayerType</a> argument instead.&quot;, &quot;22.11&quot;) virtual bool IsConvertFp32ToBf16Supported(const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;input</td></tr>
<tr class="separator:a67a7761a0e1bbd1c3d1032a98f2d38bc inherit pub_methods_classarmnn_1_1_i_layer_support"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1ea8a528633c5c439658009a69d80ccc inherit pub_methods_classarmnn_1_1_i_layer_support"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_i_layer_support.xhtml#a1ea8a528633c5c439658009a69d80ccc">ARMNN_DEPRECATED_MSG_REMOVAL_DATE</a> (&quot;This method is deprecated. &quot; &quot;Use ABI Stable <a class="el" href="classarmnn_1_1_i_layer_support.xhtml#ac65dd8d3d726c22b135ffdaaf0fac33e">IsLayerSupported</a> accepting <a class="el" href="namespacearmnn.xhtml#a56943a0946e5f15e5e58054b8e7a04a4">LayerType</a> argument instead.&quot;, &quot;22.11&quot;) virtual bool <a class="el" href="namespacearmnn.xhtml#af9decd6720482e602efc6ac5ef7dab50">IsConvertFp16ToFp32Supported</a>(const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;input</td></tr>
<tr class="separator:a1ea8a528633c5c439658009a69d80ccc inherit pub_methods_classarmnn_1_1_i_layer_support"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aaa4180c8a75ba8672f7411965a27e9b0 inherit pub_methods_classarmnn_1_1_i_layer_support"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_i_layer_support.xhtml#aaa4180c8a75ba8672f7411965a27e9b0">ARMNN_DEPRECATED_MSG_REMOVAL_DATE</a> (&quot;This method is deprecated. &quot; &quot;Use ABI Stable <a class="el" href="classarmnn_1_1_i_layer_support.xhtml#ac65dd8d3d726c22b135ffdaaf0fac33e">IsLayerSupported</a> accepting <a class="el" href="namespacearmnn.xhtml#a56943a0946e5f15e5e58054b8e7a04a4">LayerType</a> argument instead.&quot;, &quot;22.11&quot;) virtual bool <a class="el" href="namespacearmnn.xhtml#a080c11383c6a29b4295ae359cde5c19c">IsConvertFp32ToFp16Supported</a>(const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;input</td></tr>
<tr class="separator:aaa4180c8a75ba8672f7411965a27e9b0 inherit pub_methods_classarmnn_1_1_i_layer_support"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a05429b9f26e6ed08f726e6b3650a3649 inherit pub_methods_classarmnn_1_1_i_layer_support"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_i_layer_support.xhtml#a05429b9f26e6ed08f726e6b3650a3649">ARMNN_DEPRECATED_MSG_REMOVAL_DATE</a> (&quot;This method is deprecated. &quot; &quot;Use ABI Stable <a class="el" href="classarmnn_1_1_i_layer_support.xhtml#ac65dd8d3d726c22b135ffdaaf0fac33e">IsLayerSupported</a> accepting <a class="el" href="namespacearmnn.xhtml#a56943a0946e5f15e5e58054b8e7a04a4">LayerType</a> argument instead.&quot;, &quot;22.11&quot;) virtual bool <a class="el" href="namespacearmnn.xhtml#aff785aa7c076b1d2f51f76fa0f0647e4">IsConvolution2dSupported</a>(const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;input</td></tr>
<tr class="separator:a05429b9f26e6ed08f726e6b3650a3649 inherit pub_methods_classarmnn_1_1_i_layer_support"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa2544b1c2111668bdfab0d101f0172f4 inherit pub_methods_classarmnn_1_1_i_layer_support"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_i_layer_support.xhtml#aa2544b1c2111668bdfab0d101f0172f4">ARMNN_DEPRECATED_MSG_REMOVAL_DATE</a> (&quot;This method is deprecated. &quot; &quot;Use ABI Stable <a class="el" href="classarmnn_1_1_i_layer_support.xhtml#ac65dd8d3d726c22b135ffdaaf0fac33e">IsLayerSupported</a> accepting <a class="el" href="namespacearmnn.xhtml#a56943a0946e5f15e5e58054b8e7a04a4">LayerType</a> argument instead.&quot;, &quot;22.11&quot;) virtual bool IsConvolution3dSupported(const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;input</td></tr>
<tr class="separator:aa2544b1c2111668bdfab0d101f0172f4 inherit pub_methods_classarmnn_1_1_i_layer_support"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2fa0b52af55fbda42c443d746a7eae55 inherit pub_methods_classarmnn_1_1_i_layer_support"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_i_layer_support.xhtml#a2fa0b52af55fbda42c443d746a7eae55">ARMNN_DEPRECATED_MSG_REMOVAL_DATE</a> (&quot;This method is deprecated. &quot; &quot;Use ABI Stable <a class="el" href="classarmnn_1_1_i_layer_support.xhtml#ac65dd8d3d726c22b135ffdaaf0fac33e">IsLayerSupported</a> accepting <a class="el" href="namespacearmnn.xhtml#a56943a0946e5f15e5e58054b8e7a04a4">LayerType</a> argument instead.&quot;, &quot;22.11&quot;) virtual bool <a class="el" href="namespacearmnn.xhtml#aa6503439334e0a79181a51e084b0268f">IsDebugSupported</a>(const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;input</td></tr>
<tr class="separator:a2fa0b52af55fbda42c443d746a7eae55 inherit pub_methods_classarmnn_1_1_i_layer_support"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a54b1a15299b6ef767bf9062814c7ddf4 inherit pub_methods_classarmnn_1_1_i_layer_support"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_i_layer_support.xhtml#a54b1a15299b6ef767bf9062814c7ddf4">ARMNN_DEPRECATED_MSG_REMOVAL_DATE</a> (&quot;This method is deprecated. &quot; &quot;Use ABI Stable <a class="el" href="classarmnn_1_1_i_layer_support.xhtml#ac65dd8d3d726c22b135ffdaaf0fac33e">IsLayerSupported</a> accepting <a class="el" href="namespacearmnn.xhtml#a56943a0946e5f15e5e58054b8e7a04a4">LayerType</a> argument instead.&quot;, &quot;22.11&quot;) virtual bool IsDepthToSpaceSupported(const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;input</td></tr>
<tr class="separator:a54b1a15299b6ef767bf9062814c7ddf4 inherit pub_methods_classarmnn_1_1_i_layer_support"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:adaf79549482a8da3a1aa66b63e0f6185 inherit pub_methods_classarmnn_1_1_i_layer_support"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_i_layer_support.xhtml#adaf79549482a8da3a1aa66b63e0f6185">ARMNN_DEPRECATED_MSG_REMOVAL_DATE</a> (&quot;This method is deprecated. &quot; &quot;Use ABI Stable <a class="el" href="classarmnn_1_1_i_layer_support.xhtml#ac65dd8d3d726c22b135ffdaaf0fac33e">IsLayerSupported</a> accepting <a class="el" href="namespacearmnn.xhtml#a56943a0946e5f15e5e58054b8e7a04a4">LayerType</a> argument instead.&quot;, &quot;22.11&quot;) virtual bool <a class="el" href="namespacearmnn.xhtml#a87f06345ddd902d027eb8f792ca8cdb4">IsDepthwiseConvolutionSupported</a>(const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;input</td></tr>
<tr class="separator:adaf79549482a8da3a1aa66b63e0f6185 inherit pub_methods_classarmnn_1_1_i_layer_support"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa6131fc509a3b977e4be140038f4b340 inherit pub_methods_classarmnn_1_1_i_layer_support"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_i_layer_support.xhtml#aa6131fc509a3b977e4be140038f4b340">ARMNN_DEPRECATED_MSG_REMOVAL_DATE</a> (&quot;This method is deprecated. &quot; &quot;Use ABI Stable <a class="el" href="classarmnn_1_1_i_layer_support.xhtml#ac65dd8d3d726c22b135ffdaaf0fac33e">IsLayerSupported</a> accepting <a class="el" href="namespacearmnn.xhtml#a56943a0946e5f15e5e58054b8e7a04a4">LayerType</a> argument instead.&quot;, &quot;22.11&quot;) virtual bool <a class="el" href="namespacearmnn.xhtml#a1b4b4304198668d3af8e9d0c40d9343d">IsDequantizeSupported</a>(const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;input</td></tr>
<tr class="separator:aa6131fc509a3b977e4be140038f4b340 inherit pub_methods_classarmnn_1_1_i_layer_support"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a87b73dc78e17f6e46959b96647e307d7 inherit pub_methods_classarmnn_1_1_i_layer_support"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_i_layer_support.xhtml#a87b73dc78e17f6e46959b96647e307d7">ARMNN_DEPRECATED_MSG_REMOVAL_DATE</a> (&quot;This method is deprecated. &quot; &quot;Use ABI Stable <a class="el" href="classarmnn_1_1_i_layer_support.xhtml#ac65dd8d3d726c22b135ffdaaf0fac33e">IsLayerSupported</a> accepting <a class="el" href="namespacearmnn.xhtml#a56943a0946e5f15e5e58054b8e7a04a4">LayerType</a> argument instead.&quot;, &quot;22.11&quot;) virtual bool IsDetectionPostProcessSupported(const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;boxEncodings</td></tr>
<tr class="separator:a87b73dc78e17f6e46959b96647e307d7 inherit pub_methods_classarmnn_1_1_i_layer_support"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4a025d058bb4988abe332959df7b6339 inherit pub_methods_classarmnn_1_1_i_layer_support"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_i_layer_support.xhtml#a4a025d058bb4988abe332959df7b6339">ARMNN_DEPRECATED_MSG_REMOVAL_DATE</a> (&quot;This method is deprecated. &quot; &quot;Use ABI Stable <a class="el" href="classarmnn_1_1_i_layer_support.xhtml#ac65dd8d3d726c22b135ffdaaf0fac33e">IsLayerSupported</a> accepting <a class="el" href="namespacearmnn.xhtml#a56943a0946e5f15e5e58054b8e7a04a4">LayerType</a> argument instead.&quot;, &quot;22.11&quot;) virtual bool IsDilatedDepthwiseConvolutionSupported(const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;input</td></tr>
<tr class="separator:a4a025d058bb4988abe332959df7b6339 inherit pub_methods_classarmnn_1_1_i_layer_support"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6217dd4347013f2774bea2fccbd09946 inherit pub_methods_classarmnn_1_1_i_layer_support"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_i_layer_support.xhtml#a6217dd4347013f2774bea2fccbd09946">ARMNN_DEPRECATED_MSG_REMOVAL_DATE</a> (&quot;This method is deprecated. &quot; &quot;Use ABI Stable <a class="el" href="classarmnn_1_1_i_layer_support.xhtml#ac65dd8d3d726c22b135ffdaaf0fac33e">IsLayerSupported</a> accepting <a class="el" href="namespacearmnn.xhtml#a56943a0946e5f15e5e58054b8e7a04a4">LayerType</a> argument instead.&quot;, &quot;22.11&quot;) virtual bool <a class="el" href="namespacearmnn.xhtml#a3378acd6bc867577ee4bf1657945f1b5">IsDivisionSupported</a>(const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;input0</td></tr>
<tr class="separator:a6217dd4347013f2774bea2fccbd09946 inherit pub_methods_classarmnn_1_1_i_layer_support"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a54de65ca68a449efb5c3f6a8a2ae8435 inherit pub_methods_classarmnn_1_1_i_layer_support"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_i_layer_support.xhtml#a54de65ca68a449efb5c3f6a8a2ae8435">ARMNN_DEPRECATED_MSG_REMOVAL_DATE</a> (&quot;This method is deprecated. &quot; &quot;Use ABI Stable <a class="el" href="classarmnn_1_1_i_layer_support.xhtml#ac65dd8d3d726c22b135ffdaaf0fac33e">IsLayerSupported</a> accepting <a class="el" href="namespacearmnn.xhtml#a56943a0946e5f15e5e58054b8e7a04a4">LayerType</a> argument instead.&quot;, &quot;22.11&quot;) virtual bool IsElementwiseUnarySupported(const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;input</td></tr>
<tr class="separator:a54de65ca68a449efb5c3f6a8a2ae8435 inherit pub_methods_classarmnn_1_1_i_layer_support"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7bb960c49da7e212382c391bbcbd086e inherit pub_methods_classarmnn_1_1_i_layer_support"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_i_layer_support.xhtml#a7bb960c49da7e212382c391bbcbd086e">ARMNN_DEPRECATED_MSG_REMOVAL_DATE</a> (&quot;This method is deprecated. &quot; &quot;Use ABI Stable <a class="el" href="classarmnn_1_1_i_layer_support.xhtml#ac65dd8d3d726c22b135ffdaaf0fac33e">IsLayerSupported</a> accepting <a class="el" href="namespacearmnn.xhtml#a56943a0946e5f15e5e58054b8e7a04a4">LayerType</a> argument instead.&quot;, &quot;22.11&quot;) virtual bool <a class="el" href="namespacearmnn.xhtml#a4539c40ac5e36641f8ec10b88d658db1">IsFakeQuantizationSupported</a>(const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;input</td></tr>
<tr class="separator:a7bb960c49da7e212382c391bbcbd086e inherit pub_methods_classarmnn_1_1_i_layer_support"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a36a9c661087e3dd010194954cc9440e3 inherit pub_methods_classarmnn_1_1_i_layer_support"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_i_layer_support.xhtml#a36a9c661087e3dd010194954cc9440e3">ARMNN_DEPRECATED_MSG_REMOVAL_DATE</a> (&quot;This method is deprecated. &quot; &quot;Use ABI Stable <a class="el" href="classarmnn_1_1_i_layer_support.xhtml#ac65dd8d3d726c22b135ffdaaf0fac33e">IsLayerSupported</a> accepting <a class="el" href="namespacearmnn.xhtml#a56943a0946e5f15e5e58054b8e7a04a4">LayerType</a> argument instead.&quot;, &quot;22.11&quot;) virtual bool IsFillSupported(const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;input</td></tr>
<tr class="separator:a36a9c661087e3dd010194954cc9440e3 inherit pub_methods_classarmnn_1_1_i_layer_support"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aac028dd3a450d20cb9b79504a39b1e67 inherit pub_methods_classarmnn_1_1_i_layer_support"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_i_layer_support.xhtml#aac028dd3a450d20cb9b79504a39b1e67">ARMNN_DEPRECATED_MSG_REMOVAL_DATE</a> (&quot;This method is deprecated. &quot; &quot;Use ABI Stable <a class="el" href="classarmnn_1_1_i_layer_support.xhtml#ac65dd8d3d726c22b135ffdaaf0fac33e">IsLayerSupported</a> accepting <a class="el" href="namespacearmnn.xhtml#a56943a0946e5f15e5e58054b8e7a04a4">LayerType</a> argument instead.&quot;, &quot;22.11&quot;) virtual bool <a class="el" href="namespacearmnn.xhtml#a2b6003e1d9226301e4badcac0b53c0ef">IsFloorSupported</a>(const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;input</td></tr>
<tr class="separator:aac028dd3a450d20cb9b79504a39b1e67 inherit pub_methods_classarmnn_1_1_i_layer_support"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae56a325b9bb486d713230205108bd00b inherit pub_methods_classarmnn_1_1_i_layer_support"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_i_layer_support.xhtml#ae56a325b9bb486d713230205108bd00b">ARMNN_DEPRECATED_MSG_REMOVAL_DATE</a> (&quot;This method is deprecated. &quot; &quot;Use ABI Stable <a class="el" href="classarmnn_1_1_i_layer_support.xhtml#ac65dd8d3d726c22b135ffdaaf0fac33e">IsLayerSupported</a> accepting <a class="el" href="namespacearmnn.xhtml#a56943a0946e5f15e5e58054b8e7a04a4">LayerType</a> argument instead.&quot;, &quot;22.11&quot;) virtual bool <a class="el" href="namespacearmnn.xhtml#a0a72d1f8a0d43ee551c7ac654f8816fa">IsFullyConnectedSupported</a>(const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;input</td></tr>
<tr class="separator:ae56a325b9bb486d713230205108bd00b inherit pub_methods_classarmnn_1_1_i_layer_support"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:abac21778f3f8d2fb27e91b2aeab86e22 inherit pub_methods_classarmnn_1_1_i_layer_support"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_i_layer_support.xhtml#abac21778f3f8d2fb27e91b2aeab86e22">ARMNN_DEPRECATED_MSG_REMOVAL_DATE</a> (&quot;This method is deprecated. &quot; &quot;Use ABI Stable <a class="el" href="classarmnn_1_1_i_layer_support.xhtml#ac65dd8d3d726c22b135ffdaaf0fac33e">IsLayerSupported</a> accepting <a class="el" href="namespacearmnn.xhtml#a56943a0946e5f15e5e58054b8e7a04a4">LayerType</a> argument instead.&quot;, &quot;22.11&quot;) virtual bool IsGatherSupported(const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;input0</td></tr>
<tr class="separator:abac21778f3f8d2fb27e91b2aeab86e22 inherit pub_methods_classarmnn_1_1_i_layer_support"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:abdba9ae1763d47a728721692300c4ed9 inherit pub_methods_classarmnn_1_1_i_layer_support"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_i_layer_support.xhtml#abdba9ae1763d47a728721692300c4ed9">ARMNN_DEPRECATED_MSG_REMOVAL_DATE</a> (&quot;This method is deprecated. &quot; &quot;Use ABI Stable <a class="el" href="classarmnn_1_1_i_layer_support.xhtml#ac65dd8d3d726c22b135ffdaaf0fac33e">IsLayerSupported</a> accepting <a class="el" href="namespacearmnn.xhtml#a56943a0946e5f15e5e58054b8e7a04a4">LayerType</a> argument instead.&quot;, &quot;22.11&quot;) virtual bool <a class="el" href="namespacearmnn.xhtml#a3512b2f24950886288c5d01df1488f15">IsInputSupported</a>(const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;input</td></tr>
<tr class="separator:abdba9ae1763d47a728721692300c4ed9 inherit pub_methods_classarmnn_1_1_i_layer_support"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:add8a2b6a224fbf7642c209f181a91fd1 inherit pub_methods_classarmnn_1_1_i_layer_support"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_i_layer_support.xhtml#add8a2b6a224fbf7642c209f181a91fd1">ARMNN_DEPRECATED_MSG_REMOVAL_DATE</a> (&quot;This method is deprecated. &quot; &quot;Use ABI Stable <a class="el" href="classarmnn_1_1_i_layer_support.xhtml#ac65dd8d3d726c22b135ffdaaf0fac33e">IsLayerSupported</a> accepting <a class="el" href="namespacearmnn.xhtml#a56943a0946e5f15e5e58054b8e7a04a4">LayerType</a> argument instead.&quot;, &quot;22.11&quot;) virtual bool IsInstanceNormalizationSupported(const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;input</td></tr>
<tr class="separator:add8a2b6a224fbf7642c209f181a91fd1 inherit pub_methods_classarmnn_1_1_i_layer_support"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:afefd7eb943989c8624e1c71e4cc493f5 inherit pub_methods_classarmnn_1_1_i_layer_support"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_i_layer_support.xhtml#afefd7eb943989c8624e1c71e4cc493f5">ARMNN_DEPRECATED_MSG_REMOVAL_DATE</a> (&quot;This method is deprecated. &quot; &quot;Use ABI Stable <a class="el" href="classarmnn_1_1_i_layer_support.xhtml#ac65dd8d3d726c22b135ffdaaf0fac33e">IsLayerSupported</a> accepting <a class="el" href="namespacearmnn.xhtml#a56943a0946e5f15e5e58054b8e7a04a4">LayerType</a> argument instead.&quot;, &quot;22.11&quot;) virtual bool <a class="el" href="namespacearmnn.xhtml#a57862de9b939281d1fe0242a8f04ead9">IsL2NormalizationSupported</a>(const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;input</td></tr>
<tr class="separator:afefd7eb943989c8624e1c71e4cc493f5 inherit pub_methods_classarmnn_1_1_i_layer_support"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1b308d2b0fdd12b4c22fa440dbc3bcd8 inherit pub_methods_classarmnn_1_1_i_layer_support"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_i_layer_support.xhtml#a1b308d2b0fdd12b4c22fa440dbc3bcd8">ARMNN_DEPRECATED_MSG_REMOVAL_DATE</a> (&quot;This method is deprecated. &quot; &quot;Use ABI Stable <a class="el" href="classarmnn_1_1_i_layer_support.xhtml#ac65dd8d3d726c22b135ffdaaf0fac33e">IsLayerSupported</a> accepting <a class="el" href="namespacearmnn.xhtml#a56943a0946e5f15e5e58054b8e7a04a4">LayerType</a> argument instead.&quot;, &quot;22.11&quot;) virtual bool IsLogicalBinarySupported(const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;input0</td></tr>
<tr class="separator:a1b308d2b0fdd12b4c22fa440dbc3bcd8 inherit pub_methods_classarmnn_1_1_i_layer_support"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5acc9d9c41c562cef2dcd5fbdfe9ed84 inherit pub_methods_classarmnn_1_1_i_layer_support"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_i_layer_support.xhtml#a5acc9d9c41c562cef2dcd5fbdfe9ed84">ARMNN_DEPRECATED_MSG_REMOVAL_DATE</a> (&quot;This method is deprecated. &quot; &quot;Use ABI Stable <a class="el" href="classarmnn_1_1_i_layer_support.xhtml#ac65dd8d3d726c22b135ffdaaf0fac33e">IsLayerSupported</a> accepting <a class="el" href="namespacearmnn.xhtml#a56943a0946e5f15e5e58054b8e7a04a4">LayerType</a> argument instead.&quot;, &quot;22.11&quot;) virtual bool IsLogicalUnarySupported(const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;input</td></tr>
<tr class="separator:a5acc9d9c41c562cef2dcd5fbdfe9ed84 inherit pub_methods_classarmnn_1_1_i_layer_support"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a95ff87a02413a040c18f73a2c517da45 inherit pub_methods_classarmnn_1_1_i_layer_support"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_i_layer_support.xhtml#a95ff87a02413a040c18f73a2c517da45">ARMNN_DEPRECATED_MSG_REMOVAL_DATE</a> (&quot;This method is deprecated. &quot; &quot;Use ABI Stable <a class="el" href="classarmnn_1_1_i_layer_support.xhtml#ac65dd8d3d726c22b135ffdaaf0fac33e">IsLayerSupported</a> accepting <a class="el" href="namespacearmnn.xhtml#a56943a0946e5f15e5e58054b8e7a04a4">LayerType</a> argument instead.&quot;, &quot;22.11&quot;) virtual bool IsLogSoftmaxSupported(const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;input</td></tr>
<tr class="separator:a95ff87a02413a040c18f73a2c517da45 inherit pub_methods_classarmnn_1_1_i_layer_support"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2f89786fb9e3a7f6ddfa3128887a9ba2 inherit pub_methods_classarmnn_1_1_i_layer_support"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_i_layer_support.xhtml#a2f89786fb9e3a7f6ddfa3128887a9ba2">ARMNN_DEPRECATED_MSG_REMOVAL_DATE</a> (&quot;This method is deprecated. &quot; &quot;Use ABI Stable <a class="el" href="classarmnn_1_1_i_layer_support.xhtml#ac65dd8d3d726c22b135ffdaaf0fac33e">IsLayerSupported</a> accepting <a class="el" href="namespacearmnn.xhtml#a56943a0946e5f15e5e58054b8e7a04a4">LayerType</a> argument instead.&quot;, &quot;22.11&quot;) virtual bool <a class="el" href="namespacearmnn.xhtml#a2c62d8aa5aeab36458f9ecfa5db1f785">IsLstmSupported</a>(const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;input</td></tr>
<tr class="separator:a2f89786fb9e3a7f6ddfa3128887a9ba2 inherit pub_methods_classarmnn_1_1_i_layer_support"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a10fb131ac347a4a86396fd73da512855 inherit pub_methods_classarmnn_1_1_i_layer_support"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_i_layer_support.xhtml#a10fb131ac347a4a86396fd73da512855">ARMNN_DEPRECATED_MSG_REMOVAL_DATE</a> (&quot;This method is deprecated. &quot; &quot;Use ABI Stable <a class="el" href="classarmnn_1_1_i_layer_support.xhtml#ac65dd8d3d726c22b135ffdaaf0fac33e">IsLayerSupported</a> accepting <a class="el" href="namespacearmnn.xhtml#a56943a0946e5f15e5e58054b8e7a04a4">LayerType</a> argument instead.&quot;, &quot;22.11&quot;) virtual bool <a class="el" href="namespacearmnn.xhtml#a977729771e5ab4263e933f785fa532a6">IsMaximumSupported</a>(const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;input0</td></tr>
<tr class="separator:a10fb131ac347a4a86396fd73da512855 inherit pub_methods_classarmnn_1_1_i_layer_support"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a90d381d21aec23548b915dc17565488a inherit pub_methods_classarmnn_1_1_i_layer_support"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_i_layer_support.xhtml#a90d381d21aec23548b915dc17565488a">ARMNN_DEPRECATED_MSG_REMOVAL_DATE</a> (&quot;This method is deprecated. &quot; &quot;Use ABI Stable <a class="el" href="classarmnn_1_1_i_layer_support.xhtml#ac65dd8d3d726c22b135ffdaaf0fac33e">IsLayerSupported</a> accepting <a class="el" href="namespacearmnn.xhtml#a56943a0946e5f15e5e58054b8e7a04a4">LayerType</a> argument instead.&quot;, &quot;22.11&quot;) virtual bool <a class="el" href="namespacearmnn.xhtml#a79698fa98352bffccc6723de84677680">IsMeanSupported</a>(const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;input</td></tr>
<tr class="separator:a90d381d21aec23548b915dc17565488a inherit pub_methods_classarmnn_1_1_i_layer_support"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a063c73dbb6d7d7cfcc19bc572af634b0 inherit pub_methods_classarmnn_1_1_i_layer_support"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_i_layer_support.xhtml#a063c73dbb6d7d7cfcc19bc572af634b0">ARMNN_DEPRECATED_MSG_REMOVAL_DATE</a> (&quot;This method is deprecated. &quot; &quot;Use ABI Stable <a class="el" href="classarmnn_1_1_i_layer_support.xhtml#ac65dd8d3d726c22b135ffdaaf0fac33e">IsLayerSupported</a> accepting <a class="el" href="namespacearmnn.xhtml#a56943a0946e5f15e5e58054b8e7a04a4">LayerType</a> argument instead.&quot;, &quot;22.11&quot;) virtual bool <a class="el" href="namespacearmnn.xhtml#a1401f21967557c5f70830e06f9b10d4d">IsMemCopySupported</a>(const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;input</td></tr>
<tr class="separator:a063c73dbb6d7d7cfcc19bc572af634b0 inherit pub_methods_classarmnn_1_1_i_layer_support"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac1a5d034f682570fb8ec8e197a035224 inherit pub_methods_classarmnn_1_1_i_layer_support"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_i_layer_support.xhtml#ac1a5d034f682570fb8ec8e197a035224">ARMNN_DEPRECATED_MSG_REMOVAL_DATE</a> (&quot;This method is deprecated. &quot; &quot;Use ABI Stable <a class="el" href="classarmnn_1_1_i_layer_support.xhtml#ac65dd8d3d726c22b135ffdaaf0fac33e">IsLayerSupported</a> accepting <a class="el" href="namespacearmnn.xhtml#a56943a0946e5f15e5e58054b8e7a04a4">LayerType</a> argument instead.&quot;, &quot;22.11&quot;) virtual bool IsMemImportSupported(const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;input</td></tr>
<tr class="separator:ac1a5d034f682570fb8ec8e197a035224 inherit pub_methods_classarmnn_1_1_i_layer_support"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:acbe5cc2a6018742fd655fd9e3572cbca inherit pub_methods_classarmnn_1_1_i_layer_support"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_i_layer_support.xhtml#acbe5cc2a6018742fd655fd9e3572cbca">ARMNN_DEPRECATED_MSG_REMOVAL_DATE</a> (&quot;This method is deprecated. &quot; &quot;Use ABI Stable <a class="el" href="classarmnn_1_1_i_layer_support.xhtml#ac65dd8d3d726c22b135ffdaaf0fac33e">IsLayerSupported</a> accepting <a class="el" href="namespacearmnn.xhtml#a56943a0946e5f15e5e58054b8e7a04a4">LayerType</a> argument instead.&quot;, &quot;22.11&quot;) virtual bool <a class="el" href="namespacearmnn.xhtml#a8c24c4caabe9282b927f8777d7ca993f">IsMergeSupported</a>(const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;input0</td></tr>
<tr class="separator:acbe5cc2a6018742fd655fd9e3572cbca inherit pub_methods_classarmnn_1_1_i_layer_support"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a31befae0f455ccd4ac3aed83aacf5e6c inherit pub_methods_classarmnn_1_1_i_layer_support"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_i_layer_support.xhtml#a31befae0f455ccd4ac3aed83aacf5e6c">ARMNN_DEPRECATED_MSG_REMOVAL_DATE</a> (&quot;This method is deprecated. &quot; &quot;Use ABI Stable <a class="el" href="classarmnn_1_1_i_layer_support.xhtml#ac65dd8d3d726c22b135ffdaaf0fac33e">IsLayerSupported</a> accepting <a class="el" href="namespacearmnn.xhtml#a56943a0946e5f15e5e58054b8e7a04a4">LayerType</a> argument instead.&quot;, &quot;22.11&quot;) virtual bool <a class="el" href="namespacearmnn.xhtml#a29bdc2efd75bb437f4292dd9fcb5c89a">IsMinimumSupported</a>(const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;input0</td></tr>
<tr class="separator:a31befae0f455ccd4ac3aed83aacf5e6c inherit pub_methods_classarmnn_1_1_i_layer_support"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a185b75d74619d4cc1b06f1398159a7f4 inherit pub_methods_classarmnn_1_1_i_layer_support"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_i_layer_support.xhtml#a185b75d74619d4cc1b06f1398159a7f4">ARMNN_DEPRECATED_MSG_REMOVAL_DATE</a> (&quot;This method is deprecated. &quot; &quot;Use ABI Stable <a class="el" href="classarmnn_1_1_i_layer_support.xhtml#ac65dd8d3d726c22b135ffdaaf0fac33e">IsLayerSupported</a> accepting <a class="el" href="namespacearmnn.xhtml#a56943a0946e5f15e5e58054b8e7a04a4">LayerType</a> argument instead.&quot;, &quot;22.11&quot;) virtual bool <a class="el" href="namespacearmnn.xhtml#a9624be7520f71d00bfb769d94e0b088b">IsMultiplicationSupported</a>(const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;input0</td></tr>
<tr class="separator:a185b75d74619d4cc1b06f1398159a7f4 inherit pub_methods_classarmnn_1_1_i_layer_support"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aaad9672268bc97b370d51f01d1fa7ce0 inherit pub_methods_classarmnn_1_1_i_layer_support"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_i_layer_support.xhtml#aaad9672268bc97b370d51f01d1fa7ce0">ARMNN_DEPRECATED_MSG_REMOVAL_DATE</a> (&quot;This method is deprecated. &quot; &quot;Use ABI Stable <a class="el" href="classarmnn_1_1_i_layer_support.xhtml#ac65dd8d3d726c22b135ffdaaf0fac33e">IsLayerSupported</a> accepting <a class="el" href="namespacearmnn.xhtml#a56943a0946e5f15e5e58054b8e7a04a4">LayerType</a> argument instead.&quot;, &quot;22.11&quot;) virtual bool <a class="el" href="namespacearmnn.xhtml#a23d54c0b96b63178811174d5e7b2d328">IsNormalizationSupported</a>(const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;input</td></tr>
<tr class="separator:aaad9672268bc97b370d51f01d1fa7ce0 inherit pub_methods_classarmnn_1_1_i_layer_support"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:adde27ee8e4653b56429bd5730a6f6095 inherit pub_methods_classarmnn_1_1_i_layer_support"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_i_layer_support.xhtml#adde27ee8e4653b56429bd5730a6f6095">ARMNN_DEPRECATED_MSG_REMOVAL_DATE</a> (&quot;This method is deprecated. &quot; &quot;Use ABI Stable <a class="el" href="classarmnn_1_1_i_layer_support.xhtml#ac65dd8d3d726c22b135ffdaaf0fac33e">IsLayerSupported</a> accepting <a class="el" href="namespacearmnn.xhtml#a56943a0946e5f15e5e58054b8e7a04a4">LayerType</a> argument instead.&quot;, &quot;22.11&quot;) virtual bool <a class="el" href="namespacearmnn.xhtml#a60699e7f86e142739ccddd43c20c4fc0">IsOutputSupported</a>(const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;<a class="el" href="classarmnn_1_1_i_layer_support.xhtml#a4e25e081529b7e99e5e454d916ed83fb">output</a></td></tr>
<tr class="separator:adde27ee8e4653b56429bd5730a6f6095 inherit pub_methods_classarmnn_1_1_i_layer_support"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3d34a50e394ad8d803dae6be24efb814 inherit pub_methods_classarmnn_1_1_i_layer_support"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_i_layer_support.xhtml#a3d34a50e394ad8d803dae6be24efb814">ARMNN_DEPRECATED_MSG_REMOVAL_DATE</a> (&quot;This method is deprecated. &quot; &quot;Use ABI Stable <a class="el" href="classarmnn_1_1_i_layer_support.xhtml#ac65dd8d3d726c22b135ffdaaf0fac33e">IsLayerSupported</a> accepting <a class="el" href="namespacearmnn.xhtml#a56943a0946e5f15e5e58054b8e7a04a4">LayerType</a> argument instead.&quot;, &quot;22.11&quot;) virtual bool <a class="el" href="namespacearmnn.xhtml#ae467c9a579c8fb41427227a1c1e1cb4c">IsPadSupported</a>(const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;input</td></tr>
<tr class="separator:a3d34a50e394ad8d803dae6be24efb814 inherit pub_methods_classarmnn_1_1_i_layer_support"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a890ca8b50ff5f787405d3ad9f7fc986f inherit pub_methods_classarmnn_1_1_i_layer_support"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_i_layer_support.xhtml#a890ca8b50ff5f787405d3ad9f7fc986f">ARMNN_DEPRECATED_MSG_REMOVAL_DATE</a> (&quot;This method is deprecated. &quot; &quot;Use ABI Stable <a class="el" href="classarmnn_1_1_i_layer_support.xhtml#ac65dd8d3d726c22b135ffdaaf0fac33e">IsLayerSupported</a> accepting <a class="el" href="namespacearmnn.xhtml#a56943a0946e5f15e5e58054b8e7a04a4">LayerType</a> argument instead.&quot;, &quot;22.11&quot;) virtual bool <a class="el" href="namespacearmnn.xhtml#ab4c606b53ae4d03aec1fcfe537c757ef">IsPermuteSupported</a>(const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;input</td></tr>
<tr class="separator:a890ca8b50ff5f787405d3ad9f7fc986f inherit pub_methods_classarmnn_1_1_i_layer_support"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a21cc91d3c76a03d575f2a06fad1ae6d4 inherit pub_methods_classarmnn_1_1_i_layer_support"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_i_layer_support.xhtml#a21cc91d3c76a03d575f2a06fad1ae6d4">ARMNN_DEPRECATED_MSG_REMOVAL_DATE</a> (&quot;This method is deprecated. &quot; &quot;Use ABI Stable <a class="el" href="classarmnn_1_1_i_layer_support.xhtml#ac65dd8d3d726c22b135ffdaaf0fac33e">IsLayerSupported</a> accepting <a class="el" href="namespacearmnn.xhtml#a56943a0946e5f15e5e58054b8e7a04a4">LayerType</a> argument instead.&quot;, &quot;22.11&quot;) virtual bool <a class="el" href="namespacearmnn.xhtml#af4f2d40a67380e91bd7ed0c1bcc4658f">IsPooling2dSupported</a>(const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;input</td></tr>
<tr class="separator:a21cc91d3c76a03d575f2a06fad1ae6d4 inherit pub_methods_classarmnn_1_1_i_layer_support"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a85ccfcf8bdeb15d75ddb7aa3e476776c inherit pub_methods_classarmnn_1_1_i_layer_support"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_i_layer_support.xhtml#a85ccfcf8bdeb15d75ddb7aa3e476776c">ARMNN_DEPRECATED_MSG_REMOVAL_DATE</a> (&quot;This method is deprecated. &quot; &quot;Use ABI Stable <a class="el" href="classarmnn_1_1_i_layer_support.xhtml#ac65dd8d3d726c22b135ffdaaf0fac33e">IsLayerSupported</a> accepting <a class="el" href="namespacearmnn.xhtml#a56943a0946e5f15e5e58054b8e7a04a4">LayerType</a> argument instead.&quot;, &quot;22.11&quot;) virtual bool IsPooling3dSupported(const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;input</td></tr>
<tr class="separator:a85ccfcf8bdeb15d75ddb7aa3e476776c inherit pub_methods_classarmnn_1_1_i_layer_support"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae41a7ef8d710306476e53efd99a75191 inherit pub_methods_classarmnn_1_1_i_layer_support"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_i_layer_support.xhtml#ae41a7ef8d710306476e53efd99a75191">ARMNN_DEPRECATED_MSG_REMOVAL_DATE</a> (&quot;This method is deprecated. &quot; &quot;Use ABI Stable <a class="el" href="classarmnn_1_1_i_layer_support.xhtml#ac65dd8d3d726c22b135ffdaaf0fac33e">IsLayerSupported</a> accepting <a class="el" href="namespacearmnn.xhtml#a56943a0946e5f15e5e58054b8e7a04a4">LayerType</a> argument instead.&quot;, &quot;22.11&quot;) virtual bool <a class="el" href="namespacearmnn.xhtml#a3b4773564c3fd8c88e697ffe0afbe10d">IsPreCompiledSupported</a>(const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;input</td></tr>
<tr class="separator:ae41a7ef8d710306476e53efd99a75191 inherit pub_methods_classarmnn_1_1_i_layer_support"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aefeec6b473f2d80d98cb5021ac5fc4e6 inherit pub_methods_classarmnn_1_1_i_layer_support"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_i_layer_support.xhtml#aefeec6b473f2d80d98cb5021ac5fc4e6">ARMNN_DEPRECATED_MSG_REMOVAL_DATE</a> (&quot;This method is deprecated. &quot; &quot;Use ABI Stable <a class="el" href="classarmnn_1_1_i_layer_support.xhtml#ac65dd8d3d726c22b135ffdaaf0fac33e">IsLayerSupported</a> accepting <a class="el" href="namespacearmnn.xhtml#a56943a0946e5f15e5e58054b8e7a04a4">LayerType</a> argument instead.&quot;, &quot;22.11&quot;) virtual bool <a class="el" href="namespacearmnn.xhtml#a36d55a20000a7b50f7369c3ceeca46bd">IsPreluSupported</a>(const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;input</td></tr>
<tr class="separator:aefeec6b473f2d80d98cb5021ac5fc4e6 inherit pub_methods_classarmnn_1_1_i_layer_support"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a025eae210dcaa001155b2df0e4d07b11 inherit pub_methods_classarmnn_1_1_i_layer_support"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_i_layer_support.xhtml#a025eae210dcaa001155b2df0e4d07b11">ARMNN_DEPRECATED_MSG_REMOVAL_DATE</a> (&quot;This method is deprecated. &quot; &quot;Use ABI Stable <a class="el" href="classarmnn_1_1_i_layer_support.xhtml#ac65dd8d3d726c22b135ffdaaf0fac33e">IsLayerSupported</a> accepting <a class="el" href="namespacearmnn.xhtml#a56943a0946e5f15e5e58054b8e7a04a4">LayerType</a> argument instead.&quot;, &quot;22.11&quot;) virtual bool IsQuantizeSupported(const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;input</td></tr>
<tr class="separator:a025eae210dcaa001155b2df0e4d07b11 inherit pub_methods_classarmnn_1_1_i_layer_support"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af053939e81526d117f83f7ec78152a7a inherit pub_methods_classarmnn_1_1_i_layer_support"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_i_layer_support.xhtml#af053939e81526d117f83f7ec78152a7a">ARMNN_DEPRECATED_MSG_REMOVAL_DATE</a> (&quot;This method is deprecated. &quot; &quot;Use ABI Stable <a class="el" href="classarmnn_1_1_i_layer_support.xhtml#ac65dd8d3d726c22b135ffdaaf0fac33e">IsLayerSupported</a> accepting <a class="el" href="namespacearmnn.xhtml#a56943a0946e5f15e5e58054b8e7a04a4">LayerType</a> argument instead.&quot;, &quot;22.11&quot;) virtual bool IsQLstmSupported(const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;input</td></tr>
<tr class="separator:af053939e81526d117f83f7ec78152a7a inherit pub_methods_classarmnn_1_1_i_layer_support"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac8b407722edbb1ea0c7aa7aec17a042d inherit pub_methods_classarmnn_1_1_i_layer_support"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_i_layer_support.xhtml#ac8b407722edbb1ea0c7aa7aec17a042d">ARMNN_DEPRECATED_MSG_REMOVAL_DATE</a> (&quot;This method is deprecated. &quot; &quot;Use ABI Stable <a class="el" href="classarmnn_1_1_i_layer_support.xhtml#ac65dd8d3d726c22b135ffdaaf0fac33e">IsLayerSupported</a> accepting <a class="el" href="namespacearmnn.xhtml#a56943a0946e5f15e5e58054b8e7a04a4">LayerType</a> argument instead.&quot;, &quot;22.11&quot;) virtual bool <a class="el" href="namespacearmnn.xhtml#a237992b29706fe1c1653dae916ea67ef">IsQuantizedLstmSupported</a>(const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;input</td></tr>
<tr class="separator:ac8b407722edbb1ea0c7aa7aec17a042d inherit pub_methods_classarmnn_1_1_i_layer_support"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:abf9b66b692a63f0625c6e45d9fb5c105 inherit pub_methods_classarmnn_1_1_i_layer_support"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_i_layer_support.xhtml#abf9b66b692a63f0625c6e45d9fb5c105">ARMNN_DEPRECATED_MSG_REMOVAL_DATE</a> (&quot;This method is deprecated. &quot; &quot;Use ABI Stable <a class="el" href="classarmnn_1_1_i_layer_support.xhtml#ac65dd8d3d726c22b135ffdaaf0fac33e">IsLayerSupported</a> accepting <a class="el" href="namespacearmnn.xhtml#a56943a0946e5f15e5e58054b8e7a04a4">LayerType</a> argument instead.&quot;, &quot;22.11&quot;) virtual bool IsRankSupported(const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;input</td></tr>
<tr class="separator:abf9b66b692a63f0625c6e45d9fb5c105 inherit pub_methods_classarmnn_1_1_i_layer_support"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2a6ee39e062cf27c564cfdf08c498d4a inherit pub_methods_classarmnn_1_1_i_layer_support"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_i_layer_support.xhtml#a2a6ee39e062cf27c564cfdf08c498d4a">ARMNN_DEPRECATED_MSG_REMOVAL_DATE</a> (&quot;This method is deprecated. &quot; &quot;Use ABI Stable <a class="el" href="classarmnn_1_1_i_layer_support.xhtml#ac65dd8d3d726c22b135ffdaaf0fac33e">IsLayerSupported</a> accepting <a class="el" href="namespacearmnn.xhtml#a56943a0946e5f15e5e58054b8e7a04a4">LayerType</a> argument instead.&quot;, &quot;22.11&quot;) virtual bool <a class="el" href="namespacearmnn.xhtml#aefa2e47c23dc8faac4b7edb12b5d1c2c">IsReduceSupported</a>(const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;input</td></tr>
<tr class="separator:a2a6ee39e062cf27c564cfdf08c498d4a inherit pub_methods_classarmnn_1_1_i_layer_support"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3dd52d2ba36af39889837294e7df94bc inherit pub_methods_classarmnn_1_1_i_layer_support"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_i_layer_support.xhtml#a3dd52d2ba36af39889837294e7df94bc">ARMNN_DEPRECATED_MSG_REMOVAL_DATE</a> (&quot;This method is deprecated. &quot; &quot;Use ABI Stable <a class="el" href="classarmnn_1_1_i_layer_support.xhtml#ac65dd8d3d726c22b135ffdaaf0fac33e">IsLayerSupported</a> accepting <a class="el" href="namespacearmnn.xhtml#a56943a0946e5f15e5e58054b8e7a04a4">LayerType</a> argument instead.&quot;, &quot;22.11&quot;) virtual bool <a class="el" href="namespacearmnn.xhtml#af5014cbc003abcf201d4372b0012734c">IsReshapeSupported</a>(const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;input</td></tr>
<tr class="separator:a3dd52d2ba36af39889837294e7df94bc inherit pub_methods_classarmnn_1_1_i_layer_support"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5cf873c61290e73175071d43ae78429a inherit pub_methods_classarmnn_1_1_i_layer_support"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_i_layer_support.xhtml#a5cf873c61290e73175071d43ae78429a">ARMNN_DEPRECATED_MSG_REMOVAL_DATE</a> (&quot;This method is deprecated. &quot; &quot;Use ABI Stable <a class="el" href="classarmnn_1_1_i_layer_support.xhtml#ac65dd8d3d726c22b135ffdaaf0fac33e">IsLayerSupported</a> accepting <a class="el" href="namespacearmnn.xhtml#a56943a0946e5f15e5e58054b8e7a04a4">LayerType</a> argument instead.&quot;, &quot;22.11&quot;) virtual bool <a class="el" href="namespacearmnn.xhtml#a0c70182e7d26983945ae75229d607cce">IsResizeSupported</a>(const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;input</td></tr>
<tr class="separator:a5cf873c61290e73175071d43ae78429a inherit pub_methods_classarmnn_1_1_i_layer_support"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab424d3a0345c194e7f2fed30deddd6a1 inherit pub_methods_classarmnn_1_1_i_layer_support"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_i_layer_support.xhtml#ab424d3a0345c194e7f2fed30deddd6a1">ARMNN_DEPRECATED_MSG_REMOVAL_DATE</a> (&quot;This method is deprecated. &quot; &quot;Use ABI Stable <a class="el" href="classarmnn_1_1_i_layer_support.xhtml#ac65dd8d3d726c22b135ffdaaf0fac33e">IsLayerSupported</a> accepting <a class="el" href="namespacearmnn.xhtml#a56943a0946e5f15e5e58054b8e7a04a4">LayerType</a> argument instead.&quot;, &quot;22.11&quot;) virtual bool IsShapeSupported(const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;input</td></tr>
<tr class="separator:ab424d3a0345c194e7f2fed30deddd6a1 inherit pub_methods_classarmnn_1_1_i_layer_support"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1b3b10fbfed1ed56496f64dc3db160f8 inherit pub_methods_classarmnn_1_1_i_layer_support"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_i_layer_support.xhtml#a1b3b10fbfed1ed56496f64dc3db160f8">ARMNN_DEPRECATED_MSG_REMOVAL_DATE</a> (&quot;This method is deprecated. &quot; &quot;Use ABI Stable <a class="el" href="classarmnn_1_1_i_layer_support.xhtml#ac65dd8d3d726c22b135ffdaaf0fac33e">IsLayerSupported</a> accepting <a class="el" href="namespacearmnn.xhtml#a56943a0946e5f15e5e58054b8e7a04a4">LayerType</a> argument instead.&quot;, &quot;22.11&quot;) virtual bool IsSliceSupported(const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;input</td></tr>
<tr class="separator:a1b3b10fbfed1ed56496f64dc3db160f8 inherit pub_methods_classarmnn_1_1_i_layer_support"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a814bc47dde60bd56fb3a1311586bedd3 inherit pub_methods_classarmnn_1_1_i_layer_support"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_i_layer_support.xhtml#a814bc47dde60bd56fb3a1311586bedd3">ARMNN_DEPRECATED_MSG_REMOVAL_DATE</a> (&quot;This method is deprecated. &quot; &quot;Use ABI Stable <a class="el" href="classarmnn_1_1_i_layer_support.xhtml#ac65dd8d3d726c22b135ffdaaf0fac33e">IsLayerSupported</a> accepting <a class="el" href="namespacearmnn.xhtml#a56943a0946e5f15e5e58054b8e7a04a4">LayerType</a> argument instead.&quot;, &quot;22.11&quot;) virtual bool <a class="el" href="namespacearmnn.xhtml#a242f6c2f0376aaacd7d65a6f1498dea9">IsSoftmaxSupported</a>(const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;input</td></tr>
<tr class="separator:a814bc47dde60bd56fb3a1311586bedd3 inherit pub_methods_classarmnn_1_1_i_layer_support"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6e6a14603841845cf422e2483393acfd inherit pub_methods_classarmnn_1_1_i_layer_support"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_i_layer_support.xhtml#a6e6a14603841845cf422e2483393acfd">ARMNN_DEPRECATED_MSG_REMOVAL_DATE</a> (&quot;This method is deprecated. &quot; &quot;Use ABI Stable <a class="el" href="classarmnn_1_1_i_layer_support.xhtml#ac65dd8d3d726c22b135ffdaaf0fac33e">IsLayerSupported</a> accepting <a class="el" href="namespacearmnn.xhtml#a56943a0946e5f15e5e58054b8e7a04a4">LayerType</a> argument instead.&quot;, &quot;22.11&quot;) virtual bool <a class="el" href="namespacearmnn.xhtml#a55f4c243c58ee7a084f4a674d3c69948">IsSpaceToBatchNdSupported</a>(const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;input</td></tr>
<tr class="separator:a6e6a14603841845cf422e2483393acfd inherit pub_methods_classarmnn_1_1_i_layer_support"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a05a52251295d02cb31ac263adeba109c inherit pub_methods_classarmnn_1_1_i_layer_support"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_i_layer_support.xhtml#a05a52251295d02cb31ac263adeba109c">ARMNN_DEPRECATED_MSG_REMOVAL_DATE</a> (&quot;This method is deprecated. &quot; &quot;Use ABI Stable <a class="el" href="classarmnn_1_1_i_layer_support.xhtml#ac65dd8d3d726c22b135ffdaaf0fac33e">IsLayerSupported</a> accepting <a class="el" href="namespacearmnn.xhtml#a56943a0946e5f15e5e58054b8e7a04a4">LayerType</a> argument instead.&quot;, &quot;22.11&quot;) virtual bool <a class="el" href="namespacearmnn.xhtml#a32e51e4810a549b4a15d59ba73c64d2c">IsSpaceToDepthSupported</a>(const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;input</td></tr>
<tr class="separator:a05a52251295d02cb31ac263adeba109c inherit pub_methods_classarmnn_1_1_i_layer_support"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3f65ee22b9d2e3a63f94ee82ba0b3733 inherit pub_methods_classarmnn_1_1_i_layer_support"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_i_layer_support.xhtml#a3f65ee22b9d2e3a63f94ee82ba0b3733">ARMNN_DEPRECATED_MSG_REMOVAL_DATE</a> (&quot;This method is deprecated. &quot; &quot;Use ABI Stable <a class="el" href="classarmnn_1_1_i_layer_support.xhtml#ac65dd8d3d726c22b135ffdaaf0fac33e">IsLayerSupported</a> accepting <a class="el" href="namespacearmnn.xhtml#a56943a0946e5f15e5e58054b8e7a04a4">LayerType</a> argument instead.&quot;, &quot;22.11&quot;) virtual bool <a class="el" href="namespacearmnn.xhtml#adf1e16300483fadf9fd19299ca8a67c4">IsSplitterSupported</a>(const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;input</td></tr>
<tr class="separator:a3f65ee22b9d2e3a63f94ee82ba0b3733 inherit pub_methods_classarmnn_1_1_i_layer_support"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af9ff7aaabe1ac6b8accc56bd86212732 inherit pub_methods_classarmnn_1_1_i_layer_support"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_i_layer_support.xhtml#af9ff7aaabe1ac6b8accc56bd86212732">ARMNN_DEPRECATED_MSG_REMOVAL_DATE</a> (&quot;This method is deprecated. &quot; &quot;Use ABI Stable <a class="el" href="classarmnn_1_1_i_layer_support.xhtml#ac65dd8d3d726c22b135ffdaaf0fac33e">IsLayerSupported</a> accepting <a class="el" href="namespacearmnn.xhtml#a56943a0946e5f15e5e58054b8e7a04a4">LayerType</a> argument instead.&quot;, &quot;22.11&quot;) virtual bool <a class="el" href="namespacearmnn.xhtml#a1a74a4ecd0f25e6031ef05210a0cfe51">IsSubtractionSupported</a>(const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;input0</td></tr>
<tr class="separator:af9ff7aaabe1ac6b8accc56bd86212732 inherit pub_methods_classarmnn_1_1_i_layer_support"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1fc5f400a7a8a6c3a9db11f812caa5f0 inherit pub_methods_classarmnn_1_1_i_layer_support"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_i_layer_support.xhtml#a1fc5f400a7a8a6c3a9db11f812caa5f0">ARMNN_DEPRECATED_MSG_REMOVAL_DATE</a> (&quot;This method is deprecated. &quot; &quot;Use ABI Stable <a class="el" href="classarmnn_1_1_i_layer_support.xhtml#ac65dd8d3d726c22b135ffdaaf0fac33e">IsLayerSupported</a> accepting <a class="el" href="namespacearmnn.xhtml#a56943a0946e5f15e5e58054b8e7a04a4">LayerType</a> argument instead.&quot;, &quot;22.11&quot;) virtual bool <a class="el" href="namespacearmnn.xhtml#ae8a3ee5f60ae5ae2df15626eaf727ed0">IsSwitchSupported</a>(const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;input0</td></tr>
<tr class="separator:a1fc5f400a7a8a6c3a9db11f812caa5f0 inherit pub_methods_classarmnn_1_1_i_layer_support"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac76fb379b8c1b6484e5afae7761c36ec inherit pub_methods_classarmnn_1_1_i_layer_support"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_i_layer_support.xhtml#ac76fb379b8c1b6484e5afae7761c36ec">ARMNN_DEPRECATED_MSG_REMOVAL_DATE</a> (&quot;This method is deprecated. &quot; &quot;Use ABI Stable <a class="el" href="classarmnn_1_1_i_layer_support.xhtml#ac65dd8d3d726c22b135ffdaaf0fac33e">IsLayerSupported</a> accepting <a class="el" href="namespacearmnn.xhtml#a56943a0946e5f15e5e58054b8e7a04a4">LayerType</a> argument instead.&quot;, &quot;22.11&quot;) virtual bool <a class="el" href="namespacearmnn.xhtml#ac6cc8e0bd35d229486fe6d844d88e0d4">IsTransposeConvolution2dSupported</a>(const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;input</td></tr>
<tr class="separator:ac76fb379b8c1b6484e5afae7761c36ec inherit pub_methods_classarmnn_1_1_i_layer_support"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a292d17b3d4580023e03f3a8de66b2f52 inherit pub_methods_classarmnn_1_1_i_layer_support"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_i_layer_support.xhtml#a292d17b3d4580023e03f3a8de66b2f52">ARMNN_DEPRECATED_MSG_REMOVAL_DATE</a> (&quot;This method is deprecated. &quot; &quot;Use ABI Stable <a class="el" href="classarmnn_1_1_i_layer_support.xhtml#ac65dd8d3d726c22b135ffdaaf0fac33e">IsLayerSupported</a> accepting <a class="el" href="namespacearmnn.xhtml#a56943a0946e5f15e5e58054b8e7a04a4">LayerType</a> argument instead.&quot;, &quot;22.11&quot;) virtual bool IsTransposeSupported(const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;input</td></tr>
<tr class="separator:a292d17b3d4580023e03f3a8de66b2f52 inherit pub_methods_classarmnn_1_1_i_layer_support"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aec7b3875928abd02b3351bc34bd9bc38 inherit pub_methods_classarmnn_1_1_i_layer_support"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_i_layer_support.xhtml#aec7b3875928abd02b3351bc34bd9bc38">ARMNN_DEPRECATED_MSG_REMOVAL_DATE</a> (&quot;This method is deprecated. &quot; &quot;Use ABI Stable <a class="el" href="classarmnn_1_1_i_layer_support.xhtml#ac65dd8d3d726c22b135ffdaaf0fac33e">IsLayerSupported</a> accepting <a class="el" href="namespacearmnn.xhtml#a56943a0946e5f15e5e58054b8e7a04a4">LayerType</a> argument instead.&quot;, &quot;22.11&quot;) virtual bool IsUnidirectionalSequenceLstmSupported(const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;input</td></tr>
<tr class="separator:aec7b3875928abd02b3351bc34bd9bc38 inherit pub_methods_classarmnn_1_1_i_layer_support"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="inherited"></a>
Additional Inherited Members</h2></td></tr>
<tr class="inherit_header pub_attribs_classarmnn_1_1_i_layer_support"><td colspan="2" onclick="javascript:toggleInherit('pub_attribs_classarmnn_1_1_i_layer_support')"><img src="closed.png" alt="-"/>&#160;Public Attributes inherited from <a class="el" href="classarmnn_1_1_i_layer_support.xhtml">ILayerSupport</a></td></tr>
<tr class="memitem:a4e25e081529b7e99e5e454d916ed83fb inherit pub_attribs_classarmnn_1_1_i_layer_support"><td class="memItemLeft" align="right" valign="top">const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_i_layer_support.xhtml#a4e25e081529b7e99e5e454d916ed83fb">output</a></td></tr>
<tr class="separator:a4e25e081529b7e99e5e454d916ed83fb inherit pub_attribs_classarmnn_1_1_i_layer_support"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a859feaa966620ae0ea88abf5226f2d04 inherit pub_attribs_classarmnn_1_1_i_layer_support"><td class="memItemLeft" align="right" valign="top">const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> const <a class="el" href="structarmnn_1_1_activation_descriptor.xhtml">ActivationDescriptor</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_i_layer_support.xhtml#a859feaa966620ae0ea88abf5226f2d04">descriptor</a></td></tr>
<tr class="separator:a859feaa966620ae0ea88abf5226f2d04 inherit pub_attribs_classarmnn_1_1_i_layer_support"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac75f9a02b051716a0cc1cc0818dfe454 inherit pub_attribs_classarmnn_1_1_i_layer_support"><td class="memItemLeft" align="right" valign="top">const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> const <a class="el" href="structarmnn_1_1_activation_descriptor.xhtml">ActivationDescriptor</a> <a class="el" href="classarmnn_1_1_optional.xhtml">Optional</a>&lt; std::string &amp; &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_i_layer_support.xhtml#ac75f9a02b051716a0cc1cc0818dfe454">reasonIfUnsupported</a> = <a class="el" href="structarmnn_1_1_empty_optional.xhtml">EmptyOptional</a>()) const</td></tr>
<tr class="separator:ac75f9a02b051716a0cc1cc0818dfe454 inherit pub_attribs_classarmnn_1_1_i_layer_support"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab82416560ced17268c6ba4443a3aac5e inherit pub_attribs_classarmnn_1_1_i_layer_support"><td class="memItemLeft" align="right" valign="top">const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_i_layer_support.xhtml#ab82416560ced17268c6ba4443a3aac5e">input1</a></td></tr>
<tr class="separator:ab82416560ced17268c6ba4443a3aac5e inherit pub_attribs_classarmnn_1_1_i_layer_support"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae84bf10ef48c058969781b1b6a409e3e inherit pub_attribs_classarmnn_1_1_i_layer_support"><td class="memItemLeft" align="right" valign="top">const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_i_layer_support.xhtml#ae84bf10ef48c058969781b1b6a409e3e">output</a></td></tr>
<tr class="separator:ae84bf10ef48c058969781b1b6a409e3e inherit pub_attribs_classarmnn_1_1_i_layer_support"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae65adc68847fa1162957c412061d433c inherit pub_attribs_classarmnn_1_1_i_layer_support"><td class="memItemLeft" align="right" valign="top">const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> <a class="el" href="classarmnn_1_1_optional.xhtml">Optional</a>&lt; std::string &amp; &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_i_layer_support.xhtml#ae65adc68847fa1162957c412061d433c">reasonIfUnsupported</a> = <a class="el" href="structarmnn_1_1_empty_optional.xhtml">EmptyOptional</a>()) const</td></tr>
<tr class="separator:ae65adc68847fa1162957c412061d433c inherit pub_attribs_classarmnn_1_1_i_layer_support"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5e5d6597e95614c4736b8bb9c5044653 inherit pub_attribs_classarmnn_1_1_i_layer_support"><td class="memItemLeft" align="right" valign="top">const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> const <a class="el" href="structarmnn_1_1_arg_min_max_descriptor.xhtml">ArgMinMaxDescriptor</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_i_layer_support.xhtml#a5e5d6597e95614c4736b8bb9c5044653">descriptor</a></td></tr>
<tr class="separator:a5e5d6597e95614c4736b8bb9c5044653 inherit pub_attribs_classarmnn_1_1_i_layer_support"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aaa6f9f63e1cd44519053cb463315260a inherit pub_attribs_classarmnn_1_1_i_layer_support"><td class="memItemLeft" align="right" valign="top">const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> const <a class="el" href="structarmnn_1_1_arg_min_max_descriptor.xhtml">ArgMinMaxDescriptor</a> <a class="el" href="classarmnn_1_1_optional.xhtml">Optional</a>&lt; std::string &amp; &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_i_layer_support.xhtml#aaa6f9f63e1cd44519053cb463315260a">reasonIfUnsupported</a> = <a class="el" href="structarmnn_1_1_empty_optional.xhtml">EmptyOptional</a>()) const</td></tr>
<tr class="separator:aaa6f9f63e1cd44519053cb463315260a inherit pub_attribs_classarmnn_1_1_i_layer_support"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a895a8451e0799b95d65caf7ffe0a32d7 inherit pub_attribs_classarmnn_1_1_i_layer_support"><td class="memItemLeft" align="right" valign="top">const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_i_layer_support.xhtml#a895a8451e0799b95d65caf7ffe0a32d7">mean</a></td></tr>
<tr class="separator:a895a8451e0799b95d65caf7ffe0a32d7 inherit pub_attribs_classarmnn_1_1_i_layer_support"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a903053b422754682265fba0c03d94a52 inherit pub_attribs_classarmnn_1_1_i_layer_support"><td class="memItemLeft" align="right" valign="top">const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_i_layer_support.xhtml#a903053b422754682265fba0c03d94a52">var</a></td></tr>
<tr class="separator:a903053b422754682265fba0c03d94a52 inherit pub_attribs_classarmnn_1_1_i_layer_support"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a83a99de40f6bffaa36f0333d04690b2a inherit pub_attribs_classarmnn_1_1_i_layer_support"><td class="memItemLeft" align="right" valign="top">const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_i_layer_support.xhtml#a83a99de40f6bffaa36f0333d04690b2a">beta</a></td></tr>
<tr class="separator:a83a99de40f6bffaa36f0333d04690b2a inherit pub_attribs_classarmnn_1_1_i_layer_support"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab5cccb3233f5eff2119e8acc80cec209 inherit pub_attribs_classarmnn_1_1_i_layer_support"><td class="memItemLeft" align="right" valign="top">const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_i_layer_support.xhtml#ab5cccb3233f5eff2119e8acc80cec209">gamma</a></td></tr>
<tr class="separator:ab5cccb3233f5eff2119e8acc80cec209 inherit pub_attribs_classarmnn_1_1_i_layer_support"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8dd4d7e0f9ef6a222d4485824e3c0a56 inherit pub_attribs_classarmnn_1_1_i_layer_support"><td class="memItemLeft" align="right" valign="top">const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> const <a class="el" href="structarmnn_1_1_batch_normalization_descriptor.xhtml">BatchNormalizationDescriptor</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_i_layer_support.xhtml#a8dd4d7e0f9ef6a222d4485824e3c0a56">descriptor</a></td></tr>
<tr class="separator:a8dd4d7e0f9ef6a222d4485824e3c0a56 inherit pub_attribs_classarmnn_1_1_i_layer_support"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a20b9a294f37b4775bc1fabbbd63eb120 inherit pub_attribs_classarmnn_1_1_i_layer_support"><td class="memItemLeft" align="right" valign="top">const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> const <a class="el" href="structarmnn_1_1_batch_normalization_descriptor.xhtml">BatchNormalizationDescriptor</a> <a class="el" href="classarmnn_1_1_optional.xhtml">Optional</a>&lt; std::string &amp; &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_i_layer_support.xhtml#a20b9a294f37b4775bc1fabbbd63eb120">reasonIfUnsupported</a> = <a class="el" href="structarmnn_1_1_empty_optional.xhtml">EmptyOptional</a>()) const</td></tr>
<tr class="separator:a20b9a294f37b4775bc1fabbbd63eb120 inherit pub_attribs_classarmnn_1_1_i_layer_support"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac839b39c94dd578e651f516f43c13d2a inherit pub_attribs_classarmnn_1_1_i_layer_support"><td class="memItemLeft" align="right" valign="top">const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> const <a class="el" href="structarmnn_1_1_batch_to_space_nd_descriptor.xhtml">BatchToSpaceNdDescriptor</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_i_layer_support.xhtml#ac839b39c94dd578e651f516f43c13d2a">descriptor</a></td></tr>
<tr class="separator:ac839b39c94dd578e651f516f43c13d2a inherit pub_attribs_classarmnn_1_1_i_layer_support"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:abc86745c8b6d5363bc2646244c67a351 inherit pub_attribs_classarmnn_1_1_i_layer_support"><td class="memItemLeft" align="right" valign="top">const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> const <a class="el" href="structarmnn_1_1_batch_to_space_nd_descriptor.xhtml">BatchToSpaceNdDescriptor</a> <a class="el" href="classarmnn_1_1_optional.xhtml">Optional</a>&lt; std::string &amp; &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_i_layer_support.xhtml#abc86745c8b6d5363bc2646244c67a351">reasonIfUnsupported</a> = <a class="el" href="structarmnn_1_1_empty_optional.xhtml">EmptyOptional</a>()) const</td></tr>
<tr class="separator:abc86745c8b6d5363bc2646244c67a351 inherit pub_attribs_classarmnn_1_1_i_layer_support"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a29ad9d5b956606cb36fd58a434cc2e23 inherit pub_attribs_classarmnn_1_1_i_layer_support"><td class="memItemLeft" align="right" valign="top">const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> <a class="el" href="classarmnn_1_1_optional.xhtml">Optional</a>&lt; std::string &amp; &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_i_layer_support.xhtml#a29ad9d5b956606cb36fd58a434cc2e23">reasonIfUnsupported</a> = <a class="el" href="structarmnn_1_1_empty_optional.xhtml">EmptyOptional</a>()) const</td></tr>
<tr class="separator:a29ad9d5b956606cb36fd58a434cc2e23 inherit pub_attribs_classarmnn_1_1_i_layer_support"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a41ded06f4f66acf111aedf45a93cbe15 inherit pub_attribs_classarmnn_1_1_i_layer_support"><td class="memItemLeft" align="right" valign="top">const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> const <a class="el" href="structarmnn_1_1_channel_shuffle_descriptor.xhtml">ChannelShuffleDescriptor</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_i_layer_support.xhtml#a41ded06f4f66acf111aedf45a93cbe15">descriptor</a></td></tr>
<tr class="separator:a41ded06f4f66acf111aedf45a93cbe15 inherit pub_attribs_classarmnn_1_1_i_layer_support"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2e9bc16a6e56f65862b22c90306f6e82 inherit pub_attribs_classarmnn_1_1_i_layer_support"><td class="memItemLeft" align="right" valign="top">const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> const <a class="el" href="structarmnn_1_1_channel_shuffle_descriptor.xhtml">ChannelShuffleDescriptor</a> <a class="el" href="classarmnn_1_1_optional.xhtml">Optional</a>&lt; std::string &amp; &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_i_layer_support.xhtml#a2e9bc16a6e56f65862b22c90306f6e82">reasonIfUnsupported</a> = <a class="el" href="structarmnn_1_1_empty_optional.xhtml">EmptyOptional</a>()) const</td></tr>
<tr class="separator:a2e9bc16a6e56f65862b22c90306f6e82 inherit pub_attribs_classarmnn_1_1_i_layer_support"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab9cacb12fe0d3a0a6d6cb108f8a65487 inherit pub_attribs_classarmnn_1_1_i_layer_support"><td class="memItemLeft" align="right" valign="top">const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> const <a class="el" href="structarmnn_1_1_comparison_descriptor.xhtml">ComparisonDescriptor</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_i_layer_support.xhtml#ab9cacb12fe0d3a0a6d6cb108f8a65487">descriptor</a></td></tr>
<tr class="separator:ab9cacb12fe0d3a0a6d6cb108f8a65487 inherit pub_attribs_classarmnn_1_1_i_layer_support"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8dc09e407b409b429f1c79d5bed8fd90 inherit pub_attribs_classarmnn_1_1_i_layer_support"><td class="memItemLeft" align="right" valign="top">const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> const <a class="el" href="structarmnn_1_1_comparison_descriptor.xhtml">ComparisonDescriptor</a> <a class="el" href="classarmnn_1_1_optional.xhtml">Optional</a>&lt; std::string &amp; &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_i_layer_support.xhtml#a8dc09e407b409b429f1c79d5bed8fd90">reasonIfUnsupported</a> = <a class="el" href="structarmnn_1_1_empty_optional.xhtml">EmptyOptional</a>()) const</td></tr>
<tr class="separator:a8dc09e407b409b429f1c79d5bed8fd90 inherit pub_attribs_classarmnn_1_1_i_layer_support"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a57dd2c000057de48849f985419021a39 inherit pub_attribs_classarmnn_1_1_i_layer_support"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classarmnn_1_1_i_layer_support.xhtml#abbfb82bfc5144e893e11597c535325e4">ARMNN_DEPRECATED_MSG_REMOVAL_DATE</a>(&quot;This method is deprecated. &quot; &quot;Use ABI Stable <a class="el" href="classarmnn_1_1_i_layer_support.xhtml#ac65dd8d3d726c22b135ffdaaf0fac33e">IsLayerSupported</a> accepting <a class="el" href="namespacearmnn.xhtml#a56943a0946e5f15e5e58054b8e7a04a4">LayerType</a> argument instead.&quot;, &quot;22.11&quot;) virtual bool <a class="el" href="namespacearmnn.xhtml#a757df85e956e425c1a082d35a98ca4a9">IsConcatSupported</a>(const std <a class="el" href="classarmnn_1_1_optional.xhtml">Optional</a>&lt; std::string &amp; &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_i_layer_support.xhtml#a57dd2c000057de48849f985419021a39">reasonIfUnsupported</a> = <a class="el" href="structarmnn_1_1_empty_optional.xhtml">EmptyOptional</a>()) const</td></tr>
<tr class="separator:a57dd2c000057de48849f985419021a39 inherit pub_attribs_classarmnn_1_1_i_layer_support"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae7f4c641d6fbd044a923ec4d869f1ce5 inherit pub_attribs_classarmnn_1_1_i_layer_support"><td class="memItemLeft" align="right" valign="top">const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> const <a class="el" href="structarmnn_1_1_convolution2d_descriptor.xhtml">Convolution2dDescriptor</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_i_layer_support.xhtml#ae7f4c641d6fbd044a923ec4d869f1ce5">descriptor</a></td></tr>
<tr class="separator:ae7f4c641d6fbd044a923ec4d869f1ce5 inherit pub_attribs_classarmnn_1_1_i_layer_support"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a631f893f44415523924016ed3f54a661 inherit pub_attribs_classarmnn_1_1_i_layer_support"><td class="memItemLeft" align="right" valign="top">const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> const <a class="el" href="structarmnn_1_1_convolution2d_descriptor.xhtml">Convolution2dDescriptor</a> const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_i_layer_support.xhtml#a631f893f44415523924016ed3f54a661">weights</a></td></tr>
<tr class="separator:a631f893f44415523924016ed3f54a661 inherit pub_attribs_classarmnn_1_1_i_layer_support"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a71cf13fc7f7aeac054919e0c6dcab52e inherit pub_attribs_classarmnn_1_1_i_layer_support"><td class="memItemLeft" align="right" valign="top">const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> const <a class="el" href="structarmnn_1_1_convolution2d_descriptor.xhtml">Convolution2dDescriptor</a> const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> const <a class="el" href="classarmnn_1_1_optional.xhtml">Optional</a>&lt; <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &gt; &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_i_layer_support.xhtml#a71cf13fc7f7aeac054919e0c6dcab52e">biases</a></td></tr>
<tr class="separator:a71cf13fc7f7aeac054919e0c6dcab52e inherit pub_attribs_classarmnn_1_1_i_layer_support"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9779892a1f4195b2a3e81d0013b42657 inherit pub_attribs_classarmnn_1_1_i_layer_support"><td class="memItemLeft" align="right" valign="top">const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> const <a class="el" href="structarmnn_1_1_convolution2d_descriptor.xhtml">Convolution2dDescriptor</a> const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> const <a class="el" href="classarmnn_1_1_optional.xhtml">Optional</a>&lt; <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &gt; <a class="el" href="classarmnn_1_1_optional.xhtml">Optional</a>&lt; std::string &amp; &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_i_layer_support.xhtml#a9779892a1f4195b2a3e81d0013b42657">reasonIfUnsupported</a> = <a class="el" href="structarmnn_1_1_empty_optional.xhtml">EmptyOptional</a>()) const</td></tr>
<tr class="separator:a9779892a1f4195b2a3e81d0013b42657 inherit pub_attribs_classarmnn_1_1_i_layer_support"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7f5fdd0c0139292c1abc64114844d1f4 inherit pub_attribs_classarmnn_1_1_i_layer_support"><td class="memItemLeft" align="right" valign="top">const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> const <a class="el" href="structarmnn_1_1_convolution3d_descriptor.xhtml">Convolution3dDescriptor</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_i_layer_support.xhtml#a7f5fdd0c0139292c1abc64114844d1f4">descriptor</a></td></tr>
<tr class="separator:a7f5fdd0c0139292c1abc64114844d1f4 inherit pub_attribs_classarmnn_1_1_i_layer_support"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a78f86eb2582e7c771b9bd0c6ce50faac inherit pub_attribs_classarmnn_1_1_i_layer_support"><td class="memItemLeft" align="right" valign="top">const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> const <a class="el" href="structarmnn_1_1_convolution3d_descriptor.xhtml">Convolution3dDescriptor</a> const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_i_layer_support.xhtml#a78f86eb2582e7c771b9bd0c6ce50faac">weights</a></td></tr>
<tr class="separator:a78f86eb2582e7c771b9bd0c6ce50faac inherit pub_attribs_classarmnn_1_1_i_layer_support"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae65b1330e0be2c2a52f65cbfb193c872 inherit pub_attribs_classarmnn_1_1_i_layer_support"><td class="memItemLeft" align="right" valign="top">const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> const <a class="el" href="structarmnn_1_1_convolution3d_descriptor.xhtml">Convolution3dDescriptor</a> const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> const <a class="el" href="classarmnn_1_1_optional.xhtml">Optional</a>&lt; <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &gt; &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_i_layer_support.xhtml#ae65b1330e0be2c2a52f65cbfb193c872">biases</a></td></tr>
<tr class="separator:ae65b1330e0be2c2a52f65cbfb193c872 inherit pub_attribs_classarmnn_1_1_i_layer_support"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aad75429b6fbe944b033b5500e30f8d1f inherit pub_attribs_classarmnn_1_1_i_layer_support"><td class="memItemLeft" align="right" valign="top">const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> const <a class="el" href="structarmnn_1_1_convolution3d_descriptor.xhtml">Convolution3dDescriptor</a> const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> const <a class="el" href="classarmnn_1_1_optional.xhtml">Optional</a>&lt; <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &gt; <a class="el" href="classarmnn_1_1_optional.xhtml">Optional</a>&lt; std::string &amp; &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_i_layer_support.xhtml#aad75429b6fbe944b033b5500e30f8d1f">reasonIfUnsupported</a> = <a class="el" href="structarmnn_1_1_empty_optional.xhtml">EmptyOptional</a>()) const</td></tr>
<tr class="separator:aad75429b6fbe944b033b5500e30f8d1f inherit pub_attribs_classarmnn_1_1_i_layer_support"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aba6f06f1c1fecfbf4aace221f43e3294 inherit pub_attribs_classarmnn_1_1_i_layer_support"><td class="memItemLeft" align="right" valign="top">const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> const <a class="el" href="namespacearmnn.xhtml#a3647f60510bc8ddaced01c51b0ee8714">DepthToSpaceDescriptor</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_i_layer_support.xhtml#aba6f06f1c1fecfbf4aace221f43e3294">descriptor</a></td></tr>
<tr class="separator:aba6f06f1c1fecfbf4aace221f43e3294 inherit pub_attribs_classarmnn_1_1_i_layer_support"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:acfa7d2b012931907e00b5b309adc53cd inherit pub_attribs_classarmnn_1_1_i_layer_support"><td class="memItemLeft" align="right" valign="top">const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> const <a class="el" href="namespacearmnn.xhtml#a3647f60510bc8ddaced01c51b0ee8714">DepthToSpaceDescriptor</a> <a class="el" href="classarmnn_1_1_optional.xhtml">Optional</a>&lt; std::string &amp; &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_i_layer_support.xhtml#acfa7d2b012931907e00b5b309adc53cd">reasonIfUnsupported</a> = <a class="el" href="structarmnn_1_1_empty_optional.xhtml">EmptyOptional</a>()) const</td></tr>
<tr class="separator:acfa7d2b012931907e00b5b309adc53cd inherit pub_attribs_classarmnn_1_1_i_layer_support"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a851286140a843c9e576fdd0da5323397 inherit pub_attribs_classarmnn_1_1_i_layer_support"><td class="memItemLeft" align="right" valign="top">const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> const <a class="el" href="structarmnn_1_1_depthwise_convolution2d_descriptor.xhtml">DepthwiseConvolution2dDescriptor</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_i_layer_support.xhtml#a851286140a843c9e576fdd0da5323397">descriptor</a></td></tr>
<tr class="separator:a851286140a843c9e576fdd0da5323397 inherit pub_attribs_classarmnn_1_1_i_layer_support"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2b02295b42222ccd14fa4e525b3b209b inherit pub_attribs_classarmnn_1_1_i_layer_support"><td class="memItemLeft" align="right" valign="top">const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> const <a class="el" href="structarmnn_1_1_depthwise_convolution2d_descriptor.xhtml">DepthwiseConvolution2dDescriptor</a> const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_i_layer_support.xhtml#a2b02295b42222ccd14fa4e525b3b209b">weights</a></td></tr>
<tr class="separator:a2b02295b42222ccd14fa4e525b3b209b inherit pub_attribs_classarmnn_1_1_i_layer_support"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a293d81775f1cf5fc4212960d93f2e663 inherit pub_attribs_classarmnn_1_1_i_layer_support"><td class="memItemLeft" align="right" valign="top">const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> const <a class="el" href="structarmnn_1_1_depthwise_convolution2d_descriptor.xhtml">DepthwiseConvolution2dDescriptor</a> const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> const <a class="el" href="classarmnn_1_1_optional.xhtml">Optional</a>&lt; <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &gt; &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_i_layer_support.xhtml#a293d81775f1cf5fc4212960d93f2e663">biases</a></td></tr>
<tr class="separator:a293d81775f1cf5fc4212960d93f2e663 inherit pub_attribs_classarmnn_1_1_i_layer_support"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a150b84957a8a590ecad5e8b7aa3419c6 inherit pub_attribs_classarmnn_1_1_i_layer_support"><td class="memItemLeft" align="right" valign="top">const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> const <a class="el" href="structarmnn_1_1_depthwise_convolution2d_descriptor.xhtml">DepthwiseConvolution2dDescriptor</a> const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> const <a class="el" href="classarmnn_1_1_optional.xhtml">Optional</a>&lt; <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &gt; <a class="el" href="classarmnn_1_1_optional.xhtml">Optional</a>&lt; std::string &amp; &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_i_layer_support.xhtml#a150b84957a8a590ecad5e8b7aa3419c6">reasonIfUnsupported</a> = <a class="el" href="structarmnn_1_1_empty_optional.xhtml">EmptyOptional</a>()) const</td></tr>
<tr class="separator:a150b84957a8a590ecad5e8b7aa3419c6 inherit pub_attribs_classarmnn_1_1_i_layer_support"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a97cbe8ac8df2e213185599d693079acf inherit pub_attribs_classarmnn_1_1_i_layer_support"><td class="memItemLeft" align="right" valign="top">const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_i_layer_support.xhtml#a97cbe8ac8df2e213185599d693079acf">scores</a></td></tr>
<tr class="separator:a97cbe8ac8df2e213185599d693079acf inherit pub_attribs_classarmnn_1_1_i_layer_support"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae1e19982da8ec2840ca14748c2d8522c inherit pub_attribs_classarmnn_1_1_i_layer_support"><td class="memItemLeft" align="right" valign="top">const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_i_layer_support.xhtml#ae1e19982da8ec2840ca14748c2d8522c">anchors</a></td></tr>
<tr class="separator:ae1e19982da8ec2840ca14748c2d8522c inherit pub_attribs_classarmnn_1_1_i_layer_support"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6d0c2ca9c78e81a5e9e0f3db51934782 inherit pub_attribs_classarmnn_1_1_i_layer_support"><td class="memItemLeft" align="right" valign="top">const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_i_layer_support.xhtml#a6d0c2ca9c78e81a5e9e0f3db51934782">detectionBoxes</a></td></tr>
<tr class="separator:a6d0c2ca9c78e81a5e9e0f3db51934782 inherit pub_attribs_classarmnn_1_1_i_layer_support"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a56d52f01c9d80f3710ddace11e534434 inherit pub_attribs_classarmnn_1_1_i_layer_support"><td class="memItemLeft" align="right" valign="top">const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_i_layer_support.xhtml#a56d52f01c9d80f3710ddace11e534434">detectionClasses</a></td></tr>
<tr class="separator:a56d52f01c9d80f3710ddace11e534434 inherit pub_attribs_classarmnn_1_1_i_layer_support"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac8776b306c349e20905e7ae17255b395 inherit pub_attribs_classarmnn_1_1_i_layer_support"><td class="memItemLeft" align="right" valign="top">const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_i_layer_support.xhtml#ac8776b306c349e20905e7ae17255b395">detectionScores</a></td></tr>
<tr class="separator:ac8776b306c349e20905e7ae17255b395 inherit pub_attribs_classarmnn_1_1_i_layer_support"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3b204a7fda471668ab54dc967c5a7917 inherit pub_attribs_classarmnn_1_1_i_layer_support"><td class="memItemLeft" align="right" valign="top">const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_i_layer_support.xhtml#a3b204a7fda471668ab54dc967c5a7917">numDetections</a></td></tr>
<tr class="separator:a3b204a7fda471668ab54dc967c5a7917 inherit pub_attribs_classarmnn_1_1_i_layer_support"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a730ea10711ec9b130de59852b061d3bd inherit pub_attribs_classarmnn_1_1_i_layer_support"><td class="memItemLeft" align="right" valign="top">const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> const <a class="el" href="structarmnn_1_1_detection_post_process_descriptor.xhtml">DetectionPostProcessDescriptor</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_i_layer_support.xhtml#a730ea10711ec9b130de59852b061d3bd">descriptor</a></td></tr>
<tr class="separator:a730ea10711ec9b130de59852b061d3bd inherit pub_attribs_classarmnn_1_1_i_layer_support"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:afd1d3d219373a3b773be1bd29a03840f inherit pub_attribs_classarmnn_1_1_i_layer_support"><td class="memItemLeft" align="right" valign="top">const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> const <a class="el" href="structarmnn_1_1_detection_post_process_descriptor.xhtml">DetectionPostProcessDescriptor</a> <a class="el" href="classarmnn_1_1_optional.xhtml">Optional</a>&lt; std::string &amp; &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_i_layer_support.xhtml#afd1d3d219373a3b773be1bd29a03840f">reasonIfUnsupported</a> = <a class="el" href="structarmnn_1_1_empty_optional.xhtml">EmptyOptional</a>()) const =0</td></tr>
<tr class="separator:afd1d3d219373a3b773be1bd29a03840f inherit pub_attribs_classarmnn_1_1_i_layer_support"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a75e6a2fd11b81665527cef162e51d995 inherit pub_attribs_classarmnn_1_1_i_layer_support"><td class="memItemLeft" align="right" valign="top">const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> const <a class="el" href="structarmnn_1_1_elementwise_unary_descriptor.xhtml">ElementwiseUnaryDescriptor</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_i_layer_support.xhtml#a75e6a2fd11b81665527cef162e51d995">descriptor</a></td></tr>
<tr class="separator:a75e6a2fd11b81665527cef162e51d995 inherit pub_attribs_classarmnn_1_1_i_layer_support"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0882060fd5b0aa781212b94f73dfe63c inherit pub_attribs_classarmnn_1_1_i_layer_support"><td class="memItemLeft" align="right" valign="top">const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> const <a class="el" href="structarmnn_1_1_elementwise_unary_descriptor.xhtml">ElementwiseUnaryDescriptor</a> <a class="el" href="classarmnn_1_1_optional.xhtml">Optional</a>&lt; std::string &amp; &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_i_layer_support.xhtml#a0882060fd5b0aa781212b94f73dfe63c">reasonIfUnsupported</a> = <a class="el" href="structarmnn_1_1_empty_optional.xhtml">EmptyOptional</a>()) const</td></tr>
<tr class="separator:a0882060fd5b0aa781212b94f73dfe63c inherit pub_attribs_classarmnn_1_1_i_layer_support"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af044b1f8e48ba25b3a7573aa9a67d10c inherit pub_attribs_classarmnn_1_1_i_layer_support"><td class="memItemLeft" align="right" valign="top">const <a class="el" href="structarmnn_1_1_fake_quantization_descriptor.xhtml">FakeQuantizationDescriptor</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_i_layer_support.xhtml#af044b1f8e48ba25b3a7573aa9a67d10c">descriptor</a></td></tr>
<tr class="separator:af044b1f8e48ba25b3a7573aa9a67d10c inherit pub_attribs_classarmnn_1_1_i_layer_support"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac48e5137a5a809909297c5ae3b882ea6 inherit pub_attribs_classarmnn_1_1_i_layer_support"><td class="memItemLeft" align="right" valign="top">const <a class="el" href="structarmnn_1_1_fake_quantization_descriptor.xhtml">FakeQuantizationDescriptor</a> <a class="el" href="classarmnn_1_1_optional.xhtml">Optional</a>&lt; std::string &amp; &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_i_layer_support.xhtml#ac48e5137a5a809909297c5ae3b882ea6">reasonIfUnsupported</a> = <a class="el" href="structarmnn_1_1_empty_optional.xhtml">EmptyOptional</a>()) const</td></tr>
<tr class="separator:ac48e5137a5a809909297c5ae3b882ea6 inherit pub_attribs_classarmnn_1_1_i_layer_support"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad57391891b17ad49107ae84c8ee5a69e inherit pub_attribs_classarmnn_1_1_i_layer_support"><td class="memItemLeft" align="right" valign="top">const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> const <a class="el" href="structarmnn_1_1_fill_descriptor.xhtml">FillDescriptor</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_i_layer_support.xhtml#ad57391891b17ad49107ae84c8ee5a69e">descriptor</a></td></tr>
<tr class="separator:ad57391891b17ad49107ae84c8ee5a69e inherit pub_attribs_classarmnn_1_1_i_layer_support"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a58540f633cf1bab7b2bfea01169383c4 inherit pub_attribs_classarmnn_1_1_i_layer_support"><td class="memItemLeft" align="right" valign="top">const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> const <a class="el" href="structarmnn_1_1_fill_descriptor.xhtml">FillDescriptor</a> <a class="el" href="classarmnn_1_1_optional.xhtml">Optional</a>&lt; std::string &amp; &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_i_layer_support.xhtml#a58540f633cf1bab7b2bfea01169383c4">reasonIfUnsupported</a> = <a class="el" href="structarmnn_1_1_empty_optional.xhtml">EmptyOptional</a>()) const</td></tr>
<tr class="separator:a58540f633cf1bab7b2bfea01169383c4 inherit pub_attribs_classarmnn_1_1_i_layer_support"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a98ace67e4b8ff91da426a011e7b1630b inherit pub_attribs_classarmnn_1_1_i_layer_support"><td class="memItemLeft" align="right" valign="top">const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_i_layer_support.xhtml#a98ace67e4b8ff91da426a011e7b1630b">weights</a></td></tr>
<tr class="separator:a98ace67e4b8ff91da426a011e7b1630b inherit pub_attribs_classarmnn_1_1_i_layer_support"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ada7c27be0ec37a4c98459164e00cd618 inherit pub_attribs_classarmnn_1_1_i_layer_support"><td class="memItemLeft" align="right" valign="top">const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_i_layer_support.xhtml#ada7c27be0ec37a4c98459164e00cd618">biases</a></td></tr>
<tr class="separator:ada7c27be0ec37a4c98459164e00cd618 inherit pub_attribs_classarmnn_1_1_i_layer_support"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a85d6ba46a89488436d0fff881f2370ba inherit pub_attribs_classarmnn_1_1_i_layer_support"><td class="memItemLeft" align="right" valign="top">const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> const <a class="el" href="structarmnn_1_1_fully_connected_descriptor.xhtml">FullyConnectedDescriptor</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_i_layer_support.xhtml#a85d6ba46a89488436d0fff881f2370ba">descriptor</a></td></tr>
<tr class="separator:a85d6ba46a89488436d0fff881f2370ba inherit pub_attribs_classarmnn_1_1_i_layer_support"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a389e8924fffa57dd73ffead6fde9d1a9 inherit pub_attribs_classarmnn_1_1_i_layer_support"><td class="memItemLeft" align="right" valign="top">const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> const <a class="el" href="structarmnn_1_1_fully_connected_descriptor.xhtml">FullyConnectedDescriptor</a> <a class="el" href="classarmnn_1_1_optional.xhtml">Optional</a>&lt; std::string &amp; &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_i_layer_support.xhtml#a389e8924fffa57dd73ffead6fde9d1a9">reasonIfUnsupported</a> = <a class="el" href="structarmnn_1_1_empty_optional.xhtml">EmptyOptional</a>()) const</td></tr>
<tr class="separator:a389e8924fffa57dd73ffead6fde9d1a9 inherit pub_attribs_classarmnn_1_1_i_layer_support"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a10b6c65d39b282401448aff724037aae inherit pub_attribs_classarmnn_1_1_i_layer_support"><td class="memItemLeft" align="right" valign="top">const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> const <a class="el" href="structarmnn_1_1_gather_descriptor.xhtml">GatherDescriptor</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_i_layer_support.xhtml#a10b6c65d39b282401448aff724037aae">descriptor</a></td></tr>
<tr class="separator:a10b6c65d39b282401448aff724037aae inherit pub_attribs_classarmnn_1_1_i_layer_support"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a435bee1e83fa5d5fb2753525f6ff5162 inherit pub_attribs_classarmnn_1_1_i_layer_support"><td class="memItemLeft" align="right" valign="top">const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> const <a class="el" href="structarmnn_1_1_gather_descriptor.xhtml">GatherDescriptor</a> <a class="el" href="classarmnn_1_1_optional.xhtml">Optional</a>&lt; std::string &amp; &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_i_layer_support.xhtml#a435bee1e83fa5d5fb2753525f6ff5162">reasonIfUnsupported</a> = <a class="el" href="structarmnn_1_1_empty_optional.xhtml">EmptyOptional</a>()) const</td></tr>
<tr class="separator:a435bee1e83fa5d5fb2753525f6ff5162 inherit pub_attribs_classarmnn_1_1_i_layer_support"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a81b3c2919b174e2d6d4a2217e14858c9 inherit pub_attribs_classarmnn_1_1_i_layer_support"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classarmnn_1_1_optional.xhtml">Optional</a>&lt; std::string &amp; &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_i_layer_support.xhtml#a81b3c2919b174e2d6d4a2217e14858c9">reasonIfUnsupported</a> = <a class="el" href="structarmnn_1_1_empty_optional.xhtml">EmptyOptional</a>()) const</td></tr>
<tr class="separator:a81b3c2919b174e2d6d4a2217e14858c9 inherit pub_attribs_classarmnn_1_1_i_layer_support"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7a939cab6010bf54769aadbbbe1a2ccb inherit pub_attribs_classarmnn_1_1_i_layer_support"><td class="memItemLeft" align="right" valign="top">const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> const <a class="el" href="structarmnn_1_1_instance_normalization_descriptor.xhtml">InstanceNormalizationDescriptor</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_i_layer_support.xhtml#a7a939cab6010bf54769aadbbbe1a2ccb">descriptor</a></td></tr>
<tr class="separator:a7a939cab6010bf54769aadbbbe1a2ccb inherit pub_attribs_classarmnn_1_1_i_layer_support"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa459040aa42210d103192b224b6b5d79 inherit pub_attribs_classarmnn_1_1_i_layer_support"><td class="memItemLeft" align="right" valign="top">const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> const <a class="el" href="structarmnn_1_1_instance_normalization_descriptor.xhtml">InstanceNormalizationDescriptor</a> <a class="el" href="classarmnn_1_1_optional.xhtml">Optional</a>&lt; std::string &amp; &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_i_layer_support.xhtml#aa459040aa42210d103192b224b6b5d79">reasonIfUnsupported</a> = <a class="el" href="structarmnn_1_1_empty_optional.xhtml">EmptyOptional</a>()) const</td></tr>
<tr class="separator:aa459040aa42210d103192b224b6b5d79 inherit pub_attribs_classarmnn_1_1_i_layer_support"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac53977992deddc04c00092e967aaf0d7 inherit pub_attribs_classarmnn_1_1_i_layer_support"><td class="memItemLeft" align="right" valign="top">const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> const <a class="el" href="structarmnn_1_1_l2_normalization_descriptor.xhtml">L2NormalizationDescriptor</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_i_layer_support.xhtml#ac53977992deddc04c00092e967aaf0d7">descriptor</a></td></tr>
<tr class="separator:ac53977992deddc04c00092e967aaf0d7 inherit pub_attribs_classarmnn_1_1_i_layer_support"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a31130b6d97bbc90b428a410a03a3bf06 inherit pub_attribs_classarmnn_1_1_i_layer_support"><td class="memItemLeft" align="right" valign="top">const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> const <a class="el" href="structarmnn_1_1_l2_normalization_descriptor.xhtml">L2NormalizationDescriptor</a> <a class="el" href="classarmnn_1_1_optional.xhtml">Optional</a>&lt; std::string &amp; &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_i_layer_support.xhtml#a31130b6d97bbc90b428a410a03a3bf06">reasonIfUnsupported</a> = <a class="el" href="structarmnn_1_1_empty_optional.xhtml">EmptyOptional</a>()) const</td></tr>
<tr class="separator:a31130b6d97bbc90b428a410a03a3bf06 inherit pub_attribs_classarmnn_1_1_i_layer_support"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3bee7ba1901580222cded96f938ac8df inherit pub_attribs_classarmnn_1_1_i_layer_support"><td class="memItemLeft" align="right" valign="top">const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> const <a class="el" href="structarmnn_1_1_logical_binary_descriptor.xhtml">LogicalBinaryDescriptor</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_i_layer_support.xhtml#a3bee7ba1901580222cded96f938ac8df">descriptor</a></td></tr>
<tr class="separator:a3bee7ba1901580222cded96f938ac8df inherit pub_attribs_classarmnn_1_1_i_layer_support"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af20317b332f276b5c4c4ff755fe61016 inherit pub_attribs_classarmnn_1_1_i_layer_support"><td class="memItemLeft" align="right" valign="top">const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> const <a class="el" href="structarmnn_1_1_logical_binary_descriptor.xhtml">LogicalBinaryDescriptor</a> <a class="el" href="classarmnn_1_1_optional.xhtml">Optional</a>&lt; std::string &amp; &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_i_layer_support.xhtml#af20317b332f276b5c4c4ff755fe61016">reasonIfUnsupported</a> = <a class="el" href="structarmnn_1_1_empty_optional.xhtml">EmptyOptional</a>()) const</td></tr>
<tr class="separator:af20317b332f276b5c4c4ff755fe61016 inherit pub_attribs_classarmnn_1_1_i_layer_support"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad7c38b1f3b73fb1b67b0928c9cd390a3 inherit pub_attribs_classarmnn_1_1_i_layer_support"><td class="memItemLeft" align="right" valign="top">const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> const <a class="el" href="namespacearmnn.xhtml#ac14705405cbcdd580df613de6766fe65">LogSoftmaxDescriptor</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_i_layer_support.xhtml#ad7c38b1f3b73fb1b67b0928c9cd390a3">descriptor</a></td></tr>
<tr class="separator:ad7c38b1f3b73fb1b67b0928c9cd390a3 inherit pub_attribs_classarmnn_1_1_i_layer_support"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9e509e880a10237c69d74ca18a276706 inherit pub_attribs_classarmnn_1_1_i_layer_support"><td class="memItemLeft" align="right" valign="top">const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> const <a class="el" href="namespacearmnn.xhtml#ac14705405cbcdd580df613de6766fe65">LogSoftmaxDescriptor</a> <a class="el" href="classarmnn_1_1_optional.xhtml">Optional</a>&lt; std::string &amp; &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_i_layer_support.xhtml#a9e509e880a10237c69d74ca18a276706">reasonIfUnsupported</a> = <a class="el" href="structarmnn_1_1_empty_optional.xhtml">EmptyOptional</a>()) const</td></tr>
<tr class="separator:a9e509e880a10237c69d74ca18a276706 inherit pub_attribs_classarmnn_1_1_i_layer_support"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5a01de4e3851a25f2df77897fb8f7083 inherit pub_attribs_classarmnn_1_1_i_layer_support"><td class="memItemLeft" align="right" valign="top">const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_i_layer_support.xhtml#a5a01de4e3851a25f2df77897fb8f7083">outputStateIn</a></td></tr>
<tr class="separator:a5a01de4e3851a25f2df77897fb8f7083 inherit pub_attribs_classarmnn_1_1_i_layer_support"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aec04a02758804219fb461623464a8e96 inherit pub_attribs_classarmnn_1_1_i_layer_support"><td class="memItemLeft" align="right" valign="top">const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_i_layer_support.xhtml#aec04a02758804219fb461623464a8e96">cellStateIn</a></td></tr>
<tr class="separator:aec04a02758804219fb461623464a8e96 inherit pub_attribs_classarmnn_1_1_i_layer_support"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4f6f59c4e91c7c37d9a119d615093ed3 inherit pub_attribs_classarmnn_1_1_i_layer_support"><td class="memItemLeft" align="right" valign="top">const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_i_layer_support.xhtml#a4f6f59c4e91c7c37d9a119d615093ed3">scratchBuffer</a></td></tr>
<tr class="separator:a4f6f59c4e91c7c37d9a119d615093ed3 inherit pub_attribs_classarmnn_1_1_i_layer_support"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a44eb2a514bddb31fe20f9e4f04159c9f inherit pub_attribs_classarmnn_1_1_i_layer_support"><td class="memItemLeft" align="right" valign="top">const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_i_layer_support.xhtml#a44eb2a514bddb31fe20f9e4f04159c9f">outputStateOut</a></td></tr>
<tr class="separator:a44eb2a514bddb31fe20f9e4f04159c9f inherit pub_attribs_classarmnn_1_1_i_layer_support"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae1ee2d524d4252bffc0ed67e75882952 inherit pub_attribs_classarmnn_1_1_i_layer_support"><td class="memItemLeft" align="right" valign="top">const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_i_layer_support.xhtml#ae1ee2d524d4252bffc0ed67e75882952">cellStateOut</a></td></tr>
<tr class="separator:ae1ee2d524d4252bffc0ed67e75882952 inherit pub_attribs_classarmnn_1_1_i_layer_support"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa930d13649875f8801e323a212445a16 inherit pub_attribs_classarmnn_1_1_i_layer_support"><td class="memItemLeft" align="right" valign="top">const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_i_layer_support.xhtml#aa930d13649875f8801e323a212445a16">output</a></td></tr>
<tr class="separator:aa930d13649875f8801e323a212445a16 inherit pub_attribs_classarmnn_1_1_i_layer_support"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:acd4dba56c2ef1c650c48c525cb56f5c0 inherit pub_attribs_classarmnn_1_1_i_layer_support"><td class="memItemLeft" align="right" valign="top">const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> const <a class="el" href="structarmnn_1_1_lstm_descriptor.xhtml">LstmDescriptor</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_i_layer_support.xhtml#acd4dba56c2ef1c650c48c525cb56f5c0">descriptor</a></td></tr>
<tr class="separator:acd4dba56c2ef1c650c48c525cb56f5c0 inherit pub_attribs_classarmnn_1_1_i_layer_support"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aca7a974c8803242968a8d6540275264a inherit pub_attribs_classarmnn_1_1_i_layer_support"><td class="memItemLeft" align="right" valign="top">const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> const <a class="el" href="structarmnn_1_1_lstm_descriptor.xhtml">LstmDescriptor</a> const <a class="el" href="structarmnn_1_1_lstm_input_params_info.xhtml">LstmInputParamsInfo</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_i_layer_support.xhtml#aca7a974c8803242968a8d6540275264a">paramsInfo</a></td></tr>
<tr class="separator:aca7a974c8803242968a8d6540275264a inherit pub_attribs_classarmnn_1_1_i_layer_support"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a52c5081cfb456749136ad9a392f9ea3a inherit pub_attribs_classarmnn_1_1_i_layer_support"><td class="memItemLeft" align="right" valign="top">const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> const <a class="el" href="structarmnn_1_1_lstm_descriptor.xhtml">LstmDescriptor</a> const <a class="el" href="structarmnn_1_1_lstm_input_params_info.xhtml">LstmInputParamsInfo</a> <a class="el" href="classarmnn_1_1_optional.xhtml">Optional</a>&lt; std::string &amp; &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_i_layer_support.xhtml#a52c5081cfb456749136ad9a392f9ea3a">reasonIfUnsupported</a> = <a class="el" href="structarmnn_1_1_empty_optional.xhtml">EmptyOptional</a>()) const</td></tr>
<tr class="separator:a52c5081cfb456749136ad9a392f9ea3a inherit pub_attribs_classarmnn_1_1_i_layer_support"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9f04d51318166c899ede06bb45850bbe inherit pub_attribs_classarmnn_1_1_i_layer_support"><td class="memItemLeft" align="right" valign="top">const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> const <a class="el" href="structarmnn_1_1_mean_descriptor.xhtml">MeanDescriptor</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_i_layer_support.xhtml#a9f04d51318166c899ede06bb45850bbe">descriptor</a></td></tr>
<tr class="separator:a9f04d51318166c899ede06bb45850bbe inherit pub_attribs_classarmnn_1_1_i_layer_support"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab97ebc2c58cc8f57e52a54eb1413c358 inherit pub_attribs_classarmnn_1_1_i_layer_support"><td class="memItemLeft" align="right" valign="top">const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> const <a class="el" href="structarmnn_1_1_mean_descriptor.xhtml">MeanDescriptor</a> <a class="el" href="classarmnn_1_1_optional.xhtml">Optional</a>&lt; std::string &amp; &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_i_layer_support.xhtml#ab97ebc2c58cc8f57e52a54eb1413c358">reasonIfUnsupported</a> = <a class="el" href="structarmnn_1_1_empty_optional.xhtml">EmptyOptional</a>()) const</td></tr>
<tr class="separator:ab97ebc2c58cc8f57e52a54eb1413c358 inherit pub_attribs_classarmnn_1_1_i_layer_support"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a076bc5e2bfb7bf8fb352b4b8fb8e3c2e inherit pub_attribs_classarmnn_1_1_i_layer_support"><td class="memItemLeft" align="right" valign="top">const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_i_layer_support.xhtml#a076bc5e2bfb7bf8fb352b4b8fb8e3c2e">ouput</a></td></tr>
<tr class="separator:a076bc5e2bfb7bf8fb352b4b8fb8e3c2e inherit pub_attribs_classarmnn_1_1_i_layer_support"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:afcd0960fc6f0018d8232b054dab379d9 inherit pub_attribs_classarmnn_1_1_i_layer_support"><td class="memItemLeft" align="right" valign="top">const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> const <a class="el" href="structarmnn_1_1_normalization_descriptor.xhtml">NormalizationDescriptor</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_i_layer_support.xhtml#afcd0960fc6f0018d8232b054dab379d9">descriptor</a></td></tr>
<tr class="separator:afcd0960fc6f0018d8232b054dab379d9 inherit pub_attribs_classarmnn_1_1_i_layer_support"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a35711aefa941f96db71b995722aa39eb inherit pub_attribs_classarmnn_1_1_i_layer_support"><td class="memItemLeft" align="right" valign="top">const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> const <a class="el" href="structarmnn_1_1_normalization_descriptor.xhtml">NormalizationDescriptor</a> <a class="el" href="classarmnn_1_1_optional.xhtml">Optional</a>&lt; std::string &amp; &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_i_layer_support.xhtml#a35711aefa941f96db71b995722aa39eb">reasonIfUnsupported</a> = <a class="el" href="structarmnn_1_1_empty_optional.xhtml">EmptyOptional</a>()) const</td></tr>
<tr class="separator:a35711aefa941f96db71b995722aa39eb inherit pub_attribs_classarmnn_1_1_i_layer_support"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9ce43368e08d80c272b521c463f11e7b inherit pub_attribs_classarmnn_1_1_i_layer_support"><td class="memItemLeft" align="right" valign="top">const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> const <a class="el" href="structarmnn_1_1_pad_descriptor.xhtml">PadDescriptor</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_i_layer_support.xhtml#a9ce43368e08d80c272b521c463f11e7b">descriptor</a></td></tr>
<tr class="separator:a9ce43368e08d80c272b521c463f11e7b inherit pub_attribs_classarmnn_1_1_i_layer_support"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad9befa35b9485c78ddba2f9e710eed05 inherit pub_attribs_classarmnn_1_1_i_layer_support"><td class="memItemLeft" align="right" valign="top">const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> const <a class="el" href="structarmnn_1_1_pad_descriptor.xhtml">PadDescriptor</a> <a class="el" href="classarmnn_1_1_optional.xhtml">Optional</a>&lt; std::string &amp; &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_i_layer_support.xhtml#ad9befa35b9485c78ddba2f9e710eed05">reasonIfUnsupported</a> = <a class="el" href="structarmnn_1_1_empty_optional.xhtml">EmptyOptional</a>()) const</td></tr>
<tr class="separator:ad9befa35b9485c78ddba2f9e710eed05 inherit pub_attribs_classarmnn_1_1_i_layer_support"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9617f94c779168d6208c2732d50b701e inherit pub_attribs_classarmnn_1_1_i_layer_support"><td class="memItemLeft" align="right" valign="top">const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> const <a class="el" href="structarmnn_1_1_permute_descriptor.xhtml">PermuteDescriptor</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_i_layer_support.xhtml#a9617f94c779168d6208c2732d50b701e">descriptor</a></td></tr>
<tr class="separator:a9617f94c779168d6208c2732d50b701e inherit pub_attribs_classarmnn_1_1_i_layer_support"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa844a2559a5c5a13520b3c5f4dd21ba3 inherit pub_attribs_classarmnn_1_1_i_layer_support"><td class="memItemLeft" align="right" valign="top">const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> const <a class="el" href="structarmnn_1_1_permute_descriptor.xhtml">PermuteDescriptor</a> <a class="el" href="classarmnn_1_1_optional.xhtml">Optional</a>&lt; std::string &amp; &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_i_layer_support.xhtml#aa844a2559a5c5a13520b3c5f4dd21ba3">reasonIfUnsupported</a> = <a class="el" href="structarmnn_1_1_empty_optional.xhtml">EmptyOptional</a>()) const</td></tr>
<tr class="separator:aa844a2559a5c5a13520b3c5f4dd21ba3 inherit pub_attribs_classarmnn_1_1_i_layer_support"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5ffc76ae21b0e36f386a580678379708 inherit pub_attribs_classarmnn_1_1_i_layer_support"><td class="memItemLeft" align="right" valign="top">const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> const <a class="el" href="structarmnn_1_1_pooling2d_descriptor.xhtml">Pooling2dDescriptor</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_i_layer_support.xhtml#a5ffc76ae21b0e36f386a580678379708">descriptor</a></td></tr>
<tr class="separator:a5ffc76ae21b0e36f386a580678379708 inherit pub_attribs_classarmnn_1_1_i_layer_support"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6fa61de2e37218b13b6065132be433eb inherit pub_attribs_classarmnn_1_1_i_layer_support"><td class="memItemLeft" align="right" valign="top">const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> const <a class="el" href="structarmnn_1_1_pooling2d_descriptor.xhtml">Pooling2dDescriptor</a> <a class="el" href="classarmnn_1_1_optional.xhtml">Optional</a>&lt; std::string &amp; &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_i_layer_support.xhtml#a6fa61de2e37218b13b6065132be433eb">reasonIfUnsupported</a> = <a class="el" href="structarmnn_1_1_empty_optional.xhtml">EmptyOptional</a>()) const</td></tr>
<tr class="separator:a6fa61de2e37218b13b6065132be433eb inherit pub_attribs_classarmnn_1_1_i_layer_support"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad2de917e7d1e41ef25c94aa699ce7019 inherit pub_attribs_classarmnn_1_1_i_layer_support"><td class="memItemLeft" align="right" valign="top">const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> const <a class="el" href="structarmnn_1_1_pooling3d_descriptor.xhtml">Pooling3dDescriptor</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_i_layer_support.xhtml#ad2de917e7d1e41ef25c94aa699ce7019">descriptor</a></td></tr>
<tr class="separator:ad2de917e7d1e41ef25c94aa699ce7019 inherit pub_attribs_classarmnn_1_1_i_layer_support"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4d1114dd734cd87b78a87148e3eae2d3 inherit pub_attribs_classarmnn_1_1_i_layer_support"><td class="memItemLeft" align="right" valign="top">const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> const <a class="el" href="structarmnn_1_1_pooling3d_descriptor.xhtml">Pooling3dDescriptor</a> <a class="el" href="classarmnn_1_1_optional.xhtml">Optional</a>&lt; std::string &amp; &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_i_layer_support.xhtml#a4d1114dd734cd87b78a87148e3eae2d3">reasonIfUnsupported</a> = <a class="el" href="structarmnn_1_1_empty_optional.xhtml">EmptyOptional</a>()) const</td></tr>
<tr class="separator:a4d1114dd734cd87b78a87148e3eae2d3 inherit pub_attribs_classarmnn_1_1_i_layer_support"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0bea23d979ad4bfdfda7f2f96be55ca7 inherit pub_attribs_classarmnn_1_1_i_layer_support"><td class="memItemLeft" align="right" valign="top">const <a class="el" href="structarmnn_1_1_pre_compiled_descriptor.xhtml">PreCompiledDescriptor</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_i_layer_support.xhtml#a0bea23d979ad4bfdfda7f2f96be55ca7">descriptor</a></td></tr>
<tr class="separator:a0bea23d979ad4bfdfda7f2f96be55ca7 inherit pub_attribs_classarmnn_1_1_i_layer_support"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2e0dcfaa4069d35d315fbdcc8a0ec2ff inherit pub_attribs_classarmnn_1_1_i_layer_support"><td class="memItemLeft" align="right" valign="top">const <a class="el" href="structarmnn_1_1_pre_compiled_descriptor.xhtml">PreCompiledDescriptor</a> <a class="el" href="classarmnn_1_1_optional.xhtml">Optional</a>&lt; std::string &amp; &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_i_layer_support.xhtml#a2e0dcfaa4069d35d315fbdcc8a0ec2ff">reasonIfUnsupported</a> = <a class="el" href="structarmnn_1_1_empty_optional.xhtml">EmptyOptional</a>()) const</td></tr>
<tr class="separator:a2e0dcfaa4069d35d315fbdcc8a0ec2ff inherit pub_attribs_classarmnn_1_1_i_layer_support"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a218e2ebb5babb8323688906b8997eafb inherit pub_attribs_classarmnn_1_1_i_layer_support"><td class="memItemLeft" align="right" valign="top">const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_i_layer_support.xhtml#a218e2ebb5babb8323688906b8997eafb">alpha</a></td></tr>
<tr class="separator:a218e2ebb5babb8323688906b8997eafb inherit pub_attribs_classarmnn_1_1_i_layer_support"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5b09834cc88bb4156e291c37bd2434ff inherit pub_attribs_classarmnn_1_1_i_layer_support"><td class="memItemLeft" align="right" valign="top">const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_i_layer_support.xhtml#a5b09834cc88bb4156e291c37bd2434ff">previousOutputIn</a></td></tr>
<tr class="separator:a5b09834cc88bb4156e291c37bd2434ff inherit pub_attribs_classarmnn_1_1_i_layer_support"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad5e0e3fb8a59107ac3366028a057db12 inherit pub_attribs_classarmnn_1_1_i_layer_support"><td class="memItemLeft" align="right" valign="top">const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_i_layer_support.xhtml#ad5e0e3fb8a59107ac3366028a057db12">previousCellStateIn</a></td></tr>
<tr class="separator:ad5e0e3fb8a59107ac3366028a057db12 inherit pub_attribs_classarmnn_1_1_i_layer_support"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aff8d75a6c22d819b2f00d22f7a8df868 inherit pub_attribs_classarmnn_1_1_i_layer_support"><td class="memItemLeft" align="right" valign="top">const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_i_layer_support.xhtml#aff8d75a6c22d819b2f00d22f7a8df868">outputStateOut</a></td></tr>
<tr class="separator:aff8d75a6c22d819b2f00d22f7a8df868 inherit pub_attribs_classarmnn_1_1_i_layer_support"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7369eda0b60ec397afbecbc1f1cc686e inherit pub_attribs_classarmnn_1_1_i_layer_support"><td class="memItemLeft" align="right" valign="top">const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_i_layer_support.xhtml#a7369eda0b60ec397afbecbc1f1cc686e">cellStateOut</a></td></tr>
<tr class="separator:a7369eda0b60ec397afbecbc1f1cc686e inherit pub_attribs_classarmnn_1_1_i_layer_support"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:afc8db3bfb13b523f94d8df0917940ba9 inherit pub_attribs_classarmnn_1_1_i_layer_support"><td class="memItemLeft" align="right" valign="top">const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_i_layer_support.xhtml#afc8db3bfb13b523f94d8df0917940ba9">output</a></td></tr>
<tr class="separator:afc8db3bfb13b523f94d8df0917940ba9 inherit pub_attribs_classarmnn_1_1_i_layer_support"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae88892fd128211c5c66f6b875f53e634 inherit pub_attribs_classarmnn_1_1_i_layer_support"><td class="memItemLeft" align="right" valign="top">const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> const <a class="el" href="structarmnn_1_1_q_lstm_descriptor.xhtml">QLstmDescriptor</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_i_layer_support.xhtml#ae88892fd128211c5c66f6b875f53e634">descriptor</a></td></tr>
<tr class="separator:ae88892fd128211c5c66f6b875f53e634 inherit pub_attribs_classarmnn_1_1_i_layer_support"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a671c5ab0aaf443061ecd29858eb0c27e inherit pub_attribs_classarmnn_1_1_i_layer_support"><td class="memItemLeft" align="right" valign="top">const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> const <a class="el" href="structarmnn_1_1_q_lstm_descriptor.xhtml">QLstmDescriptor</a> const <a class="el" href="structarmnn_1_1_lstm_input_params_info.xhtml">LstmInputParamsInfo</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_i_layer_support.xhtml#a671c5ab0aaf443061ecd29858eb0c27e">paramsInfo</a></td></tr>
<tr class="separator:a671c5ab0aaf443061ecd29858eb0c27e inherit pub_attribs_classarmnn_1_1_i_layer_support"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9ae68a93565a313b372c3454a281a30e inherit pub_attribs_classarmnn_1_1_i_layer_support"><td class="memItemLeft" align="right" valign="top">const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> const <a class="el" href="structarmnn_1_1_q_lstm_descriptor.xhtml">QLstmDescriptor</a> const <a class="el" href="structarmnn_1_1_lstm_input_params_info.xhtml">LstmInputParamsInfo</a> <a class="el" href="classarmnn_1_1_optional.xhtml">Optional</a>&lt; std::string &amp; &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_i_layer_support.xhtml#a9ae68a93565a313b372c3454a281a30e">reasonIfUnsupported</a> = <a class="el" href="structarmnn_1_1_empty_optional.xhtml">EmptyOptional</a>()) const</td></tr>
<tr class="separator:a9ae68a93565a313b372c3454a281a30e inherit pub_attribs_classarmnn_1_1_i_layer_support"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad996e1751e73c950760b7f2372a5f1b7 inherit pub_attribs_classarmnn_1_1_i_layer_support"><td class="memItemLeft" align="right" valign="top">const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_i_layer_support.xhtml#ad996e1751e73c950760b7f2372a5f1b7">previousCellStateIn</a></td></tr>
<tr class="separator:ad996e1751e73c950760b7f2372a5f1b7 inherit pub_attribs_classarmnn_1_1_i_layer_support"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aee968b67d55019bc399fd9305382c946 inherit pub_attribs_classarmnn_1_1_i_layer_support"><td class="memItemLeft" align="right" valign="top">const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_i_layer_support.xhtml#aee968b67d55019bc399fd9305382c946">previousOutputIn</a></td></tr>
<tr class="separator:aee968b67d55019bc399fd9305382c946 inherit pub_attribs_classarmnn_1_1_i_layer_support"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aab23b6d2020ea2dc447e70ae7a899b05 inherit pub_attribs_classarmnn_1_1_i_layer_support"><td class="memItemLeft" align="right" valign="top">const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_i_layer_support.xhtml#aab23b6d2020ea2dc447e70ae7a899b05">cellStateOut</a></td></tr>
<tr class="separator:aab23b6d2020ea2dc447e70ae7a899b05 inherit pub_attribs_classarmnn_1_1_i_layer_support"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9c883c1fe0ab4c6e0bb0cf1973e7bb86 inherit pub_attribs_classarmnn_1_1_i_layer_support"><td class="memItemLeft" align="right" valign="top">const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_i_layer_support.xhtml#a9c883c1fe0ab4c6e0bb0cf1973e7bb86">output</a></td></tr>
<tr class="separator:a9c883c1fe0ab4c6e0bb0cf1973e7bb86 inherit pub_attribs_classarmnn_1_1_i_layer_support"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6538a383d19e83aabba1aa625f608a8b inherit pub_attribs_classarmnn_1_1_i_layer_support"><td class="memItemLeft" align="right" valign="top">const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> const <a class="el" href="structarmnn_1_1_quantized_lstm_input_params_info.xhtml">QuantizedLstmInputParamsInfo</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_i_layer_support.xhtml#a6538a383d19e83aabba1aa625f608a8b">paramsInfo</a></td></tr>
<tr class="separator:a6538a383d19e83aabba1aa625f608a8b inherit pub_attribs_classarmnn_1_1_i_layer_support"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6c3d94577f10865f35c9e8a75b456e29 inherit pub_attribs_classarmnn_1_1_i_layer_support"><td class="memItemLeft" align="right" valign="top">const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> const <a class="el" href="structarmnn_1_1_quantized_lstm_input_params_info.xhtml">QuantizedLstmInputParamsInfo</a> <a class="el" href="classarmnn_1_1_optional.xhtml">Optional</a>&lt; std::string &amp; &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_i_layer_support.xhtml#a6c3d94577f10865f35c9e8a75b456e29">reasonIfUnsupported</a> = <a class="el" href="structarmnn_1_1_empty_optional.xhtml">EmptyOptional</a>()) const</td></tr>
<tr class="separator:a6c3d94577f10865f35c9e8a75b456e29 inherit pub_attribs_classarmnn_1_1_i_layer_support"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3a286560bd886ad2694d524d82bc6691 inherit pub_attribs_classarmnn_1_1_i_layer_support"><td class="memItemLeft" align="right" valign="top">const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> const <a class="el" href="structarmnn_1_1_reduce_descriptor.xhtml">ReduceDescriptor</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_i_layer_support.xhtml#a3a286560bd886ad2694d524d82bc6691">descriptor</a></td></tr>
<tr class="separator:a3a286560bd886ad2694d524d82bc6691 inherit pub_attribs_classarmnn_1_1_i_layer_support"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a22417051704e7e34a77b2aa84f81f447 inherit pub_attribs_classarmnn_1_1_i_layer_support"><td class="memItemLeft" align="right" valign="top">const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> const <a class="el" href="structarmnn_1_1_reduce_descriptor.xhtml">ReduceDescriptor</a> <a class="el" href="classarmnn_1_1_optional.xhtml">Optional</a>&lt; std::string &amp; &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_i_layer_support.xhtml#a22417051704e7e34a77b2aa84f81f447">reasonIfUnsupported</a> = <a class="el" href="structarmnn_1_1_empty_optional.xhtml">EmptyOptional</a>()) const</td></tr>
<tr class="separator:a22417051704e7e34a77b2aa84f81f447 inherit pub_attribs_classarmnn_1_1_i_layer_support"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8925984b66dd710f605a0787ec21a98c inherit pub_attribs_classarmnn_1_1_i_layer_support"><td class="memItemLeft" align="right" valign="top">const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> const <a class="el" href="structarmnn_1_1_reshape_descriptor.xhtml">ReshapeDescriptor</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_i_layer_support.xhtml#a8925984b66dd710f605a0787ec21a98c">descriptor</a></td></tr>
<tr class="separator:a8925984b66dd710f605a0787ec21a98c inherit pub_attribs_classarmnn_1_1_i_layer_support"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab56e5339be7133a62ac75257eb9ed457 inherit pub_attribs_classarmnn_1_1_i_layer_support"><td class="memItemLeft" align="right" valign="top">const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> const <a class="el" href="structarmnn_1_1_reshape_descriptor.xhtml">ReshapeDescriptor</a> <a class="el" href="classarmnn_1_1_optional.xhtml">Optional</a>&lt; std::string &amp; &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_i_layer_support.xhtml#ab56e5339be7133a62ac75257eb9ed457">reasonIfUnsupported</a> = <a class="el" href="structarmnn_1_1_empty_optional.xhtml">EmptyOptional</a>()) const</td></tr>
<tr class="separator:ab56e5339be7133a62ac75257eb9ed457 inherit pub_attribs_classarmnn_1_1_i_layer_support"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad80fdfd6b8520aad7f3b4e642770bb76 inherit pub_attribs_classarmnn_1_1_i_layer_support"><td class="memItemLeft" align="right" valign="top">const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> const <a class="el" href="structarmnn_1_1_resize_descriptor.xhtml">ResizeDescriptor</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_i_layer_support.xhtml#ad80fdfd6b8520aad7f3b4e642770bb76">descriptor</a></td></tr>
<tr class="separator:ad80fdfd6b8520aad7f3b4e642770bb76 inherit pub_attribs_classarmnn_1_1_i_layer_support"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa073ddc855c3a77e9abc6e2bcf385682 inherit pub_attribs_classarmnn_1_1_i_layer_support"><td class="memItemLeft" align="right" valign="top">const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> const <a class="el" href="structarmnn_1_1_resize_descriptor.xhtml">ResizeDescriptor</a> <a class="el" href="classarmnn_1_1_optional.xhtml">Optional</a>&lt; std::string &amp; &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_i_layer_support.xhtml#aa073ddc855c3a77e9abc6e2bcf385682">reasonIfUnsupported</a> = <a class="el" href="structarmnn_1_1_empty_optional.xhtml">EmptyOptional</a>()) const</td></tr>
<tr class="separator:aa073ddc855c3a77e9abc6e2bcf385682 inherit pub_attribs_classarmnn_1_1_i_layer_support"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3637b7ecf8b3ac293667439e68ca5e05 inherit pub_attribs_classarmnn_1_1_i_layer_support"><td class="memItemLeft" align="right" valign="top">const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> const <a class="el" href="structarmnn_1_1_slice_descriptor.xhtml">SliceDescriptor</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_i_layer_support.xhtml#a3637b7ecf8b3ac293667439e68ca5e05">descriptor</a></td></tr>
<tr class="separator:a3637b7ecf8b3ac293667439e68ca5e05 inherit pub_attribs_classarmnn_1_1_i_layer_support"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aec1ad6717dc6152700644e22663ae529 inherit pub_attribs_classarmnn_1_1_i_layer_support"><td class="memItemLeft" align="right" valign="top">const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> const <a class="el" href="structarmnn_1_1_slice_descriptor.xhtml">SliceDescriptor</a> <a class="el" href="classarmnn_1_1_optional.xhtml">Optional</a>&lt; std::string &amp; &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_i_layer_support.xhtml#aec1ad6717dc6152700644e22663ae529">reasonIfUnsupported</a> = <a class="el" href="structarmnn_1_1_empty_optional.xhtml">EmptyOptional</a>()) const</td></tr>
<tr class="separator:aec1ad6717dc6152700644e22663ae529 inherit pub_attribs_classarmnn_1_1_i_layer_support"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a052da8f6981ac7c0983b15d6fd255b67 inherit pub_attribs_classarmnn_1_1_i_layer_support"><td class="memItemLeft" align="right" valign="top">const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> const <a class="el" href="structarmnn_1_1_softmax_descriptor.xhtml">SoftmaxDescriptor</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_i_layer_support.xhtml#a052da8f6981ac7c0983b15d6fd255b67">descriptor</a></td></tr>
<tr class="separator:a052da8f6981ac7c0983b15d6fd255b67 inherit pub_attribs_classarmnn_1_1_i_layer_support"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aec2b0f9142a47b16e695d1e4c43b78c5 inherit pub_attribs_classarmnn_1_1_i_layer_support"><td class="memItemLeft" align="right" valign="top">const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> const <a class="el" href="structarmnn_1_1_softmax_descriptor.xhtml">SoftmaxDescriptor</a> <a class="el" href="classarmnn_1_1_optional.xhtml">Optional</a>&lt; std::string &amp; &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_i_layer_support.xhtml#aec2b0f9142a47b16e695d1e4c43b78c5">reasonIfUnsupported</a> = <a class="el" href="structarmnn_1_1_empty_optional.xhtml">EmptyOptional</a>()) const</td></tr>
<tr class="separator:aec2b0f9142a47b16e695d1e4c43b78c5 inherit pub_attribs_classarmnn_1_1_i_layer_support"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a99573c8d31f135ab27d42a2026b19dcd inherit pub_attribs_classarmnn_1_1_i_layer_support"><td class="memItemLeft" align="right" valign="top">const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> const <a class="el" href="structarmnn_1_1_space_to_batch_nd_descriptor.xhtml">SpaceToBatchNdDescriptor</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_i_layer_support.xhtml#a99573c8d31f135ab27d42a2026b19dcd">descriptor</a></td></tr>
<tr class="separator:a99573c8d31f135ab27d42a2026b19dcd inherit pub_attribs_classarmnn_1_1_i_layer_support"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad3231c01123af9b82028f8d82295f4df inherit pub_attribs_classarmnn_1_1_i_layer_support"><td class="memItemLeft" align="right" valign="top">const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> const <a class="el" href="structarmnn_1_1_space_to_batch_nd_descriptor.xhtml">SpaceToBatchNdDescriptor</a> <a class="el" href="classarmnn_1_1_optional.xhtml">Optional</a>&lt; std::string &amp; &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_i_layer_support.xhtml#ad3231c01123af9b82028f8d82295f4df">reasonIfUnsupported</a> = <a class="el" href="structarmnn_1_1_empty_optional.xhtml">EmptyOptional</a>()) const</td></tr>
<tr class="separator:ad3231c01123af9b82028f8d82295f4df inherit pub_attribs_classarmnn_1_1_i_layer_support"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a33fc1676a91f2295365e18b00311a7f1 inherit pub_attribs_classarmnn_1_1_i_layer_support"><td class="memItemLeft" align="right" valign="top">const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> const <a class="el" href="structarmnn_1_1_space_to_depth_descriptor.xhtml">SpaceToDepthDescriptor</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_i_layer_support.xhtml#a33fc1676a91f2295365e18b00311a7f1">descriptor</a></td></tr>
<tr class="separator:a33fc1676a91f2295365e18b00311a7f1 inherit pub_attribs_classarmnn_1_1_i_layer_support"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab39984d1114858f962d5d770640fa5c6 inherit pub_attribs_classarmnn_1_1_i_layer_support"><td class="memItemLeft" align="right" valign="top">const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> const <a class="el" href="structarmnn_1_1_space_to_depth_descriptor.xhtml">SpaceToDepthDescriptor</a> <a class="el" href="classarmnn_1_1_optional.xhtml">Optional</a>&lt; std::string &amp; &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_i_layer_support.xhtml#ab39984d1114858f962d5d770640fa5c6">reasonIfUnsupported</a> = <a class="el" href="structarmnn_1_1_empty_optional.xhtml">EmptyOptional</a>()) const</td></tr>
<tr class="separator:ab39984d1114858f962d5d770640fa5c6 inherit pub_attribs_classarmnn_1_1_i_layer_support"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a311602de6b1e53b4feb3b8a37a433f44 inherit pub_attribs_classarmnn_1_1_i_layer_support"><td class="memItemLeft" align="right" valign="top">const std::vector&lt; std::reference_wrapper&lt; <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &gt; &gt; &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_i_layer_support.xhtml#a311602de6b1e53b4feb3b8a37a433f44">outputs</a></td></tr>
<tr class="separator:a311602de6b1e53b4feb3b8a37a433f44 inherit pub_attribs_classarmnn_1_1_i_layer_support"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9973ef4f89338f01171369b4fb64cf93 inherit pub_attribs_classarmnn_1_1_i_layer_support"><td class="memItemLeft" align="right" valign="top">const std::vector&lt; std::reference_wrapper&lt; <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &gt; &gt; const <a class="el" href="structarmnn_1_1_views_descriptor.xhtml">ViewsDescriptor</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_i_layer_support.xhtml#a9973ef4f89338f01171369b4fb64cf93">descriptor</a></td></tr>
<tr class="separator:a9973ef4f89338f01171369b4fb64cf93 inherit pub_attribs_classarmnn_1_1_i_layer_support"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab6be296df135df66f2a0f81ef6696bcc inherit pub_attribs_classarmnn_1_1_i_layer_support"><td class="memItemLeft" align="right" valign="top">const std::vector&lt; std::reference_wrapper&lt; <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &gt; &gt; const <a class="el" href="structarmnn_1_1_views_descriptor.xhtml">ViewsDescriptor</a> <a class="el" href="classarmnn_1_1_optional.xhtml">Optional</a>&lt; std::string &amp; &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_i_layer_support.xhtml#ab6be296df135df66f2a0f81ef6696bcc">reasonIfUnsupported</a> = <a class="el" href="structarmnn_1_1_empty_optional.xhtml">EmptyOptional</a>()) const</td></tr>
<tr class="separator:ab6be296df135df66f2a0f81ef6696bcc inherit pub_attribs_classarmnn_1_1_i_layer_support"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab654ce5248a347e0b5e5a22ec181a5f5 inherit pub_attribs_classarmnn_1_1_i_layer_support"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classarmnn_1_1_i_layer_support.xhtml#abbfb82bfc5144e893e11597c535325e4">ARMNN_DEPRECATED_MSG_REMOVAL_DATE</a>(&quot;This method is deprecated. &quot; &quot;Use ABI Stable <a class="el" href="classarmnn_1_1_i_layer_support.xhtml#ac65dd8d3d726c22b135ffdaaf0fac33e">IsLayerSupported</a> accepting <a class="el" href="namespacearmnn.xhtml#a56943a0946e5f15e5e58054b8e7a04a4">LayerType</a> argument instead.&quot;, &quot;22.11&quot;) virtual bool <a class="el" href="namespacearmnn.xhtml#a10e8442be2b8596afd5770e98b904caa">IsStackSupported</a>(const std <a class="el" href="classarmnn_1_1_i_layer_support.xhtml#abbfb82bfc5144e893e11597c535325e4">ARMNN_DEPRECATED_MSG_REMOVAL_DATE</a>(&quot;This method is deprecated. &quot; &quot;Use ABI Stable <a class="el" href="classarmnn_1_1_i_layer_support.xhtml#ac65dd8d3d726c22b135ffdaaf0fac33e">IsLayerSupported</a> accepting <a class="el" href="namespacearmnn.xhtml#a56943a0946e5f15e5e58054b8e7a04a4">LayerType</a> argument instead.&quot;, &quot;22.11&quot;) virtual bool IsStandInSupported(const std const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_i_layer_support.xhtml#ab654ce5248a347e0b5e5a22ec181a5f5">output</a></td></tr>
<tr class="separator:ab654ce5248a347e0b5e5a22ec181a5f5 inherit pub_attribs_classarmnn_1_1_i_layer_support"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:abe3da148086f5482f5cec6928c40dc30 inherit pub_attribs_classarmnn_1_1_i_layer_support"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classarmnn_1_1_i_layer_support.xhtml#abbfb82bfc5144e893e11597c535325e4">ARMNN_DEPRECATED_MSG_REMOVAL_DATE</a>(&quot;This method is deprecated. &quot; &quot;Use ABI Stable <a class="el" href="classarmnn_1_1_i_layer_support.xhtml#ac65dd8d3d726c22b135ffdaaf0fac33e">IsLayerSupported</a> accepting <a class="el" href="namespacearmnn.xhtml#a56943a0946e5f15e5e58054b8e7a04a4">LayerType</a> argument instead.&quot;, &quot;22.11&quot;) virtual bool <a class="el" href="namespacearmnn.xhtml#a10e8442be2b8596afd5770e98b904caa">IsStackSupported</a>(const std <a class="el" href="classarmnn_1_1_i_layer_support.xhtml#abbfb82bfc5144e893e11597c535325e4">ARMNN_DEPRECATED_MSG_REMOVAL_DATE</a>(&quot;This method is deprecated. &quot; &quot;Use ABI Stable <a class="el" href="classarmnn_1_1_i_layer_support.xhtml#ac65dd8d3d726c22b135ffdaaf0fac33e">IsLayerSupported</a> accepting <a class="el" href="namespacearmnn.xhtml#a56943a0946e5f15e5e58054b8e7a04a4">LayerType</a> argument instead.&quot;, &quot;22.11&quot;) virtual bool IsStandInSupported(const std const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> const <a class="el" href="structarmnn_1_1_strided_slice_descriptor.xhtml">StridedSliceDescriptor</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_i_layer_support.xhtml#abe3da148086f5482f5cec6928c40dc30">descriptor</a></td></tr>
<tr class="separator:abe3da148086f5482f5cec6928c40dc30 inherit pub_attribs_classarmnn_1_1_i_layer_support"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9a39cd9dba8140c10f06b348384bd29a inherit pub_attribs_classarmnn_1_1_i_layer_support"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classarmnn_1_1_i_layer_support.xhtml#abbfb82bfc5144e893e11597c535325e4">ARMNN_DEPRECATED_MSG_REMOVAL_DATE</a>(&quot;This method is deprecated. &quot; &quot;Use ABI Stable <a class="el" href="classarmnn_1_1_i_layer_support.xhtml#ac65dd8d3d726c22b135ffdaaf0fac33e">IsLayerSupported</a> accepting <a class="el" href="namespacearmnn.xhtml#a56943a0946e5f15e5e58054b8e7a04a4">LayerType</a> argument instead.&quot;, &quot;22.11&quot;) virtual bool <a class="el" href="namespacearmnn.xhtml#a10e8442be2b8596afd5770e98b904caa">IsStackSupported</a>(const std <a class="el" href="classarmnn_1_1_i_layer_support.xhtml#abbfb82bfc5144e893e11597c535325e4">ARMNN_DEPRECATED_MSG_REMOVAL_DATE</a>(&quot;This method is deprecated. &quot; &quot;Use ABI Stable <a class="el" href="classarmnn_1_1_i_layer_support.xhtml#ac65dd8d3d726c22b135ffdaaf0fac33e">IsLayerSupported</a> accepting <a class="el" href="namespacearmnn.xhtml#a56943a0946e5f15e5e58054b8e7a04a4">LayerType</a> argument instead.&quot;, &quot;22.11&quot;) virtual bool IsStandInSupported(const std const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> const <a class="el" href="structarmnn_1_1_strided_slice_descriptor.xhtml">StridedSliceDescriptor</a> <a class="el" href="classarmnn_1_1_optional.xhtml">Optional</a>&lt; std::string &amp; &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_i_layer_support.xhtml#a9a39cd9dba8140c10f06b348384bd29a">reasonIfUnsupported</a> = <a class="el" href="structarmnn_1_1_empty_optional.xhtml">EmptyOptional</a>()) const</td></tr>
<tr class="separator:a9a39cd9dba8140c10f06b348384bd29a inherit pub_attribs_classarmnn_1_1_i_layer_support"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5c2243c4c3b723129082dd38daf0387f inherit pub_attribs_classarmnn_1_1_i_layer_support"><td class="memItemLeft" align="right" valign="top">const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_i_layer_support.xhtml#a5c2243c4c3b723129082dd38daf0387f">output0</a></td></tr>
<tr class="separator:a5c2243c4c3b723129082dd38daf0387f inherit pub_attribs_classarmnn_1_1_i_layer_support"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a53e5afe9ffb176f1f3c98a4222ceb2b9 inherit pub_attribs_classarmnn_1_1_i_layer_support"><td class="memItemLeft" align="right" valign="top">const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_i_layer_support.xhtml#a53e5afe9ffb176f1f3c98a4222ceb2b9">output1</a></td></tr>
<tr class="separator:a53e5afe9ffb176f1f3c98a4222ceb2b9 inherit pub_attribs_classarmnn_1_1_i_layer_support"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa3a9012fc339e9bfc9e5e3d84805653e inherit pub_attribs_classarmnn_1_1_i_layer_support"><td class="memItemLeft" align="right" valign="top">const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> <a class="el" href="classarmnn_1_1_optional.xhtml">Optional</a>&lt; std::string &amp; &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_i_layer_support.xhtml#aa3a9012fc339e9bfc9e5e3d84805653e">reasonIfUnsupported</a> = <a class="el" href="structarmnn_1_1_empty_optional.xhtml">EmptyOptional</a>()) const</td></tr>
<tr class="separator:aa3a9012fc339e9bfc9e5e3d84805653e inherit pub_attribs_classarmnn_1_1_i_layer_support"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aed34ce46eb939133d71d4f47ee39df22 inherit pub_attribs_classarmnn_1_1_i_layer_support"><td class="memItemLeft" align="right" valign="top">const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> const <a class="el" href="structarmnn_1_1_transpose_convolution2d_descriptor.xhtml">TransposeConvolution2dDescriptor</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_i_layer_support.xhtml#aed34ce46eb939133d71d4f47ee39df22">descriptor</a></td></tr>
<tr class="separator:aed34ce46eb939133d71d4f47ee39df22 inherit pub_attribs_classarmnn_1_1_i_layer_support"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:afc7d09b6ee3bd1d5d07ff8b2f3a16ec3 inherit pub_attribs_classarmnn_1_1_i_layer_support"><td class="memItemLeft" align="right" valign="top">const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> const <a class="el" href="structarmnn_1_1_transpose_convolution2d_descriptor.xhtml">TransposeConvolution2dDescriptor</a> const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_i_layer_support.xhtml#afc7d09b6ee3bd1d5d07ff8b2f3a16ec3">weights</a></td></tr>
<tr class="separator:afc7d09b6ee3bd1d5d07ff8b2f3a16ec3 inherit pub_attribs_classarmnn_1_1_i_layer_support"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2daef2df1f67976f598368fe21ac9154 inherit pub_attribs_classarmnn_1_1_i_layer_support"><td class="memItemLeft" align="right" valign="top">const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> const <a class="el" href="structarmnn_1_1_transpose_convolution2d_descriptor.xhtml">TransposeConvolution2dDescriptor</a> const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> const <a class="el" href="classarmnn_1_1_optional.xhtml">Optional</a>&lt; <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &gt; &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_i_layer_support.xhtml#a2daef2df1f67976f598368fe21ac9154">biases</a></td></tr>
<tr class="separator:a2daef2df1f67976f598368fe21ac9154 inherit pub_attribs_classarmnn_1_1_i_layer_support"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2f103a30a0d120c7984c507ceb20b2d6 inherit pub_attribs_classarmnn_1_1_i_layer_support"><td class="memItemLeft" align="right" valign="top">const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> const <a class="el" href="structarmnn_1_1_transpose_convolution2d_descriptor.xhtml">TransposeConvolution2dDescriptor</a> const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> const <a class="el" href="classarmnn_1_1_optional.xhtml">Optional</a>&lt; <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &gt; <a class="el" href="classarmnn_1_1_optional.xhtml">Optional</a>&lt; std::string &amp; &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_i_layer_support.xhtml#a2f103a30a0d120c7984c507ceb20b2d6">reasonIfUnsupported</a> = <a class="el" href="structarmnn_1_1_empty_optional.xhtml">EmptyOptional</a>()) const</td></tr>
<tr class="separator:a2f103a30a0d120c7984c507ceb20b2d6 inherit pub_attribs_classarmnn_1_1_i_layer_support"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7cbc317bc6d7c12e54f852cd20636840 inherit pub_attribs_classarmnn_1_1_i_layer_support"><td class="memItemLeft" align="right" valign="top">const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> const <a class="el" href="structarmnn_1_1_transpose_descriptor.xhtml">TransposeDescriptor</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_i_layer_support.xhtml#a7cbc317bc6d7c12e54f852cd20636840">descriptor</a></td></tr>
<tr class="separator:a7cbc317bc6d7c12e54f852cd20636840 inherit pub_attribs_classarmnn_1_1_i_layer_support"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac0046a9c32fc1066cc22eaaee8876d41 inherit pub_attribs_classarmnn_1_1_i_layer_support"><td class="memItemLeft" align="right" valign="top">const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> const <a class="el" href="structarmnn_1_1_transpose_descriptor.xhtml">TransposeDescriptor</a> <a class="el" href="classarmnn_1_1_optional.xhtml">Optional</a>&lt; std::string &amp; &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_i_layer_support.xhtml#ac0046a9c32fc1066cc22eaaee8876d41">reasonIfUnsupported</a> = <a class="el" href="structarmnn_1_1_empty_optional.xhtml">EmptyOptional</a>()) const</td></tr>
<tr class="separator:ac0046a9c32fc1066cc22eaaee8876d41 inherit pub_attribs_classarmnn_1_1_i_layer_support"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a88889983d2422e584ae1ca5b2385ec4c inherit pub_attribs_classarmnn_1_1_i_layer_support"><td class="memItemLeft" align="right" valign="top">const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> const <a class="el" href="structarmnn_1_1_lstm_descriptor.xhtml">LstmDescriptor</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_i_layer_support.xhtml#a88889983d2422e584ae1ca5b2385ec4c">descriptor</a></td></tr>
<tr class="separator:a88889983d2422e584ae1ca5b2385ec4c inherit pub_attribs_classarmnn_1_1_i_layer_support"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a540c4a7d2defc036c939d2caaaefffce inherit pub_attribs_classarmnn_1_1_i_layer_support"><td class="memItemLeft" align="right" valign="top">const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> const <a class="el" href="structarmnn_1_1_lstm_descriptor.xhtml">LstmDescriptor</a> const <a class="el" href="structarmnn_1_1_lstm_input_params_info.xhtml">LstmInputParamsInfo</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_i_layer_support.xhtml#a540c4a7d2defc036c939d2caaaefffce">paramsInfo</a></td></tr>
<tr class="separator:a540c4a7d2defc036c939d2caaaefffce inherit pub_attribs_classarmnn_1_1_i_layer_support"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a145611e87292ec30a1458ac5ae426787 inherit pub_attribs_classarmnn_1_1_i_layer_support"><td class="memItemLeft" align="right" valign="top">const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> const <a class="el" href="structarmnn_1_1_lstm_descriptor.xhtml">LstmDescriptor</a> const <a class="el" href="structarmnn_1_1_lstm_input_params_info.xhtml">LstmInputParamsInfo</a> <a class="el" href="classarmnn_1_1_optional.xhtml">Optional</a>&lt; std::string &amp; &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_i_layer_support.xhtml#a145611e87292ec30a1458ac5ae426787">reasonIfUnsupported</a> = <a class="el" href="structarmnn_1_1_empty_optional.xhtml">EmptyOptional</a>()) const</td></tr>
<tr class="separator:a145611e87292ec30a1458ac5ae426787 inherit pub_attribs_classarmnn_1_1_i_layer_support"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pro_methods_classarmnn_1_1_i_layer_support"><td colspan="2" onclick="javascript:toggleInherit('pro_methods_classarmnn_1_1_i_layer_support')"><img src="closed.png" alt="-"/>&#160;Protected Member Functions inherited from <a class="el" href="classarmnn_1_1_i_layer_support.xhtml">ILayerSupport</a></td></tr>
<tr class="memitem:aab2a487bc88047443d8a0f87c3c40b8d inherit pro_methods_classarmnn_1_1_i_layer_support"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_i_layer_support.xhtml#aab2a487bc88047443d8a0f87c3c40b8d">ILayerSupport</a> ()</td></tr>
<tr class="separator:aab2a487bc88047443d8a0f87c3c40b8d inherit pro_methods_classarmnn_1_1_i_layer_support"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9e7f4f28576904804cd759e49173beeb inherit pro_methods_classarmnn_1_1_i_layer_support"><td class="memItemLeft" align="right" valign="top">virtual&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_i_layer_support.xhtml#a9e7f4f28576904804cd759e49173beeb">~ILayerSupport</a> ()</td></tr>
<tr class="separator:a9e7f4f28576904804cd759e49173beeb inherit pro_methods_classarmnn_1_1_i_layer_support"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock">
<p class="definition">Definition at line <a class="el" href="_mock_import_layer_support_8hpp_source.xhtml#l00014">14</a> of file <a class="el" href="_mock_import_layer_support_8hpp_source.xhtml">MockImportLayerSupport.hpp</a>.</p>
</div><h2 class="groupheader">Member Function Documentation</h2>
<a id="a48177e22e47448adb3d83e145dadf735"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a48177e22e47448adb3d83e145dadf735">&#9670;&nbsp;</a></span>IsAdditionSupported()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool IsAdditionSupported </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;&#160;</td>
          <td class="paramname"><em>input0</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;&#160;</td>
          <td class="paramname"><em>input1</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;&#160;</td>
          <td class="paramname"><em>output</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="classarmnn_1_1_optional.xhtml">Optional</a>&lt; std::string &amp;&gt;&#160;</td>
          <td class="paramname"><em>reasonIfUnsupported</em> = <code><a class="el" href="structarmnn_1_1_empty_optional.xhtml">EmptyOptional</a>()</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">override</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_mock_import_layer_support_8hpp_source.xhtml#l00041">41</a> of file <a class="el" href="_mock_import_layer_support_8hpp_source.xhtml">MockImportLayerSupport.hpp</a>.</p>

<p class="reference">References <a class="el" href="_ignore_unused_8hpp_source.xhtml#l00014">armnn::IgnoreUnused()</a>, and <a class="el" href="_i_layer_support_8hpp_source.xhtml#l00043">ILayerSupport::reasonIfUnsupported</a>.</p>

<p class="reference">Referenced by <a class="el" href="_mock_import_layer_support_8hpp_source.xhtml#l00017">MockImportLayerSupport::IsLayerSupported()</a>.</p>
<div class="fragment"><div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;    {</div><div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;        <a class="code" href="namespacearmnn.xhtml#a44affeeb090c3c6a3062830562672e84">IgnoreUnused</a>(input0);</div><div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;        <a class="code" href="namespacearmnn.xhtml#a44affeeb090c3c6a3062830562672e84">IgnoreUnused</a>(<a class="code" href="classarmnn_1_1_i_layer_support.xhtml#ab82416560ced17268c6ba4443a3aac5e">input1</a>);</div><div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;        <a class="code" href="namespacearmnn.xhtml#a44affeeb090c3c6a3062830562672e84">IgnoreUnused</a>(<a class="code" href="classarmnn_1_1_i_layer_support.xhtml#a4e25e081529b7e99e5e454d916ed83fb">output</a>);</div><div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;        <a class="code" href="namespacearmnn.xhtml#a44affeeb090c3c6a3062830562672e84">IgnoreUnused</a>(<a class="code" href="classarmnn_1_1_i_layer_support.xhtml#ac75f9a02b051716a0cc1cc0818dfe454">reasonIfUnsupported</a>);</div><div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;        <span class="keywordflow">return</span> <span class="keyword">true</span>;</div><div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;    }</div><div class="ttc" id="classarmnn_1_1_i_layer_support_xhtml_a4e25e081529b7e99e5e454d916ed83fb"><div class="ttname"><a href="classarmnn_1_1_i_layer_support.xhtml#a4e25e081529b7e99e5e454d916ed83fb">armnn::ILayerSupport::output</a></div><div class="ttdeci">const TensorInfo &amp; output</div><div class="ttdef"><b>Definition:</b> <a href="_i_layer_support_8hpp_source.xhtml#l00041">ILayerSupport.hpp:41</a></div></div>
<div class="ttc" id="classarmnn_1_1_i_layer_support_xhtml_ac75f9a02b051716a0cc1cc0818dfe454"><div class="ttname"><a href="classarmnn_1_1_i_layer_support.xhtml#ac75f9a02b051716a0cc1cc0818dfe454">armnn::ILayerSupport::reasonIfUnsupported</a></div><div class="ttdeci">const TensorInfo const ActivationDescriptor Optional&lt; std::string &amp; &gt; reasonIfUnsupported</div><div class="ttdef"><b>Definition:</b> <a href="_i_layer_support_8hpp_source.xhtml#l00043">ILayerSupport.hpp:43</a></div></div>
<div class="ttc" id="namespacearmnn_xhtml_a44affeeb090c3c6a3062830562672e84"><div class="ttname"><a href="namespacearmnn.xhtml#a44affeeb090c3c6a3062830562672e84">armnn::IgnoreUnused</a></div><div class="ttdeci">void IgnoreUnused(Ts &amp;&amp;...)</div><div class="ttdef"><b>Definition:</b> <a href="_ignore_unused_8hpp_source.xhtml#l00014">IgnoreUnused.hpp:14</a></div></div>
<div class="ttc" id="classarmnn_1_1_i_layer_support_xhtml_ab82416560ced17268c6ba4443a3aac5e"><div class="ttname"><a href="classarmnn_1_1_i_layer_support.xhtml#ab82416560ced17268c6ba4443a3aac5e">armnn::ILayerSupport::input1</a></div><div class="ttdeci">const TensorInfo &amp; input1</div><div class="ttdef"><b>Definition:</b> <a href="_i_layer_support_8hpp_source.xhtml#l00048">ILayerSupport.hpp:48</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="a49cf9ce84cb5e9624ad15ae1e78f9380"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a49cf9ce84cb5e9624ad15ae1e78f9380">&#9670;&nbsp;</a></span>IsInputSupported()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool IsInputSupported </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;&#160;</td>
          <td class="paramname"><em>input</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="classarmnn_1_1_optional.xhtml">Optional</a>&lt; std::string &amp;&gt;&#160;</td>
          <td class="paramname"><em>reasonIfUnsupported</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">override</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_mock_import_layer_support_8hpp_source.xhtml#l00053">53</a> of file <a class="el" href="_mock_import_layer_support_8hpp_source.xhtml">MockImportLayerSupport.hpp</a>.</p>

<p class="reference">References <a class="el" href="_ignore_unused_8hpp_source.xhtml#l00014">armnn::IgnoreUnused()</a>.</p>

<p class="reference">Referenced by <a class="el" href="_mock_import_layer_support_8hpp_source.xhtml#l00017">MockImportLayerSupport::IsLayerSupported()</a>.</p>
<div class="fragment"><div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;    {</div><div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;        <a class="code" href="namespacearmnn.xhtml#a44affeeb090c3c6a3062830562672e84">IgnoreUnused</a>(input);</div><div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;        <a class="code" href="namespacearmnn.xhtml#a44affeeb090c3c6a3062830562672e84">IgnoreUnused</a>(<a class="code" href="classarmnn_1_1_i_layer_support.xhtml#ac75f9a02b051716a0cc1cc0818dfe454">reasonIfUnsupported</a>);</div><div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;        <span class="keywordflow">return</span> <span class="keyword">true</span>;</div><div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;    }</div><div class="ttc" id="classarmnn_1_1_i_layer_support_xhtml_ac75f9a02b051716a0cc1cc0818dfe454"><div class="ttname"><a href="classarmnn_1_1_i_layer_support.xhtml#ac75f9a02b051716a0cc1cc0818dfe454">armnn::ILayerSupport::reasonIfUnsupported</a></div><div class="ttdeci">const TensorInfo const ActivationDescriptor Optional&lt; std::string &amp; &gt; reasonIfUnsupported</div><div class="ttdef"><b>Definition:</b> <a href="_i_layer_support_8hpp_source.xhtml#l00043">ILayerSupport.hpp:43</a></div></div>
<div class="ttc" id="namespacearmnn_xhtml_a44affeeb090c3c6a3062830562672e84"><div class="ttname"><a href="namespacearmnn.xhtml#a44affeeb090c3c6a3062830562672e84">armnn::IgnoreUnused</a></div><div class="ttdeci">void IgnoreUnused(Ts &amp;&amp;...)</div><div class="ttdef"><b>Definition:</b> <a href="_ignore_unused_8hpp_source.xhtml#l00014">IgnoreUnused.hpp:14</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="a329ddc3082ce25ddfcf33fab0dbf231c"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a329ddc3082ce25ddfcf33fab0dbf231c">&#9670;&nbsp;</a></span>IsLayerSupported()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool IsLayerSupported </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="namespacearmnn.xhtml#a56943a0946e5f15e5e58054b8e7a04a4">LayerType</a> &amp;&#160;</td>
          <td class="paramname"><em>type</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const std::vector&lt; <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &gt; &amp;&#160;</td>
          <td class="paramname"><em>infos</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="structarmnn_1_1_base_descriptor.xhtml">BaseDescriptor</a> &amp;&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_optional.xhtml">Optional</a>&lt; <a class="el" href="structarmnn_1_1_lstm_input_params_info.xhtml">LstmInputParamsInfo</a> &gt; &amp;&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_optional.xhtml">Optional</a>&lt; <a class="el" href="structarmnn_1_1_quantized_lstm_input_params_info.xhtml">QuantizedLstmInputParamsInfo</a> &gt; &amp;&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="classarmnn_1_1_optional.xhtml">Optional</a>&lt; std::string &amp;&gt;&#160;</td>
          <td class="paramname"><em>reasonIfUnsupported</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Reimplemented from <a class="el" href="classarmnn_1_1_layer_support_base.xhtml#a8424740ae08cca0a5548b598331f35a5">LayerSupportBase</a>.</p>

<p class="definition">Definition at line <a class="el" href="_mock_import_layer_support_8hpp_source.xhtml#l00017">17</a> of file <a class="el" href="_mock_import_layer_support_8hpp_source.xhtml">MockImportLayerSupport.hpp</a>.</p>

<p class="reference">References <a class="el" href="namespacearmnn.xhtml#a56943a0946e5f15e5e58054b8e7a04a4a7c5531bbefed0945814f874baf9e0e0f">armnn::Addition</a>, <a class="el" href="namespacearmnn.xhtml#a56943a0946e5f15e5e58054b8e7a04a4a324118a6721dd6b8a9b9f4e327df2bf5">armnn::Input</a>, <a class="el" href="_mock_import_layer_support_8hpp_source.xhtml#l00041">MockImportLayerSupport::IsAdditionSupported()</a>, <a class="el" href="_mock_import_layer_support_8hpp_source.xhtml#l00053">MockImportLayerSupport::IsInputSupported()</a>, <a class="el" href="_layer_support_base_8cpp_source.xhtml#l00405">LayerSupportBase::IsMemCopySupported()</a>, <a class="el" href="_layer_support_base_8cpp_source.xhtml#l00412">LayerSupportBase::IsMemImportSupported()</a>, <a class="el" href="_mock_import_layer_support_8hpp_source.xhtml#l00061">MockImportLayerSupport::IsOutputSupported()</a>, <a class="el" href="namespacearmnn.xhtml#a56943a0946e5f15e5e58054b8e7a04a4a4dd48794eb3305a0f5aece88b111a97b">armnn::MemCopy</a>, <a class="el" href="namespacearmnn.xhtml#a56943a0946e5f15e5e58054b8e7a04a4a115bfc5d633eae55c67f9588acdd2bf9">armnn::MemImport</a>, and <a class="el" href="namespacearmnn.xhtml#a56943a0946e5f15e5e58054b8e7a04a4a29c2c02a361c9d7028472e5d92cd4a54">armnn::Output</a>.</p>
<div class="fragment"><div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;    {</div><div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;        <span class="keywordflow">switch</span>(type)</div><div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;        {</div><div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;            <span class="keywordflow">case</span> <a class="code" href="namespacearmnn.xhtml#a56943a0946e5f15e5e58054b8e7a04a4a7c5531bbefed0945814f874baf9e0e0f">LayerType::Addition</a>:</div><div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;                <span class="keywordflow">return</span> <a class="code" href="classarmnn_1_1_mock_import_layer_support.xhtml#a48177e22e47448adb3d83e145dadf735">IsAdditionSupported</a>(infos[0], infos[1], infos[2], <a class="code" href="classarmnn_1_1_i_layer_support.xhtml#ac75f9a02b051716a0cc1cc0818dfe454">reasonIfUnsupported</a>);</div><div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;            <span class="keywordflow">case</span> <a class="code" href="namespacearmnn.xhtml#a56943a0946e5f15e5e58054b8e7a04a4a324118a6721dd6b8a9b9f4e327df2bf5">LayerType::Input</a>:</div><div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;                <span class="keywordflow">return</span> <a class="code" href="classarmnn_1_1_mock_import_layer_support.xhtml#a49cf9ce84cb5e9624ad15ae1e78f9380">IsInputSupported</a>(infos[0], <a class="code" href="classarmnn_1_1_i_layer_support.xhtml#ac75f9a02b051716a0cc1cc0818dfe454">reasonIfUnsupported</a>);</div><div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;            <span class="keywordflow">case</span> <a class="code" href="namespacearmnn.xhtml#a56943a0946e5f15e5e58054b8e7a04a4a29c2c02a361c9d7028472e5d92cd4a54">LayerType::Output</a>:</div><div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;                <span class="keywordflow">return</span> <a class="code" href="classarmnn_1_1_mock_import_layer_support.xhtml#a204bfa8f305f067b488e9c384c1ccd32">IsOutputSupported</a>(infos[0], <a class="code" href="classarmnn_1_1_i_layer_support.xhtml#ac75f9a02b051716a0cc1cc0818dfe454">reasonIfUnsupported</a>);</div><div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;            <span class="keywordflow">case</span> <a class="code" href="namespacearmnn.xhtml#a56943a0946e5f15e5e58054b8e7a04a4a4dd48794eb3305a0f5aece88b111a97b">LayerType::MemCopy</a>:</div><div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;                <span class="keywordflow">return</span> <a class="code" href="classarmnn_1_1_layer_support_base.xhtml#a9d25fabf725313fda40a41400155bafe">LayerSupportBase::IsMemCopySupported</a>(infos[0], infos[1], <a class="code" href="classarmnn_1_1_i_layer_support.xhtml#ac75f9a02b051716a0cc1cc0818dfe454">reasonIfUnsupported</a>);</div><div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;            <span class="keywordflow">case</span> <a class="code" href="namespacearmnn.xhtml#a56943a0946e5f15e5e58054b8e7a04a4a115bfc5d633eae55c67f9588acdd2bf9">LayerType::MemImport</a>:</div><div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;                <span class="keywordflow">return</span> <a class="code" href="classarmnn_1_1_layer_support_base.xhtml#a334181d8098b943d03ccd820753ace75">LayerSupportBase::IsMemImportSupported</a>(infos[0], infos[1], <a class="code" href="classarmnn_1_1_i_layer_support.xhtml#ac75f9a02b051716a0cc1cc0818dfe454">reasonIfUnsupported</a>);</div><div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;            <span class="keywordflow">default</span>:</div><div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;                <span class="keywordflow">return</span> <span class="keyword">false</span>;</div><div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;        }</div><div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;    }</div><div class="ttc" id="classarmnn_1_1_layer_support_base_xhtml_a334181d8098b943d03ccd820753ace75"><div class="ttname"><a href="classarmnn_1_1_layer_support_base.xhtml#a334181d8098b943d03ccd820753ace75">armnn::LayerSupportBase::IsMemImportSupported</a></div><div class="ttdeci">bool IsMemImportSupported(const TensorInfo &amp;input, const TensorInfo &amp;output, Optional&lt; std::string &amp;&gt; reasonIfUnsupported=EmptyOptional()) const override</div><div class="ttdef"><b>Definition:</b> <a href="_layer_support_base_8cpp_source.xhtml#l00412">LayerSupportBase.cpp:412</a></div></div>
<div class="ttc" id="namespacearmnn_xhtml_a56943a0946e5f15e5e58054b8e7a04a4a29c2c02a361c9d7028472e5d92cd4a54"><div class="ttname"><a href="namespacearmnn.xhtml#a56943a0946e5f15e5e58054b8e7a04a4a29c2c02a361c9d7028472e5d92cd4a54">armnn::LayerType::Output</a></div></div>
<div class="ttc" id="classarmnn_1_1_i_layer_support_xhtml_ac75f9a02b051716a0cc1cc0818dfe454"><div class="ttname"><a href="classarmnn_1_1_i_layer_support.xhtml#ac75f9a02b051716a0cc1cc0818dfe454">armnn::ILayerSupport::reasonIfUnsupported</a></div><div class="ttdeci">const TensorInfo const ActivationDescriptor Optional&lt; std::string &amp; &gt; reasonIfUnsupported</div><div class="ttdef"><b>Definition:</b> <a href="_i_layer_support_8hpp_source.xhtml#l00043">ILayerSupport.hpp:43</a></div></div>
<div class="ttc" id="namespacearmnn_xhtml_a56943a0946e5f15e5e58054b8e7a04a4a4dd48794eb3305a0f5aece88b111a97b"><div class="ttname"><a href="namespacearmnn.xhtml#a56943a0946e5f15e5e58054b8e7a04a4a4dd48794eb3305a0f5aece88b111a97b">armnn::LayerType::MemCopy</a></div></div>
<div class="ttc" id="namespacearmnn_xhtml_a56943a0946e5f15e5e58054b8e7a04a4a7c5531bbefed0945814f874baf9e0e0f"><div class="ttname"><a href="namespacearmnn.xhtml#a56943a0946e5f15e5e58054b8e7a04a4a7c5531bbefed0945814f874baf9e0e0f">armnn::LayerType::Addition</a></div></div>
<div class="ttc" id="classarmnn_1_1_layer_support_base_xhtml_a9d25fabf725313fda40a41400155bafe"><div class="ttname"><a href="classarmnn_1_1_layer_support_base.xhtml#a9d25fabf725313fda40a41400155bafe">armnn::LayerSupportBase::IsMemCopySupported</a></div><div class="ttdeci">bool IsMemCopySupported(const TensorInfo &amp;input, const TensorInfo &amp;output, Optional&lt; std::string &amp;&gt; reasonIfUnsupported=EmptyOptional()) const override</div><div class="ttdef"><b>Definition:</b> <a href="_layer_support_base_8cpp_source.xhtml#l00405">LayerSupportBase.cpp:405</a></div></div>
<div class="ttc" id="classarmnn_1_1_mock_import_layer_support_xhtml_a48177e22e47448adb3d83e145dadf735"><div class="ttname"><a href="classarmnn_1_1_mock_import_layer_support.xhtml#a48177e22e47448adb3d83e145dadf735">armnn::MockImportLayerSupport::IsAdditionSupported</a></div><div class="ttdeci">bool IsAdditionSupported(const TensorInfo &amp;input0, const TensorInfo &amp;input1, const TensorInfo &amp;output, Optional&lt; std::string &amp;&gt; reasonIfUnsupported=EmptyOptional()) const override</div><div class="ttdef"><b>Definition:</b> <a href="_mock_import_layer_support_8hpp_source.xhtml#l00041">MockImportLayerSupport.hpp:41</a></div></div>
<div class="ttc" id="namespacearmnn_xhtml_a56943a0946e5f15e5e58054b8e7a04a4a115bfc5d633eae55c67f9588acdd2bf9"><div class="ttname"><a href="namespacearmnn.xhtml#a56943a0946e5f15e5e58054b8e7a04a4a115bfc5d633eae55c67f9588acdd2bf9">armnn::LayerType::MemImport</a></div></div>
<div class="ttc" id="namespacearmnn_xhtml_a56943a0946e5f15e5e58054b8e7a04a4a324118a6721dd6b8a9b9f4e327df2bf5"><div class="ttname"><a href="namespacearmnn.xhtml#a56943a0946e5f15e5e58054b8e7a04a4a324118a6721dd6b8a9b9f4e327df2bf5">armnn::LayerType::Input</a></div></div>
<div class="ttc" id="classarmnn_1_1_mock_import_layer_support_xhtml_a49cf9ce84cb5e9624ad15ae1e78f9380"><div class="ttname"><a href="classarmnn_1_1_mock_import_layer_support.xhtml#a49cf9ce84cb5e9624ad15ae1e78f9380">armnn::MockImportLayerSupport::IsInputSupported</a></div><div class="ttdeci">bool IsInputSupported(const TensorInfo &amp;input, Optional&lt; std::string &amp;&gt; reasonIfUnsupported) const override</div><div class="ttdef"><b>Definition:</b> <a href="_mock_import_layer_support_8hpp_source.xhtml#l00053">MockImportLayerSupport.hpp:53</a></div></div>
<div class="ttc" id="classarmnn_1_1_mock_import_layer_support_xhtml_a204bfa8f305f067b488e9c384c1ccd32"><div class="ttname"><a href="classarmnn_1_1_mock_import_layer_support.xhtml#a204bfa8f305f067b488e9c384c1ccd32">armnn::MockImportLayerSupport::IsOutputSupported</a></div><div class="ttdeci">bool IsOutputSupported(const TensorInfo &amp;output, Optional&lt; std::string &amp;&gt; reasonIfUnsupported) const override</div><div class="ttdef"><b>Definition:</b> <a href="_mock_import_layer_support_8hpp_source.xhtml#l00061">MockImportLayerSupport.hpp:61</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="a204bfa8f305f067b488e9c384c1ccd32"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a204bfa8f305f067b488e9c384c1ccd32">&#9670;&nbsp;</a></span>IsOutputSupported()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool IsOutputSupported </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;&#160;</td>
          <td class="paramname"><em>output</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="classarmnn_1_1_optional.xhtml">Optional</a>&lt; std::string &amp;&gt;&#160;</td>
          <td class="paramname"><em>reasonIfUnsupported</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">override</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_mock_import_layer_support_8hpp_source.xhtml#l00061">61</a> of file <a class="el" href="_mock_import_layer_support_8hpp_source.xhtml">MockImportLayerSupport.hpp</a>.</p>

<p class="reference">References <a class="el" href="_ignore_unused_8hpp_source.xhtml#l00014">armnn::IgnoreUnused()</a>.</p>

<p class="reference">Referenced by <a class="el" href="_mock_import_layer_support_8hpp_source.xhtml#l00017">MockImportLayerSupport::IsLayerSupported()</a>.</p>
<div class="fragment"><div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;    {</div><div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;        <a class="code" href="namespacearmnn.xhtml#a44affeeb090c3c6a3062830562672e84">IgnoreUnused</a>(<a class="code" href="classarmnn_1_1_i_layer_support.xhtml#a4e25e081529b7e99e5e454d916ed83fb">output</a>);</div><div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;        <a class="code" href="namespacearmnn.xhtml#a44affeeb090c3c6a3062830562672e84">IgnoreUnused</a>(<a class="code" href="classarmnn_1_1_i_layer_support.xhtml#ac75f9a02b051716a0cc1cc0818dfe454">reasonIfUnsupported</a>);</div><div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;        <span class="keywordflow">return</span> <span class="keyword">true</span>;</div><div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;    }</div><div class="ttc" id="classarmnn_1_1_i_layer_support_xhtml_a4e25e081529b7e99e5e454d916ed83fb"><div class="ttname"><a href="classarmnn_1_1_i_layer_support.xhtml#a4e25e081529b7e99e5e454d916ed83fb">armnn::ILayerSupport::output</a></div><div class="ttdeci">const TensorInfo &amp; output</div><div class="ttdef"><b>Definition:</b> <a href="_i_layer_support_8hpp_source.xhtml#l00041">ILayerSupport.hpp:41</a></div></div>
<div class="ttc" id="classarmnn_1_1_i_layer_support_xhtml_ac75f9a02b051716a0cc1cc0818dfe454"><div class="ttname"><a href="classarmnn_1_1_i_layer_support.xhtml#ac75f9a02b051716a0cc1cc0818dfe454">armnn::ILayerSupport::reasonIfUnsupported</a></div><div class="ttdeci">const TensorInfo const ActivationDescriptor Optional&lt; std::string &amp; &gt; reasonIfUnsupported</div><div class="ttdef"><b>Definition:</b> <a href="_i_layer_support_8hpp_source.xhtml#l00043">ILayerSupport.hpp:43</a></div></div>
<div class="ttc" id="namespacearmnn_xhtml_a44affeeb090c3c6a3062830562672e84"><div class="ttname"><a href="namespacearmnn.xhtml#a44affeeb090c3c6a3062830562672e84">armnn::IgnoreUnused</a></div><div class="ttdeci">void IgnoreUnused(Ts &amp;&amp;...)</div><div class="ttdef"><b>Definition:</b> <a href="_ignore_unused_8hpp_source.xhtml#l00014">IgnoreUnused.hpp:14</a></div></div>
</div><!-- fragment -->
</div>
</div>
<hr/>The documentation for this class was generated from the following file:<ul>
<li>src/backends/backendsCommon/test/mockBackend/<a class="el" href="_mock_import_layer_support_8hpp_source.xhtml">MockImportLayerSupport.hpp</a></li>
</ul>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="namespacearmnn.xhtml">armnn</a></li><li class="navelem"><a class="el" href="classarmnn_1_1_mock_import_layer_support.xhtml">MockImportLayerSupport</a></li>
    <li class="footer">Generated on Fri Jun 17 2022 13:20:33 for ArmNN by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.13 </li>
  </ul>
</div>
</body>
</html>
