<!-- Copyright (c) 2020 ARM Limited. -->
<!--                                 -->
<!-- SPDX-License-Identifier: MIT    -->
<!--                                 -->
<!-- HTML header for doxygen 1.8.13-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.13"/>
<meta name="robots" content="NOINDEX, NOFOLLOW" />
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>ArmNN: src/profiling/ProfilingUtils.hpp Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script><script type="text/javascript" src="http://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="stylesheet.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <img alt="ArmNN" src="Arm_NN_horizontal_blue.png" style="max-width: 10rem; margin-top: .5rem; margin-left 10px"/>
  <td style="padding-left: 0.5em;">
   <div id="projectname">
   &#160;<span id="projectnumber">22.02</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.13 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
$(document).ready(function(){initNavTree('_profiling_utils_8hpp_source.xhtml','');});
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="headertitle">
<div class="title">ProfilingUtils.hpp</div>  </div>
</div><!--header-->
<div class="contents">
<a href="_profiling_utils_8hpp.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="comment">//</span></div><div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="comment">// Copyright Â© 2019 Arm Ltd and Contributors. All rights reserved.</span></div><div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="comment">// SPDX-License-Identifier: MIT</span></div><div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="comment">//</span></div><div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;</div><div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="preprocessor">#pragma once</span></div><div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;</div><div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="preprocessor">#include &lt;<a class="code" href="_exceptions_8hpp.xhtml">armnn/Exceptions.hpp</a>&gt;</span></div><div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="preprocessor">#include &lt;<a class="code" href="_i_send_timeline_packet_8hpp.xhtml">armnn/profiling/ISendTimelinePacket.hpp</a>&gt;</span></div><div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;</div><div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;<span class="preprocessor">#include &lt;<a class="code" href="_numeric_cast_8hpp.xhtml">armnn/utility/NumericCast.hpp</a>&gt;</span></div><div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;</div><div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_i_counter_directory_8hpp.xhtml">ICounterDirectory.hpp</a>&quot;</span></div><div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_i_packet_buffer_8hpp.xhtml">IPacketBuffer.hpp</a>&quot;</span></div><div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;</div><div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;<span class="preprocessor">#include &lt;common/include/Packet.hpp&gt;</span></div><div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;</div><div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;<span class="preprocessor">#include &lt;algorithm&gt;</span></div><div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;<span class="preprocessor">#include &lt;cstring&gt;</span></div><div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;<span class="preprocessor">#include &lt;memory&gt;</span></div><div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;<span class="preprocessor">#include &lt;string&gt;</span></div><div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;<span class="preprocessor">#include &lt;thread&gt;</span></div><div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;<span class="preprocessor">#include &lt;vector&gt;</span></div><div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;</div><div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;<span class="keyword">namespace </span><a class="code" href="namespacearmnn.xhtml">armnn</a></div><div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;{</div><div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;</div><div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;<span class="keyword">namespace </span>profiling</div><div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;{</div><div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;</div><div class="line"><a name="l00031"></a><span class="lineno"><a class="line" href="namespacearmnn_1_1profiling.xhtml#a6272d5d5e3a8afa0a402e9aafd19aedf">   31</a></span>&#160;constexpr <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> <a class="code" href="namespacearmnn_1_1profiling.xhtml#a6272d5d5e3a8afa0a402e9aafd19aedf">ThreadIdSize</a> = <span class="keyword">sizeof</span>(int); <span class="comment">// Is platform dependent</span></div><div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;</div><div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;uint16_t <a class="code" href="namespacearmnn_1_1profiling.xhtml#a982b094fe2faa67a3560cdaf3901d0f8">GetNextUid</a>(<span class="keywordtype">bool</span> peekOnly = <span class="keyword">false</span>);</div><div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;</div><div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;std::vector&lt;uint16_t&gt; <a class="code" href="namespacearmnn_1_1profiling.xhtml#a6605c82bc625fbd40f24d35edee15fe3">GetNextCounterUids</a>(uint16_t firstUid, uint16_t cores);</div><div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;</div><div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;<span class="keywordtype">void</span> <a class="code" href="namespacearmnn_1_1profiling.xhtml#af0cddaa4e116d294dacaaced90ca341c">WriteBytes</a>(<span class="keyword">const</span> <a class="code" href="classarmnn_1_1profiling_1_1_i_packet_buffer.xhtml">IPacketBuffer</a>&amp; packetBuffer, <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> offset, <span class="keyword">const</span> <span class="keywordtype">void</span>* value, <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> valueSize);</div><div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;</div><div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;uint32_t <a class="code" href="namespacearmnn_1_1profiling.xhtml#a750935094e7dc62a6ce69be8688ee9fc">ConstructHeader</a>(uint32_t packetFamily, uint32_t packetId);</div><div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;</div><div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;uint32_t <a class="code" href="namespacearmnn_1_1profiling.xhtml#a750935094e7dc62a6ce69be8688ee9fc">ConstructHeader</a>(uint32_t packetFamily, uint32_t packetClass, uint32_t packetType);</div><div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;</div><div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;<span class="keywordtype">void</span> <a class="code" href="namespacearmnn_1_1profiling.xhtml#a79be042e55fdf16ca562f14cd15d9aa6">WriteUint64</a>(<span class="keyword">const</span> <a class="code" href="namespacearmnn_1_1profiling.xhtml#a14328d977cec3abadcfd5935f04f3409">IPacketBufferPtr</a>&amp; packetBuffer, <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> offset, uint64_t value);</div><div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;</div><div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;<span class="keywordtype">void</span> <a class="code" href="namespacearmnn_1_1profiling.xhtml#a3e638748a39d46e2943dfcef94dcb828">WriteUint32</a>(<span class="keyword">const</span> <a class="code" href="namespacearmnn_1_1profiling.xhtml#a14328d977cec3abadcfd5935f04f3409">IPacketBufferPtr</a>&amp; packetBuffer, <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> offset, uint32_t value);</div><div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;</div><div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;<span class="keywordtype">void</span> <a class="code" href="namespacearmnn_1_1profiling.xhtml#ae5ace88c65e65ab7cf5572613601a60d">WriteUint16</a>(<span class="keyword">const</span> <a class="code" href="namespacearmnn_1_1profiling.xhtml#a14328d977cec3abadcfd5935f04f3409">IPacketBufferPtr</a>&amp; packetBuffer, <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> offset, uint16_t value);</div><div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;</div><div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;<span class="keywordtype">void</span> <a class="code" href="namespacearmnn_1_1profiling.xhtml#af63b6e5ffc769286c32d55a090b1602a">WriteUint8</a>(<span class="keyword">const</span> <a class="code" href="namespacearmnn_1_1profiling.xhtml#a14328d977cec3abadcfd5935f04f3409">IPacketBufferPtr</a>&amp; packetBuffer, <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> offset, uint8_t value);</div><div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;</div><div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;<span class="keywordtype">void</span> <a class="code" href="namespacearmnn_1_1profiling.xhtml#af0cddaa4e116d294dacaaced90ca341c">WriteBytes</a>(<span class="keywordtype">unsigned</span> <span class="keywordtype">char</span>* buffer, <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> offset, <span class="keyword">const</span> <span class="keywordtype">void</span>* value, <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> valueSize);</div><div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;</div><div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;<span class="keywordtype">void</span> <a class="code" href="namespacearmnn_1_1profiling.xhtml#a79be042e55fdf16ca562f14cd15d9aa6">WriteUint64</a>(<span class="keywordtype">unsigned</span> <span class="keywordtype">char</span>* buffer, <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> offset, uint64_t value);</div><div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;</div><div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;<span class="keywordtype">void</span> <a class="code" href="namespacearmnn_1_1profiling.xhtml#a3e638748a39d46e2943dfcef94dcb828">WriteUint32</a>(<span class="keywordtype">unsigned</span> <span class="keywordtype">char</span>* buffer, <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> offset, uint32_t value);</div><div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;</div><div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;<span class="keywordtype">void</span> <a class="code" href="namespacearmnn_1_1profiling.xhtml#ae5ace88c65e65ab7cf5572613601a60d">WriteUint16</a>(<span class="keywordtype">unsigned</span> <span class="keywordtype">char</span>* buffer, <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> offset, uint16_t value);</div><div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;</div><div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;<span class="keywordtype">void</span> <a class="code" href="namespacearmnn_1_1profiling.xhtml#af63b6e5ffc769286c32d55a090b1602a">WriteUint8</a>(<span class="keywordtype">unsigned</span> <span class="keywordtype">char</span>* buffer, <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> offset, uint8_t value);</div><div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;</div><div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;<span class="keywordtype">void</span> <a class="code" href="namespacearmnn_1_1profiling.xhtml#a097646e1b460c992b553061a3436fb47">ReadBytes</a>(<span class="keyword">const</span> <a class="code" href="namespacearmnn_1_1profiling.xhtml#a14328d977cec3abadcfd5935f04f3409">IPacketBufferPtr</a>&amp; packetBuffer, <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> offset, <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> valueSize, uint8_t outValue[]);</div><div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;</div><div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;uint64_t <a class="code" href="namespacearmnn_1_1profiling.xhtml#aa4de2b511faa41accc2c35cadf051124">ReadUint64</a>(<span class="keyword">const</span> <a class="code" href="namespacearmnn_1_1profiling.xhtml#a14328d977cec3abadcfd5935f04f3409">IPacketBufferPtr</a>&amp; packetBuffer, <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> offset);</div><div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;</div><div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;uint32_t <a class="code" href="namespacearmnn_1_1profiling.xhtml#ad56f4c3ea5e88279bb6ef1f31d9dc6df">ReadUint32</a>(<span class="keyword">const</span> <a class="code" href="namespacearmnn_1_1profiling.xhtml#a14328d977cec3abadcfd5935f04f3409">IPacketBufferPtr</a>&amp; packetBuffer, <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> offset);</div><div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;</div><div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;uint16_t <a class="code" href="namespacearmnn_1_1profiling.xhtml#a0ffb94cb0085a54a92f1c4eeaa6cf772">ReadUint16</a>(<span class="keyword">const</span> <a class="code" href="namespacearmnn_1_1profiling.xhtml#a14328d977cec3abadcfd5935f04f3409">IPacketBufferPtr</a>&amp; packetBuffer, <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> offset);</div><div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;</div><div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;uint8_t <a class="code" href="namespacearmnn_1_1profiling.xhtml#a74b483b652cc32f03151b10a1366d607">ReadUint8</a>(<span class="keyword">const</span> <a class="code" href="namespacearmnn_1_1profiling.xhtml#a14328d977cec3abadcfd5935f04f3409">IPacketBufferPtr</a>&amp; packetBuffer, <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> offset);</div><div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;</div><div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;<span class="keywordtype">void</span> <a class="code" href="namespacearmnn_1_1profiling.xhtml#a097646e1b460c992b553061a3436fb47">ReadBytes</a>(<span class="keyword">const</span> <span class="keywordtype">unsigned</span> <span class="keywordtype">char</span>* buffer, <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> offset, <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> valueSize, uint8_t outValue[]);</div><div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;</div><div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;uint64_t <a class="code" href="namespacearmnn_1_1profiling.xhtml#aa4de2b511faa41accc2c35cadf051124">ReadUint64</a>(<span class="keywordtype">unsigned</span> <span class="keyword">const</span> <span class="keywordtype">char</span>* buffer, <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> offset);</div><div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;</div><div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;uint32_t <a class="code" href="namespacearmnn_1_1profiling.xhtml#ad56f4c3ea5e88279bb6ef1f31d9dc6df">ReadUint32</a>(<span class="keywordtype">unsigned</span> <span class="keyword">const</span> <span class="keywordtype">char</span>* buffer, <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> offset);</div><div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;</div><div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;uint16_t <a class="code" href="namespacearmnn_1_1profiling.xhtml#a0ffb94cb0085a54a92f1c4eeaa6cf772">ReadUint16</a>(<span class="keywordtype">unsigned</span> <span class="keyword">const</span> <span class="keywordtype">char</span>* buffer, <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> offset);</div><div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;</div><div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;uint8_t <a class="code" href="namespacearmnn_1_1profiling.xhtml#a74b483b652cc32f03151b10a1366d607">ReadUint8</a>(<span class="keywordtype">unsigned</span> <span class="keyword">const</span> <span class="keywordtype">char</span>* buffer, <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> offset);</div><div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;</div><div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;std::pair&lt;uint32_t, uint32_t&gt; <a class="code" href="namespacearmnn_1_1profiling.xhtml#aca8b4bad45009e1d42dc8de69a0b7e2c">CreateTimelinePacketHeader</a>(uint32_t packetFamily,</div><div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;                                                         uint32_t packetClass,</div><div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;                                                         uint32_t packetType,</div><div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;                                                         uint32_t streamId,</div><div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;                                                         uint32_t sequenceNumbered,</div><div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;                                                         uint32_t dataLength);</div><div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;</div><div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;std::string <a class="code" href="namespacearmnn_1_1profiling.xhtml#af38e9c5d82c9317255665a6315842166">GetSoftwareInfo</a>();</div><div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;</div><div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;std::string <a class="code" href="namespacearmnn_1_1profiling.xhtml#a1a90cae723e311b3b71272a7f5ecccbb">GetSoftwareVersion</a>();</div><div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;</div><div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;std::string <a class="code" href="namespacearmnn_1_1profiling.xhtml#a66ccd202fa7bf1e52476e61d49a45ee6">GetHardwareVersion</a>();</div><div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;</div><div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;std::string <a class="code" href="namespacearmnn_1_1profiling.xhtml#a52fbcd350a9f12a385a7c5562c1efd9a">GetProcessName</a>();</div><div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;</div><div class="line"><a name="l00096"></a><span class="lineno"><a class="line" href="namespacearmnn_1_1profiling.xhtml#acdfc0158f71b04526602ef51444da4c0">   96</a></span>&#160;<span class="keyword">enum class</span> <a class="code" href="namespacearmnn_1_1profiling.xhtml#acdfc0158f71b04526602ef51444da4c0">TimelinePacketStatus</a></div><div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;{</div><div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;    <a class="code" href="namespacearmnn_1_1profiling.xhtml#acdfc0158f71b04526602ef51444da4c0aa60852f204ed8028c1c58808b746d115">Ok</a>,</div><div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;    <a class="code" href="namespacearmnn_1_1profiling.xhtml#acdfc0158f71b04526602ef51444da4c0a902b0d55fddef6f8d651fe1035b7d4bd">Error</a>,</div><div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;    <a class="code" href="classarmnn_1_1profiling_1_1_buffer_exhaustion.xhtml">BufferExhaustion</a></div><div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;};</div><div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;</div><div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;<a class="code" href="namespacearmnn_1_1profiling.xhtml#acdfc0158f71b04526602ef51444da4c0">TimelinePacketStatus</a> <a class="code" href="namespacearmnn_1_1profiling.xhtml#a3583b5fbfe555acc552a63458e665939">WriteTimelineLabelBinaryPacket</a>(uint64_t profilingGuid,</div><div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;                                                    <span class="keyword">const</span> std::string&amp; label,</div><div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;                                                    <span class="keywordtype">unsigned</span> <span class="keywordtype">char</span>* buffer,</div><div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;                                                    <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> bufferSize,</div><div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;                                                    <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span>&amp; numberOfBytesWritten);</div><div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;</div><div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;<a class="code" href="namespacearmnn_1_1profiling.xhtml#acdfc0158f71b04526602ef51444da4c0">TimelinePacketStatus</a> <a class="code" href="namespacearmnn_1_1profiling.xhtml#a27d1c992711722739250e2bbd9ce7ede">WriteTimelineEntityBinary</a>(uint64_t profilingGuid,</div><div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;                                               <span class="keywordtype">unsigned</span> <span class="keywordtype">char</span>* buffer,</div><div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;                                               <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> bufferSize,</div><div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;                                               <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span>&amp; numberOfBytesWritten);</div><div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;</div><div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;<a class="code" href="namespacearmnn_1_1profiling.xhtml#acdfc0158f71b04526602ef51444da4c0">TimelinePacketStatus</a> <a class="code" href="namespacearmnn_1_1profiling.xhtml#a9314a87188b8a4ad89e2e39b57f672c1">WriteTimelineRelationshipBinary</a>(<a class="code" href="namespacearmnn_1_1profiling.xhtml#ab805f5aa9f101e7f6d971daba044c3c2">ProfilingRelationshipType</a> relationshipType,</div><div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;                                                     uint64_t relationshipGuid,</div><div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;                                                     uint64_t headGuid,</div><div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;                                                     uint64_t tailGuid,</div><div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;                                                     uint64_t attributeGuid,</div><div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;                                                     <span class="keywordtype">unsigned</span> <span class="keywordtype">char</span>* buffer,</div><div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;                                                     <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> bufferSize,</div><div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;                                                     <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span>&amp; numberOfBytesWritten);</div><div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;</div><div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;<a class="code" href="namespacearmnn_1_1profiling.xhtml#acdfc0158f71b04526602ef51444da4c0">TimelinePacketStatus</a> <a class="code" href="namespacearmnn_1_1profiling.xhtml#aecc8787efb41f033785074f2d362895a">WriteTimelineMessageDirectoryPackage</a>(<span class="keywordtype">unsigned</span> <span class="keywordtype">char</span>* buffer,</div><div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;                                                          <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> bufferSize,</div><div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;                                                          <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span>&amp; numberOfBytesWritten);</div><div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;</div><div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;<a class="code" href="namespacearmnn_1_1profiling.xhtml#acdfc0158f71b04526602ef51444da4c0">TimelinePacketStatus</a> <a class="code" href="namespacearmnn_1_1profiling.xhtml#aaa1dfefc0a6a75d79dad86151fc2ce41">WriteTimelineEventClassBinary</a>(uint64_t profilingGuid,</div><div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;                                                   uint64_t nameGuid,</div><div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;                                                   <span class="keywordtype">unsigned</span> <span class="keywordtype">char</span>* buffer,</div><div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;                                                   <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> bufferSize,</div><div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;                                                   <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span>&amp; numberOfBytesWritten);</div><div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;</div><div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;<a class="code" href="namespacearmnn_1_1profiling.xhtml#acdfc0158f71b04526602ef51444da4c0">TimelinePacketStatus</a> <a class="code" href="namespacearmnn_1_1profiling.xhtml#a0211123136217f6dfe15b39f5a58690d">WriteTimelineEventBinary</a>(uint64_t timestamp,</div><div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;                                              <span class="keywordtype">int</span> threadId,</div><div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;                                              uint64_t profilingGuid,</div><div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;                                              <span class="keywordtype">unsigned</span> <span class="keywordtype">char</span>* buffer,</div><div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;                                              <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> bufferSize,</div><div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;                                              <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span>&amp; numberOfBytesWritten);</div><div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;</div><div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;std::string <a class="code" href="namespacearmnn_1_1profiling.xhtml#a6c000fcf0c62f7bc417fef72be783129">CentreAlignFormatting</a>(<span class="keyword">const</span> std::string&amp; stringToPass, <span class="keyword">const</span> <span class="keywordtype">int</span> spacingWidth);</div><div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;</div><div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;<span class="keywordtype">void</span> <a class="code" href="namespacearmnn_1_1profiling.xhtml#a02f98a63d0ef3a10bb359c3ac525f330">PrintCounterDirectory</a>(<a class="code" href="classarmnn_1_1profiling_1_1_i_counter_directory.xhtml">ICounterDirectory</a>&amp; counterDirectory);</div><div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;</div><div class="line"><a name="l00144"></a><span class="lineno"><a class="line" href="classarmnn_1_1profiling_1_1_buffer_exhaustion.xhtml">  144</a></span>&#160;<span class="keyword">class </span>BufferExhaustion : <span class="keyword">public</span> <a class="code" href="classarmnn_1_1_exception.xhtml">armnn::Exception</a></div><div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;{</div><div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;    <span class="keyword">using</span> <a class="code" href="classarmnn_1_1_exception.xhtml#ad56b7b14f59554e891ad88b26cbf8ac3">Exception::Exception</a>;</div><div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;};</div><div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;</div><div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;uint64_t <a class="code" href="namespacearmnn_1_1profiling.xhtml#a77a41a7625d3134c0cccdf11d169acb4">GetTimestamp</a>();</div><div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;</div><div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;arm::pipe::Packet <a class="code" href="namespacearmnn_1_1profiling.xhtml#a68dc7d3158eb3d4ed9cade6b8893d7c0">ReceivePacket</a>(<span class="keyword">const</span> <span class="keywordtype">unsigned</span> <span class="keywordtype">char</span>* buffer, uint32_t length);</div><div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;</div><div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;} <span class="comment">// namespace profiling</span></div><div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;</div><div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;} <span class="comment">// namespace armnn</span></div><div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;</div><div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160;<span class="keyword">namespace </span><a class="code" href="namespacestd.xhtml">std</a></div><div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;{</div><div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160;</div><div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160;<span class="keywordtype">bool</span> <a class="code" href="namespacearmnn_utils.xhtml#a49ba5984d8cde4299d8ef15c9e556587">operator==</a>(<span class="keyword">const</span> std::vector&lt;uint8_t&gt;&amp; left, <span class="keywordtype">int</span> right);</div><div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160;</div><div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160;} <span class="comment">// namespace std</span></div><div class="ttc" id="namespacearmnn_1_1profiling_xhtml_aecc8787efb41f033785074f2d362895a"><div class="ttname"><a href="namespacearmnn_1_1profiling.xhtml#aecc8787efb41f033785074f2d362895a">armnn::profiling::WriteTimelineMessageDirectoryPackage</a></div><div class="ttdeci">TimelinePacketStatus WriteTimelineMessageDirectoryPackage(unsigned char *buffer, unsigned int remainingBufferSize, unsigned int &amp;numberOfBytesWritten)</div><div class="ttdef"><b>Definition:</b> <a href="_profiling_utils_8cpp_source.xhtml#l00497">ProfilingUtils.cpp:497</a></div></div>
<div class="ttc" id="namespacearmnn_1_1profiling_xhtml_a66ccd202fa7bf1e52476e61d49a45ee6"><div class="ttname"><a href="namespacearmnn_1_1profiling.xhtml#a66ccd202fa7bf1e52476e61d49a45ee6">armnn::profiling::GetHardwareVersion</a></div><div class="ttdeci">std::string GetHardwareVersion()</div><div class="ttdef"><b>Definition:</b> <a href="_profiling_utils_8cpp_source.xhtml#l00232">ProfilingUtils.cpp:232</a></div></div>
<div class="ttc" id="namespacearmnn_1_1profiling_xhtml_ae5ace88c65e65ab7cf5572613601a60d"><div class="ttname"><a href="namespacearmnn_1_1profiling.xhtml#ae5ace88c65e65ab7cf5572613601a60d">armnn::profiling::WriteUint16</a></div><div class="ttdeci">void WriteUint16(const IPacketBufferPtr &amp;packetBuffer, unsigned int offset, uint16_t value)</div><div class="ttdef"><b>Definition:</b> <a href="_profiling_utils_8cpp_source.xhtml#l00128">ProfilingUtils.cpp:128</a></div></div>
<div class="ttc" id="namespacearmnn_1_1profiling_xhtml_a097646e1b460c992b553061a3436fb47"><div class="ttname"><a href="namespacearmnn_1_1profiling.xhtml#a097646e1b460c992b553061a3436fb47">armnn::profiling::ReadBytes</a></div><div class="ttdeci">void ReadBytes(const IPacketBufferPtr &amp;packetBuffer, unsigned int offset, unsigned int valueSize, uint8_t outValue[])</div><div class="ttdef"><b>Definition:</b> <a href="_profiling_utils_8cpp_source.xhtml#l00167">ProfilingUtils.cpp:167</a></div></div>
<div class="ttc" id="namespacearmnn_1_1profiling_xhtml_a3e638748a39d46e2943dfcef94dcb828"><div class="ttname"><a href="namespacearmnn_1_1profiling.xhtml#a3e638748a39d46e2943dfcef94dcb828">armnn::profiling::WriteUint32</a></div><div class="ttdeci">void WriteUint32(const IPacketBufferPtr &amp;packetBuffer, unsigned int offset, uint32_t value)</div><div class="ttdef"><b>Definition:</b> <a href="_profiling_utils_8cpp_source.xhtml#l00121">ProfilingUtils.cpp:121</a></div></div>
<div class="ttc" id="namespacearmnn_1_1profiling_xhtml_aa4de2b511faa41accc2c35cadf051124"><div class="ttname"><a href="namespacearmnn_1_1profiling.xhtml#aa4de2b511faa41accc2c35cadf051124">armnn::profiling::ReadUint64</a></div><div class="ttdeci">uint64_t ReadUint64(const IPacketBufferPtr &amp;packetBuffer, unsigned int offset)</div><div class="ttdef"><b>Definition:</b> <a href="_profiling_utils_8cpp_source.xhtml#l00174">ProfilingUtils.cpp:174</a></div></div>
<div class="ttc" id="namespacearmnn_1_1profiling_xhtml_aca8b4bad45009e1d42dc8de69a0b7e2c"><div class="ttname"><a href="namespacearmnn_1_1profiling.xhtml#aca8b4bad45009e1d42dc8de69a0b7e2c">armnn::profiling::CreateTimelinePacketHeader</a></div><div class="ttdeci">std::pair&lt; uint32_t, uint32_t &gt; CreateTimelinePacketHeader(uint32_t packetFamily, uint32_t packetClass, uint32_t packetType, uint32_t streamId, uint32_t sequenceNumbered, uint32_t dataLength)</div><div class="ttdoc">Creates a timeline packet header. </div><div class="ttdef"><b>Definition:</b> <a href="_profiling_utils_8cpp_source.xhtml#l00263">ProfilingUtils.cpp:263</a></div></div>
<div class="ttc" id="namespacearmnn_1_1profiling_xhtml_a52fbcd350a9f12a385a7c5562c1efd9a"><div class="ttname"><a href="namespacearmnn_1_1profiling.xhtml#a52fbcd350a9f12a385a7c5562c1efd9a">armnn::profiling::GetProcessName</a></div><div class="ttdeci">std::string GetProcessName()</div><div class="ttdef"><b>Definition:</b> <a href="_profiling_utils_8cpp_source.xhtml#l00243">ProfilingUtils.cpp:243</a></div></div>
<div class="ttc" id="namespacearmnn_1_1profiling_xhtml_a9314a87188b8a4ad89e2e39b57f672c1"><div class="ttname"><a href="namespacearmnn_1_1profiling.xhtml#a9314a87188b8a4ad89e2e39b57f672c1">armnn::profiling::WriteTimelineRelationshipBinary</a></div><div class="ttdeci">TimelinePacketStatus WriteTimelineRelationshipBinary(ProfilingRelationshipType relationshipType, uint64_t relationshipGuid, uint64_t headGuid, uint64_t tailGuid, uint64_t attributeGuid, unsigned char *buffer, unsigned int remainingBufferSize, unsigned int &amp;numberOfBytesWritten)</div><div class="ttdef"><b>Definition:</b> <a href="_profiling_utils_8cpp_source.xhtml#l00419">ProfilingUtils.cpp:419</a></div></div>
<div class="ttc" id="classarmnn_1_1_exception_xhtml_ad56b7b14f59554e891ad88b26cbf8ac3"><div class="ttname"><a href="classarmnn_1_1_exception.xhtml#ad56b7b14f59554e891ad88b26cbf8ac3">armnn::Exception::Exception</a></div><div class="ttdeci">Exception(const std::string &amp;message)</div><div class="ttdef"><b>Definition:</b> <a href="_exceptions_8cpp_source.xhtml#l00012">Exceptions.cpp:12</a></div></div>
<div class="ttc" id="namespacearmnn_1_1profiling_xhtml_a0ffb94cb0085a54a92f1c4eeaa6cf772"><div class="ttname"><a href="namespacearmnn_1_1profiling.xhtml#a0ffb94cb0085a54a92f1c4eeaa6cf772">armnn::profiling::ReadUint16</a></div><div class="ttdeci">uint16_t ReadUint16(const IPacketBufferPtr &amp;packetBuffer, unsigned int offset)</div><div class="ttdef"><b>Definition:</b> <a href="_profiling_utils_8cpp_source.xhtml#l00188">ProfilingUtils.cpp:188</a></div></div>
<div class="ttc" id="namespacearmnn_1_1profiling_xhtml_a74b483b652cc32f03151b10a1366d607"><div class="ttname"><a href="namespacearmnn_1_1profiling.xhtml#a74b483b652cc32f03151b10a1366d607">armnn::profiling::ReadUint8</a></div><div class="ttdeci">uint8_t ReadUint8(const IPacketBufferPtr &amp;packetBuffer, unsigned int offset)</div><div class="ttdef"><b>Definition:</b> <a href="_profiling_utils_8cpp_source.xhtml#l00195">ProfilingUtils.cpp:195</a></div></div>
<div class="ttc" id="namespacearmnn_xhtml"><div class="ttname"><a href="namespacearmnn.xhtml">armnn</a></div><div class="ttdoc">Copyright (c) 2021 ARM Limited and Contributors. </div><div class="ttdef"><b>Definition:</b> <a href="01__00__quick__start_8dox_source.xhtml#l00006">01_00_quick_start.dox:6</a></div></div>
<div class="ttc" id="namespacearmnn_1_1profiling_xhtml_af38e9c5d82c9317255665a6315842166"><div class="ttname"><a href="namespacearmnn_1_1profiling.xhtml#af38e9c5d82c9317255665a6315842166">armnn::profiling::GetSoftwareInfo</a></div><div class="ttdeci">std::string GetSoftwareInfo()</div><div class="ttdef"><b>Definition:</b> <a href="_profiling_utils_8cpp_source.xhtml#l00227">ProfilingUtils.cpp:227</a></div></div>
<div class="ttc" id="namespacearmnn_1_1profiling_xhtml_a68dc7d3158eb3d4ed9cade6b8893d7c0"><div class="ttname"><a href="namespacearmnn_1_1profiling.xhtml#a68dc7d3158eb3d4ed9cade6b8893d7c0">armnn::profiling::ReceivePacket</a></div><div class="ttdeci">arm::pipe::Packet ReceivePacket(const unsigned char *buffer, uint32_t length)</div><div class="ttdef"><b>Definition:</b> <a href="_profiling_utils_8cpp_source.xhtml#l00918">ProfilingUtils.cpp:918</a></div></div>
<div class="ttc" id="_numeric_cast_8hpp_xhtml"><div class="ttname"><a href="_numeric_cast_8hpp.xhtml">NumericCast.hpp</a></div></div>
<div class="ttc" id="namespacearmnn_1_1profiling_xhtml_a982b094fe2faa67a3560cdaf3901d0f8"><div class="ttname"><a href="namespacearmnn_1_1profiling.xhtml#a982b094fe2faa67a3560cdaf3901d0f8">armnn::profiling::GetNextUid</a></div><div class="ttdeci">uint16_t GetNextUid(bool peekOnly)</div><div class="ttdef"><b>Definition:</b> <a href="_profiling_utils_8cpp_source.xhtml#l00058">ProfilingUtils.cpp:58</a></div></div>
<div class="ttc" id="namespacestd_xhtml"><div class="ttname"><a href="namespacestd.xhtml">std</a></div><div class="ttdef"><b>Definition:</b> <a href="_backend_id_8hpp_source.xhtml#l00149">BackendId.hpp:149</a></div></div>
<div class="ttc" id="classarmnn_1_1profiling_1_1_buffer_exhaustion_xhtml"><div class="ttname"><a href="classarmnn_1_1profiling_1_1_buffer_exhaustion.xhtml">armnn::profiling::BufferExhaustion</a></div><div class="ttdef"><b>Definition:</b> <a href="_profiling_utils_8hpp_source.xhtml#l00144">ProfilingUtils.hpp:144</a></div></div>
<div class="ttc" id="_i_packet_buffer_8hpp_xhtml"><div class="ttname"><a href="_i_packet_buffer_8hpp.xhtml">IPacketBuffer.hpp</a></div></div>
<div class="ttc" id="namespacearmnn_utils_xhtml_a49ba5984d8cde4299d8ef15c9e556587"><div class="ttname"><a href="namespacearmnn_utils.xhtml#a49ba5984d8cde4299d8ef15c9e556587">armnnUtils::operator==</a></div><div class="ttdeci">bool operator==(const armnn::DataLayout &amp;dataLayout, const DataLayoutIndexed &amp;indexed)</div><div class="ttdoc">Equality methods. </div><div class="ttdef"><b>Definition:</b> <a href="_data_layout_indexed_8cpp_source.xhtml#l00046">DataLayoutIndexed.cpp:46</a></div></div>
<div class="ttc" id="namespacearmnn_1_1profiling_xhtml_a0211123136217f6dfe15b39f5a58690d"><div class="ttname"><a href="namespacearmnn_1_1profiling.xhtml#a0211123136217f6dfe15b39f5a58690d">armnn::profiling::WriteTimelineEventBinary</a></div><div class="ttdeci">TimelinePacketStatus WriteTimelineEventBinary(uint64_t timestamp, int threadId, uint64_t profilingGuid, unsigned char *buffer, unsigned int remainingBufferSize, unsigned int &amp;numberOfBytesWritten)</div><div class="ttdef"><b>Definition:</b> <a href="_profiling_utils_8cpp_source.xhtml#l00675">ProfilingUtils.cpp:675</a></div></div>
<div class="ttc" id="namespacearmnn_1_1profiling_xhtml_a6605c82bc625fbd40f24d35edee15fe3"><div class="ttname"><a href="namespacearmnn_1_1profiling.xhtml#a6605c82bc625fbd40f24d35edee15fe3">armnn::profiling::GetNextCounterUids</a></div><div class="ttdeci">std::vector&lt; uint16_t &gt; GetNextCounterUids(uint16_t firstUid, uint16_t cores)</div><div class="ttdef"><b>Definition:</b> <a href="_profiling_utils_8cpp_source.xhtml#l00078">ProfilingUtils.cpp:78</a></div></div>
<div class="ttc" id="classarmnn_1_1profiling_1_1_i_packet_buffer_xhtml"><div class="ttname"><a href="classarmnn_1_1profiling_1_1_i_packet_buffer.xhtml">armnn::profiling::IPacketBuffer</a></div><div class="ttdef"><b>Definition:</b> <a href="_i_packet_buffer_8hpp_source.xhtml#l00028">IPacketBuffer.hpp:28</a></div></div>
<div class="ttc" id="namespacearmnn_1_1profiling_xhtml_af0cddaa4e116d294dacaaced90ca341c"><div class="ttname"><a href="namespacearmnn_1_1profiling.xhtml#af0cddaa4e116d294dacaaced90ca341c">armnn::profiling::WriteBytes</a></div><div class="ttdeci">void WriteBytes(const IPacketBufferPtr &amp;packetBuffer, unsigned int offset, const void *value, unsigned int valueSize)</div><div class="ttdef"><b>Definition:</b> <a href="_profiling_utils_8cpp_source.xhtml#l00093">ProfilingUtils.cpp:93</a></div></div>
<div class="ttc" id="namespacearmnn_1_1profiling_xhtml_a750935094e7dc62a6ce69be8688ee9fc"><div class="ttname"><a href="namespacearmnn_1_1profiling.xhtml#a750935094e7dc62a6ce69be8688ee9fc">armnn::profiling::ConstructHeader</a></div><div class="ttdeci">uint32_t ConstructHeader(uint32_t packetFamily, uint32_t packetId)</div><div class="ttdef"><b>Definition:</b> <a href="_profiling_utils_8cpp_source.xhtml#l00100">ProfilingUtils.cpp:100</a></div></div>
<div class="ttc" id="namespacearmnn_1_1profiling_xhtml_ab805f5aa9f101e7f6d971daba044c3c2"><div class="ttname"><a href="namespacearmnn_1_1profiling.xhtml#ab805f5aa9f101e7f6d971daba044c3c2">armnn::profiling::ProfilingRelationshipType</a></div><div class="ttdeci">ProfilingRelationshipType</div><div class="ttdef"><b>Definition:</b> <a href="_i_send_timeline_packet_8hpp_source.xhtml#l00018">ISendTimelinePacket.hpp:18</a></div></div>
<div class="ttc" id="namespacearmnn_1_1profiling_xhtml_a6272d5d5e3a8afa0a402e9aafd19aedf"><div class="ttname"><a href="namespacearmnn_1_1profiling.xhtml#a6272d5d5e3a8afa0a402e9aafd19aedf">armnn::profiling::ThreadIdSize</a></div><div class="ttdeci">constexpr unsigned int ThreadIdSize</div><div class="ttdef"><b>Definition:</b> <a href="_profiling_utils_8hpp_source.xhtml#l00031">ProfilingUtils.hpp:31</a></div></div>
<div class="ttc" id="namespacearmnn_1_1profiling_xhtml_aaa1dfefc0a6a75d79dad86151fc2ce41"><div class="ttname"><a href="namespacearmnn_1_1profiling.xhtml#aaa1dfefc0a6a75d79dad86151fc2ce41">armnn::profiling::WriteTimelineEventClassBinary</a></div><div class="ttdeci">TimelinePacketStatus WriteTimelineEventClassBinary(uint64_t profilingGuid, uint64_t nameGuid, unsigned char *buffer, unsigned int remainingBufferSize, unsigned int &amp;numberOfBytesWritten)</div><div class="ttdef"><b>Definition:</b> <a href="_profiling_utils_8cpp_source.xhtml#l00628">ProfilingUtils.cpp:628</a></div></div>
<div class="ttc" id="namespacearmnn_1_1profiling_xhtml_af63b6e5ffc769286c32d55a090b1602a"><div class="ttname"><a href="namespacearmnn_1_1profiling.xhtml#af63b6e5ffc769286c32d55a090b1602a">armnn::profiling::WriteUint8</a></div><div class="ttdeci">void WriteUint8(const IPacketBufferPtr &amp;packetBuffer, unsigned int offset, uint8_t value)</div><div class="ttdef"><b>Definition:</b> <a href="_profiling_utils_8cpp_source.xhtml#l00135">ProfilingUtils.cpp:135</a></div></div>
<div class="ttc" id="namespacearmnn_1_1profiling_xhtml_a79be042e55fdf16ca562f14cd15d9aa6"><div class="ttname"><a href="namespacearmnn_1_1profiling.xhtml#a79be042e55fdf16ca562f14cd15d9aa6">armnn::profiling::WriteUint64</a></div><div class="ttdeci">void WriteUint64(const std::unique_ptr&lt; IPacketBuffer &gt; &amp;packetBuffer, unsigned int offset, uint64_t value)</div><div class="ttdef"><b>Definition:</b> <a href="_profiling_utils_8cpp_source.xhtml#l00114">ProfilingUtils.cpp:114</a></div></div>
<div class="ttc" id="namespacearmnn_1_1profiling_xhtml_ad56f4c3ea5e88279bb6ef1f31d9dc6df"><div class="ttname"><a href="namespacearmnn_1_1profiling.xhtml#ad56f4c3ea5e88279bb6ef1f31d9dc6df">armnn::profiling::ReadUint32</a></div><div class="ttdeci">uint32_t ReadUint32(const IPacketBufferPtr &amp;packetBuffer, unsigned int offset)</div><div class="ttdef"><b>Definition:</b> <a href="_profiling_utils_8cpp_source.xhtml#l00181">ProfilingUtils.cpp:181</a></div></div>
<div class="ttc" id="namespacearmnn_1_1profiling_xhtml_a1a90cae723e311b3b71272a7f5ecccbb"><div class="ttname"><a href="namespacearmnn_1_1profiling.xhtml#a1a90cae723e311b3b71272a7f5ecccbb">armnn::profiling::GetSoftwareVersion</a></div><div class="ttdeci">std::string GetSoftwareVersion()</div><div class="ttdef"><b>Definition:</b> <a href="_profiling_utils_8cpp_source.xhtml#l00237">ProfilingUtils.cpp:237</a></div></div>
<div class="ttc" id="classarmnn_1_1_exception_xhtml"><div class="ttname"><a href="classarmnn_1_1_exception.xhtml">armnn::Exception</a></div><div class="ttdoc">Base class for all ArmNN exceptions so that users can filter to just those. </div><div class="ttdef"><b>Definition:</b> <a href="_exceptions_8hpp_source.xhtml#l00046">Exceptions.hpp:46</a></div></div>
<div class="ttc" id="namespacearmnn_1_1profiling_xhtml_acdfc0158f71b04526602ef51444da4c0aa60852f204ed8028c1c58808b746d115"><div class="ttname"><a href="namespacearmnn_1_1profiling.xhtml#acdfc0158f71b04526602ef51444da4c0aa60852f204ed8028c1c58808b746d115">armnn::profiling::TimelinePacketStatus::Ok</a></div></div>
<div class="ttc" id="_exceptions_8hpp_xhtml"><div class="ttname"><a href="_exceptions_8hpp.xhtml">Exceptions.hpp</a></div></div>
<div class="ttc" id="namespacearmnn_1_1profiling_xhtml_a3583b5fbfe555acc552a63458e665939"><div class="ttname"><a href="namespacearmnn_1_1profiling.xhtml#a3583b5fbfe555acc552a63458e665939">armnn::profiling::WriteTimelineLabelBinaryPacket</a></div><div class="ttdeci">TimelinePacketStatus WriteTimelineLabelBinaryPacket(uint64_t profilingGuid, const std::string &amp;label, unsigned char *buffer, unsigned int remainingBufferSize, unsigned int &amp;numberOfBytesWritten)</div><div class="ttdef"><b>Definition:</b> <a href="_profiling_utils_8cpp_source.xhtml#l00313">ProfilingUtils.cpp:313</a></div></div>
<div class="ttc" id="namespacearmnn_1_1profiling_xhtml_a6c000fcf0c62f7bc417fef72be783129"><div class="ttname"><a href="namespacearmnn_1_1profiling.xhtml#a6c000fcf0c62f7bc417fef72be783129">armnn::profiling::CentreAlignFormatting</a></div><div class="ttdeci">std::string CentreAlignFormatting(const std::string &amp;stringToPass, const int spacingWidth)</div><div class="ttdef"><b>Definition:</b> <a href="_profiling_utils_8cpp_source.xhtml#l00727">ProfilingUtils.cpp:727</a></div></div>
<div class="ttc" id="_i_counter_directory_8hpp_xhtml"><div class="ttname"><a href="_i_counter_directory_8hpp.xhtml">ICounterDirectory.hpp</a></div></div>
<div class="ttc" id="_i_send_timeline_packet_8hpp_xhtml"><div class="ttname"><a href="_i_send_timeline_packet_8hpp.xhtml">ISendTimelinePacket.hpp</a></div></div>
<div class="ttc" id="namespacearmnn_1_1profiling_xhtml_a27d1c992711722739250e2bbd9ce7ede"><div class="ttname"><a href="namespacearmnn_1_1profiling.xhtml#a27d1c992711722739250e2bbd9ce7ede">armnn::profiling::WriteTimelineEntityBinary</a></div><div class="ttdeci">TimelinePacketStatus WriteTimelineEntityBinary(uint64_t profilingGuid, unsigned char *buffer, unsigned int remainingBufferSize, unsigned int &amp;numberOfBytesWritten)</div><div class="ttdef"><b>Definition:</b> <a href="_profiling_utils_8cpp_source.xhtml#l00376">ProfilingUtils.cpp:376</a></div></div>
<div class="ttc" id="classarmnn_1_1profiling_1_1_i_counter_directory_xhtml"><div class="ttname"><a href="classarmnn_1_1profiling_1_1_i_counter_directory.xhtml">armnn::profiling::ICounterDirectory</a></div><div class="ttdef"><b>Definition:</b> <a href="_i_counter_directory_8hpp_source.xhtml#l00137">ICounterDirectory.hpp:137</a></div></div>
<div class="ttc" id="namespacearmnn_1_1profiling_xhtml_a02f98a63d0ef3a10bb359c3ac525f330"><div class="ttname"><a href="namespacearmnn_1_1profiling.xhtml#a02f98a63d0ef3a10bb359c3ac525f330">armnn::profiling::PrintCounterDirectory</a></div><div class="ttdeci">void PrintCounterDirectory(ICounterDirectory &amp;counterDirectory)</div><div class="ttdef"><b>Definition:</b> <a href="_profiling_utils_8cpp_source.xhtml#l00857">ProfilingUtils.cpp:857</a></div></div>
<div class="ttc" id="namespacearmnn_1_1profiling_xhtml_acdfc0158f71b04526602ef51444da4c0"><div class="ttname"><a href="namespacearmnn_1_1profiling.xhtml#acdfc0158f71b04526602ef51444da4c0">armnn::profiling::TimelinePacketStatus</a></div><div class="ttdeci">TimelinePacketStatus</div><div class="ttdef"><b>Definition:</b> <a href="_profiling_utils_8hpp_source.xhtml#l00096">ProfilingUtils.hpp:96</a></div></div>
<div class="ttc" id="namespacearmnn_1_1profiling_xhtml_acdfc0158f71b04526602ef51444da4c0a902b0d55fddef6f8d651fe1035b7d4bd"><div class="ttname"><a href="namespacearmnn_1_1profiling.xhtml#acdfc0158f71b04526602ef51444da4c0a902b0d55fddef6f8d651fe1035b7d4bd">armnn::profiling::TimelinePacketStatus::Error</a></div></div>
<div class="ttc" id="namespacearmnn_1_1profiling_xhtml_a14328d977cec3abadcfd5935f04f3409"><div class="ttname"><a href="namespacearmnn_1_1profiling.xhtml#a14328d977cec3abadcfd5935f04f3409">armnn::profiling::IPacketBufferPtr</a></div><div class="ttdeci">std::unique_ptr&lt; IPacketBuffer &gt; IPacketBufferPtr</div><div class="ttdef"><b>Definition:</b> <a href="_i_packet_buffer_8hpp_source.xhtml#l00044">IPacketBuffer.hpp:44</a></div></div>
<div class="ttc" id="namespacearmnn_1_1profiling_xhtml_a77a41a7625d3134c0cccdf11d169acb4"><div class="ttname"><a href="namespacearmnn_1_1profiling.xhtml#a77a41a7625d3134c0cccdf11d169acb4">armnn::profiling::GetTimestamp</a></div><div class="ttdeci">uint64_t GetTimestamp()</div><div class="ttdef"><b>Definition:</b> <a href="_profiling_utils_8cpp_source.xhtml#l00904">ProfilingUtils.cpp:904</a></div></div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="dir_68267d1309a1af8e8297ef4c3efbcdba.xhtml">src</a></li><li class="navelem"><a class="el" href="dir_637c692f14729569dd2eac0c18e2a54a.xhtml">profiling</a></li><li class="navelem"><a class="el" href="_profiling_utils_8hpp.xhtml">ProfilingUtils.hpp</a></li>
    <li class="footer">Generated on Wed Mar 9 2022 12:01:00 for ArmNN by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.13 </li>
  </ul>
</div>
</body>
</html>
