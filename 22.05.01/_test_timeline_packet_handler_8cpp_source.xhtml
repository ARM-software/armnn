<!-- Copyright (c) 2020 ARM Limited. -->
<!--                                 -->
<!-- SPDX-License-Identifier: MIT    -->
<!--                                 -->
<!-- HTML header for doxygen 1.8.13-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.13"/>
<meta name="robots" content="NOINDEX, NOFOLLOW" />
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>ArmNN: src/profiling/test/TestTimelinePacketHandler.cpp Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script><script type="text/javascript" src="http://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="stylesheet.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <img alt="ArmNN" src="Arm_NN_horizontal_blue.png" style="max-width: 10rem; margin-top: .5rem; margin-left 10px"/>
  <td style="padding-left: 0.5em;">
   <div id="projectname">
   &#160;<span id="projectnumber">22.05.01</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.13 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
$(document).ready(function(){initNavTree('_test_timeline_packet_handler_8cpp_source.xhtml','');});
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="headertitle">
<div class="title">TestTimelinePacketHandler.cpp</div>  </div>
</div><!--header-->
<div class="contents">
<a href="_test_timeline_packet_handler_8cpp.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="comment">//</span></div><div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="comment">// Copyright Â© 2020 Arm Ltd and Contributors. All rights reserved.</span></div><div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="comment">// SPDX-License-Identifier: MIT</span></div><div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="comment">//</span></div><div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;</div><div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_test_timeline_packet_handler_8hpp.xhtml">TestTimelinePacketHandler.hpp</a>&quot;</span></div><div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;</div><div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="preprocessor">#include &lt;client/src/IProfilingConnection.hpp&gt;</span></div><div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;</div><div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="preprocessor">#include &lt;common/include/LabelsAndEventClasses.hpp&gt;</span></div><div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;</div><div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;<span class="preprocessor">#include &lt;chrono&gt;</span></div><div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;<span class="preprocessor">#include &lt;iostream&gt;</span></div><div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;</div><div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;<span class="keyword">namespace </span><a class="code" href="namespacearm.xhtml">arm</a></div><div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;{</div><div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;</div><div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;<span class="keyword">namespace </span>pipe</div><div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;{</div><div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;</div><div class="line"><a name="l00021"></a><span class="lineno"><a class="line" href="classarm_1_1pipe_1_1_test_timeline_packet_handler.xhtml#a0729ebfcf0d2e4717b94f212fac0bc0c">   21</a></span>&#160;std::vector&lt;uint32_t&gt; <a class="code" href="classarm_1_1pipe_1_1_test_timeline_packet_handler.xhtml#a0729ebfcf0d2e4717b94f212fac0bc0c">TestTimelinePacketHandler::GetHeadersAccepted</a>()</div><div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;{</div><div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;    std::vector&lt;uint32_t&gt; headers;</div><div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;    headers.push_back(m_DirectoryHeader); <span class="comment">// message directory</span></div><div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;    headers.push_back(m_MessageHeader); <span class="comment">// message</span></div><div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;    <span class="keywordflow">return</span> headers;</div><div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;}</div><div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;</div><div class="line"><a name="l00029"></a><span class="lineno"><a class="line" href="classarm_1_1pipe_1_1_test_timeline_packet_handler.xhtml#a9cb2d435819c130a15f14feffab24688">   29</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="classarm_1_1pipe_1_1_test_timeline_packet_handler.xhtml#a9cb2d435819c130a15f14feffab24688">TestTimelinePacketHandler::HandlePacket</a>(<span class="keyword">const</span> arm::pipe::Packet&amp; packet)</div><div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;{</div><div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;    <span class="keywordflow">if</span> (packet.GetHeader() == m_DirectoryHeader)</div><div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;    {</div><div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;        ProcessDirectoryPacket(packet);</div><div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;    }</div><div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;    <span class="keywordflow">else</span> <span class="keywordflow">if</span> (packet.GetHeader() == m_MessageHeader)</div><div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;    {</div><div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;        ProcessMessagePacket(packet);</div><div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;    }</div><div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;    <span class="keywordflow">else</span></div><div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;    {</div><div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;        std::stringstream ss;</div><div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;        ss &lt;&lt; <span class="stringliteral">&quot;Received a packet with unknown header [&quot;</span> &lt;&lt; packet.GetHeader() &lt;&lt; <span class="stringliteral">&quot;]&quot;</span>;</div><div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;        <span class="keywordflow">throw</span> arm::pipe::ProfilingException(ss.str());</div><div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;    }</div><div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;}</div><div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;</div><div class="line"><a name="l00047"></a><span class="lineno"><a class="line" href="classarm_1_1pipe_1_1_test_timeline_packet_handler.xhtml#a17a237457e57625296e6b24feb19c60a">   47</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="classarm_1_1pipe_1_1_test_timeline_packet_handler.xhtml#a17a237457e57625296e6b24feb19c60a">TestTimelinePacketHandler::Stop</a>()</div><div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;{</div><div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;    m_Connection-&gt;Close();</div><div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;}</div><div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;</div><div class="line"><a name="l00052"></a><span class="lineno"><a class="line" href="classarm_1_1pipe_1_1_test_timeline_packet_handler.xhtml#a72dbf07f5a1765ef4b046bfa932578d0">   52</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="classarm_1_1pipe_1_1_test_timeline_packet_handler.xhtml#a72dbf07f5a1765ef4b046bfa932578d0">TestTimelinePacketHandler::WaitOnInferenceCompletion</a>(<span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> timeout)</div><div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;{</div><div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;    std::unique_lock&lt;std::mutex&gt; lck(m_InferenceCompletedMutex);</div><div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;</div><div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;    <span class="keyword">auto</span> start = std::chrono::high_resolution_clock::now();</div><div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;    <span class="comment">// Here we we will go back to sleep after a spurious wake up if</span></div><div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;    <span class="comment">// m_InferenceCompleted is not yet true.</span></div><div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;    <span class="keywordflow">if</span> (!m_InferenceCompletedConditionVariable.wait_for(lck,</div><div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;                                                        std::chrono::milliseconds(timeout),</div><div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;                                                        [&amp;]{return m_InferenceCompleted == true;}))</div><div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;    {</div><div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;        <span class="keyword">auto</span> finish = std::chrono::high_resolution_clock::now();</div><div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;        std::chrono::duration&lt;double, std::milli&gt; elapsed = finish - start;</div><div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;        std::stringstream ss;</div><div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;        ss &lt;&lt; <span class="stringliteral">&quot;Timed out waiting on inference completion for &quot;</span> &lt;&lt; elapsed.count() &lt;&lt; <span class="stringliteral">&quot; ms&quot;</span>;</div><div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;        <span class="keywordflow">throw</span> arm::pipe::TimeoutException(ss.str());</div><div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;    }</div><div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;    <span class="keywordflow">return</span>;</div><div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;}</div><div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;</div><div class="line"><a name="l00072"></a><span class="lineno"><a class="line" href="classarm_1_1pipe_1_1_test_timeline_packet_handler.xhtml#a1187d00f0fed291d622c85e47a68673d">   72</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="classarm_1_1pipe_1_1_test_timeline_packet_handler.xhtml#a1187d00f0fed291d622c85e47a68673d">TestTimelinePacketHandler::SetInferenceComplete</a>()</div><div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;{</div><div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;    {   <span class="comment">// only lock when we are updating the inference completed variable</span></div><div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;        std::unique_lock&lt;std::mutex&gt; lck(m_InferenceCompletedMutex);</div><div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;        m_InferenceCompleted = <span class="keyword">true</span>;</div><div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;    }</div><div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;    m_InferenceCompletedConditionVariable.notify_one();</div><div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;}</div><div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;</div><div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;<span class="keywordtype">void</span> TestTimelinePacketHandler::ProcessDirectoryPacket(<span class="keyword">const</span> arm::pipe::Packet&amp; packet)</div><div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;{</div><div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;    m_DirectoryDecoder(packet);</div><div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;}</div><div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;</div><div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;<span class="keywordtype">void</span> TestTimelinePacketHandler::ProcessMessagePacket(<span class="keyword">const</span> arm::pipe::Packet&amp; packet)</div><div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;{</div><div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;    m_Decoder(packet);</div><div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;}</div><div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;</div><div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;<span class="comment">// TimelineMessageDecoder functions</span></div><div class="line"><a name="l00092"></a><span class="lineno"><a class="line" href="classarm_1_1pipe_1_1_timeline_message_decoder.xhtml#a7995090433c9e1ba71b67152078885c9">   92</a></span>&#160;arm::pipe::ITimelineDecoder::TimelineStatus <a class="code" href="classarm_1_1pipe_1_1_timeline_message_decoder.xhtml#a7995090433c9e1ba71b67152078885c9">TimelineMessageDecoder::CreateEntity</a>(<span class="keyword">const</span> <a class="code" href="classarm_1_1pipe_1_1_entity.xhtml">Entity</a>&amp; entity)</div><div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;{</div><div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;    m_TimelineModel.<a class="code" href="classarm_1_1pipe_1_1_timeline_model.xhtml#acf92758924263e61fea775a36ae49d21">AddEntity</a>(entity.m_Guid);</div><div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;    <span class="keywordflow">return</span> arm::pipe::ITimelineDecoder::TimelineStatus::TimelineStatus_Success;</div><div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;}</div><div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;</div><div class="line"><a name="l00098"></a><span class="lineno"><a class="line" href="classarm_1_1pipe_1_1_timeline_message_decoder.xhtml#a48ab1fb76f597028a5894f1dee3773b8">   98</a></span>&#160;arm::pipe::ITimelineDecoder::TimelineStatus <a class="code" href="classarm_1_1pipe_1_1_timeline_message_decoder.xhtml#a48ab1fb76f597028a5894f1dee3773b8">TimelineMessageDecoder::CreateEventClass</a>(</div><div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;    <span class="keyword">const</span> arm::pipe::ITimelineDecoder::EventClass&amp; eventClass)</div><div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;{</div><div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;    m_TimelineModel.<a class="code" href="classarm_1_1pipe_1_1_timeline_model.xhtml#abd430fb31002773ab751304a59b56a37">AddEventClass</a>(eventClass);</div><div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;    <span class="keywordflow">return</span> arm::pipe::ITimelineDecoder::TimelineStatus::TimelineStatus_Success;</div><div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;}</div><div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;</div><div class="line"><a name="l00105"></a><span class="lineno"><a class="line" href="classarm_1_1pipe_1_1_timeline_message_decoder.xhtml#a5d0469df3949ea8f3eb78245778d06b9">  105</a></span>&#160;arm::pipe::ITimelineDecoder::TimelineStatus <a class="code" href="classarm_1_1pipe_1_1_timeline_message_decoder.xhtml#a5d0469df3949ea8f3eb78245778d06b9">TimelineMessageDecoder::CreateEvent</a>(</div><div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;    <span class="keyword">const</span> arm::pipe::ITimelineDecoder::Event&amp; event)</div><div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;{</div><div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;    m_TimelineModel.<a class="code" href="classarm_1_1pipe_1_1_timeline_model.xhtml#a3191fd510f0111bd8741258c4a5c6351">AddEvent</a>(event);</div><div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;    <span class="keywordflow">return</span> arm::pipe::ITimelineDecoder::TimelineStatus::TimelineStatus_Success;</div><div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;}</div><div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;</div><div class="line"><a name="l00112"></a><span class="lineno"><a class="line" href="classarm_1_1pipe_1_1_timeline_message_decoder.xhtml#a053932a5437d830e8989c18f40f1082b">  112</a></span>&#160;arm::pipe::ITimelineDecoder::TimelineStatus <a class="code" href="classarm_1_1pipe_1_1_timeline_message_decoder.xhtml#a053932a5437d830e8989c18f40f1082b">TimelineMessageDecoder::CreateLabel</a>(</div><div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;    <span class="keyword">const</span> arm::pipe::ITimelineDecoder::Label&amp; label)</div><div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;{</div><div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;    m_TimelineModel.<a class="code" href="classarm_1_1pipe_1_1_timeline_model.xhtml#a640daf6408f35fdeae6411ed2968403f">AddLabel</a>(label);</div><div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;    <span class="keywordflow">return</span> arm::pipe::ITimelineDecoder::TimelineStatus::TimelineStatus_Success;</div><div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;}</div><div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;</div><div class="line"><a name="l00119"></a><span class="lineno"><a class="line" href="classarm_1_1pipe_1_1_timeline_message_decoder.xhtml#af47168eeaeadc89e2fc96bd1c0f8b1c7">  119</a></span>&#160;arm::pipe::ITimelineDecoder::TimelineStatus <a class="code" href="classarm_1_1pipe_1_1_timeline_message_decoder.xhtml#af47168eeaeadc89e2fc96bd1c0f8b1c7">TimelineMessageDecoder::CreateRelationship</a>(</div><div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;    <span class="keyword">const</span> arm::pipe::ITimelineDecoder::Relationship&amp; relationship)</div><div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;{</div><div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;    m_TimelineModel.<a class="code" href="classarm_1_1pipe_1_1_timeline_model.xhtml#a322803572d603532fb433c693f1ee530">AddRelationship</a>(relationship);</div><div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;    <span class="comment">// check to see if this is an execution link to an inference of event class end of life</span></div><div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;    <span class="comment">// if so the inference has completed so send out a notification...</span></div><div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;    <span class="keywordflow">if</span> (relationship.m_RelationshipType == RelationshipType::ExecutionLink &amp;&amp;</div><div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;        m_TimelineModel.<a class="code" href="classarm_1_1pipe_1_1_timeline_model.xhtml#a3d29586c1c4cc83b2c453ea36aaa28e6">IsInferenceGuid</a>(relationship.m_HeadGuid))</div><div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;    {</div><div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;        ProfilingStaticGuid attributeGuid(relationship.m_AttributeGuid);</div><div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;        <span class="keywordflow">if</span> (attributeGuid == LabelsAndEventClasses::ARMNN_PROFILING_EOL_EVENT_CLASS)</div><div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;        {</div><div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;            <span class="keywordflow">if</span> (m_PacketHandler != <span class="keyword">nullptr</span>)</div><div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;            {</div><div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;                m_PacketHandler-&gt;SetInferenceComplete();</div><div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;            }</div><div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;        }</div><div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;    }</div><div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;    <span class="keywordflow">return</span> arm::pipe::ITimelineDecoder::TimelineStatus::TimelineStatus_Success;</div><div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;}</div><div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;</div><div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;} <span class="comment">// namespace pipe</span></div><div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;</div><div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;} <span class="comment">// namespace arm</span></div><div class="ttc" id="classarm_1_1pipe_1_1_timeline_model_xhtml_a322803572d603532fb433c693f1ee530"><div class="ttname"><a href="classarm_1_1pipe_1_1_timeline_model.xhtml#a322803572d603532fb433c693f1ee530">arm::pipe::TimelineModel::AddRelationship</a></div><div class="ttdeci">void AddRelationship(const arm::pipe::ITimelineDecoder::Relationship &amp;relationship)</div><div class="ttdef"><b>Definition:</b> <a href="_timeline_model_8cpp_source.xhtml#l00054">TimelineModel.cpp:54</a></div></div>
<div class="ttc" id="classarm_1_1pipe_1_1_timeline_model_xhtml_a640daf6408f35fdeae6411ed2968403f"><div class="ttname"><a href="classarm_1_1pipe_1_1_timeline_model.xhtml#a640daf6408f35fdeae6411ed2968403f">arm::pipe::TimelineModel::AddLabel</a></div><div class="ttdeci">void AddLabel(const arm::pipe::ITimelineDecoder::Label &amp;label)</div><div class="ttdef"><b>Definition:</b> <a href="_timeline_model_8cpp_source.xhtml#l00018">TimelineModel.cpp:18</a></div></div>
<div class="ttc" id="classarm_1_1pipe_1_1_timeline_message_decoder_xhtml_af47168eeaeadc89e2fc96bd1c0f8b1c7"><div class="ttname"><a href="classarm_1_1pipe_1_1_timeline_message_decoder.xhtml#af47168eeaeadc89e2fc96bd1c0f8b1c7">arm::pipe::TimelineMessageDecoder::CreateRelationship</a></div><div class="ttdeci">virtual TimelineStatus CreateRelationship(const Relationship &amp;) override</div><div class="ttdef"><b>Definition:</b> <a href="_test_timeline_packet_handler_8cpp_source.xhtml#l00119">TestTimelinePacketHandler.cpp:119</a></div></div>
<div class="ttc" id="classarm_1_1pipe_1_1_test_timeline_packet_handler_xhtml_a1187d00f0fed291d622c85e47a68673d"><div class="ttname"><a href="classarm_1_1pipe_1_1_test_timeline_packet_handler.xhtml#a1187d00f0fed291d622c85e47a68673d">arm::pipe::TestTimelinePacketHandler::SetInferenceComplete</a></div><div class="ttdeci">void SetInferenceComplete()</div><div class="ttdef"><b>Definition:</b> <a href="_test_timeline_packet_handler_8cpp_source.xhtml#l00072">TestTimelinePacketHandler.cpp:72</a></div></div>
<div class="ttc" id="_test_timeline_packet_handler_8hpp_xhtml"><div class="ttname"><a href="_test_timeline_packet_handler_8hpp.xhtml">TestTimelinePacketHandler.hpp</a></div></div>
<div class="ttc" id="classarm_1_1pipe_1_1_timeline_model_xhtml_abd430fb31002773ab751304a59b56a37"><div class="ttname"><a href="classarm_1_1pipe_1_1_timeline_model.xhtml#abd430fb31002773ab751304a59b56a37">arm::pipe::TimelineModel::AddEventClass</a></div><div class="ttdeci">void AddEventClass(const arm::pipe::ITimelineDecoder::EventClass &amp;eventClass)</div><div class="ttdef"><b>Definition:</b> <a href="_timeline_model_8cpp_source.xhtml#l00281">TimelineModel.cpp:281</a></div></div>
<div class="ttc" id="classarm_1_1pipe_1_1_test_timeline_packet_handler_xhtml_a9cb2d435819c130a15f14feffab24688"><div class="ttname"><a href="classarm_1_1pipe_1_1_test_timeline_packet_handler.xhtml#a9cb2d435819c130a15f14feffab24688">arm::pipe::TestTimelinePacketHandler::HandlePacket</a></div><div class="ttdeci">virtual void HandlePacket(const arm::pipe::Packet &amp;packet) override</div><div class="ttdef"><b>Definition:</b> <a href="_test_timeline_packet_handler_8cpp_source.xhtml#l00029">TestTimelinePacketHandler.cpp:29</a></div></div>
<div class="ttc" id="classarm_1_1pipe_1_1_timeline_message_decoder_xhtml_a48ab1fb76f597028a5894f1dee3773b8"><div class="ttname"><a href="classarm_1_1pipe_1_1_timeline_message_decoder.xhtml#a48ab1fb76f597028a5894f1dee3773b8">arm::pipe::TimelineMessageDecoder::CreateEventClass</a></div><div class="ttdeci">virtual TimelineStatus CreateEventClass(const EventClass &amp;) override</div><div class="ttdef"><b>Definition:</b> <a href="_test_timeline_packet_handler_8cpp_source.xhtml#l00098">TestTimelinePacketHandler.cpp:98</a></div></div>
<div class="ttc" id="classarm_1_1pipe_1_1_timeline_message_decoder_xhtml_a7995090433c9e1ba71b67152078885c9"><div class="ttname"><a href="classarm_1_1pipe_1_1_timeline_message_decoder.xhtml#a7995090433c9e1ba71b67152078885c9">arm::pipe::TimelineMessageDecoder::CreateEntity</a></div><div class="ttdeci">virtual TimelineStatus CreateEntity(const Entity &amp;) override</div><div class="ttdef"><b>Definition:</b> <a href="_test_timeline_packet_handler_8cpp_source.xhtml#l00092">TestTimelinePacketHandler.cpp:92</a></div></div>
<div class="ttc" id="classarm_1_1pipe_1_1_test_timeline_packet_handler_xhtml_a17a237457e57625296e6b24feb19c60a"><div class="ttname"><a href="classarm_1_1pipe_1_1_test_timeline_packet_handler.xhtml#a17a237457e57625296e6b24feb19c60a">arm::pipe::TestTimelinePacketHandler::Stop</a></div><div class="ttdeci">void Stop()</div><div class="ttdef"><b>Definition:</b> <a href="_test_timeline_packet_handler_8cpp_source.xhtml#l00047">TestTimelinePacketHandler.cpp:47</a></div></div>
<div class="ttc" id="classarm_1_1pipe_1_1_timeline_model_xhtml_a3191fd510f0111bd8741258c4a5c6351"><div class="ttname"><a href="classarm_1_1pipe_1_1_timeline_model.xhtml#a3191fd510f0111bd8741258c4a5c6351">arm::pipe::TimelineModel::AddEvent</a></div><div class="ttdeci">void AddEvent(const arm::pipe::ITimelineDecoder::Event &amp;event)</div><div class="ttdef"><b>Definition:</b> <a href="_timeline_model_8cpp_source.xhtml#l00311">TimelineModel.cpp:311</a></div></div>
<div class="ttc" id="namespacearm_xhtml"><div class="ttname"><a href="namespacearm.xhtml">arm</a></div><div class="ttdef"><b>Definition:</b> <a href="_backend_registry_8hpp_source.xhtml#l00018">BackendRegistry.hpp:18</a></div></div>
<div class="ttc" id="classarm_1_1pipe_1_1_timeline_model_xhtml_a3d29586c1c4cc83b2c453ea36aaa28e6"><div class="ttname"><a href="classarm_1_1pipe_1_1_timeline_model.xhtml#a3d29586c1c4cc83b2c453ea36aaa28e6">arm::pipe::TimelineModel::IsInferenceGuid</a></div><div class="ttdeci">bool IsInferenceGuid(uint64_t guid) const</div><div class="ttdef"><b>Definition:</b> <a href="_timeline_model_8cpp_source.xhtml#l00275">TimelineModel.cpp:275</a></div></div>
<div class="ttc" id="classarm_1_1pipe_1_1_entity_xhtml"><div class="ttname"><a href="classarm_1_1pipe_1_1_entity.xhtml">arm::pipe::Entity</a></div><div class="ttdef"><b>Definition:</b> <a href="_timeline_model_8hpp_source.xhtml#l00088">TimelineModel.hpp:88</a></div></div>
<div class="ttc" id="classarm_1_1pipe_1_1_timeline_model_xhtml_acf92758924263e61fea775a36ae49d21"><div class="ttname"><a href="classarm_1_1pipe_1_1_timeline_model.xhtml#acf92758924263e61fea775a36ae49d21">arm::pipe::TimelineModel::AddEntity</a></div><div class="ttdeci">void AddEntity(uint64_t guid)</div><div class="ttdef"><b>Definition:</b> <a href="_timeline_model_8cpp_source.xhtml#l00036">TimelineModel.cpp:36</a></div></div>
<div class="ttc" id="classarm_1_1pipe_1_1_timeline_message_decoder_xhtml_a053932a5437d830e8989c18f40f1082b"><div class="ttname"><a href="classarm_1_1pipe_1_1_timeline_message_decoder.xhtml#a053932a5437d830e8989c18f40f1082b">arm::pipe::TimelineMessageDecoder::CreateLabel</a></div><div class="ttdeci">virtual TimelineStatus CreateLabel(const Label &amp;) override</div><div class="ttdef"><b>Definition:</b> <a href="_test_timeline_packet_handler_8cpp_source.xhtml#l00112">TestTimelinePacketHandler.cpp:112</a></div></div>
<div class="ttc" id="classarm_1_1pipe_1_1_timeline_message_decoder_xhtml_a5d0469df3949ea8f3eb78245778d06b9"><div class="ttname"><a href="classarm_1_1pipe_1_1_timeline_message_decoder.xhtml#a5d0469df3949ea8f3eb78245778d06b9">arm::pipe::TimelineMessageDecoder::CreateEvent</a></div><div class="ttdeci">virtual TimelineStatus CreateEvent(const Event &amp;) override</div><div class="ttdef"><b>Definition:</b> <a href="_test_timeline_packet_handler_8cpp_source.xhtml#l00105">TestTimelinePacketHandler.cpp:105</a></div></div>
<div class="ttc" id="classarm_1_1pipe_1_1_test_timeline_packet_handler_xhtml_a0729ebfcf0d2e4717b94f212fac0bc0c"><div class="ttname"><a href="classarm_1_1pipe_1_1_test_timeline_packet_handler.xhtml#a0729ebfcf0d2e4717b94f212fac0bc0c">arm::pipe::TestTimelinePacketHandler::GetHeadersAccepted</a></div><div class="ttdeci">virtual std::vector&lt; uint32_t &gt; GetHeadersAccepted() override</div><div class="ttdef"><b>Definition:</b> <a href="_test_timeline_packet_handler_8cpp_source.xhtml#l00021">TestTimelinePacketHandler.cpp:21</a></div></div>
<div class="ttc" id="classarm_1_1pipe_1_1_test_timeline_packet_handler_xhtml_a72dbf07f5a1765ef4b046bfa932578d0"><div class="ttname"><a href="classarm_1_1pipe_1_1_test_timeline_packet_handler.xhtml#a72dbf07f5a1765ef4b046bfa932578d0">arm::pipe::TestTimelinePacketHandler::WaitOnInferenceCompletion</a></div><div class="ttdeci">void WaitOnInferenceCompletion(unsigned int timeout)</div><div class="ttdef"><b>Definition:</b> <a href="_test_timeline_packet_handler_8cpp_source.xhtml#l00052">TestTimelinePacketHandler.cpp:52</a></div></div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="dir_68267d1309a1af8e8297ef4c3efbcdba.xhtml">src</a></li><li class="navelem"><a class="el" href="dir_637c692f14729569dd2eac0c18e2a54a.xhtml">profiling</a></li><li class="navelem"><a class="el" href="dir_6b1198f6e738611120ec65b09506d2f8.xhtml">test</a></li><li class="navelem"><a class="el" href="_test_timeline_packet_handler_8cpp.xhtml">TestTimelinePacketHandler.cpp</a></li>
    <li class="footer">Generated on Fri Jun 17 2022 13:20:24 for ArmNN by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.13 </li>
  </ul>
</div>
</body>
</html>
