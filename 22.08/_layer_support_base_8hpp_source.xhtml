<!-- Copyright (c) 2020 ARM Limited. -->
<!--                                 -->
<!-- SPDX-License-Identifier: MIT    -->
<!--                                 -->
<!-- HTML header for doxygen 1.8.13-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.13"/>
<meta name="robots" content="NOINDEX, NOFOLLOW" />
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>ArmNN: src/backends/backendsCommon/LayerSupportBase.hpp Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script><script type="text/javascript" src="http://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="stylesheet.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <img alt="ArmNN" src="Arm_NN_horizontal_blue.png" style="max-width: 10rem; margin-top: .5rem; margin-left 10px"/>
  <td style="padding-left: 0.5em;">
   <div id="projectname">
   &#160;<span id="projectnumber">22.08</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.13 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
$(document).ready(function(){initNavTree('_layer_support_base_8hpp_source.xhtml','');});
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="headertitle">
<div class="title">LayerSupportBase.hpp</div>  </div>
</div><!--header-->
<div class="contents">
<a href="_layer_support_base_8hpp.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="comment">//</span></div><div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="comment">// Copyright Â© 2017 Arm Ltd and Contributors. All rights reserved.</span></div><div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="comment">// SPDX-License-Identifier: MIT</span></div><div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="comment">//</span></div><div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;</div><div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="preprocessor">#pragma once</span></div><div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;</div><div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="preprocessor">#include &lt;<a class="code" href="_i_layer_support_8hpp.xhtml">armnn/backends/ILayerSupport.hpp</a>&gt;</span></div><div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;</div><div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="keyword">namespace </span><a class="code" href="namespacearmnn.xhtml">armnn</a></div><div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;{</div><div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;</div><div class="line"><a name="l00013"></a><span class="lineno"><a class="line" href="classarmnn_1_1_layer_support_base.xhtml">   13</a></span>&#160;<span class="keyword">class </span><a class="code" href="classarmnn_1_1_layer_support_base.xhtml">LayerSupportBase</a> : <span class="keyword">public</span> <a class="code" href="classarmnn_1_1_i_layer_support.xhtml">ILayerSupport</a></div><div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;{</div><div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;<span class="keyword">public</span>:</div><div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;</div><div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;    <span class="keywordtype">bool</span> <a class="code" href="classarmnn_1_1_layer_support_base.xhtml#a8424740ae08cca0a5548b598331f35a5">IsLayerSupported</a>(<span class="keyword">const</span> <a class="code" href="namespacearmnn.xhtml#a56943a0946e5f15e5e58054b8e7a04a4">LayerType</a>&amp; type,</div><div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;                          <span class="keyword">const</span> std::vector&lt;TensorInfo&gt;&amp; infos,</div><div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;                          <span class="keyword">const</span> <a class="code" href="structarmnn_1_1_base_descriptor.xhtml">BaseDescriptor</a>&amp; <a class="code" href="classarmnn_1_1_i_layer_support.xhtml#a859feaa966620ae0ea88abf5226f2d04">descriptor</a>,</div><div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;                          <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_optional.xhtml">Optional&lt;LstmInputParamsInfo&gt;</a>&amp; lstmParamsInfo = <a class="code" href="structarmnn_1_1_empty_optional.xhtml">EmptyOptional</a>(),</div><div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;                          <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_optional.xhtml">Optional&lt;QuantizedLstmInputParamsInfo&gt;</a>&amp; quantizedLstmParamsInfo = <a class="code" href="structarmnn_1_1_empty_optional.xhtml">EmptyOptional</a>(),</div><div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;                          <a class="code" href="classarmnn_1_1_optional.xhtml">Optional&lt;std::string&amp;&gt;</a> <a class="code" href="classarmnn_1_1_i_layer_support.xhtml#ac75f9a02b051716a0cc1cc0818dfe454">reasonIfUnsupported</a> = <a class="code" href="structarmnn_1_1_empty_optional.xhtml">EmptyOptional</a>()) <span class="keyword">const override</span>;</div><div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;</div><div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;    <a class="code" href="classarmnn_1_1_i_layer_support.xhtml#a6d593367be03c4ef23ba028caec5603d">ARMNN_DEPRECATED_MSG_REMOVAL_DATE</a>(<span class="stringliteral">&quot;This method is deprecated. Use IsLayerSupported instead.&quot;</span>, <span class="stringliteral">&quot;23.08&quot;</span>)</div><div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;    <span class="keywordtype">bool</span> <a class="code" href="classarmnn_1_1_layer_support_base.xhtml#ab3adb3a28736529682e4ff0ea976dcd3">IsActivationSupported</a>(<span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a>&amp; input,</div><div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;                               <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a>&amp; <a class="code" href="classarmnn_1_1_i_layer_support.xhtml#a4e25e081529b7e99e5e454d916ed83fb">output</a>,</div><div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;                               <span class="keyword">const</span> <a class="code" href="structarmnn_1_1_activation_descriptor.xhtml">ActivationDescriptor</a>&amp; descriptor,</div><div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;                               <a class="code" href="classarmnn_1_1_optional.xhtml">Optional&lt;std::string&amp;&gt;</a> <a class="code" href="classarmnn_1_1_i_layer_support.xhtml#ac75f9a02b051716a0cc1cc0818dfe454">reasonIfUnsupported</a> = <a class="code" href="structarmnn_1_1_empty_optional.xhtml">EmptyOptional</a>()) <span class="keyword">const override</span>;</div><div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;</div><div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;    <a class="code" href="classarmnn_1_1_i_layer_support.xhtml#a6d593367be03c4ef23ba028caec5603d">ARMNN_DEPRECATED_MSG_REMOVAL_DATE</a>(<span class="stringliteral">&quot;This method is deprecated. Use IsLayerSupported instead.&quot;</span>, <span class="stringliteral">&quot;23.08&quot;</span>)</div><div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;    <span class="keywordtype">bool</span> <a class="code" href="classarmnn_1_1_layer_support_base.xhtml#a48177e22e47448adb3d83e145dadf735">IsAdditionSupported</a>(<span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a>&amp; input0,</div><div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;                             <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a>&amp; <a class="code" href="classarmnn_1_1_i_layer_support.xhtml#ab82416560ced17268c6ba4443a3aac5e">input1</a>,</div><div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;                             <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a>&amp; output,</div><div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;                             <a class="code" href="classarmnn_1_1_optional.xhtml">Optional&lt;std::string&amp;&gt;</a> <a class="code" href="classarmnn_1_1_i_layer_support.xhtml#ac75f9a02b051716a0cc1cc0818dfe454">reasonIfUnsupported</a> = <a class="code" href="structarmnn_1_1_empty_optional.xhtml">EmptyOptional</a>()) <span class="keyword">const override</span>;</div><div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;</div><div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;    <a class="code" href="classarmnn_1_1_i_layer_support.xhtml#a6d593367be03c4ef23ba028caec5603d">ARMNN_DEPRECATED_MSG_REMOVAL_DATE</a>(<span class="stringliteral">&quot;This method is deprecated. Use IsLayerSupported instead.&quot;</span>, <span class="stringliteral">&quot;23.08&quot;</span>)</div><div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;    <span class="keywordtype">bool</span> <a class="code" href="classarmnn_1_1_layer_support_base.xhtml#a0f4841f89f21fd794786b4c03c2425fd">IsArgMinMaxSupported</a>(<span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a>&amp; input,</div><div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;                              <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a>&amp; output,</div><div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;                              <span class="keyword">const</span> <a class="code" href="structarmnn_1_1_arg_min_max_descriptor.xhtml">ArgMinMaxDescriptor</a>&amp; descriptor,</div><div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;                              <a class="code" href="classarmnn_1_1_optional.xhtml">Optional&lt;std::string&amp;&gt;</a> <a class="code" href="classarmnn_1_1_i_layer_support.xhtml#ac75f9a02b051716a0cc1cc0818dfe454">reasonIfUnsupported</a> = <a class="code" href="structarmnn_1_1_empty_optional.xhtml">EmptyOptional</a>()) <span class="keyword">const override</span>;</div><div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;</div><div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;    <a class="code" href="classarmnn_1_1_i_layer_support.xhtml#a6d593367be03c4ef23ba028caec5603d">ARMNN_DEPRECATED_MSG_REMOVAL_DATE</a>(<span class="stringliteral">&quot;This method is deprecated. Use IsLayerSupported instead.&quot;</span>, <span class="stringliteral">&quot;23.08&quot;</span>)</div><div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;    <span class="keywordtype">bool</span> <a class="code" href="classarmnn_1_1_layer_support_base.xhtml#a67c970dd054b991e14369de523ca3a5a">IsBatchNormalizationSupported</a>(<span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a>&amp; input,</div><div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;                                       <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a>&amp; output,</div><div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;                                       <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a>&amp; <a class="code" href="classarmnn_1_1_i_layer_support.xhtml#a895a8451e0799b95d65caf7ffe0a32d7">mean</a>,</div><div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;                                       <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a>&amp; <a class="code" href="classarmnn_1_1_i_layer_support.xhtml#a903053b422754682265fba0c03d94a52">var</a>,</div><div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;                                       <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a>&amp; <a class="code" href="classarmnn_1_1_i_layer_support.xhtml#a83a99de40f6bffaa36f0333d04690b2a">beta</a>,</div><div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;                                       <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a>&amp; <a class="code" href="classarmnn_1_1_i_layer_support.xhtml#ab5cccb3233f5eff2119e8acc80cec209">gamma</a>,</div><div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;                                       <span class="keyword">const</span> <a class="code" href="structarmnn_1_1_batch_normalization_descriptor.xhtml">BatchNormalizationDescriptor</a>&amp; descriptor,</div><div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;                                       <a class="code" href="classarmnn_1_1_optional.xhtml">Optional&lt;std::string&amp;&gt;</a> <a class="code" href="classarmnn_1_1_i_layer_support.xhtml#ac75f9a02b051716a0cc1cc0818dfe454">reasonIfUnsupported</a> = <a class="code" href="structarmnn_1_1_empty_optional.xhtml">EmptyOptional</a>()) <span class="keyword">const override</span>;</div><div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;</div><div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;    <a class="code" href="classarmnn_1_1_i_layer_support.xhtml#a6d593367be03c4ef23ba028caec5603d">ARMNN_DEPRECATED_MSG_REMOVAL_DATE</a>(<span class="stringliteral">&quot;This method is deprecated. Use IsLayerSupported instead.&quot;</span>, <span class="stringliteral">&quot;23.08&quot;</span>)</div><div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;    <span class="keywordtype">bool</span> <a class="code" href="classarmnn_1_1_layer_support_base.xhtml#adc5695cc25f4055c7ed54bdc8604a098">IsBatchToSpaceNdSupported</a>(<span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a>&amp; input,</div><div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;                                   <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a>&amp; output,</div><div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;                                   <span class="keyword">const</span> <a class="code" href="structarmnn_1_1_batch_to_space_nd_descriptor.xhtml">BatchToSpaceNdDescriptor</a>&amp; descriptor,</div><div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;                                   <a class="code" href="classarmnn_1_1_optional.xhtml">Optional&lt;std::string&amp;&gt;</a> <a class="code" href="classarmnn_1_1_i_layer_support.xhtml#ac75f9a02b051716a0cc1cc0818dfe454">reasonIfUnsupported</a> = <a class="code" href="structarmnn_1_1_empty_optional.xhtml">EmptyOptional</a>()) <span class="keyword">const override</span>;</div><div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;</div><div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;    <a class="code" href="classarmnn_1_1_i_layer_support.xhtml#a6d593367be03c4ef23ba028caec5603d">ARMNN_DEPRECATED_MSG_REMOVAL_DATE</a>(<span class="stringliteral">&quot;This method is deprecated. Use IsLayerSupported instead.&quot;</span>, <span class="stringliteral">&quot;23.08&quot;</span>)</div><div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;    <span class="keywordtype">bool</span> <a class="code" href="classarmnn_1_1_layer_support_base.xhtml#ae18f598a589683c3094a7bb41dcd3a3e">IsCastSupported</a>(<span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a>&amp; input,</div><div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;                         <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a>&amp; output,</div><div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;                         <a class="code" href="classarmnn_1_1_optional.xhtml">Optional&lt;std::string&amp;&gt;</a> <a class="code" href="classarmnn_1_1_i_layer_support.xhtml#ac75f9a02b051716a0cc1cc0818dfe454">reasonIfUnsupported</a> = <a class="code" href="structarmnn_1_1_empty_optional.xhtml">EmptyOptional</a>()) <span class="keyword">const override</span>;</div><div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;</div><div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;    <a class="code" href="classarmnn_1_1_i_layer_support.xhtml#a6d593367be03c4ef23ba028caec5603d">ARMNN_DEPRECATED_MSG_REMOVAL_DATE</a>(<span class="stringliteral">&quot;This method is deprecated. Use IsLayerSupported instead.&quot;</span>, <span class="stringliteral">&quot;23.08&quot;</span>)</div><div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;    <span class="keywordtype">bool</span> <a class="code" href="classarmnn_1_1_layer_support_base.xhtml#a6f1cae30d95bbd28dbac2a570c26c5f7">IsChannelShuffleSupported</a>(<span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a>&amp; input,</div><div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;                                   <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a>&amp; output,</div><div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;                                   <span class="keyword">const</span> <a class="code" href="structarmnn_1_1_channel_shuffle_descriptor.xhtml">ChannelShuffleDescriptor</a>&amp; descriptor,</div><div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;                                   <a class="code" href="classarmnn_1_1_optional.xhtml">Optional&lt;std::string&amp;&gt;</a> <a class="code" href="classarmnn_1_1_i_layer_support.xhtml#ac75f9a02b051716a0cc1cc0818dfe454">reasonIfUnsupported</a> = <a class="code" href="structarmnn_1_1_empty_optional.xhtml">EmptyOptional</a>()) <span class="keyword">const override</span>;</div><div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;</div><div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;    <a class="code" href="classarmnn_1_1_i_layer_support.xhtml#a6d593367be03c4ef23ba028caec5603d">ARMNN_DEPRECATED_MSG_REMOVAL_DATE</a>(<span class="stringliteral">&quot;This method is deprecated. Use IsLayerSupported instead.&quot;</span>, <span class="stringliteral">&quot;23.08&quot;</span>)</div><div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;    <span class="keywordtype">bool</span> <a class="code" href="classarmnn_1_1_layer_support_base.xhtml#a7c52726a684dd76258c61af124012537">IsComparisonSupported</a>(<span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a>&amp; input0,</div><div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;                               <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a>&amp; input1,</div><div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;                               <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a>&amp; output,</div><div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;                               <span class="keyword">const</span> <a class="code" href="structarmnn_1_1_comparison_descriptor.xhtml">ComparisonDescriptor</a>&amp; descriptor,</div><div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;                               <a class="code" href="classarmnn_1_1_optional.xhtml">Optional&lt;std::string&amp;&gt;</a> <a class="code" href="classarmnn_1_1_i_layer_support.xhtml#ac75f9a02b051716a0cc1cc0818dfe454">reasonIfUnsupported</a> = <a class="code" href="structarmnn_1_1_empty_optional.xhtml">EmptyOptional</a>()) <span class="keyword">const override</span>;</div><div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;</div><div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;    <a class="code" href="classarmnn_1_1_i_layer_support.xhtml#a6d593367be03c4ef23ba028caec5603d">ARMNN_DEPRECATED_MSG_REMOVAL_DATE</a>(<span class="stringliteral">&quot;This method is deprecated. Use IsLayerSupported instead.&quot;</span>, <span class="stringliteral">&quot;23.08&quot;</span>)</div><div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;    <span class="keywordtype">bool</span> <a class="code" href="classarmnn_1_1_layer_support_base.xhtml#a1542179a03961e3635bb5bef993c8e0e">IsConcatSupported</a>(<span class="keyword">const</span> std::vector&lt;const TensorInfo*&gt; inputs,</div><div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;                           <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a>&amp; output,</div><div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;                           <span class="keyword">const</span> <a class="code" href="structarmnn_1_1_origins_descriptor.xhtml">OriginsDescriptor</a>&amp; descriptor,</div><div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;                           <a class="code" href="classarmnn_1_1_optional.xhtml">Optional&lt;std::string&amp;&gt;</a> <a class="code" href="classarmnn_1_1_i_layer_support.xhtml#ac75f9a02b051716a0cc1cc0818dfe454">reasonIfUnsupported</a> = <a class="code" href="structarmnn_1_1_empty_optional.xhtml">EmptyOptional</a>()) <span class="keyword">const override</span>;</div><div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;</div><div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;    <a class="code" href="classarmnn_1_1_i_layer_support.xhtml#a6d593367be03c4ef23ba028caec5603d">ARMNN_DEPRECATED_MSG_REMOVAL_DATE</a>(<span class="stringliteral">&quot;This method is deprecated. Use IsLayerSupported instead.&quot;</span>, <span class="stringliteral">&quot;23.08&quot;</span>)</div><div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;    <span class="keywordtype">bool</span> <a class="code" href="classarmnn_1_1_layer_support_base.xhtml#adf18c4fa8fc9e0cdae1967990aa90fe8">IsConstantSupported</a>(<span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a>&amp; output,</div><div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;                             <a class="code" href="classarmnn_1_1_optional.xhtml">Optional&lt;std::string&amp;&gt;</a> <a class="code" href="classarmnn_1_1_i_layer_support.xhtml#ac75f9a02b051716a0cc1cc0818dfe454">reasonIfUnsupported</a> = <a class="code" href="structarmnn_1_1_empty_optional.xhtml">EmptyOptional</a>()) <span class="keyword">const override</span>;</div><div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;</div><div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;    <span class="keywordtype">bool</span> <a class="code" href="classarmnn_1_1_layer_support_base.xhtml#ad330b6e7dcf25410ea878af0557f2197">IsConvertBf16ToFp32Supported</a>(<span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a>&amp; input,</div><div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;                                      <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a>&amp; output,</div><div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;                                      <a class="code" href="classarmnn_1_1_optional.xhtml">Optional&lt;std::string&amp;&gt;</a> <a class="code" href="classarmnn_1_1_i_layer_support.xhtml#ac75f9a02b051716a0cc1cc0818dfe454">reasonIfUnsupported</a> = <a class="code" href="structarmnn_1_1_empty_optional.xhtml">EmptyOptional</a>()) <span class="keyword">const override</span>;</div><div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;</div><div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;    <a class="code" href="classarmnn_1_1_i_layer_support.xhtml#a6d593367be03c4ef23ba028caec5603d">ARMNN_DEPRECATED_MSG_REMOVAL_DATE</a>(<span class="stringliteral">&quot;This method is deprecated. Use IsLayerSupported instead.&quot;</span>, <span class="stringliteral">&quot;23.08&quot;</span>)</div><div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;    <span class="keywordtype">bool</span> <a class="code" href="classarmnn_1_1_layer_support_base.xhtml#a1efcaf6f02892442fefca09f49ea3d7c">IsConvertFp16ToFp32Supported</a>(<span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a>&amp; input,</div><div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;                                      <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a>&amp; output,</div><div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;                                      <a class="code" href="classarmnn_1_1_optional.xhtml">Optional&lt;std::string&amp;&gt;</a> <a class="code" href="classarmnn_1_1_i_layer_support.xhtml#ac75f9a02b051716a0cc1cc0818dfe454">reasonIfUnsupported</a> = <a class="code" href="structarmnn_1_1_empty_optional.xhtml">EmptyOptional</a>()) <span class="keyword">const override</span>;</div><div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;</div><div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;    <span class="keywordtype">bool</span> <a class="code" href="classarmnn_1_1_layer_support_base.xhtml#a0947498c6cc747db6219a22132a1b89a">IsConvertFp32ToBf16Supported</a>(<span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a>&amp; input,</div><div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;                                      <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a>&amp; output,</div><div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;                                      <a class="code" href="classarmnn_1_1_optional.xhtml">Optional&lt;std::string&amp;&gt;</a> <a class="code" href="classarmnn_1_1_i_layer_support.xhtml#ac75f9a02b051716a0cc1cc0818dfe454">reasonIfUnsupported</a> = <a class="code" href="structarmnn_1_1_empty_optional.xhtml">EmptyOptional</a>()) <span class="keyword">const override</span>;</div><div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;</div><div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;    <a class="code" href="classarmnn_1_1_i_layer_support.xhtml#a6d593367be03c4ef23ba028caec5603d">ARMNN_DEPRECATED_MSG_REMOVAL_DATE</a>(<span class="stringliteral">&quot;This method is deprecated. Use IsLayerSupported instead.&quot;</span>, <span class="stringliteral">&quot;23.08&quot;</span>)</div><div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;    <span class="keywordtype">bool</span> <a class="code" href="classarmnn_1_1_layer_support_base.xhtml#a91fb5f44d8b9427dc45443aa9ebfe13e">IsConvertFp32ToFp16Supported</a>(</div><div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;            <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a>&amp; input,</div><div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;            <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a>&amp; output,</div><div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;            <a class="code" href="classarmnn_1_1_optional.xhtml">Optional&lt;std::string&amp;&gt;</a> <a class="code" href="classarmnn_1_1_i_layer_support.xhtml#ac75f9a02b051716a0cc1cc0818dfe454">reasonIfUnsupported</a> = <a class="code" href="structarmnn_1_1_empty_optional.xhtml">EmptyOptional</a>()) <span class="keyword">const override</span>;</div><div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;</div><div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;    <a class="code" href="classarmnn_1_1_i_layer_support.xhtml#a6d593367be03c4ef23ba028caec5603d">ARMNN_DEPRECATED_MSG_REMOVAL_DATE</a>(<span class="stringliteral">&quot;This method is deprecated. Use IsLayerSupported instead.&quot;</span>, <span class="stringliteral">&quot;23.08&quot;</span>)</div><div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;    <span class="keywordtype">bool</span> <a class="code" href="classarmnn_1_1_layer_support_base.xhtml#af7ff06bd8115a6a9cc6d41e5c762798e">IsConvolution2dSupported</a>(<span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a>&amp; input,</div><div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;                                  <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a>&amp; output,</div><div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;                                  <span class="keyword">const</span> <a class="code" href="structarmnn_1_1_convolution2d_descriptor.xhtml">Convolution2dDescriptor</a>&amp; descriptor,</div><div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;                                  <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a>&amp; <a class="code" href="classarmnn_1_1_i_layer_support.xhtml#a631f893f44415523924016ed3f54a661">weights</a>,</div><div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;                                  <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_optional.xhtml">Optional&lt;TensorInfo&gt;</a>&amp; <a class="code" href="classarmnn_1_1_i_layer_support.xhtml#a71cf13fc7f7aeac054919e0c6dcab52e">biases</a>,</div><div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;                                  <a class="code" href="classarmnn_1_1_optional.xhtml">Optional&lt;std::string&amp;&gt;</a> <a class="code" href="classarmnn_1_1_i_layer_support.xhtml#ac75f9a02b051716a0cc1cc0818dfe454">reasonIfUnsupported</a> = <a class="code" href="structarmnn_1_1_empty_optional.xhtml">EmptyOptional</a>()) <span class="keyword">const override</span>;</div><div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;</div><div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;    <a class="code" href="classarmnn_1_1_i_layer_support.xhtml#a6d593367be03c4ef23ba028caec5603d">ARMNN_DEPRECATED_MSG_REMOVAL_DATE</a>(<span class="stringliteral">&quot;This method is deprecated. Use IsLayerSupported instead.&quot;</span>, <span class="stringliteral">&quot;23.08&quot;</span>)</div><div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;    <span class="keywordtype">bool</span> <a class="code" href="classarmnn_1_1_layer_support_base.xhtml#a052f289a5b4e48bb2b50c732753e2cfa">IsConvolution3dSupported</a>(<span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a>&amp; input,</div><div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;                                  <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a>&amp; output,</div><div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;                                  <span class="keyword">const</span> <a class="code" href="structarmnn_1_1_convolution3d_descriptor.xhtml">Convolution3dDescriptor</a>&amp; descriptor,</div><div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;                                  <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a>&amp; weights,</div><div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;                                  <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_optional.xhtml">Optional&lt;TensorInfo&gt;</a>&amp; biases,</div><div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;                                  <a class="code" href="classarmnn_1_1_optional.xhtml">Optional&lt;std::string&amp;&gt;</a> <a class="code" href="classarmnn_1_1_i_layer_support.xhtml#ac75f9a02b051716a0cc1cc0818dfe454">reasonIfUnsupported</a> = <a class="code" href="structarmnn_1_1_empty_optional.xhtml">EmptyOptional</a>()) <span class="keyword">const override</span>;</div><div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;</div><div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;    <a class="code" href="classarmnn_1_1_i_layer_support.xhtml#a6d593367be03c4ef23ba028caec5603d">ARMNN_DEPRECATED_MSG_REMOVAL_DATE</a>(<span class="stringliteral">&quot;This method is deprecated. Use IsLayerSupported instead.&quot;</span>, <span class="stringliteral">&quot;23.08&quot;</span>)</div><div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;    <span class="keywordtype">bool</span> <a class="code" href="classarmnn_1_1_layer_support_base.xhtml#a87a66c5e87a19534ce3e6c374c9b8f09">IsDebugSupported</a>(<span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a>&amp; input,</div><div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;                          <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a>&amp; output,</div><div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;                          <a class="code" href="classarmnn_1_1_optional.xhtml">Optional&lt;std::string&amp;&gt;</a> <a class="code" href="classarmnn_1_1_i_layer_support.xhtml#ac75f9a02b051716a0cc1cc0818dfe454">reasonIfUnsupported</a> = <a class="code" href="structarmnn_1_1_empty_optional.xhtml">EmptyOptional</a>()) <span class="keyword">const override</span>;</div><div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;</div><div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;    <a class="code" href="classarmnn_1_1_i_layer_support.xhtml#a6d593367be03c4ef23ba028caec5603d">ARMNN_DEPRECATED_MSG_REMOVAL_DATE</a>(<span class="stringliteral">&quot;This method is deprecated. Use IsLayerSupported instead.&quot;</span>, <span class="stringliteral">&quot;23.08&quot;</span>)</div><div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;    <span class="keywordtype">bool</span> <a class="code" href="classarmnn_1_1_layer_support_base.xhtml#a128fb9890897e08251a3f621e570cd23">IsDepthToSpaceSupported</a>(<span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a>&amp; input,</div><div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;                                 <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a>&amp; output,</div><div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;                                 <span class="keyword">const</span> <a class="code" href="structarmnn_1_1_space_to_depth_descriptor.xhtml">DepthToSpaceDescriptor</a>&amp; descriptor,</div><div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;                                 <a class="code" href="classarmnn_1_1_optional.xhtml">Optional&lt;std::string&amp;&gt;</a> <a class="code" href="classarmnn_1_1_i_layer_support.xhtml#ac75f9a02b051716a0cc1cc0818dfe454">reasonIfUnsupported</a> = <a class="code" href="structarmnn_1_1_empty_optional.xhtml">EmptyOptional</a>()) <span class="keyword">const override</span>;</div><div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;</div><div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;    <a class="code" href="classarmnn_1_1_i_layer_support.xhtml#a6d593367be03c4ef23ba028caec5603d">ARMNN_DEPRECATED_MSG_REMOVAL_DATE</a>(<span class="stringliteral">&quot;This method is deprecated. Use IsLayerSupported instead.&quot;</span>, <span class="stringliteral">&quot;23.08&quot;</span>)</div><div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;    <span class="keywordtype">bool</span> <a class="code" href="classarmnn_1_1_layer_support_base.xhtml#adc84390751f227fe03a115b5fa10b0fc">IsDepthwiseConvolutionSupported</a>(<span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a>&amp; input,</div><div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;                                         <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a>&amp; output,</div><div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;                                         <span class="keyword">const</span> <a class="code" href="structarmnn_1_1_depthwise_convolution2d_descriptor.xhtml">DepthwiseConvolution2dDescriptor</a>&amp; descriptor,</div><div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;                                         <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a>&amp; weights,</div><div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;                                         <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_optional.xhtml">Optional&lt;TensorInfo&gt;</a>&amp; biases,</div><div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;                                         <a class="code" href="classarmnn_1_1_optional.xhtml">Optional&lt;std::string&amp;&gt;</a> <a class="code" href="classarmnn_1_1_i_layer_support.xhtml#ac75f9a02b051716a0cc1cc0818dfe454">reasonIfUnsupported</a> = <a class="code" href="structarmnn_1_1_empty_optional.xhtml">EmptyOptional</a>()) <span class="keyword">const override</span>;</div><div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;</div><div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;    <a class="code" href="classarmnn_1_1_i_layer_support.xhtml#a6d593367be03c4ef23ba028caec5603d">ARMNN_DEPRECATED_MSG_REMOVAL_DATE</a>(<span class="stringliteral">&quot;This method is deprecated. Use IsLayerSupported instead.&quot;</span>, <span class="stringliteral">&quot;23.08&quot;</span>)</div><div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;    <span class="keywordtype">bool</span> <a class="code" href="classarmnn_1_1_layer_support_base.xhtml#a2e89c72cf60df7c2d2d7e5d98822b672">IsDequantizeSupported</a>(<span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a>&amp; input,</div><div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;                               <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a>&amp; output,</div><div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;                               <a class="code" href="classarmnn_1_1_optional.xhtml">Optional&lt;std::string&amp;&gt;</a> <a class="code" href="classarmnn_1_1_i_layer_support.xhtml#ac75f9a02b051716a0cc1cc0818dfe454">reasonIfUnsupported</a> = <a class="code" href="structarmnn_1_1_empty_optional.xhtml">EmptyOptional</a>()) <span class="keyword">const override</span>;</div><div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;</div><div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;    <span class="keywordtype">bool</span> <a class="code" href="classarmnn_1_1_layer_support_base.xhtml#a50af275d7755a5bb1be69736d7e4b02f">IsDetectionPostProcessSupported</a>(<span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a>&amp; boxEncodings,</div><div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;                                         <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a>&amp; <a class="code" href="classarmnn_1_1_i_layer_support.xhtml#a97cbe8ac8df2e213185599d693079acf">scores</a>,</div><div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;                                         <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a>&amp; <a class="code" href="classarmnn_1_1_i_layer_support.xhtml#ae1e19982da8ec2840ca14748c2d8522c">anchors</a>,</div><div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;                                         <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a>&amp; <a class="code" href="classarmnn_1_1_i_layer_support.xhtml#a6d0c2ca9c78e81a5e9e0f3db51934782">detectionBoxes</a>,</div><div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;                                         <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a>&amp; <a class="code" href="classarmnn_1_1_i_layer_support.xhtml#a56d52f01c9d80f3710ddace11e534434">detectionClasses</a>,</div><div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;                                         <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a>&amp; <a class="code" href="classarmnn_1_1_i_layer_support.xhtml#ac8776b306c349e20905e7ae17255b395">detectionScores</a>,</div><div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;                                         <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a>&amp; <a class="code" href="classarmnn_1_1_i_layer_support.xhtml#a3b204a7fda471668ab54dc967c5a7917">numDetections</a>,</div><div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;                                         <span class="keyword">const</span> <a class="code" href="structarmnn_1_1_detection_post_process_descriptor.xhtml">DetectionPostProcessDescriptor</a>&amp; descriptor,</div><div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;                                         <a class="code" href="classarmnn_1_1_optional.xhtml">Optional&lt;std::string&amp;&gt;</a> <a class="code" href="classarmnn_1_1_i_layer_support.xhtml#ac75f9a02b051716a0cc1cc0818dfe454">reasonIfUnsupported</a> = <a class="code" href="structarmnn_1_1_empty_optional.xhtml">EmptyOptional</a>()) <span class="keyword">const override</span>;</div><div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;</div><div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;    <a class="code" href="classarmnn_1_1_i_layer_support.xhtml#a6d593367be03c4ef23ba028caec5603d">ARMNN_DEPRECATED_MSG_REMOVAL_DATE</a>(<span class="stringliteral">&quot;This method is deprecated. Use IsLayerSupported instead.&quot;</span>, <span class="stringliteral">&quot;23.08&quot;</span>)</div><div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;    <span class="keywordtype">bool</span> <a class="code" href="classarmnn_1_1_layer_support_base.xhtml#a55d91a97ff664f42cd5cd62b60c15f80">IsDilatedDepthwiseConvolutionSupported</a>(<span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a>&amp; input,</div><div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160;                                                <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a>&amp; output,</div><div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;                                                <span class="keyword">const</span> <a class="code" href="structarmnn_1_1_depthwise_convolution2d_descriptor.xhtml">DepthwiseConvolution2dDescriptor</a>&amp; descriptor,</div><div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160;                                                <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a>&amp; weights,</div><div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160;                                                <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_optional.xhtml">Optional&lt;TensorInfo&gt;</a>&amp; biases,</div><div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160;                                                <a class="code" href="classarmnn_1_1_optional.xhtml">Optional&lt;std::string&amp;&gt;</a> <a class="code" href="classarmnn_1_1_i_layer_support.xhtml#ac75f9a02b051716a0cc1cc0818dfe454">reasonIfUnsupported</a> =</div><div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160;                                                    <a class="code" href="structarmnn_1_1_empty_optional.xhtml">EmptyOptional</a>()) <span class="keyword">const override</span>;</div><div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160;</div><div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;    <a class="code" href="classarmnn_1_1_i_layer_support.xhtml#a6d593367be03c4ef23ba028caec5603d">ARMNN_DEPRECATED_MSG_REMOVAL_DATE</a>(<span class="stringliteral">&quot;This method is deprecated. Use IsLayerSupported instead.&quot;</span>, <span class="stringliteral">&quot;23.08&quot;</span>)</div><div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160;    <span class="keywordtype">bool</span> <a class="code" href="classarmnn_1_1_layer_support_base.xhtml#a08f55136b1f0907e7083d70d719f697f">IsDivisionSupported</a>(<span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a>&amp; input0,</div><div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160;                             <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a>&amp; input1,</div><div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160;                             <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a>&amp; output,</div><div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160;                             <a class="code" href="classarmnn_1_1_optional.xhtml">Optional&lt;std::string&amp;&gt;</a> <a class="code" href="classarmnn_1_1_i_layer_support.xhtml#ac75f9a02b051716a0cc1cc0818dfe454">reasonIfUnsupported</a> = <a class="code" href="structarmnn_1_1_empty_optional.xhtml">EmptyOptional</a>()) <span class="keyword">const override</span>;</div><div class="line"><a name="l00169"></a><span class="lineno">  169</span>&#160;</div><div class="line"><a name="l00170"></a><span class="lineno">  170</span>&#160;    <a class="code" href="classarmnn_1_1_i_layer_support.xhtml#a6d593367be03c4ef23ba028caec5603d">ARMNN_DEPRECATED_MSG_REMOVAL_DATE</a>(<span class="stringliteral">&quot;This method is deprecated. Use IsLayerSupported instead.&quot;</span>, <span class="stringliteral">&quot;23.08&quot;</span>)</div><div class="line"><a name="l00171"></a><span class="lineno">  171</span>&#160;    <span class="keywordtype">bool</span> <a class="code" href="classarmnn_1_1_layer_support_base.xhtml#a61c5b4e5dc224ef0c876e43353b34030">IsElementwiseUnarySupported</a>(<span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a>&amp; input,</div><div class="line"><a name="l00172"></a><span class="lineno">  172</span>&#160;                                     <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a>&amp; output,</div><div class="line"><a name="l00173"></a><span class="lineno">  173</span>&#160;                                     <span class="keyword">const</span> <a class="code" href="structarmnn_1_1_elementwise_unary_descriptor.xhtml">ElementwiseUnaryDescriptor</a>&amp; descriptor,</div><div class="line"><a name="l00174"></a><span class="lineno">  174</span>&#160;                                     <a class="code" href="classarmnn_1_1_optional.xhtml">Optional&lt;std::string&amp;&gt;</a> <a class="code" href="classarmnn_1_1_i_layer_support.xhtml#ac75f9a02b051716a0cc1cc0818dfe454">reasonIfUnsupported</a> = <a class="code" href="structarmnn_1_1_empty_optional.xhtml">EmptyOptional</a>()) <span class="keyword">const override</span>;</div><div class="line"><a name="l00175"></a><span class="lineno">  175</span>&#160;</div><div class="line"><a name="l00176"></a><span class="lineno">  176</span>&#160;    <a class="code" href="classarmnn_1_1_i_layer_support.xhtml#a6d593367be03c4ef23ba028caec5603d">ARMNN_DEPRECATED_MSG_REMOVAL_DATE</a>(<span class="stringliteral">&quot;This method is deprecated. Use IsLayerSupported instead.&quot;</span>, <span class="stringliteral">&quot;23.08&quot;</span>)</div><div class="line"><a name="l00177"></a><span class="lineno">  177</span>&#160;    <span class="keywordtype">bool</span> <a class="code" href="classarmnn_1_1_layer_support_base.xhtml#aab7318aa8adc0a8a3b6a1780cfc1f90b">IsFakeQuantizationSupported</a>(<span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a>&amp; input,</div><div class="line"><a name="l00178"></a><span class="lineno">  178</span>&#160;                                     <span class="keyword">const</span> <a class="code" href="structarmnn_1_1_fake_quantization_descriptor.xhtml">FakeQuantizationDescriptor</a>&amp; descriptor,</div><div class="line"><a name="l00179"></a><span class="lineno">  179</span>&#160;                                     <a class="code" href="classarmnn_1_1_optional.xhtml">Optional&lt;std::string&amp;&gt;</a> <a class="code" href="classarmnn_1_1_i_layer_support.xhtml#ac75f9a02b051716a0cc1cc0818dfe454">reasonIfUnsupported</a> = <a class="code" href="structarmnn_1_1_empty_optional.xhtml">EmptyOptional</a>()) <span class="keyword">const override</span>;</div><div class="line"><a name="l00180"></a><span class="lineno">  180</span>&#160;</div><div class="line"><a name="l00181"></a><span class="lineno">  181</span>&#160;    <a class="code" href="classarmnn_1_1_i_layer_support.xhtml#a6d593367be03c4ef23ba028caec5603d">ARMNN_DEPRECATED_MSG_REMOVAL_DATE</a>(<span class="stringliteral">&quot;This method is deprecated. Use IsLayerSupported instead.&quot;</span>, <span class="stringliteral">&quot;23.08&quot;</span>)</div><div class="line"><a name="l00182"></a><span class="lineno">  182</span>&#160;    <span class="keyword">virtual</span> <span class="keywordtype">bool</span> <a class="code" href="classarmnn_1_1_layer_support_base.xhtml#acc5d9a4c8f29984de3bbdca87684f317">IsFillSupported</a>(<span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a>&amp; input,</div><div class="line"><a name="l00183"></a><span class="lineno">  183</span>&#160;                                 <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a>&amp; output,</div><div class="line"><a name="l00184"></a><span class="lineno">  184</span>&#160;                                 <span class="keyword">const</span> <a class="code" href="structarmnn_1_1_fill_descriptor.xhtml">FillDescriptor</a>&amp; descriptor,</div><div class="line"><a name="l00185"></a><span class="lineno">  185</span>&#160;                                 <a class="code" href="classarmnn_1_1_optional.xhtml">Optional&lt;std::string&amp;&gt;</a> <a class="code" href="classarmnn_1_1_i_layer_support.xhtml#ac75f9a02b051716a0cc1cc0818dfe454">reasonIfUnsupported</a> = <a class="code" href="structarmnn_1_1_empty_optional.xhtml">EmptyOptional</a>()) <span class="keyword">const override</span>;</div><div class="line"><a name="l00186"></a><span class="lineno">  186</span>&#160;</div><div class="line"><a name="l00187"></a><span class="lineno">  187</span>&#160;    <a class="code" href="classarmnn_1_1_i_layer_support.xhtml#a6d593367be03c4ef23ba028caec5603d">ARMNN_DEPRECATED_MSG_REMOVAL_DATE</a>(<span class="stringliteral">&quot;This method is deprecated. Use IsLayerSupported instead.&quot;</span>, <span class="stringliteral">&quot;23.08&quot;</span>)</div><div class="line"><a name="l00188"></a><span class="lineno">  188</span>&#160;    <span class="keywordtype">bool</span> <a class="code" href="classarmnn_1_1_layer_support_base.xhtml#a53c7593d1aa26207eac5d5814a9d56dc">IsFloorSupported</a>(<span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a>&amp; input,</div><div class="line"><a name="l00189"></a><span class="lineno">  189</span>&#160;                          <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a>&amp; output,</div><div class="line"><a name="l00190"></a><span class="lineno">  190</span>&#160;                          <a class="code" href="classarmnn_1_1_optional.xhtml">Optional&lt;std::string&amp;&gt;</a> <a class="code" href="classarmnn_1_1_i_layer_support.xhtml#ac75f9a02b051716a0cc1cc0818dfe454">reasonIfUnsupported</a> = <a class="code" href="structarmnn_1_1_empty_optional.xhtml">EmptyOptional</a>()) <span class="keyword">const override</span>;</div><div class="line"><a name="l00191"></a><span class="lineno">  191</span>&#160;</div><div class="line"><a name="l00192"></a><span class="lineno">  192</span>&#160;    <a class="code" href="classarmnn_1_1_i_layer_support.xhtml#a6d593367be03c4ef23ba028caec5603d">ARMNN_DEPRECATED_MSG_REMOVAL_DATE</a>(<span class="stringliteral">&quot;This method is deprecated. Use IsLayerSupported instead.&quot;</span>, <span class="stringliteral">&quot;23.08&quot;</span>)</div><div class="line"><a name="l00193"></a><span class="lineno">  193</span>&#160;    <span class="keywordtype">bool</span> <a class="code" href="classarmnn_1_1_layer_support_base.xhtml#aeaf971dd9dffd6f6bc7e5a1ae6b6af5c">IsFullyConnectedSupported</a>(<span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a>&amp; input,</div><div class="line"><a name="l00194"></a><span class="lineno">  194</span>&#160;                                   <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a>&amp; output,</div><div class="line"><a name="l00195"></a><span class="lineno">  195</span>&#160;                                   <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a>&amp; weights,</div><div class="line"><a name="l00196"></a><span class="lineno">  196</span>&#160;                                   <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a>&amp; biases,</div><div class="line"><a name="l00197"></a><span class="lineno">  197</span>&#160;                                   <span class="keyword">const</span> <a class="code" href="structarmnn_1_1_fully_connected_descriptor.xhtml">FullyConnectedDescriptor</a>&amp; descriptor,</div><div class="line"><a name="l00198"></a><span class="lineno">  198</span>&#160;                                   <a class="code" href="classarmnn_1_1_optional.xhtml">Optional&lt;std::string&amp;&gt;</a> <a class="code" href="classarmnn_1_1_i_layer_support.xhtml#ac75f9a02b051716a0cc1cc0818dfe454">reasonIfUnsupported</a> = <a class="code" href="structarmnn_1_1_empty_optional.xhtml">EmptyOptional</a>()) <span class="keyword">const override</span>;</div><div class="line"><a name="l00199"></a><span class="lineno">  199</span>&#160;</div><div class="line"><a name="l00200"></a><span class="lineno">  200</span>&#160;    <a class="code" href="classarmnn_1_1_i_layer_support.xhtml#a6d593367be03c4ef23ba028caec5603d">ARMNN_DEPRECATED_MSG_REMOVAL_DATE</a>(<span class="stringliteral">&quot;This method is deprecated. Use IsLayerSupported instead.&quot;</span>, <span class="stringliteral">&quot;23.08&quot;</span>)</div><div class="line"><a name="l00201"></a><span class="lineno">  201</span>&#160;    <span class="keywordtype">bool</span> <a class="code" href="classarmnn_1_1_layer_support_base.xhtml#a2f51fda38409c3768a7bd28cedf3f075">IsGatherSupported</a>(<span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a>&amp; input0,</div><div class="line"><a name="l00202"></a><span class="lineno">  202</span>&#160;                           <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a>&amp; input1,</div><div class="line"><a name="l00203"></a><span class="lineno">  203</span>&#160;                           <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a>&amp; output,</div><div class="line"><a name="l00204"></a><span class="lineno">  204</span>&#160;                           <span class="keyword">const</span> <a class="code" href="structarmnn_1_1_gather_descriptor.xhtml">GatherDescriptor</a>&amp; descriptor,</div><div class="line"><a name="l00205"></a><span class="lineno">  205</span>&#160;                           <a class="code" href="classarmnn_1_1_optional.xhtml">Optional&lt;std::string&amp;&gt;</a> <a class="code" href="classarmnn_1_1_i_layer_support.xhtml#ac75f9a02b051716a0cc1cc0818dfe454">reasonIfUnsupported</a> = <a class="code" href="structarmnn_1_1_empty_optional.xhtml">EmptyOptional</a>()) <span class="keyword">const override</span>;</div><div class="line"><a name="l00206"></a><span class="lineno">  206</span>&#160;</div><div class="line"><a name="l00207"></a><span class="lineno">  207</span>&#160;    <a class="code" href="classarmnn_1_1_i_layer_support.xhtml#a6d593367be03c4ef23ba028caec5603d">ARMNN_DEPRECATED_MSG_REMOVAL_DATE</a>(<span class="stringliteral">&quot;This method is deprecated. Use IsLayerSupported instead.&quot;</span>, <span class="stringliteral">&quot;23.08&quot;</span>)</div><div class="line"><a name="l00208"></a><span class="lineno">  208</span>&#160;    <span class="keywordtype">bool</span> <a class="code" href="classarmnn_1_1_layer_support_base.xhtml#ad29d99ecd719c640ed22dcf5c688c6a5">IsInputSupported</a>(<span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a>&amp; input,</div><div class="line"><a name="l00209"></a><span class="lineno">  209</span>&#160;                          <a class="code" href="classarmnn_1_1_optional.xhtml">Optional&lt;std::string&amp;&gt;</a> <a class="code" href="classarmnn_1_1_i_layer_support.xhtml#ac75f9a02b051716a0cc1cc0818dfe454">reasonIfUnsupported</a> = <a class="code" href="structarmnn_1_1_empty_optional.xhtml">EmptyOptional</a>()) <span class="keyword">const override</span>;</div><div class="line"><a name="l00210"></a><span class="lineno">  210</span>&#160;</div><div class="line"><a name="l00211"></a><span class="lineno">  211</span>&#160;    <a class="code" href="classarmnn_1_1_i_layer_support.xhtml#a6d593367be03c4ef23ba028caec5603d">ARMNN_DEPRECATED_MSG_REMOVAL_DATE</a>(<span class="stringliteral">&quot;This method is deprecated. Use IsLayerSupported instead.&quot;</span>, <span class="stringliteral">&quot;23.08&quot;</span>)</div><div class="line"><a name="l00212"></a><span class="lineno">  212</span>&#160;    <span class="keywordtype">bool</span> <a class="code" href="classarmnn_1_1_layer_support_base.xhtml#a0813546a09bf2caba6794014d1960624">IsInstanceNormalizationSupported</a>(</div><div class="line"><a name="l00213"></a><span class="lineno">  213</span>&#160;        <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a>&amp; input,</div><div class="line"><a name="l00214"></a><span class="lineno">  214</span>&#160;        <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a>&amp; output,</div><div class="line"><a name="l00215"></a><span class="lineno">  215</span>&#160;        <span class="keyword">const</span> <a class="code" href="structarmnn_1_1_instance_normalization_descriptor.xhtml">InstanceNormalizationDescriptor</a>&amp; descriptor,</div><div class="line"><a name="l00216"></a><span class="lineno">  216</span>&#160;        <a class="code" href="classarmnn_1_1_optional.xhtml">Optional&lt;std::string&amp;&gt;</a> <a class="code" href="classarmnn_1_1_i_layer_support.xhtml#ac75f9a02b051716a0cc1cc0818dfe454">reasonIfUnsupported</a> = <a class="code" href="structarmnn_1_1_empty_optional.xhtml">EmptyOptional</a>()) <span class="keyword">const override</span>;</div><div class="line"><a name="l00217"></a><span class="lineno">  217</span>&#160;</div><div class="line"><a name="l00218"></a><span class="lineno">  218</span>&#160;    <a class="code" href="classarmnn_1_1_i_layer_support.xhtml#a6d593367be03c4ef23ba028caec5603d">ARMNN_DEPRECATED_MSG_REMOVAL_DATE</a>(<span class="stringliteral">&quot;This method is deprecated. Use IsLayerSupported instead.&quot;</span>, <span class="stringliteral">&quot;23.08&quot;</span>)</div><div class="line"><a name="l00219"></a><span class="lineno">  219</span>&#160;    <span class="keywordtype">bool</span> <a class="code" href="classarmnn_1_1_layer_support_base.xhtml#aca4acda7ab553edfda828658d8f3882b">IsL2NormalizationSupported</a>(<span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a>&amp; input,</div><div class="line"><a name="l00220"></a><span class="lineno">  220</span>&#160;                                    <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a>&amp; output,</div><div class="line"><a name="l00221"></a><span class="lineno">  221</span>&#160;                                    <span class="keyword">const</span> <a class="code" href="structarmnn_1_1_l2_normalization_descriptor.xhtml">L2NormalizationDescriptor</a>&amp; descriptor,</div><div class="line"><a name="l00222"></a><span class="lineno">  222</span>&#160;                                    <a class="code" href="classarmnn_1_1_optional.xhtml">Optional&lt;std::string&amp;&gt;</a> <a class="code" href="classarmnn_1_1_i_layer_support.xhtml#ac75f9a02b051716a0cc1cc0818dfe454">reasonIfUnsupported</a> = <a class="code" href="structarmnn_1_1_empty_optional.xhtml">EmptyOptional</a>()) <span class="keyword">const override</span>;</div><div class="line"><a name="l00223"></a><span class="lineno">  223</span>&#160;</div><div class="line"><a name="l00224"></a><span class="lineno">  224</span>&#160;    <a class="code" href="classarmnn_1_1_i_layer_support.xhtml#a6d593367be03c4ef23ba028caec5603d">ARMNN_DEPRECATED_MSG_REMOVAL_DATE</a>(<span class="stringliteral">&quot;This method is deprecated. Use IsLayerSupported instead.&quot;</span>, <span class="stringliteral">&quot;23.08&quot;</span>)</div><div class="line"><a name="l00225"></a><span class="lineno">  225</span>&#160;    <span class="keywordtype">bool</span> <a class="code" href="classarmnn_1_1_layer_support_base.xhtml#a8fab6937a1010b5ed674b930b4f143cb">IsLogicalBinarySupported</a>(<span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a>&amp; input0,</div><div class="line"><a name="l00226"></a><span class="lineno">  226</span>&#160;                                  <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a>&amp; input1,</div><div class="line"><a name="l00227"></a><span class="lineno">  227</span>&#160;                                  <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a>&amp; output,</div><div class="line"><a name="l00228"></a><span class="lineno">  228</span>&#160;                                  <span class="keyword">const</span> <a class="code" href="structarmnn_1_1_logical_binary_descriptor.xhtml">LogicalBinaryDescriptor</a>&amp; descriptor,</div><div class="line"><a name="l00229"></a><span class="lineno">  229</span>&#160;                                  <a class="code" href="classarmnn_1_1_optional.xhtml">Optional&lt;std::string&amp;&gt;</a> <a class="code" href="classarmnn_1_1_i_layer_support.xhtml#ac75f9a02b051716a0cc1cc0818dfe454">reasonIfUnsupported</a> = <a class="code" href="structarmnn_1_1_empty_optional.xhtml">EmptyOptional</a>()) <span class="keyword">const override</span>;</div><div class="line"><a name="l00230"></a><span class="lineno">  230</span>&#160;</div><div class="line"><a name="l00231"></a><span class="lineno">  231</span>&#160;    <a class="code" href="classarmnn_1_1_i_layer_support.xhtml#a6d593367be03c4ef23ba028caec5603d">ARMNN_DEPRECATED_MSG_REMOVAL_DATE</a>(<span class="stringliteral">&quot;This method is deprecated. Use IsLayerSupported instead.&quot;</span>, <span class="stringliteral">&quot;23.08&quot;</span>)</div><div class="line"><a name="l00232"></a><span class="lineno">  232</span>&#160;    <span class="keywordtype">bool</span> <a class="code" href="classarmnn_1_1_layer_support_base.xhtml#a20134883695508a2192eecd403e7c44b">IsLogicalUnarySupported</a>(<span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a>&amp; input,</div><div class="line"><a name="l00233"></a><span class="lineno">  233</span>&#160;                                 <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a>&amp; output,</div><div class="line"><a name="l00234"></a><span class="lineno">  234</span>&#160;                                 <span class="keyword">const</span> <a class="code" href="structarmnn_1_1_elementwise_unary_descriptor.xhtml">ElementwiseUnaryDescriptor</a>&amp; descriptor,</div><div class="line"><a name="l00235"></a><span class="lineno">  235</span>&#160;                                 <a class="code" href="classarmnn_1_1_optional.xhtml">Optional&lt;std::string&amp;&gt;</a> <a class="code" href="classarmnn_1_1_i_layer_support.xhtml#ac75f9a02b051716a0cc1cc0818dfe454">reasonIfUnsupported</a> = <a class="code" href="structarmnn_1_1_empty_optional.xhtml">EmptyOptional</a>()) <span class="keyword">const override</span>;</div><div class="line"><a name="l00236"></a><span class="lineno">  236</span>&#160;</div><div class="line"><a name="l00237"></a><span class="lineno">  237</span>&#160;    <a class="code" href="classarmnn_1_1_i_layer_support.xhtml#a6d593367be03c4ef23ba028caec5603d">ARMNN_DEPRECATED_MSG_REMOVAL_DATE</a>(<span class="stringliteral">&quot;This method is deprecated. Use IsLayerSupported instead.&quot;</span>, <span class="stringliteral">&quot;23.08&quot;</span>)</div><div class="line"><a name="l00238"></a><span class="lineno">  238</span>&#160;    <span class="keywordtype">bool</span> <a class="code" href="classarmnn_1_1_layer_support_base.xhtml#aa0380b797cb9932fb03067dbe2cdecfb">IsLogSoftmaxSupported</a>(<span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a>&amp; input,</div><div class="line"><a name="l00239"></a><span class="lineno">  239</span>&#160;                               <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a>&amp; output,</div><div class="line"><a name="l00240"></a><span class="lineno">  240</span>&#160;                               <span class="keyword">const</span> <a class="code" href="structarmnn_1_1_softmax_descriptor.xhtml">LogSoftmaxDescriptor</a>&amp; descriptor,</div><div class="line"><a name="l00241"></a><span class="lineno">  241</span>&#160;                               <a class="code" href="classarmnn_1_1_optional.xhtml">Optional&lt;std::string&amp;&gt;</a> <a class="code" href="classarmnn_1_1_i_layer_support.xhtml#ac75f9a02b051716a0cc1cc0818dfe454">reasonIfUnsupported</a> = <a class="code" href="structarmnn_1_1_empty_optional.xhtml">EmptyOptional</a>()) <span class="keyword">const override</span>;</div><div class="line"><a name="l00242"></a><span class="lineno">  242</span>&#160;</div><div class="line"><a name="l00243"></a><span class="lineno">  243</span>&#160;    <a class="code" href="classarmnn_1_1_i_layer_support.xhtml#a6d593367be03c4ef23ba028caec5603d">ARMNN_DEPRECATED_MSG_REMOVAL_DATE</a>(<span class="stringliteral">&quot;This method is deprecated. Use IsLayerSupported instead.&quot;</span>, <span class="stringliteral">&quot;23.08&quot;</span>)</div><div class="line"><a name="l00244"></a><span class="lineno">  244</span>&#160;    <span class="keywordtype">bool</span> <a class="code" href="classarmnn_1_1_layer_support_base.xhtml#a862535721737220f62a49f14ff494dd5">IsLstmSupported</a>(<span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a>&amp; input,</div><div class="line"><a name="l00245"></a><span class="lineno">  245</span>&#160;                         <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a>&amp; <a class="code" href="classarmnn_1_1_i_layer_support.xhtml#a5a01de4e3851a25f2df77897fb8f7083">outputStateIn</a>,</div><div class="line"><a name="l00246"></a><span class="lineno">  246</span>&#160;                         <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a>&amp; <a class="code" href="classarmnn_1_1_i_layer_support.xhtml#aec04a02758804219fb461623464a8e96">cellStateIn</a>,</div><div class="line"><a name="l00247"></a><span class="lineno">  247</span>&#160;                         <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a>&amp; <a class="code" href="classarmnn_1_1_i_layer_support.xhtml#a4f6f59c4e91c7c37d9a119d615093ed3">scratchBuffer</a>,</div><div class="line"><a name="l00248"></a><span class="lineno">  248</span>&#160;                         <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a>&amp; <a class="code" href="classarmnn_1_1_i_layer_support.xhtml#a44eb2a514bddb31fe20f9e4f04159c9f">outputStateOut</a>,</div><div class="line"><a name="l00249"></a><span class="lineno">  249</span>&#160;                         <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a>&amp; <a class="code" href="classarmnn_1_1_i_layer_support.xhtml#ae1ee2d524d4252bffc0ed67e75882952">cellStateOut</a>,</div><div class="line"><a name="l00250"></a><span class="lineno">  250</span>&#160;                         <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a>&amp; output,</div><div class="line"><a name="l00251"></a><span class="lineno">  251</span>&#160;                         <span class="keyword">const</span> <a class="code" href="structarmnn_1_1_lstm_descriptor.xhtml">LstmDescriptor</a>&amp; descriptor,</div><div class="line"><a name="l00252"></a><span class="lineno">  252</span>&#160;                         <span class="keyword">const</span> <a class="code" href="structarmnn_1_1_lstm_input_params_info.xhtml">LstmInputParamsInfo</a>&amp; <a class="code" href="classarmnn_1_1_i_layer_support.xhtml#aca7a974c8803242968a8d6540275264a">paramsInfo</a>,</div><div class="line"><a name="l00253"></a><span class="lineno">  253</span>&#160;                         <a class="code" href="classarmnn_1_1_optional.xhtml">Optional&lt;std::string&amp;&gt;</a> <a class="code" href="classarmnn_1_1_i_layer_support.xhtml#ac75f9a02b051716a0cc1cc0818dfe454">reasonIfUnsupported</a> = <a class="code" href="structarmnn_1_1_empty_optional.xhtml">EmptyOptional</a>()) <span class="keyword">const override</span>;</div><div class="line"><a name="l00254"></a><span class="lineno">  254</span>&#160;</div><div class="line"><a name="l00255"></a><span class="lineno">  255</span>&#160;    <a class="code" href="classarmnn_1_1_i_layer_support.xhtml#a6d593367be03c4ef23ba028caec5603d">ARMNN_DEPRECATED_MSG_REMOVAL_DATE</a>(<span class="stringliteral">&quot;This method is deprecated. Use IsLayerSupported instead.&quot;</span>, <span class="stringliteral">&quot;23.08&quot;</span>)</div><div class="line"><a name="l00256"></a><span class="lineno">  256</span>&#160;    <span class="keywordtype">bool</span> <a class="code" href="classarmnn_1_1_layer_support_base.xhtml#afef9436c86b37b973471f2ae546ac00a">IsMaximumSupported</a>(<span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a>&amp; input0,</div><div class="line"><a name="l00257"></a><span class="lineno">  257</span>&#160;                            <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a>&amp; input1,</div><div class="line"><a name="l00258"></a><span class="lineno">  258</span>&#160;                            <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a>&amp; output,</div><div class="line"><a name="l00259"></a><span class="lineno">  259</span>&#160;                            <a class="code" href="classarmnn_1_1_optional.xhtml">Optional&lt;std::string&amp;&gt;</a> <a class="code" href="classarmnn_1_1_i_layer_support.xhtml#ac75f9a02b051716a0cc1cc0818dfe454">reasonIfUnsupported</a> = <a class="code" href="structarmnn_1_1_empty_optional.xhtml">EmptyOptional</a>()) <span class="keyword">const override</span>;</div><div class="line"><a name="l00260"></a><span class="lineno">  260</span>&#160;</div><div class="line"><a name="l00261"></a><span class="lineno">  261</span>&#160;    <a class="code" href="classarmnn_1_1_i_layer_support.xhtml#a6d593367be03c4ef23ba028caec5603d">ARMNN_DEPRECATED_MSG_REMOVAL_DATE</a>(<span class="stringliteral">&quot;This method is deprecated. Use IsLayerSupported instead.&quot;</span>, <span class="stringliteral">&quot;23.08&quot;</span>)</div><div class="line"><a name="l00262"></a><span class="lineno">  262</span>&#160;    <span class="keywordtype">bool</span> <a class="code" href="classarmnn_1_1_layer_support_base.xhtml#ab268618580d4f53bf5e9b5a47dee3f6a">IsMeanSupported</a>(<span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a>&amp; input,</div><div class="line"><a name="l00263"></a><span class="lineno">  263</span>&#160;                         <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a>&amp; output,</div><div class="line"><a name="l00264"></a><span class="lineno">  264</span>&#160;                         <span class="keyword">const</span> <a class="code" href="structarmnn_1_1_mean_descriptor.xhtml">MeanDescriptor</a>&amp; descriptor,</div><div class="line"><a name="l00265"></a><span class="lineno">  265</span>&#160;                         <a class="code" href="classarmnn_1_1_optional.xhtml">Optional&lt;std::string&amp;&gt;</a> <a class="code" href="classarmnn_1_1_i_layer_support.xhtml#ac75f9a02b051716a0cc1cc0818dfe454">reasonIfUnsupported</a> = <a class="code" href="structarmnn_1_1_empty_optional.xhtml">EmptyOptional</a>()) <span class="keyword">const override</span>;</div><div class="line"><a name="l00266"></a><span class="lineno">  266</span>&#160;</div><div class="line"><a name="l00267"></a><span class="lineno">  267</span>&#160;    <span class="keywordtype">bool</span> <a class="code" href="classarmnn_1_1_layer_support_base.xhtml#a9d25fabf725313fda40a41400155bafe">IsMemCopySupported</a>(<span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a>&amp; input,</div><div class="line"><a name="l00268"></a><span class="lineno">  268</span>&#160;                            <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a>&amp; output,</div><div class="line"><a name="l00269"></a><span class="lineno">  269</span>&#160;                            <a class="code" href="classarmnn_1_1_optional.xhtml">Optional&lt;std::string&amp;&gt;</a> <a class="code" href="classarmnn_1_1_i_layer_support.xhtml#ac75f9a02b051716a0cc1cc0818dfe454">reasonIfUnsupported</a> = <a class="code" href="structarmnn_1_1_empty_optional.xhtml">EmptyOptional</a>()) <span class="keyword">const override</span>;</div><div class="line"><a name="l00270"></a><span class="lineno">  270</span>&#160;</div><div class="line"><a name="l00271"></a><span class="lineno">  271</span>&#160;    <span class="keywordtype">bool</span> <a class="code" href="classarmnn_1_1_layer_support_base.xhtml#a334181d8098b943d03ccd820753ace75">IsMemImportSupported</a>(<span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a>&amp; input,</div><div class="line"><a name="l00272"></a><span class="lineno">  272</span>&#160;                              <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a>&amp; output,</div><div class="line"><a name="l00273"></a><span class="lineno">  273</span>&#160;                              <a class="code" href="classarmnn_1_1_optional.xhtml">Optional&lt;std::string&amp;&gt;</a> <a class="code" href="classarmnn_1_1_i_layer_support.xhtml#ac75f9a02b051716a0cc1cc0818dfe454">reasonIfUnsupported</a> = <a class="code" href="structarmnn_1_1_empty_optional.xhtml">EmptyOptional</a>()) <span class="keyword">const override</span>;</div><div class="line"><a name="l00274"></a><span class="lineno">  274</span>&#160;</div><div class="line"><a name="l00275"></a><span class="lineno">  275</span>&#160;    <span class="keywordtype">bool</span> <a class="code" href="classarmnn_1_1_layer_support_base.xhtml#aa9bbc383cac59d6f02d2ef7d2cc0076f">IsMergeSupported</a>(<span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a>&amp; input0,</div><div class="line"><a name="l00276"></a><span class="lineno">  276</span>&#160;                          <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a>&amp; input1,</div><div class="line"><a name="l00277"></a><span class="lineno">  277</span>&#160;                          <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a>&amp; output,</div><div class="line"><a name="l00278"></a><span class="lineno">  278</span>&#160;                          <a class="code" href="classarmnn_1_1_optional.xhtml">Optional&lt;std::string&amp;&gt;</a> <a class="code" href="classarmnn_1_1_i_layer_support.xhtml#ac75f9a02b051716a0cc1cc0818dfe454">reasonIfUnsupported</a> = <a class="code" href="structarmnn_1_1_empty_optional.xhtml">EmptyOptional</a>()) <span class="keyword">const override</span>;</div><div class="line"><a name="l00279"></a><span class="lineno">  279</span>&#160;</div><div class="line"><a name="l00280"></a><span class="lineno">  280</span>&#160;    <a class="code" href="classarmnn_1_1_i_layer_support.xhtml#a6d593367be03c4ef23ba028caec5603d">ARMNN_DEPRECATED_MSG_REMOVAL_DATE</a>(<span class="stringliteral">&quot;This method is deprecated. Use IsLayerSupported instead.&quot;</span>, <span class="stringliteral">&quot;23.08&quot;</span>)</div><div class="line"><a name="l00281"></a><span class="lineno">  281</span>&#160;    <span class="keywordtype">bool</span> <a class="code" href="classarmnn_1_1_layer_support_base.xhtml#a3d0eafb3de560b3482f857b56b2b2116">IsMinimumSupported</a>(<span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a>&amp; input0,</div><div class="line"><a name="l00282"></a><span class="lineno">  282</span>&#160;                            <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a>&amp; input1,</div><div class="line"><a name="l00283"></a><span class="lineno">  283</span>&#160;                            <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a>&amp; output,</div><div class="line"><a name="l00284"></a><span class="lineno">  284</span>&#160;                            <a class="code" href="classarmnn_1_1_optional.xhtml">Optional&lt;std::string&amp;&gt;</a> <a class="code" href="classarmnn_1_1_i_layer_support.xhtml#ac75f9a02b051716a0cc1cc0818dfe454">reasonIfUnsupported</a> = <a class="code" href="structarmnn_1_1_empty_optional.xhtml">EmptyOptional</a>()) <span class="keyword">const override</span>;</div><div class="line"><a name="l00285"></a><span class="lineno">  285</span>&#160;</div><div class="line"><a name="l00286"></a><span class="lineno">  286</span>&#160;    <a class="code" href="classarmnn_1_1_i_layer_support.xhtml#a6d593367be03c4ef23ba028caec5603d">ARMNN_DEPRECATED_MSG_REMOVAL_DATE</a>(<span class="stringliteral">&quot;This method is deprecated. Use IsLayerSupported instead.&quot;</span>, <span class="stringliteral">&quot;23.08&quot;</span>)</div><div class="line"><a name="l00287"></a><span class="lineno">  287</span>&#160;    <span class="keywordtype">bool</span> <a class="code" href="classarmnn_1_1_layer_support_base.xhtml#a421e1f3865d99d52613003048342c49a">IsMultiplicationSupported</a>(<span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a>&amp; input0,</div><div class="line"><a name="l00288"></a><span class="lineno">  288</span>&#160;                                   <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a>&amp; input1,</div><div class="line"><a name="l00289"></a><span class="lineno">  289</span>&#160;                                   <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a>&amp; output,</div><div class="line"><a name="l00290"></a><span class="lineno">  290</span>&#160;                                   <a class="code" href="classarmnn_1_1_optional.xhtml">Optional&lt;std::string&amp;&gt;</a> <a class="code" href="classarmnn_1_1_i_layer_support.xhtml#ac75f9a02b051716a0cc1cc0818dfe454">reasonIfUnsupported</a> = <a class="code" href="structarmnn_1_1_empty_optional.xhtml">EmptyOptional</a>()) <span class="keyword">const override</span>;</div><div class="line"><a name="l00291"></a><span class="lineno">  291</span>&#160;</div><div class="line"><a name="l00292"></a><span class="lineno">  292</span>&#160;    <a class="code" href="classarmnn_1_1_i_layer_support.xhtml#a6d593367be03c4ef23ba028caec5603d">ARMNN_DEPRECATED_MSG_REMOVAL_DATE</a>(<span class="stringliteral">&quot;This method is deprecated. Use IsLayerSupported instead.&quot;</span>, <span class="stringliteral">&quot;23.08&quot;</span>)</div><div class="line"><a name="l00293"></a><span class="lineno">  293</span>&#160;    <span class="keywordtype">bool</span> <a class="code" href="classarmnn_1_1_layer_support_base.xhtml#a994c2065561141bf37fcd2ff7bb4af4d">IsNormalizationSupported</a>(<span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a>&amp; input,</div><div class="line"><a name="l00294"></a><span class="lineno">  294</span>&#160;                                  <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a>&amp; output,</div><div class="line"><a name="l00295"></a><span class="lineno">  295</span>&#160;                                  <span class="keyword">const</span> <a class="code" href="structarmnn_1_1_normalization_descriptor.xhtml">NormalizationDescriptor</a>&amp; descriptor,</div><div class="line"><a name="l00296"></a><span class="lineno">  296</span>&#160;                                  <a class="code" href="classarmnn_1_1_optional.xhtml">Optional&lt;std::string&amp;&gt;</a> <a class="code" href="classarmnn_1_1_i_layer_support.xhtml#ac75f9a02b051716a0cc1cc0818dfe454">reasonIfUnsupported</a> = <a class="code" href="structarmnn_1_1_empty_optional.xhtml">EmptyOptional</a>()) <span class="keyword">const override</span>;</div><div class="line"><a name="l00297"></a><span class="lineno">  297</span>&#160;</div><div class="line"><a name="l00298"></a><span class="lineno">  298</span>&#160;    <a class="code" href="classarmnn_1_1_i_layer_support.xhtml#a6d593367be03c4ef23ba028caec5603d">ARMNN_DEPRECATED_MSG_REMOVAL_DATE</a>(<span class="stringliteral">&quot;This method is deprecated. Use IsLayerSupported instead.&quot;</span>, <span class="stringliteral">&quot;23.08&quot;</span>)</div><div class="line"><a name="l00299"></a><span class="lineno">  299</span>&#160;    <span class="keywordtype">bool</span> <a class="code" href="classarmnn_1_1_layer_support_base.xhtml#aef3244c0ef64c8f2f352d21ce0c06985">IsOutputSupported</a>(<span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a>&amp; output,</div><div class="line"><a name="l00300"></a><span class="lineno">  300</span>&#160;                           <a class="code" href="classarmnn_1_1_optional.xhtml">Optional&lt;std::string&amp;&gt;</a> <a class="code" href="classarmnn_1_1_i_layer_support.xhtml#ac75f9a02b051716a0cc1cc0818dfe454">reasonIfUnsupported</a> = <a class="code" href="structarmnn_1_1_empty_optional.xhtml">EmptyOptional</a>()) <span class="keyword">const override</span>;</div><div class="line"><a name="l00301"></a><span class="lineno">  301</span>&#160;</div><div class="line"><a name="l00302"></a><span class="lineno">  302</span>&#160;    <a class="code" href="classarmnn_1_1_i_layer_support.xhtml#a6d593367be03c4ef23ba028caec5603d">ARMNN_DEPRECATED_MSG_REMOVAL_DATE</a>(<span class="stringliteral">&quot;This method is deprecated. Use IsLayerSupported instead.&quot;</span>, <span class="stringliteral">&quot;23.08&quot;</span>)</div><div class="line"><a name="l00303"></a><span class="lineno">  303</span>&#160;    <span class="keywordtype">bool</span> <a class="code" href="classarmnn_1_1_layer_support_base.xhtml#a0534291adf9f3436ba331552eba29a43">IsPadSupported</a>(<span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a>&amp; input,</div><div class="line"><a name="l00304"></a><span class="lineno">  304</span>&#160;                        <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a>&amp; output,</div><div class="line"><a name="l00305"></a><span class="lineno">  305</span>&#160;                        <span class="keyword">const</span> <a class="code" href="structarmnn_1_1_pad_descriptor.xhtml">PadDescriptor</a>&amp; descriptor,</div><div class="line"><a name="l00306"></a><span class="lineno">  306</span>&#160;                        <a class="code" href="classarmnn_1_1_optional.xhtml">Optional&lt;std::string&amp;&gt;</a> <a class="code" href="classarmnn_1_1_i_layer_support.xhtml#ac75f9a02b051716a0cc1cc0818dfe454">reasonIfUnsupported</a> = <a class="code" href="structarmnn_1_1_empty_optional.xhtml">EmptyOptional</a>()) <span class="keyword">const override</span>;</div><div class="line"><a name="l00307"></a><span class="lineno">  307</span>&#160;</div><div class="line"><a name="l00308"></a><span class="lineno">  308</span>&#160;    <a class="code" href="classarmnn_1_1_i_layer_support.xhtml#a6d593367be03c4ef23ba028caec5603d">ARMNN_DEPRECATED_MSG_REMOVAL_DATE</a>(<span class="stringliteral">&quot;This method is deprecated. Use IsLayerSupported instead.&quot;</span>, <span class="stringliteral">&quot;23.08&quot;</span>)</div><div class="line"><a name="l00309"></a><span class="lineno">  309</span>&#160;    <span class="keywordtype">bool</span> <a class="code" href="classarmnn_1_1_layer_support_base.xhtml#a9d553495d9a94fa55588ae159d8bda30">IsPermuteSupported</a>(<span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a>&amp; input,</div><div class="line"><a name="l00310"></a><span class="lineno">  310</span>&#160;                            <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a>&amp; output,</div><div class="line"><a name="l00311"></a><span class="lineno">  311</span>&#160;                            <span class="keyword">const</span> <a class="code" href="structarmnn_1_1_permute_descriptor.xhtml">PermuteDescriptor</a>&amp; descriptor,</div><div class="line"><a name="l00312"></a><span class="lineno">  312</span>&#160;                            <a class="code" href="classarmnn_1_1_optional.xhtml">Optional&lt;std::string&amp;&gt;</a> <a class="code" href="classarmnn_1_1_i_layer_support.xhtml#ac75f9a02b051716a0cc1cc0818dfe454">reasonIfUnsupported</a> = <a class="code" href="structarmnn_1_1_empty_optional.xhtml">EmptyOptional</a>()) <span class="keyword">const override</span>;</div><div class="line"><a name="l00313"></a><span class="lineno">  313</span>&#160;</div><div class="line"><a name="l00314"></a><span class="lineno">  314</span>&#160;    <a class="code" href="classarmnn_1_1_i_layer_support.xhtml#a6d593367be03c4ef23ba028caec5603d">ARMNN_DEPRECATED_MSG_REMOVAL_DATE</a>(<span class="stringliteral">&quot;This method is deprecated. Use IsLayerSupported instead.&quot;</span>, <span class="stringliteral">&quot;23.08&quot;</span>)</div><div class="line"><a name="l00315"></a><span class="lineno">  315</span>&#160;    <span class="keywordtype">bool</span> <a class="code" href="classarmnn_1_1_layer_support_base.xhtml#aa955675303d67b1d1fb51fb7f09d8c21">IsPooling2dSupported</a>(<span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a>&amp; input,</div><div class="line"><a name="l00316"></a><span class="lineno">  316</span>&#160;                              <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a>&amp; output,</div><div class="line"><a name="l00317"></a><span class="lineno">  317</span>&#160;                              <span class="keyword">const</span> <a class="code" href="structarmnn_1_1_pooling2d_descriptor.xhtml">Pooling2dDescriptor</a>&amp; descriptor,</div><div class="line"><a name="l00318"></a><span class="lineno">  318</span>&#160;                              <a class="code" href="classarmnn_1_1_optional.xhtml">Optional&lt;std::string&amp;&gt;</a> <a class="code" href="classarmnn_1_1_i_layer_support.xhtml#ac75f9a02b051716a0cc1cc0818dfe454">reasonIfUnsupported</a> = <a class="code" href="structarmnn_1_1_empty_optional.xhtml">EmptyOptional</a>()) <span class="keyword">const override</span>;</div><div class="line"><a name="l00319"></a><span class="lineno">  319</span>&#160;</div><div class="line"><a name="l00320"></a><span class="lineno">  320</span>&#160;    <a class="code" href="classarmnn_1_1_i_layer_support.xhtml#a6d593367be03c4ef23ba028caec5603d">ARMNN_DEPRECATED_MSG_REMOVAL_DATE</a>(<span class="stringliteral">&quot;This method is deprecated. Use IsLayerSupported instead.&quot;</span>, <span class="stringliteral">&quot;23.08&quot;</span>)</div><div class="line"><a name="l00321"></a><span class="lineno">  321</span>&#160;    <span class="keywordtype">bool</span> <a class="code" href="classarmnn_1_1_layer_support_base.xhtml#a5aec1c6fb4f73909a10f72f45815d2cb">IsPooling3dSupported</a>(<span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a>&amp; input,</div><div class="line"><a name="l00322"></a><span class="lineno">  322</span>&#160;                              <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a>&amp; output,</div><div class="line"><a name="l00323"></a><span class="lineno">  323</span>&#160;                              <span class="keyword">const</span> <a class="code" href="structarmnn_1_1_pooling3d_descriptor.xhtml">Pooling3dDescriptor</a>&amp; descriptor,</div><div class="line"><a name="l00324"></a><span class="lineno">  324</span>&#160;                              <a class="code" href="classarmnn_1_1_optional.xhtml">Optional&lt;std::string&amp;&gt;</a> <a class="code" href="classarmnn_1_1_i_layer_support.xhtml#ac75f9a02b051716a0cc1cc0818dfe454">reasonIfUnsupported</a> = <a class="code" href="structarmnn_1_1_empty_optional.xhtml">EmptyOptional</a>()) <span class="keyword">const override</span>;</div><div class="line"><a name="l00325"></a><span class="lineno">  325</span>&#160;</div><div class="line"><a name="l00326"></a><span class="lineno">  326</span>&#160;    <a class="code" href="classarmnn_1_1_i_layer_support.xhtml#a6d593367be03c4ef23ba028caec5603d">ARMNN_DEPRECATED_MSG_REMOVAL_DATE</a>(<span class="stringliteral">&quot;This method is deprecated. Use IsLayerSupported instead.&quot;</span>, <span class="stringliteral">&quot;23.08&quot;</span>)</div><div class="line"><a name="l00327"></a><span class="lineno">  327</span>&#160;    <span class="keywordtype">bool</span> <a class="code" href="classarmnn_1_1_layer_support_base.xhtml#adc1a598f2f572564818e3d343af93486">IsPreCompiledSupported</a>(<span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a>&amp; input,</div><div class="line"><a name="l00328"></a><span class="lineno">  328</span>&#160;                                <span class="keyword">const</span> <a class="code" href="structarmnn_1_1_pre_compiled_descriptor.xhtml">PreCompiledDescriptor</a>&amp; descriptor,</div><div class="line"><a name="l00329"></a><span class="lineno">  329</span>&#160;                                <a class="code" href="classarmnn_1_1_optional.xhtml">Optional&lt;std::string&amp;&gt;</a> <a class="code" href="classarmnn_1_1_i_layer_support.xhtml#ac75f9a02b051716a0cc1cc0818dfe454">reasonIfUnsupported</a> = <a class="code" href="structarmnn_1_1_empty_optional.xhtml">EmptyOptional</a>()) <span class="keyword">const override</span>;</div><div class="line"><a name="l00330"></a><span class="lineno">  330</span>&#160;</div><div class="line"><a name="l00331"></a><span class="lineno">  331</span>&#160;    <a class="code" href="classarmnn_1_1_i_layer_support.xhtml#a6d593367be03c4ef23ba028caec5603d">ARMNN_DEPRECATED_MSG_REMOVAL_DATE</a>(<span class="stringliteral">&quot;This method is deprecated. Use IsLayerSupported instead.&quot;</span>, <span class="stringliteral">&quot;23.08&quot;</span>)</div><div class="line"><a name="l00332"></a><span class="lineno">  332</span>&#160;    <span class="keywordtype">bool</span> <a class="code" href="classarmnn_1_1_layer_support_base.xhtml#a93cf81b28c4275a338f41c536a451158">IsPreluSupported</a>(<span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a>&amp; input,</div><div class="line"><a name="l00333"></a><span class="lineno">  333</span>&#160;                          <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a>&amp; <a class="code" href="classarmnn_1_1_i_layer_support.xhtml#a218e2ebb5babb8323688906b8997eafb">alpha</a>,</div><div class="line"><a name="l00334"></a><span class="lineno">  334</span>&#160;                          <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a>&amp; output,</div><div class="line"><a name="l00335"></a><span class="lineno">  335</span>&#160;                          <a class="code" href="classarmnn_1_1_optional.xhtml">Optional&lt;std::string &amp;&gt;</a> <a class="code" href="classarmnn_1_1_i_layer_support.xhtml#ac75f9a02b051716a0cc1cc0818dfe454">reasonIfUnsupported</a>) <span class="keyword">const override</span>;</div><div class="line"><a name="l00336"></a><span class="lineno">  336</span>&#160;</div><div class="line"><a name="l00337"></a><span class="lineno">  337</span>&#160;    <a class="code" href="classarmnn_1_1_i_layer_support.xhtml#a6d593367be03c4ef23ba028caec5603d">ARMNN_DEPRECATED_MSG_REMOVAL_DATE</a>(<span class="stringliteral">&quot;This method is deprecated. Use IsLayerSupported instead.&quot;</span>, <span class="stringliteral">&quot;23.08&quot;</span>)</div><div class="line"><a name="l00338"></a><span class="lineno">  338</span>&#160;    <span class="keywordtype">bool</span> <a class="code" href="classarmnn_1_1_layer_support_base.xhtml#ad2c7be6b84b04444e514f52f593b3df7">IsQuantizeSupported</a>(<span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a>&amp; input,</div><div class="line"><a name="l00339"></a><span class="lineno">  339</span>&#160;                             <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a>&amp; output,</div><div class="line"><a name="l00340"></a><span class="lineno">  340</span>&#160;                             <a class="code" href="classarmnn_1_1_optional.xhtml">Optional&lt;std::string&amp;&gt;</a> reasonIfUnsupported = <a class="code" href="structarmnn_1_1_empty_optional.xhtml">EmptyOptional</a>()) <span class="keyword">const override</span>;</div><div class="line"><a name="l00341"></a><span class="lineno">  341</span>&#160;</div><div class="line"><a name="l00342"></a><span class="lineno">  342</span>&#160;    <a class="code" href="classarmnn_1_1_i_layer_support.xhtml#a6d593367be03c4ef23ba028caec5603d">ARMNN_DEPRECATED_MSG_REMOVAL_DATE</a>(<span class="stringliteral">&quot;This method is deprecated. Use IsLayerSupported instead.&quot;</span>, <span class="stringliteral">&quot;23.08&quot;</span>)</div><div class="line"><a name="l00343"></a><span class="lineno">  343</span>&#160;    <span class="keywordtype">bool</span> <a class="code" href="classarmnn_1_1_layer_support_base.xhtml#adf54bcad228c0ac21f6735d31460cf31">IsQLstmSupported</a>(<span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a>&amp; input,</div><div class="line"><a name="l00344"></a><span class="lineno">  344</span>&#160;                          <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a>&amp; <a class="code" href="classarmnn_1_1_i_layer_support.xhtml#a5b09834cc88bb4156e291c37bd2434ff">previousOutputIn</a>,</div><div class="line"><a name="l00345"></a><span class="lineno">  345</span>&#160;                          <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a>&amp; <a class="code" href="classarmnn_1_1_i_layer_support.xhtml#ad5e0e3fb8a59107ac3366028a057db12">previousCellStateIn</a>,</div><div class="line"><a name="l00346"></a><span class="lineno">  346</span>&#160;                          <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a>&amp; outputStateOut,</div><div class="line"><a name="l00347"></a><span class="lineno">  347</span>&#160;                          <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a>&amp; cellStateOut,</div><div class="line"><a name="l00348"></a><span class="lineno">  348</span>&#160;                          <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a>&amp; output,</div><div class="line"><a name="l00349"></a><span class="lineno">  349</span>&#160;                          <span class="keyword">const</span> <a class="code" href="structarmnn_1_1_q_lstm_descriptor.xhtml">QLstmDescriptor</a>&amp; descriptor,</div><div class="line"><a name="l00350"></a><span class="lineno">  350</span>&#160;                          <span class="keyword">const</span> <a class="code" href="structarmnn_1_1_lstm_input_params_info.xhtml">LstmInputParamsInfo</a>&amp; paramsInfo,</div><div class="line"><a name="l00351"></a><span class="lineno">  351</span>&#160;                          <a class="code" href="classarmnn_1_1_optional.xhtml">Optional&lt;std::string&amp;&gt;</a> reasonIfUnsupported = <a class="code" href="structarmnn_1_1_empty_optional.xhtml">EmptyOptional</a>()) <span class="keyword">const override</span>;</div><div class="line"><a name="l00352"></a><span class="lineno">  352</span>&#160;</div><div class="line"><a name="l00353"></a><span class="lineno">  353</span>&#160;    <span class="keywordtype">bool</span> <a class="code" href="classarmnn_1_1_layer_support_base.xhtml#af1be52d9f968bfab069344756bf232c4">IsQuantizedLstmSupported</a>(<span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a>&amp; input,</div><div class="line"><a name="l00354"></a><span class="lineno">  354</span>&#160;                                  <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a>&amp; previousCellStateIn,</div><div class="line"><a name="l00355"></a><span class="lineno">  355</span>&#160;                                  <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a>&amp; previousOutputIn,</div><div class="line"><a name="l00356"></a><span class="lineno">  356</span>&#160;                                  <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a>&amp; cellStateOut,</div><div class="line"><a name="l00357"></a><span class="lineno">  357</span>&#160;                                  <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a>&amp; output,</div><div class="line"><a name="l00358"></a><span class="lineno">  358</span>&#160;                                  <span class="keyword">const</span> <a class="code" href="structarmnn_1_1_quantized_lstm_input_params_info.xhtml">QuantizedLstmInputParamsInfo</a>&amp; paramsInfo,</div><div class="line"><a name="l00359"></a><span class="lineno">  359</span>&#160;                                  <a class="code" href="classarmnn_1_1_optional.xhtml">Optional&lt;std::string&amp;&gt;</a> reasonIfUnsupported = <a class="code" href="structarmnn_1_1_empty_optional.xhtml">EmptyOptional</a>()) <span class="keyword">const override</span>;</div><div class="line"><a name="l00360"></a><span class="lineno">  360</span>&#160;</div><div class="line"><a name="l00361"></a><span class="lineno">  361</span>&#160;    <a class="code" href="classarmnn_1_1_i_layer_support.xhtml#a6d593367be03c4ef23ba028caec5603d">ARMNN_DEPRECATED_MSG_REMOVAL_DATE</a>(<span class="stringliteral">&quot;This method is deprecated. Use IsLayerSupported instead.&quot;</span>, <span class="stringliteral">&quot;23.08&quot;</span>)</div><div class="line"><a name="l00362"></a><span class="lineno">  362</span>&#160;    <span class="keywordtype">bool</span> <a class="code" href="classarmnn_1_1_layer_support_base.xhtml#a707638bc045d261dff4faaf4a2acc72b">IsRankSupported</a>(<span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a>&amp; input,</div><div class="line"><a name="l00363"></a><span class="lineno">  363</span>&#160;                         <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a>&amp; output,</div><div class="line"><a name="l00364"></a><span class="lineno">  364</span>&#160;                         <a class="code" href="classarmnn_1_1_optional.xhtml">Optional&lt;std::string&amp;&gt;</a> reasonIfUnsupported) <span class="keyword">const override</span>;</div><div class="line"><a name="l00365"></a><span class="lineno">  365</span>&#160;</div><div class="line"><a name="l00366"></a><span class="lineno">  366</span>&#160;    <a class="code" href="classarmnn_1_1_i_layer_support.xhtml#a6d593367be03c4ef23ba028caec5603d">ARMNN_DEPRECATED_MSG_REMOVAL_DATE</a>(<span class="stringliteral">&quot;This method is deprecated. Use IsLayerSupported instead.&quot;</span>, <span class="stringliteral">&quot;23.08&quot;</span>)</div><div class="line"><a name="l00367"></a><span class="lineno">  367</span>&#160;    <span class="keywordtype">bool</span> <a class="code" href="classarmnn_1_1_layer_support_base.xhtml#a917c126e64314263b8b5f7bca455ddfb">IsReduceSupported</a>(<span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a>&amp; input,</div><div class="line"><a name="l00368"></a><span class="lineno">  368</span>&#160;                           <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a>&amp; output,</div><div class="line"><a name="l00369"></a><span class="lineno">  369</span>&#160;                           <span class="keyword">const</span> <a class="code" href="structarmnn_1_1_reduce_descriptor.xhtml">ReduceDescriptor</a>&amp; descriptor,</div><div class="line"><a name="l00370"></a><span class="lineno">  370</span>&#160;                           <a class="code" href="classarmnn_1_1_optional.xhtml">Optional&lt;std::string&amp;&gt;</a> reasonIfUnsupported = <a class="code" href="structarmnn_1_1_empty_optional.xhtml">EmptyOptional</a>()) <span class="keyword">const override</span>;</div><div class="line"><a name="l00371"></a><span class="lineno">  371</span>&#160;</div><div class="line"><a name="l00372"></a><span class="lineno">  372</span>&#160;    <a class="code" href="classarmnn_1_1_i_layer_support.xhtml#a6d593367be03c4ef23ba028caec5603d">ARMNN_DEPRECATED_MSG_REMOVAL_DATE</a>(<span class="stringliteral">&quot;This method is deprecated. Use IsLayerSupported instead.&quot;</span>, <span class="stringliteral">&quot;23.08&quot;</span>)</div><div class="line"><a name="l00373"></a><span class="lineno">  373</span>&#160;    <span class="keywordtype">bool</span> <a class="code" href="classarmnn_1_1_layer_support_base.xhtml#aa02f01bbcb48c67f5b2efc4132ec5e86">IsReshapeSupported</a>(<span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a>&amp; input,</div><div class="line"><a name="l00374"></a><span class="lineno">  374</span>&#160;                            <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a>&amp; output,</div><div class="line"><a name="l00375"></a><span class="lineno">  375</span>&#160;                            <span class="keyword">const</span> <a class="code" href="structarmnn_1_1_reshape_descriptor.xhtml">ReshapeDescriptor</a>&amp; descriptor,</div><div class="line"><a name="l00376"></a><span class="lineno">  376</span>&#160;                            <a class="code" href="classarmnn_1_1_optional.xhtml">Optional&lt;std::string&amp;&gt;</a> reasonIfUnsupported = <a class="code" href="structarmnn_1_1_empty_optional.xhtml">EmptyOptional</a>()) <span class="keyword">const override</span>;</div><div class="line"><a name="l00377"></a><span class="lineno">  377</span>&#160;</div><div class="line"><a name="l00378"></a><span class="lineno">  378</span>&#160;    <a class="code" href="classarmnn_1_1_i_layer_support.xhtml#a6d593367be03c4ef23ba028caec5603d">ARMNN_DEPRECATED_MSG_REMOVAL_DATE</a>(<span class="stringliteral">&quot;This method is deprecated. Use IsLayerSupported instead.&quot;</span>, <span class="stringliteral">&quot;23.08&quot;</span>)</div><div class="line"><a name="l00379"></a><span class="lineno">  379</span>&#160;    <span class="keywordtype">bool</span> <a class="code" href="classarmnn_1_1_layer_support_base.xhtml#a3d27a3fc6a7df0b68d80cb113aff8b6c">IsResizeSupported</a>(<span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a>&amp; input,</div><div class="line"><a name="l00380"></a><span class="lineno">  380</span>&#160;                           <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a>&amp; output,</div><div class="line"><a name="l00381"></a><span class="lineno">  381</span>&#160;                           <span class="keyword">const</span> <a class="code" href="structarmnn_1_1_resize_descriptor.xhtml">ResizeDescriptor</a>&amp; descriptor,</div><div class="line"><a name="l00382"></a><span class="lineno">  382</span>&#160;                           <a class="code" href="classarmnn_1_1_optional.xhtml">Optional&lt;std::string&amp;&gt;</a> reasonIfUnsupported = <a class="code" href="structarmnn_1_1_empty_optional.xhtml">EmptyOptional</a>()) <span class="keyword">const override</span>;</div><div class="line"><a name="l00383"></a><span class="lineno">  383</span>&#160;</div><div class="line"><a name="l00384"></a><span class="lineno">  384</span>&#160;    <span class="keywordtype">bool</span> <a class="code" href="classarmnn_1_1_layer_support_base.xhtml#a3c6816950ad290155bde03b7fb31e160">IsShapeSupported</a>(<span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a>&amp; input,</div><div class="line"><a name="l00385"></a><span class="lineno">  385</span>&#160;                          <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a>&amp; output,</div><div class="line"><a name="l00386"></a><span class="lineno">  386</span>&#160;                          <a class="code" href="classarmnn_1_1_optional.xhtml">Optional&lt;std::string&amp;&gt;</a> reasonIfUnsupported = <a class="code" href="structarmnn_1_1_empty_optional.xhtml">EmptyOptional</a>()) <span class="keyword">const override</span>;</div><div class="line"><a name="l00387"></a><span class="lineno">  387</span>&#160;</div><div class="line"><a name="l00388"></a><span class="lineno">  388</span>&#160;    <a class="code" href="classarmnn_1_1_i_layer_support.xhtml#a6d593367be03c4ef23ba028caec5603d">ARMNN_DEPRECATED_MSG_REMOVAL_DATE</a>(<span class="stringliteral">&quot;This method is deprecated. Use IsLayerSupported instead.&quot;</span>, <span class="stringliteral">&quot;23.08&quot;</span>)</div><div class="line"><a name="l00389"></a><span class="lineno">  389</span>&#160;    <span class="keywordtype">bool</span> <a class="code" href="classarmnn_1_1_layer_support_base.xhtml#a0e14dafa85cfcd4a6b6b752284b51e63">IsSliceSupported</a>(<span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a>&amp; input,</div><div class="line"><a name="l00390"></a><span class="lineno">  390</span>&#160;                          <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a>&amp; output,</div><div class="line"><a name="l00391"></a><span class="lineno">  391</span>&#160;                          <span class="keyword">const</span> <a class="code" href="structarmnn_1_1_slice_descriptor.xhtml">SliceDescriptor</a>&amp; descriptor,</div><div class="line"><a name="l00392"></a><span class="lineno">  392</span>&#160;                          <a class="code" href="classarmnn_1_1_optional.xhtml">Optional&lt;std::string&amp;&gt;</a> reasonIfUnsupported = <a class="code" href="structarmnn_1_1_empty_optional.xhtml">EmptyOptional</a>()) <span class="keyword">const override</span>;</div><div class="line"><a name="l00393"></a><span class="lineno">  393</span>&#160;</div><div class="line"><a name="l00394"></a><span class="lineno">  394</span>&#160;    <a class="code" href="classarmnn_1_1_i_layer_support.xhtml#a6d593367be03c4ef23ba028caec5603d">ARMNN_DEPRECATED_MSG_REMOVAL_DATE</a>(<span class="stringliteral">&quot;This method is deprecated. Use IsLayerSupported instead.&quot;</span>, <span class="stringliteral">&quot;23.08&quot;</span>)</div><div class="line"><a name="l00395"></a><span class="lineno">  395</span>&#160;    <span class="keywordtype">bool</span> <a class="code" href="classarmnn_1_1_layer_support_base.xhtml#a8385cf8227907904a6a86fac318fc099">IsSoftmaxSupported</a>(<span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a>&amp; input,</div><div class="line"><a name="l00396"></a><span class="lineno">  396</span>&#160;                            <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a>&amp; output,</div><div class="line"><a name="l00397"></a><span class="lineno">  397</span>&#160;                            <span class="keyword">const</span> <a class="code" href="structarmnn_1_1_softmax_descriptor.xhtml">SoftmaxDescriptor</a>&amp; descriptor,</div><div class="line"><a name="l00398"></a><span class="lineno">  398</span>&#160;                            <a class="code" href="classarmnn_1_1_optional.xhtml">Optional&lt;std::string&amp;&gt;</a> reasonIfUnsupported = <a class="code" href="structarmnn_1_1_empty_optional.xhtml">EmptyOptional</a>()) <span class="keyword">const override</span>;</div><div class="line"><a name="l00399"></a><span class="lineno">  399</span>&#160;</div><div class="line"><a name="l00400"></a><span class="lineno">  400</span>&#160;    <a class="code" href="classarmnn_1_1_i_layer_support.xhtml#a6d593367be03c4ef23ba028caec5603d">ARMNN_DEPRECATED_MSG_REMOVAL_DATE</a>(<span class="stringliteral">&quot;This method is deprecated. Use IsLayerSupported instead.&quot;</span>, <span class="stringliteral">&quot;23.08&quot;</span>)</div><div class="line"><a name="l00401"></a><span class="lineno">  401</span>&#160;    <span class="keywordtype">bool</span> <a class="code" href="classarmnn_1_1_layer_support_base.xhtml#a3adfc31e079a970e028e537ec05fabf5">IsSpaceToBatchNdSupported</a>(<span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a>&amp; input,</div><div class="line"><a name="l00402"></a><span class="lineno">  402</span>&#160;                                   <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a>&amp; output,</div><div class="line"><a name="l00403"></a><span class="lineno">  403</span>&#160;                                   <span class="keyword">const</span> <a class="code" href="structarmnn_1_1_space_to_batch_nd_descriptor.xhtml">SpaceToBatchNdDescriptor</a>&amp; descriptor,</div><div class="line"><a name="l00404"></a><span class="lineno">  404</span>&#160;                                   <a class="code" href="classarmnn_1_1_optional.xhtml">Optional&lt;std::string&amp;&gt;</a> reasonIfUnsupported = <a class="code" href="structarmnn_1_1_empty_optional.xhtml">EmptyOptional</a>()) <span class="keyword">const override</span>;</div><div class="line"><a name="l00405"></a><span class="lineno">  405</span>&#160;</div><div class="line"><a name="l00406"></a><span class="lineno">  406</span>&#160;    <a class="code" href="classarmnn_1_1_i_layer_support.xhtml#a6d593367be03c4ef23ba028caec5603d">ARMNN_DEPRECATED_MSG_REMOVAL_DATE</a>(<span class="stringliteral">&quot;This method is deprecated. Use IsLayerSupported instead.&quot;</span>, <span class="stringliteral">&quot;23.08&quot;</span>)</div><div class="line"><a name="l00407"></a><span class="lineno">  407</span>&#160;    <span class="keywordtype">bool</span> <a class="code" href="classarmnn_1_1_layer_support_base.xhtml#ab2af1e7da9490d29e569d271e16b0d5c">IsSpaceToDepthSupported</a>(<span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a>&amp; input,</div><div class="line"><a name="l00408"></a><span class="lineno">  408</span>&#160;                                 <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a>&amp; output,</div><div class="line"><a name="l00409"></a><span class="lineno">  409</span>&#160;                                 <span class="keyword">const</span> <a class="code" href="structarmnn_1_1_space_to_depth_descriptor.xhtml">SpaceToDepthDescriptor</a>&amp; descriptor,</div><div class="line"><a name="l00410"></a><span class="lineno">  410</span>&#160;                                 <a class="code" href="classarmnn_1_1_optional.xhtml">Optional&lt;std::string&amp;&gt;</a> reasonIfUnsupported = <a class="code" href="structarmnn_1_1_empty_optional.xhtml">EmptyOptional</a>()) <span class="keyword">const override</span>;</div><div class="line"><a name="l00411"></a><span class="lineno">  411</span>&#160;</div><div class="line"><a name="l00412"></a><span class="lineno">  412</span>&#160;    <a class="code" href="classarmnn_1_1_i_layer_support.xhtml#a6d593367be03c4ef23ba028caec5603d">ARMNN_DEPRECATED_MSG_REMOVAL_DATE</a>(<span class="stringliteral">&quot;This method is deprecated. Use IsLayerSupported instead.&quot;</span>, <span class="stringliteral">&quot;23.08&quot;</span>)</div><div class="line"><a name="l00413"></a><span class="lineno">  413</span>&#160;    <span class="keywordtype">bool</span> <a class="code" href="classarmnn_1_1_layer_support_base.xhtml#aa746e752ce8874669ea549f8e50896da">IsSplitterSupported</a>(<span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a>&amp; input,</div><div class="line"><a name="l00414"></a><span class="lineno">  414</span>&#160;                             <span class="keyword">const</span> std::vector&lt;std::reference_wrapper&lt;TensorInfo&gt;&gt;&amp; <a class="code" href="classarmnn_1_1_i_layer_support.xhtml#a311602de6b1e53b4feb3b8a37a433f44">outputs</a>,</div><div class="line"><a name="l00415"></a><span class="lineno">  415</span>&#160;                             <span class="keyword">const</span> <a class="code" href="structarmnn_1_1_views_descriptor.xhtml">ViewsDescriptor</a>&amp; descriptor,</div><div class="line"><a name="l00416"></a><span class="lineno">  416</span>&#160;                             <a class="code" href="classarmnn_1_1_optional.xhtml">Optional&lt;std::string&amp;&gt;</a> reasonIfUnsupported = <a class="code" href="structarmnn_1_1_empty_optional.xhtml">EmptyOptional</a>()) <span class="keyword">const override</span>;</div><div class="line"><a name="l00417"></a><span class="lineno">  417</span>&#160;</div><div class="line"><a name="l00418"></a><span class="lineno">  418</span>&#160;    <a class="code" href="classarmnn_1_1_i_layer_support.xhtml#a6d593367be03c4ef23ba028caec5603d">ARMNN_DEPRECATED_MSG_REMOVAL_DATE</a>(<span class="stringliteral">&quot;This method is deprecated. Use IsLayerSupported instead.&quot;</span>, <span class="stringliteral">&quot;23.08&quot;</span>)</div><div class="line"><a name="l00419"></a><span class="lineno">  419</span>&#160;    <span class="keywordtype">bool</span> <a class="code" href="classarmnn_1_1_layer_support_base.xhtml#ab4609f1baf5fcd295951f3c8abdffd90">IsStackSupported</a>(<span class="keyword">const</span> std::vector&lt;const TensorInfo*&gt;&amp; inputs,</div><div class="line"><a name="l00420"></a><span class="lineno">  420</span>&#160;                          <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a>&amp; output,</div><div class="line"><a name="l00421"></a><span class="lineno">  421</span>&#160;                          <span class="keyword">const</span> <a class="code" href="structarmnn_1_1_stack_descriptor.xhtml">StackDescriptor</a>&amp; descriptor,</div><div class="line"><a name="l00422"></a><span class="lineno">  422</span>&#160;                          <a class="code" href="classarmnn_1_1_optional.xhtml">Optional&lt;std::string&amp;&gt;</a> reasonIfUnsupported = <a class="code" href="structarmnn_1_1_empty_optional.xhtml">EmptyOptional</a>()) <span class="keyword">const override</span>;</div><div class="line"><a name="l00423"></a><span class="lineno">  423</span>&#160;</div><div class="line"><a name="l00424"></a><span class="lineno">  424</span>&#160;    <span class="keywordtype">bool</span> <a class="code" href="classarmnn_1_1_layer_support_base.xhtml#a68a4c180fc48e266995db8596f6279d3">IsStandInSupported</a>(<span class="keyword">const</span> std::vector&lt;const TensorInfo*&gt;&amp; inputs,</div><div class="line"><a name="l00425"></a><span class="lineno">  425</span>&#160;                            <span class="keyword">const</span> std::vector&lt;const TensorInfo*&gt;&amp; <a class="code" href="classarmnn_1_1_i_layer_support.xhtml#a311602de6b1e53b4feb3b8a37a433f44">outputs</a>,</div><div class="line"><a name="l00426"></a><span class="lineno">  426</span>&#160;                            <span class="keyword">const</span> <a class="code" href="structarmnn_1_1_stand_in_descriptor.xhtml">StandInDescriptor</a>&amp; descriptor,</div><div class="line"><a name="l00427"></a><span class="lineno">  427</span>&#160;                            <a class="code" href="classarmnn_1_1_optional.xhtml">Optional&lt;std::string&amp;&gt;</a> reasonIfUnsupported = <a class="code" href="structarmnn_1_1_empty_optional.xhtml">EmptyOptional</a>()) <span class="keyword">const override</span>;</div><div class="line"><a name="l00428"></a><span class="lineno">  428</span>&#160;</div><div class="line"><a name="l00429"></a><span class="lineno">  429</span>&#160;    <a class="code" href="classarmnn_1_1_i_layer_support.xhtml#a6d593367be03c4ef23ba028caec5603d">ARMNN_DEPRECATED_MSG_REMOVAL_DATE</a>(<span class="stringliteral">&quot;This method is deprecated. Use IsLayerSupported instead.&quot;</span>, <span class="stringliteral">&quot;23.08&quot;</span>)</div><div class="line"><a name="l00430"></a><span class="lineno">  430</span>&#160;    <span class="keywordtype">bool</span> <a class="code" href="classarmnn_1_1_layer_support_base.xhtml#ac054cb25099005eac854afb1511340f0">IsStridedSliceSupported</a>(<span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a>&amp; input,</div><div class="line"><a name="l00431"></a><span class="lineno">  431</span>&#160;                                 <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a>&amp; output,</div><div class="line"><a name="l00432"></a><span class="lineno">  432</span>&#160;                                 <span class="keyword">const</span> <a class="code" href="structarmnn_1_1_strided_slice_descriptor.xhtml">StridedSliceDescriptor</a>&amp; descriptor,</div><div class="line"><a name="l00433"></a><span class="lineno">  433</span>&#160;                                 <a class="code" href="classarmnn_1_1_optional.xhtml">Optional&lt;std::string&amp;&gt;</a> reasonIfUnsupported = <a class="code" href="structarmnn_1_1_empty_optional.xhtml">EmptyOptional</a>()) <span class="keyword">const override</span>;</div><div class="line"><a name="l00434"></a><span class="lineno">  434</span>&#160;</div><div class="line"><a name="l00435"></a><span class="lineno">  435</span>&#160;    <a class="code" href="classarmnn_1_1_i_layer_support.xhtml#a6d593367be03c4ef23ba028caec5603d">ARMNN_DEPRECATED_MSG_REMOVAL_DATE</a>(<span class="stringliteral">&quot;This method is deprecated. Use IsLayerSupported instead.&quot;</span>, <span class="stringliteral">&quot;23.08&quot;</span>)</div><div class="line"><a name="l00436"></a><span class="lineno">  436</span>&#160;    <span class="keywordtype">bool</span> <a class="code" href="classarmnn_1_1_layer_support_base.xhtml#af6c947e4d4b25bc49d92d18d4ff26736">IsSubtractionSupported</a>(<span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a>&amp; input0,</div><div class="line"><a name="l00437"></a><span class="lineno">  437</span>&#160;                                <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a>&amp; input1,</div><div class="line"><a name="l00438"></a><span class="lineno">  438</span>&#160;                                <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a>&amp; output,</div><div class="line"><a name="l00439"></a><span class="lineno">  439</span>&#160;                                <a class="code" href="classarmnn_1_1_optional.xhtml">Optional&lt;std::string&amp;&gt;</a> reasonIfUnsupported = <a class="code" href="structarmnn_1_1_empty_optional.xhtml">EmptyOptional</a>()) <span class="keyword">const override</span>;</div><div class="line"><a name="l00440"></a><span class="lineno">  440</span>&#160;</div><div class="line"><a name="l00441"></a><span class="lineno">  441</span>&#160;    <a class="code" href="classarmnn_1_1_i_layer_support.xhtml#a6d593367be03c4ef23ba028caec5603d">ARMNN_DEPRECATED_MSG_REMOVAL_DATE</a>(<span class="stringliteral">&quot;This method is deprecated. Use IsLayerSupported instead.&quot;</span>, <span class="stringliteral">&quot;23.08&quot;</span>)</div><div class="line"><a name="l00442"></a><span class="lineno">  442</span>&#160;    <span class="keywordtype">bool</span> <a class="code" href="classarmnn_1_1_layer_support_base.xhtml#a8c12a49b0d261836c11a57916e01805d">IsSwitchSupported</a>(<span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a>&amp; input0,</div><div class="line"><a name="l00443"></a><span class="lineno">  443</span>&#160;                           <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a>&amp; input1,</div><div class="line"><a name="l00444"></a><span class="lineno">  444</span>&#160;                           <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a>&amp; <a class="code" href="classarmnn_1_1_i_layer_support.xhtml#a5c2243c4c3b723129082dd38daf0387f">output0</a>,</div><div class="line"><a name="l00445"></a><span class="lineno">  445</span>&#160;                           <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a>&amp; <a class="code" href="classarmnn_1_1_i_layer_support.xhtml#a53e5afe9ffb176f1f3c98a4222ceb2b9">output1</a>,</div><div class="line"><a name="l00446"></a><span class="lineno">  446</span>&#160;                           <a class="code" href="classarmnn_1_1_optional.xhtml">Optional&lt;std::string&amp;&gt;</a> reasonIfUnsupported = <a class="code" href="structarmnn_1_1_empty_optional.xhtml">EmptyOptional</a>()) <span class="keyword">const override</span>;</div><div class="line"><a name="l00447"></a><span class="lineno">  447</span>&#160;</div><div class="line"><a name="l00448"></a><span class="lineno">  448</span>&#160;    <a class="code" href="classarmnn_1_1_i_layer_support.xhtml#a6d593367be03c4ef23ba028caec5603d">ARMNN_DEPRECATED_MSG_REMOVAL_DATE</a>(<span class="stringliteral">&quot;This method is deprecated. Use IsLayerSupported instead.&quot;</span>, <span class="stringliteral">&quot;23.08&quot;</span>)</div><div class="line"><a name="l00449"></a><span class="lineno">  449</span>&#160;    <span class="keywordtype">bool</span> <a class="code" href="classarmnn_1_1_layer_support_base.xhtml#a0c69484f19ed650ad48b716719114e51">IsTransposeConvolution2dSupported</a>(</div><div class="line"><a name="l00450"></a><span class="lineno">  450</span>&#160;        <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a>&amp; input,</div><div class="line"><a name="l00451"></a><span class="lineno">  451</span>&#160;        <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a>&amp; output,</div><div class="line"><a name="l00452"></a><span class="lineno">  452</span>&#160;        <span class="keyword">const</span> <a class="code" href="structarmnn_1_1_transpose_convolution2d_descriptor.xhtml">TransposeConvolution2dDescriptor</a>&amp; descriptor,</div><div class="line"><a name="l00453"></a><span class="lineno">  453</span>&#160;        <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a>&amp; weights,</div><div class="line"><a name="l00454"></a><span class="lineno">  454</span>&#160;        <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_optional.xhtml">Optional&lt;TensorInfo&gt;</a>&amp; biases,</div><div class="line"><a name="l00455"></a><span class="lineno">  455</span>&#160;        <a class="code" href="classarmnn_1_1_optional.xhtml">Optional&lt;std::string&amp;&gt;</a> reasonIfUnsupported = <a class="code" href="structarmnn_1_1_empty_optional.xhtml">EmptyOptional</a>()) <span class="keyword">const override</span>;</div><div class="line"><a name="l00456"></a><span class="lineno">  456</span>&#160;</div><div class="line"><a name="l00457"></a><span class="lineno">  457</span>&#160;    <a class="code" href="classarmnn_1_1_i_layer_support.xhtml#a6d593367be03c4ef23ba028caec5603d">ARMNN_DEPRECATED_MSG_REMOVAL_DATE</a>(<span class="stringliteral">&quot;This method is deprecated. Use IsLayerSupported instead.&quot;</span>, <span class="stringliteral">&quot;23.08&quot;</span>)</div><div class="line"><a name="l00458"></a><span class="lineno">  458</span>&#160;    <span class="keywordtype">bool</span> <a class="code" href="classarmnn_1_1_layer_support_base.xhtml#a0189645f33641b280877a1b2f6ba9fee">IsTransposeSupported</a>(<span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a>&amp; input,</div><div class="line"><a name="l00459"></a><span class="lineno">  459</span>&#160;                              <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a>&amp; output,</div><div class="line"><a name="l00460"></a><span class="lineno">  460</span>&#160;                              <span class="keyword">const</span> <a class="code" href="structarmnn_1_1_transpose_descriptor.xhtml">TransposeDescriptor</a>&amp; descriptor,</div><div class="line"><a name="l00461"></a><span class="lineno">  461</span>&#160;                              <a class="code" href="classarmnn_1_1_optional.xhtml">Optional&lt;std::string&amp;&gt;</a> reasonIfUnsupported = <a class="code" href="structarmnn_1_1_empty_optional.xhtml">EmptyOptional</a>()) <span class="keyword">const override</span>;</div><div class="line"><a name="l00462"></a><span class="lineno">  462</span>&#160;</div><div class="line"><a name="l00463"></a><span class="lineno">  463</span>&#160;    <a class="code" href="classarmnn_1_1_i_layer_support.xhtml#a6d593367be03c4ef23ba028caec5603d">ARMNN_DEPRECATED_MSG_REMOVAL_DATE</a>(<span class="stringliteral">&quot;This method is deprecated. Use IsLayerSupported instead.&quot;</span>, <span class="stringliteral">&quot;23.08&quot;</span>)</div><div class="line"><a name="l00464"></a><span class="lineno">  464</span>&#160;    <span class="keywordtype">bool</span> <a class="code" href="classarmnn_1_1_layer_support_base.xhtml#a74149085c116e51500a51f5cdb68e67c">IsUnidirectionalSequenceLstmSupported</a>(</div><div class="line"><a name="l00465"></a><span class="lineno">  465</span>&#160;        <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a>&amp; input,</div><div class="line"><a name="l00466"></a><span class="lineno">  466</span>&#160;        <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a>&amp; outputStateIn,</div><div class="line"><a name="l00467"></a><span class="lineno">  467</span>&#160;        <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a>&amp; cellStateIn,</div><div class="line"><a name="l00468"></a><span class="lineno">  468</span>&#160;        <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a>&amp; outputStateOut,</div><div class="line"><a name="l00469"></a><span class="lineno">  469</span>&#160;        <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a>&amp; cellStateOut,</div><div class="line"><a name="l00470"></a><span class="lineno">  470</span>&#160;        <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a>&amp; output,</div><div class="line"><a name="l00471"></a><span class="lineno">  471</span>&#160;        <span class="keyword">const</span> <a class="code" href="structarmnn_1_1_lstm_descriptor.xhtml">LstmDescriptor</a>&amp; descriptor,</div><div class="line"><a name="l00472"></a><span class="lineno">  472</span>&#160;        <span class="keyword">const</span> <a class="code" href="structarmnn_1_1_lstm_input_params_info.xhtml">LstmInputParamsInfo</a>&amp; paramsInfo,</div><div class="line"><a name="l00473"></a><span class="lineno">  473</span>&#160;        <a class="code" href="classarmnn_1_1_optional.xhtml">Optional&lt;std::string&amp;&gt;</a> reasonIfUnsupported = <a class="code" href="structarmnn_1_1_empty_optional.xhtml">EmptyOptional</a>()) <span class="keyword">const override</span>;</div><div class="line"><a name="l00474"></a><span class="lineno">  474</span>&#160;</div><div class="line"><a name="l00475"></a><span class="lineno">  475</span>&#160;};</div><div class="line"><a name="l00476"></a><span class="lineno">  476</span>&#160;</div><div class="line"><a name="l00477"></a><span class="lineno">  477</span>&#160;} <span class="comment">// namespace armnn</span></div><div class="ttc" id="classarmnn_1_1_layer_support_base_xhtml"><div class="ttname"><a href="classarmnn_1_1_layer_support_base.xhtml">armnn::LayerSupportBase</a></div><div class="ttdef"><b>Definition:</b> <a href="_layer_support_base_8hpp_source.xhtml#l00013">LayerSupportBase.hpp:13</a></div></div>
<div class="ttc" id="classarmnn_1_1_layer_support_base_xhtml_aa746e752ce8874669ea549f8e50896da"><div class="ttname"><a href="classarmnn_1_1_layer_support_base.xhtml#aa746e752ce8874669ea549f8e50896da">armnn::LayerSupportBase::IsSplitterSupported</a></div><div class="ttdeci">bool IsSplitterSupported(const TensorInfo &amp;input, const std::vector&lt; std::reference_wrapper&lt; TensorInfo &gt;&gt; &amp;outputs, const ViewsDescriptor &amp;descriptor, Optional&lt; std::string &amp;&gt; reasonIfUnsupported=EmptyOptional()) const override</div><div class="ttdef"><b>Definition:</b> <a href="_layer_support_base_8cpp_source.xhtml#l00605">LayerSupportBase.cpp:605</a></div></div>
<div class="ttc" id="classarmnn_1_1_layer_support_base_xhtml_ad29d99ecd719c640ed22dcf5c688c6a5"><div class="ttname"><a href="classarmnn_1_1_layer_support_base.xhtml#ad29d99ecd719c640ed22dcf5c688c6a5">armnn::LayerSupportBase::IsInputSupported</a></div><div class="ttdeci">bool IsInputSupported(const TensorInfo &amp;input, Optional&lt; std::string &amp;&gt; reasonIfUnsupported=EmptyOptional()) const override</div><div class="ttdef"><b>Definition:</b> <a href="_layer_support_base_8cpp_source.xhtml#l00328">LayerSupportBase.cpp:328</a></div></div>
<div class="ttc" id="structarmnn_1_1_views_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_views_descriptor.xhtml">armnn::ViewsDescriptor</a></div><div class="ttdoc">A ViewsDescriptor for the SplitterLayer. </div><div class="ttdef"><b>Definition:</b> <a href="_descriptors_8hpp_source.xhtml#l00217">Descriptors.hpp:217</a></div></div>
<div class="ttc" id="classarmnn_1_1_i_layer_support_xhtml_ae1e19982da8ec2840ca14748c2d8522c"><div class="ttname"><a href="classarmnn_1_1_i_layer_support.xhtml#ae1e19982da8ec2840ca14748c2d8522c">armnn::ILayerSupport::anchors</a></div><div class="ttdeci">const TensorInfo const TensorInfo &amp; anchors</div><div class="ttdef"><b>Definition:</b> <a href="_i_layer_support_8hpp_source.xhtml#l00184">ILayerSupport.hpp:184</a></div></div>
<div class="ttc" id="classarmnn_1_1_layer_support_base_xhtml_a8424740ae08cca0a5548b598331f35a5"><div class="ttname"><a href="classarmnn_1_1_layer_support_base.xhtml#a8424740ae08cca0a5548b598331f35a5">armnn::LayerSupportBase::IsLayerSupported</a></div><div class="ttdeci">bool IsLayerSupported(const LayerType &amp;type, const std::vector&lt; TensorInfo &gt; &amp;infos, const BaseDescriptor &amp;descriptor, const Optional&lt; LstmInputParamsInfo &gt; &amp;lstmParamsInfo=EmptyOptional(), const Optional&lt; QuantizedLstmInputParamsInfo &gt; &amp;quantizedLstmParamsInfo=EmptyOptional(), Optional&lt; std::string &amp;&gt; reasonIfUnsupported=EmptyOptional()) const override</div><div class="ttdef"><b>Definition:</b> <a href="_layer_support_base_8cpp_source.xhtml#l00040">LayerSupportBase.cpp:40</a></div></div>
<div class="ttc" id="classarmnn_1_1_layer_support_base_xhtml_adf54bcad228c0ac21f6735d31460cf31"><div class="ttname"><a href="classarmnn_1_1_layer_support_base.xhtml#adf54bcad228c0ac21f6735d31460cf31">armnn::LayerSupportBase::IsQLstmSupported</a></div><div class="ttdeci">bool IsQLstmSupported(const TensorInfo &amp;input, const TensorInfo &amp;previousOutputIn, const TensorInfo &amp;previousCellStateIn, const TensorInfo &amp;outputStateOut, const TensorInfo &amp;cellStateOut, const TensorInfo &amp;output, const QLstmDescriptor &amp;descriptor, const LstmInputParamsInfo &amp;paramsInfo, Optional&lt; std::string &amp;&gt; reasonIfUnsupported=EmptyOptional()) const override</div><div class="ttdef"><b>Definition:</b> <a href="_layer_support_base_8cpp_source.xhtml#l00511">LayerSupportBase.cpp:511</a></div></div>
<div class="ttc" id="structarmnn_1_1_transpose_convolution2d_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_transpose_convolution2d_descriptor.xhtml">armnn::TransposeConvolution2dDescriptor</a></div><div class="ttdoc">A TransposeConvolution2dDescriptor for the TransposeConvolution2dLayer. </div><div class="ttdef"><b>Definition:</b> <a href="_descriptors_8hpp_source.xhtml#l01417">Descriptors.hpp:1417</a></div></div>
<div class="ttc" id="classarmnn_1_1_i_layer_support_xhtml_aca7a974c8803242968a8d6540275264a"><div class="ttname"><a href="classarmnn_1_1_i_layer_support.xhtml#aca7a974c8803242968a8d6540275264a">armnn::ILayerSupport::paramsInfo</a></div><div class="ttdeci">const TensorInfo const TensorInfo const TensorInfo const TensorInfo const TensorInfo const TensorInfo const LstmDescriptor const LstmInputParamsInfo &amp; paramsInfo</div><div class="ttdef"><b>Definition:</b> <a href="_i_layer_support_8hpp_source.xhtml#l00298">ILayerSupport.hpp:298</a></div></div>
<div class="ttc" id="classarmnn_1_1_layer_support_base_xhtml_a93cf81b28c4275a338f41c536a451158"><div class="ttname"><a href="classarmnn_1_1_layer_support_base.xhtml#a93cf81b28c4275a338f41c536a451158">armnn::LayerSupportBase::IsPreluSupported</a></div><div class="ttdeci">bool IsPreluSupported(const TensorInfo &amp;input, const TensorInfo &amp;alpha, const TensorInfo &amp;output, Optional&lt; std::string &amp;&gt; reasonIfUnsupported) const override</div><div class="ttdef"><b>Definition:</b> <a href="_layer_support_base_8cpp_source.xhtml#l00496">LayerSupportBase.cpp:496</a></div></div>
<div class="ttc" id="classarmnn_1_1_optional_xhtml"><div class="ttname"><a href="classarmnn_1_1_optional.xhtml">armnn::Optional</a></div><div class="ttdef"><b>Definition:</b> <a href="_optional_8hpp_source.xhtml#l00270">Optional.hpp:270</a></div></div>
<div class="ttc" id="classarmnn_1_1_i_layer_support_xhtml_a4e25e081529b7e99e5e454d916ed83fb"><div class="ttname"><a href="classarmnn_1_1_i_layer_support.xhtml#a4e25e081529b7e99e5e454d916ed83fb">armnn::ILayerSupport::output</a></div><div class="ttdeci">const TensorInfo &amp; output</div><div class="ttdef"><b>Definition:</b> <a href="_i_layer_support_8hpp_source.xhtml#l00041">ILayerSupport.hpp:41</a></div></div>
<div class="ttc" id="structarmnn_1_1_reshape_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_reshape_descriptor.xhtml">armnn::ReshapeDescriptor</a></div><div class="ttdoc">A ReshapeDescriptor for the ReshapeLayer. </div><div class="ttdef"><b>Definition:</b> <a href="_descriptors_8hpp_source.xhtml#l01000">Descriptors.hpp:1000</a></div></div>
<div class="ttc" id="classarmnn_1_1_layer_support_base_xhtml_a50af275d7755a5bb1be69736d7e4b02f"><div class="ttname"><a href="classarmnn_1_1_layer_support_base.xhtml#a50af275d7755a5bb1be69736d7e4b02f">armnn::LayerSupportBase::IsDetectionPostProcessSupported</a></div><div class="ttdeci">bool IsDetectionPostProcessSupported(const TensorInfo &amp;boxEncodings, const TensorInfo &amp;scores, const TensorInfo &amp;anchors, const TensorInfo &amp;detectionBoxes, const TensorInfo &amp;detectionClasses, const TensorInfo &amp;detectionScores, const TensorInfo &amp;numDetections, const DetectionPostProcessDescriptor &amp;descriptor, Optional&lt; std::string &amp;&gt; reasonIfUnsupported=EmptyOptional()) const override</div><div class="ttdef"><b>Definition:</b> <a href="_layer_support_base_8cpp_source.xhtml#l00248">LayerSupportBase.cpp:248</a></div></div>
<div class="ttc" id="classarmnn_1_1_layer_support_base_xhtml_a334181d8098b943d03ccd820753ace75"><div class="ttname"><a href="classarmnn_1_1_layer_support_base.xhtml#a334181d8098b943d03ccd820753ace75">armnn::LayerSupportBase::IsMemImportSupported</a></div><div class="ttdeci">bool IsMemImportSupported(const TensorInfo &amp;input, const TensorInfo &amp;output, Optional&lt; std::string &amp;&gt; reasonIfUnsupported=EmptyOptional()) const override</div><div class="ttdef"><b>Definition:</b> <a href="_layer_support_base_8cpp_source.xhtml#l00412">LayerSupportBase.cpp:412</a></div></div>
<div class="ttc" id="classarmnn_1_1_layer_support_base_xhtml_aa0380b797cb9932fb03067dbe2cdecfb"><div class="ttname"><a href="classarmnn_1_1_layer_support_base.xhtml#aa0380b797cb9932fb03067dbe2cdecfb">armnn::LayerSupportBase::IsLogSoftmaxSupported</a></div><div class="ttdeci">bool IsLogSoftmaxSupported(const TensorInfo &amp;input, const TensorInfo &amp;output, const LogSoftmaxDescriptor &amp;descriptor, Optional&lt; std::string &amp;&gt; reasonIfUnsupported=EmptyOptional()) const override</div><div class="ttdef"><b>Definition:</b> <a href="_layer_support_base_8cpp_source.xhtml#l00367">LayerSupportBase.cpp:367</a></div></div>
<div class="ttc" id="classarmnn_1_1_tensor_info_xhtml"><div class="ttname"><a href="classarmnn_1_1_tensor_info.xhtml">armnn::TensorInfo</a></div><div class="ttdef"><b>Definition:</b> <a href="_tensor_8hpp_source.xhtml#l00152">Tensor.hpp:152</a></div></div>
<div class="ttc" id="structarmnn_1_1_comparison_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_comparison_descriptor.xhtml">armnn::ComparisonDescriptor</a></div><div class="ttdoc">A ComparisonDescriptor for the ComparisonLayer. </div><div class="ttdef"><b>Definition:</b> <a href="_descriptors_8hpp_source.xhtml#l00089">Descriptors.hpp:89</a></div></div>
<div class="ttc" id="classarmnn_1_1_layer_support_base_xhtml_a0189645f33641b280877a1b2f6ba9fee"><div class="ttname"><a href="classarmnn_1_1_layer_support_base.xhtml#a0189645f33641b280877a1b2f6ba9fee">armnn::LayerSupportBase::IsTransposeSupported</a></div><div class="ttdeci">bool IsTransposeSupported(const TensorInfo &amp;input, const TensorInfo &amp;output, const TransposeDescriptor &amp;descriptor, Optional&lt; std::string &amp;&gt; reasonIfUnsupported=EmptyOptional()) const override</div><div class="ttdef"><b>Definition:</b> <a href="_layer_support_base_8cpp_source.xhtml#l00672">LayerSupportBase.cpp:672</a></div></div>
<div class="ttc" id="classarmnn_1_1_i_layer_support_xhtml_ab5cccb3233f5eff2119e8acc80cec209"><div class="ttname"><a href="classarmnn_1_1_i_layer_support.xhtml#ab5cccb3233f5eff2119e8acc80cec209">armnn::ILayerSupport::gamma</a></div><div class="ttdeci">const TensorInfo const TensorInfo const TensorInfo const TensorInfo const TensorInfo &amp; gamma</div><div class="ttdef"><b>Definition:</b> <a href="_i_layer_support_8hpp_source.xhtml#l00062">ILayerSupport.hpp:62</a></div></div>
<div class="ttc" id="classarmnn_1_1_layer_support_base_xhtml_ae18f598a589683c3094a7bb41dcd3a3e"><div class="ttname"><a href="classarmnn_1_1_layer_support_base.xhtml#ae18f598a589683c3094a7bb41dcd3a3e">armnn::LayerSupportBase::IsCastSupported</a></div><div class="ttdeci">bool IsCastSupported(const TensorInfo &amp;input, const TensorInfo &amp;output, Optional&lt; std::string &amp;&gt; reasonIfUnsupported=EmptyOptional()) const override</div><div class="ttdef"><b>Definition:</b> <a href="_layer_support_base_8cpp_source.xhtml#l00129">LayerSupportBase.cpp:129</a></div></div>
<div class="ttc" id="classarmnn_1_1_layer_support_base_xhtml_ad2c7be6b84b04444e514f52f593b3df7"><div class="ttname"><a href="classarmnn_1_1_layer_support_base.xhtml#ad2c7be6b84b04444e514f52f593b3df7">armnn::LayerSupportBase::IsQuantizeSupported</a></div><div class="ttdeci">bool IsQuantizeSupported(const TensorInfo &amp;input, const TensorInfo &amp;output, Optional&lt; std::string &amp;&gt; reasonIfUnsupported=EmptyOptional()) const override</div><div class="ttdef"><b>Definition:</b> <a href="_layer_support_base_8cpp_source.xhtml#l00504">LayerSupportBase.cpp:504</a></div></div>
<div class="ttc" id="classarmnn_1_1_layer_support_base_xhtml_a421e1f3865d99d52613003048342c49a"><div class="ttname"><a href="classarmnn_1_1_layer_support_base.xhtml#a421e1f3865d99d52613003048342c49a">armnn::LayerSupportBase::IsMultiplicationSupported</a></div><div class="ttdeci">bool IsMultiplicationSupported(const TensorInfo &amp;input0, const TensorInfo &amp;input1, const TensorInfo &amp;output, Optional&lt; std::string &amp;&gt; reasonIfUnsupported=EmptyOptional()) const override</div><div class="ttdef"><b>Definition:</b> <a href="_layer_support_base_8cpp_source.xhtml#l00435">LayerSupportBase.cpp:435</a></div></div>
<div class="ttc" id="classarmnn_1_1_layer_support_base_xhtml_af1be52d9f968bfab069344756bf232c4"><div class="ttname"><a href="classarmnn_1_1_layer_support_base.xhtml#af1be52d9f968bfab069344756bf232c4">armnn::LayerSupportBase::IsQuantizedLstmSupported</a></div><div class="ttdeci">bool IsQuantizedLstmSupported(const TensorInfo &amp;input, const TensorInfo &amp;previousCellStateIn, const TensorInfo &amp;previousOutputIn, const TensorInfo &amp;cellStateOut, const TensorInfo &amp;output, const QuantizedLstmInputParamsInfo &amp;paramsInfo, Optional&lt; std::string &amp;&gt; reasonIfUnsupported=EmptyOptional()) const override</div><div class="ttdef"><b>Definition:</b> <a href="_layer_support_base_8cpp_source.xhtml#l00524">LayerSupportBase.cpp:524</a></div></div>
<div class="ttc" id="classarmnn_1_1_i_layer_support_xhtml_a311602de6b1e53b4feb3b8a37a433f44"><div class="ttname"><a href="classarmnn_1_1_i_layer_support.xhtml#a311602de6b1e53b4feb3b8a37a433f44">armnn::ILayerSupport::outputs</a></div><div class="ttdeci">const std::vector&lt; std::reference_wrapper&lt; TensorInfo &gt; &gt; &amp; outputs</div><div class="ttdef"><b>Definition:</b> <a href="_i_layer_support_8hpp_source.xhtml#l00500">ILayerSupport.hpp:500</a></div></div>
<div class="ttc" id="classarmnn_1_1_layer_support_base_xhtml_a8fab6937a1010b5ed674b930b4f143cb"><div class="ttname"><a href="classarmnn_1_1_layer_support_base.xhtml#a8fab6937a1010b5ed674b930b4f143cb">armnn::LayerSupportBase::IsLogicalBinarySupported</a></div><div class="ttdeci">bool IsLogicalBinarySupported(const TensorInfo &amp;input0, const TensorInfo &amp;input1, const TensorInfo &amp;output, const LogicalBinaryDescriptor &amp;descriptor, Optional&lt; std::string &amp;&gt; reasonIfUnsupported=EmptyOptional()) const override</div><div class="ttdef"><b>Definition:</b> <a href="_layer_support_base_8cpp_source.xhtml#l00350">LayerSupportBase.cpp:350</a></div></div>
<div class="ttc" id="structarmnn_1_1_convolution2d_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_convolution2d_descriptor.xhtml">armnn::Convolution2dDescriptor</a></div><div class="ttdoc">A Convolution2dDescriptor for the Convolution2dLayer. </div><div class="ttdef"><b>Definition:</b> <a href="_descriptors_8hpp_source.xhtml#l00495">Descriptors.hpp:495</a></div></div>
<div class="ttc" id="classarmnn_1_1_layer_support_base_xhtml_a48177e22e47448adb3d83e145dadf735"><div class="ttname"><a href="classarmnn_1_1_layer_support_base.xhtml#a48177e22e47448adb3d83e145dadf735">armnn::LayerSupportBase::IsAdditionSupported</a></div><div class="ttdeci">bool IsAdditionSupported(const TensorInfo &amp;input0, const TensorInfo &amp;input1, const TensorInfo &amp;output, Optional&lt; std::string &amp;&gt; reasonIfUnsupported=EmptyOptional()) const override</div><div class="ttdef"><b>Definition:</b> <a href="_layer_support_base_8cpp_source.xhtml#l00093">LayerSupportBase.cpp:93</a></div></div>
<div class="ttc" id="classarmnn_1_1_layer_support_base_xhtml_a87a66c5e87a19534ce3e6c374c9b8f09"><div class="ttname"><a href="classarmnn_1_1_layer_support_base.xhtml#a87a66c5e87a19534ce3e6c374c9b8f09">armnn::LayerSupportBase::IsDebugSupported</a></div><div class="ttdeci">bool IsDebugSupported(const TensorInfo &amp;input, const TensorInfo &amp;output, Optional&lt; std::string &amp;&gt; reasonIfUnsupported=EmptyOptional()) const override</div><div class="ttdef"><b>Definition:</b> <a href="_layer_support_base_8cpp_source.xhtml#l00216">LayerSupportBase.cpp:216</a></div></div>
<div class="ttc" id="classarmnn_1_1_layer_support_base_xhtml_ab3adb3a28736529682e4ff0ea976dcd3"><div class="ttname"><a href="classarmnn_1_1_layer_support_base.xhtml#ab3adb3a28736529682e4ff0ea976dcd3">armnn::LayerSupportBase::IsActivationSupported</a></div><div class="ttdeci">bool IsActivationSupported(const TensorInfo &amp;input, const TensorInfo &amp;output, const ActivationDescriptor &amp;descriptor, Optional&lt; std::string &amp;&gt; reasonIfUnsupported=EmptyOptional()) const override</div><div class="ttdef"><b>Definition:</b> <a href="_layer_support_base_8cpp_source.xhtml#l00085">LayerSupportBase.cpp:85</a></div></div>
<div class="ttc" id="classarmnn_1_1_layer_support_base_xhtml_a917c126e64314263b8b5f7bca455ddfb"><div class="ttname"><a href="classarmnn_1_1_layer_support_base.xhtml#a917c126e64314263b8b5f7bca455ddfb">armnn::LayerSupportBase::IsReduceSupported</a></div><div class="ttdeci">bool IsReduceSupported(const TensorInfo &amp;input, const TensorInfo &amp;output, const ReduceDescriptor &amp;descriptor, Optional&lt; std::string &amp;&gt; reasonIfUnsupported=EmptyOptional()) const override</div><div class="ttdef"><b>Definition:</b> <a href="_layer_support_base_8cpp_source.xhtml#l00542">LayerSupportBase.cpp:542</a></div></div>
<div class="ttc" id="classarmnn_1_1_layer_support_base_xhtml_ab268618580d4f53bf5e9b5a47dee3f6a"><div class="ttname"><a href="classarmnn_1_1_layer_support_base.xhtml#ab268618580d4f53bf5e9b5a47dee3f6a">armnn::LayerSupportBase::IsMeanSupported</a></div><div class="ttdeci">bool IsMeanSupported(const TensorInfo &amp;input, const TensorInfo &amp;output, const MeanDescriptor &amp;descriptor, Optional&lt; std::string &amp;&gt; reasonIfUnsupported=EmptyOptional()) const override</div><div class="ttdef"><b>Definition:</b> <a href="_layer_support_base_8cpp_source.xhtml#l00397">LayerSupportBase.cpp:397</a></div></div>
<div class="ttc" id="classarmnn_1_1_layer_support_base_xhtml_a0f4841f89f21fd794786b4c03c2425fd"><div class="ttname"><a href="classarmnn_1_1_layer_support_base.xhtml#a0f4841f89f21fd794786b4c03c2425fd">armnn::LayerSupportBase::IsArgMinMaxSupported</a></div><div class="ttdeci">bool IsArgMinMaxSupported(const TensorInfo &amp;input, const TensorInfo &amp;output, const ArgMinMaxDescriptor &amp;descriptor, Optional&lt; std::string &amp;&gt; reasonIfUnsupported=EmptyOptional()) const override</div><div class="ttdef"><b>Definition:</b> <a href="_layer_support_base_8cpp_source.xhtml#l00101">LayerSupportBase.cpp:101</a></div></div>
<div class="ttc" id="classarmnn_1_1_i_layer_support_xhtml_ac75f9a02b051716a0cc1cc0818dfe454"><div class="ttname"><a href="classarmnn_1_1_i_layer_support.xhtml#ac75f9a02b051716a0cc1cc0818dfe454">armnn::ILayerSupport::reasonIfUnsupported</a></div><div class="ttdeci">const TensorInfo const ActivationDescriptor Optional&lt; std::string &amp; &gt; reasonIfUnsupported</div><div class="ttdef"><b>Definition:</b> <a href="_i_layer_support_8hpp_source.xhtml#l00043">ILayerSupport.hpp:43</a></div></div>
<div class="ttc" id="classarmnn_1_1_layer_support_base_xhtml_a3c6816950ad290155bde03b7fb31e160"><div class="ttname"><a href="classarmnn_1_1_layer_support_base.xhtml#a3c6816950ad290155bde03b7fb31e160">armnn::LayerSupportBase::IsShapeSupported</a></div><div class="ttdeci">bool IsShapeSupported(const TensorInfo &amp;input, const TensorInfo &amp;output, Optional&lt; std::string &amp;&gt; reasonIfUnsupported=EmptyOptional()) const override</div><div class="ttdef"><b>Definition:</b> <a href="_layer_support_base_8cpp_source.xhtml#l00566">LayerSupportBase.cpp:566</a></div></div>
<div class="ttc" id="classarmnn_1_1_i_layer_support_xhtml"><div class="ttname"><a href="classarmnn_1_1_i_layer_support.xhtml">armnn::ILayerSupport</a></div><div class="ttdef"><b>Definition:</b> <a href="_i_layer_support_8hpp_source.xhtml#l00023">ILayerSupport.hpp:23</a></div></div>
<div class="ttc" id="structarmnn_1_1_logical_binary_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_logical_binary_descriptor.xhtml">armnn::LogicalBinaryDescriptor</a></div><div class="ttdoc">A LogicalBinaryDescriptor for the LogicalBinaryLayer. </div><div class="ttdef"><b>Definition:</b> <a href="_descriptors_8hpp_source.xhtml#l01488">Descriptors.hpp:1488</a></div></div>
<div class="ttc" id="classarmnn_1_1_layer_support_base_xhtml_a3adfc31e079a970e028e537ec05fabf5"><div class="ttname"><a href="classarmnn_1_1_layer_support_base.xhtml#a3adfc31e079a970e028e537ec05fabf5">armnn::LayerSupportBase::IsSpaceToBatchNdSupported</a></div><div class="ttdeci">bool IsSpaceToBatchNdSupported(const TensorInfo &amp;input, const TensorInfo &amp;output, const SpaceToBatchNdDescriptor &amp;descriptor, Optional&lt; std::string &amp;&gt; reasonIfUnsupported=EmptyOptional()) const override</div><div class="ttdef"><b>Definition:</b> <a href="_layer_support_base_8cpp_source.xhtml#l00589">LayerSupportBase.cpp:589</a></div></div>
<div class="ttc" id="classarmnn_1_1_i_layer_support_xhtml_a97cbe8ac8df2e213185599d693079acf"><div class="ttname"><a href="classarmnn_1_1_i_layer_support.xhtml#a97cbe8ac8df2e213185599d693079acf">armnn::ILayerSupport::scores</a></div><div class="ttdeci">const TensorInfo &amp; scores</div><div class="ttdef"><b>Definition:</b> <a href="_i_layer_support_8hpp_source.xhtml#l00184">ILayerSupport.hpp:184</a></div></div>
<div class="ttc" id="classarmnn_1_1_i_layer_support_xhtml_a5c2243c4c3b723129082dd38daf0387f"><div class="ttname"><a href="classarmnn_1_1_i_layer_support.xhtml#a5c2243c4c3b723129082dd38daf0387f">armnn::ILayerSupport::output0</a></div><div class="ttdeci">const TensorInfo const TensorInfo &amp; output0</div><div class="ttdef"><b>Definition:</b> <a href="_i_layer_support_8hpp_source.xhtml#l00535">ILayerSupport.hpp:535</a></div></div>
<div class="ttc" id="classarmnn_1_1_layer_support_base_xhtml_a8385cf8227907904a6a86fac318fc099"><div class="ttname"><a href="classarmnn_1_1_layer_support_base.xhtml#a8385cf8227907904a6a86fac318fc099">armnn::LayerSupportBase::IsSoftmaxSupported</a></div><div class="ttdeci">bool IsSoftmaxSupported(const TensorInfo &amp;input, const TensorInfo &amp;output, const SoftmaxDescriptor &amp;descriptor, Optional&lt; std::string &amp;&gt; reasonIfUnsupported=EmptyOptional()) const override</div><div class="ttdef"><b>Definition:</b> <a href="_layer_support_base_8cpp_source.xhtml#l00581">LayerSupportBase.cpp:581</a></div></div>
<div class="ttc" id="classarmnn_1_1_layer_support_base_xhtml_a7c52726a684dd76258c61af124012537"><div class="ttname"><a href="classarmnn_1_1_layer_support_base.xhtml#a7c52726a684dd76258c61af124012537">armnn::LayerSupportBase::IsComparisonSupported</a></div><div class="ttdeci">bool IsComparisonSupported(const TensorInfo &amp;input0, const TensorInfo &amp;input1, const TensorInfo &amp;output, const ComparisonDescriptor &amp;descriptor, Optional&lt; std::string &amp;&gt; reasonIfUnsupported=EmptyOptional()) const override</div><div class="ttdef"><b>Definition:</b> <a href="_layer_support_base_8cpp_source.xhtml#l00144">LayerSupportBase.cpp:144</a></div></div>
<div class="ttc" id="classarmnn_1_1_i_layer_support_xhtml_a56d52f01c9d80f3710ddace11e534434"><div class="ttname"><a href="classarmnn_1_1_i_layer_support.xhtml#a56d52f01c9d80f3710ddace11e534434">armnn::ILayerSupport::detectionClasses</a></div><div class="ttdeci">const TensorInfo const TensorInfo const TensorInfo const TensorInfo &amp; detectionClasses</div><div class="ttdef"><b>Definition:</b> <a href="_i_layer_support_8hpp_source.xhtml#l00184">ILayerSupport.hpp:184</a></div></div>
<div class="ttc" id="namespacearmnn_xhtml"><div class="ttname"><a href="namespacearmnn.xhtml">armnn</a></div><div class="ttdoc">Copyright (c) 2021 ARM Limited and Contributors. </div><div class="ttdef"><b>Definition:</b> <a href="01__00__quick__start_8dox_source.xhtml#l00006">01_00_quick_start.dox:6</a></div></div>
<div class="ttc" id="classarmnn_1_1_layer_support_base_xhtml_a68a4c180fc48e266995db8596f6279d3"><div class="ttname"><a href="classarmnn_1_1_layer_support_base.xhtml#a68a4c180fc48e266995db8596f6279d3">armnn::LayerSupportBase::IsStandInSupported</a></div><div class="ttdeci">bool IsStandInSupported(const std::vector&lt; const TensorInfo *&gt; &amp;inputs, const std::vector&lt; const TensorInfo *&gt; &amp;outputs, const StandInDescriptor &amp;descriptor, Optional&lt; std::string &amp;&gt; reasonIfUnsupported=EmptyOptional()) const override</div><div class="ttdef"><b>Definition:</b> <a href="_layer_support_base_8cpp_source.xhtml#l00621">LayerSupportBase.cpp:621</a></div></div>
<div class="ttc" id="classarmnn_1_1_i_layer_support_xhtml_a859feaa966620ae0ea88abf5226f2d04"><div class="ttname"><a href="classarmnn_1_1_i_layer_support.xhtml#a859feaa966620ae0ea88abf5226f2d04">armnn::ILayerSupport::descriptor</a></div><div class="ttdeci">const TensorInfo const ActivationDescriptor &amp; descriptor</div><div class="ttdef"><b>Definition:</b> <a href="_i_layer_support_8hpp_source.xhtml#l00041">ILayerSupport.hpp:41</a></div></div>
<div class="ttc" id="classarmnn_1_1_layer_support_base_xhtml_adc84390751f227fe03a115b5fa10b0fc"><div class="ttname"><a href="classarmnn_1_1_layer_support_base.xhtml#adc84390751f227fe03a115b5fa10b0fc">armnn::LayerSupportBase::IsDepthwiseConvolutionSupported</a></div><div class="ttdeci">bool IsDepthwiseConvolutionSupported(const TensorInfo &amp;input, const TensorInfo &amp;output, const DepthwiseConvolution2dDescriptor &amp;descriptor, const TensorInfo &amp;weights, const Optional&lt; TensorInfo &gt; &amp;biases, Optional&lt; std::string &amp;&gt; reasonIfUnsupported=EmptyOptional()) const override</div><div class="ttdef"><b>Definition:</b> <a href="_layer_support_base_8cpp_source.xhtml#l00231">LayerSupportBase.cpp:231</a></div></div>
<div class="ttc" id="classarmnn_1_1_layer_support_base_xhtml_aca4acda7ab553edfda828658d8f3882b"><div class="ttname"><a href="classarmnn_1_1_layer_support_base.xhtml#aca4acda7ab553edfda828658d8f3882b">armnn::LayerSupportBase::IsL2NormalizationSupported</a></div><div class="ttdeci">bool IsL2NormalizationSupported(const TensorInfo &amp;input, const TensorInfo &amp;output, const L2NormalizationDescriptor &amp;descriptor, Optional&lt; std::string &amp;&gt; reasonIfUnsupported=EmptyOptional()) const override</div><div class="ttdef"><b>Definition:</b> <a href="_layer_support_base_8cpp_source.xhtml#l00342">LayerSupportBase.cpp:342</a></div></div>
<div class="ttc" id="structarmnn_1_1_space_to_depth_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_space_to_depth_descriptor.xhtml">armnn::SpaceToDepthDescriptor</a></div><div class="ttdoc">A SpaceToDepthDescriptor for the SpaceToDepthLayer. </div><div class="ttdef"><b>Definition:</b> <a href="_descriptors_8hpp_source.xhtml#l01052">Descriptors.hpp:1052</a></div></div>
<div class="ttc" id="classarmnn_1_1_layer_support_base_xhtml_a0e14dafa85cfcd4a6b6b752284b51e63"><div class="ttname"><a href="classarmnn_1_1_layer_support_base.xhtml#a0e14dafa85cfcd4a6b6b752284b51e63">armnn::LayerSupportBase::IsSliceSupported</a></div><div class="ttdeci">bool IsSliceSupported(const TensorInfo &amp;input, const TensorInfo &amp;output, const SliceDescriptor &amp;descriptor, Optional&lt; std::string &amp;&gt; reasonIfUnsupported=EmptyOptional()) const override</div><div class="ttdef"><b>Definition:</b> <a href="_layer_support_base_8cpp_source.xhtml#l00573">LayerSupportBase.cpp:573</a></div></div>
<div class="ttc" id="classarmnn_1_1_layer_support_base_xhtml_aab7318aa8adc0a8a3b6a1780cfc1f90b"><div class="ttname"><a href="classarmnn_1_1_layer_support_base.xhtml#aab7318aa8adc0a8a3b6a1780cfc1f90b">armnn::LayerSupportBase::IsFakeQuantizationSupported</a></div><div class="ttdeci">bool IsFakeQuantizationSupported(const TensorInfo &amp;input, const FakeQuantizationDescriptor &amp;descriptor, Optional&lt; std::string &amp;&gt; reasonIfUnsupported=EmptyOptional()) const override</div><div class="ttdef"><b>Definition:</b> <a href="_layer_support_base_8cpp_source.xhtml#l00287">LayerSupportBase.cpp:287</a></div></div>
<div class="ttc" id="structarmnn_1_1_batch_to_space_nd_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_batch_to_space_nd_descriptor.xhtml">armnn::BatchToSpaceNdDescriptor</a></div><div class="ttdoc">A BatchToSpaceNdDescriptor for the BatchToSpaceNdLayer. </div><div class="ttdef"><b>Definition:</b> <a href="_descriptors_8hpp_source.xhtml#l00836">Descriptors.hpp:836</a></div></div>
<div class="ttc" id="classarmnn_1_1_layer_support_base_xhtml_acc5d9a4c8f29984de3bbdca87684f317"><div class="ttname"><a href="classarmnn_1_1_layer_support_base.xhtml#acc5d9a4c8f29984de3bbdca87684f317">armnn::LayerSupportBase::IsFillSupported</a></div><div class="ttdeci">virtual bool IsFillSupported(const TensorInfo &amp;input, const TensorInfo &amp;output, const FillDescriptor &amp;descriptor, Optional&lt; std::string &amp;&gt; reasonIfUnsupported=EmptyOptional()) const override</div><div class="ttdef"><b>Definition:</b> <a href="_layer_support_base_8cpp_source.xhtml#l00294">LayerSupportBase.cpp:294</a></div></div>
<div class="ttc" id="classarmnn_1_1_layer_support_base_xhtml_adc1a598f2f572564818e3d343af93486"><div class="ttname"><a href="classarmnn_1_1_layer_support_base.xhtml#adc1a598f2f572564818e3d343af93486">armnn::LayerSupportBase::IsPreCompiledSupported</a></div><div class="ttdeci">bool IsPreCompiledSupported(const TensorInfo &amp;input, const PreCompiledDescriptor &amp;descriptor, Optional&lt; std::string &amp;&gt; reasonIfUnsupported=EmptyOptional()) const override</div><div class="ttdef"><b>Definition:</b> <a href="_layer_support_base_8cpp_source.xhtml#l00489">LayerSupportBase.cpp:489</a></div></div>
<div class="ttc" id="classarmnn_1_1_i_layer_support_xhtml_a5a01de4e3851a25f2df77897fb8f7083"><div class="ttname"><a href="classarmnn_1_1_i_layer_support.xhtml#a5a01de4e3851a25f2df77897fb8f7083">armnn::ILayerSupport::outputStateIn</a></div><div class="ttdeci">const TensorInfo &amp; outputStateIn</div><div class="ttdef"><b>Definition:</b> <a href="_i_layer_support_8hpp_source.xhtml#l00298">ILayerSupport.hpp:298</a></div></div>
<div class="ttc" id="classarmnn_1_1_i_layer_support_xhtml_ad5e0e3fb8a59107ac3366028a057db12"><div class="ttname"><a href="classarmnn_1_1_i_layer_support.xhtml#ad5e0e3fb8a59107ac3366028a057db12">armnn::ILayerSupport::previousCellStateIn</a></div><div class="ttdeci">const TensorInfo const TensorInfo &amp; previousCellStateIn</div><div class="ttdef"><b>Definition:</b> <a href="_i_layer_support_8hpp_source.xhtml#l00417">ILayerSupport.hpp:417</a></div></div>
<div class="ttc" id="classarmnn_1_1_i_layer_support_xhtml_a53e5afe9ffb176f1f3c98a4222ceb2b9"><div class="ttname"><a href="classarmnn_1_1_i_layer_support.xhtml#a53e5afe9ffb176f1f3c98a4222ceb2b9">armnn::ILayerSupport::output1</a></div><div class="ttdeci">const TensorInfo const TensorInfo const TensorInfo &amp; output1</div><div class="ttdef"><b>Definition:</b> <a href="_i_layer_support_8hpp_source.xhtml#l00535">ILayerSupport.hpp:535</a></div></div>
<div class="ttc" id="classarmnn_1_1_i_layer_support_xhtml_a3b204a7fda471668ab54dc967c5a7917"><div class="ttname"><a href="classarmnn_1_1_i_layer_support.xhtml#a3b204a7fda471668ab54dc967c5a7917">armnn::ILayerSupport::numDetections</a></div><div class="ttdeci">const TensorInfo const TensorInfo const TensorInfo const TensorInfo const TensorInfo const TensorInfo &amp; numDetections</div><div class="ttdef"><b>Definition:</b> <a href="_i_layer_support_8hpp_source.xhtml#l00184">ILayerSupport.hpp:184</a></div></div>
<div class="ttc" id="classarmnn_1_1_layer_support_base_xhtml_ac054cb25099005eac854afb1511340f0"><div class="ttname"><a href="classarmnn_1_1_layer_support_base.xhtml#ac054cb25099005eac854afb1511340f0">armnn::LayerSupportBase::IsStridedSliceSupported</a></div><div class="ttdeci">bool IsStridedSliceSupported(const TensorInfo &amp;input, const TensorInfo &amp;output, const StridedSliceDescriptor &amp;descriptor, Optional&lt; std::string &amp;&gt; reasonIfUnsupported=EmptyOptional()) const override</div><div class="ttdef"><b>Definition:</b> <a href="_layer_support_base_8cpp_source.xhtml#l00637">LayerSupportBase.cpp:637</a></div></div>
<div class="ttc" id="structarmnn_1_1_resize_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_resize_descriptor.xhtml">armnn::ResizeDescriptor</a></div><div class="ttdoc">A ResizeBilinearDescriptor for the ResizeBilinearLayer. </div><div class="ttdef"><b>Definition:</b> <a href="_descriptors_8hpp_source.xhtml#l00962">Descriptors.hpp:962</a></div></div>
<div class="ttc" id="classarmnn_1_1_i_layer_support_xhtml_a218e2ebb5babb8323688906b8997eafb"><div class="ttname"><a href="classarmnn_1_1_i_layer_support.xhtml#a218e2ebb5babb8323688906b8997eafb">armnn::ILayerSupport::alpha</a></div><div class="ttdeci">const TensorInfo &amp; alpha</div><div class="ttdef"><b>Definition:</b> <a href="_i_layer_support_8hpp_source.xhtml#l00404">ILayerSupport.hpp:404</a></div></div>
<div class="ttc" id="structarmnn_1_1_base_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_base_descriptor.xhtml">armnn::BaseDescriptor</a></div><div class="ttdoc">Base class for all descriptors. </div><div class="ttdef"><b>Definition:</b> <a href="_descriptors_8hpp_source.xhtml#l00022">Descriptors.hpp:22</a></div></div>
<div class="ttc" id="structarmnn_1_1_stack_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_stack_descriptor.xhtml">armnn::StackDescriptor</a></div><div class="ttdoc">A StackDescriptor for the StackLayer. </div><div class="ttdef"><b>Definition:</b> <a href="_descriptors_8hpp_source.xhtml#l01228">Descriptors.hpp:1228</a></div></div>
<div class="ttc" id="structarmnn_1_1_pad_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_pad_descriptor.xhtml">armnn::PadDescriptor</a></div><div class="ttdoc">A PadDescriptor for the PadLayer. </div><div class="ttdef"><b>Definition:</b> <a href="_descriptors_8hpp_source.xhtml#l01173">Descriptors.hpp:1173</a></div></div>
<div class="ttc" id="classarmnn_1_1_layer_support_base_xhtml_a8c12a49b0d261836c11a57916e01805d"><div class="ttname"><a href="classarmnn_1_1_layer_support_base.xhtml#a8c12a49b0d261836c11a57916e01805d">armnn::LayerSupportBase::IsSwitchSupported</a></div><div class="ttdeci">bool IsSwitchSupported(const TensorInfo &amp;input0, const TensorInfo &amp;input1, const TensorInfo &amp;output0, const TensorInfo &amp;output1, Optional&lt; std::string &amp;&gt; reasonIfUnsupported=EmptyOptional()) const override</div><div class="ttdef"><b>Definition:</b> <a href="_layer_support_base_8cpp_source.xhtml#l00653">LayerSupportBase.cpp:653</a></div></div>
<div class="ttc" id="structarmnn_1_1_lstm_input_params_info_xhtml"><div class="ttname"><a href="structarmnn_1_1_lstm_input_params_info.xhtml">armnn::LstmInputParamsInfo</a></div><div class="ttdef"><b>Definition:</b> <a href="_lstm_params_8hpp_source.xhtml#l00063">LstmParams.hpp:63</a></div></div>
<div class="ttc" id="classarmnn_1_1_layer_support_base_xhtml_adc5695cc25f4055c7ed54bdc8604a098"><div class="ttname"><a href="classarmnn_1_1_layer_support_base.xhtml#adc5695cc25f4055c7ed54bdc8604a098">armnn::LayerSupportBase::IsBatchToSpaceNdSupported</a></div><div class="ttdeci">bool IsBatchToSpaceNdSupported(const TensorInfo &amp;input, const TensorInfo &amp;output, const BatchToSpaceNdDescriptor &amp;descriptor, Optional&lt; std::string &amp;&gt; reasonIfUnsupported=EmptyOptional()) const override</div><div class="ttdef"><b>Definition:</b> <a href="_layer_support_base_8cpp_source.xhtml#l00121">LayerSupportBase.cpp:121</a></div></div>
<div class="ttc" id="classarmnn_1_1_layer_support_base_xhtml_a6f1cae30d95bbd28dbac2a570c26c5f7"><div class="ttname"><a href="classarmnn_1_1_layer_support_base.xhtml#a6f1cae30d95bbd28dbac2a570c26c5f7">armnn::LayerSupportBase::IsChannelShuffleSupported</a></div><div class="ttdeci">bool IsChannelShuffleSupported(const TensorInfo &amp;input, const TensorInfo &amp;output, const ChannelShuffleDescriptor &amp;descriptor, Optional&lt; std::string &amp;&gt; reasonIfUnsupported=EmptyOptional()) const override</div><div class="ttdef"><b>Definition:</b> <a href="_layer_support_base_8cpp_source.xhtml#l00136">LayerSupportBase.cpp:136</a></div></div>
<div class="ttc" id="classarmnn_1_1_layer_support_base_xhtml_a08f55136b1f0907e7083d70d719f697f"><div class="ttname"><a href="classarmnn_1_1_layer_support_base.xhtml#a08f55136b1f0907e7083d70d719f697f">armnn::LayerSupportBase::IsDivisionSupported</a></div><div class="ttdeci">bool IsDivisionSupported(const TensorInfo &amp;input0, const TensorInfo &amp;input1, const TensorInfo &amp;output, Optional&lt; std::string &amp;&gt; reasonIfUnsupported=EmptyOptional()) const override</div><div class="ttdef"><b>Definition:</b> <a href="_layer_support_base_8cpp_source.xhtml#l00271">LayerSupportBase.cpp:271</a></div></div>
<div class="ttc" id="classarmnn_1_1_i_layer_support_xhtml_aec04a02758804219fb461623464a8e96"><div class="ttname"><a href="classarmnn_1_1_i_layer_support.xhtml#aec04a02758804219fb461623464a8e96">armnn::ILayerSupport::cellStateIn</a></div><div class="ttdeci">const TensorInfo const TensorInfo &amp; cellStateIn</div><div class="ttdef"><b>Definition:</b> <a href="_i_layer_support_8hpp_source.xhtml#l00298">ILayerSupport.hpp:298</a></div></div>
<div class="ttc" id="structarmnn_1_1_lstm_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_lstm_descriptor.xhtml">armnn::LstmDescriptor</a></div><div class="ttdoc">An LstmDescriptor for the LstmLayer. </div><div class="ttdef"><b>Definition:</b> <a href="_descriptors_8hpp_source.xhtml#l01079">Descriptors.hpp:1079</a></div></div>
<div class="ttc" id="structarmnn_1_1_quantized_lstm_input_params_info_xhtml"><div class="ttname"><a href="structarmnn_1_1_quantized_lstm_input_params_info.xhtml">armnn::QuantizedLstmInputParamsInfo</a></div><div class="ttdef"><b>Definition:</b> <a href="_quantized_lstm_params_8hpp_source.xhtml#l00119">QuantizedLstmParams.hpp:119</a></div></div>
<div class="ttc" id="structarmnn_1_1_l2_normalization_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_l2_normalization_descriptor.xhtml">armnn::L2NormalizationDescriptor</a></div><div class="ttdoc">A L2NormalizationDescriptor for the L2NormalizationLayer. </div><div class="ttdef"><b>Definition:</b> <a href="_descriptors_8hpp_source.xhtml#l00770">Descriptors.hpp:770</a></div></div>
<div class="ttc" id="classarmnn_1_1_i_layer_support_xhtml_a903053b422754682265fba0c03d94a52"><div class="ttname"><a href="classarmnn_1_1_i_layer_support.xhtml#a903053b422754682265fba0c03d94a52">armnn::ILayerSupport::var</a></div><div class="ttdeci">const TensorInfo const TensorInfo const TensorInfo &amp; var</div><div class="ttdef"><b>Definition:</b> <a href="_i_layer_support_8hpp_source.xhtml#l00062">ILayerSupport.hpp:62</a></div></div>
<div class="ttc" id="structarmnn_1_1_arg_min_max_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_arg_min_max_descriptor.xhtml">armnn::ArgMinMaxDescriptor</a></div><div class="ttdoc">An ArgMinMaxDescriptor for ArgMinMaxLayer. </div><div class="ttdef"><b>Definition:</b> <a href="_descriptors_8hpp_source.xhtml#l00067">Descriptors.hpp:67</a></div></div>
<div class="ttc" id="structarmnn_1_1_origins_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_origins_descriptor.xhtml">armnn::OriginsDescriptor</a></div><div class="ttdoc">An OriginsDescriptor for the ConcatLayer. </div><div class="ttdef"><b>Definition:</b> <a href="_descriptors_8hpp_source.xhtml#l00174">Descriptors.hpp:174</a></div></div>
<div class="ttc" id="structarmnn_1_1_reduce_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_reduce_descriptor.xhtml">armnn::ReduceDescriptor</a></div><div class="ttdoc">A ReduceDescriptor for the REDUCE operators. </div><div class="ttdef"><b>Definition:</b> <a href="_descriptors_8hpp_source.xhtml#l01508">Descriptors.hpp:1508</a></div></div>
<div class="ttc" id="classarmnn_1_1_layer_support_base_xhtml_a9d553495d9a94fa55588ae159d8bda30"><div class="ttname"><a href="classarmnn_1_1_layer_support_base.xhtml#a9d553495d9a94fa55588ae159d8bda30">armnn::LayerSupportBase::IsPermuteSupported</a></div><div class="ttdeci">bool IsPermuteSupported(const TensorInfo &amp;input, const TensorInfo &amp;output, const PermuteDescriptor &amp;descriptor, Optional&lt; std::string &amp;&gt; reasonIfUnsupported=EmptyOptional()) const override</div><div class="ttdef"><b>Definition:</b> <a href="_layer_support_base_8cpp_source.xhtml#l00465">LayerSupportBase.cpp:465</a></div></div>
<div class="ttc" id="structarmnn_1_1_fully_connected_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_fully_connected_descriptor.xhtml">armnn::FullyConnectedDescriptor</a></div><div class="ttdoc">A FullyConnectedDescriptor for the FullyConnectedLayer. </div><div class="ttdef"><b>Definition:</b> <a href="_descriptors_8hpp_source.xhtml#l00468">Descriptors.hpp:468</a></div></div>
<div class="ttc" id="classarmnn_1_1_layer_support_base_xhtml_a20134883695508a2192eecd403e7c44b"><div class="ttname"><a href="classarmnn_1_1_layer_support_base.xhtml#a20134883695508a2192eecd403e7c44b">armnn::LayerSupportBase::IsLogicalUnarySupported</a></div><div class="ttdeci">bool IsLogicalUnarySupported(const TensorInfo &amp;input, const TensorInfo &amp;output, const ElementwiseUnaryDescriptor &amp;descriptor, Optional&lt; std::string &amp;&gt; reasonIfUnsupported=EmptyOptional()) const override</div><div class="ttdef"><b>Definition:</b> <a href="_layer_support_base_8cpp_source.xhtml#l00359">LayerSupportBase.cpp:359</a></div></div>
<div class="ttc" id="classarmnn_1_1_i_layer_support_xhtml_a44eb2a514bddb31fe20f9e4f04159c9f"><div class="ttname"><a href="classarmnn_1_1_i_layer_support.xhtml#a44eb2a514bddb31fe20f9e4f04159c9f">armnn::ILayerSupport::outputStateOut</a></div><div class="ttdeci">const TensorInfo const TensorInfo const TensorInfo const TensorInfo &amp; outputStateOut</div><div class="ttdef"><b>Definition:</b> <a href="_i_layer_support_8hpp_source.xhtml#l00298">ILayerSupport.hpp:298</a></div></div>
<div class="ttc" id="structarmnn_1_1_fake_quantization_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_fake_quantization_descriptor.xhtml">armnn::FakeQuantizationDescriptor</a></div><div class="ttdoc">A FakeQuantizationDescriptor for the FakeQuantizationLayer. </div><div class="ttdef"><b>Definition:</b> <a href="_descriptors_8hpp_source.xhtml#l00867">Descriptors.hpp:867</a></div></div>
<div class="ttc" id="classarmnn_1_1_layer_support_base_xhtml_a91fb5f44d8b9427dc45443aa9ebfe13e"><div class="ttname"><a href="classarmnn_1_1_layer_support_base.xhtml#a91fb5f44d8b9427dc45443aa9ebfe13e">armnn::LayerSupportBase::IsConvertFp32ToFp16Supported</a></div><div class="ttdeci">bool IsConvertFp32ToFp16Supported(const TensorInfo &amp;input, const TensorInfo &amp;output, Optional&lt; std::string &amp;&gt; reasonIfUnsupported=EmptyOptional()) const override</div><div class="ttdef"><b>Definition:</b> <a href="_layer_support_base_8cpp_source.xhtml#l00189">LayerSupportBase.cpp:189</a></div></div>
<div class="ttc" id="classarmnn_1_1_layer_support_base_xhtml_a61c5b4e5dc224ef0c876e43353b34030"><div class="ttname"><a href="classarmnn_1_1_layer_support_base.xhtml#a61c5b4e5dc224ef0c876e43353b34030">armnn::LayerSupportBase::IsElementwiseUnarySupported</a></div><div class="ttdeci">bool IsElementwiseUnarySupported(const TensorInfo &amp;input, const TensorInfo &amp;output, const ElementwiseUnaryDescriptor &amp;descriptor, Optional&lt; std::string &amp;&gt; reasonIfUnsupported=EmptyOptional()) const override</div><div class="ttdef"><b>Definition:</b> <a href="_layer_support_base_8cpp_source.xhtml#l00279">LayerSupportBase.cpp:279</a></div></div>
<div class="ttc" id="classarmnn_1_1_layer_support_base_xhtml_a1efcaf6f02892442fefca09f49ea3d7c"><div class="ttname"><a href="classarmnn_1_1_layer_support_base.xhtml#a1efcaf6f02892442fefca09f49ea3d7c">armnn::LayerSupportBase::IsConvertFp16ToFp32Supported</a></div><div class="ttdeci">bool IsConvertFp16ToFp32Supported(const TensorInfo &amp;input, const TensorInfo &amp;output, Optional&lt; std::string &amp;&gt; reasonIfUnsupported=EmptyOptional()) const override</div><div class="ttdef"><b>Definition:</b> <a href="_layer_support_base_8cpp_source.xhtml#l00174">LayerSupportBase.cpp:174</a></div></div>
<div class="ttc" id="classarmnn_1_1_i_layer_support_xhtml_ae1ee2d524d4252bffc0ed67e75882952"><div class="ttname"><a href="classarmnn_1_1_i_layer_support.xhtml#ae1ee2d524d4252bffc0ed67e75882952">armnn::ILayerSupport::cellStateOut</a></div><div class="ttdeci">const TensorInfo const TensorInfo const TensorInfo const TensorInfo const TensorInfo &amp; cellStateOut</div><div class="ttdef"><b>Definition:</b> <a href="_i_layer_support_8hpp_source.xhtml#l00298">ILayerSupport.hpp:298</a></div></div>
<div class="ttc" id="structarmnn_1_1_gather_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_gather_descriptor.xhtml">armnn::GatherDescriptor</a></div><div class="ttdoc">A GatherDescriptor for the GatherLayer. </div><div class="ttdef"><b>Definition:</b> <a href="_descriptors_8hpp_source.xhtml#l00905">Descriptors.hpp:905</a></div></div>
<div class="ttc" id="_i_layer_support_8hpp_xhtml"><div class="ttname"><a href="_i_layer_support_8hpp.xhtml">ILayerSupport.hpp</a></div></div>
<div class="ttc" id="classarmnn_1_1_i_layer_support_xhtml_a83a99de40f6bffaa36f0333d04690b2a"><div class="ttname"><a href="classarmnn_1_1_i_layer_support.xhtml#a83a99de40f6bffaa36f0333d04690b2a">armnn::ILayerSupport::beta</a></div><div class="ttdeci">const TensorInfo const TensorInfo const TensorInfo const TensorInfo &amp; beta</div><div class="ttdef"><b>Definition:</b> <a href="_i_layer_support_8hpp_source.xhtml#l00062">ILayerSupport.hpp:62</a></div></div>
<div class="ttc" id="structarmnn_1_1_stand_in_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_stand_in_descriptor.xhtml">armnn::StandInDescriptor</a></div><div class="ttdoc">A StandInDescriptor for the StandIn layer. </div><div class="ttdef"><b>Definition:</b> <a href="_descriptors_8hpp_source.xhtml#l01258">Descriptors.hpp:1258</a></div></div>
<div class="ttc" id="classarmnn_1_1_layer_support_base_xhtml_aa02f01bbcb48c67f5b2efc4132ec5e86"><div class="ttname"><a href="classarmnn_1_1_layer_support_base.xhtml#aa02f01bbcb48c67f5b2efc4132ec5e86">armnn::LayerSupportBase::IsReshapeSupported</a></div><div class="ttdeci">bool IsReshapeSupported(const TensorInfo &amp;input, const TensorInfo &amp;output, const ReshapeDescriptor &amp;descriptor, Optional&lt; std::string &amp;&gt; reasonIfUnsupported=EmptyOptional()) const override</div><div class="ttdef"><b>Definition:</b> <a href="_layer_support_base_8cpp_source.xhtml#l00550">LayerSupportBase.cpp:550</a></div></div>
<div class="ttc" id="structarmnn_1_1_q_lstm_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_q_lstm_descriptor.xhtml">armnn::QLstmDescriptor</a></div><div class="ttdoc">A QLstmDescriptor for the QLstmLayer. </div><div class="ttdef"><b>Definition:</b> <a href="_descriptors_8hpp_source.xhtml#l01357">Descriptors.hpp:1357</a></div></div>
<div class="ttc" id="classarmnn_1_1_layer_support_base_xhtml_aa9bbc383cac59d6f02d2ef7d2cc0076f"><div class="ttname"><a href="classarmnn_1_1_layer_support_base.xhtml#aa9bbc383cac59d6f02d2ef7d2cc0076f">armnn::LayerSupportBase::IsMergeSupported</a></div><div class="ttdeci">bool IsMergeSupported(const TensorInfo &amp;input0, const TensorInfo &amp;input1, const TensorInfo &amp;output, Optional&lt; std::string &amp;&gt; reasonIfUnsupported=EmptyOptional()) const override</div><div class="ttdef"><b>Definition:</b> <a href="_layer_support_base_8cpp_source.xhtml#l00419">LayerSupportBase.cpp:419</a></div></div>
<div class="ttc" id="classarmnn_1_1_layer_support_base_xhtml_ab4609f1baf5fcd295951f3c8abdffd90"><div class="ttname"><a href="classarmnn_1_1_layer_support_base.xhtml#ab4609f1baf5fcd295951f3c8abdffd90">armnn::LayerSupportBase::IsStackSupported</a></div><div class="ttdeci">bool IsStackSupported(const std::vector&lt; const TensorInfo *&gt; &amp;inputs, const TensorInfo &amp;output, const StackDescriptor &amp;descriptor, Optional&lt; std::string &amp;&gt; reasonIfUnsupported=EmptyOptional()) const override</div><div class="ttdef"><b>Definition:</b> <a href="_layer_support_base_8cpp_source.xhtml#l00613">LayerSupportBase.cpp:613</a></div></div>
<div class="ttc" id="classarmnn_1_1_layer_support_base_xhtml_ab2af1e7da9490d29e569d271e16b0d5c"><div class="ttname"><a href="classarmnn_1_1_layer_support_base.xhtml#ab2af1e7da9490d29e569d271e16b0d5c">armnn::LayerSupportBase::IsSpaceToDepthSupported</a></div><div class="ttdeci">bool IsSpaceToDepthSupported(const TensorInfo &amp;input, const TensorInfo &amp;output, const SpaceToDepthDescriptor &amp;descriptor, Optional&lt; std::string &amp;&gt; reasonIfUnsupported=EmptyOptional()) const override</div><div class="ttdef"><b>Definition:</b> <a href="_layer_support_base_8cpp_source.xhtml#l00597">LayerSupportBase.cpp:597</a></div></div>
<div class="ttc" id="structarmnn_1_1_activation_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_activation_descriptor.xhtml">armnn::ActivationDescriptor</a></div><div class="ttdoc">An ActivationDescriptor for the ActivationLayer. </div><div class="ttdef"><b>Definition:</b> <a href="_descriptors_8hpp_source.xhtml#l00036">Descriptors.hpp:36</a></div></div>
<div class="ttc" id="classarmnn_1_1_layer_support_base_xhtml_a9d25fabf725313fda40a41400155bafe"><div class="ttname"><a href="classarmnn_1_1_layer_support_base.xhtml#a9d25fabf725313fda40a41400155bafe">armnn::LayerSupportBase::IsMemCopySupported</a></div><div class="ttdeci">bool IsMemCopySupported(const TensorInfo &amp;input, const TensorInfo &amp;output, Optional&lt; std::string &amp;&gt; reasonIfUnsupported=EmptyOptional()) const override</div><div class="ttdef"><b>Definition:</b> <a href="_layer_support_base_8cpp_source.xhtml#l00405">LayerSupportBase.cpp:405</a></div></div>
<div class="ttc" id="classarmnn_1_1_layer_support_base_xhtml_a0813546a09bf2caba6794014d1960624"><div class="ttname"><a href="classarmnn_1_1_layer_support_base.xhtml#a0813546a09bf2caba6794014d1960624">armnn::LayerSupportBase::IsInstanceNormalizationSupported</a></div><div class="ttdeci">bool IsInstanceNormalizationSupported(const TensorInfo &amp;input, const TensorInfo &amp;output, const InstanceNormalizationDescriptor &amp;descriptor, Optional&lt; std::string &amp;&gt; reasonIfUnsupported=EmptyOptional()) const override</div><div class="ttdef"><b>Definition:</b> <a href="_layer_support_base_8cpp_source.xhtml#l00334">LayerSupportBase.cpp:334</a></div></div>
<div class="ttc" id="structarmnn_1_1_slice_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_slice_descriptor.xhtml">armnn::SliceDescriptor</a></div><div class="ttdoc">A SliceDescriptor for the SliceLayer. </div><div class="ttdef"><b>Definition:</b> <a href="_descriptors_8hpp_source.xhtml#l01205">Descriptors.hpp:1205</a></div></div>
<div class="ttc" id="classarmnn_1_1_layer_support_base_xhtml_a707638bc045d261dff4faaf4a2acc72b"><div class="ttname"><a href="classarmnn_1_1_layer_support_base.xhtml#a707638bc045d261dff4faaf4a2acc72b">armnn::LayerSupportBase::IsRankSupported</a></div><div class="ttdeci">bool IsRankSupported(const TensorInfo &amp;input, const TensorInfo &amp;output, Optional&lt; std::string &amp;&gt; reasonIfUnsupported) const override</div><div class="ttdef"><b>Definition:</b> <a href="_layer_support_base_8cpp_source.xhtml#l00535">LayerSupportBase.cpp:535</a></div></div>
<div class="ttc" id="structarmnn_1_1_convolution3d_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_convolution3d_descriptor.xhtml">armnn::Convolution3dDescriptor</a></div><div class="ttdoc">A Convolution3dDescriptor for the Convolution3dLayer. </div><div class="ttdef"><b>Definition:</b> <a href="_descriptors_8hpp_source.xhtml#l00549">Descriptors.hpp:549</a></div></div>
<div class="ttc" id="classarmnn_1_1_layer_support_base_xhtml_a0c69484f19ed650ad48b716719114e51"><div class="ttname"><a href="classarmnn_1_1_layer_support_base.xhtml#a0c69484f19ed650ad48b716719114e51">armnn::LayerSupportBase::IsTransposeConvolution2dSupported</a></div><div class="ttdeci">bool IsTransposeConvolution2dSupported(const TensorInfo &amp;input, const TensorInfo &amp;output, const TransposeConvolution2dDescriptor &amp;descriptor, const TensorInfo &amp;weights, const Optional&lt; TensorInfo &gt; &amp;biases, Optional&lt; std::string &amp;&gt; reasonIfUnsupported=EmptyOptional()) const override</div><div class="ttdef"><b>Definition:</b> <a href="_layer_support_base_8cpp_source.xhtml#l00662">LayerSupportBase.cpp:662</a></div></div>
<div class="ttc" id="classarmnn_1_1_i_layer_support_xhtml_a5b09834cc88bb4156e291c37bd2434ff"><div class="ttname"><a href="classarmnn_1_1_i_layer_support.xhtml#a5b09834cc88bb4156e291c37bd2434ff">armnn::ILayerSupport::previousOutputIn</a></div><div class="ttdeci">const TensorInfo &amp; previousOutputIn</div><div class="ttdef"><b>Definition:</b> <a href="_i_layer_support_8hpp_source.xhtml#l00417">ILayerSupport.hpp:417</a></div></div>
<div class="ttc" id="structarmnn_1_1_pooling3d_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_pooling3d_descriptor.xhtml">armnn::Pooling3dDescriptor</a></div><div class="ttdoc">A Pooling3dDescriptor for the Pooling3dLayer. </div><div class="ttdef"><b>Definition:</b> <a href="_descriptors_8hpp_source.xhtml#l00392">Descriptors.hpp:392</a></div></div>
<div class="ttc" id="structarmnn_1_1_space_to_batch_nd_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_space_to_batch_nd_descriptor.xhtml">armnn::SpaceToBatchNdDescriptor</a></div><div class="ttdoc">A SpaceToBatchNdDescriptor for the SpaceToBatchNdLayer. </div><div class="ttdef"><b>Definition:</b> <a href="_descriptors_8hpp_source.xhtml#l01020">Descriptors.hpp:1020</a></div></div>
<div class="ttc" id="classarmnn_1_1_layer_support_base_xhtml_a0534291adf9f3436ba331552eba29a43"><div class="ttname"><a href="classarmnn_1_1_layer_support_base.xhtml#a0534291adf9f3436ba331552eba29a43">armnn::LayerSupportBase::IsPadSupported</a></div><div class="ttdeci">bool IsPadSupported(const TensorInfo &amp;input, const TensorInfo &amp;output, const PadDescriptor &amp;descriptor, Optional&lt; std::string &amp;&gt; reasonIfUnsupported=EmptyOptional()) const override</div><div class="ttdef"><b>Definition:</b> <a href="_layer_support_base_8cpp_source.xhtml#l00457">LayerSupportBase.cpp:457</a></div></div>
<div class="ttc" id="classarmnn_1_1_layer_support_base_xhtml_a3d0eafb3de560b3482f857b56b2b2116"><div class="ttname"><a href="classarmnn_1_1_layer_support_base.xhtml#a3d0eafb3de560b3482f857b56b2b2116">armnn::LayerSupportBase::IsMinimumSupported</a></div><div class="ttdeci">bool IsMinimumSupported(const TensorInfo &amp;input0, const TensorInfo &amp;input1, const TensorInfo &amp;output, Optional&lt; std::string &amp;&gt; reasonIfUnsupported=EmptyOptional()) const override</div><div class="ttdef"><b>Definition:</b> <a href="_layer_support_base_8cpp_source.xhtml#l00427">LayerSupportBase.cpp:427</a></div></div>
<div class="ttc" id="classarmnn_1_1_layer_support_base_xhtml_ad330b6e7dcf25410ea878af0557f2197"><div class="ttname"><a href="classarmnn_1_1_layer_support_base.xhtml#ad330b6e7dcf25410ea878af0557f2197">armnn::LayerSupportBase::IsConvertBf16ToFp32Supported</a></div><div class="ttdeci">bool IsConvertBf16ToFp32Supported(const TensorInfo &amp;input, const TensorInfo &amp;output, Optional&lt; std::string &amp;&gt; reasonIfUnsupported=EmptyOptional()) const override</div><div class="ttdef"><b>Definition:</b> <a href="_layer_support_base_8cpp_source.xhtml#l00167">LayerSupportBase.cpp:167</a></div></div>
<div class="ttc" id="classarmnn_1_1_i_layer_support_xhtml_ac8776b306c349e20905e7ae17255b395"><div class="ttname"><a href="classarmnn_1_1_i_layer_support.xhtml#ac8776b306c349e20905e7ae17255b395">armnn::ILayerSupport::detectionScores</a></div><div class="ttdeci">const TensorInfo const TensorInfo const TensorInfo const TensorInfo const TensorInfo &amp; detectionScores</div><div class="ttdef"><b>Definition:</b> <a href="_i_layer_support_8hpp_source.xhtml#l00184">ILayerSupport.hpp:184</a></div></div>
<div class="ttc" id="classarmnn_1_1_i_layer_support_xhtml_a6d593367be03c4ef23ba028caec5603d"><div class="ttname"><a href="classarmnn_1_1_i_layer_support.xhtml#a6d593367be03c4ef23ba028caec5603d">armnn::ILayerSupport::ARMNN_DEPRECATED_MSG_REMOVAL_DATE</a></div><div class="ttdeci">ARMNN_DEPRECATED_MSG_REMOVAL_DATE(&quot;This method is deprecated. &quot; &quot;Use ABI Stable IsLayerSupported accepting LayerType argument instead.&quot;, &quot;23.08&quot;) virtual bool IsActivationSupported(const TensorInfo &amp;input</div></div>
<div class="ttc" id="structarmnn_1_1_empty_optional_xhtml"><div class="ttname"><a href="structarmnn_1_1_empty_optional.xhtml">armnn::EmptyOptional</a></div><div class="ttdoc">EmptyOptional is used to initialize the Optional class in case we want to have default value for an O...</div><div class="ttdef"><b>Definition:</b> <a href="_optional_8hpp_source.xhtml#l00032">Optional.hpp:32</a></div></div>
<div class="ttc" id="classarmnn_1_1_layer_support_base_xhtml_a052f289a5b4e48bb2b50c732753e2cfa"><div class="ttname"><a href="classarmnn_1_1_layer_support_base.xhtml#a052f289a5b4e48bb2b50c732753e2cfa">armnn::LayerSupportBase::IsConvolution3dSupported</a></div><div class="ttdeci">bool IsConvolution3dSupported(const TensorInfo &amp;input, const TensorInfo &amp;output, const Convolution3dDescriptor &amp;descriptor, const TensorInfo &amp;weights, const Optional&lt; TensorInfo &gt; &amp;biases, Optional&lt; std::string &amp;&gt; reasonIfUnsupported=EmptyOptional()) const override</div><div class="ttdef"><b>Definition:</b> <a href="_layer_support_base_8cpp_source.xhtml#l00206">LayerSupportBase.cpp:206</a></div></div>
<div class="ttc" id="structarmnn_1_1_elementwise_unary_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_elementwise_unary_descriptor.xhtml">armnn::ElementwiseUnaryDescriptor</a></div><div class="ttdoc">A ElementwiseUnaryDescriptor for the ElementwiseUnaryLayer. </div><div class="ttdef"><b>Definition:</b> <a href="_descriptors_8hpp_source.xhtml#l00109">Descriptors.hpp:109</a></div></div>
<div class="ttc" id="classarmnn_1_1_layer_support_base_xhtml_af7ff06bd8115a6a9cc6d41e5c762798e"><div class="ttname"><a href="classarmnn_1_1_layer_support_base.xhtml#af7ff06bd8115a6a9cc6d41e5c762798e">armnn::LayerSupportBase::IsConvolution2dSupported</a></div><div class="ttdeci">bool IsConvolution2dSupported(const TensorInfo &amp;input, const TensorInfo &amp;output, const Convolution2dDescriptor &amp;descriptor, const TensorInfo &amp;weights, const Optional&lt; TensorInfo &gt; &amp;biases, Optional&lt; std::string &amp;&gt; reasonIfUnsupported=EmptyOptional()) const override</div><div class="ttdef"><b>Definition:</b> <a href="_layer_support_base_8cpp_source.xhtml#l00196">LayerSupportBase.cpp:196</a></div></div>
<div class="ttc" id="classarmnn_1_1_layer_support_base_xhtml_af6c947e4d4b25bc49d92d18d4ff26736"><div class="ttname"><a href="classarmnn_1_1_layer_support_base.xhtml#af6c947e4d4b25bc49d92d18d4ff26736">armnn::LayerSupportBase::IsSubtractionSupported</a></div><div class="ttdeci">bool IsSubtractionSupported(const TensorInfo &amp;input0, const TensorInfo &amp;input1, const TensorInfo &amp;output, Optional&lt; std::string &amp;&gt; reasonIfUnsupported=EmptyOptional()) const override</div><div class="ttdef"><b>Definition:</b> <a href="_layer_support_base_8cpp_source.xhtml#l00645">LayerSupportBase.cpp:645</a></div></div>
<div class="ttc" id="classarmnn_1_1_i_layer_support_xhtml_a71cf13fc7f7aeac054919e0c6dcab52e"><div class="ttname"><a href="classarmnn_1_1_i_layer_support.xhtml#a71cf13fc7f7aeac054919e0c6dcab52e">armnn::ILayerSupport::biases</a></div><div class="ttdeci">const TensorInfo const Convolution2dDescriptor const TensorInfo const Optional&lt; TensorInfo &gt; &amp; biases</div><div class="ttdef"><b>Definition:</b> <a href="_i_layer_support_8hpp_source.xhtml#l00137">ILayerSupport.hpp:137</a></div></div>
<div class="ttc" id="classarmnn_1_1_layer_support_base_xhtml_a862535721737220f62a49f14ff494dd5"><div class="ttname"><a href="classarmnn_1_1_layer_support_base.xhtml#a862535721737220f62a49f14ff494dd5">armnn::LayerSupportBase::IsLstmSupported</a></div><div class="ttdeci">bool IsLstmSupported(const TensorInfo &amp;input, const TensorInfo &amp;outputStateIn, const TensorInfo &amp;cellStateIn, const TensorInfo &amp;scratchBuffer, const TensorInfo &amp;outputStateOut, const TensorInfo &amp;cellStateOut, const TensorInfo &amp;output, const LstmDescriptor &amp;descriptor, const LstmInputParamsInfo &amp;paramsInfo, Optional&lt; std::string &amp;&gt; reasonIfUnsupported=EmptyOptional()) const override</div><div class="ttdef"><b>Definition:</b> <a href="_layer_support_base_8cpp_source.xhtml#l00375">LayerSupportBase.cpp:375</a></div></div>
<div class="ttc" id="structarmnn_1_1_mean_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_mean_descriptor.xhtml">armnn::MeanDescriptor</a></div><div class="ttdoc">A MeanDescriptor for the MeanLayer. </div><div class="ttdef"><b>Definition:</b> <a href="_descriptors_8hpp_source.xhtml#l01149">Descriptors.hpp:1149</a></div></div>
<div class="ttc" id="classarmnn_1_1_i_layer_support_xhtml_a6d0c2ca9c78e81a5e9e0f3db51934782"><div class="ttname"><a href="classarmnn_1_1_i_layer_support.xhtml#a6d0c2ca9c78e81a5e9e0f3db51934782">armnn::ILayerSupport::detectionBoxes</a></div><div class="ttdeci">const TensorInfo const TensorInfo const TensorInfo &amp; detectionBoxes</div><div class="ttdef"><b>Definition:</b> <a href="_i_layer_support_8hpp_source.xhtml#l00184">ILayerSupport.hpp:184</a></div></div>
<div class="ttc" id="classarmnn_1_1_layer_support_base_xhtml_a53c7593d1aa26207eac5d5814a9d56dc"><div class="ttname"><a href="classarmnn_1_1_layer_support_base.xhtml#a53c7593d1aa26207eac5d5814a9d56dc">armnn::LayerSupportBase::IsFloorSupported</a></div><div class="ttdeci">bool IsFloorSupported(const TensorInfo &amp;input, const TensorInfo &amp;output, Optional&lt; std::string &amp;&gt; reasonIfUnsupported=EmptyOptional()) const override</div><div class="ttdef"><b>Definition:</b> <a href="_layer_support_base_8cpp_source.xhtml#l00302">LayerSupportBase.cpp:302</a></div></div>
<div class="ttc" id="classarmnn_1_1_layer_support_base_xhtml_adf18c4fa8fc9e0cdae1967990aa90fe8"><div class="ttname"><a href="classarmnn_1_1_layer_support_base.xhtml#adf18c4fa8fc9e0cdae1967990aa90fe8">armnn::LayerSupportBase::IsConstantSupported</a></div><div class="ttdeci">bool IsConstantSupported(const TensorInfo &amp;output, Optional&lt; std::string &amp;&gt; reasonIfUnsupported=EmptyOptional()) const override</div><div class="ttdef"><b>Definition:</b> <a href="_layer_support_base_8cpp_source.xhtml#l00161">LayerSupportBase.cpp:161</a></div></div>
<div class="ttc" id="classarmnn_1_1_layer_support_base_xhtml_a994c2065561141bf37fcd2ff7bb4af4d"><div class="ttname"><a href="classarmnn_1_1_layer_support_base.xhtml#a994c2065561141bf37fcd2ff7bb4af4d">armnn::LayerSupportBase::IsNormalizationSupported</a></div><div class="ttdeci">bool IsNormalizationSupported(const TensorInfo &amp;input, const TensorInfo &amp;output, const NormalizationDescriptor &amp;descriptor, Optional&lt; std::string &amp;&gt; reasonIfUnsupported=EmptyOptional()) const override</div><div class="ttdef"><b>Definition:</b> <a href="_layer_support_base_8cpp_source.xhtml#l00443">LayerSupportBase.cpp:443</a></div></div>
<div class="ttc" id="structarmnn_1_1_transpose_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_transpose_descriptor.xhtml">armnn::TransposeDescriptor</a></div><div class="ttdoc">A TransposeDescriptor for the TransposeLayer. </div><div class="ttdef"><b>Definition:</b> <a href="_descriptors_8hpp_source.xhtml#l01467">Descriptors.hpp:1467</a></div></div>
<div class="ttc" id="structarmnn_1_1_strided_slice_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_strided_slice_descriptor.xhtml">armnn::StridedSliceDescriptor</a></div><div class="ttdoc">A StridedSliceDescriptor for the StridedSliceLayer. </div><div class="ttdef"><b>Definition:</b> <a href="_descriptors_8hpp_source.xhtml#l01280">Descriptors.hpp:1280</a></div></div>
<div class="ttc" id="classarmnn_1_1_layer_support_base_xhtml_aeaf971dd9dffd6f6bc7e5a1ae6b6af5c"><div class="ttname"><a href="classarmnn_1_1_layer_support_base.xhtml#aeaf971dd9dffd6f6bc7e5a1ae6b6af5c">armnn::LayerSupportBase::IsFullyConnectedSupported</a></div><div class="ttdeci">bool IsFullyConnectedSupported(const TensorInfo &amp;input, const TensorInfo &amp;output, const TensorInfo &amp;weights, const TensorInfo &amp;biases, const FullyConnectedDescriptor &amp;descriptor, Optional&lt; std::string &amp;&gt; reasonIfUnsupported=EmptyOptional()) const override</div><div class="ttdef"><b>Definition:</b> <a href="_layer_support_base_8cpp_source.xhtml#l00309">LayerSupportBase.cpp:309</a></div></div>
<div class="ttc" id="classarmnn_1_1_layer_support_base_xhtml_aef3244c0ef64c8f2f352d21ce0c06985"><div class="ttname"><a href="classarmnn_1_1_layer_support_base.xhtml#aef3244c0ef64c8f2f352d21ce0c06985">armnn::LayerSupportBase::IsOutputSupported</a></div><div class="ttdeci">bool IsOutputSupported(const TensorInfo &amp;output, Optional&lt; std::string &amp;&gt; reasonIfUnsupported=EmptyOptional()) const override</div><div class="ttdef"><b>Definition:</b> <a href="_layer_support_base_8cpp_source.xhtml#l00451">LayerSupportBase.cpp:451</a></div></div>
<div class="ttc" id="classarmnn_1_1_layer_support_base_xhtml_a3d27a3fc6a7df0b68d80cb113aff8b6c"><div class="ttname"><a href="classarmnn_1_1_layer_support_base.xhtml#a3d27a3fc6a7df0b68d80cb113aff8b6c">armnn::LayerSupportBase::IsResizeSupported</a></div><div class="ttdeci">bool IsResizeSupported(const TensorInfo &amp;input, const TensorInfo &amp;output, const ResizeDescriptor &amp;descriptor, Optional&lt; std::string &amp;&gt; reasonIfUnsupported=EmptyOptional()) const override</div><div class="ttdef"><b>Definition:</b> <a href="_layer_support_base_8cpp_source.xhtml#l00558">LayerSupportBase.cpp:558</a></div></div>
<div class="ttc" id="classarmnn_1_1_layer_support_base_xhtml_aa955675303d67b1d1fb51fb7f09d8c21"><div class="ttname"><a href="classarmnn_1_1_layer_support_base.xhtml#aa955675303d67b1d1fb51fb7f09d8c21">armnn::LayerSupportBase::IsPooling2dSupported</a></div><div class="ttdeci">bool IsPooling2dSupported(const TensorInfo &amp;input, const TensorInfo &amp;output, const Pooling2dDescriptor &amp;descriptor, Optional&lt; std::string &amp;&gt; reasonIfUnsupported=EmptyOptional()) const override</div><div class="ttdef"><b>Definition:</b> <a href="_layer_support_base_8cpp_source.xhtml#l00473">LayerSupportBase.cpp:473</a></div></div>
<div class="ttc" id="classarmnn_1_1_i_layer_support_xhtml_ab82416560ced17268c6ba4443a3aac5e"><div class="ttname"><a href="classarmnn_1_1_i_layer_support.xhtml#ab82416560ced17268c6ba4443a3aac5e">armnn::ILayerSupport::input1</a></div><div class="ttdeci">const TensorInfo &amp; input1</div><div class="ttdef"><b>Definition:</b> <a href="_i_layer_support_8hpp_source.xhtml#l00048">ILayerSupport.hpp:48</a></div></div>
<div class="ttc" id="structarmnn_1_1_pre_compiled_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_pre_compiled_descriptor.xhtml">armnn::PreCompiledDescriptor</a></div><div class="ttdoc">A PreCompiledDescriptor for the PreCompiledLayer. </div><div class="ttdef"><b>Definition:</b> <a href="_descriptors_8hpp_source.xhtml#l01344">Descriptors.hpp:1344</a></div></div>
<div class="ttc" id="classarmnn_1_1_layer_support_base_xhtml_a74149085c116e51500a51f5cdb68e67c"><div class="ttname"><a href="classarmnn_1_1_layer_support_base.xhtml#a74149085c116e51500a51f5cdb68e67c">armnn::LayerSupportBase::IsUnidirectionalSequenceLstmSupported</a></div><div class="ttdeci">bool IsUnidirectionalSequenceLstmSupported(const TensorInfo &amp;input, const TensorInfo &amp;outputStateIn, const TensorInfo &amp;cellStateIn, const TensorInfo &amp;outputStateOut, const TensorInfo &amp;cellStateOut, const TensorInfo &amp;output, const LstmDescriptor &amp;descriptor, const LstmInputParamsInfo &amp;paramsInfo, Optional&lt; std::string &amp;&gt; reasonIfUnsupported=EmptyOptional()) const override</div><div class="ttdef"><b>Definition:</b> <a href="_layer_support_base_8cpp_source.xhtml#l00680">LayerSupportBase.cpp:680</a></div></div>
<div class="ttc" id="classarmnn_1_1_layer_support_base_xhtml_a2f51fda38409c3768a7bd28cedf3f075"><div class="ttname"><a href="classarmnn_1_1_layer_support_base.xhtml#a2f51fda38409c3768a7bd28cedf3f075">armnn::LayerSupportBase::IsGatherSupported</a></div><div class="ttdeci">bool IsGatherSupported(const TensorInfo &amp;input0, const TensorInfo &amp;input1, const TensorInfo &amp;output, const GatherDescriptor &amp;descriptor, Optional&lt; std::string &amp;&gt; reasonIfUnsupported=EmptyOptional()) const override</div><div class="ttdef"><b>Definition:</b> <a href="_layer_support_base_8cpp_source.xhtml#l00319">LayerSupportBase.cpp:319</a></div></div>
<div class="ttc" id="structarmnn_1_1_pooling2d_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_pooling2d_descriptor.xhtml">armnn::Pooling2dDescriptor</a></div><div class="ttdoc">A Pooling2dDescriptor for the Pooling2dLayer. </div><div class="ttdef"><b>Definition:</b> <a href="_descriptors_8hpp_source.xhtml#l00332">Descriptors.hpp:332</a></div></div>
<div class="ttc" id="structarmnn_1_1_normalization_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_normalization_descriptor.xhtml">armnn::NormalizationDescriptor</a></div><div class="ttdoc">A NormalizationDescriptor for the NormalizationLayer. </div><div class="ttdef"><b>Definition:</b> <a href="_descriptors_8hpp_source.xhtml#l00730">Descriptors.hpp:730</a></div></div>
<div class="ttc" id="classarmnn_1_1_layer_support_base_xhtml_a0947498c6cc747db6219a22132a1b89a"><div class="ttname"><a href="classarmnn_1_1_layer_support_base.xhtml#a0947498c6cc747db6219a22132a1b89a">armnn::LayerSupportBase::IsConvertFp32ToBf16Supported</a></div><div class="ttdeci">bool IsConvertFp32ToBf16Supported(const TensorInfo &amp;input, const TensorInfo &amp;output, Optional&lt; std::string &amp;&gt; reasonIfUnsupported=EmptyOptional()) const override</div><div class="ttdef"><b>Definition:</b> <a href="_layer_support_base_8cpp_source.xhtml#l00181">LayerSupportBase.cpp:181</a></div></div>
<div class="ttc" id="classarmnn_1_1_layer_support_base_xhtml_afef9436c86b37b973471f2ae546ac00a"><div class="ttname"><a href="classarmnn_1_1_layer_support_base.xhtml#afef9436c86b37b973471f2ae546ac00a">armnn::LayerSupportBase::IsMaximumSupported</a></div><div class="ttdeci">bool IsMaximumSupported(const TensorInfo &amp;input0, const TensorInfo &amp;input1, const TensorInfo &amp;output, Optional&lt; std::string &amp;&gt; reasonIfUnsupported=EmptyOptional()) const override</div><div class="ttdef"><b>Definition:</b> <a href="_layer_support_base_8cpp_source.xhtml#l00389">LayerSupportBase.cpp:389</a></div></div>
<div class="ttc" id="classarmnn_1_1_i_layer_support_xhtml_a4f6f59c4e91c7c37d9a119d615093ed3"><div class="ttname"><a href="classarmnn_1_1_i_layer_support.xhtml#a4f6f59c4e91c7c37d9a119d615093ed3">armnn::ILayerSupport::scratchBuffer</a></div><div class="ttdeci">const TensorInfo const TensorInfo const TensorInfo &amp; scratchBuffer</div><div class="ttdef"><b>Definition:</b> <a href="_i_layer_support_8hpp_source.xhtml#l00298">ILayerSupport.hpp:298</a></div></div>
<div class="ttc" id="structarmnn_1_1_detection_post_process_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_detection_post_process_descriptor.xhtml">armnn::DetectionPostProcessDescriptor</a></div><div class="ttdef"><b>Definition:</b> <a href="_descriptors_8hpp_source.xhtml#l00674">Descriptors.hpp:674</a></div></div>
<div class="ttc" id="structarmnn_1_1_instance_normalization_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_instance_normalization_descriptor.xhtml">armnn::InstanceNormalizationDescriptor</a></div><div class="ttdoc">An InstanceNormalizationDescriptor for InstanceNormalizationLayer. </div><div class="ttdef"><b>Definition:</b> <a href="_descriptors_8hpp_source.xhtml#l00808">Descriptors.hpp:808</a></div></div>
<div class="ttc" id="classarmnn_1_1_layer_support_base_xhtml_a5aec1c6fb4f73909a10f72f45815d2cb"><div class="ttname"><a href="classarmnn_1_1_layer_support_base.xhtml#a5aec1c6fb4f73909a10f72f45815d2cb">armnn::LayerSupportBase::IsPooling3dSupported</a></div><div class="ttdeci">bool IsPooling3dSupported(const TensorInfo &amp;input, const TensorInfo &amp;output, const Pooling3dDescriptor &amp;descriptor, Optional&lt; std::string &amp;&gt; reasonIfUnsupported=EmptyOptional()) const override</div><div class="ttdef"><b>Definition:</b> <a href="_layer_support_base_8cpp_source.xhtml#l00481">LayerSupportBase.cpp:481</a></div></div>
<div class="ttc" id="structarmnn_1_1_channel_shuffle_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_channel_shuffle_descriptor.xhtml">armnn::ChannelShuffleDescriptor</a></div><div class="ttdoc">A ChannelShuffleDescriptor for the ChannelShuffle operator. </div><div class="ttdef"><b>Definition:</b> <a href="_descriptors_8hpp_source.xhtml#l01532">Descriptors.hpp:1532</a></div></div>
<div class="ttc" id="classarmnn_1_1_layer_support_base_xhtml_a128fb9890897e08251a3f621e570cd23"><div class="ttname"><a href="classarmnn_1_1_layer_support_base.xhtml#a128fb9890897e08251a3f621e570cd23">armnn::LayerSupportBase::IsDepthToSpaceSupported</a></div><div class="ttdeci">bool IsDepthToSpaceSupported(const TensorInfo &amp;input, const TensorInfo &amp;output, const DepthToSpaceDescriptor &amp;descriptor, Optional&lt; std::string &amp;&gt; reasonIfUnsupported=EmptyOptional()) const override</div><div class="ttdef"><b>Definition:</b> <a href="_layer_support_base_8cpp_source.xhtml#l00223">LayerSupportBase.cpp:223</a></div></div>
<div class="ttc" id="structarmnn_1_1_softmax_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_softmax_descriptor.xhtml">armnn::SoftmaxDescriptor</a></div><div class="ttdoc">A SoftmaxDescriptor for the SoftmaxLayer. </div><div class="ttdef"><b>Definition:</b> <a href="_descriptors_8hpp_source.xhtml#l00150">Descriptors.hpp:150</a></div></div>
<div class="ttc" id="classarmnn_1_1_layer_support_base_xhtml_a1542179a03961e3635bb5bef993c8e0e"><div class="ttname"><a href="classarmnn_1_1_layer_support_base.xhtml#a1542179a03961e3635bb5bef993c8e0e">armnn::LayerSupportBase::IsConcatSupported</a></div><div class="ttdeci">bool IsConcatSupported(const std::vector&lt; const TensorInfo *&gt; inputs, const TensorInfo &amp;output, const OriginsDescriptor &amp;descriptor, Optional&lt; std::string &amp;&gt; reasonIfUnsupported=EmptyOptional()) const override</div><div class="ttdef"><b>Definition:</b> <a href="_layer_support_base_8cpp_source.xhtml#l00153">LayerSupportBase.cpp:153</a></div></div>
<div class="ttc" id="classarmnn_1_1_i_layer_support_xhtml_a631f893f44415523924016ed3f54a661"><div class="ttname"><a href="classarmnn_1_1_i_layer_support.xhtml#a631f893f44415523924016ed3f54a661">armnn::ILayerSupport::weights</a></div><div class="ttdeci">const TensorInfo const Convolution2dDescriptor const TensorInfo &amp; weights</div><div class="ttdef"><b>Definition:</b> <a href="_i_layer_support_8hpp_source.xhtml#l00137">ILayerSupport.hpp:137</a></div></div>
<div class="ttc" id="classarmnn_1_1_layer_support_base_xhtml_a67c970dd054b991e14369de523ca3a5a"><div class="ttname"><a href="classarmnn_1_1_layer_support_base.xhtml#a67c970dd054b991e14369de523ca3a5a">armnn::LayerSupportBase::IsBatchNormalizationSupported</a></div><div class="ttdeci">bool IsBatchNormalizationSupported(const TensorInfo &amp;input, const TensorInfo &amp;output, const TensorInfo &amp;mean, const TensorInfo &amp;var, const TensorInfo &amp;beta, const TensorInfo &amp;gamma, const BatchNormalizationDescriptor &amp;descriptor, Optional&lt; std::string &amp;&gt; reasonIfUnsupported=EmptyOptional()) const override</div><div class="ttdef"><b>Definition:</b> <a href="_layer_support_base_8cpp_source.xhtml#l00109">LayerSupportBase.cpp:109</a></div></div>
<div class="ttc" id="structarmnn_1_1_depthwise_convolution2d_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_depthwise_convolution2d_descriptor.xhtml">armnn::DepthwiseConvolution2dDescriptor</a></div><div class="ttdoc">A DepthwiseConvolution2dDescriptor for the DepthwiseConvolution2dLayer. </div><div class="ttdef"><b>Definition:</b> <a href="_descriptors_8hpp_source.xhtml#l00620">Descriptors.hpp:620</a></div></div>
<div class="ttc" id="structarmnn_1_1_fill_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_fill_descriptor.xhtml">armnn::FillDescriptor</a></div><div class="ttdoc">A FillDescriptor for the FillLayer. </div><div class="ttdef"><b>Definition:</b> <a href="_descriptors_8hpp_source.xhtml#l00886">Descriptors.hpp:886</a></div></div>
<div class="ttc" id="structarmnn_1_1_batch_normalization_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_batch_normalization_descriptor.xhtml">armnn::BatchNormalizationDescriptor</a></div><div class="ttdoc">A BatchNormalizationDescriptor for the BatchNormalizationLayer. </div><div class="ttdef"><b>Definition:</b> <a href="_descriptors_8hpp_source.xhtml#l00789">Descriptors.hpp:789</a></div></div>
<div class="ttc" id="classarmnn_1_1_layer_support_base_xhtml_a2e89c72cf60df7c2d2d7e5d98822b672"><div class="ttname"><a href="classarmnn_1_1_layer_support_base.xhtml#a2e89c72cf60df7c2d2d7e5d98822b672">armnn::LayerSupportBase::IsDequantizeSupported</a></div><div class="ttdeci">bool IsDequantizeSupported(const TensorInfo &amp;input, const TensorInfo &amp;output, Optional&lt; std::string &amp;&gt; reasonIfUnsupported=EmptyOptional()) const override</div><div class="ttdef"><b>Definition:</b> <a href="_layer_support_base_8cpp_source.xhtml#l00241">LayerSupportBase.cpp:241</a></div></div>
<div class="ttc" id="classarmnn_1_1_i_layer_support_xhtml_a895a8451e0799b95d65caf7ffe0a32d7"><div class="ttname"><a href="classarmnn_1_1_i_layer_support.xhtml#a895a8451e0799b95d65caf7ffe0a32d7">armnn::ILayerSupport::mean</a></div><div class="ttdeci">const TensorInfo const TensorInfo &amp; mean</div><div class="ttdef"><b>Definition:</b> <a href="_i_layer_support_8hpp_source.xhtml#l00062">ILayerSupport.hpp:62</a></div></div>
<div class="ttc" id="structarmnn_1_1_permute_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_permute_descriptor.xhtml">armnn::PermuteDescriptor</a></div><div class="ttdoc">A PermuteDescriptor for the PermuteLayer. </div><div class="ttdef"><b>Definition:</b> <a href="_descriptors_8hpp_source.xhtml#l00129">Descriptors.hpp:129</a></div></div>
<div class="ttc" id="classarmnn_1_1_layer_support_base_xhtml_a55d91a97ff664f42cd5cd62b60c15f80"><div class="ttname"><a href="classarmnn_1_1_layer_support_base.xhtml#a55d91a97ff664f42cd5cd62b60c15f80">armnn::LayerSupportBase::IsDilatedDepthwiseConvolutionSupported</a></div><div class="ttdeci">bool IsDilatedDepthwiseConvolutionSupported(const TensorInfo &amp;input, const TensorInfo &amp;output, const DepthwiseConvolution2dDescriptor &amp;descriptor, const TensorInfo &amp;weights, const Optional&lt; TensorInfo &gt; &amp;biases, Optional&lt; std::string &amp;&gt; reasonIfUnsupported=EmptyOptional()) const override</div><div class="ttdef"><b>Definition:</b> <a href="_layer_support_base_8cpp_source.xhtml#l00261">LayerSupportBase.cpp:261</a></div></div>
<div class="ttc" id="namespacearmnn_xhtml_a56943a0946e5f15e5e58054b8e7a04a4"><div class="ttname"><a href="namespacearmnn.xhtml#a56943a0946e5f15e5e58054b8e7a04a4">armnn::LayerType</a></div><div class="ttdeci">LayerType</div><div class="ttdoc">When adding a new layer, adapt also the LastLayer enum value in the enum class LayerType below...</div><div class="ttdef"><b>Definition:</b> <a href="_types_8hpp_source.xhtml#l00468">Types.hpp:468</a></div></div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="dir_68267d1309a1af8e8297ef4c3efbcdba.xhtml">src</a></li><li class="navelem"><a class="el" href="dir_0f3cdec46afbc61a1ded8e1687c9c9a0.xhtml">backends</a></li><li class="navelem"><a class="el" href="dir_797a213d7d01b98ef12d53b0820ea64e.xhtml">backendsCommon</a></li><li class="navelem"><a class="el" href="_layer_support_base_8hpp.xhtml">LayerSupportBase.hpp</a></li>
    <li class="footer">Generated on Fri Aug 19 2022 14:38:28 for ArmNN by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.13 </li>
  </ul>
</div>
</body>
</html>
