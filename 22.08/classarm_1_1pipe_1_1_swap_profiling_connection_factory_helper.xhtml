<!-- Copyright (c) 2020 ARM Limited. -->
<!--                                 -->
<!-- SPDX-License-Identifier: MIT    -->
<!--                                 -->
<!-- HTML header for doxygen 1.8.13-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.13"/>
<meta name="robots" content="NOINDEX, NOFOLLOW" />
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>ArmNN: SwapProfilingConnectionFactoryHelper Class Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script><script type="text/javascript" src="http://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="stylesheet.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <img alt="ArmNN" src="Arm_NN_horizontal_blue.png" style="max-width: 10rem; margin-top: .5rem; margin-left 10px"/>
  <td style="padding-left: 0.5em;">
   <div id="projectname">
   &#160;<span id="projectnumber">22.08</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.13 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
$(document).ready(function(){initNavTree('classarm_1_1pipe_1_1_swap_profiling_connection_factory_helper.xhtml','');});
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="summary">
<a href="#pub-types">Public Types</a> &#124;
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="classarm_1_1pipe_1_1_swap_profiling_connection_factory_helper-members.xhtml">List of all members</a>  </div>
  <div class="headertitle">
<div class="title">SwapProfilingConnectionFactoryHelper Class Reference</div>  </div>
</div><!--header-->
<div class="contents">

<p><code>#include &lt;<a class="el" href="_profiling_tests_8hpp_source.xhtml">ProfilingTests.hpp</a>&gt;</code></p>
<div class="dynheader">
Inheritance diagram for SwapProfilingConnectionFactoryHelper:</div>
<div class="dyncontent">
 <div class="center">
  <img src="classarm_1_1pipe_1_1_swap_profiling_connection_factory_helper.png" usemap="#SwapProfilingConnectionFactoryHelper_map" alt=""/>
  <map id="SwapProfilingConnectionFactoryHelper_map" name="SwapProfilingConnectionFactoryHelper_map">
</map>
 </div></div>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-types"></a>
Public Types</h2></td></tr>
<tr class="memitem:a2c1ea69edf1cdf5889be8844757342e9"><td class="memItemLeft" align="right" valign="top">using&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm_1_1pipe_1_1_swap_profiling_connection_factory_helper.xhtml#a2c1ea69edf1cdf5889be8844757342e9">MockProfilingConnectionFactoryPtr</a> = std::unique_ptr&lt; <a class="el" href="classarm_1_1pipe_1_1_mock_profiling_connection_factory.xhtml">MockProfilingConnectionFactory</a> &gt;</td></tr>
<tr class="separator:a2c1ea69edf1cdf5889be8844757342e9"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:a6dc60325f1fabb926d7bce0264587f58"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm_1_1pipe_1_1_swap_profiling_connection_factory_helper.xhtml#a6dc60325f1fabb926d7bce0264587f58">SwapProfilingConnectionFactoryHelper</a> (uint16_t maxGlobalCounterId, IInitialiseProfilingService &amp;initialiser, ProfilingService &amp;profilingService)</td></tr>
<tr class="separator:a6dc60325f1fabb926d7bce0264587f58"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac74652db3008db9cf64f785f2ae0de81"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm_1_1pipe_1_1_swap_profiling_connection_factory_helper.xhtml#ac74652db3008db9cf64f785f2ae0de81">~SwapProfilingConnectionFactoryHelper</a> ()</td></tr>
<tr class="separator:ac74652db3008db9cf64f785f2ae0de81"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8ccd73b0bb970c18b05a0bc63fcd0279"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classarm_1_1pipe_1_1_mock_profiling_connection.xhtml">MockProfilingConnection</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm_1_1pipe_1_1_swap_profiling_connection_factory_helper.xhtml#a8ccd73b0bb970c18b05a0bc63fcd0279">GetMockProfilingConnection</a> ()</td></tr>
<tr class="separator:a8ccd73b0bb970c18b05a0bc63fcd0279"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a03f72b1ccbef21ab7caafb037ce2144c"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm_1_1pipe_1_1_swap_profiling_connection_factory_helper.xhtml#a03f72b1ccbef21ab7caafb037ce2144c">ForceTransitionToState</a> (ProfilingState newState)</td></tr>
<tr class="separator:a03f72b1ccbef21ab7caafb037ce2144c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a19cea020509e009eb4661618eecf3cf3"><td class="memItemLeft" align="right" valign="top">long&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm_1_1pipe_1_1_swap_profiling_connection_factory_helper.xhtml#a19cea020509e009eb4661618eecf3cf3">WaitForPacketsSent</a> (<a class="el" href="classarm_1_1pipe_1_1_mock_profiling_connection.xhtml">MockProfilingConnection</a> *mockProfilingConnection, <a class="el" href="classarm_1_1pipe_1_1_mock_profiling_connection.xhtml#a0a80a7bc045affcf10846075b88cbca0">MockProfilingConnection::PacketType</a> packetType, uint32_t length=0, uint32_t timeout=1000)</td></tr>
<tr class="separator:a19cea020509e009eb4661618eecf3cf3"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock">
<p class="definition">Definition at line <a class="el" href="_profiling_tests_8hpp_source.xhtml#l00165">165</a> of file <a class="el" href="_profiling_tests_8hpp_source.xhtml">ProfilingTests.hpp</a>.</p>
</div><h2 class="groupheader">Member Typedef Documentation</h2>
<a id="a2c1ea69edf1cdf5889be8844757342e9"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a2c1ea69edf1cdf5889be8844757342e9">&#9670;&nbsp;</a></span>MockProfilingConnectionFactoryPtr</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">using <a class="el" href="classarm_1_1pipe_1_1_swap_profiling_connection_factory_helper.xhtml#a2c1ea69edf1cdf5889be8844757342e9">MockProfilingConnectionFactoryPtr</a> =  std::unique_ptr&lt;<a class="el" href="classarm_1_1pipe_1_1_mock_profiling_connection_factory.xhtml">MockProfilingConnectionFactory</a>&gt;</td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_profiling_tests_8hpp_source.xhtml#l00168">168</a> of file <a class="el" href="_profiling_tests_8hpp_source.xhtml">ProfilingTests.hpp</a>.</p>

</div>
</div>
<h2 class="groupheader">Constructor &amp; Destructor Documentation</h2>
<a id="a6dc60325f1fabb926d7bce0264587f58"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a6dc60325f1fabb926d7bce0264587f58">&#9670;&nbsp;</a></span>SwapProfilingConnectionFactoryHelper()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarm_1_1pipe_1_1_swap_profiling_connection_factory_helper.xhtml">SwapProfilingConnectionFactoryHelper</a> </td>
          <td>(</td>
          <td class="paramtype">uint16_t&#160;</td>
          <td class="paramname"><em>maxGlobalCounterId</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">IInitialiseProfilingService &amp;&#160;</td>
          <td class="paramname"><em>initialiser</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">ProfilingService &amp;&#160;</td>
          <td class="paramname"><em>profilingService</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_profiling_tests_8hpp_source.xhtml#l00170">170</a> of file <a class="el" href="_profiling_tests_8hpp_source.xhtml">ProfilingTests.hpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00173"></a><span class="lineno">  173</span>&#160;        : ProfilingService(maxGlobalCounterId,</div><div class="line"><a name="l00174"></a><span class="lineno">  174</span>&#160;                           initialiser,</div><div class="line"><a name="l00175"></a><span class="lineno">  175</span>&#160;                           arm::pipe::ARMNN_SOFTWARE_INFO,</div><div class="line"><a name="l00176"></a><span class="lineno">  176</span>&#160;                           arm::pipe::ARMNN_SOFTWARE_VERSION,</div><div class="line"><a name="l00177"></a><span class="lineno">  177</span>&#160;                           arm::pipe::ARMNN_HARDWARE_VERSION)</div><div class="line"><a name="l00178"></a><span class="lineno">  178</span>&#160;        , m_ProfilingService(profilingService)</div><div class="line"><a name="l00179"></a><span class="lineno">  179</span>&#160;        , m_MockProfilingConnectionFactory(<span class="keyword">new</span> MockProfilingConnectionFactory())</div><div class="line"><a name="l00180"></a><span class="lineno">  180</span>&#160;        , m_BackupProfilingConnectionFactory(<span class="keyword">nullptr</span>)</div><div class="line"><a name="l00181"></a><span class="lineno">  181</span>&#160;</div><div class="line"><a name="l00182"></a><span class="lineno">  182</span>&#160;    {</div><div class="line"><a name="l00183"></a><span class="lineno">  183</span>&#160;        CHECK(m_MockProfilingConnectionFactory);</div><div class="line"><a name="l00184"></a><span class="lineno">  184</span>&#160;        SwapProfilingConnectionFactory(m_ProfilingService,</div><div class="line"><a name="l00185"></a><span class="lineno">  185</span>&#160;                                       m_MockProfilingConnectionFactory.get(),</div><div class="line"><a name="l00186"></a><span class="lineno">  186</span>&#160;                                       m_BackupProfilingConnectionFactory);</div><div class="line"><a name="l00187"></a><span class="lineno">  187</span>&#160;        CHECK(m_BackupProfilingConnectionFactory);</div><div class="line"><a name="l00188"></a><span class="lineno">  188</span>&#160;    }</div></div><!-- fragment -->
</div>
</div>
<a id="ac74652db3008db9cf64f785f2ae0de81"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ac74652db3008db9cf64f785f2ae0de81">&#9670;&nbsp;</a></span>~SwapProfilingConnectionFactoryHelper()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">~<a class="el" href="classarm_1_1pipe_1_1_swap_profiling_connection_factory_helper.xhtml">SwapProfilingConnectionFactoryHelper</a> </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_profiling_tests_8hpp_source.xhtml#l00189">189</a> of file <a class="el" href="_profiling_tests_8hpp_source.xhtml">ProfilingTests.hpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00190"></a><span class="lineno">  190</span>&#160;    {</div><div class="line"><a name="l00191"></a><span class="lineno">  191</span>&#160;        CHECK(m_BackupProfilingConnectionFactory);</div><div class="line"><a name="l00192"></a><span class="lineno">  192</span>&#160;        IProfilingConnectionFactory* temp = <span class="keyword">nullptr</span>;</div><div class="line"><a name="l00193"></a><span class="lineno">  193</span>&#160;        SwapProfilingConnectionFactory(m_ProfilingService,</div><div class="line"><a name="l00194"></a><span class="lineno">  194</span>&#160;                                       m_BackupProfilingConnectionFactory,</div><div class="line"><a name="l00195"></a><span class="lineno">  195</span>&#160;                                       temp);</div><div class="line"><a name="l00196"></a><span class="lineno">  196</span>&#160;    }</div></div><!-- fragment -->
</div>
</div>
<h2 class="groupheader">Member Function Documentation</h2>
<a id="a03f72b1ccbef21ab7caafb037ce2144c"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a03f72b1ccbef21ab7caafb037ce2144c">&#9670;&nbsp;</a></span>ForceTransitionToState()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void ForceTransitionToState </td>
          <td>(</td>
          <td class="paramtype">ProfilingState&#160;</td>
          <td class="paramname"><em>newState</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_profiling_tests_8hpp_source.xhtml#l00204">204</a> of file <a class="el" href="_profiling_tests_8hpp_source.xhtml">ProfilingTests.hpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00205"></a><span class="lineno">  205</span>&#160;    {</div><div class="line"><a name="l00206"></a><span class="lineno">  206</span>&#160;        TransitionToState(m_ProfilingService, newState);</div><div class="line"><a name="l00207"></a><span class="lineno">  207</span>&#160;    }</div></div><!-- fragment -->
</div>
</div>
<a id="a8ccd73b0bb970c18b05a0bc63fcd0279"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a8ccd73b0bb970c18b05a0bc63fcd0279">&#9670;&nbsp;</a></span>GetMockProfilingConnection()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarm_1_1pipe_1_1_mock_profiling_connection.xhtml">MockProfilingConnection</a>* GetMockProfilingConnection </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_profiling_tests_8hpp_source.xhtml#l00198">198</a> of file <a class="el" href="_profiling_tests_8hpp_source.xhtml">ProfilingTests.hpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00199"></a><span class="lineno">  199</span>&#160;    {</div><div class="line"><a name="l00200"></a><span class="lineno">  200</span>&#160;        IProfilingConnection* profilingConnection = GetProfilingConnection(m_ProfilingService);</div><div class="line"><a name="l00201"></a><span class="lineno">  201</span>&#160;        <span class="keywordflow">return</span> armnn::PolymorphicDowncast&lt;MockProfilingConnection*&gt;(profilingConnection);</div><div class="line"><a name="l00202"></a><span class="lineno">  202</span>&#160;    }</div></div><!-- fragment -->
</div>
</div>
<a id="a19cea020509e009eb4661618eecf3cf3"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a19cea020509e009eb4661618eecf3cf3">&#9670;&nbsp;</a></span>WaitForPacketsSent()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">long WaitForPacketsSent </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classarm_1_1pipe_1_1_mock_profiling_connection.xhtml">MockProfilingConnection</a> *&#160;</td>
          <td class="paramname"><em>mockProfilingConnection</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="classarm_1_1pipe_1_1_mock_profiling_connection.xhtml#a0a80a7bc045affcf10846075b88cbca0">MockProfilingConnection::PacketType</a>&#160;</td>
          <td class="paramname"><em>packetType</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>length</em> = <code>0</code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>timeout</em> = <code>1000</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_profiling_tests_8hpp_source.xhtml#l00209">209</a> of file <a class="el" href="_profiling_tests_8hpp_source.xhtml">ProfilingTests.hpp</a>.</p>

<p class="reference">References <a class="el" href="_profiling_mocks_8hpp_source.xhtml#l00112">MockProfilingConnection::CheckForPacket()</a>.</p>
<div class="fragment"><div class="line"><a name="l00213"></a><span class="lineno">  213</span>&#160;    {</div><div class="line"><a name="l00214"></a><span class="lineno">  214</span>&#160;        <span class="keywordtype">long</span> packetCount = mockProfilingConnection-&gt;CheckForPacket({ packetType, length });</div><div class="line"><a name="l00215"></a><span class="lineno">  215</span>&#160;        <span class="comment">// The first packet we receive may not be the one we are looking for, so keep looping until till we find it,</span></div><div class="line"><a name="l00216"></a><span class="lineno">  216</span>&#160;        <span class="comment">// or until WaitForPacketsSent times out</span></div><div class="line"><a name="l00217"></a><span class="lineno">  217</span>&#160;        <span class="keywordflow">while</span>(packetCount == 0 &amp;&amp; timeout != 0)</div><div class="line"><a name="l00218"></a><span class="lineno">  218</span>&#160;        {</div><div class="line"><a name="l00219"></a><span class="lineno">  219</span>&#160;            std::chrono::steady_clock::time_point start = std::chrono::steady_clock::now();</div><div class="line"><a name="l00220"></a><span class="lineno">  220</span>&#160;            <span class="comment">// Wait for a notification from the send thread</span></div><div class="line"><a name="l00221"></a><span class="lineno">  221</span>&#160;            ProfilingService::WaitForPacketSent(m_ProfilingService, timeout);</div><div class="line"><a name="l00222"></a><span class="lineno">  222</span>&#160;</div><div class="line"><a name="l00223"></a><span class="lineno">  223</span>&#160;            std::chrono::steady_clock::time_point end = std::chrono::steady_clock::now();</div><div class="line"><a name="l00224"></a><span class="lineno">  224</span>&#160;</div><div class="line"><a name="l00225"></a><span class="lineno">  225</span>&#160;            <span class="comment">// We need to make sure the timeout does not reset each time we call WaitForPacketsSent</span></div><div class="line"><a name="l00226"></a><span class="lineno">  226</span>&#160;            uint32_t elapsedTime = <span class="keyword">static_cast&lt;</span>uint32_t<span class="keyword">&gt;</span>(</div><div class="line"><a name="l00227"></a><span class="lineno">  227</span>&#160;                    std::chrono::duration_cast&lt;std::chrono::milliseconds&gt;(end - start).count());</div><div class="line"><a name="l00228"></a><span class="lineno">  228</span>&#160;</div><div class="line"><a name="l00229"></a><span class="lineno">  229</span>&#160;            packetCount = mockProfilingConnection-&gt;CheckForPacket({packetType, length});</div><div class="line"><a name="l00230"></a><span class="lineno">  230</span>&#160;</div><div class="line"><a name="l00231"></a><span class="lineno">  231</span>&#160;            <span class="keywordflow">if</span> (elapsedTime &gt; timeout)</div><div class="line"><a name="l00232"></a><span class="lineno">  232</span>&#160;            {</div><div class="line"><a name="l00233"></a><span class="lineno">  233</span>&#160;                <span class="keywordflow">break</span>;</div><div class="line"><a name="l00234"></a><span class="lineno">  234</span>&#160;            }</div><div class="line"><a name="l00235"></a><span class="lineno">  235</span>&#160;</div><div class="line"><a name="l00236"></a><span class="lineno">  236</span>&#160;            timeout -= elapsedTime;</div><div class="line"><a name="l00237"></a><span class="lineno">  237</span>&#160;        }</div><div class="line"><a name="l00238"></a><span class="lineno">  238</span>&#160;        <span class="keywordflow">return</span> packetCount;</div><div class="line"><a name="l00239"></a><span class="lineno">  239</span>&#160;    }</div></div><!-- fragment -->
</div>
</div>
<hr/>The documentation for this class was generated from the following file:<ul>
<li>src/profiling/test/<a class="el" href="_profiling_tests_8hpp_source.xhtml">ProfilingTests.hpp</a></li>
</ul>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="namespacearm.xhtml">arm</a></li><li class="navelem"><a class="el" href="namespacearm_1_1pipe.xhtml">pipe</a></li><li class="navelem"><a class="el" href="classarm_1_1pipe_1_1_swap_profiling_connection_factory_helper.xhtml">SwapProfilingConnectionFactoryHelper</a></li>
    <li class="footer">Generated on Fri Aug 19 2022 14:38:36 for ArmNN by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.13 </li>
  </ul>
</div>
</body>
</html>
