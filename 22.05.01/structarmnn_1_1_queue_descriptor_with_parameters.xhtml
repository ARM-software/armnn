<!-- Copyright (c) 2020 ARM Limited. -->
<!--                                 -->
<!-- SPDX-License-Identifier: MIT    -->
<!--                                 -->
<!-- HTML header for doxygen 1.8.13-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.13"/>
<meta name="robots" content="NOINDEX, NOFOLLOW" />
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>ArmNN: QueueDescriptorWithParameters&lt; LayerDescriptor &gt; Struct Template Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script><script type="text/javascript" src="http://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="stylesheet.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <img alt="ArmNN" src="Arm_NN_horizontal_blue.png" style="max-width: 10rem; margin-top: .5rem; margin-left 10px"/>
  <td style="padding-left: 0.5em;">
   <div id="projectname">
   &#160;<span id="projectnumber">22.05.01</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.13 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
$(document).ready(function(){initNavTree('structarmnn_1_1_queue_descriptor_with_parameters.xhtml','');});
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="summary">
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="#pub-attribs">Public Attributes</a> &#124;
<a href="#pro-methods">Protected Member Functions</a> &#124;
<a href="structarmnn_1_1_queue_descriptor_with_parameters-members.xhtml">List of all members</a>  </div>
  <div class="headertitle">
<div class="title">QueueDescriptorWithParameters&lt; LayerDescriptor &gt; Struct Template Reference</div>  </div>
</div><!--header-->
<div class="contents">

<p><code>#include &lt;<a class="el" href="include_2armnn_2backends_2_workload_data_8hpp_source.xhtml">WorkloadData.hpp</a>&gt;</code></p>
<div class="dynheader">
Inheritance diagram for QueueDescriptorWithParameters&lt; LayerDescriptor &gt;:</div>
<div class="dyncontent">
 <div class="center">
  <img src="structarmnn_1_1_queue_descriptor_with_parameters.png" usemap="#QueueDescriptorWithParameters_3C_20LayerDescriptor_20_3E_map" alt=""/>
  <map id="QueueDescriptorWithParameters_3C_20LayerDescriptor_20_3E_map" name="QueueDescriptorWithParameters_3C_20LayerDescriptor_20_3E_map">
<area href="structarmnn_1_1_queue_descriptor.xhtml" alt="QueueDescriptor" shape="rect" coords="0,0,313,24"/>
</map>
 </div></div>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:aceed736aeebb38dea25ee734a6bacba5"><td class="memItemLeft" align="right" valign="top">virtual&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structarmnn_1_1_queue_descriptor_with_parameters.xhtml#aceed736aeebb38dea25ee734a6bacba5">~QueueDescriptorWithParameters</a> ()=default</td></tr>
<tr class="separator:aceed736aeebb38dea25ee734a6bacba5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pub_methods_structarmnn_1_1_queue_descriptor"><td colspan="2" onclick="javascript:toggleInherit('pub_methods_structarmnn_1_1_queue_descriptor')"><img src="closed.png" alt="-"/>&#160;Public Member Functions inherited from <a class="el" href="structarmnn_1_1_queue_descriptor.xhtml">QueueDescriptor</a></td></tr>
<tr class="memitem:a4cb2ebdad75dcaac215c8a1a3d62f315 inherit pub_methods_structarmnn_1_1_queue_descriptor"><td class="memItemLeft" align="right" valign="top">virtual&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structarmnn_1_1_queue_descriptor.xhtml#a4cb2ebdad75dcaac215c8a1a3d62f315">~QueueDescriptor</a> ()=default</td></tr>
<tr class="separator:a4cb2ebdad75dcaac215c8a1a3d62f315 inherit pub_methods_structarmnn_1_1_queue_descriptor"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a089f647d882d65f657d7984e5f505f7c inherit pub_methods_structarmnn_1_1_queue_descriptor"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structarmnn_1_1_queue_descriptor.xhtml#a089f647d882d65f657d7984e5f505f7c">ValidateTensorNumDimensions</a> (const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;tensor, std::string const &amp;descName, unsigned int numDimensions, std::string const &amp;tensorName) const</td></tr>
<tr class="separator:a089f647d882d65f657d7984e5f505f7c inherit pub_methods_structarmnn_1_1_queue_descriptor"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8a30194ce14c088a2625ccc8c3e9d155 inherit pub_methods_structarmnn_1_1_queue_descriptor"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structarmnn_1_1_queue_descriptor.xhtml#a8a30194ce14c088a2625ccc8c3e9d155">ValidateTensorNumDimNumElem</a> (const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;tensorInfo, unsigned int numDimension, unsigned int numElements, std::string const &amp;tensorName) const</td></tr>
<tr class="separator:a8a30194ce14c088a2625ccc8c3e9d155 inherit pub_methods_structarmnn_1_1_queue_descriptor"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a765d2cee4ccce5b9467e0c2b6d25b84a inherit pub_methods_structarmnn_1_1_queue_descriptor"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structarmnn_1_1_queue_descriptor.xhtml#a765d2cee4ccce5b9467e0c2b6d25b84a">ValidateInputsOutputs</a> (const std::string &amp;descName, unsigned int numExpectedIn, unsigned int numExpectedOut) const</td></tr>
<tr class="separator:a765d2cee4ccce5b9467e0c2b6d25b84a inherit pub_methods_structarmnn_1_1_queue_descriptor"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0428f0a7927f8c29264d9c9a287840da inherit pub_methods_structarmnn_1_1_queue_descriptor"><td class="memTemplParams" colspan="2">template&lt;typename T &gt; </td></tr>
<tr class="memitem:a0428f0a7927f8c29264d9c9a287840da inherit pub_methods_structarmnn_1_1_queue_descriptor"><td class="memTemplItemLeft" align="right" valign="top">const T *&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="structarmnn_1_1_queue_descriptor.xhtml#a0428f0a7927f8c29264d9c9a287840da">GetAdditionalInformation</a> () const</td></tr>
<tr class="separator:a0428f0a7927f8c29264d9c9a287840da inherit pub_methods_structarmnn_1_1_queue_descriptor"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-attribs"></a>
Public Attributes</h2></td></tr>
<tr class="memitem:aad91b9bbf7aa365d304febe79a3d1333"><td class="memItemLeft" align="right" valign="top">LayerDescriptor&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structarmnn_1_1_queue_descriptor_with_parameters.xhtml#aad91b9bbf7aa365d304febe79a3d1333">m_Parameters</a></td></tr>
<tr class="separator:aad91b9bbf7aa365d304febe79a3d1333"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pub_attribs_structarmnn_1_1_queue_descriptor"><td colspan="2" onclick="javascript:toggleInherit('pub_attribs_structarmnn_1_1_queue_descriptor')"><img src="closed.png" alt="-"/>&#160;Public Attributes inherited from <a class="el" href="structarmnn_1_1_queue_descriptor.xhtml">QueueDescriptor</a></td></tr>
<tr class="memitem:a4b50e46a6810018f3edecfb68b2a76b3 inherit pub_attribs_structarmnn_1_1_queue_descriptor"><td class="memItemLeft" align="right" valign="top">std::vector&lt; <a class="el" href="classarmnn_1_1_i_tensor_handle.xhtml">ITensorHandle</a> * &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structarmnn_1_1_queue_descriptor.xhtml#a4b50e46a6810018f3edecfb68b2a76b3">m_Inputs</a></td></tr>
<tr class="separator:a4b50e46a6810018f3edecfb68b2a76b3 inherit pub_attribs_structarmnn_1_1_queue_descriptor"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6abd491bb99ffe88bd472c1ae5a1ed1a inherit pub_attribs_structarmnn_1_1_queue_descriptor"><td class="memItemLeft" align="right" valign="top">std::vector&lt; <a class="el" href="classarmnn_1_1_i_tensor_handle.xhtml">ITensorHandle</a> * &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structarmnn_1_1_queue_descriptor.xhtml#a6abd491bb99ffe88bd472c1ae5a1ed1a">m_Outputs</a></td></tr>
<tr class="separator:a6abd491bb99ffe88bd472c1ae5a1ed1a inherit pub_attribs_structarmnn_1_1_queue_descriptor"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2f2e6134cabedfc58aa53fe38a2b8a67 inherit pub_attribs_structarmnn_1_1_queue_descriptor"><td class="memItemLeft" align="right" valign="top">void *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structarmnn_1_1_queue_descriptor.xhtml#a2f2e6134cabedfc58aa53fe38a2b8a67">m_AdditionalInfoObject</a></td></tr>
<tr class="separator:a2f2e6134cabedfc58aa53fe38a2b8a67 inherit pub_attribs_structarmnn_1_1_queue_descriptor"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9ef8ddbeee4b869e4c68eb2ed278b8d9 inherit pub_attribs_structarmnn_1_1_queue_descriptor"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structarmnn_1_1_queue_descriptor.xhtml#a9ef8ddbeee4b869e4c68eb2ed278b8d9">m_AllowExpandedDims</a> = false</td></tr>
<tr class="separator:a9ef8ddbeee4b869e4c68eb2ed278b8d9 inherit pub_attribs_structarmnn_1_1_queue_descriptor"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pro-methods"></a>
Protected Member Functions</h2></td></tr>
<tr class="memitem:a6f269eb32757efa5b203091c52e985fd"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structarmnn_1_1_queue_descriptor_with_parameters.xhtml#a6f269eb32757efa5b203091c52e985fd">QueueDescriptorWithParameters</a> ()=default</td></tr>
<tr class="separator:a6f269eb32757efa5b203091c52e985fd"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6cbdcaa9cab857077a3810788e2cf489"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structarmnn_1_1_queue_descriptor_with_parameters.xhtml#a6cbdcaa9cab857077a3810788e2cf489">QueueDescriptorWithParameters</a> (<a class="el" href="structarmnn_1_1_queue_descriptor_with_parameters.xhtml">QueueDescriptorWithParameters</a> const &amp;)=default</td></tr>
<tr class="separator:a6cbdcaa9cab857077a3810788e2cf489"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa86bd03df9faf133a34e263f16486707"><td class="memItemLeft" align="right" valign="top"><a class="el" href="structarmnn_1_1_queue_descriptor_with_parameters.xhtml">QueueDescriptorWithParameters</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structarmnn_1_1_queue_descriptor_with_parameters.xhtml#aa86bd03df9faf133a34e263f16486707">operator=</a> (<a class="el" href="structarmnn_1_1_queue_descriptor_with_parameters.xhtml">QueueDescriptorWithParameters</a> const &amp;)=default</td></tr>
<tr class="separator:aa86bd03df9faf133a34e263f16486707"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pro_methods_structarmnn_1_1_queue_descriptor"><td colspan="2" onclick="javascript:toggleInherit('pro_methods_structarmnn_1_1_queue_descriptor')"><img src="closed.png" alt="-"/>&#160;Protected Member Functions inherited from <a class="el" href="structarmnn_1_1_queue_descriptor.xhtml">QueueDescriptor</a></td></tr>
<tr class="memitem:ab088ef357662bcea45cbd49674ad0ff7 inherit pro_methods_structarmnn_1_1_queue_descriptor"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structarmnn_1_1_queue_descriptor.xhtml#ab088ef357662bcea45cbd49674ad0ff7">QueueDescriptor</a> ()</td></tr>
<tr class="separator:ab088ef357662bcea45cbd49674ad0ff7 inherit pro_methods_structarmnn_1_1_queue_descriptor"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a75d3b85e1e50b1dff74ee84a593d089e inherit pro_methods_structarmnn_1_1_queue_descriptor"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structarmnn_1_1_queue_descriptor.xhtml#a75d3b85e1e50b1dff74ee84a593d089e">QueueDescriptor</a> (<a class="el" href="structarmnn_1_1_queue_descriptor.xhtml">QueueDescriptor</a> const &amp;)=default</td></tr>
<tr class="separator:a75d3b85e1e50b1dff74ee84a593d089e inherit pro_methods_structarmnn_1_1_queue_descriptor"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1c928b975a0de05cf2536c721ba6b521 inherit pro_methods_structarmnn_1_1_queue_descriptor"><td class="memItemLeft" align="right" valign="top"><a class="el" href="structarmnn_1_1_queue_descriptor.xhtml">QueueDescriptor</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structarmnn_1_1_queue_descriptor.xhtml#a1c928b975a0de05cf2536c721ba6b521">operator=</a> (<a class="el" href="structarmnn_1_1_queue_descriptor.xhtml">QueueDescriptor</a> const &amp;)=default</td></tr>
<tr class="separator:a1c928b975a0de05cf2536c721ba6b521 inherit pro_methods_structarmnn_1_1_queue_descriptor"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><h3>template&lt;typename LayerDescriptor&gt;<br />
struct armnn::QueueDescriptorWithParameters&lt; LayerDescriptor &gt;</h3>


<p class="definition">Definition at line <a class="el" href="include_2armnn_2backends_2_workload_data_8hpp_source.xhtml#l00064">64</a> of file <a class="el" href="include_2armnn_2backends_2_workload_data_8hpp_source.xhtml">WorkloadData.hpp</a>.</p>
</div><h2 class="groupheader">Constructor &amp; Destructor Documentation</h2>
<a id="aceed736aeebb38dea25ee734a6bacba5"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aceed736aeebb38dea25ee734a6bacba5">&#9670;&nbsp;</a></span>~QueueDescriptorWithParameters()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual ~<a class="el" href="structarmnn_1_1_queue_descriptor_with_parameters.xhtml">QueueDescriptorWithParameters</a> </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span><span class="mlabel">default</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a6f269eb32757efa5b203091c52e985fd"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a6f269eb32757efa5b203091c52e985fd">&#9670;&nbsp;</a></span>QueueDescriptorWithParameters() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="structarmnn_1_1_queue_descriptor_with_parameters.xhtml">QueueDescriptorWithParameters</a> </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span><span class="mlabel">default</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a6cbdcaa9cab857077a3810788e2cf489"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a6cbdcaa9cab857077a3810788e2cf489">&#9670;&nbsp;</a></span>QueueDescriptorWithParameters() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="structarmnn_1_1_queue_descriptor_with_parameters.xhtml">QueueDescriptorWithParameters</a> </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="structarmnn_1_1_queue_descriptor_with_parameters.xhtml">QueueDescriptorWithParameters</a>&lt; LayerDescriptor &gt; const &amp;&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span><span class="mlabel">default</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<h2 class="groupheader">Member Function Documentation</h2>
<a id="aa86bd03df9faf133a34e263f16486707"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aa86bd03df9faf133a34e263f16486707">&#9670;&nbsp;</a></span>operator=()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="structarmnn_1_1_queue_descriptor_with_parameters.xhtml">QueueDescriptorWithParameters</a>&amp; operator= </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="structarmnn_1_1_queue_descriptor_with_parameters.xhtml">QueueDescriptorWithParameters</a>&lt; LayerDescriptor &gt; const &amp;&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span><span class="mlabel">default</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<h2 class="groupheader">Member Data Documentation</h2>
<a id="aad91b9bbf7aa365d304febe79a3d1333"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aad91b9bbf7aa365d304febe79a3d1333">&#9670;&nbsp;</a></span>m_Parameters</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">LayerDescriptor m_Parameters</td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="include_2armnn_2backends_2_workload_data_8hpp_source.xhtml#l00066">66</a> of file <a class="el" href="include_2armnn_2backends_2_workload_data_8hpp_source.xhtml">WorkloadData.hpp</a>.</p>

<p class="reference">Referenced by <a class="el" href="_addition_test_impl_8cpp_source.xhtml#l00543">AdditionAfterMaxPoolTest()</a>, <a class="el" href="_batch_norm_impl_8cpp_source.xhtml#l00018">armnn::BatchNormImpl()</a>, <a class="el" href="_activation_test_impl_8cpp_source.xhtml#l00023">BoundedReLuTestCommon()</a>, <a class="el" href="_activation_test_impl_8cpp_source.xhtml#l00188">BoundedReLuUint8UpperAndLowerBoundTest()</a>, <a class="el" href="_cl_activation_workload_8cpp_source.xhtml#l00032">ClActivationWorkload::ClActivationWorkload()</a>, <a class="el" href="_cl_arg_min_max_workload_8cpp_source.xhtml#l00055">ClArgMinMaxWorkload::ClArgMinMaxWorkload()</a>, <a class="el" href="_cl_batch_normalization_float_workload_8cpp_source.xhtml#l00054">ClBatchNormalizationFloatWorkload::ClBatchNormalizationFloatWorkload()</a>, <a class="el" href="_cl_batch_to_space_nd_workload_8cpp_source.xhtml#l00020">ClBatchToSpaceNdWorkload::ClBatchToSpaceNdWorkload()</a>, <a class="el" href="_cl_channel_shuffle_workload_8cpp_source.xhtml#l00054">ClChannelShuffleWorkload::ClChannelShuffleWorkload()</a>, <a class="el" href="_cl_comparison_workload_8cpp_source.xhtml#l00042">ClComparisonWorkload::ClComparisonWorkload()</a>, <a class="el" href="_cl_concat_workload_8cpp_source.xhtml#l00048">ClConcatWorkload::ClConcatWorkload()</a>, <a class="el" href="_cl_convolution3d_workload_8cpp_source.xhtml#l00056">ClConvolution3dWorkload::ClConvolution3dWorkload()</a>, <a class="el" href="_cl_depth_to_space_workload_8cpp_source.xhtml#l00039">ClDepthToSpaceWorkload::ClDepthToSpaceWorkload()</a>, <a class="el" href="_cl_depthwise_convolution_workload_8cpp_source.xhtml#l00097">ClDepthwiseConvolutionWorkload::ClDepthwiseConvolutionWorkload()</a>, <a class="el" href="_cl_exp_workload_8cpp_source.xhtml#l00026">ClExpWorkload::ClExpWorkload()</a>, <a class="el" href="_cl_fill_workload_8cpp_source.xhtml#l00018">ClFillWorkload::ClFillWorkload()</a>, <a class="el" href="_cl_fully_connected_workload_8cpp_source.xhtml#l00064">ClFullyConnectedWorkload::ClFullyConnectedWorkload()</a>, <a class="el" href="_cl_gather_workload_8cpp_source.xhtml#l00029">ClGatherWorkload::ClGatherWorkload()</a>, <a class="el" href="_cl_instance_normalization_workload_8cpp_source.xhtml#l00032">ClInstanceNormalizationWorkload::ClInstanceNormalizationWorkload()</a>, <a class="el" href="_cl_l2_normalization_float_workload_8cpp_source.xhtml#l00029">ClL2NormalizationFloatWorkload::ClL2NormalizationFloatWorkload()</a>, <a class="el" href="_cl_logical_and_workload_8cpp_source.xhtml#l00034">ClLogicalAndWorkload::ClLogicalAndWorkload()</a>, <a class="el" href="_cl_logical_not_workload_8cpp_source.xhtml#l00031">ClLogicalNotWorkload::ClLogicalNotWorkload()</a>, <a class="el" href="_cl_logical_or_workload_8cpp_source.xhtml#l00034">ClLogicalOrWorkload::ClLogicalOrWorkload()</a>, <a class="el" href="_cl_log_softmax_workload_8cpp_source.xhtml#l00028">ClLogSoftmaxWorkload::ClLogSoftmaxWorkload()</a>, <a class="el" href="_cl_lstm_float_workload_8cpp_source.xhtml#l00023">ClLstmFloatWorkload::ClLstmFloatWorkload()</a>, <a class="el" href="_cl_mean_workload_8cpp_source.xhtml#l00031">ClMeanWorkload::ClMeanWorkload()</a>, <a class="el" href="_cl_normalization_float_workload_8cpp_source.xhtml#l00031">ClNormalizationFloatWorkload::ClNormalizationFloatWorkload()</a>, <a class="el" href="_cl_pad_workload_8cpp_source.xhtml#l00019">ClPadWorkload::ClPadWorkload()</a>, <a class="el" href="_cl_permute_workload_8cpp_source.xhtml#l00029">ClPermuteWorkload::ClPermuteWorkload()</a>, <a class="el" href="_cl_pooling2d_workload_8cpp_source.xhtml#l00030">ClPooling2dWorkload::ClPooling2dWorkload()</a>, <a class="el" href="_cl_pooling3d_workload_8cpp_source.xhtml#l00030">ClPooling3dWorkload::ClPooling3dWorkload()</a>, <a class="el" href="_cl_q_lstm_workload_8cpp_source.xhtml#l00017">ClQLstmWorkload::ClQLstmWorkload()</a>, <a class="el" href="_cl_reduce_workload_8cpp_source.xhtml#l00046">ClReduceWorkload::ClReduceWorkload()</a>, <a class="el" href="_cl_resize_workload_8cpp_source.xhtml#l00049">ClResizeWorkload::ClResizeWorkload()</a>, <a class="el" href="_cl_slice_workload_8cpp_source.xhtml#l00033">ClSliceWorkload::ClSliceWorkload()</a>, <a class="el" href="_cl_softmax_workload_8cpp_source.xhtml#l00028">ClSoftmaxWorkload::ClSoftmaxWorkload()</a>, <a class="el" href="_cl_space_to_batch_nd_workload_8cpp_source.xhtml#l00047">ClSpaceToBatchNdWorkload::ClSpaceToBatchNdWorkload()</a>, <a class="el" href="_cl_space_to_depth_workload_8cpp_source.xhtml#l00020">ClSpaceToDepthWorkload::ClSpaceToDepthWorkload()</a>, <a class="el" href="_cl_splitter_workload_8cpp_source.xhtml#l00055">ClSplitterWorkload::ClSplitterWorkload()</a>, <a class="el" href="_cl_sqrt_workload_8cpp_source.xhtml#l00032">ClSqrtWorkload::ClSqrtWorkload()</a>, <a class="el" href="_cl_stack_workload_8cpp_source.xhtml#l00047">ClStackWorkload::ClStackWorkload()</a>, <a class="el" href="_cl_strided_slice_workload_8cpp_source.xhtml#l00055">ClStridedSliceWorkload::ClStridedSliceWorkload()</a>, <a class="el" href="_cl_transpose_convolution2d_workload_8cpp_source.xhtml#l00056">ClTransposeConvolution2dWorkload::ClTransposeConvolution2dWorkload()</a>, <a class="el" href="_cl_transpose_workload_8cpp_source.xhtml#l00029">ClTransposeWorkload::ClTransposeWorkload()</a>, <a class="el" href="_activation_test_impl_8cpp_source.xhtml#l01221">CompareActivationTestImpl()</a>, <a class="el" href="_batch_normalization_test_impl_8cpp_source.xhtml#l00612">CompareBatchNormTest()</a>, <a class="el" href="_conv2d_test_impl_8cpp_source.xhtml#l01369">CompareConvolution2dTestImpl()</a>, <a class="el" href="_conv2d_test_impl_8cpp_source.xhtml#l03090">CompareDepthwiseConvolution2dTestImpl()</a>, <a class="el" href="_arm_compute_utils_8hpp_source.xhtml#l00310">armnn::ComputeConv3DInfo()</a>, <a class="el" href="_concat_test_impl_8cpp_source.xhtml#l02082">ConcatDifferentInputOutputQParamTest()</a>, <a class="el" href="_concat_test_impl_8cpp_source.xhtml#l00278">Concatenate()</a>, <a class="el" href="_activation_test_impl_8cpp_source.xhtml#l00315">ConstantLinearActivationTestCommon()</a>, <a class="el" href="_conv2d_test_impl_8cpp_source.xhtml#l00501">Convolution1dTestImpl()</a>, <a class="el" href="_conv2d_test_impl_8cpp_source.xhtml#l03631">Convolution2dPerAxisQuantTest()</a>, <a class="el" href="_workload_factory_base_8hpp_source.xhtml#l00110">WorkloadFactoryBase::CreateElementwiseUnary()</a>, <a class="el" href="_reduce_layer_8cpp_source.xhtml#l00022">ReduceLayer::CreateWorkload()</a>, <a class="el" href="_strided_slice_layer_8cpp_source.xhtml#l00022">StridedSliceLayer::CreateWorkload()</a>, <a class="el" href="_rsqrt_layer_8cpp_source.xhtml#l00022">RsqrtLayer::CreateWorkload()</a>, <a class="el" href="_abs_layer_8cpp_source.xhtml#l00022">AbsLayer::CreateWorkload()</a>, <a class="el" href="_space_to_depth_layer_8cpp_source.xhtml#l00027">SpaceToDepthLayer::CreateWorkload()</a>, <a class="el" href="_pad_layer_8cpp_source.xhtml#l00022">PadLayer::CreateWorkload()</a>, <a class="el" href="_depth_to_space_layer_8cpp_source.xhtml#l00025">DepthToSpaceLayer::CreateWorkload()</a>, <a class="el" href="_mean_layer_8cpp_source.xhtml#l00024">MeanLayer::CreateWorkload()</a>, <a class="el" href="_space_to_batch_nd_layer_8cpp_source.xhtml#l00027">SpaceToBatchNdLayer::CreateWorkload()</a>, <a class="el" href="_neon_workload_factory_8cpp_source.xhtml#l00134">NeonWorkloadFactory::CreateWorkload()</a>, <a class="el" href="_cl_workload_factory_8cpp_source.xhtml#l00247">ClWorkloadFactory::CreateWorkload()</a>, <a class="el" href="_ref_workload_factory_8cpp_source.xhtml#l00144">RefWorkloadFactory::CreateWorkload()</a>, <a class="el" href="_depth_to_space_test_impl_8cpp_source.xhtml#l00083">DepthToSpaceTest1()</a>, <a class="el" href="_depth_to_space_test_impl_8cpp_source.xhtml#l00112">DepthToSpaceTest2()</a>, <a class="el" href="_depth_to_space_test_impl_8cpp_source.xhtml#l00162">DepthToSpaceTest3()</a>, <a class="el" href="_depth_to_space_test_impl_8cpp_source.xhtml#l00189">DepthToSpaceTest4()</a>, <a class="el" href="_conv2d_test_impl_8cpp_source.xhtml#l01715">DepthwiseConvolution2dAsymmetricTestImpl()</a>, <a class="el" href="_conv2d_test_impl_8cpp_source.xhtml#l01885">DepthwiseConvolution2dDepthMul1TestImpl()</a>, <a class="el" href="_conv2d_test_impl_8cpp_source.xhtml#l03902">DepthwiseConvolution2dPerAxisQuantTest()</a>, <a class="el" href="_conv2d_test_impl_8cpp_source.xhtml#l02064">DepthwiseConvolution2dTestImpl()</a>, <a class="el" href="_detection_post_process_test_impl_8hpp_source.xhtml#l00141">DetectionPostProcessImpl()</a>, <a class="el" href="_elementwise_unary_test_impl_8hpp_source.xhtml#l00035">ElementwiseUnaryTestHelper()</a>, <a class="el" href="_ref_strided_slice_workload_8cpp_source.xhtml#l00023">RefStridedSliceWorkload::ExecuteAsync()</a>, <a class="el" href="_ref_depth_to_space_workload_8cpp_source.xhtml#l00019">RefDepthToSpaceWorkload::ExecuteAsync()</a>, <a class="el" href="_ref_space_to_batch_nd_workload_8cpp_source.xhtml#l00020">RefSpaceToBatchNdWorkload::ExecuteAsync()</a>, <a class="el" href="_ref_resize_workload_8cpp_source.xhtml#l00025">RefResizeWorkload::ExecuteAsync()</a>, <a class="el" href="_ref_channel_shuffle_workload_8cpp_source.xhtml#l00021">RefChannelShuffleWorkload::ExecuteAsync()</a>, <a class="el" href="_ref_fill_workload_8cpp_source.xhtml#l00022">RefFillWorkload::ExecuteAsync()</a>, <a class="el" href="_ref_log_softmax_workload_8cpp_source.xhtml#l00025">RefLogSoftmaxWorkload::ExecuteAsync()</a>, <a class="el" href="_ref_pad_workload_8cpp_source.xhtml#l00021">RefPadWorkload::ExecuteAsync()</a>, <a class="el" href="_ref_softmax_workload_8cpp_source.xhtml#l00025">RefSoftmaxWorkload::ExecuteAsync()</a>, <a class="el" href="_ref_space_to_depth_workload_8cpp_source.xhtml#l00020">RefSpaceToDepthWorkload::ExecuteAsync()</a>, <a class="el" href="_ref_activation_workload_8cpp_source.xhtml#l00023">RefActivationWorkload::ExecuteAsync()</a>, <a class="el" href="_ref_depthwise_convolution2d_workload_8cpp_source.xhtml#l00044">RefDepthwiseConvolution2dWorkload::ExecuteAsync()</a>, <a class="el" href="_ref_detection_post_process_workload_8cpp_source.xhtml#l00026">RefDetectionPostProcessWorkload::ExecuteAsync()</a>, <a class="el" href="_ref_slice_workload_8cpp_source.xhtml#l00021">RefSliceWorkload::ExecuteAsync()</a>, <a class="el" href="_ref_arg_min_max_workload_8cpp_source.xhtml#l00027">RefArgMinMaxWorkload::ExecuteAsync()</a>, <a class="el" href="_ref_batch_to_space_nd_workload_8cpp_source.xhtml#l00019">RefBatchToSpaceNdWorkload::ExecuteAsync()</a>, <a class="el" href="_ref_normalization_workload_8cpp_source.xhtml#l00169">RefNormalizationWorkload::ExecuteAsync()</a>, <a class="el" href="_ref_l2_normalization_workload_8cpp_source.xhtml#l00032">RefL2NormalizationWorkload::ExecuteAsync()</a>, <a class="el" href="_ref_reduce_workload_8cpp_source.xhtml#l00026">RefReduceWorkload::ExecuteAsync()</a>, <a class="el" href="_ref_q_lstm_workload_8cpp_source.xhtml#l00051">RefQLstmWorkload::ExecuteAsync()</a>, <a class="el" href="_ref_pooling3d_workload_8cpp_source.xhtml#l00021">RefPooling3dWorkload::ExecuteAsync()</a>, <a class="el" href="_ref_mean_workload_8cpp_source.xhtml#l00026">RefMeanWorkload::ExecuteAsync()</a>, <a class="el" href="_ref_lstm_workload_8cpp_source.xhtml#l00047">RefLstmWorkload::ExecuteAsync()</a>, <a class="el" href="_ref_pooling2d_workload_8cpp_source.xhtml#l00021">RefPooling2dWorkload::ExecuteAsync()</a>, <a class="el" href="_ref_convolution2d_workload_8cpp_source.xhtml#l00038">RefConvolution2dWorkload::ExecuteAsync()</a>, <a class="el" href="_ref_convolution3d_workload_8cpp_source.xhtml#l00040">RefConvolution3dWorkload::ExecuteAsync()</a>, <a class="el" href="_ref_logical_unary_workload_8cpp_source.xhtml#l00030">RefLogicalUnaryWorkload::ExecuteAsync()</a>, <a class="el" href="_ref_logical_binary_workload_8cpp_source.xhtml#l00030">RefLogicalBinaryWorkload::ExecuteAsync()</a>, <a class="el" href="_ref_elementwise_unary_workload_8cpp_source.xhtml#l00038">RefElementwiseUnaryWorkload::ExecuteAsync()</a>, <a class="el" href="_ref_gather_workload_8cpp_source.xhtml#l00021">RefGatherWorkload::ExecuteAsync()</a>, <a class="el" href="_ref_comparison_workload_8cpp_source.xhtml#l00050">RefComparisonWorkload::ExecuteAsync()</a>, <a class="el" href="_ref_fully_connected_workload_8cpp_source.xhtml#l00042">RefFullyConnectedWorkload::ExecuteAsync()</a>, <a class="el" href="_ref_transpose_convolution2d_workload_8cpp_source.xhtml#l00041">RefTransposeConvolution2dWorkload::ExecuteAsync()</a>, <a class="el" href="_ref_unidirectional_sequence_lstm_workload_8cpp_source.xhtml#l00051">RefUnidirectionalSequenceLstmWorkload::ExecuteAsync()</a>, <a class="el" href="_fake_quantization_test_impl_8cpp_source.xhtml#l00016">FakeQuantizationTest()</a>, <a class="el" href="_instance_norm_8cpp_source.xhtml#l00018">armnn::InstanceNorm()</a>, <a class="el" href="_l2_normalization_test_impl_8cpp_source.xhtml#l00703">L2Normalization2dShapeTest()</a>, <a class="el" href="_log_softmax_test_impl_8cpp_source.xhtml#l00078">LogSoftmaxTest1()</a>, <a class="el" href="_log_softmax_test_impl_8cpp_source.xhtml#l00116">LogSoftmaxTest2()</a>, <a class="el" href="_log_softmax_test_impl_8cpp_source.xhtml#l00154">LogSoftmaxTest3()</a>, <a class="el" href="_log_softmax_test_impl_8cpp_source.xhtml#l00192">LogSoftmaxTest4()</a>, <a class="el" href="backends_2reference_2workloads_2_mirror_pad_8cpp_source.xhtml#l00059">armnn::MirrorPad()</a>, <a class="el" href="_mirror_pad_test_impl_8cpp_source.xhtml#l00020">MirrorPad2dTestCommon()</a>, <a class="el" href="_mirror_pad_test_impl_8cpp_source.xhtml#l00066">MirrorPad3dTestCommon()</a>, <a class="el" href="_mirror_pad_test_impl_8cpp_source.xhtml#l00111">MirrorPad4dTestCommon()</a>, <a class="el" href="_neon_activation_workload_8cpp_source.xhtml#l00032">NeonActivationWorkload::NeonActivationWorkload()</a>, <a class="el" href="_neon_arg_min_max_workload_8cpp_source.xhtml#l00055">NeonArgMinMaxWorkload::NeonArgMinMaxWorkload()</a>, <a class="el" href="_neon_batch_normalization_workload_8cpp_source.xhtml#l00059">NeonBatchNormalizationWorkload::NeonBatchNormalizationWorkload()</a>, <a class="el" href="_neon_batch_to_space_nd_workload_8cpp_source.xhtml#l00038">NeonBatchToSpaceNdWorkload::NeonBatchToSpaceNdWorkload()</a>, <a class="el" href="_neon_channel_shuffle_workload_8cpp_source.xhtml#l00051">NeonChannelShuffleWorkload::NeonChannelShuffleWorkload()</a>, <a class="el" href="_neon_comparison_workload_8cpp_source.xhtml#l00034">NeonComparisonWorkload::NeonComparisonWorkload()</a>, <a class="el" href="_neon_concat_workload_8cpp_source.xhtml#l00049">NeonConcatWorkload::NeonConcatWorkload()</a>, <a class="el" href="_neon_convolution2d_workload_8cpp_source.xhtml#l00082">NeonConvolution2dWorkload::NeonConvolution2dWorkload()</a>, <a class="el" href="_neon_convolution3d_workload_8cpp_source.xhtml#l00056">NeonConvolution3dWorkload::NeonConvolution3dWorkload()</a>, <a class="el" href="_neon_depth_to_space_workload_8cpp_source.xhtml#l00032">NeonDepthToSpaceWorkload::NeonDepthToSpaceWorkload()</a>, <a class="el" href="_neon_depthwise_convolution_workload_8cpp_source.xhtml#l00098">NeonDepthwiseConvolutionWorkload::NeonDepthwiseConvolutionWorkload()</a>, <a class="el" href="_neon_detection_post_process_workload_8cpp_source.xhtml#l00075">NeonDetectionPostProcessWorkload::NeonDetectionPostProcessWorkload()</a>, <a class="el" href="_neon_exp_workload_8cpp_source.xhtml#l00025">NeonExpWorkload::NeonExpWorkload()</a>, <a class="el" href="_neon_fill_workload_8cpp_source.xhtml#l00019">NeonFillWorkload::NeonFillWorkload()</a>, <a class="el" href="_neon_gather_workload_8cpp_source.xhtml#l00027">NeonGatherWorkload::NeonGatherWorkload()</a>, <a class="el" href="_neon_instance_normalization_workload_8cpp_source.xhtml#l00033">NeonInstanceNormalizationWorkload::NeonInstanceNormalizationWorkload()</a>, <a class="el" href="_neon_l2_normalization_float_workload_8cpp_source.xhtml#l00031">NeonL2NormalizationFloatWorkload::NeonL2NormalizationFloatWorkload()</a>, <a class="el" href="_neon_logical_and_workload_8cpp_source.xhtml#l00032">NeonLogicalAndWorkload::NeonLogicalAndWorkload()</a>, <a class="el" href="_neon_logical_not_workload_8cpp_source.xhtml#l00030">NeonLogicalNotWorkload::NeonLogicalNotWorkload()</a>, <a class="el" href="_neon_logical_or_workload_8cpp_source.xhtml#l00032">NeonLogicalOrWorkload::NeonLogicalOrWorkload()</a>, <a class="el" href="_neon_log_softmax_workload_8cpp_source.xhtml#l00033">NeonLogSoftmaxWorkload::NeonLogSoftmaxWorkload()</a>, <a class="el" href="_neon_lstm_float_workload_8cpp_source.xhtml#l00020">NeonLstmFloatWorkload::NeonLstmFloatWorkload()</a>, <a class="el" href="_neon_mean_workload_8cpp_source.xhtml#l00032">NeonMeanWorkload::NeonMeanWorkload()</a>, <a class="el" href="_neon_normalization_float_workload_8cpp_source.xhtml#l00061">NeonNormalizationFloatWorkload::NeonNormalizationFloatWorkload()</a>, <a class="el" href="_neon_pad_workload_8cpp_source.xhtml#l00020">NeonPadWorkload::NeonPadWorkload()</a>, <a class="el" href="_neon_permute_workload_8cpp_source.xhtml#l00027">NeonPermuteWorkload::NeonPermuteWorkload()</a>, <a class="el" href="_neon_pooling2d_workload_8cpp_source.xhtml#l00036">NeonPooling2dWorkload::NeonPooling2dWorkload()</a>, <a class="el" href="_neon_pooling3d_workload_8cpp_source.xhtml#l00025">NeonPooling3dWorkload::NeonPooling3dWorkload()</a>, <a class="el" href="_neon_q_lstm_workload_8cpp_source.xhtml#l00017">NeonQLstmWorkload::NeonQLstmWorkload()</a>, <a class="el" href="_neon_reduce_workload_8cpp_source.xhtml#l00047">NeonReduceWorkload::NeonReduceWorkload()</a>, <a class="el" href="_neon_resize_workload_8cpp_source.xhtml#l00052">NeonResizeWorkload::NeonResizeWorkload()</a>, <a class="el" href="_neon_slice_workload_8cpp_source.xhtml#l00036">NeonSliceWorkload::NeonSliceWorkload()</a>, <a class="el" href="_neon_softmax_workload_8cpp_source.xhtml#l00033">NeonSoftmaxWorkload::NeonSoftmaxWorkload()</a>, <a class="el" href="_neon_space_to_batch_nd_workload_8cpp_source.xhtml#l00044">NeonSpaceToBatchNdWorkload::NeonSpaceToBatchNdWorkload()</a>, <a class="el" href="_neon_space_to_depth_workload_8cpp_source.xhtml#l00032">NeonSpaceToDepthWorkload::NeonSpaceToDepthWorkload()</a>, <a class="el" href="_neon_splitter_workload_8cpp_source.xhtml#l00056">NeonSplitterWorkload::NeonSplitterWorkload()</a>, <a class="el" href="_neon_sqrt_workload_8cpp_source.xhtml#l00031">NeonSqrtWorkload::NeonSqrtWorkload()</a>, <a class="el" href="_neon_stack_workload_8cpp_source.xhtml#l00049">NeonStackWorkload::NeonStackWorkload()</a>, <a class="el" href="_neon_strided_slice_workload_8cpp_source.xhtml#l00049">NeonStridedSliceWorkload::NeonStridedSliceWorkload()</a>, <a class="el" href="_neon_transpose_workload_8cpp_source.xhtml#l00027">NeonTransposeWorkload::NeonTransposeWorkload()</a>, <a class="el" href="backends_2reference_2workloads_2_pad_8cpp_source.xhtml#l00039">armnn::Pad()</a>, <a class="el" href="_pad_test_impl_8cpp_source.xhtml#l00020">Pad2dTestCommon()</a>, <a class="el" href="_pad_test_impl_8cpp_source.xhtml#l00096">Pad3dTestCommon()</a>, <a class="el" href="_pad_test_impl_8cpp_source.xhtml#l00183">Pad4dTestCommon()</a>, <a class="el" href="_pad_test_impl_8cpp_source.xhtml#l00425">PadQAsymmTestCommon()</a>, <a class="el" href="_concat_test_impl_8cpp_source.xhtml#l00121">PermuteTensorData()</a>, <a class="el" href="_ref_convolution3d_workload_8cpp_source.xhtml#l00015">RefConvolution3dWorkload::RefConvolution3dWorkload()</a>, <a class="el" href="_ref_depthwise_convolution2d_workload_8cpp_source.xhtml#l00018">RefDepthwiseConvolution2dWorkload::RefDepthwiseConvolution2dWorkload()</a>, <a class="el" href="_ref_transpose_convolution2d_workload_8cpp_source.xhtml#l00016">RefTransposeConvolution2dWorkload::RefTransposeConvolution2dWorkload()</a>, <a class="el" href="_activation_test_impl_8cpp_source.xhtml#l00408">SimpleActivationTest()</a>, <a class="el" href="_conv2d_test_impl_8cpp_source.xhtml#l00384">SimpleConvolution2dNhwcTestImpl()</a>, <a class="el" href="_conv2d_test_impl_8cpp_source.xhtml#l00194">SimpleConvolution2dTestImpl()</a>, <a class="el" href="_conv3d_test_impl_8cpp_source.xhtml#l00150">SimpleConvolution3dTestImpl()</a>, <a class="el" href="_fill_test_impl_8cpp_source.xhtml#l00015">SimpleFillTest()</a>, <a class="el" href="_permute_test_impl_8hpp_source.xhtml#l00019">SimplePermuteTestImpl()</a>, <a class="el" href="_transpose_test_impl_8hpp_source.xhtml#l00020">SimpleTransposeTestImpl()</a>, <a class="el" href="_activation_test_impl_8cpp_source.xhtml#l00844">SqrtNNTest()</a>, <a class="el" href="_stack_8cpp_source.xhtml#l00012">armnn::Stack()</a>, <a class="el" href="_cl_convolution2d_workload_8hpp_source.xhtml#l00043">ClConvolution2dWorkload::SupportsTensorHandleReplacement()</a>, <a class="el" href="_workload_data_validation_8cpp_source.xhtml#l00020">TEST_SUITE()</a>, <a class="el" href="_transpose_convolution2d_test_impl_8cpp_source.xhtml#l00571">TransposeConvolution2dPerAxisQuantTest()</a>, <a class="el" href="_unidirectional_sequence_lstm_test_impl_8cpp_source.xhtml#l02034">UnidirectionalSequenceLstmInt8WithCifgWithPeepholeNoProjectionTest()</a>, <a class="el" href="_unidirectional_sequence_lstm_test_impl_8cpp_source.xhtml#l01647">UnidirectionalSequenceLstmLayerInt8NoCifgWithPeepholeWithProjectionTest()</a>, <a class="el" href="_unidirectional_sequence_lstm_test_impl_8cpp_source.xhtml#l01827">UnidirectionalSequenceLstmLayerInt8NoCifgWithPeepholeWithProjectionWithLayerNormTest()</a>, <a class="el" href="_unidirectional_sequence_lstm_test_impl_8cpp_source.xhtml#l01339">UnidirectionalSequenceLstmLayerInt8Test()</a>, <a class="el" href="_unidirectional_sequence_lstm_test_impl_8cpp_source.xhtml#l01493">UnidirectionalSequenceLstmLayerInt8TimeMajorTest()</a>, <a class="el" href="_unidirectional_sequence_lstm_test_impl_8cpp_source.xhtml#l00671">UnidirectionalSequenceLstmLayerNoCifgWithPeepholeWithProjectionTest()</a>, <a class="el" href="_unidirectional_sequence_lstm_test_impl_8cpp_source.xhtml#l00924">UnidirectionalSequenceLstmLayerNoCifgWithPeepholeWithProjectionWithLayerNormTest()</a>, and <a class="el" href="_unidirectional_sequence_lstm_test_impl_8cpp_source.xhtml#l01164">UnidirectionalSequenceLstmWithCifgWithPeepholeNoProjectionTest()</a>.</p>

</div>
</div>
<hr/>The documentation for this struct was generated from the following file:<ul>
<li>include/armnn/backends/<a class="el" href="include_2armnn_2backends_2_workload_data_8hpp_source.xhtml">WorkloadData.hpp</a></li>
</ul>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="namespacearmnn.xhtml">armnn</a></li><li class="navelem"><a class="el" href="structarmnn_1_1_queue_descriptor_with_parameters.xhtml">QueueDescriptorWithParameters</a></li>
    <li class="footer">Generated on Fri Jun 17 2022 13:20:34 for ArmNN by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.13 </li>
  </ul>
</div>
</body>
</html>
