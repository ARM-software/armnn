<!-- Copyright (c) 2020 ARM Limited. -->
<!--                                 -->
<!-- SPDX-License-Identifier: MIT    -->
<!--                                 -->
<!-- HTML header for doxygen 1.8.13-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.13"/>
<meta name="robots" content="NOINDEX, NOFOLLOW" />
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>ArmNN: ProfilingStateMachine Class Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script><script type="text/javascript" src="http://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="stylesheet.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <img alt="ArmNN" src="Arm_NN_horizontal_blue.png" style="max-width: 10rem; margin-top: .5rem; margin-left 10px"/>
  <td style="padding-left: 0.5em;">
   <div id="projectname">
   &#160;<span id="projectnumber">22.02</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.13 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
$(document).ready(function(){initNavTree('classarmnn_1_1profiling_1_1_profiling_state_machine.xhtml','');});
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="summary">
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="classarmnn_1_1profiling_1_1_profiling_state_machine-members.xhtml">List of all members</a>  </div>
  <div class="headertitle">
<div class="title">ProfilingStateMachine Class Reference</div>  </div>
</div><!--header-->
<div class="contents">

<p><code>#include &lt;<a class="el" href="_profiling_state_machine_8hpp_source.xhtml">ProfilingStateMachine.hpp</a>&gt;</code></p>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:a419c19ff2c798aab55b0789e051517d7"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1profiling_1_1_profiling_state_machine.xhtml#a419c19ff2c798aab55b0789e051517d7">ProfilingStateMachine</a> ()</td></tr>
<tr class="separator:a419c19ff2c798aab55b0789e051517d7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa89f70de19b6fb3a6ed4cea36890d9ab"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1profiling_1_1_profiling_state_machine.xhtml#aa89f70de19b6fb3a6ed4cea36890d9ab">ProfilingStateMachine</a> (<a class="el" href="namespacearmnn_1_1profiling.xhtml#acb0c054138599582d5a5f537e9798806">ProfilingState</a> state)</td></tr>
<tr class="separator:aa89f70de19b6fb3a6ed4cea36890d9ab"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad8d263669817cf577760710ff6c96bb9"><td class="memItemLeft" align="right" valign="top"><a class="el" href="namespacearmnn_1_1profiling.xhtml#acb0c054138599582d5a5f537e9798806">ProfilingState</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1profiling_1_1_profiling_state_machine.xhtml#ad8d263669817cf577760710ff6c96bb9">GetCurrentState</a> () const</td></tr>
<tr class="separator:ad8d263669817cf577760710ff6c96bb9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a175365c95c51fb3dad223ce3f48a3ffc"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1profiling_1_1_profiling_state_machine.xhtml#a175365c95c51fb3dad223ce3f48a3ffc">TransitionToState</a> (<a class="el" href="namespacearmnn_1_1profiling.xhtml#acb0c054138599582d5a5f537e9798806">ProfilingState</a> newState)</td></tr>
<tr class="separator:a175365c95c51fb3dad223ce3f48a3ffc"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a372de693ad40b3f42839c8ec6ac845f4"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1profiling_1_1_profiling_state_machine.xhtml#a372de693ad40b3f42839c8ec6ac845f4">Reset</a> ()</td></tr>
<tr class="separator:a372de693ad40b3f42839c8ec6ac845f4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4522fa83798319a209209f4d4ae34fd3"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1profiling_1_1_profiling_state_machine.xhtml#a4522fa83798319a209209f4d4ae34fd3">IsOneOfStates</a> (<a class="el" href="namespacearmnn_1_1profiling.xhtml#acb0c054138599582d5a5f537e9798806">ProfilingState</a> state1)</td></tr>
<tr class="separator:a4522fa83798319a209209f4d4ae34fd3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a64c592cf41e009dd59cded3a7169de73"><td class="memTemplParams" colspan="2">template&lt;typename T , typename... Args&gt; </td></tr>
<tr class="memitem:a64c592cf41e009dd59cded3a7169de73"><td class="memTemplItemLeft" align="right" valign="top">bool&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="classarmnn_1_1profiling_1_1_profiling_state_machine.xhtml#a64c592cf41e009dd59cded3a7169de73">IsOneOfStates</a> (T state1, T state2, Args... args)</td></tr>
<tr class="separator:a64c592cf41e009dd59cded3a7169de73"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock">
<p class="definition">Definition at line <a class="el" href="_profiling_state_machine_8hpp_source.xhtml#l00026">26</a> of file <a class="el" href="_profiling_state_machine_8hpp_source.xhtml">ProfilingStateMachine.hpp</a>.</p>
</div><h2 class="groupheader">Constructor &amp; Destructor Documentation</h2>
<a id="a419c19ff2c798aab55b0789e051517d7"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a419c19ff2c798aab55b0789e051517d7">&#9670;&nbsp;</a></span>ProfilingStateMachine() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarmnn_1_1profiling_1_1_profiling_state_machine.xhtml">ProfilingStateMachine</a> </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_profiling_state_machine_8hpp_source.xhtml#l00029">29</a> of file <a class="el" href="_profiling_state_machine_8hpp_source.xhtml">ProfilingStateMachine.hpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;: m_State(<a class="code" href="namespacearmnn_1_1profiling.xhtml#acb0c054138599582d5a5f537e9798806a962074a9de1cf3d6d7b6f955a0a94820">ProfilingState::Uninitialised</a>) {}</div><div class="ttc" id="namespacearmnn_1_1profiling_xhtml_acb0c054138599582d5a5f537e9798806a962074a9de1cf3d6d7b6f955a0a94820"><div class="ttname"><a href="namespacearmnn_1_1profiling.xhtml#acb0c054138599582d5a5f537e9798806a962074a9de1cf3d6d7b6f955a0a94820">armnn::profiling::ProfilingState::Uninitialised</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="aa89f70de19b6fb3a6ed4cea36890d9ab"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aa89f70de19b6fb3a6ed4cea36890d9ab">&#9670;&nbsp;</a></span>ProfilingStateMachine() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarmnn_1_1profiling_1_1_profiling_state_machine.xhtml">ProfilingStateMachine</a> </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="namespacearmnn_1_1profiling.xhtml#acb0c054138599582d5a5f537e9798806">ProfilingState</a>&#160;</td>
          <td class="paramname"><em>state</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_profiling_state_machine_8hpp_source.xhtml#l00030">30</a> of file <a class="el" href="_profiling_state_machine_8hpp_source.xhtml">ProfilingStateMachine.hpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;: m_State(state) {}</div></div><!-- fragment -->
</div>
</div>
<h2 class="groupheader">Member Function Documentation</h2>
<a id="ad8d263669817cf577760710ff6c96bb9"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ad8d263669817cf577760710ff6c96bb9">&#9670;&nbsp;</a></span>GetCurrentState()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="namespacearmnn_1_1profiling.xhtml#acb0c054138599582d5a5f537e9798806">ProfilingState</a> GetCurrentState </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_profiling_state_machine_8cpp_source.xhtml#l00031">31</a> of file <a class="el" href="_profiling_state_machine_8cpp_source.xhtml">ProfilingStateMachine.cpp</a>.</p>

<p class="reference">Referenced by <a class="el" href="_profiling_service_8cpp_source.xhtml#l00062">ProfilingService::ConfigureProfilingService()</a>, <a class="el" href="_profiling_service_8cpp_source.xhtml#l00193">ProfilingService::Disconnect()</a>, <a class="el" href="_profiling_service_8cpp_source.xhtml#l00232">ProfilingService::GetCurrentState()</a>, <a class="el" href="_per_job_counter_selection_command_handler_8cpp_source.xhtml#l00017">PerJobCounterSelectionCommandHandler::operator()()</a>, <a class="el" href="_deactivate_timeline_reporting_command_handler_8cpp_source.xhtml#l00018">DeactivateTimelineReportingCommandHandler::operator()()</a>, <a class="el" href="_request_counter_directory_command_handler_8cpp_source.xhtml#l00016">RequestCounterDirectoryCommandHandler::operator()()</a>, <a class="el" href="_activate_timeline_reporting_command_handler_8cpp_source.xhtml#l00018">ActivateTimelineReportingCommandHandler::operator()()</a>, <a class="el" href="_connection_acknowledged_command_handler_8cpp_source.xhtml#l00019">ConnectionAcknowledgedCommandHandler::operator()()</a>, <a class="el" href="_periodic_counter_selection_command_handler_8cpp_source.xhtml#l00060">PeriodicCounterSelectionCommandHandler::operator()()</a>, <a class="el" href="_send_thread_8cpp_source.xhtml#l00079">SendThread::Stop()</a>, <a class="el" href="_profiling_tests_8cpp_source.xhtml#l00057">TEST_SUITE()</a>, and <a class="el" href="_profiling_service_8cpp_source.xhtml#l00112">ProfilingService::Update()</a>.</p>
<div class="fragment"><div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;{</div><div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;    <span class="keywordflow">return</span> m_State.load();</div><div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;}</div></div><!-- fragment -->
</div>
</div>
<a id="a4522fa83798319a209209f4d4ae34fd3"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a4522fa83798319a209209f4d4ae34fd3">&#9670;&nbsp;</a></span>IsOneOfStates() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool IsOneOfStates </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="namespacearmnn_1_1profiling.xhtml#acb0c054138599582d5a5f537e9798806">ProfilingState</a>&#160;</td>
          <td class="paramname"><em>state1</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_profiling_state_machine_8hpp_source.xhtml#l00036">36</a> of file <a class="el" href="_profiling_state_machine_8hpp_source.xhtml">ProfilingStateMachine.hpp</a>.</p>

<p class="reference">References <a class="el" href="_ignore_unused_8hpp_source.xhtml#l00014">armnn::IgnoreUnused()</a>.</p>

<p class="reference">Referenced by <a class="el" href="_profiling_state_machine_8cpp_source.xhtml#l00036">ProfilingStateMachine::TransitionToState()</a>.</p>
<div class="fragment"><div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;    {</div><div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;        <a class="code" href="namespacearmnn.xhtml#a44affeeb090c3c6a3062830562672e84">IgnoreUnused</a>(state1);</div><div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;        <span class="keywordflow">return</span> <span class="keyword">false</span>;</div><div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;    }</div><div class="ttc" id="namespacearmnn_xhtml_a44affeeb090c3c6a3062830562672e84"><div class="ttname"><a href="namespacearmnn.xhtml#a44affeeb090c3c6a3062830562672e84">armnn::IgnoreUnused</a></div><div class="ttdeci">void IgnoreUnused(Ts &amp;&amp;...)</div><div class="ttdef"><b>Definition:</b> <a href="_ignore_unused_8hpp_source.xhtml#l00014">IgnoreUnused.hpp:14</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="a64c592cf41e009dd59cded3a7169de73"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a64c592cf41e009dd59cded3a7169de73">&#9670;&nbsp;</a></span>IsOneOfStates() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool IsOneOfStates </td>
          <td>(</td>
          <td class="paramtype">T&#160;</td>
          <td class="paramname"><em>state1</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">T&#160;</td>
          <td class="paramname"><em>state2</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">Args...&#160;</td>
          <td class="paramname"><em>args</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_profiling_state_machine_8hpp_source.xhtml#l00043">43</a> of file <a class="el" href="_profiling_state_machine_8hpp_source.xhtml">ProfilingStateMachine.hpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;    {</div><div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;        <span class="keywordflow">if</span> (state1 == state2)</div><div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;        {</div><div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;            <span class="keywordflow">return</span> <span class="keyword">true</span>;</div><div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;        }</div><div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;        <span class="keywordflow">else</span></div><div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;        {</div><div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;            <span class="keywordflow">return</span> <a class="code" href="classarmnn_1_1profiling_1_1_profiling_state_machine.xhtml#a4522fa83798319a209209f4d4ae34fd3">IsOneOfStates</a>(state1, args...);</div><div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;        }</div><div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;    }</div><div class="ttc" id="classarmnn_1_1profiling_1_1_profiling_state_machine_xhtml_a4522fa83798319a209209f4d4ae34fd3"><div class="ttname"><a href="classarmnn_1_1profiling_1_1_profiling_state_machine.xhtml#a4522fa83798319a209209f4d4ae34fd3">armnn::profiling::ProfilingStateMachine::IsOneOfStates</a></div><div class="ttdeci">bool IsOneOfStates(ProfilingState state1)</div><div class="ttdef"><b>Definition:</b> <a href="_profiling_state_machine_8hpp_source.xhtml#l00036">ProfilingStateMachine.hpp:36</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="a372de693ad40b3f42839c8ec6ac845f4"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a372de693ad40b3f42839c8ec6ac845f4">&#9670;&nbsp;</a></span>Reset()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void Reset </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_profiling_state_machine_8cpp_source.xhtml#l00088">88</a> of file <a class="el" href="_profiling_state_machine_8cpp_source.xhtml">ProfilingStateMachine.cpp</a>.</p>

<p class="reference">References <a class="el" href="namespacearmnn_1_1profiling.xhtml#acb0c054138599582d5a5f537e9798806a962074a9de1cf3d6d7b6f955a0a94820">armnn::profiling::Uninitialised</a>.</p>

<p class="reference">Referenced by <a class="el" href="_profiling_service_8cpp_source.xhtml#l00329">ProfilingService::GetSendTimelinePacket()</a>.</p>
<div class="fragment"><div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;{</div><div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;    m_State.store(<a class="code" href="namespacearmnn_1_1profiling.xhtml#acb0c054138599582d5a5f537e9798806a962074a9de1cf3d6d7b6f955a0a94820">ProfilingState::Uninitialised</a>);</div><div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;}</div><div class="ttc" id="namespacearmnn_1_1profiling_xhtml_acb0c054138599582d5a5f537e9798806a962074a9de1cf3d6d7b6f955a0a94820"><div class="ttname"><a href="namespacearmnn_1_1profiling.xhtml#acb0c054138599582d5a5f537e9798806a962074a9de1cf3d6d7b6f955a0a94820">armnn::profiling::ProfilingState::Uninitialised</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="a175365c95c51fb3dad223ce3f48a3ffc"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a175365c95c51fb3dad223ce3f48a3ffc">&#9670;&nbsp;</a></span>TransitionToState()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void TransitionToState </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="namespacearmnn_1_1profiling.xhtml#acb0c054138599582d5a5f537e9798806">ProfilingState</a>&#160;</td>
          <td class="paramname"><em>newState</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_profiling_state_machine_8cpp_source.xhtml#l00036">36</a> of file <a class="el" href="_profiling_state_machine_8cpp_source.xhtml">ProfilingStateMachine.cpp</a>.</p>

<p class="reference">References <a class="el" href="namespacearmnn_1_1profiling.xhtml#acb0c054138599582d5a5f537e9798806a4d3d769b812b6faa6b76e1a8abaece2d">armnn::profiling::Active</a>, <a class="el" href="_profiling_state_machine_8hpp_source.xhtml#l00036">ProfilingStateMachine::IsOneOfStates()</a>, <a class="el" href="namespacearmnn_1_1profiling.xhtml#acb0c054138599582d5a5f537e9798806a4075072d219e061ca0f3124f8fbef463">armnn::profiling::NotConnected</a>, <a class="el" href="namespacearmnn_1_1profiling.xhtml#acb0c054138599582d5a5f537e9798806a962074a9de1cf3d6d7b6f955a0a94820">armnn::profiling::Uninitialised</a>, and <a class="el" href="namespacearmnn_1_1profiling.xhtml#acb0c054138599582d5a5f537e9798806a1dc1edc76d5b3c0325f00002f4c841f5">armnn::profiling::WaitingForAck</a>.</p>

<p class="reference">Referenced by <a class="el" href="_profiling_service_8cpp_source.xhtml#l00329">ProfilingService::GetSendTimelinePacket()</a>, <a class="el" href="_connection_acknowledged_command_handler_8cpp_source.xhtml#l00019">ConnectionAcknowledgedCommandHandler::operator()()</a>, <a class="el" href="_backend_profiling_tests_8cpp_source.xhtml#l00114">TEST_SUITE()</a>, <a class="el" href="_profiling_service_8hpp_source.xhtml#l00298">ProfilingService::TransitionToState()</a>, and <a class="el" href="_profiling_service_8cpp_source.xhtml#l00112">ProfilingService::Update()</a>.</p>
<div class="fragment"><div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;{</div><div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;    <a class="code" href="namespacearmnn_1_1profiling.xhtml#acb0c054138599582d5a5f537e9798806">ProfilingState</a> currentState = m_State.load(std::memory_order::memory_order_relaxed);</div><div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;</div><div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;    <span class="keywordflow">switch</span> (newState)</div><div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;    {</div><div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;    <span class="keywordflow">case</span> <a class="code" href="namespacearmnn_1_1profiling.xhtml#acb0c054138599582d5a5f537e9798806a962074a9de1cf3d6d7b6f955a0a94820">ProfilingState::Uninitialised</a>:</div><div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;        <span class="keywordflow">do</span></div><div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;        {</div><div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;            <span class="keywordflow">if</span> (!<a class="code" href="classarmnn_1_1profiling_1_1_profiling_state_machine.xhtml#a4522fa83798319a209209f4d4ae34fd3">IsOneOfStates</a>(currentState, <a class="code" href="namespacearmnn_1_1profiling.xhtml#acb0c054138599582d5a5f537e9798806a962074a9de1cf3d6d7b6f955a0a94820">ProfilingState::Uninitialised</a>))</div><div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;            {</div><div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;                ThrowStateTransitionException(currentState, newState);</div><div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;            }</div><div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;        }</div><div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;        <span class="keywordflow">while</span> (!m_State.compare_exchange_strong(currentState, newState, std::memory_order::memory_order_relaxed));</div><div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;        <span class="keywordflow">break</span>;</div><div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;    <span class="keywordflow">case</span>  <a class="code" href="namespacearmnn_1_1profiling.xhtml#acb0c054138599582d5a5f537e9798806a4075072d219e061ca0f3124f8fbef463">ProfilingState::NotConnected</a>:</div><div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;        <span class="keywordflow">do</span></div><div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;        {</div><div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;            <span class="keywordflow">if</span> (!<a class="code" href="classarmnn_1_1profiling_1_1_profiling_state_machine.xhtml#a4522fa83798319a209209f4d4ae34fd3">IsOneOfStates</a>(currentState, <a class="code" href="namespacearmnn_1_1profiling.xhtml#acb0c054138599582d5a5f537e9798806a962074a9de1cf3d6d7b6f955a0a94820">ProfilingState::Uninitialised</a>, <a class="code" href="namespacearmnn_1_1profiling.xhtml#acb0c054138599582d5a5f537e9798806a4075072d219e061ca0f3124f8fbef463">ProfilingState::NotConnected</a>,</div><div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;                               <a class="code" href="namespacearmnn_1_1profiling.xhtml#acb0c054138599582d5a5f537e9798806a4d3d769b812b6faa6b76e1a8abaece2d">ProfilingState::Active</a>, <a class="code" href="namespacearmnn_1_1profiling.xhtml#acb0c054138599582d5a5f537e9798806a1dc1edc76d5b3c0325f00002f4c841f5">ProfilingState::WaitingForAck</a>))</div><div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;            {</div><div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;                ThrowStateTransitionException(currentState, newState);</div><div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;            }</div><div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;        }</div><div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;        <span class="keywordflow">while</span> (!m_State.compare_exchange_strong(currentState, newState, std::memory_order::memory_order_relaxed));</div><div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;        <span class="keywordflow">break</span>;</div><div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;    <span class="keywordflow">case</span> <a class="code" href="namespacearmnn_1_1profiling.xhtml#acb0c054138599582d5a5f537e9798806a1dc1edc76d5b3c0325f00002f4c841f5">ProfilingState::WaitingForAck</a>:</div><div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;        <span class="keywordflow">do</span></div><div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;        {</div><div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;            <span class="keywordflow">if</span> (!<a class="code" href="classarmnn_1_1profiling_1_1_profiling_state_machine.xhtml#a4522fa83798319a209209f4d4ae34fd3">IsOneOfStates</a>(currentState, <a class="code" href="namespacearmnn_1_1profiling.xhtml#acb0c054138599582d5a5f537e9798806a4075072d219e061ca0f3124f8fbef463">ProfilingState::NotConnected</a>, <a class="code" href="namespacearmnn_1_1profiling.xhtml#acb0c054138599582d5a5f537e9798806a1dc1edc76d5b3c0325f00002f4c841f5">ProfilingState::WaitingForAck</a>))</div><div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;            {</div><div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;                ThrowStateTransitionException(currentState, newState);</div><div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;            }</div><div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;        }</div><div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;        <span class="keywordflow">while</span> (!m_State.compare_exchange_strong(currentState, newState, std::memory_order::memory_order_relaxed));</div><div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;        <span class="keywordflow">break</span>;</div><div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;    <span class="keywordflow">case</span> <a class="code" href="namespacearmnn_1_1profiling.xhtml#acb0c054138599582d5a5f537e9798806a4d3d769b812b6faa6b76e1a8abaece2d">ProfilingState::Active</a>:</div><div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;        <span class="keywordflow">do</span></div><div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;        {</div><div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;            <span class="keywordflow">if</span> (!<a class="code" href="classarmnn_1_1profiling_1_1_profiling_state_machine.xhtml#a4522fa83798319a209209f4d4ae34fd3">IsOneOfStates</a>(currentState, <a class="code" href="namespacearmnn_1_1profiling.xhtml#acb0c054138599582d5a5f537e9798806a1dc1edc76d5b3c0325f00002f4c841f5">ProfilingState::WaitingForAck</a>, <a class="code" href="namespacearmnn_1_1profiling.xhtml#acb0c054138599582d5a5f537e9798806a4d3d769b812b6faa6b76e1a8abaece2d">ProfilingState::Active</a>))</div><div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;            {</div><div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;                ThrowStateTransitionException(currentState, newState);</div><div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;            }</div><div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;        }</div><div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;        <span class="keywordflow">while</span> (!m_State.compare_exchange_strong(currentState, newState, std::memory_order::memory_order_relaxed));</div><div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;        <span class="keywordflow">break</span>;</div><div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;    <span class="keywordflow">default</span>:</div><div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;        <span class="keywordflow">break</span>;</div><div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;    }</div><div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;}</div><div class="ttc" id="classarmnn_1_1profiling_1_1_profiling_state_machine_xhtml_a4522fa83798319a209209f4d4ae34fd3"><div class="ttname"><a href="classarmnn_1_1profiling_1_1_profiling_state_machine.xhtml#a4522fa83798319a209209f4d4ae34fd3">armnn::profiling::ProfilingStateMachine::IsOneOfStates</a></div><div class="ttdeci">bool IsOneOfStates(ProfilingState state1)</div><div class="ttdef"><b>Definition:</b> <a href="_profiling_state_machine_8hpp_source.xhtml#l00036">ProfilingStateMachine.hpp:36</a></div></div>
<div class="ttc" id="namespacearmnn_1_1profiling_xhtml_acb0c054138599582d5a5f537e9798806a4075072d219e061ca0f3124f8fbef463"><div class="ttname"><a href="namespacearmnn_1_1profiling.xhtml#acb0c054138599582d5a5f537e9798806a4075072d219e061ca0f3124f8fbef463">armnn::profiling::ProfilingState::NotConnected</a></div></div>
<div class="ttc" id="namespacearmnn_1_1profiling_xhtml_acb0c054138599582d5a5f537e9798806a4d3d769b812b6faa6b76e1a8abaece2d"><div class="ttname"><a href="namespacearmnn_1_1profiling.xhtml#acb0c054138599582d5a5f537e9798806a4d3d769b812b6faa6b76e1a8abaece2d">armnn::profiling::ProfilingState::Active</a></div></div>
<div class="ttc" id="namespacearmnn_1_1profiling_xhtml_acb0c054138599582d5a5f537e9798806a1dc1edc76d5b3c0325f00002f4c841f5"><div class="ttname"><a href="namespacearmnn_1_1profiling.xhtml#acb0c054138599582d5a5f537e9798806a1dc1edc76d5b3c0325f00002f4c841f5">armnn::profiling::ProfilingState::WaitingForAck</a></div></div>
<div class="ttc" id="namespacearmnn_1_1profiling_xhtml_acb0c054138599582d5a5f537e9798806a962074a9de1cf3d6d7b6f955a0a94820"><div class="ttname"><a href="namespacearmnn_1_1profiling.xhtml#acb0c054138599582d5a5f537e9798806a962074a9de1cf3d6d7b6f955a0a94820">armnn::profiling::ProfilingState::Uninitialised</a></div></div>
<div class="ttc" id="namespacearmnn_1_1profiling_xhtml_acb0c054138599582d5a5f537e9798806"><div class="ttname"><a href="namespacearmnn_1_1profiling.xhtml#acb0c054138599582d5a5f537e9798806">armnn::profiling::ProfilingState</a></div><div class="ttdeci">ProfilingState</div><div class="ttdef"><b>Definition:</b> <a href="_profiling_state_machine_8hpp_source.xhtml#l00018">ProfilingStateMachine.hpp:18</a></div></div>
</div><!-- fragment -->
</div>
</div>
<hr/>The documentation for this class was generated from the following files:<ul>
<li>src/profiling/<a class="el" href="_profiling_state_machine_8hpp_source.xhtml">ProfilingStateMachine.hpp</a></li>
<li>src/profiling/<a class="el" href="_profiling_state_machine_8cpp_source.xhtml">ProfilingStateMachine.cpp</a></li>
</ul>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="namespacearmnn.xhtml">armnn</a></li><li class="navelem"><a class="el" href="namespacearmnn_1_1profiling.xhtml">profiling</a></li><li class="navelem"><a class="el" href="classarmnn_1_1profiling_1_1_profiling_state_machine.xhtml">ProfilingStateMachine</a></li>
    <li class="footer">Generated on Tue Feb 22 2022 11:39:53 for ArmNN by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.13 </li>
  </ul>
</div>
</body>
</html>
