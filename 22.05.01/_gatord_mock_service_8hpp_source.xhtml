<!-- Copyright (c) 2020 ARM Limited. -->
<!--                                 -->
<!-- SPDX-License-Identifier: MIT    -->
<!--                                 -->
<!-- HTML header for doxygen 1.8.13-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.13"/>
<meta name="robots" content="NOINDEX, NOFOLLOW" />
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>ArmNN: tests/profiling/gatordmock/GatordMockService.hpp Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script><script type="text/javascript" src="http://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="stylesheet.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <img alt="ArmNN" src="Arm_NN_horizontal_blue.png" style="max-width: 10rem; margin-top: .5rem; margin-left 10px"/>
  <td style="padding-left: 0.5em;">
   <div id="projectname">
   &#160;<span id="projectnumber">22.05.01</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.13 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
$(document).ready(function(){initNavTree('_gatord_mock_service_8hpp_source.xhtml','');});
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="headertitle">
<div class="title">GatordMockService.hpp</div>  </div>
</div><!--header-->
<div class="contents">
<a href="_gatord_mock_service_8hpp.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="comment">//</span></div><div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="comment">// Copyright Â© 2019 Arm Ltd and Contributors. All rights reserved.</span></div><div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="comment">// SPDX-License-Identifier: MIT</span></div><div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="comment">//</span></div><div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;</div><div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="preprocessor">#pragma once</span></div><div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;</div><div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="comment">// local includes</span></div><div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_periodic_counter_capture_command_handler_8hpp.xhtml">PeriodicCounterCaptureCommandHandler.hpp</a>&quot;</span></div><div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_stream_metadata_command_handler_8hpp.xhtml">StreamMetadataCommandHandler.hpp</a>&quot;</span></div><div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_stub_command_handler_8hpp.xhtml">StubCommandHandler.hpp</a>&quot;</span></div><div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;</div><div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;<span class="preprocessor">#include &lt;common/include/CommandHandlerRegistry.hpp&gt;</span></div><div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;<span class="preprocessor">#include &lt;common/include/Packet.hpp&gt;</span></div><div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;<span class="preprocessor">#include &lt;common/include/PacketVersionResolver.hpp&gt;</span></div><div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;</div><div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;<span class="preprocessor">#include &lt;server/include/basePipeServer/BasePipeServer.hpp&gt;</span></div><div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;</div><div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;<span class="preprocessor">#include &lt;server/include/timelineDecoder/DirectoryCaptureCommandHandler.hpp&gt;</span></div><div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;<span class="preprocessor">#include &lt;server/include/timelineDecoder/TimelineDecoder.hpp&gt;</span></div><div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;<span class="preprocessor">#include &lt;server/include/timelineDecoder/TimelineCaptureCommandHandler.hpp&gt;</span></div><div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;<span class="preprocessor">#include &lt;server/include/timelineDecoder/TimelineDirectoryCaptureCommandHandler.hpp&gt;</span></div><div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;</div><div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;<span class="preprocessor">#include &lt;atomic&gt;</span></div><div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;<span class="preprocessor">#include &lt;string&gt;</span></div><div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;<span class="preprocessor">#include &lt;thread&gt;</span></div><div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;</div><div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;<span class="keyword">namespace </span><a class="code" href="namespacearmnn.xhtml">armnn</a></div><div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;{</div><div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;</div><div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;<span class="keyword">namespace </span>gatordmock</div><div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;{</div><div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;<span class="comment">///  A class that implements a Mock Gatord server. It will listen on a specified Unix domain socket (UDS)</span></div><div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;<span class="comment">///  namespace for client connections. It will then allow opertaions to manage counters while receiving counter data.</span></div><div class="line"><a name="l00036"></a><span class="lineno"><a class="line" href="classarmnn_1_1gatordmock_1_1_gatord_mock_service.xhtml">   36</a></span>&#160;<span class="comment"></span><span class="keyword">class </span><a class="code" href="classarmnn_1_1gatordmock_1_1_gatord_mock_service.xhtml">GatordMockService</a></div><div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;{</div><div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;<span class="keyword">public</span>:<span class="comment"></span></div><div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;<span class="comment">    /// @param registry reference to a command handler registry.</span></div><div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;<span class="comment">    /// @param echoPackets if true the raw packets will be printed to stdout.</span></div><div class="line"><a name="l00041"></a><span class="lineno"><a class="line" href="classarmnn_1_1gatordmock_1_1_gatord_mock_service.xhtml#a61fd54e09f02c8b6b575608fc4741285">   41</a></span>&#160;<span class="comment"></span>    <a class="code" href="classarmnn_1_1gatordmock_1_1_gatord_mock_service.xhtml#a61fd54e09f02c8b6b575608fc4741285">GatordMockService</a>(std::unique_ptr&lt;arm::pipe::BasePipeServer&gt; clientConnection, <span class="keywordtype">bool</span> echoPackets)</div><div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;            : m_BasePipeServer(<a class="code" href="namespacestd.xhtml">std</a>::move(clientConnection))</div><div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;            , m_EchoPackets(echoPackets)</div><div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;            , m_CloseReceivingThread(false)</div><div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;            , m_PacketVersionResolver()</div><div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;            , m_HandlerRegistry()</div><div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;            , m_TimelineDecoder()</div><div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;            , m_CounterCaptureCommandHandler(</div><div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;                    0, 4, m_PacketVersionResolver.ResolvePacketVersion(0, 4).GetEncodedValue(), !echoPackets)</div><div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;            , m_StreamMetadataCommandHandler(</div><div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;                    0, 0, m_PacketVersionResolver.ResolvePacketVersion(0, 0).GetEncodedValue(), !echoPackets)</div><div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;            <span class="comment">// This stub lets us ignore any counter capture packets we receive without throwing an error</span></div><div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;            , m_StubCommandHandler(3, 0, m_PacketVersionResolver.ResolvePacketVersion(0, 3).GetEncodedValue())</div><div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;            , m_DirectoryCaptureCommandHandler(</div><div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;                    <span class="stringliteral">&quot;ARMNN&quot;</span>, 0, 2, m_PacketVersionResolver.ResolvePacketVersion(0, 2).GetEncodedValue(), !echoPackets)</div><div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;            , m_TimelineCaptureCommandHandler(</div><div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;                    1, 1, m_PacketVersionResolver.ResolvePacketVersion(1, 1).GetEncodedValue(), m_TimelineDecoder)</div><div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;            , m_TimelineDirectoryCaptureCommandHandler(</div><div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;                    1, 0, m_PacketVersionResolver.ResolvePacketVersion(1, 0).GetEncodedValue(),</div><div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;                    m_TimelineCaptureCommandHandler, !echoPackets)</div><div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;    {</div><div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;        m_TimelineDecoder.SetDefaultCallbacks();</div><div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;</div><div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;        m_HandlerRegistry.RegisterFunctor(&amp;m_CounterCaptureCommandHandler);</div><div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;        m_HandlerRegistry.RegisterFunctor(&amp;m_StreamMetadataCommandHandler);</div><div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;        m_HandlerRegistry.RegisterFunctor(&amp;m_StubCommandHandler);</div><div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;        m_HandlerRegistry.RegisterFunctor(&amp;m_DirectoryCaptureCommandHandler);</div><div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;        m_HandlerRegistry.RegisterFunctor(&amp;m_TimelineDirectoryCaptureCommandHandler);</div><div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;        m_HandlerRegistry.RegisterFunctor(&amp;m_TimelineCaptureCommandHandler);</div><div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;    }</div><div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;</div><div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;    <a class="code" href="classarmnn_1_1gatordmock_1_1_gatord_mock_service.xhtml#a61fd54e09f02c8b6b575608fc4741285">GatordMockService</a>(<span class="keyword">const</span> <a class="code" href="classarmnn_1_1gatordmock_1_1_gatord_mock_service.xhtml">GatordMockService</a>&amp;) = <span class="keyword">delete</span>;</div><div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;    <a class="code" href="classarmnn_1_1gatordmock_1_1_gatord_mock_service.xhtml">GatordMockService</a>&amp; <a class="code" href="classarmnn_1_1gatordmock_1_1_gatord_mock_service.xhtml#a1c52e4d857e77460a50fec0240e184f1">operator=</a>(<span class="keyword">const</span> <a class="code" href="classarmnn_1_1gatordmock_1_1_gatord_mock_service.xhtml">GatordMockService</a>&amp;) = <span class="keyword">delete</span>;</div><div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;</div><div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;    <a class="code" href="classarmnn_1_1gatordmock_1_1_gatord_mock_service.xhtml#a61fd54e09f02c8b6b575608fc4741285">GatordMockService</a>(<a class="code" href="classarmnn_1_1gatordmock_1_1_gatord_mock_service.xhtml">GatordMockService</a>&amp;&amp;) = <span class="keyword">delete</span>;</div><div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;    <a class="code" href="classarmnn_1_1gatordmock_1_1_gatord_mock_service.xhtml">GatordMockService</a>&amp; <a class="code" href="classarmnn_1_1gatordmock_1_1_gatord_mock_service.xhtml#a1c52e4d857e77460a50fec0240e184f1">operator=</a>(<a class="code" href="classarmnn_1_1gatordmock_1_1_gatord_mock_service.xhtml">GatordMockService</a>&amp;&amp;) = <span class="keyword">delete</span>;</div><div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;<span class="comment">    /// Once the connection is open wait to receive the stream meta data packet from the client. Reading this</span></div><div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;<span class="comment">    /// packet differs from others as we need to determine endianness.</span></div><div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;<span class="comment">    /// @return true only if a valid stream met data packet has been received.</span></div><div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;<span class="comment"></span>    <span class="keywordtype">bool</span> <a class="code" href="classarmnn_1_1gatordmock_1_1_gatord_mock_service.xhtml#ac07351dbc304681b2efd5df4958a6735">WaitForStreamMetaData</a>();</div><div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;<span class="comment">    /// Send a connection acknowledged packet back to the client.</span></div><div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;<span class="comment"></span>    <span class="keywordtype">void</span> <a class="code" href="classarmnn_1_1gatordmock_1_1_gatord_mock_service.xhtml#a41eaa65cf4e7212f09b04d06c130cd83">SendConnectionAck</a>();</div><div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;<span class="comment">    /// Send a request counter directory packet back to the client.</span></div><div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;<span class="comment"></span>    <span class="keywordtype">void</span> <a class="code" href="classarmnn_1_1gatordmock_1_1_gatord_mock_service.xhtml#a2b9de2e6eee97f258fe2d7c765206e8a">SendRequestCounterDir</a>();</div><div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;<span class="comment">    /// Send a activate timeline packet back to the client.</span></div><div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;<span class="comment"></span>    <span class="keywordtype">void</span> <a class="code" href="classarmnn_1_1gatordmock_1_1_gatord_mock_service.xhtml#a3833c5c6bec750969b5050c031032637">SendActivateTimelinePacket</a>();</div><div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;<span class="comment">    /// Send a deactivate timeline packet back to the client.</span></div><div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;<span class="comment"></span>    <span class="keywordtype">void</span> <a class="code" href="classarmnn_1_1gatordmock_1_1_gatord_mock_service.xhtml#a0fa494c4df7426405e756b74656381ec">SendDeactivateTimelinePacket</a>();</div><div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;<span class="comment">    /// Start the thread that will receive all packets and print them nicely to stdout.</span></div><div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;<span class="comment"></span>    <span class="keywordtype">bool</span> <a class="code" href="classarmnn_1_1gatordmock_1_1_gatord_mock_service.xhtml#a5175305569ecb4e58004e977abeff61a">LaunchReceivingThread</a>();</div><div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;<span class="comment">    /// Return the total number of periodic counter capture packets received since the receive thread started.</span></div><div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;<span class="comment">    /// @return number of periodic counter capture packets received.</span></div><div class="line"><a name="l00100"></a><span class="lineno"><a class="line" href="classarmnn_1_1gatordmock_1_1_gatord_mock_service.xhtml#a4c9761eec8e1cd0bd73c6cdf2c2eda89">  100</a></span>&#160;<span class="comment"></span>    uint32_t <a class="code" href="classarmnn_1_1gatordmock_1_1_gatord_mock_service.xhtml#a4c9761eec8e1cd0bd73c6cdf2c2eda89">GetPacketsReceivedCount</a>()</div><div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;    {</div><div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;        <span class="keywordflow">return</span> m_PacketsReceivedCount.load(std::memory_order_acquire);</div><div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;    }</div><div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;<span class="comment">    /// This is a placeholder method to prevent main exiting. It can be removed once the</span></div><div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;<span class="comment">    /// command handling code is added.</span></div><div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;<span class="comment"></span>    <span class="keywordtype">void</span> <a class="code" href="classarmnn_1_1gatordmock_1_1_gatord_mock_service.xhtml#a93617d8640d5e93831d06a2ef3c86bef">WaitForReceivingThread</a>();</div><div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;</div><div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;    <span class="comment">// @return true only if the receive thread is closed or closing.</span></div><div class="line"><a name="l00110"></a><span class="lineno"><a class="line" href="classarmnn_1_1gatordmock_1_1_gatord_mock_service.xhtml#a82bd11e044b4bc9c647fcaa9ce5b3e55">  110</a></span>&#160;    <span class="keywordtype">bool</span> <a class="code" href="classarmnn_1_1gatordmock_1_1_gatord_mock_service.xhtml#a82bd11e044b4bc9c647fcaa9ce5b3e55">ReceiveThreadRunning</a>()</div><div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;    {</div><div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;        <span class="keywordflow">return</span> !m_CloseReceivingThread.load();</div><div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;    }</div><div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;<span class="comment">    /// Send the counter list to ArmNN.</span></div><div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;<span class="comment"></span>    <span class="keywordtype">void</span> <a class="code" href="classarmnn_1_1gatordmock_1_1_gatord_mock_service.xhtml#abaf2feb0e79566de18721659d896dae1">SendPeriodicCounterSelectionList</a>(uint32_t period, std::vector&lt;uint16_t&gt; counters);</div><div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;<span class="comment">    /// Execute the WAIT command from the comamnd file.</span></div><div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;<span class="comment"></span>    <span class="keywordtype">void</span> <a class="code" href="classarmnn_1_1gatordmock_1_1_gatord_mock_service.xhtml#a18f77daf6b32e5bb456c2bc860140669">WaitCommand</a>(uint32_t timeout);</div><div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;</div><div class="line"><a name="l00121"></a><span class="lineno"><a class="line" href="classarmnn_1_1gatordmock_1_1_gatord_mock_service.xhtml#a654df0da871a928b8ccbffb989eabd49">  121</a></span>&#160;    arm::pipe::DirectoryCaptureCommandHandler&amp; <a class="code" href="classarmnn_1_1gatordmock_1_1_gatord_mock_service.xhtml#a654df0da871a928b8ccbffb989eabd49">GetDirectoryCaptureCommandHandler</a>()</div><div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;    {</div><div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;        <span class="keywordflow">return</span> m_DirectoryCaptureCommandHandler;</div><div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;    }</div><div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;</div><div class="line"><a name="l00126"></a><span class="lineno"><a class="line" href="classarmnn_1_1gatordmock_1_1_gatord_mock_service.xhtml#ae52624d07e7ca9bd28070467217caba9">  126</a></span>&#160;    arm::pipe::TimelineDecoder&amp; <a class="code" href="classarmnn_1_1gatordmock_1_1_gatord_mock_service.xhtml#ae52624d07e7ca9bd28070467217caba9">GetTimelineDecoder</a>()</div><div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;    {</div><div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;        <span class="keywordflow">return</span> m_TimelineDecoder;</div><div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;    }</div><div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;</div><div class="line"><a name="l00131"></a><span class="lineno"><a class="line" href="classarmnn_1_1gatordmock_1_1_gatord_mock_service.xhtml#a450b29f889e2693f7f7a88cc8af12b6e">  131</a></span>&#160;    arm::pipe::TimelineDirectoryCaptureCommandHandler&amp; <a class="code" href="classarmnn_1_1gatordmock_1_1_gatord_mock_service.xhtml#a450b29f889e2693f7f7a88cc8af12b6e">GetTimelineDirectoryCaptureCommandHandler</a>()</div><div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;    {</div><div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;        <span class="keywordflow">return</span> m_TimelineDirectoryCaptureCommandHandler;</div><div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;    }</div><div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;</div><div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;<span class="keyword">private</span>:</div><div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;    <span class="keywordtype">void</span> ReceiveLoop();</div><div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;</div><div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;    std::unique_ptr&lt;arm::pipe::BasePipeServer&gt;  m_BasePipeServer;</div><div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;</div><div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;    std::atomic&lt;uint32_t&gt; m_PacketsReceivedCount;</div><div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;</div><div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;    <span class="keywordtype">bool</span> m_EchoPackets;</div><div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;    std::thread m_ListeningThread;</div><div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;    std::atomic&lt;bool&gt; m_CloseReceivingThread;</div><div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;</div><div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;    arm::pipe::PacketVersionResolver m_PacketVersionResolver;</div><div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;    arm::pipe::CommandHandlerRegistry m_HandlerRegistry;</div><div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;</div><div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;    arm::pipe::TimelineDecoder m_TimelineDecoder;</div><div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;</div><div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;    <a class="code" href="classarmnn_1_1gatordmock_1_1_periodic_counter_capture_command_handler.xhtml">gatordmock::PeriodicCounterCaptureCommandHandler</a> m_CounterCaptureCommandHandler;</div><div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;    <a class="code" href="classarmnn_1_1gatordmock_1_1_stream_metadata_command_handler.xhtml">gatordmock::StreamMetadataCommandHandler</a> m_StreamMetadataCommandHandler;</div><div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;    <a class="code" href="classarmnn_1_1gatordmock_1_1_stub_command_handler.xhtml">gatordmock::StubCommandHandler</a> m_StubCommandHandler;</div><div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;</div><div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;    arm::pipe::DirectoryCaptureCommandHandler m_DirectoryCaptureCommandHandler;</div><div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160;</div><div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;    arm::pipe::TimelineCaptureCommandHandler m_TimelineCaptureCommandHandler;</div><div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160;    arm::pipe::TimelineDirectoryCaptureCommandHandler m_TimelineDirectoryCaptureCommandHandler;</div><div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160;};</div><div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160;}    <span class="comment">// namespace gatordmock</span></div><div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160;</div><div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160;}    <span class="comment">// namespace armnn</span></div><div class="ttc" id="_periodic_counter_capture_command_handler_8hpp_xhtml"><div class="ttname"><a href="_periodic_counter_capture_command_handler_8hpp.xhtml">PeriodicCounterCaptureCommandHandler.hpp</a></div></div>
<div class="ttc" id="classarmnn_1_1gatordmock_1_1_gatord_mock_service_xhtml_a450b29f889e2693f7f7a88cc8af12b6e"><div class="ttname"><a href="classarmnn_1_1gatordmock_1_1_gatord_mock_service.xhtml#a450b29f889e2693f7f7a88cc8af12b6e">armnn::gatordmock::GatordMockService::GetTimelineDirectoryCaptureCommandHandler</a></div><div class="ttdeci">arm::pipe::TimelineDirectoryCaptureCommandHandler &amp; GetTimelineDirectoryCaptureCommandHandler()</div><div class="ttdef"><b>Definition:</b> <a href="_gatord_mock_service_8hpp_source.xhtml#l00131">GatordMockService.hpp:131</a></div></div>
<div class="ttc" id="_stream_metadata_command_handler_8hpp_xhtml"><div class="ttname"><a href="_stream_metadata_command_handler_8hpp.xhtml">StreamMetadataCommandHandler.hpp</a></div></div>
<div class="ttc" id="namespacearmnn_xhtml"><div class="ttname"><a href="namespacearmnn.xhtml">armnn</a></div><div class="ttdoc">Copyright (c) 2021 ARM Limited and Contributors. </div><div class="ttdef"><b>Definition:</b> <a href="01__00__quick__start_8dox_source.xhtml#l00006">01_00_quick_start.dox:6</a></div></div>
<div class="ttc" id="classarmnn_1_1gatordmock_1_1_gatord_mock_service_xhtml_a0fa494c4df7426405e756b74656381ec"><div class="ttname"><a href="classarmnn_1_1gatordmock_1_1_gatord_mock_service.xhtml#a0fa494c4df7426405e756b74656381ec">armnn::gatordmock::GatordMockService::SendDeactivateTimelinePacket</a></div><div class="ttdeci">void SendDeactivateTimelinePacket()</div><div class="ttdoc">Send a deactivate timeline packet back to the client. </div><div class="ttdef"><b>Definition:</b> <a href="_gatord_mock_service_8cpp_source.xhtml#l00054">GatordMockService.cpp:54</a></div></div>
<div class="ttc" id="classarmnn_1_1gatordmock_1_1_gatord_mock_service_xhtml_a3833c5c6bec750969b5050c031032637"><div class="ttname"><a href="classarmnn_1_1gatordmock_1_1_gatord_mock_service.xhtml#a3833c5c6bec750969b5050c031032637">armnn::gatordmock::GatordMockService::SendActivateTimelinePacket</a></div><div class="ttdeci">void SendActivateTimelinePacket()</div><div class="ttdoc">Send a activate timeline packet back to the client. </div><div class="ttdef"><b>Definition:</b> <a href="_gatord_mock_service_8cpp_source.xhtml#l00044">GatordMockService.cpp:44</a></div></div>
<div class="ttc" id="classarmnn_1_1gatordmock_1_1_gatord_mock_service_xhtml_ac07351dbc304681b2efd5df4958a6735"><div class="ttname"><a href="classarmnn_1_1gatordmock_1_1_gatord_mock_service.xhtml#ac07351dbc304681b2efd5df4958a6735">armnn::gatordmock::GatordMockService::WaitForStreamMetaData</a></div><div class="ttdeci">bool WaitForStreamMetaData()</div><div class="ttdoc">Once the connection is open wait to receive the stream meta data packet from the client. </div><div class="ttdef"><b>Definition:</b> <a href="_gatord_mock_service_8cpp_source.xhtml#l00101">GatordMockService.cpp:101</a></div></div>
<div class="ttc" id="namespacestd_xhtml"><div class="ttname"><a href="namespacestd.xhtml">std</a></div><div class="ttdef"><b>Definition:</b> <a href="_backend_id_8hpp_source.xhtml#l00149">BackendId.hpp:149</a></div></div>
<div class="ttc" id="classarmnn_1_1gatordmock_1_1_gatord_mock_service_xhtml_a2b9de2e6eee97f258fe2d7c765206e8a"><div class="ttname"><a href="classarmnn_1_1gatordmock_1_1_gatord_mock_service.xhtml#a2b9de2e6eee97f258fe2d7c765206e8a">armnn::gatordmock::GatordMockService::SendRequestCounterDir</a></div><div class="ttdeci">void SendRequestCounterDir()</div><div class="ttdoc">Send a request counter directory packet back to the client. </div><div class="ttdef"><b>Definition:</b> <a href="_gatord_mock_service_8cpp_source.xhtml#l00034">GatordMockService.cpp:34</a></div></div>
<div class="ttc" id="classarmnn_1_1gatordmock_1_1_gatord_mock_service_xhtml_a654df0da871a928b8ccbffb989eabd49"><div class="ttname"><a href="classarmnn_1_1gatordmock_1_1_gatord_mock_service.xhtml#a654df0da871a928b8ccbffb989eabd49">armnn::gatordmock::GatordMockService::GetDirectoryCaptureCommandHandler</a></div><div class="ttdeci">arm::pipe::DirectoryCaptureCommandHandler &amp; GetDirectoryCaptureCommandHandler()</div><div class="ttdef"><b>Definition:</b> <a href="_gatord_mock_service_8hpp_source.xhtml#l00121">GatordMockService.hpp:121</a></div></div>
<div class="ttc" id="classarmnn_1_1gatordmock_1_1_gatord_mock_service_xhtml_a82bd11e044b4bc9c647fcaa9ce5b3e55"><div class="ttname"><a href="classarmnn_1_1gatordmock_1_1_gatord_mock_service.xhtml#a82bd11e044b4bc9c647fcaa9ce5b3e55">armnn::gatordmock::GatordMockService::ReceiveThreadRunning</a></div><div class="ttdeci">bool ReceiveThreadRunning()</div><div class="ttdef"><b>Definition:</b> <a href="_gatord_mock_service_8hpp_source.xhtml#l00110">GatordMockService.hpp:110</a></div></div>
<div class="ttc" id="classarmnn_1_1gatordmock_1_1_gatord_mock_service_xhtml_ae52624d07e7ca9bd28070467217caba9"><div class="ttname"><a href="classarmnn_1_1gatordmock_1_1_gatord_mock_service.xhtml#ae52624d07e7ca9bd28070467217caba9">armnn::gatordmock::GatordMockService::GetTimelineDecoder</a></div><div class="ttdeci">arm::pipe::TimelineDecoder &amp; GetTimelineDecoder()</div><div class="ttdef"><b>Definition:</b> <a href="_gatord_mock_service_8hpp_source.xhtml#l00126">GatordMockService.hpp:126</a></div></div>
<div class="ttc" id="classarmnn_1_1gatordmock_1_1_stub_command_handler_xhtml"><div class="ttname"><a href="classarmnn_1_1gatordmock_1_1_stub_command_handler.xhtml">armnn::gatordmock::StubCommandHandler</a></div><div class="ttdef"><b>Definition:</b> <a href="_stub_command_handler_8hpp_source.xhtml#l00018">StubCommandHandler.hpp:18</a></div></div>
<div class="ttc" id="classarmnn_1_1gatordmock_1_1_gatord_mock_service_xhtml_a5175305569ecb4e58004e977abeff61a"><div class="ttname"><a href="classarmnn_1_1gatordmock_1_1_gatord_mock_service.xhtml#a5175305569ecb4e58004e977abeff61a">armnn::gatordmock::GatordMockService::LaunchReceivingThread</a></div><div class="ttdeci">bool LaunchReceivingThread()</div><div class="ttdoc">Start the thread that will receive all packets and print them nicely to stdout. </div><div class="ttdef"><b>Definition:</b> <a href="_gatord_mock_service_8cpp_source.xhtml#l00064">GatordMockService.cpp:64</a></div></div>
<div class="ttc" id="classarmnn_1_1gatordmock_1_1_periodic_counter_capture_command_handler_xhtml"><div class="ttname"><a href="classarmnn_1_1gatordmock_1_1_periodic_counter_capture_command_handler.xhtml">armnn::gatordmock::PeriodicCounterCaptureCommandHandler</a></div><div class="ttdef"><b>Definition:</b> <a href="_periodic_counter_capture_command_handler_8hpp_source.xhtml#l00026">PeriodicCounterCaptureCommandHandler.hpp:26</a></div></div>
<div class="ttc" id="classarmnn_1_1gatordmock_1_1_gatord_mock_service_xhtml"><div class="ttname"><a href="classarmnn_1_1gatordmock_1_1_gatord_mock_service.xhtml">armnn::gatordmock::GatordMockService</a></div><div class="ttdoc">A class that implements a Mock Gatord server. </div><div class="ttdef"><b>Definition:</b> <a href="_gatord_mock_service_8hpp_source.xhtml#l00036">GatordMockService.hpp:36</a></div></div>
<div class="ttc" id="classarmnn_1_1gatordmock_1_1_gatord_mock_service_xhtml_a4c9761eec8e1cd0bd73c6cdf2c2eda89"><div class="ttname"><a href="classarmnn_1_1gatordmock_1_1_gatord_mock_service.xhtml#a4c9761eec8e1cd0bd73c6cdf2c2eda89">armnn::gatordmock::GatordMockService::GetPacketsReceivedCount</a></div><div class="ttdeci">uint32_t GetPacketsReceivedCount()</div><div class="ttdoc">Return the total number of periodic counter capture packets received since the receive thread started...</div><div class="ttdef"><b>Definition:</b> <a href="_gatord_mock_service_8hpp_source.xhtml#l00100">GatordMockService.hpp:100</a></div></div>
<div class="ttc" id="_stub_command_handler_8hpp_xhtml"><div class="ttname"><a href="_stub_command_handler_8hpp.xhtml">StubCommandHandler.hpp</a></div></div>
<div class="ttc" id="classarmnn_1_1gatordmock_1_1_gatord_mock_service_xhtml_a18f77daf6b32e5bb456c2bc860140669"><div class="ttname"><a href="classarmnn_1_1gatordmock_1_1_gatord_mock_service.xhtml#a18f77daf6b32e5bb456c2bc860140669">armnn::gatordmock::GatordMockService::WaitCommand</a></div><div class="ttdeci">void WaitCommand(uint32_t timeout)</div><div class="ttdoc">Execute the WAIT command from the comamnd file. </div><div class="ttdef"><b>Definition:</b> <a href="_gatord_mock_service_8cpp_source.xhtml#l00138">GatordMockService.cpp:138</a></div></div>
<div class="ttc" id="classarmnn_1_1gatordmock_1_1_gatord_mock_service_xhtml_abaf2feb0e79566de18721659d896dae1"><div class="ttname"><a href="classarmnn_1_1gatordmock_1_1_gatord_mock_service.xhtml#abaf2feb0e79566de18721659d896dae1">armnn::gatordmock::GatordMockService::SendPeriodicCounterSelectionList</a></div><div class="ttdeci">void SendPeriodicCounterSelectionList(uint32_t period, std::vector&lt; uint16_t &gt; counters)</div><div class="ttdoc">Send the counter list to ArmNN. </div><div class="ttdef"><b>Definition:</b> <a href="_gatord_mock_service_8cpp_source.xhtml#l00106">GatordMockService.cpp:106</a></div></div>
<div class="ttc" id="classarmnn_1_1gatordmock_1_1_stream_metadata_command_handler_xhtml"><div class="ttname"><a href="classarmnn_1_1gatordmock_1_1_stream_metadata_command_handler.xhtml">armnn::gatordmock::StreamMetadataCommandHandler</a></div><div class="ttdef"><b>Definition:</b> <a href="_stream_metadata_command_handler_8hpp_source.xhtml#l00026">StreamMetadataCommandHandler.hpp:26</a></div></div>
<div class="ttc" id="classarmnn_1_1gatordmock_1_1_gatord_mock_service_xhtml_a93617d8640d5e93831d06a2ef3c86bef"><div class="ttname"><a href="classarmnn_1_1gatordmock_1_1_gatord_mock_service.xhtml#a93617d8640d5e93831d06a2ef3c86bef">armnn::gatordmock::GatordMockService::WaitForReceivingThread</a></div><div class="ttdeci">void WaitForReceivingThread()</div><div class="ttdoc">This is a placeholder method to prevent main exiting. </div><div class="ttdef"><b>Definition:</b> <a href="_gatord_mock_service_8cpp_source.xhtml#l00081">GatordMockService.cpp:81</a></div></div>
<div class="ttc" id="classarmnn_1_1gatordmock_1_1_gatord_mock_service_xhtml_a61fd54e09f02c8b6b575608fc4741285"><div class="ttname"><a href="classarmnn_1_1gatordmock_1_1_gatord_mock_service.xhtml#a61fd54e09f02c8b6b575608fc4741285">armnn::gatordmock::GatordMockService::GatordMockService</a></div><div class="ttdeci">GatordMockService(std::unique_ptr&lt; arm::pipe::BasePipeServer &gt; clientConnection, bool echoPackets)</div><div class="ttdef"><b>Definition:</b> <a href="_gatord_mock_service_8hpp_source.xhtml#l00041">GatordMockService.hpp:41</a></div></div>
<div class="ttc" id="classarmnn_1_1gatordmock_1_1_gatord_mock_service_xhtml_a1c52e4d857e77460a50fec0240e184f1"><div class="ttname"><a href="classarmnn_1_1gatordmock_1_1_gatord_mock_service.xhtml#a1c52e4d857e77460a50fec0240e184f1">armnn::gatordmock::GatordMockService::operator=</a></div><div class="ttdeci">GatordMockService &amp; operator=(const GatordMockService &amp;)=delete</div></div>
<div class="ttc" id="classarmnn_1_1gatordmock_1_1_gatord_mock_service_xhtml_a41eaa65cf4e7212f09b04d06c130cd83"><div class="ttname"><a href="classarmnn_1_1gatordmock_1_1_gatord_mock_service.xhtml#a41eaa65cf4e7212f09b04d06c130cd83">armnn::gatordmock::GatordMockService::SendConnectionAck</a></div><div class="ttdeci">void SendConnectionAck()</div><div class="ttdoc">Send a connection acknowledged packet back to the client. </div><div class="ttdef"><b>Definition:</b> <a href="_gatord_mock_service_8cpp_source.xhtml#l00024">GatordMockService.cpp:24</a></div></div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="dir_59425e443f801f1f2fd8bbe4959a3ccf.xhtml">tests</a></li><li class="navelem"><a class="el" href="dir_659c7018c274c4a27f289b6765351cd5.xhtml">profiling</a></li><li class="navelem"><a class="el" href="dir_0f843ccd982e68996492857574f1c0de.xhtml">gatordmock</a></li><li class="navelem"><a class="el" href="_gatord_mock_service_8hpp.xhtml">GatordMockService.hpp</a></li>
    <li class="footer">Generated on Fri Jun 17 2022 13:20:24 for ArmNN by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.13 </li>
  </ul>
</div>
</body>
</html>
