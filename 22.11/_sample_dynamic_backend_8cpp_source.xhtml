<!-- Copyright (c) 2020 ARM Limited. -->
<!--                                 -->
<!-- SPDX-License-Identifier: MIT    -->
<!--                                 -->
<!-- HTML header for doxygen 1.8.13-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.13"/>
<meta name="robots" content="NOINDEX, NOFOLLOW" />
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>ArmNN: src/dynamic/sample/SampleDynamicBackend.cpp Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script><script type="text/javascript" src="http://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="stylesheet.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <img alt="ArmNN" src="Arm_NN_horizontal_blue.png" style="max-width: 10rem; margin-top: .5rem; margin-left 10px"/>
  <td style="padding-left: 0.5em;">
   <div id="projectname">
   &#160;<span id="projectnumber">22.11</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.13 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
$(document).ready(function(){initNavTree('_sample_dynamic_backend_8cpp_source.xhtml','');});
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="headertitle">
<div class="title">SampleDynamicBackend.cpp</div>  </div>
</div><!--header-->
<div class="contents">
<a href="_sample_dynamic_backend_8cpp.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="comment">//</span></div><div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="comment">// Copyright Â© 2020 Arm Ltd and Contributors. All rights reserved.</span></div><div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="comment">// SPDX-License-Identifier: MIT</span></div><div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="comment">//</span></div><div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;</div><div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_sample_dynamic_backend_8hpp.xhtml">SampleDynamicBackend.hpp</a>&quot;</span></div><div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_sample_dynamic_layer_support_8hpp.xhtml">SampleDynamicLayerSupport.hpp</a>&quot;</span></div><div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_sample_dynamic_workload_factory_8hpp.xhtml">SampleDynamicWorkloadFactory.hpp</a>&quot;</span></div><div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_sample_memory_manager_8hpp.xhtml">SampleMemoryManager.hpp</a>&quot;</span></div><div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_sample_dynamic_tensor_handle_factory_8hpp.xhtml">SampleDynamicTensorHandleFactory.hpp</a>&quot;</span></div><div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;</div><div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;<span class="preprocessor">#include &lt;<a class="code" href="_i_backend_internal_8hpp.xhtml">armnn/backends/IBackendInternal.hpp</a>&gt;</span></div><div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;<span class="preprocessor">#include &lt;<a class="code" href="include_2armnn_2backends_2_optimization_views_8hpp.xhtml">armnn/backends/OptimizationViews.hpp</a>&gt;</span></div><div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;</div><div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;<span class="keyword">namespace </span><a class="code" href="namespacesdb.xhtml">sdb</a> <span class="comment">// sample dynamic backend</span></div><div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;{</div><div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;</div><div class="line"><a name="l00018"></a><span class="lineno"><a class="line" href="namespacesdb.xhtml#a51949b51c99a9278932a30bfd002bdc1">   18</a></span>&#160;constexpr <span class="keyword">const</span> <span class="keywordtype">char</span> * <a class="code" href="namespacesdb.xhtml#a51949b51c99a9278932a30bfd002bdc1">SampleDynamicBackendId</a>() { <span class="keywordflow">return</span> <span class="stringliteral">&quot;SampleDynamic&quot;</span>; }</div><div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;</div><div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;<span class="keyword">class </span>SampleDynamicBackend : <span class="keyword">public</span> <a class="code" href="classarmnn_1_1_i_backend_internal.xhtml">armnn::IBackendInternal</a></div><div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;{</div><div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;<span class="keyword">public</span>:</div><div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;    SampleDynamicBackend()  = <span class="keywordflow">default</span>;</div><div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;    ~SampleDynamicBackend() = <span class="keywordflow">default</span>;</div><div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;</div><div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;    <span class="keyword">static</span> <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_backend_id.xhtml">armnn::BackendId</a>&amp; GetIdStatic()</div><div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;    {</div><div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;        <span class="keyword">static</span> <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_backend_id.xhtml">armnn::BackendId</a> s_Id{<a class="code" href="namespacesdb.xhtml#a51949b51c99a9278932a30bfd002bdc1">SampleDynamicBackendId</a>()};</div><div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;        <span class="keywordflow">return</span> s_Id;</div><div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;    }</div><div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;</div><div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;    <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_backend_id.xhtml">armnn::BackendId</a>&amp; GetId()<span class="keyword"> const override </span>{ <span class="keywordflow">return</span> GetIdStatic(); }</div><div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;</div><div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;    <a class="code" href="namespacearmnn.xhtml#a12bff6d51d63dac1375c89bc8415dc46">IBackendInternal::IMemoryManagerUniquePtr</a> CreateMemoryManager()<span class="keyword"> const override</span></div><div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;<span class="keyword">    </span>{</div><div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;        <span class="keywordflow">return</span> std::make_unique&lt;SampleMemoryManager&gt;();</div><div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;    }</div><div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;</div><div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;    IBackendInternal::IWorkloadFactoryPtr CreateWorkloadFactory(</div><div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;        <span class="keyword">const</span> IMemoryManagerSharedPtr&amp; memoryManager)<span class="keyword"> const override</span></div><div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;<span class="keyword">    </span>{</div><div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;        <span class="keywordflow">return</span> std::make_unique&lt;SampleDynamicWorkloadFactory&gt;(</div><div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;                armnn::PolymorphicPointerDowncast&lt;SampleMemoryManager&gt;(memoryManager));</div><div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;    }</div><div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;</div><div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;    IBackendInternal::IWorkloadFactoryPtr CreateWorkloadFactory(</div><div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;        <span class="keyword">class</span> <a class="code" href="classarmnn_1_1_tensor_handle_factory_registry.xhtml">armnn::TensorHandleFactoryRegistry</a>&amp; tensorHandleFactoryRegistry)<span class="keyword"> const override</span></div><div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;<span class="keyword">    </span>{</div><div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;        <span class="keyword">auto</span> memoryManager = std::make_shared&lt;SampleMemoryManager&gt;();</div><div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;</div><div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;        tensorHandleFactoryRegistry.<a class="code" href="classarmnn_1_1_tensor_handle_factory_registry.xhtml#a958ab0c60b6bfdfba5cc075211edec37">RegisterMemoryManager</a>(memoryManager);</div><div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;        tensorHandleFactoryRegistry.<a class="code" href="classarmnn_1_1_tensor_handle_factory_registry.xhtml#a05f82bd846630bb3aa8afe22ef6f15fc">RegisterFactory</a>(std::make_unique&lt;SampleDynamicTensorHandleFactory&gt;(memoryManager));</div><div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;</div><div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;        <span class="keywordflow">return</span> std::make_unique&lt;SampleDynamicWorkloadFactory&gt;(</div><div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;                armnn::PolymorphicPointerDowncast&lt;SampleMemoryManager&gt;(memoryManager));</div><div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;    }</div><div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;</div><div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;    IBackendInternal::IBackendProfilingContextPtr CreateBackendProfilingContext(</div><div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;        <span class="keyword">const</span> <a class="code" href="structarmnn_1_1_i_runtime_1_1_creation_options.xhtml">armnn::IRuntime::CreationOptions</a>&amp;, IBackendProfilingPtr&amp;)<span class="keyword"> override</span></div><div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;<span class="keyword">    </span>{</div><div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;        <span class="keywordflow">return</span> IBackendProfilingContextPtr{};</div><div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;    }</div><div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;</div><div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;    <a class="code" href="namespacearmnn.xhtml#a11fa919c11fe46aad613b2e960fcfe90">IBackendInternal::ILayerSupportSharedPtr</a> GetLayerSupport()<span class="keyword"> const override</span></div><div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;<span class="keyword">    </span>{</div><div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;        <span class="keyword">static</span> <a class="code" href="namespacearmnn.xhtml#a11fa919c11fe46aad613b2e960fcfe90">ILayerSupportSharedPtr</a> layerSupport{<span class="keyword">new</span> <a class="code" href="classsdb_1_1_sample_dynamic_layer_support.xhtml">SampleDynamicLayerSupport</a>};</div><div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;        <span class="keywordflow">return</span> layerSupport;</div><div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;    }</div><div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;</div><div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;    std::vector&lt;armnn::ITensorHandleFactory::FactoryId&gt; GetHandleFactoryPreferences()<span class="keyword"> const override</span></div><div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;<span class="keyword">    </span>{</div><div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;        <span class="keywordflow">return</span> std::vector&lt;armnn::ITensorHandleFactory::FactoryId&gt; { <a class="code" href="classsdb_1_1_sample_dynamic_tensor_handle_factory.xhtml#acdecb5b442434112c2cc8fc48c0ea922">SampleDynamicTensorHandleFactory::GetIdStatic</a>() };</div><div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;    }</div><div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;</div><div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;    IBackendInternal::IBackendContextPtr CreateBackendContext(<span class="keyword">const</span> <a class="code" href="structarmnn_1_1_i_runtime_1_1_creation_options.xhtml">armnn::IRuntime::CreationOptions</a>&amp;)<span class="keyword"> const override</span></div><div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;<span class="keyword">    </span>{</div><div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;        <span class="keywordflow">return</span> IBackendContextPtr{};</div><div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;    }</div><div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;</div><div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;    <a class="code" href="classarmnn_1_1_optimization_views.xhtml">armnn::OptimizationViews</a> OptimizeSubgraphView(<span class="keyword">const</span> <a class="code" href="classarmnn_1_1_subgraph_view.xhtml">armnn::SubgraphView</a>&amp; subgraph)<span class="keyword"> const override</span></div><div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;<span class="keyword">    </span>{</div><div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;        <a class="code" href="classarmnn_1_1_optimization_views.xhtml">armnn::OptimizationViews</a> optimizationViews;</div><div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;</div><div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;        optimizationViews.<a class="code" href="classarmnn_1_1_optimization_views.xhtml#a28e41bdd6b719a3d60a1a0de2e1ebc95">AddUntouchedSubgraph</a>(<a class="code" href="classarmnn_1_1_subgraph_view.xhtml">armnn::SubgraphView</a>(subgraph));</div><div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;</div><div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;        <span class="keywordflow">return</span> optimizationViews;</div><div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;    }</div><div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;</div><div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;    <span class="keywordtype">void</span> RegisterTensorHandleFactories(<span class="keyword">class</span> <a class="code" href="classarmnn_1_1_tensor_handle_factory_registry.xhtml">armnn::TensorHandleFactoryRegistry</a>&amp; registry)<span class="keyword"> override</span></div><div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;<span class="keyword">    </span>{</div><div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;        <span class="keyword">auto</span> memoryManager = std::make_shared&lt;SampleMemoryManager&gt;();</div><div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;</div><div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;        registry.<a class="code" href="classarmnn_1_1_tensor_handle_factory_registry.xhtml#a958ab0c60b6bfdfba5cc075211edec37">RegisterMemoryManager</a>(memoryManager);</div><div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;        registry.<a class="code" href="classarmnn_1_1_tensor_handle_factory_registry.xhtml#a05f82bd846630bb3aa8afe22ef6f15fc">RegisterFactory</a>(std::make_unique&lt;SampleDynamicTensorHandleFactory&gt;(memoryManager));</div><div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;    }</div><div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;</div><div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;};</div><div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;</div><div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;} <span class="comment">// namespace sdb</span></div><div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;</div><div class="line"><a name="l00101"></a><span class="lineno"><a class="line" href="_sample_dynamic_backend_8cpp.xhtml#adaff295134ed2825ae43a8e9281b6f2a">  101</a></span>&#160;<span class="keyword">const</span> <span class="keywordtype">char</span>* <a class="code" href="_sample_dynamic_backend_8cpp.xhtml#adaff295134ed2825ae43a8e9281b6f2a">GetBackendId</a>()</div><div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;{</div><div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;    <span class="keywordflow">return</span> sdb::SampleDynamicBackend::GetIdStatic().Get().c_str();</div><div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;}</div><div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;</div><div class="line"><a name="l00106"></a><span class="lineno"><a class="line" href="_sample_dynamic_backend_8cpp.xhtml#aa8f09f94b0356f870c9bdb9c594cddfc">  106</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="_sample_dynamic_backend_8cpp.xhtml#aa8f09f94b0356f870c9bdb9c594cddfc">GetVersion</a>(uint32_t* outMajor, uint32_t* outMinor)</div><div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;{</div><div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;    <span class="keywordflow">if</span> (!outMajor || !outMinor)</div><div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;    {</div><div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;        <span class="keywordflow">return</span>;</div><div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;    }</div><div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;</div><div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;    <a class="code" href="structarmnn_1_1_backend_version.xhtml">armnn::BackendVersion</a> apiVersion = <a class="code" href="classarmnn_1_1_i_backend_internal.xhtml#a878b8f50d8a2f92ed624803e9f6968ae">armnn::IBackendInternal::GetApiVersion</a>();</div><div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;</div><div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;    *outMajor = apiVersion.<a class="code" href="structarmnn_1_1_backend_version.xhtml#aa98a6e78930567c2d9cdcf320eaddb7a">m_Major</a>;</div><div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;    *outMinor = apiVersion.<a class="code" href="structarmnn_1_1_backend_version.xhtml#a421dbc9bee3ebd2721de5c82e6cd7d20">m_Minor</a>;</div><div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;}</div><div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;</div><div class="line"><a name="l00119"></a><span class="lineno"><a class="line" href="_sample_dynamic_backend_8cpp.xhtml#a6a075b7c32d5511f95903749eef44b22">  119</a></span>&#160;<span class="keywordtype">void</span>* <a class="code" href="_sample_dynamic_backend_8cpp.xhtml#a6a075b7c32d5511f95903749eef44b22">BackendFactory</a>()</div><div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;{</div><div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;    <span class="keywordflow">return</span> <span class="keyword">new</span> sdb::SampleDynamicBackend();</div><div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;}</div><div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;</div><div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;</div><div class="ttc" id="classarmnn_1_1_tensor_handle_factory_registry_xhtml_a958ab0c60b6bfdfba5cc075211edec37"><div class="ttname"><a href="classarmnn_1_1_tensor_handle_factory_registry.xhtml#a958ab0c60b6bfdfba5cc075211edec37">armnn::TensorHandleFactoryRegistry::RegisterMemoryManager</a></div><div class="ttdeci">void RegisterMemoryManager(std::shared_ptr&lt; IMemoryManager &gt; memoryManger)</div><div class="ttdoc">Register a memory manager with shared ownership. </div><div class="ttdef"><b>Definition:</b> <a href="_tensor_handle_factory_registry_8cpp_source.xhtml#l00034">TensorHandleFactoryRegistry.cpp:34</a></div></div>
<div class="ttc" id="structarmnn_1_1_backend_version_xhtml_a421dbc9bee3ebd2721de5c82e6cd7d20"><div class="ttname"><a href="structarmnn_1_1_backend_version.xhtml#a421dbc9bee3ebd2721de5c82e6cd7d20">armnn::BackendVersion::m_Minor</a></div><div class="ttdeci">uint32_t m_Minor</div><div class="ttdef"><b>Definition:</b> <a href="_i_backend_internal_8hpp_source.xhtml#l00037">IBackendInternal.hpp:37</a></div></div>
<div class="ttc" id="classarmnn_1_1_i_backend_internal_xhtml"><div class="ttname"><a href="classarmnn_1_1_i_backend_internal.xhtml">armnn::IBackendInternal</a></div><div class="ttdef"><b>Definition:</b> <a href="_i_backend_internal_8hpp_source.xhtml#l00077">IBackendInternal.hpp:77</a></div></div>
<div class="ttc" id="_i_backend_internal_8hpp_xhtml"><div class="ttname"><a href="_i_backend_internal_8hpp.xhtml">IBackendInternal.hpp</a></div></div>
<div class="ttc" id="classarmnn_1_1_tensor_handle_factory_registry_xhtml_a05f82bd846630bb3aa8afe22ef6f15fc"><div class="ttname"><a href="classarmnn_1_1_tensor_handle_factory_registry.xhtml#a05f82bd846630bb3aa8afe22ef6f15fc">armnn::TensorHandleFactoryRegistry::RegisterFactory</a></div><div class="ttdeci">void RegisterFactory(std::unique_ptr&lt; ITensorHandleFactory &gt; allocator)</div><div class="ttdoc">Register a TensorHandleFactory and transfer ownership. </div><div class="ttdef"><b>Definition:</b> <a href="_tensor_handle_factory_registry_8cpp_source.xhtml#l00012">TensorHandleFactoryRegistry.cpp:12</a></div></div>
<div class="ttc" id="namespacearmnn_xhtml_a11fa919c11fe46aad613b2e960fcfe90"><div class="ttname"><a href="namespacearmnn.xhtml#a11fa919c11fe46aad613b2e960fcfe90">armnn::ILayerSupportSharedPtr</a></div><div class="ttdeci">std::shared_ptr&lt; ILayerSupport &gt; ILayerSupportSharedPtr</div><div class="ttdef"><b>Definition:</b> <a href="_i_layer_support_8hpp_source.xhtml#l00572">ILayerSupport.hpp:572</a></div></div>
<div class="ttc" id="classarmnn_1_1_optimization_views_xhtml"><div class="ttname"><a href="classarmnn_1_1_optimization_views.xhtml">armnn::OptimizationViews</a></div><div class="ttdef"><b>Definition:</b> <a href="include_2armnn_2backends_2_optimization_views_8hpp_source.xhtml#l00013">OptimizationViews.hpp:13</a></div></div>
<div class="ttc" id="classsdb_1_1_sample_dynamic_tensor_handle_factory_xhtml_acdecb5b442434112c2cc8fc48c0ea922"><div class="ttname"><a href="classsdb_1_1_sample_dynamic_tensor_handle_factory.xhtml#acdecb5b442434112c2cc8fc48c0ea922">sdb::SampleDynamicTensorHandleFactory::GetIdStatic</a></div><div class="ttdeci">static const FactoryId &amp; GetIdStatic()</div><div class="ttdef"><b>Definition:</b> <a href="_sample_dynamic_tensor_handle_factory_8cpp_source.xhtml#l00016">SampleDynamicTensorHandleFactory.cpp:16</a></div></div>
<div class="ttc" id="_sample_dynamic_layer_support_8hpp_xhtml"><div class="ttname"><a href="_sample_dynamic_layer_support_8hpp.xhtml">SampleDynamicLayerSupport.hpp</a></div></div>
<div class="ttc" id="_sample_dynamic_workload_factory_8hpp_xhtml"><div class="ttname"><a href="_sample_dynamic_workload_factory_8hpp.xhtml">SampleDynamicWorkloadFactory.hpp</a></div></div>
<div class="ttc" id="classarmnn_1_1_subgraph_view_xhtml"><div class="ttname"><a href="classarmnn_1_1_subgraph_view.xhtml">armnn::SubgraphView</a></div><div class="ttdoc">The SubgraphView class represents a subgraph of a Graph. </div><div class="ttdef"><b>Definition:</b> <a href="_subgraph_view_8hpp_source.xhtml#l00023">SubgraphView.hpp:23</a></div></div>
<div class="ttc" id="structarmnn_1_1_backend_version_xhtml"><div class="ttname"><a href="structarmnn_1_1_backend_version.xhtml">armnn::BackendVersion</a></div><div class="ttdef"><b>Definition:</b> <a href="_i_backend_internal_8hpp_source.xhtml#l00034">IBackendInternal.hpp:34</a></div></div>
<div class="ttc" id="namespacesdb_xhtml"><div class="ttname"><a href="namespacesdb.xhtml">sdb</a></div><div class="ttdef"><b>Definition:</b> <a href="_sample_dynamic_addition_workload_8cpp_source.xhtml#l00011">SampleDynamicAdditionWorkload.cpp:11</a></div></div>
<div class="ttc" id="classarmnn_1_1_i_backend_internal_xhtml_a878b8f50d8a2f92ed624803e9f6968ae"><div class="ttname"><a href="classarmnn_1_1_i_backend_internal.xhtml#a878b8f50d8a2f92ed624803e9f6968ae">armnn::IBackendInternal::GetApiVersion</a></div><div class="ttdeci">static constexpr BackendVersion GetApiVersion()</div><div class="ttdoc">Returns the version of the Backend API. </div><div class="ttdef"><b>Definition:</b> <a href="_i_backend_internal_8hpp_source.xhtml#l00167">IBackendInternal.hpp:167</a></div></div>
<div class="ttc" id="namespacesdb_xhtml_a51949b51c99a9278932a30bfd002bdc1"><div class="ttname"><a href="namespacesdb.xhtml#a51949b51c99a9278932a30bfd002bdc1">sdb::SampleDynamicBackendId</a></div><div class="ttdeci">constexpr const char * SampleDynamicBackendId()</div><div class="ttdef"><b>Definition:</b> <a href="_sample_dynamic_backend_8cpp_source.xhtml#l00018">SampleDynamicBackend.cpp:18</a></div></div>
<div class="ttc" id="classsdb_1_1_sample_dynamic_layer_support_xhtml"><div class="ttname"><a href="classsdb_1_1_sample_dynamic_layer_support.xhtml">sdb::SampleDynamicLayerSupport</a></div><div class="ttdef"><b>Definition:</b> <a href="_sample_dynamic_layer_support_8hpp_source.xhtml#l00013">SampleDynamicLayerSupport.hpp:13</a></div></div>
<div class="ttc" id="classarmnn_1_1_optimization_views_xhtml_a28e41bdd6b719a3d60a1a0de2e1ebc95"><div class="ttname"><a href="classarmnn_1_1_optimization_views.xhtml#a28e41bdd6b719a3d60a1a0de2e1ebc95">armnn::OptimizationViews::AddUntouchedSubgraph</a></div><div class="ttdeci">void AddUntouchedSubgraph(SubgraphView &amp;&amp;subgraph)</div><div class="ttdef"><b>Definition:</b> <a href="include_2armnn_2backends_2_optimization_views_8hpp_source.xhtml#l00044">OptimizationViews.hpp:44</a></div></div>
<div class="ttc" id="include_2armnn_2backends_2_optimization_views_8hpp_xhtml"><div class="ttname"><a href="include_2armnn_2backends_2_optimization_views_8hpp.xhtml">OptimizationViews.hpp</a></div></div>
<div class="ttc" id="structarmnn_1_1_backend_version_xhtml_aa98a6e78930567c2d9cdcf320eaddb7a"><div class="ttname"><a href="structarmnn_1_1_backend_version.xhtml#aa98a6e78930567c2d9cdcf320eaddb7a">armnn::BackendVersion::m_Major</a></div><div class="ttdeci">uint32_t m_Major</div><div class="ttdef"><b>Definition:</b> <a href="_i_backend_internal_8hpp_source.xhtml#l00036">IBackendInternal.hpp:36</a></div></div>
<div class="ttc" id="classarmnn_1_1_tensor_handle_factory_registry_xhtml"><div class="ttname"><a href="classarmnn_1_1_tensor_handle_factory_registry.xhtml">armnn::TensorHandleFactoryRegistry</a></div><div class="ttdef"><b>Definition:</b> <a href="_tensor_handle_factory_registry_8hpp_source.xhtml#l00022">TensorHandleFactoryRegistry.hpp:22</a></div></div>
<div class="ttc" id="structarmnn_1_1_i_runtime_1_1_creation_options_xhtml"><div class="ttname"><a href="structarmnn_1_1_i_runtime_1_1_creation_options.xhtml">armnn::IRuntime::CreationOptions</a></div><div class="ttdef"><b>Definition:</b> <a href="_i_runtime_8hpp_source.xhtml#l00085">IRuntime.hpp:85</a></div></div>
<div class="ttc" id="_sample_dynamic_backend_8cpp_xhtml_aa8f09f94b0356f870c9bdb9c594cddfc"><div class="ttname"><a href="_sample_dynamic_backend_8cpp.xhtml#aa8f09f94b0356f870c9bdb9c594cddfc">GetVersion</a></div><div class="ttdeci">void GetVersion(uint32_t *outMajor, uint32_t *outMinor)</div><div class="ttdef"><b>Definition:</b> <a href="_sample_dynamic_backend_8cpp_source.xhtml#l00106">SampleDynamicBackend.cpp:106</a></div></div>
<div class="ttc" id="_sample_dynamic_backend_8cpp_xhtml_a6a075b7c32d5511f95903749eef44b22"><div class="ttname"><a href="_sample_dynamic_backend_8cpp.xhtml#a6a075b7c32d5511f95903749eef44b22">BackendFactory</a></div><div class="ttdeci">void * BackendFactory()</div><div class="ttdef"><b>Definition:</b> <a href="_sample_dynamic_backend_8cpp_source.xhtml#l00119">SampleDynamicBackend.cpp:119</a></div></div>
<div class="ttc" id="_sample_memory_manager_8hpp_xhtml"><div class="ttname"><a href="_sample_memory_manager_8hpp.xhtml">SampleMemoryManager.hpp</a></div></div>
<div class="ttc" id="_sample_dynamic_backend_8cpp_xhtml_adaff295134ed2825ae43a8e9281b6f2a"><div class="ttname"><a href="_sample_dynamic_backend_8cpp.xhtml#adaff295134ed2825ae43a8e9281b6f2a">GetBackendId</a></div><div class="ttdeci">const char * GetBackendId()</div><div class="ttdef"><b>Definition:</b> <a href="_sample_dynamic_backend_8cpp_source.xhtml#l00101">SampleDynamicBackend.cpp:101</a></div></div>
<div class="ttc" id="_sample_dynamic_tensor_handle_factory_8hpp_xhtml"><div class="ttname"><a href="_sample_dynamic_tensor_handle_factory_8hpp.xhtml">SampleDynamicTensorHandleFactory.hpp</a></div></div>
<div class="ttc" id="namespacearmnn_xhtml_a12bff6d51d63dac1375c89bc8415dc46"><div class="ttname"><a href="namespacearmnn.xhtml#a12bff6d51d63dac1375c89bc8415dc46">armnn::IMemoryManagerUniquePtr</a></div><div class="ttdeci">std::unique_ptr&lt; IMemoryManager &gt; IMemoryManagerUniquePtr</div><div class="ttdef"><b>Definition:</b> <a href="include_2armnn_2backends_2_i_memory_manager_8hpp_source.xhtml#l00024">IMemoryManager.hpp:24</a></div></div>
<div class="ttc" id="classarmnn_1_1_backend_id_xhtml"><div class="ttname"><a href="classarmnn_1_1_backend_id.xhtml">armnn::BackendId</a></div><div class="ttdef"><b>Definition:</b> <a href="_backend_id_8hpp_source.xhtml#l00075">BackendId.hpp:75</a></div></div>
<div class="ttc" id="_sample_dynamic_backend_8hpp_xhtml"><div class="ttname"><a href="_sample_dynamic_backend_8hpp.xhtml">SampleDynamicBackend.hpp</a></div></div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="dir_68267d1309a1af8e8297ef4c3efbcdba.xhtml">src</a></li><li class="navelem"><a class="el" href="dir_101da30fc6c118b726c448f5a6ab9e53.xhtml">dynamic</a></li><li class="navelem"><a class="el" href="dir_b94b32fb1d16ed92698df04c7e9ebd86.xhtml">sample</a></li><li class="navelem"><a class="el" href="_sample_dynamic_backend_8cpp.xhtml">SampleDynamicBackend.cpp</a></li>
    <li class="footer">Generated on Wed Nov 23 2022 10:57:38 for ArmNN by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.13 </li>
  </ul>
</div>
</body>
</html>
