<!-- Copyright (c) 2020 ARM Limited. -->
<!--                                 -->
<!-- SPDX-License-Identifier: MIT    -->
<!--                                 -->
<!-- HTML header for doxygen 1.8.13-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.17"/>
<meta name="robots" content="NOINDEX, NOFOLLOW" />
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>ArmNN: src/armnn/Network.hpp Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script>
<script type="text/javascript" async="async" src="http://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="stylesheet.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <img alt="ArmNN" src="Arm_NN_horizontal_blue.png" style="max-width: 10rem; margin-top: .5rem; margin-left 10px"/>
  <td style="padding-left: 0.5em;">
   <div id="projectname">
   &#160;<span id="projectnumber">23.05</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.17 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "search",false,'Search');
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(document).ready(function(){initNavTree('_network_8hpp_source.xhtml',''); initResizable(); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="headertitle">
<div class="title">Network.hpp</div>  </div>
</div><!--header-->
<div class="contents">
<a href="_network_8hpp.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="comment">//</span></div>
<div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="comment">// Copyright Â© 2017-2023 Arm Ltd and Contributors. All rights reserved.</span></div>
<div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="comment">// SPDX-License-Identifier: MIT</span></div>
<div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="comment">//</span></div>
<div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="preprocessor">#pragma once</span></div>
<div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160; </div>
<div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="preprocessor">#include &lt;<a class="code" href="_descriptors_fwd_8hpp.xhtml">armnn/DescriptorsFwd.hpp</a>&gt;</span></div>
<div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="preprocessor">#include &lt;<a class="code" href="_i_network_8hpp.xhtml">armnn/INetwork.hpp</a>&gt;</span></div>
<div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="preprocessor">#include &lt;<a class="code" href="_lstm_params_8hpp.xhtml">armnn/LstmParams.hpp</a>&gt;</span></div>
<div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="preprocessor">#include &lt;<a class="code" href="_quantized_lstm_params_8hpp.xhtml">armnn/QuantizedLstmParams.hpp</a>&gt;</span></div>
<div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;<span class="preprocessor">#include &lt;<a class="code" href="_tensor_fwd_8hpp.xhtml">armnn/TensorFwd.hpp</a>&gt;</span></div>
<div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;<span class="preprocessor">#include &lt;<a class="code" href="_types_8hpp.xhtml">armnn/Types.hpp</a>&gt;</span></div>
<div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160; </div>
<div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;<span class="preprocessor">#include &lt;<a class="code" href="_graph_8hpp.xhtml">Graph.hpp</a>&gt;</span></div>
<div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;<span class="preprocessor">#include &lt;<a class="code" href="_layer_8hpp.xhtml">Layer.hpp</a>&gt;</span></div>
<div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;<span class="preprocessor">#include &lt;<a class="code" href="_optimized_network_impl_8hpp.xhtml">OptimizedNetworkImpl.hpp</a>&gt;</span></div>
<div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;<span class="preprocessor">#include &lt;<a class="code" href="_subgraph_view_8hpp.xhtml">armnn/backends/SubgraphView.hpp</a>&gt;</span></div>
<div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160; </div>
<div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;<span class="preprocessor">#include &lt;string&gt;</span></div>
<div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;<span class="preprocessor">#include &lt;vector&gt;</span></div>
<div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;<span class="preprocessor">#include &lt;map&gt;</span></div>
<div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;<span class="preprocessor">#include &lt;memory&gt;</span></div>
<div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160; </div>
<div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;<span class="keyword">namespace </span><a class="code" href="namespacearmnn.xhtml">armnn</a></div>
<div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;{</div>
<div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160; </div>
<div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;<span class="keyword">class </span>Graph;</div>
<div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160; </div>
<div class="line"><a name="l00029"></a><span class="lineno"><a class="line" href="namespacearmnn.xhtml#a08eb5e20e6b0ce43c5729e8f88b6a910">   29</a></span>&#160;<span class="keyword">using</span> <a class="code" href="namespacearmnn.xhtml#a08eb5e20e6b0ce43c5729e8f88b6a910">NetworkImplPtr</a> = std::unique_ptr&lt;<a class="code" href="classarmnn_1_1_network_impl.xhtml">NetworkImpl</a>, void (*)(<a class="code" href="classarmnn_1_1_network_impl.xhtml">NetworkImpl</a>* network)&gt;;</div>
<div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;<span class="comment"></span> </div>
<div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;<span class="comment">/// Private implementation of INetwork.</span></div>
<div class="line"><a name="l00032"></a><span class="lineno"><a class="line" href="classarmnn_1_1_network_impl.xhtml">   32</a></span>&#160;<span class="comment"></span><span class="keyword">class </span><a class="code" href="classarmnn_1_1_network_impl.xhtml">NetworkImpl</a></div>
<div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;{</div>
<div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;<span class="keyword">public</span>:</div>
<div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;    <a class="code" href="classarmnn_1_1_network_impl.xhtml#a1ba03515c88a4c042bffa446d306caf0">NetworkImpl</a>(<span class="keyword">const</span> <a class="code" href="namespacearmnn.xhtml#a4de71c3661093e5c4ae7775114f43413">NetworkOptions</a>&amp; networkOptions = {});</div>
<div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;    <a class="code" href="classarmnn_1_1_network_impl.xhtml#ad443897d51b291c83d81d809af07f4e0">~NetworkImpl</a>();</div>
<div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160; </div>
<div class="line"><a name="l00038"></a><span class="lineno"><a class="line" href="classarmnn_1_1_network_impl.xhtml#afe0a4f719f9752a405e71878da7012ba">   38</a></span>&#160;    <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_graph.xhtml">Graph</a>&amp; <a class="code" href="classarmnn_1_1_network_impl.xhtml#afe0a4f719f9752a405e71878da7012ba">GetGraph</a>()<span class="keyword"> const</span></div>
<div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;<span class="keyword">    </span>{ <span class="keywordflow">return</span> *m_Graph; }</div>
<div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160; </div>
<div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;    <a class="code" href="namespacearmnn.xhtml#a67a0db04d321a74b7e7fcfd3f1a3f70b">Status</a> <a class="code" href="classarmnn_1_1_network_impl.xhtml#aff3fde909d22ed157046682e70129259">PrintGraph</a>();</div>
<div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160; </div>
<div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;    <a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml">IConnectableLayer</a>* <a class="code" href="classarmnn_1_1_network_impl.xhtml#aa6c1c42ea44777302e87ce0fad5ac510">AddInputLayer</a>(<a class="code" href="namespacearmnn.xhtml#ab8cf8f9fb6792e654c2d8d8382f6f01b">LayerBindingId</a> <span class="keywordtype">id</span>, <span class="keyword">const</span> <span class="keywordtype">char</span>* name = <span class="keyword">nullptr</span>);</div>
<div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160; </div>
<div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;    <a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml">IConnectableLayer</a>* <a class="code" href="classarmnn_1_1_network_impl.xhtml#aa51350bdd4976f3dd5a4e9d00a906b2c">AddActivationLayer</a>(<span class="keyword">const</span> <a class="code" href="structarmnn_1_1_activation_descriptor.xhtml">ActivationDescriptor</a>&amp; activationDescriptor,</div>
<div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;                                          <span class="keyword">const</span> <span class="keywordtype">char</span>* name = <span class="keyword">nullptr</span>);</div>
<div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;    <a class="code" href="_deprecated_8hpp.xhtml#af16119336bd0dfbfbc83fc283151067e">ARMNN_DEPRECATED_MSG_REMOVAL_DATE</a>(<span class="stringliteral">&quot;Use AddElementwiseBinaryLayer instead&quot;</span>, <span class="stringliteral">&quot;24.02&quot;</span>)</div>
<div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;    <a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml">IConnectableLayer</a>* <a class="code" href="classarmnn_1_1_network_impl.xhtml#a39f1b38d89c4de186742eafcbb3b1319">AddAdditionLayer</a>(const <span class="keywordtype">char</span>* name = <span class="keywordtype">nullptr</span>);</div>
<div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160; </div>
<div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;    <a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml">IConnectableLayer</a>* <a class="code" href="classarmnn_1_1_network_impl.xhtml#adc8c1c505bca8233fe238b3b7fb80200">AddArgMinMaxLayer</a>(const <a class="code" href="structarmnn_1_1_arg_min_max_descriptor.xhtml">ArgMinMaxDescriptor</a>&amp; desc,</div>
<div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;                                         const <span class="keywordtype">char</span>* name = <span class="keywordtype">nullptr</span>);</div>
<div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160; </div>
<div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;    <a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml">IConnectableLayer</a>* <a class="code" href="classarmnn_1_1_network_impl.xhtml#a7b74bd646ccf7ee6eaf3e23a958606ff">AddBatchMatMulLayer</a>(const <a class="code" href="structarmnn_1_1_batch_mat_mul_descriptor.xhtml">BatchMatMulDescriptor</a>&amp; desc,</div>
<div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;                                           const <span class="keywordtype">char</span>* name = <span class="keywordtype">nullptr</span>);</div>
<div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160; </div>
<div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;    <a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml">IConnectableLayer</a>* <a class="code" href="classarmnn_1_1_network_impl.xhtml#a8f798e19187ac7ae6ae6153ee64ab645">AddBatchNormalizationLayer</a>(const <a class="code" href="structarmnn_1_1_batch_normalization_descriptor.xhtml">BatchNormalizationDescriptor</a>&amp; desc,</div>
<div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;                                                  const <a class="code" href="classarmnn_1_1_const_tensor.xhtml">ConstTensor</a>&amp; mean,</div>
<div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;                                                  const <a class="code" href="classarmnn_1_1_const_tensor.xhtml">ConstTensor</a>&amp; variance,</div>
<div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;                                                  const <a class="code" href="classarmnn_1_1_const_tensor.xhtml">ConstTensor</a>&amp; beta,</div>
<div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;                                                  const <a class="code" href="classarmnn_1_1_const_tensor.xhtml">ConstTensor</a>&amp; gamma,</div>
<div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;                                                  const <span class="keywordtype">char</span>* name = <span class="keywordtype">nullptr</span>);</div>
<div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160; </div>
<div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;    <a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml">IConnectableLayer</a>* <a class="code" href="classarmnn_1_1_network_impl.xhtml#a9a9bcc00ae3d96343c93b437d6f77088">AddBatchToSpaceNdLayer</a>(const <a class="code" href="structarmnn_1_1_batch_to_space_nd_descriptor.xhtml">BatchToSpaceNdDescriptor</a>&amp; batchToSpaceNdDescriptor,</div>
<div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;                                              const <span class="keywordtype">char</span>* name = <span class="keywordtype">nullptr</span>);</div>
<div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160; </div>
<div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;    <a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml">IConnectableLayer</a>* <a class="code" href="classarmnn_1_1_network_impl.xhtml#a72f7f58c37d9d856fcb648b5fa68cf59">AddCastLayer</a>(const <span class="keywordtype">char</span>* name = <span class="keywordtype">nullptr</span>);</div>
<div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160; </div>
<div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;    <a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml">IConnectableLayer</a>* <a class="code" href="classarmnn_1_1_network_impl.xhtml#a5c58d2b496d24e637f613af857aa3c3d">AddChannelShuffleLayer</a>(const <a class="code" href="structarmnn_1_1_channel_shuffle_descriptor.xhtml">ChannelShuffleDescriptor</a>&amp; channelShuffleDescriptor,</div>
<div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;                                              const <span class="keywordtype">char</span>* name = <span class="keywordtype">nullptr</span>);</div>
<div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160; </div>
<div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;    <a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml">IConnectableLayer</a>* <a class="code" href="classarmnn_1_1_network_impl.xhtml#ac7dca3e9f2ab2f2c64b42fc59a67188a">AddComparisonLayer</a>(const <a class="code" href="structarmnn_1_1_comparison_descriptor.xhtml">ComparisonDescriptor</a>&amp; comparisonDescriptor,</div>
<div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;                                          const <span class="keywordtype">char</span>* name = <span class="keywordtype">nullptr</span>);</div>
<div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160; </div>
<div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;    <a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml">IConnectableLayer</a>* <a class="code" href="classarmnn_1_1_network_impl.xhtml#aea1059833739d3dccebb3a03ec35a1e6">AddConcatLayer</a>(const <a class="code" href="structarmnn_1_1_origins_descriptor.xhtml">ConcatDescriptor</a>&amp; concatDescriptor,</div>
<div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;                                      const <span class="keywordtype">char</span>* name = <span class="keywordtype">nullptr</span>);</div>
<div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160; </div>
<div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;    <a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml">IConnectableLayer</a>* <a class="code" href="classarmnn_1_1_network_impl.xhtml#a383e74ef080d4a81b8b371be4b840248">AddConvolution2dLayer</a>(const <a class="code" href="structarmnn_1_1_convolution2d_descriptor.xhtml">Convolution2dDescriptor</a>&amp; convolution2dDescriptor,</div>
<div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;                                             const <span class="keywordtype">char</span>* name = <span class="keywordtype">nullptr</span>);</div>
<div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160; </div>
<div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;    <a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml">IConnectableLayer</a>* <a class="code" href="classarmnn_1_1_network_impl.xhtml#a43de8213707de0e76d80a32cd4b9b482">AddConvolution3dLayer</a>(const <a class="code" href="structarmnn_1_1_convolution3d_descriptor.xhtml">Convolution3dDescriptor</a>&amp; convolution3dDescriptor,</div>
<div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;                                             const <span class="keywordtype">char</span>* name = <span class="keywordtype">nullptr</span>);</div>
<div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160; </div>
<div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;    <a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml">IConnectableLayer</a>* <a class="code" href="classarmnn_1_1_network_impl.xhtml#a1aa567f46c30960851c02847dc7b4215">AddConstantLayer</a>(const <a class="code" href="classarmnn_1_1_const_tensor.xhtml">ConstTensor</a>&amp; input, const <span class="keywordtype">char</span>* name = <span class="keywordtype">nullptr</span>);</div>
<div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160; </div>
<div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;    <a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml">IConnectableLayer</a>* <a class="code" href="classarmnn_1_1_network_impl.xhtml#af1853466264ac187607c96b501a74e2b">AddDepthToSpaceLayer</a>(const <a class="code" href="structarmnn_1_1_space_to_depth_descriptor.xhtml">DepthToSpaceDescriptor</a>&amp; depthToSpaceDescriptor,</div>
<div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;                                            const <span class="keywordtype">char</span>* name = <span class="keywordtype">nullptr</span>);</div>
<div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160; </div>
<div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;    <a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml">IConnectableLayer</a>* <a class="code" href="classarmnn_1_1_network_impl.xhtml#ac6771c8752811fcfa91b3f0dee748144">AddDepthwiseConvolution2dLayer</a>(const <a class="code" href="structarmnn_1_1_depthwise_convolution2d_descriptor.xhtml">DepthwiseConvolution2dDescriptor</a>&amp; convolution2dDescriptor,</div>
<div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;                                                      const <span class="keywordtype">char</span>* name = <span class="keywordtype">nullptr</span>);</div>
<div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160; </div>
<div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;    <a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml">IConnectableLayer</a>* <a class="code" href="classarmnn_1_1_network_impl.xhtml#a357aca04172ed22fa32e5a69122b0fec">AddDequantizeLayer</a>(const <span class="keywordtype">char</span>* name = <span class="keywordtype">nullptr</span>);</div>
<div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160; </div>
<div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;    <a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml">IConnectableLayer</a>* <a class="code" href="classarmnn_1_1_network_impl.xhtml#ac1134a94265293ea7347180260f787d2">AddDetectionPostProcessLayer</a>(const <a class="code" href="structarmnn_1_1_detection_post_process_descriptor.xhtml">DetectionPostProcessDescriptor</a>&amp; descriptor,</div>
<div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;                                                    const <a class="code" href="classarmnn_1_1_const_tensor.xhtml">ConstTensor</a>&amp; anchors,</div>
<div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;                                                    const <span class="keywordtype">char</span>* name = <span class="keywordtype">nullptr</span>);</div>
<div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160; </div>
<div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;    <a class="code" href="_deprecated_8hpp.xhtml#af16119336bd0dfbfbc83fc283151067e">ARMNN_DEPRECATED_MSG_REMOVAL_DATE</a>(&quot;Use <a class="code" href="classarmnn_1_1_network_impl.xhtml#aab976306ba3424cbc0c7ea33417d718d">AddElementwiseBinaryLayer</a> instead&quot;, &quot;24.02&quot;)</div>
<div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;    <a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml">IConnectableLayer</a>* <a class="code" href="classarmnn_1_1_network_impl.xhtml#a0aeb4e528cf6ba4b7caca14a94fbcafe">AddDivisionLayer</a>(const <span class="keywordtype">char</span>* name = <span class="keywordtype">nullptr</span>);</div>
<div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160; </div>
<div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;    <a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml">IConnectableLayer</a>* <a class="code" href="classarmnn_1_1_network_impl.xhtml#aab976306ba3424cbc0c7ea33417d718d">AddElementwiseBinaryLayer</a>(const <a class="code" href="structarmnn_1_1_elementwise_binary_descriptor.xhtml">ElementwiseBinaryDescriptor</a>&amp; elementwiseBinaryDescriptor,</div>
<div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;                                                 const <span class="keywordtype">char</span>* name = <span class="keywordtype">nullptr</span>);</div>
<div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160; </div>
<div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;    <a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml">IConnectableLayer</a>* <a class="code" href="classarmnn_1_1_network_impl.xhtml#a095a9b700dc857edc23c5d3bf088919f">AddElementwiseUnaryLayer</a>(const <a class="code" href="structarmnn_1_1_elementwise_unary_descriptor.xhtml">ElementwiseUnaryDescriptor</a>&amp; elementwiseUnaryDescriptor,</div>
<div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;                                                const <span class="keywordtype">char</span>* name = <span class="keywordtype">nullptr</span>);</div>
<div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160; </div>
<div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;    <a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml">IConnectableLayer</a>* <a class="code" href="classarmnn_1_1_network_impl.xhtml#a0f19808bdada45222e72edf7671a275a">AddMergeLayer</a>(const <span class="keywordtype">char</span>* name = <span class="keywordtype">nullptr</span>);</div>
<div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160; </div>
<div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;    <a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml">IConnectableLayer</a>* <a class="code" href="classarmnn_1_1_network_impl.xhtml#afc94c35c0bbe852a60046bf2e756b2e0">AddFillLayer</a>(const <a class="code" href="structarmnn_1_1_fill_descriptor.xhtml">FillDescriptor</a>&amp; fillDescriptor,</div>
<div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;                                    const <span class="keywordtype">char</span>* name = <span class="keywordtype">nullptr</span>);</div>
<div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160; </div>
<div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;    <a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml">IConnectableLayer</a>* <a class="code" href="classarmnn_1_1_network_impl.xhtml#a435ea88480b8645026dd45fd692663a1">AddFloorLayer</a>(const <span class="keywordtype">char</span>* name = <span class="keywordtype">nullptr</span>);</div>
<div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160; </div>
<div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;    <a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml">IConnectableLayer</a>* <a class="code" href="classarmnn_1_1_network_impl.xhtml#a471991a84030eb3ae601da2bee757870">AddFullyConnectedLayer</a>(const <a class="code" href="structarmnn_1_1_fully_connected_descriptor.xhtml">FullyConnectedDescriptor</a>&amp; fullyConnectedDescriptor,</div>
<div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;                                              const <span class="keywordtype">char</span>* name = <span class="keywordtype">nullptr</span>);</div>
<div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160; </div>
<div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;    <a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml">IConnectableLayer</a>* <a class="code" href="classarmnn_1_1_network_impl.xhtml#aaf5e9645806f49d0fcd7ac07ba187f4e">AddGatherLayer</a>(const <a class="code" href="structarmnn_1_1_gather_descriptor.xhtml">GatherDescriptor</a>&amp; gatherDescriptor,</div>
<div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;                                      const <span class="keywordtype">char</span>* name = <span class="keywordtype">nullptr</span>);</div>
<div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160; </div>
<div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;    <a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml">IConnectableLayer</a>* <a class="code" href="classarmnn_1_1_network_impl.xhtml#af776e284b9e2c4a3563abb8cf5e8ac5e">AddGatherNdLayer</a>(const <span class="keywordtype">char</span>* name = <span class="keywordtype">nullptr</span>);</div>
<div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160; </div>
<div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;    <a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml">IConnectableLayer</a>* <a class="code" href="classarmnn_1_1_network_impl.xhtml#abd61d3e7ab67551c75bc219bbc4baeb5">AddInstanceNormalizationLayer</a>(const <a class="code" href="structarmnn_1_1_instance_normalization_descriptor.xhtml">InstanceNormalizationDescriptor</a>&amp; desc,</div>
<div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;                                                     const <span class="keywordtype">char</span>* name = <span class="keywordtype">nullptr</span>);</div>
<div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160; </div>
<div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;    <a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml">IConnectableLayer</a>* <a class="code" href="classarmnn_1_1_network_impl.xhtml#aaff51346dadec2c1430abf007fed4cc9">AddL2NormalizationLayer</a>(const <a class="code" href="structarmnn_1_1_l2_normalization_descriptor.xhtml">L2NormalizationDescriptor</a>&amp; desc,</div>
<div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;                                               const <span class="keywordtype">char</span>* name = <span class="keywordtype">nullptr</span>);</div>
<div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160; </div>
<div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;    <a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml">IConnectableLayer</a>* <a class="code" href="classarmnn_1_1_network_impl.xhtml#a83b33973ca12078166b2436b313627b9">AddLogSoftmaxLayer</a>(const <a class="code" href="structarmnn_1_1_softmax_descriptor.xhtml">LogSoftmaxDescriptor</a>&amp; logSoftmaxDescriptor,</div>
<div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;                                          const <span class="keywordtype">char</span>* name = <span class="keywordtype">nullptr</span>);</div>
<div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160; </div>
<div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;    <a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml">IConnectableLayer</a>* <a class="code" href="classarmnn_1_1_network_impl.xhtml#a1ff7534e1254dfb3ef8288194cca7ce3">AddLogicalBinaryLayer</a>(const <a class="code" href="structarmnn_1_1_logical_binary_descriptor.xhtml">LogicalBinaryDescriptor</a>&amp; logicalBinaryDescriptor,</div>
<div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;                                             const <span class="keywordtype">char</span>* name = <span class="keywordtype">nullptr</span>);</div>
<div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160; </div>
<div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;    <a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml">IConnectableLayer</a>* <a class="code" href="classarmnn_1_1_network_impl.xhtml#a0a2fdd4f442952c97a8f24de6700473a">AddLstmLayer</a>(const <a class="code" href="structarmnn_1_1_lstm_descriptor.xhtml">LstmDescriptor</a>&amp; descriptor,</div>
<div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;                                    const <a class="code" href="structarmnn_1_1_lstm_input_params.xhtml">LstmInputParams</a>&amp; params,</div>
<div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;                                    const <span class="keywordtype">char</span>* name = <span class="keywordtype">nullptr</span>);</div>
<div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160; </div>
<div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;    <a class="code" href="_deprecated_8hpp.xhtml#af16119336bd0dfbfbc83fc283151067e">ARMNN_DEPRECATED_MSG_REMOVAL_DATE</a>(&quot;Use <a class="code" href="classarmnn_1_1_network_impl.xhtml#aab976306ba3424cbc0c7ea33417d718d">AddElementwiseBinaryLayer</a> instead&quot;, &quot;24.02&quot;)</div>
<div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;    <a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml">IConnectableLayer</a>* <a class="code" href="classarmnn_1_1_network_impl.xhtml#a57590d7777211673d2052f702f0b07a1">AddMaximumLayer</a>(const <span class="keywordtype">char</span>* name = <span class="keywordtype">nullptr</span>);</div>
<div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160; </div>
<div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;    <a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml">IConnectableLayer</a>* <a class="code" href="classarmnn_1_1_network_impl.xhtml#ad4726f9b7dd11db250d2a494a8a39494">AddMeanLayer</a>(const <a class="code" href="structarmnn_1_1_mean_descriptor.xhtml">MeanDescriptor</a>&amp; meanDescriptor, const <span class="keywordtype">char</span>* name = <span class="keywordtype">nullptr</span>);</div>
<div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160; </div>
<div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;    <a class="code" href="_deprecated_8hpp.xhtml#af16119336bd0dfbfbc83fc283151067e">ARMNN_DEPRECATED_MSG_REMOVAL_DATE</a>(&quot;Use <a class="code" href="classarmnn_1_1_network_impl.xhtml#aab976306ba3424cbc0c7ea33417d718d">AddElementwiseBinaryLayer</a> instead&quot;, &quot;24.02&quot;)</div>
<div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;    <a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml">IConnectableLayer</a>* <a class="code" href="classarmnn_1_1_network_impl.xhtml#a4bfd8dee1a0315b651e977c672c0847c">AddMinimumLayer</a>(const <span class="keywordtype">char</span>* name = <span class="keywordtype">nullptr</span>);</div>
<div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160; </div>
<div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;    <a class="code" href="_deprecated_8hpp.xhtml#af16119336bd0dfbfbc83fc283151067e">ARMNN_DEPRECATED_MSG_REMOVAL_DATE</a>(&quot;Use <a class="code" href="classarmnn_1_1_network_impl.xhtml#aab976306ba3424cbc0c7ea33417d718d">AddElementwiseBinaryLayer</a> instead&quot;, &quot;24.02&quot;)</div>
<div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;    <a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml">IConnectableLayer</a>* <a class="code" href="classarmnn_1_1_network_impl.xhtml#abb59f6ba9988dae88e0f48e68d87fc32">AddMultiplicationLayer</a>(const <span class="keywordtype">char</span>* name = <span class="keywordtype">nullptr</span>);</div>
<div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160; </div>
<div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;    <a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml">IConnectableLayer</a>* <a class="code" href="classarmnn_1_1_network_impl.xhtml#a6c5376053e1f875776d7bc36fd0b7d45">AddNormalizationLayer</a>(const <a class="code" href="structarmnn_1_1_normalization_descriptor.xhtml">NormalizationDescriptor</a>&amp; normalizationDescriptor,</div>
<div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;                                             const <span class="keywordtype">char</span>* name = <span class="keywordtype">nullptr</span>);</div>
<div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160; </div>
<div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;    <a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml">IConnectableLayer</a>* <a class="code" href="classarmnn_1_1_network_impl.xhtml#af5790069aa11fd1c5bb2e17cecb06528">AddOutputLayer</a>(<a class="code" href="namespacearmnn.xhtml#ab8cf8f9fb6792e654c2d8d8382f6f01b">LayerBindingId</a> <span class="keywordtype">id</span>, const <span class="keywordtype">char</span>* name = <span class="keywordtype">nullptr</span>);</div>
<div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160; </div>
<div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;    <a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml">IConnectableLayer</a>* <a class="code" href="classarmnn_1_1_network_impl.xhtml#a6e2df484ecc65bc82712590b96e04df4">AddPadLayer</a>(const <a class="code" href="structarmnn_1_1_pad_descriptor.xhtml">PadDescriptor</a>&amp; padDescriptor, const <span class="keywordtype">char</span>* name = <span class="keywordtype">nullptr</span>);</div>
<div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160; </div>
<div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;    <a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml">IConnectableLayer</a>* <a class="code" href="classarmnn_1_1_network_impl.xhtml#a11f49d84f0cfd8df65f4d5206cd43b6d">AddPermuteLayer</a>(const <a class="code" href="structarmnn_1_1_permute_descriptor.xhtml">PermuteDescriptor</a>&amp; permuteDescriptor,</div>
<div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;                                       const <span class="keywordtype">char</span>* name = <span class="keywordtype">nullptr</span>);</div>
<div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160; </div>
<div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;    <a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml">IConnectableLayer</a>* <a class="code" href="classarmnn_1_1_network_impl.xhtml#ae913b4351b7027f37eb5657dd7867733">AddPooling2dLayer</a>(const <a class="code" href="structarmnn_1_1_pooling2d_descriptor.xhtml">Pooling2dDescriptor</a>&amp; pooling2dDescriptor,</div>
<div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160;                                         const <span class="keywordtype">char</span>* name = <span class="keywordtype">nullptr</span>);</div>
<div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160; </div>
<div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160;    <a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml">IConnectableLayer</a>* <a class="code" href="classarmnn_1_1_network_impl.xhtml#aee282f8e3379d3f5bed1032d20884248">AddPooling3dLayer</a>(const <a class="code" href="structarmnn_1_1_pooling3d_descriptor.xhtml">Pooling3dDescriptor</a>&amp; pooling3dDescriptor,</div>
<div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160;                                         const <span class="keywordtype">char</span>* name = <span class="keywordtype">nullptr</span>);</div>
<div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160; </div>
<div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;    <a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml">IConnectableLayer</a>* <a class="code" href="classarmnn_1_1_network_impl.xhtml#aee3a15d2fa419f50a8ac45e6d3c11e16">AddPrecompiledLayer</a>(const <a class="code" href="structarmnn_1_1_pre_compiled_descriptor.xhtml">PreCompiledDescriptor</a>&amp; preCompiledDescriptor,</div>
<div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160;                                           <a class="code" href="namespacearmnn.xhtml#af362583b7b4c471c434cb0fdb86c2ae2">CompiledBlobPtr</a> compiledBlobPtr,</div>
<div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160;                                           const <a class="code" href="classarmnn_1_1_optional.xhtml">Optional</a>&lt;<a class="code" href="classarmnn_1_1_backend_id.xhtml">BackendId</a>&gt;&amp; backend,</div>
<div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160;                                           const <span class="keywordtype">char</span>* name = <span class="keywordtype">nullptr</span>);</div>
<div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160; </div>
<div class="line"><a name="l00169"></a><span class="lineno">  169</span>&#160;    <a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml">IConnectableLayer</a>* <a class="code" href="classarmnn_1_1_network_impl.xhtml#a6d614a503a34ea3712b388aa4340ddbe">AddPreluLayer</a>(const <span class="keywordtype">char</span>* name = <span class="keywordtype">nullptr</span>);</div>
<div class="line"><a name="l00170"></a><span class="lineno">  170</span>&#160; </div>
<div class="line"><a name="l00171"></a><span class="lineno">  171</span>&#160;    <a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml">IConnectableLayer</a>* <a class="code" href="classarmnn_1_1_network_impl.xhtml#a0b426a3feffc76e66d73b5761806e899">AddQuantizeLayer</a>(const <span class="keywordtype">char</span>* name = <span class="keywordtype">nullptr</span>);</div>
<div class="line"><a name="l00172"></a><span class="lineno">  172</span>&#160; </div>
<div class="line"><a name="l00173"></a><span class="lineno">  173</span>&#160;    <a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml">IConnectableLayer</a>* <a class="code" href="classarmnn_1_1_network_impl.xhtml#a2acbae0b9e98c94b843677484775c86a">AddQLstmLayer</a>(const <a class="code" href="structarmnn_1_1_q_lstm_descriptor.xhtml">QLstmDescriptor</a>&amp; descriptor,</div>
<div class="line"><a name="l00174"></a><span class="lineno">  174</span>&#160;                                     const <a class="code" href="structarmnn_1_1_lstm_input_params.xhtml">LstmInputParams</a>&amp; params,</div>
<div class="line"><a name="l00175"></a><span class="lineno">  175</span>&#160;                                     const <span class="keywordtype">char</span>* name = <span class="keywordtype">nullptr</span>);</div>
<div class="line"><a name="l00176"></a><span class="lineno">  176</span>&#160; </div>
<div class="line"><a name="l00177"></a><span class="lineno">  177</span>&#160;    <a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml">IConnectableLayer</a>* <a class="code" href="classarmnn_1_1_network_impl.xhtml#a40067b05f30a3ab65568c826df7a8ea7">AddQuantizedLstmLayer</a>(const <a class="code" href="structarmnn_1_1_quantized_lstm_input_params.xhtml">QuantizedLstmInputParams</a>&amp; params,</div>
<div class="line"><a name="l00178"></a><span class="lineno">  178</span>&#160;                                             const <span class="keywordtype">char</span>* name = <span class="keywordtype">nullptr</span>);</div>
<div class="line"><a name="l00179"></a><span class="lineno">  179</span>&#160; </div>
<div class="line"><a name="l00180"></a><span class="lineno">  180</span>&#160;    <a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml">IConnectableLayer</a>* <a class="code" href="classarmnn_1_1_network_impl.xhtml#a25563024ec66627ee83727244a53e944">AddRankLayer</a>(const <span class="keywordtype">char</span>* name = <span class="keywordtype">nullptr</span>);</div>
<div class="line"><a name="l00181"></a><span class="lineno">  181</span>&#160; </div>
<div class="line"><a name="l00182"></a><span class="lineno">  182</span>&#160;    <a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml">IConnectableLayer</a>* <a class="code" href="classarmnn_1_1_network_impl.xhtml#ae0cfae1ea51669892608a1a060d24fa0">AddReduceLayer</a>(const <a class="code" href="structarmnn_1_1_reduce_descriptor.xhtml">ReduceDescriptor</a>&amp; reduceDescriptor,</div>
<div class="line"><a name="l00183"></a><span class="lineno">  183</span>&#160;                                      const <span class="keywordtype">char</span>* name = <span class="keywordtype">nullptr</span>);</div>
<div class="line"><a name="l00184"></a><span class="lineno">  184</span>&#160; </div>
<div class="line"><a name="l00185"></a><span class="lineno">  185</span>&#160;    <a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml">IConnectableLayer</a>* <a class="code" href="classarmnn_1_1_network_impl.xhtml#ad97411f1fcb2c30c212483d8c673506f">AddResizeLayer</a>(const <a class="code" href="structarmnn_1_1_resize_descriptor.xhtml">ResizeDescriptor</a>&amp; resizeDescriptor,</div>
<div class="line"><a name="l00186"></a><span class="lineno">  186</span>&#160;                                      const <span class="keywordtype">char</span>* name = <span class="keywordtype">nullptr</span>);</div>
<div class="line"><a name="l00187"></a><span class="lineno">  187</span>&#160; </div>
<div class="line"><a name="l00188"></a><span class="lineno">  188</span>&#160;    <a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml">IConnectableLayer</a>* <a class="code" href="classarmnn_1_1_network_impl.xhtml#a8a3380be13fba749fc4208214b049347">AddReshapeLayer</a>(const <a class="code" href="structarmnn_1_1_reshape_descriptor.xhtml">ReshapeDescriptor</a>&amp; reshapeDescriptor,</div>
<div class="line"><a name="l00189"></a><span class="lineno">  189</span>&#160;                                       const <span class="keywordtype">char</span>* name = <span class="keywordtype">nullptr</span>);</div>
<div class="line"><a name="l00190"></a><span class="lineno">  190</span>&#160; </div>
<div class="line"><a name="l00191"></a><span class="lineno">  191</span>&#160;    <a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml">IConnectableLayer</a>* <a class="code" href="classarmnn_1_1_network_impl.xhtml#af9dd4b5273829b846ab83b3ae7f3defc">AddShapeLayer</a>(const <span class="keywordtype">char</span>* name = <span class="keywordtype">nullptr</span>);</div>
<div class="line"><a name="l00192"></a><span class="lineno">  192</span>&#160; </div>
<div class="line"><a name="l00193"></a><span class="lineno">  193</span>&#160;    <a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml">IConnectableLayer</a>* <a class="code" href="classarmnn_1_1_network_impl.xhtml#a8de6b047fcaff95df48dca683e1f3aa4">AddSliceLayer</a>(const <a class="code" href="structarmnn_1_1_slice_descriptor.xhtml">SliceDescriptor</a>&amp; sliceDescriptor, const <span class="keywordtype">char</span>* name = <span class="keywordtype">nullptr</span>);</div>
<div class="line"><a name="l00194"></a><span class="lineno">  194</span>&#160; </div>
<div class="line"><a name="l00195"></a><span class="lineno">  195</span>&#160;    <a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml">IConnectableLayer</a>* <a class="code" href="classarmnn_1_1_network_impl.xhtml#a30528a3bd85a0dba158bd14e252bd68a">AddSoftmaxLayer</a>(const <a class="code" href="structarmnn_1_1_softmax_descriptor.xhtml">SoftmaxDescriptor</a>&amp; softmaxDescriptor,</div>
<div class="line"><a name="l00196"></a><span class="lineno">  196</span>&#160;                                       const <span class="keywordtype">char</span>* name = <span class="keywordtype">nullptr</span>);</div>
<div class="line"><a name="l00197"></a><span class="lineno">  197</span>&#160; </div>
<div class="line"><a name="l00198"></a><span class="lineno">  198</span>&#160;    <a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml">IConnectableLayer</a>* <a class="code" href="classarmnn_1_1_network_impl.xhtml#a6f6d81d8a4f1f85f3616e8306760061c">AddSplitterLayer</a>(const <a class="code" href="structarmnn_1_1_views_descriptor.xhtml">ViewsDescriptor</a>&amp; splitterDescriptor,</div>
<div class="line"><a name="l00199"></a><span class="lineno">  199</span>&#160;                                        const <span class="keywordtype">char</span>* name = <span class="keywordtype">nullptr</span>);</div>
<div class="line"><a name="l00200"></a><span class="lineno">  200</span>&#160; </div>
<div class="line"><a name="l00201"></a><span class="lineno">  201</span>&#160;    <a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml">IConnectableLayer</a>* <a class="code" href="classarmnn_1_1_network_impl.xhtml#a72b9d30e9d555bb5c35460b62faedf0d">AddSpaceToBatchNdLayer</a>(const <a class="code" href="structarmnn_1_1_space_to_batch_nd_descriptor.xhtml">SpaceToBatchNdDescriptor</a>&amp; spaceToBatchNdDescriptor,</div>
<div class="line"><a name="l00202"></a><span class="lineno">  202</span>&#160;                                              const <span class="keywordtype">char</span>* name = <span class="keywordtype">nullptr</span>);</div>
<div class="line"><a name="l00203"></a><span class="lineno">  203</span>&#160; </div>
<div class="line"><a name="l00204"></a><span class="lineno">  204</span>&#160;    <a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml">IConnectableLayer</a>* <a class="code" href="classarmnn_1_1_network_impl.xhtml#a19bad0cc50526ca9f4f84a688812cdf5">AddSpaceToDepthLayer</a>(const <a class="code" href="structarmnn_1_1_space_to_depth_descriptor.xhtml">SpaceToDepthDescriptor</a>&amp; spaceToDepthDescriptor,</div>
<div class="line"><a name="l00205"></a><span class="lineno">  205</span>&#160;                                            const <span class="keywordtype">char</span>* name = <span class="keywordtype">nullptr</span>);</div>
<div class="line"><a name="l00206"></a><span class="lineno">  206</span>&#160; </div>
<div class="line"><a name="l00207"></a><span class="lineno">  207</span>&#160;    <a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml">IConnectableLayer</a>* <a class="code" href="classarmnn_1_1_network_impl.xhtml#a446181daeb60b49cbcfd9f907f974ec1">AddStackLayer</a>(const <a class="code" href="structarmnn_1_1_stack_descriptor.xhtml">StackDescriptor</a>&amp; stackDescriptor,</div>
<div class="line"><a name="l00208"></a><span class="lineno">  208</span>&#160;                                     const <span class="keywordtype">char</span>* name = <span class="keywordtype">nullptr</span>);</div>
<div class="line"><a name="l00209"></a><span class="lineno">  209</span>&#160; </div>
<div class="line"><a name="l00210"></a><span class="lineno">  210</span>&#160;    <a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml">IConnectableLayer</a>* <a class="code" href="classarmnn_1_1_network_impl.xhtml#a74894d085e78ff80f45fc09dd2381f08">AddStandInLayer</a>(const <a class="code" href="structarmnn_1_1_stand_in_descriptor.xhtml">StandInDescriptor</a>&amp; descriptor,</div>
<div class="line"><a name="l00211"></a><span class="lineno">  211</span>&#160;                                       const <span class="keywordtype">char</span>* name = <span class="keywordtype">nullptr</span>);</div>
<div class="line"><a name="l00212"></a><span class="lineno">  212</span>&#160; </div>
<div class="line"><a name="l00213"></a><span class="lineno">  213</span>&#160;    <a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml">IConnectableLayer</a>* <a class="code" href="classarmnn_1_1_network_impl.xhtml#ac5c93cad39a690af862d49ffaec0d3c0">AddStridedSliceLayer</a>(const <a class="code" href="structarmnn_1_1_strided_slice_descriptor.xhtml">StridedSliceDescriptor</a>&amp; stridedSliceDescriptor,</div>
<div class="line"><a name="l00214"></a><span class="lineno">  214</span>&#160;                                            const <span class="keywordtype">char</span>* name = <span class="keywordtype">nullptr</span>);</div>
<div class="line"><a name="l00215"></a><span class="lineno">  215</span>&#160; </div>
<div class="line"><a name="l00216"></a><span class="lineno">  216</span>&#160;    <a class="code" href="_deprecated_8hpp.xhtml#af16119336bd0dfbfbc83fc283151067e">ARMNN_DEPRECATED_MSG_REMOVAL_DATE</a>(&quot;Use <a class="code" href="classarmnn_1_1_network_impl.xhtml#aab976306ba3424cbc0c7ea33417d718d">AddElementwiseBinaryLayer</a> instead&quot;, &quot;24.02&quot;)</div>
<div class="line"><a name="l00217"></a><span class="lineno">  217</span>&#160;    <a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml">IConnectableLayer</a>* <a class="code" href="classarmnn_1_1_network_impl.xhtml#af13795cdf49e63d8bc3cb409592cdb9d">AddSubtractionLayer</a>(const <span class="keywordtype">char</span>* name = <span class="keywordtype">nullptr</span>);</div>
<div class="line"><a name="l00218"></a><span class="lineno">  218</span>&#160; </div>
<div class="line"><a name="l00219"></a><span class="lineno">  219</span>&#160;    <a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml">IConnectableLayer</a>* <a class="code" href="classarmnn_1_1_network_impl.xhtml#a26e69cda5fe9642f9198c24ae5fdf9bc">AddSwitchLayer</a>(const <span class="keywordtype">char</span>* name = <span class="keywordtype">nullptr</span>);</div>
<div class="line"><a name="l00220"></a><span class="lineno">  220</span>&#160; </div>
<div class="line"><a name="l00221"></a><span class="lineno">  221</span>&#160;    <a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml">IConnectableLayer</a>* <a class="code" href="classarmnn_1_1_network_impl.xhtml#a41fd7b56923d5625bac2cbfebed1a393">AddTransposeConvolution2dLayer</a>(const <a class="code" href="structarmnn_1_1_transpose_convolution2d_descriptor.xhtml">TransposeConvolution2dDescriptor</a>&amp; descriptor,</div>
<div class="line"><a name="l00222"></a><span class="lineno">  222</span>&#160;                                                      const <a class="code" href="classarmnn_1_1_const_tensor.xhtml">ConstTensor</a>&amp; weights,</div>
<div class="line"><a name="l00223"></a><span class="lineno">  223</span>&#160;                                                      const <a class="code" href="classarmnn_1_1_optional.xhtml">Optional</a>&lt;<a class="code" href="classarmnn_1_1_const_tensor.xhtml">ConstTensor</a>&gt;&amp; biases,</div>
<div class="line"><a name="l00224"></a><span class="lineno">  224</span>&#160;                                                      const <span class="keywordtype">char</span>* name = <span class="keywordtype">nullptr</span>);</div>
<div class="line"><a name="l00225"></a><span class="lineno">  225</span>&#160; </div>
<div class="line"><a name="l00226"></a><span class="lineno">  226</span>&#160;    <a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml">IConnectableLayer</a>* <a class="code" href="classarmnn_1_1_network_impl.xhtml#ab067ba4ee9416d93abb8a52f3dc8feba">AddTransposeLayer</a>(const <a class="code" href="structarmnn_1_1_transpose_descriptor.xhtml">TransposeDescriptor</a>&amp; transposeDescriptor,</div>
<div class="line"><a name="l00227"></a><span class="lineno">  227</span>&#160;                                         const <span class="keywordtype">char</span>* name = <span class="keywordtype">nullptr</span>);</div>
<div class="line"><a name="l00228"></a><span class="lineno">  228</span>&#160; </div>
<div class="line"><a name="l00229"></a><span class="lineno">  229</span>&#160;    <a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml">IConnectableLayer</a>* <a class="code" href="classarmnn_1_1_network_impl.xhtml#aba22dcdeed6e7c489aea6eb798c0a10a">AddUnidirectionalSequenceLstmLayer</a>(const <a class="code" href="structarmnn_1_1_lstm_descriptor.xhtml">UnidirectionalSequenceLstmDescriptor</a>&amp; descriptor,</div>
<div class="line"><a name="l00230"></a><span class="lineno">  230</span>&#160;                                                          const <a class="code" href="structarmnn_1_1_lstm_input_params.xhtml">LstmInputParams</a>&amp; params,</div>
<div class="line"><a name="l00231"></a><span class="lineno">  231</span>&#160;                                                          const <span class="keywordtype">char</span>* name = <span class="keywordtype">nullptr</span>);</div>
<div class="line"><a name="l00232"></a><span class="lineno">  232</span>&#160; </div>
<div class="line"><a name="l00233"></a><span class="lineno">  233</span>&#160;    <a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml">IConnectableLayer</a>* <a class="code" href="classarmnn_1_1_network_impl.xhtml#a2090bf6670b73c69309ed592068aa3af">AddConvertFp16ToFp32Layer</a>(const <span class="keywordtype">char</span>* name = <span class="keywordtype">nullptr</span>);</div>
<div class="line"><a name="l00234"></a><span class="lineno">  234</span>&#160; </div>
<div class="line"><a name="l00235"></a><span class="lineno">  235</span>&#160;    <a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml">IConnectableLayer</a>* <a class="code" href="classarmnn_1_1_network_impl.xhtml#ab71c4df72f6587aea671acaacd6a0d9a">AddConvertFp32ToFp16Layer</a>(const <span class="keywordtype">char</span>* name = <span class="keywordtype">nullptr</span>);</div>
<div class="line"><a name="l00236"></a><span class="lineno">  236</span>&#160; </div>
<div class="line"><a name="l00237"></a><span class="lineno">  237</span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classarmnn_1_1_network_impl.xhtml#a72032c65bf8b8acf09b564b7d80078c5">ExecuteStrategy</a>(<a class="code" href="classarmnn_1_1_i_strategy.xhtml">IStrategy</a>&amp; strategy) const;</div>
<div class="line"><a name="l00238"></a><span class="lineno">  238</span>&#160; </div>
<div class="line"><a name="l00239"></a><span class="lineno">  239</span>&#160;private:</div>
<div class="line"><a name="l00240"></a><span class="lineno">  240</span>&#160; </div>
<div class="line"><a name="l00241"></a><span class="lineno">  241</span>&#160;    <span class="keywordtype">bool</span> GetShapeInferenceMethod();</div>
<div class="line"><a name="l00242"></a><span class="lineno">  242</span>&#160;    <span class="keywordtype">bool</span> GetAllowExpandedDims();</div>
<div class="line"><a name="l00243"></a><span class="lineno">  243</span>&#160;    <a class="code" href="namespacearmnn.xhtml#a4de71c3661093e5c4ae7775114f43413">NetworkOptions</a> m_NetworkOptions;</div>
<div class="line"><a name="l00244"></a><span class="lineno">  244</span>&#160; </div>
<div class="line"><a name="l00245"></a><span class="lineno">  245</span>&#160;    <a class="code" href="namespacestd.xhtml">std</a>::unique_ptr&lt;<a class="code" href="classarmnn_1_1_graph.xhtml">Graph</a>&gt; m_Graph;</div>
<div class="line"><a name="l00246"></a><span class="lineno">  246</span>&#160;    <a class="code" href="namespacearmnn.xhtml#a5b6893cda5b69359a4244c06054da18f">ModelOptions</a>           m_ModelOptions;</div>
<div class="line"><a name="l00247"></a><span class="lineno">  247</span>&#160;};</div>
<div class="line"><a name="l00248"></a><span class="lineno">  248</span>&#160; </div>
<div class="line"><a name="l00249"></a><span class="lineno"><a class="line" href="structarmnn_1_1_optimization_result.xhtml">  249</a></span>&#160;struct <a class="code" href="structarmnn_1_1_optimization_result.xhtml">OptimizationResult</a></div>
<div class="line"><a name="l00250"></a><span class="lineno">  250</span>&#160;{</div>
<div class="line"><a name="l00251"></a><span class="lineno"><a class="line" href="structarmnn_1_1_optimization_result.xhtml#a1f68424ba084c388888042ae6c37cbda">  251</a></span>&#160;    <span class="keywordtype">bool</span> <a class="code" href="structarmnn_1_1_optimization_result.xhtml#a1f68424ba084c388888042ae6c37cbda">m_Warning</a>;</div>
<div class="line"><a name="l00252"></a><span class="lineno"><a class="line" href="structarmnn_1_1_optimization_result.xhtml#a41a657cfacb52a80a73575c5c730ab88">  252</a></span>&#160;    <span class="keywordtype">bool</span> <a class="code" href="structarmnn_1_1_optimization_result.xhtml#a41a657cfacb52a80a73575c5c730ab88">m_Error</a>;</div>
<div class="line"><a name="l00253"></a><span class="lineno">  253</span>&#160; </div>
<div class="line"><a name="l00254"></a><span class="lineno"><a class="line" href="structarmnn_1_1_optimization_result.xhtml#a6edd4a9bf05b570bb3f468e5ffe08404">  254</a></span>&#160;    <a class="code" href="structarmnn_1_1_optimization_result.xhtml#a6edd4a9bf05b570bb3f468e5ffe08404">OptimizationResult</a>(<span class="keywordtype">bool</span> warning, <span class="keywordtype">bool</span> error)</div>
<div class="line"><a name="l00255"></a><span class="lineno">  255</span>&#160;        : m_Warning(<a class="code" href="namespacearmnn.xhtml#a4dc0adc6737b5944e7671bee71788407a7b83d3f08fa392b79e3f553b585971cd">warning</a>), m_Error(<a class="code" href="namespacearmnn.xhtml#a4dc0adc6737b5944e7671bee71788407acb5e100e5a9a3e7f6d1fd97512215282">error</a>)</div>
<div class="line"><a name="l00256"></a><span class="lineno">  256</span>&#160;    {}</div>
<div class="line"><a name="l00257"></a><span class="lineno">  257</span>&#160; </div>
<div class="line"><a name="l00258"></a><span class="lineno"><a class="line" href="structarmnn_1_1_optimization_result.xhtml#ab90d2c7e6d81d7a0cb9148ad0caec111">  258</a></span>&#160;    <a class="code" href="structarmnn_1_1_optimization_result.xhtml#ab90d2c7e6d81d7a0cb9148ad0caec111">OptimizationResult</a>()</div>
<div class="line"><a name="l00259"></a><span class="lineno">  259</span>&#160;        : <a class="code" href="structarmnn_1_1_optimization_result.xhtml">OptimizationResult</a>(false, false)</div>
<div class="line"><a name="l00260"></a><span class="lineno">  260</span>&#160;    {}</div>
<div class="line"><a name="l00261"></a><span class="lineno">  261</span>&#160; </div>
<div class="line"><a name="l00262"></a><span class="lineno"><a class="line" href="structarmnn_1_1_optimization_result.xhtml#a955b65059e7f9429a5d6041136bc1487">  262</a></span>&#160;    <span class="keywordtype">bool</span> <a class="code" href="structarmnn_1_1_optimization_result.xhtml#a955b65059e7f9429a5d6041136bc1487">IsOk</a>()<span class="keyword"> const</span></div>
<div class="line"><a name="l00263"></a><span class="lineno">  263</span>&#160;<span class="keyword">    </span>{ <span class="keywordflow">return</span> !m_Warning &amp;&amp; !m_Error; }</div>
<div class="line"><a name="l00264"></a><span class="lineno"><a class="line" href="structarmnn_1_1_optimization_result.xhtml#a2a35773a5a0e08b180a12205c3e15500">  264</a></span>&#160;    <span class="keywordtype">bool</span> <a class="code" href="structarmnn_1_1_optimization_result.xhtml#a2a35773a5a0e08b180a12205c3e15500">IsWarningOnly</a>()<span class="keyword"> const</span></div>
<div class="line"><a name="l00265"></a><span class="lineno">  265</span>&#160;<span class="keyword">    </span>{ <span class="keywordflow">return</span> m_Warning &amp;&amp; !m_Error; }</div>
<div class="line"><a name="l00266"></a><span class="lineno"><a class="line" href="structarmnn_1_1_optimization_result.xhtml#aca1654c65182fe4e7d5fd45f556fcd57">  266</a></span>&#160;    <span class="keywordtype">bool</span> <a class="code" href="structarmnn_1_1_optimization_result.xhtml#aca1654c65182fe4e7d5fd45f556fcd57">IsError</a>()<span class="keyword"> const</span></div>
<div class="line"><a name="l00267"></a><span class="lineno">  267</span>&#160;<span class="keyword">    </span>{ <span class="keywordflow">return</span> m_Error; }</div>
<div class="line"><a name="l00268"></a><span class="lineno">  268</span>&#160; </div>
<div class="line"><a name="l00269"></a><span class="lineno">  269</span>&#160;};</div>
<div class="line"><a name="l00270"></a><span class="lineno">  270</span>&#160; </div>
<div class="line"><a name="l00271"></a><span class="lineno"><a class="line" href="namespacearmnn.xhtml#a9173495a61a0092b5f38b855f02c3585">  271</a></span>&#160;<span class="keyword">using</span> <a class="code" href="namespacearmnn.xhtml#a9173495a61a0092b5f38b855f02c3585">BackendsMap</a> = std::map&lt;BackendId, std::unique_ptr&lt;class IBackendInternal&gt;&gt;;</div>
<div class="line"><a name="l00272"></a><span class="lineno">  272</span>&#160; </div>
<div class="line"><a name="l00273"></a><span class="lineno">  273</span>&#160;<a class="code" href="namespacearmnn.xhtml#a9173495a61a0092b5f38b855f02c3585">BackendsMap</a> <a class="code" href="namespacearmnn.xhtml#a1ec6b4c20ed294a96cf94c33c24caaf5">CreateSupportedBackends</a>(<a class="code" href="classarmnn_1_1_tensor_handle_factory_registry.xhtml">TensorHandleFactoryRegistry</a>&amp; handleFactoryRegistry,</div>
<div class="line"><a name="l00274"></a><span class="lineno">  274</span>&#160;                                    <span class="keyword">struct</span> <a class="code" href="structarmnn_1_1_backend_settings.xhtml">BackendSettings</a>&amp; backendSettings);</div>
<div class="line"><a name="l00275"></a><span class="lineno">  275</span>&#160; </div>
<div class="line"><a name="l00276"></a><span class="lineno">  276</span>&#160;<a class="code" href="structarmnn_1_1_optimization_result.xhtml">OptimizationResult</a> <a class="code" href="namespacearmnn.xhtml#acbf7c9a630f03ece800f807d946239ab">SelectTensorHandleStrategy</a>(<a class="code" href="classarmnn_1_1_graph.xhtml">Graph</a>&amp; optGraph,</div>
<div class="line"><a name="l00277"></a><span class="lineno">  277</span>&#160;                                              <a class="code" href="namespacearmnn.xhtml#a9173495a61a0092b5f38b855f02c3585">BackendsMap</a>&amp; backends,</div>
<div class="line"><a name="l00278"></a><span class="lineno">  278</span>&#160;                                              <a class="code" href="classarmnn_1_1_tensor_handle_factory_registry.xhtml">TensorHandleFactoryRegistry</a>&amp; registry,</div>
<div class="line"><a name="l00279"></a><span class="lineno">  279</span>&#160;                                              <span class="keywordtype">bool</span> importEnabled,</div>
<div class="line"><a name="l00280"></a><span class="lineno">  280</span>&#160;                                              <span class="keywordtype">bool</span> exportEnabled,</div>
<div class="line"><a name="l00281"></a><span class="lineno">  281</span>&#160;                                              <a class="code" href="classarmnn_1_1_optional.xhtml">Optional</a>&lt;std::vector&lt;std::string&gt;&amp;&gt; errMessages);</div>
<div class="line"><a name="l00282"></a><span class="lineno">  282</span>&#160; </div>
<div class="line"><a name="l00283"></a><span class="lineno">  283</span>&#160;<a class="code" href="structarmnn_1_1_optimization_result.xhtml">OptimizationResult</a> <a class="code" href="namespacearmnn.xhtml#a839ad76f1f52a70b540805b231f05d9c">AssignBackends</a>(<a class="code" href="classarmnn_1_1_optimized_network_impl.xhtml">OptimizedNetworkImpl</a>* optNetObjPtr,</div>
<div class="line"><a name="l00284"></a><span class="lineno">  284</span>&#160;                                  <a class="code" href="structarmnn_1_1_backend_settings.xhtml">BackendSettings</a>&amp; backendSettings,</div>
<div class="line"><a name="l00285"></a><span class="lineno">  285</span>&#160;                                  <a class="code" href="classarmnn_1_1_graph.xhtml#acc25db0641c1c22faf95af3bb49080c9">Graph::Iterator</a>&amp; firstLayer,</div>
<div class="line"><a name="l00286"></a><span class="lineno">  286</span>&#160;                                  <a class="code" href="classarmnn_1_1_graph.xhtml#acc25db0641c1c22faf95af3bb49080c9">Graph::Iterator</a>&amp; lastLayer,</div>
<div class="line"><a name="l00287"></a><span class="lineno">  287</span>&#160;                                  <a class="code" href="classarmnn_1_1_optional.xhtml">Optional</a>&lt;std::vector&lt;std::string&gt;&amp;&gt; errMessages);</div>
<div class="line"><a name="l00288"></a><span class="lineno">  288</span>&#160; </div>
<div class="line"><a name="l00289"></a><span class="lineno">  289</span>&#160; </div>
<div class="line"><a name="l00290"></a><span class="lineno">  290</span>&#160;<a class="code" href="structarmnn_1_1_optimization_result.xhtml">OptimizationResult</a> <a class="code" href="namespacearmnn.xhtml#a839ad76f1f52a70b540805b231f05d9c">AssignBackends</a>(<a class="code" href="classarmnn_1_1_optimized_network_impl.xhtml">OptimizedNetworkImpl</a>* optNetObjPtr,</div>
<div class="line"><a name="l00291"></a><span class="lineno">  291</span>&#160;                                  <a class="code" href="structarmnn_1_1_backend_settings.xhtml">BackendSettings</a>&amp; backendSettings,</div>
<div class="line"><a name="l00292"></a><span class="lineno">  292</span>&#160;                                  <a class="code" href="classarmnn_1_1_subgraph_view.xhtml#a308b86dbdd0a745cef76904674c9850f">SubgraphView::IConnectableLayerIterator</a>&amp; firstLayer,</div>
<div class="line"><a name="l00293"></a><span class="lineno">  293</span>&#160;                                  <a class="code" href="classarmnn_1_1_subgraph_view.xhtml#a308b86dbdd0a745cef76904674c9850f">SubgraphView::IConnectableLayerIterator</a>&amp; lastLayer,</div>
<div class="line"><a name="l00294"></a><span class="lineno">  294</span>&#160;                                  <a class="code" href="classarmnn_1_1_optional.xhtml">Optional</a>&lt;std::vector&lt;std::string&gt;&amp;&gt; errMessages);</div>
<div class="line"><a name="l00295"></a><span class="lineno">  295</span>&#160; </div>
<div class="line"><a name="l00296"></a><span class="lineno"><a class="line" href="structarmnn_1_1_optimizer_options_opaque_impl.xhtml">  296</a></span>&#160;<span class="keyword">struct </span><a class="code" href="structarmnn_1_1_optimizer_options_opaque_impl.xhtml">OptimizerOptionsOpaqueImpl</a></div>
<div class="line"><a name="l00297"></a><span class="lineno">  297</span>&#160;{</div>
<div class="line"><a name="l00298"></a><span class="lineno">  298</span>&#160;    ~<a class="code" href="structarmnn_1_1_optimizer_options_opaque_impl.xhtml">OptimizerOptionsOpaqueImpl</a>() = <span class="keywordflow">default</span>;</div>
<div class="line"><a name="l00299"></a><span class="lineno">  299</span>&#160; </div>
<div class="line"><a name="l00300"></a><span class="lineno"><a class="line" href="structarmnn_1_1_optimizer_options_opaque_impl.xhtml#a3175125394ee8d824f3bff54b7a73e1d">  300</a></span>&#160;    <span class="keyword">explicit</span> <a class="code" href="structarmnn_1_1_optimizer_options_opaque_impl.xhtml#a3175125394ee8d824f3bff54b7a73e1d">OptimizerOptionsOpaqueImpl</a>()</div>
<div class="line"><a name="l00301"></a><span class="lineno">  301</span>&#160;            : m_ReduceFp32ToFp16(false)</div>
<div class="line"><a name="l00302"></a><span class="lineno">  302</span>&#160;            , m_Debug(false)</div>
<div class="line"><a name="l00303"></a><span class="lineno">  303</span>&#160;            , m_DebugToFile(false)</div>
<div class="line"><a name="l00304"></a><span class="lineno">  304</span>&#160;            , m_ReduceFp32ToBf16(false)</div>
<div class="line"><a name="l00305"></a><span class="lineno">  305</span>&#160;            , m_shapeInferenceMethod(<a class="code" href="namespacearmnn.xhtml">armnn</a>::<a class="code" href="namespacearmnn.xhtml#adf57837d00e8352d9b5cc5ab1fb5fee9">ShapeInferenceMethod</a>::<a class="code" href="namespacearmnn.xhtml#adf57837d00e8352d9b5cc5ab1fb5fee9af6486a22a9bb11959bfae60a3e5174b1">ValidateOnly</a>)</div>
<div class="line"><a name="l00306"></a><span class="lineno">  306</span>&#160;            , m_ImportEnabled(false)</div>
<div class="line"><a name="l00307"></a><span class="lineno">  307</span>&#160;            , m_ModelOptions()</div>
<div class="line"><a name="l00308"></a><span class="lineno">  308</span>&#160;            , m_ProfilingEnabled(false)</div>
<div class="line"><a name="l00309"></a><span class="lineno">  309</span>&#160;            , m_ExportEnabled(false)</div>
<div class="line"><a name="l00310"></a><span class="lineno">  310</span>&#160;            , m_AllowExpandedDims(false)</div>
<div class="line"><a name="l00311"></a><span class="lineno">  311</span>&#160;    {</div>
<div class="line"><a name="l00312"></a><span class="lineno">  312</span>&#160;    }</div>
<div class="line"><a name="l00313"></a><span class="lineno">  313</span>&#160; </div>
<div class="line"><a name="l00314"></a><span class="lineno"><a class="line" href="structarmnn_1_1_optimizer_options_opaque_impl.xhtml#aeaeb36b5eb65d2cc53286421ed3dfcbe">  314</a></span>&#160;    <span class="keyword">explicit</span> <a class="code" href="structarmnn_1_1_optimizer_options_opaque_impl.xhtml#aeaeb36b5eb65d2cc53286421ed3dfcbe">OptimizerOptionsOpaqueImpl</a>(<span class="keywordtype">bool</span> reduceFp32ToFp16, <span class="keywordtype">bool</span> debug, <span class="keywordtype">bool</span> reduceFp32ToBf16,</div>
<div class="line"><a name="l00315"></a><span class="lineno">  315</span>&#160;                                        <span class="keywordtype">bool</span> importEnabled, <a class="code" href="namespacearmnn.xhtml#a5b6893cda5b69359a4244c06054da18f">ModelOptions</a> modelOptions = {},</div>
<div class="line"><a name="l00316"></a><span class="lineno">  316</span>&#160;                                        <span class="keywordtype">bool</span> exportEnabled = <span class="keyword">false</span>, <span class="keywordtype">bool</span> debugToFile = <span class="keyword">false</span>)</div>
<div class="line"><a name="l00317"></a><span class="lineno">  317</span>&#160;            : m_ReduceFp32ToFp16(reduceFp32ToFp16)</div>
<div class="line"><a name="l00318"></a><span class="lineno">  318</span>&#160;            , m_Debug(debug)</div>
<div class="line"><a name="l00319"></a><span class="lineno">  319</span>&#160;            , m_DebugToFile(debugToFile)</div>
<div class="line"><a name="l00320"></a><span class="lineno">  320</span>&#160;            , m_ReduceFp32ToBf16(reduceFp32ToBf16)</div>
<div class="line"><a name="l00321"></a><span class="lineno">  321</span>&#160;            , m_shapeInferenceMethod(<a class="code" href="namespacearmnn.xhtml#adf57837d00e8352d9b5cc5ab1fb5fee9af6486a22a9bb11959bfae60a3e5174b1">armnn::ShapeInferenceMethod::ValidateOnly</a>)</div>
<div class="line"><a name="l00322"></a><span class="lineno">  322</span>&#160;            , m_ImportEnabled(importEnabled)</div>
<div class="line"><a name="l00323"></a><span class="lineno">  323</span>&#160;            , m_ModelOptions(modelOptions)</div>
<div class="line"><a name="l00324"></a><span class="lineno">  324</span>&#160;            , m_ProfilingEnabled(<span class="keyword">false</span>)</div>
<div class="line"><a name="l00325"></a><span class="lineno">  325</span>&#160;            , m_ExportEnabled(exportEnabled)</div>
<div class="line"><a name="l00326"></a><span class="lineno">  326</span>&#160;            , m_AllowExpandedDims(<span class="keyword">false</span>)</div>
<div class="line"><a name="l00327"></a><span class="lineno">  327</span>&#160;    {</div>
<div class="line"><a name="l00328"></a><span class="lineno">  328</span>&#160;    }</div>
<div class="line"><a name="l00329"></a><span class="lineno">  329</span>&#160; </div>
<div class="line"><a name="l00330"></a><span class="lineno"><a class="line" href="structarmnn_1_1_optimizer_options_opaque_impl.xhtml#ae186743f6442a5a45fb8cc100e49399e">  330</a></span>&#160;    <span class="keyword">explicit</span> <a class="code" href="structarmnn_1_1_optimizer_options_opaque_impl.xhtml#ae186743f6442a5a45fb8cc100e49399e">OptimizerOptionsOpaqueImpl</a>(<span class="keywordtype">bool</span> reduceFp32ToFp16, <span class="keywordtype">bool</span> debug, <span class="keywordtype">bool</span> reduceFp32ToBf16,</div>
<div class="line"><a name="l00331"></a><span class="lineno">  331</span>&#160;                                        <a class="code" href="namespacearmnn.xhtml#adf57837d00e8352d9b5cc5ab1fb5fee9">ShapeInferenceMethod</a> shapeInferenceMethod,</div>
<div class="line"><a name="l00332"></a><span class="lineno">  332</span>&#160;                                        <span class="keywordtype">bool</span> importEnabled, <a class="code" href="namespacearmnn.xhtml#a5b6893cda5b69359a4244c06054da18f">ModelOptions</a> modelOptions, <span class="keywordtype">bool</span> exportEnabled,</div>
<div class="line"><a name="l00333"></a><span class="lineno">  333</span>&#160;                                        <span class="keywordtype">bool</span> debugToFile, <span class="keywordtype">bool</span> allowExpandedDims)</div>
<div class="line"><a name="l00334"></a><span class="lineno">  334</span>&#160;            : m_ReduceFp32ToFp16(reduceFp32ToFp16)</div>
<div class="line"><a name="l00335"></a><span class="lineno">  335</span>&#160;            , m_Debug(<a class="code" href="namespacearmnn.xhtml#a4dc0adc6737b5944e7671bee71788407aad42f6697b035b7580e4fef93be20b4d">debug</a>)</div>
<div class="line"><a name="l00336"></a><span class="lineno">  336</span>&#160;            , m_DebugToFile(debugToFile)</div>
<div class="line"><a name="l00337"></a><span class="lineno">  337</span>&#160;            , m_ReduceFp32ToBf16(reduceFp32ToBf16)</div>
<div class="line"><a name="l00338"></a><span class="lineno">  338</span>&#160;            , m_shapeInferenceMethod(shapeInferenceMethod)</div>
<div class="line"><a name="l00339"></a><span class="lineno">  339</span>&#160;            , m_ImportEnabled(importEnabled)</div>
<div class="line"><a name="l00340"></a><span class="lineno">  340</span>&#160;            , m_ModelOptions(modelOptions)</div>
<div class="line"><a name="l00341"></a><span class="lineno">  341</span>&#160;            , m_ProfilingEnabled(false)</div>
<div class="line"><a name="l00342"></a><span class="lineno">  342</span>&#160;            , m_ExportEnabled(exportEnabled)</div>
<div class="line"><a name="l00343"></a><span class="lineno">  343</span>&#160;            , m_AllowExpandedDims(allowExpandedDims)</div>
<div class="line"><a name="l00344"></a><span class="lineno">  344</span>&#160;    {</div>
<div class="line"><a name="l00345"></a><span class="lineno">  345</span>&#160;    }</div>
<div class="line"><a name="l00346"></a><span class="lineno">  346</span>&#160;<span class="comment"></span> </div>
<div class="line"><a name="l00347"></a><span class="lineno">  347</span>&#160;<span class="comment">    /// Reduces all Fp32 operators in the model to Fp16 for faster processing.</span></div>
<div class="line"><a name="l00348"></a><span class="lineno">  348</span>&#160;<span class="comment">    /// @Note This feature works best if all operators of the model are in Fp32. ArmNN will add conversion layers</span></div>
<div class="line"><a name="l00349"></a><span class="lineno">  349</span>&#160;<span class="comment">    ///       between layers that weren&#39;t in Fp32 in the first place or if the operator is not supported in Fp16.</span></div>
<div class="line"><a name="l00350"></a><span class="lineno">  350</span>&#160;<span class="comment">    ///       The overhead of these conversions can lead to a slower overall performance if too many conversions are</span></div>
<div class="line"><a name="l00351"></a><span class="lineno">  351</span>&#160;<span class="comment">    ///       required.</span></div>
<div class="line"><a name="l00352"></a><span class="lineno"><a class="line" href="structarmnn_1_1_optimizer_options_opaque_impl.xhtml#a6e1a42622ca43dafc7ba8e684c016eb4">  352</a></span>&#160;<span class="comment"></span>    <span class="keywordtype">bool</span> m_ReduceFp32ToFp16 = <span class="keyword">false</span>;</div>
<div class="line"><a name="l00353"></a><span class="lineno">  353</span>&#160;<span class="comment"></span> </div>
<div class="line"><a name="l00354"></a><span class="lineno">  354</span>&#160;<span class="comment">    /// Add debug data for easier troubleshooting</span></div>
<div class="line"><a name="l00355"></a><span class="lineno"><a class="line" href="structarmnn_1_1_optimizer_options_opaque_impl.xhtml#a69eb14082d40fa0a3cff50457344a5e0">  355</a></span>&#160;<span class="comment"></span>    <span class="keywordtype">bool</span> m_Debug = <span class="keyword">false</span>;</div>
<div class="line"><a name="l00356"></a><span class="lineno">  356</span>&#160;<span class="comment"></span> </div>
<div class="line"><a name="l00357"></a><span class="lineno">  357</span>&#160;<span class="comment">    /// Pass debug data to separate output files for easier troubleshooting</span></div>
<div class="line"><a name="l00358"></a><span class="lineno"><a class="line" href="structarmnn_1_1_optimizer_options_opaque_impl.xhtml#afc07add3304c3d79293acb881c2168df">  358</a></span>&#160;<span class="comment"></span>    <span class="keywordtype">bool</span> m_DebugToFile = <span class="keyword">false</span>;</div>
<div class="line"><a name="l00359"></a><span class="lineno">  359</span>&#160;<span class="comment"></span> </div>
<div class="line"><a name="l00360"></a><span class="lineno">  360</span>&#160;<span class="comment">    /// @Note This feature has been replaced by enabling Fast Math in compute library backend options.</span></div>
<div class="line"><a name="l00361"></a><span class="lineno">  361</span>&#160;<span class="comment">    /// This is currently a placeholder option</span></div>
<div class="line"><a name="l00362"></a><span class="lineno"><a class="line" href="structarmnn_1_1_optimizer_options_opaque_impl.xhtml#a11f463726addcc1d2845266997d79e9c">  362</a></span>&#160;<span class="comment"></span>    <span class="keywordtype">bool</span> m_ReduceFp32ToBf16 = <span class="keyword">false</span>;</div>
<div class="line"><a name="l00363"></a><span class="lineno">  363</span>&#160;<span class="comment"></span> </div>
<div class="line"><a name="l00364"></a><span class="lineno">  364</span>&#160;<span class="comment">    /// Infer output size when not available</span></div>
<div class="line"><a name="l00365"></a><span class="lineno"><a class="line" href="structarmnn_1_1_optimizer_options_opaque_impl.xhtml#a9416d94a8aad7cdfa47eb35e825cbda5">  365</a></span>&#160;<span class="comment"></span>    <a class="code" href="namespacearmnn.xhtml#adf57837d00e8352d9b5cc5ab1fb5fee9">ShapeInferenceMethod</a> m_shapeInferenceMethod = <a class="code" href="namespacearmnn.xhtml#adf57837d00e8352d9b5cc5ab1fb5fee9af6486a22a9bb11959bfae60a3e5174b1">armnn::ShapeInferenceMethod::ValidateOnly</a>;</div>
<div class="line"><a name="l00366"></a><span class="lineno">  366</span>&#160;<span class="comment"></span> </div>
<div class="line"><a name="l00367"></a><span class="lineno">  367</span>&#160;<span class="comment">    /// Enable Import</span></div>
<div class="line"><a name="l00368"></a><span class="lineno"><a class="line" href="structarmnn_1_1_optimizer_options_opaque_impl.xhtml#a05c1bba6ba3ecc1339d4c4c10c0d8890">  368</a></span>&#160;<span class="comment"></span>    <span class="keywordtype">bool</span> m_ImportEnabled = <span class="keyword">false</span>;</div>
<div class="line"><a name="l00369"></a><span class="lineno">  369</span>&#160;<span class="comment"></span> </div>
<div class="line"><a name="l00370"></a><span class="lineno">  370</span>&#160;<span class="comment">    /// Enable Model Options</span></div>
<div class="line"><a name="l00371"></a><span class="lineno"><a class="line" href="structarmnn_1_1_optimizer_options_opaque_impl.xhtml#a71194277c60153a5f86539f5d39f01db">  371</a></span>&#160;<span class="comment"></span>    <a class="code" href="namespacearmnn.xhtml#a5b6893cda5b69359a4244c06054da18f">ModelOptions</a> <a class="code" href="structarmnn_1_1_optimizer_options_opaque_impl.xhtml#a71194277c60153a5f86539f5d39f01db">m_ModelOptions</a>;</div>
<div class="line"><a name="l00372"></a><span class="lineno">  372</span>&#160;<span class="comment"></span> </div>
<div class="line"><a name="l00373"></a><span class="lineno">  373</span>&#160;<span class="comment">    /// Enable profiling dump of the optimizer phase</span></div>
<div class="line"><a name="l00374"></a><span class="lineno"><a class="line" href="structarmnn_1_1_optimizer_options_opaque_impl.xhtml#a1b1892da2aaf7eaedaa38671d56b7f19">  374</a></span>&#160;<span class="comment"></span>    <span class="keywordtype">bool</span> m_ProfilingEnabled = <span class="keyword">false</span>;</div>
<div class="line"><a name="l00375"></a><span class="lineno">  375</span>&#160;<span class="comment"></span> </div>
<div class="line"><a name="l00376"></a><span class="lineno">  376</span>&#160;<span class="comment">    /// Enable Export</span></div>
<div class="line"><a name="l00377"></a><span class="lineno"><a class="line" href="structarmnn_1_1_optimizer_options_opaque_impl.xhtml#a0054f53e4e70bb39c000bcf240627b18">  377</a></span>&#160;<span class="comment"></span>    <span class="keywordtype">bool</span> m_ExportEnabled = <span class="keyword">false</span>;</div>
<div class="line"><a name="l00378"></a><span class="lineno">  378</span>&#160;<span class="comment"></span> </div>
<div class="line"><a name="l00379"></a><span class="lineno">  379</span>&#160;<span class="comment">    /// When calculating tensor sizes, dimensions of size == 1 will be ignored</span></div>
<div class="line"><a name="l00380"></a><span class="lineno"><a class="line" href="structarmnn_1_1_optimizer_options_opaque_impl.xhtml#a9ef8ddbeee4b869e4c68eb2ed278b8d9">  380</a></span>&#160;<span class="comment"></span>    <span class="keywordtype">bool</span> m_AllowExpandedDims = <span class="keyword">false</span>;</div>
<div class="line"><a name="l00381"></a><span class="lineno">  381</span>&#160;};</div>
<div class="line"><a name="l00382"></a><span class="lineno">  382</span>&#160; </div>
<div class="line"><a name="l00383"></a><span class="lineno">  383</span>&#160;} <span class="comment">// namespace armnn</span></div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<div class="ttc" id="anamespacearmnn_xhtml_acbf7c9a630f03ece800f807d946239ab"><div class="ttname"><a href="namespacearmnn.xhtml#acbf7c9a630f03ece800f807d946239ab">armnn::SelectTensorHandleStrategy</a></div><div class="ttdeci">OptimizationResult SelectTensorHandleStrategy(Graph &amp;optGraph, BackendsMap &amp;backends, TensorHandleFactoryRegistry &amp;registry, bool importEnabled, bool exportEnabled, Optional&lt; std::vector&lt; std::string &gt; &amp; &gt; errMessages)</div><div class="ttdef"><b>Definition:</b> <a href="_network_8cpp_source.xhtml#l01702">Network.cpp:1702</a></div></div>
<div class="ttc" id="aclassarmnn_1_1_network_impl_xhtml_a0f19808bdada45222e72edf7671a275a"><div class="ttname"><a href="classarmnn_1_1_network_impl.xhtml#a0f19808bdada45222e72edf7671a275a">armnn::NetworkImpl::AddMergeLayer</a></div><div class="ttdeci">IConnectableLayer * AddMergeLayer(const char *name=nullptr)</div><div class="ttdef"><b>Definition:</b> <a href="_network_8cpp_source.xhtml#l02516">Network.cpp:2516</a></div></div>
<div class="ttc" id="aclassarmnn_1_1_network_impl_xhtml_aee3a15d2fa419f50a8ac45e6d3c11e16"><div class="ttname"><a href="classarmnn_1_1_network_impl.xhtml#aee3a15d2fa419f50a8ac45e6d3c11e16">armnn::NetworkImpl::AddPrecompiledLayer</a></div><div class="ttdeci">IConnectableLayer * AddPrecompiledLayer(const PreCompiledDescriptor &amp;preCompiledDescriptor, CompiledBlobPtr compiledBlobPtr, const Optional&lt; BackendId &gt; &amp;backend, const char *name=nullptr)</div><div class="ttdef"><b>Definition:</b> <a href="_network_8cpp_source.xhtml#l02905">Network.cpp:2905</a></div></div>
<div class="ttc" id="aclassarmnn_1_1_backend_id_xhtml"><div class="ttname"><a href="classarmnn_1_1_backend_id.xhtml">armnn::BackendId</a></div><div class="ttdef"><b>Definition:</b> <a href="_backend_id_8hpp_source.xhtml#l00075">BackendId.hpp:75</a></div></div>
<div class="ttc" id="aclassarmnn_1_1_network_impl_xhtml_ad97411f1fcb2c30c212483d8c673506f"><div class="ttname"><a href="classarmnn_1_1_network_impl.xhtml#ad97411f1fcb2c30c212483d8c673506f">armnn::NetworkImpl::AddResizeLayer</a></div><div class="ttdeci">IConnectableLayer * AddResizeLayer(const ResizeDescriptor &amp;resizeDescriptor, const char *name=nullptr)</div><div class="ttdef"><b>Definition:</b> <a href="_network_8cpp_source.xhtml#l02268">Network.cpp:2268</a></div></div>
<div class="ttc" id="aclassarmnn_1_1_network_impl_xhtml_a40067b05f30a3ab65568c826df7a8ea7"><div class="ttname"><a href="classarmnn_1_1_network_impl.xhtml#a40067b05f30a3ab65568c826df7a8ea7">armnn::NetworkImpl::AddQuantizedLstmLayer</a></div><div class="ttdeci">IConnectableLayer * AddQuantizedLstmLayer(const QuantizedLstmInputParams &amp;params, const char *name=nullptr)</div><div class="ttdef"><b>Definition:</b> <a href="_network_8cpp_source.xhtml#l02572">Network.cpp:2572</a></div></div>
<div class="ttc" id="aclassarmnn_1_1_network_impl_xhtml_a095a9b700dc857edc23c5d3bf088919f"><div class="ttname"><a href="classarmnn_1_1_network_impl.xhtml#a095a9b700dc857edc23c5d3bf088919f">armnn::NetworkImpl::AddElementwiseUnaryLayer</a></div><div class="ttdeci">IConnectableLayer * AddElementwiseUnaryLayer(const ElementwiseUnaryDescriptor &amp;elementwiseUnaryDescriptor, const char *name=nullptr)</div><div class="ttdef"><b>Definition:</b> <a href="_network_8cpp_source.xhtml#l02092">Network.cpp:2092</a></div></div>
<div class="ttc" id="aclassarmnn_1_1_graph_xhtml_acc25db0641c1c22faf95af3bb49080c9"><div class="ttname"><a href="classarmnn_1_1_graph.xhtml#acc25db0641c1c22faf95af3bb49080c9">armnn::Graph::Iterator</a></div><div class="ttdeci">LayerList::const_iterator Iterator</div><div class="ttdef"><b>Definition:</b> <a href="_graph_8hpp_source.xhtml#l00053">Graph.hpp:53</a></div></div>
<div class="ttc" id="a_lstm_params_8hpp_xhtml"><div class="ttname"><a href="_lstm_params_8hpp.xhtml">LstmParams.hpp</a></div></div>
<div class="ttc" id="aclassarmnn_1_1_network_impl_xhtml_af1853466264ac187607c96b501a74e2b"><div class="ttname"><a href="classarmnn_1_1_network_impl.xhtml#af1853466264ac187607c96b501a74e2b">armnn::NetworkImpl::AddDepthToSpaceLayer</a></div><div class="ttdeci">IConnectableLayer * AddDepthToSpaceLayer(const DepthToSpaceDescriptor &amp;depthToSpaceDescriptor, const char *name=nullptr)</div><div class="ttdef"><b>Definition:</b> <a href="_network_8cpp_source.xhtml#l02138">Network.cpp:2138</a></div></div>
<div class="ttc" id="aclassarmnn_1_1_network_impl_xhtml_a6c5376053e1f875776d7bc36fd0b7d45"><div class="ttname"><a href="classarmnn_1_1_network_impl.xhtml#a6c5376053e1f875776d7bc36fd0b7d45">armnn::NetworkImpl::AddNormalizationLayer</a></div><div class="ttdeci">IConnectableLayer * AddNormalizationLayer(const NormalizationDescriptor &amp;normalizationDescriptor, const char *name=nullptr)</div><div class="ttdef"><b>Definition:</b> <a href="_network_8cpp_source.xhtml#l02191">Network.cpp:2191</a></div></div>
<div class="ttc" id="aclassarmnn_1_1_network_impl_xhtml_a9a9bcc00ae3d96343c93b437d6f77088"><div class="ttname"><a href="classarmnn_1_1_network_impl.xhtml#a9a9bcc00ae3d96343c93b437d6f77088">armnn::NetworkImpl::AddBatchToSpaceNdLayer</a></div><div class="ttdeci">IConnectableLayer * AddBatchToSpaceNdLayer(const BatchToSpaceNdDescriptor &amp;batchToSpaceNdDescriptor, const char *name=nullptr)</div><div class="ttdef"><b>Definition:</b> <a href="_network_8cpp_source.xhtml#l02064">Network.cpp:2064</a></div></div>
<div class="ttc" id="a_quantized_lstm_params_8hpp_xhtml"><div class="ttname"><a href="_quantized_lstm_params_8hpp.xhtml">QuantizedLstmParams.hpp</a></div></div>
<div class="ttc" id="astructarmnn_1_1_gather_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_gather_descriptor.xhtml">armnn::GatherDescriptor</a></div><div class="ttdoc">A GatherDescriptor for the GatherLayer.</div><div class="ttdef"><b>Definition:</b> <a href="_descriptors_8hpp_source.xhtml#l00932">Descriptors.hpp:932</a></div></div>
<div class="ttc" id="astructarmnn_1_1_normalization_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_normalization_descriptor.xhtml">armnn::NormalizationDescriptor</a></div><div class="ttdoc">A NormalizationDescriptor for the NormalizationLayer.</div><div class="ttdef"><b>Definition:</b> <a href="_descriptors_8hpp_source.xhtml#l00757">Descriptors.hpp:757</a></div></div>
<div class="ttc" id="astructarmnn_1_1_transpose_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_transpose_descriptor.xhtml">armnn::TransposeDescriptor</a></div><div class="ttdoc">A TransposeDescriptor for the TransposeLayer.</div><div class="ttdef"><b>Definition:</b> <a href="_descriptors_8hpp_source.xhtml#l01457">Descriptors.hpp:1457</a></div></div>
<div class="ttc" id="aclassarmnn_1_1_network_impl_xhtml_a72032c65bf8b8acf09b564b7d80078c5"><div class="ttname"><a href="classarmnn_1_1_network_impl.xhtml#a72032c65bf8b8acf09b564b7d80078c5">armnn::NetworkImpl::ExecuteStrategy</a></div><div class="ttdeci">void ExecuteStrategy(IStrategy &amp;strategy) const</div><div class="ttdef"><b>Definition:</b> <a href="_network_8cpp_source.xhtml#l02938">Network.cpp:2938</a></div></div>
<div class="ttc" id="astructarmnn_1_1_elementwise_unary_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_elementwise_unary_descriptor.xhtml">armnn::ElementwiseUnaryDescriptor</a></div><div class="ttdoc">A ElementwiseUnaryDescriptor for the ElementwiseUnaryLayer.</div><div class="ttdef"><b>Definition:</b> <a href="_descriptors_8hpp_source.xhtml#l00129">Descriptors.hpp:129</a></div></div>
<div class="ttc" id="astructarmnn_1_1_optimization_result_xhtml_ab90d2c7e6d81d7a0cb9148ad0caec111"><div class="ttname"><a href="structarmnn_1_1_optimization_result.xhtml#ab90d2c7e6d81d7a0cb9148ad0caec111">armnn::OptimizationResult::OptimizationResult</a></div><div class="ttdeci">OptimizationResult()</div><div class="ttdef"><b>Definition:</b> <a href="_network_8hpp_source.xhtml#l00258">Network.hpp:258</a></div></div>
<div class="ttc" id="aclassarmnn_1_1_network_impl_xhtml_ae913b4351b7027f37eb5657dd7867733"><div class="ttname"><a href="classarmnn_1_1_network_impl.xhtml#ae913b4351b7027f37eb5657dd7867733">armnn::NetworkImpl::AddPooling2dLayer</a></div><div class="ttdeci">IConnectableLayer * AddPooling2dLayer(const Pooling2dDescriptor &amp;pooling2dDescriptor, const char *name=nullptr)</div><div class="ttdef"><b>Definition:</b> <a href="_network_8cpp_source.xhtml#l02167">Network.cpp:2167</a></div></div>
<div class="ttc" id="astructarmnn_1_1_pad_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_pad_descriptor.xhtml">armnn::PadDescriptor</a></div><div class="ttdoc">A PadDescriptor for the PadLayer.</div><div class="ttdef"><b>Definition:</b> <a href="_descriptors_8hpp_source.xhtml#l01163">Descriptors.hpp:1163</a></div></div>
<div class="ttc" id="astructarmnn_1_1_softmax_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_softmax_descriptor.xhtml">armnn::SoftmaxDescriptor</a></div><div class="ttdoc">A SoftmaxDescriptor for the SoftmaxLayer.</div><div class="ttdef"><b>Definition:</b> <a href="_descriptors_8hpp_source.xhtml#l00177">Descriptors.hpp:177</a></div></div>
<div class="ttc" id="anamespacearmnn_xhtml_a08eb5e20e6b0ce43c5729e8f88b6a910"><div class="ttname"><a href="namespacearmnn.xhtml#a08eb5e20e6b0ce43c5729e8f88b6a910">armnn::NetworkImplPtr</a></div><div class="ttdeci">std::unique_ptr&lt; NetworkImpl, void(*)(NetworkImpl *network)&gt; NetworkImplPtr</div><div class="ttdef"><b>Definition:</b> <a href="_network_8hpp_source.xhtml#l00029">Network.hpp:29</a></div></div>
<div class="ttc" id="aclassarmnn_1_1_network_impl_xhtml_a383e74ef080d4a81b8b371be4b840248"><div class="ttname"><a href="classarmnn_1_1_network_impl.xhtml#a383e74ef080d4a81b8b371be4b840248">armnn::NetworkImpl::AddConvolution2dLayer</a></div><div class="ttdeci">IConnectableLayer * AddConvolution2dLayer(const Convolution2dDescriptor &amp;convolution2dDescriptor, const char *name=nullptr)</div><div class="ttdef"><b>Definition:</b> <a href="_network_8cpp_source.xhtml#l02116">Network.cpp:2116</a></div></div>
<div class="ttc" id="a_subgraph_view_8hpp_xhtml"><div class="ttname"><a href="_subgraph_view_8hpp.xhtml">SubgraphView.hpp</a></div></div>
<div class="ttc" id="astructarmnn_1_1_stack_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_stack_descriptor.xhtml">armnn::StackDescriptor</a></div><div class="ttdoc">A StackDescriptor for the StackLayer.</div><div class="ttdef"><b>Definition:</b> <a href="_descriptors_8hpp_source.xhtml#l01218">Descriptors.hpp:1218</a></div></div>
<div class="ttc" id="astructarmnn_1_1_slice_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_slice_descriptor.xhtml">armnn::SliceDescriptor</a></div><div class="ttdoc">A SliceDescriptor for the SliceLayer.</div><div class="ttdef"><b>Definition:</b> <a href="_descriptors_8hpp_source.xhtml#l01195">Descriptors.hpp:1195</a></div></div>
<div class="ttc" id="anamespacearmnn_xhtml_a9173495a61a0092b5f38b855f02c3585"><div class="ttname"><a href="namespacearmnn.xhtml#a9173495a61a0092b5f38b855f02c3585">armnn::BackendsMap</a></div><div class="ttdeci">std::map&lt; BackendId, std::unique_ptr&lt; class IBackendInternal &gt; &gt; BackendsMap</div><div class="ttdef"><b>Definition:</b> <a href="_network_8hpp_source.xhtml#l00271">Network.hpp:271</a></div></div>
<div class="ttc" id="anamespacearmnn_xhtml_ab8cf8f9fb6792e654c2d8d8382f6f01b"><div class="ttname"><a href="namespacearmnn.xhtml#ab8cf8f9fb6792e654c2d8d8382f6f01b">armnn::LayerBindingId</a></div><div class="ttdeci">int LayerBindingId</div><div class="ttdoc">Type of identifiers for bindable layers (inputs, outputs).</div><div class="ttdef"><b>Definition:</b> <a href="_types_8hpp_source.xhtml#l00301">Types.hpp:301</a></div></div>
<div class="ttc" id="astructarmnn_1_1_activation_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_activation_descriptor.xhtml">armnn::ActivationDescriptor</a></div><div class="ttdoc">An ActivationDescriptor for the ActivationLayer.</div><div class="ttdef"><b>Definition:</b> <a href="_descriptors_8hpp_source.xhtml#l00036">Descriptors.hpp:36</a></div></div>
<div class="ttc" id="anamespacearmnn_xhtml_adf57837d00e8352d9b5cc5ab1fb5fee9af6486a22a9bb11959bfae60a3e5174b1"><div class="ttname"><a href="namespacearmnn.xhtml#adf57837d00e8352d9b5cc5ab1fb5fee9af6486a22a9bb11959bfae60a3e5174b1">armnn::ShapeInferenceMethod::ValidateOnly</a></div><div class="ttdeci">@ ValidateOnly</div><div class="ttdoc">Validate all output shapes.</div></div>
<div class="ttc" id="aclassarmnn_1_1_network_impl_xhtml_abd61d3e7ab67551c75bc219bbc4baeb5"><div class="ttname"><a href="classarmnn_1_1_network_impl.xhtml#abd61d3e7ab67551c75bc219bbc4baeb5">armnn::NetworkImpl::AddInstanceNormalizationLayer</a></div><div class="ttdeci">IConnectableLayer * AddInstanceNormalizationLayer(const InstanceNormalizationDescriptor &amp;desc, const char *name=nullptr)</div><div class="ttdef"><b>Definition:</b> <a href="_network_8cpp_source.xhtml#l02278">Network.cpp:2278</a></div></div>
<div class="ttc" id="aclassarmnn_1_1_tensor_handle_factory_registry_xhtml"><div class="ttname"><a href="classarmnn_1_1_tensor_handle_factory_registry.xhtml">armnn::TensorHandleFactoryRegistry</a></div><div class="ttdef"><b>Definition:</b> <a href="_tensor_handle_factory_registry_8hpp_source.xhtml#l00023">TensorHandleFactoryRegistry.hpp:23</a></div></div>
<div class="ttc" id="aclassarmnn_1_1_i_connectable_layer_xhtml"><div class="ttname"><a href="classarmnn_1_1_i_connectable_layer.xhtml">armnn::IConnectableLayer</a></div><div class="ttdoc">Interface for a layer that is connectable to other layers via InputSlots and OutputSlots.</div><div class="ttdef"><b>Definition:</b> <a href="_i_network_8hpp_source.xhtml#l00068">INetwork.hpp:68</a></div></div>
<div class="ttc" id="aclassarmnn_1_1_network_impl_xhtml_a25563024ec66627ee83727244a53e944"><div class="ttname"><a href="classarmnn_1_1_network_impl.xhtml#a25563024ec66627ee83727244a53e944">armnn::NetworkImpl::AddRankLayer</a></div><div class="ttdeci">IConnectableLayer * AddRankLayer(const char *name=nullptr)</div><div class="ttdef"><b>Definition:</b> <a href="_network_8cpp_source.xhtml#l02257">Network.cpp:2257</a></div></div>
<div class="ttc" id="astructarmnn_1_1_lstm_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_lstm_descriptor.xhtml">armnn::LstmDescriptor</a></div><div class="ttdoc">An LstmDescriptor for the LstmLayer.</div><div class="ttdef"><b>Definition:</b> <a href="_descriptors_8hpp_source.xhtml#l01069">Descriptors.hpp:1069</a></div></div>
<div class="ttc" id="astructarmnn_1_1_fully_connected_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_fully_connected_descriptor.xhtml">armnn::FullyConnectedDescriptor</a></div><div class="ttdoc">A FullyConnectedDescriptor for the FullyConnectedLayer.</div><div class="ttdef"><b>Definition:</b> <a href="_descriptors_8hpp_source.xhtml#l00495">Descriptors.hpp:495</a></div></div>
<div class="ttc" id="aclassarmnn_1_1_network_impl_xhtml_aff3fde909d22ed157046682e70129259"><div class="ttname"><a href="classarmnn_1_1_network_impl.xhtml#aff3fde909d22ed157046682e70129259">armnn::NetworkImpl::PrintGraph</a></div><div class="ttdeci">Status PrintGraph()</div><div class="ttdef"><b>Definition:</b> <a href="_network_8cpp_source.xhtml#l02053">Network.cpp:2053</a></div></div>
<div class="ttc" id="aclassarmnn_1_1_network_impl_xhtml_ad4726f9b7dd11db250d2a494a8a39494"><div class="ttname"><a href="classarmnn_1_1_network_impl.xhtml#ad4726f9b7dd11db250d2a494a8a39494">armnn::NetworkImpl::AddMeanLayer</a></div><div class="ttdeci">IConnectableLayer * AddMeanLayer(const MeanDescriptor &amp;meanDescriptor, const char *name=nullptr)</div><div class="ttdef"><b>Definition:</b> <a href="_network_8cpp_source.xhtml#l02479">Network.cpp:2479</a></div></div>
<div class="ttc" id="aclassarmnn_1_1_network_impl_xhtml_af776e284b9e2c4a3563abb8cf5e8ac5e"><div class="ttname"><a href="classarmnn_1_1_network_impl.xhtml#af776e284b9e2c4a3563abb8cf5e8ac5e">armnn::NetworkImpl::AddGatherNdLayer</a></div><div class="ttdeci">IConnectableLayer * AddGatherNdLayer(const char *name=nullptr)</div><div class="ttdef"><b>Definition:</b> <a href="_network_8cpp_source.xhtml#l02511">Network.cpp:2511</a></div></div>
<div class="ttc" id="astructarmnn_1_1_batch_mat_mul_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_batch_mat_mul_descriptor.xhtml">armnn::BatchMatMulDescriptor</a></div><div class="ttdoc">A BatchMatMulDescriptor for the BatchMatMul operator.</div><div class="ttdef"><b>Definition:</b> <a href="_descriptors_8hpp_source.xhtml#l01551">Descriptors.hpp:1551</a></div></div>
<div class="ttc" id="astructarmnn_1_1_resize_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_resize_descriptor.xhtml">armnn::ResizeDescriptor</a></div><div class="ttdoc">A ResizeDescriptor for the ResizeLayer.</div><div class="ttdef"><b>Definition:</b> <a href="_descriptors_8hpp_source.xhtml#l00952">Descriptors.hpp:952</a></div></div>
<div class="ttc" id="aclassarmnn_1_1_network_impl_xhtml_a4bfd8dee1a0315b651e977c672c0847c"><div class="ttname"><a href="classarmnn_1_1_network_impl.xhtml#a4bfd8dee1a0315b651e977c672c0847c">armnn::NetworkImpl::AddMinimumLayer</a></div><div class="ttdeci">IConnectableLayer * AddMinimumLayer(const char *name=nullptr)</div><div class="ttdef"><b>Definition:</b> <a href="_network_8cpp_source.xhtml#l02220">Network.cpp:2220</a></div></div>
<div class="ttc" id="astructarmnn_1_1_strided_slice_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_strided_slice_descriptor.xhtml">armnn::StridedSliceDescriptor</a></div><div class="ttdoc">A StridedSliceDescriptor for the StridedSliceLayer.</div><div class="ttdef"><b>Definition:</b> <a href="_descriptors_8hpp_source.xhtml#l01270">Descriptors.hpp:1270</a></div></div>
<div class="ttc" id="aclassarmnn_1_1_const_tensor_xhtml"><div class="ttname"><a href="classarmnn_1_1_const_tensor.xhtml">armnn::ConstTensor</a></div><div class="ttdoc">A tensor defined by a TensorInfo (shape and data type) and an immutable backing store.</div><div class="ttdef"><b>Definition:</b> <a href="_tensor_8hpp_source.xhtml#l00327">Tensor.hpp:327</a></div></div>
<div class="ttc" id="astructarmnn_1_1_pooling3d_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_pooling3d_descriptor.xhtml">armnn::Pooling3dDescriptor</a></div><div class="ttdoc">A Pooling3dDescriptor for the Pooling3dLayer.</div><div class="ttdef"><b>Definition:</b> <a href="_descriptors_8hpp_source.xhtml#l00419">Descriptors.hpp:419</a></div></div>
<div class="ttc" id="astructarmnn_1_1_reduce_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_reduce_descriptor.xhtml">armnn::ReduceDescriptor</a></div><div class="ttdoc">A ReduceDescriptor for the REDUCE operators.</div><div class="ttdef"><b>Definition:</b> <a href="_descriptors_8hpp_source.xhtml#l01505">Descriptors.hpp:1505</a></div></div>
<div class="ttc" id="aclassarmnn_1_1_subgraph_view_xhtml_a308b86dbdd0a745cef76904674c9850f"><div class="ttname"><a href="classarmnn_1_1_subgraph_view.xhtml#a308b86dbdd0a745cef76904674c9850f">armnn::SubgraphView::IConnectableLayerIterator</a></div><div class="ttdeci">IConnectableLayers::iterator IConnectableLayerIterator</div><div class="ttdef"><b>Definition:</b> <a href="_subgraph_view_8hpp_source.xhtml#l00064">SubgraphView.hpp:64</a></div></div>
<div class="ttc" id="anamespacearmnn_xhtml_a5b6893cda5b69359a4244c06054da18f"><div class="ttname"><a href="namespacearmnn.xhtml#a5b6893cda5b69359a4244c06054da18f">armnn::ModelOptions</a></div><div class="ttdeci">std::vector&lt; BackendOptions &gt; ModelOptions</div><div class="ttdef"><b>Definition:</b> <a href="_backend_options_8hpp_source.xhtml#l00018">BackendOptions.hpp:18</a></div></div>
<div class="ttc" id="astructarmnn_1_1_comparison_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_comparison_descriptor.xhtml">armnn::ComparisonDescriptor</a></div><div class="ttdoc">A ComparisonDescriptor for the ComparisonLayer.</div><div class="ttdef"><b>Definition:</b> <a href="_descriptors_8hpp_source.xhtml#l00089">Descriptors.hpp:89</a></div></div>
<div class="ttc" id="aclassarmnn_1_1_network_impl_xhtml_aaf5e9645806f49d0fcd7ac07ba187f4e"><div class="ttname"><a href="classarmnn_1_1_network_impl.xhtml#aaf5e9645806f49d0fcd7ac07ba187f4e">armnn::NetworkImpl::AddGatherLayer</a></div><div class="ttdeci">IConnectableLayer * AddGatherLayer(const GatherDescriptor &amp;gatherDescriptor, const char *name=nullptr)</div><div class="ttdef"><b>Definition:</b> <a href="_network_8cpp_source.xhtml#l02505">Network.cpp:2505</a></div></div>
<div class="ttc" id="aclassarmnn_1_1_network_impl_xhtml_a7b74bd646ccf7ee6eaf3e23a958606ff"><div class="ttname"><a href="classarmnn_1_1_network_impl.xhtml#a7b74bd646ccf7ee6eaf3e23a958606ff">armnn::NetworkImpl::AddBatchMatMulLayer</a></div><div class="ttdeci">IConnectableLayer * AddBatchMatMulLayer(const BatchMatMulDescriptor &amp;desc, const char *name=nullptr)</div><div class="ttdef"><b>Definition:</b> <a href="_network_8cpp_source.xhtml#l02900">Network.cpp:2900</a></div></div>
<div class="ttc" id="astructarmnn_1_1_stand_in_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_stand_in_descriptor.xhtml">armnn::StandInDescriptor</a></div><div class="ttdoc">A StandInDescriptor for the StandIn layer.</div><div class="ttdef"><b>Definition:</b> <a href="_descriptors_8hpp_source.xhtml#l01248">Descriptors.hpp:1248</a></div></div>
<div class="ttc" id="a_deprecated_8hpp_xhtml_af16119336bd0dfbfbc83fc283151067e"><div class="ttname"><a href="_deprecated_8hpp.xhtml#af16119336bd0dfbfbc83fc283151067e">ARMNN_DEPRECATED_MSG_REMOVAL_DATE</a></div><div class="ttdeci">#define ARMNN_DEPRECATED_MSG_REMOVAL_DATE(message, removed_in_release)</div><div class="ttdef"><b>Definition:</b> <a href="_deprecated_8hpp_source.xhtml#l00044">Deprecated.hpp:44</a></div></div>
<div class="ttc" id="aclassarmnn_1_1_network_impl_xhtml_abb59f6ba9988dae88e0f48e68d87fc32"><div class="ttname"><a href="classarmnn_1_1_network_impl.xhtml#abb59f6ba9988dae88e0f48e68d87fc32">armnn::NetworkImpl::AddMultiplicationLayer</a></div><div class="ttdeci">IConnectableLayer * AddMultiplicationLayer(const char *name=nullptr)</div><div class="ttdef"><b>Definition:</b> <a href="_network_8cpp_source.xhtml#l02230">Network.cpp:2230</a></div></div>
<div class="ttc" id="astructarmnn_1_1_views_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_views_descriptor.xhtml">armnn::ViewsDescriptor</a></div><div class="ttdoc">A ViewsDescriptor for the SplitterLayer.</div><div class="ttdef"><b>Definition:</b> <a href="_descriptors_8hpp_source.xhtml#l00244">Descriptors.hpp:244</a></div></div>
<div class="ttc" id="aclassarmnn_1_1_network_impl_xhtml_a39f1b38d89c4de186742eafcbb3b1319"><div class="ttname"><a href="classarmnn_1_1_network_impl.xhtml#a39f1b38d89c4de186742eafcbb3b1319">armnn::NetworkImpl::AddAdditionLayer</a></div><div class="ttdeci">IConnectableLayer * AddAdditionLayer(const char *name=nullptr)</div><div class="ttdef"><b>Definition:</b> <a href="_network_8cpp_source.xhtml#l02225">Network.cpp:2225</a></div></div>
<div class="ttc" id="aclassarmnn_1_1_network_impl_xhtml_a83b33973ca12078166b2436b313627b9"><div class="ttname"><a href="classarmnn_1_1_network_impl.xhtml#a83b33973ca12078166b2436b313627b9">armnn::NetworkImpl::AddLogSoftmaxLayer</a></div><div class="ttdeci">IConnectableLayer * AddLogSoftmaxLayer(const LogSoftmaxDescriptor &amp;logSoftmaxDescriptor, const char *name=nullptr)</div><div class="ttdef"><b>Definition:</b> <a href="_network_8cpp_source.xhtml#l02290">Network.cpp:2290</a></div></div>
<div class="ttc" id="aclassarmnn_1_1_network_impl_xhtml_a5c58d2b496d24e637f613af857aa3c3d"><div class="ttname"><a href="classarmnn_1_1_network_impl.xhtml#a5c58d2b496d24e637f613af857aa3c3d">armnn::NetworkImpl::AddChannelShuffleLayer</a></div><div class="ttdeci">IConnectableLayer * AddChannelShuffleLayer(const ChannelShuffleDescriptor &amp;channelShuffleDescriptor, const char *name=nullptr)</div><div class="ttdef"><b>Definition:</b> <a href="_network_8cpp_source.xhtml#l02074">Network.cpp:2074</a></div></div>
<div class="ttc" id="aclassarmnn_1_1_network_impl_xhtml_ac5c93cad39a690af862d49ffaec0d3c0"><div class="ttname"><a href="classarmnn_1_1_network_impl.xhtml#ac5c93cad39a690af862d49ffaec0d3c0">armnn::NetworkImpl::AddStridedSliceLayer</a></div><div class="ttdeci">IConnectableLayer * AddStridedSliceLayer(const StridedSliceDescriptor &amp;stridedSliceDescriptor, const char *name=nullptr)</div><div class="ttdef"><b>Definition:</b> <a href="_network_8cpp_source.xhtml#l02499">Network.cpp:2499</a></div></div>
<div class="ttc" id="a_tensor_fwd_8hpp_xhtml"><div class="ttname"><a href="_tensor_fwd_8hpp.xhtml">TensorFwd.hpp</a></div></div>
<div class="ttc" id="astructarmnn_1_1_pre_compiled_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_pre_compiled_descriptor.xhtml">armnn::PreCompiledDescriptor</a></div><div class="ttdoc">A PreCompiledDescriptor for the PreCompiledLayer.</div><div class="ttdef"><b>Definition:</b> <a href="_descriptors_8hpp_source.xhtml#l01334">Descriptors.hpp:1334</a></div></div>
<div class="ttc" id="astructarmnn_1_1_optimizer_options_opaque_impl_xhtml_ae186743f6442a5a45fb8cc100e49399e"><div class="ttname"><a href="structarmnn_1_1_optimizer_options_opaque_impl.xhtml#ae186743f6442a5a45fb8cc100e49399e">armnn::OptimizerOptionsOpaqueImpl::OptimizerOptionsOpaqueImpl</a></div><div class="ttdeci">OptimizerOptionsOpaqueImpl(bool reduceFp32ToFp16, bool debug, bool reduceFp32ToBf16, ShapeInferenceMethod shapeInferenceMethod, bool importEnabled, ModelOptions modelOptions, bool exportEnabled, bool debugToFile, bool allowExpandedDims)</div><div class="ttdef"><b>Definition:</b> <a href="_network_8hpp_source.xhtml#l00330">Network.hpp:330</a></div></div>
<div class="ttc" id="anamespacearmnn_xhtml_a1ec6b4c20ed294a96cf94c33c24caaf5"><div class="ttname"><a href="namespacearmnn.xhtml#a1ec6b4c20ed294a96cf94c33c24caaf5">armnn::CreateSupportedBackends</a></div><div class="ttdeci">BackendsMap CreateSupportedBackends(TensorHandleFactoryRegistry &amp;handleFactoryRegistry, BackendSettings &amp;backendSettings)</div><div class="ttdef"><b>Definition:</b> <a href="_network_8cpp_source.xhtml#l01221">Network.cpp:1221</a></div></div>
<div class="ttc" id="anamespacearmnn_xhtml_adf57837d00e8352d9b5cc5ab1fb5fee9"><div class="ttname"><a href="namespacearmnn.xhtml#adf57837d00e8352d9b5cc5ab1fb5fee9">armnn::ShapeInferenceMethod</a></div><div class="ttdeci">ShapeInferenceMethod</div><div class="ttdoc">The ShapeInferenceMethod modify how the output shapes are treated.</div><div class="ttdef"><b>Definition:</b> <a href="_types_8hpp_source.xhtml#l00232">Types.hpp:232</a></div></div>
<div class="ttc" id="aclassarmnn_1_1_network_impl_xhtml_ac6771c8752811fcfa91b3f0dee748144"><div class="ttname"><a href="classarmnn_1_1_network_impl.xhtml#ac6771c8752811fcfa91b3f0dee748144">armnn::NetworkImpl::AddDepthwiseConvolution2dLayer</a></div><div class="ttdeci">IConnectableLayer * AddDepthwiseConvolution2dLayer(const DepthwiseConvolution2dDescriptor &amp;convolution2dDescriptor, const char *name=nullptr)</div><div class="ttdef"><b>Definition:</b> <a href="_network_8cpp_source.xhtml#l02144">Network.cpp:2144</a></div></div>
<div class="ttc" id="aclassarmnn_1_1_network_impl_xhtml_aa51350bdd4976f3dd5a4e9d00a906b2c"><div class="ttname"><a href="classarmnn_1_1_network_impl.xhtml#aa51350bdd4976f3dd5a4e9d00a906b2c">armnn::NetworkImpl::AddActivationLayer</a></div><div class="ttdeci">IConnectableLayer * AddActivationLayer(const ActivationDescriptor &amp;activationDescriptor, const char *name=nullptr)</div><div class="ttdef"><b>Definition:</b> <a href="_network_8cpp_source.xhtml#l02179">Network.cpp:2179</a></div></div>
<div class="ttc" id="aclassarmnn_1_1_network_impl_xhtml_a1aa567f46c30960851c02847dc7b4215"><div class="ttname"><a href="classarmnn_1_1_network_impl.xhtml#a1aa567f46c30960851c02847dc7b4215">armnn::NetworkImpl::AddConstantLayer</a></div><div class="ttdeci">IConnectableLayer * AddConstantLayer(const ConstTensor &amp;input, const char *name=nullptr)</div><div class="ttdef"><b>Definition:</b> <a href="_network_8cpp_source.xhtml#l02296">Network.cpp:2296</a></div></div>
<div class="ttc" id="a_i_network_8hpp_xhtml"><div class="ttname"><a href="_i_network_8hpp.xhtml">INetwork.hpp</a></div></div>
<div class="ttc" id="aclassarmnn_1_1_network_impl_xhtml_ab71c4df72f6587aea671acaacd6a0d9a"><div class="ttname"><a href="classarmnn_1_1_network_impl.xhtml#ab71c4df72f6587aea671acaacd6a0d9a">armnn::NetworkImpl::AddConvertFp32ToFp16Layer</a></div><div class="ttdeci">IConnectableLayer * AddConvertFp32ToFp16Layer(const char *name=nullptr)</div><div class="ttdef"><b>Definition:</b> <a href="_network_8cpp_source.xhtml#l02127">Network.cpp:2127</a></div></div>
<div class="ttc" id="anamespacearmnn_xhtml"><div class="ttname"><a href="namespacearmnn.xhtml">armnn</a></div><div class="ttdoc">Copyright (c) 2021 ARM Limited and Contributors.</div><div class="ttdef"><b>Definition:</b> <a href="01__00__quick__start_8dox_source.xhtml#l00006">01_00_quick_start.dox:6</a></div></div>
<div class="ttc" id="aclassarmnn_1_1_i_strategy_xhtml"><div class="ttname"><a href="classarmnn_1_1_i_strategy.xhtml">armnn::IStrategy</a></div><div class="ttdef"><b>Definition:</b> <a href="_i_strategy_8hpp_source.xhtml#l00016">IStrategy.hpp:16</a></div></div>
<div class="ttc" id="anamespacearmnn_xhtml_a4dc0adc6737b5944e7671bee71788407a7b83d3f08fa392b79e3f553b585971cd"><div class="ttname"><a href="namespacearmnn.xhtml#a4dc0adc6737b5944e7671bee71788407a7b83d3f08fa392b79e3f553b585971cd">armnn::BoostLogSeverityMapping::warning</a></div><div class="ttdeci">@ warning</div></div>
<div class="ttc" id="astructarmnn_1_1_batch_to_space_nd_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_batch_to_space_nd_descriptor.xhtml">armnn::BatchToSpaceNdDescriptor</a></div><div class="ttdoc">A BatchToSpaceNdDescriptor for the BatchToSpaceNdLayer.</div><div class="ttdef"><b>Definition:</b> <a href="_descriptors_8hpp_source.xhtml#l00863">Descriptors.hpp:863</a></div></div>
<div class="ttc" id="astructarmnn_1_1_space_to_depth_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_space_to_depth_descriptor.xhtml">armnn::SpaceToDepthDescriptor</a></div><div class="ttdoc">A SpaceToDepthDescriptor for the SpaceToDepthLayer.</div><div class="ttdef"><b>Definition:</b> <a href="_descriptors_8hpp_source.xhtml#l01042">Descriptors.hpp:1042</a></div></div>
<div class="ttc" id="aclassarmnn_1_1_network_impl_xhtml_a0aeb4e528cf6ba4b7caca14a94fbcafe"><div class="ttname"><a href="classarmnn_1_1_network_impl.xhtml#a0aeb4e528cf6ba4b7caca14a94fbcafe">armnn::NetworkImpl::AddDivisionLayer</a></div><div class="ttdeci">IConnectableLayer * AddDivisionLayer(const char *name=nullptr)</div><div class="ttdef"><b>Definition:</b> <a href="_network_8cpp_source.xhtml#l02469">Network.cpp:2469</a></div></div>
<div class="ttc" id="anamespacearmnn_xhtml_a4de71c3661093e5c4ae7775114f43413"><div class="ttname"><a href="namespacearmnn.xhtml#a4de71c3661093e5c4ae7775114f43413">armnn::NetworkOptions</a></div><div class="ttdeci">std::vector&lt; BackendOptions &gt; NetworkOptions</div><div class="ttdef"><b>Definition:</b> <a href="_backend_options_8hpp_source.xhtml#l00016">BackendOptions.hpp:16</a></div></div>
<div class="ttc" id="aclassarmnn_1_1_network_impl_xhtml_af5790069aa11fd1c5bb2e17cecb06528"><div class="ttname"><a href="classarmnn_1_1_network_impl.xhtml#af5790069aa11fd1c5bb2e17cecb06528">armnn::NetworkImpl::AddOutputLayer</a></div><div class="ttdeci">IConnectableLayer * AddOutputLayer(LayerBindingId id, const char *name=nullptr)</div><div class="ttdef"><b>Definition:</b> <a href="_network_8cpp_source.xhtml#l02235">Network.cpp:2235</a></div></div>
<div class="ttc" id="astructarmnn_1_1_optimizer_options_opaque_impl_xhtml_a71194277c60153a5f86539f5d39f01db"><div class="ttname"><a href="structarmnn_1_1_optimizer_options_opaque_impl.xhtml#a71194277c60153a5f86539f5d39f01db">armnn::OptimizerOptionsOpaqueImpl::m_ModelOptions</a></div><div class="ttdeci">ModelOptions m_ModelOptions</div><div class="ttdoc">Enable Model Options.</div><div class="ttdef"><b>Definition:</b> <a href="_network_8hpp_source.xhtml#l00371">Network.hpp:371</a></div></div>
<div class="ttc" id="aclassarmnn_1_1_network_impl_xhtml_a19bad0cc50526ca9f4f84a688812cdf5"><div class="ttname"><a href="classarmnn_1_1_network_impl.xhtml#a19bad0cc50526ca9f4f84a688812cdf5">armnn::NetworkImpl::AddSpaceToDepthLayer</a></div><div class="ttdeci">IConnectableLayer * AddSpaceToDepthLayer(const SpaceToDepthDescriptor &amp;spaceToDepthDescriptor, const char *name=nullptr)</div><div class="ttdef"><b>Definition:</b> <a href="_network_8cpp_source.xhtml#l02317">Network.cpp:2317</a></div></div>
<div class="ttc" id="astructarmnn_1_1_detection_post_process_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_detection_post_process_descriptor.xhtml">armnn::DetectionPostProcessDescriptor</a></div><div class="ttdef"><b>Definition:</b> <a href="_descriptors_8hpp_source.xhtml#l00701">Descriptors.hpp:701</a></div></div>
<div class="ttc" id="aclassarmnn_1_1_network_impl_xhtml_aab976306ba3424cbc0c7ea33417d718d"><div class="ttname"><a href="classarmnn_1_1_network_impl.xhtml#aab976306ba3424cbc0c7ea33417d718d">armnn::NetworkImpl::AddElementwiseBinaryLayer</a></div><div class="ttdeci">IConnectableLayer * AddElementwiseBinaryLayer(const ElementwiseBinaryDescriptor &amp;elementwiseBinaryDescriptor, const char *name=nullptr)</div><div class="ttdef"><b>Definition:</b> <a href="_network_8cpp_source.xhtml#l02086">Network.cpp:2086</a></div></div>
<div class="ttc" id="astructarmnn_1_1_fill_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_fill_descriptor.xhtml">armnn::FillDescriptor</a></div><div class="ttdoc">A FillDescriptor for the FillLayer.</div><div class="ttdef"><b>Definition:</b> <a href="_descriptors_8hpp_source.xhtml#l00913">Descriptors.hpp:913</a></div></div>
<div class="ttc" id="aclassarmnn_1_1_network_impl_xhtml_a2090bf6670b73c69309ed592068aa3af"><div class="ttname"><a href="classarmnn_1_1_network_impl.xhtml#a2090bf6670b73c69309ed592068aa3af">armnn::NetworkImpl::AddConvertFp16ToFp32Layer</a></div><div class="ttdeci">IConnectableLayer * AddConvertFp16ToFp32Layer(const char *name=nullptr)</div><div class="ttdef"><b>Definition:</b> <a href="_network_8cpp_source.xhtml#l02122">Network.cpp:2122</a></div></div>
<div class="ttc" id="aclassarmnn_1_1_network_impl_xhtml_af13795cdf49e63d8bc3cb409592cdb9d"><div class="ttname"><a href="classarmnn_1_1_network_impl.xhtml#af13795cdf49e63d8bc3cb409592cdb9d">armnn::NetworkImpl::AddSubtractionLayer</a></div><div class="ttdeci">IConnectableLayer * AddSubtractionLayer(const char *name=nullptr)</div><div class="ttdef"><b>Definition:</b> <a href="_network_8cpp_source.xhtml#l02474">Network.cpp:2474</a></div></div>
<div class="ttc" id="aclassarmnn_1_1_network_impl_xhtml_ac1134a94265293ea7347180260f787d2"><div class="ttname"><a href="classarmnn_1_1_network_impl.xhtml#ac1134a94265293ea7347180260f787d2">armnn::NetworkImpl::AddDetectionPostProcessLayer</a></div><div class="ttdeci">IConnectableLayer * AddDetectionPostProcessLayer(const DetectionPostProcessDescriptor &amp;descriptor, const ConstTensor &amp;anchors, const char *name=nullptr)</div><div class="ttdef"><b>Definition:</b> <a href="_network_8cpp_source.xhtml#l02151">Network.cpp:2151</a></div></div>
<div class="ttc" id="aclassarmnn_1_1_network_impl_xhtml_a435ea88480b8645026dd45fd692663a1"><div class="ttname"><a href="classarmnn_1_1_network_impl.xhtml#a435ea88480b8645026dd45fd692663a1">armnn::NetworkImpl::AddFloorLayer</a></div><div class="ttdeci">IConnectableLayer * AddFloorLayer(const char *name=nullptr)</div><div class="ttdef"><b>Definition:</b> <a href="_network_8cpp_source.xhtml#l02323">Network.cpp:2323</a></div></div>
<div class="ttc" id="astructarmnn_1_1_depthwise_convolution2d_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_depthwise_convolution2d_descriptor.xhtml">armnn::DepthwiseConvolution2dDescriptor</a></div><div class="ttdoc">A DepthwiseConvolution2dDescriptor for the DepthwiseConvolution2dLayer.</div><div class="ttdef"><b>Definition:</b> <a href="_descriptors_8hpp_source.xhtml#l00647">Descriptors.hpp:647</a></div></div>
<div class="ttc" id="astructarmnn_1_1_mean_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_mean_descriptor.xhtml">armnn::MeanDescriptor</a></div><div class="ttdoc">A MeanDescriptor for the MeanLayer.</div><div class="ttdef"><b>Definition:</b> <a href="_descriptors_8hpp_source.xhtml#l01139">Descriptors.hpp:1139</a></div></div>
<div class="ttc" id="astructarmnn_1_1_optimization_result_xhtml_a6edd4a9bf05b570bb3f468e5ffe08404"><div class="ttname"><a href="structarmnn_1_1_optimization_result.xhtml#a6edd4a9bf05b570bb3f468e5ffe08404">armnn::OptimizationResult::OptimizationResult</a></div><div class="ttdeci">OptimizationResult(bool warning, bool error)</div><div class="ttdef"><b>Definition:</b> <a href="_network_8hpp_source.xhtml#l00254">Network.hpp:254</a></div></div>
<div class="ttc" id="aclassarmnn_1_1_network_impl_xhtml_a11f49d84f0cfd8df65f4d5206cd43b6d"><div class="ttname"><a href="classarmnn_1_1_network_impl.xhtml#a11f49d84f0cfd8df65f4d5206cd43b6d">armnn::NetworkImpl::AddPermuteLayer</a></div><div class="ttdeci">IConnectableLayer * AddPermuteLayer(const PermuteDescriptor &amp;permuteDescriptor, const char *name=nullptr)</div><div class="ttdef"><b>Definition:</b> <a href="_network_8cpp_source.xhtml#l02161">Network.cpp:2161</a></div></div>
<div class="ttc" id="aclassarmnn_1_1_network_impl_xhtml_aee282f8e3379d3f5bed1032d20884248"><div class="ttname"><a href="classarmnn_1_1_network_impl.xhtml#aee282f8e3379d3f5bed1032d20884248">armnn::NetworkImpl::AddPooling3dLayer</a></div><div class="ttdeci">IConnectableLayer * AddPooling3dLayer(const Pooling3dDescriptor &amp;pooling3dDescriptor, const char *name=nullptr)</div><div class="ttdef"><b>Definition:</b> <a href="_network_8cpp_source.xhtml#l02173">Network.cpp:2173</a></div></div>
<div class="ttc" id="aclassarmnn_1_1_network_impl_xhtml_aa6c1c42ea44777302e87ce0fad5ac510"><div class="ttname"><a href="classarmnn_1_1_network_impl.xhtml#aa6c1c42ea44777302e87ce0fad5ac510">armnn::NetworkImpl::AddInputLayer</a></div><div class="ttdeci">IConnectableLayer * AddInputLayer(LayerBindingId id, const char *name=nullptr)</div><div class="ttdef"><b>Definition:</b> <a href="_network_8cpp_source.xhtml#l02059">Network.cpp:2059</a></div></div>
<div class="ttc" id="anamespacearmnn_xhtml_af362583b7b4c471c434cb0fdb86c2ae2"><div class="ttname"><a href="namespacearmnn.xhtml#af362583b7b4c471c434cb0fdb86c2ae2">armnn::CompiledBlobPtr</a></div><div class="ttdeci">std::unique_ptr&lt; void, CompiledBlobDeleter &gt; CompiledBlobPtr</div><div class="ttdef"><b>Definition:</b> <a href="_i_network_8hpp_source.xhtml#l00331">INetwork.hpp:331</a></div></div>
<div class="ttc" id="aclassarmnn_1_1_network_impl_xhtml_aea1059833739d3dccebb3a03ec35a1e6"><div class="ttname"><a href="classarmnn_1_1_network_impl.xhtml#aea1059833739d3dccebb3a03ec35a1e6">armnn::NetworkImpl::AddConcatLayer</a></div><div class="ttdeci">IConnectableLayer * AddConcatLayer(const ConcatDescriptor &amp;concatDescriptor, const char *name=nullptr)</div><div class="ttdef"><b>Definition:</b> <a href="_network_8cpp_source.xhtml#l02110">Network.cpp:2110</a></div></div>
<div class="ttc" id="astructarmnn_1_1_l2_normalization_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_l2_normalization_descriptor.xhtml">armnn::L2NormalizationDescriptor</a></div><div class="ttdoc">A L2NormalizationDescriptor for the L2NormalizationLayer.</div><div class="ttdef"><b>Definition:</b> <a href="_descriptors_8hpp_source.xhtml#l00797">Descriptors.hpp:797</a></div></div>
<div class="ttc" id="astructarmnn_1_1_channel_shuffle_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_channel_shuffle_descriptor.xhtml">armnn::ChannelShuffleDescriptor</a></div><div class="ttdoc">A ChannelShuffleDescriptor for the ChannelShuffle operator.</div><div class="ttdef"><b>Definition:</b> <a href="_descriptors_8hpp_source.xhtml#l01529">Descriptors.hpp:1529</a></div></div>
<div class="ttc" id="astructarmnn_1_1_convolution3d_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_convolution3d_descriptor.xhtml">armnn::Convolution3dDescriptor</a></div><div class="ttdoc">A Convolution3dDescriptor for the Convolution3dLayer.</div><div class="ttdef"><b>Definition:</b> <a href="_descriptors_8hpp_source.xhtml#l00576">Descriptors.hpp:576</a></div></div>
<div class="ttc" id="aclassarmnn_1_1_optimized_network_impl_xhtml"><div class="ttname"><a href="classarmnn_1_1_optimized_network_impl.xhtml">armnn::OptimizedNetworkImpl</a></div><div class="ttdef"><b>Definition:</b> <a href="_optimized_network_impl_8hpp_source.xhtml#l00011">OptimizedNetworkImpl.hpp:11</a></div></div>
<div class="ttc" id="astructarmnn_1_1_optimization_result_xhtml_a1f68424ba084c388888042ae6c37cbda"><div class="ttname"><a href="structarmnn_1_1_optimization_result.xhtml#a1f68424ba084c388888042ae6c37cbda">armnn::OptimizationResult::m_Warning</a></div><div class="ttdeci">bool m_Warning</div><div class="ttdef"><b>Definition:</b> <a href="_network_8hpp_source.xhtml#l00251">Network.hpp:251</a></div></div>
<div class="ttc" id="astructarmnn_1_1_convolution2d_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_convolution2d_descriptor.xhtml">armnn::Convolution2dDescriptor</a></div><div class="ttdoc">A Convolution2dDescriptor for the Convolution2dLayer.</div><div class="ttdef"><b>Definition:</b> <a href="_descriptors_8hpp_source.xhtml#l00522">Descriptors.hpp:522</a></div></div>
<div class="ttc" id="aclassarmnn_1_1_network_impl_xhtml_a74894d085e78ff80f45fc09dd2381f08"><div class="ttname"><a href="classarmnn_1_1_network_impl.xhtml#a74894d085e78ff80f45fc09dd2381f08">armnn::NetworkImpl::AddStandInLayer</a></div><div class="ttdeci">IConnectableLayer * AddStandInLayer(const StandInDescriptor &amp;descriptor, const char *name=nullptr)</div><div class="ttdef"><b>Definition:</b> <a href="_network_8cpp_source.xhtml#l02566">Network.cpp:2566</a></div></div>
<div class="ttc" id="a_layer_8hpp_xhtml"><div class="ttname"><a href="_layer_8hpp.xhtml">Layer.hpp</a></div></div>
<div class="ttc" id="aclassarmnn_1_1_network_impl_xhtml_a2acbae0b9e98c94b843677484775c86a"><div class="ttname"><a href="classarmnn_1_1_network_impl.xhtml#a2acbae0b9e98c94b843677484775c86a">armnn::NetworkImpl::AddQLstmLayer</a></div><div class="ttdeci">IConnectableLayer * AddQLstmLayer(const QLstmDescriptor &amp;descriptor, const LstmInputParams &amp;params, const char *name=nullptr)</div><div class="ttdef"><b>Definition:</b> <a href="_network_8cpp_source.xhtml#l02610">Network.cpp:2610</a></div></div>
<div class="ttc" id="astructarmnn_1_1_batch_normalization_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_batch_normalization_descriptor.xhtml">armnn::BatchNormalizationDescriptor</a></div><div class="ttdoc">A BatchNormalizationDescriptor for the BatchNormalizationLayer.</div><div class="ttdef"><b>Definition:</b> <a href="_descriptors_8hpp_source.xhtml#l00816">Descriptors.hpp:816</a></div></div>
<div class="ttc" id="astructarmnn_1_1_q_lstm_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_q_lstm_descriptor.xhtml">armnn::QLstmDescriptor</a></div><div class="ttdoc">A QLstmDescriptor for the QLstmLayer.</div><div class="ttdef"><b>Definition:</b> <a href="_descriptors_8hpp_source.xhtml#l01347">Descriptors.hpp:1347</a></div></div>
<div class="ttc" id="anamespacearmnn_xhtml_a67a0db04d321a74b7e7fcfd3f1a3f70b"><div class="ttname"><a href="namespacearmnn.xhtml#a67a0db04d321a74b7e7fcfd3f1a3f70b">armnn::Status</a></div><div class="ttdeci">Status</div><div class="ttdef"><b>Definition:</b> <a href="_types_8hpp_source.xhtml#l00042">Types.hpp:42</a></div></div>
<div class="ttc" id="a_descriptors_fwd_8hpp_xhtml"><div class="ttname"><a href="_descriptors_fwd_8hpp.xhtml">DescriptorsFwd.hpp</a></div></div>
<div class="ttc" id="aclassarmnn_1_1_network_impl_xhtml_a41fd7b56923d5625bac2cbfebed1a393"><div class="ttname"><a href="classarmnn_1_1_network_impl.xhtml#a41fd7b56923d5625bac2cbfebed1a393">armnn::NetworkImpl::AddTransposeConvolution2dLayer</a></div><div class="ttdeci">IConnectableLayer * AddTransposeConvolution2dLayer(const TransposeConvolution2dDescriptor &amp;descriptor, const ConstTensor &amp;weights, const Optional&lt; ConstTensor &gt; &amp;biases, const char *name=nullptr)</div><div class="ttdef"><b>Definition:</b> <a href="_network_8cpp_source.xhtml#l02531">Network.cpp:2531</a></div></div>
<div class="ttc" id="aclassarmnn_1_1_network_impl_xhtml_afc94c35c0bbe852a60046bf2e756b2e0"><div class="ttname"><a href="classarmnn_1_1_network_impl.xhtml#afc94c35c0bbe852a60046bf2e756b2e0">armnn::NetworkImpl::AddFillLayer</a></div><div class="ttdeci">IConnectableLayer * AddFillLayer(const FillDescriptor &amp;fillDescriptor, const char *name=nullptr)</div><div class="ttdef"><b>Definition:</b> <a href="_network_8cpp_source.xhtml#l02098">Network.cpp:2098</a></div></div>
<div class="ttc" id="astructarmnn_1_1_backend_settings_xhtml"><div class="ttname"><a href="structarmnn_1_1_backend_settings.xhtml">armnn::BackendSettings</a></div><div class="ttdef"><b>Definition:</b> <a href="_backend_settings_8hpp_source.xhtml#l00018">BackendSettings.hpp:18</a></div></div>
<div class="ttc" id="aclassarmnn_1_1_network_impl_xhtml_a6d614a503a34ea3712b388aa4340ddbe"><div class="ttname"><a href="classarmnn_1_1_network_impl.xhtml#a6d614a503a34ea3712b388aa4340ddbe">armnn::NetworkImpl::AddPreluLayer</a></div><div class="ttdeci">IConnectableLayer * AddPreluLayer(const char *name=nullptr)</div><div class="ttdef"><b>Definition:</b> <a href="_network_8cpp_source.xhtml#l02526">Network.cpp:2526</a></div></div>
<div class="ttc" id="astructarmnn_1_1_quantized_lstm_input_params_xhtml"><div class="ttname"><a href="structarmnn_1_1_quantized_lstm_input_params.xhtml">armnn::QuantizedLstmInputParams</a></div><div class="ttdef"><b>Definition:</b> <a href="_quantized_lstm_params_8hpp_source.xhtml#l00013">QuantizedLstmParams.hpp:13</a></div></div>
<div class="ttc" id="astructarmnn_1_1_optimizer_options_opaque_impl_xhtml_a3175125394ee8d824f3bff54b7a73e1d"><div class="ttname"><a href="structarmnn_1_1_optimizer_options_opaque_impl.xhtml#a3175125394ee8d824f3bff54b7a73e1d">armnn::OptimizerOptionsOpaqueImpl::OptimizerOptionsOpaqueImpl</a></div><div class="ttdeci">OptimizerOptionsOpaqueImpl()</div><div class="ttdef"><b>Definition:</b> <a href="_network_8hpp_source.xhtml#l00300">Network.hpp:300</a></div></div>
<div class="ttc" id="aclassarmnn_1_1_network_impl_xhtml_ac7dca3e9f2ab2f2c64b42fc59a67188a"><div class="ttname"><a href="classarmnn_1_1_network_impl.xhtml#ac7dca3e9f2ab2f2c64b42fc59a67188a">armnn::NetworkImpl::AddComparisonLayer</a></div><div class="ttdeci">IConnectableLayer * AddComparisonLayer(const ComparisonDescriptor &amp;comparisonDescriptor, const char *name=nullptr)</div><div class="ttdef"><b>Definition:</b> <a href="_network_8cpp_source.xhtml#l02080">Network.cpp:2080</a></div></div>
<div class="ttc" id="anamespacearmnn_xhtml_a4dc0adc6737b5944e7671bee71788407aad42f6697b035b7580e4fef93be20b4d"><div class="ttname"><a href="namespacearmnn.xhtml#a4dc0adc6737b5944e7671bee71788407aad42f6697b035b7580e4fef93be20b4d">armnn::BoostLogSeverityMapping::debug</a></div><div class="ttdeci">@ debug</div></div>
<div class="ttc" id="aclassarmnn_1_1_network_impl_xhtml_a72f7f58c37d9d856fcb648b5fa68cf59"><div class="ttname"><a href="classarmnn_1_1_network_impl.xhtml#a72f7f58c37d9d856fcb648b5fa68cf59">armnn::NetworkImpl::AddCastLayer</a></div><div class="ttdeci">IConnectableLayer * AddCastLayer(const char *name=nullptr)</div><div class="ttdef"><b>Definition:</b> <a href="_network_8cpp_source.xhtml#l02070">Network.cpp:2070</a></div></div>
<div class="ttc" id="astructarmnn_1_1_optimization_result_xhtml"><div class="ttname"><a href="structarmnn_1_1_optimization_result.xhtml">armnn::OptimizationResult</a></div><div class="ttdef"><b>Definition:</b> <a href="_network_8hpp_source.xhtml#l00249">Network.hpp:249</a></div></div>
<div class="ttc" id="aclassarmnn_1_1_network_impl_xhtml_adc8c1c505bca8233fe238b3b7fb80200"><div class="ttname"><a href="classarmnn_1_1_network_impl.xhtml#adc8c1c505bca8233fe238b3b7fb80200">armnn::NetworkImpl::AddArgMinMaxLayer</a></div><div class="ttdeci">IConnectableLayer * AddArgMinMaxLayer(const ArgMinMaxDescriptor &amp;desc, const char *name=nullptr)</div><div class="ttdef"><b>Definition:</b> <a href="_network_8cpp_source.xhtml#l02185">Network.cpp:2185</a></div></div>
<div class="ttc" id="astructarmnn_1_1_origins_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_origins_descriptor.xhtml">armnn::OriginsDescriptor</a></div><div class="ttdoc">An OriginsDescriptor for the ConcatLayer.</div><div class="ttdef"><b>Definition:</b> <a href="_descriptors_8hpp_source.xhtml#l00201">Descriptors.hpp:201</a></div></div>
<div class="ttc" id="aclassarmnn_1_1_network_impl_xhtml_a357aca04172ed22fa32e5a69122b0fec"><div class="ttname"><a href="classarmnn_1_1_network_impl.xhtml#a357aca04172ed22fa32e5a69122b0fec">armnn::NetworkImpl::AddDequantizeLayer</a></div><div class="ttdeci">IConnectableLayer * AddDequantizeLayer(const char *name=nullptr)</div><div class="ttdef"><b>Definition:</b> <a href="_network_8cpp_source.xhtml#l02494">Network.cpp:2494</a></div></div>
<div class="ttc" id="astructarmnn_1_1_reshape_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_reshape_descriptor.xhtml">armnn::ReshapeDescriptor</a></div><div class="ttdoc">A ReshapeDescriptor for the ReshapeLayer.</div><div class="ttdef"><b>Definition:</b> <a href="_descriptors_8hpp_source.xhtml#l00990">Descriptors.hpp:990</a></div></div>
<div class="ttc" id="aclassarmnn_1_1_network_impl_xhtml_aaff51346dadec2c1430abf007fed4cc9"><div class="ttname"><a href="classarmnn_1_1_network_impl.xhtml#aaff51346dadec2c1430abf007fed4cc9">armnn::NetworkImpl::AddL2NormalizationLayer</a></div><div class="ttdeci">IConnectableLayer * AddL2NormalizationLayer(const L2NormalizationDescriptor &amp;desc, const char *name=nullptr)</div><div class="ttdef"><b>Definition:</b> <a href="_network_8cpp_source.xhtml#l02284">Network.cpp:2284</a></div></div>
<div class="ttc" id="aclassarmnn_1_1_network_impl_xhtml_a43de8213707de0e76d80a32cd4b9b482"><div class="ttname"><a href="classarmnn_1_1_network_impl.xhtml#a43de8213707de0e76d80a32cd4b9b482">armnn::NetworkImpl::AddConvolution3dLayer</a></div><div class="ttdeci">IConnectableLayer * AddConvolution3dLayer(const Convolution3dDescriptor &amp;convolution3dDescriptor, const char *name=nullptr)</div><div class="ttdef"><b>Definition:</b> <a href="_network_8cpp_source.xhtml#l02132">Network.cpp:2132</a></div></div>
<div class="ttc" id="astructarmnn_1_1_permute_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_permute_descriptor.xhtml">armnn::PermuteDescriptor</a></div><div class="ttdoc">A PermuteDescriptor for the PermuteLayer.</div><div class="ttdef"><b>Definition:</b> <a href="_descriptors_8hpp_source.xhtml#l00149">Descriptors.hpp:149</a></div></div>
<div class="ttc" id="astructarmnn_1_1_transpose_convolution2d_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_transpose_convolution2d_descriptor.xhtml">armnn::TransposeConvolution2dDescriptor</a></div><div class="ttdoc">A TransposeConvolution2dDescriptor for the TransposeConvolution2dLayer.</div><div class="ttdef"><b>Definition:</b> <a href="_descriptors_8hpp_source.xhtml#l01407">Descriptors.hpp:1407</a></div></div>
<div class="ttc" id="aclassarmnn_1_1_graph_xhtml"><div class="ttname"><a href="classarmnn_1_1_graph.xhtml">armnn::Graph</a></div><div class="ttdef"><b>Definition:</b> <a href="_graph_8hpp_source.xhtml#l00030">Graph.hpp:30</a></div></div>
<div class="ttc" id="astructarmnn_1_1_optimization_result_xhtml_aca1654c65182fe4e7d5fd45f556fcd57"><div class="ttname"><a href="structarmnn_1_1_optimization_result.xhtml#aca1654c65182fe4e7d5fd45f556fcd57">armnn::OptimizationResult::IsError</a></div><div class="ttdeci">bool IsError() const</div><div class="ttdef"><b>Definition:</b> <a href="_network_8hpp_source.xhtml#l00266">Network.hpp:266</a></div></div>
<div class="ttc" id="aclassarmnn_1_1_network_impl_xhtml_afe0a4f719f9752a405e71878da7012ba"><div class="ttname"><a href="classarmnn_1_1_network_impl.xhtml#afe0a4f719f9752a405e71878da7012ba">armnn::NetworkImpl::GetGraph</a></div><div class="ttdeci">const Graph &amp; GetGraph() const</div><div class="ttdef"><b>Definition:</b> <a href="_network_8hpp_source.xhtml#l00038">Network.hpp:38</a></div></div>
<div class="ttc" id="aclassarmnn_1_1_network_impl_xhtml_a26e69cda5fe9642f9198c24ae5fdf9bc"><div class="ttname"><a href="classarmnn_1_1_network_impl.xhtml#a26e69cda5fe9642f9198c24ae5fdf9bc">armnn::NetworkImpl::AddSwitchLayer</a></div><div class="ttdeci">IConnectableLayer * AddSwitchLayer(const char *name=nullptr)</div><div class="ttdef"><b>Definition:</b> <a href="_network_8cpp_source.xhtml#l02521">Network.cpp:2521</a></div></div>
<div class="ttc" id="aclassarmnn_1_1_network_impl_xhtml_a1ff7534e1254dfb3ef8288194cca7ce3"><div class="ttname"><a href="classarmnn_1_1_network_impl.xhtml#a1ff7534e1254dfb3ef8288194cca7ce3">armnn::NetworkImpl::AddLogicalBinaryLayer</a></div><div class="ttdeci">IConnectableLayer * AddLogicalBinaryLayer(const LogicalBinaryDescriptor &amp;logicalBinaryDescriptor, const char *name=nullptr)</div><div class="ttdef"><b>Definition:</b> <a href="_network_8cpp_source.xhtml#l02752">Network.cpp:2752</a></div></div>
<div class="ttc" id="astructarmnn_1_1_pooling2d_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_pooling2d_descriptor.xhtml">armnn::Pooling2dDescriptor</a></div><div class="ttdoc">A Pooling2dDescriptor for the Pooling2dLayer.</div><div class="ttdef"><b>Definition:</b> <a href="_descriptors_8hpp_source.xhtml#l00359">Descriptors.hpp:359</a></div></div>
<div class="ttc" id="astructarmnn_1_1_logical_binary_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_logical_binary_descriptor.xhtml">armnn::LogicalBinaryDescriptor</a></div><div class="ttdoc">A LogicalBinaryDescriptor for the LogicalBinaryLayer.</div><div class="ttdef"><b>Definition:</b> <a href="_descriptors_8hpp_source.xhtml#l01485">Descriptors.hpp:1485</a></div></div>
<div class="ttc" id="astructarmnn_1_1_optimizer_options_opaque_impl_xhtml_aeaeb36b5eb65d2cc53286421ed3dfcbe"><div class="ttname"><a href="structarmnn_1_1_optimizer_options_opaque_impl.xhtml#aeaeb36b5eb65d2cc53286421ed3dfcbe">armnn::OptimizerOptionsOpaqueImpl::OptimizerOptionsOpaqueImpl</a></div><div class="ttdeci">OptimizerOptionsOpaqueImpl(bool reduceFp32ToFp16, bool debug, bool reduceFp32ToBf16, bool importEnabled, ModelOptions modelOptions={}, bool exportEnabled=false, bool debugToFile=false)</div><div class="ttdef"><b>Definition:</b> <a href="_network_8hpp_source.xhtml#l00314">Network.hpp:314</a></div></div>
<div class="ttc" id="aclassarmnn_1_1_network_impl_xhtml_aba22dcdeed6e7c489aea6eb798c0a10a"><div class="ttname"><a href="classarmnn_1_1_network_impl.xhtml#aba22dcdeed6e7c489aea6eb798c0a10a">armnn::NetworkImpl::AddUnidirectionalSequenceLstmLayer</a></div><div class="ttdeci">IConnectableLayer * AddUnidirectionalSequenceLstmLayer(const UnidirectionalSequenceLstmDescriptor &amp;descriptor, const LstmInputParams &amp;params, const char *name=nullptr)</div><div class="ttdef"><b>Definition:</b> <a href="_network_8cpp_source.xhtml#l02758">Network.cpp:2758</a></div></div>
<div class="ttc" id="aclassarmnn_1_1_network_impl_xhtml_a471991a84030eb3ae601da2bee757870"><div class="ttname"><a href="classarmnn_1_1_network_impl.xhtml#a471991a84030eb3ae601da2bee757870">armnn::NetworkImpl::AddFullyConnectedLayer</a></div><div class="ttdeci">IConnectableLayer * AddFullyConnectedLayer(const FullyConnectedDescriptor &amp;fullyConnectedDescriptor, const char *name=nullptr)</div><div class="ttdef"><b>Definition:</b> <a href="_network_8cpp_source.xhtml#l02104">Network.cpp:2104</a></div></div>
<div class="ttc" id="aclassarmnn_1_1_network_impl_xhtml_a8a3380be13fba749fc4208214b049347"><div class="ttname"><a href="classarmnn_1_1_network_impl.xhtml#a8a3380be13fba749fc4208214b049347">armnn::NetworkImpl::AddReshapeLayer</a></div><div class="ttdeci">IConnectableLayer * AddReshapeLayer(const ReshapeDescriptor &amp;reshapeDescriptor, const char *name=nullptr)</div><div class="ttdef"><b>Definition:</b> <a href="_network_8cpp_source.xhtml#l02305">Network.cpp:2305</a></div></div>
<div class="ttc" id="aclassarmnn_1_1_optional_xhtml"><div class="ttname"><a href="classarmnn_1_1_optional.xhtml">armnn::Optional</a></div><div class="ttdef"><b>Definition:</b> <a href="_optional_8hpp_source.xhtml#l00270">Optional.hpp:270</a></div></div>
<div class="ttc" id="aclassarmnn_1_1_network_impl_xhtml_ad443897d51b291c83d81d809af07f4e0"><div class="ttname"><a href="classarmnn_1_1_network_impl.xhtml#ad443897d51b291c83d81d809af07f4e0">armnn::NetworkImpl::~NetworkImpl</a></div><div class="ttdeci">~NetworkImpl()</div><div class="ttdef"><b>Definition:</b> <a href="_network_8cpp_source.xhtml#l02049">Network.cpp:2049</a></div></div>
<div class="ttc" id="astructarmnn_1_1_optimizer_options_opaque_impl_xhtml"><div class="ttname"><a href="structarmnn_1_1_optimizer_options_opaque_impl.xhtml">armnn::OptimizerOptionsOpaqueImpl</a></div><div class="ttdef"><b>Definition:</b> <a href="_network_8hpp_source.xhtml#l00296">Network.hpp:296</a></div></div>
<div class="ttc" id="astructarmnn_1_1_optimization_result_xhtml_a2a35773a5a0e08b180a12205c3e15500"><div class="ttname"><a href="structarmnn_1_1_optimization_result.xhtml#a2a35773a5a0e08b180a12205c3e15500">armnn::OptimizationResult::IsWarningOnly</a></div><div class="ttdeci">bool IsWarningOnly() const</div><div class="ttdef"><b>Definition:</b> <a href="_network_8hpp_source.xhtml#l00264">Network.hpp:264</a></div></div>
<div class="ttc" id="astructarmnn_1_1_optimization_result_xhtml_a41a657cfacb52a80a73575c5c730ab88"><div class="ttname"><a href="structarmnn_1_1_optimization_result.xhtml#a41a657cfacb52a80a73575c5c730ab88">armnn::OptimizationResult::m_Error</a></div><div class="ttdeci">bool m_Error</div><div class="ttdef"><b>Definition:</b> <a href="_network_8hpp_source.xhtml#l00252">Network.hpp:252</a></div></div>
<div class="ttc" id="astructarmnn_1_1_arg_min_max_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_arg_min_max_descriptor.xhtml">armnn::ArgMinMaxDescriptor</a></div><div class="ttdoc">An ArgMinMaxDescriptor for ArgMinMaxLayer.</div><div class="ttdef"><b>Definition:</b> <a href="_descriptors_8hpp_source.xhtml#l00067">Descriptors.hpp:67</a></div></div>
<div class="ttc" id="aclassarmnn_1_1_network_impl_xhtml"><div class="ttname"><a href="classarmnn_1_1_network_impl.xhtml">armnn::NetworkImpl</a></div><div class="ttdoc">Private implementation of INetwork.</div><div class="ttdef"><b>Definition:</b> <a href="_network_8hpp_source.xhtml#l00032">Network.hpp:32</a></div></div>
<div class="ttc" id="aclassarmnn_1_1_network_impl_xhtml_ab067ba4ee9416d93abb8a52f3dc8feba"><div class="ttname"><a href="classarmnn_1_1_network_impl.xhtml#ab067ba4ee9416d93abb8a52f3dc8feba">armnn::NetworkImpl::AddTransposeLayer</a></div><div class="ttdeci">IConnectableLayer * AddTransposeLayer(const TransposeDescriptor &amp;transposeDescriptor, const char *name=nullptr)</div><div class="ttdef"><b>Definition:</b> <a href="_network_8cpp_source.xhtml#l02553">Network.cpp:2553</a></div></div>
<div class="ttc" id="aclassarmnn_1_1_network_impl_xhtml_a0a2fdd4f442952c97a8f24de6700473a"><div class="ttname"><a href="classarmnn_1_1_network_impl.xhtml#a0a2fdd4f442952c97a8f24de6700473a">armnn::NetworkImpl::AddLstmLayer</a></div><div class="ttdeci">IConnectableLayer * AddLstmLayer(const LstmDescriptor &amp;descriptor, const LstmInputParams &amp;params, const char *name=nullptr)</div><div class="ttdef"><b>Definition:</b> <a href="_network_8cpp_source.xhtml#l02328">Network.cpp:2328</a></div></div>
<div class="ttc" id="astructarmnn_1_1_lstm_input_params_xhtml"><div class="ttname"><a href="structarmnn_1_1_lstm_input_params.xhtml">armnn::LstmInputParams</a></div><div class="ttdef"><b>Definition:</b> <a href="_lstm_params_8hpp_source.xhtml#l00013">LstmParams.hpp:13</a></div></div>
<div class="ttc" id="anamespacestd_xhtml"><div class="ttname"><a href="namespacestd.xhtml">std</a></div><div class="ttdef"><b>Definition:</b> <a href="_backend_id_8hpp_source.xhtml#l00149">BackendId.hpp:149</a></div></div>
<div class="ttc" id="a_types_8hpp_xhtml"><div class="ttname"><a href="_types_8hpp.xhtml">Types.hpp</a></div></div>
<div class="ttc" id="aclassarmnn_1_1_network_impl_xhtml_a57590d7777211673d2052f702f0b07a1"><div class="ttname"><a href="classarmnn_1_1_network_impl.xhtml#a57590d7777211673d2052f702f0b07a1">armnn::NetworkImpl::AddMaximumLayer</a></div><div class="ttdeci">IConnectableLayer * AddMaximumLayer(const char *name=nullptr)</div><div class="ttdef"><b>Definition:</b> <a href="_network_8cpp_source.xhtml#l02215">Network.cpp:2215</a></div></div>
<div class="ttc" id="aclassarmnn_1_1_network_impl_xhtml_af9dd4b5273829b846ab83b3ae7f3defc"><div class="ttname"><a href="classarmnn_1_1_network_impl.xhtml#af9dd4b5273829b846ab83b3ae7f3defc">armnn::NetworkImpl::AddShapeLayer</a></div><div class="ttdeci">IConnectableLayer * AddShapeLayer(const char *name=nullptr)</div><div class="ttdef"><b>Definition:</b> <a href="_network_8cpp_source.xhtml#l02273">Network.cpp:2273</a></div></div>
<div class="ttc" id="anamespacearmnn_xhtml_a839ad76f1f52a70b540805b231f05d9c"><div class="ttname"><a href="namespacearmnn.xhtml#a839ad76f1f52a70b540805b231f05d9c">armnn::AssignBackends</a></div><div class="ttdeci">OptimizationResult AssignBackends(OptimizedNetworkImpl *optNetObjPtr, BackendSettings &amp;backendSettings, Graph::Iterator &amp;firstLayer, Graph::Iterator &amp;lastLayer, Optional&lt; std::vector&lt; std::string &gt; &amp; &gt; errMessages)</div><div class="ttdef"><b>Definition:</b> <a href="_network_8cpp_source.xhtml#l01098">Network.cpp:1098</a></div></div>
<div class="ttc" id="aclassarmnn_1_1_network_impl_xhtml_a8f798e19187ac7ae6ae6153ee64ab645"><div class="ttname"><a href="classarmnn_1_1_network_impl.xhtml#a8f798e19187ac7ae6ae6153ee64ab645">armnn::NetworkImpl::AddBatchNormalizationLayer</a></div><div class="ttdeci">IConnectableLayer * AddBatchNormalizationLayer(const BatchNormalizationDescriptor &amp;desc, const ConstTensor &amp;mean, const ConstTensor &amp;variance, const ConstTensor &amp;beta, const ConstTensor &amp;gamma, const char *name=nullptr)</div><div class="ttdef"><b>Definition:</b> <a href="_network_8cpp_source.xhtml#l02240">Network.cpp:2240</a></div></div>
<div class="ttc" id="astructarmnn_1_1_optimization_result_xhtml_a955b65059e7f9429a5d6041136bc1487"><div class="ttname"><a href="structarmnn_1_1_optimization_result.xhtml#a955b65059e7f9429a5d6041136bc1487">armnn::OptimizationResult::IsOk</a></div><div class="ttdeci">bool IsOk() const</div><div class="ttdef"><b>Definition:</b> <a href="_network_8hpp_source.xhtml#l00262">Network.hpp:262</a></div></div>
<div class="ttc" id="aclassarmnn_1_1_network_impl_xhtml_a446181daeb60b49cbcfd9f907f974ec1"><div class="ttname"><a href="classarmnn_1_1_network_impl.xhtml#a446181daeb60b49cbcfd9f907f974ec1">armnn::NetworkImpl::AddStackLayer</a></div><div class="ttdeci">IConnectableLayer * AddStackLayer(const StackDescriptor &amp;stackDescriptor, const char *name=nullptr)</div><div class="ttdef"><b>Definition:</b> <a href="_network_8cpp_source.xhtml#l02559">Network.cpp:2559</a></div></div>
<div class="ttc" id="aclassarmnn_1_1_network_impl_xhtml_a30528a3bd85a0dba158bd14e252bd68a"><div class="ttname"><a href="classarmnn_1_1_network_impl.xhtml#a30528a3bd85a0dba158bd14e252bd68a">armnn::NetworkImpl::AddSoftmaxLayer</a></div><div class="ttdeci">IConnectableLayer * AddSoftmaxLayer(const SoftmaxDescriptor &amp;softmaxDescriptor, const char *name=nullptr)</div><div class="ttdef"><b>Definition:</b> <a href="_network_8cpp_source.xhtml#l02203">Network.cpp:2203</a></div></div>
<div class="ttc" id="anamespacearmnn_xhtml_a4dc0adc6737b5944e7671bee71788407acb5e100e5a9a3e7f6d1fd97512215282"><div class="ttname"><a href="namespacearmnn.xhtml#a4dc0adc6737b5944e7671bee71788407acb5e100e5a9a3e7f6d1fd97512215282">armnn::BoostLogSeverityMapping::error</a></div><div class="ttdeci">@ error</div></div>
<div class="ttc" id="astructarmnn_1_1_instance_normalization_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_instance_normalization_descriptor.xhtml">armnn::InstanceNormalizationDescriptor</a></div><div class="ttdoc">An InstanceNormalizationDescriptor for InstanceNormalizationLayer.</div><div class="ttdef"><b>Definition:</b> <a href="_descriptors_8hpp_source.xhtml#l00835">Descriptors.hpp:835</a></div></div>
<div class="ttc" id="aclassarmnn_1_1_network_impl_xhtml_a8de6b047fcaff95df48dca683e1f3aa4"><div class="ttname"><a href="classarmnn_1_1_network_impl.xhtml#a8de6b047fcaff95df48dca683e1f3aa4">armnn::NetworkImpl::AddSliceLayer</a></div><div class="ttdeci">IConnectableLayer * AddSliceLayer(const SliceDescriptor &amp;sliceDescriptor, const char *name=nullptr)</div><div class="ttdef"><b>Definition:</b> <a href="_network_8cpp_source.xhtml#l02198">Network.cpp:2198</a></div></div>
<div class="ttc" id="aclassarmnn_1_1_network_impl_xhtml_a0b426a3feffc76e66d73b5761806e899"><div class="ttname"><a href="classarmnn_1_1_network_impl.xhtml#a0b426a3feffc76e66d73b5761806e899">armnn::NetworkImpl::AddQuantizeLayer</a></div><div class="ttdeci">IConnectableLayer * AddQuantizeLayer(const char *name=nullptr)</div><div class="ttdef"><b>Definition:</b> <a href="_network_8cpp_source.xhtml#l02489">Network.cpp:2489</a></div></div>
<div class="ttc" id="a_graph_8hpp_xhtml"><div class="ttname"><a href="_graph_8hpp.xhtml">Graph.hpp</a></div></div>
<div class="ttc" id="astructarmnn_1_1_elementwise_binary_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_elementwise_binary_descriptor.xhtml">armnn::ElementwiseBinaryDescriptor</a></div><div class="ttdoc">A ElementwiseBinaryDescriptor for the ElementwiseBinaryLayer.</div><div class="ttdef"><b>Definition:</b> <a href="_descriptors_8hpp_source.xhtml#l00109">Descriptors.hpp:109</a></div></div>
<div class="ttc" id="a_optimized_network_impl_8hpp_xhtml"><div class="ttname"><a href="_optimized_network_impl_8hpp.xhtml">OptimizedNetworkImpl.hpp</a></div></div>
<div class="ttc" id="aclassarmnn_1_1_network_impl_xhtml_a6f6d81d8a4f1f85f3616e8306760061c"><div class="ttname"><a href="classarmnn_1_1_network_impl.xhtml#a6f6d81d8a4f1f85f3616e8306760061c">armnn::NetworkImpl::AddSplitterLayer</a></div><div class="ttdeci">IConnectableLayer * AddSplitterLayer(const ViewsDescriptor &amp;splitterDescriptor, const char *name=nullptr)</div><div class="ttdef"><b>Definition:</b> <a href="_network_8cpp_source.xhtml#l02209">Network.cpp:2209</a></div></div>
<div class="ttc" id="aclassarmnn_1_1_network_impl_xhtml_a72b9d30e9d555bb5c35460b62faedf0d"><div class="ttname"><a href="classarmnn_1_1_network_impl.xhtml#a72b9d30e9d555bb5c35460b62faedf0d">armnn::NetworkImpl::AddSpaceToBatchNdLayer</a></div><div class="ttdeci">IConnectableLayer * AddSpaceToBatchNdLayer(const SpaceToBatchNdDescriptor &amp;spaceToBatchNdDescriptor, const char *name=nullptr)</div><div class="ttdef"><b>Definition:</b> <a href="_network_8cpp_source.xhtml#l02311">Network.cpp:2311</a></div></div>
<div class="ttc" id="aclassarmnn_1_1_network_impl_xhtml_ae0cfae1ea51669892608a1a060d24fa0"><div class="ttname"><a href="classarmnn_1_1_network_impl.xhtml#ae0cfae1ea51669892608a1a060d24fa0">armnn::NetworkImpl::AddReduceLayer</a></div><div class="ttdeci">IConnectableLayer * AddReduceLayer(const ReduceDescriptor &amp;reduceDescriptor, const char *name=nullptr)</div><div class="ttdef"><b>Definition:</b> <a href="_network_8cpp_source.xhtml#l02262">Network.cpp:2262</a></div></div>
<div class="ttc" id="aclassarmnn_1_1_network_impl_xhtml_a6e2df484ecc65bc82712590b96e04df4"><div class="ttname"><a href="classarmnn_1_1_network_impl.xhtml#a6e2df484ecc65bc82712590b96e04df4">armnn::NetworkImpl::AddPadLayer</a></div><div class="ttdeci">IConnectableLayer * AddPadLayer(const PadDescriptor &amp;padDescriptor, const char *name=nullptr)</div><div class="ttdef"><b>Definition:</b> <a href="_network_8cpp_source.xhtml#l02484">Network.cpp:2484</a></div></div>
<div class="ttc" id="aclassarmnn_1_1_network_impl_xhtml_a1ba03515c88a4c042bffa446d306caf0"><div class="ttname"><a href="classarmnn_1_1_network_impl.xhtml#a1ba03515c88a4c042bffa446d306caf0">armnn::NetworkImpl::NetworkImpl</a></div><div class="ttdeci">NetworkImpl(const NetworkOptions &amp;networkOptions={})</div><div class="ttdef"><b>Definition:</b> <a href="_network_8cpp_source.xhtml#l02044">Network.cpp:2044</a></div></div>
<div class="ttc" id="astructarmnn_1_1_space_to_batch_nd_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_space_to_batch_nd_descriptor.xhtml">armnn::SpaceToBatchNdDescriptor</a></div><div class="ttdoc">A SpaceToBatchNdDescriptor for the SpaceToBatchNdLayer.</div><div class="ttdef"><b>Definition:</b> <a href="_descriptors_8hpp_source.xhtml#l01010">Descriptors.hpp:1010</a></div></div>
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="dir_68267d1309a1af8e8297ef4c3efbcdba.xhtml">src</a></li><li class="navelem"><a class="el" href="dir_e0a84d05c80a2ef4231141dcbbeac5c8.xhtml">armnn</a></li><li class="navelem"><a class="el" href="_network_8hpp.xhtml">Network.hpp</a></li>
    <li class="footer">Generated on Thu May 18 2023 10:35:40 for ArmNN by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.17 </li>
  </ul>
</div>
</body>
</html>
