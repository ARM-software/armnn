<!-- Copyright (c) 2020 ARM Limited. -->
<!--                                 -->
<!-- SPDX-License-Identifier: MIT    -->
<!--                                 -->
<!-- HTML header for doxygen 1.8.13-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.13"/>
<meta name="robots" content="NOINDEX, NOFOLLOW" />
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>ArmNN: ViewsDescriptor Struct Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script><script type="text/javascript" src="http://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="stylesheet.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <img alt="ArmNN" src="Arm_NN_horizontal_blue.png" style="max-width: 10rem; margin-top: .5rem; margin-left 10px"/>
  <td style="padding-left: 0.5em;">
   <div id="projectname">
   &#160;<span id="projectnumber">22.11</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.13 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
$(document).ready(function(){initNavTree('structarmnn_1_1_views_descriptor.xhtml','');});
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="summary">
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="#friends">Friends</a> &#124;
<a href="structarmnn_1_1_views_descriptor-members.xhtml">List of all members</a>  </div>
  <div class="headertitle">
<div class="title">ViewsDescriptor Struct Reference</div>  </div>
</div><!--header-->
<div class="contents">

<p>A <a class="el" href="structarmnn_1_1_views_descriptor.xhtml" title="A ViewsDescriptor for the SplitterLayer. ">ViewsDescriptor</a> for the <a class="el" href="classarmnn_1_1_splitter_layer.xhtml" title="This layer represents a split operation. ">SplitterLayer</a>.  
 <a href="structarmnn_1_1_views_descriptor.xhtml#details">More...</a></p>

<p><code>#include &lt;<a class="el" href="_descriptors_8hpp_source.xhtml">Descriptors.hpp</a>&gt;</code></p>
<div class="dynheader">
Inheritance diagram for ViewsDescriptor:</div>
<div class="dyncontent">
 <div class="center">
  <img src="structarmnn_1_1_views_descriptor.png" usemap="#ViewsDescriptor_map" alt=""/>
  <map id="ViewsDescriptor_map" name="ViewsDescriptor_map">
<area href="structarmnn_1_1_base_descriptor.xhtml" title="Base class for all descriptors. " alt="BaseDescriptor" shape="rect" coords="0,0,105,24"/>
</map>
 </div></div>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:ab506124f0492dced09d0f7f62e8d14c3"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structarmnn_1_1_views_descriptor.xhtml#ab506124f0492dced09d0f7f62e8d14c3">ViewsDescriptor</a> (uint32_t numViews, uint32_t numDimensions=4)</td></tr>
<tr class="separator:ab506124f0492dced09d0f7f62e8d14c3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:abe247761d72676899c0a70488d0b9227"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structarmnn_1_1_views_descriptor.xhtml#abe247761d72676899c0a70488d0b9227">ViewsDescriptor</a> (const <a class="el" href="structarmnn_1_1_views_descriptor.xhtml">ViewsDescriptor</a> &amp;other)</td></tr>
<tr class="separator:abe247761d72676899c0a70488d0b9227"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3076393f5568657d04520f900e413dcb"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structarmnn_1_1_views_descriptor.xhtml#a3076393f5568657d04520f900e413dcb">ViewsDescriptor</a> ()</td></tr>
<tr class="separator:a3076393f5568657d04520f900e413dcb"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a047d65ed115b9b6fcf54669ae7c16e8d"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structarmnn_1_1_views_descriptor.xhtml#a047d65ed115b9b6fcf54669ae7c16e8d">ViewsDescriptor</a> (<a class="el" href="structarmnn_1_1_views_descriptor.xhtml">ViewsDescriptor</a> &amp;&amp;other)</td></tr>
<tr class="separator:a047d65ed115b9b6fcf54669ae7c16e8d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6316c5537fc3d9e8e71bf0541c6044d9"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structarmnn_1_1_views_descriptor.xhtml#a6316c5537fc3d9e8e71bf0541c6044d9">~ViewsDescriptor</a> ()</td></tr>
<tr class="separator:a6316c5537fc3d9e8e71bf0541c6044d9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aee83273c36d9506ce40c904a93c6ab8b"><td class="memItemLeft" align="right" valign="top"><a class="el" href="structarmnn_1_1_views_descriptor.xhtml">ViewsDescriptor</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structarmnn_1_1_views_descriptor.xhtml#aee83273c36d9506ce40c904a93c6ab8b">operator=</a> (<a class="el" href="structarmnn_1_1_views_descriptor.xhtml">ViewsDescriptor</a> rhs)</td></tr>
<tr class="separator:aee83273c36d9506ce40c904a93c6ab8b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a85dcac1ac31524ea0f9d16a0a939bd75"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structarmnn_1_1_views_descriptor.xhtml#a85dcac1ac31524ea0f9d16a0a939bd75">operator==</a> (const <a class="el" href="structarmnn_1_1_views_descriptor.xhtml">ViewsDescriptor</a> &amp;rhs) const</td></tr>
<tr class="separator:a85dcac1ac31524ea0f9d16a0a939bd75"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2b125117aa61f9baf3a9cb8658aa61a2"><td class="memItemLeft" align="right" valign="top"><a class="el" href="namespacearmnn.xhtml#a67a0db04d321a74b7e7fcfd3f1a3f70b">Status</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structarmnn_1_1_views_descriptor.xhtml#a2b125117aa61f9baf3a9cb8658aa61a2">SetViewOriginCoord</a> (uint32_t view, uint32_t coord, uint32_t value)</td></tr>
<tr class="memdesc:a2b125117aa61f9baf3a9cb8658aa61a2"><td class="mdescLeft">&#160;</td><td class="mdescRight">Set the view origin coordinates.  <a href="#a2b125117aa61f9baf3a9cb8658aa61a2">More...</a><br /></td></tr>
<tr class="separator:a2b125117aa61f9baf3a9cb8658aa61a2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aae0893695f5803a3517985c7cb1ccb2e"><td class="memItemLeft" align="right" valign="top"><a class="el" href="namespacearmnn.xhtml#a67a0db04d321a74b7e7fcfd3f1a3f70b">Status</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structarmnn_1_1_views_descriptor.xhtml#aae0893695f5803a3517985c7cb1ccb2e">SetViewSize</a> (uint32_t view, uint32_t coord, uint32_t value)</td></tr>
<tr class="memdesc:aae0893695f5803a3517985c7cb1ccb2e"><td class="mdescLeft">&#160;</td><td class="mdescRight">Set the size of the views.  <a href="#aae0893695f5803a3517985c7cb1ccb2e">More...</a><br /></td></tr>
<tr class="separator:aae0893695f5803a3517985c7cb1ccb2e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a35546e7b56e6e972a495b48748478ede"><td class="memItemLeft" align="right" valign="top">uint32_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structarmnn_1_1_views_descriptor.xhtml#a35546e7b56e6e972a495b48748478ede">GetNumViews</a> () const</td></tr>
<tr class="memdesc:a35546e7b56e6e972a495b48748478ede"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get the number of views.  <a href="#a35546e7b56e6e972a495b48748478ede">More...</a><br /></td></tr>
<tr class="separator:a35546e7b56e6e972a495b48748478ede"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a78e8266be865fdd92cadd04d6e25ae1f"><td class="memItemLeft" align="right" valign="top">uint32_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structarmnn_1_1_views_descriptor.xhtml#a78e8266be865fdd92cadd04d6e25ae1f">GetNumDimensions</a> () const</td></tr>
<tr class="memdesc:a78e8266be865fdd92cadd04d6e25ae1f"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get the number of dimensions.  <a href="#a78e8266be865fdd92cadd04d6e25ae1f">More...</a><br /></td></tr>
<tr class="separator:a78e8266be865fdd92cadd04d6e25ae1f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab78e6fe963508c1ac5c00d04bb3361a3"><td class="memItemLeft" align="right" valign="top">const uint32_t *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structarmnn_1_1_views_descriptor.xhtml#ab78e6fe963508c1ac5c00d04bb3361a3">GetViewOrigin</a> (uint32_t idx) const</td></tr>
<tr class="memdesc:ab78e6fe963508c1ac5c00d04bb3361a3"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get the view origin at the int value idx.  <a href="#ab78e6fe963508c1ac5c00d04bb3361a3">More...</a><br /></td></tr>
<tr class="separator:ab78e6fe963508c1ac5c00d04bb3361a3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3c1ab47a0a319413b3a4b5757ed5b80b"><td class="memItemLeft" align="right" valign="top">const uint32_t *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structarmnn_1_1_views_descriptor.xhtml#a3c1ab47a0a319413b3a4b5757ed5b80b">GetViewSizes</a> (uint32_t idx) const</td></tr>
<tr class="memdesc:a3c1ab47a0a319413b3a4b5757ed5b80b"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get the view sizes at the int value idx.  <a href="#a3c1ab47a0a319413b3a4b5757ed5b80b">More...</a><br /></td></tr>
<tr class="separator:a3c1ab47a0a319413b3a4b5757ed5b80b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a88d7c8ef4baba3690a4d25eec350ecb3"><td class="memItemLeft" align="right" valign="top">const <a class="el" href="structarmnn_1_1_origins_descriptor.xhtml">OriginsDescriptor</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structarmnn_1_1_views_descriptor.xhtml#a88d7c8ef4baba3690a4d25eec350ecb3">GetOrigins</a> () const</td></tr>
<tr class="memdesc:a88d7c8ef4baba3690a4d25eec350ecb3"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get the View Origins.  <a href="#a88d7c8ef4baba3690a4d25eec350ecb3">More...</a><br /></td></tr>
<tr class="separator:a88d7c8ef4baba3690a4d25eec350ecb3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pub_methods_structarmnn_1_1_base_descriptor"><td colspan="2" onclick="javascript:toggleInherit('pub_methods_structarmnn_1_1_base_descriptor')"><img src="closed.png" alt="-"/>&#160;Public Member Functions inherited from <a class="el" href="structarmnn_1_1_base_descriptor.xhtml">BaseDescriptor</a></td></tr>
<tr class="memitem:ac618666b3c6d65d2c88bcbb7abeed343 inherit pub_methods_structarmnn_1_1_base_descriptor"><td class="memItemLeft" align="right" valign="top">virtual bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structarmnn_1_1_base_descriptor.xhtml#ac618666b3c6d65d2c88bcbb7abeed343">IsNull</a> () const</td></tr>
<tr class="separator:ac618666b3c6d65d2c88bcbb7abeed343 inherit pub_methods_structarmnn_1_1_base_descriptor"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5e0f82ef2f18eb897e6d6f1845e74033 inherit pub_methods_structarmnn_1_1_base_descriptor"><td class="memItemLeft" align="right" valign="top">virtual&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structarmnn_1_1_base_descriptor.xhtml#a5e0f82ef2f18eb897e6d6f1845e74033">~BaseDescriptor</a> ()=default</td></tr>
<tr class="separator:a5e0f82ef2f18eb897e6d6f1845e74033 inherit pub_methods_structarmnn_1_1_base_descriptor"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="friends"></a>
Friends</h2></td></tr>
<tr class="memitem:a6ab1c51c46d6587c0eaa2a1674b2b48c"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structarmnn_1_1_views_descriptor.xhtml#a6ab1c51c46d6587c0eaa2a1674b2b48c">swap</a> (<a class="el" href="structarmnn_1_1_views_descriptor.xhtml">ViewsDescriptor</a> &amp;first, <a class="el" href="structarmnn_1_1_views_descriptor.xhtml">ViewsDescriptor</a> &amp;second)</td></tr>
<tr class="memdesc:a6ab1c51c46d6587c0eaa2a1674b2b48c"><td class="mdescLeft">&#160;</td><td class="mdescRight">Swap the <a class="el" href="structarmnn_1_1_views_descriptor.xhtml" title="A ViewsDescriptor for the SplitterLayer. ">ViewsDescriptor</a> value first and second.  <a href="#a6ab1c51c46d6587c0eaa2a1674b2b48c">More...</a><br /></td></tr>
<tr class="separator:a6ab1c51c46d6587c0eaa2a1674b2b48c"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><p>A <a class="el" href="structarmnn_1_1_views_descriptor.xhtml" title="A ViewsDescriptor for the SplitterLayer. ">ViewsDescriptor</a> for the <a class="el" href="classarmnn_1_1_splitter_layer.xhtml" title="This layer represents a split operation. ">SplitterLayer</a>. </p>
<p>Descriptor to configure the splitting process. Number of Views must be equal to the number of outputs, and their order must match - e.g. first view corresponds to the first output, second view to the second output, etc. </p>

<p class="definition">Definition at line <a class="el" href="_descriptors_8hpp_source.xhtml#l00217">217</a> of file <a class="el" href="_descriptors_8hpp_source.xhtml">Descriptors.hpp</a>.</p>
</div><h2 class="groupheader">Constructor &amp; Destructor Documentation</h2>
<a id="ab506124f0492dced09d0f7f62e8d14c3"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ab506124f0492dced09d0f7f62e8d14c3">&#9670;&nbsp;</a></span>ViewsDescriptor() <span class="overload">[1/4]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="structarmnn_1_1_views_descriptor.xhtml">ViewsDescriptor</a> </td>
          <td>(</td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>numViews</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>numDimensions</em> = <code>4</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_descriptors_8cpp_source.xhtml#l00221">221</a> of file <a class="el" href="_descriptors_8cpp_source.xhtml">Descriptors.cpp</a>.</p>

<p class="reference">References <a class="el" href="_descriptors_8cpp_source.xhtml#l00300">ViewsDescriptor::GetNumDimensions()</a>, and <a class="el" href="_descriptors_8cpp_source.xhtml#l00295">ViewsDescriptor::GetNumViews()</a>.</p>
<div class="fragment"><div class="line"><a name="l00222"></a><span class="lineno">  222</span>&#160;    : m_Origins(numViews, numDimensions)</div><div class="line"><a name="l00223"></a><span class="lineno">  223</span>&#160;    , m_ViewSizes(numViews &gt; 0 &amp;&amp; numDimensions &gt; 0 ?</div><div class="line"><a name="l00224"></a><span class="lineno">  224</span>&#160;                      <span class="keyword">new</span> uint32_t *[numViews]() : <span class="keyword">nullptr</span>)</div><div class="line"><a name="l00225"></a><span class="lineno">  225</span>&#160;{</div><div class="line"><a name="l00226"></a><span class="lineno">  226</span>&#160;    <span class="keywordflow">if</span> (m_ViewSizes)</div><div class="line"><a name="l00227"></a><span class="lineno">  227</span>&#160;    {</div><div class="line"><a name="l00228"></a><span class="lineno">  228</span>&#160;        <span class="keywordflow">for</span> (uint32_t i = 0; <a class="code" href="structarmnn_1_1_views_descriptor.xhtml#a78e8266be865fdd92cadd04d6e25ae1f">GetNumDimensions</a>() &gt; 0 &amp;&amp; i &lt; <a class="code" href="structarmnn_1_1_views_descriptor.xhtml#a35546e7b56e6e972a495b48748478ede">GetNumViews</a>(); ++i)</div><div class="line"><a name="l00229"></a><span class="lineno">  229</span>&#160;        {</div><div class="line"><a name="l00230"></a><span class="lineno">  230</span>&#160;            m_ViewSizes[i] = <span class="keyword">new</span> uint32_t[<a class="code" href="structarmnn_1_1_views_descriptor.xhtml#a78e8266be865fdd92cadd04d6e25ae1f">GetNumDimensions</a>()]();</div><div class="line"><a name="l00231"></a><span class="lineno">  231</span>&#160;        }</div><div class="line"><a name="l00232"></a><span class="lineno">  232</span>&#160;    }</div><div class="line"><a name="l00233"></a><span class="lineno">  233</span>&#160;}</div><div class="ttc" id="structarmnn_1_1_views_descriptor_xhtml_a78e8266be865fdd92cadd04d6e25ae1f"><div class="ttname"><a href="structarmnn_1_1_views_descriptor.xhtml#a78e8266be865fdd92cadd04d6e25ae1f">armnn::ViewsDescriptor::GetNumDimensions</a></div><div class="ttdeci">uint32_t GetNumDimensions() const</div><div class="ttdoc">Get the number of dimensions. </div><div class="ttdef"><b>Definition:</b> <a href="_descriptors_8cpp_source.xhtml#l00300">Descriptors.cpp:300</a></div></div>
<div class="ttc" id="structarmnn_1_1_views_descriptor_xhtml_a35546e7b56e6e972a495b48748478ede"><div class="ttname"><a href="structarmnn_1_1_views_descriptor.xhtml#a35546e7b56e6e972a495b48748478ede">armnn::ViewsDescriptor::GetNumViews</a></div><div class="ttdeci">uint32_t GetNumViews() const</div><div class="ttdoc">Get the number of views. </div><div class="ttdef"><b>Definition:</b> <a href="_descriptors_8cpp_source.xhtml#l00295">Descriptors.cpp:295</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="abe247761d72676899c0a70488d0b9227"></a>
<h2 class="memtitle"><span class="permalink"><a href="#abe247761d72676899c0a70488d0b9227">&#9670;&nbsp;</a></span>ViewsDescriptor() <span class="overload">[2/4]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="structarmnn_1_1_views_descriptor.xhtml">ViewsDescriptor</a> </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="structarmnn_1_1_views_descriptor.xhtml">ViewsDescriptor</a> &amp;&#160;</td>
          <td class="paramname"><em>other</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_descriptors_8cpp_source.xhtml#l00235">235</a> of file <a class="el" href="_descriptors_8cpp_source.xhtml">Descriptors.cpp</a>.</p>

<p class="reference">References <a class="el" href="_descriptors_8cpp_source.xhtml#l00300">ViewsDescriptor::GetNumDimensions()</a>, and <a class="el" href="_descriptors_8cpp_source.xhtml#l00295">ViewsDescriptor::GetNumViews()</a>.</p>
<div class="fragment"><div class="line"><a name="l00236"></a><span class="lineno">  236</span>&#160;    : m_Origins(other.m_Origins)</div><div class="line"><a name="l00237"></a><span class="lineno">  237</span>&#160;    , m_ViewSizes(other.GetNumViews() &gt; 0 &amp;&amp; other.GetNumDimensions() &gt; 0 ?</div><div class="line"><a name="l00238"></a><span class="lineno">  238</span>&#160;                      <span class="keyword">new</span> uint32_t *[other.GetNumViews()]() : <span class="keyword">nullptr</span>)</div><div class="line"><a name="l00239"></a><span class="lineno">  239</span>&#160;{</div><div class="line"><a name="l00240"></a><span class="lineno">  240</span>&#160;    <span class="keywordflow">if</span> (m_ViewSizes)</div><div class="line"><a name="l00241"></a><span class="lineno">  241</span>&#160;    {</div><div class="line"><a name="l00242"></a><span class="lineno">  242</span>&#160;        <span class="keywordflow">for</span> (uint32_t i = 0; <a class="code" href="structarmnn_1_1_views_descriptor.xhtml#a78e8266be865fdd92cadd04d6e25ae1f">GetNumDimensions</a>() &gt; 0 &amp;&amp; i &lt; <a class="code" href="structarmnn_1_1_views_descriptor.xhtml#a35546e7b56e6e972a495b48748478ede">GetNumViews</a>(); ++i)</div><div class="line"><a name="l00243"></a><span class="lineno">  243</span>&#160;        {</div><div class="line"><a name="l00244"></a><span class="lineno">  244</span>&#160;            m_ViewSizes[i] = <span class="keyword">new</span> uint32_t[<a class="code" href="structarmnn_1_1_views_descriptor.xhtml#a78e8266be865fdd92cadd04d6e25ae1f">GetNumDimensions</a>()]();</div><div class="line"><a name="l00245"></a><span class="lineno">  245</span>&#160;            memcpy(m_ViewSizes[i], other.m_ViewSizes[i], <a class="code" href="structarmnn_1_1_views_descriptor.xhtml#a78e8266be865fdd92cadd04d6e25ae1f">GetNumDimensions</a>() * <span class="keyword">sizeof</span>(uint32_t));</div><div class="line"><a name="l00246"></a><span class="lineno">  246</span>&#160;        }</div><div class="line"><a name="l00247"></a><span class="lineno">  247</span>&#160;    }</div><div class="line"><a name="l00248"></a><span class="lineno">  248</span>&#160;}</div><div class="ttc" id="structarmnn_1_1_views_descriptor_xhtml_a78e8266be865fdd92cadd04d6e25ae1f"><div class="ttname"><a href="structarmnn_1_1_views_descriptor.xhtml#a78e8266be865fdd92cadd04d6e25ae1f">armnn::ViewsDescriptor::GetNumDimensions</a></div><div class="ttdeci">uint32_t GetNumDimensions() const</div><div class="ttdoc">Get the number of dimensions. </div><div class="ttdef"><b>Definition:</b> <a href="_descriptors_8cpp_source.xhtml#l00300">Descriptors.cpp:300</a></div></div>
<div class="ttc" id="structarmnn_1_1_views_descriptor_xhtml_a35546e7b56e6e972a495b48748478ede"><div class="ttname"><a href="structarmnn_1_1_views_descriptor.xhtml#a35546e7b56e6e972a495b48748478ede">armnn::ViewsDescriptor::GetNumViews</a></div><div class="ttdeci">uint32_t GetNumViews() const</div><div class="ttdoc">Get the number of views. </div><div class="ttdef"><b>Definition:</b> <a href="_descriptors_8cpp_source.xhtml#l00295">Descriptors.cpp:295</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="a3076393f5568657d04520f900e413dcb"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a3076393f5568657d04520f900e413dcb">&#9670;&nbsp;</a></span>ViewsDescriptor() <span class="overload">[3/4]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="structarmnn_1_1_views_descriptor.xhtml">ViewsDescriptor</a> </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_descriptors_8cpp_source.xhtml#l00216">216</a> of file <a class="el" href="_descriptors_8cpp_source.xhtml">Descriptors.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00217"></a><span class="lineno">  217</span>&#160;: m_Origins()</div><div class="line"><a name="l00218"></a><span class="lineno">  218</span>&#160;, m_ViewSizes(<span class="keyword">nullptr</span>)</div><div class="line"><a name="l00219"></a><span class="lineno">  219</span>&#160;{}</div></div><!-- fragment -->
</div>
</div>
<a id="a047d65ed115b9b6fcf54669ae7c16e8d"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a047d65ed115b9b6fcf54669ae7c16e8d">&#9670;&nbsp;</a></span>ViewsDescriptor() <span class="overload">[4/4]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="structarmnn_1_1_views_descriptor.xhtml">ViewsDescriptor</a> </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="structarmnn_1_1_views_descriptor.xhtml">ViewsDescriptor</a> &amp;&amp;&#160;</td>
          <td class="paramname"><em>other</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_descriptors_8cpp_source.xhtml#l00250">250</a> of file <a class="el" href="_descriptors_8cpp_source.xhtml">Descriptors.cpp</a>.</p>

<p class="reference">References <a class="el" href="_descriptors_8cpp_source.xhtml#l00359">ViewsDescriptor::swap</a>.</p>
<div class="fragment"><div class="line"><a name="l00251"></a><span class="lineno">  251</span>&#160;    : <a class="code" href="structarmnn_1_1_views_descriptor.xhtml#a3076393f5568657d04520f900e413dcb">ViewsDescriptor</a>()</div><div class="line"><a name="l00252"></a><span class="lineno">  252</span>&#160;{</div><div class="line"><a name="l00253"></a><span class="lineno">  253</span>&#160;    <a class="code" href="structarmnn_1_1_views_descriptor.xhtml#a6ab1c51c46d6587c0eaa2a1674b2b48c">swap</a>(*<span class="keyword">this</span>, other);</div><div class="line"><a name="l00254"></a><span class="lineno">  254</span>&#160;}</div><div class="ttc" id="structarmnn_1_1_views_descriptor_xhtml_a6ab1c51c46d6587c0eaa2a1674b2b48c"><div class="ttname"><a href="structarmnn_1_1_views_descriptor.xhtml#a6ab1c51c46d6587c0eaa2a1674b2b48c">armnn::ViewsDescriptor::swap</a></div><div class="ttdeci">friend void swap(ViewsDescriptor &amp;first, ViewsDescriptor &amp;second)</div><div class="ttdoc">Swap the ViewsDescriptor value first and second. </div><div class="ttdef"><b>Definition:</b> <a href="_descriptors_8cpp_source.xhtml#l00359">Descriptors.cpp:359</a></div></div>
<div class="ttc" id="structarmnn_1_1_views_descriptor_xhtml_a3076393f5568657d04520f900e413dcb"><div class="ttname"><a href="structarmnn_1_1_views_descriptor.xhtml#a3076393f5568657d04520f900e413dcb">armnn::ViewsDescriptor::ViewsDescriptor</a></div><div class="ttdeci">ViewsDescriptor()</div><div class="ttdef"><b>Definition:</b> <a href="_descriptors_8cpp_source.xhtml#l00216">Descriptors.cpp:216</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="a6316c5537fc3d9e8e71bf0541c6044d9"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a6316c5537fc3d9e8e71bf0541c6044d9">&#9670;&nbsp;</a></span>~ViewsDescriptor()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">~<a class="el" href="structarmnn_1_1_views_descriptor.xhtml">ViewsDescriptor</a> </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_descriptors_8cpp_source.xhtml#l00256">256</a> of file <a class="el" href="_descriptors_8cpp_source.xhtml">Descriptors.cpp</a>.</p>

<p class="reference">References <a class="el" href="_descriptors_8cpp_source.xhtml#l00300">ViewsDescriptor::GetNumDimensions()</a>, and <a class="el" href="_descriptors_8cpp_source.xhtml#l00295">ViewsDescriptor::GetNumViews()</a>.</p>
<div class="fragment"><div class="line"><a name="l00257"></a><span class="lineno">  257</span>&#160;{</div><div class="line"><a name="l00258"></a><span class="lineno">  258</span>&#160;    <span class="keywordflow">if</span> (m_ViewSizes)</div><div class="line"><a name="l00259"></a><span class="lineno">  259</span>&#160;    {</div><div class="line"><a name="l00260"></a><span class="lineno">  260</span>&#160;        <span class="keywordflow">for</span> (uint32_t i = 0; <a class="code" href="structarmnn_1_1_views_descriptor.xhtml#a78e8266be865fdd92cadd04d6e25ae1f">GetNumDimensions</a>() &gt; 0 &amp;&amp; i &lt; <a class="code" href="structarmnn_1_1_views_descriptor.xhtml#a35546e7b56e6e972a495b48748478ede">GetNumViews</a>(); ++i)</div><div class="line"><a name="l00261"></a><span class="lineno">  261</span>&#160;        {</div><div class="line"><a name="l00262"></a><span class="lineno">  262</span>&#160;            <span class="keyword">delete</span>[] m_ViewSizes[i];</div><div class="line"><a name="l00263"></a><span class="lineno">  263</span>&#160;        }</div><div class="line"><a name="l00264"></a><span class="lineno">  264</span>&#160;        <span class="keyword">delete</span>[] m_ViewSizes;</div><div class="line"><a name="l00265"></a><span class="lineno">  265</span>&#160;    }</div><div class="line"><a name="l00266"></a><span class="lineno">  266</span>&#160;}</div><div class="ttc" id="structarmnn_1_1_views_descriptor_xhtml_a78e8266be865fdd92cadd04d6e25ae1f"><div class="ttname"><a href="structarmnn_1_1_views_descriptor.xhtml#a78e8266be865fdd92cadd04d6e25ae1f">armnn::ViewsDescriptor::GetNumDimensions</a></div><div class="ttdeci">uint32_t GetNumDimensions() const</div><div class="ttdoc">Get the number of dimensions. </div><div class="ttdef"><b>Definition:</b> <a href="_descriptors_8cpp_source.xhtml#l00300">Descriptors.cpp:300</a></div></div>
<div class="ttc" id="structarmnn_1_1_views_descriptor_xhtml_a35546e7b56e6e972a495b48748478ede"><div class="ttname"><a href="structarmnn_1_1_views_descriptor.xhtml#a35546e7b56e6e972a495b48748478ede">armnn::ViewsDescriptor::GetNumViews</a></div><div class="ttdeci">uint32_t GetNumViews() const</div><div class="ttdoc">Get the number of views. </div><div class="ttdef"><b>Definition:</b> <a href="_descriptors_8cpp_source.xhtml#l00295">Descriptors.cpp:295</a></div></div>
</div><!-- fragment -->
</div>
</div>
<h2 class="groupheader">Member Function Documentation</h2>
<a id="a78e8266be865fdd92cadd04d6e25ae1f"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a78e8266be865fdd92cadd04d6e25ae1f">&#9670;&nbsp;</a></span>GetNumDimensions()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">uint32_t GetNumDimensions </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Get the number of dimensions. </p>

<p class="definition">Definition at line <a class="el" href="_descriptors_8cpp_source.xhtml#l00300">300</a> of file <a class="el" href="_descriptors_8cpp_source.xhtml">Descriptors.cpp</a>.</p>

<p class="reference">References <a class="el" href="_descriptors_8cpp_source.xhtml#l00192">OriginsDescriptor::GetNumDimensions()</a>.</p>

<p class="reference">Referenced by <a class="el" href="_cl_splitter_workload_8cpp_source.xhtml#l00055">ClSplitterWorkload::ClSplitterWorkload()</a>, <a class="el" href="_arm_compute_utils_8hpp_source.xhtml#l00244">armnn::ComputeSplitAxis()</a>, <a class="el" href="_splitter_layer_8cpp_source.xhtml#l00021">SplitterLayer::CreateWorkload()</a>, <a class="el" href="_serializer_8cpp_source.xhtml#l00086">armnnSerializer::GetFlatBufferArgMinMaxFunction()</a>, <a class="el" href="_splitter_layer_8cpp_source.xhtml#l00202">SplitterLayer::InferOutputShapes()</a>, <a class="el" href="_cl_layer_support_8cpp_source.xhtml#l01374">ClLayerSupport::IsSplitterSupported()</a>, <a class="el" href="_neon_layer_support_8cpp_source.xhtml#l01402">NeonLayerSupport::IsSplitterSupported()</a>, <a class="el" href="_neon_splitter_workload_8cpp_source.xhtml#l00056">NeonSplitterWorkload::NeonSplitterWorkload()</a>, <a class="el" href="_descriptors_8cpp_source.xhtml#l00274">ViewsDescriptor::operator==()</a>, <a class="el" href="_serialize_layer_parameters_8cpp_source.xhtml#l00580">StringifyLayerParameters&lt; ViewsDescriptor &gt;::Serialize()</a>, <a class="el" href="_descriptors_8cpp_source.xhtml#l00315">ViewsDescriptor::SetViewSize()</a>, <a class="el" href="_splitter_layer_8cpp_source.xhtml#l00216">SplitterLayer::ValidateTensorShapesFromInputs()</a>, <a class="el" href="_descriptors_8cpp_source.xhtml#l00221">ViewsDescriptor::ViewsDescriptor()</a>, and <a class="el" href="_descriptors_8cpp_source.xhtml#l00256">ViewsDescriptor::~ViewsDescriptor()</a>.</p>
<div class="fragment"><div class="line"><a name="l00301"></a><span class="lineno">  301</span>&#160;{</div><div class="line"><a name="l00302"></a><span class="lineno">  302</span>&#160;    <span class="keywordflow">return</span> m_Origins.<a class="code" href="structarmnn_1_1_origins_descriptor.xhtml#a78e8266be865fdd92cadd04d6e25ae1f">GetNumDimensions</a>();</div><div class="line"><a name="l00303"></a><span class="lineno">  303</span>&#160;}</div><div class="ttc" id="structarmnn_1_1_origins_descriptor_xhtml_a78e8266be865fdd92cadd04d6e25ae1f"><div class="ttname"><a href="structarmnn_1_1_origins_descriptor.xhtml#a78e8266be865fdd92cadd04d6e25ae1f">armnn::OriginsDescriptor::GetNumDimensions</a></div><div class="ttdeci">uint32_t GetNumDimensions() const</div><div class="ttdoc">Get the number of dimensions. </div><div class="ttdef"><b>Definition:</b> <a href="_descriptors_8cpp_source.xhtml#l00192">Descriptors.cpp:192</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="a35546e7b56e6e972a495b48748478ede"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a35546e7b56e6e972a495b48748478ede">&#9670;&nbsp;</a></span>GetNumViews()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">uint32_t GetNumViews </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Get the number of views. </p>

<p class="definition">Definition at line <a class="el" href="_descriptors_8cpp_source.xhtml#l00295">295</a> of file <a class="el" href="_descriptors_8cpp_source.xhtml">Descriptors.cpp</a>.</p>

<p class="reference">References <a class="el" href="_descriptors_8cpp_source.xhtml#l00187">OriginsDescriptor::GetNumViews()</a>.</p>

<p class="reference">Referenced by <a class="el" href="_arm_compute_utils_8hpp_source.xhtml#l00244">armnn::ComputeSplitAxis()</a>, <a class="el" href="_splitter_layer_8cpp_source.xhtml#l00021">SplitterLayer::CreateWorkload()</a>, <a class="el" href="_serializer_8cpp_source.xhtml#l00086">armnnSerializer::GetFlatBufferArgMinMaxFunction()</a>, <a class="el" href="_splitter_layer_8cpp_source.xhtml#l00202">SplitterLayer::InferOutputShapes()</a>, <a class="el" href="_descriptors_8cpp_source.xhtml#l00274">ViewsDescriptor::operator==()</a>, <a class="el" href="_serialize_layer_parameters_8cpp_source.xhtml#l00580">StringifyLayerParameters&lt; ViewsDescriptor &gt;::Serialize()</a>, <a class="el" href="_descriptors_8cpp_source.xhtml#l00315">ViewsDescriptor::SetViewSize()</a>, <a class="el" href="_splitter_layer_8cpp_source.xhtml#l00216">SplitterLayer::ValidateTensorShapesFromInputs()</a>, <a class="el" href="_descriptors_8cpp_source.xhtml#l00221">ViewsDescriptor::ViewsDescriptor()</a>, and <a class="el" href="_descriptors_8cpp_source.xhtml#l00256">ViewsDescriptor::~ViewsDescriptor()</a>.</p>
<div class="fragment"><div class="line"><a name="l00296"></a><span class="lineno">  296</span>&#160;{</div><div class="line"><a name="l00297"></a><span class="lineno">  297</span>&#160;    <span class="keywordflow">return</span> m_Origins.<a class="code" href="structarmnn_1_1_origins_descriptor.xhtml#a35546e7b56e6e972a495b48748478ede">GetNumViews</a>();</div><div class="line"><a name="l00298"></a><span class="lineno">  298</span>&#160;}</div><div class="ttc" id="structarmnn_1_1_origins_descriptor_xhtml_a35546e7b56e6e972a495b48748478ede"><div class="ttname"><a href="structarmnn_1_1_origins_descriptor.xhtml#a35546e7b56e6e972a495b48748478ede">armnn::OriginsDescriptor::GetNumViews</a></div><div class="ttdeci">uint32_t GetNumViews() const</div><div class="ttdoc">Get the number of views. </div><div class="ttdef"><b>Definition:</b> <a href="_descriptors_8cpp_source.xhtml#l00187">Descriptors.cpp:187</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="a88d7c8ef4baba3690a4d25eec350ecb3"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a88d7c8ef4baba3690a4d25eec350ecb3">&#9670;&nbsp;</a></span>GetOrigins()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">const <a class="el" href="structarmnn_1_1_origins_descriptor.xhtml">OriginsDescriptor</a> &amp; GetOrigins </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Get the View Origins. </p>

<p class="definition">Definition at line <a class="el" href="_descriptors_8cpp_source.xhtml#l00345">345</a> of file <a class="el" href="_descriptors_8cpp_source.xhtml">Descriptors.cpp</a>.</p>

<p class="reference">Referenced by <a class="el" href="_serializer_8cpp_source.xhtml#l00086">armnnSerializer::GetFlatBufferArgMinMaxFunction()</a>, and <a class="el" href="_serialize_layer_parameters_8cpp_source.xhtml#l00580">StringifyLayerParameters&lt; ViewsDescriptor &gt;::Serialize()</a>.</p>
<div class="fragment"><div class="line"><a name="l00346"></a><span class="lineno">  346</span>&#160;{</div><div class="line"><a name="l00347"></a><span class="lineno">  347</span>&#160;    <span class="keywordflow">return</span> m_Origins;</div><div class="line"><a name="l00348"></a><span class="lineno">  348</span>&#160;}</div></div><!-- fragment -->
</div>
</div>
<a id="ab78e6fe963508c1ac5c00d04bb3361a3"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ab78e6fe963508c1ac5c00d04bb3361a3">&#9670;&nbsp;</a></span>GetViewOrigin()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">const uint32_t * GetViewOrigin </td>
          <td>(</td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>idx</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Get the view origin at the int value idx. </p>

<p class="definition">Definition at line <a class="el" href="_descriptors_8cpp_source.xhtml#l00305">305</a> of file <a class="el" href="_descriptors_8cpp_source.xhtml">Descriptors.cpp</a>.</p>

<p class="reference">References <a class="el" href="_descriptors_8cpp_source.xhtml#l00197">OriginsDescriptor::GetViewOrigin()</a>.</p>

<p class="reference">Referenced by <a class="el" href="_splitter_layer_8cpp_source.xhtml#l00021">SplitterLayer::CreateWorkload()</a>, <a class="el" href="_serializer_8cpp_source.xhtml#l00086">armnnSerializer::GetFlatBufferArgMinMaxFunction()</a>, and <a class="el" href="_descriptors_8cpp_source.xhtml#l00274">ViewsDescriptor::operator==()</a>.</p>
<div class="fragment"><div class="line"><a name="l00306"></a><span class="lineno">  306</span>&#160;{</div><div class="line"><a name="l00307"></a><span class="lineno">  307</span>&#160;    <span class="keywordflow">return</span> m_Origins.<a class="code" href="structarmnn_1_1_origins_descriptor.xhtml#ab78e6fe963508c1ac5c00d04bb3361a3">GetViewOrigin</a>(idx);</div><div class="line"><a name="l00308"></a><span class="lineno">  308</span>&#160;}</div><div class="ttc" id="structarmnn_1_1_origins_descriptor_xhtml_ab78e6fe963508c1ac5c00d04bb3361a3"><div class="ttname"><a href="structarmnn_1_1_origins_descriptor.xhtml#ab78e6fe963508c1ac5c00d04bb3361a3">armnn::OriginsDescriptor::GetViewOrigin</a></div><div class="ttdeci">const uint32_t * GetViewOrigin(uint32_t idx) const</div><div class="ttdoc">Return the view origin at the int value idx. </div><div class="ttdef"><b>Definition:</b> <a href="_descriptors_8cpp_source.xhtml#l00197">Descriptors.cpp:197</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="a3c1ab47a0a319413b3a4b5757ed5b80b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a3c1ab47a0a319413b3a4b5757ed5b80b">&#9670;&nbsp;</a></span>GetViewSizes()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">const uint32_t * GetViewSizes </td>
          <td>(</td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>idx</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Get the view sizes at the int value idx. </p>

<p class="definition">Definition at line <a class="el" href="_descriptors_8cpp_source.xhtml#l00340">340</a> of file <a class="el" href="_descriptors_8cpp_source.xhtml">Descriptors.cpp</a>.</p>

<p class="reference">Referenced by <a class="el" href="_arm_compute_utils_8hpp_source.xhtml#l00244">armnn::ComputeSplitAxis()</a>, <a class="el" href="_splitter_layer_8cpp_source.xhtml#l00021">SplitterLayer::CreateWorkload()</a>, <a class="el" href="_serializer_8cpp_source.xhtml#l00086">armnnSerializer::GetFlatBufferArgMinMaxFunction()</a>, <a class="el" href="_splitter_layer_8cpp_source.xhtml#l00202">SplitterLayer::InferOutputShapes()</a>, <a class="el" href="_descriptors_8cpp_source.xhtml#l00274">ViewsDescriptor::operator==()</a>, <a class="el" href="_serialize_layer_parameters_8cpp_source.xhtml#l00580">StringifyLayerParameters&lt; ViewsDescriptor &gt;::Serialize()</a>, and <a class="el" href="_splitter_layer_8cpp_source.xhtml#l00216">SplitterLayer::ValidateTensorShapesFromInputs()</a>.</p>
<div class="fragment"><div class="line"><a name="l00341"></a><span class="lineno">  341</span>&#160;{</div><div class="line"><a name="l00342"></a><span class="lineno">  342</span>&#160;    <span class="keywordflow">return</span> m_ViewSizes ? m_ViewSizes[idx] : <span class="keyword">nullptr</span>;</div><div class="line"><a name="l00343"></a><span class="lineno">  343</span>&#160;}</div></div><!-- fragment -->
</div>
</div>
<a id="aee83273c36d9506ce40c904a93c6ab8b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aee83273c36d9506ce40c904a93c6ab8b">&#9670;&nbsp;</a></span>operator=()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="structarmnn_1_1_views_descriptor.xhtml">ViewsDescriptor</a> &amp; operator= </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="structarmnn_1_1_views_descriptor.xhtml">ViewsDescriptor</a>&#160;</td>
          <td class="paramname"><em>rhs</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_descriptors_8cpp_source.xhtml#l00268">268</a> of file <a class="el" href="_descriptors_8cpp_source.xhtml">Descriptors.cpp</a>.</p>

<p class="reference">References <a class="el" href="_descriptors_8cpp_source.xhtml#l00359">ViewsDescriptor::swap</a>.</p>
<div class="fragment"><div class="line"><a name="l00269"></a><span class="lineno">  269</span>&#160;{</div><div class="line"><a name="l00270"></a><span class="lineno">  270</span>&#160;    <a class="code" href="structarmnn_1_1_views_descriptor.xhtml#a6ab1c51c46d6587c0eaa2a1674b2b48c">swap</a>(*<span class="keyword">this</span>, rhs);</div><div class="line"><a name="l00271"></a><span class="lineno">  271</span>&#160;    <span class="keywordflow">return</span> *<span class="keyword">this</span>;</div><div class="line"><a name="l00272"></a><span class="lineno">  272</span>&#160;}</div><div class="ttc" id="structarmnn_1_1_views_descriptor_xhtml_a6ab1c51c46d6587c0eaa2a1674b2b48c"><div class="ttname"><a href="structarmnn_1_1_views_descriptor.xhtml#a6ab1c51c46d6587c0eaa2a1674b2b48c">armnn::ViewsDescriptor::swap</a></div><div class="ttdeci">friend void swap(ViewsDescriptor &amp;first, ViewsDescriptor &amp;second)</div><div class="ttdoc">Swap the ViewsDescriptor value first and second. </div><div class="ttdef"><b>Definition:</b> <a href="_descriptors_8cpp_source.xhtml#l00359">Descriptors.cpp:359</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="a85dcac1ac31524ea0f9d16a0a939bd75"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a85dcac1ac31524ea0f9d16a0a939bd75">&#9670;&nbsp;</a></span>operator==()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool operator== </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="structarmnn_1_1_views_descriptor.xhtml">ViewsDescriptor</a> &amp;&#160;</td>
          <td class="paramname"><em>rhs</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_descriptors_8cpp_source.xhtml#l00274">274</a> of file <a class="el" href="_descriptors_8cpp_source.xhtml">Descriptors.cpp</a>.</p>

<p class="reference">References <a class="el" href="_descriptors_8cpp_source.xhtml#l00300">ViewsDescriptor::GetNumDimensions()</a>, <a class="el" href="_descriptors_8cpp_source.xhtml#l00295">ViewsDescriptor::GetNumViews()</a>, <a class="el" href="_descriptors_8cpp_source.xhtml#l00305">ViewsDescriptor::GetViewOrigin()</a>, and <a class="el" href="_descriptors_8cpp_source.xhtml#l00340">ViewsDescriptor::GetViewSizes()</a>.</p>
<div class="fragment"><div class="line"><a name="l00275"></a><span class="lineno">  275</span>&#160;{</div><div class="line"><a name="l00276"></a><span class="lineno">  276</span>&#160;    <span class="keywordflow">if</span> (<a class="code" href="structarmnn_1_1_views_descriptor.xhtml#a35546e7b56e6e972a495b48748478ede">GetNumViews</a>() != rhs.GetNumViews() || <a class="code" href="structarmnn_1_1_views_descriptor.xhtml#a78e8266be865fdd92cadd04d6e25ae1f">GetNumDimensions</a>() != rhs.GetNumDimensions())</div><div class="line"><a name="l00277"></a><span class="lineno">  277</span>&#160;    {</div><div class="line"><a name="l00278"></a><span class="lineno">  278</span>&#160;        <span class="keywordflow">return</span> <span class="keyword">false</span>;</div><div class="line"><a name="l00279"></a><span class="lineno">  279</span>&#160;    }</div><div class="line"><a name="l00280"></a><span class="lineno">  280</span>&#160;</div><div class="line"><a name="l00281"></a><span class="lineno">  281</span>&#160;    <span class="keywordflow">for</span> (<span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> i = 0u; i &lt; <a class="code" href="structarmnn_1_1_views_descriptor.xhtml#a35546e7b56e6e972a495b48748478ede">GetNumViews</a>(); ++i)</div><div class="line"><a name="l00282"></a><span class="lineno">  282</span>&#160;    {</div><div class="line"><a name="l00283"></a><span class="lineno">  283</span>&#160;        <span class="keywordflow">for</span> (<span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> j = 0u; j &lt; <a class="code" href="structarmnn_1_1_views_descriptor.xhtml#a78e8266be865fdd92cadd04d6e25ae1f">GetNumDimensions</a>(); ++j)</div><div class="line"><a name="l00284"></a><span class="lineno">  284</span>&#160;        {</div><div class="line"><a name="l00285"></a><span class="lineno">  285</span>&#160;            <span class="keywordflow">if</span> (<a class="code" href="structarmnn_1_1_views_descriptor.xhtml#ab78e6fe963508c1ac5c00d04bb3361a3">GetViewOrigin</a>(i)[j] != rhs.GetViewOrigin(i)[j] || <a class="code" href="structarmnn_1_1_views_descriptor.xhtml#a3c1ab47a0a319413b3a4b5757ed5b80b">GetViewSizes</a>(i)[j] != rhs.GetViewSizes(i)[j])</div><div class="line"><a name="l00286"></a><span class="lineno">  286</span>&#160;            {</div><div class="line"><a name="l00287"></a><span class="lineno">  287</span>&#160;                <span class="keywordflow">return</span> <span class="keyword">false</span>;</div><div class="line"><a name="l00288"></a><span class="lineno">  288</span>&#160;            }</div><div class="line"><a name="l00289"></a><span class="lineno">  289</span>&#160;        }</div><div class="line"><a name="l00290"></a><span class="lineno">  290</span>&#160;    }</div><div class="line"><a name="l00291"></a><span class="lineno">  291</span>&#160;</div><div class="line"><a name="l00292"></a><span class="lineno">  292</span>&#160;    <span class="keywordflow">return</span> <span class="keyword">true</span>;</div><div class="line"><a name="l00293"></a><span class="lineno">  293</span>&#160;}</div><div class="ttc" id="structarmnn_1_1_views_descriptor_xhtml_a78e8266be865fdd92cadd04d6e25ae1f"><div class="ttname"><a href="structarmnn_1_1_views_descriptor.xhtml#a78e8266be865fdd92cadd04d6e25ae1f">armnn::ViewsDescriptor::GetNumDimensions</a></div><div class="ttdeci">uint32_t GetNumDimensions() const</div><div class="ttdoc">Get the number of dimensions. </div><div class="ttdef"><b>Definition:</b> <a href="_descriptors_8cpp_source.xhtml#l00300">Descriptors.cpp:300</a></div></div>
<div class="ttc" id="structarmnn_1_1_views_descriptor_xhtml_a35546e7b56e6e972a495b48748478ede"><div class="ttname"><a href="structarmnn_1_1_views_descriptor.xhtml#a35546e7b56e6e972a495b48748478ede">armnn::ViewsDescriptor::GetNumViews</a></div><div class="ttdeci">uint32_t GetNumViews() const</div><div class="ttdoc">Get the number of views. </div><div class="ttdef"><b>Definition:</b> <a href="_descriptors_8cpp_source.xhtml#l00295">Descriptors.cpp:295</a></div></div>
<div class="ttc" id="structarmnn_1_1_views_descriptor_xhtml_ab78e6fe963508c1ac5c00d04bb3361a3"><div class="ttname"><a href="structarmnn_1_1_views_descriptor.xhtml#ab78e6fe963508c1ac5c00d04bb3361a3">armnn::ViewsDescriptor::GetViewOrigin</a></div><div class="ttdeci">const uint32_t * GetViewOrigin(uint32_t idx) const</div><div class="ttdoc">Get the view origin at the int value idx. </div><div class="ttdef"><b>Definition:</b> <a href="_descriptors_8cpp_source.xhtml#l00305">Descriptors.cpp:305</a></div></div>
<div class="ttc" id="structarmnn_1_1_views_descriptor_xhtml_a3c1ab47a0a319413b3a4b5757ed5b80b"><div class="ttname"><a href="structarmnn_1_1_views_descriptor.xhtml#a3c1ab47a0a319413b3a4b5757ed5b80b">armnn::ViewsDescriptor::GetViewSizes</a></div><div class="ttdeci">const uint32_t * GetViewSizes(uint32_t idx) const</div><div class="ttdoc">Get the view sizes at the int value idx. </div><div class="ttdef"><b>Definition:</b> <a href="_descriptors_8cpp_source.xhtml#l00340">Descriptors.cpp:340</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="a2b125117aa61f9baf3a9cb8658aa61a2"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a2b125117aa61f9baf3a9cb8658aa61a2">&#9670;&nbsp;</a></span>SetViewOriginCoord()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="namespacearmnn.xhtml#a67a0db04d321a74b7e7fcfd3f1a3f70b">Status</a> SetViewOriginCoord </td>
          <td>(</td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>view</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>coord</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>value</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Set the view origin coordinates. </p>
<p>The arguments are: view, dimension, value. If the view is greater than or equal to <a class="el" href="structarmnn_1_1_views_descriptor.xhtml#a35546e7b56e6e972a495b48748478ede" title="Get the number of views. ">GetNumViews()</a>, then the view argument is out of range. If the coord is greater than or equal to <a class="el" href="structarmnn_1_1_views_descriptor.xhtml#a78e8266be865fdd92cadd04d6e25ae1f" title="Get the number of dimensions. ">GetNumDimensions()</a>, then the coord argument is out of range. </p>

<p class="definition">Definition at line <a class="el" href="_descriptors_8cpp_source.xhtml#l00310">310</a> of file <a class="el" href="_descriptors_8cpp_source.xhtml">Descriptors.cpp</a>.</p>

<p class="reference">References <a class="el" href="_descriptors_8cpp_source.xhtml#l00167">OriginsDescriptor::SetViewOriginCoord()</a>.</p>

<p class="reference">Referenced by <a class="el" href="_converter_8cpp_source.xhtml#l00021">Converter::ConvertOperation()</a>, <a class="el" href="_deserializer_8cpp_source.xhtml#l02821">IDeserializer::DeserializerImpl::GetNormalizationDescriptor()</a>, and <a class="el" href="_tf_lite_parser_8cpp_source.xhtml#l02760">TfLiteParserImpl::OutputShapeOfReshape()</a>.</p>
<div class="fragment"><div class="line"><a name="l00311"></a><span class="lineno">  311</span>&#160;{</div><div class="line"><a name="l00312"></a><span class="lineno">  312</span>&#160;    <span class="keywordflow">return</span> m_Origins.<a class="code" href="structarmnn_1_1_origins_descriptor.xhtml#a2b125117aa61f9baf3a9cb8658aa61a2">SetViewOriginCoord</a>(view, coord, value);</div><div class="line"><a name="l00313"></a><span class="lineno">  313</span>&#160;}</div><div class="ttc" id="structarmnn_1_1_origins_descriptor_xhtml_a2b125117aa61f9baf3a9cb8658aa61a2"><div class="ttname"><a href="structarmnn_1_1_origins_descriptor.xhtml#a2b125117aa61f9baf3a9cb8658aa61a2">armnn::OriginsDescriptor::SetViewOriginCoord</a></div><div class="ttdeci">Status SetViewOriginCoord(uint32_t view, uint32_t coord, uint32_t value)</div><div class="ttdoc">Set the view origin coordinates. </div><div class="ttdef"><b>Definition:</b> <a href="_descriptors_8cpp_source.xhtml#l00167">Descriptors.cpp:167</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="aae0893695f5803a3517985c7cb1ccb2e"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aae0893695f5803a3517985c7cb1ccb2e">&#9670;&nbsp;</a></span>SetViewSize()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="namespacearmnn.xhtml#a67a0db04d321a74b7e7fcfd3f1a3f70b">Status</a> SetViewSize </td>
          <td>(</td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>view</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>coord</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>value</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Set the size of the views. </p>
<p>The arguments are: view, dimension, value. If the view is greater than or equal to <a class="el" href="structarmnn_1_1_views_descriptor.xhtml#a35546e7b56e6e972a495b48748478ede" title="Get the number of views. ">GetNumViews()</a>, then the view argument is out of range. If the coord is greater than or equal to <a class="el" href="structarmnn_1_1_views_descriptor.xhtml#a78e8266be865fdd92cadd04d6e25ae1f" title="Get the number of dimensions. ">GetNumDimensions()</a>, then the coord argument is out of range. </p>

<p class="definition">Definition at line <a class="el" href="_descriptors_8cpp_source.xhtml#l00315">315</a> of file <a class="el" href="_descriptors_8cpp_source.xhtml">Descriptors.cpp</a>.</p>

<p class="reference">References <a class="el" href="_logging_8hpp_source.xhtml#l00205">ARMNN_LOG</a>, <a class="el" href="namespacearmnn.xhtml#a4dc0adc6737b5944e7671bee71788407acb5e100e5a9a3e7f6d1fd97512215282">armnn::error</a>, <a class="el" href="namespacearmnn.xhtml#a67a0db04d321a74b7e7fcfd3f1a3f70bae139a585510a502bbf1841cf589f5086">armnn::Failure</a>, <a class="el" href="_descriptors_8cpp_source.xhtml#l00300">ViewsDescriptor::GetNumDimensions()</a>, <a class="el" href="_descriptors_8cpp_source.xhtml#l00295">ViewsDescriptor::GetNumViews()</a>, and <a class="el" href="namespacearmnn.xhtml#a67a0db04d321a74b7e7fcfd3f1a3f70ba505a83f220c02df2f85c3810cd9ceb38">armnn::Success</a>.</p>

<p class="reference">Referenced by <a class="el" href="_converter_8cpp_source.xhtml#l00021">Converter::ConvertOperation()</a>, <a class="el" href="_deserializer_8cpp_source.xhtml#l02821">IDeserializer::DeserializerImpl::GetNormalizationDescriptor()</a>, and <a class="el" href="_tf_lite_parser_8cpp_source.xhtml#l02760">TfLiteParserImpl::OutputShapeOfReshape()</a>.</p>
<div class="fragment"><div class="line"><a name="l00316"></a><span class="lineno">  316</span>&#160;{</div><div class="line"><a name="l00317"></a><span class="lineno">  317</span>&#160;    <span class="keywordflow">if</span> (!m_ViewSizes)</div><div class="line"><a name="l00318"></a><span class="lineno">  318</span>&#160;    {</div><div class="line"><a name="l00319"></a><span class="lineno">  319</span>&#160;        <a class="code" href="_logging_8hpp.xhtml#a7b6ad073975f437ec38ca7d20154727f">ARMNN_LOG</a>(<a class="code" href="namespacearmnn.xhtml#a4dc0adc6737b5944e7671bee71788407acb5e100e5a9a3e7f6d1fd97512215282">error</a>) &lt;&lt; <span class="stringliteral">&quot;ViewsDescriptor::SetViewSize: invalid view sizes&quot;</span>;</div><div class="line"><a name="l00320"></a><span class="lineno">  320</span>&#160;        <span class="keywordflow">return</span> <a class="code" href="namespacearmnn.xhtml#a67a0db04d321a74b7e7fcfd3f1a3f70bae139a585510a502bbf1841cf589f5086">Status::Failure</a>;</div><div class="line"><a name="l00321"></a><span class="lineno">  321</span>&#160;    }</div><div class="line"><a name="l00322"></a><span class="lineno">  322</span>&#160;</div><div class="line"><a name="l00323"></a><span class="lineno">  323</span>&#160;    <span class="keywordflow">if</span> (view &gt;= <a class="code" href="structarmnn_1_1_views_descriptor.xhtml#a35546e7b56e6e972a495b48748478ede">GetNumViews</a>())</div><div class="line"><a name="l00324"></a><span class="lineno">  324</span>&#160;    {</div><div class="line"><a name="l00325"></a><span class="lineno">  325</span>&#160;        <a class="code" href="_logging_8hpp.xhtml#a7b6ad073975f437ec38ca7d20154727f">ARMNN_LOG</a>(<a class="code" href="namespacearmnn.xhtml#a4dc0adc6737b5944e7671bee71788407acb5e100e5a9a3e7f6d1fd97512215282">error</a>) &lt;&lt; <span class="stringliteral">&quot;ViewsDescriptor::SetViewSize: view argument:&quot;</span> &lt;&lt; view &lt;&lt;</div><div class="line"><a name="l00326"></a><span class="lineno">  326</span>&#160;                                 <span class="stringliteral">&quot; is out of range&quot;</span>;</div><div class="line"><a name="l00327"></a><span class="lineno">  327</span>&#160;        <span class="keywordflow">return</span> <a class="code" href="namespacearmnn.xhtml#a67a0db04d321a74b7e7fcfd3f1a3f70bae139a585510a502bbf1841cf589f5086">Status::Failure</a>;</div><div class="line"><a name="l00328"></a><span class="lineno">  328</span>&#160;    }</div><div class="line"><a name="l00329"></a><span class="lineno">  329</span>&#160;    <span class="keywordflow">if</span> (coord &gt;= <a class="code" href="structarmnn_1_1_views_descriptor.xhtml#a78e8266be865fdd92cadd04d6e25ae1f">GetNumDimensions</a>())</div><div class="line"><a name="l00330"></a><span class="lineno">  330</span>&#160;    {</div><div class="line"><a name="l00331"></a><span class="lineno">  331</span>&#160;        <a class="code" href="_logging_8hpp.xhtml#a7b6ad073975f437ec38ca7d20154727f">ARMNN_LOG</a>(<a class="code" href="namespacearmnn.xhtml#a4dc0adc6737b5944e7671bee71788407acb5e100e5a9a3e7f6d1fd97512215282">error</a>) &lt;&lt; <span class="stringliteral">&quot;ViewsDescriptor::SetViewSize: coord argument:&quot;</span> &lt;&lt; coord &lt;&lt;</div><div class="line"><a name="l00332"></a><span class="lineno">  332</span>&#160;                                 <span class="stringliteral">&quot; is out of range&quot;</span>;</div><div class="line"><a name="l00333"></a><span class="lineno">  333</span>&#160;        <span class="keywordflow">return</span> <a class="code" href="namespacearmnn.xhtml#a67a0db04d321a74b7e7fcfd3f1a3f70bae139a585510a502bbf1841cf589f5086">Status::Failure</a>;</div><div class="line"><a name="l00334"></a><span class="lineno">  334</span>&#160;    }</div><div class="line"><a name="l00335"></a><span class="lineno">  335</span>&#160;</div><div class="line"><a name="l00336"></a><span class="lineno">  336</span>&#160;    m_ViewSizes[view][coord] = value;</div><div class="line"><a name="l00337"></a><span class="lineno">  337</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="namespacearmnn.xhtml#a67a0db04d321a74b7e7fcfd3f1a3f70ba505a83f220c02df2f85c3810cd9ceb38">Status::Success</a>;</div><div class="line"><a name="l00338"></a><span class="lineno">  338</span>&#160;}</div><div class="ttc" id="structarmnn_1_1_views_descriptor_xhtml_a78e8266be865fdd92cadd04d6e25ae1f"><div class="ttname"><a href="structarmnn_1_1_views_descriptor.xhtml#a78e8266be865fdd92cadd04d6e25ae1f">armnn::ViewsDescriptor::GetNumDimensions</a></div><div class="ttdeci">uint32_t GetNumDimensions() const</div><div class="ttdoc">Get the number of dimensions. </div><div class="ttdef"><b>Definition:</b> <a href="_descriptors_8cpp_source.xhtml#l00300">Descriptors.cpp:300</a></div></div>
<div class="ttc" id="_logging_8hpp_xhtml_a7b6ad073975f437ec38ca7d20154727f"><div class="ttname"><a href="_logging_8hpp.xhtml#a7b6ad073975f437ec38ca7d20154727f">ARMNN_LOG</a></div><div class="ttdeci">#define ARMNN_LOG(severity)</div><div class="ttdef"><b>Definition:</b> <a href="_logging_8hpp_source.xhtml#l00205">Logging.hpp:205</a></div></div>
<div class="ttc" id="structarmnn_1_1_views_descriptor_xhtml_a35546e7b56e6e972a495b48748478ede"><div class="ttname"><a href="structarmnn_1_1_views_descriptor.xhtml#a35546e7b56e6e972a495b48748478ede">armnn::ViewsDescriptor::GetNumViews</a></div><div class="ttdeci">uint32_t GetNumViews() const</div><div class="ttdoc">Get the number of views. </div><div class="ttdef"><b>Definition:</b> <a href="_descriptors_8cpp_source.xhtml#l00295">Descriptors.cpp:295</a></div></div>
<div class="ttc" id="namespacearmnn_xhtml_a4dc0adc6737b5944e7671bee71788407acb5e100e5a9a3e7f6d1fd97512215282"><div class="ttname"><a href="namespacearmnn.xhtml#a4dc0adc6737b5944e7671bee71788407acb5e100e5a9a3e7f6d1fd97512215282">armnn::BoostLogSeverityMapping::error</a></div></div>
<div class="ttc" id="namespacearmnn_xhtml_a67a0db04d321a74b7e7fcfd3f1a3f70ba505a83f220c02df2f85c3810cd9ceb38"><div class="ttname"><a href="namespacearmnn.xhtml#a67a0db04d321a74b7e7fcfd3f1a3f70ba505a83f220c02df2f85c3810cd9ceb38">armnn::Status::Success</a></div></div>
<div class="ttc" id="namespacearmnn_xhtml_a67a0db04d321a74b7e7fcfd3f1a3f70bae139a585510a502bbf1841cf589f5086"><div class="ttname"><a href="namespacearmnn.xhtml#a67a0db04d321a74b7e7fcfd3f1a3f70bae139a585510a502bbf1841cf589f5086">armnn::Status::Failure</a></div></div>
</div><!-- fragment -->
</div>
</div>
<h2 class="groupheader">Friends And Related Function Documentation</h2>
<a id="a6ab1c51c46d6587c0eaa2a1674b2b48c"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a6ab1c51c46d6587c0eaa2a1674b2b48c">&#9670;&nbsp;</a></span>swap</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void swap </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="structarmnn_1_1_views_descriptor.xhtml">ViewsDescriptor</a> &amp;&#160;</td>
          <td class="paramname"><em>first</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="structarmnn_1_1_views_descriptor.xhtml">ViewsDescriptor</a> &amp;&#160;</td>
          <td class="paramname"><em>second</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">friend</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Swap the <a class="el" href="structarmnn_1_1_views_descriptor.xhtml" title="A ViewsDescriptor for the SplitterLayer. ">ViewsDescriptor</a> value first and second. </p>

<p class="definition">Definition at line <a class="el" href="_descriptors_8cpp_source.xhtml#l00359">359</a> of file <a class="el" href="_descriptors_8cpp_source.xhtml">Descriptors.cpp</a>.</p>

<p class="reference">Referenced by <a class="el" href="_descriptors_8cpp_source.xhtml#l00268">ViewsDescriptor::operator=()</a>, <a class="el" href="_descriptors_8cpp_source.xhtml#l00350">armnn::swap()</a>, and <a class="el" href="_descriptors_8cpp_source.xhtml#l00250">ViewsDescriptor::ViewsDescriptor()</a>.</p>
<div class="fragment"><div class="line"><a name="l00360"></a><span class="lineno">  360</span>&#160;{</div><div class="line"><a name="l00361"></a><span class="lineno">  361</span>&#160;    <span class="keyword">using</span> <a class="code" href="namespacearmnn.xhtml#a686b8288a04b3ffff67d560eea53f6be">std::swap</a>;</div><div class="line"><a name="l00362"></a><span class="lineno">  362</span>&#160;    <a class="code" href="structarmnn_1_1_views_descriptor.xhtml#a6ab1c51c46d6587c0eaa2a1674b2b48c">swap</a>(first.m_Origins, second.m_Origins);</div><div class="line"><a name="l00363"></a><span class="lineno">  363</span>&#160;    <a class="code" href="structarmnn_1_1_views_descriptor.xhtml#a6ab1c51c46d6587c0eaa2a1674b2b48c">swap</a>(first.m_ViewSizes, second.m_ViewSizes);</div><div class="line"><a name="l00364"></a><span class="lineno">  364</span>&#160;}</div><div class="ttc" id="namespacearmnn_xhtml_a686b8288a04b3ffff67d560eea53f6be"><div class="ttname"><a href="namespacearmnn.xhtml#a686b8288a04b3ffff67d560eea53f6be">armnn::swap</a></div><div class="ttdeci">void swap(ViewsDescriptor &amp;first, ViewsDescriptor &amp;second)</div><div class="ttdef"><b>Definition:</b> <a href="_descriptors_8cpp_source.xhtml#l00359">Descriptors.cpp:359</a></div></div>
<div class="ttc" id="structarmnn_1_1_views_descriptor_xhtml_a6ab1c51c46d6587c0eaa2a1674b2b48c"><div class="ttname"><a href="structarmnn_1_1_views_descriptor.xhtml#a6ab1c51c46d6587c0eaa2a1674b2b48c">armnn::ViewsDescriptor::swap</a></div><div class="ttdeci">friend void swap(ViewsDescriptor &amp;first, ViewsDescriptor &amp;second)</div><div class="ttdoc">Swap the ViewsDescriptor value first and second. </div><div class="ttdef"><b>Definition:</b> <a href="_descriptors_8cpp_source.xhtml#l00359">Descriptors.cpp:359</a></div></div>
</div><!-- fragment -->
</div>
</div>
<hr/>The documentation for this struct was generated from the following files:<ul>
<li>include/armnn/<a class="el" href="_descriptors_8hpp_source.xhtml">Descriptors.hpp</a></li>
<li>src/armnn/<a class="el" href="_descriptors_8cpp_source.xhtml">Descriptors.cpp</a></li>
</ul>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="namespacearmnn.xhtml">armnn</a></li><li class="navelem"><a class="el" href="structarmnn_1_1_views_descriptor.xhtml">ViewsDescriptor</a></li>
    <li class="footer">Generated on Wed Nov 23 2022 10:57:43 for ArmNN by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.13 </li>
  </ul>
</div>
</body>
</html>
