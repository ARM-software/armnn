<!-- Copyright (c) 2020 ARM Limited. -->
<!--                                 -->
<!-- SPDX-License-Identifier: MIT    -->
<!--                                 -->
<!-- HTML header for doxygen 1.8.13-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.17"/>
<meta name="robots" content="NOINDEX, NOFOLLOW" />
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>ArmNN: src/backends/neon/NeonLayerSupport.hpp Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script>
<script type="text/javascript" async="async" src="http://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="stylesheet.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <img alt="ArmNN" src="Arm_NN_horizontal_blue.png" style="max-width: 10rem; margin-top: .5rem; margin-left 10px"/>
  <td style="padding-left: 0.5em;">
   <div id="projectname">
   &#160;<span id="projectnumber">23.05</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.17 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "search",false,'Search');
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(document).ready(function(){initNavTree('_neon_layer_support_8hpp_source.xhtml',''); initResizable(); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="headertitle">
<div class="title">NeonLayerSupport.hpp</div>  </div>
</div><!--header-->
<div class="contents">
<a href="_neon_layer_support_8hpp.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="comment">//</span></div>
<div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="comment">// Copyright Â© 2017 Arm Ltd and Contributors. All rights reserved.</span></div>
<div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="comment">// SPDX-License-Identifier: MIT</span></div>
<div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="comment">//</span></div>
<div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="preprocessor">#pragma once</span></div>
<div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160; </div>
<div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="preprocessor">#include &lt;<a class="code" href="_i_backend_internal_8hpp.xhtml">armnn/backends/IBackendInternal.hpp</a>&gt;</span></div>
<div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160; </div>
<div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="preprocessor">#include &lt;<a class="code" href="_layer_support_base_8hpp.xhtml">backendsCommon/LayerSupportBase.hpp</a>&gt;</span></div>
<div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160; </div>
<div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;<span class="keyword">namespace </span><a class="code" href="namespacearmnn.xhtml">armnn</a></div>
<div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;{</div>
<div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160; </div>
<div class="line"><a name="l00014"></a><span class="lineno"><a class="line" href="classarmnn_1_1_neon_layer_support.xhtml">   14</a></span>&#160;<span class="keyword">class </span><a class="code" href="classarmnn_1_1_neon_layer_support.xhtml">NeonLayerSupport</a> : <span class="keyword">public</span> <a class="code" href="classarmnn_1_1_layer_support_base.xhtml">LayerSupportBase</a></div>
<div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;{</div>
<div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;<span class="keyword">public</span>:</div>
<div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;    <span class="keyword">explicit</span> <a class="code" href="classarmnn_1_1_neon_layer_support.xhtml#a0e8bdd2741997b0cdc329cbfcaeebf93">NeonLayerSupport</a>(<span class="keyword">const</span> <a class="code" href="classarmnn_1_1_i_backend_internal.xhtml#a4d0238968a7643dbb170547dd22bba54">IBackendInternal::IBackendSpecificModelContextPtr</a>&amp; modelContextPtr);</div>
<div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;    <a class="code" href="classarmnn_1_1_neon_layer_support.xhtml#a0e8bdd2741997b0cdc329cbfcaeebf93">NeonLayerSupport</a>();</div>
<div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160; </div>
<div class="line"><a name="l00020"></a><span class="lineno"><a class="line" href="classarmnn_1_1_neon_layer_support.xhtml#a19528981c1519ecc64cc4a70b12ce8d3">   20</a></span>&#160;    <a class="code" href="classarmnn_1_1_neon_layer_support.xhtml#a19528981c1519ecc64cc4a70b12ce8d3">~NeonLayerSupport</a>() {}</div>
<div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160; </div>
<div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;    <span class="keywordtype">bool</span> <a class="code" href="classarmnn_1_1_neon_layer_support.xhtml#a1f75cea2b43e602f4b99d60375d41a8a">IsLayerSupported</a>(<span class="keyword">const</span> <a class="code" href="namespacearmnn.xhtml#a56943a0946e5f15e5e58054b8e7a04a4">LayerType</a>&amp; type,</div>
<div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;                          <span class="keyword">const</span> std::vector&lt;TensorInfo&gt;&amp; infos,</div>
<div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;                          <span class="keyword">const</span> <a class="code" href="structarmnn_1_1_base_descriptor.xhtml">BaseDescriptor</a>&amp; <a class="code" href="classarmnn_1_1_i_layer_support.xhtml#a859feaa966620ae0ea88abf5226f2d04">descriptor</a>,</div>
<div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;                          <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_optional.xhtml">Optional&lt;LstmInputParamsInfo&gt;</a>&amp; lstmParamsInfo,</div>
<div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;                          <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_optional.xhtml">Optional&lt;QuantizedLstmInputParamsInfo&gt;</a>&amp; quantizedLstmParamsInfo,</div>
<div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;                          <a class="code" href="classarmnn_1_1_optional.xhtml">Optional&lt;std::string&amp;&gt;</a> <a class="code" href="classarmnn_1_1_i_layer_support.xhtml#ac75f9a02b051716a0cc1cc0818dfe454">reasonIfUnsupported</a>) <span class="keyword">const override</span>;</div>
<div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160; </div>
<div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;    <span class="keywordtype">bool</span> <a class="code" href="classarmnn_1_1_neon_layer_support.xhtml#acd148b61eab388a9313c61f4c7a96c4b">IsActivationSupported</a>(<span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a>&amp; input,</div>
<div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;                               <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a>&amp; <a class="code" href="classarmnn_1_1_i_layer_support.xhtml#a4e25e081529b7e99e5e454d916ed83fb">output</a>,</div>
<div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;                               <span class="keyword">const</span> <a class="code" href="structarmnn_1_1_activation_descriptor.xhtml">ActivationDescriptor</a>&amp; <a class="code" href="classarmnn_1_1_i_layer_support.xhtml#a859feaa966620ae0ea88abf5226f2d04">descriptor</a>,</div>
<div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;                               <a class="code" href="classarmnn_1_1_optional.xhtml">Optional&lt;std::string&amp;&gt;</a> <a class="code" href="classarmnn_1_1_i_layer_support.xhtml#ac75f9a02b051716a0cc1cc0818dfe454">reasonIfUnsupported</a> = <a class="code" href="structarmnn_1_1_empty_optional.xhtml">EmptyOptional</a>()) <span class="keyword">const override</span>;</div>
<div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160; </div>
<div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;    <span class="keywordtype">bool</span> <a class="code" href="classarmnn_1_1_neon_layer_support.xhtml#a06a955e172cf18898d966eab7383efa1">IsAdditionSupported</a>(<span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a>&amp; input0,</div>
<div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;                             <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a>&amp; <a class="code" href="classarmnn_1_1_i_layer_support.xhtml#ab82416560ced17268c6ba4443a3aac5e">input1</a>,</div>
<div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;                             <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a>&amp; <a class="code" href="classarmnn_1_1_i_layer_support.xhtml#a4e25e081529b7e99e5e454d916ed83fb">output</a>,</div>
<div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;                             <a class="code" href="classarmnn_1_1_optional.xhtml">Optional&lt;std::string&amp;&gt;</a> <a class="code" href="classarmnn_1_1_i_layer_support.xhtml#ac75f9a02b051716a0cc1cc0818dfe454">reasonIfUnsupported</a> = <a class="code" href="structarmnn_1_1_empty_optional.xhtml">EmptyOptional</a>()) <span class="keyword">const override</span>;</div>
<div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160; </div>
<div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;    <span class="keywordtype">bool</span> <a class="code" href="classarmnn_1_1_neon_layer_support.xhtml#a7224fbfbc4c5a2b3710543e3f574171f">IsArgMinMaxSupported</a>(<span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a>&amp; input,</div>
<div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;                              <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a>&amp; <a class="code" href="classarmnn_1_1_i_layer_support.xhtml#a4e25e081529b7e99e5e454d916ed83fb">output</a>,</div>
<div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;                              <span class="keyword">const</span> <a class="code" href="structarmnn_1_1_arg_min_max_descriptor.xhtml">ArgMinMaxDescriptor</a>&amp; <a class="code" href="classarmnn_1_1_i_layer_support.xhtml#a859feaa966620ae0ea88abf5226f2d04">descriptor</a>,</div>
<div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;                              <a class="code" href="classarmnn_1_1_optional.xhtml">Optional&lt;std::string&amp;&gt;</a> <a class="code" href="classarmnn_1_1_i_layer_support.xhtml#ac75f9a02b051716a0cc1cc0818dfe454">reasonIfUnsupported</a> = <a class="code" href="structarmnn_1_1_empty_optional.xhtml">EmptyOptional</a>()) <span class="keyword">const override</span>;</div>
<div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160; </div>
<div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;    <span class="keywordtype">bool</span> <a class="code" href="classarmnn_1_1_neon_layer_support.xhtml#a22cfc1d5f68bd32db0aa126e8fd9e615">IsBatchMatMulSupported</a>(<span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a>&amp; inputX,</div>
<div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;                                <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a>&amp; inputY,</div>
<div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;                                <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a>&amp; <a class="code" href="classarmnn_1_1_i_layer_support.xhtml#a4e25e081529b7e99e5e454d916ed83fb">output</a>,</div>
<div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;                                <span class="keyword">const</span> <a class="code" href="structarmnn_1_1_batch_mat_mul_descriptor.xhtml">BatchMatMulDescriptor</a>&amp; <a class="code" href="classarmnn_1_1_i_layer_support.xhtml#a859feaa966620ae0ea88abf5226f2d04">descriptor</a>,</div>
<div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;                                <a class="code" href="classarmnn_1_1_optional.xhtml">Optional&lt;std::string&amp;&gt;</a> <a class="code" href="classarmnn_1_1_i_layer_support.xhtml#ac75f9a02b051716a0cc1cc0818dfe454">reasonIfUnsupported</a> = <a class="code" href="structarmnn_1_1_empty_optional.xhtml">EmptyOptional</a>()) <span class="keyword">const</span>;</div>
<div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160; </div>
<div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;    <span class="keywordtype">bool</span> <a class="code" href="classarmnn_1_1_neon_layer_support.xhtml#a450ddf4b4335cb37e07e3b0171b00096">IsBatchNormalizationSupported</a>(<span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a>&amp; input,</div>
<div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;                                       <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a>&amp; <a class="code" href="classarmnn_1_1_i_layer_support.xhtml#a4e25e081529b7e99e5e454d916ed83fb">output</a>,</div>
<div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;                                       <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a>&amp; <a class="code" href="classarmnn_1_1_i_layer_support.xhtml#a895a8451e0799b95d65caf7ffe0a32d7">mean</a>,</div>
<div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;                                       <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a>&amp; <a class="code" href="classarmnn_1_1_i_layer_support.xhtml#a903053b422754682265fba0c03d94a52">var</a>,</div>
<div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;                                       <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a>&amp; <a class="code" href="classarmnn_1_1_i_layer_support.xhtml#a83a99de40f6bffaa36f0333d04690b2a">beta</a>,</div>
<div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;                                       <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a>&amp; <a class="code" href="classarmnn_1_1_i_layer_support.xhtml#ab5cccb3233f5eff2119e8acc80cec209">gamma</a>,</div>
<div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;                                       <span class="keyword">const</span> <a class="code" href="structarmnn_1_1_batch_normalization_descriptor.xhtml">BatchNormalizationDescriptor</a>&amp; <a class="code" href="classarmnn_1_1_i_layer_support.xhtml#a859feaa966620ae0ea88abf5226f2d04">descriptor</a>,</div>
<div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;                                       <a class="code" href="classarmnn_1_1_optional.xhtml">Optional&lt;std::string&amp;&gt;</a> <a class="code" href="classarmnn_1_1_i_layer_support.xhtml#ac75f9a02b051716a0cc1cc0818dfe454">reasonIfUnsupported</a> = <a class="code" href="structarmnn_1_1_empty_optional.xhtml">EmptyOptional</a>()) <span class="keyword">const override</span>;</div>
<div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160; </div>
<div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;    <span class="keywordtype">bool</span> <a class="code" href="classarmnn_1_1_neon_layer_support.xhtml#a30cbe4bc4e20ae9b2aac66a108088919">IsBatchToSpaceNdSupported</a>(<span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a>&amp; input,</div>
<div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;                                   <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a>&amp; <a class="code" href="classarmnn_1_1_i_layer_support.xhtml#a4e25e081529b7e99e5e454d916ed83fb">output</a>,</div>
<div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;                                   <span class="keyword">const</span> <a class="code" href="structarmnn_1_1_batch_to_space_nd_descriptor.xhtml">BatchToSpaceNdDescriptor</a>&amp; <a class="code" href="classarmnn_1_1_i_layer_support.xhtml#a859feaa966620ae0ea88abf5226f2d04">descriptor</a>,</div>
<div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;                                   <a class="code" href="classarmnn_1_1_optional.xhtml">Optional&lt;std::string&amp;&gt;</a> <a class="code" href="classarmnn_1_1_i_layer_support.xhtml#ac75f9a02b051716a0cc1cc0818dfe454">reasonIfUnsupported</a> = <a class="code" href="structarmnn_1_1_empty_optional.xhtml">EmptyOptional</a>()) <span class="keyword">const override</span>;</div>
<div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160; </div>
<div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;    <span class="keywordtype">bool</span> <a class="code" href="classarmnn_1_1_neon_layer_support.xhtml#ac680aa10b0a3768da4c23e691881b5ea">IsCastSupported</a>(<span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a>&amp; input,</div>
<div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;                         <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a>&amp; <a class="code" href="classarmnn_1_1_i_layer_support.xhtml#a4e25e081529b7e99e5e454d916ed83fb">output</a>,</div>
<div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;                         <a class="code" href="classarmnn_1_1_optional.xhtml">Optional&lt;std::string&amp;&gt;</a> <a class="code" href="classarmnn_1_1_i_layer_support.xhtml#ac75f9a02b051716a0cc1cc0818dfe454">reasonIfUnsupported</a> = <a class="code" href="structarmnn_1_1_empty_optional.xhtml">EmptyOptional</a>()) <span class="keyword">const override</span>;</div>
<div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160; </div>
<div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;    <span class="keywordtype">bool</span> <a class="code" href="classarmnn_1_1_neon_layer_support.xhtml#a1362503332222029f9d73d40520f35bd">IsChannelShuffleSupported</a>(<span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a>&amp; input,</div>
<div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;                                   <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a>&amp; <a class="code" href="classarmnn_1_1_i_layer_support.xhtml#a4e25e081529b7e99e5e454d916ed83fb">output</a>,</div>
<div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;                                   <span class="keyword">const</span> <a class="code" href="structarmnn_1_1_channel_shuffle_descriptor.xhtml">ChannelShuffleDescriptor</a>&amp; <a class="code" href="classarmnn_1_1_i_layer_support.xhtml#a859feaa966620ae0ea88abf5226f2d04">descriptor</a>,</div>
<div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;                                   <a class="code" href="classarmnn_1_1_optional.xhtml">Optional&lt;std::string&amp;&gt;</a> <a class="code" href="classarmnn_1_1_i_layer_support.xhtml#ac75f9a02b051716a0cc1cc0818dfe454">reasonIfUnsupported</a> = <a class="code" href="structarmnn_1_1_empty_optional.xhtml">EmptyOptional</a>()) <span class="keyword">const override</span>;</div>
<div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160; </div>
<div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;    <span class="keywordtype">bool</span> <a class="code" href="classarmnn_1_1_neon_layer_support.xhtml#a387c184902d9f09d35bb22b076cb245d">IsComparisonSupported</a>(<span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a>&amp; input0,</div>
<div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;                               <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a>&amp; <a class="code" href="classarmnn_1_1_i_layer_support.xhtml#ab82416560ced17268c6ba4443a3aac5e">input1</a>,</div>
<div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;                               <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a>&amp; <a class="code" href="classarmnn_1_1_i_layer_support.xhtml#a4e25e081529b7e99e5e454d916ed83fb">output</a>,</div>
<div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;                               <span class="keyword">const</span> <a class="code" href="structarmnn_1_1_comparison_descriptor.xhtml">ComparisonDescriptor</a>&amp; <a class="code" href="classarmnn_1_1_i_layer_support.xhtml#a859feaa966620ae0ea88abf5226f2d04">descriptor</a>,</div>
<div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;                               <a class="code" href="classarmnn_1_1_optional.xhtml">Optional&lt;std::string&amp;&gt;</a> <a class="code" href="classarmnn_1_1_i_layer_support.xhtml#ac75f9a02b051716a0cc1cc0818dfe454">reasonIfUnsupported</a> = <a class="code" href="structarmnn_1_1_empty_optional.xhtml">EmptyOptional</a>()) <span class="keyword">const override</span>;</div>
<div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160; </div>
<div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;    <span class="keywordtype">bool</span> <a class="code" href="classarmnn_1_1_neon_layer_support.xhtml#af6465e7a85f4ef0013c7d7161cd07a4d">IsConcatSupported</a>(<span class="keyword">const</span> std::vector&lt;const TensorInfo*&gt; inputs,</div>
<div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;                           <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a>&amp; <a class="code" href="classarmnn_1_1_i_layer_support.xhtml#a4e25e081529b7e99e5e454d916ed83fb">output</a>,</div>
<div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;                           <span class="keyword">const</span> <a class="code" href="structarmnn_1_1_origins_descriptor.xhtml">OriginsDescriptor</a>&amp; <a class="code" href="classarmnn_1_1_i_layer_support.xhtml#a859feaa966620ae0ea88abf5226f2d04">descriptor</a>,</div>
<div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;                           <a class="code" href="classarmnn_1_1_optional.xhtml">Optional&lt;std::string&amp;&gt;</a> <a class="code" href="classarmnn_1_1_i_layer_support.xhtml#ac75f9a02b051716a0cc1cc0818dfe454">reasonIfUnsupported</a> = <a class="code" href="structarmnn_1_1_empty_optional.xhtml">EmptyOptional</a>()) <span class="keyword">const override</span>;</div>
<div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160; </div>
<div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;    <span class="keywordtype">bool</span> <a class="code" href="classarmnn_1_1_neon_layer_support.xhtml#a57aee9aba2e2ad5d0bd9f65acd05b6e4">IsConstantSupported</a>(<span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a>&amp; <a class="code" href="classarmnn_1_1_i_layer_support.xhtml#a4e25e081529b7e99e5e454d916ed83fb">output</a>,</div>
<div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;                             <a class="code" href="classarmnn_1_1_optional.xhtml">Optional&lt;std::string&amp;&gt;</a> <a class="code" href="classarmnn_1_1_i_layer_support.xhtml#ac75f9a02b051716a0cc1cc0818dfe454">reasonIfUnsupported</a> = <a class="code" href="structarmnn_1_1_empty_optional.xhtml">EmptyOptional</a>()) <span class="keyword">const override</span>;</div>
<div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160; </div>
<div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;    <span class="keywordtype">bool</span> <a class="code" href="classarmnn_1_1_neon_layer_support.xhtml#a95dac0c44b7e759694a97778bfbea954">IsConvertFp16ToFp32Supported</a>(<span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a>&amp; input,</div>
<div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;                                      <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a>&amp; <a class="code" href="classarmnn_1_1_i_layer_support.xhtml#a4e25e081529b7e99e5e454d916ed83fb">output</a>,</div>
<div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;                                      <a class="code" href="classarmnn_1_1_optional.xhtml">Optional&lt;std::string&amp;&gt;</a> <a class="code" href="classarmnn_1_1_i_layer_support.xhtml#ac75f9a02b051716a0cc1cc0818dfe454">reasonIfUnsupported</a> = <a class="code" href="structarmnn_1_1_empty_optional.xhtml">EmptyOptional</a>()) <span class="keyword">const override</span>;</div>
<div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160; </div>
<div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;    <span class="keywordtype">bool</span> <a class="code" href="classarmnn_1_1_neon_layer_support.xhtml#a5f9272cdf0224364e1bb9b47efe4130a">IsConvertFp32ToFp16Supported</a>(<span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a>&amp; input,</div>
<div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;                                      <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a>&amp; <a class="code" href="classarmnn_1_1_i_layer_support.xhtml#a4e25e081529b7e99e5e454d916ed83fb">output</a>,</div>
<div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;                                      <a class="code" href="classarmnn_1_1_optional.xhtml">Optional&lt;std::string&amp;&gt;</a> <a class="code" href="classarmnn_1_1_i_layer_support.xhtml#ac75f9a02b051716a0cc1cc0818dfe454">reasonIfUnsupported</a> = <a class="code" href="structarmnn_1_1_empty_optional.xhtml">EmptyOptional</a>()) <span class="keyword">const override</span>;</div>
<div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160; </div>
<div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;    <span class="keywordtype">bool</span> <a class="code" href="classarmnn_1_1_neon_layer_support.xhtml#a4bd807090f4cb45bbfaa9c67e49532f5">IsConvolution2dSupported</a>(<span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a>&amp; input,</div>
<div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;                                  <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a>&amp; <a class="code" href="classarmnn_1_1_i_layer_support.xhtml#a4e25e081529b7e99e5e454d916ed83fb">output</a>,</div>
<div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;                                  <span class="keyword">const</span> <a class="code" href="structarmnn_1_1_convolution2d_descriptor.xhtml">Convolution2dDescriptor</a>&amp; <a class="code" href="classarmnn_1_1_i_layer_support.xhtml#a859feaa966620ae0ea88abf5226f2d04">descriptor</a>,</div>
<div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;                                  <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a>&amp; <a class="code" href="classarmnn_1_1_i_layer_support.xhtml#a631f893f44415523924016ed3f54a661">weights</a>,</div>
<div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;                                  <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_optional.xhtml">Optional&lt;TensorInfo&gt;</a>&amp; <a class="code" href="classarmnn_1_1_i_layer_support.xhtml#a71cf13fc7f7aeac054919e0c6dcab52e">biases</a>,</div>
<div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;                                  <a class="code" href="classarmnn_1_1_optional.xhtml">Optional&lt;std::string&amp;&gt;</a> <a class="code" href="classarmnn_1_1_i_layer_support.xhtml#ac75f9a02b051716a0cc1cc0818dfe454">reasonIfUnsupported</a> = <a class="code" href="structarmnn_1_1_empty_optional.xhtml">EmptyOptional</a>()) <span class="keyword">const override</span>;</div>
<div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160; </div>
<div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;    <span class="keywordtype">bool</span> <a class="code" href="classarmnn_1_1_neon_layer_support.xhtml#abe850b2a5be4ce4617cb51ceb5344756">IsConvolution3dSupported</a>(<span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a>&amp; input,</div>
<div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;                                  <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a>&amp; <a class="code" href="classarmnn_1_1_i_layer_support.xhtml#a4e25e081529b7e99e5e454d916ed83fb">output</a>,</div>
<div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;                                  <span class="keyword">const</span> <a class="code" href="structarmnn_1_1_convolution3d_descriptor.xhtml">Convolution3dDescriptor</a>&amp; <a class="code" href="classarmnn_1_1_i_layer_support.xhtml#a859feaa966620ae0ea88abf5226f2d04">descriptor</a>,</div>
<div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;                                  <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a>&amp; <a class="code" href="classarmnn_1_1_i_layer_support.xhtml#a631f893f44415523924016ed3f54a661">weights</a>,</div>
<div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;                                  <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_optional.xhtml">Optional&lt;TensorInfo&gt;</a>&amp; <a class="code" href="classarmnn_1_1_i_layer_support.xhtml#a71cf13fc7f7aeac054919e0c6dcab52e">biases</a>,</div>
<div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;                                  <a class="code" href="classarmnn_1_1_optional.xhtml">Optional&lt;std::string&amp;&gt;</a> <a class="code" href="classarmnn_1_1_i_layer_support.xhtml#ac75f9a02b051716a0cc1cc0818dfe454">reasonIfUnsupported</a> = <a class="code" href="structarmnn_1_1_empty_optional.xhtml">EmptyOptional</a>()) <span class="keyword">const override</span>;</div>
<div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160; </div>
<div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;    <span class="keywordtype">bool</span> <a class="code" href="classarmnn_1_1_neon_layer_support.xhtml#a84f23a37f7fd69269f072e114b7f0afb">IsDepthToSpaceSupported</a>(<span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a>&amp; input,</div>
<div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;                                 <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a>&amp; <a class="code" href="classarmnn_1_1_i_layer_support.xhtml#a4e25e081529b7e99e5e454d916ed83fb">output</a>,</div>
<div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;                                 <span class="keyword">const</span> <a class="code" href="structarmnn_1_1_space_to_depth_descriptor.xhtml">DepthToSpaceDescriptor</a>&amp; <a class="code" href="classarmnn_1_1_i_layer_support.xhtml#a859feaa966620ae0ea88abf5226f2d04">descriptor</a>,</div>
<div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;                                 <a class="code" href="classarmnn_1_1_optional.xhtml">Optional&lt;std::string&amp;&gt;</a> <a class="code" href="classarmnn_1_1_i_layer_support.xhtml#ac75f9a02b051716a0cc1cc0818dfe454">reasonIfUnsupported</a> = <a class="code" href="structarmnn_1_1_empty_optional.xhtml">EmptyOptional</a>()) <span class="keyword">const override</span>;</div>
<div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160; </div>
<div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160; </div>
<div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;    <span class="keywordtype">bool</span> <a class="code" href="classarmnn_1_1_neon_layer_support.xhtml#a56c4df05190f0f465e8501ae831af234">IsDepthwiseConvolutionSupported</a>(<span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a>&amp; input,</div>
<div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;                                         <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a>&amp; <a class="code" href="classarmnn_1_1_i_layer_support.xhtml#a4e25e081529b7e99e5e454d916ed83fb">output</a>,</div>
<div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;                                         <span class="keyword">const</span> <a class="code" href="structarmnn_1_1_depthwise_convolution2d_descriptor.xhtml">DepthwiseConvolution2dDescriptor</a>&amp; <a class="code" href="classarmnn_1_1_i_layer_support.xhtml#a859feaa966620ae0ea88abf5226f2d04">descriptor</a>,</div>
<div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;                                         <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a>&amp; <a class="code" href="classarmnn_1_1_i_layer_support.xhtml#a631f893f44415523924016ed3f54a661">weights</a>,</div>
<div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;                                         <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_optional.xhtml">Optional&lt;TensorInfo&gt;</a>&amp; <a class="code" href="classarmnn_1_1_i_layer_support.xhtml#a71cf13fc7f7aeac054919e0c6dcab52e">biases</a>,</div>
<div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;                                         <a class="code" href="classarmnn_1_1_optional.xhtml">Optional&lt;std::string&amp;&gt;</a> <a class="code" href="classarmnn_1_1_i_layer_support.xhtml#ac75f9a02b051716a0cc1cc0818dfe454">reasonIfUnsupported</a> = <a class="code" href="structarmnn_1_1_empty_optional.xhtml">EmptyOptional</a>()) <span class="keyword">const override</span>;</div>
<div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160; </div>
<div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;    <span class="keywordtype">bool</span> <a class="code" href="classarmnn_1_1_neon_layer_support.xhtml#a866844299dc03c65ca41be5990bf19e8">IsDequantizeSupported</a>(<span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a>&amp; input,</div>
<div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;                               <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a>&amp; <a class="code" href="classarmnn_1_1_i_layer_support.xhtml#a4e25e081529b7e99e5e454d916ed83fb">output</a>,</div>
<div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;                               <a class="code" href="classarmnn_1_1_optional.xhtml">Optional&lt;std::string&amp;&gt;</a> <a class="code" href="classarmnn_1_1_i_layer_support.xhtml#ac75f9a02b051716a0cc1cc0818dfe454">reasonIfUnsupported</a> = <a class="code" href="structarmnn_1_1_empty_optional.xhtml">EmptyOptional</a>()) <span class="keyword">const override</span>;</div>
<div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160; </div>
<div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;    <span class="keywordtype">bool</span> <a class="code" href="classarmnn_1_1_neon_layer_support.xhtml#ae3b8e44b40a9c02ef372081ee2e454a1">IsDilatedDepthwiseConvolutionSupported</a>(<span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a>&amp; input,</div>
<div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;                                                <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a>&amp; <a class="code" href="classarmnn_1_1_i_layer_support.xhtml#a4e25e081529b7e99e5e454d916ed83fb">output</a>,</div>
<div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;                                                <span class="keyword">const</span> <a class="code" href="structarmnn_1_1_depthwise_convolution2d_descriptor.xhtml">DepthwiseConvolution2dDescriptor</a>&amp; <a class="code" href="classarmnn_1_1_i_layer_support.xhtml#a859feaa966620ae0ea88abf5226f2d04">descriptor</a>,</div>
<div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;                                                <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a>&amp; <a class="code" href="classarmnn_1_1_i_layer_support.xhtml#a631f893f44415523924016ed3f54a661">weights</a>,</div>
<div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;                                                <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_optional.xhtml">Optional&lt;TensorInfo&gt;</a>&amp; <a class="code" href="classarmnn_1_1_i_layer_support.xhtml#a71cf13fc7f7aeac054919e0c6dcab52e">biases</a>,</div>
<div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;                                                <a class="code" href="classarmnn_1_1_optional.xhtml">Optional&lt;std::string&amp;&gt;</a> reason = <a class="code" href="structarmnn_1_1_empty_optional.xhtml">EmptyOptional</a>()) <span class="keyword">const override</span>;</div>
<div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160; </div>
<div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;    <span class="keywordtype">bool</span> <a class="code" href="classarmnn_1_1_neon_layer_support.xhtml#aeec02af89681b711706472de7be52871">IsElementwiseUnarySupported</a>(<span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a>&amp; input,</div>
<div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;                               <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a>&amp; <a class="code" href="classarmnn_1_1_i_layer_support.xhtml#a4e25e081529b7e99e5e454d916ed83fb">output</a>,</div>
<div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;                               <span class="keyword">const</span> <a class="code" href="structarmnn_1_1_elementwise_unary_descriptor.xhtml">ElementwiseUnaryDescriptor</a>&amp; <a class="code" href="classarmnn_1_1_i_layer_support.xhtml#a859feaa966620ae0ea88abf5226f2d04">descriptor</a>,</div>
<div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;                               <a class="code" href="classarmnn_1_1_optional.xhtml">Optional&lt;std::string&amp;&gt;</a> <a class="code" href="classarmnn_1_1_i_layer_support.xhtml#ac75f9a02b051716a0cc1cc0818dfe454">reasonIfUnsupported</a> = <a class="code" href="structarmnn_1_1_empty_optional.xhtml">EmptyOptional</a>()) <span class="keyword">const override</span>;</div>
<div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160; </div>
<div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;    <span class="keywordtype">bool</span> <a class="code" href="classarmnn_1_1_neon_layer_support.xhtml#ab747f27ee2acb8409799d6ea1af0dff7">IsFillSupported</a>(<span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a>&amp; input,</div>
<div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;                         <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a>&amp; <a class="code" href="classarmnn_1_1_i_layer_support.xhtml#a4e25e081529b7e99e5e454d916ed83fb">output</a>,</div>
<div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;                         <span class="keyword">const</span> <a class="code" href="structarmnn_1_1_fill_descriptor.xhtml">FillDescriptor</a>&amp; <a class="code" href="classarmnn_1_1_i_layer_support.xhtml#a859feaa966620ae0ea88abf5226f2d04">descriptor</a>,</div>
<div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;                         <a class="code" href="classarmnn_1_1_optional.xhtml">Optional&lt;std::string&amp;&gt;</a> <a class="code" href="classarmnn_1_1_i_layer_support.xhtml#ac75f9a02b051716a0cc1cc0818dfe454">reasonIfUnsupported</a> = <a class="code" href="structarmnn_1_1_empty_optional.xhtml">EmptyOptional</a>()) <span class="keyword">const override</span>;</div>
<div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160; </div>
<div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;    <span class="keywordtype">bool</span> <a class="code" href="classarmnn_1_1_neon_layer_support.xhtml#ae054f879bca9ff680f7e42ae97cc5ed3">IsFloorSupported</a>(<span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a>&amp; input,</div>
<div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;                          <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a>&amp; <a class="code" href="classarmnn_1_1_i_layer_support.xhtml#a4e25e081529b7e99e5e454d916ed83fb">output</a>,</div>
<div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;                          <a class="code" href="classarmnn_1_1_optional.xhtml">Optional&lt;std::string&amp;&gt;</a> <a class="code" href="classarmnn_1_1_i_layer_support.xhtml#ac75f9a02b051716a0cc1cc0818dfe454">reasonIfUnsupported</a> = <a class="code" href="structarmnn_1_1_empty_optional.xhtml">EmptyOptional</a>()) <span class="keyword">const override</span>;</div>
<div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160; </div>
<div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;    <span class="keywordtype">bool</span> <a class="code" href="classarmnn_1_1_neon_layer_support.xhtml#a7249912502bfa13dad25038e8fb9379b">IsFullyConnectedSupported</a>(<span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a>&amp; input,</div>
<div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;                                   <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a>&amp; <a class="code" href="classarmnn_1_1_i_layer_support.xhtml#a4e25e081529b7e99e5e454d916ed83fb">output</a>,</div>
<div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;                                   <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a>&amp; <a class="code" href="classarmnn_1_1_i_layer_support.xhtml#a631f893f44415523924016ed3f54a661">weights</a>,</div>
<div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;                                   <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a>&amp; <a class="code" href="classarmnn_1_1_i_layer_support.xhtml#a71cf13fc7f7aeac054919e0c6dcab52e">biases</a>,</div>
<div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;                                   <span class="keyword">const</span> <a class="code" href="structarmnn_1_1_fully_connected_descriptor.xhtml">FullyConnectedDescriptor</a>&amp; <a class="code" href="classarmnn_1_1_i_layer_support.xhtml#a859feaa966620ae0ea88abf5226f2d04">descriptor</a>,</div>
<div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;                                   <a class="code" href="classarmnn_1_1_optional.xhtml">Optional&lt;std::string&amp;&gt;</a> <a class="code" href="classarmnn_1_1_i_layer_support.xhtml#ac75f9a02b051716a0cc1cc0818dfe454">reasonIfUnsupported</a> = <a class="code" href="structarmnn_1_1_empty_optional.xhtml">EmptyOptional</a>()) <span class="keyword">const override</span>;</div>
<div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160; </div>
<div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;    <span class="keywordtype">bool</span> <a class="code" href="classarmnn_1_1_neon_layer_support.xhtml#ad0bca4c0de78df48fd6e63a3b8239f57">IsGatherNdSupported</a>(<span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a>&amp; input0,</div>
<div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;                             <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a>&amp; <a class="code" href="classarmnn_1_1_i_layer_support.xhtml#ab82416560ced17268c6ba4443a3aac5e">input1</a>,</div>
<div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;                             <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a>&amp; <a class="code" href="classarmnn_1_1_i_layer_support.xhtml#a4e25e081529b7e99e5e454d916ed83fb">output</a>,</div>
<div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160;                             <a class="code" href="classarmnn_1_1_optional.xhtml">Optional&lt;std::string&amp;&gt;</a> <a class="code" href="classarmnn_1_1_i_layer_support.xhtml#ac75f9a02b051716a0cc1cc0818dfe454">reasonIfUnsupported</a>) <span class="keyword">const</span>;</div>
<div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160; </div>
<div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160;    <span class="keywordtype">bool</span> <a class="code" href="classarmnn_1_1_neon_layer_support.xhtml#ae02f78731b0d046f4ed85fcf46c5d17d">IsGatherSupported</a>(<span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a>&amp; input0,</div>
<div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160;                           <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a>&amp; <a class="code" href="classarmnn_1_1_i_layer_support.xhtml#ab82416560ced17268c6ba4443a3aac5e">input1</a>,</div>
<div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160;                           <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a>&amp; <a class="code" href="classarmnn_1_1_i_layer_support.xhtml#a4e25e081529b7e99e5e454d916ed83fb">output</a>,</div>
<div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160;                           <span class="keyword">const</span> <a class="code" href="structarmnn_1_1_gather_descriptor.xhtml">GatherDescriptor</a>&amp; <a class="code" href="classarmnn_1_1_i_layer_support.xhtml#a859feaa966620ae0ea88abf5226f2d04">descriptor</a>,</div>
<div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160;                           <a class="code" href="classarmnn_1_1_optional.xhtml">Optional&lt;std::string&amp;&gt;</a> <a class="code" href="classarmnn_1_1_i_layer_support.xhtml#ac75f9a02b051716a0cc1cc0818dfe454">reasonIfUnsupported</a>) <span class="keyword">const override</span>;</div>
<div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160; </div>
<div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160;    <span class="keywordtype">bool</span> <a class="code" href="classarmnn_1_1_neon_layer_support.xhtml#a5d0dbfd77d3461ded89d3bf6a4eab62c">IsInputSupported</a>(<span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a>&amp; input,</div>
<div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160;                          <a class="code" href="classarmnn_1_1_optional.xhtml">Optional&lt;std::string&amp;&gt;</a> <a class="code" href="classarmnn_1_1_i_layer_support.xhtml#ac75f9a02b051716a0cc1cc0818dfe454">reasonIfUnsupported</a> = <a class="code" href="structarmnn_1_1_empty_optional.xhtml">EmptyOptional</a>()) <span class="keyword">const override</span>;</div>
<div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160; </div>
<div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160;    <span class="keywordtype">bool</span> <a class="code" href="classarmnn_1_1_neon_layer_support.xhtml#a9ee45bf624e40815207a2117f8e02b5d">IsInstanceNormalizationSupported</a>(<span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a>&amp; input,</div>
<div class="line"><a name="l00169"></a><span class="lineno">  169</span>&#160;                                          <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a>&amp; <a class="code" href="classarmnn_1_1_i_layer_support.xhtml#a4e25e081529b7e99e5e454d916ed83fb">output</a>,</div>
<div class="line"><a name="l00170"></a><span class="lineno">  170</span>&#160;                                          <span class="keyword">const</span> <a class="code" href="structarmnn_1_1_instance_normalization_descriptor.xhtml">InstanceNormalizationDescriptor</a>&amp; <a class="code" href="classarmnn_1_1_i_layer_support.xhtml#a859feaa966620ae0ea88abf5226f2d04">descriptor</a>,</div>
<div class="line"><a name="l00171"></a><span class="lineno">  171</span>&#160;                                          <a class="code" href="classarmnn_1_1_optional.xhtml">Optional&lt;std::string&amp;&gt;</a> <a class="code" href="classarmnn_1_1_i_layer_support.xhtml#ac75f9a02b051716a0cc1cc0818dfe454">reasonIfUnsupported</a> = <a class="code" href="structarmnn_1_1_empty_optional.xhtml">EmptyOptional</a>()) <span class="keyword">const override</span>;</div>
<div class="line"><a name="l00172"></a><span class="lineno">  172</span>&#160; </div>
<div class="line"><a name="l00173"></a><span class="lineno">  173</span>&#160;    <span class="keywordtype">bool</span> <a class="code" href="classarmnn_1_1_neon_layer_support.xhtml#ad17197c4dc4dd190610d6d205108255a">IsL2NormalizationSupported</a>(<span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a>&amp; input,</div>
<div class="line"><a name="l00174"></a><span class="lineno">  174</span>&#160;                                    <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a>&amp; <a class="code" href="classarmnn_1_1_i_layer_support.xhtml#a4e25e081529b7e99e5e454d916ed83fb">output</a>,</div>
<div class="line"><a name="l00175"></a><span class="lineno">  175</span>&#160;                                    <span class="keyword">const</span> <a class="code" href="structarmnn_1_1_l2_normalization_descriptor.xhtml">L2NormalizationDescriptor</a>&amp; <a class="code" href="classarmnn_1_1_i_layer_support.xhtml#a859feaa966620ae0ea88abf5226f2d04">descriptor</a>,</div>
<div class="line"><a name="l00176"></a><span class="lineno">  176</span>&#160;                                    <a class="code" href="classarmnn_1_1_optional.xhtml">Optional&lt;std::string&amp;&gt;</a> <a class="code" href="classarmnn_1_1_i_layer_support.xhtml#ac75f9a02b051716a0cc1cc0818dfe454">reasonIfUnsupported</a> = <a class="code" href="structarmnn_1_1_empty_optional.xhtml">EmptyOptional</a>()) <span class="keyword">const override</span>;</div>
<div class="line"><a name="l00177"></a><span class="lineno">  177</span>&#160; </div>
<div class="line"><a name="l00178"></a><span class="lineno">  178</span>&#160;    <span class="keywordtype">bool</span> <a class="code" href="classarmnn_1_1_neon_layer_support.xhtml#acaca6012c89942f00869d80c389d5e8a">IsLogicalBinarySupported</a>(<span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a>&amp; input0,</div>
<div class="line"><a name="l00179"></a><span class="lineno">  179</span>&#160;                                  <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a>&amp; <a class="code" href="classarmnn_1_1_i_layer_support.xhtml#ab82416560ced17268c6ba4443a3aac5e">input1</a>,</div>
<div class="line"><a name="l00180"></a><span class="lineno">  180</span>&#160;                                  <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a>&amp; <a class="code" href="classarmnn_1_1_i_layer_support.xhtml#a4e25e081529b7e99e5e454d916ed83fb">output</a>,</div>
<div class="line"><a name="l00181"></a><span class="lineno">  181</span>&#160;                                  <span class="keyword">const</span> <a class="code" href="structarmnn_1_1_logical_binary_descriptor.xhtml">LogicalBinaryDescriptor</a>&amp; <a class="code" href="classarmnn_1_1_i_layer_support.xhtml#a859feaa966620ae0ea88abf5226f2d04">descriptor</a>,</div>
<div class="line"><a name="l00182"></a><span class="lineno">  182</span>&#160;                                  <a class="code" href="classarmnn_1_1_optional.xhtml">Optional&lt;std::string&amp;&gt;</a> <a class="code" href="classarmnn_1_1_i_layer_support.xhtml#ac75f9a02b051716a0cc1cc0818dfe454">reasonIfUnsupported</a>) <span class="keyword">const override</span>;</div>
<div class="line"><a name="l00183"></a><span class="lineno">  183</span>&#160; </div>
<div class="line"><a name="l00184"></a><span class="lineno">  184</span>&#160;    <span class="keywordtype">bool</span> <a class="code" href="classarmnn_1_1_neon_layer_support.xhtml#ae13d577a85b2b121febb2fe43899fd6c">IsLogSoftmaxSupported</a>(<span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a>&amp; input,</div>
<div class="line"><a name="l00185"></a><span class="lineno">  185</span>&#160;                               <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a>&amp; <a class="code" href="classarmnn_1_1_i_layer_support.xhtml#a4e25e081529b7e99e5e454d916ed83fb">output</a>,</div>
<div class="line"><a name="l00186"></a><span class="lineno">  186</span>&#160;                               <span class="keyword">const</span> <a class="code" href="structarmnn_1_1_softmax_descriptor.xhtml">LogSoftmaxDescriptor</a>&amp; <a class="code" href="classarmnn_1_1_i_layer_support.xhtml#a859feaa966620ae0ea88abf5226f2d04">descriptor</a>,</div>
<div class="line"><a name="l00187"></a><span class="lineno">  187</span>&#160;                               <a class="code" href="classarmnn_1_1_optional.xhtml">Optional&lt;std::string&amp;&gt;</a> <a class="code" href="classarmnn_1_1_i_layer_support.xhtml#ac75f9a02b051716a0cc1cc0818dfe454">reasonIfUnsupported</a> = <a class="code" href="structarmnn_1_1_empty_optional.xhtml">EmptyOptional</a>()) <span class="keyword">const override</span>;</div>
<div class="line"><a name="l00188"></a><span class="lineno">  188</span>&#160; </div>
<div class="line"><a name="l00189"></a><span class="lineno">  189</span>&#160;    <span class="keywordtype">bool</span> <a class="code" href="classarmnn_1_1_neon_layer_support.xhtml#a533ad0fa8ff06bef939f4260a8183350">IsLstmSupported</a>(<span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a>&amp; input,</div>
<div class="line"><a name="l00190"></a><span class="lineno">  190</span>&#160;                         <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a>&amp; <a class="code" href="classarmnn_1_1_i_layer_support.xhtml#a5a01de4e3851a25f2df77897fb8f7083">outputStateIn</a>,</div>
<div class="line"><a name="l00191"></a><span class="lineno">  191</span>&#160;                         <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a>&amp; <a class="code" href="classarmnn_1_1_i_layer_support.xhtml#aec04a02758804219fb461623464a8e96">cellStateIn</a>,</div>
<div class="line"><a name="l00192"></a><span class="lineno">  192</span>&#160;                         <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a>&amp; <a class="code" href="classarmnn_1_1_i_layer_support.xhtml#a4f6f59c4e91c7c37d9a119d615093ed3">scratchBuffer</a>,</div>
<div class="line"><a name="l00193"></a><span class="lineno">  193</span>&#160;                         <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a>&amp; <a class="code" href="classarmnn_1_1_i_layer_support.xhtml#a44eb2a514bddb31fe20f9e4f04159c9f">outputStateOut</a>,</div>
<div class="line"><a name="l00194"></a><span class="lineno">  194</span>&#160;                         <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a>&amp; <a class="code" href="classarmnn_1_1_i_layer_support.xhtml#ae1ee2d524d4252bffc0ed67e75882952">cellStateOut</a>,</div>
<div class="line"><a name="l00195"></a><span class="lineno">  195</span>&#160;                         <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a>&amp; <a class="code" href="classarmnn_1_1_i_layer_support.xhtml#a4e25e081529b7e99e5e454d916ed83fb">output</a>,</div>
<div class="line"><a name="l00196"></a><span class="lineno">  196</span>&#160;                         <span class="keyword">const</span> <a class="code" href="structarmnn_1_1_lstm_descriptor.xhtml">LstmDescriptor</a>&amp; <a class="code" href="classarmnn_1_1_i_layer_support.xhtml#a859feaa966620ae0ea88abf5226f2d04">descriptor</a>,</div>
<div class="line"><a name="l00197"></a><span class="lineno">  197</span>&#160;                         <span class="keyword">const</span> <a class="code" href="structarmnn_1_1_lstm_input_params_info.xhtml">LstmInputParamsInfo</a>&amp; <a class="code" href="classarmnn_1_1_i_layer_support.xhtml#aca7a974c8803242968a8d6540275264a">paramsInfo</a>,</div>
<div class="line"><a name="l00198"></a><span class="lineno">  198</span>&#160;                         <a class="code" href="classarmnn_1_1_optional.xhtml">Optional&lt;std::string&amp;&gt;</a> <a class="code" href="classarmnn_1_1_i_layer_support.xhtml#ac75f9a02b051716a0cc1cc0818dfe454">reasonIfUnsupported</a> = <a class="code" href="structarmnn_1_1_empty_optional.xhtml">EmptyOptional</a>()) <span class="keyword">const override</span>;</div>
<div class="line"><a name="l00199"></a><span class="lineno">  199</span>&#160; </div>
<div class="line"><a name="l00200"></a><span class="lineno">  200</span>&#160;    <span class="keywordtype">bool</span> <a class="code" href="classarmnn_1_1_neon_layer_support.xhtml#ac92df5c79bae4ccdc68d9d2045fa2110">IsMaximumSupported</a>(<span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a>&amp; input0,</div>
<div class="line"><a name="l00201"></a><span class="lineno">  201</span>&#160;                            <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a>&amp; <a class="code" href="classarmnn_1_1_i_layer_support.xhtml#ab82416560ced17268c6ba4443a3aac5e">input1</a>,</div>
<div class="line"><a name="l00202"></a><span class="lineno">  202</span>&#160;                            <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a>&amp; <a class="code" href="classarmnn_1_1_i_layer_support.xhtml#a4e25e081529b7e99e5e454d916ed83fb">output</a>,</div>
<div class="line"><a name="l00203"></a><span class="lineno">  203</span>&#160;                            <a class="code" href="classarmnn_1_1_optional.xhtml">Optional&lt;std::string&amp;&gt;</a> <a class="code" href="classarmnn_1_1_i_layer_support.xhtml#ac75f9a02b051716a0cc1cc0818dfe454">reasonIfUnsupported</a> = <a class="code" href="structarmnn_1_1_empty_optional.xhtml">EmptyOptional</a>()) <span class="keyword">const override</span>;</div>
<div class="line"><a name="l00204"></a><span class="lineno">  204</span>&#160; </div>
<div class="line"><a name="l00205"></a><span class="lineno">  205</span>&#160;    <span class="keywordtype">bool</span> <a class="code" href="classarmnn_1_1_neon_layer_support.xhtml#ad9869f2a0cbe051fcc87fb1405d4091d">IsMeanSupported</a>(<span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a>&amp; input,</div>
<div class="line"><a name="l00206"></a><span class="lineno">  206</span>&#160;                         <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a>&amp; <a class="code" href="classarmnn_1_1_i_layer_support.xhtml#a4e25e081529b7e99e5e454d916ed83fb">output</a>,</div>
<div class="line"><a name="l00207"></a><span class="lineno">  207</span>&#160;                         <span class="keyword">const</span> <a class="code" href="structarmnn_1_1_mean_descriptor.xhtml">MeanDescriptor</a>&amp; <a class="code" href="classarmnn_1_1_i_layer_support.xhtml#a859feaa966620ae0ea88abf5226f2d04">descriptor</a>,</div>
<div class="line"><a name="l00208"></a><span class="lineno">  208</span>&#160;                         <a class="code" href="classarmnn_1_1_optional.xhtml">Optional&lt;std::string&amp;&gt;</a> <a class="code" href="classarmnn_1_1_i_layer_support.xhtml#ac75f9a02b051716a0cc1cc0818dfe454">reasonIfUnsupported</a> = <a class="code" href="structarmnn_1_1_empty_optional.xhtml">EmptyOptional</a>()) <span class="keyword">const override</span>;</div>
<div class="line"><a name="l00209"></a><span class="lineno">  209</span>&#160; </div>
<div class="line"><a name="l00210"></a><span class="lineno">  210</span>&#160;    <span class="keywordtype">bool</span> <a class="code" href="classarmnn_1_1_neon_layer_support.xhtml#a4eb9b602052470f8eadcfa7a63b17d54">IsMinimumSupported</a>(<span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a>&amp; input0,</div>
<div class="line"><a name="l00211"></a><span class="lineno">  211</span>&#160;                            <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a>&amp; <a class="code" href="classarmnn_1_1_i_layer_support.xhtml#ab82416560ced17268c6ba4443a3aac5e">input1</a>,</div>
<div class="line"><a name="l00212"></a><span class="lineno">  212</span>&#160;                            <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a>&amp; <a class="code" href="classarmnn_1_1_i_layer_support.xhtml#a4e25e081529b7e99e5e454d916ed83fb">output</a>,</div>
<div class="line"><a name="l00213"></a><span class="lineno">  213</span>&#160;                            <a class="code" href="classarmnn_1_1_optional.xhtml">Optional&lt;std::string&amp;&gt;</a> <a class="code" href="classarmnn_1_1_i_layer_support.xhtml#ac75f9a02b051716a0cc1cc0818dfe454">reasonIfUnsupported</a> = <a class="code" href="structarmnn_1_1_empty_optional.xhtml">EmptyOptional</a>()) <span class="keyword">const override</span>;</div>
<div class="line"><a name="l00214"></a><span class="lineno">  214</span>&#160; </div>
<div class="line"><a name="l00215"></a><span class="lineno">  215</span>&#160;    <span class="keywordtype">bool</span> <a class="code" href="classarmnn_1_1_neon_layer_support.xhtml#ab5960d08e30fb9542125688580c5f623">IsMultiplicationSupported</a>(<span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a>&amp; input0,</div>
<div class="line"><a name="l00216"></a><span class="lineno">  216</span>&#160;                                   <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a>&amp; <a class="code" href="classarmnn_1_1_i_layer_support.xhtml#ab82416560ced17268c6ba4443a3aac5e">input1</a>,</div>
<div class="line"><a name="l00217"></a><span class="lineno">  217</span>&#160;                                   <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a>&amp; <a class="code" href="classarmnn_1_1_i_layer_support.xhtml#a4e25e081529b7e99e5e454d916ed83fb">output</a>,</div>
<div class="line"><a name="l00218"></a><span class="lineno">  218</span>&#160;                                   <a class="code" href="classarmnn_1_1_optional.xhtml">Optional&lt;std::string&amp;&gt;</a> <a class="code" href="classarmnn_1_1_i_layer_support.xhtml#ac75f9a02b051716a0cc1cc0818dfe454">reasonIfUnsupported</a> = <a class="code" href="structarmnn_1_1_empty_optional.xhtml">EmptyOptional</a>()) <span class="keyword">const override</span>;</div>
<div class="line"><a name="l00219"></a><span class="lineno">  219</span>&#160; </div>
<div class="line"><a name="l00220"></a><span class="lineno">  220</span>&#160;    <span class="keywordtype">bool</span> <a class="code" href="classarmnn_1_1_neon_layer_support.xhtml#ad4217d27bcb41e14cd023552004b21a3">IsDivisionSupported</a>(<span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a>&amp; input0,</div>
<div class="line"><a name="l00221"></a><span class="lineno">  221</span>&#160;                             <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a>&amp; <a class="code" href="classarmnn_1_1_i_layer_support.xhtml#ab82416560ced17268c6ba4443a3aac5e">input1</a>,</div>
<div class="line"><a name="l00222"></a><span class="lineno">  222</span>&#160;                             <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a>&amp; <a class="code" href="classarmnn_1_1_i_layer_support.xhtml#a4e25e081529b7e99e5e454d916ed83fb">output</a>,</div>
<div class="line"><a name="l00223"></a><span class="lineno">  223</span>&#160;                             <a class="code" href="classarmnn_1_1_optional.xhtml">Optional&lt;std::string&amp;&gt;</a> <a class="code" href="classarmnn_1_1_i_layer_support.xhtml#ac75f9a02b051716a0cc1cc0818dfe454">reasonIfUnsupported</a> = <a class="code" href="structarmnn_1_1_empty_optional.xhtml">EmptyOptional</a>()) <span class="keyword">const override</span>;</div>
<div class="line"><a name="l00224"></a><span class="lineno">  224</span>&#160; </div>
<div class="line"><a name="l00225"></a><span class="lineno">  225</span>&#160;    <span class="keywordtype">bool</span> <a class="code" href="classarmnn_1_1_neon_layer_support.xhtml#aedd6e4de83db27813fad327c29402033">IsNormalizationSupported</a>(<span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a>&amp; input,</div>
<div class="line"><a name="l00226"></a><span class="lineno">  226</span>&#160;                                  <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a>&amp; <a class="code" href="classarmnn_1_1_i_layer_support.xhtml#a4e25e081529b7e99e5e454d916ed83fb">output</a>,</div>
<div class="line"><a name="l00227"></a><span class="lineno">  227</span>&#160;                                  <span class="keyword">const</span> <a class="code" href="structarmnn_1_1_normalization_descriptor.xhtml">NormalizationDescriptor</a>&amp; <a class="code" href="classarmnn_1_1_i_layer_support.xhtml#a859feaa966620ae0ea88abf5226f2d04">descriptor</a>,</div>
<div class="line"><a name="l00228"></a><span class="lineno">  228</span>&#160;                                  <a class="code" href="classarmnn_1_1_optional.xhtml">Optional&lt;std::string&amp;&gt;</a> <a class="code" href="classarmnn_1_1_i_layer_support.xhtml#ac75f9a02b051716a0cc1cc0818dfe454">reasonIfUnsupported</a> = <a class="code" href="structarmnn_1_1_empty_optional.xhtml">EmptyOptional</a>()) <span class="keyword">const override</span>;</div>
<div class="line"><a name="l00229"></a><span class="lineno">  229</span>&#160; </div>
<div class="line"><a name="l00230"></a><span class="lineno">  230</span>&#160;    <span class="keywordtype">bool</span> <a class="code" href="classarmnn_1_1_neon_layer_support.xhtml#ac2078e9d66b086cf1225f0610b05a520">IsOutputSupported</a>(<span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a>&amp; <a class="code" href="classarmnn_1_1_i_layer_support.xhtml#a4e25e081529b7e99e5e454d916ed83fb">output</a>,</div>
<div class="line"><a name="l00231"></a><span class="lineno">  231</span>&#160;                           <a class="code" href="classarmnn_1_1_optional.xhtml">Optional&lt;std::string&amp;&gt;</a> <a class="code" href="classarmnn_1_1_i_layer_support.xhtml#ac75f9a02b051716a0cc1cc0818dfe454">reasonIfUnsupported</a> = <a class="code" href="structarmnn_1_1_empty_optional.xhtml">EmptyOptional</a>()) <span class="keyword">const override</span>;</div>
<div class="line"><a name="l00232"></a><span class="lineno">  232</span>&#160; </div>
<div class="line"><a name="l00233"></a><span class="lineno">  233</span>&#160;    <span class="keywordtype">bool</span> <a class="code" href="classarmnn_1_1_neon_layer_support.xhtml#aef4e4cfc054c2fd0e9bd0947909ebe83">IsPadSupported</a>(<span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a>&amp; input,</div>
<div class="line"><a name="l00234"></a><span class="lineno">  234</span>&#160;                        <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a>&amp; <a class="code" href="classarmnn_1_1_i_layer_support.xhtml#a4e25e081529b7e99e5e454d916ed83fb">output</a>,</div>
<div class="line"><a name="l00235"></a><span class="lineno">  235</span>&#160;                        <span class="keyword">const</span> <a class="code" href="structarmnn_1_1_pad_descriptor.xhtml">PadDescriptor</a>&amp; <a class="code" href="classarmnn_1_1_i_layer_support.xhtml#a859feaa966620ae0ea88abf5226f2d04">descriptor</a>,</div>
<div class="line"><a name="l00236"></a><span class="lineno">  236</span>&#160;                        <a class="code" href="classarmnn_1_1_optional.xhtml">Optional&lt;std::string&amp;&gt;</a> <a class="code" href="classarmnn_1_1_i_layer_support.xhtml#ac75f9a02b051716a0cc1cc0818dfe454">reasonIfUnsupported</a> = <a class="code" href="structarmnn_1_1_empty_optional.xhtml">EmptyOptional</a>()) <span class="keyword">const override</span>;</div>
<div class="line"><a name="l00237"></a><span class="lineno">  237</span>&#160; </div>
<div class="line"><a name="l00238"></a><span class="lineno">  238</span>&#160;    <span class="keywordtype">bool</span> <a class="code" href="classarmnn_1_1_neon_layer_support.xhtml#a336cc17b9c2cd4e7f667c7fcf5c9377e">IsPermuteSupported</a>(<span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a>&amp; input,</div>
<div class="line"><a name="l00239"></a><span class="lineno">  239</span>&#160;                            <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a>&amp; <a class="code" href="classarmnn_1_1_i_layer_support.xhtml#a4e25e081529b7e99e5e454d916ed83fb">output</a>,</div>
<div class="line"><a name="l00240"></a><span class="lineno">  240</span>&#160;                            <span class="keyword">const</span> <a class="code" href="structarmnn_1_1_permute_descriptor.xhtml">PermuteDescriptor</a>&amp; <a class="code" href="classarmnn_1_1_i_layer_support.xhtml#a859feaa966620ae0ea88abf5226f2d04">descriptor</a>,</div>
<div class="line"><a name="l00241"></a><span class="lineno">  241</span>&#160;                            <a class="code" href="classarmnn_1_1_optional.xhtml">Optional&lt;std::string&amp;&gt;</a> <a class="code" href="classarmnn_1_1_i_layer_support.xhtml#ac75f9a02b051716a0cc1cc0818dfe454">reasonIfUnsupported</a> = <a class="code" href="structarmnn_1_1_empty_optional.xhtml">EmptyOptional</a>()) <span class="keyword">const override</span>;</div>
<div class="line"><a name="l00242"></a><span class="lineno">  242</span>&#160; </div>
<div class="line"><a name="l00243"></a><span class="lineno">  243</span>&#160;    <span class="keywordtype">bool</span> <a class="code" href="classarmnn_1_1_neon_layer_support.xhtml#ad6262dc3169d8e809c272b31b25aaa6a">IsPooling2dSupported</a>(<span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a>&amp; input,</div>
<div class="line"><a name="l00244"></a><span class="lineno">  244</span>&#160;                              <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a>&amp; <a class="code" href="classarmnn_1_1_i_layer_support.xhtml#a4e25e081529b7e99e5e454d916ed83fb">output</a>,</div>
<div class="line"><a name="l00245"></a><span class="lineno">  245</span>&#160;                              <span class="keyword">const</span> <a class="code" href="structarmnn_1_1_pooling2d_descriptor.xhtml">Pooling2dDescriptor</a>&amp; <a class="code" href="classarmnn_1_1_i_layer_support.xhtml#a859feaa966620ae0ea88abf5226f2d04">descriptor</a>,</div>
<div class="line"><a name="l00246"></a><span class="lineno">  246</span>&#160;                              <a class="code" href="classarmnn_1_1_optional.xhtml">Optional&lt;std::string&amp;&gt;</a> <a class="code" href="classarmnn_1_1_i_layer_support.xhtml#ac75f9a02b051716a0cc1cc0818dfe454">reasonIfUnsupported</a> = <a class="code" href="structarmnn_1_1_empty_optional.xhtml">EmptyOptional</a>()) <span class="keyword">const override</span>;</div>
<div class="line"><a name="l00247"></a><span class="lineno">  247</span>&#160;    <span class="keywordtype">bool</span> <a class="code" href="classarmnn_1_1_neon_layer_support.xhtml#a70c3043f5b6dd3091646fb2c1648a5f5">IsPooling3dSupported</a>(<span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a>&amp; input,</div>
<div class="line"><a name="l00248"></a><span class="lineno">  248</span>&#160;                              <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a>&amp; <a class="code" href="classarmnn_1_1_i_layer_support.xhtml#a4e25e081529b7e99e5e454d916ed83fb">output</a>,</div>
<div class="line"><a name="l00249"></a><span class="lineno">  249</span>&#160;                              <span class="keyword">const</span> <a class="code" href="structarmnn_1_1_pooling3d_descriptor.xhtml">Pooling3dDescriptor</a>&amp; <a class="code" href="classarmnn_1_1_i_layer_support.xhtml#a859feaa966620ae0ea88abf5226f2d04">descriptor</a>,</div>
<div class="line"><a name="l00250"></a><span class="lineno">  250</span>&#160;                              <a class="code" href="classarmnn_1_1_optional.xhtml">Optional&lt;std::string&amp;&gt;</a> <a class="code" href="classarmnn_1_1_i_layer_support.xhtml#ac75f9a02b051716a0cc1cc0818dfe454">reasonIfUnsupported</a> = <a class="code" href="structarmnn_1_1_empty_optional.xhtml">EmptyOptional</a>()) <span class="keyword">const override</span>;</div>
<div class="line"><a name="l00251"></a><span class="lineno">  251</span>&#160;    <span class="keywordtype">bool</span> <a class="code" href="classarmnn_1_1_neon_layer_support.xhtml#abdf847462abb9af6a8a932589a0046bb">IsPreluSupported</a>(<span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a>&amp; input,</div>
<div class="line"><a name="l00252"></a><span class="lineno">  252</span>&#160;                          <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a>&amp; <a class="code" href="classarmnn_1_1_i_layer_support.xhtml#a218e2ebb5babb8323688906b8997eafb">alpha</a>,</div>
<div class="line"><a name="l00253"></a><span class="lineno">  253</span>&#160;                          <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a>&amp; <a class="code" href="classarmnn_1_1_i_layer_support.xhtml#a4e25e081529b7e99e5e454d916ed83fb">output</a>,</div>
<div class="line"><a name="l00254"></a><span class="lineno">  254</span>&#160;                          <a class="code" href="classarmnn_1_1_optional.xhtml">Optional&lt;std::string&amp;&gt;</a> <a class="code" href="classarmnn_1_1_i_layer_support.xhtml#ac75f9a02b051716a0cc1cc0818dfe454">reasonIfUnsupported</a> = <a class="code" href="structarmnn_1_1_empty_optional.xhtml">EmptyOptional</a>()) <span class="keyword">const override</span>;</div>
<div class="line"><a name="l00255"></a><span class="lineno">  255</span>&#160; </div>
<div class="line"><a name="l00256"></a><span class="lineno">  256</span>&#160;    <span class="keywordtype">bool</span> <a class="code" href="classarmnn_1_1_neon_layer_support.xhtml#a052a3d7389be3a0993c9f9a508fa435e">IsQLstmSupported</a>(<span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a>&amp; input,</div>
<div class="line"><a name="l00257"></a><span class="lineno">  257</span>&#160;                          <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a>&amp; <a class="code" href="classarmnn_1_1_i_layer_support.xhtml#a5b09834cc88bb4156e291c37bd2434ff">previousOutputIn</a>,</div>
<div class="line"><a name="l00258"></a><span class="lineno">  258</span>&#160;                          <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a>&amp; <a class="code" href="classarmnn_1_1_i_layer_support.xhtml#ad5e0e3fb8a59107ac3366028a057db12">previousCellStateIn</a>,</div>
<div class="line"><a name="l00259"></a><span class="lineno">  259</span>&#160;                          <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a>&amp; <a class="code" href="classarmnn_1_1_i_layer_support.xhtml#a44eb2a514bddb31fe20f9e4f04159c9f">outputStateOut</a>,</div>
<div class="line"><a name="l00260"></a><span class="lineno">  260</span>&#160;                          <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a>&amp; <a class="code" href="classarmnn_1_1_i_layer_support.xhtml#ae1ee2d524d4252bffc0ed67e75882952">cellStateOut</a>,</div>
<div class="line"><a name="l00261"></a><span class="lineno">  261</span>&#160;                          <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a>&amp; <a class="code" href="classarmnn_1_1_i_layer_support.xhtml#a4e25e081529b7e99e5e454d916ed83fb">output</a>,</div>
<div class="line"><a name="l00262"></a><span class="lineno">  262</span>&#160;                          <span class="keyword">const</span> <a class="code" href="structarmnn_1_1_q_lstm_descriptor.xhtml">QLstmDescriptor</a>&amp; <a class="code" href="classarmnn_1_1_i_layer_support.xhtml#a859feaa966620ae0ea88abf5226f2d04">descriptor</a>,</div>
<div class="line"><a name="l00263"></a><span class="lineno">  263</span>&#160;                          <span class="keyword">const</span> <a class="code" href="structarmnn_1_1_lstm_input_params_info.xhtml">LstmInputParamsInfo</a>&amp; <a class="code" href="classarmnn_1_1_i_layer_support.xhtml#aca7a974c8803242968a8d6540275264a">paramsInfo</a>,</div>
<div class="line"><a name="l00264"></a><span class="lineno">  264</span>&#160;                          <a class="code" href="classarmnn_1_1_optional.xhtml">Optional&lt;std::string&amp;&gt;</a> <a class="code" href="classarmnn_1_1_i_layer_support.xhtml#ac75f9a02b051716a0cc1cc0818dfe454">reasonIfUnsupported</a> = <a class="code" href="structarmnn_1_1_empty_optional.xhtml">EmptyOptional</a>()) <span class="keyword">const override</span>;</div>
<div class="line"><a name="l00265"></a><span class="lineno">  265</span>&#160; </div>
<div class="line"><a name="l00266"></a><span class="lineno">  266</span>&#160;    <span class="keywordtype">bool</span> <a class="code" href="classarmnn_1_1_neon_layer_support.xhtml#ab4474f6170d9abd571f612b2dae34820">IsQuantizeSupported</a>(<span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a>&amp; input,</div>
<div class="line"><a name="l00267"></a><span class="lineno">  267</span>&#160;                             <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a>&amp; <a class="code" href="classarmnn_1_1_i_layer_support.xhtml#a4e25e081529b7e99e5e454d916ed83fb">output</a>,</div>
<div class="line"><a name="l00268"></a><span class="lineno">  268</span>&#160;                             <a class="code" href="classarmnn_1_1_optional.xhtml">Optional&lt;std::string&amp;&gt;</a> <a class="code" href="classarmnn_1_1_i_layer_support.xhtml#ac75f9a02b051716a0cc1cc0818dfe454">reasonIfUnsupported</a> = <a class="code" href="structarmnn_1_1_empty_optional.xhtml">EmptyOptional</a>()) <span class="keyword">const override</span>;</div>
<div class="line"><a name="l00269"></a><span class="lineno">  269</span>&#160; </div>
<div class="line"><a name="l00270"></a><span class="lineno">  270</span>&#160;    <span class="keywordtype">bool</span> <a class="code" href="classarmnn_1_1_neon_layer_support.xhtml#a7574a8a0dbde3c5058b24b43c4c88125">IsQuantizedLstmSupported</a>(<span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a>&amp; input,</div>
<div class="line"><a name="l00271"></a><span class="lineno">  271</span>&#160;                                  <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a>&amp; <a class="code" href="classarmnn_1_1_i_layer_support.xhtml#aec04a02758804219fb461623464a8e96">cellStateIn</a>,</div>
<div class="line"><a name="l00272"></a><span class="lineno">  272</span>&#160;                                  <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a>&amp; <a class="code" href="classarmnn_1_1_i_layer_support.xhtml#a5a01de4e3851a25f2df77897fb8f7083">outputStateIn</a>,</div>
<div class="line"><a name="l00273"></a><span class="lineno">  273</span>&#160;                                  <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a>&amp; <a class="code" href="classarmnn_1_1_i_layer_support.xhtml#ae1ee2d524d4252bffc0ed67e75882952">cellStateOut</a>,</div>
<div class="line"><a name="l00274"></a><span class="lineno">  274</span>&#160;                                  <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a>&amp; <a class="code" href="classarmnn_1_1_i_layer_support.xhtml#a44eb2a514bddb31fe20f9e4f04159c9f">outputStateOut</a>,</div>
<div class="line"><a name="l00275"></a><span class="lineno">  275</span>&#160;                                  <span class="keyword">const</span> <a class="code" href="structarmnn_1_1_quantized_lstm_input_params_info.xhtml">QuantizedLstmInputParamsInfo</a>&amp; <a class="code" href="classarmnn_1_1_i_layer_support.xhtml#aca7a974c8803242968a8d6540275264a">paramsInfo</a>,</div>
<div class="line"><a name="l00276"></a><span class="lineno">  276</span>&#160;                                  <a class="code" href="classarmnn_1_1_optional.xhtml">Optional&lt;std::string&amp;&gt;</a> <a class="code" href="classarmnn_1_1_i_layer_support.xhtml#ac75f9a02b051716a0cc1cc0818dfe454">reasonIfUnsupported</a> = <a class="code" href="structarmnn_1_1_empty_optional.xhtml">EmptyOptional</a>()) <span class="keyword">const override</span>;</div>
<div class="line"><a name="l00277"></a><span class="lineno">  277</span>&#160; </div>
<div class="line"><a name="l00278"></a><span class="lineno">  278</span>&#160;    <span class="keywordtype">bool</span> <a class="code" href="classarmnn_1_1_neon_layer_support.xhtml#a9fe9a6e2b79cc5c97e582f1fe0e1f514">IsReduceSupported</a>(<span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a>&amp; input,</div>
<div class="line"><a name="l00279"></a><span class="lineno">  279</span>&#160;                           <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a>&amp; <a class="code" href="classarmnn_1_1_i_layer_support.xhtml#a4e25e081529b7e99e5e454d916ed83fb">output</a>,</div>
<div class="line"><a name="l00280"></a><span class="lineno">  280</span>&#160;                           <span class="keyword">const</span> <a class="code" href="structarmnn_1_1_reduce_descriptor.xhtml">ReduceDescriptor</a>&amp; <a class="code" href="classarmnn_1_1_i_layer_support.xhtml#a859feaa966620ae0ea88abf5226f2d04">descriptor</a>,</div>
<div class="line"><a name="l00281"></a><span class="lineno">  281</span>&#160;                           <a class="code" href="classarmnn_1_1_optional.xhtml">Optional&lt;std::string&amp;&gt;</a> <a class="code" href="classarmnn_1_1_i_layer_support.xhtml#ac75f9a02b051716a0cc1cc0818dfe454">reasonIfUnsupported</a> = <a class="code" href="structarmnn_1_1_empty_optional.xhtml">EmptyOptional</a>()) <span class="keyword">const override</span>;</div>
<div class="line"><a name="l00282"></a><span class="lineno">  282</span>&#160; </div>
<div class="line"><a name="l00283"></a><span class="lineno">  283</span>&#160;    <span class="keywordtype">bool</span> <a class="code" href="classarmnn_1_1_neon_layer_support.xhtml#ab226977f41ce8cc1ee82c314949bb184">IsReshapeSupported</a>(<span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a>&amp; input,</div>
<div class="line"><a name="l00284"></a><span class="lineno">  284</span>&#160;                            <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a>&amp; <a class="code" href="classarmnn_1_1_i_layer_support.xhtml#a4e25e081529b7e99e5e454d916ed83fb">output</a>,</div>
<div class="line"><a name="l00285"></a><span class="lineno">  285</span>&#160;                            <span class="keyword">const</span> <a class="code" href="structarmnn_1_1_reshape_descriptor.xhtml">ReshapeDescriptor</a>&amp; <a class="code" href="classarmnn_1_1_i_layer_support.xhtml#a859feaa966620ae0ea88abf5226f2d04">descriptor</a>,</div>
<div class="line"><a name="l00286"></a><span class="lineno">  286</span>&#160;                            <a class="code" href="classarmnn_1_1_optional.xhtml">Optional&lt;std::string&amp;&gt;</a> <a class="code" href="classarmnn_1_1_i_layer_support.xhtml#ac75f9a02b051716a0cc1cc0818dfe454">reasonIfUnsupported</a> = <a class="code" href="structarmnn_1_1_empty_optional.xhtml">EmptyOptional</a>()) <span class="keyword">const override</span>;</div>
<div class="line"><a name="l00287"></a><span class="lineno">  287</span>&#160; </div>
<div class="line"><a name="l00288"></a><span class="lineno">  288</span>&#160;    <span class="keywordtype">bool</span> <a class="code" href="classarmnn_1_1_neon_layer_support.xhtml#a629a1df03491e1bdc19dbd415fd2ad74">IsResizeSupported</a>(<span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a>&amp; input,</div>
<div class="line"><a name="l00289"></a><span class="lineno">  289</span>&#160;                           <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a>&amp; <a class="code" href="classarmnn_1_1_i_layer_support.xhtml#a4e25e081529b7e99e5e454d916ed83fb">output</a>,</div>
<div class="line"><a name="l00290"></a><span class="lineno">  290</span>&#160;                           <span class="keyword">const</span> <a class="code" href="structarmnn_1_1_resize_descriptor.xhtml">ResizeDescriptor</a>&amp; <a class="code" href="classarmnn_1_1_i_layer_support.xhtml#a859feaa966620ae0ea88abf5226f2d04">descriptor</a>,</div>
<div class="line"><a name="l00291"></a><span class="lineno">  291</span>&#160;                           <a class="code" href="classarmnn_1_1_optional.xhtml">Optional&lt;std::string&amp;&gt;</a> <a class="code" href="classarmnn_1_1_i_layer_support.xhtml#ac75f9a02b051716a0cc1cc0818dfe454">reasonIfUnsupported</a> = <a class="code" href="structarmnn_1_1_empty_optional.xhtml">EmptyOptional</a>()) <span class="keyword">const override</span>;</div>
<div class="line"><a name="l00292"></a><span class="lineno">  292</span>&#160; </div>
<div class="line"><a name="l00293"></a><span class="lineno">  293</span>&#160;    <span class="keywordtype">bool</span> <a class="code" href="classarmnn_1_1_neon_layer_support.xhtml#a227dac81ac83d16f474881c2252d14cc">IsSliceSupported</a>(<span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a>&amp; input,</div>
<div class="line"><a name="l00294"></a><span class="lineno">  294</span>&#160;                          <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a>&amp; <a class="code" href="classarmnn_1_1_i_layer_support.xhtml#a4e25e081529b7e99e5e454d916ed83fb">output</a>,</div>
<div class="line"><a name="l00295"></a><span class="lineno">  295</span>&#160;                          <span class="keyword">const</span> <a class="code" href="structarmnn_1_1_slice_descriptor.xhtml">SliceDescriptor</a>&amp; <a class="code" href="classarmnn_1_1_i_layer_support.xhtml#a859feaa966620ae0ea88abf5226f2d04">descriptor</a>,</div>
<div class="line"><a name="l00296"></a><span class="lineno">  296</span>&#160;                          <a class="code" href="classarmnn_1_1_optional.xhtml">Optional&lt;std::string&amp;&gt;</a> <a class="code" href="classarmnn_1_1_i_layer_support.xhtml#ac75f9a02b051716a0cc1cc0818dfe454">reasonIfUnsupported</a> = <a class="code" href="structarmnn_1_1_empty_optional.xhtml">EmptyOptional</a>()) <span class="keyword">const override</span>;</div>
<div class="line"><a name="l00297"></a><span class="lineno">  297</span>&#160; </div>
<div class="line"><a name="l00298"></a><span class="lineno">  298</span>&#160;    <span class="keywordtype">bool</span> <a class="code" href="classarmnn_1_1_neon_layer_support.xhtml#a3115a72a9cca31fb27b40da54a435dfa">IsSoftmaxSupported</a>(<span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a>&amp; input,</div>
<div class="line"><a name="l00299"></a><span class="lineno">  299</span>&#160;                            <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a>&amp; <a class="code" href="classarmnn_1_1_i_layer_support.xhtml#a4e25e081529b7e99e5e454d916ed83fb">output</a>,</div>
<div class="line"><a name="l00300"></a><span class="lineno">  300</span>&#160;                            <span class="keyword">const</span> <a class="code" href="structarmnn_1_1_softmax_descriptor.xhtml">SoftmaxDescriptor</a>&amp; <a class="code" href="classarmnn_1_1_i_layer_support.xhtml#a859feaa966620ae0ea88abf5226f2d04">descriptor</a>,</div>
<div class="line"><a name="l00301"></a><span class="lineno">  301</span>&#160;                            <a class="code" href="classarmnn_1_1_optional.xhtml">Optional&lt;std::string&amp;&gt;</a> <a class="code" href="classarmnn_1_1_i_layer_support.xhtml#ac75f9a02b051716a0cc1cc0818dfe454">reasonIfUnsupported</a> = <a class="code" href="structarmnn_1_1_empty_optional.xhtml">EmptyOptional</a>()) <span class="keyword">const override</span>;</div>
<div class="line"><a name="l00302"></a><span class="lineno">  302</span>&#160; </div>
<div class="line"><a name="l00303"></a><span class="lineno">  303</span>&#160;    <span class="keywordtype">bool</span> <a class="code" href="classarmnn_1_1_neon_layer_support.xhtml#aa421c466a09cc8048aa0b700b7e300d8">IsSpaceToBatchNdSupported</a>(<span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a>&amp; input,</div>
<div class="line"><a name="l00304"></a><span class="lineno">  304</span>&#160;                                   <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a>&amp; <a class="code" href="classarmnn_1_1_i_layer_support.xhtml#a4e25e081529b7e99e5e454d916ed83fb">output</a>,</div>
<div class="line"><a name="l00305"></a><span class="lineno">  305</span>&#160;                                   <span class="keyword">const</span> <a class="code" href="structarmnn_1_1_space_to_batch_nd_descriptor.xhtml">SpaceToBatchNdDescriptor</a>&amp; <a class="code" href="classarmnn_1_1_i_layer_support.xhtml#a859feaa966620ae0ea88abf5226f2d04">descriptor</a>,</div>
<div class="line"><a name="l00306"></a><span class="lineno">  306</span>&#160;                                   <a class="code" href="classarmnn_1_1_optional.xhtml">Optional&lt;std::string&amp;&gt;</a> <a class="code" href="classarmnn_1_1_i_layer_support.xhtml#ac75f9a02b051716a0cc1cc0818dfe454">reasonIfUnsupported</a> = <a class="code" href="structarmnn_1_1_empty_optional.xhtml">EmptyOptional</a>()) <span class="keyword">const override</span>;</div>
<div class="line"><a name="l00307"></a><span class="lineno">  307</span>&#160; </div>
<div class="line"><a name="l00308"></a><span class="lineno">  308</span>&#160;    <span class="keywordtype">bool</span> <a class="code" href="classarmnn_1_1_neon_layer_support.xhtml#a78c8c01a898f4bdcebddeda9f3d39a51">IsSpaceToDepthSupported</a>(<span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a>&amp; input,</div>
<div class="line"><a name="l00309"></a><span class="lineno">  309</span>&#160;                                 <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a>&amp; <a class="code" href="classarmnn_1_1_i_layer_support.xhtml#a4e25e081529b7e99e5e454d916ed83fb">output</a>,</div>
<div class="line"><a name="l00310"></a><span class="lineno">  310</span>&#160;                                 <span class="keyword">const</span> <a class="code" href="structarmnn_1_1_space_to_depth_descriptor.xhtml">SpaceToDepthDescriptor</a>&amp; <a class="code" href="classarmnn_1_1_i_layer_support.xhtml#a859feaa966620ae0ea88abf5226f2d04">descriptor</a>,</div>
<div class="line"><a name="l00311"></a><span class="lineno">  311</span>&#160;                                 <a class="code" href="classarmnn_1_1_optional.xhtml">Optional&lt;std::string&amp;&gt;</a> <a class="code" href="classarmnn_1_1_i_layer_support.xhtml#ac75f9a02b051716a0cc1cc0818dfe454">reasonIfUnsupported</a> = <a class="code" href="structarmnn_1_1_empty_optional.xhtml">EmptyOptional</a>()) <span class="keyword">const override</span>;</div>
<div class="line"><a name="l00312"></a><span class="lineno">  312</span>&#160; </div>
<div class="line"><a name="l00313"></a><span class="lineno">  313</span>&#160;    <span class="keywordtype">bool</span> <a class="code" href="classarmnn_1_1_neon_layer_support.xhtml#a159deb89f2f5dbc1a12b8d365162760f">IsSplitterSupported</a>(<span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a>&amp; input,</div>
<div class="line"><a name="l00314"></a><span class="lineno">  314</span>&#160;                             <span class="keyword">const</span> std::vector&lt;std::reference_wrapper&lt;TensorInfo&gt;&gt;&amp; <a class="code" href="classarmnn_1_1_i_layer_support.xhtml#a311602de6b1e53b4feb3b8a37a433f44">outputs</a>,</div>
<div class="line"><a name="l00315"></a><span class="lineno">  315</span>&#160;                             <span class="keyword">const</span> <a class="code" href="structarmnn_1_1_views_descriptor.xhtml">ViewsDescriptor</a>&amp; <a class="code" href="classarmnn_1_1_i_layer_support.xhtml#a859feaa966620ae0ea88abf5226f2d04">descriptor</a>,</div>
<div class="line"><a name="l00316"></a><span class="lineno">  316</span>&#160;                             <a class="code" href="classarmnn_1_1_optional.xhtml">Optional&lt;std::string&amp;&gt;</a> <a class="code" href="classarmnn_1_1_i_layer_support.xhtml#ac75f9a02b051716a0cc1cc0818dfe454">reasonIfUnsupported</a> = <a class="code" href="structarmnn_1_1_empty_optional.xhtml">EmptyOptional</a>()) <span class="keyword">const override</span>;</div>
<div class="line"><a name="l00317"></a><span class="lineno">  317</span>&#160; </div>
<div class="line"><a name="l00318"></a><span class="lineno">  318</span>&#160;    <span class="keywordtype">bool</span> <a class="code" href="classarmnn_1_1_neon_layer_support.xhtml#a0d99d635906837ed6c582aba6ca6b178">IsStackSupported</a>(<span class="keyword">const</span> std::vector&lt;const TensorInfo*&gt;&amp; inputs,</div>
<div class="line"><a name="l00319"></a><span class="lineno">  319</span>&#160;                          <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a>&amp; <a class="code" href="classarmnn_1_1_i_layer_support.xhtml#a4e25e081529b7e99e5e454d916ed83fb">output</a>,</div>
<div class="line"><a name="l00320"></a><span class="lineno">  320</span>&#160;                          <span class="keyword">const</span> <a class="code" href="structarmnn_1_1_stack_descriptor.xhtml">StackDescriptor</a>&amp; <a class="code" href="classarmnn_1_1_i_layer_support.xhtml#a859feaa966620ae0ea88abf5226f2d04">descriptor</a>,</div>
<div class="line"><a name="l00321"></a><span class="lineno">  321</span>&#160;                          <a class="code" href="classarmnn_1_1_optional.xhtml">Optional&lt;std::string&amp;&gt;</a> <a class="code" href="classarmnn_1_1_i_layer_support.xhtml#ac75f9a02b051716a0cc1cc0818dfe454">reasonIfUnsupported</a> = <a class="code" href="structarmnn_1_1_empty_optional.xhtml">EmptyOptional</a>()) <span class="keyword">const override</span>;</div>
<div class="line"><a name="l00322"></a><span class="lineno">  322</span>&#160; </div>
<div class="line"><a name="l00323"></a><span class="lineno">  323</span>&#160;    <span class="keywordtype">bool</span> <a class="code" href="classarmnn_1_1_neon_layer_support.xhtml#aaaa749f75b5ca145f6ad41aa210dbd19">IsStridedSliceSupported</a>(<span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a>&amp; input,</div>
<div class="line"><a name="l00324"></a><span class="lineno">  324</span>&#160;                                 <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a>&amp; <a class="code" href="classarmnn_1_1_i_layer_support.xhtml#a4e25e081529b7e99e5e454d916ed83fb">output</a>,</div>
<div class="line"><a name="l00325"></a><span class="lineno">  325</span>&#160;                                 <span class="keyword">const</span> <a class="code" href="structarmnn_1_1_strided_slice_descriptor.xhtml">StridedSliceDescriptor</a>&amp; <a class="code" href="classarmnn_1_1_i_layer_support.xhtml#a859feaa966620ae0ea88abf5226f2d04">descriptor</a>,</div>
<div class="line"><a name="l00326"></a><span class="lineno">  326</span>&#160;                                 <a class="code" href="classarmnn_1_1_optional.xhtml">Optional&lt;std::string&amp;&gt;</a> <a class="code" href="classarmnn_1_1_i_layer_support.xhtml#ac75f9a02b051716a0cc1cc0818dfe454">reasonIfUnsupported</a> = <a class="code" href="structarmnn_1_1_empty_optional.xhtml">EmptyOptional</a>()) <span class="keyword">const override</span>;</div>
<div class="line"><a name="l00327"></a><span class="lineno">  327</span>&#160; </div>
<div class="line"><a name="l00328"></a><span class="lineno">  328</span>&#160;    <span class="keywordtype">bool</span> <a class="code" href="classarmnn_1_1_neon_layer_support.xhtml#a8a520378fa336d155e23478456eb45fe">IsSubtractionSupported</a>(<span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a>&amp; input0,</div>
<div class="line"><a name="l00329"></a><span class="lineno">  329</span>&#160;                                <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a>&amp; <a class="code" href="classarmnn_1_1_i_layer_support.xhtml#ab82416560ced17268c6ba4443a3aac5e">input1</a>,</div>
<div class="line"><a name="l00330"></a><span class="lineno">  330</span>&#160;                                <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a>&amp; <a class="code" href="classarmnn_1_1_i_layer_support.xhtml#a4e25e081529b7e99e5e454d916ed83fb">output</a>,</div>
<div class="line"><a name="l00331"></a><span class="lineno">  331</span>&#160;                                <a class="code" href="classarmnn_1_1_optional.xhtml">Optional&lt;std::string&amp;&gt;</a> <a class="code" href="classarmnn_1_1_i_layer_support.xhtml#ac75f9a02b051716a0cc1cc0818dfe454">reasonIfUnsupported</a> = <a class="code" href="structarmnn_1_1_empty_optional.xhtml">EmptyOptional</a>()) <span class="keyword">const override</span>;</div>
<div class="line"><a name="l00332"></a><span class="lineno">  332</span>&#160; </div>
<div class="line"><a name="l00333"></a><span class="lineno">  333</span>&#160;    <span class="keywordtype">bool</span> <a class="code" href="classarmnn_1_1_neon_layer_support.xhtml#abfc649259b4e9d8bb830da564f7556c6">IsTransposeConvolution2dSupported</a>(<span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a>&amp; input,</div>
<div class="line"><a name="l00334"></a><span class="lineno">  334</span>&#160;                                           <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a>&amp; <a class="code" href="classarmnn_1_1_i_layer_support.xhtml#a4e25e081529b7e99e5e454d916ed83fb">output</a>,</div>
<div class="line"><a name="l00335"></a><span class="lineno">  335</span>&#160;                                           <span class="keyword">const</span> <a class="code" href="structarmnn_1_1_transpose_convolution2d_descriptor.xhtml">TransposeConvolution2dDescriptor</a>&amp; <a class="code" href="classarmnn_1_1_i_layer_support.xhtml#a859feaa966620ae0ea88abf5226f2d04">descriptor</a>,</div>
<div class="line"><a name="l00336"></a><span class="lineno">  336</span>&#160;                                           <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a>&amp; <a class="code" href="classarmnn_1_1_i_layer_support.xhtml#a631f893f44415523924016ed3f54a661">weights</a>,</div>
<div class="line"><a name="l00337"></a><span class="lineno">  337</span>&#160;                                           <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_optional.xhtml">Optional&lt;TensorInfo&gt;</a>&amp; <a class="code" href="classarmnn_1_1_i_layer_support.xhtml#a71cf13fc7f7aeac054919e0c6dcab52e">biases</a>,</div>
<div class="line"><a name="l00338"></a><span class="lineno">  338</span>&#160;                                           <a class="code" href="classarmnn_1_1_optional.xhtml">Optional&lt;std::string&amp;&gt;</a> <a class="code" href="classarmnn_1_1_i_layer_support.xhtml#ac75f9a02b051716a0cc1cc0818dfe454">reasonIfUnsupported</a> = <a class="code" href="structarmnn_1_1_empty_optional.xhtml">EmptyOptional</a>()) <span class="keyword">const override</span>;</div>
<div class="line"><a name="l00339"></a><span class="lineno">  339</span>&#160; </div>
<div class="line"><a name="l00340"></a><span class="lineno">  340</span>&#160;    <span class="keywordtype">bool</span> <a class="code" href="classarmnn_1_1_neon_layer_support.xhtml#a5d8316c4fac71a34c0f95745a0cae0a8">IsTransposeSupported</a>(<span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a>&amp; input,</div>
<div class="line"><a name="l00341"></a><span class="lineno">  341</span>&#160;                              <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a>&amp; <a class="code" href="classarmnn_1_1_i_layer_support.xhtml#a4e25e081529b7e99e5e454d916ed83fb">output</a>,</div>
<div class="line"><a name="l00342"></a><span class="lineno">  342</span>&#160;                              <span class="keyword">const</span> <a class="code" href="structarmnn_1_1_transpose_descriptor.xhtml">TransposeDescriptor</a>&amp; <a class="code" href="classarmnn_1_1_i_layer_support.xhtml#a859feaa966620ae0ea88abf5226f2d04">descriptor</a>,</div>
<div class="line"><a name="l00343"></a><span class="lineno">  343</span>&#160;                              <a class="code" href="classarmnn_1_1_optional.xhtml">Optional&lt;std::string&amp;&gt;</a> <a class="code" href="classarmnn_1_1_i_layer_support.xhtml#ac75f9a02b051716a0cc1cc0818dfe454">reasonIfUnsupported</a> = <a class="code" href="structarmnn_1_1_empty_optional.xhtml">EmptyOptional</a>()) <span class="keyword">const override</span>;</div>
<div class="line"><a name="l00344"></a><span class="lineno">  344</span>&#160; </div>
<div class="line"><a name="l00345"></a><span class="lineno">  345</span>&#160;    <span class="keywordtype">bool</span> <a class="code" href="classarmnn_1_1_neon_layer_support.xhtml#ae5cccf9f21abbc944a20817804cfb964">IsUnidirectionalSequenceLstmSupported</a>(<span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a>&amp; input,</div>
<div class="line"><a name="l00346"></a><span class="lineno">  346</span>&#160;                                               <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a>&amp; <a class="code" href="classarmnn_1_1_i_layer_support.xhtml#a5a01de4e3851a25f2df77897fb8f7083">outputStateIn</a>,</div>
<div class="line"><a name="l00347"></a><span class="lineno">  347</span>&#160;                                               <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a>&amp; <a class="code" href="classarmnn_1_1_i_layer_support.xhtml#aec04a02758804219fb461623464a8e96">cellStateIn</a>,</div>
<div class="line"><a name="l00348"></a><span class="lineno">  348</span>&#160;                                               <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a>&amp; <a class="code" href="classarmnn_1_1_i_layer_support.xhtml#a44eb2a514bddb31fe20f9e4f04159c9f">outputStateOut</a>,</div>
<div class="line"><a name="l00349"></a><span class="lineno">  349</span>&#160;                                               <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a>&amp; <a class="code" href="classarmnn_1_1_i_layer_support.xhtml#ae1ee2d524d4252bffc0ed67e75882952">cellStateOut</a>,</div>
<div class="line"><a name="l00350"></a><span class="lineno">  350</span>&#160;                                               <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a>&amp; <a class="code" href="classarmnn_1_1_i_layer_support.xhtml#a4e25e081529b7e99e5e454d916ed83fb">output</a>,</div>
<div class="line"><a name="l00351"></a><span class="lineno">  351</span>&#160;                                               <span class="keyword">const</span> <a class="code" href="structarmnn_1_1_lstm_descriptor.xhtml">UnidirectionalSequenceLstmDescriptor</a>&amp; <a class="code" href="classarmnn_1_1_i_layer_support.xhtml#a859feaa966620ae0ea88abf5226f2d04">descriptor</a>,</div>
<div class="line"><a name="l00352"></a><span class="lineno">  352</span>&#160;                                               <span class="keyword">const</span> <a class="code" href="structarmnn_1_1_lstm_input_params_info.xhtml">LstmInputParamsInfo</a>&amp; <a class="code" href="classarmnn_1_1_i_layer_support.xhtml#aca7a974c8803242968a8d6540275264a">paramsInfo</a>,</div>
<div class="line"><a name="l00353"></a><span class="lineno">  353</span>&#160;                                               <a class="code" href="classarmnn_1_1_optional.xhtml">Optional&lt;std::string&amp;&gt;</a> <a class="code" href="classarmnn_1_1_i_layer_support.xhtml#ac75f9a02b051716a0cc1cc0818dfe454">reasonIfUnsupported</a>) <span class="keyword">const override</span>;</div>
<div class="line"><a name="l00354"></a><span class="lineno">  354</span>&#160; </div>
<div class="line"><a name="l00355"></a><span class="lineno">  355</span>&#160;<span class="keyword">private</span>:</div>
<div class="line"><a name="l00356"></a><span class="lineno">  356</span>&#160;    <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_i_backend_internal.xhtml#a4d0238968a7643dbb170547dd22bba54">IBackendInternal::IBackendSpecificModelContextPtr</a> m_ModelContextPtr;</div>
<div class="line"><a name="l00357"></a><span class="lineno">  357</span>&#160; </div>
<div class="line"><a name="l00358"></a><span class="lineno">  358</span>&#160;}; <span class="comment">// class NeonLayerSupport</span></div>
<div class="line"><a name="l00359"></a><span class="lineno">  359</span>&#160; </div>
<div class="line"><a name="l00360"></a><span class="lineno">  360</span>&#160;} <span class="comment">// namespace armnn</span></div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<div class="ttc" id="aclassarmnn_1_1_neon_layer_support_xhtml_a629a1df03491e1bdc19dbd415fd2ad74"><div class="ttname"><a href="classarmnn_1_1_neon_layer_support.xhtml#a629a1df03491e1bdc19dbd415fd2ad74">armnn::NeonLayerSupport::IsResizeSupported</a></div><div class="ttdeci">bool IsResizeSupported(const TensorInfo &amp;input, const TensorInfo &amp;output, const ResizeDescriptor &amp;descriptor, Optional&lt; std::string &amp; &gt; reasonIfUnsupported=EmptyOptional()) const override</div><div class="ttdef"><b>Definition:</b> <a href="_neon_layer_support_8cpp_source.xhtml#l01462">NeonLayerSupport.cpp:1462</a></div></div>
<div class="ttc" id="aclassarmnn_1_1_neon_layer_support_xhtml_a30cbe4bc4e20ae9b2aac66a108088919"><div class="ttname"><a href="classarmnn_1_1_neon_layer_support.xhtml#a30cbe4bc4e20ae9b2aac66a108088919">armnn::NeonLayerSupport::IsBatchToSpaceNdSupported</a></div><div class="ttdeci">bool IsBatchToSpaceNdSupported(const TensorInfo &amp;input, const TensorInfo &amp;output, const BatchToSpaceNdDescriptor &amp;descriptor, Optional&lt; std::string &amp; &gt; reasonIfUnsupported=EmptyOptional()) const override</div><div class="ttdef"><b>Definition:</b> <a href="_neon_layer_support_8cpp_source.xhtml#l00808">NeonLayerSupport.cpp:808</a></div></div>
<div class="ttc" id="aclassarmnn_1_1_neon_layer_support_xhtml_ad6262dc3169d8e809c272b31b25aaa6a"><div class="ttname"><a href="classarmnn_1_1_neon_layer_support.xhtml#ad6262dc3169d8e809c272b31b25aaa6a">armnn::NeonLayerSupport::IsPooling2dSupported</a></div><div class="ttdeci">bool IsPooling2dSupported(const TensorInfo &amp;input, const TensorInfo &amp;output, const Pooling2dDescriptor &amp;descriptor, Optional&lt; std::string &amp; &gt; reasonIfUnsupported=EmptyOptional()) const override</div><div class="ttdef"><b>Definition:</b> <a href="_neon_layer_support_8cpp_source.xhtml#l01351">NeonLayerSupport.cpp:1351</a></div></div>
<div class="ttc" id="aclassarmnn_1_1_neon_layer_support_xhtml_aeec02af89681b711706472de7be52871"><div class="ttname"><a href="classarmnn_1_1_neon_layer_support.xhtml#aeec02af89681b711706472de7be52871">armnn::NeonLayerSupport::IsElementwiseUnarySupported</a></div><div class="ttdeci">bool IsElementwiseUnarySupported(const TensorInfo &amp;input, const TensorInfo &amp;output, const ElementwiseUnaryDescriptor &amp;descriptor, Optional&lt; std::string &amp; &gt; reasonIfUnsupported=EmptyOptional()) const override</div><div class="ttdef"><b>Definition:</b> <a href="_neon_layer_support_8cpp_source.xhtml#l01046">NeonLayerSupport.cpp:1046</a></div></div>
<div class="ttc" id="aclassarmnn_1_1_i_layer_support_xhtml_a5a01de4e3851a25f2df77897fb8f7083"><div class="ttname"><a href="classarmnn_1_1_i_layer_support.xhtml#a5a01de4e3851a25f2df77897fb8f7083">armnn::ILayerSupport::outputStateIn</a></div><div class="ttdeci">const TensorInfo &amp; outputStateIn</div><div class="ttdef"><b>Definition:</b> <a href="_i_layer_support_8hpp_source.xhtml#l00286">ILayerSupport.hpp:286</a></div></div>
<div class="ttc" id="astructarmnn_1_1_lstm_input_params_info_xhtml"><div class="ttname"><a href="structarmnn_1_1_lstm_input_params_info.xhtml">armnn::LstmInputParamsInfo</a></div><div class="ttdef"><b>Definition:</b> <a href="_lstm_params_8hpp_source.xhtml#l00063">LstmParams.hpp:63</a></div></div>
<div class="ttc" id="aclassarmnn_1_1_i_layer_support_xhtml_aca7a974c8803242968a8d6540275264a"><div class="ttname"><a href="classarmnn_1_1_i_layer_support.xhtml#aca7a974c8803242968a8d6540275264a">armnn::ILayerSupport::paramsInfo</a></div><div class="ttdeci">const TensorInfo const TensorInfo const TensorInfo const TensorInfo const TensorInfo const TensorInfo const LstmDescriptor const LstmInputParamsInfo &amp; paramsInfo</div><div class="ttdef"><b>Definition:</b> <a href="_i_layer_support_8hpp_source.xhtml#l00293">ILayerSupport.hpp:293</a></div></div>
<div class="ttc" id="astructarmnn_1_1_gather_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_gather_descriptor.xhtml">armnn::GatherDescriptor</a></div><div class="ttdoc">A GatherDescriptor for the GatherLayer.</div><div class="ttdef"><b>Definition:</b> <a href="_descriptors_8hpp_source.xhtml#l00932">Descriptors.hpp:932</a></div></div>
<div class="ttc" id="aclassarmnn_1_1_neon_layer_support_xhtml_ac680aa10b0a3768da4c23e691881b5ea"><div class="ttname"><a href="classarmnn_1_1_neon_layer_support.xhtml#ac680aa10b0a3768da4c23e691881b5ea">armnn::NeonLayerSupport::IsCastSupported</a></div><div class="ttdeci">bool IsCastSupported(const TensorInfo &amp;input, const TensorInfo &amp;output, Optional&lt; std::string &amp; &gt; reasonIfUnsupported=EmptyOptional()) const override</div><div class="ttdef"><b>Definition:</b> <a href="_neon_layer_support_8cpp_source.xhtml#l00820">NeonLayerSupport.cpp:820</a></div></div>
<div class="ttc" id="astructarmnn_1_1_normalization_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_normalization_descriptor.xhtml">armnn::NormalizationDescriptor</a></div><div class="ttdoc">A NormalizationDescriptor for the NormalizationLayer.</div><div class="ttdef"><b>Definition:</b> <a href="_descriptors_8hpp_source.xhtml#l00757">Descriptors.hpp:757</a></div></div>
<div class="ttc" id="astructarmnn_1_1_transpose_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_transpose_descriptor.xhtml">armnn::TransposeDescriptor</a></div><div class="ttdoc">A TransposeDescriptor for the TransposeLayer.</div><div class="ttdef"><b>Definition:</b> <a href="_descriptors_8hpp_source.xhtml#l01457">Descriptors.hpp:1457</a></div></div>
<div class="ttc" id="aclassarmnn_1_1_neon_layer_support_xhtml_a3115a72a9cca31fb27b40da54a435dfa"><div class="ttname"><a href="classarmnn_1_1_neon_layer_support.xhtml#a3115a72a9cca31fb27b40da54a435dfa">armnn::NeonLayerSupport::IsSoftmaxSupported</a></div><div class="ttdeci">bool IsSoftmaxSupported(const TensorInfo &amp;input, const TensorInfo &amp;output, const SoftmaxDescriptor &amp;descriptor, Optional&lt; std::string &amp; &gt; reasonIfUnsupported=EmptyOptional()) const override</div><div class="ttdef"><b>Definition:</b> <a href="_neon_layer_support_8cpp_source.xhtml#l01486">NeonLayerSupport.cpp:1486</a></div></div>
<div class="ttc" id="a_i_backend_internal_8hpp_xhtml"><div class="ttname"><a href="_i_backend_internal_8hpp.xhtml">IBackendInternal.hpp</a></div></div>
<div class="ttc" id="aclassarmnn_1_1_neon_layer_support_xhtml_a84f23a37f7fd69269f072e114b7f0afb"><div class="ttname"><a href="classarmnn_1_1_neon_layer_support.xhtml#a84f23a37f7fd69269f072e114b7f0afb">armnn::NeonLayerSupport::IsDepthToSpaceSupported</a></div><div class="ttdeci">bool IsDepthToSpaceSupported(const TensorInfo &amp;input, const TensorInfo &amp;output, const DepthToSpaceDescriptor &amp;descriptor, Optional&lt; std::string &amp; &gt; reasonIfUnsupported=EmptyOptional()) const override</div><div class="ttdef"><b>Definition:</b> <a href="_neon_layer_support_8cpp_source.xhtml#l00990">NeonLayerSupport.cpp:990</a></div></div>
<div class="ttc" id="aclassarmnn_1_1_neon_layer_support_xhtml_a19528981c1519ecc64cc4a70b12ce8d3"><div class="ttname"><a href="classarmnn_1_1_neon_layer_support.xhtml#a19528981c1519ecc64cc4a70b12ce8d3">armnn::NeonLayerSupport::~NeonLayerSupport</a></div><div class="ttdeci">~NeonLayerSupport()</div><div class="ttdef"><b>Definition:</b> <a href="_neon_layer_support_8hpp_source.xhtml#l00020">NeonLayerSupport.hpp:20</a></div></div>
<div class="ttc" id="astructarmnn_1_1_elementwise_unary_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_elementwise_unary_descriptor.xhtml">armnn::ElementwiseUnaryDescriptor</a></div><div class="ttdoc">A ElementwiseUnaryDescriptor for the ElementwiseUnaryLayer.</div><div class="ttdef"><b>Definition:</b> <a href="_descriptors_8hpp_source.xhtml#l00129">Descriptors.hpp:129</a></div></div>
<div class="ttc" id="astructarmnn_1_1_pad_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_pad_descriptor.xhtml">armnn::PadDescriptor</a></div><div class="ttdoc">A PadDescriptor for the PadLayer.</div><div class="ttdef"><b>Definition:</b> <a href="_descriptors_8hpp_source.xhtml#l01163">Descriptors.hpp:1163</a></div></div>
<div class="ttc" id="astructarmnn_1_1_softmax_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_softmax_descriptor.xhtml">armnn::SoftmaxDescriptor</a></div><div class="ttdoc">A SoftmaxDescriptor for the SoftmaxLayer.</div><div class="ttdef"><b>Definition:</b> <a href="_descriptors_8hpp_source.xhtml#l00177">Descriptors.hpp:177</a></div></div>
<div class="ttc" id="aclassarmnn_1_1_neon_layer_support_xhtml_a7224fbfbc4c5a2b3710543e3f574171f"><div class="ttname"><a href="classarmnn_1_1_neon_layer_support.xhtml#a7224fbfbc4c5a2b3710543e3f574171f">armnn::NeonLayerSupport::IsArgMinMaxSupported</a></div><div class="ttdeci">bool IsArgMinMaxSupported(const TensorInfo &amp;input, const TensorInfo &amp;output, const ArgMinMaxDescriptor &amp;descriptor, Optional&lt; std::string &amp; &gt; reasonIfUnsupported=EmptyOptional()) const override</div><div class="ttdef"><b>Definition:</b> <a href="_neon_layer_support_8cpp_source.xhtml#l00745">NeonLayerSupport.cpp:745</a></div></div>
<div class="ttc" id="astructarmnn_1_1_stack_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_stack_descriptor.xhtml">armnn::StackDescriptor</a></div><div class="ttdoc">A StackDescriptor for the StackLayer.</div><div class="ttdef"><b>Definition:</b> <a href="_descriptors_8hpp_source.xhtml#l01218">Descriptors.hpp:1218</a></div></div>
<div class="ttc" id="astructarmnn_1_1_slice_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_slice_descriptor.xhtml">armnn::SliceDescriptor</a></div><div class="ttdoc">A SliceDescriptor for the SliceLayer.</div><div class="ttdef"><b>Definition:</b> <a href="_descriptors_8hpp_source.xhtml#l01195">Descriptors.hpp:1195</a></div></div>
<div class="ttc" id="aclassarmnn_1_1_i_layer_support_xhtml_a4f6f59c4e91c7c37d9a119d615093ed3"><div class="ttname"><a href="classarmnn_1_1_i_layer_support.xhtml#a4f6f59c4e91c7c37d9a119d615093ed3">armnn::ILayerSupport::scratchBuffer</a></div><div class="ttdeci">const TensorInfo const TensorInfo const TensorInfo &amp; scratchBuffer</div><div class="ttdef"><b>Definition:</b> <a href="_i_layer_support_8hpp_source.xhtml#l00288">ILayerSupport.hpp:288</a></div></div>
<div class="ttc" id="aclassarmnn_1_1_neon_layer_support_xhtml_a336cc17b9c2cd4e7f667c7fcf5c9377e"><div class="ttname"><a href="classarmnn_1_1_neon_layer_support.xhtml#a336cc17b9c2cd4e7f667c7fcf5c9377e">armnn::NeonLayerSupport::IsPermuteSupported</a></div><div class="ttdeci">bool IsPermuteSupported(const TensorInfo &amp;input, const TensorInfo &amp;output, const PermuteDescriptor &amp;descriptor, Optional&lt; std::string &amp; &gt; reasonIfUnsupported=EmptyOptional()) const override</div><div class="ttdef"><b>Definition:</b> <a href="_neon_layer_support_8cpp_source.xhtml#l01343">NeonLayerSupport.cpp:1343</a></div></div>
<div class="ttc" id="aclassarmnn_1_1_neon_layer_support_xhtml_a78c8c01a898f4bdcebddeda9f3d39a51"><div class="ttname"><a href="classarmnn_1_1_neon_layer_support.xhtml#a78c8c01a898f4bdcebddeda9f3d39a51">armnn::NeonLayerSupport::IsSpaceToDepthSupported</a></div><div class="ttdeci">bool IsSpaceToDepthSupported(const TensorInfo &amp;input, const TensorInfo &amp;output, const SpaceToDepthDescriptor &amp;descriptor, Optional&lt; std::string &amp; &gt; reasonIfUnsupported=EmptyOptional()) const override</div><div class="ttdef"><b>Definition:</b> <a href="_neon_layer_support_8cpp_source.xhtml#l01506">NeonLayerSupport.cpp:1506</a></div></div>
<div class="ttc" id="astructarmnn_1_1_activation_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_activation_descriptor.xhtml">armnn::ActivationDescriptor</a></div><div class="ttdoc">An ActivationDescriptor for the ActivationLayer.</div><div class="ttdef"><b>Definition:</b> <a href="_descriptors_8hpp_source.xhtml#l00036">Descriptors.hpp:36</a></div></div>
<div class="ttc" id="aclassarmnn_1_1_i_layer_support_xhtml_ac75f9a02b051716a0cc1cc0818dfe454"><div class="ttname"><a href="classarmnn_1_1_i_layer_support.xhtml#ac75f9a02b051716a0cc1cc0818dfe454">armnn::ILayerSupport::reasonIfUnsupported</a></div><div class="ttdeci">const TensorInfo const ActivationDescriptor Optional&lt; std::string &amp; &gt; reasonIfUnsupported</div><div class="ttdef"><b>Definition:</b> <a href="_i_layer_support_8hpp_source.xhtml#l00043">ILayerSupport.hpp:43</a></div></div>
<div class="ttc" id="astructarmnn_1_1_lstm_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_lstm_descriptor.xhtml">armnn::LstmDescriptor</a></div><div class="ttdoc">An LstmDescriptor for the LstmLayer.</div><div class="ttdef"><b>Definition:</b> <a href="_descriptors_8hpp_source.xhtml#l01069">Descriptors.hpp:1069</a></div></div>
<div class="ttc" id="aclassarmnn_1_1_neon_layer_support_xhtml_a5d8316c4fac71a34c0f95745a0cae0a8"><div class="ttname"><a href="classarmnn_1_1_neon_layer_support.xhtml#a5d8316c4fac71a34c0f95745a0cae0a8">armnn::NeonLayerSupport::IsTransposeSupported</a></div><div class="ttdeci">bool IsTransposeSupported(const TensorInfo &amp;input, const TensorInfo &amp;output, const TransposeDescriptor &amp;descriptor, Optional&lt; std::string &amp; &gt; reasonIfUnsupported=EmptyOptional()) const override</div><div class="ttdef"><b>Definition:</b> <a href="_neon_layer_support_8cpp_source.xhtml#l01604">NeonLayerSupport.cpp:1604</a></div></div>
<div class="ttc" id="astructarmnn_1_1_fully_connected_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_fully_connected_descriptor.xhtml">armnn::FullyConnectedDescriptor</a></div><div class="ttdoc">A FullyConnectedDescriptor for the FullyConnectedLayer.</div><div class="ttdef"><b>Definition:</b> <a href="_descriptors_8hpp_source.xhtml#l00495">Descriptors.hpp:495</a></div></div>
<div class="ttc" id="aclassarmnn_1_1_neon_layer_support_xhtml_a159deb89f2f5dbc1a12b8d365162760f"><div class="ttname"><a href="classarmnn_1_1_neon_layer_support.xhtml#a159deb89f2f5dbc1a12b8d365162760f">armnn::NeonLayerSupport::IsSplitterSupported</a></div><div class="ttdeci">bool IsSplitterSupported(const TensorInfo &amp;input, const std::vector&lt; std::reference_wrapper&lt; TensorInfo &gt;&gt; &amp;outputs, const ViewsDescriptor &amp;descriptor, Optional&lt; std::string &amp; &gt; reasonIfUnsupported=EmptyOptional()) const override</div><div class="ttdef"><b>Definition:</b> <a href="_neon_layer_support_8cpp_source.xhtml#l01518">NeonLayerSupport.cpp:1518</a></div></div>
<div class="ttc" id="astructarmnn_1_1_batch_mat_mul_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_batch_mat_mul_descriptor.xhtml">armnn::BatchMatMulDescriptor</a></div><div class="ttdoc">A BatchMatMulDescriptor for the BatchMatMul operator.</div><div class="ttdef"><b>Definition:</b> <a href="_descriptors_8hpp_source.xhtml#l01551">Descriptors.hpp:1551</a></div></div>
<div class="ttc" id="astructarmnn_1_1_resize_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_resize_descriptor.xhtml">armnn::ResizeDescriptor</a></div><div class="ttdoc">A ResizeDescriptor for the ResizeLayer.</div><div class="ttdef"><b>Definition:</b> <a href="_descriptors_8hpp_source.xhtml#l00952">Descriptors.hpp:952</a></div></div>
<div class="ttc" id="astructarmnn_1_1_strided_slice_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_strided_slice_descriptor.xhtml">armnn::StridedSliceDescriptor</a></div><div class="ttdoc">A StridedSliceDescriptor for the StridedSliceLayer.</div><div class="ttdef"><b>Definition:</b> <a href="_descriptors_8hpp_source.xhtml#l01270">Descriptors.hpp:1270</a></div></div>
<div class="ttc" id="aclassarmnn_1_1_neon_layer_support_xhtml_a4eb9b602052470f8eadcfa7a63b17d54"><div class="ttname"><a href="classarmnn_1_1_neon_layer_support.xhtml#a4eb9b602052470f8eadcfa7a63b17d54">armnn::NeonLayerSupport::IsMinimumSupported</a></div><div class="ttdeci">bool IsMinimumSupported(const TensorInfo &amp;input0, const TensorInfo &amp;input1, const TensorInfo &amp;output, Optional&lt; std::string &amp; &gt; reasonIfUnsupported=EmptyOptional()) const override</div><div class="ttdef"><b>Definition:</b> <a href="_neon_layer_support_8cpp_source.xhtml#l01275">NeonLayerSupport.cpp:1275</a></div></div>
<div class="ttc" id="astructarmnn_1_1_pooling3d_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_pooling3d_descriptor.xhtml">armnn::Pooling3dDescriptor</a></div><div class="ttdoc">A Pooling3dDescriptor for the Pooling3dLayer.</div><div class="ttdef"><b>Definition:</b> <a href="_descriptors_8hpp_source.xhtml#l00419">Descriptors.hpp:419</a></div></div>
<div class="ttc" id="astructarmnn_1_1_reduce_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_reduce_descriptor.xhtml">armnn::ReduceDescriptor</a></div><div class="ttdoc">A ReduceDescriptor for the REDUCE operators.</div><div class="ttdef"><b>Definition:</b> <a href="_descriptors_8hpp_source.xhtml#l01505">Descriptors.hpp:1505</a></div></div>
<div class="ttc" id="aclassarmnn_1_1_i_layer_support_xhtml_a5b09834cc88bb4156e291c37bd2434ff"><div class="ttname"><a href="classarmnn_1_1_i_layer_support.xhtml#a5b09834cc88bb4156e291c37bd2434ff">armnn::ILayerSupport::previousOutputIn</a></div><div class="ttdeci">const TensorInfo &amp; previousOutputIn</div><div class="ttdef"><b>Definition:</b> <a href="_i_layer_support_8hpp_source.xhtml#l00405">ILayerSupport.hpp:405</a></div></div>
<div class="ttc" id="astructarmnn_1_1_comparison_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_comparison_descriptor.xhtml">armnn::ComparisonDescriptor</a></div><div class="ttdoc">A ComparisonDescriptor for the ComparisonLayer.</div><div class="ttdef"><b>Definition:</b> <a href="_descriptors_8hpp_source.xhtml#l00089">Descriptors.hpp:89</a></div></div>
<div class="ttc" id="aclassarmnn_1_1_i_layer_support_xhtml_a895a8451e0799b95d65caf7ffe0a32d7"><div class="ttname"><a href="classarmnn_1_1_i_layer_support.xhtml#a895a8451e0799b95d65caf7ffe0a32d7">armnn::ILayerSupport::mean</a></div><div class="ttdeci">const TensorInfo const TensorInfo &amp; mean</div><div class="ttdef"><b>Definition:</b> <a href="_i_layer_support_8hpp_source.xhtml#l00063">ILayerSupport.hpp:63</a></div></div>
<div class="ttc" id="astructarmnn_1_1_views_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_views_descriptor.xhtml">armnn::ViewsDescriptor</a></div><div class="ttdoc">A ViewsDescriptor for the SplitterLayer.</div><div class="ttdef"><b>Definition:</b> <a href="_descriptors_8hpp_source.xhtml#l00244">Descriptors.hpp:244</a></div></div>
<div class="ttc" id="aclassarmnn_1_1_neon_layer_support_xhtml_a387c184902d9f09d35bb22b076cb245d"><div class="ttname"><a href="classarmnn_1_1_neon_layer_support.xhtml#a387c184902d9f09d35bb22b076cb245d">armnn::NeonLayerSupport::IsComparisonSupported</a></div><div class="ttdeci">bool IsComparisonSupported(const TensorInfo &amp;input0, const TensorInfo &amp;input1, const TensorInfo &amp;output, const ComparisonDescriptor &amp;descriptor, Optional&lt; std::string &amp; &gt; reasonIfUnsupported=EmptyOptional()) const override</div><div class="ttdef"><b>Definition:</b> <a href="_neon_layer_support_8cpp_source.xhtml#l00842">NeonLayerSupport.cpp:842</a></div></div>
<div class="ttc" id="aclassarmnn_1_1_neon_layer_support_xhtml_ad4217d27bcb41e14cd023552004b21a3"><div class="ttname"><a href="classarmnn_1_1_neon_layer_support.xhtml#ad4217d27bcb41e14cd023552004b21a3">armnn::NeonLayerSupport::IsDivisionSupported</a></div><div class="ttdeci">bool IsDivisionSupported(const TensorInfo &amp;input0, const TensorInfo &amp;input1, const TensorInfo &amp;output, Optional&lt; std::string &amp; &gt; reasonIfUnsupported=EmptyOptional()) const override</div><div class="ttdef"><b>Definition:</b> <a href="_neon_layer_support_8cpp_source.xhtml#l01300">NeonLayerSupport.cpp:1300</a></div></div>
<div class="ttc" id="aclassarmnn_1_1_neon_layer_support_xhtml_a0d99d635906837ed6c582aba6ca6b178"><div class="ttname"><a href="classarmnn_1_1_neon_layer_support.xhtml#a0d99d635906837ed6c582aba6ca6b178">armnn::NeonLayerSupport::IsStackSupported</a></div><div class="ttdeci">bool IsStackSupported(const std::vector&lt; const TensorInfo * &gt; &amp;inputs, const TensorInfo &amp;output, const StackDescriptor &amp;descriptor, Optional&lt; std::string &amp; &gt; reasonIfUnsupported=EmptyOptional()) const override</div><div class="ttdef"><b>Definition:</b> <a href="_neon_layer_support_8cpp_source.xhtml#l01551">NeonLayerSupport.cpp:1551</a></div></div>
<div class="ttc" id="aclassarmnn_1_1_neon_layer_support_xhtml_ad9869f2a0cbe051fcc87fb1405d4091d"><div class="ttname"><a href="classarmnn_1_1_neon_layer_support.xhtml#ad9869f2a0cbe051fcc87fb1405d4091d">armnn::NeonLayerSupport::IsMeanSupported</a></div><div class="ttdeci">bool IsMeanSupported(const TensorInfo &amp;input, const TensorInfo &amp;output, const MeanDescriptor &amp;descriptor, Optional&lt; std::string &amp; &gt; reasonIfUnsupported=EmptyOptional()) const override</div><div class="ttdef"><b>Definition:</b> <a href="_neon_layer_support_8cpp_source.xhtml#l01263">NeonLayerSupport.cpp:1263</a></div></div>
<div class="ttc" id="aclassarmnn_1_1_neon_layer_support_xhtml_ab5960d08e30fb9542125688580c5f623"><div class="ttname"><a href="classarmnn_1_1_neon_layer_support.xhtml#ab5960d08e30fb9542125688580c5f623">armnn::NeonLayerSupport::IsMultiplicationSupported</a></div><div class="ttdeci">bool IsMultiplicationSupported(const TensorInfo &amp;input0, const TensorInfo &amp;input1, const TensorInfo &amp;output, Optional&lt; std::string &amp; &gt; reasonIfUnsupported=EmptyOptional()) const override</div><div class="ttdef"><b>Definition:</b> <a href="_neon_layer_support_8cpp_source.xhtml#l01287">NeonLayerSupport.cpp:1287</a></div></div>
<div class="ttc" id="aclassarmnn_1_1_neon_layer_support_xhtml_ab4474f6170d9abd571f612b2dae34820"><div class="ttname"><a href="classarmnn_1_1_neon_layer_support.xhtml#ab4474f6170d9abd571f612b2dae34820">armnn::NeonLayerSupport::IsQuantizeSupported</a></div><div class="ttdeci">bool IsQuantizeSupported(const TensorInfo &amp;input, const TensorInfo &amp;output, Optional&lt; std::string &amp; &gt; reasonIfUnsupported=EmptyOptional()) const override</div><div class="ttdef"><b>Definition:</b> <a href="_neon_layer_support_8cpp_source.xhtml#l01410">NeonLayerSupport.cpp:1410</a></div></div>
<div class="ttc" id="anamespacearmnn_xhtml"><div class="ttname"><a href="namespacearmnn.xhtml">armnn</a></div><div class="ttdoc">Copyright (c) 2021 ARM Limited and Contributors.</div><div class="ttdef"><b>Definition:</b> <a href="01__00__quick__start_8dox_source.xhtml#l00006">01_00_quick_start.dox:6</a></div></div>
<div class="ttc" id="aclassarmnn_1_1_neon_layer_support_xhtml_aa421c466a09cc8048aa0b700b7e300d8"><div class="ttname"><a href="classarmnn_1_1_neon_layer_support.xhtml#aa421c466a09cc8048aa0b700b7e300d8">armnn::NeonLayerSupport::IsSpaceToBatchNdSupported</a></div><div class="ttdeci">bool IsSpaceToBatchNdSupported(const TensorInfo &amp;input, const TensorInfo &amp;output, const SpaceToBatchNdDescriptor &amp;descriptor, Optional&lt; std::string &amp; &gt; reasonIfUnsupported=EmptyOptional()) const override</div><div class="ttdef"><b>Definition:</b> <a href="_neon_layer_support_8cpp_source.xhtml#l01494">NeonLayerSupport.cpp:1494</a></div></div>
<div class="ttc" id="aclassarmnn_1_1_neon_layer_support_xhtml_aedd6e4de83db27813fad327c29402033"><div class="ttname"><a href="classarmnn_1_1_neon_layer_support.xhtml#aedd6e4de83db27813fad327c29402033">armnn::NeonLayerSupport::IsNormalizationSupported</a></div><div class="ttdeci">bool IsNormalizationSupported(const TensorInfo &amp;input, const TensorInfo &amp;output, const NormalizationDescriptor &amp;descriptor, Optional&lt; std::string &amp; &gt; reasonIfUnsupported=EmptyOptional()) const override</div><div class="ttdef"><b>Definition:</b> <a href="_neon_layer_support_8cpp_source.xhtml#l01313">NeonLayerSupport.cpp:1313</a></div></div>
<div class="ttc" id="aclassarmnn_1_1_neon_layer_support_xhtml_a450ddf4b4335cb37e07e3b0171b00096"><div class="ttname"><a href="classarmnn_1_1_neon_layer_support.xhtml#a450ddf4b4335cb37e07e3b0171b00096">armnn::NeonLayerSupport::IsBatchNormalizationSupported</a></div><div class="ttdeci">bool IsBatchNormalizationSupported(const TensorInfo &amp;input, const TensorInfo &amp;output, const TensorInfo &amp;mean, const TensorInfo &amp;var, const TensorInfo &amp;beta, const TensorInfo &amp;gamma, const BatchNormalizationDescriptor &amp;descriptor, Optional&lt; std::string &amp; &gt; reasonIfUnsupported=EmptyOptional()) const override</div><div class="ttdef"><b>Definition:</b> <a href="_neon_layer_support_8cpp_source.xhtml#l00787">NeonLayerSupport.cpp:787</a></div></div>
<div class="ttc" id="astructarmnn_1_1_batch_to_space_nd_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_batch_to_space_nd_descriptor.xhtml">armnn::BatchToSpaceNdDescriptor</a></div><div class="ttdoc">A BatchToSpaceNdDescriptor for the BatchToSpaceNdLayer.</div><div class="ttdef"><b>Definition:</b> <a href="_descriptors_8hpp_source.xhtml#l00863">Descriptors.hpp:863</a></div></div>
<div class="ttc" id="astructarmnn_1_1_space_to_depth_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_space_to_depth_descriptor.xhtml">armnn::SpaceToDepthDescriptor</a></div><div class="ttdoc">A SpaceToDepthDescriptor for the SpaceToDepthLayer.</div><div class="ttdef"><b>Definition:</b> <a href="_descriptors_8hpp_source.xhtml#l01042">Descriptors.hpp:1042</a></div></div>
<div class="ttc" id="aclassarmnn_1_1_neon_layer_support_xhtml_a56c4df05190f0f465e8501ae831af234"><div class="ttname"><a href="classarmnn_1_1_neon_layer_support.xhtml#a56c4df05190f0f465e8501ae831af234">armnn::NeonLayerSupport::IsDepthwiseConvolutionSupported</a></div><div class="ttdeci">bool IsDepthwiseConvolutionSupported(const TensorInfo &amp;input, const TensorInfo &amp;output, const DepthwiseConvolution2dDescriptor &amp;descriptor, const TensorInfo &amp;weights, const Optional&lt; TensorInfo &gt; &amp;biases, Optional&lt; std::string &amp; &gt; reasonIfUnsupported=EmptyOptional()) const override</div><div class="ttdef"><b>Definition:</b> <a href="_neon_layer_support_8cpp_source.xhtml#l01002">NeonLayerSupport.cpp:1002</a></div></div>
<div class="ttc" id="aclassarmnn_1_1_neon_layer_support_xhtml_abfc649259b4e9d8bb830da564f7556c6"><div class="ttname"><a href="classarmnn_1_1_neon_layer_support.xhtml#abfc649259b4e9d8bb830da564f7556c6">armnn::NeonLayerSupport::IsTransposeConvolution2dSupported</a></div><div class="ttdeci">bool IsTransposeConvolution2dSupported(const TensorInfo &amp;input, const TensorInfo &amp;output, const TransposeConvolution2dDescriptor &amp;descriptor, const TensorInfo &amp;weights, const Optional&lt; TensorInfo &gt; &amp;biases, Optional&lt; std::string &amp; &gt; reasonIfUnsupported=EmptyOptional()) const override</div><div class="ttdef"><b>Definition:</b> <a href="_neon_layer_support_8cpp_source.xhtml#l01588">NeonLayerSupport.cpp:1588</a></div></div>
<div class="ttc" id="aclassarmnn_1_1_neon_layer_support_xhtml_a22cfc1d5f68bd32db0aa126e8fd9e615"><div class="ttname"><a href="classarmnn_1_1_neon_layer_support.xhtml#a22cfc1d5f68bd32db0aa126e8fd9e615">armnn::NeonLayerSupport::IsBatchMatMulSupported</a></div><div class="ttdeci">bool IsBatchMatMulSupported(const TensorInfo &amp;inputX, const TensorInfo &amp;inputY, const TensorInfo &amp;output, const BatchMatMulDescriptor &amp;descriptor, Optional&lt; std::string &amp; &gt; reasonIfUnsupported=EmptyOptional()) const</div><div class="ttdef"><b>Definition:</b> <a href="_neon_layer_support_8cpp_source.xhtml#l00757">NeonLayerSupport.cpp:757</a></div></div>
<div class="ttc" id="aclassarmnn_1_1_neon_layer_support_xhtml_a9ee45bf624e40815207a2117f8e02b5d"><div class="ttname"><a href="classarmnn_1_1_neon_layer_support.xhtml#a9ee45bf624e40815207a2117f8e02b5d">armnn::NeonLayerSupport::IsInstanceNormalizationSupported</a></div><div class="ttdeci">bool IsInstanceNormalizationSupported(const TensorInfo &amp;input, const TensorInfo &amp;output, const InstanceNormalizationDescriptor &amp;descriptor, Optional&lt; std::string &amp; &gt; reasonIfUnsupported=EmptyOptional()) const override</div><div class="ttdef"><b>Definition:</b> <a href="_neon_layer_support_8cpp_source.xhtml#l01174">NeonLayerSupport.cpp:1174</a></div></div>
<div class="ttc" id="aclassarmnn_1_1_i_layer_support_xhtml_a859feaa966620ae0ea88abf5226f2d04"><div class="ttname"><a href="classarmnn_1_1_i_layer_support.xhtml#a859feaa966620ae0ea88abf5226f2d04">armnn::ILayerSupport::descriptor</a></div><div class="ttdeci">const TensorInfo const ActivationDescriptor &amp; descriptor</div><div class="ttdef"><b>Definition:</b> <a href="_i_layer_support_8hpp_source.xhtml#l00042">ILayerSupport.hpp:42</a></div></div>
<div class="ttc" id="aclassarmnn_1_1_neon_layer_support_xhtml_a57aee9aba2e2ad5d0bd9f65acd05b6e4"><div class="ttname"><a href="classarmnn_1_1_neon_layer_support.xhtml#a57aee9aba2e2ad5d0bd9f65acd05b6e4">armnn::NeonLayerSupport::IsConstantSupported</a></div><div class="ttdeci">bool IsConstantSupported(const TensorInfo &amp;output, Optional&lt; std::string &amp; &gt; reasonIfUnsupported=EmptyOptional()) const override</div><div class="ttdef"><b>Definition:</b> <a href="_neon_layer_support_8cpp_source.xhtml#l00896">NeonLayerSupport.cpp:896</a></div></div>
<div class="ttc" id="astructarmnn_1_1_fill_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_fill_descriptor.xhtml">armnn::FillDescriptor</a></div><div class="ttdoc">A FillDescriptor for the FillLayer.</div><div class="ttdef"><b>Definition:</b> <a href="_descriptors_8hpp_source.xhtml#l00913">Descriptors.hpp:913</a></div></div>
<div class="ttc" id="anamespacearmnn_xhtml_a56943a0946e5f15e5e58054b8e7a04a4"><div class="ttname"><a href="namespacearmnn.xhtml#a56943a0946e5f15e5e58054b8e7a04a4">armnn::LayerType</a></div><div class="ttdeci">LayerType</div><div class="ttdoc">When adding a new layer, adapt also the LastLayer enum value in the enum class LayerType below.</div><div class="ttdef"><b>Definition:</b> <a href="_types_8hpp_source.xhtml#l00479">Types.hpp:479</a></div></div>
<div class="ttc" id="aclassarmnn_1_1_neon_layer_support_xhtml_ac2078e9d66b086cf1225f0610b05a520"><div class="ttname"><a href="classarmnn_1_1_neon_layer_support.xhtml#ac2078e9d66b086cf1225f0610b05a520">armnn::NeonLayerSupport::IsOutputSupported</a></div><div class="ttdeci">bool IsOutputSupported(const TensorInfo &amp;output, Optional&lt; std::string &amp; &gt; reasonIfUnsupported=EmptyOptional()) const override</div><div class="ttdef"><b>Definition:</b> <a href="_neon_layer_support_8cpp_source.xhtml#l01325">NeonLayerSupport.cpp:1325</a></div></div>
<div class="ttc" id="aclassarmnn_1_1_neon_layer_support_xhtml_a227dac81ac83d16f474881c2252d14cc"><div class="ttname"><a href="classarmnn_1_1_neon_layer_support.xhtml#a227dac81ac83d16f474881c2252d14cc">armnn::NeonLayerSupport::IsSliceSupported</a></div><div class="ttdeci">bool IsSliceSupported(const TensorInfo &amp;input, const TensorInfo &amp;output, const SliceDescriptor &amp;descriptor, Optional&lt; std::string &amp; &gt; reasonIfUnsupported=EmptyOptional()) const override</div><div class="ttdef"><b>Definition:</b> <a href="_neon_layer_support_8cpp_source.xhtml#l01474">NeonLayerSupport.cpp:1474</a></div></div>
<div class="ttc" id="aclassarmnn_1_1_i_backend_internal_xhtml_a4d0238968a7643dbb170547dd22bba54"><div class="ttname"><a href="classarmnn_1_1_i_backend_internal.xhtml#a4d0238968a7643dbb170547dd22bba54">armnn::IBackendInternal::IBackendSpecificModelContextPtr</a></div><div class="ttdeci">std::shared_ptr&lt; IBackendModelContext &gt; IBackendSpecificModelContextPtr</div><div class="ttdef"><b>Definition:</b> <a href="_i_backend_internal_8hpp_source.xhtml#l00096">IBackendInternal.hpp:96</a></div></div>
<div class="ttc" id="aclassarmnn_1_1_i_layer_support_xhtml_ad5e0e3fb8a59107ac3366028a057db12"><div class="ttname"><a href="classarmnn_1_1_i_layer_support.xhtml#ad5e0e3fb8a59107ac3366028a057db12">armnn::ILayerSupport::previousCellStateIn</a></div><div class="ttdeci">const TensorInfo const TensorInfo &amp; previousCellStateIn</div><div class="ttdef"><b>Definition:</b> <a href="_i_layer_support_8hpp_source.xhtml#l00406">ILayerSupport.hpp:406</a></div></div>
<div class="ttc" id="aclassarmnn_1_1_i_layer_support_xhtml_a218e2ebb5babb8323688906b8997eafb"><div class="ttname"><a href="classarmnn_1_1_i_layer_support.xhtml#a218e2ebb5babb8323688906b8997eafb">armnn::ILayerSupport::alpha</a></div><div class="ttdeci">const TensorInfo &amp; alpha</div><div class="ttdef"><b>Definition:</b> <a href="_i_layer_support_8hpp_source.xhtml#l00392">ILayerSupport.hpp:392</a></div></div>
<div class="ttc" id="aclassarmnn_1_1_neon_layer_support_xhtml_a9fe9a6e2b79cc5c97e582f1fe0e1f514"><div class="ttname"><a href="classarmnn_1_1_neon_layer_support.xhtml#a9fe9a6e2b79cc5c97e582f1fe0e1f514">armnn::NeonLayerSupport::IsReduceSupported</a></div><div class="ttdeci">bool IsReduceSupported(const TensorInfo &amp;input, const TensorInfo &amp;output, const ReduceDescriptor &amp;descriptor, Optional&lt; std::string &amp; &gt; reasonIfUnsupported=EmptyOptional()) const override</div><div class="ttdef"><b>Definition:</b> <a href="_neon_layer_support_8cpp_source.xhtml#l01438">NeonLayerSupport.cpp:1438</a></div></div>
<div class="ttc" id="astructarmnn_1_1_depthwise_convolution2d_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_depthwise_convolution2d_descriptor.xhtml">armnn::DepthwiseConvolution2dDescriptor</a></div><div class="ttdoc">A DepthwiseConvolution2dDescriptor for the DepthwiseConvolution2dLayer.</div><div class="ttdef"><b>Definition:</b> <a href="_descriptors_8hpp_source.xhtml#l00647">Descriptors.hpp:647</a></div></div>
<div class="ttc" id="astructarmnn_1_1_mean_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_mean_descriptor.xhtml">armnn::MeanDescriptor</a></div><div class="ttdoc">A MeanDescriptor for the MeanLayer.</div><div class="ttdef"><b>Definition:</b> <a href="_descriptors_8hpp_source.xhtml#l01139">Descriptors.hpp:1139</a></div></div>
<div class="ttc" id="aclassarmnn_1_1_neon_layer_support_xhtml_a1362503332222029f9d73d40520f35bd"><div class="ttname"><a href="classarmnn_1_1_neon_layer_support.xhtml#a1362503332222029f9d73d40520f35bd">armnn::NeonLayerSupport::IsChannelShuffleSupported</a></div><div class="ttdeci">bool IsChannelShuffleSupported(const TensorInfo &amp;input, const TensorInfo &amp;output, const ChannelShuffleDescriptor &amp;descriptor, Optional&lt; std::string &amp; &gt; reasonIfUnsupported=EmptyOptional()) const override</div><div class="ttdef"><b>Definition:</b> <a href="_neon_layer_support_8cpp_source.xhtml#l00830">NeonLayerSupport.cpp:830</a></div></div>
<div class="ttc" id="aclassarmnn_1_1_neon_layer_support_xhtml_a533ad0fa8ff06bef939f4260a8183350"><div class="ttname"><a href="classarmnn_1_1_neon_layer_support.xhtml#a533ad0fa8ff06bef939f4260a8183350">armnn::NeonLayerSupport::IsLstmSupported</a></div><div class="ttdeci">bool IsLstmSupported(const TensorInfo &amp;input, const TensorInfo &amp;outputStateIn, const TensorInfo &amp;cellStateIn, const TensorInfo &amp;scratchBuffer, const TensorInfo &amp;outputStateOut, const TensorInfo &amp;cellStateOut, const TensorInfo &amp;output, const LstmDescriptor &amp;descriptor, const LstmInputParamsInfo &amp;paramsInfo, Optional&lt; std::string &amp; &gt; reasonIfUnsupported=EmptyOptional()) const override</div><div class="ttdef"><b>Definition:</b> <a href="_neon_layer_support_8cpp_source.xhtml#l01227">NeonLayerSupport.cpp:1227</a></div></div>
<div class="ttc" id="aclassarmnn_1_1_neon_layer_support_xhtml_ab226977f41ce8cc1ee82c314949bb184"><div class="ttname"><a href="classarmnn_1_1_neon_layer_support.xhtml#ab226977f41ce8cc1ee82c314949bb184">armnn::NeonLayerSupport::IsReshapeSupported</a></div><div class="ttdeci">bool IsReshapeSupported(const TensorInfo &amp;input, const TensorInfo &amp;output, const ReshapeDescriptor &amp;descriptor, Optional&lt; std::string &amp; &gt; reasonIfUnsupported=EmptyOptional()) const override</div><div class="ttdef"><b>Definition:</b> <a href="_neon_layer_support_8cpp_source.xhtml#l01450">NeonLayerSupport.cpp:1450</a></div></div>
<div class="ttc" id="aclassarmnn_1_1_layer_support_base_xhtml"><div class="ttname"><a href="classarmnn_1_1_layer_support_base.xhtml">armnn::LayerSupportBase</a></div><div class="ttdef"><b>Definition:</b> <a href="_layer_support_base_8hpp_source.xhtml#l00013">LayerSupportBase.hpp:13</a></div></div>
<div class="ttc" id="astructarmnn_1_1_l2_normalization_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_l2_normalization_descriptor.xhtml">armnn::L2NormalizationDescriptor</a></div><div class="ttdoc">A L2NormalizationDescriptor for the L2NormalizationLayer.</div><div class="ttdef"><b>Definition:</b> <a href="_descriptors_8hpp_source.xhtml#l00797">Descriptors.hpp:797</a></div></div>
<div class="ttc" id="aclassarmnn_1_1_neon_layer_support_xhtml_ad17197c4dc4dd190610d6d205108255a"><div class="ttname"><a href="classarmnn_1_1_neon_layer_support.xhtml#ad17197c4dc4dd190610d6d205108255a">armnn::NeonLayerSupport::IsL2NormalizationSupported</a></div><div class="ttdeci">bool IsL2NormalizationSupported(const TensorInfo &amp;input, const TensorInfo &amp;output, const L2NormalizationDescriptor &amp;descriptor, Optional&lt; std::string &amp; &gt; reasonIfUnsupported=EmptyOptional()) const override</div><div class="ttdef"><b>Definition:</b> <a href="_neon_layer_support_8cpp_source.xhtml#l01186">NeonLayerSupport.cpp:1186</a></div></div>
<div class="ttc" id="aclassarmnn_1_1_i_layer_support_xhtml_ab82416560ced17268c6ba4443a3aac5e"><div class="ttname"><a href="classarmnn_1_1_i_layer_support.xhtml#ab82416560ced17268c6ba4443a3aac5e">armnn::ILayerSupport::input1</a></div><div class="ttdeci">const TensorInfo &amp; input1</div><div class="ttdef"><b>Definition:</b> <a href="_i_layer_support_8hpp_source.xhtml#l00048">ILayerSupport.hpp:48</a></div></div>
<div class="ttc" id="astructarmnn_1_1_channel_shuffle_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_channel_shuffle_descriptor.xhtml">armnn::ChannelShuffleDescriptor</a></div><div class="ttdoc">A ChannelShuffleDescriptor for the ChannelShuffle operator.</div><div class="ttdef"><b>Definition:</b> <a href="_descriptors_8hpp_source.xhtml#l01529">Descriptors.hpp:1529</a></div></div>
<div class="ttc" id="astructarmnn_1_1_convolution3d_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_convolution3d_descriptor.xhtml">armnn::Convolution3dDescriptor</a></div><div class="ttdoc">A Convolution3dDescriptor for the Convolution3dLayer.</div><div class="ttdef"><b>Definition:</b> <a href="_descriptors_8hpp_source.xhtml#l00576">Descriptors.hpp:576</a></div></div>
<div class="ttc" id="aclassarmnn_1_1_tensor_info_xhtml"><div class="ttname"><a href="classarmnn_1_1_tensor_info.xhtml">armnn::TensorInfo</a></div><div class="ttdef"><b>Definition:</b> <a href="_tensor_8hpp_source.xhtml#l00152">Tensor.hpp:152</a></div></div>
<div class="ttc" id="aclassarmnn_1_1_i_layer_support_xhtml_ab5cccb3233f5eff2119e8acc80cec209"><div class="ttname"><a href="classarmnn_1_1_i_layer_support.xhtml#ab5cccb3233f5eff2119e8acc80cec209">armnn::ILayerSupport::gamma</a></div><div class="ttdeci">const TensorInfo const TensorInfo const TensorInfo const TensorInfo const TensorInfo &amp; gamma</div><div class="ttdef"><b>Definition:</b> <a href="_i_layer_support_8hpp_source.xhtml#l00066">ILayerSupport.hpp:66</a></div></div>
<div class="ttc" id="aclassarmnn_1_1_i_layer_support_xhtml_a903053b422754682265fba0c03d94a52"><div class="ttname"><a href="classarmnn_1_1_i_layer_support.xhtml#a903053b422754682265fba0c03d94a52">armnn::ILayerSupport::var</a></div><div class="ttdeci">const TensorInfo const TensorInfo const TensorInfo &amp; var</div><div class="ttdef"><b>Definition:</b> <a href="_i_layer_support_8hpp_source.xhtml#l00064">ILayerSupport.hpp:64</a></div></div>
<div class="ttc" id="astructarmnn_1_1_convolution2d_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_convolution2d_descriptor.xhtml">armnn::Convolution2dDescriptor</a></div><div class="ttdoc">A Convolution2dDescriptor for the Convolution2dLayer.</div><div class="ttdef"><b>Definition:</b> <a href="_descriptors_8hpp_source.xhtml#l00522">Descriptors.hpp:522</a></div></div>
<div class="ttc" id="aclassarmnn_1_1_neon_layer_support_xhtml_abdf847462abb9af6a8a932589a0046bb"><div class="ttname"><a href="classarmnn_1_1_neon_layer_support.xhtml#abdf847462abb9af6a8a932589a0046bb">armnn::NeonLayerSupport::IsPreluSupported</a></div><div class="ttdeci">bool IsPreluSupported(const TensorInfo &amp;input, const TensorInfo &amp;alpha, const TensorInfo &amp;output, Optional&lt; std::string &amp; &gt; reasonIfUnsupported=EmptyOptional()) const override</div><div class="ttdef"><b>Definition:</b> <a href="_neon_layer_support_8cpp_source.xhtml#l01367">NeonLayerSupport.cpp:1367</a></div></div>
<div class="ttc" id="astructarmnn_1_1_batch_normalization_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_batch_normalization_descriptor.xhtml">armnn::BatchNormalizationDescriptor</a></div><div class="ttdoc">A BatchNormalizationDescriptor for the BatchNormalizationLayer.</div><div class="ttdef"><b>Definition:</b> <a href="_descriptors_8hpp_source.xhtml#l00816">Descriptors.hpp:816</a></div></div>
<div class="ttc" id="astructarmnn_1_1_q_lstm_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_q_lstm_descriptor.xhtml">armnn::QLstmDescriptor</a></div><div class="ttdoc">A QLstmDescriptor for the QLstmLayer.</div><div class="ttdef"><b>Definition:</b> <a href="_descriptors_8hpp_source.xhtml#l01347">Descriptors.hpp:1347</a></div></div>
<div class="ttc" id="aclassarmnn_1_1_neon_layer_support_xhtml_a06a955e172cf18898d966eab7383efa1"><div class="ttname"><a href="classarmnn_1_1_neon_layer_support.xhtml#a06a955e172cf18898d966eab7383efa1">armnn::NeonLayerSupport::IsAdditionSupported</a></div><div class="ttdeci">bool IsAdditionSupported(const TensorInfo &amp;input0, const TensorInfo &amp;input1, const TensorInfo &amp;output, Optional&lt; std::string &amp; &gt; reasonIfUnsupported=EmptyOptional()) const override</div><div class="ttdef"><b>Definition:</b> <a href="_neon_layer_support_8cpp_source.xhtml#l00732">NeonLayerSupport.cpp:732</a></div></div>
<div class="ttc" id="astructarmnn_1_1_empty_optional_xhtml"><div class="ttname"><a href="structarmnn_1_1_empty_optional.xhtml">armnn::EmptyOptional</a></div><div class="ttdoc">EmptyOptional is used to initialize the Optional class in case we want to have default value for an O...</div><div class="ttdef"><b>Definition:</b> <a href="_optional_8hpp_source.xhtml#l00032">Optional.hpp:32</a></div></div>
<div class="ttc" id="aclassarmnn_1_1_neon_layer_support_xhtml_a5d0dbfd77d3461ded89d3bf6a4eab62c"><div class="ttname"><a href="classarmnn_1_1_neon_layer_support.xhtml#a5d0dbfd77d3461ded89d3bf6a4eab62c">armnn::NeonLayerSupport::IsInputSupported</a></div><div class="ttdeci">bool IsInputSupported(const TensorInfo &amp;input, Optional&lt; std::string &amp; &gt; reasonIfUnsupported=EmptyOptional()) const override</div><div class="ttdef"><b>Definition:</b> <a href="_neon_layer_support_8cpp_source.xhtml#l01168">NeonLayerSupport.cpp:1168</a></div></div>
<div class="ttc" id="aclassarmnn_1_1_neon_layer_support_xhtml_a95dac0c44b7e759694a97778bfbea954"><div class="ttname"><a href="classarmnn_1_1_neon_layer_support.xhtml#a95dac0c44b7e759694a97778bfbea954">armnn::NeonLayerSupport::IsConvertFp16ToFp32Supported</a></div><div class="ttdeci">bool IsConvertFp16ToFp32Supported(const TensorInfo &amp;input, const TensorInfo &amp;output, Optional&lt; std::string &amp; &gt; reasonIfUnsupported=EmptyOptional()) const override</div><div class="ttdef"><b>Definition:</b> <a href="_neon_layer_support_8cpp_source.xhtml#l00904">NeonLayerSupport.cpp:904</a></div></div>
<div class="ttc" id="aclassarmnn_1_1_i_layer_support_xhtml_a83a99de40f6bffaa36f0333d04690b2a"><div class="ttname"><a href="classarmnn_1_1_i_layer_support.xhtml#a83a99de40f6bffaa36f0333d04690b2a">armnn::ILayerSupport::beta</a></div><div class="ttdeci">const TensorInfo const TensorInfo const TensorInfo const TensorInfo &amp; beta</div><div class="ttdef"><b>Definition:</b> <a href="_i_layer_support_8hpp_source.xhtml#l00065">ILayerSupport.hpp:65</a></div></div>
<div class="ttc" id="aclassarmnn_1_1_neon_layer_support_xhtml_af6465e7a85f4ef0013c7d7161cd07a4d"><div class="ttname"><a href="classarmnn_1_1_neon_layer_support.xhtml#af6465e7a85f4ef0013c7d7161cd07a4d">armnn::NeonLayerSupport::IsConcatSupported</a></div><div class="ttdeci">bool IsConcatSupported(const std::vector&lt; const TensorInfo * &gt; inputs, const TensorInfo &amp;output, const OriginsDescriptor &amp;descriptor, Optional&lt; std::string &amp; &gt; reasonIfUnsupported=EmptyOptional()) const override</div><div class="ttdef"><b>Definition:</b> <a href="_neon_layer_support_8cpp_source.xhtml#l00857">NeonLayerSupport.cpp:857</a></div></div>
<div class="ttc" id="aclassarmnn_1_1_neon_layer_support_xhtml_acd148b61eab388a9313c61f4c7a96c4b"><div class="ttname"><a href="classarmnn_1_1_neon_layer_support.xhtml#acd148b61eab388a9313c61f4c7a96c4b">armnn::NeonLayerSupport::IsActivationSupported</a></div><div class="ttdeci">bool IsActivationSupported(const TensorInfo &amp;input, const TensorInfo &amp;output, const ActivationDescriptor &amp;descriptor, Optional&lt; std::string &amp; &gt; reasonIfUnsupported=EmptyOptional()) const override</div><div class="ttdef"><b>Definition:</b> <a href="_neon_layer_support_8cpp_source.xhtml#l00719">NeonLayerSupport.cpp:719</a></div></div>
<div class="ttc" id="aclassarmnn_1_1_neon_layer_support_xhtml_a5f9272cdf0224364e1bb9b47efe4130a"><div class="ttname"><a href="classarmnn_1_1_neon_layer_support.xhtml#a5f9272cdf0224364e1bb9b47efe4130a">armnn::NeonLayerSupport::IsConvertFp32ToFp16Supported</a></div><div class="ttdeci">bool IsConvertFp32ToFp16Supported(const TensorInfo &amp;input, const TensorInfo &amp;output, Optional&lt; std::string &amp; &gt; reasonIfUnsupported=EmptyOptional()) const override</div><div class="ttdef"><b>Definition:</b> <a href="_neon_layer_support_8cpp_source.xhtml#l00914">NeonLayerSupport.cpp:914</a></div></div>
<div class="ttc" id="aclassarmnn_1_1_neon_layer_support_xhtml_ae13d577a85b2b121febb2fe43899fd6c"><div class="ttname"><a href="classarmnn_1_1_neon_layer_support.xhtml#ae13d577a85b2b121febb2fe43899fd6c">armnn::NeonLayerSupport::IsLogSoftmaxSupported</a></div><div class="ttdeci">bool IsLogSoftmaxSupported(const TensorInfo &amp;input, const TensorInfo &amp;output, const LogSoftmaxDescriptor &amp;descriptor, Optional&lt; std::string &amp; &gt; reasonIfUnsupported=EmptyOptional()) const override</div><div class="ttdef"><b>Definition:</b> <a href="_neon_layer_support_8cpp_source.xhtml#l01219">NeonLayerSupport.cpp:1219</a></div></div>
<div class="ttc" id="aclassarmnn_1_1_i_layer_support_xhtml_a631f893f44415523924016ed3f54a661"><div class="ttname"><a href="classarmnn_1_1_i_layer_support.xhtml#a631f893f44415523924016ed3f54a661">armnn::ILayerSupport::weights</a></div><div class="ttdeci">const TensorInfo const Convolution2dDescriptor const TensorInfo &amp; weights</div><div class="ttdef"><b>Definition:</b> <a href="_i_layer_support_8hpp_source.xhtml#l00127">ILayerSupport.hpp:127</a></div></div>
<div class="ttc" id="aclassarmnn_1_1_i_layer_support_xhtml_aec04a02758804219fb461623464a8e96"><div class="ttname"><a href="classarmnn_1_1_i_layer_support.xhtml#aec04a02758804219fb461623464a8e96">armnn::ILayerSupport::cellStateIn</a></div><div class="ttdeci">const TensorInfo const TensorInfo &amp; cellStateIn</div><div class="ttdef"><b>Definition:</b> <a href="_i_layer_support_8hpp_source.xhtml#l00287">ILayerSupport.hpp:287</a></div></div>
<div class="ttc" id="aclassarmnn_1_1_neon_layer_support_xhtml_ab747f27ee2acb8409799d6ea1af0dff7"><div class="ttname"><a href="classarmnn_1_1_neon_layer_support.xhtml#ab747f27ee2acb8409799d6ea1af0dff7">armnn::NeonLayerSupport::IsFillSupported</a></div><div class="ttdeci">bool IsFillSupported(const TensorInfo &amp;input, const TensorInfo &amp;output, const FillDescriptor &amp;descriptor, Optional&lt; std::string &amp; &gt; reasonIfUnsupported=EmptyOptional()) const override</div><div class="ttdef"><b>Definition:</b> <a href="_neon_layer_support_8cpp_source.xhtml#l01098">NeonLayerSupport.cpp:1098</a></div></div>
<div class="ttc" id="aclassarmnn_1_1_i_layer_support_xhtml_a71cf13fc7f7aeac054919e0c6dcab52e"><div class="ttname"><a href="classarmnn_1_1_i_layer_support.xhtml#a71cf13fc7f7aeac054919e0c6dcab52e">armnn::ILayerSupport::biases</a></div><div class="ttdeci">const TensorInfo const Convolution2dDescriptor const TensorInfo const Optional&lt; TensorInfo &gt; &amp; biases</div><div class="ttdef"><b>Definition:</b> <a href="_i_layer_support_8hpp_source.xhtml#l00128">ILayerSupport.hpp:128</a></div></div>
<div class="ttc" id="aclassarmnn_1_1_neon_layer_support_xhtml_ae054f879bca9ff680f7e42ae97cc5ed3"><div class="ttname"><a href="classarmnn_1_1_neon_layer_support.xhtml#ae054f879bca9ff680f7e42ae97cc5ed3">armnn::NeonLayerSupport::IsFloorSupported</a></div><div class="ttdeci">bool IsFloorSupported(const TensorInfo &amp;input, const TensorInfo &amp;output, Optional&lt; std::string &amp; &gt; reasonIfUnsupported=EmptyOptional()) const override</div><div class="ttdef"><b>Definition:</b> <a href="_neon_layer_support_8cpp_source.xhtml#l01110">NeonLayerSupport.cpp:1110</a></div></div>
<div class="ttc" id="aclassarmnn_1_1_neon_layer_support_xhtml_ad0bca4c0de78df48fd6e63a3b8239f57"><div class="ttname"><a href="classarmnn_1_1_neon_layer_support.xhtml#ad0bca4c0de78df48fd6e63a3b8239f57">armnn::NeonLayerSupport::IsGatherNdSupported</a></div><div class="ttdeci">bool IsGatherNdSupported(const TensorInfo &amp;input0, const TensorInfo &amp;input1, const TensorInfo &amp;output, Optional&lt; std::string &amp; &gt; reasonIfUnsupported) const</div><div class="ttdef"><b>Definition:</b> <a href="_neon_layer_support_8cpp_source.xhtml#l01156">NeonLayerSupport.cpp:1156</a></div></div>
<div class="ttc" id="astructarmnn_1_1_base_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_base_descriptor.xhtml">armnn::BaseDescriptor</a></div><div class="ttdoc">Base class for all descriptors.</div><div class="ttdef"><b>Definition:</b> <a href="_descriptors_8hpp_source.xhtml#l00022">Descriptors.hpp:22</a></div></div>
<div class="ttc" id="astructarmnn_1_1_origins_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_origins_descriptor.xhtml">armnn::OriginsDescriptor</a></div><div class="ttdoc">An OriginsDescriptor for the ConcatLayer.</div><div class="ttdef"><b>Definition:</b> <a href="_descriptors_8hpp_source.xhtml#l00201">Descriptors.hpp:201</a></div></div>
<div class="ttc" id="astructarmnn_1_1_reshape_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_reshape_descriptor.xhtml">armnn::ReshapeDescriptor</a></div><div class="ttdoc">A ReshapeDescriptor for the ReshapeLayer.</div><div class="ttdef"><b>Definition:</b> <a href="_descriptors_8hpp_source.xhtml#l00990">Descriptors.hpp:990</a></div></div>
<div class="ttc" id="aclassarmnn_1_1_neon_layer_support_xhtml_abe850b2a5be4ce4617cb51ceb5344756"><div class="ttname"><a href="classarmnn_1_1_neon_layer_support.xhtml#abe850b2a5be4ce4617cb51ceb5344756">armnn::NeonLayerSupport::IsConvolution3dSupported</a></div><div class="ttdeci">bool IsConvolution3dSupported(const TensorInfo &amp;input, const TensorInfo &amp;output, const Convolution3dDescriptor &amp;descriptor, const TensorInfo &amp;weights, const Optional&lt; TensorInfo &gt; &amp;biases, Optional&lt; std::string &amp; &gt; reasonIfUnsupported=EmptyOptional()) const override</div><div class="ttdef"><b>Definition:</b> <a href="_neon_layer_support_8cpp_source.xhtml#l00957">NeonLayerSupport.cpp:957</a></div></div>
<div class="ttc" id="astructarmnn_1_1_permute_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_permute_descriptor.xhtml">armnn::PermuteDescriptor</a></div><div class="ttdoc">A PermuteDescriptor for the PermuteLayer.</div><div class="ttdef"><b>Definition:</b> <a href="_descriptors_8hpp_source.xhtml#l00149">Descriptors.hpp:149</a></div></div>
<div class="ttc" id="aclassarmnn_1_1_neon_layer_support_xhtml_aaaa749f75b5ca145f6ad41aa210dbd19"><div class="ttname"><a href="classarmnn_1_1_neon_layer_support.xhtml#aaaa749f75b5ca145f6ad41aa210dbd19">armnn::NeonLayerSupport::IsStridedSliceSupported</a></div><div class="ttdeci">bool IsStridedSliceSupported(const TensorInfo &amp;input, const TensorInfo &amp;output, const StridedSliceDescriptor &amp;descriptor, Optional&lt; std::string &amp; &gt; reasonIfUnsupported=EmptyOptional()) const override</div><div class="ttdef"><b>Definition:</b> <a href="_neon_layer_support_8cpp_source.xhtml#l01563">NeonLayerSupport.cpp:1563</a></div></div>
<div class="ttc" id="astructarmnn_1_1_transpose_convolution2d_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_transpose_convolution2d_descriptor.xhtml">armnn::TransposeConvolution2dDescriptor</a></div><div class="ttdoc">A TransposeConvolution2dDescriptor for the TransposeConvolution2dLayer.</div><div class="ttdef"><b>Definition:</b> <a href="_descriptors_8hpp_source.xhtml#l01407">Descriptors.hpp:1407</a></div></div>
<div class="ttc" id="aclassarmnn_1_1_neon_layer_support_xhtml_ae5cccf9f21abbc944a20817804cfb964"><div class="ttname"><a href="classarmnn_1_1_neon_layer_support.xhtml#ae5cccf9f21abbc944a20817804cfb964">armnn::NeonLayerSupport::IsUnidirectionalSequenceLstmSupported</a></div><div class="ttdeci">bool IsUnidirectionalSequenceLstmSupported(const TensorInfo &amp;input, const TensorInfo &amp;outputStateIn, const TensorInfo &amp;cellStateIn, const TensorInfo &amp;outputStateOut, const TensorInfo &amp;cellStateOut, const TensorInfo &amp;output, const UnidirectionalSequenceLstmDescriptor &amp;descriptor, const LstmInputParamsInfo &amp;paramsInfo, Optional&lt; std::string &amp; &gt; reasonIfUnsupported) const override</div><div class="ttdef"><b>Definition:</b> <a href="_neon_layer_support_8cpp_source.xhtml#l01612">NeonLayerSupport.cpp:1612</a></div></div>
<div class="ttc" id="aclassarmnn_1_1_i_layer_support_xhtml_a311602de6b1e53b4feb3b8a37a433f44"><div class="ttname"><a href="classarmnn_1_1_i_layer_support.xhtml#a311602de6b1e53b4feb3b8a37a433f44">armnn::ILayerSupport::outputs</a></div><div class="ttdeci">const std::vector&lt; std::reference_wrapper&lt; TensorInfo &gt; &gt; &amp; outputs</div><div class="ttdef"><b>Definition:</b> <a href="_i_layer_support_8hpp_source.xhtml#l00488">ILayerSupport.hpp:488</a></div></div>
<div class="ttc" id="aclassarmnn_1_1_neon_layer_support_xhtml_ae02f78731b0d046f4ed85fcf46c5d17d"><div class="ttname"><a href="classarmnn_1_1_neon_layer_support.xhtml#ae02f78731b0d046f4ed85fcf46c5d17d">armnn::NeonLayerSupport::IsGatherSupported</a></div><div class="ttdeci">bool IsGatherSupported(const TensorInfo &amp;input0, const TensorInfo &amp;input1, const TensorInfo &amp;output, const GatherDescriptor &amp;descriptor, Optional&lt; std::string &amp; &gt; reasonIfUnsupported) const override</div><div class="ttdef"><b>Definition:</b> <a href="_neon_layer_support_8cpp_source.xhtml#l01142">NeonLayerSupport.cpp:1142</a></div></div>
<div class="ttc" id="astructarmnn_1_1_pooling2d_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_pooling2d_descriptor.xhtml">armnn::Pooling2dDescriptor</a></div><div class="ttdoc">A Pooling2dDescriptor for the Pooling2dLayer.</div><div class="ttdef"><b>Definition:</b> <a href="_descriptors_8hpp_source.xhtml#l00359">Descriptors.hpp:359</a></div></div>
<div class="ttc" id="astructarmnn_1_1_logical_binary_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_logical_binary_descriptor.xhtml">armnn::LogicalBinaryDescriptor</a></div><div class="ttdoc">A LogicalBinaryDescriptor for the LogicalBinaryLayer.</div><div class="ttdef"><b>Definition:</b> <a href="_descriptors_8hpp_source.xhtml#l01485">Descriptors.hpp:1485</a></div></div>
<div class="ttc" id="aclassarmnn_1_1_optional_xhtml"><div class="ttname"><a href="classarmnn_1_1_optional.xhtml">armnn::Optional</a></div><div class="ttdef"><b>Definition:</b> <a href="_optional_8hpp_source.xhtml#l00270">Optional.hpp:270</a></div></div>
<div class="ttc" id="aclassarmnn_1_1_neon_layer_support_xhtml_acaca6012c89942f00869d80c389d5e8a"><div class="ttname"><a href="classarmnn_1_1_neon_layer_support.xhtml#acaca6012c89942f00869d80c389d5e8a">armnn::NeonLayerSupport::IsLogicalBinarySupported</a></div><div class="ttdeci">bool IsLogicalBinarySupported(const TensorInfo &amp;input0, const TensorInfo &amp;input1, const TensorInfo &amp;output, const LogicalBinaryDescriptor &amp;descriptor, Optional&lt; std::string &amp; &gt; reasonIfUnsupported) const override</div><div class="ttdef"><b>Definition:</b> <a href="_neon_layer_support_8cpp_source.xhtml#l01194">NeonLayerSupport.cpp:1194</a></div></div>
<div class="ttc" id="aclassarmnn_1_1_neon_layer_support_xhtml_a8a520378fa336d155e23478456eb45fe"><div class="ttname"><a href="classarmnn_1_1_neon_layer_support.xhtml#a8a520378fa336d155e23478456eb45fe">armnn::NeonLayerSupport::IsSubtractionSupported</a></div><div class="ttdeci">bool IsSubtractionSupported(const TensorInfo &amp;input0, const TensorInfo &amp;input1, const TensorInfo &amp;output, Optional&lt; std::string &amp; &gt; reasonIfUnsupported=EmptyOptional()) const override</div><div class="ttdef"><b>Definition:</b> <a href="_neon_layer_support_8cpp_source.xhtml#l01575">NeonLayerSupport.cpp:1575</a></div></div>
<div class="ttc" id="aclassarmnn_1_1_neon_layer_support_xhtml_a866844299dc03c65ca41be5990bf19e8"><div class="ttname"><a href="classarmnn_1_1_neon_layer_support.xhtml#a866844299dc03c65ca41be5990bf19e8">armnn::NeonLayerSupport::IsDequantizeSupported</a></div><div class="ttdeci">bool IsDequantizeSupported(const TensorInfo &amp;input, const TensorInfo &amp;output, Optional&lt; std::string &amp; &gt; reasonIfUnsupported=EmptyOptional()) const override</div><div class="ttdef"><b>Definition:</b> <a href="_neon_layer_support_8cpp_source.xhtml#l01019">NeonLayerSupport.cpp:1019</a></div></div>
<div class="ttc" id="aclassarmnn_1_1_neon_layer_support_xhtml_ae3b8e44b40a9c02ef372081ee2e454a1"><div class="ttname"><a href="classarmnn_1_1_neon_layer_support.xhtml#ae3b8e44b40a9c02ef372081ee2e454a1">armnn::NeonLayerSupport::IsDilatedDepthwiseConvolutionSupported</a></div><div class="ttdeci">bool IsDilatedDepthwiseConvolutionSupported(const TensorInfo &amp;input, const TensorInfo &amp;output, const DepthwiseConvolution2dDescriptor &amp;descriptor, const TensorInfo &amp;weights, const Optional&lt; TensorInfo &gt; &amp;biases, Optional&lt; std::string &amp; &gt; reason=EmptyOptional()) const override</div><div class="ttdef"><b>Definition:</b> <a href="_neon_layer_support_8cpp_source.xhtml#l01029">NeonLayerSupport.cpp:1029</a></div></div>
<div class="ttc" id="astructarmnn_1_1_arg_min_max_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_arg_min_max_descriptor.xhtml">armnn::ArgMinMaxDescriptor</a></div><div class="ttdoc">An ArgMinMaxDescriptor for ArgMinMaxLayer.</div><div class="ttdef"><b>Definition:</b> <a href="_descriptors_8hpp_source.xhtml#l00067">Descriptors.hpp:67</a></div></div>
<div class="ttc" id="aclassarmnn_1_1_neon_layer_support_xhtml_a052a3d7389be3a0993c9f9a508fa435e"><div class="ttname"><a href="classarmnn_1_1_neon_layer_support.xhtml#a052a3d7389be3a0993c9f9a508fa435e">armnn::NeonLayerSupport::IsQLstmSupported</a></div><div class="ttdeci">bool IsQLstmSupported(const TensorInfo &amp;input, const TensorInfo &amp;previousOutputIn, const TensorInfo &amp;previousCellStateIn, const TensorInfo &amp;outputStateOut, const TensorInfo &amp;cellStateOut, const TensorInfo &amp;output, const QLstmDescriptor &amp;descriptor, const LstmInputParamsInfo &amp;paramsInfo, Optional&lt; std::string &amp; &gt; reasonIfUnsupported=EmptyOptional()) const override</div><div class="ttdef"><b>Definition:</b> <a href="_neon_layer_support_8cpp_source.xhtml#l01375">NeonLayerSupport.cpp:1375</a></div></div>
<div class="ttc" id="aclassarmnn_1_1_neon_layer_support_xhtml_a70c3043f5b6dd3091646fb2c1648a5f5"><div class="ttname"><a href="classarmnn_1_1_neon_layer_support.xhtml#a70c3043f5b6dd3091646fb2c1648a5f5">armnn::NeonLayerSupport::IsPooling3dSupported</a></div><div class="ttdeci">bool IsPooling3dSupported(const TensorInfo &amp;input, const TensorInfo &amp;output, const Pooling3dDescriptor &amp;descriptor, Optional&lt; std::string &amp; &gt; reasonIfUnsupported=EmptyOptional()) const override</div><div class="ttdef"><b>Definition:</b> <a href="_neon_layer_support_8cpp_source.xhtml#l01359">NeonLayerSupport.cpp:1359</a></div></div>
<div class="ttc" id="astructarmnn_1_1_quantized_lstm_input_params_info_xhtml"><div class="ttname"><a href="structarmnn_1_1_quantized_lstm_input_params_info.xhtml">armnn::QuantizedLstmInputParamsInfo</a></div><div class="ttdef"><b>Definition:</b> <a href="_quantized_lstm_params_8hpp_source.xhtml#l00119">QuantizedLstmParams.hpp:119</a></div></div>
<div class="ttc" id="aclassarmnn_1_1_neon_layer_support_xhtml_a7574a8a0dbde3c5058b24b43c4c88125"><div class="ttname"><a href="classarmnn_1_1_neon_layer_support.xhtml#a7574a8a0dbde3c5058b24b43c4c88125">armnn::NeonLayerSupport::IsQuantizedLstmSupported</a></div><div class="ttdeci">bool IsQuantizedLstmSupported(const TensorInfo &amp;input, const TensorInfo &amp;cellStateIn, const TensorInfo &amp;outputStateIn, const TensorInfo &amp;cellStateOut, const TensorInfo &amp;outputStateOut, const QuantizedLstmInputParamsInfo &amp;paramsInfo, Optional&lt; std::string &amp; &gt; reasonIfUnsupported=EmptyOptional()) const override</div><div class="ttdef"><b>Definition:</b> <a href="_neon_layer_support_8cpp_source.xhtml#l01420">NeonLayerSupport.cpp:1420</a></div></div>
<div class="ttc" id="aclassarmnn_1_1_i_layer_support_xhtml_a4e25e081529b7e99e5e454d916ed83fb"><div class="ttname"><a href="classarmnn_1_1_i_layer_support.xhtml#a4e25e081529b7e99e5e454d916ed83fb">armnn::ILayerSupport::output</a></div><div class="ttdeci">const TensorInfo &amp; output</div><div class="ttdef"><b>Definition:</b> <a href="_i_layer_support_8hpp_source.xhtml#l00041">ILayerSupport.hpp:41</a></div></div>
<div class="ttc" id="aclassarmnn_1_1_neon_layer_support_xhtml_ac92df5c79bae4ccdc68d9d2045fa2110"><div class="ttname"><a href="classarmnn_1_1_neon_layer_support.xhtml#ac92df5c79bae4ccdc68d9d2045fa2110">armnn::NeonLayerSupport::IsMaximumSupported</a></div><div class="ttdeci">bool IsMaximumSupported(const TensorInfo &amp;input0, const TensorInfo &amp;input1, const TensorInfo &amp;output, Optional&lt; std::string &amp; &gt; reasonIfUnsupported=EmptyOptional()) const override</div><div class="ttdef"><b>Definition:</b> <a href="_neon_layer_support_8cpp_source.xhtml#l01251">NeonLayerSupport.cpp:1251</a></div></div>
<div class="ttc" id="aclassarmnn_1_1_neon_layer_support_xhtml_a7249912502bfa13dad25038e8fb9379b"><div class="ttname"><a href="classarmnn_1_1_neon_layer_support.xhtml#a7249912502bfa13dad25038e8fb9379b">armnn::NeonLayerSupport::IsFullyConnectedSupported</a></div><div class="ttdeci">bool IsFullyConnectedSupported(const TensorInfo &amp;input, const TensorInfo &amp;output, const TensorInfo &amp;weights, const TensorInfo &amp;biases, const FullyConnectedDescriptor &amp;descriptor, Optional&lt; std::string &amp; &gt; reasonIfUnsupported=EmptyOptional()) const override</div><div class="ttdef"><b>Definition:</b> <a href="_neon_layer_support_8cpp_source.xhtml#l01125">NeonLayerSupport.cpp:1125</a></div></div>
<div class="ttc" id="aclassarmnn_1_1_i_layer_support_xhtml_a44eb2a514bddb31fe20f9e4f04159c9f"><div class="ttname"><a href="classarmnn_1_1_i_layer_support.xhtml#a44eb2a514bddb31fe20f9e4f04159c9f">armnn::ILayerSupport::outputStateOut</a></div><div class="ttdeci">const TensorInfo const TensorInfo const TensorInfo const TensorInfo &amp; outputStateOut</div><div class="ttdef"><b>Definition:</b> <a href="_i_layer_support_8hpp_source.xhtml#l00289">ILayerSupport.hpp:289</a></div></div>
<div class="ttc" id="astructarmnn_1_1_instance_normalization_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_instance_normalization_descriptor.xhtml">armnn::InstanceNormalizationDescriptor</a></div><div class="ttdoc">An InstanceNormalizationDescriptor for InstanceNormalizationLayer.</div><div class="ttdef"><b>Definition:</b> <a href="_descriptors_8hpp_source.xhtml#l00835">Descriptors.hpp:835</a></div></div>
<div class="ttc" id="aclassarmnn_1_1_neon_layer_support_xhtml_a0e8bdd2741997b0cdc329cbfcaeebf93"><div class="ttname"><a href="classarmnn_1_1_neon_layer_support.xhtml#a0e8bdd2741997b0cdc329cbfcaeebf93">armnn::NeonLayerSupport::NeonLayerSupport</a></div><div class="ttdeci">NeonLayerSupport()</div><div class="ttdef"><b>Definition:</b> <a href="_neon_layer_support_8cpp_source.xhtml#l00164">NeonLayerSupport.cpp:164</a></div></div>
<div class="ttc" id="aclassarmnn_1_1_neon_layer_support_xhtml"><div class="ttname"><a href="classarmnn_1_1_neon_layer_support.xhtml">armnn::NeonLayerSupport</a></div><div class="ttdef"><b>Definition:</b> <a href="_neon_layer_support_8hpp_source.xhtml#l00014">NeonLayerSupport.hpp:14</a></div></div>
<div class="ttc" id="aclassarmnn_1_1_i_layer_support_xhtml_ae1ee2d524d4252bffc0ed67e75882952"><div class="ttname"><a href="classarmnn_1_1_i_layer_support.xhtml#ae1ee2d524d4252bffc0ed67e75882952">armnn::ILayerSupport::cellStateOut</a></div><div class="ttdeci">const TensorInfo const TensorInfo const TensorInfo const TensorInfo const TensorInfo &amp; cellStateOut</div><div class="ttdef"><b>Definition:</b> <a href="_i_layer_support_8hpp_source.xhtml#l00290">ILayerSupport.hpp:290</a></div></div>
<div class="ttc" id="aclassarmnn_1_1_neon_layer_support_xhtml_aef4e4cfc054c2fd0e9bd0947909ebe83"><div class="ttname"><a href="classarmnn_1_1_neon_layer_support.xhtml#aef4e4cfc054c2fd0e9bd0947909ebe83">armnn::NeonLayerSupport::IsPadSupported</a></div><div class="ttdeci">bool IsPadSupported(const TensorInfo &amp;input, const TensorInfo &amp;output, const PadDescriptor &amp;descriptor, Optional&lt; std::string &amp; &gt; reasonIfUnsupported=EmptyOptional()) const override</div><div class="ttdef"><b>Definition:</b> <a href="_neon_layer_support_8cpp_source.xhtml#l01331">NeonLayerSupport.cpp:1331</a></div></div>
<div class="ttc" id="aclassarmnn_1_1_neon_layer_support_xhtml_a1f75cea2b43e602f4b99d60375d41a8a"><div class="ttname"><a href="classarmnn_1_1_neon_layer_support.xhtml#a1f75cea2b43e602f4b99d60375d41a8a">armnn::NeonLayerSupport::IsLayerSupported</a></div><div class="ttdeci">bool IsLayerSupported(const LayerType &amp;type, const std::vector&lt; TensorInfo &gt; &amp;infos, const BaseDescriptor &amp;descriptor, const Optional&lt; LstmInputParamsInfo &gt; &amp;lstmParamsInfo, const Optional&lt; QuantizedLstmInputParamsInfo &gt; &amp;quantizedLstmParamsInfo, Optional&lt; std::string &amp; &gt; reasonIfUnsupported) const override</div><div class="ttdef"><b>Definition:</b> <a href="_neon_layer_support_8cpp_source.xhtml#l00671">NeonLayerSupport.cpp:671</a></div></div>
<div class="ttc" id="a_layer_support_base_8hpp_xhtml"><div class="ttname"><a href="_layer_support_base_8hpp.xhtml">LayerSupportBase.hpp</a></div></div>
<div class="ttc" id="astructarmnn_1_1_space_to_batch_nd_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_space_to_batch_nd_descriptor.xhtml">armnn::SpaceToBatchNdDescriptor</a></div><div class="ttdoc">A SpaceToBatchNdDescriptor for the SpaceToBatchNdLayer.</div><div class="ttdef"><b>Definition:</b> <a href="_descriptors_8hpp_source.xhtml#l01010">Descriptors.hpp:1010</a></div></div>
<div class="ttc" id="aclassarmnn_1_1_neon_layer_support_xhtml_a4bd807090f4cb45bbfaa9c67e49532f5"><div class="ttname"><a href="classarmnn_1_1_neon_layer_support.xhtml#a4bd807090f4cb45bbfaa9c67e49532f5">armnn::NeonLayerSupport::IsConvolution2dSupported</a></div><div class="ttdeci">bool IsConvolution2dSupported(const TensorInfo &amp;input, const TensorInfo &amp;output, const Convolution2dDescriptor &amp;descriptor, const TensorInfo &amp;weights, const Optional&lt; TensorInfo &gt; &amp;biases, Optional&lt; std::string &amp; &gt; reasonIfUnsupported=EmptyOptional()) const override</div><div class="ttdef"><b>Definition:</b> <a href="_neon_layer_support_8cpp_source.xhtml#l00924">NeonLayerSupport.cpp:924</a></div></div>
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="dir_68267d1309a1af8e8297ef4c3efbcdba.xhtml">src</a></li><li class="navelem"><a class="el" href="dir_0f3cdec46afbc61a1ded8e1687c9c9a0.xhtml">backends</a></li><li class="navelem"><a class="el" href="dir_d86eb514662c7c08e168285f21d00ea1.xhtml">neon</a></li><li class="navelem"><a class="el" href="_neon_layer_support_8hpp.xhtml">NeonLayerSupport.hpp</a></li>
    <li class="footer">Generated on Thu May 18 2023 10:35:42 for ArmNN by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.17 </li>
  </ul>
</div>
</body>
</html>
