<!-- Copyright (c) 2020 ARM Limited. -->
<!--                                 -->
<!-- SPDX-License-Identifier: MIT    -->
<!--                                 -->
<!-- HTML header for doxygen 1.8.13-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.13"/>
<meta name="robots" content="NOINDEX, NOFOLLOW" />
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>ArmNN: ClassifierTestCase&lt; TTestCaseDatabase, TModel &gt; Class Template Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script><script type="text/javascript" src="http://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="stylesheet.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <img alt="ArmNN" src="Arm_NN_horizontal_blue.png" style="max-width: 10rem; margin-top: .5rem; margin-left 10px"/>
  <td style="padding-left: 0.5em;">
   <div id="projectname">
   &#160;<span id="projectnumber">22.02</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.13 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
$(document).ready(function(){initNavTree('classarmnn_1_1test_1_1_classifier_test_case.xhtml','');});
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="summary">
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="classarmnn_1_1test_1_1_classifier_test_case-members.xhtml">List of all members</a>  </div>
  <div class="headertitle">
<div class="title">ClassifierTestCase&lt; TTestCaseDatabase, TModel &gt; Class Template Reference</div>  </div>
</div><!--header-->
<div class="contents">

<p><code>#include &lt;<a class="el" href="_inference_test_8hpp_source.xhtml">InferenceTest.hpp</a>&gt;</code></p>
<div class="dynheader">
Inheritance diagram for ClassifierTestCase&lt; TTestCaseDatabase, TModel &gt;:</div>
<div class="dyncontent">
 <div class="center">
  <img src="classarmnn_1_1test_1_1_classifier_test_case.png" usemap="#ClassifierTestCase_3C_20TTestCaseDatabase_2C_20TModel_20_3E_map" alt=""/>
  <map id="ClassifierTestCase_3C_20TTestCaseDatabase_2C_20TModel_20_3E_map" name="ClassifierTestCase_3C_20TTestCaseDatabase_2C_20TModel_20_3E_map">
<area href="classarmnn_1_1test_1_1_inference_model_test_case.xhtml" alt="InferenceModelTestCase&lt; TModel &gt;" shape="rect" coords="0,56,304,80"/>
<area href="classarmnn_1_1test_1_1_i_inference_test_case.xhtml" alt="IInferenceTestCase" shape="rect" coords="0,0,304,24"/>
</map>
 </div></div>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:af79ae2b63d751cf7eb937ba7cd190217"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1test_1_1_classifier_test_case.xhtml#af79ae2b63d751cf7eb937ba7cd190217">ClassifierTestCase</a> (int &amp;numInferencesRef, int &amp;numCorrectInferencesRef, const std::vector&lt; unsigned int &gt; &amp;validationPredictions, std::vector&lt; unsigned int &gt; *validationPredictionsOut, TModel &amp;model, unsigned int testCaseId, unsigned int label, std::vector&lt; typename TModel::DataType &gt; modelInput)</td></tr>
<tr class="separator:af79ae2b63d751cf7eb937ba7cd190217"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a27343faac4033409ef6f5a60e025bf65"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="namespacearmnn_1_1test.xhtml#a05b3d6105613d2d14099667a6b8ca67b">TestCaseResult</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1test_1_1_classifier_test_case.xhtml#a27343faac4033409ef6f5a60e025bf65">ProcessResult</a> (const <a class="el" href="structarmnn_1_1test_1_1_inference_test_options.xhtml">InferenceTestOptions</a> &amp;params) override</td></tr>
<tr class="separator:a27343faac4033409ef6f5a60e025bf65"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pub_methods_classarmnn_1_1test_1_1_inference_model_test_case"><td colspan="2" onclick="javascript:toggleInherit('pub_methods_classarmnn_1_1test_1_1_inference_model_test_case')"><img src="closed.png" alt="-"/>&#160;Public Member Functions inherited from <a class="el" href="classarmnn_1_1test_1_1_inference_model_test_case.xhtml">InferenceModelTestCase&lt; TModel &gt;</a></td></tr>
<tr class="memitem:a998ab91a5a2470d078896ac32229eff8 inherit pub_methods_classarmnn_1_1test_1_1_inference_model_test_case"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1test_1_1_inference_model_test_case.xhtml#a998ab91a5a2470d078896ac32229eff8">InferenceModelTestCase</a> (TModel &amp;model, unsigned int testCaseId, const std::vector&lt; <a class="el" href="namespacearmnn_utils.xhtml#ac7bd4ea667375c07718086368507ed44">armnnUtils::TContainer</a> &gt; &amp;inputs, const std::vector&lt; unsigned int &gt; &amp;outputSizes)</td></tr>
<tr class="separator:a998ab91a5a2470d078896ac32229eff8 inherit pub_methods_classarmnn_1_1test_1_1_inference_model_test_case"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa257380f53ef27922dda47c7e41bba88 inherit pub_methods_classarmnn_1_1test_1_1_inference_model_test_case"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1test_1_1_inference_model_test_case.xhtml#aa257380f53ef27922dda47c7e41bba88">Run</a> () override</td></tr>
<tr class="separator:aa257380f53ef27922dda47c7e41bba88 inherit pub_methods_classarmnn_1_1test_1_1_inference_model_test_case"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pub_methods_classarmnn_1_1test_1_1_i_inference_test_case"><td colspan="2" onclick="javascript:toggleInherit('pub_methods_classarmnn_1_1test_1_1_i_inference_test_case')"><img src="closed.png" alt="-"/>&#160;Public Member Functions inherited from <a class="el" href="classarmnn_1_1test_1_1_i_inference_test_case.xhtml">IInferenceTestCase</a></td></tr>
<tr class="memitem:a99e369e14a0ce3322d3fd5520b819ab3 inherit pub_methods_classarmnn_1_1test_1_1_i_inference_test_case"><td class="memItemLeft" align="right" valign="top">virtual&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1test_1_1_i_inference_test_case.xhtml#a99e369e14a0ce3322d3fd5520b819ab3">~IInferenceTestCase</a> ()</td></tr>
<tr class="separator:a99e369e14a0ce3322d3fd5520b819ab3 inherit pub_methods_classarmnn_1_1test_1_1_i_inference_test_case"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="inherited"></a>
Additional Inherited Members</h2></td></tr>
<tr class="inherit_header pro_methods_classarmnn_1_1test_1_1_inference_model_test_case"><td colspan="2" onclick="javascript:toggleInherit('pro_methods_classarmnn_1_1test_1_1_inference_model_test_case')"><img src="closed.png" alt="-"/>&#160;Protected Member Functions inherited from <a class="el" href="classarmnn_1_1test_1_1_inference_model_test_case.xhtml">InferenceModelTestCase&lt; TModel &gt;</a></td></tr>
<tr class="memitem:a4ab19ef735b92c4d4f688f0659e5565e inherit pro_methods_classarmnn_1_1test_1_1_inference_model_test_case"><td class="memItemLeft" align="right" valign="top">unsigned int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1test_1_1_inference_model_test_case.xhtml#a4ab19ef735b92c4d4f688f0659e5565e">GetTestCaseId</a> () const</td></tr>
<tr class="separator:a4ab19ef735b92c4d4f688f0659e5565e inherit pro_methods_classarmnn_1_1test_1_1_inference_model_test_case"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab0e1b0a762f51bb13f98060927214629 inherit pro_methods_classarmnn_1_1test_1_1_inference_model_test_case"><td class="memItemLeft" align="right" valign="top">const std::vector&lt; <a class="el" href="namespacearmnn_utils.xhtml#ac7bd4ea667375c07718086368507ed44">armnnUtils::TContainer</a> &gt; &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1test_1_1_inference_model_test_case.xhtml#ab0e1b0a762f51bb13f98060927214629">GetOutputs</a> () const</td></tr>
<tr class="separator:ab0e1b0a762f51bb13f98060927214629 inherit pro_methods_classarmnn_1_1test_1_1_inference_model_test_case"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><h3>template&lt;typename TTestCaseDatabase, typename TModel&gt;<br />
class armnn::test::ClassifierTestCase&lt; TTestCaseDatabase, TModel &gt;</h3>


<p class="definition">Definition at line <a class="el" href="_inference_test_8hpp_source.xhtml#l00151">151</a> of file <a class="el" href="_inference_test_8hpp_source.xhtml">InferenceTest.hpp</a>.</p>
</div><h2 class="groupheader">Constructor &amp; Destructor Documentation</h2>
<a id="af79ae2b63d751cf7eb937ba7cd190217"></a>
<h2 class="memtitle"><span class="permalink"><a href="#af79ae2b63d751cf7eb937ba7cd190217">&#9670;&nbsp;</a></span>ClassifierTestCase()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarmnn_1_1test_1_1_classifier_test_case.xhtml">ClassifierTestCase</a> </td>
          <td>(</td>
          <td class="paramtype">int &amp;&#160;</td>
          <td class="paramname"><em>numInferencesRef</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int &amp;&#160;</td>
          <td class="paramname"><em>numCorrectInferencesRef</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const std::vector&lt; unsigned int &gt; &amp;&#160;</td>
          <td class="paramname"><em>validationPredictions</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">std::vector&lt; unsigned int &gt; *&#160;</td>
          <td class="paramname"><em>validationPredictionsOut</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">TModel &amp;&#160;</td>
          <td class="paramname"><em>model</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">unsigned int&#160;</td>
          <td class="paramname"><em>testCaseId</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">unsigned int&#160;</td>
          <td class="paramname"><em>label</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">std::vector&lt; typename TModel::DataType &gt;&#160;</td>
          <td class="paramname"><em>modelInput</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_inference_test_8inl_source.xhtml#l00033">33</a> of file <a class="el" href="_inference_test_8inl_source.xhtml">InferenceTest.inl</a>.</p>

<p class="reference">References <a class="el" href="_assert_8hpp_source.xhtml#l00015">ARMNN_ASSERT_MSG</a>, <a class="el" href="namespacearmnn.xhtml#a56943a0946e5f15e5e58054b8e7a04a4a9bc35e069257a508e14ed82965a8661d">armnn::Dequantize</a>, and <a class="el" href="_ignore_unused_8hpp_source.xhtml#l00014">armnn::IgnoreUnused()</a>.</p>
<div class="fragment"><div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;    : <a class="code" href="classarmnn_1_1test_1_1_inference_model_test_case.xhtml">InferenceModelTestCase&lt;TModel&gt;</a>(</div><div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;            model, testCaseId, std::vector&lt;armnnUtils::TContainer&gt;{ modelInput }, { model.GetOutputSize() })</div><div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;    , m_Label(label)</div><div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;    , m_QuantizationParams(model.GetQuantizationParams())</div><div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;    , m_NumInferencesRef(numInferencesRef)</div><div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;    , m_NumCorrectInferencesRef(numCorrectInferencesRef)</div><div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;    , m_ValidationPredictions(validationPredictions)</div><div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;    , m_ValidationPredictionsOut(validationPredictionsOut)</div><div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;{</div><div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;}</div><div class="ttc" id="classarmnn_1_1test_1_1_inference_model_test_case_xhtml"><div class="ttname"><a href="classarmnn_1_1test_1_1_inference_model_test_case.xhtml">armnn::test::InferenceModelTestCase</a></div><div class="ttdef"><b>Definition:</b> <a href="_inference_test_8hpp_source.xhtml#l00112">InferenceTest.hpp:112</a></div></div>
</div><!-- fragment -->
</div>
</div>
<h2 class="groupheader">Member Function Documentation</h2>
<a id="a27343faac4033409ef6f5a60e025bf65"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a27343faac4033409ef6f5a60e025bf65">&#9670;&nbsp;</a></span>ProcessResult()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="namespacearmnn_1_1test.xhtml#a05b3d6105613d2d14099667a6b8ca67b">TestCaseResult</a> ProcessResult </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="structarmnn_1_1test_1_1_inference_test_options.xhtml">InferenceTestOptions</a> &amp;&#160;</td>
          <td class="paramname"><em>params</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Implements <a class="el" href="classarmnn_1_1test_1_1_i_inference_test_case.xhtml#a1b6e7a22d06d146f1da514a186dcdc02">IInferenceTestCase</a>.</p>

<p class="definition">Definition at line <a class="el" href="_inference_test_8inl_source.xhtml#l00124">124</a> of file <a class="el" href="_inference_test_8inl_source.xhtml">InferenceTest.inl</a>.</p>

<p class="reference">References <a class="el" href="_logging_8hpp_source.xhtml#l00205">ARMNN_LOG</a>, <a class="el" href="namespacearmnn.xhtml#a4dc0adc6737b5944e7671bee71788407acb5e100e5a9a3e7f6d1fd97512215282">armnn::error</a>, <a class="el" href="namespacearmnn_1_1test.xhtml#a05b3d6105613d2d14099667a6b8ca67bad7c8c85bf79bbe1b7188497c32c3b0ca">armnn::test::Failed</a>, <a class="el" href="_inference_test_8hpp_source.xhtml#l00141">InferenceModelTestCase&lt; TModel &gt;::GetOutputs()</a>, <a class="el" href="_inference_test_8hpp_source.xhtml#l00140">InferenceModelTestCase&lt; TModel &gt;::GetTestCaseId()</a>, <a class="el" href="namespacearmnn.xhtml#a4dc0adc6737b5944e7671bee71788407acaf9b6b99962bf5c2264824231d7a40c">armnn::info</a>, <a class="el" href="_inference_test_8hpp_source.xhtml#l00061">InferenceTestOptions::m_IterationCount</a>, <a class="el" href="_numeric_cast_8hpp_source.xhtml#l00035">armnn::numeric_cast()</a>, and <a class="el" href="namespacearmnn_1_1test.xhtml#a05b3d6105613d2d14099667a6b8ca67baa60852f204ed8028c1c58808b746d115">armnn::test::Ok</a>.</p>
<div class="fragment"><div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;{</div><div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;    <span class="keyword">auto</span>&amp; output = this-&gt;<a class="code" href="classarmnn_1_1test_1_1_inference_model_test_case.xhtml#ab0e1b0a762f51bb13f98060927214629">GetOutputs</a>()[0];</div><div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;    <span class="keyword">const</span> <span class="keyword">auto</span> testCaseId = this-&gt;<a class="code" href="classarmnn_1_1test_1_1_inference_model_test_case.xhtml#a4ab19ef735b92c4d4f688f0659e5565e">GetTestCaseId</a>();</div><div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;</div><div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;    ClassifierResultProcessor resultProcessor(m_QuantizationParams.first, m_QuantizationParams.second);</div><div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;    mapbox::util::apply_visitor(resultProcessor, output);</div><div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;</div><div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;    <a class="code" href="_logging_8hpp.xhtml#a7b6ad073975f437ec38ca7d20154727f">ARMNN_LOG</a>(info) &lt;&lt; <span class="stringliteral">&quot;= Prediction values for test #&quot;</span> &lt;&lt; testCaseId;</div><div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;    <span class="keyword">auto</span> it = resultProcessor.GetResultMap().rbegin();</div><div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;    <span class="keywordflow">for</span> (<span class="keywordtype">int</span> i=0; i&lt;5 &amp;&amp; it != resultProcessor.GetResultMap().rend(); ++i)</div><div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;    {</div><div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;        <a class="code" href="_logging_8hpp.xhtml#a7b6ad073975f437ec38ca7d20154727f">ARMNN_LOG</a>(info) &lt;&lt; <span class="stringliteral">&quot;Top(&quot;</span> &lt;&lt; (i+1) &lt;&lt; <span class="stringliteral">&quot;) prediction is &quot;</span> &lt;&lt; it-&gt;second &lt;&lt;</div><div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;          <span class="stringliteral">&quot; with value: &quot;</span> &lt;&lt; (it-&gt;first);</div><div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;        ++it;</div><div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;    }</div><div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;</div><div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;    <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> prediction = 0;</div><div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;    mapbox::util::apply_visitor([&amp;](<span class="keyword">auto</span>&amp;&amp; value)</div><div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;                         {</div><div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;                             prediction = <a class="code" href="namespacearmnn.xhtml#a375ca3cff9f1b005d1412dc5f3cf5b6e">armnn::numeric_cast</a>&lt;<span class="keywordtype">unsigned</span> <span class="keywordtype">int</span>&gt;(</div><div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;                                     std::distance(value.begin(), std::max_element(value.begin(), value.end())));</div><div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;                         },</div><div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;                         output);</div><div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;</div><div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;    <span class="comment">// If we&#39;re just running the defaultTestCaseIds, each one must be classified correctly.</span></div><div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;    <span class="keywordflow">if</span> (params.<a class="code" href="structarmnn_1_1test_1_1_inference_test_options.xhtml#ac9c49972e7f8db643b3c72aa782278df">m_IterationCount</a> == 0 &amp;&amp; prediction != m_Label)</div><div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;    {</div><div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;        <a class="code" href="_logging_8hpp.xhtml#a7b6ad073975f437ec38ca7d20154727f">ARMNN_LOG</a>(error) &lt;&lt; <span class="stringliteral">&quot;Prediction for test case &quot;</span> &lt;&lt; testCaseId &lt;&lt; <span class="stringliteral">&quot; (&quot;</span> &lt;&lt; prediction &lt;&lt; <span class="stringliteral">&quot;)&quot;</span> &lt;&lt;</div><div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;            <span class="stringliteral">&quot; is incorrect (should be &quot;</span> &lt;&lt; m_Label &lt;&lt; <span class="stringliteral">&quot;)&quot;</span>;</div><div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;        <span class="keywordflow">return</span> <a class="code" href="namespacearmnn_1_1test.xhtml#a05b3d6105613d2d14099667a6b8ca67bad7c8c85bf79bbe1b7188497c32c3b0ca">TestCaseResult::Failed</a>;</div><div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;    }</div><div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;</div><div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160;    <span class="comment">// If a validation file was provided as input, it checks that the prediction matches.</span></div><div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;    <span class="keywordflow">if</span> (!m_ValidationPredictions.empty() &amp;&amp; prediction != m_ValidationPredictions[testCaseId])</div><div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160;    {</div><div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160;        <a class="code" href="_logging_8hpp.xhtml#a7b6ad073975f437ec38ca7d20154727f">ARMNN_LOG</a>(error) &lt;&lt; <span class="stringliteral">&quot;Prediction for test case &quot;</span> &lt;&lt; testCaseId &lt;&lt; <span class="stringliteral">&quot; (&quot;</span> &lt;&lt; prediction &lt;&lt; <span class="stringliteral">&quot;)&quot;</span> &lt;&lt;</div><div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160;            <span class="stringliteral">&quot; doesn&#39;t match the prediction in the validation file (&quot;</span> &lt;&lt; m_ValidationPredictions[testCaseId] &lt;&lt; <span class="stringliteral">&quot;)&quot;</span>;</div><div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160;        <span class="keywordflow">return</span> <a class="code" href="namespacearmnn_1_1test.xhtml#a05b3d6105613d2d14099667a6b8ca67bad7c8c85bf79bbe1b7188497c32c3b0ca">TestCaseResult::Failed</a>;</div><div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160;    }</div><div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;</div><div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160;    <span class="comment">// If a validation file was requested as output, it stores the predictions.</span></div><div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160;    <span class="keywordflow">if</span> (m_ValidationPredictionsOut)</div><div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160;    {</div><div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160;        m_ValidationPredictionsOut-&gt;push_back(prediction);</div><div class="line"><a name="l00169"></a><span class="lineno">  169</span>&#160;    }</div><div class="line"><a name="l00170"></a><span class="lineno">  170</span>&#160;</div><div class="line"><a name="l00171"></a><span class="lineno">  171</span>&#160;    <span class="comment">// Updates accuracy stats.</span></div><div class="line"><a name="l00172"></a><span class="lineno">  172</span>&#160;    m_NumInferencesRef++;</div><div class="line"><a name="l00173"></a><span class="lineno">  173</span>&#160;    <span class="keywordflow">if</span> (prediction == m_Label)</div><div class="line"><a name="l00174"></a><span class="lineno">  174</span>&#160;    {</div><div class="line"><a name="l00175"></a><span class="lineno">  175</span>&#160;        m_NumCorrectInferencesRef++;</div><div class="line"><a name="l00176"></a><span class="lineno">  176</span>&#160;    }</div><div class="line"><a name="l00177"></a><span class="lineno">  177</span>&#160;</div><div class="line"><a name="l00178"></a><span class="lineno">  178</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="namespacearmnn_1_1test.xhtml#a05b3d6105613d2d14099667a6b8ca67baa60852f204ed8028c1c58808b746d115">TestCaseResult::Ok</a>;</div><div class="line"><a name="l00179"></a><span class="lineno">  179</span>&#160;}</div><div class="ttc" id="_logging_8hpp_xhtml_a7b6ad073975f437ec38ca7d20154727f"><div class="ttname"><a href="_logging_8hpp.xhtml#a7b6ad073975f437ec38ca7d20154727f">ARMNN_LOG</a></div><div class="ttdeci">#define ARMNN_LOG(severity)</div><div class="ttdef"><b>Definition:</b> <a href="_logging_8hpp_source.xhtml#l00205">Logging.hpp:205</a></div></div>
<div class="ttc" id="classarmnn_1_1test_1_1_inference_model_test_case_xhtml_ab0e1b0a762f51bb13f98060927214629"><div class="ttname"><a href="classarmnn_1_1test_1_1_inference_model_test_case.xhtml#ab0e1b0a762f51bb13f98060927214629">armnn::test::InferenceModelTestCase::GetOutputs</a></div><div class="ttdeci">const std::vector&lt; armnnUtils::TContainer &gt; &amp; GetOutputs() const</div><div class="ttdef"><b>Definition:</b> <a href="_inference_test_8hpp_source.xhtml#l00141">InferenceTest.hpp:141</a></div></div>
<div class="ttc" id="classarmnn_1_1test_1_1_inference_model_test_case_xhtml_a4ab19ef735b92c4d4f688f0659e5565e"><div class="ttname"><a href="classarmnn_1_1test_1_1_inference_model_test_case.xhtml#a4ab19ef735b92c4d4f688f0659e5565e">armnn::test::InferenceModelTestCase::GetTestCaseId</a></div><div class="ttdeci">unsigned int GetTestCaseId() const</div><div class="ttdef"><b>Definition:</b> <a href="_inference_test_8hpp_source.xhtml#l00140">InferenceTest.hpp:140</a></div></div>
<div class="ttc" id="namespacearmnn_1_1test_xhtml_a05b3d6105613d2d14099667a6b8ca67bad7c8c85bf79bbe1b7188497c32c3b0ca"><div class="ttname"><a href="namespacearmnn_1_1test.xhtml#a05b3d6105613d2d14099667a6b8ca67bad7c8c85bf79bbe1b7188497c32c3b0ca">armnn::test::TestCaseResult::Failed</a></div><div class="ttdoc">The test failed (e.g. </div></div>
<div class="ttc" id="structarmnn_1_1test_1_1_inference_test_options_xhtml_ac9c49972e7f8db643b3c72aa782278df"><div class="ttname"><a href="structarmnn_1_1test_1_1_inference_test_options.xhtml#ac9c49972e7f8db643b3c72aa782278df">armnn::test::InferenceTestOptions::m_IterationCount</a></div><div class="ttdeci">unsigned int m_IterationCount</div><div class="ttdef"><b>Definition:</b> <a href="_inference_test_8hpp_source.xhtml#l00061">InferenceTest.hpp:61</a></div></div>
<div class="ttc" id="namespacearmnn_xhtml_a375ca3cff9f1b005d1412dc5f3cf5b6e"><div class="ttname"><a href="namespacearmnn.xhtml#a375ca3cff9f1b005d1412dc5f3cf5b6e">armnn::numeric_cast</a></div><div class="ttdeci">std::enable_if_t&lt; std::is_unsigned&lt; Source &gt;::value &amp;&amp;std::is_unsigned&lt; Dest &gt;::value, Dest &gt; numeric_cast(Source source)</div><div class="ttdef"><b>Definition:</b> <a href="_numeric_cast_8hpp_source.xhtml#l00035">NumericCast.hpp:35</a></div></div>
<div class="ttc" id="namespacearmnn_1_1test_xhtml_a05b3d6105613d2d14099667a6b8ca67baa60852f204ed8028c1c58808b746d115"><div class="ttname"><a href="namespacearmnn_1_1test.xhtml#a05b3d6105613d2d14099667a6b8ca67baa60852f204ed8028c1c58808b746d115">armnn::test::TestCaseResult::Ok</a></div><div class="ttdoc">The test completed without any errors. </div></div>
</div><!-- fragment -->
</div>
</div>
<hr/>The documentation for this class was generated from the following files:<ul>
<li>tests/<a class="el" href="_inference_test_8hpp_source.xhtml">InferenceTest.hpp</a></li>
<li>tests/<a class="el" href="_inference_test_8inl_source.xhtml">InferenceTest.inl</a></li>
</ul>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="namespacearmnn.xhtml">armnn</a></li><li class="navelem"><a class="el" href="namespacearmnn_1_1test.xhtml">test</a></li><li class="navelem"><a class="el" href="classarmnn_1_1test_1_1_classifier_test_case.xhtml">ClassifierTestCase</a></li>
    <li class="footer">Generated on Wed Mar 9 2022 12:01:26 for ArmNN by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.13 </li>
  </ul>
</div>
</body>
</html>
