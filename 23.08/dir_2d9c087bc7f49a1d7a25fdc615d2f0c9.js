var dir_2d9c087bc7f49a1d7a25fdc615d2f0c9 =
[
    [ "ClAbsWorkload.cpp", "_cl_abs_workload_8cpp.html", "_cl_abs_workload_8cpp" ],
    [ "ClAbsWorkload.hpp", "_cl_abs_workload_8hpp.html", "_cl_abs_workload_8hpp" ],
    [ "ClActivationWorkload.cpp", "_cl_activation_workload_8cpp.html", "_cl_activation_workload_8cpp" ],
    [ "ClActivationWorkload.hpp", "_cl_activation_workload_8hpp.html", "_cl_activation_workload_8hpp" ],
    [ "ClAdditionWorkload.cpp", "_cl_addition_workload_8cpp.html", "_cl_addition_workload_8cpp" ],
    [ "ClAdditionWorkload.hpp", "_cl_addition_workload_8hpp.html", "_cl_addition_workload_8hpp" ],
    [ "ClArgMinMaxWorkload.cpp", "_cl_arg_min_max_workload_8cpp.html", "_cl_arg_min_max_workload_8cpp" ],
    [ "ClArgMinMaxWorkload.hpp", "_cl_arg_min_max_workload_8hpp.html", "_cl_arg_min_max_workload_8hpp" ],
    [ "ClBaseWorkload.hpp", "_cl_base_workload_8hpp.html", [
      [ "ClBaseWorkload", "classarmnn_1_1_cl_base_workload.html", "classarmnn_1_1_cl_base_workload" ]
    ] ],
    [ "ClBatchMatMulWorkload.cpp", "_cl_batch_mat_mul_workload_8cpp.html", "_cl_batch_mat_mul_workload_8cpp" ],
    [ "ClBatchMatMulWorkload.hpp", "_cl_batch_mat_mul_workload_8hpp.html", "_cl_batch_mat_mul_workload_8hpp" ],
    [ "ClBatchNormalizationFloatWorkload.cpp", "_cl_batch_normalization_float_workload_8cpp.html", "_cl_batch_normalization_float_workload_8cpp" ],
    [ "ClBatchNormalizationFloatWorkload.hpp", "_cl_batch_normalization_float_workload_8hpp.html", "_cl_batch_normalization_float_workload_8hpp" ],
    [ "ClBatchToSpaceNdWorkload.cpp", "_cl_batch_to_space_nd_workload_8cpp.html", "_cl_batch_to_space_nd_workload_8cpp" ],
    [ "ClBatchToSpaceNdWorkload.hpp", "_cl_batch_to_space_nd_workload_8hpp.html", "_cl_batch_to_space_nd_workload_8hpp" ],
    [ "ClCastWorkload.cpp", "_cl_cast_workload_8cpp.html", "_cl_cast_workload_8cpp" ],
    [ "ClCastWorkload.hpp", "_cl_cast_workload_8hpp.html", "_cl_cast_workload_8hpp" ],
    [ "ClChannelShuffleWorkload.cpp", "_cl_channel_shuffle_workload_8cpp.html", "_cl_channel_shuffle_workload_8cpp" ],
    [ "ClChannelShuffleWorkload.hpp", "_cl_channel_shuffle_workload_8hpp.html", "_cl_channel_shuffle_workload_8hpp" ],
    [ "ClComparisonWorkload.cpp", "_cl_comparison_workload_8cpp.html", "_cl_comparison_workload_8cpp" ],
    [ "ClComparisonWorkload.hpp", "_cl_comparison_workload_8hpp.html", "_cl_comparison_workload_8hpp" ],
    [ "ClConcatWorkload.cpp", "_cl_concat_workload_8cpp.html", "_cl_concat_workload_8cpp" ],
    [ "ClConcatWorkload.hpp", "_cl_concat_workload_8hpp.html", "_cl_concat_workload_8hpp" ],
    [ "ClConstantWorkload.cpp", "_cl_constant_workload_8cpp.html", "_cl_constant_workload_8cpp" ],
    [ "ClConstantWorkload.hpp", "_cl_constant_workload_8hpp.html", "_cl_constant_workload_8hpp" ],
    [ "ClConvertFp16ToFp32Workload.cpp", "_cl_convert_fp16_to_fp32_workload_8cpp.html", "_cl_convert_fp16_to_fp32_workload_8cpp" ],
    [ "ClConvertFp16ToFp32Workload.hpp", "_cl_convert_fp16_to_fp32_workload_8hpp.html", "_cl_convert_fp16_to_fp32_workload_8hpp" ],
    [ "ClConvertFp32ToFp16Workload.cpp", "_cl_convert_fp32_to_fp16_workload_8cpp.html", "_cl_convert_fp32_to_fp16_workload_8cpp" ],
    [ "ClConvertFp32ToFp16Workload.hpp", "_cl_convert_fp32_to_fp16_workload_8hpp.html", "_cl_convert_fp32_to_fp16_workload_8hpp" ],
    [ "ClConvolution2dWorkload.cpp", "_cl_convolution2d_workload_8cpp.html", "_cl_convolution2d_workload_8cpp" ],
    [ "ClConvolution2dWorkload.hpp", "_cl_convolution2d_workload_8hpp.html", "_cl_convolution2d_workload_8hpp" ],
    [ "ClConvolution3dWorkload.cpp", "_cl_convolution3d_workload_8cpp.html", "_cl_convolution3d_workload_8cpp" ],
    [ "ClConvolution3dWorkload.hpp", "_cl_convolution3d_workload_8hpp.html", "_cl_convolution3d_workload_8hpp" ],
    [ "ClDepthToSpaceWorkload.cpp", "_cl_depth_to_space_workload_8cpp.html", "_cl_depth_to_space_workload_8cpp" ],
    [ "ClDepthToSpaceWorkload.hpp", "_cl_depth_to_space_workload_8hpp.html", "_cl_depth_to_space_workload_8hpp" ],
    [ "ClDepthwiseConvolutionWorkload.cpp", "_cl_depthwise_convolution_workload_8cpp.html", "_cl_depthwise_convolution_workload_8cpp" ],
    [ "ClDepthwiseConvolutionWorkload.hpp", "_cl_depthwise_convolution_workload_8hpp.html", "_cl_depthwise_convolution_workload_8hpp" ],
    [ "ClDequantizeWorkload.cpp", "_cl_dequantize_workload_8cpp.html", "_cl_dequantize_workload_8cpp" ],
    [ "ClDequantizeWorkload.hpp", "_cl_dequantize_workload_8hpp.html", "_cl_dequantize_workload_8hpp" ],
    [ "ClDivisionWorkload.cpp", "_cl_division_workload_8cpp.html", "_cl_division_workload_8cpp" ],
    [ "ClDivisionWorkload.hpp", "_cl_division_workload_8hpp.html", "_cl_division_workload_8hpp" ],
    [ "ClElementwiseBinaryWorkload.cpp", "_cl_elementwise_binary_workload_8cpp.html", "_cl_elementwise_binary_workload_8cpp" ],
    [ "ClElementwiseBinaryWorkload.hpp", "_cl_elementwise_binary_workload_8hpp.html", "_cl_elementwise_binary_workload_8hpp" ],
    [ "ClExpWorkload.cpp", "_cl_exp_workload_8cpp.html", "_cl_exp_workload_8cpp" ],
    [ "ClExpWorkload.hpp", "_cl_exp_workload_8hpp.html", "_cl_exp_workload_8hpp" ],
    [ "ClFillWorkload.cpp", "_cl_fill_workload_8cpp.html", null ],
    [ "ClFillWorkload.hpp", "_cl_fill_workload_8hpp.html", [
      [ "ClFillWorkload", "classarmnn_1_1_cl_fill_workload.html", "classarmnn_1_1_cl_fill_workload" ]
    ] ],
    [ "ClFloorFloatWorkload.cpp", "_cl_floor_float_workload_8cpp.html", "_cl_floor_float_workload_8cpp" ],
    [ "ClFloorFloatWorkload.hpp", "_cl_floor_float_workload_8hpp.html", "_cl_floor_float_workload_8hpp" ],
    [ "ClFullyConnectedWorkload.cpp", "_cl_fully_connected_workload_8cpp.html", "_cl_fully_connected_workload_8cpp" ],
    [ "ClFullyConnectedWorkload.hpp", "_cl_fully_connected_workload_8hpp.html", "_cl_fully_connected_workload_8hpp" ],
    [ "ClGatherNdWorkload.cpp", "_cl_gather_nd_workload_8cpp.html", "_cl_gather_nd_workload_8cpp" ],
    [ "ClGatherNdWorkload.hpp", "_cl_gather_nd_workload_8hpp.html", "_cl_gather_nd_workload_8hpp" ],
    [ "ClGatherWorkload.cpp", "_cl_gather_workload_8cpp.html", "_cl_gather_workload_8cpp" ],
    [ "ClGatherWorkload.hpp", "_cl_gather_workload_8hpp.html", "_cl_gather_workload_8hpp" ],
    [ "ClInstanceNormalizationWorkload.cpp", "_cl_instance_normalization_workload_8cpp.html", "_cl_instance_normalization_workload_8cpp" ],
    [ "ClInstanceNormalizationWorkload.hpp", "_cl_instance_normalization_workload_8hpp.html", "_cl_instance_normalization_workload_8hpp" ],
    [ "ClL2NormalizationFloatWorkload.cpp", "_cl_l2_normalization_float_workload_8cpp.html", "_cl_l2_normalization_float_workload_8cpp" ],
    [ "ClL2NormalizationFloatWorkload.hpp", "_cl_l2_normalization_float_workload_8hpp.html", "_cl_l2_normalization_float_workload_8hpp" ],
    [ "ClLogicalAndWorkload.cpp", "_cl_logical_and_workload_8cpp.html", "_cl_logical_and_workload_8cpp" ],
    [ "ClLogicalAndWorkload.hpp", "_cl_logical_and_workload_8hpp.html", "_cl_logical_and_workload_8hpp" ],
    [ "ClLogicalNotWorkload.cpp", "_cl_logical_not_workload_8cpp.html", "_cl_logical_not_workload_8cpp" ],
    [ "ClLogicalNotWorkload.hpp", "_cl_logical_not_workload_8hpp.html", "_cl_logical_not_workload_8hpp" ],
    [ "ClLogicalOrWorkload.cpp", "_cl_logical_or_workload_8cpp.html", "_cl_logical_or_workload_8cpp" ],
    [ "ClLogicalOrWorkload.hpp", "_cl_logical_or_workload_8hpp.html", "_cl_logical_or_workload_8hpp" ],
    [ "ClLogSoftmaxWorkload.cpp", "_cl_log_softmax_workload_8cpp.html", "_cl_log_softmax_workload_8cpp" ],
    [ "ClLogSoftmaxWorkload.hpp", "_cl_log_softmax_workload_8hpp.html", "_cl_log_softmax_workload_8hpp" ],
    [ "ClLogWorkload.cpp", "_cl_log_workload_8cpp.html", "_cl_log_workload_8cpp" ],
    [ "ClLogWorkload.hpp", "_cl_log_workload_8hpp.html", "_cl_log_workload_8hpp" ],
    [ "ClLstmFloatWorkload.cpp", "_cl_lstm_float_workload_8cpp.html", "_cl_lstm_float_workload_8cpp" ],
    [ "ClLstmFloatWorkload.hpp", "_cl_lstm_float_workload_8hpp.html", "_cl_lstm_float_workload_8hpp" ],
    [ "ClMaximumWorkload.cpp", "_cl_maximum_workload_8cpp.html", "_cl_maximum_workload_8cpp" ],
    [ "ClMaximumWorkload.hpp", "_cl_maximum_workload_8hpp.html", "_cl_maximum_workload_8hpp" ],
    [ "ClMeanWorkload.cpp", "_cl_mean_workload_8cpp.html", "_cl_mean_workload_8cpp" ],
    [ "ClMeanWorkload.hpp", "_cl_mean_workload_8hpp.html", "_cl_mean_workload_8hpp" ],
    [ "ClMinimumWorkload.cpp", "_cl_minimum_workload_8cpp.html", "_cl_minimum_workload_8cpp" ],
    [ "ClMinimumWorkload.hpp", "_cl_minimum_workload_8hpp.html", "_cl_minimum_workload_8hpp" ],
    [ "ClMultiplicationWorkload.cpp", "_cl_multiplication_workload_8cpp.html", "_cl_multiplication_workload_8cpp" ],
    [ "ClMultiplicationWorkload.hpp", "_cl_multiplication_workload_8hpp.html", "_cl_multiplication_workload_8hpp" ],
    [ "ClNegWorkload.cpp", "_cl_neg_workload_8cpp.html", "_cl_neg_workload_8cpp" ],
    [ "ClNegWorkload.hpp", "_cl_neg_workload_8hpp.html", "_cl_neg_workload_8hpp" ],
    [ "ClNormalizationFloatWorkload.cpp", "_cl_normalization_float_workload_8cpp.html", "_cl_normalization_float_workload_8cpp" ],
    [ "ClNormalizationFloatWorkload.hpp", "_cl_normalization_float_workload_8hpp.html", "_cl_normalization_float_workload_8hpp" ],
    [ "ClPadWorkload.cpp", "_cl_pad_workload_8cpp.html", "_cl_pad_workload_8cpp" ],
    [ "ClPadWorkload.hpp", "_cl_pad_workload_8hpp.html", "_cl_pad_workload_8hpp" ],
    [ "ClPermuteWorkload.cpp", "_cl_permute_workload_8cpp.html", "_cl_permute_workload_8cpp" ],
    [ "ClPermuteWorkload.hpp", "_cl_permute_workload_8hpp.html", "_cl_permute_workload_8hpp" ],
    [ "ClPooling2dWorkload.cpp", "_cl_pooling2d_workload_8cpp.html", "_cl_pooling2d_workload_8cpp" ],
    [ "ClPooling2dWorkload.hpp", "_cl_pooling2d_workload_8hpp.html", "_cl_pooling2d_workload_8hpp" ],
    [ "ClPooling3dWorkload.cpp", "_cl_pooling3d_workload_8cpp.html", "_cl_pooling3d_workload_8cpp" ],
    [ "ClPooling3dWorkload.hpp", "_cl_pooling3d_workload_8hpp.html", "_cl_pooling3d_workload_8hpp" ],
    [ "ClPreluWorkload.cpp", "_cl_prelu_workload_8cpp.html", "_cl_prelu_workload_8cpp" ],
    [ "ClPreluWorkload.hpp", "_cl_prelu_workload_8hpp.html", "_cl_prelu_workload_8hpp" ],
    [ "ClQLstmWorkload.cpp", "_cl_q_lstm_workload_8cpp.html", "_cl_q_lstm_workload_8cpp" ],
    [ "ClQLstmWorkload.hpp", "_cl_q_lstm_workload_8hpp.html", "_cl_q_lstm_workload_8hpp" ],
    [ "ClQuantizedLstmWorkload.cpp", "_cl_quantized_lstm_workload_8cpp.html", "_cl_quantized_lstm_workload_8cpp" ],
    [ "ClQuantizedLstmWorkload.hpp", "_cl_quantized_lstm_workload_8hpp.html", "_cl_quantized_lstm_workload_8hpp" ],
    [ "ClQuantizeWorkload.cpp", "_cl_quantize_workload_8cpp.html", "_cl_quantize_workload_8cpp" ],
    [ "ClQuantizeWorkload.hpp", "_cl_quantize_workload_8hpp.html", "_cl_quantize_workload_8hpp" ],
    [ "ClRankWorkload.hpp", "_cl_rank_workload_8hpp.html", [
      [ "ClRankWorkload", "structarmnn_1_1_cl_rank_workload.html", "structarmnn_1_1_cl_rank_workload" ]
    ] ],
    [ "ClReduceWorkload.cpp", "_cl_reduce_workload_8cpp.html", "_cl_reduce_workload_8cpp" ],
    [ "ClReduceWorkload.hpp", "_cl_reduce_workload_8hpp.html", "_cl_reduce_workload_8hpp" ],
    [ "ClReshapeWorkload.cpp", "_cl_reshape_workload_8cpp.html", "_cl_reshape_workload_8cpp" ],
    [ "ClReshapeWorkload.hpp", "_cl_reshape_workload_8hpp.html", "_cl_reshape_workload_8hpp" ],
    [ "ClResizeWorkload.cpp", "_cl_resize_workload_8cpp.html", "_cl_resize_workload_8cpp" ],
    [ "ClResizeWorkload.hpp", "_cl_resize_workload_8hpp.html", "_cl_resize_workload_8hpp" ],
    [ "ClRsqrtWorkload.cpp", "_cl_rsqrt_workload_8cpp.html", "_cl_rsqrt_workload_8cpp" ],
    [ "ClRsqrtWorkload.hpp", "_cl_rsqrt_workload_8hpp.html", "_cl_rsqrt_workload_8hpp" ],
    [ "ClSinWorkload.cpp", "_cl_sin_workload_8cpp.html", "_cl_sin_workload_8cpp" ],
    [ "ClSinWorkload.hpp", "_cl_sin_workload_8hpp.html", "_cl_sin_workload_8hpp" ],
    [ "ClSliceWorkload.cpp", "_cl_slice_workload_8cpp.html", "_cl_slice_workload_8cpp" ],
    [ "ClSliceWorkload.hpp", "_cl_slice_workload_8hpp.html", "_cl_slice_workload_8hpp" ],
    [ "ClSoftmaxWorkload.cpp", "_cl_softmax_workload_8cpp.html", "_cl_softmax_workload_8cpp" ],
    [ "ClSoftmaxWorkload.hpp", "_cl_softmax_workload_8hpp.html", "_cl_softmax_workload_8hpp" ],
    [ "ClSpaceToBatchNdWorkload.cpp", "_cl_space_to_batch_nd_workload_8cpp.html", "_cl_space_to_batch_nd_workload_8cpp" ],
    [ "ClSpaceToBatchNdWorkload.hpp", "_cl_space_to_batch_nd_workload_8hpp.html", "_cl_space_to_batch_nd_workload_8hpp" ],
    [ "ClSpaceToDepthWorkload.cpp", "_cl_space_to_depth_workload_8cpp.html", "_cl_space_to_depth_workload_8cpp" ],
    [ "ClSpaceToDepthWorkload.hpp", "_cl_space_to_depth_workload_8hpp.html", "_cl_space_to_depth_workload_8hpp" ],
    [ "ClSplitterWorkload.cpp", "_cl_splitter_workload_8cpp.html", "_cl_splitter_workload_8cpp" ],
    [ "ClSplitterWorkload.hpp", "_cl_splitter_workload_8hpp.html", "_cl_splitter_workload_8hpp" ],
    [ "ClSqrtWorkload.cpp", "_cl_sqrt_workload_8cpp.html", "_cl_sqrt_workload_8cpp" ],
    [ "ClSqrtWorkload.hpp", "_cl_sqrt_workload_8hpp.html", "_cl_sqrt_workload_8hpp" ],
    [ "ClStackWorkload.cpp", "_cl_stack_workload_8cpp.html", "_cl_stack_workload_8cpp" ],
    [ "ClStackWorkload.hpp", "_cl_stack_workload_8hpp.html", "_cl_stack_workload_8hpp" ],
    [ "ClStridedSliceWorkload.cpp", "_cl_strided_slice_workload_8cpp.html", "_cl_strided_slice_workload_8cpp" ],
    [ "ClStridedSliceWorkload.hpp", "_cl_strided_slice_workload_8hpp.html", "_cl_strided_slice_workload_8hpp" ],
    [ "ClSubtractionWorkload.cpp", "_cl_subtraction_workload_8cpp.html", "_cl_subtraction_workload_8cpp" ],
    [ "ClSubtractionWorkload.hpp", "_cl_subtraction_workload_8hpp.html", "_cl_subtraction_workload_8hpp" ],
    [ "ClTileWorkload.cpp", "_cl_tile_workload_8cpp.html", "_cl_tile_workload_8cpp" ],
    [ "ClTileWorkload.hpp", "_cl_tile_workload_8hpp.html", "_cl_tile_workload_8hpp" ],
    [ "ClTransposeConvolution2dWorkload.cpp", "_cl_transpose_convolution2d_workload_8cpp.html", "_cl_transpose_convolution2d_workload_8cpp" ],
    [ "ClTransposeConvolution2dWorkload.hpp", "_cl_transpose_convolution2d_workload_8hpp.html", "_cl_transpose_convolution2d_workload_8hpp" ],
    [ "ClTransposeWorkload.cpp", "_cl_transpose_workload_8cpp.html", "_cl_transpose_workload_8cpp" ],
    [ "ClTransposeWorkload.hpp", "_cl_transpose_workload_8hpp.html", "_cl_transpose_workload_8hpp" ],
    [ "ClUnidirectionalSequenceLstmFloatWorkload.cpp", "_cl_unidirectional_sequence_lstm_float_workload_8cpp.html", "_cl_unidirectional_sequence_lstm_float_workload_8cpp" ],
    [ "ClUnidirectionalSequenceLstmFloatWorkload.hpp", "_cl_unidirectional_sequence_lstm_float_workload_8hpp.html", "_cl_unidirectional_sequence_lstm_float_workload_8hpp" ],
    [ "ClWorkloads.hpp", "_cl_workloads_8hpp.html", null ],
    [ "ClWorkloadUtils.hpp", "_cl_workload_utils_8hpp.html", "_cl_workload_utils_8hpp" ]
];