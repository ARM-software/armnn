<!-- Copyright (c) 2020 ARM Limited. -->
<!--                                 -->
<!-- SPDX-License-Identifier: MIT    -->
<!--                                 -->
<!-- HTML header for doxygen 1.8.13-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.17"/>
<meta name="robots" content="NOINDEX, NOFOLLOW" />
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>ArmNN: ScopedTensorHandle Class Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script>
<script type="text/javascript" async="async" src="http://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="stylesheet.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <img alt="ArmNN" src="Arm_NN_horizontal_blue.png" style="max-width: 10rem; margin-top: .5rem; margin-left 10px"/>
  <td style="padding-left: 0.5em;">
   <div id="projectname">
   &#160;<span id="projectnumber">23.05</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.17 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "search",false,'Search');
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(document).ready(function(){initNavTree('classarmnn_1_1_scoped_tensor_handle.xhtml',''); initResizable(); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="summary">
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="classarmnn_1_1_scoped_tensor_handle-members.xhtml">List of all members</a>  </div>
  <div class="headertitle">
<div class="title">ScopedTensorHandle Class Reference</div>  </div>
</div><!--header-->
<div class="contents">

<p><code>#include &lt;<a class="el" href="_tensor_handle_8hpp_source.xhtml">TensorHandle.hpp</a>&gt;</code></p>
<div class="dynheader">
Inheritance diagram for ScopedTensorHandle:</div>
<div class="dyncontent">
 <div class="center">
  <img src="classarmnn_1_1_scoped_tensor_handle.png" usemap="#ScopedTensorHandle_map" alt=""/>
  <map id="ScopedTensorHandle_map" name="ScopedTensorHandle_map">
<area href="classarmnn_1_1_tensor_handle.xhtml" alt="TensorHandle" shape="rect" coords="0,112,134,136"/>
<area href="classarmnn_1_1_const_tensor_handle.xhtml" alt="ConstTensorHandle" shape="rect" coords="0,56,134,80"/>
<area href="classarmnn_1_1_i_tensor_handle.xhtml" alt="ITensorHandle" shape="rect" coords="0,0,134,24"/>
  </map>
</div></div>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:aa70cd67dc8679c1b1f532fc05cb85f36"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_scoped_tensor_handle.xhtml#aa70cd67dc8679c1b1f532fc05cb85f36">ScopedTensorHandle</a> (const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;tensorInfo)</td></tr>
<tr class="separator:aa70cd67dc8679c1b1f532fc05cb85f36"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:afad050f38a14f02af79e6703d4fe7175"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_scoped_tensor_handle.xhtml#afad050f38a14f02af79e6703d4fe7175">ScopedTensorHandle</a> (const <a class="el" href="classarmnn_1_1_const_tensor.xhtml">ConstTensor</a> &amp;tensor)</td></tr>
<tr class="separator:afad050f38a14f02af79e6703d4fe7175"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a43dd3ce58fc8e07a46d179fabcadff42"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_scoped_tensor_handle.xhtml#a43dd3ce58fc8e07a46d179fabcadff42">ScopedTensorHandle</a> (const <a class="el" href="classarmnn_1_1_const_tensor_handle.xhtml">ConstTensorHandle</a> &amp;tensorHandle)</td></tr>
<tr class="separator:a43dd3ce58fc8e07a46d179fabcadff42"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:adae1153cc6727c4d5d7346a33d12a659"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_scoped_tensor_handle.xhtml#adae1153cc6727c4d5d7346a33d12a659">ScopedTensorHandle</a> (const <a class="el" href="classarmnn_1_1_scoped_tensor_handle.xhtml">ScopedTensorHandle</a> &amp;other)</td></tr>
<tr class="separator:adae1153cc6727c4d5d7346a33d12a659"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:abb0bce07a52fa77c268595260af2073f"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classarmnn_1_1_scoped_tensor_handle.xhtml">ScopedTensorHandle</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_scoped_tensor_handle.xhtml#abb0bce07a52fa77c268595260af2073f">operator=</a> (const <a class="el" href="classarmnn_1_1_scoped_tensor_handle.xhtml">ScopedTensorHandle</a> &amp;other)</td></tr>
<tr class="separator:abb0bce07a52fa77c268595260af2073f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae24cd57521cafb0474021168114c67e7"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_scoped_tensor_handle.xhtml#ae24cd57521cafb0474021168114c67e7">~ScopedTensorHandle</a> ()</td></tr>
<tr class="separator:ae24cd57521cafb0474021168114c67e7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8518772c5d692e334a76617582b10b92"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_scoped_tensor_handle.xhtml#a8518772c5d692e334a76617582b10b92">Allocate</a> () override</td></tr>
<tr class="memdesc:a8518772c5d692e334a76617582b10b92"><td class="mdescLeft">&#160;</td><td class="mdescRight">Indicate to the memory manager that this resource is no longer active.  <a href="classarmnn_1_1_scoped_tensor_handle.xhtml#a8518772c5d692e334a76617582b10b92">More...</a><br /></td></tr>
<tr class="separator:a8518772c5d692e334a76617582b10b92"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pub_methods_classarmnn_1_1_tensor_handle"><td colspan="2" onclick="javascript:toggleInherit('pub_methods_classarmnn_1_1_tensor_handle')"><img src="closed.png" alt="-"/>&#160;Public Member Functions inherited from <a class="el" href="classarmnn_1_1_tensor_handle.xhtml">TensorHandle</a></td></tr>
<tr class="memitem:aabedf69ab42fd7a0b0f751dd8534e2ab inherit pub_methods_classarmnn_1_1_tensor_handle"><td class="memTemplParams" colspan="2">template&lt;typename T &gt; </td></tr>
<tr class="memitem:aabedf69ab42fd7a0b0f751dd8534e2ab inherit pub_methods_classarmnn_1_1_tensor_handle"><td class="memTemplItemLeft" align="right" valign="top">T *&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_tensor_handle.xhtml#aabedf69ab42fd7a0b0f751dd8534e2ab">GetTensor</a> () const</td></tr>
<tr class="separator:aabedf69ab42fd7a0b0f751dd8534e2ab inherit pub_methods_classarmnn_1_1_tensor_handle"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3871e7881538e3be0b16e70beb2d0c38 inherit pub_methods_classarmnn_1_1_tensor_handle"><td class="memItemLeft" align="right" valign="top">template&lt;&gt; </td></tr>
<tr class="memitem:a3871e7881538e3be0b16e70beb2d0c38 inherit pub_methods_classarmnn_1_1_tensor_handle"><td class="memTemplItemLeft" align="right" valign="top">void *&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_tensor_handle.xhtml#a3871e7881538e3be0b16e70beb2d0c38">GetTensor</a> () const</td></tr>
<tr class="separator:a3871e7881538e3be0b16e70beb2d0c38 inherit pub_methods_classarmnn_1_1_tensor_handle"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac1e740b316dcd4f95d2031bc811f8e77 inherit pub_methods_classarmnn_1_1_tensor_handle"><td class="memItemLeft" align="right" valign="top">template&lt;&gt; </td></tr>
<tr class="memitem:ac1e740b316dcd4f95d2031bc811f8e77 inherit pub_methods_classarmnn_1_1_tensor_handle"><td class="memTemplItemLeft" align="right" valign="top">void *&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_tensor_handle.xhtml#ac1e740b316dcd4f95d2031bc811f8e77">GetTensor</a> () const</td></tr>
<tr class="separator:ac1e740b316dcd4f95d2031bc811f8e77 inherit pub_methods_classarmnn_1_1_tensor_handle"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pub_methods_classarmnn_1_1_const_tensor_handle"><td colspan="2" onclick="javascript:toggleInherit('pub_methods_classarmnn_1_1_const_tensor_handle')"><img src="closed.png" alt="-"/>&#160;Public Member Functions inherited from <a class="el" href="classarmnn_1_1_const_tensor_handle.xhtml">ConstTensorHandle</a></td></tr>
<tr class="memitem:a3a76fc8b348e13d5a6ac1240c96ebef4 inherit pub_methods_classarmnn_1_1_const_tensor_handle"><td class="memTemplParams" colspan="2">template&lt;typename T &gt; </td></tr>
<tr class="memitem:a3a76fc8b348e13d5a6ac1240c96ebef4 inherit pub_methods_classarmnn_1_1_const_tensor_handle"><td class="memTemplItemLeft" align="right" valign="top">const T *&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_const_tensor_handle.xhtml#a3a76fc8b348e13d5a6ac1240c96ebef4">GetConstTensor</a> () const</td></tr>
<tr class="separator:a3a76fc8b348e13d5a6ac1240c96ebef4 inherit pub_methods_classarmnn_1_1_const_tensor_handle"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a66e8f43a5b42b500871ed96e15419567 inherit pub_methods_classarmnn_1_1_const_tensor_handle"><td class="memItemLeft" align="right" valign="top">const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_const_tensor_handle.xhtml#a66e8f43a5b42b500871ed96e15419567">GetTensorInfo</a> () const</td></tr>
<tr class="separator:a66e8f43a5b42b500871ed96e15419567 inherit pub_methods_classarmnn_1_1_const_tensor_handle"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a19aa18d78d5ac31e3a3c8f782f0e8606 inherit pub_methods_classarmnn_1_1_const_tensor_handle"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_const_tensor_handle.xhtml#a19aa18d78d5ac31e3a3c8f782f0e8606">Manage</a> () override</td></tr>
<tr class="memdesc:a19aa18d78d5ac31e3a3c8f782f0e8606 inherit pub_methods_classarmnn_1_1_const_tensor_handle"><td class="mdescLeft">&#160;</td><td class="mdescRight">Indicate to the memory manager that this resource is active.  <a href="classarmnn_1_1_const_tensor_handle.xhtml#a19aa18d78d5ac31e3a3c8f782f0e8606">More...</a><br /></td></tr>
<tr class="separator:a19aa18d78d5ac31e3a3c8f782f0e8606 inherit pub_methods_classarmnn_1_1_const_tensor_handle"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab6c52b35388890f2c563afbebfb456a6 inherit pub_methods_classarmnn_1_1_const_tensor_handle"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="classarmnn_1_1_i_tensor_handle.xhtml">ITensorHandle</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_const_tensor_handle.xhtml#ab6c52b35388890f2c563afbebfb456a6">GetParent</a> () const override</td></tr>
<tr class="memdesc:ab6c52b35388890f2c563afbebfb456a6 inherit pub_methods_classarmnn_1_1_const_tensor_handle"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get the parent tensor if this is a subtensor.  <a href="classarmnn_1_1_const_tensor_handle.xhtml#ab6c52b35388890f2c563afbebfb456a6">More...</a><br /></td></tr>
<tr class="separator:ab6c52b35388890f2c563afbebfb456a6 inherit pub_methods_classarmnn_1_1_const_tensor_handle"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:acc3fcce7a100cc3b64247519f22e37fc inherit pub_methods_classarmnn_1_1_const_tensor_handle"><td class="memItemLeft" align="right" valign="top">virtual const void *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_const_tensor_handle.xhtml#acc3fcce7a100cc3b64247519f22e37fc">Map</a> (bool) const override</td></tr>
<tr class="memdesc:acc3fcce7a100cc3b64247519f22e37fc inherit pub_methods_classarmnn_1_1_const_tensor_handle"><td class="mdescLeft">&#160;</td><td class="mdescRight">Map the tensor data for access.  <a href="classarmnn_1_1_const_tensor_handle.xhtml#acc3fcce7a100cc3b64247519f22e37fc">More...</a><br /></td></tr>
<tr class="separator:acc3fcce7a100cc3b64247519f22e37fc inherit pub_methods_classarmnn_1_1_const_tensor_handle"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a88ab6decf78c152e746b7d8dc2dd931f inherit pub_methods_classarmnn_1_1_const_tensor_handle"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_const_tensor_handle.xhtml#a88ab6decf78c152e746b7d8dc2dd931f">Unmap</a> () const override</td></tr>
<tr class="memdesc:a88ab6decf78c152e746b7d8dc2dd931f inherit pub_methods_classarmnn_1_1_const_tensor_handle"><td class="mdescLeft">&#160;</td><td class="mdescRight">Unmap the tensor data.  <a href="classarmnn_1_1_const_tensor_handle.xhtml#a88ab6decf78c152e746b7d8dc2dd931f">More...</a><br /></td></tr>
<tr class="separator:a88ab6decf78c152e746b7d8dc2dd931f inherit pub_methods_classarmnn_1_1_const_tensor_handle"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a967f220393d291f71dabce0c06bf9b6c inherit pub_methods_classarmnn_1_1_const_tensor_handle"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classarmnn_1_1_tensor_shape.xhtml">TensorShape</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_const_tensor_handle.xhtml#a967f220393d291f71dabce0c06bf9b6c">GetStrides</a> () const override</td></tr>
<tr class="memdesc:a967f220393d291f71dabce0c06bf9b6c inherit pub_methods_classarmnn_1_1_const_tensor_handle"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get the strides for each dimension ordered from largest to smallest where the smallest value is the same as the size of a single element in the tensor.  <a href="classarmnn_1_1_const_tensor_handle.xhtml#a967f220393d291f71dabce0c06bf9b6c">More...</a><br /></td></tr>
<tr class="separator:a967f220393d291f71dabce0c06bf9b6c inherit pub_methods_classarmnn_1_1_const_tensor_handle"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8e8d2fbabcac19f9e12779080ddff54e inherit pub_methods_classarmnn_1_1_const_tensor_handle"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classarmnn_1_1_tensor_shape.xhtml">TensorShape</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_const_tensor_handle.xhtml#a8e8d2fbabcac19f9e12779080ddff54e">GetShape</a> () const override</td></tr>
<tr class="memdesc:a8e8d2fbabcac19f9e12779080ddff54e inherit pub_methods_classarmnn_1_1_const_tensor_handle"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get the number of elements for each dimension ordered from slowest iterating dimension to fastest iterating dimension.  <a href="classarmnn_1_1_const_tensor_handle.xhtml#a8e8d2fbabcac19f9e12779080ddff54e">More...</a><br /></td></tr>
<tr class="separator:a8e8d2fbabcac19f9e12779080ddff54e inherit pub_methods_classarmnn_1_1_const_tensor_handle"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aecc243f62d4777927e15af592d330764 inherit pub_methods_classarmnn_1_1_const_tensor_handle"><td class="memItemLeft" align="right" valign="top">template&lt;&gt; </td></tr>
<tr class="memitem:aecc243f62d4777927e15af592d330764 inherit pub_methods_classarmnn_1_1_const_tensor_handle"><td class="memTemplItemLeft" align="right" valign="top">const void *&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_const_tensor_handle.xhtml#aecc243f62d4777927e15af592d330764">GetConstTensor</a> () const</td></tr>
<tr class="separator:aecc243f62d4777927e15af592d330764 inherit pub_methods_classarmnn_1_1_const_tensor_handle"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8faf443b026b17e61779734bd2b45d12 inherit pub_methods_classarmnn_1_1_const_tensor_handle"><td class="memItemLeft" align="right" valign="top">template&lt;&gt; </td></tr>
<tr class="memitem:a8faf443b026b17e61779734bd2b45d12 inherit pub_methods_classarmnn_1_1_const_tensor_handle"><td class="memTemplItemLeft" align="right" valign="top">const void *&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_const_tensor_handle.xhtml#a8faf443b026b17e61779734bd2b45d12">GetConstTensor</a> () const</td></tr>
<tr class="separator:a8faf443b026b17e61779734bd2b45d12 inherit pub_methods_classarmnn_1_1_const_tensor_handle"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pub_methods_classarmnn_1_1_i_tensor_handle"><td colspan="2" onclick="javascript:toggleInherit('pub_methods_classarmnn_1_1_i_tensor_handle')"><img src="closed.png" alt="-"/>&#160;Public Member Functions inherited from <a class="el" href="classarmnn_1_1_i_tensor_handle.xhtml">ITensorHandle</a></td></tr>
<tr class="memitem:aff95f063e2b8041b3d0e4b4dc0e3821d inherit pub_methods_classarmnn_1_1_i_tensor_handle"><td class="memItemLeft" align="right" valign="top">virtual&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_i_tensor_handle.xhtml#aff95f063e2b8041b3d0e4b4dc0e3821d">~ITensorHandle</a> ()</td></tr>
<tr class="separator:aff95f063e2b8041b3d0e4b4dc0e3821d inherit pub_methods_classarmnn_1_1_i_tensor_handle"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a270c8f844df649b9b0599c1e4db44cd3 inherit pub_methods_classarmnn_1_1_i_tensor_handle"><td class="memItemLeft" align="right" valign="top">void *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_i_tensor_handle.xhtml#a270c8f844df649b9b0599c1e4db44cd3">Map</a> (bool blocking=true)</td></tr>
<tr class="memdesc:a270c8f844df649b9b0599c1e4db44cd3 inherit pub_methods_classarmnn_1_1_i_tensor_handle"><td class="mdescLeft">&#160;</td><td class="mdescRight">Map the tensor data for access.  <a href="classarmnn_1_1_i_tensor_handle.xhtml#a270c8f844df649b9b0599c1e4db44cd3">More...</a><br /></td></tr>
<tr class="separator:a270c8f844df649b9b0599c1e4db44cd3 inherit pub_methods_classarmnn_1_1_i_tensor_handle"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab2be1412c91842a072ad94759f52033e inherit pub_methods_classarmnn_1_1_i_tensor_handle"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_i_tensor_handle.xhtml#ab2be1412c91842a072ad94759f52033e">Unmap</a> ()</td></tr>
<tr class="memdesc:ab2be1412c91842a072ad94759f52033e inherit pub_methods_classarmnn_1_1_i_tensor_handle"><td class="mdescLeft">&#160;</td><td class="mdescRight">Unmap the tensor data that was previously mapped with call to <a class="el" href="classarmnn_1_1_i_tensor_handle.xhtml#a9afbc055a017adf1bc38ee137bca6e90" title="Map the tensor data for access.">Map()</a>.  <a href="classarmnn_1_1_i_tensor_handle.xhtml#ab2be1412c91842a072ad94759f52033e">More...</a><br /></td></tr>
<tr class="separator:ab2be1412c91842a072ad94759f52033e inherit pub_methods_classarmnn_1_1_i_tensor_handle"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a55cddc2dbb32d680cd85b635ba370e48 inherit pub_methods_classarmnn_1_1_i_tensor_handle"><td class="memItemLeft" align="right" valign="top">virtual unsigned int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_i_tensor_handle.xhtml#a55cddc2dbb32d680cd85b635ba370e48">GetImportFlags</a> () const</td></tr>
<tr class="memdesc:a55cddc2dbb32d680cd85b635ba370e48 inherit pub_methods_classarmnn_1_1_i_tensor_handle"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get flags describing supported import sources.  <a href="classarmnn_1_1_i_tensor_handle.xhtml#a55cddc2dbb32d680cd85b635ba370e48">More...</a><br /></td></tr>
<tr class="separator:a55cddc2dbb32d680cd85b635ba370e48 inherit pub_methods_classarmnn_1_1_i_tensor_handle"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4f81a9eff30c9b9fe76f5b83af470ba7 inherit pub_methods_classarmnn_1_1_i_tensor_handle"><td class="memItemLeft" align="right" valign="top">virtual bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_i_tensor_handle.xhtml#a4f81a9eff30c9b9fe76f5b83af470ba7">Import</a> (void *memory, <a class="el" href="namespacearmnn.xhtml#a14fcd7f88d11cea0a018269dca5f9277">MemorySource</a> source)</td></tr>
<tr class="memdesc:a4f81a9eff30c9b9fe76f5b83af470ba7 inherit pub_methods_classarmnn_1_1_i_tensor_handle"><td class="mdescLeft">&#160;</td><td class="mdescRight">Import externally allocated memory.  <a href="classarmnn_1_1_i_tensor_handle.xhtml#a4f81a9eff30c9b9fe76f5b83af470ba7">More...</a><br /></td></tr>
<tr class="separator:a4f81a9eff30c9b9fe76f5b83af470ba7 inherit pub_methods_classarmnn_1_1_i_tensor_handle"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6caeedd55f4d685fd04b8fcb352dae4e inherit pub_methods_classarmnn_1_1_i_tensor_handle"><td class="memItemLeft" align="right" valign="top">virtual bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_i_tensor_handle.xhtml#a6caeedd55f4d685fd04b8fcb352dae4e">CanBeImported</a> (void *memory, <a class="el" href="namespacearmnn.xhtml#a14fcd7f88d11cea0a018269dca5f9277">MemorySource</a> source)</td></tr>
<tr class="memdesc:a6caeedd55f4d685fd04b8fcb352dae4e inherit pub_methods_classarmnn_1_1_i_tensor_handle"><td class="mdescLeft">&#160;</td><td class="mdescRight">Implementations must determine if this memory block can be imported.  <a href="classarmnn_1_1_i_tensor_handle.xhtml#a6caeedd55f4d685fd04b8fcb352dae4e">More...</a><br /></td></tr>
<tr class="separator:a6caeedd55f4d685fd04b8fcb352dae4e inherit pub_methods_classarmnn_1_1_i_tensor_handle"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9eee7f9d4e230d684a7307ac4d75d8a9 inherit pub_methods_classarmnn_1_1_i_tensor_handle"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_i_tensor_handle.xhtml#a9eee7f9d4e230d684a7307ac4d75d8a9">Unimport</a> ()</td></tr>
<tr class="memdesc:a9eee7f9d4e230d684a7307ac4d75d8a9 inherit pub_methods_classarmnn_1_1_i_tensor_handle"><td class="mdescLeft">&#160;</td><td class="mdescRight">Unimport externally allocated memory.  <a href="classarmnn_1_1_i_tensor_handle.xhtml#a9eee7f9d4e230d684a7307ac4d75d8a9">More...</a><br /></td></tr>
<tr class="separator:a9eee7f9d4e230d684a7307ac4d75d8a9 inherit pub_methods_classarmnn_1_1_i_tensor_handle"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="inherited"></a>
Additional Inherited Members</h2></td></tr>
<tr class="inherit_header pro_methods_classarmnn_1_1_tensor_handle"><td colspan="2" onclick="javascript:toggleInherit('pro_methods_classarmnn_1_1_tensor_handle')"><img src="closed.png" alt="-"/>&#160;Protected Member Functions inherited from <a class="el" href="classarmnn_1_1_tensor_handle.xhtml">TensorHandle</a></td></tr>
<tr class="memitem:adb815c65867e3125bfcdf545502e491a inherit pro_methods_classarmnn_1_1_tensor_handle"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_tensor_handle.xhtml#adb815c65867e3125bfcdf545502e491a">TensorHandle</a> (const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;tensorInfo)</td></tr>
<tr class="separator:adb815c65867e3125bfcdf545502e491a inherit pro_methods_classarmnn_1_1_tensor_handle"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0feac8591ac1a88993aa3278b24dcb57 inherit pro_methods_classarmnn_1_1_tensor_handle"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_tensor_handle.xhtml#a0feac8591ac1a88993aa3278b24dcb57">SetMemory</a> (void *mem)</td></tr>
<tr class="separator:a0feac8591ac1a88993aa3278b24dcb57 inherit pro_methods_classarmnn_1_1_tensor_handle"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pro_methods_classarmnn_1_1_const_tensor_handle"><td colspan="2" onclick="javascript:toggleInherit('pro_methods_classarmnn_1_1_const_tensor_handle')"><img src="closed.png" alt="-"/>&#160;Protected Member Functions inherited from <a class="el" href="classarmnn_1_1_const_tensor_handle.xhtml">ConstTensorHandle</a></td></tr>
<tr class="memitem:a08bd4bf32ba8d09c21de0457e78b1a93 inherit pro_methods_classarmnn_1_1_const_tensor_handle"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_const_tensor_handle.xhtml#a08bd4bf32ba8d09c21de0457e78b1a93">ConstTensorHandle</a> (const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;tensorInfo)</td></tr>
<tr class="separator:a08bd4bf32ba8d09c21de0457e78b1a93 inherit pro_methods_classarmnn_1_1_const_tensor_handle"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae21d7415b7d191de4fe6e02d134a4f38 inherit pro_methods_classarmnn_1_1_const_tensor_handle"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_const_tensor_handle.xhtml#ae21d7415b7d191de4fe6e02d134a4f38">SetConstMemory</a> (const void *mem)</td></tr>
<tr class="separator:ae21d7415b7d191de4fe6e02d134a4f38 inherit pro_methods_classarmnn_1_1_const_tensor_handle"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock">
<p class="definition">Definition at line <a class="el" href="_tensor_handle_8hpp_source.xhtml#l00115">115</a> of file <a class="el" href="_tensor_handle_8hpp_source.xhtml">TensorHandle.hpp</a>.</p>
</div><h2 class="groupheader">Constructor &amp; Destructor Documentation</h2>
<a id="aa70cd67dc8679c1b1f532fc05cb85f36"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aa70cd67dc8679c1b1f532fc05cb85f36">&#9670;&nbsp;</a></span>ScopedTensorHandle() <span class="overload">[1/4]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarmnn_1_1_scoped_tensor_handle.xhtml">ScopedTensorHandle</a> </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;&#160;</td>
          <td class="paramname"><em>tensorInfo</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">explicit</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_tensor_handle_8cpp_source.xhtml#l00055">55</a> of file <a class="el" href="_tensor_handle_8cpp_source.xhtml">TensorHandle.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;: <a class="code" href="classarmnn_1_1_tensor_handle.xhtml#adb815c65867e3125bfcdf545502e491a">TensorHandle</a>(tensorInfo)</div>
<div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;{</div>
<div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;}</div>
</div><!-- fragment -->
</div>
</div>
<a id="afad050f38a14f02af79e6703d4fe7175"></a>
<h2 class="memtitle"><span class="permalink"><a href="#afad050f38a14f02af79e6703d4fe7175">&#9670;&nbsp;</a></span>ScopedTensorHandle() <span class="overload">[2/4]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarmnn_1_1_scoped_tensor_handle.xhtml">ScopedTensorHandle</a> </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_const_tensor.xhtml">ConstTensor</a> &amp;&#160;</td>
          <td class="paramname"><em>tensor</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">explicit</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_tensor_handle_8cpp_source.xhtml#l00060">60</a> of file <a class="el" href="_tensor_handle_8cpp_source.xhtml">TensorHandle.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;: <a class="code" href="classarmnn_1_1_scoped_tensor_handle.xhtml#aa70cd67dc8679c1b1f532fc05cb85f36">ScopedTensorHandle</a>(tensor.GetInfo())</div>
<div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;{</div>
<div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;    CopyFrom(tensor.GetMemoryArea(), tensor.GetNumBytes());</div>
<div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;}</div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="_tensor_8hpp_source.xhtml#l00305">BaseTensor&lt; MemoryType &gt;::GetMemoryArea()</a>, and <a class="el" href="_tensor_8hpp_source.xhtml#l00302">BaseTensor&lt; MemoryType &gt;::GetNumBytes()</a>.</p>

</div>
</div>
<a id="a43dd3ce58fc8e07a46d179fabcadff42"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a43dd3ce58fc8e07a46d179fabcadff42">&#9670;&nbsp;</a></span>ScopedTensorHandle() <span class="overload">[3/4]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarmnn_1_1_scoped_tensor_handle.xhtml">ScopedTensorHandle</a> </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_const_tensor_handle.xhtml">ConstTensorHandle</a> &amp;&#160;</td>
          <td class="paramname"><em>tensorHandle</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">explicit</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_tensor_handle_8cpp_source.xhtml#l00066">66</a> of file <a class="el" href="_tensor_handle_8cpp_source.xhtml">TensorHandle.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;: <a class="code" href="classarmnn_1_1_scoped_tensor_handle.xhtml#aa70cd67dc8679c1b1f532fc05cb85f36">ScopedTensorHandle</a>(tensorHandle.GetTensorInfo())</div>
<div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;{</div>
<div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;    CopyFrom(tensorHandle.GetConstTensor&lt;<span class="keywordtype">void</span>&gt;(), tensorHandle.GetTensorInfo().GetNumBytes());</div>
<div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;}</div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="_tensor_handle_8hpp_source.xhtml#l00028">ConstTensorHandle::GetConstTensor()</a>, <a class="el" href="_tensor_8cpp_source.xhtml#l00427">TensorInfo::GetNumBytes()</a>, and <a class="el" href="_tensor_handle_8hpp_source.xhtml#l00040">ConstTensorHandle::GetTensorInfo()</a>.</p>

</div>
</div>
<a id="adae1153cc6727c4d5d7346a33d12a659"></a>
<h2 class="memtitle"><span class="permalink"><a href="#adae1153cc6727c4d5d7346a33d12a659">&#9670;&nbsp;</a></span>ScopedTensorHandle() <span class="overload">[4/4]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarmnn_1_1_scoped_tensor_handle.xhtml">ScopedTensorHandle</a> </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_scoped_tensor_handle.xhtml">ScopedTensorHandle</a> &amp;&#160;</td>
          <td class="paramname"><em>other</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_tensor_handle_8cpp_source.xhtml#l00072">72</a> of file <a class="el" href="_tensor_handle_8cpp_source.xhtml">TensorHandle.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;: <a class="code" href="classarmnn_1_1_tensor_handle.xhtml#adb815c65867e3125bfcdf545502e491a">TensorHandle</a>(other.GetTensorInfo())</div>
<div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;{</div>
<div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;    CopyFrom(other);</div>
<div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;}</div>
</div><!-- fragment -->
</div>
</div>
<a id="ae24cd57521cafb0474021168114c67e7"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ae24cd57521cafb0474021168114c67e7">&#9670;&nbsp;</a></span>~ScopedTensorHandle()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">~<a class="el" href="classarmnn_1_1_scoped_tensor_handle.xhtml">ScopedTensorHandle</a> </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_tensor_handle_8cpp_source.xhtml#l00086">86</a> of file <a class="el" href="_tensor_handle_8cpp_source.xhtml">TensorHandle.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;{</div>
<div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;    ::operator <span class="keyword">delete</span>(GetTensor&lt;void&gt;());</div>
<div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;}</div>
</div><!-- fragment -->
</div>
</div>
<h2 class="groupheader">Member Function Documentation</h2>
<a id="a8518772c5d692e334a76617582b10b92"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a8518772c5d692e334a76617582b10b92">&#9670;&nbsp;</a></span>Allocate()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void Allocate </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Indicate to the memory manager that this resource is no longer active. </p>
<p>This is used to compute overlapping lifetimes of resources. </p>

<p>Implements <a class="el" href="classarmnn_1_1_i_tensor_handle.xhtml#a5cceed8b707a09bf27eb61f17acf8a88">ITensorHandle</a>.</p>

<p class="definition">Definition at line <a class="el" href="_tensor_handle_8cpp_source.xhtml#l00091">91</a> of file <a class="el" href="_tensor_handle_8cpp_source.xhtml">TensorHandle.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;{</div>
<div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;    <span class="keywordflow">if</span> (GetTensor&lt;void&gt;() == <span class="keyword">nullptr</span>)</div>
<div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;    {</div>
<div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;        <a class="code" href="classarmnn_1_1_tensor_handle.xhtml#a0feac8591ac1a88993aa3278b24dcb57">SetMemory</a>(::<span class="keyword">operator</span> <span class="keyword">new</span>(<a class="code" href="classarmnn_1_1_const_tensor_handle.xhtml#a66e8f43a5b42b500871ed96e15419567">GetTensorInfo</a>().GetNumBytes()));</div>
<div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;    }</div>
<div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;    <span class="keywordflow">else</span></div>
<div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;    {</div>
<div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;        <span class="keywordflow">throw</span> InvalidArgumentException(<span class="stringliteral">&quot;TensorHandle::Allocate Trying to allocate a TensorHandle&quot;</span></div>
<div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;            <span class="stringliteral">&quot;that already has allocated memory.&quot;</span>);</div>
<div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;    }</div>
<div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;}</div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="_tensor_handle_8hpp_source.xhtml#l00040">ConstTensorHandle::GetTensorInfo()</a>, and <a class="el" href="_tensor_handle_8hpp_source.xhtml#l00098">TensorHandle::SetMemory()</a>.</p>

</div>
</div>
<a id="abb0bce07a52fa77c268595260af2073f"></a>
<h2 class="memtitle"><span class="permalink"><a href="#abb0bce07a52fa77c268595260af2073f">&#9670;&nbsp;</a></span>operator=()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarmnn_1_1_scoped_tensor_handle.xhtml">ScopedTensorHandle</a> &amp; operator= </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_scoped_tensor_handle.xhtml">ScopedTensorHandle</a> &amp;&#160;</td>
          <td class="paramname"><em>other</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_tensor_handle_8cpp_source.xhtml#l00078">78</a> of file <a class="el" href="_tensor_handle_8cpp_source.xhtml">TensorHandle.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;{</div>
<div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;    ::operator <span class="keyword">delete</span>(GetTensor&lt;void&gt;());</div>
<div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;    <a class="code" href="classarmnn_1_1_tensor_handle.xhtml#a0feac8591ac1a88993aa3278b24dcb57">SetMemory</a>(<span class="keyword">nullptr</span>);</div>
<div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;    CopyFrom(other);</div>
<div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;    <span class="keywordflow">return</span> *<span class="keyword">this</span>;</div>
<div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;}</div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="_tensor_handle_8hpp_source.xhtml#l00098">TensorHandle::SetMemory()</a>.</p>

</div>
</div>
<hr/>The documentation for this class was generated from the following files:<ul>
<li>include/armnn/backends/<a class="el" href="_tensor_handle_8hpp_source.xhtml">TensorHandle.hpp</a></li>
<li>src/backends/backendsCommon/<a class="el" href="_tensor_handle_8cpp_source.xhtml">TensorHandle.cpp</a></li>
</ul>
</div><!-- contents -->
</div><!-- doc-content -->
<div class="ttc" id="aclassarmnn_1_1_tensor_handle_xhtml_a0feac8591ac1a88993aa3278b24dcb57"><div class="ttname"><a href="classarmnn_1_1_tensor_handle.xhtml#a0feac8591ac1a88993aa3278b24dcb57">armnn::TensorHandle::SetMemory</a></div><div class="ttdeci">void SetMemory(void *mem)</div><div class="ttdef"><b>Definition:</b> <a href="_tensor_handle_8hpp_source.xhtml#l00098">TensorHandle.hpp:98</a></div></div>
<div class="ttc" id="aclassarmnn_1_1_tensor_handle_xhtml_adb815c65867e3125bfcdf545502e491a"><div class="ttname"><a href="classarmnn_1_1_tensor_handle.xhtml#adb815c65867e3125bfcdf545502e491a">armnn::TensorHandle::TensorHandle</a></div><div class="ttdeci">TensorHandle(const TensorInfo &amp;tensorInfo)</div><div class="ttdef"><b>Definition:</b> <a href="_tensor_handle_8cpp_source.xhtml#l00043">TensorHandle.cpp:43</a></div></div>
<div class="ttc" id="aclassarmnn_1_1_scoped_tensor_handle_xhtml_aa70cd67dc8679c1b1f532fc05cb85f36"><div class="ttname"><a href="classarmnn_1_1_scoped_tensor_handle.xhtml#aa70cd67dc8679c1b1f532fc05cb85f36">armnn::ScopedTensorHandle::ScopedTensorHandle</a></div><div class="ttdeci">ScopedTensorHandle(const TensorInfo &amp;tensorInfo)</div><div class="ttdef"><b>Definition:</b> <a href="_tensor_handle_8cpp_source.xhtml#l00055">TensorHandle.cpp:55</a></div></div>
<div class="ttc" id="aclassarmnn_1_1_const_tensor_handle_xhtml_a66e8f43a5b42b500871ed96e15419567"><div class="ttname"><a href="classarmnn_1_1_const_tensor_handle.xhtml#a66e8f43a5b42b500871ed96e15419567">armnn::ConstTensorHandle::GetTensorInfo</a></div><div class="ttdeci">const TensorInfo &amp; GetTensorInfo() const</div><div class="ttdef"><b>Definition:</b> <a href="_tensor_handle_8hpp_source.xhtml#l00040">TensorHandle.hpp:40</a></div></div>
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="namespacearmnn.xhtml">armnn</a></li><li class="navelem"><a class="el" href="classarmnn_1_1_scoped_tensor_handle.xhtml">ScopedTensorHandle</a></li>
    <li class="footer">Generated on Thu May 18 2023 10:35:50 for ArmNN by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.17 </li>
  </ul>
</div>
</body>
</html>
