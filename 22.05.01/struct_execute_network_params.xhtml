<!-- Copyright (c) 2020 ARM Limited. -->
<!--                                 -->
<!-- SPDX-License-Identifier: MIT    -->
<!--                                 -->
<!-- HTML header for doxygen 1.8.13-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.13"/>
<meta name="robots" content="NOINDEX, NOFOLLOW" />
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>ArmNN: ExecuteNetworkParams Struct Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script><script type="text/javascript" src="http://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="stylesheet.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <img alt="ArmNN" src="Arm_NN_horizontal_blue.png" style="max-width: 10rem; margin-top: .5rem; margin-left 10px"/>
  <td style="padding-left: 0.5em;">
   <div id="projectname">
   &#160;<span id="projectnumber">22.05.01</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.13 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
$(document).ready(function(){initNavTree('struct_execute_network_params.xhtml','');});
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="summary">
<a href="#pub-types">Public Types</a> &#124;
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="#pub-attribs">Public Attributes</a> &#124;
<a href="struct_execute_network_params-members.xhtml">List of all members</a>  </div>
  <div class="headertitle">
<div class="title">ExecuteNetworkParams Struct Reference</div>  </div>
</div><!--header-->
<div class="contents">

<p>Holds all parameters necessary to execute a network Check <a class="el" href="_execute_network_program_options_8cpp.xhtml">ExecuteNetworkProgramOptions.cpp</a> for a description of each parameter.  
 <a href="struct_execute_network_params.xhtml#details">More...</a></p>

<p><code>#include &lt;<a class="el" href="_execute_network_params_8hpp_source.xhtml">ExecuteNetworkParams.hpp</a>&gt;</code></p>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-types"></a>
Public Types</h2></td></tr>
<tr class="memitem:a721fa5f104533ca06589330accc2857d"><td class="memItemLeft" align="right" valign="top">enum &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="struct_execute_network_params.xhtml#a721fa5f104533ca06589330accc2857d">TfLiteExecutor</a> { <a class="el" href="struct_execute_network_params.xhtml#a721fa5f104533ca06589330accc2857daf36e3b2e1fe4ec94cab683d237883fee">ArmNNTfLiteParser</a>, 
<a class="el" href="struct_execute_network_params.xhtml#a721fa5f104533ca06589330accc2857da34feb52e49daeff4cae20f668187ec5c">ArmNNTfLiteDelegate</a>, 
<a class="el" href="struct_execute_network_params.xhtml#a721fa5f104533ca06589330accc2857da979cb18d483aeb3c0c636e340ba011df">TfliteInterpreter</a>
 }</td></tr>
<tr class="separator:a721fa5f104533ca06589330accc2857d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a29ca0d7f3ce1cb59535aa4d09f7d1b37"><td class="memItemLeft" align="right" valign="top">using&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="struct_execute_network_params.xhtml#a29ca0d7f3ce1cb59535aa4d09f7d1b37">TensorShapePtr</a> = std::unique_ptr&lt; <a class="el" href="classarmnn_1_1_tensor_shape.xhtml">armnn::TensorShape</a> &gt;</td></tr>
<tr class="separator:a29ca0d7f3ce1cb59535aa4d09f7d1b37"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:a96a7042f9c83beec8e30088f3d85ed9c"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="struct_execute_network_params.xhtml#a96a7042f9c83beec8e30088f3d85ed9c">ValidateParams</a> ()</td></tr>
<tr class="separator:a96a7042f9c83beec8e30088f3d85ed9c"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-attribs"></a>
Public Attributes</h2></td></tr>
<tr class="memitem:a9ef8ddbeee4b869e4c68eb2ed278b8d9"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="struct_execute_network_params.xhtml#a9ef8ddbeee4b869e4c68eb2ed278b8d9">m_AllowExpandedDims</a></td></tr>
<tr class="separator:a9ef8ddbeee4b869e4c68eb2ed278b8d9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9f8881646a38f828f92d3354930c4165"><td class="memItemLeft" align="right" valign="top">std::string&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="struct_execute_network_params.xhtml#a9f8881646a38f828f92d3354930c4165">m_CachedNetworkFilePath</a></td></tr>
<tr class="separator:a9f8881646a38f828f92d3354930c4165"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2d54e6252c1c9a0e29f7706ba03b2b74"><td class="memItemLeft" align="right" valign="top">std::vector&lt; <a class="el" href="classarmnn_1_1_backend_id.xhtml">armnn::BackendId</a> &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="struct_execute_network_params.xhtml#a2d54e6252c1c9a0e29f7706ba03b2b74">m_ComputeDevices</a></td></tr>
<tr class="separator:a2d54e6252c1c9a0e29f7706ba03b2b74"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:abf3cb45be3828b72b4ac08f87ac6c779"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="struct_execute_network_params.xhtml#abf3cb45be3828b72b4ac08f87ac6c779">m_Concurrent</a></td></tr>
<tr class="separator:abf3cb45be3828b72b4ac08f87ac6c779"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a85929a48c5e7b16af8f5bc637e45a37f"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="struct_execute_network_params.xhtml#a85929a48c5e7b16af8f5bc637e45a37f">m_DequantizeOutput</a></td></tr>
<tr class="separator:a85929a48c5e7b16af8f5bc637e45a37f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae43cf4b5df0068ee6a9151c98947248b"><td class="memItemLeft" align="right" valign="top">std::string&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="struct_execute_network_params.xhtml#ae43cf4b5df0068ee6a9151c98947248b">m_DynamicBackendsPath</a></td></tr>
<tr class="separator:ae43cf4b5df0068ee6a9151c98947248b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0b99050baebe1d169392461b3a9be08d"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="struct_execute_network_params.xhtml#a0b99050baebe1d169392461b3a9be08d">m_EnableBf16TurboMode</a></td></tr>
<tr class="separator:a0b99050baebe1d169392461b3a9be08d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a66f9597b152215daba3211379dad63d3"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="struct_execute_network_params.xhtml#a66f9597b152215daba3211379dad63d3">m_EnableFastMath</a> = false</td></tr>
<tr class="separator:a66f9597b152215daba3211379dad63d3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a513151623e8d448951a0b94ad1946fbe"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="struct_execute_network_params.xhtml#a513151623e8d448951a0b94ad1946fbe">m_EnableFp16TurboMode</a></td></tr>
<tr class="separator:a513151623e8d448951a0b94ad1946fbe"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7efc68309e76bfefbfa16fe94501b060"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="struct_execute_network_params.xhtml#a7efc68309e76bfefbfa16fe94501b060">m_EnableLayerDetails</a> = false</td></tr>
<tr class="separator:a7efc68309e76bfefbfa16fe94501b060"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a26d42007440bb01a1a6d0ab3b5a657ee"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="struct_execute_network_params.xhtml#a26d42007440bb01a1a6d0ab3b5a657ee">m_EnableProfiling</a></td></tr>
<tr class="separator:a26d42007440bb01a1a6d0ab3b5a657ee"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a99c7360a4d4b248b3f10607bc5d2fe7b"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="struct_execute_network_params.xhtml#a99c7360a4d4b248b3f10607bc5d2fe7b">m_GenerateTensorData</a></td></tr>
<tr class="separator:a99c7360a4d4b248b3f10607bc5d2fe7b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2a245a63e87f363df491ad8c35be54c5"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="struct_execute_network_params.xhtml#a2a245a63e87f363df491ad8c35be54c5">m_InferOutputShape</a> = false</td></tr>
<tr class="separator:a2a245a63e87f363df491ad8c35be54c5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad9e5bfa84cf85e3ddf24ae6cb124d3d4"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="struct_execute_network_params.xhtml#ad9e5bfa84cf85e3ddf24ae6cb124d3d4">m_EnableDelegate</a> = false</td></tr>
<tr class="separator:ad9e5bfa84cf85e3ddf24ae6cb124d3d4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aaf3c7f286030842a31025309ab6a8329"><td class="memItemLeft" align="right" valign="top">std::vector&lt; std::string &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="struct_execute_network_params.xhtml#aaf3c7f286030842a31025309ab6a8329">m_InputNames</a></td></tr>
<tr class="separator:aaf3c7f286030842a31025309ab6a8329"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae3c3ae097395afea488cd3e0244269fa"><td class="memItemLeft" align="right" valign="top">std::vector&lt; std::string &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="struct_execute_network_params.xhtml#ae3c3ae097395afea488cd3e0244269fa">m_InputTensorDataFilePaths</a></td></tr>
<tr class="separator:ae3c3ae097395afea488cd3e0244269fa"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a091cda9098c6f03f91f477a22327892d"><td class="memItemLeft" align="right" valign="top">std::vector&lt; <a class="el" href="struct_execute_network_params.xhtml#a29ca0d7f3ce1cb59535aa4d09f7d1b37">TensorShapePtr</a> &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="struct_execute_network_params.xhtml#a091cda9098c6f03f91f477a22327892d">m_InputTensorShapes</a></td></tr>
<tr class="separator:a091cda9098c6f03f91f477a22327892d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:acc7592cbdfe2e70cbc3794fb1e7eaeb9"><td class="memItemLeft" align="right" valign="top">std::vector&lt; std::string &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="struct_execute_network_params.xhtml#acc7592cbdfe2e70cbc3794fb1e7eaeb9">m_InputTypes</a></td></tr>
<tr class="separator:acc7592cbdfe2e70cbc3794fb1e7eaeb9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6bf2f586c403977d31c7d32d371918cf"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="struct_execute_network_params.xhtml#a6bf2f586c403977d31c7d32d371918cf">m_IsModelBinary</a></td></tr>
<tr class="separator:a6bf2f586c403977d31c7d32d371918cf"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6e4eff6a5f40cb026ea76d3c13c96341"><td class="memItemLeft" align="right" valign="top">size_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="struct_execute_network_params.xhtml#a6e4eff6a5f40cb026ea76d3c13c96341">m_Iterations</a></td></tr>
<tr class="separator:a6e4eff6a5f40cb026ea76d3c13c96341"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a86800ee44cdb3d1bfd169ec4200212d2"><td class="memItemLeft" align="right" valign="top">std::string&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="struct_execute_network_params.xhtml#a86800ee44cdb3d1bfd169ec4200212d2">m_ModelFormat</a></td></tr>
<tr class="separator:a86800ee44cdb3d1bfd169ec4200212d2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4fa312cf0d60fbd3988a7c76ab8e2980"><td class="memItemLeft" align="right" valign="top">std::string&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="struct_execute_network_params.xhtml#a4fa312cf0d60fbd3988a7c76ab8e2980">m_ModelPath</a></td></tr>
<tr class="separator:a4fa312cf0d60fbd3988a7c76ab8e2980"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:adc650e032e7fce99f15e2bf903e7167b"><td class="memItemLeft" align="right" valign="top">unsigned int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="struct_execute_network_params.xhtml#adc650e032e7fce99f15e2bf903e7167b">m_NumberOfThreads</a></td></tr>
<tr class="separator:adc650e032e7fce99f15e2bf903e7167b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae96fc745917a3a0c0de7a818c9a05012"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="struct_execute_network_params.xhtml#ae96fc745917a3a0c0de7a818c9a05012">m_OutputDetailsToStdOut</a></td></tr>
<tr class="separator:ae96fc745917a3a0c0de7a818c9a05012"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab17deb382179697b4702cc4f909e71f8"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="struct_execute_network_params.xhtml#ab17deb382179697b4702cc4f909e71f8">m_OutputDetailsOnlyToStdOut</a></td></tr>
<tr class="separator:ab17deb382179697b4702cc4f909e71f8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a982d4141ecde3eb220a136610d853df2"><td class="memItemLeft" align="right" valign="top">std::vector&lt; std::string &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="struct_execute_network_params.xhtml#a982d4141ecde3eb220a136610d853df2">m_OutputNames</a></td></tr>
<tr class="separator:a982d4141ecde3eb220a136610d853df2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a74d346297c55b516908c541030adc88d"><td class="memItemLeft" align="right" valign="top">std::vector&lt; std::string &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="struct_execute_network_params.xhtml#a74d346297c55b516908c541030adc88d">m_OutputTensorFiles</a></td></tr>
<tr class="separator:a74d346297c55b516908c541030adc88d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a810addfa426b5ac1476035dedee7cda5"><td class="memItemLeft" align="right" valign="top">std::vector&lt; std::string &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="struct_execute_network_params.xhtml#a810addfa426b5ac1476035dedee7cda5">m_OutputTypes</a></td></tr>
<tr class="separator:a810addfa426b5ac1476035dedee7cda5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5c7f0c083da98e7b6e9ba79d2fcd985d"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="struct_execute_network_params.xhtml#a5c7f0c083da98e7b6e9ba79d2fcd985d">m_ParseUnsupported</a> = false</td></tr>
<tr class="separator:a5c7f0c083da98e7b6e9ba79d2fcd985d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5acc5b4076604db15ee13ee19fa623c4"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="struct_execute_network_params.xhtml#a5acc5b4076604db15ee13ee19fa623c4">m_PrintIntermediate</a></td></tr>
<tr class="separator:a5acc5b4076604db15ee13ee19fa623c4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac828647e0c753c3727c8c1f81939f7e4"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="struct_execute_network_params.xhtml#ac828647e0c753c3727c8c1f81939f7e4">m_DontPrintOutputs</a></td></tr>
<tr class="separator:ac828647e0c753c3727c8c1f81939f7e4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a077f6963fc555d9d42f98cf9ed3e7e03"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="struct_execute_network_params.xhtml#a077f6963fc555d9d42f98cf9ed3e7e03">m_QuantizeInput</a></td></tr>
<tr class="separator:a077f6963fc555d9d42f98cf9ed3e7e03"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9a04b8c7f19a84f63125edec509b6d53"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="struct_execute_network_params.xhtml#a9a04b8c7f19a84f63125edec509b6d53">m_SaveCachedNetwork</a></td></tr>
<tr class="separator:a9a04b8c7f19a84f63125edec509b6d53"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa2de78becdf56c5a29a7dee5110cd164"><td class="memItemLeft" align="right" valign="top">size_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="struct_execute_network_params.xhtml#aa2de78becdf56c5a29a7dee5110cd164">m_SimultaneousIterations</a></td></tr>
<tr class="separator:aa2de78becdf56c5a29a7dee5110cd164"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2d4582aa74998c397bd064ae73745b62"><td class="memItemLeft" align="right" valign="top">size_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="struct_execute_network_params.xhtml#a2d4582aa74998c397bd064ae73745b62">m_SubgraphId</a></td></tr>
<tr class="separator:a2d4582aa74998c397bd064ae73745b62"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a318999172ae5197f56326b12d29104b7"><td class="memItemLeft" align="right" valign="top">double&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="struct_execute_network_params.xhtml#a318999172ae5197f56326b12d29104b7">m_ThresholdTime</a></td></tr>
<tr class="separator:a318999172ae5197f56326b12d29104b7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad14d073dddd554025957ef73ac183649"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="struct_execute_network_params.xhtml#ad14d073dddd554025957ef73ac183649">m_TuningLevel</a></td></tr>
<tr class="separator:ad14d073dddd554025957ef73ac183649"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aaa966b4792eae29d659a78cd6faf1a68"><td class="memItemLeft" align="right" valign="top">std::string&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="struct_execute_network_params.xhtml#aaa966b4792eae29d659a78cd6faf1a68">m_TuningPath</a></td></tr>
<tr class="separator:aaa966b4792eae29d659a78cd6faf1a68"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac609a217f4de4c647422dbb358a5f2ef"><td class="memItemLeft" align="right" valign="top">std::string&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="struct_execute_network_params.xhtml#ac609a217f4de4c647422dbb358a5f2ef">m_MLGOTuningFilePath</a></td></tr>
<tr class="separator:ac609a217f4de4c647422dbb358a5f2ef"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a876462c8d3a74b51c890820df24f42f9"><td class="memItemLeft" align="right" valign="top"><a class="el" href="struct_execute_network_params.xhtml#a721fa5f104533ca06589330accc2857d">TfLiteExecutor</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="struct_execute_network_params.xhtml#a876462c8d3a74b51c890820df24f42f9">m_TfLiteExecutor</a></td></tr>
<tr class="separator:a876462c8d3a74b51c890820df24f42f9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7adc5dcfe3d76ac489f253c4d5f439c8"><td class="memItemLeft" align="right" valign="top">size_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="struct_execute_network_params.xhtml#a7adc5dcfe3d76ac489f253c4d5f439c8">m_ThreadPoolSize</a></td></tr>
<tr class="separator:a7adc5dcfe3d76ac489f253c4d5f439c8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1697b9751b4ba381f89b8c81cd9dfc3c"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="struct_execute_network_params.xhtml#a1697b9751b4ba381f89b8c81cd9dfc3c">m_ImportInputsIfAligned</a></td></tr>
<tr class="separator:a1697b9751b4ba381f89b8c81cd9dfc3c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:acb9376adc0f7174b7d4295e00315a084"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="struct_execute_network_params.xhtml#acb9376adc0f7174b7d4295e00315a084">m_ReuseBuffers</a></td></tr>
<tr class="separator:acb9376adc0f7174b7d4295e00315a084"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><p>Holds all parameters necessary to execute a network Check <a class="el" href="_execute_network_program_options_8cpp.xhtml">ExecuteNetworkProgramOptions.cpp</a> for a description of each parameter. </p>

<p class="definition">Definition at line <a class="el" href="_execute_network_params_8hpp_source.xhtml#l00017">17</a> of file <a class="el" href="_execute_network_params_8hpp_source.xhtml">ExecuteNetworkParams.hpp</a>.</p>
</div><h2 class="groupheader">Member Typedef Documentation</h2>
<a id="a29ca0d7f3ce1cb59535aa4d09f7d1b37"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a29ca0d7f3ce1cb59535aa4d09f7d1b37">&#9670;&nbsp;</a></span>TensorShapePtr</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">using <a class="el" href="struct_execute_network_params.xhtml#a29ca0d7f3ce1cb59535aa4d09f7d1b37">TensorShapePtr</a> =  std::unique_ptr&lt;<a class="el" href="classarmnn_1_1_tensor_shape.xhtml">armnn::TensorShape</a>&gt;</td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_execute_network_params_8hpp_source.xhtml#l00019">19</a> of file <a class="el" href="_execute_network_params_8hpp_source.xhtml">ExecuteNetworkParams.hpp</a>.</p>

</div>
</div>
<h2 class="groupheader">Member Enumeration Documentation</h2>
<a id="a721fa5f104533ca06589330accc2857d"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a721fa5f104533ca06589330accc2857d">&#9670;&nbsp;</a></span>TfLiteExecutor</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">enum <a class="el" href="struct_execute_network_params.xhtml#a721fa5f104533ca06589330accc2857d">TfLiteExecutor</a></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">strong</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<table class="fieldtable">
<tr><th colspan="2">Enumerator</th></tr><tr><td class="fieldname"><a id="a721fa5f104533ca06589330accc2857daf36e3b2e1fe4ec94cab683d237883fee"></a>ArmNNTfLiteParser&#160;</td><td class="fielddoc"></td></tr>
<tr><td class="fieldname"><a id="a721fa5f104533ca06589330accc2857da34feb52e49daeff4cae20f668187ec5c"></a>ArmNNTfLiteDelegate&#160;</td><td class="fielddoc"></td></tr>
<tr><td class="fieldname"><a id="a721fa5f104533ca06589330accc2857da979cb18d483aeb3c0c636e340ba011df"></a>TfliteInterpreter&#160;</td><td class="fielddoc"></td></tr>
</table>

<p class="definition">Definition at line <a class="el" href="_execute_network_params_8hpp_source.xhtml#l00021">21</a> of file <a class="el" href="_execute_network_params_8hpp_source.xhtml">ExecuteNetworkParams.hpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;    {</div><div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;        ArmNNTfLiteParser,</div><div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;        ArmNNTfLiteDelegate,</div><div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;        TfliteInterpreter</div><div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;    };</div></div><!-- fragment -->
</div>
</div>
<h2 class="groupheader">Member Function Documentation</h2>
<a id="a96a7042f9c83beec8e30088f3d85ed9c"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a96a7042f9c83beec8e30088f3d85ed9c">&#9670;&nbsp;</a></span>ValidateParams()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void ValidateParams </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_execute_network_params_8cpp_source.xhtml#l00111">111</a> of file <a class="el" href="_execute_network_params_8cpp_source.xhtml">ExecuteNetworkParams.cpp</a>.</p>

<p class="reference">References <a class="el" href="_logging_8hpp_source.xhtml#l00205">ARMNN_LOG</a>, <a class="el" href="_execute_network_params_8cpp_source.xhtml#l00075">CheckClTuningParameter()</a>, <a class="el" href="_execute_network_params_8cpp_source.xhtml#l00033">CheckModelFormat()</a>, <a class="el" href="namespacearmnn.xhtml#ae060224135f57f926cbda9d2732a2b1fa497ab261a562e316736c2cb59b839d32">armnn::DetailsWithEvents</a>, <a class="el" href="namespacearmnn.xhtml#adf57837d00e8352d9b5cc5ab1fb5fee9a5dd7c525cb1500a2181fd4cc079d7acb">armnn::InferAndValidate</a>, <a class="el" href="_execute_network_params_8cpp_source.xhtml#l00014">IsModelBinary()</a>, <a class="el" href="_execute_network_params_8hpp_source.xhtml#l00028">m_AllowExpandedDims</a>, <a class="el" href="_execute_network_params_8hpp_source.xhtml#l00029">m_CachedNetworkFilePath</a>, <a class="el" href="_execute_network_params_8hpp_source.xhtml#l00030">m_ComputeDevices</a>, <a class="el" href="_i_network_8hpp_source.xhtml#l00217">OptimizerOptions::m_Debug</a>, <a class="el" href="_execute_network_params_8hpp_source.xhtml#l00033">m_DynamicBackendsPath</a>, <a class="el" href="_execute_network_params_8hpp_source.xhtml#l00034">m_EnableBf16TurboMode</a>, <a class="el" href="_execute_network_params_8hpp_source.xhtml#l00035">m_EnableFastMath</a>, <a class="el" href="_execute_network_params_8hpp_source.xhtml#l00036">m_EnableFp16TurboMode</a>, <a class="el" href="_execute_network_params_8hpp_source.xhtml#l00037">m_EnableLayerDetails</a>, <a class="el" href="_execute_network_params_8hpp_source.xhtml#l00038">m_EnableProfiling</a>, <a class="el" href="_execute_network_params_8hpp_source.xhtml#l00039">m_GenerateTensorData</a>, <a class="el" href="_execute_network_params_8hpp_source.xhtml#l00040">m_InferOutputShape</a>, <a class="el" href="_execute_network_params_8hpp_source.xhtml#l00042">m_InputNames</a>, <a class="el" href="_execute_network_params_8hpp_source.xhtml#l00043">m_InputTensorDataFilePaths</a>, <a class="el" href="_execute_network_params_8hpp_source.xhtml#l00044">m_InputTensorShapes</a>, <a class="el" href="_execute_network_params_8hpp_source.xhtml#l00045">m_InputTypes</a>, <a class="el" href="_execute_network_params_8hpp_source.xhtml#l00046">m_IsModelBinary</a>, <a class="el" href="_execute_network_params_8hpp_source.xhtml#l00047">m_Iterations</a>, <a class="el" href="_execute_network_params_8hpp_source.xhtml#l00066">m_MLGOTuningFilePath</a>, <a class="el" href="_execute_network_params_8hpp_source.xhtml#l00048">m_ModelFormat</a>, <a class="el" href="_i_network_8hpp_source.xhtml#l00233">OptimizerOptions::m_ModelOptions</a>, <a class="el" href="_execute_network_params_8hpp_source.xhtml#l00049">m_ModelPath</a>, <a class="el" href="_execute_network_params_8hpp_source.xhtml#l00050">m_NumberOfThreads</a>, <a class="el" href="_execute_network_params_8hpp_source.xhtml#l00053">m_OutputNames</a>, <a class="el" href="_execute_network_params_8hpp_source.xhtml#l00054">m_OutputTensorFiles</a>, <a class="el" href="_execute_network_params_8hpp_source.xhtml#l00055">m_OutputTypes</a>, <a class="el" href="_execute_network_params_8hpp_source.xhtml#l00057">m_PrintIntermediate</a>, <a class="el" href="_i_network_8hpp_source.xhtml#l00236">OptimizerOptions::m_ProfilingEnabled</a>, <a class="el" href="_i_network_8hpp_source.xhtml#l00224">OptimizerOptions::m_ReduceFp32ToBf16</a>, <a class="el" href="_i_network_8hpp_source.xhtml#l00214">OptimizerOptions::m_ReduceFp32ToFp16</a>, <a class="el" href="_execute_network_params_8hpp_source.xhtml#l00060">m_SaveCachedNetwork</a>, <a class="el" href="_i_network_8hpp_source.xhtml#l00227">OptimizerOptions::m_shapeInferenceMethod</a>, <a class="el" href="_execute_network_params_8hpp_source.xhtml#l00063">m_ThresholdTime</a>, <a class="el" href="_execute_network_params_8hpp_source.xhtml#l00064">m_TuningLevel</a>, <a class="el" href="_execute_network_params_8hpp_source.xhtml#l00065">m_TuningPath</a>, <a class="el" href="_delegate_options_8hpp_source.xhtml#l00192">DelegateOptions::SetDynamicBackendsPath()</a>, <a class="el" href="_delegate_options_8hpp_source.xhtml#l00201">DelegateOptions::SetGpuProfilingState()</a>, <a class="el" href="_delegate_options_8hpp_source.xhtml#l00237">DelegateOptions::SetInternalProfilingParams()</a>, <a class="el" href="_delegate_options_8hpp_source.xhtml#l00232">DelegateOptions::SetOptimizerOptions()</a>, <a class="el" href="_delegate_options_8hpp_source.xhtml#l00251">DelegateOptions::SetSerializeToDot()</a>, <a class="el" href="namespacearmnn.xhtml#adf57837d00e8352d9b5cc5ab1fb5fee9af6486a22a9bb11959bfae60a3e5174b1">armnn::ValidateOnly</a>, and <a class="el" href="_network_execution_utils_8cpp_source.xhtml#l00315">ValidatePaths()</a>.</p>

<p class="reference">Referenced by <a class="el" href="_execute_network_program_options_8cpp_source.xhtml#l00156">ProgramOptions::ValidateExecuteNetworkParams()</a>.</p>
<div class="fragment"><div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;{</div><div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;    <span class="keywordflow">if</span> (<a class="code" href="struct_execute_network_params.xhtml#ae43cf4b5df0068ee6a9151c98947248b">m_DynamicBackendsPath</a> == <span class="stringliteral">&quot;&quot;</span>)</div><div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;    {</div><div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;        <span class="comment">// Check compute devices are valid unless they are dynamically loaded at runtime</span></div><div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;        std::string invalidBackends;</div><div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;        <span class="keywordflow">if</span> (!CheckRequestedBackendsAreValid(<a class="code" href="struct_execute_network_params.xhtml#a2d54e6252c1c9a0e29f7706ba03b2b74">m_ComputeDevices</a>, <a class="code" href="classarmnn_1_1_optional.xhtml">armnn::Optional&lt;std::string&amp;&gt;</a>(invalidBackends)))</div><div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;        {</div><div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;            <a class="code" href="_logging_8hpp.xhtml#a7b6ad073975f437ec38ca7d20154727f">ARMNN_LOG</a>(fatal) &lt;&lt; <span class="stringliteral">&quot;The list of preferred devices contains invalid backend IDs: &quot;</span></div><div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;                             &lt;&lt; invalidBackends;</div><div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;        }</div><div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;    }</div><div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;</div><div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;    <a class="code" href="_execute_network_params_8cpp.xhtml#a1271e91c17f407e0f4912edffcd44942">CheckClTuningParameter</a>(<a class="code" href="struct_execute_network_params.xhtml#ad14d073dddd554025957ef73ac183649">m_TuningLevel</a>, <a class="code" href="struct_execute_network_params.xhtml#aaa966b4792eae29d659a78cd6faf1a68">m_TuningPath</a>, <a class="code" href="struct_execute_network_params.xhtml#a2d54e6252c1c9a0e29f7706ba03b2b74">m_ComputeDevices</a>);</div><div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;</div><div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;    <span class="keywordflow">if</span> (<a class="code" href="struct_execute_network_params.xhtml#a0b99050baebe1d169392461b3a9be08d">m_EnableBf16TurboMode</a> &amp;&amp; <a class="code" href="struct_execute_network_params.xhtml#a513151623e8d448951a0b94ad1946fbe">m_EnableFp16TurboMode</a>)</div><div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;    {</div><div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;        <span class="keywordflow">throw</span> <a class="code" href="classarmnn_1_1_invalid_argument_exception.xhtml">armnn::InvalidArgumentException</a>(<span class="stringliteral">&quot;BFloat16 and Float16 turbo mode cannot be &quot;</span></div><div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;                                              <span class="stringliteral">&quot;enabled at the same time.&quot;</span>);</div><div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;    }</div><div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;</div><div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;    <a class="code" href="struct_execute_network_params.xhtml#a6bf2f586c403977d31c7d32d371918cf">m_IsModelBinary</a> = <a class="code" href="_execute_network_params_8cpp.xhtml#a59c1f5f5c5c9fc85c284e0518d32cfad">IsModelBinary</a>(<a class="code" href="struct_execute_network_params.xhtml#a86800ee44cdb3d1bfd169ec4200212d2">m_ModelFormat</a>);</div><div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;</div><div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;    <a class="code" href="_execute_network_params_8cpp.xhtml#a4da63fa4fda7dbcd1f71f813fbd527eb">CheckModelFormat</a>(<a class="code" href="struct_execute_network_params.xhtml#a86800ee44cdb3d1bfd169ec4200212d2">m_ModelFormat</a>);</div><div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;</div><div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;    <span class="comment">// Check input tensor shapes</span></div><div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;    <span class="keywordflow">if</span> ((<a class="code" href="struct_execute_network_params.xhtml#a091cda9098c6f03f91f477a22327892d">m_InputTensorShapes</a>.size() != 0) &amp;&amp;</div><div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;        (<a class="code" href="struct_execute_network_params.xhtml#a091cda9098c6f03f91f477a22327892d">m_InputTensorShapes</a>.size() != <a class="code" href="struct_execute_network_params.xhtml#aaf3c7f286030842a31025309ab6a8329">m_InputNames</a>.size()))</div><div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;    {</div><div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;        <span class="keywordflow">throw</span> <a class="code" href="classarmnn_1_1_invalid_argument_exception.xhtml">armnn::InvalidArgumentException</a>(<span class="stringliteral">&quot;input-name and input-tensor-shape must have &quot;</span></div><div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;                                              <span class="stringliteral">&quot;the same amount of elements. &quot;</span>);</div><div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;    }</div><div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;</div><div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;    <span class="keywordflow">if</span> (<a class="code" href="struct_execute_network_params.xhtml#ae3c3ae097395afea488cd3e0244269fa">m_InputTensorDataFilePaths</a>.size() != 0)</div><div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;    {</div><div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;        <span class="keywordflow">if</span> (!<a class="code" href="_network_execution_utils_8cpp.xhtml#aa8ad60308ed132ba939a09d48a97ac30">ValidatePaths</a>(<a class="code" href="struct_execute_network_params.xhtml#ae3c3ae097395afea488cd3e0244269fa">m_InputTensorDataFilePaths</a>, <span class="keyword">true</span>))</div><div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;        {</div><div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;            <span class="keywordflow">throw</span> <a class="code" href="classarmnn_1_1_invalid_argument_exception.xhtml">armnn::InvalidArgumentException</a>(<span class="stringliteral">&quot;One or more input data file paths are not valid.&quot;</span>);</div><div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;        }</div><div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;</div><div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;        <span class="keywordflow">if</span> (<a class="code" href="struct_execute_network_params.xhtml#ae3c3ae097395afea488cd3e0244269fa">m_InputTensorDataFilePaths</a>.size() &lt; <a class="code" href="struct_execute_network_params.xhtml#aaf3c7f286030842a31025309ab6a8329">m_InputNames</a>.size())</div><div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;        {</div><div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;            <span class="keywordflow">throw</span> <a class="code" href="classarmnn_1_1_invalid_argument_exception.xhtml">armnn::InvalidArgumentException</a>(</div><div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;                    fmt::format(<span class="stringliteral">&quot;According to the number of input names the user provided the network has {} &quot;</span></div><div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;                                <span class="stringliteral">&quot;inputs. But only {} input-tensor-data file paths were provided. Each input of the &quot;</span></div><div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;                                <span class="stringliteral">&quot;model is expected to be stored in it&#39;s own file.&quot;</span>,</div><div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160;                                <a class="code" href="struct_execute_network_params.xhtml#aaf3c7f286030842a31025309ab6a8329">m_InputNames</a>.size(),</div><div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;                                <a class="code" href="struct_execute_network_params.xhtml#ae3c3ae097395afea488cd3e0244269fa">m_InputTensorDataFilePaths</a>.size()));</div><div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160;        }</div><div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160;        <span class="keywordflow">else</span> <span class="keywordflow">if</span> (<a class="code" href="struct_execute_network_params.xhtml#ae3c3ae097395afea488cd3e0244269fa">m_InputTensorDataFilePaths</a>.size() % <a class="code" href="struct_execute_network_params.xhtml#aaf3c7f286030842a31025309ab6a8329">m_InputNames</a>.size() != 0)</div><div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160;        {</div><div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160;            <span class="keywordflow">throw</span> <a class="code" href="classarmnn_1_1_invalid_argument_exception.xhtml">armnn::InvalidArgumentException</a>(</div><div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160;                    fmt::format(<span class="stringliteral">&quot;According to the number of input names the user provided the network has {} &quot;</span></div><div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;                                <span class="stringliteral">&quot;inputs. The user specified {} input-tensor-data file paths which is not &quot;</span></div><div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160;                                <span class="stringliteral">&quot;divisible by the number of inputs.&quot;</span>,</div><div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160;                                <a class="code" href="struct_execute_network_params.xhtml#aaf3c7f286030842a31025309ab6a8329">m_InputNames</a>.size(),</div><div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160;                                <a class="code" href="struct_execute_network_params.xhtml#ae3c3ae097395afea488cd3e0244269fa">m_InputTensorDataFilePaths</a>.size()));</div><div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160;        }</div><div class="line"><a name="l00169"></a><span class="lineno">  169</span>&#160;    }</div><div class="line"><a name="l00170"></a><span class="lineno">  170</span>&#160;</div><div class="line"><a name="l00171"></a><span class="lineno">  171</span>&#160;    <span class="keywordflow">if</span> (<a class="code" href="struct_execute_network_params.xhtml#acc7592cbdfe2e70cbc3794fb1e7eaeb9">m_InputTypes</a>.size() == 0)</div><div class="line"><a name="l00172"></a><span class="lineno">  172</span>&#160;    {</div><div class="line"><a name="l00173"></a><span class="lineno">  173</span>&#160;        <span class="comment">//Defaults the value of all inputs to &quot;float&quot;</span></div><div class="line"><a name="l00174"></a><span class="lineno">  174</span>&#160;        <a class="code" href="struct_execute_network_params.xhtml#acc7592cbdfe2e70cbc3794fb1e7eaeb9">m_InputTypes</a>.assign(<a class="code" href="struct_execute_network_params.xhtml#aaf3c7f286030842a31025309ab6a8329">m_InputNames</a>.size(), <span class="stringliteral">&quot;float&quot;</span>);</div><div class="line"><a name="l00175"></a><span class="lineno">  175</span>&#160;    }</div><div class="line"><a name="l00176"></a><span class="lineno">  176</span>&#160;    <span class="keywordflow">else</span> <span class="keywordflow">if</span> ((<a class="code" href="struct_execute_network_params.xhtml#acc7592cbdfe2e70cbc3794fb1e7eaeb9">m_InputTypes</a>.size() != 0) &amp;&amp;</div><div class="line"><a name="l00177"></a><span class="lineno">  177</span>&#160;             (<a class="code" href="struct_execute_network_params.xhtml#acc7592cbdfe2e70cbc3794fb1e7eaeb9">m_InputTypes</a>.size() != <a class="code" href="struct_execute_network_params.xhtml#aaf3c7f286030842a31025309ab6a8329">m_InputNames</a>.size()))</div><div class="line"><a name="l00178"></a><span class="lineno">  178</span>&#160;    {</div><div class="line"><a name="l00179"></a><span class="lineno">  179</span>&#160;        <span class="keywordflow">throw</span> <a class="code" href="classarmnn_1_1_invalid_argument_exception.xhtml">armnn::InvalidArgumentException</a>(<span class="stringliteral">&quot;input-name and input-type must have the same amount of elements.&quot;</span>);</div><div class="line"><a name="l00180"></a><span class="lineno">  180</span>&#160;    }</div><div class="line"><a name="l00181"></a><span class="lineno">  181</span>&#160;</div><div class="line"><a name="l00182"></a><span class="lineno">  182</span>&#160;    <span class="comment">// Make sure that the number of input files given is divisible by the number of inputs of the model</span></div><div class="line"><a name="l00183"></a><span class="lineno">  183</span>&#160;    <span class="keywordflow">if</span> (!(<a class="code" href="struct_execute_network_params.xhtml#ae3c3ae097395afea488cd3e0244269fa">m_InputTensorDataFilePaths</a>.size() % <a class="code" href="struct_execute_network_params.xhtml#aaf3c7f286030842a31025309ab6a8329">m_InputNames</a>.size() == 0))</div><div class="line"><a name="l00184"></a><span class="lineno">  184</span>&#160;    {</div><div class="line"><a name="l00185"></a><span class="lineno">  185</span>&#160;        <span class="keywordflow">throw</span> <a class="code" href="classarmnn_1_1_invalid_argument_exception.xhtml">armnn::InvalidArgumentException</a>(</div><div class="line"><a name="l00186"></a><span class="lineno">  186</span>&#160;                fmt::format(<span class="stringliteral">&quot;The number of input-tensor-data files ({0}) is not divisible by the &quot;</span></div><div class="line"><a name="l00187"></a><span class="lineno">  187</span>&#160;                            <span class="stringliteral">&quot;number of inputs ({1} according to the number of input names).&quot;</span>,</div><div class="line"><a name="l00188"></a><span class="lineno">  188</span>&#160;                            <a class="code" href="struct_execute_network_params.xhtml#ae3c3ae097395afea488cd3e0244269fa">m_InputTensorDataFilePaths</a>.size(),</div><div class="line"><a name="l00189"></a><span class="lineno">  189</span>&#160;                            <a class="code" href="struct_execute_network_params.xhtml#aaf3c7f286030842a31025309ab6a8329">m_InputNames</a>.size()));</div><div class="line"><a name="l00190"></a><span class="lineno">  190</span>&#160;    }</div><div class="line"><a name="l00191"></a><span class="lineno">  191</span>&#160;</div><div class="line"><a name="l00192"></a><span class="lineno">  192</span>&#160;    <span class="keywordflow">if</span> (<a class="code" href="struct_execute_network_params.xhtml#a810addfa426b5ac1476035dedee7cda5">m_OutputTypes</a>.size() == 0)</div><div class="line"><a name="l00193"></a><span class="lineno">  193</span>&#160;    {</div><div class="line"><a name="l00194"></a><span class="lineno">  194</span>&#160;        <span class="comment">//Defaults the value of all outputs to &quot;float&quot;</span></div><div class="line"><a name="l00195"></a><span class="lineno">  195</span>&#160;        <a class="code" href="struct_execute_network_params.xhtml#a810addfa426b5ac1476035dedee7cda5">m_OutputTypes</a>.assign(<a class="code" href="struct_execute_network_params.xhtml#a982d4141ecde3eb220a136610d853df2">m_OutputNames</a>.size(), <span class="stringliteral">&quot;float&quot;</span>);</div><div class="line"><a name="l00196"></a><span class="lineno">  196</span>&#160;    }</div><div class="line"><a name="l00197"></a><span class="lineno">  197</span>&#160;    <span class="keywordflow">else</span> <span class="keywordflow">if</span> ((<a class="code" href="struct_execute_network_params.xhtml#a810addfa426b5ac1476035dedee7cda5">m_OutputTypes</a>.size() != 0) &amp;&amp;</div><div class="line"><a name="l00198"></a><span class="lineno">  198</span>&#160;             (<a class="code" href="struct_execute_network_params.xhtml#a810addfa426b5ac1476035dedee7cda5">m_OutputTypes</a>.size() != <a class="code" href="struct_execute_network_params.xhtml#a982d4141ecde3eb220a136610d853df2">m_OutputNames</a>.size()))</div><div class="line"><a name="l00199"></a><span class="lineno">  199</span>&#160;    {</div><div class="line"><a name="l00200"></a><span class="lineno">  200</span>&#160;        <span class="keywordflow">throw</span> <a class="code" href="classarmnn_1_1_invalid_argument_exception.xhtml">armnn::InvalidArgumentException</a>(<span class="stringliteral">&quot;output-name and output-type must have the same amount of elements.&quot;</span>);</div><div class="line"><a name="l00201"></a><span class="lineno">  201</span>&#160;    }</div><div class="line"><a name="l00202"></a><span class="lineno">  202</span>&#160;</div><div class="line"><a name="l00203"></a><span class="lineno">  203</span>&#160;    <span class="comment">// Make sure that the number of output files given is equal to the number of outputs of the model</span></div><div class="line"><a name="l00204"></a><span class="lineno">  204</span>&#160;    <span class="comment">// or equal to the number of outputs of the model multiplied with the number of iterations</span></div><div class="line"><a name="l00205"></a><span class="lineno">  205</span>&#160;    <span class="keywordflow">if</span> (!<a class="code" href="struct_execute_network_params.xhtml#a74d346297c55b516908c541030adc88d">m_OutputTensorFiles</a>.empty())</div><div class="line"><a name="l00206"></a><span class="lineno">  206</span>&#160;    {</div><div class="line"><a name="l00207"></a><span class="lineno">  207</span>&#160;        <span class="keywordflow">if</span> ((<a class="code" href="struct_execute_network_params.xhtml#a74d346297c55b516908c541030adc88d">m_OutputTensorFiles</a>.size() != <a class="code" href="struct_execute_network_params.xhtml#a982d4141ecde3eb220a136610d853df2">m_OutputNames</a>.size()) &amp;&amp;</div><div class="line"><a name="l00208"></a><span class="lineno">  208</span>&#160;            (<a class="code" href="struct_execute_network_params.xhtml#a74d346297c55b516908c541030adc88d">m_OutputTensorFiles</a>.size() != <a class="code" href="struct_execute_network_params.xhtml#a982d4141ecde3eb220a136610d853df2">m_OutputNames</a>.size() * <a class="code" href="struct_execute_network_params.xhtml#a6e4eff6a5f40cb026ea76d3c13c96341">m_Iterations</a>))</div><div class="line"><a name="l00209"></a><span class="lineno">  209</span>&#160;        {</div><div class="line"><a name="l00210"></a><span class="lineno">  210</span>&#160;            std::stringstream errmsg;</div><div class="line"><a name="l00211"></a><span class="lineno">  211</span>&#160;            <span class="keyword">auto</span> numOutputs = <a class="code" href="struct_execute_network_params.xhtml#a982d4141ecde3eb220a136610d853df2">m_OutputNames</a>.size();</div><div class="line"><a name="l00212"></a><span class="lineno">  212</span>&#160;            <span class="keywordflow">throw</span> <a class="code" href="classarmnn_1_1_invalid_argument_exception.xhtml">armnn::InvalidArgumentException</a>(</div><div class="line"><a name="l00213"></a><span class="lineno">  213</span>&#160;                    fmt::format(<span class="stringliteral">&quot;The user provided {0} output-tensor files. The only allowed number of output-tensor &quot;</span></div><div class="line"><a name="l00214"></a><span class="lineno">  214</span>&#160;                                <span class="stringliteral">&quot;files is the number of outputs of the network ({1} according to the number of &quot;</span></div><div class="line"><a name="l00215"></a><span class="lineno">  215</span>&#160;                                <span class="stringliteral">&quot;output names) or the number of outputs multiplied with the number of times the &quot;</span></div><div class="line"><a name="l00216"></a><span class="lineno">  216</span>&#160;                                <span class="stringliteral">&quot;network should be executed (NumOutputs * NumIterations = {1} * {2} = {3}).&quot;</span>,</div><div class="line"><a name="l00217"></a><span class="lineno">  217</span>&#160;                                <a class="code" href="struct_execute_network_params.xhtml#a74d346297c55b516908c541030adc88d">m_OutputTensorFiles</a>.size(),</div><div class="line"><a name="l00218"></a><span class="lineno">  218</span>&#160;                                numOutputs,</div><div class="line"><a name="l00219"></a><span class="lineno">  219</span>&#160;                                <a class="code" href="struct_execute_network_params.xhtml#a6e4eff6a5f40cb026ea76d3c13c96341">m_Iterations</a>,</div><div class="line"><a name="l00220"></a><span class="lineno">  220</span>&#160;                                numOutputs*<a class="code" href="struct_execute_network_params.xhtml#a6e4eff6a5f40cb026ea76d3c13c96341">m_Iterations</a>));</div><div class="line"><a name="l00221"></a><span class="lineno">  221</span>&#160;        }</div><div class="line"><a name="l00222"></a><span class="lineno">  222</span>&#160;    }</div><div class="line"><a name="l00223"></a><span class="lineno">  223</span>&#160;</div><div class="line"><a name="l00224"></a><span class="lineno">  224</span>&#160;    <span class="comment">// Check that threshold time is not less than zero</span></div><div class="line"><a name="l00225"></a><span class="lineno">  225</span>&#160;    <span class="keywordflow">if</span> (<a class="code" href="struct_execute_network_params.xhtml#a318999172ae5197f56326b12d29104b7">m_ThresholdTime</a> &lt; 0)</div><div class="line"><a name="l00226"></a><span class="lineno">  226</span>&#160;    {</div><div class="line"><a name="l00227"></a><span class="lineno">  227</span>&#160;        <span class="keywordflow">throw</span> <a class="code" href="classarmnn_1_1_invalid_argument_exception.xhtml">armnn::InvalidArgumentException</a>(<span class="stringliteral">&quot;Threshold time supplied as a command line argument is less than zero.&quot;</span>);</div><div class="line"><a name="l00228"></a><span class="lineno">  228</span>&#160;    }</div><div class="line"><a name="l00229"></a><span class="lineno">  229</span>&#160;</div><div class="line"><a name="l00230"></a><span class="lineno">  230</span>&#160;    <span class="comment">// Warn if ExecuteNetwork will generate dummy input data</span></div><div class="line"><a name="l00231"></a><span class="lineno">  231</span>&#160;    <span class="keywordflow">if</span> (<a class="code" href="struct_execute_network_params.xhtml#a99c7360a4d4b248b3f10607bc5d2fe7b">m_GenerateTensorData</a>)</div><div class="line"><a name="l00232"></a><span class="lineno">  232</span>&#160;    {</div><div class="line"><a name="l00233"></a><span class="lineno">  233</span>&#160;        <a class="code" href="_logging_8hpp.xhtml#a7b6ad073975f437ec38ca7d20154727f">ARMNN_LOG</a>(warning) &lt;&lt; <span class="stringliteral">&quot;No input files provided, input tensors will be filled with 0s.&quot;</span>;</div><div class="line"><a name="l00234"></a><span class="lineno">  234</span>&#160;    }</div><div class="line"><a name="l00235"></a><span class="lineno">  235</span>&#160;</div><div class="line"><a name="l00236"></a><span class="lineno">  236</span>&#160;    <span class="keywordflow">if</span> (<a class="code" href="struct_execute_network_params.xhtml#a9ef8ddbeee4b869e4c68eb2ed278b8d9">m_AllowExpandedDims</a> &amp;&amp; <a class="code" href="struct_execute_network_params.xhtml#a2a245a63e87f363df491ad8c35be54c5">m_InferOutputShape</a>)</div><div class="line"><a name="l00237"></a><span class="lineno">  237</span>&#160;    {</div><div class="line"><a name="l00238"></a><span class="lineno">  238</span>&#160;        <span class="keywordflow">throw</span> <a class="code" href="classarmnn_1_1_invalid_argument_exception.xhtml">armnn::InvalidArgumentException</a>(<span class="stringliteral">&quot;infer-output-shape and allow-expanded-dims cannot be used together.&quot;</span>);</div><div class="line"><a name="l00239"></a><span class="lineno">  239</span>&#160;    }</div><div class="line"><a name="l00240"></a><span class="lineno">  240</span>&#160;}</div><div class="ttc" id="struct_execute_network_params_xhtml_acc7592cbdfe2e70cbc3794fb1e7eaeb9"><div class="ttname"><a href="struct_execute_network_params.xhtml#acc7592cbdfe2e70cbc3794fb1e7eaeb9">ExecuteNetworkParams::m_InputTypes</a></div><div class="ttdeci">std::vector&lt; std::string &gt; m_InputTypes</div><div class="ttdef"><b>Definition:</b> <a href="_execute_network_params_8hpp_source.xhtml#l00045">ExecuteNetworkParams.hpp:45</a></div></div>
<div class="ttc" id="struct_execute_network_params_xhtml_a9ef8ddbeee4b869e4c68eb2ed278b8d9"><div class="ttname"><a href="struct_execute_network_params.xhtml#a9ef8ddbeee4b869e4c68eb2ed278b8d9">ExecuteNetworkParams::m_AllowExpandedDims</a></div><div class="ttdeci">bool m_AllowExpandedDims</div><div class="ttdef"><b>Definition:</b> <a href="_execute_network_params_8hpp_source.xhtml#l00028">ExecuteNetworkParams.hpp:28</a></div></div>
<div class="ttc" id="classarmnn_1_1_optional_xhtml"><div class="ttname"><a href="classarmnn_1_1_optional.xhtml">armnn::Optional</a></div><div class="ttdef"><b>Definition:</b> <a href="_optional_8hpp_source.xhtml#l00270">Optional.hpp:270</a></div></div>
<div class="ttc" id="struct_execute_network_params_xhtml_a091cda9098c6f03f91f477a22327892d"><div class="ttname"><a href="struct_execute_network_params.xhtml#a091cda9098c6f03f91f477a22327892d">ExecuteNetworkParams::m_InputTensorShapes</a></div><div class="ttdeci">std::vector&lt; TensorShapePtr &gt; m_InputTensorShapes</div><div class="ttdef"><b>Definition:</b> <a href="_execute_network_params_8hpp_source.xhtml#l00044">ExecuteNetworkParams.hpp:44</a></div></div>
<div class="ttc" id="struct_execute_network_params_xhtml_a513151623e8d448951a0b94ad1946fbe"><div class="ttname"><a href="struct_execute_network_params.xhtml#a513151623e8d448951a0b94ad1946fbe">ExecuteNetworkParams::m_EnableFp16TurboMode</a></div><div class="ttdeci">bool m_EnableFp16TurboMode</div><div class="ttdef"><b>Definition:</b> <a href="_execute_network_params_8hpp_source.xhtml#l00036">ExecuteNetworkParams.hpp:36</a></div></div>
<div class="ttc" id="struct_execute_network_params_xhtml_ae43cf4b5df0068ee6a9151c98947248b"><div class="ttname"><a href="struct_execute_network_params.xhtml#ae43cf4b5df0068ee6a9151c98947248b">ExecuteNetworkParams::m_DynamicBackendsPath</a></div><div class="ttdeci">std::string m_DynamicBackendsPath</div><div class="ttdef"><b>Definition:</b> <a href="_execute_network_params_8hpp_source.xhtml#l00033">ExecuteNetworkParams.hpp:33</a></div></div>
<div class="ttc" id="_logging_8hpp_xhtml_a7b6ad073975f437ec38ca7d20154727f"><div class="ttname"><a href="_logging_8hpp.xhtml#a7b6ad073975f437ec38ca7d20154727f">ARMNN_LOG</a></div><div class="ttdeci">#define ARMNN_LOG(severity)</div><div class="ttdef"><b>Definition:</b> <a href="_logging_8hpp_source.xhtml#l00205">Logging.hpp:205</a></div></div>
<div class="ttc" id="struct_execute_network_params_xhtml_a982d4141ecde3eb220a136610d853df2"><div class="ttname"><a href="struct_execute_network_params.xhtml#a982d4141ecde3eb220a136610d853df2">ExecuteNetworkParams::m_OutputNames</a></div><div class="ttdeci">std::vector&lt; std::string &gt; m_OutputNames</div><div class="ttdef"><b>Definition:</b> <a href="_execute_network_params_8hpp_source.xhtml#l00053">ExecuteNetworkParams.hpp:53</a></div></div>
<div class="ttc" id="struct_execute_network_params_xhtml_a74d346297c55b516908c541030adc88d"><div class="ttname"><a href="struct_execute_network_params.xhtml#a74d346297c55b516908c541030adc88d">ExecuteNetworkParams::m_OutputTensorFiles</a></div><div class="ttdeci">std::vector&lt; std::string &gt; m_OutputTensorFiles</div><div class="ttdef"><b>Definition:</b> <a href="_execute_network_params_8hpp_source.xhtml#l00054">ExecuteNetworkParams.hpp:54</a></div></div>
<div class="ttc" id="_execute_network_params_8cpp_xhtml_a1271e91c17f407e0f4912edffcd44942"><div class="ttname"><a href="_execute_network_params_8cpp.xhtml#a1271e91c17f407e0f4912edffcd44942">CheckClTuningParameter</a></div><div class="ttdeci">void CheckClTuningParameter(const int &amp;tuningLevel, const std::string &amp;tuningPath, const std::vector&lt; armnn::BackendId &gt; computeDevices)</div><div class="ttdef"><b>Definition:</b> <a href="_execute_network_params_8cpp_source.xhtml#l00075">ExecuteNetworkParams.cpp:75</a></div></div>
<div class="ttc" id="struct_execute_network_params_xhtml_a2d54e6252c1c9a0e29f7706ba03b2b74"><div class="ttname"><a href="struct_execute_network_params.xhtml#a2d54e6252c1c9a0e29f7706ba03b2b74">ExecuteNetworkParams::m_ComputeDevices</a></div><div class="ttdeci">std::vector&lt; armnn::BackendId &gt; m_ComputeDevices</div><div class="ttdef"><b>Definition:</b> <a href="_execute_network_params_8hpp_source.xhtml#l00030">ExecuteNetworkParams.hpp:30</a></div></div>
<div class="ttc" id="struct_execute_network_params_xhtml_a810addfa426b5ac1476035dedee7cda5"><div class="ttname"><a href="struct_execute_network_params.xhtml#a810addfa426b5ac1476035dedee7cda5">ExecuteNetworkParams::m_OutputTypes</a></div><div class="ttdeci">std::vector&lt; std::string &gt; m_OutputTypes</div><div class="ttdef"><b>Definition:</b> <a href="_execute_network_params_8hpp_source.xhtml#l00055">ExecuteNetworkParams.hpp:55</a></div></div>
<div class="ttc" id="struct_execute_network_params_xhtml_a6bf2f586c403977d31c7d32d371918cf"><div class="ttname"><a href="struct_execute_network_params.xhtml#a6bf2f586c403977d31c7d32d371918cf">ExecuteNetworkParams::m_IsModelBinary</a></div><div class="ttdeci">bool m_IsModelBinary</div><div class="ttdef"><b>Definition:</b> <a href="_execute_network_params_8hpp_source.xhtml#l00046">ExecuteNetworkParams.hpp:46</a></div></div>
<div class="ttc" id="struct_execute_network_params_xhtml_aaa966b4792eae29d659a78cd6faf1a68"><div class="ttname"><a href="struct_execute_network_params.xhtml#aaa966b4792eae29d659a78cd6faf1a68">ExecuteNetworkParams::m_TuningPath</a></div><div class="ttdeci">std::string m_TuningPath</div><div class="ttdef"><b>Definition:</b> <a href="_execute_network_params_8hpp_source.xhtml#l00065">ExecuteNetworkParams.hpp:65</a></div></div>
<div class="ttc" id="struct_execute_network_params_xhtml_a6e4eff6a5f40cb026ea76d3c13c96341"><div class="ttname"><a href="struct_execute_network_params.xhtml#a6e4eff6a5f40cb026ea76d3c13c96341">ExecuteNetworkParams::m_Iterations</a></div><div class="ttdeci">size_t m_Iterations</div><div class="ttdef"><b>Definition:</b> <a href="_execute_network_params_8hpp_source.xhtml#l00047">ExecuteNetworkParams.hpp:47</a></div></div>
<div class="ttc" id="struct_execute_network_params_xhtml_a99c7360a4d4b248b3f10607bc5d2fe7b"><div class="ttname"><a href="struct_execute_network_params.xhtml#a99c7360a4d4b248b3f10607bc5d2fe7b">ExecuteNetworkParams::m_GenerateTensorData</a></div><div class="ttdeci">bool m_GenerateTensorData</div><div class="ttdef"><b>Definition:</b> <a href="_execute_network_params_8hpp_source.xhtml#l00039">ExecuteNetworkParams.hpp:39</a></div></div>
<div class="ttc" id="struct_execute_network_params_xhtml_a318999172ae5197f56326b12d29104b7"><div class="ttname"><a href="struct_execute_network_params.xhtml#a318999172ae5197f56326b12d29104b7">ExecuteNetworkParams::m_ThresholdTime</a></div><div class="ttdeci">double m_ThresholdTime</div><div class="ttdef"><b>Definition:</b> <a href="_execute_network_params_8hpp_source.xhtml#l00063">ExecuteNetworkParams.hpp:63</a></div></div>
<div class="ttc" id="struct_execute_network_params_xhtml_aaf3c7f286030842a31025309ab6a8329"><div class="ttname"><a href="struct_execute_network_params.xhtml#aaf3c7f286030842a31025309ab6a8329">ExecuteNetworkParams::m_InputNames</a></div><div class="ttdeci">std::vector&lt; std::string &gt; m_InputNames</div><div class="ttdef"><b>Definition:</b> <a href="_execute_network_params_8hpp_source.xhtml#l00042">ExecuteNetworkParams.hpp:42</a></div></div>
<div class="ttc" id="_execute_network_params_8cpp_xhtml_a4da63fa4fda7dbcd1f71f813fbd527eb"><div class="ttname"><a href="_execute_network_params_8cpp.xhtml#a4da63fa4fda7dbcd1f71f813fbd527eb">CheckModelFormat</a></div><div class="ttdeci">void CheckModelFormat(const std::string &amp;modelFormat)</div><div class="ttdef"><b>Definition:</b> <a href="_execute_network_params_8cpp_source.xhtml#l00033">ExecuteNetworkParams.cpp:33</a></div></div>
<div class="ttc" id="_network_execution_utils_8cpp_xhtml_aa8ad60308ed132ba939a09d48a97ac30"><div class="ttname"><a href="_network_execution_utils_8cpp.xhtml#aa8ad60308ed132ba939a09d48a97ac30">ValidatePaths</a></div><div class="ttdeci">bool ValidatePaths(const std::vector&lt; std::string &gt; &amp;fileVec, const bool expectFile)</div><div class="ttdoc">Verifies if a given vector of strings are valid paths. </div><div class="ttdef"><b>Definition:</b> <a href="_network_execution_utils_8cpp_source.xhtml#l00315">NetworkExecutionUtils.cpp:315</a></div></div>
<div class="ttc" id="classarmnn_1_1_invalid_argument_exception_xhtml"><div class="ttname"><a href="classarmnn_1_1_invalid_argument_exception.xhtml">armnn::InvalidArgumentException</a></div><div class="ttdef"><b>Definition:</b> <a href="_exceptions_8hpp_source.xhtml#l00080">Exceptions.hpp:80</a></div></div>
<div class="ttc" id="struct_execute_network_params_xhtml_a0b99050baebe1d169392461b3a9be08d"><div class="ttname"><a href="struct_execute_network_params.xhtml#a0b99050baebe1d169392461b3a9be08d">ExecuteNetworkParams::m_EnableBf16TurboMode</a></div><div class="ttdeci">bool m_EnableBf16TurboMode</div><div class="ttdef"><b>Definition:</b> <a href="_execute_network_params_8hpp_source.xhtml#l00034">ExecuteNetworkParams.hpp:34</a></div></div>
<div class="ttc" id="struct_execute_network_params_xhtml_ae3c3ae097395afea488cd3e0244269fa"><div class="ttname"><a href="struct_execute_network_params.xhtml#ae3c3ae097395afea488cd3e0244269fa">ExecuteNetworkParams::m_InputTensorDataFilePaths</a></div><div class="ttdeci">std::vector&lt; std::string &gt; m_InputTensorDataFilePaths</div><div class="ttdef"><b>Definition:</b> <a href="_execute_network_params_8hpp_source.xhtml#l00043">ExecuteNetworkParams.hpp:43</a></div></div>
<div class="ttc" id="_execute_network_params_8cpp_xhtml_a59c1f5f5c5c9fc85c284e0518d32cfad"><div class="ttname"><a href="_execute_network_params_8cpp.xhtml#a59c1f5f5c5c9fc85c284e0518d32cfad">IsModelBinary</a></div><div class="ttdeci">bool IsModelBinary(const std::string &amp;modelFormat)</div><div class="ttdef"><b>Definition:</b> <a href="_execute_network_params_8cpp_source.xhtml#l00014">ExecuteNetworkParams.cpp:14</a></div></div>
<div class="ttc" id="struct_execute_network_params_xhtml_ad14d073dddd554025957ef73ac183649"><div class="ttname"><a href="struct_execute_network_params.xhtml#ad14d073dddd554025957ef73ac183649">ExecuteNetworkParams::m_TuningLevel</a></div><div class="ttdeci">int m_TuningLevel</div><div class="ttdef"><b>Definition:</b> <a href="_execute_network_params_8hpp_source.xhtml#l00064">ExecuteNetworkParams.hpp:64</a></div></div>
<div class="ttc" id="struct_execute_network_params_xhtml_a2a245a63e87f363df491ad8c35be54c5"><div class="ttname"><a href="struct_execute_network_params.xhtml#a2a245a63e87f363df491ad8c35be54c5">ExecuteNetworkParams::m_InferOutputShape</a></div><div class="ttdeci">bool m_InferOutputShape</div><div class="ttdef"><b>Definition:</b> <a href="_execute_network_params_8hpp_source.xhtml#l00040">ExecuteNetworkParams.hpp:40</a></div></div>
<div class="ttc" id="struct_execute_network_params_xhtml_a86800ee44cdb3d1bfd169ec4200212d2"><div class="ttname"><a href="struct_execute_network_params.xhtml#a86800ee44cdb3d1bfd169ec4200212d2">ExecuteNetworkParams::m_ModelFormat</a></div><div class="ttdeci">std::string m_ModelFormat</div><div class="ttdef"><b>Definition:</b> <a href="_execute_network_params_8hpp_source.xhtml#l00048">ExecuteNetworkParams.hpp:48</a></div></div>
</div><!-- fragment -->
</div>
</div>
<h2 class="groupheader">Member Data Documentation</h2>
<a id="a9ef8ddbeee4b869e4c68eb2ed278b8d9"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a9ef8ddbeee4b869e4c68eb2ed278b8d9">&#9670;&nbsp;</a></span>m_AllowExpandedDims</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool m_AllowExpandedDims</td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_execute_network_params_8hpp_source.xhtml#l00028">28</a> of file <a class="el" href="_execute_network_params_8hpp_source.xhtml">ExecuteNetworkParams.hpp</a>.</p>

<p class="reference">Referenced by <a class="el" href="_execute_network_8cpp_source.xhtml#l00379">MainImpl()</a>, <a class="el" href="_execute_network_program_options_8cpp_source.xhtml#l00171">ProgramOptions::ProgramOptions()</a>, and <a class="el" href="_execute_network_params_8cpp_source.xhtml#l00111">ValidateParams()</a>.</p>

</div>
</div>
<a id="a9f8881646a38f828f92d3354930c4165"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a9f8881646a38f828f92d3354930c4165">&#9670;&nbsp;</a></span>m_CachedNetworkFilePath</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">std::string m_CachedNetworkFilePath</td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_execute_network_params_8hpp_source.xhtml#l00029">29</a> of file <a class="el" href="_execute_network_params_8hpp_source.xhtml">ExecuteNetworkParams.hpp</a>.</p>

<p class="reference">Referenced by <a class="el" href="_execute_network_8cpp_source.xhtml#l00379">MainImpl()</a>, <a class="el" href="_execute_network_program_options_8cpp_source.xhtml#l00171">ProgramOptions::ProgramOptions()</a>, and <a class="el" href="_execute_network_params_8cpp_source.xhtml#l00111">ValidateParams()</a>.</p>

</div>
</div>
<a id="a2d54e6252c1c9a0e29f7706ba03b2b74"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a2d54e6252c1c9a0e29f7706ba03b2b74">&#9670;&nbsp;</a></span>m_ComputeDevices</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">std::vector&lt;<a class="el" href="classarmnn_1_1_backend_id.xhtml">armnn::BackendId</a>&gt; m_ComputeDevices</td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_execute_network_params_8hpp_source.xhtml#l00030">30</a> of file <a class="el" href="_execute_network_params_8hpp_source.xhtml">ExecuteNetworkParams.hpp</a>.</p>

<p class="reference">Referenced by <a class="el" href="_execute_network_8cpp_source.xhtml#l00379">MainImpl()</a>, <a class="el" href="_execute_network_program_options_8cpp_source.xhtml#l00457">ProgramOptions::ParseOptions()</a>, and <a class="el" href="_execute_network_params_8cpp_source.xhtml#l00111">ValidateParams()</a>.</p>

</div>
</div>
<a id="abf3cb45be3828b72b4ac08f87ac6c779"></a>
<h2 class="memtitle"><span class="permalink"><a href="#abf3cb45be3828b72b4ac08f87ac6c779">&#9670;&nbsp;</a></span>m_Concurrent</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool m_Concurrent</td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_execute_network_params_8hpp_source.xhtml#l00031">31</a> of file <a class="el" href="_execute_network_params_8hpp_source.xhtml">ExecuteNetworkParams.hpp</a>.</p>

<p class="reference">Referenced by <a class="el" href="_execute_network_8cpp_source.xhtml#l00379">MainImpl()</a>, <a class="el" href="_execute_network_program_options_8cpp_source.xhtml#l00457">ProgramOptions::ParseOptions()</a>, and <a class="el" href="_execute_network_program_options_8cpp_source.xhtml#l00171">ProgramOptions::ProgramOptions()</a>.</p>

</div>
</div>
<a id="a85929a48c5e7b16af8f5bc637e45a37f"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a85929a48c5e7b16af8f5bc637e45a37f">&#9670;&nbsp;</a></span>m_DequantizeOutput</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool m_DequantizeOutput</td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_execute_network_params_8hpp_source.xhtml#l00032">32</a> of file <a class="el" href="_execute_network_params_8hpp_source.xhtml">ExecuteNetworkParams.hpp</a>.</p>

<p class="reference">Referenced by <a class="el" href="_execute_network_8cpp_source.xhtml#l00379">MainImpl()</a>, and <a class="el" href="_execute_network_program_options_8cpp_source.xhtml#l00171">ProgramOptions::ProgramOptions()</a>.</p>

</div>
</div>
<a id="ac828647e0c753c3727c8c1f81939f7e4"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ac828647e0c753c3727c8c1f81939f7e4">&#9670;&nbsp;</a></span>m_DontPrintOutputs</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool m_DontPrintOutputs</td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_execute_network_params_8hpp_source.xhtml#l00058">58</a> of file <a class="el" href="_execute_network_params_8hpp_source.xhtml">ExecuteNetworkParams.hpp</a>.</p>

<p class="reference">Referenced by <a class="el" href="_execute_network_8cpp_source.xhtml#l00048">CheckInferenceTimeThreshold()</a>, <a class="el" href="_execute_network_8cpp_source.xhtml#l00379">MainImpl()</a>, and <a class="el" href="_execute_network_program_options_8cpp_source.xhtml#l00171">ProgramOptions::ProgramOptions()</a>.</p>

</div>
</div>
<a id="ae43cf4b5df0068ee6a9151c98947248b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ae43cf4b5df0068ee6a9151c98947248b">&#9670;&nbsp;</a></span>m_DynamicBackendsPath</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">std::string m_DynamicBackendsPath</td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_execute_network_params_8hpp_source.xhtml#l00033">33</a> of file <a class="el" href="_execute_network_params_8hpp_source.xhtml">ExecuteNetworkParams.hpp</a>.</p>

<p class="reference">Referenced by <a class="el" href="_execute_network_8cpp_source.xhtml#l00379">MainImpl()</a>, <a class="el" href="_execute_network_program_options_8cpp_source.xhtml#l00457">ProgramOptions::ParseOptions()</a>, and <a class="el" href="_execute_network_params_8cpp_source.xhtml#l00111">ValidateParams()</a>.</p>

</div>
</div>
<a id="a0b99050baebe1d169392461b3a9be08d"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a0b99050baebe1d169392461b3a9be08d">&#9670;&nbsp;</a></span>m_EnableBf16TurboMode</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool m_EnableBf16TurboMode</td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_execute_network_params_8hpp_source.xhtml#l00034">34</a> of file <a class="el" href="_execute_network_params_8hpp_source.xhtml">ExecuteNetworkParams.hpp</a>.</p>

<p class="reference">Referenced by <a class="el" href="_execute_network_8cpp_source.xhtml#l00379">MainImpl()</a>, <a class="el" href="_execute_network_program_options_8cpp_source.xhtml#l00171">ProgramOptions::ProgramOptions()</a>, and <a class="el" href="_execute_network_params_8cpp_source.xhtml#l00111">ValidateParams()</a>.</p>

</div>
</div>
<a id="ad9e5bfa84cf85e3ddf24ae6cb124d3d4"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ad9e5bfa84cf85e3ddf24ae6cb124d3d4">&#9670;&nbsp;</a></span>m_EnableDelegate</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool m_EnableDelegate = false</td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_execute_network_params_8hpp_source.xhtml#l00041">41</a> of file <a class="el" href="_execute_network_params_8hpp_source.xhtml">ExecuteNetworkParams.hpp</a>.</p>

<p class="reference">Referenced by <a class="el" href="_execute_network_program_options_8cpp_source.xhtml#l00457">ProgramOptions::ParseOptions()</a>, and <a class="el" href="_execute_network_program_options_8cpp_source.xhtml#l00171">ProgramOptions::ProgramOptions()</a>.</p>

</div>
</div>
<a id="a66f9597b152215daba3211379dad63d3"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a66f9597b152215daba3211379dad63d3">&#9670;&nbsp;</a></span>m_EnableFastMath</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool m_EnableFastMath = false</td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_execute_network_params_8hpp_source.xhtml#l00035">35</a> of file <a class="el" href="_execute_network_params_8hpp_source.xhtml">ExecuteNetworkParams.hpp</a>.</p>

<p class="reference">Referenced by <a class="el" href="_execute_network_8cpp_source.xhtml#l00379">MainImpl()</a>, <a class="el" href="_execute_network_program_options_8cpp_source.xhtml#l00171">ProgramOptions::ProgramOptions()</a>, and <a class="el" href="_execute_network_params_8cpp_source.xhtml#l00111">ValidateParams()</a>.</p>

</div>
</div>
<a id="a513151623e8d448951a0b94ad1946fbe"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a513151623e8d448951a0b94ad1946fbe">&#9670;&nbsp;</a></span>m_EnableFp16TurboMode</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool m_EnableFp16TurboMode</td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_execute_network_params_8hpp_source.xhtml#l00036">36</a> of file <a class="el" href="_execute_network_params_8hpp_source.xhtml">ExecuteNetworkParams.hpp</a>.</p>

<p class="reference">Referenced by <a class="el" href="_execute_network_8cpp_source.xhtml#l00379">MainImpl()</a>, <a class="el" href="_execute_network_program_options_8cpp_source.xhtml#l00171">ProgramOptions::ProgramOptions()</a>, and <a class="el" href="_execute_network_params_8cpp_source.xhtml#l00111">ValidateParams()</a>.</p>

</div>
</div>
<a id="a7efc68309e76bfefbfa16fe94501b060"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a7efc68309e76bfefbfa16fe94501b060">&#9670;&nbsp;</a></span>m_EnableLayerDetails</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool m_EnableLayerDetails = false</td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_execute_network_params_8hpp_source.xhtml#l00037">37</a> of file <a class="el" href="_execute_network_params_8hpp_source.xhtml">ExecuteNetworkParams.hpp</a>.</p>

<p class="reference">Referenced by <a class="el" href="_execute_network_8cpp_source.xhtml#l00379">MainImpl()</a>, <a class="el" href="_execute_network_program_options_8cpp_source.xhtml#l00171">ProgramOptions::ProgramOptions()</a>, and <a class="el" href="_execute_network_params_8cpp_source.xhtml#l00111">ValidateParams()</a>.</p>

</div>
</div>
<a id="a26d42007440bb01a1a6d0ab3b5a657ee"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a26d42007440bb01a1a6d0ab3b5a657ee">&#9670;&nbsp;</a></span>m_EnableProfiling</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool m_EnableProfiling</td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_execute_network_params_8hpp_source.xhtml#l00038">38</a> of file <a class="el" href="_execute_network_params_8hpp_source.xhtml">ExecuteNetworkParams.hpp</a>.</p>

<p class="reference">Referenced by <a class="el" href="_execute_network_8cpp_source.xhtml#l00996">main()</a>, <a class="el" href="_execute_network_8cpp_source.xhtml#l00379">MainImpl()</a>, <a class="el" href="_execute_network_program_options_8cpp_source.xhtml#l00457">ProgramOptions::ParseOptions()</a>, <a class="el" href="_execute_network_program_options_8cpp_source.xhtml#l00171">ProgramOptions::ProgramOptions()</a>, and <a class="el" href="_execute_network_params_8cpp_source.xhtml#l00111">ValidateParams()</a>.</p>

</div>
</div>
<a id="a99c7360a4d4b248b3f10607bc5d2fe7b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a99c7360a4d4b248b3f10607bc5d2fe7b">&#9670;&nbsp;</a></span>m_GenerateTensorData</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool m_GenerateTensorData</td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_execute_network_params_8hpp_source.xhtml#l00039">39</a> of file <a class="el" href="_execute_network_params_8hpp_source.xhtml">ExecuteNetworkParams.hpp</a>.</p>

<p class="reference">Referenced by <a class="el" href="_execute_network_8cpp_source.xhtml#l00048">CheckInferenceTimeThreshold()</a>, <a class="el" href="_execute_network_8cpp_source.xhtml#l00379">MainImpl()</a>, <a class="el" href="_execute_network_program_options_8cpp_source.xhtml#l00457">ProgramOptions::ParseOptions()</a>, and <a class="el" href="_execute_network_params_8cpp_source.xhtml#l00111">ValidateParams()</a>.</p>

</div>
</div>
<a id="a1697b9751b4ba381f89b8c81cd9dfc3c"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a1697b9751b4ba381f89b8c81cd9dfc3c">&#9670;&nbsp;</a></span>m_ImportInputsIfAligned</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool m_ImportInputsIfAligned</td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_execute_network_params_8hpp_source.xhtml#l00069">69</a> of file <a class="el" href="_execute_network_params_8hpp_source.xhtml">ExecuteNetworkParams.hpp</a>.</p>

<p class="reference">Referenced by <a class="el" href="_execute_network_8cpp_source.xhtml#l00379">MainImpl()</a>, and <a class="el" href="_execute_network_program_options_8cpp_source.xhtml#l00171">ProgramOptions::ProgramOptions()</a>.</p>

</div>
</div>
<a id="a2a245a63e87f363df491ad8c35be54c5"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a2a245a63e87f363df491ad8c35be54c5">&#9670;&nbsp;</a></span>m_InferOutputShape</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool m_InferOutputShape = false</td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_execute_network_params_8hpp_source.xhtml#l00040">40</a> of file <a class="el" href="_execute_network_params_8hpp_source.xhtml">ExecuteNetworkParams.hpp</a>.</p>

<p class="reference">Referenced by <a class="el" href="_execute_network_8cpp_source.xhtml#l00379">MainImpl()</a>, <a class="el" href="_execute_network_program_options_8cpp_source.xhtml#l00171">ProgramOptions::ProgramOptions()</a>, and <a class="el" href="_execute_network_params_8cpp_source.xhtml#l00111">ValidateParams()</a>.</p>

</div>
</div>
<a id="aaf3c7f286030842a31025309ab6a8329"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aaf3c7f286030842a31025309ab6a8329">&#9670;&nbsp;</a></span>m_InputNames</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">std::vector&lt;std::string&gt; m_InputNames</td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_execute_network_params_8hpp_source.xhtml#l00042">42</a> of file <a class="el" href="_execute_network_params_8hpp_source.xhtml">ExecuteNetworkParams.hpp</a>.</p>

<p class="reference">Referenced by <a class="el" href="_execute_network_8cpp_source.xhtml#l00048">CheckInferenceTimeThreshold()</a>, <a class="el" href="_execute_network_8cpp_source.xhtml#l00379">MainImpl()</a>, <a class="el" href="_execute_network_program_options_8cpp_source.xhtml#l00457">ProgramOptions::ParseOptions()</a>, and <a class="el" href="_execute_network_params_8cpp_source.xhtml#l00111">ValidateParams()</a>.</p>

</div>
</div>
<a id="ae3c3ae097395afea488cd3e0244269fa"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ae3c3ae097395afea488cd3e0244269fa">&#9670;&nbsp;</a></span>m_InputTensorDataFilePaths</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">std::vector&lt;std::string&gt; m_InputTensorDataFilePaths</td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_execute_network_params_8hpp_source.xhtml#l00043">43</a> of file <a class="el" href="_execute_network_params_8hpp_source.xhtml">ExecuteNetworkParams.hpp</a>.</p>

<p class="reference">Referenced by <a class="el" href="_execute_network_8cpp_source.xhtml#l00048">CheckInferenceTimeThreshold()</a>, <a class="el" href="_execute_network_8cpp_source.xhtml#l00379">MainImpl()</a>, <a class="el" href="_execute_network_program_options_8cpp_source.xhtml#l00457">ProgramOptions::ParseOptions()</a>, and <a class="el" href="_execute_network_params_8cpp_source.xhtml#l00111">ValidateParams()</a>.</p>

</div>
</div>
<a id="a091cda9098c6f03f91f477a22327892d"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a091cda9098c6f03f91f477a22327892d">&#9670;&nbsp;</a></span>m_InputTensorShapes</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">std::vector&lt;<a class="el" href="struct_execute_network_params.xhtml#a29ca0d7f3ce1cb59535aa4d09f7d1b37">TensorShapePtr</a>&gt; m_InputTensorShapes</td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_execute_network_params_8hpp_source.xhtml#l00044">44</a> of file <a class="el" href="_execute_network_params_8hpp_source.xhtml">ExecuteNetworkParams.hpp</a>.</p>

<p class="reference">Referenced by <a class="el" href="_execute_network_8cpp_source.xhtml#l00048">CheckInferenceTimeThreshold()</a>, <a class="el" href="_execute_network_8cpp_source.xhtml#l00379">MainImpl()</a>, <a class="el" href="_execute_network_program_options_8cpp_source.xhtml#l00457">ProgramOptions::ParseOptions()</a>, and <a class="el" href="_execute_network_params_8cpp_source.xhtml#l00111">ValidateParams()</a>.</p>

</div>
</div>
<a id="acc7592cbdfe2e70cbc3794fb1e7eaeb9"></a>
<h2 class="memtitle"><span class="permalink"><a href="#acc7592cbdfe2e70cbc3794fb1e7eaeb9">&#9670;&nbsp;</a></span>m_InputTypes</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">std::vector&lt;std::string&gt; m_InputTypes</td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_execute_network_params_8hpp_source.xhtml#l00045">45</a> of file <a class="el" href="_execute_network_params_8hpp_source.xhtml">ExecuteNetworkParams.hpp</a>.</p>

<p class="reference">Referenced by <a class="el" href="_execute_network_8cpp_source.xhtml#l00048">CheckInferenceTimeThreshold()</a>, <a class="el" href="_execute_network_8cpp_source.xhtml#l00379">MainImpl()</a>, <a class="el" href="_execute_network_program_options_8cpp_source.xhtml#l00457">ProgramOptions::ParseOptions()</a>, and <a class="el" href="_execute_network_params_8cpp_source.xhtml#l00111">ValidateParams()</a>.</p>

</div>
</div>
<a id="a6bf2f586c403977d31c7d32d371918cf"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a6bf2f586c403977d31c7d32d371918cf">&#9670;&nbsp;</a></span>m_IsModelBinary</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool m_IsModelBinary</td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_execute_network_params_8hpp_source.xhtml#l00046">46</a> of file <a class="el" href="_execute_network_params_8hpp_source.xhtml">ExecuteNetworkParams.hpp</a>.</p>

<p class="reference">Referenced by <a class="el" href="_execute_network_8cpp_source.xhtml#l00379">MainImpl()</a>, and <a class="el" href="_execute_network_params_8cpp_source.xhtml#l00111">ValidateParams()</a>.</p>

</div>
</div>
<a id="a6e4eff6a5f40cb026ea76d3c13c96341"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a6e4eff6a5f40cb026ea76d3c13c96341">&#9670;&nbsp;</a></span>m_Iterations</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">size_t m_Iterations</td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_execute_network_params_8hpp_source.xhtml#l00047">47</a> of file <a class="el" href="_execute_network_params_8hpp_source.xhtml">ExecuteNetworkParams.hpp</a>.</p>

<p class="reference">Referenced by <a class="el" href="_execute_network_8cpp_source.xhtml#l00048">CheckInferenceTimeThreshold()</a>, <a class="el" href="_execute_network_8cpp_source.xhtml#l00379">MainImpl()</a>, <a class="el" href="_execute_network_program_options_8cpp_source.xhtml#l00457">ProgramOptions::ParseOptions()</a>, <a class="el" href="_execute_network_program_options_8cpp_source.xhtml#l00171">ProgramOptions::ProgramOptions()</a>, and <a class="el" href="_execute_network_params_8cpp_source.xhtml#l00111">ValidateParams()</a>.</p>

</div>
</div>
<a id="ac609a217f4de4c647422dbb358a5f2ef"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ac609a217f4de4c647422dbb358a5f2ef">&#9670;&nbsp;</a></span>m_MLGOTuningFilePath</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">std::string m_MLGOTuningFilePath</td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_execute_network_params_8hpp_source.xhtml#l00066">66</a> of file <a class="el" href="_execute_network_params_8hpp_source.xhtml">ExecuteNetworkParams.hpp</a>.</p>

<p class="reference">Referenced by <a class="el" href="_execute_network_8cpp_source.xhtml#l00379">MainImpl()</a>, <a class="el" href="_execute_network_program_options_8cpp_source.xhtml#l00457">ProgramOptions::ParseOptions()</a>, <a class="el" href="_execute_network_program_options_8cpp_source.xhtml#l00171">ProgramOptions::ProgramOptions()</a>, and <a class="el" href="_execute_network_params_8cpp_source.xhtml#l00111">ValidateParams()</a>.</p>

</div>
</div>
<a id="a86800ee44cdb3d1bfd169ec4200212d2"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a86800ee44cdb3d1bfd169ec4200212d2">&#9670;&nbsp;</a></span>m_ModelFormat</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">std::string m_ModelFormat</td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_execute_network_params_8hpp_source.xhtml#l00048">48</a> of file <a class="el" href="_execute_network_params_8hpp_source.xhtml">ExecuteNetworkParams.hpp</a>.</p>

<p class="reference">Referenced by <a class="el" href="_execute_network_8cpp_source.xhtml#l00996">main()</a>, <a class="el" href="_execute_network_program_options_8cpp_source.xhtml#l00457">ProgramOptions::ParseOptions()</a>, and <a class="el" href="_execute_network_params_8cpp_source.xhtml#l00111">ValidateParams()</a>.</p>

</div>
</div>
<a id="a4fa312cf0d60fbd3988a7c76ab8e2980"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a4fa312cf0d60fbd3988a7c76ab8e2980">&#9670;&nbsp;</a></span>m_ModelPath</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">std::string m_ModelPath</td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_execute_network_params_8hpp_source.xhtml#l00049">49</a> of file <a class="el" href="_execute_network_params_8hpp_source.xhtml">ExecuteNetworkParams.hpp</a>.</p>

<p class="reference">Referenced by <a class="el" href="_execute_network_8cpp_source.xhtml#l00048">CheckInferenceTimeThreshold()</a>, <a class="el" href="_execute_network_8cpp_source.xhtml#l00379">MainImpl()</a>, <a class="el" href="_execute_network_program_options_8cpp_source.xhtml#l00171">ProgramOptions::ProgramOptions()</a>, and <a class="el" href="_execute_network_params_8cpp_source.xhtml#l00111">ValidateParams()</a>.</p>

</div>
</div>
<a id="adc650e032e7fce99f15e2bf903e7167b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#adc650e032e7fce99f15e2bf903e7167b">&#9670;&nbsp;</a></span>m_NumberOfThreads</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">unsigned int m_NumberOfThreads</td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_execute_network_params_8hpp_source.xhtml#l00050">50</a> of file <a class="el" href="_execute_network_params_8hpp_source.xhtml">ExecuteNetworkParams.hpp</a>.</p>

<p class="reference">Referenced by <a class="el" href="_execute_network_8cpp_source.xhtml#l00379">MainImpl()</a>, <a class="el" href="_execute_network_program_options_8cpp_source.xhtml#l00171">ProgramOptions::ProgramOptions()</a>, and <a class="el" href="_execute_network_params_8cpp_source.xhtml#l00111">ValidateParams()</a>.</p>

</div>
</div>
<a id="ab17deb382179697b4702cc4f909e71f8"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ab17deb382179697b4702cc4f909e71f8">&#9670;&nbsp;</a></span>m_OutputDetailsOnlyToStdOut</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool m_OutputDetailsOnlyToStdOut</td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_execute_network_params_8hpp_source.xhtml#l00052">52</a> of file <a class="el" href="_execute_network_params_8hpp_source.xhtml">ExecuteNetworkParams.hpp</a>.</p>

<p class="reference">Referenced by <a class="el" href="_execute_network_8cpp_source.xhtml#l00996">main()</a>, <a class="el" href="_execute_network_8cpp_source.xhtml#l00379">MainImpl()</a>, and <a class="el" href="_execute_network_program_options_8cpp_source.xhtml#l00171">ProgramOptions::ProgramOptions()</a>.</p>

</div>
</div>
<a id="ae96fc745917a3a0c0de7a818c9a05012"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ae96fc745917a3a0c0de7a818c9a05012">&#9670;&nbsp;</a></span>m_OutputDetailsToStdOut</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool m_OutputDetailsToStdOut</td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_execute_network_params_8hpp_source.xhtml#l00051">51</a> of file <a class="el" href="_execute_network_params_8hpp_source.xhtml">ExecuteNetworkParams.hpp</a>.</p>

<p class="reference">Referenced by <a class="el" href="_execute_network_8cpp_source.xhtml#l00996">main()</a>, <a class="el" href="_execute_network_8cpp_source.xhtml#l00379">MainImpl()</a>, and <a class="el" href="_execute_network_program_options_8cpp_source.xhtml#l00171">ProgramOptions::ProgramOptions()</a>.</p>

</div>
</div>
<a id="a982d4141ecde3eb220a136610d853df2"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a982d4141ecde3eb220a136610d853df2">&#9670;&nbsp;</a></span>m_OutputNames</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">std::vector&lt;std::string&gt; m_OutputNames</td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_execute_network_params_8hpp_source.xhtml#l00053">53</a> of file <a class="el" href="_execute_network_params_8hpp_source.xhtml">ExecuteNetworkParams.hpp</a>.</p>

<p class="reference">Referenced by <a class="el" href="_execute_network_8cpp_source.xhtml#l00048">CheckInferenceTimeThreshold()</a>, <a class="el" href="_execute_network_8cpp_source.xhtml#l00379">MainImpl()</a>, <a class="el" href="_execute_network_program_options_8cpp_source.xhtml#l00457">ProgramOptions::ParseOptions()</a>, and <a class="el" href="_execute_network_params_8cpp_source.xhtml#l00111">ValidateParams()</a>.</p>

</div>
</div>
<a id="a74d346297c55b516908c541030adc88d"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a74d346297c55b516908c541030adc88d">&#9670;&nbsp;</a></span>m_OutputTensorFiles</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">std::vector&lt;std::string&gt; m_OutputTensorFiles</td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_execute_network_params_8hpp_source.xhtml#l00054">54</a> of file <a class="el" href="_execute_network_params_8hpp_source.xhtml">ExecuteNetworkParams.hpp</a>.</p>

<p class="reference">Referenced by <a class="el" href="_execute_network_8cpp_source.xhtml#l00048">CheckInferenceTimeThreshold()</a>, <a class="el" href="_execute_network_8cpp_source.xhtml#l00379">MainImpl()</a>, <a class="el" href="_execute_network_program_options_8cpp_source.xhtml#l00457">ProgramOptions::ParseOptions()</a>, and <a class="el" href="_execute_network_params_8cpp_source.xhtml#l00111">ValidateParams()</a>.</p>

</div>
</div>
<a id="a810addfa426b5ac1476035dedee7cda5"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a810addfa426b5ac1476035dedee7cda5">&#9670;&nbsp;</a></span>m_OutputTypes</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">std::vector&lt;std::string&gt; m_OutputTypes</td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_execute_network_params_8hpp_source.xhtml#l00055">55</a> of file <a class="el" href="_execute_network_params_8hpp_source.xhtml">ExecuteNetworkParams.hpp</a>.</p>

<p class="reference">Referenced by <a class="el" href="_execute_network_8cpp_source.xhtml#l00048">CheckInferenceTimeThreshold()</a>, <a class="el" href="_execute_network_8cpp_source.xhtml#l00379">MainImpl()</a>, <a class="el" href="_execute_network_program_options_8cpp_source.xhtml#l00457">ProgramOptions::ParseOptions()</a>, and <a class="el" href="_execute_network_params_8cpp_source.xhtml#l00111">ValidateParams()</a>.</p>

</div>
</div>
<a id="a5c7f0c083da98e7b6e9ba79d2fcd985d"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a5c7f0c083da98e7b6e9ba79d2fcd985d">&#9670;&nbsp;</a></span>m_ParseUnsupported</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool m_ParseUnsupported = false</td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_execute_network_params_8hpp_source.xhtml#l00056">56</a> of file <a class="el" href="_execute_network_params_8hpp_source.xhtml">ExecuteNetworkParams.hpp</a>.</p>

<p class="reference">Referenced by <a class="el" href="_execute_network_8cpp_source.xhtml#l00379">MainImpl()</a>, and <a class="el" href="_execute_network_program_options_8cpp_source.xhtml#l00171">ProgramOptions::ProgramOptions()</a>.</p>

</div>
</div>
<a id="a5acc5b4076604db15ee13ee19fa623c4"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a5acc5b4076604db15ee13ee19fa623c4">&#9670;&nbsp;</a></span>m_PrintIntermediate</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool m_PrintIntermediate</td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_execute_network_params_8hpp_source.xhtml#l00057">57</a> of file <a class="el" href="_execute_network_params_8hpp_source.xhtml">ExecuteNetworkParams.hpp</a>.</p>

<p class="reference">Referenced by <a class="el" href="_execute_network_8cpp_source.xhtml#l00379">MainImpl()</a>, <a class="el" href="_execute_network_program_options_8cpp_source.xhtml#l00171">ProgramOptions::ProgramOptions()</a>, and <a class="el" href="_execute_network_params_8cpp_source.xhtml#l00111">ValidateParams()</a>.</p>

</div>
</div>
<a id="a077f6963fc555d9d42f98cf9ed3e7e03"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a077f6963fc555d9d42f98cf9ed3e7e03">&#9670;&nbsp;</a></span>m_QuantizeInput</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool m_QuantizeInput</td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_execute_network_params_8hpp_source.xhtml#l00059">59</a> of file <a class="el" href="_execute_network_params_8hpp_source.xhtml">ExecuteNetworkParams.hpp</a>.</p>

<p class="reference">Referenced by <a class="el" href="_execute_network_8cpp_source.xhtml#l00379">MainImpl()</a>, and <a class="el" href="_execute_network_program_options_8cpp_source.xhtml#l00171">ProgramOptions::ProgramOptions()</a>.</p>

</div>
</div>
<a id="acb9376adc0f7174b7d4295e00315a084"></a>
<h2 class="memtitle"><span class="permalink"><a href="#acb9376adc0f7174b7d4295e00315a084">&#9670;&nbsp;</a></span>m_ReuseBuffers</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool m_ReuseBuffers</td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_execute_network_params_8hpp_source.xhtml#l00070">70</a> of file <a class="el" href="_execute_network_params_8hpp_source.xhtml">ExecuteNetworkParams.hpp</a>.</p>

<p class="reference">Referenced by <a class="el" href="_execute_network_8cpp_source.xhtml#l00379">MainImpl()</a>, and <a class="el" href="_execute_network_program_options_8cpp_source.xhtml#l00171">ProgramOptions::ProgramOptions()</a>.</p>

</div>
</div>
<a id="a9a04b8c7f19a84f63125edec509b6d53"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a9a04b8c7f19a84f63125edec509b6d53">&#9670;&nbsp;</a></span>m_SaveCachedNetwork</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool m_SaveCachedNetwork</td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_execute_network_params_8hpp_source.xhtml#l00060">60</a> of file <a class="el" href="_execute_network_params_8hpp_source.xhtml">ExecuteNetworkParams.hpp</a>.</p>

<p class="reference">Referenced by <a class="el" href="_execute_network_8cpp_source.xhtml#l00379">MainImpl()</a>, <a class="el" href="_execute_network_program_options_8cpp_source.xhtml#l00171">ProgramOptions::ProgramOptions()</a>, and <a class="el" href="_execute_network_params_8cpp_source.xhtml#l00111">ValidateParams()</a>.</p>

</div>
</div>
<a id="aa2de78becdf56c5a29a7dee5110cd164"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aa2de78becdf56c5a29a7dee5110cd164">&#9670;&nbsp;</a></span>m_SimultaneousIterations</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">size_t m_SimultaneousIterations</td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_execute_network_params_8hpp_source.xhtml#l00061">61</a> of file <a class="el" href="_execute_network_params_8hpp_source.xhtml">ExecuteNetworkParams.hpp</a>.</p>

<p class="reference">Referenced by <a class="el" href="_execute_network_program_options_8cpp_source.xhtml#l00457">ProgramOptions::ParseOptions()</a>, and <a class="el" href="_execute_network_program_options_8cpp_source.xhtml#l00171">ProgramOptions::ProgramOptions()</a>.</p>

</div>
</div>
<a id="a2d4582aa74998c397bd064ae73745b62"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a2d4582aa74998c397bd064ae73745b62">&#9670;&nbsp;</a></span>m_SubgraphId</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">size_t m_SubgraphId</td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_execute_network_params_8hpp_source.xhtml#l00062">62</a> of file <a class="el" href="_execute_network_params_8hpp_source.xhtml">ExecuteNetworkParams.hpp</a>.</p>

<p class="reference">Referenced by <a class="el" href="_execute_network_8cpp_source.xhtml#l00379">MainImpl()</a>, and <a class="el" href="_execute_network_program_options_8cpp_source.xhtml#l00171">ProgramOptions::ProgramOptions()</a>.</p>

</div>
</div>
<a id="a876462c8d3a74b51c890820df24f42f9"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a876462c8d3a74b51c890820df24f42f9">&#9670;&nbsp;</a></span>m_TfLiteExecutor</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="struct_execute_network_params.xhtml#a721fa5f104533ca06589330accc2857d">TfLiteExecutor</a> m_TfLiteExecutor</td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_execute_network_params_8hpp_source.xhtml#l00067">67</a> of file <a class="el" href="_execute_network_params_8hpp_source.xhtml">ExecuteNetworkParams.hpp</a>.</p>

<p class="reference">Referenced by <a class="el" href="_execute_network_8cpp_source.xhtml#l00048">CheckInferenceTimeThreshold()</a>, <a class="el" href="_execute_network_8cpp_source.xhtml#l00996">main()</a>, and <a class="el" href="_execute_network_program_options_8cpp_source.xhtml#l00457">ProgramOptions::ParseOptions()</a>.</p>

</div>
</div>
<a id="a7adc5dcfe3d76ac489f253c4d5f439c8"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a7adc5dcfe3d76ac489f253c4d5f439c8">&#9670;&nbsp;</a></span>m_ThreadPoolSize</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">size_t m_ThreadPoolSize</td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_execute_network_params_8hpp_source.xhtml#l00068">68</a> of file <a class="el" href="_execute_network_params_8hpp_source.xhtml">ExecuteNetworkParams.hpp</a>.</p>

<p class="reference">Referenced by <a class="el" href="_execute_network_8cpp_source.xhtml#l00379">MainImpl()</a>, <a class="el" href="_execute_network_program_options_8cpp_source.xhtml#l00457">ProgramOptions::ParseOptions()</a>, and <a class="el" href="_execute_network_program_options_8cpp_source.xhtml#l00171">ProgramOptions::ProgramOptions()</a>.</p>

</div>
</div>
<a id="a318999172ae5197f56326b12d29104b7"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a318999172ae5197f56326b12d29104b7">&#9670;&nbsp;</a></span>m_ThresholdTime</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">double m_ThresholdTime</td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_execute_network_params_8hpp_source.xhtml#l00063">63</a> of file <a class="el" href="_execute_network_params_8hpp_source.xhtml">ExecuteNetworkParams.hpp</a>.</p>

<p class="reference">Referenced by <a class="el" href="_execute_network_8cpp_source.xhtml#l00048">CheckInferenceTimeThreshold()</a>, <a class="el" href="_execute_network_8cpp_source.xhtml#l00379">MainImpl()</a>, <a class="el" href="_execute_network_program_options_8cpp_source.xhtml#l00171">ProgramOptions::ProgramOptions()</a>, and <a class="el" href="_execute_network_params_8cpp_source.xhtml#l00111">ValidateParams()</a>.</p>

</div>
</div>
<a id="ad14d073dddd554025957ef73ac183649"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ad14d073dddd554025957ef73ac183649">&#9670;&nbsp;</a></span>m_TuningLevel</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int m_TuningLevel</td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_execute_network_params_8hpp_source.xhtml#l00064">64</a> of file <a class="el" href="_execute_network_params_8hpp_source.xhtml">ExecuteNetworkParams.hpp</a>.</p>

<p class="reference">Referenced by <a class="el" href="_execute_network_program_options_8cpp_source.xhtml#l00457">ProgramOptions::ParseOptions()</a>, <a class="el" href="_execute_network_program_options_8cpp_source.xhtml#l00171">ProgramOptions::ProgramOptions()</a>, and <a class="el" href="_execute_network_params_8cpp_source.xhtml#l00111">ValidateParams()</a>.</p>

</div>
</div>
<a id="aaa966b4792eae29d659a78cd6faf1a68"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aaa966b4792eae29d659a78cd6faf1a68">&#9670;&nbsp;</a></span>m_TuningPath</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">std::string m_TuningPath</td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_execute_network_params_8hpp_source.xhtml#l00065">65</a> of file <a class="el" href="_execute_network_params_8hpp_source.xhtml">ExecuteNetworkParams.hpp</a>.</p>

<p class="reference">Referenced by <a class="el" href="_execute_network_program_options_8cpp_source.xhtml#l00457">ProgramOptions::ParseOptions()</a>, <a class="el" href="_execute_network_program_options_8cpp_source.xhtml#l00171">ProgramOptions::ProgramOptions()</a>, and <a class="el" href="_execute_network_params_8cpp_source.xhtml#l00111">ValidateParams()</a>.</p>

</div>
</div>
<hr/>The documentation for this struct was generated from the following files:<ul>
<li>tests/ExecuteNetwork/<a class="el" href="_execute_network_params_8hpp_source.xhtml">ExecuteNetworkParams.hpp</a></li>
<li>tests/ExecuteNetwork/<a class="el" href="_execute_network_params_8cpp_source.xhtml">ExecuteNetworkParams.cpp</a></li>
</ul>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="struct_execute_network_params.xhtml">ExecuteNetworkParams</a></li>
    <li class="footer">Generated on Fri Jun 17 2022 13:20:29 for ArmNN by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.13 </li>
  </ul>
</div>
</body>
</html>
