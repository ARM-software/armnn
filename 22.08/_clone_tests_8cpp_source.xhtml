<!-- Copyright (c) 2020 ARM Limited. -->
<!--                                 -->
<!-- SPDX-License-Identifier: MIT    -->
<!--                                 -->
<!-- HTML header for doxygen 1.8.13-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.13"/>
<meta name="robots" content="NOINDEX, NOFOLLOW" />
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>ArmNN: src/armnn/test/CloneTests.cpp Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script><script type="text/javascript" src="http://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="stylesheet.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <img alt="ArmNN" src="Arm_NN_horizontal_blue.png" style="max-width: 10rem; margin-top: .5rem; margin-left 10px"/>
  <td style="padding-left: 0.5em;">
   <div id="projectname">
   &#160;<span id="projectnumber">22.08</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.13 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
$(document).ready(function(){initNavTree('_clone_tests_8cpp_source.xhtml','');});
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="headertitle">
<div class="title">CloneTests.cpp</div>  </div>
</div><!--header-->
<div class="contents">
<a href="_clone_tests_8cpp.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="comment">//</span></div><div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="comment">// Copyright Â© 2021 Arm Ltd and Contributors. All rights reserved.</span></div><div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="comment">// SPDX-License-Identifier: MIT</span></div><div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="comment">//</span></div><div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;</div><div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="preprocessor">#include &lt;<a class="code" href="_graph_8hpp.xhtml">Graph.hpp</a>&gt;</span></div><div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="preprocessor">#include &lt;<a class="code" href="_layer_8hpp.xhtml">Layer.hpp</a>&gt;</span></div><div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;</div><div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="preprocessor">#include &lt;<a class="code" href="_types_utils_8hpp.xhtml">armnn/TypesUtils.hpp</a>&gt;</span></div><div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="preprocessor">#include &lt;<a class="code" href="_exceptions_8hpp.xhtml">armnn/Exceptions.hpp</a>&gt;</span></div><div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;<span class="preprocessor">#include &lt;<a class="code" href="_optional_8hpp.xhtml">armnn/Optional.hpp</a>&gt;</span></div><div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;<span class="preprocessor">#include &lt;<a class="code" href="_i_backend_internal_8hpp.xhtml">armnn/backends/IBackendInternal.hpp</a>&gt;</span></div><div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;<span class="preprocessor">#include &lt;<a class="code" href="include_2armnn_2backends_2_tensor_handle_8hpp.xhtml">armnn/backends/TensorHandle.hpp</a>&gt;</span></div><div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;<span class="preprocessor">#include &lt;<a class="code" href="_polymorphic_downcast_8hpp.xhtml">armnn/utility/PolymorphicDowncast.hpp</a>&gt;</span></div><div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;<span class="preprocessor">#include &lt;<a class="code" href="_workload_factory_base_8hpp.xhtml">backendsCommon/WorkloadFactoryBase.hpp</a>&gt;</span></div><div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;</div><div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;<span class="preprocessor">#include &lt;doctest/doctest.h&gt;</span></div><div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;</div><div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;<span class="keyword">namespace </span>{</div><div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;</div><div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;<span class="keyword">const</span> <a class="code" href="classarmnn_1_1_backend_id.xhtml">armnn::BackendId</a>&amp; GetCloneIdStatic()</div><div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;{</div><div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;    <span class="keyword">static</span> <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_backend_id.xhtml">armnn::BackendId</a> s_Id{<span class="stringliteral">&quot;Tests&quot;</span>};</div><div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;    <span class="keywordflow">return</span> s_Id;</div><div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;}</div><div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;</div><div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt;</div><div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;<span class="keywordtype">void</span> DeleteAsType(<span class="keyword">const</span> <span class="keywordtype">void</span>* <span class="keyword">const</span> blob)</div><div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;{</div><div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;    <span class="keyword">delete</span> <span class="keyword">static_cast&lt;</span><span class="keyword">const </span>T*<span class="keyword">&gt;</span>(blob);</div><div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;}</div><div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;</div><div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;<span class="keyword">class </span>TestWorkloadFactory : <span class="keyword">public</span> <a class="code" href="classarmnn_1_1_workload_factory_base.xhtml">armnn::WorkloadFactoryBase</a></div><div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;{</div><div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;<span class="keyword">public</span>:</div><div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;</div><div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;    TestWorkloadFactory(<span class="keywordtype">void</span>* ptr)</div><div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;        : m_Ptr(ptr)</div><div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;    {}</div><div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;</div><div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;    <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_backend_id.xhtml">armnn::BackendId</a>&amp; <a class="code" href="classarmnn_1_1_i_workload_factory.xhtml#a9f7e4296485d2812e7996089149c96d1">GetBackendId</a>()<span class="keyword"> const override</span></div><div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;<span class="keyword">    </span>{</div><div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;        <span class="keywordflow">return</span> GetCloneIdStatic();</div><div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;    }</div><div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;</div><div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;    std::unique_ptr&lt;armnn::IWorkload&gt; <a class="code" href="classarmnn_1_1_workload_factory_base.xhtml#a21a5aef5f1850d8b5f797d97632409b8">CreatePreCompiled</a>(<span class="keyword">const</span> <a class="code" href="structarmnn_1_1_pre_compiled_queue_descriptor.xhtml">armnn::PreCompiledQueueDescriptor</a>&amp; descriptor,</div><div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;                                                        <span class="keyword">const</span> <a class="code" href="structarmnn_1_1_workload_info.xhtml">armnn::WorkloadInfo</a>&amp;)<span class="keyword"> const override</span></div><div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;<span class="keyword">    </span>{</div><div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;        CHECK(descriptor.<a class="code" href="structarmnn_1_1_pre_compiled_queue_descriptor.xhtml#aa1fedd1a6371526cb68cc5cc58c87465">m_PreCompiledObject</a> == m_Ptr);</div><div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;        <span class="keywordflow">return</span> <span class="keyword">nullptr</span>;</div><div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;    }</div><div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;</div><div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;    <span class="keyword">mutable</span> <span class="keywordtype">void</span>* m_Ptr;</div><div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;};</div><div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;</div><div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;<a class="code" href="namespacearmnn.xhtml#a1621fb2f10314c394c9023d3e090d394">TEST_SUITE</a>(<span class="stringliteral">&quot;CloneTests&quot;</span>)</div><div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;{</div><div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;</div><div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;TEST_CASE (<span class="stringliteral">&quot;PreCompiledLayerClonePreservesObject&quot;</span>)</div><div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;{</div><div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;    <a class="code" href="classarmnn_1_1_graph.xhtml">armnn::Graph</a> graph1;</div><div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;    <a class="code" href="classarmnn_1_1_graph.xhtml">armnn::Graph</a> graph2;</div><div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;</div><div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;    <a class="code" href="structarmnn_1_1_pre_compiled_descriptor.xhtml">armnn::PreCompiledDescriptor</a> descriptor(0u, 0u);</div><div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;</div><div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;    <a class="code" href="classarmnn_1_1_layer.xhtml">armnn::Layer</a>* <span class="keyword">const</span> preCompiledLayer = graph1.<a class="code" href="classarmnn_1_1_graph.xhtml#a7563c5b899e7d0ada08fd0fdb202f205">AddLayer</a>&lt;<a class="code" href="classarmnn_1_1_pre_compiled_layer.xhtml">armnn::PreCompiledLayer</a>&gt;(descriptor, <span class="stringliteral">&quot;preCompiled&quot;</span>);</div><div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;    <a class="code" href="classarmnn_1_1_pre_compiled_layer.xhtml">armnn::PreCompiledLayer</a>* layer = armnn::PolymorphicDowncast&lt;armnn::PreCompiledLayer*&gt;(preCompiledLayer);</div><div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;    std::unique_ptr&lt;std::string&gt; payload = std::make_unique&lt;std::string&gt;(<span class="stringliteral">&quot;Hello&quot;</span>);</div><div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;</div><div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;    <a class="code" href="namespacearmnn.xhtml#ae3bff3986cb5a50637c9b3238d821f54">armnn::PreCompiledObjectPtr</a> payloadObject(payload.release(), DeleteAsType&lt;std::string&gt;);</div><div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;    TestWorkloadFactory factory(payloadObject.get());</div><div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;</div><div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;    layer-&gt;<a class="code" href="classarmnn_1_1_pre_compiled_layer.xhtml#a1e06bf299b99f9eecb2e8ac5ce7457e2">SetPreCompiledObject</a>(std::move(payloadObject));</div><div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;    layer-&gt;CreateWorkload(factory);</div><div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;</div><div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;    <a class="code" href="classarmnn_1_1_pre_compiled_layer.xhtml">armnn::PreCompiledLayer</a>* clone = layer-&gt;<a class="code" href="classarmnn_1_1_pre_compiled_layer.xhtml#a3a08acd0b68fad7b8116e35c8702d23e">Clone</a>(graph2);</div><div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;    CHECK(std::strcmp(clone-&gt;<a class="code" href="classarmnn_1_1_layer.xhtml#a7ddf0cf6f620d59c10e63495ace795d0">GetName</a>(), <span class="stringliteral">&quot;preCompiled&quot;</span>) == 0);</div><div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;    clone-&gt;<a class="code" href="classarmnn_1_1_pre_compiled_layer.xhtml#adfa912d0c4c6c00f1af2cbfa799572b7">CreateWorkload</a>(factory);</div><div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;}</div><div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;</div><div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;TEST_CASE (<span class="stringliteral">&quot;PreCompiledLayerCloneNoObject&quot;</span>)</div><div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;{</div><div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;    <a class="code" href="classarmnn_1_1_graph.xhtml">armnn::Graph</a> graph1;</div><div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;</div><div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;    <a class="code" href="classarmnn_1_1_graph.xhtml">armnn::Graph</a> graph2;</div><div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;</div><div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;    <a class="code" href="structarmnn_1_1_pre_compiled_descriptor.xhtml">armnn::PreCompiledDescriptor</a> descriptor(0u, 0u);</div><div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;</div><div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;    <a class="code" href="classarmnn_1_1_layer.xhtml">armnn::Layer</a>* <span class="keyword">const</span> preCompiledLayer = graph1.<a class="code" href="classarmnn_1_1_graph.xhtml#a7563c5b899e7d0ada08fd0fdb202f205">AddLayer</a>&lt;<a class="code" href="classarmnn_1_1_pre_compiled_layer.xhtml">armnn::PreCompiledLayer</a>&gt;(descriptor, <span class="stringliteral">&quot;preCompiled&quot;</span>);</div><div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;    <a class="code" href="classarmnn_1_1_pre_compiled_layer.xhtml">armnn::PreCompiledLayer</a>* layer = armnn::PolymorphicDowncast&lt;armnn::PreCompiledLayer*&gt;(preCompiledLayer);</div><div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;</div><div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;    TestWorkloadFactory factory(<span class="keyword">nullptr</span>);</div><div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;    layer-&gt;CreateWorkload(factory);</div><div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;</div><div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;    <a class="code" href="classarmnn_1_1_pre_compiled_layer.xhtml">armnn::PreCompiledLayer</a>* clone = layer-&gt;<a class="code" href="classarmnn_1_1_pre_compiled_layer.xhtml#a3a08acd0b68fad7b8116e35c8702d23e">Clone</a>(graph2);</div><div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;    CHECK(std::strcmp(clone-&gt;<a class="code" href="classarmnn_1_1_layer.xhtml#a7ddf0cf6f620d59c10e63495ace795d0">GetName</a>(), <span class="stringliteral">&quot;preCompiled&quot;</span>) == 0);</div><div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;    clone-&gt;<a class="code" href="classarmnn_1_1_pre_compiled_layer.xhtml#adfa912d0c4c6c00f1af2cbfa799572b7">CreateWorkload</a>(factory);</div><div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;}</div><div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;</div><div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;}</div><div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;</div><div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;} <span class="comment">// end anonymous namespace</span></div><div class="ttc" id="namespacearmnn_xhtml_a1621fb2f10314c394c9023d3e090d394"><div class="ttname"><a href="namespacearmnn.xhtml#a1621fb2f10314c394c9023d3e090d394">armnn::TEST_SUITE</a></div><div class="ttdeci">TEST_SUITE(&quot;TestConstTensorLayerVisitor&quot;)</div><div class="ttdef"><b>Definition:</b> <a href="_const_tensor_layer_visitor_8cpp_source.xhtml#l00110">ConstTensorLayerVisitor.cpp:110</a></div></div>
<div class="ttc" id="classarmnn_1_1_i_workload_factory_xhtml_a9f7e4296485d2812e7996089149c96d1"><div class="ttname"><a href="classarmnn_1_1_i_workload_factory.xhtml#a9f7e4296485d2812e7996089149c96d1">armnn::IWorkloadFactory::GetBackendId</a></div><div class="ttdeci">virtual const BackendId &amp; GetBackendId() const =0</div></div>
<div class="ttc" id="_i_backend_internal_8hpp_xhtml"><div class="ttname"><a href="_i_backend_internal_8hpp.xhtml">IBackendInternal.hpp</a></div></div>
<div class="ttc" id="classarmnn_1_1_graph_xhtml_a7563c5b899e7d0ada08fd0fdb202f205"><div class="ttname"><a href="classarmnn_1_1_graph.xhtml#a7563c5b899e7d0ada08fd0fdb202f205">armnn::Graph::AddLayer</a></div><div class="ttdeci">LayerT * AddLayer(Args &amp;&amp;... args)</div><div class="ttdoc">Adds a new layer, of type LayerType, to the graph constructed with the arguments passed. </div><div class="ttdef"><b>Definition:</b> <a href="_graph_8hpp_source.xhtml#l00456">Graph.hpp:456</a></div></div>
<div class="ttc" id="namespacearmnn_xhtml_ae3bff3986cb5a50637c9b3238d821f54"><div class="ttname"><a href="namespacearmnn.xhtml#ae3bff3986cb5a50637c9b3238d821f54">armnn::PreCompiledObjectPtr</a></div><div class="ttdeci">std::unique_ptr&lt; void, PreCompiledObjectDeleter &gt; PreCompiledObjectPtr</div><div class="ttdef"><b>Definition:</b> <a href="_pre_compiled_layer_8hpp_source.xhtml#l00020">PreCompiledLayer.hpp:20</a></div></div>
<div class="ttc" id="classarmnn_1_1_pre_compiled_layer_xhtml_a3a08acd0b68fad7b8116e35c8702d23e"><div class="ttname"><a href="classarmnn_1_1_pre_compiled_layer.xhtml#a3a08acd0b68fad7b8116e35c8702d23e">armnn::PreCompiledLayer::Clone</a></div><div class="ttdeci">PreCompiledLayer * Clone(Graph &amp;graph) const override</div><div class="ttdoc">Creates a dynamically-allocated copy of this layer. </div><div class="ttdef"><b>Definition:</b> <a href="_pre_compiled_layer_8cpp_source.xhtml#l00024">PreCompiledLayer.cpp:24</a></div></div>
<div class="ttc" id="_polymorphic_downcast_8hpp_xhtml"><div class="ttname"><a href="_polymorphic_downcast_8hpp.xhtml">PolymorphicDowncast.hpp</a></div></div>
<div class="ttc" id="_types_utils_8hpp_xhtml"><div class="ttname"><a href="_types_utils_8hpp.xhtml">TypesUtils.hpp</a></div></div>
<div class="ttc" id="classarmnn_1_1_pre_compiled_layer_xhtml_a1e06bf299b99f9eecb2e8ac5ce7457e2"><div class="ttname"><a href="classarmnn_1_1_pre_compiled_layer.xhtml#a1e06bf299b99f9eecb2e8ac5ce7457e2">armnn::PreCompiledLayer::SetPreCompiledObject</a></div><div class="ttdeci">void SetPreCompiledObject(PreCompiledObjectPtr preCompiledObject)</div><div class="ttdef"><b>Definition:</b> <a href="_pre_compiled_layer_8cpp_source.xhtml#l00047">PreCompiledLayer.cpp:47</a></div></div>
<div class="ttc" id="_optional_8hpp_xhtml"><div class="ttname"><a href="_optional_8hpp.xhtml">Optional.hpp</a></div></div>
<div class="ttc" id="_graph_8hpp_xhtml"><div class="ttname"><a href="_graph_8hpp.xhtml">Graph.hpp</a></div></div>
<div class="ttc" id="structarmnn_1_1_pre_compiled_queue_descriptor_xhtml_aa1fedd1a6371526cb68cc5cc58c87465"><div class="ttname"><a href="structarmnn_1_1_pre_compiled_queue_descriptor.xhtml#aa1fedd1a6371526cb68cc5cc58c87465">armnn::PreCompiledQueueDescriptor::m_PreCompiledObject</a></div><div class="ttdeci">void * m_PreCompiledObject</div><div class="ttdef"><b>Definition:</b> <a href="include_2armnn_2backends_2_workload_data_8hpp_source.xhtml#l00559">WorkloadData.hpp:559</a></div></div>
<div class="ttc" id="include_2armnn_2backends_2_tensor_handle_8hpp_xhtml"><div class="ttname"><a href="include_2armnn_2backends_2_tensor_handle_8hpp.xhtml">TensorHandle.hpp</a></div></div>
<div class="ttc" id="classarmnn_1_1_pre_compiled_layer_xhtml_adfa912d0c4c6c00f1af2cbfa799572b7"><div class="ttname"><a href="classarmnn_1_1_pre_compiled_layer.xhtml#adfa912d0c4c6c00f1af2cbfa799572b7">armnn::PreCompiledLayer::CreateWorkload</a></div><div class="ttdeci">virtual std::unique_ptr&lt; IWorkload &gt; CreateWorkload(const IWorkloadFactory &amp;factory) const override</div><div class="ttdef"><b>Definition:</b> <a href="_pre_compiled_layer_8cpp_source.xhtml#l00031">PreCompiledLayer.cpp:31</a></div></div>
<div class="ttc" id="classarmnn_1_1_graph_xhtml"><div class="ttname"><a href="classarmnn_1_1_graph.xhtml">armnn::Graph</a></div><div class="ttdef"><b>Definition:</b> <a href="_graph_8hpp_source.xhtml#l00030">Graph.hpp:30</a></div></div>
<div class="ttc" id="_layer_8hpp_xhtml"><div class="ttname"><a href="_layer_8hpp.xhtml">Layer.hpp</a></div></div>
<div class="ttc" id="classarmnn_1_1_pre_compiled_layer_xhtml"><div class="ttname"><a href="classarmnn_1_1_pre_compiled_layer.xhtml">armnn::PreCompiledLayer</a></div><div class="ttdef"><b>Definition:</b> <a href="_pre_compiled_layer_8hpp_source.xhtml#l00022">PreCompiledLayer.hpp:22</a></div></div>
<div class="ttc" id="_workload_factory_base_8hpp_xhtml"><div class="ttname"><a href="_workload_factory_base_8hpp.xhtml">WorkloadFactoryBase.hpp</a></div></div>
<div class="ttc" id="classarmnn_1_1_workload_factory_base_xhtml_a21a5aef5f1850d8b5f797d97632409b8"><div class="ttname"><a href="classarmnn_1_1_workload_factory_base.xhtml#a21a5aef5f1850d8b5f797d97632409b8">armnn::WorkloadFactoryBase::CreatePreCompiled</a></div><div class="ttdeci">std::unique_ptr&lt; IWorkload &gt; CreatePreCompiled(const PreCompiledQueueDescriptor &amp;, const WorkloadInfo &amp;) const override</div><div class="ttdef"><b>Definition:</b> <a href="_workload_factory_base_8hpp_source.xhtml#l00207">WorkloadFactoryBase.hpp:207</a></div></div>
<div class="ttc" id="_exceptions_8hpp_xhtml"><div class="ttname"><a href="_exceptions_8hpp.xhtml">Exceptions.hpp</a></div></div>
<div class="ttc" id="structarmnn_1_1_workload_info_xhtml"><div class="ttname"><a href="structarmnn_1_1_workload_info.xhtml">armnn::WorkloadInfo</a></div><div class="ttdoc">Contains information about TensorInfos of a layer. </div><div class="ttdef"><b>Definition:</b> <a href="include_2armnn_2backends_2_workload_info_8hpp_source.xhtml#l00016">WorkloadInfo.hpp:16</a></div></div>
<div class="ttc" id="classarmnn_1_1_layer_xhtml_a7ddf0cf6f620d59c10e63495ace795d0"><div class="ttname"><a href="classarmnn_1_1_layer.xhtml#a7ddf0cf6f620d59c10e63495ace795d0">armnn::Layer::GetName</a></div><div class="ttdeci">const char * GetName() const override</div><div class="ttdoc">Returns the name of the layer. </div><div class="ttdef"><b>Definition:</b> <a href="_layer_8hpp_source.xhtml#l00319">Layer.hpp:319</a></div></div>
<div class="ttc" id="structarmnn_1_1_pre_compiled_queue_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_pre_compiled_queue_descriptor.xhtml">armnn::PreCompiledQueueDescriptor</a></div><div class="ttdef"><b>Definition:</b> <a href="include_2armnn_2backends_2_workload_data_8hpp_source.xhtml#l00552">WorkloadData.hpp:552</a></div></div>
<div class="ttc" id="structarmnn_1_1_pre_compiled_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_pre_compiled_descriptor.xhtml">armnn::PreCompiledDescriptor</a></div><div class="ttdoc">A PreCompiledDescriptor for the PreCompiledLayer. </div><div class="ttdef"><b>Definition:</b> <a href="_descriptors_8hpp_source.xhtml#l01344">Descriptors.hpp:1344</a></div></div>
<div class="ttc" id="classarmnn_1_1_workload_factory_base_xhtml"><div class="ttname"><a href="classarmnn_1_1_workload_factory_base.xhtml">armnn::WorkloadFactoryBase</a></div><div class="ttdef"><b>Definition:</b> <a href="_workload_factory_base_8hpp_source.xhtml#l00013">WorkloadFactoryBase.hpp:13</a></div></div>
<div class="ttc" id="classarmnn_1_1_layer_xhtml"><div class="ttname"><a href="classarmnn_1_1_layer.xhtml">armnn::Layer</a></div><div class="ttdef"><b>Definition:</b> <a href="_layer_8hpp_source.xhtml#l00217">Layer.hpp:217</a></div></div>
<div class="ttc" id="classarmnn_1_1_backend_id_xhtml"><div class="ttname"><a href="classarmnn_1_1_backend_id.xhtml">armnn::BackendId</a></div><div class="ttdef"><b>Definition:</b> <a href="_backend_id_8hpp_source.xhtml#l00075">BackendId.hpp:75</a></div></div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="dir_68267d1309a1af8e8297ef4c3efbcdba.xhtml">src</a></li><li class="navelem"><a class="el" href="dir_e0a84d05c80a2ef4231141dcbbeac5c8.xhtml">armnn</a></li><li class="navelem"><a class="el" href="dir_9d86fd1fbecbedf5bdb69c7e7235fe5f.xhtml">test</a></li><li class="navelem"><a class="el" href="_clone_tests_8cpp.xhtml">CloneTests.cpp</a></li>
    <li class="footer">Generated on Fri Aug 19 2022 14:38:27 for ArmNN by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.13 </li>
  </ul>
</div>
</body>
</html>
