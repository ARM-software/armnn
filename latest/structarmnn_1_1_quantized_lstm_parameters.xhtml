<!-- Copyright (c) 2020 ARM Limited. -->
<!--                                 -->
<!-- SPDX-License-Identifier: MIT    -->
<!--                                 -->
<!-- HTML header for doxygen 1.8.13-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.17"/>
<meta name="robots" content="NOINDEX, NOFOLLOW" />
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>ArmNN: QuantizedLstmParameters Struct Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script>
<script type="text/javascript" async="async" src="http://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="stylesheet.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <img alt="ArmNN" src="Arm_NN_horizontal_blue.png" style="max-width: 10rem; margin-top: .5rem; margin-left 10px"/>
  <td style="padding-left: 0.5em;">
   <div id="projectname">
   &#160;<span id="projectnumber">23.02</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.17 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "search",false,'Search');
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(document).ready(function(){initNavTree('structarmnn_1_1_quantized_lstm_parameters.xhtml',''); initResizable(); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="summary">
<a href="#pub-attribs">Public Attributes</a> &#124;
<a href="structarmnn_1_1_quantized_lstm_parameters-members.xhtml">List of all members</a>  </div>
  <div class="headertitle">
<div class="title">QuantizedLstmParameters Struct Reference</div>  </div>
</div><!--header-->
<div class="contents">

<p><code>#include &lt;<a class="el" href="_quantized_lstm_layer_8hpp_source.xhtml">QuantizedLstmLayer.hpp</a>&gt;</code></p>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-attribs"></a>
Public Attributes</h2></td></tr>
<tr class="memitem:a281954ff495d27f7a29e42a98768c670"><td class="memItemLeft" align="right" valign="top">std::shared_ptr&lt; <a class="el" href="classarmnn_1_1_const_tensor_handle.xhtml">ConstTensorHandle</a> &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structarmnn_1_1_quantized_lstm_parameters.xhtml#a281954ff495d27f7a29e42a98768c670">m_InputToInputWeights</a></td></tr>
<tr class="memdesc:a281954ff495d27f7a29e42a98768c670"><td class="mdescLeft">&#160;</td><td class="mdescRight">A unique pointer to represent 2D weights tensor with dimensions [outputSize, inputSize] (QAsymm8).  <a href="structarmnn_1_1_quantized_lstm_parameters.xhtml#a281954ff495d27f7a29e42a98768c670">More...</a><br /></td></tr>
<tr class="separator:a281954ff495d27f7a29e42a98768c670"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aafad117fb253359c1d472c9faefe49ef"><td class="memItemLeft" align="right" valign="top">std::shared_ptr&lt; <a class="el" href="classarmnn_1_1_const_tensor_handle.xhtml">ConstTensorHandle</a> &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structarmnn_1_1_quantized_lstm_parameters.xhtml#aafad117fb253359c1d472c9faefe49ef">m_InputToForgetWeights</a></td></tr>
<tr class="memdesc:aafad117fb253359c1d472c9faefe49ef"><td class="mdescLeft">&#160;</td><td class="mdescRight">A unique pointer to represent 2D weights tensor with dimensions [outputSize, inputSize] (QAsymm8).  <a href="structarmnn_1_1_quantized_lstm_parameters.xhtml#aafad117fb253359c1d472c9faefe49ef">More...</a><br /></td></tr>
<tr class="separator:aafad117fb253359c1d472c9faefe49ef"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad3f42762262330534a4be0dde29a1318"><td class="memItemLeft" align="right" valign="top">std::shared_ptr&lt; <a class="el" href="classarmnn_1_1_const_tensor_handle.xhtml">ConstTensorHandle</a> &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structarmnn_1_1_quantized_lstm_parameters.xhtml#ad3f42762262330534a4be0dde29a1318">m_InputToCellWeights</a></td></tr>
<tr class="memdesc:ad3f42762262330534a4be0dde29a1318"><td class="mdescLeft">&#160;</td><td class="mdescRight">A unique pointer to represent 2D weights tensor with dimensions [outputSize, inputSize] (QAsymm8).  <a href="structarmnn_1_1_quantized_lstm_parameters.xhtml#ad3f42762262330534a4be0dde29a1318">More...</a><br /></td></tr>
<tr class="separator:ad3f42762262330534a4be0dde29a1318"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3d4f6f42e10ba6f808a5244bb7853e7e"><td class="memItemLeft" align="right" valign="top">std::shared_ptr&lt; <a class="el" href="classarmnn_1_1_const_tensor_handle.xhtml">ConstTensorHandle</a> &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structarmnn_1_1_quantized_lstm_parameters.xhtml#a3d4f6f42e10ba6f808a5244bb7853e7e">m_InputToOutputWeights</a></td></tr>
<tr class="memdesc:a3d4f6f42e10ba6f808a5244bb7853e7e"><td class="mdescLeft">&#160;</td><td class="mdescRight">A unique pointer to represent 2D weights tensor with dimensions [outputSize, inputSize] (QAsymm8).  <a href="structarmnn_1_1_quantized_lstm_parameters.xhtml#a3d4f6f42e10ba6f808a5244bb7853e7e">More...</a><br /></td></tr>
<tr class="separator:a3d4f6f42e10ba6f808a5244bb7853e7e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:addfb6b081817510deb924c8fb5ce216c"><td class="memItemLeft" align="right" valign="top">std::shared_ptr&lt; <a class="el" href="classarmnn_1_1_const_tensor_handle.xhtml">ConstTensorHandle</a> &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structarmnn_1_1_quantized_lstm_parameters.xhtml#addfb6b081817510deb924c8fb5ce216c">m_RecurrentToInputWeights</a></td></tr>
<tr class="memdesc:addfb6b081817510deb924c8fb5ce216c"><td class="mdescLeft">&#160;</td><td class="mdescRight">A unique pointer to represent 2D weights tensor with dimensions [outputSize, outputSize] (QAsymm8).  <a href="structarmnn_1_1_quantized_lstm_parameters.xhtml#addfb6b081817510deb924c8fb5ce216c">More...</a><br /></td></tr>
<tr class="separator:addfb6b081817510deb924c8fb5ce216c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1dd41cd674924907643cb088070a65d3"><td class="memItemLeft" align="right" valign="top">std::shared_ptr&lt; <a class="el" href="classarmnn_1_1_const_tensor_handle.xhtml">ConstTensorHandle</a> &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structarmnn_1_1_quantized_lstm_parameters.xhtml#a1dd41cd674924907643cb088070a65d3">m_RecurrentToForgetWeights</a></td></tr>
<tr class="memdesc:a1dd41cd674924907643cb088070a65d3"><td class="mdescLeft">&#160;</td><td class="mdescRight">A unique pointer to represent 2D weights tensor with dimensions [outputSize, outputSize] (QAsymm8).  <a href="structarmnn_1_1_quantized_lstm_parameters.xhtml#a1dd41cd674924907643cb088070a65d3">More...</a><br /></td></tr>
<tr class="separator:a1dd41cd674924907643cb088070a65d3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a608ed1a3d4135921ce33a286a87a072b"><td class="memItemLeft" align="right" valign="top">std::shared_ptr&lt; <a class="el" href="classarmnn_1_1_const_tensor_handle.xhtml">ConstTensorHandle</a> &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structarmnn_1_1_quantized_lstm_parameters.xhtml#a608ed1a3d4135921ce33a286a87a072b">m_RecurrentToCellWeights</a></td></tr>
<tr class="memdesc:a608ed1a3d4135921ce33a286a87a072b"><td class="mdescLeft">&#160;</td><td class="mdescRight">A unique pointer to represent 2D weights tensor with dimensions [outputSize, outputSize] (QAsymm8).  <a href="structarmnn_1_1_quantized_lstm_parameters.xhtml#a608ed1a3d4135921ce33a286a87a072b">More...</a><br /></td></tr>
<tr class="separator:a608ed1a3d4135921ce33a286a87a072b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:addad136e04521a1d31cbebf7280c312e"><td class="memItemLeft" align="right" valign="top">std::shared_ptr&lt; <a class="el" href="classarmnn_1_1_const_tensor_handle.xhtml">ConstTensorHandle</a> &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structarmnn_1_1_quantized_lstm_parameters.xhtml#addad136e04521a1d31cbebf7280c312e">m_RecurrentToOutputWeights</a></td></tr>
<tr class="memdesc:addad136e04521a1d31cbebf7280c312e"><td class="mdescLeft">&#160;</td><td class="mdescRight">A unique pointer to represent 2D weights tensor with dimensions [outputSize, outputSize] (QAsymm8).  <a href="structarmnn_1_1_quantized_lstm_parameters.xhtml#addad136e04521a1d31cbebf7280c312e">More...</a><br /></td></tr>
<tr class="separator:addad136e04521a1d31cbebf7280c312e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a85684ffb2d12d0d04fbd188591488a2c"><td class="memItemLeft" align="right" valign="top">std::shared_ptr&lt; <a class="el" href="classarmnn_1_1_const_tensor_handle.xhtml">ConstTensorHandle</a> &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structarmnn_1_1_quantized_lstm_parameters.xhtml#a85684ffb2d12d0d04fbd188591488a2c">m_InputGateBias</a></td></tr>
<tr class="memdesc:a85684ffb2d12d0d04fbd188591488a2c"><td class="mdescLeft">&#160;</td><td class="mdescRight">A unique pointer to represent 1D bias tensor with dimensions [outputSize] (int32).  <a href="structarmnn_1_1_quantized_lstm_parameters.xhtml#a85684ffb2d12d0d04fbd188591488a2c">More...</a><br /></td></tr>
<tr class="separator:a85684ffb2d12d0d04fbd188591488a2c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af7f44bcc5b6cf669268a9ac0ff1446be"><td class="memItemLeft" align="right" valign="top">std::shared_ptr&lt; <a class="el" href="classarmnn_1_1_const_tensor_handle.xhtml">ConstTensorHandle</a> &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structarmnn_1_1_quantized_lstm_parameters.xhtml#af7f44bcc5b6cf669268a9ac0ff1446be">m_ForgetGateBias</a></td></tr>
<tr class="memdesc:af7f44bcc5b6cf669268a9ac0ff1446be"><td class="mdescLeft">&#160;</td><td class="mdescRight">A unique pointer to represent 1D bias tensor with dimensions [outputSize] (int32).  <a href="structarmnn_1_1_quantized_lstm_parameters.xhtml#af7f44bcc5b6cf669268a9ac0ff1446be">More...</a><br /></td></tr>
<tr class="separator:af7f44bcc5b6cf669268a9ac0ff1446be"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a21a90800797f1e122bc44d7022001558"><td class="memItemLeft" align="right" valign="top">std::shared_ptr&lt; <a class="el" href="classarmnn_1_1_const_tensor_handle.xhtml">ConstTensorHandle</a> &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structarmnn_1_1_quantized_lstm_parameters.xhtml#a21a90800797f1e122bc44d7022001558">m_CellBias</a></td></tr>
<tr class="memdesc:a21a90800797f1e122bc44d7022001558"><td class="mdescLeft">&#160;</td><td class="mdescRight">A unique pointer to represent 1D bias tensor with dimensions [outputSize] (int32).  <a href="structarmnn_1_1_quantized_lstm_parameters.xhtml#a21a90800797f1e122bc44d7022001558">More...</a><br /></td></tr>
<tr class="separator:a21a90800797f1e122bc44d7022001558"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a950c538e326db48f4c26a354c2b982e3"><td class="memItemLeft" align="right" valign="top">std::shared_ptr&lt; <a class="el" href="classarmnn_1_1_const_tensor_handle.xhtml">ConstTensorHandle</a> &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structarmnn_1_1_quantized_lstm_parameters.xhtml#a950c538e326db48f4c26a354c2b982e3">m_OutputGateBias</a></td></tr>
<tr class="memdesc:a950c538e326db48f4c26a354c2b982e3"><td class="mdescLeft">&#160;</td><td class="mdescRight">A unique pointer to represent 1D bias tensor with dimensions [outputSize] (int32).  <a href="structarmnn_1_1_quantized_lstm_parameters.xhtml#a950c538e326db48f4c26a354c2b982e3">More...</a><br /></td></tr>
<tr class="separator:a950c538e326db48f4c26a354c2b982e3"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock">
<p class="definition">Definition at line <a class="el" href="_quantized_lstm_layer_8hpp_source.xhtml#l00014">14</a> of file <a class="el" href="_quantized_lstm_layer_8hpp_source.xhtml">QuantizedLstmLayer.hpp</a>.</p>
</div><h2 class="groupheader">Member Data Documentation</h2>
<a id="a21a90800797f1e122bc44d7022001558"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a21a90800797f1e122bc44d7022001558">&#9670;&nbsp;</a></span>m_CellBias</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">std::shared_ptr&lt;<a class="el" href="classarmnn_1_1_const_tensor_handle.xhtml">ConstTensorHandle</a>&gt; m_CellBias</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>A unique pointer to represent 1D bias tensor with dimensions [outputSize] (int32). </p>

<p class="definition">Definition at line <a class="el" href="_quantized_lstm_layer_8hpp_source.xhtml#l00039">39</a> of file <a class="el" href="_quantized_lstm_layer_8hpp_source.xhtml">QuantizedLstmLayer.hpp</a>.</p>

<p class="reference">Referenced by <a class="el" href="_quantized_lstm_layer_8cpp_source.xhtml#l00047">QuantizedLstmLayer::Clone()</a>, <a class="el" href="_quantized_lstm_layer_8cpp_source.xhtml#l00022">QuantizedLstmLayer::CreateWorkload()</a>, <a class="el" href="_quantized_lstm_layer_8cpp_source.xhtml#l00173">QuantizedLstmLayer::ExecuteStrategy()</a>, <a class="el" href="_quantized_lstm_layer_8cpp_source.xhtml#l00151">QuantizedLstmLayer::GetConstantTensorsByRef()</a>, and <a class="el" href="_quantized_lstm_layer_8cpp_source.xhtml#l00096">QuantizedLstmLayer::ValidateTensorShapesFromInputs()</a>.</p>

</div>
</div>
<a id="af7f44bcc5b6cf669268a9ac0ff1446be"></a>
<h2 class="memtitle"><span class="permalink"><a href="#af7f44bcc5b6cf669268a9ac0ff1446be">&#9670;&nbsp;</a></span>m_ForgetGateBias</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">std::shared_ptr&lt;<a class="el" href="classarmnn_1_1_const_tensor_handle.xhtml">ConstTensorHandle</a>&gt; m_ForgetGateBias</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>A unique pointer to represent 1D bias tensor with dimensions [outputSize] (int32). </p>

<p class="definition">Definition at line <a class="el" href="_quantized_lstm_layer_8hpp_source.xhtml#l00037">37</a> of file <a class="el" href="_quantized_lstm_layer_8hpp_source.xhtml">QuantizedLstmLayer.hpp</a>.</p>

<p class="reference">Referenced by <a class="el" href="_quantized_lstm_layer_8cpp_source.xhtml#l00047">QuantizedLstmLayer::Clone()</a>, <a class="el" href="_quantized_lstm_layer_8cpp_source.xhtml#l00022">QuantizedLstmLayer::CreateWorkload()</a>, <a class="el" href="_quantized_lstm_layer_8cpp_source.xhtml#l00173">QuantizedLstmLayer::ExecuteStrategy()</a>, <a class="el" href="_quantized_lstm_layer_8cpp_source.xhtml#l00151">QuantizedLstmLayer::GetConstantTensorsByRef()</a>, and <a class="el" href="_quantized_lstm_layer_8cpp_source.xhtml#l00096">QuantizedLstmLayer::ValidateTensorShapesFromInputs()</a>.</p>

</div>
</div>
<a id="a85684ffb2d12d0d04fbd188591488a2c"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a85684ffb2d12d0d04fbd188591488a2c">&#9670;&nbsp;</a></span>m_InputGateBias</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">std::shared_ptr&lt;<a class="el" href="classarmnn_1_1_const_tensor_handle.xhtml">ConstTensorHandle</a>&gt; m_InputGateBias</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>A unique pointer to represent 1D bias tensor with dimensions [outputSize] (int32). </p>

<p class="definition">Definition at line <a class="el" href="_quantized_lstm_layer_8hpp_source.xhtml#l00035">35</a> of file <a class="el" href="_quantized_lstm_layer_8hpp_source.xhtml">QuantizedLstmLayer.hpp</a>.</p>

<p class="reference">Referenced by <a class="el" href="_quantized_lstm_layer_8cpp_source.xhtml#l00047">QuantizedLstmLayer::Clone()</a>, <a class="el" href="_quantized_lstm_layer_8cpp_source.xhtml#l00022">QuantizedLstmLayer::CreateWorkload()</a>, <a class="el" href="_quantized_lstm_layer_8cpp_source.xhtml#l00173">QuantizedLstmLayer::ExecuteStrategy()</a>, <a class="el" href="_quantized_lstm_layer_8cpp_source.xhtml#l00151">QuantizedLstmLayer::GetConstantTensorsByRef()</a>, and <a class="el" href="_quantized_lstm_layer_8cpp_source.xhtml#l00096">QuantizedLstmLayer::ValidateTensorShapesFromInputs()</a>.</p>

</div>
</div>
<a id="ad3f42762262330534a4be0dde29a1318"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ad3f42762262330534a4be0dde29a1318">&#9670;&nbsp;</a></span>m_InputToCellWeights</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">std::shared_ptr&lt;<a class="el" href="classarmnn_1_1_const_tensor_handle.xhtml">ConstTensorHandle</a>&gt; m_InputToCellWeights</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>A unique pointer to represent 2D weights tensor with dimensions [outputSize, inputSize] (QAsymm8). </p>

<p class="definition">Definition at line <a class="el" href="_quantized_lstm_layer_8hpp_source.xhtml#l00021">21</a> of file <a class="el" href="_quantized_lstm_layer_8hpp_source.xhtml">QuantizedLstmLayer.hpp</a>.</p>

<p class="reference">Referenced by <a class="el" href="_quantized_lstm_layer_8cpp_source.xhtml#l00047">QuantizedLstmLayer::Clone()</a>, <a class="el" href="_quantized_lstm_layer_8cpp_source.xhtml#l00022">QuantizedLstmLayer::CreateWorkload()</a>, <a class="el" href="_quantized_lstm_layer_8cpp_source.xhtml#l00173">QuantizedLstmLayer::ExecuteStrategy()</a>, <a class="el" href="_quantized_lstm_layer_8cpp_source.xhtml#l00151">QuantizedLstmLayer::GetConstantTensorsByRef()</a>, and <a class="el" href="_quantized_lstm_layer_8cpp_source.xhtml#l00096">QuantizedLstmLayer::ValidateTensorShapesFromInputs()</a>.</p>

</div>
</div>
<a id="aafad117fb253359c1d472c9faefe49ef"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aafad117fb253359c1d472c9faefe49ef">&#9670;&nbsp;</a></span>m_InputToForgetWeights</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">std::shared_ptr&lt;<a class="el" href="classarmnn_1_1_const_tensor_handle.xhtml">ConstTensorHandle</a>&gt; m_InputToForgetWeights</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>A unique pointer to represent 2D weights tensor with dimensions [outputSize, inputSize] (QAsymm8). </p>

<p class="definition">Definition at line <a class="el" href="_quantized_lstm_layer_8hpp_source.xhtml#l00019">19</a> of file <a class="el" href="_quantized_lstm_layer_8hpp_source.xhtml">QuantizedLstmLayer.hpp</a>.</p>

<p class="reference">Referenced by <a class="el" href="_quantized_lstm_layer_8cpp_source.xhtml#l00047">QuantizedLstmLayer::Clone()</a>, <a class="el" href="_quantized_lstm_layer_8cpp_source.xhtml#l00022">QuantizedLstmLayer::CreateWorkload()</a>, <a class="el" href="_quantized_lstm_layer_8cpp_source.xhtml#l00173">QuantizedLstmLayer::ExecuteStrategy()</a>, <a class="el" href="_quantized_lstm_layer_8cpp_source.xhtml#l00151">QuantizedLstmLayer::GetConstantTensorsByRef()</a>, and <a class="el" href="_quantized_lstm_layer_8cpp_source.xhtml#l00096">QuantizedLstmLayer::ValidateTensorShapesFromInputs()</a>.</p>

</div>
</div>
<a id="a281954ff495d27f7a29e42a98768c670"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a281954ff495d27f7a29e42a98768c670">&#9670;&nbsp;</a></span>m_InputToInputWeights</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">std::shared_ptr&lt;<a class="el" href="classarmnn_1_1_const_tensor_handle.xhtml">ConstTensorHandle</a>&gt; m_InputToInputWeights</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>A unique pointer to represent 2D weights tensor with dimensions [outputSize, inputSize] (QAsymm8). </p>

<p class="definition">Definition at line <a class="el" href="_quantized_lstm_layer_8hpp_source.xhtml#l00017">17</a> of file <a class="el" href="_quantized_lstm_layer_8hpp_source.xhtml">QuantizedLstmLayer.hpp</a>.</p>

<p class="reference">Referenced by <a class="el" href="_network_8cpp_source.xhtml#l02336">NetworkImpl::AddQuantizedLstmLayer()</a>, <a class="el" href="_quantized_lstm_layer_8cpp_source.xhtml#l00047">QuantizedLstmLayer::Clone()</a>, <a class="el" href="_quantized_lstm_layer_8cpp_source.xhtml#l00022">QuantizedLstmLayer::CreateWorkload()</a>, <a class="el" href="_quantized_lstm_layer_8cpp_source.xhtml#l00173">QuantizedLstmLayer::ExecuteStrategy()</a>, <a class="el" href="_quantized_lstm_layer_8cpp_source.xhtml#l00151">QuantizedLstmLayer::GetConstantTensorsByRef()</a>, and <a class="el" href="_quantized_lstm_layer_8cpp_source.xhtml#l00096">QuantizedLstmLayer::ValidateTensorShapesFromInputs()</a>.</p>

</div>
</div>
<a id="a3d4f6f42e10ba6f808a5244bb7853e7e"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a3d4f6f42e10ba6f808a5244bb7853e7e">&#9670;&nbsp;</a></span>m_InputToOutputWeights</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">std::shared_ptr&lt;<a class="el" href="classarmnn_1_1_const_tensor_handle.xhtml">ConstTensorHandle</a>&gt; m_InputToOutputWeights</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>A unique pointer to represent 2D weights tensor with dimensions [outputSize, inputSize] (QAsymm8). </p>

<p class="definition">Definition at line <a class="el" href="_quantized_lstm_layer_8hpp_source.xhtml#l00023">23</a> of file <a class="el" href="_quantized_lstm_layer_8hpp_source.xhtml">QuantizedLstmLayer.hpp</a>.</p>

<p class="reference">Referenced by <a class="el" href="_quantized_lstm_layer_8cpp_source.xhtml#l00047">QuantizedLstmLayer::Clone()</a>, <a class="el" href="_quantized_lstm_layer_8cpp_source.xhtml#l00022">QuantizedLstmLayer::CreateWorkload()</a>, <a class="el" href="_quantized_lstm_layer_8cpp_source.xhtml#l00173">QuantizedLstmLayer::ExecuteStrategy()</a>, <a class="el" href="_quantized_lstm_layer_8cpp_source.xhtml#l00151">QuantizedLstmLayer::GetConstantTensorsByRef()</a>, and <a class="el" href="_quantized_lstm_layer_8cpp_source.xhtml#l00096">QuantizedLstmLayer::ValidateTensorShapesFromInputs()</a>.</p>

</div>
</div>
<a id="a950c538e326db48f4c26a354c2b982e3"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a950c538e326db48f4c26a354c2b982e3">&#9670;&nbsp;</a></span>m_OutputGateBias</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">std::shared_ptr&lt;<a class="el" href="classarmnn_1_1_const_tensor_handle.xhtml">ConstTensorHandle</a>&gt; m_OutputGateBias</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>A unique pointer to represent 1D bias tensor with dimensions [outputSize] (int32). </p>

<p class="definition">Definition at line <a class="el" href="_quantized_lstm_layer_8hpp_source.xhtml#l00041">41</a> of file <a class="el" href="_quantized_lstm_layer_8hpp_source.xhtml">QuantizedLstmLayer.hpp</a>.</p>

<p class="reference">Referenced by <a class="el" href="_quantized_lstm_layer_8cpp_source.xhtml#l00047">QuantizedLstmLayer::Clone()</a>, <a class="el" href="_quantized_lstm_layer_8cpp_source.xhtml#l00022">QuantizedLstmLayer::CreateWorkload()</a>, <a class="el" href="_quantized_lstm_layer_8cpp_source.xhtml#l00173">QuantizedLstmLayer::ExecuteStrategy()</a>, <a class="el" href="_quantized_lstm_layer_8cpp_source.xhtml#l00151">QuantizedLstmLayer::GetConstantTensorsByRef()</a>, and <a class="el" href="_quantized_lstm_layer_8cpp_source.xhtml#l00096">QuantizedLstmLayer::ValidateTensorShapesFromInputs()</a>.</p>

</div>
</div>
<a id="a608ed1a3d4135921ce33a286a87a072b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a608ed1a3d4135921ce33a286a87a072b">&#9670;&nbsp;</a></span>m_RecurrentToCellWeights</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">std::shared_ptr&lt;<a class="el" href="classarmnn_1_1_const_tensor_handle.xhtml">ConstTensorHandle</a>&gt; m_RecurrentToCellWeights</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>A unique pointer to represent 2D weights tensor with dimensions [outputSize, outputSize] (QAsymm8). </p>

<p class="definition">Definition at line <a class="el" href="_quantized_lstm_layer_8hpp_source.xhtml#l00030">30</a> of file <a class="el" href="_quantized_lstm_layer_8hpp_source.xhtml">QuantizedLstmLayer.hpp</a>.</p>

<p class="reference">Referenced by <a class="el" href="_quantized_lstm_layer_8cpp_source.xhtml#l00047">QuantizedLstmLayer::Clone()</a>, <a class="el" href="_quantized_lstm_layer_8cpp_source.xhtml#l00022">QuantizedLstmLayer::CreateWorkload()</a>, <a class="el" href="_quantized_lstm_layer_8cpp_source.xhtml#l00173">QuantizedLstmLayer::ExecuteStrategy()</a>, <a class="el" href="_quantized_lstm_layer_8cpp_source.xhtml#l00151">QuantizedLstmLayer::GetConstantTensorsByRef()</a>, and <a class="el" href="_quantized_lstm_layer_8cpp_source.xhtml#l00096">QuantizedLstmLayer::ValidateTensorShapesFromInputs()</a>.</p>

</div>
</div>
<a id="a1dd41cd674924907643cb088070a65d3"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a1dd41cd674924907643cb088070a65d3">&#9670;&nbsp;</a></span>m_RecurrentToForgetWeights</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">std::shared_ptr&lt;<a class="el" href="classarmnn_1_1_const_tensor_handle.xhtml">ConstTensorHandle</a>&gt; m_RecurrentToForgetWeights</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>A unique pointer to represent 2D weights tensor with dimensions [outputSize, outputSize] (QAsymm8). </p>

<p class="definition">Definition at line <a class="el" href="_quantized_lstm_layer_8hpp_source.xhtml#l00028">28</a> of file <a class="el" href="_quantized_lstm_layer_8hpp_source.xhtml">QuantizedLstmLayer.hpp</a>.</p>

<p class="reference">Referenced by <a class="el" href="_quantized_lstm_layer_8cpp_source.xhtml#l00047">QuantizedLstmLayer::Clone()</a>, <a class="el" href="_quantized_lstm_layer_8cpp_source.xhtml#l00022">QuantizedLstmLayer::CreateWorkload()</a>, <a class="el" href="_quantized_lstm_layer_8cpp_source.xhtml#l00173">QuantizedLstmLayer::ExecuteStrategy()</a>, <a class="el" href="_quantized_lstm_layer_8cpp_source.xhtml#l00151">QuantizedLstmLayer::GetConstantTensorsByRef()</a>, and <a class="el" href="_quantized_lstm_layer_8cpp_source.xhtml#l00096">QuantizedLstmLayer::ValidateTensorShapesFromInputs()</a>.</p>

</div>
</div>
<a id="addfb6b081817510deb924c8fb5ce216c"></a>
<h2 class="memtitle"><span class="permalink"><a href="#addfb6b081817510deb924c8fb5ce216c">&#9670;&nbsp;</a></span>m_RecurrentToInputWeights</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">std::shared_ptr&lt;<a class="el" href="classarmnn_1_1_const_tensor_handle.xhtml">ConstTensorHandle</a>&gt; m_RecurrentToInputWeights</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>A unique pointer to represent 2D weights tensor with dimensions [outputSize, outputSize] (QAsymm8). </p>

<p class="definition">Definition at line <a class="el" href="_quantized_lstm_layer_8hpp_source.xhtml#l00026">26</a> of file <a class="el" href="_quantized_lstm_layer_8hpp_source.xhtml">QuantizedLstmLayer.hpp</a>.</p>

<p class="reference">Referenced by <a class="el" href="_quantized_lstm_layer_8cpp_source.xhtml#l00047">QuantizedLstmLayer::Clone()</a>, <a class="el" href="_quantized_lstm_layer_8cpp_source.xhtml#l00022">QuantizedLstmLayer::CreateWorkload()</a>, <a class="el" href="_quantized_lstm_layer_8cpp_source.xhtml#l00173">QuantizedLstmLayer::ExecuteStrategy()</a>, <a class="el" href="_quantized_lstm_layer_8cpp_source.xhtml#l00151">QuantizedLstmLayer::GetConstantTensorsByRef()</a>, and <a class="el" href="_quantized_lstm_layer_8cpp_source.xhtml#l00096">QuantizedLstmLayer::ValidateTensorShapesFromInputs()</a>.</p>

</div>
</div>
<a id="addad136e04521a1d31cbebf7280c312e"></a>
<h2 class="memtitle"><span class="permalink"><a href="#addad136e04521a1d31cbebf7280c312e">&#9670;&nbsp;</a></span>m_RecurrentToOutputWeights</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">std::shared_ptr&lt;<a class="el" href="classarmnn_1_1_const_tensor_handle.xhtml">ConstTensorHandle</a>&gt; m_RecurrentToOutputWeights</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>A unique pointer to represent 2D weights tensor with dimensions [outputSize, outputSize] (QAsymm8). </p>

<p class="definition">Definition at line <a class="el" href="_quantized_lstm_layer_8hpp_source.xhtml#l00032">32</a> of file <a class="el" href="_quantized_lstm_layer_8hpp_source.xhtml">QuantizedLstmLayer.hpp</a>.</p>

<p class="reference">Referenced by <a class="el" href="_quantized_lstm_layer_8cpp_source.xhtml#l00047">QuantizedLstmLayer::Clone()</a>, <a class="el" href="_quantized_lstm_layer_8cpp_source.xhtml#l00022">QuantizedLstmLayer::CreateWorkload()</a>, <a class="el" href="_quantized_lstm_layer_8cpp_source.xhtml#l00173">QuantizedLstmLayer::ExecuteStrategy()</a>, <a class="el" href="_quantized_lstm_layer_8cpp_source.xhtml#l00151">QuantizedLstmLayer::GetConstantTensorsByRef()</a>, and <a class="el" href="_quantized_lstm_layer_8cpp_source.xhtml#l00096">QuantizedLstmLayer::ValidateTensorShapesFromInputs()</a>.</p>

</div>
</div>
<hr/>The documentation for this struct was generated from the following file:<ul>
<li>src/armnn/layers/<a class="el" href="_quantized_lstm_layer_8hpp_source.xhtml">QuantizedLstmLayer.hpp</a></li>
</ul>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="namespacearmnn.xhtml">armnn</a></li><li class="navelem"><a class="el" href="structarmnn_1_1_quantized_lstm_parameters.xhtml">QuantizedLstmParameters</a></li>
    <li class="footer">Generated on Wed Mar 22 2023 15:53:08 for ArmNN by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.17 </li>
  </ul>
</div>
</body>
</html>
