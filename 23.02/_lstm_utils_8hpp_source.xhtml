<!-- Copyright (c) 2020 ARM Limited. -->
<!--                                 -->
<!-- SPDX-License-Identifier: MIT    -->
<!--                                 -->
<!-- HTML header for doxygen 1.8.13-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.13"/>
<meta name="robots" content="NOINDEX, NOFOLLOW" />
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>ArmNN: src/backends/reference/workloads/LstmUtils.hpp Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script><script type="text/javascript" src="http://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="stylesheet.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <img alt="ArmNN" src="Arm_NN_horizontal_blue.png" style="max-width: 10rem; margin-top: .5rem; margin-left 10px"/>
  <td style="padding-left: 0.5em;">
   <div id="projectname">
   &#160;<span id="projectnumber">23.02</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.13 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
$(document).ready(function(){initNavTree('_lstm_utils_8hpp_source.xhtml','');});
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="headertitle">
<div class="title">LstmUtils.hpp</div>  </div>
</div><!--header-->
<div class="contents">
<a href="_lstm_utils_8hpp.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="comment">//</span></div><div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="comment">// Copyright Â© 2017 Arm Ltd. All rights reserved.</span></div><div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="comment">// SPDX-License-Identifier: MIT</span></div><div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="comment">//</span></div><div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;</div><div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="preprocessor">#pragma once</span></div><div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;</div><div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_base_iterator_8hpp.xhtml">BaseIterator.hpp</a>&quot;</span></div><div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="preprocessor">#include &lt;<a class="code" href="_tensor_handle_8hpp.xhtml">armnn/backends/TensorHandle.hpp</a>&gt;</span></div><div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;</div><div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;<span class="comment">// Helper functions ported from the Android code base</span></div><div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;<span class="comment">// Refer to: android/external/tensorflow/tensorflow/contrib/lite/kernels/internal/reference/portable_tensor_utils.cc</span></div><div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;</div><div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;</div><div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;<span class="keywordtype">void</span> <a class="code" href="_lstm_utils_8hpp.xhtml#a389c4bbafd0fff7060cbb183f20a2134">VectorBatchVectorAdd</a>(<a class="code" href="classarmnn_1_1_decoder.xhtml">armnn::Decoder&lt;float&gt;</a>&amp; vector,</div><div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;                          uint32_t vSize,</div><div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;                          <a class="code" href="classarmnn_1_1_decoder.xhtml">armnn::Decoder&lt;float&gt;</a>&amp; batchVector,</div><div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;                          uint32_t nBatch,</div><div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;                          <a class="code" href="classarmnn_1_1_encoder.xhtml">armnn::Encoder&lt;float&gt;</a>&amp; outResult );</div><div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;</div><div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;<span class="comment">// Layer norm for each batch.</span></div><div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;<span class="comment">// normalization_epsilon is added to avoid divergence.</span></div><div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;<span class="keywordtype">void</span> <a class="code" href="_lstm_utils_8hpp.xhtml#a0ed27dd6d6125a06bf654080f4184360">MeanStddevNormalization</a>(<a class="code" href="classarmnn_1_1_decoder.xhtml">armnn::Decoder&lt;float&gt;</a>&amp; input_vector,</div><div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;                             <a class="code" href="classarmnn_1_1_encoder.xhtml">armnn::Encoder&lt;float&gt;</a>&amp; output_vector,</div><div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;                             uint32_t v_size,</div><div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;                             uint32_t n_batch,</div><div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;                             <span class="keywordtype">float</span> normalization_epsilon);</div><div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;</div><div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;<span class="keywordtype">void</span> <a class="code" href="_lstm_utils_8hpp.xhtml#a4c20bc573b70e89327b334f924da97b5">ZeroVector</a>(<a class="code" href="classarmnn_1_1_encoder.xhtml">armnn::Encoder&lt;float&gt;</a>&amp; vector,</div><div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;                uint32_t vSize);</div><div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;</div><div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;<span class="keywordtype">void</span> <a class="code" href="_lstm_utils_8hpp.xhtml#ab93a2c78551c3d3aba8ddcafb792a36d">MatrixBatchVectorMultiplyAccumulate</a>(<a class="code" href="classarmnn_1_1_decoder.xhtml">armnn::Decoder&lt;float&gt;</a>&amp; matrix,</div><div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;                                         uint32_t mRows,</div><div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;                                         uint32_t mCols,</div><div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;                                         <a class="code" href="classarmnn_1_1_decoder.xhtml">armnn::Decoder&lt;float&gt;</a>&amp; vector,</div><div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;                                         uint32_t nBatch,</div><div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;                                         <a class="code" href="classarmnn_1_1_encoder.xhtml">armnn::Encoder&lt;float&gt;</a>&amp; outResult);</div><div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;</div><div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;<span class="keywordtype">void</span> <a class="code" href="_lstm_utils_8hpp.xhtml#a8c4a96233c9b62c76d611316da11124b">VectorBatchVectorAssign</a>(<a class="code" href="classarmnn_1_1_decoder.xhtml">armnn::Decoder&lt;float&gt;</a>&amp; vector,</div><div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;                             uint32_t vSize,</div><div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;                             uint32_t nBatch,</div><div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;                             <a class="code" href="classarmnn_1_1_encoder.xhtml">armnn::Encoder&lt;float&gt;</a>&amp; outBatchVector);</div><div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;</div><div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;<span class="keywordtype">void</span> <a class="code" href="_lstm_utils_8hpp.xhtml#a796323e16216b880043dc5ebbaa2372b">VectorBatchVectorCwiseProductAccumulate</a>(<a class="code" href="classarmnn_1_1_decoder.xhtml">armnn::Decoder&lt;float&gt;</a>&amp; vector,</div><div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;                                             uint32_t vSize,</div><div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;                                             <a class="code" href="classarmnn_1_1_decoder.xhtml">armnn::Decoder&lt;float&gt;</a>&amp; batchVector,</div><div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;                                             uint32_t nBatch,</div><div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;                                             <a class="code" href="classarmnn_1_1_encoder.xhtml">armnn::Encoder&lt;float&gt;</a>&amp; outResult);</div><div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;</div><div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;<span class="keywordtype">void</span> <a class="code" href="_lstm_utils_8hpp.xhtml#a1d7ad9698b02282a57fdb17b3af745f9">VectorBatchVectorCwiseProduct</a>(<a class="code" href="classarmnn_1_1_decoder.xhtml">armnn::Decoder&lt;float&gt;</a>&amp; vector,</div><div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;                                   uint32_t vSize,</div><div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;                                   <a class="code" href="classarmnn_1_1_decoder.xhtml">armnn::Decoder&lt;float&gt;</a>&amp; batchVector,</div><div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;                                   uint32_t nBatch,</div><div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;                                   <a class="code" href="classarmnn_1_1_encoder.xhtml">armnn::Encoder&lt;float&gt;</a>&amp; outResult);</div><div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;</div><div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;<span class="keywordtype">void</span> <a class="code" href="_lstm_utils_8hpp.xhtml#aca7bd1dff180b6a5de894537f8220793">Sub1Vector</a>(<a class="code" href="classarmnn_1_1_decoder.xhtml">armnn::Decoder&lt;float&gt;</a>&amp; vector,</div><div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;                uint32_t vSize,</div><div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;                <a class="code" href="classarmnn_1_1_encoder.xhtml">armnn::Encoder&lt;float&gt;</a>&amp; result);</div><div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;</div><div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;</div><div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;<span class="keywordtype">void</span> <a class="code" href="_lstm_utils_8hpp.xhtml#a5b81dc0a1a9a2bccab8bb79dfa3e77b7">VectorVectorCwiseProduct</a>(<a class="code" href="classarmnn_1_1_decoder.xhtml">armnn::Decoder&lt;float&gt;</a>&amp; vector1,</div><div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;                              <a class="code" href="classarmnn_1_1_decoder.xhtml">armnn::Decoder&lt;float&gt;</a>&amp; vector2,</div><div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;                              uint32_t vSize,</div><div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;                              <a class="code" href="classarmnn_1_1_encoder.xhtml">armnn::Encoder&lt;float&gt;</a>&amp; outResult);</div><div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;</div><div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;<span class="keywordtype">void</span> <a class="code" href="_lstm_utils_8hpp.xhtml#a2e653f948d93f4177f267a7b1b4ed47d">VectorVectorCwiseProductAccumulate</a>(<a class="code" href="classarmnn_1_1_decoder.xhtml">armnn::Decoder&lt;float&gt;</a>&amp; vector1,</div><div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;                                        <a class="code" href="classarmnn_1_1_decoder.xhtml">armnn::Decoder&lt;float&gt;</a>&amp; vector2,</div><div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;                                        uint32_t vSize,</div><div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;                                        <a class="code" href="classarmnn_1_1_encoder.xhtml">armnn::Encoder&lt;float&gt;</a>&amp; outResult);</div><div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;</div><div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;<span class="keywordtype">float</span> <a class="code" href="_lstm_utils_8hpp.xhtml#ad5b8e4843a3b303d5b56c0a70dbfd1bf">Clip</a>(<span class="keywordtype">float</span> f,</div><div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;           <span class="keywordtype">float</span> absLimit);</div><div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;</div><div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;<span class="keywordtype">void</span> <a class="code" href="_lstm_utils_8hpp.xhtml#a117781e8e9b7321722bbdd8ff74b484a">ClipVector</a>(<a class="code" href="classarmnn_1_1_decoder.xhtml">armnn::Decoder&lt;float&gt;</a>&amp; vector,</div><div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;                uint32_t vSize,</div><div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;                <span class="keywordtype">float</span> absLimit,</div><div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;                <a class="code" href="classarmnn_1_1_encoder.xhtml">armnn::Encoder&lt;float&gt;</a>&amp; outResult);</div><div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;</div><div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;<span class="keywordtype">void</span> <a class="code" href="_lstm_utils_8hpp.xhtml#a00d8a623c04f1120f6fee3fe38d1cee9">CopyVector</a>(<a class="code" href="classarmnn_1_1_decoder.xhtml">armnn::Decoder&lt;float&gt;</a>&amp; vector,</div><div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;                uint32_t vSize,</div><div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;                <a class="code" href="classarmnn_1_1_encoder.xhtml">armnn::Encoder&lt;float&gt;</a>&amp; outResult);</div><div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;</div><div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;<span class="keywordtype">void</span> <a class="code" href="_lstm_utils_8hpp.xhtml#afc83b9418e9721cee21de245cb8533de">SetActivationParameters</a>(uint32_t activation,</div><div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;                             <a class="code" href="namespacearmnn.xhtml#a56297e0f7b215eea46c818cb7528d9ea">armnn::ActivationFunction</a>&amp; outArmnnActivation,</div><div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;                             <span class="keywordtype">float</span>&amp; outA,</div><div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;                             <span class="keywordtype">float</span>&amp; outB);</div><div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;</div><div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;std::unique_ptr&lt;armnn::ScopedTensorHandle&gt; <a class="code" href="_lstm_utils_8hpp.xhtml#a8618ae0c77638e01069fdb0063cabb3f">AssignScopedTensorHandle</a>(<span class="keyword">const</span> <a class="code" href="classarmnn_1_1_const_tensor_handle.xhtml">armnn::ConstTensorHandle</a> *ptr);</div><div class="ttc" id="_lstm_utils_8hpp_xhtml_a4c20bc573b70e89327b334f924da97b5"><div class="ttname"><a href="_lstm_utils_8hpp.xhtml#a4c20bc573b70e89327b334f924da97b5">ZeroVector</a></div><div class="ttdeci">void ZeroVector(armnn::Encoder&lt; float &gt; &amp;vector, uint32_t vSize)</div><div class="ttdef"><b>Definition:</b> <a href="_lstm_utils_8cpp_source.xhtml#l00076">LstmUtils.cpp:76</a></div></div>
<div class="ttc" id="_lstm_utils_8hpp_xhtml_a8618ae0c77638e01069fdb0063cabb3f"><div class="ttname"><a href="_lstm_utils_8hpp.xhtml#a8618ae0c77638e01069fdb0063cabb3f">AssignScopedTensorHandle</a></div><div class="ttdeci">std::unique_ptr&lt; armnn::ScopedTensorHandle &gt; AssignScopedTensorHandle(const armnn::ConstTensorHandle *ptr)</div><div class="ttdef"><b>Definition:</b> <a href="_lstm_utils_8cpp_source.xhtml#l00299">LstmUtils.cpp:299</a></div></div>
<div class="ttc" id="_lstm_utils_8hpp_xhtml_ab93a2c78551c3d3aba8ddcafb792a36d"><div class="ttname"><a href="_lstm_utils_8hpp.xhtml#ab93a2c78551c3d3aba8ddcafb792a36d">MatrixBatchVectorMultiplyAccumulate</a></div><div class="ttdeci">void MatrixBatchVectorMultiplyAccumulate(armnn::Decoder&lt; float &gt; &amp;matrix, uint32_t mRows, uint32_t mCols, armnn::Decoder&lt; float &gt; &amp;vector, uint32_t nBatch, armnn::Encoder&lt; float &gt; &amp;outResult)</div><div class="ttdef"><b>Definition:</b> <a href="_lstm_utils_8cpp_source.xhtml#l00087">LstmUtils.cpp:87</a></div></div>
<div class="ttc" id="_tensor_handle_8hpp_xhtml"><div class="ttname"><a href="_tensor_handle_8hpp.xhtml">TensorHandle.hpp</a></div></div>
<div class="ttc" id="classarmnn_1_1_encoder_xhtml"><div class="ttname"><a href="classarmnn_1_1_encoder.xhtml">armnn::Encoder&lt; float &gt;</a></div></div>
<div class="ttc" id="_lstm_utils_8hpp_xhtml_a0ed27dd6d6125a06bf654080f4184360"><div class="ttname"><a href="_lstm_utils_8hpp.xhtml#a0ed27dd6d6125a06bf654080f4184360">MeanStddevNormalization</a></div><div class="ttdeci">void MeanStddevNormalization(armnn::Decoder&lt; float &gt; &amp;input_vector, armnn::Encoder&lt; float &gt; &amp;output_vector, uint32_t v_size, uint32_t n_batch, float normalization_epsilon)</div><div class="ttdef"><b>Definition:</b> <a href="_lstm_utils_8cpp_source.xhtml#l00040">LstmUtils.cpp:40</a></div></div>
<div class="ttc" id="_lstm_utils_8hpp_xhtml_a8c4a96233c9b62c76d611316da11124b"><div class="ttname"><a href="_lstm_utils_8hpp.xhtml#a8c4a96233c9b62c76d611316da11124b">VectorBatchVectorAssign</a></div><div class="ttdeci">void VectorBatchVectorAssign(armnn::Decoder&lt; float &gt; &amp;vector, uint32_t vSize, uint32_t nBatch, armnn::Encoder&lt; float &gt; &amp;outBatchVector)</div><div class="ttdef"><b>Definition:</b> <a href="_lstm_utils_8cpp_source.xhtml#l00113">LstmUtils.cpp:113</a></div></div>
<div class="ttc" id="_lstm_utils_8hpp_xhtml_ad5b8e4843a3b303d5b56c0a70dbfd1bf"><div class="ttname"><a href="_lstm_utils_8hpp.xhtml#ad5b8e4843a3b303d5b56c0a70dbfd1bf">Clip</a></div><div class="ttdeci">float Clip(float f, float absLimit)</div><div class="ttdef"><b>Definition:</b> <a href="_lstm_utils_8cpp_source.xhtml#l00221">LstmUtils.cpp:221</a></div></div>
<div class="ttc" id="_lstm_utils_8hpp_xhtml_a117781e8e9b7321722bbdd8ff74b484a"><div class="ttname"><a href="_lstm_utils_8hpp.xhtml#a117781e8e9b7321722bbdd8ff74b484a">ClipVector</a></div><div class="ttdeci">void ClipVector(armnn::Decoder&lt; float &gt; &amp;vector, uint32_t vSize, float absLimit, armnn::Encoder&lt; float &gt; &amp;outResult)</div><div class="ttdef"><b>Definition:</b> <a href="_lstm_utils_8cpp_source.xhtml#l00229">LstmUtils.cpp:229</a></div></div>
<div class="ttc" id="classarmnn_1_1_const_tensor_handle_xhtml"><div class="ttname"><a href="classarmnn_1_1_const_tensor_handle.xhtml">armnn::ConstTensorHandle</a></div><div class="ttdef"><b>Definition:</b> <a href="_tensor_handle_8hpp_source.xhtml#l00024">TensorHandle.hpp:24</a></div></div>
<div class="ttc" id="_base_iterator_8hpp_xhtml"><div class="ttname"><a href="_base_iterator_8hpp.xhtml">BaseIterator.hpp</a></div></div>
<div class="ttc" id="_lstm_utils_8hpp_xhtml_a5b81dc0a1a9a2bccab8bb79dfa3e77b7"><div class="ttname"><a href="_lstm_utils_8hpp.xhtml#a5b81dc0a1a9a2bccab8bb79dfa3e77b7">VectorVectorCwiseProduct</a></div><div class="ttdeci">void VectorVectorCwiseProduct(armnn::Decoder&lt; float &gt; &amp;vector1, armnn::Decoder&lt; float &gt; &amp;vector2, uint32_t vSize, armnn::Encoder&lt; float &gt; &amp;outResult)</div><div class="ttdef"><b>Definition:</b> <a href="_lstm_utils_8cpp_source.xhtml#l00187">LstmUtils.cpp:187</a></div></div>
<div class="ttc" id="_lstm_utils_8hpp_xhtml_a1d7ad9698b02282a57fdb17b3af745f9"><div class="ttname"><a href="_lstm_utils_8hpp.xhtml#a1d7ad9698b02282a57fdb17b3af745f9">VectorBatchVectorCwiseProduct</a></div><div class="ttdeci">void VectorBatchVectorCwiseProduct(armnn::Decoder&lt; float &gt; &amp;vector, uint32_t vSize, armnn::Decoder&lt; float &gt; &amp;batchVector, uint32_t nBatch, armnn::Encoder&lt; float &gt; &amp;outResult)</div><div class="ttdef"><b>Definition:</b> <a href="_lstm_utils_8cpp_source.xhtml#l00152">LstmUtils.cpp:152</a></div></div>
<div class="ttc" id="_lstm_utils_8hpp_xhtml_a389c4bbafd0fff7060cbb183f20a2134"><div class="ttname"><a href="_lstm_utils_8hpp.xhtml#a389c4bbafd0fff7060cbb183f20a2134">VectorBatchVectorAdd</a></div><div class="ttdeci">void VectorBatchVectorAdd(armnn::Decoder&lt; float &gt; &amp;vector, uint32_t vSize, armnn::Decoder&lt; float &gt; &amp;batchVector, uint32_t nBatch, armnn::Encoder&lt; float &gt; &amp;outResult)</div><div class="ttdef"><b>Definition:</b> <a href="_lstm_utils_8cpp_source.xhtml#l00016">LstmUtils.cpp:16</a></div></div>
<div class="ttc" id="_lstm_utils_8hpp_xhtml_a00d8a623c04f1120f6fee3fe38d1cee9"><div class="ttname"><a href="_lstm_utils_8hpp.xhtml#a00d8a623c04f1120f6fee3fe38d1cee9">CopyVector</a></div><div class="ttdeci">void CopyVector(armnn::Decoder&lt; float &gt; &amp;vector, uint32_t vSize, armnn::Encoder&lt; float &gt; &amp;outResult)</div><div class="ttdef"><b>Definition:</b> <a href="_lstm_utils_8cpp_source.xhtml#l00244">LstmUtils.cpp:244</a></div></div>
<div class="ttc" id="_lstm_utils_8hpp_xhtml_afc83b9418e9721cee21de245cb8533de"><div class="ttname"><a href="_lstm_utils_8hpp.xhtml#afc83b9418e9721cee21de245cb8533de">SetActivationParameters</a></div><div class="ttdeci">void SetActivationParameters(uint32_t activation, armnn::ActivationFunction &amp;outArmnnActivation, float &amp;outA, float &amp;outB)</div><div class="ttdef"><b>Definition:</b> <a href="_lstm_utils_8cpp_source.xhtml#l00258">LstmUtils.cpp:258</a></div></div>
<div class="ttc" id="_lstm_utils_8hpp_xhtml_a796323e16216b880043dc5ebbaa2372b"><div class="ttname"><a href="_lstm_utils_8hpp.xhtml#a796323e16216b880043dc5ebbaa2372b">VectorBatchVectorCwiseProductAccumulate</a></div><div class="ttdeci">void VectorBatchVectorCwiseProductAccumulate(armnn::Decoder&lt; float &gt; &amp;vector, uint32_t vSize, armnn::Decoder&lt; float &gt; &amp;batchVector, uint32_t nBatch, armnn::Encoder&lt; float &gt; &amp;outResult)</div><div class="ttdef"><b>Definition:</b> <a href="_lstm_utils_8cpp_source.xhtml#l00131">LstmUtils.cpp:131</a></div></div>
<div class="ttc" id="_lstm_utils_8hpp_xhtml_a2e653f948d93f4177f267a7b1b4ed47d"><div class="ttname"><a href="_lstm_utils_8hpp.xhtml#a2e653f948d93f4177f267a7b1b4ed47d">VectorVectorCwiseProductAccumulate</a></div><div class="ttdeci">void VectorVectorCwiseProductAccumulate(armnn::Decoder&lt; float &gt; &amp;vector1, armnn::Decoder&lt; float &gt; &amp;vector2, uint32_t vSize, armnn::Encoder&lt; float &gt; &amp;outResult)</div><div class="ttdef"><b>Definition:</b> <a href="_lstm_utils_8cpp_source.xhtml#l00204">LstmUtils.cpp:204</a></div></div>
<div class="ttc" id="_lstm_utils_8hpp_xhtml_aca7bd1dff180b6a5de894537f8220793"><div class="ttname"><a href="_lstm_utils_8hpp.xhtml#aca7bd1dff180b6a5de894537f8220793">Sub1Vector</a></div><div class="ttdeci">void Sub1Vector(armnn::Decoder&lt; float &gt; &amp;vector, uint32_t vSize, armnn::Encoder&lt; float &gt; &amp;result)</div><div class="ttdef"><b>Definition:</b> <a href="_lstm_utils_8cpp_source.xhtml#l00173">LstmUtils.cpp:173</a></div></div>
<div class="ttc" id="namespacearmnn_xhtml_a56297e0f7b215eea46c818cb7528d9ea"><div class="ttname"><a href="namespacearmnn.xhtml#a56297e0f7b215eea46c818cb7528d9ea">armnn::ActivationFunction</a></div><div class="ttdeci">ActivationFunction</div><div class="ttdef"><b>Definition:</b> <a href="_types_8hpp_source.xhtml#l00086">Types.hpp:86</a></div></div>
<div class="ttc" id="classarmnn_1_1_decoder_xhtml"><div class="ttname"><a href="classarmnn_1_1_decoder.xhtml">armnn::Decoder&lt; float &gt;</a></div></div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="dir_68267d1309a1af8e8297ef4c3efbcdba.xhtml">src</a></li><li class="navelem"><a class="el" href="dir_0f3cdec46afbc61a1ded8e1687c9c9a0.xhtml">backends</a></li><li class="navelem"><a class="el" href="dir_efae4012d0e357ebeaba7d02491d70e5.xhtml">reference</a></li><li class="navelem"><a class="el" href="dir_d2f3b8e2e64df3181ebe92efcc0a3012.xhtml">workloads</a></li><li class="navelem"><a class="el" href="_lstm_utils_8hpp.xhtml">LstmUtils.hpp</a></li>
    <li class="footer">Generated on Fri Feb 24 2023 10:24:27 for ArmNN by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.13 </li>
  </ul>
</div>
</body>
</html>
