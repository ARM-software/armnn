<!-- Copyright (c) 2020 ARM Limited. -->
<!--                                 -->
<!-- SPDX-License-Identifier: MIT    -->
<!--                                 -->
<!-- HTML header for doxygen 1.8.13-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.13"/>
<meta name="robots" content="NOINDEX, NOFOLLOW" />
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>ArmNN: include/armnnTestUtils/LayerTestResult.hpp Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script><script type="text/javascript" src="http://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="stylesheet.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <img alt="ArmNN" src="Arm_NN_horizontal_blue.png" style="max-width: 10rem; margin-top: .5rem; margin-left 10px"/>
  <td style="padding-left: 0.5em;">
   <div id="projectname">
   &#160;<span id="projectnumber">22.02</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.13 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
$(document).ready(function(){initNavTree('include_2armnn_test_utils_2_layer_test_result_8hpp_source.xhtml','');});
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="headertitle">
<div class="title">LayerTestResult.hpp</div>  </div>
</div><!--header-->
<div class="contents">
<a href="include_2armnn_test_utils_2_layer_test_result_8hpp.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="comment">//</span></div><div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="comment">// Copyright Â© 2017 Arm Ltd and Contributors. All rights reserved.</span></div><div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="comment">// SPDX-License-Identifier: MIT</span></div><div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="comment">//</span></div><div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;</div><div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="preprocessor">#pragma once</span></div><div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;</div><div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="preprocessor">#include &lt;<a class="code" href="_tensor_8hpp.xhtml">armnn/Tensor.hpp</a>&gt;</span></div><div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="preprocessor">#include &lt;<a class="code" href="_assert_8hpp.xhtml">armnn/utility/Assert.hpp</a>&gt;</span></div><div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;</div><div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;<span class="preprocessor">#include &lt;cstddef&gt;</span></div><div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;<span class="preprocessor">#include &lt;vector&gt;</span></div><div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;</div><div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> T, std::<span class="keywordtype">size_t</span> n&gt;</div><div class="line"><a name="l00015"></a><span class="lineno"><a class="line" href="struct_layer_test_result.xhtml">   15</a></span>&#160;<span class="keyword">struct </span><a class="code" href="struct_layer_test_result.xhtml">LayerTestResult</a></div><div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;{</div><div class="line"><a name="l00017"></a><span class="lineno"><a class="line" href="struct_layer_test_result.xhtml#a0ff3d1ccdaff4db423043d2f758c08da">   17</a></span>&#160;    <a class="code" href="struct_layer_test_result.xhtml#a0ff3d1ccdaff4db423043d2f758c08da">LayerTestResult</a>(<span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_info.xhtml">armnn::TensorInfo</a>&amp; outputInfo)</div><div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;        : <a class="code" href="struct_layer_test_result.xhtml#a803952d7c2fd093757ed85279063ab2a">m_Supported</a>(true)</div><div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;        , <a class="code" href="struct_layer_test_result.xhtml#a81f7c8835f58879cff48641c8f533e27">m_CompareBoolean</a>(false)</div><div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;    {</div><div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;        <a class="code" href="struct_layer_test_result.xhtml#a744f7791c7f88a945817d375cd754061">m_ActualData</a>.reserve(outputInfo.<a class="code" href="classarmnn_1_1_tensor_info.xhtml#a8846406ac37fbd2204f0be16ee05d5b7">GetNumElements</a>());</div><div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;        <a class="code" href="struct_layer_test_result.xhtml#afe2a527d7250fb113121b70e29c6bed5">m_ExpectedData</a>.reserve(outputInfo.<a class="code" href="classarmnn_1_1_tensor_info.xhtml#a8846406ac37fbd2204f0be16ee05d5b7">GetNumElements</a>());</div><div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;        <a class="code" href="struct_layer_test_result.xhtml#a74a0abe714f3fe5b9ca7023409833fb5">m_ActualShape</a> = outputInfo.<a class="code" href="classarmnn_1_1_tensor_info.xhtml#a8b5d0f8a24e9d9238f412260a552acf8">GetShape</a>();</div><div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;        <a class="code" href="struct_layer_test_result.xhtml#acd2a9d8ba7ceee9a10e3f2826cca22c1">m_ExpectedShape</a> = outputInfo.<a class="code" href="classarmnn_1_1_tensor_info.xhtml#a8b5d0f8a24e9d9238f412260a552acf8">GetShape</a>();</div><div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;    }</div><div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;</div><div class="line"><a name="l00027"></a><span class="lineno"><a class="line" href="struct_layer_test_result.xhtml#ab0fab7ff2636faa1b9becd3ede336c5e">   27</a></span>&#160;    <a class="code" href="struct_layer_test_result.xhtml#ab0fab7ff2636faa1b9becd3ede336c5e">LayerTestResult</a>(<span class="keyword">const</span> std::vector&lt;T&gt;&amp; actualData,</div><div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;                    <span class="keyword">const</span> std::vector&lt;T&gt;&amp; expectedData,</div><div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;                    <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_shape.xhtml">armnn::TensorShape</a>&amp; actualShape,</div><div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;                    <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_shape.xhtml">armnn::TensorShape</a>&amp; expectedShape)</div><div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;        : <a class="code" href="struct_layer_test_result.xhtml#a744f7791c7f88a945817d375cd754061">m_ActualData</a>(actualData)</div><div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;        , <a class="code" href="struct_layer_test_result.xhtml#afe2a527d7250fb113121b70e29c6bed5">m_ExpectedData</a>(expectedData)</div><div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;        , <a class="code" href="struct_layer_test_result.xhtml#a74a0abe714f3fe5b9ca7023409833fb5">m_ActualShape</a>(actualShape)</div><div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;        , <a class="code" href="struct_layer_test_result.xhtml#acd2a9d8ba7ceee9a10e3f2826cca22c1">m_ExpectedShape</a>(expectedShape)</div><div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;        , <a class="code" href="struct_layer_test_result.xhtml#a803952d7c2fd093757ed85279063ab2a">m_Supported</a>(true)</div><div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;        , <a class="code" href="struct_layer_test_result.xhtml#a81f7c8835f58879cff48641c8f533e27">m_CompareBoolean</a>(false)</div><div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;    {}</div><div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;</div><div class="line"><a name="l00039"></a><span class="lineno"><a class="line" href="struct_layer_test_result.xhtml#a78b7c3e02e8f5b2cfa2839f7175e482a">   39</a></span>&#160;    <a class="code" href="struct_layer_test_result.xhtml#a78b7c3e02e8f5b2cfa2839f7175e482a">LayerTestResult</a>(<span class="keyword">const</span> std::vector&lt;T&gt;&amp; actualData,</div><div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;                    <span class="keyword">const</span> std::vector&lt;T&gt;&amp; expectedData,</div><div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;                    <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_shape.xhtml">armnn::TensorShape</a>&amp; actualShape,</div><div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;                    <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_shape.xhtml">armnn::TensorShape</a>&amp; expectedShape,</div><div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;                    <span class="keyword">const</span> <span class="keywordtype">bool</span> compareBoolean)</div><div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;        : <a class="code" href="struct_layer_test_result.xhtml#a744f7791c7f88a945817d375cd754061">m_ActualData</a>(actualData)</div><div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;        , <a class="code" href="struct_layer_test_result.xhtml#afe2a527d7250fb113121b70e29c6bed5">m_ExpectedData</a>(expectedData)</div><div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;        , <a class="code" href="struct_layer_test_result.xhtml#a74a0abe714f3fe5b9ca7023409833fb5">m_ActualShape</a>(actualShape)</div><div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;        , <a class="code" href="struct_layer_test_result.xhtml#acd2a9d8ba7ceee9a10e3f2826cca22c1">m_ExpectedShape</a>(expectedShape)</div><div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;        , <a class="code" href="struct_layer_test_result.xhtml#a803952d7c2fd093757ed85279063ab2a">m_Supported</a>(true)</div><div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;        , <a class="code" href="struct_layer_test_result.xhtml#a81f7c8835f58879cff48641c8f533e27">m_CompareBoolean</a>(compareBoolean)</div><div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;    {}</div><div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;</div><div class="line"><a name="l00052"></a><span class="lineno"><a class="line" href="struct_layer_test_result.xhtml#a744f7791c7f88a945817d375cd754061">   52</a></span>&#160;    std::vector&lt;T&gt; <a class="code" href="struct_layer_test_result.xhtml#a744f7791c7f88a945817d375cd754061">m_ActualData</a>;</div><div class="line"><a name="l00053"></a><span class="lineno"><a class="line" href="struct_layer_test_result.xhtml#afe2a527d7250fb113121b70e29c6bed5">   53</a></span>&#160;    std::vector&lt;T&gt; <a class="code" href="struct_layer_test_result.xhtml#afe2a527d7250fb113121b70e29c6bed5">m_ExpectedData</a>;</div><div class="line"><a name="l00054"></a><span class="lineno"><a class="line" href="struct_layer_test_result.xhtml#a74a0abe714f3fe5b9ca7023409833fb5">   54</a></span>&#160;    <a class="code" href="classarmnn_1_1_tensor_shape.xhtml">armnn::TensorShape</a> <a class="code" href="struct_layer_test_result.xhtml#a74a0abe714f3fe5b9ca7023409833fb5">m_ActualShape</a>;</div><div class="line"><a name="l00055"></a><span class="lineno"><a class="line" href="struct_layer_test_result.xhtml#acd2a9d8ba7ceee9a10e3f2826cca22c1">   55</a></span>&#160;    <a class="code" href="classarmnn_1_1_tensor_shape.xhtml">armnn::TensorShape</a> <a class="code" href="struct_layer_test_result.xhtml#acd2a9d8ba7ceee9a10e3f2826cca22c1">m_ExpectedShape</a>;</div><div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;</div><div class="line"><a name="l00057"></a><span class="lineno"><a class="line" href="struct_layer_test_result.xhtml#a803952d7c2fd093757ed85279063ab2a">   57</a></span>&#160;    <span class="keywordtype">bool</span> <a class="code" href="struct_layer_test_result.xhtml#a803952d7c2fd093757ed85279063ab2a">m_Supported</a>;</div><div class="line"><a name="l00058"></a><span class="lineno"><a class="line" href="struct_layer_test_result.xhtml#a81f7c8835f58879cff48641c8f533e27">   58</a></span>&#160;    <span class="keywordtype">bool</span> <a class="code" href="struct_layer_test_result.xhtml#a81f7c8835f58879cff48641c8f533e27">m_CompareBoolean</a>;</div><div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;};</div><div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;</div><div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;</div><div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;</div><div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;</div><div class="ttc" id="struct_layer_test_result_xhtml_acd2a9d8ba7ceee9a10e3f2826cca22c1"><div class="ttname"><a href="struct_layer_test_result.xhtml#acd2a9d8ba7ceee9a10e3f2826cca22c1">LayerTestResult::m_ExpectedShape</a></div><div class="ttdeci">armnn::TensorShape m_ExpectedShape</div><div class="ttdef"><b>Definition:</b> <a href="include_2armnn_test_utils_2_layer_test_result_8hpp_source.xhtml#l00055">LayerTestResult.hpp:55</a></div></div>
<div class="ttc" id="struct_layer_test_result_xhtml_a81f7c8835f58879cff48641c8f533e27"><div class="ttname"><a href="struct_layer_test_result.xhtml#a81f7c8835f58879cff48641c8f533e27">LayerTestResult::m_CompareBoolean</a></div><div class="ttdeci">bool m_CompareBoolean</div><div class="ttdef"><b>Definition:</b> <a href="include_2armnn_test_utils_2_layer_test_result_8hpp_source.xhtml#l00058">LayerTestResult.hpp:58</a></div></div>
<div class="ttc" id="_tensor_8hpp_xhtml"><div class="ttname"><a href="_tensor_8hpp.xhtml">Tensor.hpp</a></div></div>
<div class="ttc" id="classarmnn_1_1_tensor_info_xhtml_a8b5d0f8a24e9d9238f412260a552acf8"><div class="ttname"><a href="classarmnn_1_1_tensor_info.xhtml#a8b5d0f8a24e9d9238f412260a552acf8">armnn::TensorInfo::GetShape</a></div><div class="ttdeci">const TensorShape &amp; GetShape() const</div><div class="ttdef"><b>Definition:</b> <a href="_tensor_8hpp_source.xhtml#l00191">Tensor.hpp:191</a></div></div>
<div class="ttc" id="struct_layer_test_result_xhtml_a0ff3d1ccdaff4db423043d2f758c08da"><div class="ttname"><a href="struct_layer_test_result.xhtml#a0ff3d1ccdaff4db423043d2f758c08da">LayerTestResult::LayerTestResult</a></div><div class="ttdeci">LayerTestResult(const armnn::TensorInfo &amp;outputInfo)</div><div class="ttdef"><b>Definition:</b> <a href="include_2armnn_test_utils_2_layer_test_result_8hpp_source.xhtml#l00017">LayerTestResult.hpp:17</a></div></div>
<div class="ttc" id="classarmnn_1_1_tensor_info_xhtml"><div class="ttname"><a href="classarmnn_1_1_tensor_info.xhtml">armnn::TensorInfo</a></div><div class="ttdef"><b>Definition:</b> <a href="_tensor_8hpp_source.xhtml#l00152">Tensor.hpp:152</a></div></div>
<div class="ttc" id="struct_layer_test_result_xhtml_ab0fab7ff2636faa1b9becd3ede336c5e"><div class="ttname"><a href="struct_layer_test_result.xhtml#ab0fab7ff2636faa1b9becd3ede336c5e">LayerTestResult::LayerTestResult</a></div><div class="ttdeci">LayerTestResult(const std::vector&lt; T &gt; &amp;actualData, const std::vector&lt; T &gt; &amp;expectedData, const armnn::TensorShape &amp;actualShape, const armnn::TensorShape &amp;expectedShape)</div><div class="ttdef"><b>Definition:</b> <a href="include_2armnn_test_utils_2_layer_test_result_8hpp_source.xhtml#l00027">LayerTestResult.hpp:27</a></div></div>
<div class="ttc" id="classarmnn_1_1_tensor_shape_xhtml"><div class="ttname"><a href="classarmnn_1_1_tensor_shape.xhtml">armnn::TensorShape</a></div><div class="ttdef"><b>Definition:</b> <a href="_tensor_8hpp_source.xhtml#l00020">Tensor.hpp:20</a></div></div>
<div class="ttc" id="struct_layer_test_result_xhtml_a78b7c3e02e8f5b2cfa2839f7175e482a"><div class="ttname"><a href="struct_layer_test_result.xhtml#a78b7c3e02e8f5b2cfa2839f7175e482a">LayerTestResult::LayerTestResult</a></div><div class="ttdeci">LayerTestResult(const std::vector&lt; T &gt; &amp;actualData, const std::vector&lt; T &gt; &amp;expectedData, const armnn::TensorShape &amp;actualShape, const armnn::TensorShape &amp;expectedShape, const bool compareBoolean)</div><div class="ttdef"><b>Definition:</b> <a href="include_2armnn_test_utils_2_layer_test_result_8hpp_source.xhtml#l00039">LayerTestResult.hpp:39</a></div></div>
<div class="ttc" id="struct_layer_test_result_xhtml_afe2a527d7250fb113121b70e29c6bed5"><div class="ttname"><a href="struct_layer_test_result.xhtml#afe2a527d7250fb113121b70e29c6bed5">LayerTestResult::m_ExpectedData</a></div><div class="ttdeci">std::vector&lt; T &gt; m_ExpectedData</div><div class="ttdef"><b>Definition:</b> <a href="include_2armnn_test_utils_2_layer_test_result_8hpp_source.xhtml#l00053">LayerTestResult.hpp:53</a></div></div>
<div class="ttc" id="_assert_8hpp_xhtml"><div class="ttname"><a href="_assert_8hpp.xhtml">Assert.hpp</a></div></div>
<div class="ttc" id="struct_layer_test_result_xhtml_a803952d7c2fd093757ed85279063ab2a"><div class="ttname"><a href="struct_layer_test_result.xhtml#a803952d7c2fd093757ed85279063ab2a">LayerTestResult::m_Supported</a></div><div class="ttdeci">bool m_Supported</div><div class="ttdef"><b>Definition:</b> <a href="include_2armnn_test_utils_2_layer_test_result_8hpp_source.xhtml#l00057">LayerTestResult.hpp:57</a></div></div>
<div class="ttc" id="struct_layer_test_result_xhtml_a744f7791c7f88a945817d375cd754061"><div class="ttname"><a href="struct_layer_test_result.xhtml#a744f7791c7f88a945817d375cd754061">LayerTestResult::m_ActualData</a></div><div class="ttdeci">std::vector&lt; T &gt; m_ActualData</div><div class="ttdef"><b>Definition:</b> <a href="include_2armnn_test_utils_2_layer_test_result_8hpp_source.xhtml#l00052">LayerTestResult.hpp:52</a></div></div>
<div class="ttc" id="struct_layer_test_result_xhtml_a74a0abe714f3fe5b9ca7023409833fb5"><div class="ttname"><a href="struct_layer_test_result.xhtml#a74a0abe714f3fe5b9ca7023409833fb5">LayerTestResult::m_ActualShape</a></div><div class="ttdeci">armnn::TensorShape m_ActualShape</div><div class="ttdef"><b>Definition:</b> <a href="include_2armnn_test_utils_2_layer_test_result_8hpp_source.xhtml#l00054">LayerTestResult.hpp:54</a></div></div>
<div class="ttc" id="struct_layer_test_result_xhtml"><div class="ttname"><a href="struct_layer_test_result.xhtml">LayerTestResult</a></div><div class="ttdef"><b>Definition:</b> <a href="include_2armnn_test_utils_2_layer_test_result_8hpp_source.xhtml#l00015">LayerTestResult.hpp:15</a></div></div>
<div class="ttc" id="classarmnn_1_1_tensor_info_xhtml_a8846406ac37fbd2204f0be16ee05d5b7"><div class="ttname"><a href="classarmnn_1_1_tensor_info.xhtml#a8846406ac37fbd2204f0be16ee05d5b7">armnn::TensorInfo::GetNumElements</a></div><div class="ttdeci">unsigned int GetNumElements() const</div><div class="ttdef"><b>Definition:</b> <a href="_tensor_8hpp_source.xhtml#l00196">Tensor.hpp:196</a></div></div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="dir_d44c64559bbebec7f509842c48db8b23.xhtml">include</a></li><li class="navelem"><a class="el" href="dir_63bab6e14293bb0757c6313c233a04b6.xhtml">armnnTestUtils</a></li><li class="navelem"><a class="el" href="include_2armnn_test_utils_2_layer_test_result_8hpp.xhtml">LayerTestResult.hpp</a></li>
    <li class="footer">Generated on Tue Feb 22 2022 11:38:54 for ArmNN by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.13 </li>
  </ul>
</div>
</body>
</html>
