<!-- Copyright (c) 2020 ARM Limited. -->
<!--                                 -->
<!-- SPDX-License-Identifier: MIT    -->
<!--                                 -->
<!-- HTML header for doxygen 1.8.13-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.17"/>
<meta name="robots" content="NOINDEX, NOFOLLOW" />
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>ArmNN: include/armnn/backends/ITensorHandle.hpp Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script>
<script type="text/javascript" async="async" src="http://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="stylesheet.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <img alt="ArmNN" src="Arm_NN_horizontal_blue.png" style="max-width: 10rem; margin-top: .5rem; margin-left 10px"/>
  <td style="padding-left: 0.5em;">
   <div id="projectname">
   &#160;<span id="projectnumber">23.05</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.17 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "search",false,'Search');
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(document).ready(function(){initNavTree('include_2armnn_2backends_2_i_tensor_handle_8hpp_source.xhtml',''); initResizable(); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="headertitle">
<div class="title">ITensorHandle.hpp</div>  </div>
</div><!--header-->
<div class="contents">
<a href="include_2armnn_2backends_2_i_tensor_handle_8hpp.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="comment">//</span></div>
<div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="comment">// Copyright Â© 2017 Arm Ltd. All rights reserved.</span></div>
<div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="comment">// SPDX-License-Identifier: MIT</span></div>
<div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="comment">//</span></div>
<div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="preprocessor">#pragma once</span></div>
<div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160; </div>
<div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="preprocessor">#include &lt;<a class="code" href="_memory_sources_8hpp.xhtml">armnn/MemorySources.hpp</a>&gt;</span></div>
<div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="preprocessor">#include &lt;<a class="code" href="_ignore_unused_8hpp.xhtml">armnn/utility/IgnoreUnused.hpp</a>&gt;</span></div>
<div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160; </div>
<div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="keyword">namespace </span><a class="code" href="namespacearmnn.xhtml">armnn</a></div>
<div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;{</div>
<div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160; </div>
<div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;<span class="keyword">class </span>TensorShape;</div>
<div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160; </div>
<div class="line"><a name="l00015"></a><span class="lineno"><a class="line" href="classarmnn_1_1_i_tensor_handle.xhtml">   15</a></span>&#160;<span class="keyword">class </span><a class="code" href="classarmnn_1_1_i_tensor_handle.xhtml">ITensorHandle</a></div>
<div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;{</div>
<div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;<span class="keyword">public</span>:</div>
<div class="line"><a name="l00018"></a><span class="lineno"><a class="line" href="classarmnn_1_1_i_tensor_handle.xhtml#aff95f063e2b8041b3d0e4b4dc0e3821d">   18</a></span>&#160;    <span class="keyword">virtual</span> <a class="code" href="classarmnn_1_1_i_tensor_handle.xhtml#aff95f063e2b8041b3d0e4b4dc0e3821d">~ITensorHandle</a>(){}</div>
<div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;<span class="comment"></span> </div>
<div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;<span class="comment">    /// Indicate to the memory manager that this resource is active.</span></div>
<div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;<span class="comment">    /// This is used to compute overlapping lifetimes of resources.</span></div>
<div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;<span class="comment"></span>    <span class="keyword">virtual</span> <span class="keywordtype">void</span> <a class="code" href="classarmnn_1_1_i_tensor_handle.xhtml#a04149d0f9b9c54c05e95693111490daf">Manage</a>() = 0;</div>
<div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;<span class="comment"></span> </div>
<div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;<span class="comment">    /// Indicate to the memory manager that this resource is no longer active.</span></div>
<div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;<span class="comment">    /// This is used to compute overlapping lifetimes of resources.</span></div>
<div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;<span class="comment"></span>    <span class="keyword">virtual</span> <span class="keywordtype">void</span> <a class="code" href="classarmnn_1_1_i_tensor_handle.xhtml#a5cceed8b707a09bf27eb61f17acf8a88">Allocate</a>() = 0;</div>
<div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;<span class="comment"></span> </div>
<div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;<span class="comment">    /// Get the parent tensor if this is a subtensor.</span></div>
<div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;<span class="comment">    /// \return a pointer to the parent tensor. Otherwise nullptr if not a subtensor.</span></div>
<div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;<span class="comment"></span>    <span class="keyword">virtual</span> <a class="code" href="classarmnn_1_1_i_tensor_handle.xhtml">ITensorHandle</a>* <a class="code" href="classarmnn_1_1_i_tensor_handle.xhtml#a437893b8dcf58a0b68b70e1ad7933be6">GetParent</a>() <span class="keyword">const</span> = 0;</div>
<div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;<span class="comment"></span> </div>
<div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;<span class="comment">    /// Map the tensor data for access.</span></div>
<div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;<span class="comment">    /// \param blocking hint to block the calling thread until all other accesses are complete. (backend dependent)</span></div>
<div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;<span class="comment">    /// \return pointer to the first element of the mapped data.</span></div>
<div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;<span class="comment"></span>    <span class="keyword">virtual</span> <span class="keyword">const</span> <span class="keywordtype">void</span>* <a class="code" href="classarmnn_1_1_i_tensor_handle.xhtml#a9afbc055a017adf1bc38ee137bca6e90">Map</a>(<span class="keywordtype">bool</span> blocking=<span class="keyword">true</span>) <span class="keyword">const</span> = 0;</div>
<div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;<span class="comment"></span> </div>
<div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;<span class="comment">    /// Unmap the tensor data</span></div>
<div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;<span class="comment"></span>    <span class="keyword">virtual</span> <span class="keywordtype">void</span> <a class="code" href="classarmnn_1_1_i_tensor_handle.xhtml#a563609828050f1b3a7868c23f3365923">Unmap</a>() <span class="keyword">const</span> = 0;</div>
<div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;<span class="comment"></span> </div>
<div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;<span class="comment">    /// Map the tensor data for access. Must be paired with call to Unmap().</span></div>
<div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;<span class="comment">    /// \param blocking hint to block the calling thread until all other accesses are complete. (backend dependent)</span></div>
<div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;<span class="comment">    /// \return pointer to the first element of the mapped data.</span></div>
<div class="line"><a name="l00043"></a><span class="lineno"><a class="line" href="classarmnn_1_1_i_tensor_handle.xhtml#a270c8f844df649b9b0599c1e4db44cd3">   43</a></span>&#160;<span class="comment"></span>    <span class="keywordtype">void</span>* <a class="code" href="classarmnn_1_1_i_tensor_handle.xhtml#a270c8f844df649b9b0599c1e4db44cd3">Map</a>(<span class="keywordtype">bool</span> blocking=<span class="keyword">true</span>)</div>
<div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;    {</div>
<div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;        <span class="keywordflow">return</span> <span class="keyword">const_cast&lt;</span><span class="keywordtype">void</span>*<span class="keyword">&gt;</span>(<span class="keyword">static_cast&lt;</span><span class="keyword">const </span><a class="code" href="classarmnn_1_1_i_tensor_handle.xhtml">ITensorHandle</a>*<span class="keyword">&gt;</span>(<span class="keyword">this</span>)-&gt;<a class="code" href="classarmnn_1_1_i_tensor_handle.xhtml#a9afbc055a017adf1bc38ee137bca6e90">Map</a>(blocking));</div>
<div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;    }</div>
<div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;<span class="comment"></span> </div>
<div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;<span class="comment">    /// Unmap the tensor data that was previously mapped with call to Map().</span></div>
<div class="line"><a name="l00049"></a><span class="lineno"><a class="line" href="classarmnn_1_1_i_tensor_handle.xhtml#ab2be1412c91842a072ad94759f52033e">   49</a></span>&#160;<span class="comment"></span>    <span class="keywordtype">void</span> <a class="code" href="classarmnn_1_1_i_tensor_handle.xhtml#ab2be1412c91842a072ad94759f52033e">Unmap</a>()</div>
<div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;    {</div>
<div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;        <span class="keywordflow">return</span> <span class="keyword">static_cast&lt;</span><span class="keyword">const </span><a class="code" href="classarmnn_1_1_i_tensor_handle.xhtml">ITensorHandle</a>*<span class="keyword">&gt;</span>(<span class="keyword">this</span>)-&gt;<a class="code" href="classarmnn_1_1_i_tensor_handle.xhtml#a563609828050f1b3a7868c23f3365923">Unmap</a>();</div>
<div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;    }</div>
<div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;<span class="comment"></span> </div>
<div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;<span class="comment">    /// Get the strides for each dimension ordered from largest to smallest where</span></div>
<div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;<span class="comment">    /// the smallest value is the same as the size of a single element in the tensor.</span></div>
<div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;<span class="comment">    /// \return a TensorShape filled with the strides for each dimension</span></div>
<div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;<span class="comment"></span>    <span class="keyword">virtual</span> <a class="code" href="classarmnn_1_1_tensor_shape.xhtml">TensorShape</a> <a class="code" href="classarmnn_1_1_i_tensor_handle.xhtml#a30c3e09ce55369b66469443a4ca5ef03">GetStrides</a>() <span class="keyword">const</span> = 0;</div>
<div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;<span class="comment"></span> </div>
<div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;<span class="comment">    /// Get the number of elements for each dimension ordered from slowest iterating dimension</span></div>
<div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;<span class="comment">    /// to fastest iterating dimension.</span></div>
<div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;<span class="comment">    /// \return a TensorShape filled with the number of elements for each dimension.</span></div>
<div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;<span class="comment"></span>    <span class="keyword">virtual</span> <a class="code" href="classarmnn_1_1_tensor_shape.xhtml">TensorShape</a> <a class="code" href="classarmnn_1_1_i_tensor_handle.xhtml#affd5aae75cad90f472f96cfd25a13f29">GetShape</a>() <span class="keyword">const</span> = 0;</div>
<div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;<span class="comment"></span> </div>
<div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;<span class="comment">    /// Testing support to be able to verify and set tensor data content</span></div>
<div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;<span class="comment"></span>    <span class="keyword">virtual</span> <span class="keywordtype">void</span> <a class="code" href="classarmnn_1_1_i_tensor_handle.xhtml#a4ec32790513ea4af4c5746f1ee48fbfe">CopyOutTo</a>(<span class="keywordtype">void</span>* memory) <span class="keyword">const</span> = 0;</div>
<div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;    <span class="keyword">virtual</span> <span class="keywordtype">void</span> <a class="code" href="classarmnn_1_1_i_tensor_handle.xhtml#ad495ac6d9fd9e1ba5bb7a02c731a2d83">CopyInFrom</a>(<span class="keyword">const</span> <span class="keywordtype">void</span>* memory) = 0;</div>
<div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;<span class="comment"></span> </div>
<div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;<span class="comment">    /// Get flags describing supported import sources.</span></div>
<div class="line"><a name="l00069"></a><span class="lineno"><a class="line" href="classarmnn_1_1_i_tensor_handle.xhtml#a55cddc2dbb32d680cd85b635ba370e48">   69</a></span>&#160;<span class="comment"></span>    <span class="keyword">virtual</span> <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> <a class="code" href="classarmnn_1_1_i_tensor_handle.xhtml#a55cddc2dbb32d680cd85b635ba370e48">GetImportFlags</a>()<span class="keyword"> const </span>{ <span class="keywordflow">return</span> 0; }</div>
<div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;<span class="comment"></span> </div>
<div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;<span class="comment">    /// Import externally allocated memory</span></div>
<div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;<span class="comment">    /// \param memory base address of the memory being imported.</span></div>
<div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;<span class="comment">    /// \param source source of the allocation for the memory being imported.</span></div>
<div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;<span class="comment">    /// \return true on success or false on failure</span></div>
<div class="line"><a name="l00075"></a><span class="lineno"><a class="line" href="classarmnn_1_1_i_tensor_handle.xhtml#a4f81a9eff30c9b9fe76f5b83af470ba7">   75</a></span>&#160;<span class="comment"></span>    <span class="keyword">virtual</span> <span class="keywordtype">bool</span> <a class="code" href="classarmnn_1_1_i_tensor_handle.xhtml#a4f81a9eff30c9b9fe76f5b83af470ba7">Import</a>(<span class="keywordtype">void</span>* memory, <a class="code" href="namespacearmnn.xhtml#a14fcd7f88d11cea0a018269dca5f9277">MemorySource</a> source)</div>
<div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;    {</div>
<div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;        <a class="code" href="namespacearmnn.xhtml#a44affeeb090c3c6a3062830562672e84">IgnoreUnused</a>(memory, source);</div>
<div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;        <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;    };</div>
<div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;<span class="comment"></span> </div>
<div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;<span class="comment">    /// Implementations must determine if this memory block can be imported.</span></div>
<div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;<span class="comment">    /// This might be based on alignment or memory source type.</span></div>
<div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;<span class="comment">    /// \return true if this memory can be imported.</span></div>
<div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;<span class="comment">    /// \return false by default, cannot be imported.</span></div>
<div class="line"><a name="l00085"></a><span class="lineno"><a class="line" href="classarmnn_1_1_i_tensor_handle.xhtml#a6caeedd55f4d685fd04b8fcb352dae4e">   85</a></span>&#160;<span class="comment"></span>    <span class="keyword">virtual</span> <span class="keywordtype">bool</span> <a class="code" href="classarmnn_1_1_i_tensor_handle.xhtml#a6caeedd55f4d685fd04b8fcb352dae4e">CanBeImported</a>(<span class="keywordtype">void</span>* memory, <a class="code" href="namespacearmnn.xhtml#a14fcd7f88d11cea0a018269dca5f9277">MemorySource</a> source)</div>
<div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;    {</div>
<div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;        <a class="code" href="namespacearmnn.xhtml#a44affeeb090c3c6a3062830562672e84">IgnoreUnused</a>(memory, source);</div>
<div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;        <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;    };</div>
<div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;<span class="comment"></span> </div>
<div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;<span class="comment">    /// Unimport externally allocated memory</span></div>
<div class="line"><a name="l00092"></a><span class="lineno"><a class="line" href="classarmnn_1_1_i_tensor_handle.xhtml#a9eee7f9d4e230d684a7307ac4d75d8a9">   92</a></span>&#160;<span class="comment"></span>    <span class="keyword">virtual</span> <span class="keywordtype">void</span> <a class="code" href="classarmnn_1_1_i_tensor_handle.xhtml#a9eee7f9d4e230d684a7307ac4d75d8a9">Unimport</a>()</div>
<div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;    {};</div>
<div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;};</div>
<div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160; </div>
<div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;}</div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<div class="ttc" id="aclassarmnn_1_1_i_tensor_handle_xhtml_a04149d0f9b9c54c05e95693111490daf"><div class="ttname"><a href="classarmnn_1_1_i_tensor_handle.xhtml#a04149d0f9b9c54c05e95693111490daf">armnn::ITensorHandle::Manage</a></div><div class="ttdeci">virtual void Manage()=0</div><div class="ttdoc">Indicate to the memory manager that this resource is active.</div></div>
<div class="ttc" id="aclassarmnn_1_1_i_tensor_handle_xhtml_affd5aae75cad90f472f96cfd25a13f29"><div class="ttname"><a href="classarmnn_1_1_i_tensor_handle.xhtml#affd5aae75cad90f472f96cfd25a13f29">armnn::ITensorHandle::GetShape</a></div><div class="ttdeci">virtual TensorShape GetShape() const =0</div><div class="ttdoc">Get the number of elements for each dimension ordered from slowest iterating dimension to fastest ite...</div></div>
<div class="ttc" id="aclassarmnn_1_1_i_tensor_handle_xhtml_a30c3e09ce55369b66469443a4ca5ef03"><div class="ttname"><a href="classarmnn_1_1_i_tensor_handle.xhtml#a30c3e09ce55369b66469443a4ca5ef03">armnn::ITensorHandle::GetStrides</a></div><div class="ttdeci">virtual TensorShape GetStrides() const =0</div><div class="ttdoc">Get the strides for each dimension ordered from largest to smallest where the smallest value is the s...</div></div>
<div class="ttc" id="aclassarmnn_1_1_i_tensor_handle_xhtml_a9eee7f9d4e230d684a7307ac4d75d8a9"><div class="ttname"><a href="classarmnn_1_1_i_tensor_handle.xhtml#a9eee7f9d4e230d684a7307ac4d75d8a9">armnn::ITensorHandle::Unimport</a></div><div class="ttdeci">virtual void Unimport()</div><div class="ttdoc">Unimport externally allocated memory.</div><div class="ttdef"><b>Definition:</b> <a href="include_2armnn_2backends_2_i_tensor_handle_8hpp_source.xhtml#l00092">ITensorHandle.hpp:92</a></div></div>
<div class="ttc" id="aclassarmnn_1_1_i_tensor_handle_xhtml_ab2be1412c91842a072ad94759f52033e"><div class="ttname"><a href="classarmnn_1_1_i_tensor_handle.xhtml#ab2be1412c91842a072ad94759f52033e">armnn::ITensorHandle::Unmap</a></div><div class="ttdeci">void Unmap()</div><div class="ttdoc">Unmap the tensor data that was previously mapped with call to Map().</div><div class="ttdef"><b>Definition:</b> <a href="include_2armnn_2backends_2_i_tensor_handle_8hpp_source.xhtml#l00049">ITensorHandle.hpp:49</a></div></div>
<div class="ttc" id="anamespacearmnn_xhtml_a44affeeb090c3c6a3062830562672e84"><div class="ttname"><a href="namespacearmnn.xhtml#a44affeeb090c3c6a3062830562672e84">armnn::IgnoreUnused</a></div><div class="ttdeci">void IgnoreUnused(Ts &amp;&amp;...)</div><div class="ttdef"><b>Definition:</b> <a href="_ignore_unused_8hpp_source.xhtml#l00014">IgnoreUnused.hpp:14</a></div></div>
<div class="ttc" id="a_memory_sources_8hpp_xhtml"><div class="ttname"><a href="_memory_sources_8hpp.xhtml">MemorySources.hpp</a></div></div>
<div class="ttc" id="anamespacearmnn_xhtml"><div class="ttname"><a href="namespacearmnn.xhtml">armnn</a></div><div class="ttdoc">Copyright (c) 2021 ARM Limited and Contributors.</div><div class="ttdef"><b>Definition:</b> <a href="01__00__quick__start_8dox_source.xhtml#l00006">01_00_quick_start.dox:6</a></div></div>
<div class="ttc" id="aclassarmnn_1_1_i_tensor_handle_xhtml"><div class="ttname"><a href="classarmnn_1_1_i_tensor_handle.xhtml">armnn::ITensorHandle</a></div><div class="ttdef"><b>Definition:</b> <a href="include_2armnn_2backends_2_i_tensor_handle_8hpp_source.xhtml#l00015">ITensorHandle.hpp:15</a></div></div>
<div class="ttc" id="aclassarmnn_1_1_tensor_shape_xhtml"><div class="ttname"><a href="classarmnn_1_1_tensor_shape.xhtml">armnn::TensorShape</a></div><div class="ttdef"><b>Definition:</b> <a href="_tensor_8hpp_source.xhtml#l00020">Tensor.hpp:20</a></div></div>
<div class="ttc" id="aclassarmnn_1_1_i_tensor_handle_xhtml_a4f81a9eff30c9b9fe76f5b83af470ba7"><div class="ttname"><a href="classarmnn_1_1_i_tensor_handle.xhtml#a4f81a9eff30c9b9fe76f5b83af470ba7">armnn::ITensorHandle::Import</a></div><div class="ttdeci">virtual bool Import(void *memory, MemorySource source)</div><div class="ttdoc">Import externally allocated memory.</div><div class="ttdef"><b>Definition:</b> <a href="include_2armnn_2backends_2_i_tensor_handle_8hpp_source.xhtml#l00075">ITensorHandle.hpp:75</a></div></div>
<div class="ttc" id="aclassarmnn_1_1_i_tensor_handle_xhtml_a9afbc055a017adf1bc38ee137bca6e90"><div class="ttname"><a href="classarmnn_1_1_i_tensor_handle.xhtml#a9afbc055a017adf1bc38ee137bca6e90">armnn::ITensorHandle::Map</a></div><div class="ttdeci">virtual const void * Map(bool blocking=true) const =0</div><div class="ttdoc">Map the tensor data for access.</div></div>
<div class="ttc" id="aclassarmnn_1_1_i_tensor_handle_xhtml_a270c8f844df649b9b0599c1e4db44cd3"><div class="ttname"><a href="classarmnn_1_1_i_tensor_handle.xhtml#a270c8f844df649b9b0599c1e4db44cd3">armnn::ITensorHandle::Map</a></div><div class="ttdeci">void * Map(bool blocking=true)</div><div class="ttdoc">Map the tensor data for access.</div><div class="ttdef"><b>Definition:</b> <a href="include_2armnn_2backends_2_i_tensor_handle_8hpp_source.xhtml#l00043">ITensorHandle.hpp:43</a></div></div>
<div class="ttc" id="anamespacearmnn_xhtml_a14fcd7f88d11cea0a018269dca5f9277"><div class="ttname"><a href="namespacearmnn.xhtml#a14fcd7f88d11cea0a018269dca5f9277">armnn::MemorySource</a></div><div class="ttdeci">MemorySource</div><div class="ttdoc">Define the Memory Source to reduce copies.</div><div class="ttdef"><b>Definition:</b> <a href="_types_8hpp_source.xhtml#l00241">Types.hpp:241</a></div></div>
<div class="ttc" id="aclassarmnn_1_1_i_tensor_handle_xhtml_a4ec32790513ea4af4c5746f1ee48fbfe"><div class="ttname"><a href="classarmnn_1_1_i_tensor_handle.xhtml#a4ec32790513ea4af4c5746f1ee48fbfe">armnn::ITensorHandle::CopyOutTo</a></div><div class="ttdeci">virtual void CopyOutTo(void *memory) const =0</div><div class="ttdoc">Testing support to be able to verify and set tensor data content.</div></div>
<div class="ttc" id="aclassarmnn_1_1_i_tensor_handle_xhtml_aff95f063e2b8041b3d0e4b4dc0e3821d"><div class="ttname"><a href="classarmnn_1_1_i_tensor_handle.xhtml#aff95f063e2b8041b3d0e4b4dc0e3821d">armnn::ITensorHandle::~ITensorHandle</a></div><div class="ttdeci">virtual ~ITensorHandle()</div><div class="ttdef"><b>Definition:</b> <a href="include_2armnn_2backends_2_i_tensor_handle_8hpp_source.xhtml#l00018">ITensorHandle.hpp:18</a></div></div>
<div class="ttc" id="aclassarmnn_1_1_i_tensor_handle_xhtml_a5cceed8b707a09bf27eb61f17acf8a88"><div class="ttname"><a href="classarmnn_1_1_i_tensor_handle.xhtml#a5cceed8b707a09bf27eb61f17acf8a88">armnn::ITensorHandle::Allocate</a></div><div class="ttdeci">virtual void Allocate()=0</div><div class="ttdoc">Indicate to the memory manager that this resource is no longer active.</div></div>
<div class="ttc" id="aclassarmnn_1_1_i_tensor_handle_xhtml_a437893b8dcf58a0b68b70e1ad7933be6"><div class="ttname"><a href="classarmnn_1_1_i_tensor_handle.xhtml#a437893b8dcf58a0b68b70e1ad7933be6">armnn::ITensorHandle::GetParent</a></div><div class="ttdeci">virtual ITensorHandle * GetParent() const =0</div><div class="ttdoc">Get the parent tensor if this is a subtensor.</div></div>
<div class="ttc" id="aclassarmnn_1_1_i_tensor_handle_xhtml_ad495ac6d9fd9e1ba5bb7a02c731a2d83"><div class="ttname"><a href="classarmnn_1_1_i_tensor_handle.xhtml#ad495ac6d9fd9e1ba5bb7a02c731a2d83">armnn::ITensorHandle::CopyInFrom</a></div><div class="ttdeci">virtual void CopyInFrom(const void *memory)=0</div></div>
<div class="ttc" id="aclassarmnn_1_1_i_tensor_handle_xhtml_a55cddc2dbb32d680cd85b635ba370e48"><div class="ttname"><a href="classarmnn_1_1_i_tensor_handle.xhtml#a55cddc2dbb32d680cd85b635ba370e48">armnn::ITensorHandle::GetImportFlags</a></div><div class="ttdeci">virtual unsigned int GetImportFlags() const</div><div class="ttdoc">Get flags describing supported import sources.</div><div class="ttdef"><b>Definition:</b> <a href="include_2armnn_2backends_2_i_tensor_handle_8hpp_source.xhtml#l00069">ITensorHandle.hpp:69</a></div></div>
<div class="ttc" id="a_ignore_unused_8hpp_xhtml"><div class="ttname"><a href="_ignore_unused_8hpp.xhtml">IgnoreUnused.hpp</a></div></div>
<div class="ttc" id="aclassarmnn_1_1_i_tensor_handle_xhtml_a6caeedd55f4d685fd04b8fcb352dae4e"><div class="ttname"><a href="classarmnn_1_1_i_tensor_handle.xhtml#a6caeedd55f4d685fd04b8fcb352dae4e">armnn::ITensorHandle::CanBeImported</a></div><div class="ttdeci">virtual bool CanBeImported(void *memory, MemorySource source)</div><div class="ttdoc">Implementations must determine if this memory block can be imported.</div><div class="ttdef"><b>Definition:</b> <a href="include_2armnn_2backends_2_i_tensor_handle_8hpp_source.xhtml#l00085">ITensorHandle.hpp:85</a></div></div>
<div class="ttc" id="aclassarmnn_1_1_i_tensor_handle_xhtml_a563609828050f1b3a7868c23f3365923"><div class="ttname"><a href="classarmnn_1_1_i_tensor_handle.xhtml#a563609828050f1b3a7868c23f3365923">armnn::ITensorHandle::Unmap</a></div><div class="ttdeci">virtual void Unmap() const =0</div><div class="ttdoc">Unmap the tensor data.</div></div>
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="dir_d44c64559bbebec7f509842c48db8b23.xhtml">include</a></li><li class="navelem"><a class="el" href="dir_2b72cc348e06937955e62ebdd8a13436.xhtml">armnn</a></li><li class="navelem"><a class="el" href="dir_8946eb9d8f826e973720979438627a91.xhtml">backends</a></li><li class="navelem"><a class="el" href="include_2armnn_2backends_2_i_tensor_handle_8hpp.xhtml">ITensorHandle.hpp</a></li>
    <li class="footer">Generated on Thu May 18 2023 10:35:39 for ArmNN by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.17 </li>
  </ul>
</div>
</body>
</html>
