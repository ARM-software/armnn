<!-- Copyright (c) 2020 ARM Limited. -->
<!--                                 -->
<!-- SPDX-License-Identifier: MIT    -->
<!--                                 -->
<!-- HTML header for doxygen 1.8.13-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.17"/>
<meta name="robots" content="NOINDEX, NOFOLLOW" />
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>ArmNN: src/armnn/BackendRegistry.cpp Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script>
<script type="text/javascript" async="async" src="http://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="stylesheet.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <img alt="ArmNN" src="Arm_NN_horizontal_blue.png" style="max-width: 10rem; margin-top: .5rem; margin-left 10px"/>
  <td style="padding-left: 0.5em;">
   <div id="projectname">
   &#160;<span id="projectnumber">23.05</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.17 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "search",false,'Search');
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(document).ready(function(){initNavTree('_backend_registry_8cpp_source.xhtml',''); initResizable(); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="headertitle">
<div class="title">BackendRegistry.cpp</div>  </div>
</div><!--header-->
<div class="contents">
<a href="_backend_registry_8cpp.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="comment">//</span></div>
<div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="comment">// Copyright Â© 2017 Arm Ltd. All rights reserved.</span></div>
<div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="comment">// SPDX-License-Identifier: MIT</span></div>
<div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="comment">//</span></div>
<div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160; </div>
<div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="preprocessor">#include &lt;<a class="code" href="_backend_registry_8hpp.xhtml">armnn/BackendRegistry.hpp</a>&gt;</span></div>
<div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="preprocessor">#include &lt;<a class="code" href="_exceptions_8hpp.xhtml">armnn/Exceptions.hpp</a>&gt;</span></div>
<div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="preprocessor">#include &lt;<a class="code" href="_arm_n_n_profiling_8hpp.xhtml">armnn/profiling/ArmNNProfiling.hpp</a>&gt;</span></div>
<div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160; </div>
<div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="preprocessor">#include &lt;client/include/IProfilingService.hpp&gt;</span></div>
<div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160; </div>
<div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;<span class="keyword">namespace </span><a class="code" href="namespacearmnn.xhtml">armnn</a></div>
<div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;{</div>
<div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160; </div>
<div class="line"><a name="l00015"></a><span class="lineno"><a class="line" href="namespacearmnn.xhtml#ac2807505b850738bc8a1991ce669dd47">   15</a></span>&#160;<a class="code" href="classarmnn_1_1_backend_registry.xhtml">BackendRegistry</a>&amp; <a class="code" href="namespacearmnn.xhtml#ac2807505b850738bc8a1991ce669dd47">BackendRegistryInstance</a>()</div>
<div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;{</div>
<div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;    <span class="keyword">static</span> <a class="code" href="classarmnn_1_1_backend_registry.xhtml">BackendRegistry</a> instance;</div>
<div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;    <span class="keywordflow">return</span> instance;</div>
<div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;}</div>
<div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160; </div>
<div class="line"><a name="l00021"></a><span class="lineno"><a class="line" href="classarmnn_1_1_backend_registry.xhtml#a0318ffa738b798986c4347ea9fe5ab37">   21</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="classarmnn_1_1_backend_registry.xhtml#a0318ffa738b798986c4347ea9fe5ab37">BackendRegistry::Register</a>(<span class="keyword">const</span> <a class="code" href="classarmnn_1_1_backend_id.xhtml">BackendId</a>&amp; <span class="keywordtype">id</span>, <a class="code" href="classarmnn_1_1_backend_registry.xhtml#aa33ac375677ee8436456a585dd6f68d9">BackendRegistry::FactoryFunction</a> factory)</div>
<div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;{</div>
<div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;    <span class="keywordflow">if</span> (m_Factories.find(<span class="keywordtype">id</span>) != m_Factories.end())</div>
<div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;    {</div>
<div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;        <span class="keywordflow">throw</span> <a class="code" href="classarmnn_1_1_invalid_argument_exception.xhtml">InvalidArgumentException</a>(</div>
<div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;            std::string(<span class="keywordtype">id</span>) + <span class="stringliteral">&quot; already registered as IBackend factory&quot;</span>,</div>
<div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;            <a class="code" href="_exceptions_8hpp.xhtml#aa3be76aec4ce713822a5ea1ecbb7bc61">CHECK_LOCATION</a>());</div>
<div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;    }</div>
<div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;    m_Factories[id] = factory;</div>
<div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160; </div>
<div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;    <span class="keywordflow">if</span> (m_ProfilingService.<a class="code" href="classarmnn_1_1_optional_base.xhtml#a86b749ce2c4bc627fa8a1fcfaf0e314f">has_value</a>())</div>
<div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;    {</div>
<div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;        <span class="keywordflow">if</span> (m_ProfilingService.<a class="code" href="classarmnn_1_1_optional_base.xhtml#a86b749ce2c4bc627fa8a1fcfaf0e314f">has_value</a>() &amp;&amp; m_ProfilingService.<a class="code" href="classarmnn_1_1_optional_reference_switch.xhtml#a77c7d528ac063d870b8c8426ec81c1c3">value</a>().IsProfilingEnabled())</div>
<div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;        {</div>
<div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;            m_ProfilingService.<a class="code" href="classarmnn_1_1_optional_reference_switch.xhtml#a77c7d528ac063d870b8c8426ec81c1c3">value</a>().IncrementCounterValue(arm::pipe::REGISTERED_BACKENDS);</div>
<div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;        }</div>
<div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;    }</div>
<div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160; </div>
<div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;}</div>
<div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160; </div>
<div class="line"><a name="l00041"></a><span class="lineno"><a class="line" href="classarmnn_1_1_backend_registry.xhtml#a41895cd60f4b1bfd0b88571a8773ff1c">   41</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="classarmnn_1_1_backend_registry.xhtml#a41895cd60f4b1bfd0b88571a8773ff1c">BackendRegistry::Deregister</a>(<span class="keyword">const</span> <a class="code" href="classarmnn_1_1_backend_id.xhtml">BackendId</a>&amp; <span class="keywordtype">id</span>)</div>
<div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;{</div>
<div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;    m_Factories.erase(<span class="keywordtype">id</span>);</div>
<div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;    <a class="code" href="classarmnn_1_1_backend_registry.xhtml#af0cb2a0745525e13eb5bb10a1064ff52">DeregisterAllocator</a>(<span class="keywordtype">id</span>);</div>
<div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160; </div>
<div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;    <span class="keywordflow">if</span> (m_ProfilingService.<a class="code" href="classarmnn_1_1_optional_base.xhtml#a86b749ce2c4bc627fa8a1fcfaf0e314f">has_value</a>() &amp;&amp; m_ProfilingService.<a class="code" href="classarmnn_1_1_optional_reference_switch.xhtml#a77c7d528ac063d870b8c8426ec81c1c3">value</a>().IsProfilingEnabled())</div>
<div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;    {</div>
<div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;        m_ProfilingService.<a class="code" href="classarmnn_1_1_optional_reference_switch.xhtml#a77c7d528ac063d870b8c8426ec81c1c3">value</a>().IncrementCounterValue(arm::pipe::UNREGISTERED_BACKENDS);</div>
<div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;    }</div>
<div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;}</div>
<div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160; </div>
<div class="line"><a name="l00052"></a><span class="lineno"><a class="line" href="classarmnn_1_1_backend_registry.xhtml#a34fad4b6d0db8ebfad2f9178f0a90816">   52</a></span>&#160;<span class="keywordtype">bool</span> <a class="code" href="classarmnn_1_1_backend_registry.xhtml#a34fad4b6d0db8ebfad2f9178f0a90816">BackendRegistry::IsBackendRegistered</a>(<span class="keyword">const</span> <a class="code" href="classarmnn_1_1_backend_id.xhtml">BackendId</a>&amp; <span class="keywordtype">id</span>)<span class="keyword"> const</span></div>
<div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;    <span class="keywordflow">return</span> (m_Factories.find(<span class="keywordtype">id</span>) != m_Factories.end());</div>
<div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;}</div>
<div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160; </div>
<div class="line"><a name="l00057"></a><span class="lineno"><a class="line" href="classarmnn_1_1_backend_registry.xhtml#afc0c63ca8db8957b58826f6d7bd231b2">   57</a></span>&#160;<a class="code" href="classarmnn_1_1_backend_registry.xhtml#aa33ac375677ee8436456a585dd6f68d9">BackendRegistry::FactoryFunction</a> <a class="code" href="classarmnn_1_1_backend_registry.xhtml#afc0c63ca8db8957b58826f6d7bd231b2">BackendRegistry::GetFactory</a>(<span class="keyword">const</span> <a class="code" href="classarmnn_1_1_backend_id.xhtml">BackendId</a>&amp; <span class="keywordtype">id</span>)<span class="keyword"> const</span></div>
<div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;    <span class="keyword">auto</span> it = m_Factories.find(<span class="keywordtype">id</span>);</div>
<div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;    <span class="keywordflow">if</span> (it == m_Factories.end())</div>
<div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;    {</div>
<div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;        <span class="keywordflow">throw</span> <a class="code" href="classarmnn_1_1_invalid_argument_exception.xhtml">InvalidArgumentException</a>(</div>
<div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;            std::string(<span class="keywordtype">id</span>) + <span class="stringliteral">&quot; has no IBackend factory registered&quot;</span>,</div>
<div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;            <a class="code" href="_exceptions_8hpp.xhtml#aa3be76aec4ce713822a5ea1ecbb7bc61">CHECK_LOCATION</a>());</div>
<div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;    }</div>
<div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160; </div>
<div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;    <span class="keywordflow">return</span> it-&gt;second;</div>
<div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;}</div>
<div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160; </div>
<div class="line"><a name="l00070"></a><span class="lineno"><a class="line" href="classarmnn_1_1_backend_registry.xhtml#a58f4b9e873b7c1c7d512bd9f7d1489d8">   70</a></span>&#160;<span class="keywordtype">size_t</span> <a class="code" href="classarmnn_1_1_backend_registry.xhtml#a58f4b9e873b7c1c7d512bd9f7d1489d8">BackendRegistry::Size</a>()<span class="keyword"> const</span></div>
<div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;    <span class="keywordflow">return</span> m_Factories.size();</div>
<div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;}</div>
<div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160; </div>
<div class="line"><a name="l00075"></a><span class="lineno"><a class="line" href="classarmnn_1_1_backend_registry.xhtml#a570cb1835ec73000a7954ba75257904f">   75</a></span>&#160;<a class="code" href="namespacearmnn.xhtml#a1854d9cda81304325664363c1fd0fb27">BackendIdSet</a> <a class="code" href="classarmnn_1_1_backend_registry.xhtml#a570cb1835ec73000a7954ba75257904f">BackendRegistry::GetBackendIds</a>()<span class="keyword"> const</span></div>
<div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;    <a class="code" href="namespacearmnn.xhtml#a1854d9cda81304325664363c1fd0fb27">BackendIdSet</a> result;</div>
<div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;    <span class="keywordflow">for</span> (<span class="keyword">const</span> <span class="keyword">auto</span>&amp; it : m_Factories)</div>
<div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;    {</div>
<div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;        result.insert(it.first);</div>
<div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;    }</div>
<div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;    <span class="keywordflow">return</span> result;</div>
<div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;}</div>
<div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160; </div>
<div class="line"><a name="l00085"></a><span class="lineno"><a class="line" href="classarmnn_1_1_backend_registry.xhtml#ae1de2f7ca1db17f45f97155e239b8b45">   85</a></span>&#160;std::string <a class="code" href="classarmnn_1_1_backend_registry.xhtml#ae1de2f7ca1db17f45f97155e239b8b45">BackendRegistry::GetBackendIdsAsString</a>()<span class="keyword"> const</span></div>
<div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;    <span class="keyword">static</span> <span class="keyword">const</span> std::string delimitator = <span class="stringliteral">&quot;, &quot;</span>;</div>
<div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160; </div>
<div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;    std::stringstream output;</div>
<div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;    <span class="keywordflow">for</span> (<span class="keyword">auto</span>&amp; backendId : <a class="code" href="classarmnn_1_1_backend_registry.xhtml#a570cb1835ec73000a7954ba75257904f">GetBackendIds</a>())</div>
<div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;    {</div>
<div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;        <span class="keywordflow">if</span> (output.tellp() != std::streampos(0))</div>
<div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;        {</div>
<div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;            output &lt;&lt; delimitator;</div>
<div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;        }</div>
<div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;        output &lt;&lt; backendId;</div>
<div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;    }</div>
<div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160; </div>
<div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;    <span class="keywordflow">return</span> output.str();</div>
<div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;}</div>
<div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160; </div>
<div class="line"><a name="l00102"></a><span class="lineno"><a class="line" href="classarmnn_1_1_backend_registry.xhtml#a55a68d31e716a63a8b38998649a07b3c">  102</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="classarmnn_1_1_backend_registry.xhtml#a55a68d31e716a63a8b38998649a07b3c">BackendRegistry::Swap</a>(<a class="code" href="classarmnn_1_1_backend_registry.xhtml">BackendRegistry</a>&amp; instance, <a class="code" href="classarmnn_1_1_backend_registry.xhtml#a20fb10b59fccc99291e7fe993cd814bb">BackendRegistry::FactoryStorage</a>&amp; other)</div>
<div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;{</div>
<div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;    <a class="code" href="namespacearmnn.xhtml#a14d7f180bf51e86850305965c3707e07">std::swap</a>(instance.m_Factories, other);</div>
<div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;}</div>
<div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160; </div>
<div class="line"><a name="l00107"></a><span class="lineno"><a class="line" href="classarmnn_1_1_backend_registry.xhtml#a56879f6e669f40cdd980b54bd458e17c">  107</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="classarmnn_1_1_backend_registry.xhtml#a56879f6e669f40cdd980b54bd458e17c">BackendRegistry::SetProfilingService</a>(<a class="code" href="classarmnn_1_1_optional.xhtml">armnn::Optional&lt;arm::pipe::IProfilingService&amp;&gt;</a> profilingService)</div>
<div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;{</div>
<div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;    m_ProfilingService = profilingService;</div>
<div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;}</div>
<div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160; </div>
<div class="line"><a name="l00112"></a><span class="lineno"><a class="line" href="classarmnn_1_1_backend_registry.xhtml#a89e24dab4e47d8080ce0665f737a00e6">  112</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="classarmnn_1_1_backend_registry.xhtml#a89e24dab4e47d8080ce0665f737a00e6">BackendRegistry::RegisterAllocator</a>(<span class="keyword">const</span> <a class="code" href="classarmnn_1_1_backend_id.xhtml">BackendId</a>&amp; <span class="keywordtype">id</span>, std::shared_ptr&lt;ICustomAllocator&gt; alloc)</div>
<div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;{</div>
<div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;    <span class="keywordflow">if</span> (m_CustomMemoryAllocatorMap.find(<span class="keywordtype">id</span>) != m_CustomMemoryAllocatorMap.end())</div>
<div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;    {</div>
<div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;        <span class="keywordflow">throw</span> <a class="code" href="classarmnn_1_1_invalid_argument_exception.xhtml">InvalidArgumentException</a>(</div>
<div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;            std::string(<span class="keywordtype">id</span>) + <span class="stringliteral">&quot; already has an allocator associated with it&quot;</span>,</div>
<div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;            <a class="code" href="_exceptions_8hpp.xhtml#aa3be76aec4ce713822a5ea1ecbb7bc61">CHECK_LOCATION</a>());</div>
<div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;    }</div>
<div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;    m_CustomMemoryAllocatorMap[id] = alloc;</div>
<div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;}</div>
<div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160; </div>
<div class="line"><a name="l00123"></a><span class="lineno"><a class="line" href="classarmnn_1_1_backend_registry.xhtml#af0cb2a0745525e13eb5bb10a1064ff52">  123</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="classarmnn_1_1_backend_registry.xhtml#af0cb2a0745525e13eb5bb10a1064ff52">BackendRegistry::DeregisterAllocator</a>(<span class="keyword">const</span> <a class="code" href="classarmnn_1_1_backend_id.xhtml">BackendId</a>&amp; <span class="keywordtype">id</span>)</div>
<div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;{</div>
<div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;    m_CustomMemoryAllocatorMap.erase(<span class="keywordtype">id</span>);</div>
<div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;}</div>
<div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160; </div>
<div class="line"><a name="l00128"></a><span class="lineno"><a class="line" href="classarmnn_1_1_backend_registry.xhtml#a6dea5df9078a3e9b44176175043237f6">  128</a></span>&#160;std::unordered_map&lt;BackendId, std::shared_ptr&lt;ICustomAllocator&gt;&gt; <a class="code" href="classarmnn_1_1_backend_registry.xhtml#a6dea5df9078a3e9b44176175043237f6">BackendRegistry::GetAllocators</a>()</div>
<div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;{</div>
<div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;    <span class="keywordflow">return</span> m_CustomMemoryAllocatorMap;</div>
<div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;}</div>
<div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160; </div>
<div class="line"><a name="l00133"></a><span class="lineno"><a class="line" href="classarmnn_1_1_backend_registry.xhtml#ad02fbefe5c0f3ec53059dd630f1d5117">  133</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="classarmnn_1_1_backend_registry.xhtml#ad02fbefe5c0f3ec53059dd630f1d5117">BackendRegistry::RegisterMemoryOptimizerStrategy</a>(<span class="keyword">const</span> <a class="code" href="classarmnn_1_1_backend_id.xhtml">BackendId</a>&amp; <span class="keywordtype">id</span>,</div>
<div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;                                                      std::shared_ptr&lt;IMemoryOptimizerStrategy&gt; strategy)</div>
<div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;{</div>
<div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;    <span class="keywordflow">if</span> (m_MemoryOptimizerStrategyMap.find(<span class="keywordtype">id</span>) != m_MemoryOptimizerStrategyMap.end())</div>
<div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;    {</div>
<div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;        <span class="keywordflow">throw</span> <a class="code" href="classarmnn_1_1_invalid_argument_exception.xhtml">InvalidArgumentException</a>(</div>
<div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;            std::string(<span class="keywordtype">id</span>) + <span class="stringliteral">&quot; already has an memory optimizer strategy associated with it&quot;</span>,</div>
<div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;            <a class="code" href="_exceptions_8hpp.xhtml#aa3be76aec4ce713822a5ea1ecbb7bc61">CHECK_LOCATION</a>());</div>
<div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;    }</div>
<div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;    m_MemoryOptimizerStrategyMap[id] = strategy;</div>
<div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;}</div>
<div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160; </div>
<div class="line"><a name="l00145"></a><span class="lineno"><a class="line" href="classarmnn_1_1_backend_registry.xhtml#a111c0290eef45eab28155c3b9bd84788">  145</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="classarmnn_1_1_backend_registry.xhtml#a111c0290eef45eab28155c3b9bd84788">BackendRegistry::DeregisterMemoryOptimizerStrategy</a>(<span class="keyword">const</span> <a class="code" href="classarmnn_1_1_backend_id.xhtml">BackendId</a> &amp;<span class="keywordtype">id</span>)</div>
<div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;{</div>
<div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;    m_MemoryOptimizerStrategyMap.erase(<span class="keywordtype">id</span>);</div>
<div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;}</div>
<div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160; </div>
<div class="line"><a name="l00150"></a><span class="lineno"><a class="line" href="classarmnn_1_1_backend_registry.xhtml#a8a7a14a6f1f1078e1b9d31c60d09e007">  150</a></span>&#160;<a class="code" href="namespacearmnn.xhtml#abb25db39e8d7f30b3736701b65ce514b">MemoryOptimizerStrategiesMapRef</a> <a class="code" href="classarmnn_1_1_backend_registry.xhtml#a8a7a14a6f1f1078e1b9d31c60d09e007">BackendRegistry::GetMemoryOptimizerStrategies</a>()</div>
<div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;{</div>
<div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;    <span class="keywordflow">return</span> m_MemoryOptimizerStrategyMap;</div>
<div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;}</div>
<div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160; </div>
<div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;} <span class="comment">// namespace armnn</span></div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<div class="ttc" id="aclassarmnn_1_1_backend_registry_xhtml_a55a68d31e716a63a8b38998649a07b3c"><div class="ttname"><a href="classarmnn_1_1_backend_registry.xhtml#a55a68d31e716a63a8b38998649a07b3c">armnn::BackendRegistry::Swap</a></div><div class="ttdeci">static void Swap(BackendRegistry &amp;instance, FactoryStorage &amp;other)</div><div class="ttdoc">For testing only.</div><div class="ttdef"><b>Definition:</b> <a href="_backend_registry_8cpp_source.xhtml#l00102">BackendRegistry.cpp:102</a></div></div>
<div class="ttc" id="aclassarmnn_1_1_backend_id_xhtml"><div class="ttname"><a href="classarmnn_1_1_backend_id.xhtml">armnn::BackendId</a></div><div class="ttdef"><b>Definition:</b> <a href="_backend_id_8hpp_source.xhtml#l00075">BackendId.hpp:75</a></div></div>
<div class="ttc" id="anamespacearmnn_xhtml_ac2807505b850738bc8a1991ce669dd47"><div class="ttname"><a href="namespacearmnn.xhtml#ac2807505b850738bc8a1991ce669dd47">armnn::BackendRegistryInstance</a></div><div class="ttdeci">BackendRegistry &amp; BackendRegistryInstance()</div><div class="ttdef"><b>Definition:</b> <a href="_backend_registry_8cpp_source.xhtml#l00015">BackendRegistry.cpp:15</a></div></div>
<div class="ttc" id="anamespacearmnn_xhtml_abb25db39e8d7f30b3736701b65ce514b"><div class="ttname"><a href="namespacearmnn.xhtml#abb25db39e8d7f30b3736701b65ce514b">armnn::MemoryOptimizerStrategiesMapRef</a></div><div class="ttdeci">std::unordered_map&lt; BackendId, std::shared_ptr&lt; IMemoryOptimizerStrategy &gt; &gt; MemoryOptimizerStrategiesMapRef</div><div class="ttdef"><b>Definition:</b> <a href="_backend_registry_8hpp_source.xhtml#l00033">BackendRegistry.hpp:33</a></div></div>
<div class="ttc" id="aclassarmnn_1_1_backend_registry_xhtml_a89e24dab4e47d8080ce0665f737a00e6"><div class="ttname"><a href="classarmnn_1_1_backend_registry.xhtml#a89e24dab4e47d8080ce0665f737a00e6">armnn::BackendRegistry::RegisterAllocator</a></div><div class="ttdeci">void RegisterAllocator(const BackendId &amp;id, std::shared_ptr&lt; ICustomAllocator &gt; alloc)</div><div class="ttdef"><b>Definition:</b> <a href="_backend_registry_8cpp_source.xhtml#l00112">BackendRegistry.cpp:112</a></div></div>
<div class="ttc" id="a_exceptions_8hpp_xhtml_aa3be76aec4ce713822a5ea1ecbb7bc61"><div class="ttname"><a href="_exceptions_8hpp.xhtml#aa3be76aec4ce713822a5ea1ecbb7bc61">CHECK_LOCATION</a></div><div class="ttdeci">#define CHECK_LOCATION()</div><div class="ttdef"><b>Definition:</b> <a href="_exceptions_8hpp_source.xhtml#l00203">Exceptions.hpp:203</a></div></div>
<div class="ttc" id="aclassarmnn_1_1_backend_registry_xhtml_afc0c63ca8db8957b58826f6d7bd231b2"><div class="ttname"><a href="classarmnn_1_1_backend_registry.xhtml#afc0c63ca8db8957b58826f6d7bd231b2">armnn::BackendRegistry::GetFactory</a></div><div class="ttdeci">FactoryFunction GetFactory(const BackendId &amp;id) const</div><div class="ttdef"><b>Definition:</b> <a href="_backend_registry_8cpp_source.xhtml#l00057">BackendRegistry.cpp:57</a></div></div>
<div class="ttc" id="aclassarmnn_1_1_backend_registry_xhtml_af0cb2a0745525e13eb5bb10a1064ff52"><div class="ttname"><a href="classarmnn_1_1_backend_registry.xhtml#af0cb2a0745525e13eb5bb10a1064ff52">armnn::BackendRegistry::DeregisterAllocator</a></div><div class="ttdeci">void DeregisterAllocator(const BackendId &amp;id)</div><div class="ttdef"><b>Definition:</b> <a href="_backend_registry_8cpp_source.xhtml#l00123">BackendRegistry.cpp:123</a></div></div>
<div class="ttc" id="aclassarmnn_1_1_backend_registry_xhtml_a56879f6e669f40cdd980b54bd458e17c"><div class="ttname"><a href="classarmnn_1_1_backend_registry.xhtml#a56879f6e669f40cdd980b54bd458e17c">armnn::BackendRegistry::SetProfilingService</a></div><div class="ttdeci">void SetProfilingService(armnn::Optional&lt; arm::pipe::IProfilingService &amp; &gt; profilingService)</div><div class="ttdef"><b>Definition:</b> <a href="_backend_registry_8cpp_source.xhtml#l00107">BackendRegistry.cpp:107</a></div></div>
<div class="ttc" id="aclassarmnn_1_1_backend_registry_xhtml_a570cb1835ec73000a7954ba75257904f"><div class="ttname"><a href="classarmnn_1_1_backend_registry.xhtml#a570cb1835ec73000a7954ba75257904f">armnn::BackendRegistry::GetBackendIds</a></div><div class="ttdeci">BackendIdSet GetBackendIds() const</div><div class="ttdef"><b>Definition:</b> <a href="_backend_registry_8cpp_source.xhtml#l00075">BackendRegistry.cpp:75</a></div></div>
<div class="ttc" id="anamespacearmnn_xhtml"><div class="ttname"><a href="namespacearmnn.xhtml">armnn</a></div><div class="ttdoc">Copyright (c) 2021 ARM Limited and Contributors.</div><div class="ttdef"><b>Definition:</b> <a href="01__00__quick__start_8dox_source.xhtml#l00006">01_00_quick_start.dox:6</a></div></div>
<div class="ttc" id="aclassarmnn_1_1_backend_registry_xhtml"><div class="ttname"><a href="classarmnn_1_1_backend_registry.xhtml">armnn::BackendRegistry</a></div><div class="ttdef"><b>Definition:</b> <a href="_backend_registry_8hpp_source.xhtml#l00035">BackendRegistry.hpp:35</a></div></div>
<div class="ttc" id="aclassarmnn_1_1_optional_reference_switch_xhtml_a77c7d528ac063d870b8c8426ec81c1c3"><div class="ttname"><a href="classarmnn_1_1_optional_reference_switch.xhtml#a77c7d528ac063d870b8c8426ec81c1c3">armnn::OptionalReferenceSwitch::value</a></div><div class="ttdeci">const T &amp; value() const</div><div class="ttdef"><b>Definition:</b> <a href="_optional_8hpp_source.xhtml#l00146">Optional.hpp:146</a></div></div>
<div class="ttc" id="aclassarmnn_1_1_backend_registry_xhtml_a111c0290eef45eab28155c3b9bd84788"><div class="ttname"><a href="classarmnn_1_1_backend_registry.xhtml#a111c0290eef45eab28155c3b9bd84788">armnn::BackendRegistry::DeregisterMemoryOptimizerStrategy</a></div><div class="ttdeci">void DeregisterMemoryOptimizerStrategy(const BackendId &amp;id)</div><div class="ttdef"><b>Definition:</b> <a href="_backend_registry_8cpp_source.xhtml#l00145">BackendRegistry.cpp:145</a></div></div>
<div class="ttc" id="aclassarmnn_1_1_backend_registry_xhtml_a58f4b9e873b7c1c7d512bd9f7d1489d8"><div class="ttname"><a href="classarmnn_1_1_backend_registry.xhtml#a58f4b9e873b7c1c7d512bd9f7d1489d8">armnn::BackendRegistry::Size</a></div><div class="ttdeci">size_t Size() const</div><div class="ttdef"><b>Definition:</b> <a href="_backend_registry_8cpp_source.xhtml#l00070">BackendRegistry.cpp:70</a></div></div>
<div class="ttc" id="aclassarmnn_1_1_backend_registry_xhtml_ad02fbefe5c0f3ec53059dd630f1d5117"><div class="ttname"><a href="classarmnn_1_1_backend_registry.xhtml#ad02fbefe5c0f3ec53059dd630f1d5117">armnn::BackendRegistry::RegisterMemoryOptimizerStrategy</a></div><div class="ttdeci">void RegisterMemoryOptimizerStrategy(const BackendId &amp;id, std::shared_ptr&lt; IMemoryOptimizerStrategy &gt; strategy)</div><div class="ttdef"><b>Definition:</b> <a href="_backend_registry_8cpp_source.xhtml#l00133">BackendRegistry.cpp:133</a></div></div>
<div class="ttc" id="aclassarmnn_1_1_backend_registry_xhtml_a20fb10b59fccc99291e7fe993cd814bb"><div class="ttname"><a href="classarmnn_1_1_backend_registry.xhtml#a20fb10b59fccc99291e7fe993cd814bb">armnn::BackendRegistry::FactoryStorage</a></div><div class="ttdeci">std::unordered_map&lt; BackendId, FactoryFunction &gt; FactoryStorage</div><div class="ttdef"><b>Definition:</b> <a href="_backend_registry_8hpp_source.xhtml#l00071">BackendRegistry.hpp:71</a></div></div>
<div class="ttc" id="aclassarmnn_1_1_backend_registry_xhtml_a41895cd60f4b1bfd0b88571a8773ff1c"><div class="ttname"><a href="classarmnn_1_1_backend_registry.xhtml#a41895cd60f4b1bfd0b88571a8773ff1c">armnn::BackendRegistry::Deregister</a></div><div class="ttdeci">void Deregister(const BackendId &amp;id)</div><div class="ttdef"><b>Definition:</b> <a href="_backend_registry_8cpp_source.xhtml#l00041">BackendRegistry.cpp:41</a></div></div>
<div class="ttc" id="aclassarmnn_1_1_backend_registry_xhtml_ae1de2f7ca1db17f45f97155e239b8b45"><div class="ttname"><a href="classarmnn_1_1_backend_registry.xhtml#ae1de2f7ca1db17f45f97155e239b8b45">armnn::BackendRegistry::GetBackendIdsAsString</a></div><div class="ttdeci">std::string GetBackendIdsAsString() const</div><div class="ttdef"><b>Definition:</b> <a href="_backend_registry_8cpp_source.xhtml#l00085">BackendRegistry.cpp:85</a></div></div>
<div class="ttc" id="anamespacearmnn_xhtml_a14d7f180bf51e86850305965c3707e07"><div class="ttname"><a href="namespacearmnn.xhtml#a14d7f180bf51e86850305965c3707e07">armnn::swap</a></div><div class="ttdeci">void swap(OriginsDescriptor &amp;first, OriginsDescriptor &amp;second)</div><div class="ttdef"><b>Definition:</b> <a href="_descriptors_8cpp_source.xhtml#l00350">Descriptors.cpp:350</a></div></div>
<div class="ttc" id="a_arm_n_n_profiling_8hpp_xhtml"><div class="ttname"><a href="_arm_n_n_profiling_8hpp.xhtml">ArmNNProfiling.hpp</a></div></div>
<div class="ttc" id="aclassarmnn_1_1_optional_base_xhtml_a86b749ce2c4bc627fa8a1fcfaf0e314f"><div class="ttname"><a href="classarmnn_1_1_optional_base.xhtml#a86b749ce2c4bc627fa8a1fcfaf0e314f">armnn::OptionalBase::has_value</a></div><div class="ttdeci">bool has_value() const noexcept</div><div class="ttdef"><b>Definition:</b> <a href="_optional_8hpp_source.xhtml#l00053">Optional.hpp:53</a></div></div>
<div class="ttc" id="aclassarmnn_1_1_backend_registry_xhtml_a34fad4b6d0db8ebfad2f9178f0a90816"><div class="ttname"><a href="classarmnn_1_1_backend_registry.xhtml#a34fad4b6d0db8ebfad2f9178f0a90816">armnn::BackendRegistry::IsBackendRegistered</a></div><div class="ttdeci">bool IsBackendRegistered(const BackendId &amp;id) const</div><div class="ttdef"><b>Definition:</b> <a href="_backend_registry_8cpp_source.xhtml#l00052">BackendRegistry.cpp:52</a></div></div>
<div class="ttc" id="aclassarmnn_1_1_backend_registry_xhtml_aa33ac375677ee8436456a585dd6f68d9"><div class="ttname"><a href="classarmnn_1_1_backend_registry.xhtml#aa33ac375677ee8436456a585dd6f68d9">armnn::BackendRegistry::FactoryFunction</a></div><div class="ttdeci">std::function&lt; PointerType()&gt; FactoryFunction</div><div class="ttdef"><b>Definition:</b> <a href="_backend_registry_8hpp_source.xhtml#l00039">BackendRegistry.hpp:39</a></div></div>
<div class="ttc" id="a_backend_registry_8hpp_xhtml"><div class="ttname"><a href="_backend_registry_8hpp.xhtml">BackendRegistry.hpp</a></div></div>
<div class="ttc" id="anamespacearmnn_xhtml_a1854d9cda81304325664363c1fd0fb27"><div class="ttname"><a href="namespacearmnn.xhtml#a1854d9cda81304325664363c1fd0fb27">armnn::BackendIdSet</a></div><div class="ttdeci">std::unordered_set&lt; BackendId &gt; BackendIdSet</div><div class="ttdef"><b>Definition:</b> <a href="_backend_id_8hpp_source.xhtml#l00193">BackendId.hpp:193</a></div></div>
<div class="ttc" id="aclassarmnn_1_1_backend_registry_xhtml_a8a7a14a6f1f1078e1b9d31c60d09e007"><div class="ttname"><a href="classarmnn_1_1_backend_registry.xhtml#a8a7a14a6f1f1078e1b9d31c60d09e007">armnn::BackendRegistry::GetMemoryOptimizerStrategies</a></div><div class="ttdeci">MemoryOptimizerStrategiesMapRef GetMemoryOptimizerStrategies()</div><div class="ttdef"><b>Definition:</b> <a href="_backend_registry_8cpp_source.xhtml#l00150">BackendRegistry.cpp:150</a></div></div>
<div class="ttc" id="a_exceptions_8hpp_xhtml"><div class="ttname"><a href="_exceptions_8hpp.xhtml">Exceptions.hpp</a></div></div>
<div class="ttc" id="aclassarmnn_1_1_optional_xhtml"><div class="ttname"><a href="classarmnn_1_1_optional.xhtml">armnn::Optional&lt; arm::pipe::IProfilingService &amp; &gt;</a></div></div>
<div class="ttc" id="aclassarmnn_1_1_invalid_argument_exception_xhtml"><div class="ttname"><a href="classarmnn_1_1_invalid_argument_exception.xhtml">armnn::InvalidArgumentException</a></div><div class="ttdef"><b>Definition:</b> <a href="_exceptions_8hpp_source.xhtml#l00080">Exceptions.hpp:80</a></div></div>
<div class="ttc" id="aclassarmnn_1_1_backend_registry_xhtml_a0318ffa738b798986c4347ea9fe5ab37"><div class="ttname"><a href="classarmnn_1_1_backend_registry.xhtml#a0318ffa738b798986c4347ea9fe5ab37">armnn::BackendRegistry::Register</a></div><div class="ttdeci">void Register(const BackendId &amp;id, FactoryFunction factory)</div><div class="ttdef"><b>Definition:</b> <a href="_backend_registry_8cpp_source.xhtml#l00021">BackendRegistry.cpp:21</a></div></div>
<div class="ttc" id="aclassarmnn_1_1_backend_registry_xhtml_a6dea5df9078a3e9b44176175043237f6"><div class="ttname"><a href="classarmnn_1_1_backend_registry.xhtml#a6dea5df9078a3e9b44176175043237f6">armnn::BackendRegistry::GetAllocators</a></div><div class="ttdeci">std::unordered_map&lt; BackendId, std::shared_ptr&lt; ICustomAllocator &gt; &gt; GetAllocators()</div><div class="ttdef"><b>Definition:</b> <a href="_backend_registry_8cpp_source.xhtml#l00128">BackendRegistry.cpp:128</a></div></div>
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="dir_68267d1309a1af8e8297ef4c3efbcdba.xhtml">src</a></li><li class="navelem"><a class="el" href="dir_e0a84d05c80a2ef4231141dcbbeac5c8.xhtml">armnn</a></li><li class="navelem"><a class="el" href="_backend_registry_8cpp.xhtml">BackendRegistry.cpp</a></li>
    <li class="footer">Generated on Thu May 18 2023 10:35:39 for ArmNN by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.17 </li>
  </ul>
</div>
</body>
</html>
