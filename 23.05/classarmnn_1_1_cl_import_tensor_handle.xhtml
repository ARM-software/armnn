<!-- Copyright (c) 2020 ARM Limited. -->
<!--                                 -->
<!-- SPDX-License-Identifier: MIT    -->
<!--                                 -->
<!-- HTML header for doxygen 1.8.13-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.17"/>
<meta name="robots" content="NOINDEX, NOFOLLOW" />
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>ArmNN: ClImportTensorHandle Class Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script>
<script type="text/javascript" async="async" src="http://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="stylesheet.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <img alt="ArmNN" src="Arm_NN_horizontal_blue.png" style="max-width: 10rem; margin-top: .5rem; margin-left 10px"/>
  <td style="padding-left: 0.5em;">
   <div id="projectname">
   &#160;<span id="projectnumber">23.05</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.17 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "search",false,'Search');
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(document).ready(function(){initNavTree('classarmnn_1_1_cl_import_tensor_handle.xhtml',''); initResizable(); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="summary">
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="classarmnn_1_1_cl_import_tensor_handle-members.xhtml">List of all members</a>  </div>
  <div class="headertitle">
<div class="title">ClImportTensorHandle Class Reference</div>  </div>
</div><!--header-->
<div class="contents">

<p><code>#include &lt;<a class="el" href="_cl_import_tensor_handle_8hpp_source.xhtml">ClImportTensorHandle.hpp</a>&gt;</code></p>
<div class="dynheader">
Inheritance diagram for ClImportTensorHandle:</div>
<div class="dyncontent">
 <div class="center">
  <img src="classarmnn_1_1_cl_import_tensor_handle.png" usemap="#ClImportTensorHandle_map" alt=""/>
  <map id="ClImportTensorHandle_map" name="ClImportTensorHandle_map">
<area href="classarmnn_1_1_i_cl_tensor_handle.xhtml" alt="IClTensorHandle" shape="rect" coords="0,112,137,136"/>
<area href="classarmnn_1_1_i_acl_tensor_handle.xhtml" alt="IAclTensorHandle" shape="rect" coords="0,56,137,80"/>
<area href="classarmnn_1_1_i_tensor_handle.xhtml" alt="ITensorHandle" shape="rect" coords="0,0,137,24"/>
  </map>
</div></div>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:a32afaf5065ada2423780bb3344d4442b"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_cl_import_tensor_handle.xhtml#a32afaf5065ada2423780bb3344d4442b">ClImportTensorHandle</a> (const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;tensorInfo, <a class="el" href="namespacearmnn.xhtml#a5b05f3b7208ec7cea3338e30057c0bac">MemorySourceFlags</a> importFlags)</td></tr>
<tr class="separator:a32afaf5065ada2423780bb3344d4442b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a39862973c3aa223c1a60a76571a34067"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_cl_import_tensor_handle.xhtml#a39862973c3aa223c1a60a76571a34067">ClImportTensorHandle</a> (const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;tensorInfo, <a class="el" href="namespacearmnn.xhtml#ad1d5cce2d9e9a5d61c243e5c989112e0">DataLayout</a> dataLayout, <a class="el" href="namespacearmnn.xhtml#a5b05f3b7208ec7cea3338e30057c0bac">MemorySourceFlags</a> importFlags)</td></tr>
<tr class="separator:a39862973c3aa223c1a60a76571a34067"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa7d00659f5bca101f9a20b4ac22df577"><td class="memItemLeft" align="right" valign="top">arm_compute::CLTensor &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_cl_import_tensor_handle.xhtml#aa7d00659f5bca101f9a20b4ac22df577">GetTensor</a> () override</td></tr>
<tr class="separator:aa7d00659f5bca101f9a20b4ac22df577"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab9c5e9d2f0654981bdc8fff0ff902d51"><td class="memItemLeft" align="right" valign="top">arm_compute::CLTensor const  &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_cl_import_tensor_handle.xhtml#ab9c5e9d2f0654981bdc8fff0ff902d51">GetTensor</a> () const override</td></tr>
<tr class="separator:ab9c5e9d2f0654981bdc8fff0ff902d51"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac4c894e28b763523748ba2bb718d569d"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_cl_import_tensor_handle.xhtml#ac4c894e28b763523748ba2bb718d569d">Allocate</a> () override</td></tr>
<tr class="memdesc:ac4c894e28b763523748ba2bb718d569d"><td class="mdescLeft">&#160;</td><td class="mdescRight">Indicate to the memory manager that this resource is no longer active.  <a href="classarmnn_1_1_cl_import_tensor_handle.xhtml#ac4c894e28b763523748ba2bb718d569d">More...</a><br /></td></tr>
<tr class="separator:ac4c894e28b763523748ba2bb718d569d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a19aa18d78d5ac31e3a3c8f782f0e8606"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_cl_import_tensor_handle.xhtml#a19aa18d78d5ac31e3a3c8f782f0e8606">Manage</a> () override</td></tr>
<tr class="memdesc:a19aa18d78d5ac31e3a3c8f782f0e8606"><td class="mdescLeft">&#160;</td><td class="mdescRight">Indicate to the memory manager that this resource is active.  <a href="classarmnn_1_1_cl_import_tensor_handle.xhtml#a19aa18d78d5ac31e3a3c8f782f0e8606">More...</a><br /></td></tr>
<tr class="separator:a19aa18d78d5ac31e3a3c8f782f0e8606"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:abe9956a614f816b4181a47a046e42db9"><td class="memItemLeft" align="right" valign="top">virtual const void *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_cl_import_tensor_handle.xhtml#abe9956a614f816b4181a47a046e42db9">Map</a> (bool blocking=true) const override</td></tr>
<tr class="memdesc:abe9956a614f816b4181a47a046e42db9"><td class="mdescLeft">&#160;</td><td class="mdescRight">Map the tensor data for access.  <a href="classarmnn_1_1_cl_import_tensor_handle.xhtml#abe9956a614f816b4181a47a046e42db9">More...</a><br /></td></tr>
<tr class="separator:abe9956a614f816b4181a47a046e42db9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a88ab6decf78c152e746b7d8dc2dd931f"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_cl_import_tensor_handle.xhtml#a88ab6decf78c152e746b7d8dc2dd931f">Unmap</a> () const override</td></tr>
<tr class="memdesc:a88ab6decf78c152e746b7d8dc2dd931f"><td class="mdescLeft">&#160;</td><td class="mdescRight">Unmap the tensor data.  <a href="classarmnn_1_1_cl_import_tensor_handle.xhtml#a88ab6decf78c152e746b7d8dc2dd931f">More...</a><br /></td></tr>
<tr class="separator:a88ab6decf78c152e746b7d8dc2dd931f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab6c52b35388890f2c563afbebfb456a6"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="classarmnn_1_1_i_tensor_handle.xhtml">ITensorHandle</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_cl_import_tensor_handle.xhtml#ab6c52b35388890f2c563afbebfb456a6">GetParent</a> () const override</td></tr>
<tr class="memdesc:ab6c52b35388890f2c563afbebfb456a6"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get the parent tensor if this is a subtensor.  <a href="classarmnn_1_1_cl_import_tensor_handle.xhtml#ab6c52b35388890f2c563afbebfb456a6">More...</a><br /></td></tr>
<tr class="separator:ab6c52b35388890f2c563afbebfb456a6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad3e63bb560123889f1ec98e40c5f8279"><td class="memItemLeft" align="right" valign="top">virtual arm_compute::DataType&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_cl_import_tensor_handle.xhtml#ad3e63bb560123889f1ec98e40c5f8279">GetDataType</a> () const override</td></tr>
<tr class="separator:ad3e63bb560123889f1ec98e40c5f8279"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af9c82a4633347a36ad10c8bfab384396"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_cl_import_tensor_handle.xhtml#af9c82a4633347a36ad10c8bfab384396">SetMemoryGroup</a> (const std::shared_ptr&lt; arm_compute::IMemoryGroup &gt; &amp;memoryGroup) override</td></tr>
<tr class="separator:af9c82a4633347a36ad10c8bfab384396"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a967f220393d291f71dabce0c06bf9b6c"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classarmnn_1_1_tensor_shape.xhtml">TensorShape</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_cl_import_tensor_handle.xhtml#a967f220393d291f71dabce0c06bf9b6c">GetStrides</a> () const override</td></tr>
<tr class="memdesc:a967f220393d291f71dabce0c06bf9b6c"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get the strides for each dimension ordered from largest to smallest where the smallest value is the same as the size of a single element in the tensor.  <a href="classarmnn_1_1_cl_import_tensor_handle.xhtml#a967f220393d291f71dabce0c06bf9b6c">More...</a><br /></td></tr>
<tr class="separator:a967f220393d291f71dabce0c06bf9b6c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8e8d2fbabcac19f9e12779080ddff54e"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classarmnn_1_1_tensor_shape.xhtml">TensorShape</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_cl_import_tensor_handle.xhtml#a8e8d2fbabcac19f9e12779080ddff54e">GetShape</a> () const override</td></tr>
<tr class="memdesc:a8e8d2fbabcac19f9e12779080ddff54e"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get the number of elements for each dimension ordered from slowest iterating dimension to fastest iterating dimension.  <a href="classarmnn_1_1_cl_import_tensor_handle.xhtml#a8e8d2fbabcac19f9e12779080ddff54e">More...</a><br /></td></tr>
<tr class="separator:a8e8d2fbabcac19f9e12779080ddff54e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:acd3ddbebcda4124217925ae36d551441"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_cl_import_tensor_handle.xhtml#acd3ddbebcda4124217925ae36d551441">SetImportFlags</a> (<a class="el" href="namespacearmnn.xhtml#a5b05f3b7208ec7cea3338e30057c0bac">MemorySourceFlags</a> importFlags)</td></tr>
<tr class="separator:acd3ddbebcda4124217925ae36d551441"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa1d3334a17a9f136fe65ed833fbf68b4"><td class="memItemLeft" align="right" valign="top"><a class="el" href="namespacearmnn.xhtml#a5b05f3b7208ec7cea3338e30057c0bac">MemorySourceFlags</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_cl_import_tensor_handle.xhtml#aa1d3334a17a9f136fe65ed833fbf68b4">GetImportFlags</a> () const override</td></tr>
<tr class="memdesc:aa1d3334a17a9f136fe65ed833fbf68b4"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get flags describing supported import sources.  <a href="classarmnn_1_1_cl_import_tensor_handle.xhtml#aa1d3334a17a9f136fe65ed833fbf68b4">More...</a><br /></td></tr>
<tr class="separator:aa1d3334a17a9f136fe65ed833fbf68b4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a468bf13728df2ac9ec772733047ff136"><td class="memItemLeft" align="right" valign="top">virtual bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_cl_import_tensor_handle.xhtml#a468bf13728df2ac9ec772733047ff136">Import</a> (void *memory, <a class="el" href="namespacearmnn.xhtml#a14fcd7f88d11cea0a018269dca5f9277">MemorySource</a> source) override</td></tr>
<tr class="memdesc:a468bf13728df2ac9ec772733047ff136"><td class="mdescLeft">&#160;</td><td class="mdescRight">Import externally allocated memory.  <a href="classarmnn_1_1_cl_import_tensor_handle.xhtml#a468bf13728df2ac9ec772733047ff136">More...</a><br /></td></tr>
<tr class="separator:a468bf13728df2ac9ec772733047ff136"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad809356ba1234e73c8a9b35bf1f145b0"><td class="memItemLeft" align="right" valign="top">virtual bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_cl_import_tensor_handle.xhtml#ad809356ba1234e73c8a9b35bf1f145b0">CanBeImported</a> (void *, <a class="el" href="namespacearmnn.xhtml#a14fcd7f88d11cea0a018269dca5f9277">MemorySource</a> source) override</td></tr>
<tr class="memdesc:ad809356ba1234e73c8a9b35bf1f145b0"><td class="mdescLeft">&#160;</td><td class="mdescRight">Implementations must determine if this memory block can be imported.  <a href="classarmnn_1_1_cl_import_tensor_handle.xhtml#ad809356ba1234e73c8a9b35bf1f145b0">More...</a><br /></td></tr>
<tr class="separator:ad809356ba1234e73c8a9b35bf1f145b0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pub_methods_classarmnn_1_1_i_tensor_handle"><td colspan="2" onclick="javascript:toggleInherit('pub_methods_classarmnn_1_1_i_tensor_handle')"><img src="closed.png" alt="-"/>&#160;Public Member Functions inherited from <a class="el" href="classarmnn_1_1_i_tensor_handle.xhtml">ITensorHandle</a></td></tr>
<tr class="memitem:aff95f063e2b8041b3d0e4b4dc0e3821d inherit pub_methods_classarmnn_1_1_i_tensor_handle"><td class="memItemLeft" align="right" valign="top">virtual&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_i_tensor_handle.xhtml#aff95f063e2b8041b3d0e4b4dc0e3821d">~ITensorHandle</a> ()</td></tr>
<tr class="separator:aff95f063e2b8041b3d0e4b4dc0e3821d inherit pub_methods_classarmnn_1_1_i_tensor_handle"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a270c8f844df649b9b0599c1e4db44cd3 inherit pub_methods_classarmnn_1_1_i_tensor_handle"><td class="memItemLeft" align="right" valign="top">void *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_i_tensor_handle.xhtml#a270c8f844df649b9b0599c1e4db44cd3">Map</a> (bool blocking=true)</td></tr>
<tr class="memdesc:a270c8f844df649b9b0599c1e4db44cd3 inherit pub_methods_classarmnn_1_1_i_tensor_handle"><td class="mdescLeft">&#160;</td><td class="mdescRight">Map the tensor data for access.  <a href="classarmnn_1_1_i_tensor_handle.xhtml#a270c8f844df649b9b0599c1e4db44cd3">More...</a><br /></td></tr>
<tr class="separator:a270c8f844df649b9b0599c1e4db44cd3 inherit pub_methods_classarmnn_1_1_i_tensor_handle"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab2be1412c91842a072ad94759f52033e inherit pub_methods_classarmnn_1_1_i_tensor_handle"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_i_tensor_handle.xhtml#ab2be1412c91842a072ad94759f52033e">Unmap</a> ()</td></tr>
<tr class="memdesc:ab2be1412c91842a072ad94759f52033e inherit pub_methods_classarmnn_1_1_i_tensor_handle"><td class="mdescLeft">&#160;</td><td class="mdescRight">Unmap the tensor data that was previously mapped with call to <a class="el" href="classarmnn_1_1_i_tensor_handle.xhtml#a9afbc055a017adf1bc38ee137bca6e90" title="Map the tensor data for access.">Map()</a>.  <a href="classarmnn_1_1_i_tensor_handle.xhtml#ab2be1412c91842a072ad94759f52033e">More...</a><br /></td></tr>
<tr class="separator:ab2be1412c91842a072ad94759f52033e inherit pub_methods_classarmnn_1_1_i_tensor_handle"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9eee7f9d4e230d684a7307ac4d75d8a9 inherit pub_methods_classarmnn_1_1_i_tensor_handle"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_i_tensor_handle.xhtml#a9eee7f9d4e230d684a7307ac4d75d8a9">Unimport</a> ()</td></tr>
<tr class="memdesc:a9eee7f9d4e230d684a7307ac4d75d8a9 inherit pub_methods_classarmnn_1_1_i_tensor_handle"><td class="mdescLeft">&#160;</td><td class="mdescRight">Unimport externally allocated memory.  <a href="classarmnn_1_1_i_tensor_handle.xhtml#a9eee7f9d4e230d684a7307ac4d75d8a9">More...</a><br /></td></tr>
<tr class="separator:a9eee7f9d4e230d684a7307ac4d75d8a9 inherit pub_methods_classarmnn_1_1_i_tensor_handle"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock">
<p class="definition">Definition at line <a class="el" href="_cl_import_tensor_handle_8hpp_source.xhtml#l00030">30</a> of file <a class="el" href="_cl_import_tensor_handle_8hpp_source.xhtml">ClImportTensorHandle.hpp</a>.</p>
</div><h2 class="groupheader">Constructor &amp; Destructor Documentation</h2>
<a id="a32afaf5065ada2423780bb3344d4442b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a32afaf5065ada2423780bb3344d4442b">&#9670;&nbsp;</a></span>ClImportTensorHandle() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarmnn_1_1_cl_import_tensor_handle.xhtml">ClImportTensorHandle</a> </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;&#160;</td>
          <td class="paramname"><em>tensorInfo</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="namespacearmnn.xhtml#a5b05f3b7208ec7cea3338e30057c0bac">MemorySourceFlags</a>&#160;</td>
          <td class="paramname"><em>importFlags</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_cl_import_tensor_handle_8hpp_source.xhtml#l00033">33</a> of file <a class="el" href="_cl_import_tensor_handle_8hpp_source.xhtml">ClImportTensorHandle.hpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;        : m_ImportFlags(importFlags)</div>
<div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;    {</div>
<div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;        armnn::armcomputetensorutils::BuildArmComputeTensor(m_Tensor, tensorInfo);</div>
<div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;    }</div>
</div><!-- fragment -->
</div>
</div>
<a id="a39862973c3aa223c1a60a76571a34067"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a39862973c3aa223c1a60a76571a34067">&#9670;&nbsp;</a></span>ClImportTensorHandle() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarmnn_1_1_cl_import_tensor_handle.xhtml">ClImportTensorHandle</a> </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;&#160;</td>
          <td class="paramname"><em>tensorInfo</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="namespacearmnn.xhtml#ad1d5cce2d9e9a5d61c243e5c989112e0">DataLayout</a>&#160;</td>
          <td class="paramname"><em>dataLayout</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="namespacearmnn.xhtml#a5b05f3b7208ec7cea3338e30057c0bac">MemorySourceFlags</a>&#160;</td>
          <td class="paramname"><em>importFlags</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_cl_import_tensor_handle_8hpp_source.xhtml#l00039">39</a> of file <a class="el" href="_cl_import_tensor_handle_8hpp_source.xhtml">ClImportTensorHandle.hpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;        : m_ImportFlags(importFlags), m_Imported(<span class="keyword">false</span>)</div>
<div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;    {</div>
<div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;        armnn::armcomputetensorutils::BuildArmComputeTensor(m_Tensor, tensorInfo, dataLayout);</div>
<div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;    }</div>
</div><!-- fragment -->
</div>
</div>
<h2 class="groupheader">Member Function Documentation</h2>
<a id="ac4c894e28b763523748ba2bb718d569d"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ac4c894e28b763523748ba2bb718d569d">&#9670;&nbsp;</a></span>Allocate()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual void Allocate </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Indicate to the memory manager that this resource is no longer active. </p>
<p>This is used to compute overlapping lifetimes of resources. </p>

<p>Implements <a class="el" href="classarmnn_1_1_i_tensor_handle.xhtml#a5cceed8b707a09bf27eb61f17acf8a88">ITensorHandle</a>.</p>

<p class="definition">Definition at line <a class="el" href="_cl_import_tensor_handle_8hpp_source.xhtml#l00049">49</a> of file <a class="el" href="_cl_import_tensor_handle_8hpp_source.xhtml">ClImportTensorHandle.hpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;{}</div>
</div><!-- fragment -->
</div>
</div>
<a id="ad809356ba1234e73c8a9b35bf1f145b0"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ad809356ba1234e73c8a9b35bf1f145b0">&#9670;&nbsp;</a></span>CanBeImported()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual bool CanBeImported </td>
          <td>(</td>
          <td class="paramtype">void *&#160;</td>
          <td class="paramname"><em>memory</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="namespacearmnn.xhtml#a14fcd7f88d11cea0a018269dca5f9277">MemorySource</a>&#160;</td>
          <td class="paramname"><em>source</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Implementations must determine if this memory block can be imported. </p>
<p>This might be based on alignment or memory source type. </p><dl class="section return"><dt>Returns</dt><dd>true if this memory can be imported. </dd>
<dd>
false by default, cannot be imported. </dd></dl>

<p>Reimplemented from <a class="el" href="classarmnn_1_1_i_tensor_handle.xhtml#a6caeedd55f4d685fd04b8fcb352dae4e">ITensorHandle</a>.</p>

<p class="definition">Definition at line <a class="el" href="_cl_import_tensor_handle_8hpp_source.xhtml#l00187">187</a> of file <a class="el" href="_cl_import_tensor_handle_8hpp_source.xhtml">ClImportTensorHandle.hpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00188"></a><span class="lineno">  188</span>&#160;    {</div>
<div class="line"><a name="l00189"></a><span class="lineno">  189</span>&#160;        <span class="keywordflow">if</span> (m_ImportFlags &amp; <span class="keyword">static_cast&lt;</span><a class="code" href="namespacearmnn.xhtml#a5b05f3b7208ec7cea3338e30057c0bac">MemorySourceFlags</a><span class="keyword">&gt;</span>(source))</div>
<div class="line"><a name="l00190"></a><span class="lineno">  190</span>&#160;        {</div>
<div class="line"><a name="l00191"></a><span class="lineno">  191</span>&#160;            <span class="keywordflow">if</span> (source == <a class="code" href="namespacearmnn.xhtml#a14fcd7f88d11cea0a018269dca5f9277a1131a914388fac73e5f07b0ba0aad523">MemorySource::Malloc</a>)</div>
<div class="line"><a name="l00192"></a><span class="lineno">  192</span>&#160;            {</div>
<div class="line"><a name="l00193"></a><span class="lineno">  193</span>&#160;                <span class="comment">// Returning true as ClImport() function will decide if memory can be imported or not</span></div>
<div class="line"><a name="l00194"></a><span class="lineno">  194</span>&#160;                <span class="keywordflow">return</span> <span class="keyword">true</span>;</div>
<div class="line"><a name="l00195"></a><span class="lineno">  195</span>&#160;            }</div>
<div class="line"><a name="l00196"></a><span class="lineno">  196</span>&#160;        }</div>
<div class="line"><a name="l00197"></a><span class="lineno">  197</span>&#160;        <span class="keywordflow">else</span></div>
<div class="line"><a name="l00198"></a><span class="lineno">  198</span>&#160;        {</div>
<div class="line"><a name="l00199"></a><span class="lineno">  199</span>&#160;            <span class="keywordflow">throw</span> MemoryImportException(<span class="stringliteral">&quot;ClImportTensorHandle::Incorrect import flag&quot;</span>);</div>
<div class="line"><a name="l00200"></a><span class="lineno">  200</span>&#160;        }</div>
<div class="line"><a name="l00201"></a><span class="lineno">  201</span>&#160;        <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line"><a name="l00202"></a><span class="lineno">  202</span>&#160;    }</div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="namespacearmnn.xhtml#a14fcd7f88d11cea0a018269dca5f9277a1131a914388fac73e5f07b0ba0aad523">armnn::Malloc</a>.</p>

</div>
</div>
<a id="ad3e63bb560123889f1ec98e40c5f8279"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ad3e63bb560123889f1ec98e40c5f8279">&#9670;&nbsp;</a></span>GetDataType()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual arm_compute::DataType GetDataType </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Implements <a class="el" href="classarmnn_1_1_i_cl_tensor_handle.xhtml#a3767f569fc55323ddf7b2ee57987d9c5">IClTensorHandle</a>.</p>

<p class="definition">Definition at line <a class="el" href="_cl_import_tensor_handle_8hpp_source.xhtml#l00062">62</a> of file <a class="el" href="_cl_import_tensor_handle_8hpp_source.xhtml">ClImportTensorHandle.hpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;    {</div>
<div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;        <span class="keywordflow">return</span> m_Tensor.info()-&gt;data_type();</div>
<div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;    }</div>
</div><!-- fragment -->
</div>
</div>
<a id="aa1d3334a17a9f136fe65ed833fbf68b4"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aa1d3334a17a9f136fe65ed833fbf68b4">&#9670;&nbsp;</a></span>GetImportFlags()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="namespacearmnn.xhtml#a5b05f3b7208ec7cea3338e30057c0bac">MemorySourceFlags</a> GetImportFlags </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Get flags describing supported import sources. </p>

<p>Reimplemented from <a class="el" href="classarmnn_1_1_i_tensor_handle.xhtml#a55cddc2dbb32d680cd85b635ba370e48">ITensorHandle</a>.</p>

<p class="definition">Definition at line <a class="el" href="_cl_import_tensor_handle_8hpp_source.xhtml#l00087">87</a> of file <a class="el" href="_cl_import_tensor_handle_8hpp_source.xhtml">ClImportTensorHandle.hpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;    {</div>
<div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;        <span class="keywordflow">return</span> m_ImportFlags;</div>
<div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;    }</div>
</div><!-- fragment -->
</div>
</div>
<a id="ab6c52b35388890f2c563afbebfb456a6"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ab6c52b35388890f2c563afbebfb456a6">&#9670;&nbsp;</a></span>GetParent()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual <a class="el" href="classarmnn_1_1_i_tensor_handle.xhtml">ITensorHandle</a>* GetParent </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Get the parent tensor if this is a subtensor. </p>
<dl class="section return"><dt>Returns</dt><dd>a pointer to the parent tensor. Otherwise nullptr if not a subtensor. </dd></dl>

<p>Implements <a class="el" href="classarmnn_1_1_i_tensor_handle.xhtml#a437893b8dcf58a0b68b70e1ad7933be6">ITensorHandle</a>.</p>

<p class="definition">Definition at line <a class="el" href="_cl_import_tensor_handle_8hpp_source.xhtml#l00060">60</a> of file <a class="el" href="_cl_import_tensor_handle_8hpp_source.xhtml">ClImportTensorHandle.hpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;{ <span class="keywordflow">return</span> <span class="keyword">nullptr</span>; }</div>
</div><!-- fragment -->
</div>
</div>
<a id="a8e8d2fbabcac19f9e12779080ddff54e"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a8e8d2fbabcac19f9e12779080ddff54e">&#9670;&nbsp;</a></span>GetShape()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarmnn_1_1_tensor_shape.xhtml">TensorShape</a> GetShape </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Get the number of elements for each dimension ordered from slowest iterating dimension to fastest iterating dimension. </p>
<dl class="section return"><dt>Returns</dt><dd>a <a class="el" href="classarmnn_1_1_tensor_shape.xhtml">TensorShape</a> filled with the number of elements for each dimension. </dd></dl>

<p>Implements <a class="el" href="classarmnn_1_1_i_tensor_handle.xhtml#affd5aae75cad90f472f96cfd25a13f29">ITensorHandle</a>.</p>

<p class="definition">Definition at line <a class="el" href="_cl_import_tensor_handle_8hpp_source.xhtml#l00077">77</a> of file <a class="el" href="_cl_import_tensor_handle_8hpp_source.xhtml">ClImportTensorHandle.hpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;    {</div>
<div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;        <span class="keywordflow">return</span> armcomputetensorutils::GetShape(m_Tensor.info()-&gt;tensor_shape());</div>
<div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;    }</div>
</div><!-- fragment -->
</div>
</div>
<a id="a967f220393d291f71dabce0c06bf9b6c"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a967f220393d291f71dabce0c06bf9b6c">&#9670;&nbsp;</a></span>GetStrides()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarmnn_1_1_tensor_shape.xhtml">TensorShape</a> GetStrides </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Get the strides for each dimension ordered from largest to smallest where the smallest value is the same as the size of a single element in the tensor. </p>
<dl class="section return"><dt>Returns</dt><dd>a <a class="el" href="classarmnn_1_1_tensor_shape.xhtml">TensorShape</a> filled with the strides for each dimension </dd></dl>

<p>Implements <a class="el" href="classarmnn_1_1_i_tensor_handle.xhtml#a30c3e09ce55369b66469443a4ca5ef03">ITensorHandle</a>.</p>

<p class="definition">Definition at line <a class="el" href="_cl_import_tensor_handle_8hpp_source.xhtml#l00072">72</a> of file <a class="el" href="_cl_import_tensor_handle_8hpp_source.xhtml">ClImportTensorHandle.hpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;    {</div>
<div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;        <span class="keywordflow">return</span> armcomputetensorutils::GetStrides(m_Tensor.info()-&gt;strides_in_bytes());</div>
<div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;    }</div>
</div><!-- fragment -->
</div>
</div>
<a id="ab9c5e9d2f0654981bdc8fff0ff902d51"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ab9c5e9d2f0654981bdc8fff0ff902d51">&#9670;&nbsp;</a></span>GetTensor() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">arm_compute::CLTensor const&amp; GetTensor </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Implements <a class="el" href="classarmnn_1_1_i_cl_tensor_handle.xhtml#a5958bbfb7eb593338681060e8026b7b7">IClTensorHandle</a>.</p>

<p class="definition">Definition at line <a class="el" href="_cl_import_tensor_handle_8hpp_source.xhtml#l00048">48</a> of file <a class="el" href="_cl_import_tensor_handle_8hpp_source.xhtml">ClImportTensorHandle.hpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;{ <span class="keywordflow">return</span> m_Tensor; }</div>
</div><!-- fragment -->
</div>
</div>
<a id="aa7d00659f5bca101f9a20b4ac22df577"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aa7d00659f5bca101f9a20b4ac22df577">&#9670;&nbsp;</a></span>GetTensor() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">arm_compute::CLTensor&amp; GetTensor </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Implements <a class="el" href="classarmnn_1_1_i_cl_tensor_handle.xhtml#a11512b9ce51a09d07d34334eb4caa5b5">IClTensorHandle</a>.</p>

<p class="definition">Definition at line <a class="el" href="_cl_import_tensor_handle_8hpp_source.xhtml#l00047">47</a> of file <a class="el" href="_cl_import_tensor_handle_8hpp_source.xhtml">ClImportTensorHandle.hpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;{ <span class="keywordflow">return</span> m_Tensor; }</div>
</div><!-- fragment -->
</div>
</div>
<a id="a468bf13728df2ac9ec772733047ff136"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a468bf13728df2ac9ec772733047ff136">&#9670;&nbsp;</a></span>Import()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual bool Import </td>
          <td>(</td>
          <td class="paramtype">void *&#160;</td>
          <td class="paramname"><em>memory</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="namespacearmnn.xhtml#a14fcd7f88d11cea0a018269dca5f9277">MemorySource</a>&#160;</td>
          <td class="paramname"><em>source</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Import externally allocated memory. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">memory</td><td>base address of the memory being imported. </td></tr>
    <tr><td class="paramname">source</td><td>source of the allocation for the memory being imported. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>true on success or false on failure </dd></dl>

<p>Reimplemented from <a class="el" href="classarmnn_1_1_i_tensor_handle.xhtml#a4f81a9eff30c9b9fe76f5b83af470ba7">ITensorHandle</a>.</p>

<p class="definition">Definition at line <a class="el" href="_cl_import_tensor_handle_8hpp_source.xhtml#l00092">92</a> of file <a class="el" href="_cl_import_tensor_handle_8hpp_source.xhtml">ClImportTensorHandle.hpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;    {</div>
<div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;        <span class="keywordflow">if</span> (m_ImportFlags &amp; <span class="keyword">static_cast&lt;</span><a class="code" href="namespacearmnn.xhtml#a5b05f3b7208ec7cea3338e30057c0bac">MemorySourceFlags</a><span class="keyword">&gt;</span>(source))</div>
<div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;        {</div>
<div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;            <span class="keywordflow">if</span> (source == <a class="code" href="namespacearmnn.xhtml#a14fcd7f88d11cea0a018269dca5f9277a1131a914388fac73e5f07b0ba0aad523">MemorySource::Malloc</a>)</div>
<div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;            {</div>
<div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;                <span class="keyword">const</span> cl_import_properties_arm importProperties[] =</div>
<div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;                {</div>
<div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;                    CL_IMPORT_TYPE_ARM,</div>
<div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;                    CL_IMPORT_TYPE_HOST_ARM,</div>
<div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;                    0</div>
<div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;                };</div>
<div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;                <span class="keywordflow">return</span> ClImport(importProperties, memory);</div>
<div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;            }</div>
<div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;            <span class="keywordflow">if</span> (source == <a class="code" href="namespacearmnn.xhtml#a14fcd7f88d11cea0a018269dca5f9277a966e13d8aabbff3966a5cd28d67b4846">MemorySource::DmaBuf</a>)</div>
<div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;            {</div>
<div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;                <span class="keyword">const</span> cl_import_properties_arm importProperties[] =</div>
<div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;                {</div>
<div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;                    CL_IMPORT_TYPE_ARM,</div>
<div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;                    CL_IMPORT_TYPE_DMA_BUF_ARM,</div>
<div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;                    CL_IMPORT_DMA_BUF_DATA_CONSISTENCY_WITH_HOST_ARM,</div>
<div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;                    CL_TRUE,</div>
<div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;                    0</div>
<div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;                };</div>
<div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160; </div>
<div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;                <span class="keywordflow">return</span> ClImport(importProperties, memory);</div>
<div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160; </div>
<div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;            }</div>
<div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;            <span class="keywordflow">if</span> (source == <a class="code" href="namespacearmnn.xhtml#a14fcd7f88d11cea0a018269dca5f9277a7f9067c59dd34aca0ad09a7f283ed1f8">MemorySource::DmaBufProtected</a>)</div>
<div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;            {</div>
<div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;                <span class="keyword">const</span> cl_import_properties_arm importProperties[] =</div>
<div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;                {</div>
<div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;                    CL_IMPORT_TYPE_ARM,</div>
<div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;                    CL_IMPORT_TYPE_DMA_BUF_ARM,</div>
<div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;                    CL_IMPORT_TYPE_PROTECTED_ARM,</div>
<div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;                    CL_TRUE,</div>
<div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;                    0</div>
<div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;                };</div>
<div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160; </div>
<div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;                <span class="keywordflow">return</span> ClImport(importProperties, memory, <span class="keyword">true</span>);</div>
<div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160; </div>
<div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;            }</div>
<div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;            <span class="comment">// Case for importing memory allocated by OpenCl externally directly into the tensor</span></div>
<div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;            <span class="keywordflow">else</span> <span class="keywordflow">if</span> (source == <a class="code" href="namespacearmnn.xhtml#a14fcd7f88d11cea0a018269dca5f9277a4bafe7f8ad22a8eca972a7ac5eb6702e">MemorySource::Gralloc</a>)</div>
<div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;            {</div>
<div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;                <span class="comment">// m_Tensor not yet Allocated</span></div>
<div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;                <span class="keywordflow">if</span> (!m_Imported &amp;&amp; !m_Tensor.buffer())</div>
<div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;                {</div>
<div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;                    <span class="comment">// Importing memory allocated by OpenCl into the tensor directly.</span></div>
<div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;                    <a class="code" href="namespacearmnn.xhtml#a67a0db04d321a74b7e7fcfd3f1a3f70b">arm_compute::Status</a> status =</div>
<div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;                        m_Tensor.allocator()-&gt;import_memory(cl::Buffer(<span class="keyword">static_cast&lt;</span>cl_mem<span class="keyword">&gt;</span>(memory)));</div>
<div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;                    m_Imported = bool(status);</div>
<div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;                    <span class="keywordflow">if</span> (!m_Imported)</div>
<div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;                    {</div>
<div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;                        <span class="keywordflow">throw</span> MemoryImportException(status.error_description());</div>
<div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;                    }</div>
<div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;                    <span class="keywordflow">return</span> m_Imported;</div>
<div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;                }</div>
<div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160; </div>
<div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;                <span class="comment">// m_Tensor.buffer() initially allocated with Allocate().</span></div>
<div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;                <span class="keywordflow">else</span> <span class="keywordflow">if</span> (!m_Imported &amp;&amp; m_Tensor.buffer())</div>
<div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;                {</div>
<div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;                    <span class="keywordflow">throw</span> MemoryImportException(</div>
<div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;                        <span class="stringliteral">&quot;ClImportTensorHandle::Import Attempting to import on an already allocated tensor&quot;</span>);</div>
<div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;                }</div>
<div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160; </div>
<div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;                <span class="comment">// m_Tensor.buffer() previously imported.</span></div>
<div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160;                <span class="keywordflow">else</span> <span class="keywordflow">if</span> (m_Imported)</div>
<div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160;                {</div>
<div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160;                    <span class="comment">// Importing memory allocated by OpenCl into the tensor directly.</span></div>
<div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160;                    <a class="code" href="namespacearmnn.xhtml#a67a0db04d321a74b7e7fcfd3f1a3f70b">arm_compute::Status</a> status =</div>
<div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160;                        m_Tensor.allocator()-&gt;import_memory(cl::Buffer(<span class="keyword">static_cast&lt;</span>cl_mem<span class="keyword">&gt;</span>(memory)));</div>
<div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;                    m_Imported = bool(status);</div>
<div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160;                    <span class="keywordflow">if</span> (!m_Imported)</div>
<div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160;                    {</div>
<div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160;                        <span class="keywordflow">throw</span> MemoryImportException(status.error_description());</div>
<div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160;                    }</div>
<div class="line"><a name="l00169"></a><span class="lineno">  169</span>&#160;                    <span class="keywordflow">return</span> m_Imported;</div>
<div class="line"><a name="l00170"></a><span class="lineno">  170</span>&#160;                }</div>
<div class="line"><a name="l00171"></a><span class="lineno">  171</span>&#160;                <span class="keywordflow">else</span></div>
<div class="line"><a name="l00172"></a><span class="lineno">  172</span>&#160;                {</div>
<div class="line"><a name="l00173"></a><span class="lineno">  173</span>&#160;                    <span class="keywordflow">throw</span> MemoryImportException(<span class="stringliteral">&quot;ClImportTensorHandle::Failed to Import Gralloc Memory&quot;</span>);</div>
<div class="line"><a name="l00174"></a><span class="lineno">  174</span>&#160;                }</div>
<div class="line"><a name="l00175"></a><span class="lineno">  175</span>&#160;            }</div>
<div class="line"><a name="l00176"></a><span class="lineno">  176</span>&#160;            <span class="keywordflow">else</span></div>
<div class="line"><a name="l00177"></a><span class="lineno">  177</span>&#160;            {</div>
<div class="line"><a name="l00178"></a><span class="lineno">  178</span>&#160;                <span class="keywordflow">throw</span> MemoryImportException(<span class="stringliteral">&quot;ClImportTensorHandle::Import flag is not supported&quot;</span>);</div>
<div class="line"><a name="l00179"></a><span class="lineno">  179</span>&#160;            }</div>
<div class="line"><a name="l00180"></a><span class="lineno">  180</span>&#160;        }</div>
<div class="line"><a name="l00181"></a><span class="lineno">  181</span>&#160;        <span class="keywordflow">else</span></div>
<div class="line"><a name="l00182"></a><span class="lineno">  182</span>&#160;        {</div>
<div class="line"><a name="l00183"></a><span class="lineno">  183</span>&#160;            <span class="keywordflow">throw</span> MemoryImportException(<span class="stringliteral">&quot;ClImportTensorHandle::Incorrect import flag&quot;</span>);</div>
<div class="line"><a name="l00184"></a><span class="lineno">  184</span>&#160;        }</div>
<div class="line"><a name="l00185"></a><span class="lineno">  185</span>&#160;    }</div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="namespacearmnn.xhtml#a14fcd7f88d11cea0a018269dca5f9277a966e13d8aabbff3966a5cd28d67b4846">armnn::DmaBuf</a>, <a class="el" href="namespacearmnn.xhtml#a14fcd7f88d11cea0a018269dca5f9277a7f9067c59dd34aca0ad09a7f283ed1f8">armnn::DmaBufProtected</a>, <a class="el" href="namespacearmnn.xhtml#a14fcd7f88d11cea0a018269dca5f9277a4bafe7f8ad22a8eca972a7ac5eb6702e">armnn::Gralloc</a>, and <a class="el" href="namespacearmnn.xhtml#a14fcd7f88d11cea0a018269dca5f9277a1131a914388fac73e5f07b0ba0aad523">armnn::Malloc</a>.</p>

</div>
</div>
<a id="a19aa18d78d5ac31e3a3c8f782f0e8606"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a19aa18d78d5ac31e3a3c8f782f0e8606">&#9670;&nbsp;</a></span>Manage()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual void Manage </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Indicate to the memory manager that this resource is active. </p>
<p>This is used to compute overlapping lifetimes of resources. </p>

<p>Implements <a class="el" href="classarmnn_1_1_i_tensor_handle.xhtml#a04149d0f9b9c54c05e95693111490daf">ITensorHandle</a>.</p>

<p class="definition">Definition at line <a class="el" href="_cl_import_tensor_handle_8hpp_source.xhtml#l00050">50</a> of file <a class="el" href="_cl_import_tensor_handle_8hpp_source.xhtml">ClImportTensorHandle.hpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;{}</div>
</div><!-- fragment -->
</div>
</div>
<a id="abe9956a614f816b4181a47a046e42db9"></a>
<h2 class="memtitle"><span class="permalink"><a href="#abe9956a614f816b4181a47a046e42db9">&#9670;&nbsp;</a></span>Map()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual const void* Map </td>
          <td>(</td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>blocking</em> = <code>true</code></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Map the tensor data for access. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">blocking</td><td>hint to block the calling thread until all other accesses are complete. (backend dependent) </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>pointer to the first element of the mapped data. </dd></dl>

<p>Implements <a class="el" href="classarmnn_1_1_i_tensor_handle.xhtml#a9afbc055a017adf1bc38ee137bca6e90">ITensorHandle</a>.</p>

<p class="definition">Definition at line <a class="el" href="_cl_import_tensor_handle_8hpp_source.xhtml#l00052">52</a> of file <a class="el" href="_cl_import_tensor_handle_8hpp_source.xhtml">ClImportTensorHandle.hpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;    {</div>
<div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;        <a class="code" href="namespacearmnn.xhtml#a44affeeb090c3c6a3062830562672e84">IgnoreUnused</a>(blocking);</div>
<div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;        <span class="keywordflow">return</span> <span class="keyword">static_cast&lt;</span><span class="keyword">const </span><span class="keywordtype">void</span>*<span class="keyword">&gt;</span>(m_Tensor.buffer() + m_Tensor.info()-&gt;offset_first_element_in_bytes());</div>
<div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;    }</div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="_ignore_unused_8hpp_source.xhtml#l00014">armnn::IgnoreUnused()</a>.</p>

</div>
</div>
<a id="acd3ddbebcda4124217925ae36d551441"></a>
<h2 class="memtitle"><span class="permalink"><a href="#acd3ddbebcda4124217925ae36d551441">&#9670;&nbsp;</a></span>SetImportFlags()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void SetImportFlags </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="namespacearmnn.xhtml#a5b05f3b7208ec7cea3338e30057c0bac">MemorySourceFlags</a>&#160;</td>
          <td class="paramname"><em>importFlags</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_cl_import_tensor_handle_8hpp_source.xhtml#l00082">82</a> of file <a class="el" href="_cl_import_tensor_handle_8hpp_source.xhtml">ClImportTensorHandle.hpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;    {</div>
<div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;        m_ImportFlags = importFlags;</div>
<div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;    }</div>
</div><!-- fragment -->
</div>
</div>
<a id="af9c82a4633347a36ad10c8bfab384396"></a>
<h2 class="memtitle"><span class="permalink"><a href="#af9c82a4633347a36ad10c8bfab384396">&#9670;&nbsp;</a></span>SetMemoryGroup()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual void SetMemoryGroup </td>
          <td>(</td>
          <td class="paramtype">const std::shared_ptr&lt; arm_compute::IMemoryGroup &gt; &amp;&#160;</td>
          <td class="paramname"><em>memoryGroup</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Implements <a class="el" href="classarmnn_1_1_i_cl_tensor_handle.xhtml#a658c8c0848fa9d1fb2fc6c1422bfe3e8">IClTensorHandle</a>.</p>

<p class="definition">Definition at line <a class="el" href="_cl_import_tensor_handle_8hpp_source.xhtml#l00067">67</a> of file <a class="el" href="_cl_import_tensor_handle_8hpp_source.xhtml">ClImportTensorHandle.hpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;    {</div>
<div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;        <a class="code" href="namespacearmnn.xhtml#a44affeeb090c3c6a3062830562672e84">IgnoreUnused</a>(memoryGroup);</div>
<div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;    }</div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="_ignore_unused_8hpp_source.xhtml#l00014">armnn::IgnoreUnused()</a>.</p>

</div>
</div>
<a id="a88ab6decf78c152e746b7d8dc2dd931f"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a88ab6decf78c152e746b7d8dc2dd931f">&#9670;&nbsp;</a></span>Unmap()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual void Unmap </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Unmap the tensor data. </p>

<p>Implements <a class="el" href="classarmnn_1_1_i_tensor_handle.xhtml#a563609828050f1b3a7868c23f3365923">ITensorHandle</a>.</p>

<p class="definition">Definition at line <a class="el" href="_cl_import_tensor_handle_8hpp_source.xhtml#l00058">58</a> of file <a class="el" href="_cl_import_tensor_handle_8hpp_source.xhtml">ClImportTensorHandle.hpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;{}</div>
</div><!-- fragment -->
</div>
</div>
<hr/>The documentation for this class was generated from the following file:<ul>
<li>src/backends/cl/<a class="el" href="_cl_import_tensor_handle_8hpp_source.xhtml">ClImportTensorHandle.hpp</a></li>
</ul>
</div><!-- contents -->
</div><!-- doc-content -->
<div class="ttc" id="anamespacearmnn_xhtml_a14fcd7f88d11cea0a018269dca5f9277a966e13d8aabbff3966a5cd28d67b4846"><div class="ttname"><a href="namespacearmnn.xhtml#a14fcd7f88d11cea0a018269dca5f9277a966e13d8aabbff3966a5cd28d67b4846">armnn::MemorySource::DmaBuf</a></div><div class="ttdeci">@ DmaBuf</div></div>
<div class="ttc" id="anamespacearmnn_xhtml_a14fcd7f88d11cea0a018269dca5f9277a1131a914388fac73e5f07b0ba0aad523"><div class="ttname"><a href="namespacearmnn.xhtml#a14fcd7f88d11cea0a018269dca5f9277a1131a914388fac73e5f07b0ba0aad523">armnn::MemorySource::Malloc</a></div><div class="ttdeci">@ Malloc</div></div>
<div class="ttc" id="anamespacearmnn_xhtml_a44affeeb090c3c6a3062830562672e84"><div class="ttname"><a href="namespacearmnn.xhtml#a44affeeb090c3c6a3062830562672e84">armnn::IgnoreUnused</a></div><div class="ttdeci">void IgnoreUnused(Ts &amp;&amp;...)</div><div class="ttdef"><b>Definition:</b> <a href="_ignore_unused_8hpp_source.xhtml#l00014">IgnoreUnused.hpp:14</a></div></div>
<div class="ttc" id="anamespacearmnn_xhtml_a67a0db04d321a74b7e7fcfd3f1a3f70b"><div class="ttname"><a href="namespacearmnn.xhtml#a67a0db04d321a74b7e7fcfd3f1a3f70b">armnn::Status</a></div><div class="ttdeci">Status</div><div class="ttdef"><b>Definition:</b> <a href="_types_8hpp_source.xhtml#l00042">Types.hpp:42</a></div></div>
<div class="ttc" id="anamespacearmnn_xhtml_a14fcd7f88d11cea0a018269dca5f9277a7f9067c59dd34aca0ad09a7f283ed1f8"><div class="ttname"><a href="namespacearmnn.xhtml#a14fcd7f88d11cea0a018269dca5f9277a7f9067c59dd34aca0ad09a7f283ed1f8">armnn::MemorySource::DmaBufProtected</a></div><div class="ttdeci">@ DmaBufProtected</div></div>
<div class="ttc" id="anamespacearmnn_xhtml_a5b05f3b7208ec7cea3338e30057c0bac"><div class="ttname"><a href="namespacearmnn.xhtml#a5b05f3b7208ec7cea3338e30057c0bac">armnn::MemorySourceFlags</a></div><div class="ttdeci">unsigned int MemorySourceFlags</div><div class="ttdef"><b>Definition:</b> <a href="_memory_sources_8hpp_source.xhtml#l00015">MemorySources.hpp:15</a></div></div>
<div class="ttc" id="anamespacearmnn_xhtml_a14fcd7f88d11cea0a018269dca5f9277a4bafe7f8ad22a8eca972a7ac5eb6702e"><div class="ttname"><a href="namespacearmnn.xhtml#a14fcd7f88d11cea0a018269dca5f9277a4bafe7f8ad22a8eca972a7ac5eb6702e">armnn::MemorySource::Gralloc</a></div><div class="ttdeci">@ Gralloc</div></div>
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="namespacearmnn.xhtml">armnn</a></li><li class="navelem"><a class="el" href="classarmnn_1_1_cl_import_tensor_handle.xhtml">ClImportTensorHandle</a></li>
    <li class="footer">Generated on Thu May 18 2023 10:35:46 for ArmNN by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.17 </li>
  </ul>
</div>
</body>
</html>
