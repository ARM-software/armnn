<!-- Copyright (c) 2020 ARM Limited. -->
<!--                                 -->
<!-- SPDX-License-Identifier: MIT    -->
<!--                                 -->
<!-- HTML header for doxygen 1.8.13-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.13"/>
<meta name="robots" content="NOINDEX, NOFOLLOW" />
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>ArmNN: DelegateOptions Class Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script><script type="text/javascript" src="http://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="stylesheet.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <img alt="ArmNN" src="Arm_NN_horizontal_blue.png" style="max-width: 10rem; margin-top: .5rem; margin-left 10px"/>
  <td style="padding-left: 0.5em;">
   <div id="projectname">
   &#160;<span id="projectnumber">22.11</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.13 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
$(document).ready(function(){initNavTree('classarmnn_delegate_1_1_delegate_options.xhtml','');});
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="summary">
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="classarmnn_delegate_1_1_delegate_options-members.xhtml">List of all members</a>  </div>
  <div class="headertitle">
<div class="title">DelegateOptions Class Reference</div>  </div>
</div><!--header-->
<div class="contents">

<p><code>#include &lt;<a class="el" href="_delegate_options_8hpp_source.xhtml">DelegateOptions.hpp</a>&gt;</code></p>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:a318c3a715a80b7288e39c7daa8ef8494"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_delegate_1_1_delegate_options.xhtml#a318c3a715a80b7288e39c7daa8ef8494">DelegateOptions</a> (<a class="el" href="namespacearmnn.xhtml#ae2f04a162585c0a5222a537efd5456ae">armnn::Compute</a> computeDevice, const std::vector&lt; <a class="el" href="structarmnn_1_1_backend_options.xhtml">armnn::BackendOptions</a> &gt; &amp;backendOptions={}, <a class="el" href="classarmnn_1_1_optional.xhtml">armnn::Optional</a>&lt; <a class="el" href="namespacearmnn.xhtml#a93a3ba385cad27c4774e5fe64c025d3d">armnn::LogSeverity</a> &gt; logSeverityLevel=<a class="el" href="structarmnn_1_1_empty_optional.xhtml">armnn::EmptyOptional</a>())</td></tr>
<tr class="separator:a318c3a715a80b7288e39c7daa8ef8494"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1330ed498a1643097406598b87438d3e"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_delegate_1_1_delegate_options.xhtml#a1330ed498a1643097406598b87438d3e">DelegateOptions</a> (const std::vector&lt; <a class="el" href="classarmnn_1_1_backend_id.xhtml">armnn::BackendId</a> &gt; &amp;backends, const std::vector&lt; <a class="el" href="structarmnn_1_1_backend_options.xhtml">armnn::BackendOptions</a> &gt; &amp;backendOptions={}, <a class="el" href="classarmnn_1_1_optional.xhtml">armnn::Optional</a>&lt; <a class="el" href="namespacearmnn.xhtml#a93a3ba385cad27c4774e5fe64c025d3d">armnn::LogSeverity</a> &gt; logSeverityLevel=<a class="el" href="structarmnn_1_1_empty_optional.xhtml">armnn::EmptyOptional</a>())</td></tr>
<tr class="separator:a1330ed498a1643097406598b87438d3e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1836bbbc92942bde6339d5073400250d"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_delegate_1_1_delegate_options.xhtml#a1836bbbc92942bde6339d5073400250d">DelegateOptions</a> (<a class="el" href="namespacearmnn.xhtml#ae2f04a162585c0a5222a537efd5456ae">armnn::Compute</a> computeDevice, const <a class="el" href="structarmnn_1_1_optimizer_options.xhtml">armnn::OptimizerOptions</a> &amp;optimizerOptions, const <a class="el" href="classarmnn_1_1_optional.xhtml">armnn::Optional</a>&lt; <a class="el" href="namespacearmnn.xhtml#a93a3ba385cad27c4774e5fe64c025d3d">armnn::LogSeverity</a> &gt; &amp;logSeverityLevel=<a class="el" href="structarmnn_1_1_empty_optional.xhtml">armnn::EmptyOptional</a>(), const <a class="el" href="classarmnn_1_1_optional.xhtml">armnn::Optional</a>&lt; <a class="el" href="namespacearmnn.xhtml#a15f3ad9b5e4e3d46b0a6dda246a7bc28">armnn::DebugCallbackFunction</a> &gt; &amp;func=<a class="el" href="structarmnn_1_1_empty_optional.xhtml">armnn::EmptyOptional</a>())</td></tr>
<tr class="separator:a1836bbbc92942bde6339d5073400250d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a18f754e97c5eab2a93b6018b4fdf336e"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_delegate_1_1_delegate_options.xhtml#a18f754e97c5eab2a93b6018b4fdf336e">DelegateOptions</a> (const std::vector&lt; <a class="el" href="classarmnn_1_1_backend_id.xhtml">armnn::BackendId</a> &gt; &amp;backends, const <a class="el" href="structarmnn_1_1_optimizer_options.xhtml">armnn::OptimizerOptions</a> &amp;optimizerOptions, const <a class="el" href="classarmnn_1_1_optional.xhtml">armnn::Optional</a>&lt; <a class="el" href="namespacearmnn.xhtml#a93a3ba385cad27c4774e5fe64c025d3d">armnn::LogSeverity</a> &gt; &amp;logSeverityLevel=<a class="el" href="structarmnn_1_1_empty_optional.xhtml">armnn::EmptyOptional</a>(), const <a class="el" href="classarmnn_1_1_optional.xhtml">armnn::Optional</a>&lt; <a class="el" href="namespacearmnn.xhtml#a15f3ad9b5e4e3d46b0a6dda246a7bc28">armnn::DebugCallbackFunction</a> &gt; &amp;func=<a class="el" href="structarmnn_1_1_empty_optional.xhtml">armnn::EmptyOptional</a>())</td></tr>
<tr class="separator:a18f754e97c5eab2a93b6018b4fdf336e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9b42e80e19a78b145084aa0d22d422cb"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_delegate_1_1_delegate_options.xhtml#a9b42e80e19a78b145084aa0d22d422cb">DelegateOptions</a> (char const *const *options_keys, char const *const *options_values, size_t num_options, void(*report_error)(const char *))</td></tr>
<tr class="memdesc:a9b42e80e19a78b145084aa0d22d422cb"><td class="mdescLeft">&#160;</td><td class="mdescRight">This constructor processes delegate options in form of command line arguments.  <a href="#a9b42e80e19a78b145084aa0d22d422cb">More...</a><br /></td></tr>
<tr class="separator:a9b42e80e19a78b145084aa0d22d422cb"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad95feca4087d8e42ecacc1950a3d3901"><td class="memItemLeft" align="right" valign="top">const std::vector&lt; <a class="el" href="classarmnn_1_1_backend_id.xhtml">armnn::BackendId</a> &gt; &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_delegate_1_1_delegate_options.xhtml#ad95feca4087d8e42ecacc1950a3d3901">GetBackends</a> () const</td></tr>
<tr class="separator:ad95feca4087d8e42ecacc1950a3d3901"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad9d8dd6ed903c0ae3c4baa3e9d2e4ea5"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_delegate_1_1_delegate_options.xhtml#ad9d8dd6ed903c0ae3c4baa3e9d2e4ea5">SetBackends</a> (const std::vector&lt; <a class="el" href="classarmnn_1_1_backend_id.xhtml">armnn::BackendId</a> &gt; &amp;backends)</td></tr>
<tr class="separator:ad9d8dd6ed903c0ae3c4baa3e9d2e4ea5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8a27ca08addbe8e28ea471eacd053c51"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_delegate_1_1_delegate_options.xhtml#a8a27ca08addbe8e28ea471eacd053c51">SetDynamicBackendsPath</a> (const std::string &amp;dynamicBackendsPath)</td></tr>
<tr class="separator:a8a27ca08addbe8e28ea471eacd053c51"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae3e575de32e1d9d3e7ff51dc84146b76"><td class="memItemLeft" align="right" valign="top">const std::string &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_delegate_1_1_delegate_options.xhtml#ae3e575de32e1d9d3e7ff51dc84146b76">GetDynamicBackendsPath</a> () const</td></tr>
<tr class="separator:ae3e575de32e1d9d3e7ff51dc84146b76"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7ee32e8d6a1ec9d0c86690525b805f58"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_delegate_1_1_delegate_options.xhtml#a7ee32e8d6a1ec9d0c86690525b805f58">SetGpuProfilingState</a> (bool gpuProfilingState)</td></tr>
<tr class="separator:a7ee32e8d6a1ec9d0c86690525b805f58"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8018270f803b5931d0e8fc90894adabf"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_delegate_1_1_delegate_options.xhtml#a8018270f803b5931d0e8fc90894adabf">GetGpuProfilingState</a> ()</td></tr>
<tr class="separator:a8018270f803b5931d0e8fc90894adabf"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a601170c5bc75674017b891c58f9f175b"><td class="memItemLeft" align="right" valign="top">const std::vector&lt; <a class="el" href="structarmnn_1_1_backend_options.xhtml">armnn::BackendOptions</a> &gt; &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_delegate_1_1_delegate_options.xhtml#a601170c5bc75674017b891c58f9f175b">GetBackendOptions</a> () const</td></tr>
<tr class="separator:a601170c5bc75674017b891c58f9f175b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8b99570afa7d17ce4b1c7dab770fe467"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_delegate_1_1_delegate_options.xhtml#a8b99570afa7d17ce4b1c7dab770fe467">AddBackendOption</a> (const <a class="el" href="structarmnn_1_1_backend_options.xhtml">armnn::BackendOptions</a> &amp;option)</td></tr>
<tr class="memdesc:a8b99570afa7d17ce4b1c7dab770fe467"><td class="mdescLeft">&#160;</td><td class="mdescRight">Appends a backend option to the list of backend options.  <a href="#a8b99570afa7d17ce4b1c7dab770fe467">More...</a><br /></td></tr>
<tr class="separator:a8b99570afa7d17ce4b1c7dab770fe467"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a98cd1055c58e98f7009c4e770fac96ec"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_delegate_1_1_delegate_options.xhtml#a98cd1055c58e98f7009c4e770fac96ec">SetLoggingSeverity</a> (const <a class="el" href="namespacearmnn.xhtml#a93a3ba385cad27c4774e5fe64c025d3d">armnn::LogSeverity</a> &amp;level)</td></tr>
<tr class="memdesc:a98cd1055c58e98f7009c4e770fac96ec"><td class="mdescLeft">&#160;</td><td class="mdescRight">Sets the severity level for logging within ArmNN that will be used on creation of the delegate.  <a href="#a98cd1055c58e98f7009c4e770fac96ec">More...</a><br /></td></tr>
<tr class="separator:a98cd1055c58e98f7009c4e770fac96ec"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a337e16dd51a972e2162870e01d48dbc2"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_delegate_1_1_delegate_options.xhtml#a337e16dd51a972e2162870e01d48dbc2">SetLoggingSeverity</a> (const std::string &amp;level)</td></tr>
<tr class="separator:a337e16dd51a972e2162870e01d48dbc2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad0c06976f83fdc6c393ad85ea23d97b6"><td class="memItemLeft" align="right" valign="top"><a class="el" href="namespacearmnn.xhtml#a93a3ba385cad27c4774e5fe64c025d3d">armnn::LogSeverity</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_delegate_1_1_delegate_options.xhtml#ad0c06976f83fdc6c393ad85ea23d97b6">GetLoggingSeverity</a> ()</td></tr>
<tr class="memdesc:ad0c06976f83fdc6c393ad85ea23d97b6"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the severity level for logging within ArmNN.  <a href="#ad0c06976f83fdc6c393ad85ea23d97b6">More...</a><br /></td></tr>
<tr class="separator:ad0c06976f83fdc6c393ad85ea23d97b6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9c8c866c00936945dcb0bac65195488b"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_delegate_1_1_delegate_options.xhtml#a9c8c866c00936945dcb0bac65195488b">IsLoggingEnabled</a> ()</td></tr>
<tr class="separator:a9c8c866c00936945dcb0bac65195488b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7a24e0a6cebcc7d3383b83baac556be4"><td class="memItemLeft" align="right" valign="top">const <a class="el" href="structarmnn_1_1_optimizer_options.xhtml">armnn::OptimizerOptions</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_delegate_1_1_delegate_options.xhtml#a7a24e0a6cebcc7d3383b83baac556be4">GetOptimizerOptions</a> () const</td></tr>
<tr class="separator:a7a24e0a6cebcc7d3383b83baac556be4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab4a44278190ff1282d94d6a1a39e77ee"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_delegate_1_1_delegate_options.xhtml#ab4a44278190ff1282d94d6a1a39e77ee">SetOptimizerOptions</a> (const <a class="el" href="structarmnn_1_1_optimizer_options.xhtml">armnn::OptimizerOptions</a> &amp;optimizerOptions)</td></tr>
<tr class="separator:ab4a44278190ff1282d94d6a1a39e77ee"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a88eb9e3a0ed5f64cfc6fe460d1621520"><td class="memItemLeft" align="right" valign="top">const <a class="el" href="classarmnn_1_1_optional.xhtml">armnn::Optional</a>&lt; <a class="el" href="namespacearmnn.xhtml#a15f3ad9b5e4e3d46b0a6dda246a7bc28">armnn::DebugCallbackFunction</a> &gt; &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_delegate_1_1_delegate_options.xhtml#a88eb9e3a0ed5f64cfc6fe460d1621520">GetDebugCallbackFunction</a> () const</td></tr>
<tr class="separator:a88eb9e3a0ed5f64cfc6fe460d1621520"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab4b9928f6e55a3017ee9754cfc84ea36"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_delegate_1_1_delegate_options.xhtml#ab4b9928f6e55a3017ee9754cfc84ea36">SetInternalProfilingParams</a> (bool internalProfilingState, const <a class="el" href="namespacearmnn.xhtml#ae060224135f57f926cbda9d2732a2b1f">armnn::ProfilingDetailsMethod</a> &amp;internalProfilingDetail)</td></tr>
<tr class="separator:ab4b9928f6e55a3017ee9754cfc84ea36"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4d3e79b955e63ba0c0d7e7a1ca93ea42"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_delegate_1_1_delegate_options.xhtml#a4d3e79b955e63ba0c0d7e7a1ca93ea42">GetInternalProfilingState</a> () const</td></tr>
<tr class="separator:a4d3e79b955e63ba0c0d7e7a1ca93ea42"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a60f9e33ac7235792518b087eb7185516"><td class="memItemLeft" align="right" valign="top">const <a class="el" href="namespacearmnn.xhtml#ae060224135f57f926cbda9d2732a2b1f">armnn::ProfilingDetailsMethod</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_delegate_1_1_delegate_options.xhtml#a60f9e33ac7235792518b087eb7185516">GetInternalProfilingDetail</a> () const</td></tr>
<tr class="separator:a60f9e33ac7235792518b087eb7185516"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:abfd26a0521c63aaf8857067e4b6b6e3e"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_delegate_1_1_delegate_options.xhtml#abfd26a0521c63aaf8857067e4b6b6e3e">SetExternalProfilingParams</a> (const arm::pipe::ProfilingOptions &amp;externalProfilingParams)</td></tr>
<tr class="separator:abfd26a0521c63aaf8857067e4b6b6e3e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0bababf4a76395e5a7edb0c598b53b90"><td class="memItemLeft" align="right" valign="top">const arm::pipe::ProfilingOptions &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_delegate_1_1_delegate_options.xhtml#a0bababf4a76395e5a7edb0c598b53b90">GetExternalProfilingParams</a> () const</td></tr>
<tr class="separator:a0bababf4a76395e5a7edb0c598b53b90"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa129c803762837a534c58471f6b39413"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_delegate_1_1_delegate_options.xhtml#aa129c803762837a534c58471f6b39413">SetSerializeToDot</a> (const std::string &amp;serializeToDotFile)</td></tr>
<tr class="separator:aa129c803762837a534c58471f6b39413"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aafdb5fa0e0d61cfd7b269eede7e91046"><td class="memItemLeft" align="right" valign="top">const std::string &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_delegate_1_1_delegate_options.xhtml#aafdb5fa0e0d61cfd7b269eede7e91046">GetSerializeToDot</a> () const</td></tr>
<tr class="separator:aafdb5fa0e0d61cfd7b269eede7e91046"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a330be86acf8d6ede8319274aff01aee4"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_delegate_1_1_delegate_options.xhtml#a330be86acf8d6ede8319274aff01aee4">SetRuntimeOptions</a> (const <a class="el" href="structarmnn_1_1_i_runtime_1_1_creation_options.xhtml">armnn::IRuntime::CreationOptions</a> &amp;runtimeOptions)</td></tr>
<tr class="memdesc:a330be86acf8d6ede8319274aff01aee4"><td class="mdescLeft">&#160;</td><td class="mdescRight">: This might overwrite options that were set with other setter functions of <a class="el" href="classarmnn_delegate_1_1_delegate_options.xhtml">DelegateOptions</a>  <a href="#a330be86acf8d6ede8319274aff01aee4">More...</a><br /></td></tr>
<tr class="separator:a330be86acf8d6ede8319274aff01aee4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab35238cff48724ffccd7a9e39f0d6904"><td class="memItemLeft" align="right" valign="top">const <a class="el" href="structarmnn_1_1_i_runtime_1_1_creation_options.xhtml">armnn::IRuntime::CreationOptions</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_delegate_1_1_delegate_options.xhtml#ab35238cff48724ffccd7a9e39f0d6904">GetRuntimeOptions</a> ()</td></tr>
<tr class="separator:ab35238cff48724ffccd7a9e39f0d6904"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7a5aed42059aa5a8383141a35d0530e0"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_delegate_1_1_delegate_options.xhtml#a7a5aed42059aa5a8383141a35d0530e0">DisableTfLiteRuntimeFallback</a> (bool fallbackState)</td></tr>
<tr class="separator:a7a5aed42059aa5a8383141a35d0530e0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af1fb610ee652faf282cdf6d2546bcbb0"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_delegate_1_1_delegate_options.xhtml#af1fb610ee652faf282cdf6d2546bcbb0">TfLiteRuntimeFallbackDisabled</a> ()</td></tr>
<tr class="separator:af1fb610ee652faf282cdf6d2546bcbb0"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock">
<p class="definition">Definition at line <a class="el" href="_delegate_options_8hpp_source.xhtml#l00021">21</a> of file <a class="el" href="_delegate_options_8hpp_source.xhtml">DelegateOptions.hpp</a>.</p>
</div><h2 class="groupheader">Constructor &amp; Destructor Documentation</h2>
<a id="a318c3a715a80b7288e39c7daa8ef8494"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a318c3a715a80b7288e39c7daa8ef8494">&#9670;&nbsp;</a></span>DelegateOptions() <span class="overload">[1/5]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarmnn_delegate_1_1_delegate_options.xhtml">DelegateOptions</a> </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="namespacearmnn.xhtml#ae2f04a162585c0a5222a537efd5456ae">armnn::Compute</a>&#160;</td>
          <td class="paramname"><em>computeDevice</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const std::vector&lt; <a class="el" href="structarmnn_1_1_backend_options.xhtml">armnn::BackendOptions</a> &gt; &amp;&#160;</td>
          <td class="paramname"><em>backendOptions</em> = <code>{}</code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="classarmnn_1_1_optional.xhtml">armnn::Optional</a>&lt; <a class="el" href="namespacearmnn.xhtml#a93a3ba385cad27c4774e5fe64c025d3d">armnn::LogSeverity</a> &gt;&#160;</td>
          <td class="paramname"><em>logSeverityLevel</em> = <code><a class="el" href="structarmnn_1_1_empty_optional.xhtml">armnn::EmptyOptional</a>()</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a1330ed498a1643097406598b87438d3e"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a1330ed498a1643097406598b87438d3e">&#9670;&nbsp;</a></span>DelegateOptions() <span class="overload">[2/5]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarmnn_delegate_1_1_delegate_options.xhtml">DelegateOptions</a> </td>
          <td>(</td>
          <td class="paramtype">const std::vector&lt; <a class="el" href="classarmnn_1_1_backend_id.xhtml">armnn::BackendId</a> &gt; &amp;&#160;</td>
          <td class="paramname"><em>backends</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const std::vector&lt; <a class="el" href="structarmnn_1_1_backend_options.xhtml">armnn::BackendOptions</a> &gt; &amp;&#160;</td>
          <td class="paramname"><em>backendOptions</em> = <code>{}</code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="classarmnn_1_1_optional.xhtml">armnn::Optional</a>&lt; <a class="el" href="namespacearmnn.xhtml#a93a3ba385cad27c4774e5fe64c025d3d">armnn::LogSeverity</a> &gt;&#160;</td>
          <td class="paramname"><em>logSeverityLevel</em> = <code><a class="el" href="structarmnn_1_1_empty_optional.xhtml">armnn::EmptyOptional</a>()</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a1836bbbc92942bde6339d5073400250d"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a1836bbbc92942bde6339d5073400250d">&#9670;&nbsp;</a></span>DelegateOptions() <span class="overload">[3/5]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarmnn_delegate_1_1_delegate_options.xhtml">DelegateOptions</a> </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="namespacearmnn.xhtml#ae2f04a162585c0a5222a537efd5456ae">armnn::Compute</a>&#160;</td>
          <td class="paramname"><em>computeDevice</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="structarmnn_1_1_optimizer_options.xhtml">armnn::OptimizerOptions</a> &amp;&#160;</td>
          <td class="paramname"><em>optimizerOptions</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_optional.xhtml">armnn::Optional</a>&lt; <a class="el" href="namespacearmnn.xhtml#a93a3ba385cad27c4774e5fe64c025d3d">armnn::LogSeverity</a> &gt; &amp;&#160;</td>
          <td class="paramname"><em>logSeverityLevel</em> = <code><a class="el" href="structarmnn_1_1_empty_optional.xhtml">armnn::EmptyOptional</a>()</code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_optional.xhtml">armnn::Optional</a>&lt; <a class="el" href="namespacearmnn.xhtml#a15f3ad9b5e4e3d46b0a6dda246a7bc28">armnn::DebugCallbackFunction</a> &gt; &amp;&#160;</td>
          <td class="paramname"><em>func</em> = <code><a class="el" href="structarmnn_1_1_empty_optional.xhtml">armnn::EmptyOptional</a>()</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a18f754e97c5eab2a93b6018b4fdf336e"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a18f754e97c5eab2a93b6018b4fdf336e">&#9670;&nbsp;</a></span>DelegateOptions() <span class="overload">[4/5]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarmnn_delegate_1_1_delegate_options.xhtml">DelegateOptions</a> </td>
          <td>(</td>
          <td class="paramtype">const std::vector&lt; <a class="el" href="classarmnn_1_1_backend_id.xhtml">armnn::BackendId</a> &gt; &amp;&#160;</td>
          <td class="paramname"><em>backends</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="structarmnn_1_1_optimizer_options.xhtml">armnn::OptimizerOptions</a> &amp;&#160;</td>
          <td class="paramname"><em>optimizerOptions</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_optional.xhtml">armnn::Optional</a>&lt; <a class="el" href="namespacearmnn.xhtml#a93a3ba385cad27c4774e5fe64c025d3d">armnn::LogSeverity</a> &gt; &amp;&#160;</td>
          <td class="paramname"><em>logSeverityLevel</em> = <code><a class="el" href="structarmnn_1_1_empty_optional.xhtml">armnn::EmptyOptional</a>()</code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_optional.xhtml">armnn::Optional</a>&lt; <a class="el" href="namespacearmnn.xhtml#a15f3ad9b5e4e3d46b0a6dda246a7bc28">armnn::DebugCallbackFunction</a> &gt; &amp;&#160;</td>
          <td class="paramname"><em>func</em> = <code><a class="el" href="structarmnn_1_1_empty_optional.xhtml">armnn::EmptyOptional</a>()</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a9b42e80e19a78b145084aa0d22d422cb"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a9b42e80e19a78b145084aa0d22d422cb">&#9670;&nbsp;</a></span>DelegateOptions() <span class="overload">[5/5]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarmnn_delegate_1_1_delegate_options.xhtml">DelegateOptions</a> </td>
          <td>(</td>
          <td class="paramtype">char const *const *&#160;</td>
          <td class="paramname"><em>options_keys</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">char const *const *&#160;</td>
          <td class="paramname"><em>options_values</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">size_t&#160;</td>
          <td class="paramname"><em>num_options</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">void(*)(const char *)&#160;</td>
          <td class="paramname"><em>report_error</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>This constructor processes delegate options in form of command line arguments. </p>
<p>It works in conjunction with the TfLite external delegate plugin.</p>
<p>Available options:</p>
<p>Option key: "backends" <br />
 Possible values: ["EthosNPU"/"GpuAcc"/"CpuAcc"/"CpuRef"] <br />
 Descriptions: A comma separated list without whitespaces of backends which should be used for execution. Falls back to next backend in list if previous doesn't provide support for operation. e.g. "GpuAcc,CpuAcc"</p>
<p>Option key: "dynamic-backends-path" <br />
 Possible values: [filenameString] <br />
 Descriptions: This is the directory that will be searched for any dynamic backends.</p>
<p>Option key: "logging-severity" <br />
 Possible values: ["trace"/"debug"/"info"/"warning"/"error"/"fatal"] <br />
 Description: Sets the logging severity level for ArmNN. Logging is turned off if this option is not provided.</p>
<p>Option key: "gpu-tuning-level" <br />
 Possible values: ["0"/"1"/"2"/"3"] <br />
 Description: 0=UseOnly(default), 1=RapidTuning, 2=NormalTuning, 3=ExhaustiveTuning. Requires option gpu-tuning-file. 1,2 and 3 will create a tuning-file, 0 will apply the tunings from an existing file</p>
<p>Option key: "gpu-mlgo-tuning-file" <br />
 Possible values: [filenameString] <br />
 Description: File name for the MLGO tuning file</p>
<p>Option key: "gpu-tuning-file" <br />
 Possible values: [filenameString] <br />
 Description: File name for the tuning file.</p>
<p>Option key: "gpu-enable-profiling" <br />
 Possible values: ["true"/"false"] <br />
 Description: Enables GPU profiling</p>
<p>Option key: "gpu-kernel-profiling-enabled" <br />
 Possible values: ["true"/"false"] <br />
 Description: Enables GPU kernel profiling</p>
<p>Option key: "save-cached-network" <br />
 Possible values: ["true"/"false"] <br />
 Description: Enables saving of the cached network to a file, specified with the cached-network-filepath option</p>
<p>Option key: "cached-network-filepath" <br />
 Possible values: [filenameString] <br />
 Description: If non-empty, the given file will be used to load/save the cached network. If save-cached-network is given then the cached network will be saved to the given file. To save the cached network a file must already exist. If save-cached-network is not given then the cached network will be loaded from the given file. This will remove initial compilation time of kernels and speed up the first execution.</p>
<p>Option key: "enable-fast-math" <br />
 Possible values: ["true"/"false"] <br />
 Description: Enables fast_math options in backends that support it</p>
<p>Option key: "number-of-threads" <br />
 Possible values: ["1"-"64"] <br />
 Description: Assign the number of threads used by the CpuAcc backend. Default is set to 0 (Backend will decide number of threads to use).</p>
<p>Option key: "reduce-fp32-to-fp16" <br />
 Possible values: ["true"/"false"] <br />
 Description: Reduce Fp32 data to Fp16 for faster processing</p>
<p>Option key: "reduce-fp32-to-bf16" <br />
 Possible values: ["true"/"false"] <br />
 Description: Reduce Fp32 data to Bf16 for faster processing</p>
<p>Option key: "debug-data" <br />
 Possible values: ["true"/"false"] <br />
 Description: Add debug data for easier troubleshooting</p>
<p>Option key: "memory-import" <br />
 Possible values: ["true"/"false"] <br />
 Description: Enable memory import</p>
<p>Option key: "enable-internal-profiling" <br />
 Possible values: ["true"/"false"] <br />
 Description: Enable the internal profiling feature.</p>
<p>Option key: "internal-profiling-detail" <br />
 Possible values: [1/2] <br />
 Description: Set the detail on the internal profiling. 1 = DetailsWithEvents, 2 = DetailsOnly.</p>
<p>Option key: "enable-external-profiling" <br />
 Possible values: ["true"/"false"] <br />
 Description: Enable the external profiling feature.</p>
<p>Option key: "timeline-profiling" <br />
 Possible values: ["true"/"false"] <br />
 Description: Indicates whether external timeline profiling is enabled or not.</p>
<p>Option key: "outgoing-capture-file" <br />
 Possible values: [filenameString] <br />
 Description: Path to a file in which outgoing timeline profiling messages will be stored.</p>
<p>Option key: "incoming-capture-file" <br />
 Possible values: [filenameString] <br />
 Description: Path to a file in which incoming timeline profiling messages will be stored.</p>
<p>Option key: "file-only-external-profiling" <br />
 Possible values: ["true"/"false"] <br />
 Description: Enable profiling output to file only.</p>
<p>Option key: "counter-capture-period" <br />
 Possible values: Integer, Default is 10000u Description: Value in microseconds of the profiling capture period. <br />
 Option key: "profiling-file-format" <br />
 Possible values: String of ["binary"] <br />
 Description: The format of the file used for outputting profiling data. Currently on "binary" is supported.</p>
<p>Option key: "serialize-to-dot" <br />
 Possible values: [filenameString] <br />
 Description: Serialize the optimized network to the file specified in "dot" format.</p>
<p>Option key: "infer-output-shape" <br />
 Possible values: ["true"/"false"] <br />
 Description: Infers output tensor shape from input tensor shape and validate where applicable.</p>
<p>Option key: "allow-expanded-dims" <br />
 Possible values: ["true"/"false"] <br />
 Description: If true will disregard dimensions with a size of 1 when validating tensor shapes but tensor sizes must still match. <br />
 This is an Experimental parameter that is incompatible with "infer-output-shape". <br />
 This parameter may be removed in a later update.</p>
<p>Option key: "disable-tflite-runtime-fallback" <br />
 Possible values: ["true"/"false"] <br />
 Description: Disable TfLite Runtime fallback in the Arm NN TfLite delegate. An exception will be thrown if unsupported operators are encountered. This option is only for testing purposes.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">option_keys</td><td><a class="el" href="classarmnn_delegate_1_1_delegate.xhtml" title="ArmNN Delegate. ">Delegate</a> option names </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">options_values</td><td><a class="el" href="classarmnn_delegate_1_1_delegate.xhtml" title="ArmNN Delegate. ">Delegate</a> option values </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">num_options</td><td>Number of delegate options </td></tr>
    <tr><td class="paramdir">[in,out]</td><td class="paramname">report_error</td><td>Error callback function </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<h2 class="groupheader">Member Function Documentation</h2>
<a id="a8b99570afa7d17ce4b1c7dab770fe467"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a8b99570afa7d17ce4b1c7dab770fe467">&#9670;&nbsp;</a></span>AddBackendOption()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void AddBackendOption </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="structarmnn_1_1_backend_options.xhtml">armnn::BackendOptions</a> &amp;&#160;</td>
          <td class="paramname"><em>option</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Appends a backend option to the list of backend options. </p>

<p class="definition">Definition at line <a class="el" href="_delegate_options_8hpp_source.xhtml#l00222">222</a> of file <a class="el" href="_delegate_options_8hpp_source.xhtml">DelegateOptions.hpp</a>.</p>

<p class="reference">References <a class="el" href="_i_runtime_8hpp_source.xhtml#l00197">IRuntime::CreationOptions::m_BackendOptions</a>.</p>
<div class="fragment"><div class="line"><a name="l00223"></a><span class="lineno">  223</span>&#160;    {</div><div class="line"><a name="l00224"></a><span class="lineno">  224</span>&#160;        m_RuntimeOptions.<a class="code" href="structarmnn_1_1_i_runtime_1_1_creation_options.xhtml#aecebc69597fe0d38a3964031c6eeb0a8">m_BackendOptions</a>.push_back(option);</div><div class="line"><a name="l00225"></a><span class="lineno">  225</span>&#160;    }</div><div class="ttc" id="structarmnn_1_1_i_runtime_1_1_creation_options_xhtml_aecebc69597fe0d38a3964031c6eeb0a8"><div class="ttname"><a href="structarmnn_1_1_i_runtime_1_1_creation_options.xhtml#aecebc69597fe0d38a3964031c6eeb0a8">armnn::IRuntime::CreationOptions::m_BackendOptions</a></div><div class="ttdeci">std::vector&lt; BackendOptions &gt; m_BackendOptions</div><div class="ttdoc">Pass backend specific options. </div><div class="ttdef"><b>Definition:</b> <a href="_i_runtime_8hpp_source.xhtml#l00197">IRuntime.hpp:197</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="a7a5aed42059aa5a8383141a35d0530e0"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a7a5aed42059aa5a8383141a35d0530e0">&#9670;&nbsp;</a></span>DisableTfLiteRuntimeFallback()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void DisableTfLiteRuntimeFallback </td>
          <td>(</td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>fallbackState</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_delegate_options_8hpp_source.xhtml#l00271">271</a> of file <a class="el" href="_delegate_options_8hpp_source.xhtml">DelegateOptions.hpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00272"></a><span class="lineno">  272</span>&#160;    {</div><div class="line"><a name="l00273"></a><span class="lineno">  273</span>&#160;        m_DisableTfLiteRuntimeFallback = fallbackState;</div><div class="line"><a name="l00274"></a><span class="lineno">  274</span>&#160;    }</div></div><!-- fragment -->
</div>
</div>
<a id="a601170c5bc75674017b891c58f9f175b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a601170c5bc75674017b891c58f9f175b">&#9670;&nbsp;</a></span>GetBackendOptions()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">const std::vector&lt;<a class="el" href="structarmnn_1_1_backend_options.xhtml">armnn::BackendOptions</a>&gt;&amp; GetBackendOptions </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_delegate_options_8hpp_source.xhtml#l00216">216</a> of file <a class="el" href="_delegate_options_8hpp_source.xhtml">DelegateOptions.hpp</a>.</p>

<p class="reference">References <a class="el" href="_i_runtime_8hpp_source.xhtml#l00197">IRuntime::CreationOptions::m_BackendOptions</a>.</p>
<div class="fragment"><div class="line"><a name="l00217"></a><span class="lineno">  217</span>&#160;    {</div><div class="line"><a name="l00218"></a><span class="lineno">  218</span>&#160;        <span class="keywordflow">return</span> m_RuntimeOptions.<a class="code" href="structarmnn_1_1_i_runtime_1_1_creation_options.xhtml#aecebc69597fe0d38a3964031c6eeb0a8">m_BackendOptions</a>;</div><div class="line"><a name="l00219"></a><span class="lineno">  219</span>&#160;    }</div><div class="ttc" id="structarmnn_1_1_i_runtime_1_1_creation_options_xhtml_aecebc69597fe0d38a3964031c6eeb0a8"><div class="ttname"><a href="structarmnn_1_1_i_runtime_1_1_creation_options.xhtml#aecebc69597fe0d38a3964031c6eeb0a8">armnn::IRuntime::CreationOptions::m_BackendOptions</a></div><div class="ttdeci">std::vector&lt; BackendOptions &gt; m_BackendOptions</div><div class="ttdoc">Pass backend specific options. </div><div class="ttdef"><b>Definition:</b> <a href="_i_runtime_8hpp_source.xhtml#l00197">IRuntime.hpp:197</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="ad95feca4087d8e42ecacc1950a3d3901"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ad95feca4087d8e42ecacc1950a3d3901">&#9670;&nbsp;</a></span>GetBackends()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">const std::vector&lt;<a class="el" href="classarmnn_1_1_backend_id.xhtml">armnn::BackendId</a>&gt;&amp; GetBackends </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_delegate_options_8hpp_source.xhtml#l00194">194</a> of file <a class="el" href="_delegate_options_8hpp_source.xhtml">DelegateOptions.hpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00194"></a><span class="lineno">  194</span>&#160;{ <span class="keywordflow">return</span> m_Backends; }</div></div><!-- fragment -->
</div>
</div>
<a id="a88eb9e3a0ed5f64cfc6fe460d1621520"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a88eb9e3a0ed5f64cfc6fe460d1621520">&#9670;&nbsp;</a></span>GetDebugCallbackFunction()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">const <a class="el" href="classarmnn_1_1_optional.xhtml">armnn::Optional</a>&lt;<a class="el" href="namespacearmnn.xhtml#a15f3ad9b5e4e3d46b0a6dda246a7bc28">armnn::DebugCallbackFunction</a>&gt;&amp; GetDebugCallbackFunction </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_delegate_options_8hpp_source.xhtml#l00240">240</a> of file <a class="el" href="_delegate_options_8hpp_source.xhtml">DelegateOptions.hpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00241"></a><span class="lineno">  241</span>&#160;        { <span class="keywordflow">return</span> m_DebugCallbackFunc; }</div></div><!-- fragment -->
</div>
</div>
<a id="ae3e575de32e1d9d3e7ff51dc84146b76"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ae3e575de32e1d9d3e7ff51dc84146b76">&#9670;&nbsp;</a></span>GetDynamicBackendsPath()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">const std::string&amp; GetDynamicBackendsPath </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_delegate_options_8hpp_source.xhtml#l00202">202</a> of file <a class="el" href="_delegate_options_8hpp_source.xhtml">DelegateOptions.hpp</a>.</p>

<p class="reference">References <a class="el" href="_i_runtime_8hpp_source.xhtml#l00106">IRuntime::CreationOptions::m_DynamicBackendsPath</a>.</p>
<div class="fragment"><div class="line"><a name="l00203"></a><span class="lineno">  203</span>&#160;    {</div><div class="line"><a name="l00204"></a><span class="lineno">  204</span>&#160;        <span class="keywordflow">return</span> m_RuntimeOptions.<a class="code" href="structarmnn_1_1_i_runtime_1_1_creation_options.xhtml#ae43cf4b5df0068ee6a9151c98947248b">m_DynamicBackendsPath</a>;</div><div class="line"><a name="l00205"></a><span class="lineno">  205</span>&#160;    }</div><div class="ttc" id="structarmnn_1_1_i_runtime_1_1_creation_options_xhtml_ae43cf4b5df0068ee6a9151c98947248b"><div class="ttname"><a href="structarmnn_1_1_i_runtime_1_1_creation_options.xhtml#ae43cf4b5df0068ee6a9151c98947248b">armnn::IRuntime::CreationOptions::m_DynamicBackendsPath</a></div><div class="ttdeci">std::string m_DynamicBackendsPath</div><div class="ttdoc">Setting this value will override the paths set by the DYNAMIC_BACKEND_PATHS compiler directive Only a...</div><div class="ttdef"><b>Definition:</b> <a href="_i_runtime_8hpp_source.xhtml#l00106">IRuntime.hpp:106</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="a0bababf4a76395e5a7edb0c598b53b90"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a0bababf4a76395e5a7edb0c598b53b90">&#9670;&nbsp;</a></span>GetExternalProfilingParams()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">const arm::pipe::ProfilingOptions&amp; GetExternalProfilingParams </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_delegate_options_8hpp_source.xhtml#l00254">254</a> of file <a class="el" href="_delegate_options_8hpp_source.xhtml">DelegateOptions.hpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00255"></a><span class="lineno">  255</span>&#160;        { <span class="keywordflow">return</span> m_ProfilingOptions; }</div></div><!-- fragment -->
</div>
</div>
<a id="a8018270f803b5931d0e8fc90894adabf"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a8018270f803b5931d0e8fc90894adabf">&#9670;&nbsp;</a></span>GetGpuProfilingState()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool GetGpuProfilingState </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_delegate_options_8hpp_source.xhtml#l00211">211</a> of file <a class="el" href="_delegate_options_8hpp_source.xhtml">DelegateOptions.hpp</a>.</p>

<p class="reference">References <a class="el" href="_i_runtime_8hpp_source.xhtml#l00101">IRuntime::CreationOptions::m_EnableGpuProfiling</a>.</p>
<div class="fragment"><div class="line"><a name="l00212"></a><span class="lineno">  212</span>&#160;    {</div><div class="line"><a name="l00213"></a><span class="lineno">  213</span>&#160;        <span class="keywordflow">return</span> m_RuntimeOptions.<a class="code" href="structarmnn_1_1_i_runtime_1_1_creation_options.xhtml#a2fe8c3eadf4f4f9c0c664a24a2a298f9">m_EnableGpuProfiling</a>;</div><div class="line"><a name="l00214"></a><span class="lineno">  214</span>&#160;    }</div><div class="ttc" id="structarmnn_1_1_i_runtime_1_1_creation_options_xhtml_a2fe8c3eadf4f4f9c0c664a24a2a298f9"><div class="ttname"><a href="structarmnn_1_1_i_runtime_1_1_creation_options.xhtml#a2fe8c3eadf4f4f9c0c664a24a2a298f9">armnn::IRuntime::CreationOptions::m_EnableGpuProfiling</a></div><div class="ttdeci">bool m_EnableGpuProfiling</div><div class="ttdoc">Setting this flag will allow the user to obtain GPU profiling information from the runtime...</div><div class="ttdef"><b>Definition:</b> <a href="_i_runtime_8hpp_source.xhtml#l00101">IRuntime.hpp:101</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="a60f9e33ac7235792518b087eb7185516"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a60f9e33ac7235792518b087eb7185516">&#9670;&nbsp;</a></span>GetInternalProfilingDetail()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">const <a class="el" href="namespacearmnn.xhtml#ae060224135f57f926cbda9d2732a2b1f">armnn::ProfilingDetailsMethod</a>&amp; GetInternalProfilingDetail </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_delegate_options_8hpp_source.xhtml#l00248">248</a> of file <a class="el" href="_delegate_options_8hpp_source.xhtml">DelegateOptions.hpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00248"></a><span class="lineno">  248</span>&#160;{ <span class="keywordflow">return</span> m_InternalProfilingDetail; }</div></div><!-- fragment -->
</div>
</div>
<a id="a4d3e79b955e63ba0c0d7e7a1ca93ea42"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a4d3e79b955e63ba0c0d7e7a1ca93ea42">&#9670;&nbsp;</a></span>GetInternalProfilingState()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool GetInternalProfilingState </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_delegate_options_8hpp_source.xhtml#l00247">247</a> of file <a class="el" href="_delegate_options_8hpp_source.xhtml">DelegateOptions.hpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00247"></a><span class="lineno">  247</span>&#160;{ <span class="keywordflow">return</span> m_InternalProfilingEnabled; }</div></div><!-- fragment -->
</div>
</div>
<a id="ad0c06976f83fdc6c393ad85ea23d97b6"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ad0c06976f83fdc6c393ad85ea23d97b6">&#9670;&nbsp;</a></span>GetLoggingSeverity()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="namespacearmnn.xhtml#a93a3ba385cad27c4774e5fe64c025d3d">armnn::LogSeverity</a> GetLoggingSeverity </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Returns the severity level for logging within ArmNN. </p>

<p class="definition">Definition at line <a class="el" href="_delegate_options_8hpp_source.xhtml#l00232">232</a> of file <a class="el" href="_delegate_options_8hpp_source.xhtml">DelegateOptions.hpp</a>.</p>

<p class="reference">References <a class="el" href="_optional_8hpp_source.xhtml#l00146">OptionalReferenceSwitch&lt; IsReference, T &gt;::value()</a>.</p>
<div class="fragment"><div class="line"><a name="l00232"></a><span class="lineno">  232</span>&#160;{ <span class="keywordflow">return</span> m_LoggingSeverity.<a class="code" href="classarmnn_1_1_optional_reference_switch.xhtml#a77c7d528ac063d870b8c8426ec81c1c3">value</a>(); }</div><div class="ttc" id="classarmnn_1_1_optional_reference_switch_xhtml_a77c7d528ac063d870b8c8426ec81c1c3"><div class="ttname"><a href="classarmnn_1_1_optional_reference_switch.xhtml#a77c7d528ac063d870b8c8426ec81c1c3">armnn::OptionalReferenceSwitch::value</a></div><div class="ttdeci">const T &amp; value() const</div><div class="ttdef"><b>Definition:</b> <a href="_optional_8hpp_source.xhtml#l00146">Optional.hpp:146</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="a7a24e0a6cebcc7d3383b83baac556be4"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a7a24e0a6cebcc7d3383b83baac556be4">&#9670;&nbsp;</a></span>GetOptimizerOptions()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">const <a class="el" href="structarmnn_1_1_optimizer_options.xhtml">armnn::OptimizerOptions</a>&amp; GetOptimizerOptions </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_delegate_options_8hpp_source.xhtml#l00236">236</a> of file <a class="el" href="_delegate_options_8hpp_source.xhtml">DelegateOptions.hpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00236"></a><span class="lineno">  236</span>&#160;{ <span class="keywordflow">return</span> m_OptimizerOptions; }</div></div><!-- fragment -->
</div>
</div>
<a id="ab35238cff48724ffccd7a9e39f0d6904"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ab35238cff48724ffccd7a9e39f0d6904">&#9670;&nbsp;</a></span>GetRuntimeOptions()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">const <a class="el" href="structarmnn_1_1_i_runtime_1_1_creation_options.xhtml">armnn::IRuntime::CreationOptions</a>&amp; GetRuntimeOptions </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_delegate_options_8hpp_source.xhtml#l00266">266</a> of file <a class="el" href="_delegate_options_8hpp_source.xhtml">DelegateOptions.hpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00267"></a><span class="lineno">  267</span>&#160;    {</div><div class="line"><a name="l00268"></a><span class="lineno">  268</span>&#160;        <span class="keywordflow">return</span> m_RuntimeOptions;</div><div class="line"><a name="l00269"></a><span class="lineno">  269</span>&#160;    }</div></div><!-- fragment -->
</div>
</div>
<a id="aafdb5fa0e0d61cfd7b269eede7e91046"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aafdb5fa0e0d61cfd7b269eede7e91046">&#9670;&nbsp;</a></span>GetSerializeToDot()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">const std::string&amp; GetSerializeToDot </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_delegate_options_8hpp_source.xhtml#l00258">258</a> of file <a class="el" href="_delegate_options_8hpp_source.xhtml">DelegateOptions.hpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00258"></a><span class="lineno">  258</span>&#160;{ <span class="keywordflow">return</span> m_SerializeToDot; }</div></div><!-- fragment -->
</div>
</div>
<a id="a9c8c866c00936945dcb0bac65195488b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a9c8c866c00936945dcb0bac65195488b">&#9670;&nbsp;</a></span>IsLoggingEnabled()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool IsLoggingEnabled </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_delegate_options_8hpp_source.xhtml#l00234">234</a> of file <a class="el" href="_delegate_options_8hpp_source.xhtml">DelegateOptions.hpp</a>.</p>

<p class="reference">References <a class="el" href="_optional_8hpp_source.xhtml#l00053">OptionalBase::has_value()</a>.</p>
<div class="fragment"><div class="line"><a name="l00234"></a><span class="lineno">  234</span>&#160;{ <span class="keywordflow">return</span> m_LoggingSeverity.<a class="code" href="classarmnn_1_1_optional_base.xhtml#a86b749ce2c4bc627fa8a1fcfaf0e314f">has_value</a>(); }</div><div class="ttc" id="classarmnn_1_1_optional_base_xhtml_a86b749ce2c4bc627fa8a1fcfaf0e314f"><div class="ttname"><a href="classarmnn_1_1_optional_base.xhtml#a86b749ce2c4bc627fa8a1fcfaf0e314f">armnn::OptionalBase::has_value</a></div><div class="ttdeci">bool has_value() const noexcept</div><div class="ttdef"><b>Definition:</b> <a href="_optional_8hpp_source.xhtml#l00053">Optional.hpp:53</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="ad9d8dd6ed903c0ae3c4baa3e9d2e4ea5"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ad9d8dd6ed903c0ae3c4baa3e9d2e4ea5">&#9670;&nbsp;</a></span>SetBackends()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void SetBackends </td>
          <td>(</td>
          <td class="paramtype">const std::vector&lt; <a class="el" href="classarmnn_1_1_backend_id.xhtml">armnn::BackendId</a> &gt; &amp;&#160;</td>
          <td class="paramname"><em>backends</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_delegate_options_8hpp_source.xhtml#l00196">196</a> of file <a class="el" href="_delegate_options_8hpp_source.xhtml">DelegateOptions.hpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00196"></a><span class="lineno">  196</span>&#160;{ m_Backends = backends; }</div></div><!-- fragment -->
</div>
</div>
<a id="a8a27ca08addbe8e28ea471eacd053c51"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a8a27ca08addbe8e28ea471eacd053c51">&#9670;&nbsp;</a></span>SetDynamicBackendsPath()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void SetDynamicBackendsPath </td>
          <td>(</td>
          <td class="paramtype">const std::string &amp;&#160;</td>
          <td class="paramname"><em>dynamicBackendsPath</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_delegate_options_8hpp_source.xhtml#l00198">198</a> of file <a class="el" href="_delegate_options_8hpp_source.xhtml">DelegateOptions.hpp</a>.</p>

<p class="reference">References <a class="el" href="_i_runtime_8hpp_source.xhtml#l00106">IRuntime::CreationOptions::m_DynamicBackendsPath</a>.</p>
<div class="fragment"><div class="line"><a name="l00199"></a><span class="lineno">  199</span>&#160;    {</div><div class="line"><a name="l00200"></a><span class="lineno">  200</span>&#160;        m_RuntimeOptions.<a class="code" href="structarmnn_1_1_i_runtime_1_1_creation_options.xhtml#ae43cf4b5df0068ee6a9151c98947248b">m_DynamicBackendsPath</a> = dynamicBackendsPath;</div><div class="line"><a name="l00201"></a><span class="lineno">  201</span>&#160;    }</div><div class="ttc" id="structarmnn_1_1_i_runtime_1_1_creation_options_xhtml_ae43cf4b5df0068ee6a9151c98947248b"><div class="ttname"><a href="structarmnn_1_1_i_runtime_1_1_creation_options.xhtml#ae43cf4b5df0068ee6a9151c98947248b">armnn::IRuntime::CreationOptions::m_DynamicBackendsPath</a></div><div class="ttdeci">std::string m_DynamicBackendsPath</div><div class="ttdoc">Setting this value will override the paths set by the DYNAMIC_BACKEND_PATHS compiler directive Only a...</div><div class="ttdef"><b>Definition:</b> <a href="_i_runtime_8hpp_source.xhtml#l00106">IRuntime.hpp:106</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="abfd26a0521c63aaf8857067e4b6b6e3e"></a>
<h2 class="memtitle"><span class="permalink"><a href="#abfd26a0521c63aaf8857067e4b6b6e3e">&#9670;&nbsp;</a></span>SetExternalProfilingParams()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void SetExternalProfilingParams </td>
          <td>(</td>
          <td class="paramtype">const arm::pipe::ProfilingOptions &amp;&#160;</td>
          <td class="paramname"><em>externalProfilingParams</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_delegate_options_8hpp_source.xhtml#l00250">250</a> of file <a class="el" href="_delegate_options_8hpp_source.xhtml">DelegateOptions.hpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00252"></a><span class="lineno">  252</span>&#160;        { m_ProfilingOptions = externalProfilingParams; }</div></div><!-- fragment -->
</div>
</div>
<a id="a7ee32e8d6a1ec9d0c86690525b805f58"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a7ee32e8d6a1ec9d0c86690525b805f58">&#9670;&nbsp;</a></span>SetGpuProfilingState()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void SetGpuProfilingState </td>
          <td>(</td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>gpuProfilingState</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_delegate_options_8hpp_source.xhtml#l00207">207</a> of file <a class="el" href="_delegate_options_8hpp_source.xhtml">DelegateOptions.hpp</a>.</p>

<p class="reference">References <a class="el" href="_i_runtime_8hpp_source.xhtml#l00101">IRuntime::CreationOptions::m_EnableGpuProfiling</a>.</p>
<div class="fragment"><div class="line"><a name="l00208"></a><span class="lineno">  208</span>&#160;    {</div><div class="line"><a name="l00209"></a><span class="lineno">  209</span>&#160;        m_RuntimeOptions.<a class="code" href="structarmnn_1_1_i_runtime_1_1_creation_options.xhtml#a2fe8c3eadf4f4f9c0c664a24a2a298f9">m_EnableGpuProfiling</a> = gpuProfilingState;</div><div class="line"><a name="l00210"></a><span class="lineno">  210</span>&#160;    }</div><div class="ttc" id="structarmnn_1_1_i_runtime_1_1_creation_options_xhtml_a2fe8c3eadf4f4f9c0c664a24a2a298f9"><div class="ttname"><a href="structarmnn_1_1_i_runtime_1_1_creation_options.xhtml#a2fe8c3eadf4f4f9c0c664a24a2a298f9">armnn::IRuntime::CreationOptions::m_EnableGpuProfiling</a></div><div class="ttdeci">bool m_EnableGpuProfiling</div><div class="ttdoc">Setting this flag will allow the user to obtain GPU profiling information from the runtime...</div><div class="ttdef"><b>Definition:</b> <a href="_i_runtime_8hpp_source.xhtml#l00101">IRuntime.hpp:101</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="ab4b9928f6e55a3017ee9754cfc84ea36"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ab4b9928f6e55a3017ee9754cfc84ea36">&#9670;&nbsp;</a></span>SetInternalProfilingParams()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void SetInternalProfilingParams </td>
          <td>(</td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>internalProfilingState</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="namespacearmnn.xhtml#ae060224135f57f926cbda9d2732a2b1f">armnn::ProfilingDetailsMethod</a> &amp;&#160;</td>
          <td class="paramname"><em>internalProfilingDetail</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_delegate_options_8hpp_source.xhtml#l00243">243</a> of file <a class="el" href="_delegate_options_8hpp_source.xhtml">DelegateOptions.hpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00245"></a><span class="lineno">  245</span>&#160;        { m_InternalProfilingEnabled = internalProfilingState; m_InternalProfilingDetail = internalProfilingDetail; }</div></div><!-- fragment -->
</div>
</div>
<a id="a98cd1055c58e98f7009c4e770fac96ec"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a98cd1055c58e98f7009c4e770fac96ec">&#9670;&nbsp;</a></span>SetLoggingSeverity() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void SetLoggingSeverity </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="namespacearmnn.xhtml#a93a3ba385cad27c4774e5fe64c025d3d">armnn::LogSeverity</a> &amp;&#160;</td>
          <td class="paramname"><em>level</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Sets the severity level for logging within ArmNN that will be used on creation of the delegate. </p>

<p class="definition">Definition at line <a class="el" href="_delegate_options_8hpp_source.xhtml#l00228">228</a> of file <a class="el" href="_delegate_options_8hpp_source.xhtml">DelegateOptions.hpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00228"></a><span class="lineno">  228</span>&#160;{ m_LoggingSeverity = level; }</div></div><!-- fragment -->
</div>
</div>
<a id="a337e16dd51a972e2162870e01d48dbc2"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a337e16dd51a972e2162870e01d48dbc2">&#9670;&nbsp;</a></span>SetLoggingSeverity() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void SetLoggingSeverity </td>
          <td>(</td>
          <td class="paramtype">const std::string &amp;&#160;</td>
          <td class="paramname"><em>level</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_delegate_options_8hpp_source.xhtml#l00229">229</a> of file <a class="el" href="_delegate_options_8hpp_source.xhtml">DelegateOptions.hpp</a>.</p>

<p class="reference">References <a class="el" href="_logging_8hpp_source.xhtml#l00036">armnn::StringToLogLevel()</a>.</p>
<div class="fragment"><div class="line"><a name="l00229"></a><span class="lineno">  229</span>&#160;{ m_LoggingSeverity = <a class="code" href="namespacearmnn.xhtml#aaaddf7d8f68eae6c1bf90e4ec3cb5490">armnn::StringToLogLevel</a>(level); }</div><div class="ttc" id="namespacearmnn_xhtml_aaaddf7d8f68eae6c1bf90e4ec3cb5490"><div class="ttname"><a href="namespacearmnn.xhtml#aaaddf7d8f68eae6c1bf90e4ec3cb5490">armnn::StringToLogLevel</a></div><div class="ttdeci">LogSeverity StringToLogLevel(std::string level)</div><div class="ttdef"><b>Definition:</b> <a href="_logging_8hpp_source.xhtml#l00036">Logging.hpp:36</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="ab4a44278190ff1282d94d6a1a39e77ee"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ab4a44278190ff1282d94d6a1a39e77ee">&#9670;&nbsp;</a></span>SetOptimizerOptions()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void SetOptimizerOptions </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="structarmnn_1_1_optimizer_options.xhtml">armnn::OptimizerOptions</a> &amp;&#160;</td>
          <td class="paramname"><em>optimizerOptions</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_delegate_options_8hpp_source.xhtml#l00238">238</a> of file <a class="el" href="_delegate_options_8hpp_source.xhtml">DelegateOptions.hpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00238"></a><span class="lineno">  238</span>&#160;{ m_OptimizerOptions = optimizerOptions; }</div></div><!-- fragment -->
</div>
</div>
<a id="a330be86acf8d6ede8319274aff01aee4"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a330be86acf8d6ede8319274aff01aee4">&#9670;&nbsp;</a></span>SetRuntimeOptions()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void SetRuntimeOptions </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="structarmnn_1_1_i_runtime_1_1_creation_options.xhtml">armnn::IRuntime::CreationOptions</a> &amp;&#160;</td>
          <td class="paramname"><em>runtimeOptions</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>: This might overwrite options that were set with other setter functions of <a class="el" href="classarmnn_delegate_1_1_delegate_options.xhtml">DelegateOptions</a> </p>

<p class="definition">Definition at line <a class="el" href="_delegate_options_8hpp_source.xhtml#l00261">261</a> of file <a class="el" href="_delegate_options_8hpp_source.xhtml">DelegateOptions.hpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00262"></a><span class="lineno">  262</span>&#160;    {</div><div class="line"><a name="l00263"></a><span class="lineno">  263</span>&#160;        m_RuntimeOptions = runtimeOptions;</div><div class="line"><a name="l00264"></a><span class="lineno">  264</span>&#160;    }</div></div><!-- fragment -->
</div>
</div>
<a id="aa129c803762837a534c58471f6b39413"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aa129c803762837a534c58471f6b39413">&#9670;&nbsp;</a></span>SetSerializeToDot()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void SetSerializeToDot </td>
          <td>(</td>
          <td class="paramtype">const std::string &amp;&#160;</td>
          <td class="paramname"><em>serializeToDotFile</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_delegate_options_8hpp_source.xhtml#l00257">257</a> of file <a class="el" href="_delegate_options_8hpp_source.xhtml">DelegateOptions.hpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00257"></a><span class="lineno">  257</span>&#160;{ m_SerializeToDot = serializeToDotFile; }</div></div><!-- fragment -->
</div>
</div>
<a id="af1fb610ee652faf282cdf6d2546bcbb0"></a>
<h2 class="memtitle"><span class="permalink"><a href="#af1fb610ee652faf282cdf6d2546bcbb0">&#9670;&nbsp;</a></span>TfLiteRuntimeFallbackDisabled()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool TfLiteRuntimeFallbackDisabled </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_delegate_options_8hpp_source.xhtml#l00275">275</a> of file <a class="el" href="_delegate_options_8hpp_source.xhtml">DelegateOptions.hpp</a>.</p>

<p class="reference">References <a class="el" href="namespacearmnn.xhtml#ae2f04a162585c0a5222a537efd5456aea83c2c4e9b658ccafbcbe6309c5d84c64">armnn::CpuRef</a>, and <a class="el" href="namespacearmnn.xhtml#ae060224135f57f926cbda9d2732a2b1fa497ab261a562e316736c2cb59b839d32">armnn::DetailsWithEvents</a>.</p>
<div class="fragment"><div class="line"><a name="l00276"></a><span class="lineno">  276</span>&#160;    {</div><div class="line"><a name="l00277"></a><span class="lineno">  277</span>&#160;        <span class="keywordflow">return</span> m_DisableTfLiteRuntimeFallback;</div><div class="line"><a name="l00278"></a><span class="lineno">  278</span>&#160;    }</div></div><!-- fragment -->
</div>
</div>
<hr/>The documentation for this class was generated from the following file:<ul>
<li>delegate/include/<a class="el" href="_delegate_options_8hpp_source.xhtml">DelegateOptions.hpp</a></li>
</ul>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="namespacearmnn_delegate.xhtml">armnnDelegate</a></li><li class="navelem"><a class="el" href="classarmnn_delegate_1_1_delegate_options.xhtml">DelegateOptions</a></li>
    <li class="footer">Generated on Wed Nov 23 2022 10:57:43 for ArmNN by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.13 </li>
  </ul>
</div>
</body>
</html>
