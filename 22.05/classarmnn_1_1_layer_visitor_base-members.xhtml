<!-- Copyright (c) 2020 ARM Limited. -->
<!--                                 -->
<!-- SPDX-License-Identifier: MIT    -->
<!--                                 -->
<!-- HTML header for doxygen 1.8.13-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.13"/>
<meta name="robots" content="NOINDEX, NOFOLLOW" />
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>ArmNN: Member List</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script><script type="text/javascript" src="http://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="stylesheet.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <img alt="ArmNN" src="Arm_NN_horizontal_blue.png" style="max-width: 10rem; margin-top: .5rem; margin-left 10px"/>
  <td style="padding-left: 0.5em;">
   <div id="projectname">
   &#160;<span id="projectnumber">22.05</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.13 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
$(document).ready(function(){initNavTree('classarmnn_1_1_layer_visitor_base.xhtml','');});
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="headertitle">
<div class="title">LayerVisitorBase&lt; DefaultPolicy &gt; Member List</div>  </div>
</div><!--header-->
<div class="contents">

<p>This is the complete list of members for <a class="el" href="classarmnn_1_1_layer_visitor_base.xhtml">LayerVisitorBase&lt; DefaultPolicy &gt;</a>, including all inherited members.</p>
<table class="directory">
  <tr class="even"><td class="entry"><a class="el" href="classarmnn_1_1_layer_visitor_base.xhtml#aec6644c81f84f086262dfd06088acd99">LayerVisitorBase</a>()</td><td class="entry"><a class="el" href="classarmnn_1_1_layer_visitor_base.xhtml">LayerVisitorBase&lt; DefaultPolicy &gt;</a></td><td class="entry"><span class="mlabel">inline</span><span class="mlabel">protected</span></td></tr>
  <tr><td class="entry"><a class="el" href="classarmnn_1_1_layer_visitor_base.xhtml#a30b99e5202fc77b02f92d5c44e5ca86d">VisitActivationLayer</a>(const IConnectableLayer *, const ActivationDescriptor &amp;, const char *) override</td><td class="entry"><a class="el" href="classarmnn_1_1_layer_visitor_base.xhtml">LayerVisitorBase&lt; DefaultPolicy &gt;</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classarmnn_1_1_layer_visitor_base.xhtml#a0c9f3396207de48925016a2eee6aa12b">VisitAdditionLayer</a>(const IConnectableLayer *, const char *) override</td><td class="entry"><a class="el" href="classarmnn_1_1_layer_visitor_base.xhtml">LayerVisitorBase&lt; DefaultPolicy &gt;</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr><td class="entry"><a class="el" href="classarmnn_1_1_layer_visitor_base.xhtml#a719076848950255b929636c97aaaede4">VisitArgMinMaxLayer</a>(const IConnectableLayer *, const ArgMinMaxDescriptor &amp;, const char *) override</td><td class="entry"><a class="el" href="classarmnn_1_1_layer_visitor_base.xhtml">LayerVisitorBase&lt; DefaultPolicy &gt;</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classarmnn_1_1_layer_visitor_base.xhtml#ab0ae25ba5f3c494d1fb32f06cd57af10">VisitBatchNormalizationLayer</a>(const IConnectableLayer *, const BatchNormalizationDescriptor &amp;, const ConstTensor &amp;, const ConstTensor &amp;, const ConstTensor &amp;, const ConstTensor &amp;, const char *) override</td><td class="entry"><a class="el" href="classarmnn_1_1_layer_visitor_base.xhtml">LayerVisitorBase&lt; DefaultPolicy &gt;</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr><td class="entry"><a class="el" href="classarmnn_1_1_layer_visitor_base.xhtml#a62aac266e23bd680633e62832f56bc11">VisitBatchToSpaceNdLayer</a>(const IConnectableLayer *, const BatchToSpaceNdDescriptor &amp;, const char *) override</td><td class="entry"><a class="el" href="classarmnn_1_1_layer_visitor_base.xhtml">LayerVisitorBase&lt; DefaultPolicy &gt;</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classarmnn_1_1_layer_visitor_base.xhtml#a95dc828296e6d05c0bf0b691d4dc6a3f">VisitComparisonLayer</a>(const IConnectableLayer *, const ComparisonDescriptor &amp;, const char *) override</td><td class="entry"><a class="el" href="classarmnn_1_1_layer_visitor_base.xhtml">LayerVisitorBase&lt; DefaultPolicy &gt;</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr><td class="entry"><a class="el" href="classarmnn_1_1_layer_visitor_base.xhtml#a2d4f84683c4a00dfb5eecb6b165d41b9">VisitConcatLayer</a>(const IConnectableLayer *, const ConcatDescriptor &amp;, const char *) override</td><td class="entry"><a class="el" href="classarmnn_1_1_layer_visitor_base.xhtml">LayerVisitorBase&lt; DefaultPolicy &gt;</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classarmnn_1_1_layer_visitor_base.xhtml#a90698dba3e90ced6f562cda146bf15e3">VisitConstantLayer</a>(const IConnectableLayer *, const ConstTensor &amp;, const char *) override</td><td class="entry"><a class="el" href="classarmnn_1_1_layer_visitor_base.xhtml">LayerVisitorBase&lt; DefaultPolicy &gt;</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr><td class="entry"><a class="el" href="classarmnn_1_1_layer_visitor_base.xhtml#aff3099f516e132f4d8818a54fa1ee767">VisitConvolution2dLayer</a>(const IConnectableLayer *, const Convolution2dDescriptor &amp;, const ConstTensor &amp;, const Optional&lt; ConstTensor &gt; &amp;, const char *) override</td><td class="entry"><a class="el" href="classarmnn_1_1_layer_visitor_base.xhtml">LayerVisitorBase&lt; DefaultPolicy &gt;</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classarmnn_1_1_layer_visitor_base.xhtml#a1f471667b18bdc6f2f57a15976881410">VisitConvolution2dLayer</a>(const IConnectableLayer *, const Convolution2dDescriptor &amp;, const char *) override</td><td class="entry"><a class="el" href="classarmnn_1_1_layer_visitor_base.xhtml">LayerVisitorBase&lt; DefaultPolicy &gt;</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr><td class="entry"><a class="el" href="classarmnn_1_1_layer_visitor_base.xhtml#ad3aaff3b6165f8de16522bc4a1ed32a0">VisitDepthToSpaceLayer</a>(const IConnectableLayer *, const DepthToSpaceDescriptor &amp;, const char *) override</td><td class="entry"><a class="el" href="classarmnn_1_1_layer_visitor_base.xhtml">LayerVisitorBase&lt; DefaultPolicy &gt;</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classarmnn_1_1_layer_visitor_base.xhtml#ab287daf36aee416ebeca06ebf4f71a82">VisitDepthwiseConvolution2dLayer</a>(const IConnectableLayer *, const DepthwiseConvolution2dDescriptor &amp;, const char *) override</td><td class="entry"><a class="el" href="classarmnn_1_1_layer_visitor_base.xhtml">LayerVisitorBase&lt; DefaultPolicy &gt;</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr><td class="entry"><a class="el" href="classarmnn_1_1_layer_visitor_base.xhtml#a70050fc50ee44a439665f914d5fe9684">VisitDepthwiseConvolution2dLayer</a>(const IConnectableLayer *, const DepthwiseConvolution2dDescriptor &amp;, const ConstTensor &amp;, const Optional&lt; ConstTensor &gt; &amp;, const char *) override</td><td class="entry"><a class="el" href="classarmnn_1_1_layer_visitor_base.xhtml">LayerVisitorBase&lt; DefaultPolicy &gt;</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classarmnn_1_1_layer_visitor_base.xhtml#aa27cc900d32dcc4a92f59e3bab4f4653">VisitDequantizeLayer</a>(const IConnectableLayer *, const char *) override</td><td class="entry"><a class="el" href="classarmnn_1_1_layer_visitor_base.xhtml">LayerVisitorBase&lt; DefaultPolicy &gt;</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr><td class="entry"><a class="el" href="classarmnn_1_1_layer_visitor_base.xhtml#a88bad2eef809ccf6f2129f9ed4a6f3a7">VisitDetectionPostProcessLayer</a>(const IConnectableLayer *, const DetectionPostProcessDescriptor &amp;, const ConstTensor &amp;, const char *) override</td><td class="entry"><a class="el" href="classarmnn_1_1_layer_visitor_base.xhtml">LayerVisitorBase&lt; DefaultPolicy &gt;</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classarmnn_1_1_layer_visitor_base.xhtml#a7450859464a381eafaedb33adc582f75">VisitDivisionLayer</a>(const IConnectableLayer *, const char *) override</td><td class="entry"><a class="el" href="classarmnn_1_1_layer_visitor_base.xhtml">LayerVisitorBase&lt; DefaultPolicy &gt;</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr><td class="entry"><a class="el" href="classarmnn_1_1_layer_visitor_base.xhtml#a9d02f4bfaffcb16e340e9b8c20bc5e35">VisitElementwiseUnaryLayer</a>(const IConnectableLayer *, const ElementwiseUnaryDescriptor &amp;, const char *) override</td><td class="entry"><a class="el" href="classarmnn_1_1_layer_visitor_base.xhtml">LayerVisitorBase&lt; DefaultPolicy &gt;</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classarmnn_1_1_layer_visitor_base.xhtml#ae343d79924ac474939c3e38a8b80004e">VisitFillLayer</a>(const IConnectableLayer *, const FillDescriptor &amp;, const char *) override</td><td class="entry"><a class="el" href="classarmnn_1_1_layer_visitor_base.xhtml">LayerVisitorBase&lt; DefaultPolicy &gt;</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr><td class="entry"><a class="el" href="classarmnn_1_1_layer_visitor_base.xhtml#a060c3a3f978fec03212afaff1fe1648d">VisitFloorLayer</a>(const IConnectableLayer *, const char *) override</td><td class="entry"><a class="el" href="classarmnn_1_1_layer_visitor_base.xhtml">LayerVisitorBase&lt; DefaultPolicy &gt;</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classarmnn_1_1_layer_visitor_base.xhtml#a0366c28438bfb9e14d7039e51140e29f">VisitFullyConnectedLayer</a>(const IConnectableLayer *, const FullyConnectedDescriptor &amp;, const char *) override</td><td class="entry"><a class="el" href="classarmnn_1_1_layer_visitor_base.xhtml">LayerVisitorBase&lt; DefaultPolicy &gt;</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr><td class="entry"><a class="el" href="classarmnn_1_1_layer_visitor_base.xhtml#a9049cf6d72d4b67fff93670f21c09da3">VisitFullyConnectedLayer</a>(const IConnectableLayer *, const FullyConnectedDescriptor &amp;, const ConstTensor &amp;, const Optional&lt; ConstTensor &gt; &amp;, const char *) override</td><td class="entry"><a class="el" href="classarmnn_1_1_layer_visitor_base.xhtml">LayerVisitorBase&lt; DefaultPolicy &gt;</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classarmnn_1_1_layer_visitor_base.xhtml#aea011723381847939ee1773d7c6fac25">VisitGatherLayer</a>(const IConnectableLayer *, const GatherDescriptor &amp;, const char *) override</td><td class="entry"><a class="el" href="classarmnn_1_1_layer_visitor_base.xhtml">LayerVisitorBase&lt; DefaultPolicy &gt;</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr><td class="entry"><a class="el" href="classarmnn_1_1_layer_visitor_base.xhtml#a6c23f9e9d8427775925d071feee5dbd1">VisitInputLayer</a>(const IConnectableLayer *, LayerBindingId, const char *) override</td><td class="entry"><a class="el" href="classarmnn_1_1_layer_visitor_base.xhtml">LayerVisitorBase&lt; DefaultPolicy &gt;</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classarmnn_1_1_layer_visitor_base.xhtml#a58f90a911e6827702c478cabaeac57fe">VisitInstanceNormalizationLayer</a>(const IConnectableLayer *, const InstanceNormalizationDescriptor &amp;, const char *) override</td><td class="entry"><a class="el" href="classarmnn_1_1_layer_visitor_base.xhtml">LayerVisitorBase&lt; DefaultPolicy &gt;</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr><td class="entry"><a class="el" href="classarmnn_1_1_layer_visitor_base.xhtml#ae68e2b431ea3d2822f19ad4ac806fdaa">VisitL2NormalizationLayer</a>(const IConnectableLayer *, const L2NormalizationDescriptor &amp;, const char *) override</td><td class="entry"><a class="el" href="classarmnn_1_1_layer_visitor_base.xhtml">LayerVisitorBase&lt; DefaultPolicy &gt;</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classarmnn_1_1_layer_visitor_base.xhtml#aa4f176ed33afb13a9e590b86990eaa3c">VisitLogicalBinaryLayer</a>(const IConnectableLayer *, const LogicalBinaryDescriptor &amp;, const char *) override</td><td class="entry"><a class="el" href="classarmnn_1_1_layer_visitor_base.xhtml">LayerVisitorBase&lt; DefaultPolicy &gt;</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr><td class="entry"><a class="el" href="classarmnn_1_1_layer_visitor_base.xhtml#a8d4d2e5580385ee664830720698d112c">VisitLogSoftmaxLayer</a>(const IConnectableLayer *, const LogSoftmaxDescriptor &amp;, const char *) override</td><td class="entry"><a class="el" href="classarmnn_1_1_layer_visitor_base.xhtml">LayerVisitorBase&lt; DefaultPolicy &gt;</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classarmnn_1_1_layer_visitor_base.xhtml#aaf1a238ec5b6bb172bc4cd3811f08b28">VisitLstmLayer</a>(const IConnectableLayer *, const LstmDescriptor &amp;, const LstmInputParams &amp;, const char *) override</td><td class="entry"><a class="el" href="classarmnn_1_1_layer_visitor_base.xhtml">LayerVisitorBase&lt; DefaultPolicy &gt;</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr><td class="entry"><a class="el" href="classarmnn_1_1_layer_visitor_base.xhtml#a778e1b2219e3eb2d790d6e6e653a9f25">VisitMaximumLayer</a>(const IConnectableLayer *, const char *) override</td><td class="entry"><a class="el" href="classarmnn_1_1_layer_visitor_base.xhtml">LayerVisitorBase&lt; DefaultPolicy &gt;</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classarmnn_1_1_layer_visitor_base.xhtml#a0180a15e542f4ef240fadc09fe4b2e3f">VisitMeanLayer</a>(const IConnectableLayer *, const MeanDescriptor &amp;, const char *) override</td><td class="entry"><a class="el" href="classarmnn_1_1_layer_visitor_base.xhtml">LayerVisitorBase&lt; DefaultPolicy &gt;</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr><td class="entry"><a class="el" href="classarmnn_1_1_layer_visitor_base.xhtml#aafb62c879f0c78bfdc3c4e4f2cb82e68">VisitMergeLayer</a>(const IConnectableLayer *, const char *) override</td><td class="entry"><a class="el" href="classarmnn_1_1_layer_visitor_base.xhtml">LayerVisitorBase&lt; DefaultPolicy &gt;</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classarmnn_1_1_layer_visitor_base.xhtml#a1e24e9a7bf52efc1699c126435574e95">VisitMinimumLayer</a>(const IConnectableLayer *, const char *) override</td><td class="entry"><a class="el" href="classarmnn_1_1_layer_visitor_base.xhtml">LayerVisitorBase&lt; DefaultPolicy &gt;</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr><td class="entry"><a class="el" href="classarmnn_1_1_layer_visitor_base.xhtml#ac57d22126a9131108214df9177addade">VisitMultiplicationLayer</a>(const IConnectableLayer *, const char *) override</td><td class="entry"><a class="el" href="classarmnn_1_1_layer_visitor_base.xhtml">LayerVisitorBase&lt; DefaultPolicy &gt;</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classarmnn_1_1_layer_visitor_base.xhtml#a3150ff2299a2e193952300b8c9edd1e1">VisitNormalizationLayer</a>(const IConnectableLayer *, const NormalizationDescriptor &amp;, const char *) override</td><td class="entry"><a class="el" href="classarmnn_1_1_layer_visitor_base.xhtml">LayerVisitorBase&lt; DefaultPolicy &gt;</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr><td class="entry"><a class="el" href="classarmnn_1_1_layer_visitor_base.xhtml#acc39ddb06acfd91cf3cfb0fcd9337005">VisitOutputLayer</a>(const IConnectableLayer *, LayerBindingId, const char *) override</td><td class="entry"><a class="el" href="classarmnn_1_1_layer_visitor_base.xhtml">LayerVisitorBase&lt; DefaultPolicy &gt;</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classarmnn_1_1_layer_visitor_base.xhtml#a8a240e1b725cc204bb468b6b402e1670">VisitPadLayer</a>(const IConnectableLayer *, const PadDescriptor &amp;, const char *) override</td><td class="entry"><a class="el" href="classarmnn_1_1_layer_visitor_base.xhtml">LayerVisitorBase&lt; DefaultPolicy &gt;</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr><td class="entry"><a class="el" href="classarmnn_1_1_layer_visitor_base.xhtml#a275f4c270ce472abc8701f6475ff7f38">VisitPermuteLayer</a>(const IConnectableLayer *, const PermuteDescriptor &amp;, const char *) override</td><td class="entry"><a class="el" href="classarmnn_1_1_layer_visitor_base.xhtml">LayerVisitorBase&lt; DefaultPolicy &gt;</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classarmnn_1_1_layer_visitor_base.xhtml#a5e369658cb00178eeb9136f1c912fd3f">VisitPooling2dLayer</a>(const IConnectableLayer *, const Pooling2dDescriptor &amp;, const char *) override</td><td class="entry"><a class="el" href="classarmnn_1_1_layer_visitor_base.xhtml">LayerVisitorBase&lt; DefaultPolicy &gt;</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr><td class="entry"><a class="el" href="classarmnn_1_1_layer_visitor_base.xhtml#a79c933bea6fb9986c3baa171be98da5c">VisitPreluLayer</a>(const IConnectableLayer *, const char *) override</td><td class="entry"><a class="el" href="classarmnn_1_1_layer_visitor_base.xhtml">LayerVisitorBase&lt; DefaultPolicy &gt;</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classarmnn_1_1_layer_visitor_base.xhtml#ab80f8f2c2202a4651c63757b307a21b7">VisitQLstmLayer</a>(const IConnectableLayer *, const QLstmDescriptor &amp;, const LstmInputParams &amp;, const char *) override</td><td class="entry"><a class="el" href="classarmnn_1_1_layer_visitor_base.xhtml">LayerVisitorBase&lt; DefaultPolicy &gt;</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr><td class="entry"><a class="el" href="classarmnn_1_1_layer_visitor_base.xhtml#a2fdb21a22a95af72177b4e909741b5c7">VisitQuantizedLstmLayer</a>(const IConnectableLayer *, const QuantizedLstmInputParams &amp;, const char *) override</td><td class="entry"><a class="el" href="classarmnn_1_1_layer_visitor_base.xhtml">LayerVisitorBase&lt; DefaultPolicy &gt;</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classarmnn_1_1_layer_visitor_base.xhtml#a8a6db421f0be147916cb4894ad3885d1">VisitQuantizeLayer</a>(const IConnectableLayer *, const char *) override</td><td class="entry"><a class="el" href="classarmnn_1_1_layer_visitor_base.xhtml">LayerVisitorBase&lt; DefaultPolicy &gt;</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr><td class="entry"><a class="el" href="classarmnn_1_1_layer_visitor_base.xhtml#a0e6452322927acf6fe4e38ca9cc6d117">VisitRankLayer</a>(const IConnectableLayer *, const char *) override</td><td class="entry"><a class="el" href="classarmnn_1_1_layer_visitor_base.xhtml">LayerVisitorBase&lt; DefaultPolicy &gt;</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classarmnn_1_1_layer_visitor_base.xhtml#a4aafbeec347992842c3e18eaf735cbfc">VisitReduceLayer</a>(const IConnectableLayer *, const ReduceDescriptor &amp;, const char *) override</td><td class="entry"><a class="el" href="classarmnn_1_1_layer_visitor_base.xhtml">LayerVisitorBase&lt; DefaultPolicy &gt;</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr><td class="entry"><a class="el" href="classarmnn_1_1_layer_visitor_base.xhtml#a9ebd504c48864d63917836e0dc335725">VisitReshapeLayer</a>(const IConnectableLayer *, const ReshapeDescriptor &amp;, const char *) override</td><td class="entry"><a class="el" href="classarmnn_1_1_layer_visitor_base.xhtml">LayerVisitorBase&lt; DefaultPolicy &gt;</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classarmnn_1_1_layer_visitor_base.xhtml#a49c296c5d0f9efb76f165954cf40c281">VisitResizeLayer</a>(const IConnectableLayer *, const ResizeDescriptor &amp;, const char *) override</td><td class="entry"><a class="el" href="classarmnn_1_1_layer_visitor_base.xhtml">LayerVisitorBase&lt; DefaultPolicy &gt;</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr><td class="entry"><a class="el" href="classarmnn_1_1_layer_visitor_base.xhtml#a1c023b3170bed9368b65730bc7fff60b">VisitSliceLayer</a>(const IConnectableLayer *, const SliceDescriptor &amp;, const char *) override</td><td class="entry"><a class="el" href="classarmnn_1_1_layer_visitor_base.xhtml">LayerVisitorBase&lt; DefaultPolicy &gt;</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classarmnn_1_1_layer_visitor_base.xhtml#abd8b0b2e365bbeabceddc35a1cb52916">VisitSoftmaxLayer</a>(const IConnectableLayer *, const SoftmaxDescriptor &amp;, const char *) override</td><td class="entry"><a class="el" href="classarmnn_1_1_layer_visitor_base.xhtml">LayerVisitorBase&lt; DefaultPolicy &gt;</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr><td class="entry"><a class="el" href="classarmnn_1_1_layer_visitor_base.xhtml#a9478c4f41840a2e2c12b7f336e725a8a">VisitSpaceToBatchNdLayer</a>(const IConnectableLayer *, const SpaceToBatchNdDescriptor &amp;, const char *) override</td><td class="entry"><a class="el" href="classarmnn_1_1_layer_visitor_base.xhtml">LayerVisitorBase&lt; DefaultPolicy &gt;</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classarmnn_1_1_layer_visitor_base.xhtml#acdedda623455cc7a0f982d6f4e96d53a">VisitSpaceToDepthLayer</a>(const IConnectableLayer *, const SpaceToDepthDescriptor &amp;, const char *) override</td><td class="entry"><a class="el" href="classarmnn_1_1_layer_visitor_base.xhtml">LayerVisitorBase&lt; DefaultPolicy &gt;</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr><td class="entry"><a class="el" href="classarmnn_1_1_layer_visitor_base.xhtml#a8689a80f8939de6323319aba5806ee9e">VisitSplitterLayer</a>(const IConnectableLayer *, const ViewsDescriptor &amp;, const char *) override</td><td class="entry"><a class="el" href="classarmnn_1_1_layer_visitor_base.xhtml">LayerVisitorBase&lt; DefaultPolicy &gt;</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classarmnn_1_1_layer_visitor_base.xhtml#a8b47d411d147aa420f7a69356d84fb80">VisitStackLayer</a>(const IConnectableLayer *, const StackDescriptor &amp;, const char *) override</td><td class="entry"><a class="el" href="classarmnn_1_1_layer_visitor_base.xhtml">LayerVisitorBase&lt; DefaultPolicy &gt;</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr><td class="entry"><a class="el" href="classarmnn_1_1_layer_visitor_base.xhtml#a3c15053a7e295099a1a34c4add5a03b8">VisitStandInLayer</a>(const IConnectableLayer *, const StandInDescriptor &amp;, const char *) override</td><td class="entry"><a class="el" href="classarmnn_1_1_layer_visitor_base.xhtml">LayerVisitorBase&lt; DefaultPolicy &gt;</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classarmnn_1_1_layer_visitor_base.xhtml#a31862ce4ffaddde96ebe0afcf04f3577">VisitStridedSliceLayer</a>(const IConnectableLayer *, const StridedSliceDescriptor &amp;, const char *) override</td><td class="entry"><a class="el" href="classarmnn_1_1_layer_visitor_base.xhtml">LayerVisitorBase&lt; DefaultPolicy &gt;</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr><td class="entry"><a class="el" href="classarmnn_1_1_layer_visitor_base.xhtml#ac42c3a57a82260c8315d4f0320620934">VisitSubtractionLayer</a>(const IConnectableLayer *, const char *) override</td><td class="entry"><a class="el" href="classarmnn_1_1_layer_visitor_base.xhtml">LayerVisitorBase&lt; DefaultPolicy &gt;</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classarmnn_1_1_layer_visitor_base.xhtml#a877d400155151a5afba9f0b17fbcf8f3">VisitSwitchLayer</a>(const IConnectableLayer *, const char *) override</td><td class="entry"><a class="el" href="classarmnn_1_1_layer_visitor_base.xhtml">LayerVisitorBase&lt; DefaultPolicy &gt;</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr><td class="entry"><a class="el" href="classarmnn_1_1_layer_visitor_base.xhtml#a4dfb04de9aa0b8b55c70fe96af13e1e1">VisitTransposeConvolution2dLayer</a>(const IConnectableLayer *, const TransposeConvolution2dDescriptor &amp;, const ConstTensor &amp;, const Optional&lt; ConstTensor &gt; &amp;, const char *) override</td><td class="entry"><a class="el" href="classarmnn_1_1_layer_visitor_base.xhtml">LayerVisitorBase&lt; DefaultPolicy &gt;</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classarmnn_1_1_layer_visitor_base.xhtml#a2cb213b083367f4fe9bed2916206525f">VisitTransposeLayer</a>(const IConnectableLayer *, const TransposeDescriptor &amp;, const char *) override</td><td class="entry"><a class="el" href="classarmnn_1_1_layer_visitor_base.xhtml">LayerVisitorBase&lt; DefaultPolicy &gt;</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr><td class="entry"><a class="el" href="classarmnn_1_1_layer_visitor_base.xhtml#ab59e5e8c65aa44857c27db70fc412baa">~LayerVisitorBase</a>()</td><td class="entry"><a class="el" href="classarmnn_1_1_layer_visitor_base.xhtml">LayerVisitorBase&lt; DefaultPolicy &gt;</a></td><td class="entry"><span class="mlabel">inline</span><span class="mlabel">protected</span><span class="mlabel">virtual</span></td></tr>
</table></div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="footer">Generated on Tue May 24 2022 11:27:23 for ArmNN by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.13 </li>
  </ul>
</div>
</body>
</html>
