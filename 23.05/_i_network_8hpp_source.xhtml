<!-- Copyright (c) 2020 ARM Limited. -->
<!--                                 -->
<!-- SPDX-License-Identifier: MIT    -->
<!--                                 -->
<!-- HTML header for doxygen 1.8.13-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.17"/>
<meta name="robots" content="NOINDEX, NOFOLLOW" />
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>ArmNN: include/armnn/INetwork.hpp Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script>
<script type="text/javascript" async="async" src="http://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="stylesheet.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <img alt="ArmNN" src="Arm_NN_horizontal_blue.png" style="max-width: 10rem; margin-top: .5rem; margin-left 10px"/>
  <td style="padding-left: 0.5em;">
   <div id="projectname">
   &#160;<span id="projectnumber">23.05</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.17 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "search",false,'Search');
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(document).ready(function(){initNavTree('_i_network_8hpp_source.xhtml',''); initResizable(); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="headertitle">
<div class="title">INetwork.hpp</div>  </div>
</div><!--header-->
<div class="contents">
<a href="_i_network_8hpp.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="comment">//</span></div>
<div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="comment">// Copyright Â© 2017-2023 Arm Ltd and Contributors. All rights reserved.</span></div>
<div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="comment">// SPDX-License-Identifier: MIT</span></div>
<div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="comment">//</span></div>
<div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="preprocessor">#pragma once</span></div>
<div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160; </div>
<div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="preprocessor">#include &lt;<a class="code" href="_backend_options_8hpp.xhtml">armnn/BackendOptions.hpp</a>&gt;</span></div>
<div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="preprocessor">#include &lt;<a class="code" href="_deprecated_8hpp.xhtml">armnn/Deprecated.hpp</a>&gt;</span></div>
<div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="preprocessor">#include &lt;<a class="code" href="_descriptors_fwd_8hpp.xhtml">armnn/DescriptorsFwd.hpp</a>&gt;</span></div>
<div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="preprocessor">#include &lt;<a class="code" href="_i_strategy_8hpp.xhtml">armnn/IStrategy.hpp</a>&gt;</span></div>
<div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;<span class="preprocessor">#include &lt;<a class="code" href="_network_fwd_8hpp.xhtml">armnn/NetworkFwd.hpp</a>&gt;</span></div>
<div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;<span class="preprocessor">#include &lt;<a class="code" href="_optional_8hpp.xhtml">armnn/Optional.hpp</a>&gt;</span></div>
<div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;<span class="preprocessor">#include &lt;<a class="code" href="_tensor_fwd_8hpp.xhtml">armnn/TensorFwd.hpp</a>&gt;</span></div>
<div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;<span class="preprocessor">#include &lt;<a class="code" href="_logging_8hpp.xhtml">armnn/Logging.hpp</a>&gt;</span></div>
<div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;<span class="preprocessor">#include &lt;<a class="code" href="_tensor_handle_8hpp.xhtml">armnn/backends/TensorHandle.hpp</a>&gt;</span></div>
<div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160; </div>
<div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;<span class="preprocessor">#include &lt;memory&gt;</span></div>
<div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;<span class="preprocessor">#include &lt;vector&gt;</span></div>
<div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160; </div>
<div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;<span class="keyword">namespace </span><a class="code" href="namespacearmnn.xhtml">armnn</a></div>
<div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;{<span class="comment"></span></div>
<div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;<span class="comment">/// @brief An input connection slot for a layer.</span></div>
<div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;<span class="comment">/// The input slot can be connected to an output slot of the preceding layer in the graph.</span></div>
<div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;<span class="comment">/// Only one connection to the input slot is allowed.</span></div>
<div class="line"><a name="l00025"></a><span class="lineno"><a class="line" href="classarmnn_1_1_i_input_slot.xhtml">   25</a></span>&#160;<span class="comment"></span><span class="keyword">class </span><a class="code" href="classarmnn_1_1_i_input_slot.xhtml">IInputSlot</a></div>
<div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;{</div>
<div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;<span class="keyword">public</span>:</div>
<div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;    <span class="keyword">virtual</span> <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_i_output_slot.xhtml">IOutputSlot</a>* <a class="code" href="classarmnn_1_1_i_input_slot.xhtml#a81fbf6103761e55061b62ba989b00f10">GetConnection</a>() <span class="keyword">const</span> = 0;</div>
<div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;    <span class="keyword">virtual</span> <a class="code" href="classarmnn_1_1_i_output_slot.xhtml">IOutputSlot</a>* <a class="code" href="classarmnn_1_1_i_input_slot.xhtml#a81fbf6103761e55061b62ba989b00f10">GetConnection</a>() = 0;</div>
<div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;    <span class="keyword">virtual</span> <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml">IConnectableLayer</a>&amp; <a class="code" href="classarmnn_1_1_i_input_slot.xhtml#a22b3f11f56aa924c0c1b6ee4d6cc90e1">GetOwningIConnectableLayer</a>() <span class="keyword">const</span> = 0;</div>
<div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;    <span class="keyword">virtual</span> <a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml">IConnectableLayer</a>&amp; <a class="code" href="classarmnn_1_1_i_input_slot.xhtml#a22b3f11f56aa924c0c1b6ee4d6cc90e1">GetOwningIConnectableLayer</a>() = 0;</div>
<div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;    <span class="keyword">virtual</span> <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> <a class="code" href="classarmnn_1_1_i_input_slot.xhtml#a9b2d963c1755ade4b2cf70e192fed371">GetSlotIndex</a>() <span class="keyword">const</span> = 0;</div>
<div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160; </div>
<div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;<span class="keyword">protected</span>:<span class="comment"></span></div>
<div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;<span class="comment">   /// Not user deletable.</span></div>
<div class="line"><a name="l00036"></a><span class="lineno"><a class="line" href="classarmnn_1_1_i_input_slot.xhtml#af9d1da899b5c925de16bc0a1fb49dc61">   36</a></span>&#160;<span class="comment"></span>    <a class="code" href="classarmnn_1_1_i_input_slot.xhtml#af9d1da899b5c925de16bc0a1fb49dc61">~IInputSlot</a>() {}</div>
<div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;};</div>
<div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;<span class="comment"></span> </div>
<div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;<span class="comment">/// @brief An output connection slot for a layer.</span></div>
<div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;<span class="comment">/// The output slot may be connected to 1 or more input slots of subsequent layers in the graph.</span></div>
<div class="line"><a name="l00041"></a><span class="lineno"><a class="line" href="classarmnn_1_1_i_output_slot.xhtml">   41</a></span>&#160;<span class="comment"></span><span class="keyword">class </span><a class="code" href="classarmnn_1_1_i_output_slot.xhtml">IOutputSlot</a></div>
<div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;{</div>
<div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;<span class="keyword">public</span>:</div>
<div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;    <span class="keyword">virtual</span> <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> <a class="code" href="classarmnn_1_1_i_output_slot.xhtml#aab97b09d9ee85a105883949abcae52f3">GetNumConnections</a>() <span class="keyword">const</span> = 0;</div>
<div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;    <span class="keyword">virtual</span> <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_i_input_slot.xhtml">IInputSlot</a>* <a class="code" href="classarmnn_1_1_i_output_slot.xhtml#a9fffb92dc6d2edd5258d574a5862fc83">GetConnection</a>(<span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> index) <span class="keyword">const</span> = 0;</div>
<div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;    <span class="keyword">virtual</span> <a class="code" href="classarmnn_1_1_i_input_slot.xhtml">IInputSlot</a>* <a class="code" href="classarmnn_1_1_i_output_slot.xhtml#a9fffb92dc6d2edd5258d574a5862fc83">GetConnection</a>(<span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> outputindex) = 0;</div>
<div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160; </div>
<div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;    <span class="keyword">virtual</span> <span class="keywordtype">void</span> <a class="code" href="classarmnn_1_1_i_output_slot.xhtml#a5ee4a6c9a2481245487b1b1a70d20fd0">SetTensorInfo</a>(<span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a>&amp; tensorInfo) = 0;</div>
<div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;    <span class="keyword">virtual</span> <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a>&amp; <a class="code" href="classarmnn_1_1_i_output_slot.xhtml#a9943775a364fc4ab53b85ac88f311886">GetTensorInfo</a>() <span class="keyword">const</span> = 0;</div>
<div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;    <span class="keyword">virtual</span> <span class="keywordtype">bool</span> <a class="code" href="classarmnn_1_1_i_output_slot.xhtml#ab4e57caf059794897b17266090ebcb39">IsTensorInfoSet</a>() <span class="keyword">const</span> = 0;</div>
<div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160; </div>
<div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;    <span class="keyword">virtual</span> <span class="keywordtype">int</span> <a class="code" href="classarmnn_1_1_i_output_slot.xhtml#ac1835f8756a9f03c02fcf9664e3a0fce">Connect</a>(<a class="code" href="classarmnn_1_1_i_input_slot.xhtml">IInputSlot</a>&amp; destination) = 0;</div>
<div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;    <span class="keyword">virtual</span> <span class="keywordtype">void</span> <a class="code" href="classarmnn_1_1_i_output_slot.xhtml#ae16a4d0c56ca96e5d61785bd3e3e7992">Disconnect</a>(<a class="code" href="classarmnn_1_1_i_input_slot.xhtml">IInputSlot</a>&amp; slot) = 0;</div>
<div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160; </div>
<div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;    <span class="keyword">virtual</span> <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> <a class="code" href="classarmnn_1_1_i_output_slot.xhtml#a41d30a9cd272e05986d71a69d6ad618b">CalculateIndexOnOwner</a>() <span class="keyword">const</span> = 0;</div>
<div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160; </div>
<div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;    <span class="keyword">virtual</span> <a class="code" href="_types_8hpp.xhtml#af22094b802160f09f7c89ad9eee10084">LayerGuid</a> <a class="code" href="classarmnn_1_1_i_output_slot.xhtml#ad0c3555b126975ad6b3e250fe2a59534">GetOwningLayerGuid</a>() <span class="keyword">const</span> = 0;</div>
<div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160; </div>
<div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;    <span class="keyword">virtual</span> <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml">IConnectableLayer</a>&amp; <a class="code" href="classarmnn_1_1_i_output_slot.xhtml#a22b3f11f56aa924c0c1b6ee4d6cc90e1">GetOwningIConnectableLayer</a>() <span class="keyword">const</span> = 0;</div>
<div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;    <span class="keyword">virtual</span> <a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml">IConnectableLayer</a>&amp; <a class="code" href="classarmnn_1_1_i_output_slot.xhtml#a22b3f11f56aa924c0c1b6ee4d6cc90e1">GetOwningIConnectableLayer</a>() = 0;</div>
<div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160; </div>
<div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;<span class="keyword">protected</span>:<span class="comment"></span></div>
<div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;<span class="comment">    /// Not user deletable.</span></div>
<div class="line"><a name="l00064"></a><span class="lineno"><a class="line" href="classarmnn_1_1_i_output_slot.xhtml#aefb9214c1e4bc5f50e84d113e52e1242">   64</a></span>&#160;<span class="comment"></span>    <a class="code" href="classarmnn_1_1_i_output_slot.xhtml#aefb9214c1e4bc5f50e84d113e52e1242">~IOutputSlot</a>() {}</div>
<div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;};</div>
<div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;<span class="comment"></span> </div>
<div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;<span class="comment">/// @brief Interface for a layer that is connectable to other layers via InputSlots and OutputSlots.</span></div>
<div class="line"><a name="l00068"></a><span class="lineno"><a class="line" href="classarmnn_1_1_i_connectable_layer.xhtml">   68</a></span>&#160;<span class="comment"></span><span class="keyword">class </span><a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml">IConnectableLayer</a></div>
<div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;{</div>
<div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;<span class="keyword">public</span>:<span class="comment"></span></div>
<div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;<span class="comment">    /// Returns the name of the layer</span></div>
<div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;<span class="comment"></span>    <span class="keyword">virtual</span> <span class="keyword">const</span> <span class="keywordtype">char</span>* <a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml#afcc1c3a20bd2860e0ddd21674389246f">GetName</a>() <span class="keyword">const</span> = 0;</div>
<div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;<span class="comment"></span> </div>
<div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;<span class="comment">    /// Returns the number of connectable input slots</span></div>
<div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;<span class="comment"></span>    <span class="keyword">virtual</span> <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> <a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml#a9c2cba04b6d7ace4fc2a2436b82a5a63">GetNumInputSlots</a>() <span class="keyword">const</span> = 0;</div>
<div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;<span class="comment"></span> </div>
<div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;<span class="comment">    /// Returns the number of connectable output slots</span></div>
<div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;<span class="comment"></span>    <span class="keyword">virtual</span> <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> <a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml#ac2dac3b61c94de52093616be4ab17f8d">GetNumOutputSlots</a>() <span class="keyword">const</span> = 0;</div>
<div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;<span class="comment"></span> </div>
<div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;<span class="comment">    /// Get a const input slot handle by slot index</span></div>
<div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;<span class="comment"></span>    <span class="keyword">virtual</span> <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_i_input_slot.xhtml">IInputSlot</a>&amp; <a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml#a6ec9e0eb66d7d6a01240492a0b18104c">GetInputSlot</a>(<span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> index) <span class="keyword">const</span> = 0;</div>
<div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;<span class="comment"></span> </div>
<div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;<span class="comment">    /// Get the input slot handle by slot index</span></div>
<div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;<span class="comment"></span>    <span class="keyword">virtual</span> <a class="code" href="classarmnn_1_1_i_input_slot.xhtml">IInputSlot</a>&amp; <a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml#a6ec9e0eb66d7d6a01240492a0b18104c">GetInputSlot</a>(<span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> index) = 0;</div>
<div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;<span class="comment"></span> </div>
<div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;<span class="comment">    /// Get the const output slot handle by slot index</span></div>
<div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;<span class="comment"></span>    <span class="keyword">virtual</span> <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_i_output_slot.xhtml">IOutputSlot</a>&amp; <a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml#a80ac4eda2e7f2757ec9dd96fc96dbd16">GetOutputSlot</a>(<span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> index) <span class="keyword">const</span> = 0;</div>
<div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;<span class="comment"></span> </div>
<div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;<span class="comment">    /// Get the output slot handle by slot index</span></div>
<div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;<span class="comment"></span>    <span class="keyword">virtual</span> <a class="code" href="classarmnn_1_1_i_output_slot.xhtml">IOutputSlot</a>&amp; <a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml#a80ac4eda2e7f2757ec9dd96fc96dbd16">GetOutputSlot</a>(<span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> index) = 0;</div>
<div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;<span class="comment"></span> </div>
<div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;<span class="comment">    /// Infer the shape of the output(s) based on the provided input shape(s)</span></div>
<div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;<span class="comment"></span>    <span class="keyword">virtual</span> std::vector&lt;TensorShape&gt; <a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml#aa6e3c075c888e7c16942a468a3aae33c">InferOutputShapes</a>(<span class="keyword">const</span> std::vector&lt;TensorShape&gt;&amp; inputShapes) <span class="keyword">const</span> = 0;</div>
<div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;<span class="comment"></span> </div>
<div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;<span class="comment">    /// Returns the unique id of the layer</span></div>
<div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;<span class="comment"></span>    <span class="keyword">virtual</span> <a class="code" href="_types_8hpp.xhtml#af22094b802160f09f7c89ad9eee10084">LayerGuid</a> <a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml#afb5e65c770f6cee222db8af7581541a6">GetGuid</a>() <span class="keyword">const</span> = 0;</div>
<div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;<span class="comment"></span> </div>
<div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;<span class="comment">    /// Apply a visitor to this layer</span></div>
<div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;<span class="comment"></span>    <span class="keyword">virtual</span> <span class="keywordtype">void</span> <a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml#a52799628c0df0037c4708de02bec7185">ExecuteStrategy</a>(<a class="code" href="classarmnn_1_1_i_strategy.xhtml">IStrategy</a>&amp; strategy) <span class="keyword">const</span> = 0;</div>
<div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;<span class="comment"></span> </div>
<div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;<span class="comment">    /// Provide a hint for the optimizer as to which backend to prefer for this layer.</span></div>
<div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;<span class="comment">    /// By providing a BackendSelectionHint there is no guarantee the input backend supports that layer.</span></div>
<div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;<span class="comment">    /// If IsLayerSupported() returns false with the backend hint, we default to calling IsLayerSupported()</span></div>
<div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;<span class="comment">    /// on the BackendPreferences vector. Use SetBackendId() if we can guarantee a backend supports that</span></div>
<div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;<span class="comment">    /// layer (IsLayerSupported returns true for a specific backend).</span></div>
<div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;<span class="comment"></span>    <span class="keyword">virtual</span> <span class="keywordtype">void</span> <a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml#a833170f92e96b3ef414b6cf6e5720d2b">BackendSelectionHint</a>(<a class="code" href="classarmnn_1_1_optional.xhtml">Optional&lt;BackendId&gt;</a> backend) = 0;</div>
<div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;<span class="comment"></span> </div>
<div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;<span class="comment">    /// Returns the armnn::LayerType of this layer</span></div>
<div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;<span class="comment"></span>    <span class="keyword">virtual</span> <a class="code" href="namespacearmnn.xhtml#a56943a0946e5f15e5e58054b8e7a04a4">LayerType</a> <a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml#adceb04ae84c524e4d01881e3754a4d59">GetType</a>() <span class="keyword">const</span> = 0;</div>
<div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;<span class="comment"></span> </div>
<div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;<span class="comment">    /// If the layer has a descriptor return it.</span></div>
<div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;<span class="comment">    /// The base descriptor can then be cast to the correct descriptor class.</span></div>
<div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;<span class="comment">    /// If the layer has no associated descriptor a struct of type NullDescriptor will be returned.</span></div>
<div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;<span class="comment">    /// Note: NullDescriptors can be detected because they return true when</span></div>
<div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;<span class="comment">    /// the BaseDescriptor IsNull function is invoked.</span></div>
<div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;<span class="comment"></span>    <span class="keyword">virtual</span> <span class="keyword">const</span> <a class="code" href="structarmnn_1_1_base_descriptor.xhtml">BaseDescriptor</a>&amp; <a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml#a7ce723f9ed0cba4430ec1fc11daa4ce9">GetParameters</a>() <span class="keyword">const</span> = 0;</div>
<div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;<span class="comment"></span> </div>
<div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;<span class="comment">    /// Set the backend of the IConnectableLayer.</span></div>
<div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;<span class="comment">    /// By using SetBackendId() we guarantee that the input backend supports that</span></div>
<div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;<span class="comment">    /// layer (IsLayerSupported returns true for a specific backend). If there is</span></div>
<div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;<span class="comment">    /// no guarantee the input backend supports that layer use BackendSelectionHint().</span></div>
<div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;<span class="comment"></span>    <span class="keyword">virtual</span> <span class="keywordtype">void</span> <a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml#a99cc75f524d831824c5f3730a88e9ca3">SetBackendId</a>(<span class="keyword">const</span> <a class="code" href="classarmnn_1_1_backend_id.xhtml">BackendId</a>&amp; <span class="keywordtype">id</span>) = 0;</div>
<div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160; </div>
<div class="line"><a name="l00124"></a><span class="lineno"><a class="line" href="classarmnn_1_1_i_connectable_layer.xhtml#af978f897fb7e115a901cb7ed95f8e532">  124</a></span>&#160;    <span class="keyword">using</span> <a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml#af978f897fb7e115a901cb7ed95f8e532">ConstantTensors</a> = std::vector&lt;std::reference_wrapper&lt;std::shared_ptr&lt;ConstTensorHandle&gt;&gt;&gt;;</div>
<div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160; </div>
<div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;    <span class="comment">// Returns ConstantTensors of this Layer if it has any, otherwise returns empty vector.</span></div>
<div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;    <span class="keyword">virtual</span> <a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml#af978f897fb7e115a901cb7ed95f8e532">ConstantTensors</a> <a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml#a4c2ceb86756bf870d10a9ebe6fe8e14e">GetConstantTensorsByRef</a>() = 0;</div>
<div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160; </div>
<div class="line"><a name="l00129"></a><span class="lineno"><a class="line" href="classarmnn_1_1_i_connectable_layer.xhtml#aba5c20cadbebd2e7ba67e20a47e31472">  129</a></span>&#160;    <span class="keyword">using</span> <a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml#aba5c20cadbebd2e7ba67e20a47e31472">ImmutableConstantTensors</a> = std::vector&lt;std::reference_wrapper&lt;const std::shared_ptr&lt;ConstTensorHandle&gt;&gt;&gt;;</div>
<div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160; </div>
<div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;    <span class="comment">// Returns ConstantTensors of this Layer if it has any, otherwise returns empty vector.</span></div>
<div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;    <span class="keyword">virtual</span> <a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml#aba5c20cadbebd2e7ba67e20a47e31472">ImmutableConstantTensors</a> <a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml#a4c2ceb86756bf870d10a9ebe6fe8e14e">GetConstantTensorsByRef</a>() <span class="keyword">const</span> = 0;</div>
<div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160; </div>
<div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;<span class="keyword">protected</span>:<span class="comment"></span></div>
<div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;<span class="comment">      /// Objects are not deletable via the handle</span></div>
<div class="line"><a name="l00136"></a><span class="lineno"><a class="line" href="classarmnn_1_1_i_connectable_layer.xhtml#a8c7faf37c1d965431aaa02ae934d67ee">  136</a></span>&#160;<span class="comment"></span>    <a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml#a8c7faf37c1d965431aaa02ae934d67ee">~IConnectableLayer</a>() {}</div>
<div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;};</div>
<div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160; </div>
<div class="line"><a name="l00139"></a><span class="lineno"><a class="line" href="structarmnn_1_1_optimizer_options.xhtml">  139</a></span>&#160;<span class="keyword">struct </span><a class="code" href="structarmnn_1_1_optimizer_options.xhtml">OptimizerOptions</a></div>
<div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;{</div>
<div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;    <a class="code" href="_deprecated_8hpp.xhtml#af16119336bd0dfbfbc83fc283151067e">ARMNN_DEPRECATED_MSG_REMOVAL_DATE</a>(<span class="stringliteral">&quot;Use ABI stable OptimizerOptionsOpaque instead.&quot;</span>, <span class="stringliteral">&quot;24.02&quot;</span>)</div>
<div class="line"><a name="l00142"></a><span class="lineno"><a class="line" href="structarmnn_1_1_optimizer_options.xhtml#ae8a327863f2223b04657a0fa647837e1">  142</a></span>&#160;    <a class="code" href="structarmnn_1_1_optimizer_options.xhtml">OptimizerOptions</a>()</div>
<div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;            : <a class="code" href="structarmnn_1_1_optimizer_options.xhtml#a6e1a42622ca43dafc7ba8e684c016eb4">m_ReduceFp32ToFp16</a>(false)</div>
<div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;            , <a class="code" href="structarmnn_1_1_optimizer_options.xhtml#a69eb14082d40fa0a3cff50457344a5e0">m_Debug</a>(false)</div>
<div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;            , <a class="code" href="structarmnn_1_1_optimizer_options.xhtml#afc07add3304c3d79293acb881c2168df">m_DebugToFile</a>(false)</div>
<div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;            , <a class="code" href="structarmnn_1_1_optimizer_options.xhtml#a11f463726addcc1d2845266997d79e9c">m_ReduceFp32ToBf16</a>(false)</div>
<div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;            , <a class="code" href="structarmnn_1_1_optimizer_options.xhtml#a9416d94a8aad7cdfa47eb35e825cbda5">m_shapeInferenceMethod</a>(<a class="code" href="namespacearmnn.xhtml">armnn</a>::<a class="code" href="namespacearmnn.xhtml#adf57837d00e8352d9b5cc5ab1fb5fee9">ShapeInferenceMethod</a>::ValidateOnly)</div>
<div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;            , <a class="code" href="structarmnn_1_1_optimizer_options.xhtml#a05c1bba6ba3ecc1339d4c4c10c0d8890">m_ImportEnabled</a>(false)</div>
<div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;            , <a class="code" href="structarmnn_1_1_optimizer_options.xhtml#a71194277c60153a5f86539f5d39f01db">m_ModelOptions</a>()</div>
<div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;            , <a class="code" href="structarmnn_1_1_optimizer_options.xhtml#a1b1892da2aaf7eaedaa38671d56b7f19">m_ProfilingEnabled</a>(false)</div>
<div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;            , <a class="code" href="structarmnn_1_1_optimizer_options.xhtml#a0054f53e4e70bb39c000bcf240627b18">m_ExportEnabled</a>(false)</div>
<div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;            , <a class="code" href="structarmnn_1_1_optimizer_options.xhtml#a9ef8ddbeee4b869e4c68eb2ed278b8d9">m_AllowExpandedDims</a>(false)</div>
<div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;    {}</div>
<div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160; </div>
<div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;    <a class="code" href="_deprecated_8hpp.xhtml#af16119336bd0dfbfbc83fc283151067e">ARMNN_DEPRECATED_MSG_REMOVAL_DATE</a>(<span class="stringliteral">&quot;Use ABI stable OptimizerOptionsOpaque instead.&quot;</span>, <span class="stringliteral">&quot;24.02&quot;</span>)</div>
<div class="line"><a name="l00156"></a><span class="lineno"><a class="line" href="structarmnn_1_1_optimizer_options.xhtml#a8a223a15500bf1c12fe5b07f9bb7fea0">  156</a></span>&#160;    <a class="code" href="structarmnn_1_1_optimizer_options.xhtml">OptimizerOptions</a>(<span class="keywordtype">bool</span> reduceFp32ToFp16, <span class="keywordtype">bool</span> debug, <span class="keywordtype">bool</span> reduceFp32ToBf16, <span class="keywordtype">bool</span> importEnabled,</div>
<div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160;                     <a class="code" href="namespacearmnn.xhtml#a5b6893cda5b69359a4244c06054da18f">ModelOptions</a> modelOptions = {}, <span class="keywordtype">bool</span> exportEnabled = <span class="keyword">false</span>, <span class="keywordtype">bool</span> debugToFile = <span class="keyword">false</span>)</div>
<div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;            : <a class="code" href="structarmnn_1_1_optimizer_options.xhtml#a6e1a42622ca43dafc7ba8e684c016eb4">m_ReduceFp32ToFp16</a>(reduceFp32ToFp16)</div>
<div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160;            , <a class="code" href="structarmnn_1_1_optimizer_options.xhtml#a69eb14082d40fa0a3cff50457344a5e0">m_Debug</a>(debug)</div>
<div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160;            , <a class="code" href="structarmnn_1_1_optimizer_options.xhtml#afc07add3304c3d79293acb881c2168df">m_DebugToFile</a>(debugToFile)</div>
<div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160;            , <a class="code" href="structarmnn_1_1_optimizer_options.xhtml#a11f463726addcc1d2845266997d79e9c">m_ReduceFp32ToBf16</a>(reduceFp32ToBf16)</div>
<div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160;            , <a class="code" href="structarmnn_1_1_optimizer_options.xhtml#a9416d94a8aad7cdfa47eb35e825cbda5">m_shapeInferenceMethod</a>(<a class="code" href="namespacearmnn.xhtml#adf57837d00e8352d9b5cc5ab1fb5fee9af6486a22a9bb11959bfae60a3e5174b1">armnn::ShapeInferenceMethod::ValidateOnly</a>)</div>
<div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160;            , <a class="code" href="structarmnn_1_1_optimizer_options.xhtml#a05c1bba6ba3ecc1339d4c4c10c0d8890">m_ImportEnabled</a>(importEnabled)</div>
<div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;            , <a class="code" href="structarmnn_1_1_optimizer_options.xhtml#a71194277c60153a5f86539f5d39f01db">m_ModelOptions</a>(modelOptions)</div>
<div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160;            , <a class="code" href="structarmnn_1_1_optimizer_options.xhtml#a1b1892da2aaf7eaedaa38671d56b7f19">m_ProfilingEnabled</a>(<span class="keyword">false</span>)</div>
<div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160;            , <a class="code" href="structarmnn_1_1_optimizer_options.xhtml#a0054f53e4e70bb39c000bcf240627b18">m_ExportEnabled</a>(exportEnabled)</div>
<div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160;            , <a class="code" href="structarmnn_1_1_optimizer_options.xhtml#a9ef8ddbeee4b869e4c68eb2ed278b8d9">m_AllowExpandedDims</a>(<span class="keyword">false</span>)</div>
<div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160;    {</div>
<div class="line"><a name="l00169"></a><span class="lineno">  169</span>&#160;    }</div>
<div class="line"><a name="l00170"></a><span class="lineno">  170</span>&#160; </div>
<div class="line"><a name="l00171"></a><span class="lineno">  171</span>&#160;    <a class="code" href="_deprecated_8hpp.xhtml#af16119336bd0dfbfbc83fc283151067e">ARMNN_DEPRECATED_MSG_REMOVAL_DATE</a>(<span class="stringliteral">&quot;Use ABI stable OptimizerOptionsOpaque instead.&quot;</span>, <span class="stringliteral">&quot;24.02&quot;</span>)</div>
<div class="line"><a name="l00172"></a><span class="lineno"><a class="line" href="structarmnn_1_1_optimizer_options.xhtml#a9213662dce74c39269d39b363b42d21d">  172</a></span>&#160;    <a class="code" href="structarmnn_1_1_optimizer_options.xhtml">OptimizerOptions</a>(<span class="keywordtype">bool</span> reduceFp32ToFp16, <span class="keywordtype">bool</span> debug, <span class="keywordtype">bool</span> reduceFp32ToBf16 = false,</div>
<div class="line"><a name="l00173"></a><span class="lineno">  173</span>&#160;                     <a class="code" href="namespacearmnn.xhtml#adf57837d00e8352d9b5cc5ab1fb5fee9">ShapeInferenceMethod</a> shapeInferenceMethod = <a class="code" href="namespacearmnn.xhtml">armnn</a>::<a class="code" href="namespacearmnn.xhtml#adf57837d00e8352d9b5cc5ab1fb5fee9">ShapeInferenceMethod</a>::ValidateOnly,</div>
<div class="line"><a name="l00174"></a><span class="lineno">  174</span>&#160;                     <span class="keywordtype">bool</span> importEnabled = false, <a class="code" href="namespacearmnn.xhtml#a5b6893cda5b69359a4244c06054da18f">ModelOptions</a> modelOptions = {}, <span class="keywordtype">bool</span> exportEnabled = <span class="keyword">false</span>,</div>
<div class="line"><a name="l00175"></a><span class="lineno">  175</span>&#160;                     <span class="keywordtype">bool</span> debugToFile = <span class="keyword">false</span>, <span class="keywordtype">bool</span> allowExpandedDims = <span class="keyword">false</span>)</div>
<div class="line"><a name="l00176"></a><span class="lineno">  176</span>&#160;            : <a class="code" href="structarmnn_1_1_optimizer_options.xhtml#a6e1a42622ca43dafc7ba8e684c016eb4">m_ReduceFp32ToFp16</a>(reduceFp32ToFp16)</div>
<div class="line"><a name="l00177"></a><span class="lineno">  177</span>&#160;            , <a class="code" href="structarmnn_1_1_optimizer_options.xhtml#a69eb14082d40fa0a3cff50457344a5e0">m_Debug</a>(debug)</div>
<div class="line"><a name="l00178"></a><span class="lineno">  178</span>&#160;            , <a class="code" href="structarmnn_1_1_optimizer_options.xhtml#afc07add3304c3d79293acb881c2168df">m_DebugToFile</a>(debugToFile)</div>
<div class="line"><a name="l00179"></a><span class="lineno">  179</span>&#160;            , <a class="code" href="structarmnn_1_1_optimizer_options.xhtml#a11f463726addcc1d2845266997d79e9c">m_ReduceFp32ToBf16</a>(reduceFp32ToBf16)</div>
<div class="line"><a name="l00180"></a><span class="lineno">  180</span>&#160;            , <a class="code" href="structarmnn_1_1_optimizer_options.xhtml#a9416d94a8aad7cdfa47eb35e825cbda5">m_shapeInferenceMethod</a>(shapeInferenceMethod)</div>
<div class="line"><a name="l00181"></a><span class="lineno">  181</span>&#160;            , <a class="code" href="structarmnn_1_1_optimizer_options.xhtml#a05c1bba6ba3ecc1339d4c4c10c0d8890">m_ImportEnabled</a>(importEnabled)</div>
<div class="line"><a name="l00182"></a><span class="lineno">  182</span>&#160;            , <a class="code" href="structarmnn_1_1_optimizer_options.xhtml#a71194277c60153a5f86539f5d39f01db">m_ModelOptions</a>(modelOptions)</div>
<div class="line"><a name="l00183"></a><span class="lineno">  183</span>&#160;            , <a class="code" href="structarmnn_1_1_optimizer_options.xhtml#a1b1892da2aaf7eaedaa38671d56b7f19">m_ProfilingEnabled</a>(<span class="keyword">false</span>)</div>
<div class="line"><a name="l00184"></a><span class="lineno">  184</span>&#160;            , <a class="code" href="structarmnn_1_1_optimizer_options.xhtml#a0054f53e4e70bb39c000bcf240627b18">m_ExportEnabled</a>(exportEnabled)</div>
<div class="line"><a name="l00185"></a><span class="lineno">  185</span>&#160;            , <a class="code" href="structarmnn_1_1_optimizer_options.xhtml#a9ef8ddbeee4b869e4c68eb2ed278b8d9">m_AllowExpandedDims</a>(allowExpandedDims)</div>
<div class="line"><a name="l00186"></a><span class="lineno">  186</span>&#160;    {</div>
<div class="line"><a name="l00187"></a><span class="lineno">  187</span>&#160;    }</div>
<div class="line"><a name="l00188"></a><span class="lineno">  188</span>&#160; </div>
<div class="line"><a name="l00189"></a><span class="lineno"><a class="line" href="structarmnn_1_1_optimizer_options.xhtml#a906953de2f5edc60b2c27bd720a70aa4">  189</a></span>&#160;    <span class="keyword">const</span> std::string <a class="code" href="structarmnn_1_1_optimizer_options.xhtml#a906953de2f5edc60b2c27bd720a70aa4">ToString</a>()<span class="keyword"> const</span></div>
<div class="line"><a name="l00190"></a><span class="lineno">  190</span>&#160;<span class="keyword">    </span>{</div>
<div class="line"><a name="l00191"></a><span class="lineno">  191</span>&#160;        std::stringstream stream;</div>
<div class="line"><a name="l00192"></a><span class="lineno">  192</span>&#160;        stream &lt;&lt; <span class="stringliteral">&quot;OptimizerOptions: \n&quot;</span>;</div>
<div class="line"><a name="l00193"></a><span class="lineno">  193</span>&#160;        stream &lt;&lt; <span class="stringliteral">&quot;\tReduceFp32ToFp16: &quot;</span> &lt;&lt; <a class="code" href="structarmnn_1_1_optimizer_options.xhtml#a6e1a42622ca43dafc7ba8e684c016eb4">m_ReduceFp32ToFp16</a> &lt;&lt; <span class="stringliteral">&quot;\n&quot;</span>;</div>
<div class="line"><a name="l00194"></a><span class="lineno">  194</span>&#160;        stream &lt;&lt; <span class="stringliteral">&quot;\tReduceFp32ToBf16: &quot;</span> &lt;&lt; <a class="code" href="structarmnn_1_1_optimizer_options.xhtml#a11f463726addcc1d2845266997d79e9c">m_ReduceFp32ToBf16</a> &lt;&lt; <span class="stringliteral">&quot;\n&quot;</span>;</div>
<div class="line"><a name="l00195"></a><span class="lineno">  195</span>&#160;        stream &lt;&lt; <span class="stringliteral">&quot;\tDebug: &quot;</span> &lt;&lt; <a class="code" href="structarmnn_1_1_optimizer_options.xhtml#a69eb14082d40fa0a3cff50457344a5e0">m_Debug</a> &lt;&lt; <span class="stringliteral">&quot;\n&quot;</span>;</div>
<div class="line"><a name="l00196"></a><span class="lineno">  196</span>&#160;        stream &lt;&lt; <span class="stringliteral">&quot;\tDebug to file: &quot;</span> &lt;&lt; <a class="code" href="structarmnn_1_1_optimizer_options.xhtml#afc07add3304c3d79293acb881c2168df">m_DebugToFile</a> &lt;&lt; <span class="stringliteral">&quot;\n&quot;</span>;</div>
<div class="line"><a name="l00197"></a><span class="lineno">  197</span>&#160;        stream &lt;&lt; <span class="stringliteral">&quot;\tShapeInferenceMethod: &quot;</span> &lt;&lt;</div>
<div class="line"><a name="l00198"></a><span class="lineno">  198</span>&#160;               (<a class="code" href="structarmnn_1_1_optimizer_options.xhtml#a9416d94a8aad7cdfa47eb35e825cbda5">m_shapeInferenceMethod</a> == <a class="code" href="namespacearmnn.xhtml#adf57837d00e8352d9b5cc5ab1fb5fee9af6486a22a9bb11959bfae60a3e5174b1">ShapeInferenceMethod::ValidateOnly</a></div>
<div class="line"><a name="l00199"></a><span class="lineno">  199</span>&#160;               ? <span class="stringliteral">&quot;ValidateOnly&quot;</span> : <span class="stringliteral">&quot;InferAndValidate&quot;</span>) &lt;&lt; <span class="stringliteral">&quot;\n&quot;</span>;</div>
<div class="line"><a name="l00200"></a><span class="lineno">  200</span>&#160;        stream &lt;&lt; <span class="stringliteral">&quot;\tImportEnabled: &quot;</span> &lt;&lt; <a class="code" href="structarmnn_1_1_optimizer_options.xhtml#a05c1bba6ba3ecc1339d4c4c10c0d8890">m_ImportEnabled</a> &lt;&lt; <span class="stringliteral">&quot;\n&quot;</span>;</div>
<div class="line"><a name="l00201"></a><span class="lineno">  201</span>&#160;        stream &lt;&lt; <span class="stringliteral">&quot;\tExportEnabled: &quot;</span> &lt;&lt; <a class="code" href="structarmnn_1_1_optimizer_options.xhtml#a0054f53e4e70bb39c000bcf240627b18">m_ExportEnabled</a> &lt;&lt; <span class="stringliteral">&quot;\n&quot;</span>;</div>
<div class="line"><a name="l00202"></a><span class="lineno">  202</span>&#160;        stream &lt;&lt; <span class="stringliteral">&quot;\tProfilingEnabled: &quot;</span> &lt;&lt; <a class="code" href="structarmnn_1_1_optimizer_options.xhtml#a1b1892da2aaf7eaedaa38671d56b7f19">m_ProfilingEnabled</a> &lt;&lt; <span class="stringliteral">&quot;\n&quot;</span>;</div>
<div class="line"><a name="l00203"></a><span class="lineno">  203</span>&#160;        stream &lt;&lt; <span class="stringliteral">&quot;\tAllowExpandedDims: &quot;</span> &lt;&lt; <a class="code" href="structarmnn_1_1_optimizer_options.xhtml#a9ef8ddbeee4b869e4c68eb2ed278b8d9">m_AllowExpandedDims</a> &lt;&lt; <span class="stringliteral">&quot;\n&quot;</span>;</div>
<div class="line"><a name="l00204"></a><span class="lineno">  204</span>&#160; </div>
<div class="line"><a name="l00205"></a><span class="lineno">  205</span>&#160;        stream &lt;&lt; <span class="stringliteral">&quot;\tModelOptions: \n&quot;</span>;</div>
<div class="line"><a name="l00206"></a><span class="lineno">  206</span>&#160;        <span class="keywordflow">for</span> (<span class="keyword">auto</span> optionsGroup : <a class="code" href="structarmnn_1_1_optimizer_options.xhtml#a71194277c60153a5f86539f5d39f01db">m_ModelOptions</a>)</div>
<div class="line"><a name="l00207"></a><span class="lineno">  207</span>&#160;        {</div>
<div class="line"><a name="l00208"></a><span class="lineno">  208</span>&#160;            <span class="keywordflow">for</span> (<span class="keywordtype">size_t</span> i=0; i &lt; optionsGroup.GetOptionCount(); i++)</div>
<div class="line"><a name="l00209"></a><span class="lineno">  209</span>&#160;            {</div>
<div class="line"><a name="l00210"></a><span class="lineno">  210</span>&#160;                <span class="keyword">const</span> <a class="code" href="structarmnn_1_1_backend_options_1_1_backend_option.xhtml">armnn::BackendOptions::BackendOption</a> option = optionsGroup.GetOption(i);</div>
<div class="line"><a name="l00211"></a><span class="lineno">  211</span>&#160;                stream &lt;&lt; <span class="stringliteral">&quot;\t\tBackend: &quot;</span>  &lt;&lt; optionsGroup.GetBackendId() &lt;&lt; <span class="stringliteral">&quot;\n&quot;</span></div>
<div class="line"><a name="l00212"></a><span class="lineno">  212</span>&#160;                       &lt;&lt; <span class="stringliteral">&quot;\t\t\tOption: &quot;</span> &lt;&lt; option.<a class="code" href="structarmnn_1_1_backend_options_1_1_backend_option.xhtml#a9a98946a64f3893b085f650932c9dfee">GetName</a>() &lt;&lt; <span class="stringliteral">&quot;\n&quot;</span></div>
<div class="line"><a name="l00213"></a><span class="lineno">  213</span>&#160;                       &lt;&lt; <span class="stringliteral">&quot;\t\t\tValue: &quot;</span>  &lt;&lt; std::string(option.<a class="code" href="structarmnn_1_1_backend_options_1_1_backend_option.xhtml#a9dd404db54065d13616225910db3dec4">GetValue</a>().<a class="code" href="classarmnn_1_1_backend_options_1_1_var.xhtml#a7ef596a0c429a1a74709cf14d8fa15d2">ToString</a>()) &lt;&lt; <span class="stringliteral">&quot;\n&quot;</span>;</div>
<div class="line"><a name="l00214"></a><span class="lineno">  214</span>&#160;            }</div>
<div class="line"><a name="l00215"></a><span class="lineno">  215</span>&#160;        }</div>
<div class="line"><a name="l00216"></a><span class="lineno">  216</span>&#160; </div>
<div class="line"><a name="l00217"></a><span class="lineno">  217</span>&#160;        <span class="keywordflow">return</span> stream.str();</div>
<div class="line"><a name="l00218"></a><span class="lineno">  218</span>&#160;    }</div>
<div class="line"><a name="l00219"></a><span class="lineno">  219</span>&#160;<span class="comment"></span> </div>
<div class="line"><a name="l00220"></a><span class="lineno">  220</span>&#160;<span class="comment">    /// Reduces all Fp32 operators in the model to Fp16 for faster processing.</span></div>
<div class="line"><a name="l00221"></a><span class="lineno">  221</span>&#160;<span class="comment">    /// @Note This feature works best if all operators of the model are in Fp32. ArmNN will add conversion layers</span></div>
<div class="line"><a name="l00222"></a><span class="lineno">  222</span>&#160;<span class="comment">    ///       between layers that weren&#39;t in Fp32 in the first place or if the operator is not supported in Fp16.</span></div>
<div class="line"><a name="l00223"></a><span class="lineno">  223</span>&#160;<span class="comment">    ///       The overhead of these conversions can lead to a slower overall performance if too many conversions are</span></div>
<div class="line"><a name="l00224"></a><span class="lineno">  224</span>&#160;<span class="comment">    ///       required.</span></div>
<div class="line"><a name="l00225"></a><span class="lineno"><a class="line" href="structarmnn_1_1_optimizer_options.xhtml#a6e1a42622ca43dafc7ba8e684c016eb4">  225</a></span>&#160;<span class="comment"></span>    <span class="keywordtype">bool</span> <a class="code" href="structarmnn_1_1_optimizer_options.xhtml#a6e1a42622ca43dafc7ba8e684c016eb4">m_ReduceFp32ToFp16</a>;</div>
<div class="line"><a name="l00226"></a><span class="lineno">  226</span>&#160;<span class="comment"></span> </div>
<div class="line"><a name="l00227"></a><span class="lineno">  227</span>&#160;<span class="comment">    /// Add debug data for easier troubleshooting</span></div>
<div class="line"><a name="l00228"></a><span class="lineno"><a class="line" href="structarmnn_1_1_optimizer_options.xhtml#a69eb14082d40fa0a3cff50457344a5e0">  228</a></span>&#160;<span class="comment"></span>    <span class="keywordtype">bool</span> <a class="code" href="structarmnn_1_1_optimizer_options.xhtml#a69eb14082d40fa0a3cff50457344a5e0">m_Debug</a>;</div>
<div class="line"><a name="l00229"></a><span class="lineno">  229</span>&#160;<span class="comment"></span> </div>
<div class="line"><a name="l00230"></a><span class="lineno">  230</span>&#160;<span class="comment">    /// Pass debug data to separate output files for easier troubleshooting</span></div>
<div class="line"><a name="l00231"></a><span class="lineno"><a class="line" href="structarmnn_1_1_optimizer_options.xhtml#afc07add3304c3d79293acb881c2168df">  231</a></span>&#160;<span class="comment"></span>    <span class="keywordtype">bool</span> <a class="code" href="structarmnn_1_1_optimizer_options.xhtml#afc07add3304c3d79293acb881c2168df">m_DebugToFile</a>;</div>
<div class="line"><a name="l00232"></a><span class="lineno">  232</span>&#160;<span class="comment"></span> </div>
<div class="line"><a name="l00233"></a><span class="lineno">  233</span>&#160;<span class="comment">    /// @Note This feature has been replaced by enabling Fast Math in compute library backend options.</span></div>
<div class="line"><a name="l00234"></a><span class="lineno">  234</span>&#160;<span class="comment">    /// This is currently a placeholder option</span></div>
<div class="line"><a name="l00235"></a><span class="lineno"><a class="line" href="structarmnn_1_1_optimizer_options.xhtml#a11f463726addcc1d2845266997d79e9c">  235</a></span>&#160;<span class="comment"></span>    <span class="keywordtype">bool</span> <a class="code" href="structarmnn_1_1_optimizer_options.xhtml#a11f463726addcc1d2845266997d79e9c">m_ReduceFp32ToBf16</a>;</div>
<div class="line"><a name="l00236"></a><span class="lineno">  236</span>&#160;<span class="comment"></span> </div>
<div class="line"><a name="l00237"></a><span class="lineno">  237</span>&#160;<span class="comment">    /// Infer output size when not available</span></div>
<div class="line"><a name="l00238"></a><span class="lineno"><a class="line" href="structarmnn_1_1_optimizer_options.xhtml#a9416d94a8aad7cdfa47eb35e825cbda5">  238</a></span>&#160;<span class="comment"></span>    <a class="code" href="namespacearmnn.xhtml#adf57837d00e8352d9b5cc5ab1fb5fee9">ShapeInferenceMethod</a> <a class="code" href="structarmnn_1_1_optimizer_options.xhtml#a9416d94a8aad7cdfa47eb35e825cbda5">m_shapeInferenceMethod</a>;</div>
<div class="line"><a name="l00239"></a><span class="lineno">  239</span>&#160;<span class="comment"></span> </div>
<div class="line"><a name="l00240"></a><span class="lineno">  240</span>&#160;<span class="comment">    /// Enable Import</span></div>
<div class="line"><a name="l00241"></a><span class="lineno"><a class="line" href="structarmnn_1_1_optimizer_options.xhtml#a05c1bba6ba3ecc1339d4c4c10c0d8890">  241</a></span>&#160;<span class="comment"></span>    <span class="keywordtype">bool</span> <a class="code" href="structarmnn_1_1_optimizer_options.xhtml#a05c1bba6ba3ecc1339d4c4c10c0d8890">m_ImportEnabled</a>;</div>
<div class="line"><a name="l00242"></a><span class="lineno">  242</span>&#160;<span class="comment"></span> </div>
<div class="line"><a name="l00243"></a><span class="lineno">  243</span>&#160;<span class="comment">    /// Enable Model Options</span></div>
<div class="line"><a name="l00244"></a><span class="lineno"><a class="line" href="structarmnn_1_1_optimizer_options.xhtml#a71194277c60153a5f86539f5d39f01db">  244</a></span>&#160;<span class="comment"></span>    <a class="code" href="namespacearmnn.xhtml#a5b6893cda5b69359a4244c06054da18f">ModelOptions</a> <a class="code" href="structarmnn_1_1_optimizer_options.xhtml#a71194277c60153a5f86539f5d39f01db">m_ModelOptions</a>;</div>
<div class="line"><a name="l00245"></a><span class="lineno">  245</span>&#160;<span class="comment"></span> </div>
<div class="line"><a name="l00246"></a><span class="lineno">  246</span>&#160;<span class="comment">    /// Enable profiling dump of the optimizer phase</span></div>
<div class="line"><a name="l00247"></a><span class="lineno"><a class="line" href="structarmnn_1_1_optimizer_options.xhtml#a1b1892da2aaf7eaedaa38671d56b7f19">  247</a></span>&#160;<span class="comment"></span>    <span class="keywordtype">bool</span> <a class="code" href="structarmnn_1_1_optimizer_options.xhtml#a1b1892da2aaf7eaedaa38671d56b7f19">m_ProfilingEnabled</a>;</div>
<div class="line"><a name="l00248"></a><span class="lineno">  248</span>&#160;<span class="comment"></span> </div>
<div class="line"><a name="l00249"></a><span class="lineno">  249</span>&#160;<span class="comment">    /// Enable Export</span></div>
<div class="line"><a name="l00250"></a><span class="lineno"><a class="line" href="structarmnn_1_1_optimizer_options.xhtml#a0054f53e4e70bb39c000bcf240627b18">  250</a></span>&#160;<span class="comment"></span>    <span class="keywordtype">bool</span> <a class="code" href="structarmnn_1_1_optimizer_options.xhtml#a0054f53e4e70bb39c000bcf240627b18">m_ExportEnabled</a>;</div>
<div class="line"><a name="l00251"></a><span class="lineno">  251</span>&#160;<span class="comment"></span> </div>
<div class="line"><a name="l00252"></a><span class="lineno">  252</span>&#160;<span class="comment">    /// When calculating tensor sizes, dimensions of size == 1 will be ignored</span></div>
<div class="line"><a name="l00253"></a><span class="lineno"><a class="line" href="structarmnn_1_1_optimizer_options.xhtml#a9ef8ddbeee4b869e4c68eb2ed278b8d9">  253</a></span>&#160;<span class="comment"></span>    <span class="keywordtype">bool</span> <a class="code" href="structarmnn_1_1_optimizer_options.xhtml#a9ef8ddbeee4b869e4c68eb2ed278b8d9">m_AllowExpandedDims</a>;</div>
<div class="line"><a name="l00254"></a><span class="lineno">  254</span>&#160;};</div>
<div class="line"><a name="l00255"></a><span class="lineno">  255</span>&#160;<span class="comment"></span> </div>
<div class="line"><a name="l00256"></a><span class="lineno">  256</span>&#160;<span class="comment">/// ArmNN performs an optimization on each model/network before it gets loaded for execution. OptimizerOptions provides</span></div>
<div class="line"><a name="l00257"></a><span class="lineno">  257</span>&#160;<span class="comment">/// a set of features that allows the user to customize this optimization on a per model basis.</span></div>
<div class="line"><a name="l00258"></a><span class="lineno">  258</span>&#160;<span class="comment"></span><span class="keyword">struct </span><a class="code" href="structarmnn_1_1_optimizer_options_opaque_impl.xhtml">OptimizerOptionsOpaqueImpl</a>;</div>
<div class="line"><a name="l00259"></a><span class="lineno">  259</span>&#160; </div>
<div class="line"><a name="l00260"></a><span class="lineno"><a class="line" href="classarmnn_1_1_optimizer_options_opaque.xhtml">  260</a></span>&#160;<span class="keyword">class </span><a class="code" href="classarmnn_1_1_optimizer_options_opaque.xhtml">OptimizerOptionsOpaque</a></div>
<div class="line"><a name="l00261"></a><span class="lineno">  261</span>&#160;{</div>
<div class="line"><a name="l00262"></a><span class="lineno">  262</span>&#160;<span class="keyword">public</span>:</div>
<div class="line"><a name="l00263"></a><span class="lineno">  263</span>&#160;    <a class="code" href="classarmnn_1_1_optimizer_options_opaque.xhtml#a58fbf98b638ebabb8bad26760f20a554">OptimizerOptionsOpaque</a>();</div>
<div class="line"><a name="l00264"></a><span class="lineno">  264</span>&#160;    <a class="code" href="classarmnn_1_1_optimizer_options_opaque.xhtml#a58fbf98b638ebabb8bad26760f20a554">OptimizerOptionsOpaque</a>(<span class="keyword">const</span> <a class="code" href="classarmnn_1_1_optimizer_options_opaque.xhtml">OptimizerOptionsOpaque</a>&amp; other);</div>
<div class="line"><a name="l00265"></a><span class="lineno">  265</span>&#160;    <a class="code" href="classarmnn_1_1_optimizer_options_opaque.xhtml#a05c07a263bb054a828db2fe3f841e31f">~OptimizerOptionsOpaque</a>();</div>
<div class="line"><a name="l00266"></a><span class="lineno">  266</span>&#160; </div>
<div class="line"><a name="l00267"></a><span class="lineno">  267</span>&#160;    <a class="code" href="classarmnn_1_1_optimizer_options_opaque.xhtml#a58fbf98b638ebabb8bad26760f20a554">OptimizerOptionsOpaque</a>(<span class="keyword">const</span> <a class="code" href="structarmnn_1_1_optimizer_options.xhtml">OptimizerOptions</a>&amp; OptimizerStruct);</div>
<div class="line"><a name="l00268"></a><span class="lineno">  268</span>&#160; </div>
<div class="line"><a name="l00269"></a><span class="lineno">  269</span>&#160;    <a class="code" href="classarmnn_1_1_optimizer_options_opaque.xhtml">OptimizerOptionsOpaque</a>&amp; <a class="code" href="classarmnn_1_1_optimizer_options_opaque.xhtml#a2bb6d411e26a7eb77664bd7040e7e8ab">operator=</a>(<a class="code" href="classarmnn_1_1_optimizer_options_opaque.xhtml">OptimizerOptionsOpaque</a> other);</div>
<div class="line"><a name="l00270"></a><span class="lineno">  270</span>&#160; </div>
<div class="line"><a name="l00271"></a><span class="lineno">  271</span>&#160;    <a class="code" href="classarmnn_1_1_optimizer_options_opaque.xhtml#a58fbf98b638ebabb8bad26760f20a554">OptimizerOptionsOpaque</a>(<span class="keywordtype">bool</span> reduceFp32ToFp16, <span class="keywordtype">bool</span> <a class="code" href="namespacearmnn.xhtml#a4dc0adc6737b5944e7671bee71788407aad42f6697b035b7580e4fef93be20b4d">debug</a>, <span class="keywordtype">bool</span> reduceFp32ToBf16, <span class="keywordtype">bool</span> importEnabled,</div>
<div class="line"><a name="l00272"></a><span class="lineno">  272</span>&#160;                           <a class="code" href="namespacearmnn.xhtml#a5b6893cda5b69359a4244c06054da18f">ModelOptions</a> modelOptions = {}, <span class="keywordtype">bool</span> exportEnabled = <span class="keyword">false</span>, <span class="keywordtype">bool</span> debugToFile = <span class="keyword">false</span>);</div>
<div class="line"><a name="l00273"></a><span class="lineno">  273</span>&#160; </div>
<div class="line"><a name="l00274"></a><span class="lineno">  274</span>&#160;    <a class="code" href="classarmnn_1_1_optimizer_options_opaque.xhtml#a58fbf98b638ebabb8bad26760f20a554">OptimizerOptionsOpaque</a>(<span class="keywordtype">bool</span> reduceFp32ToFp16, <span class="keywordtype">bool</span> <a class="code" href="namespacearmnn.xhtml#a4dc0adc6737b5944e7671bee71788407aad42f6697b035b7580e4fef93be20b4d">debug</a>, <span class="keywordtype">bool</span> reduceFp32ToBf16 = <span class="keyword">false</span>,</div>
<div class="line"><a name="l00275"></a><span class="lineno">  275</span>&#160;                           <a class="code" href="namespacearmnn.xhtml#adf57837d00e8352d9b5cc5ab1fb5fee9">ShapeInferenceMethod</a> shapeInferenceMethod = <a class="code" href="namespacearmnn.xhtml#adf57837d00e8352d9b5cc5ab1fb5fee9af6486a22a9bb11959bfae60a3e5174b1">armnn::ShapeInferenceMethod::ValidateOnly</a>,</div>
<div class="line"><a name="l00276"></a><span class="lineno">  276</span>&#160;                           <span class="keywordtype">bool</span> importEnabled = <span class="keyword">false</span>, <a class="code" href="namespacearmnn.xhtml#a5b6893cda5b69359a4244c06054da18f">ModelOptions</a> modelOptions = {}, <span class="keywordtype">bool</span> exportEnabled = <span class="keyword">false</span>,</div>
<div class="line"><a name="l00277"></a><span class="lineno">  277</span>&#160;                           <span class="keywordtype">bool</span> debugToFile = <span class="keyword">false</span>, <span class="keywordtype">bool</span> allowExpandedDims = <span class="keyword">false</span>);</div>
<div class="line"><a name="l00278"></a><span class="lineno">  278</span>&#160; </div>
<div class="line"><a name="l00279"></a><span class="lineno">  279</span>&#160;    <span class="keyword">const</span> std::string <a class="code" href="classarmnn_1_1_optimizer_options_opaque.xhtml#a906953de2f5edc60b2c27bd720a70aa4">ToString</a>() <span class="keyword">const</span>;</div>
<div class="line"><a name="l00280"></a><span class="lineno">  280</span>&#160; </div>
<div class="line"><a name="l00281"></a><span class="lineno">  281</span>&#160;    <span class="keywordtype">bool</span> <a class="code" href="classarmnn_1_1_optimizer_options_opaque.xhtml#a4527a67076f983e8db3496207d120fb5">GetProfilingEnabled</a>() <span class="keyword">const</span>;</div>
<div class="line"><a name="l00282"></a><span class="lineno">  282</span>&#160; </div>
<div class="line"><a name="l00283"></a><span class="lineno">  283</span>&#160;    <span class="keywordtype">bool</span> <a class="code" href="classarmnn_1_1_optimizer_options_opaque.xhtml#a3cb5ef29e47f60acd88b16d6fee254f5">GetImportEnabled</a>() <span class="keyword">const</span>;</div>
<div class="line"><a name="l00284"></a><span class="lineno">  284</span>&#160; </div>
<div class="line"><a name="l00285"></a><span class="lineno">  285</span>&#160;    <span class="keywordtype">bool</span> <a class="code" href="classarmnn_1_1_optimizer_options_opaque.xhtml#af7a1f38591d1a19952ac13515becc894">GetExportEnabled</a>() <span class="keyword">const</span>;</div>
<div class="line"><a name="l00286"></a><span class="lineno">  286</span>&#160; </div>
<div class="line"><a name="l00287"></a><span class="lineno">  287</span>&#160;    <span class="keywordtype">bool</span> <a class="code" href="classarmnn_1_1_optimizer_options_opaque.xhtml#a70dc46a7e4105cf24df5a5bb58ae07a5">GetReduceFp32ToFp16</a>() <span class="keyword">const</span>;</div>
<div class="line"><a name="l00288"></a><span class="lineno">  288</span>&#160; </div>
<div class="line"><a name="l00289"></a><span class="lineno">  289</span>&#160;    <span class="keywordtype">bool</span> <a class="code" href="classarmnn_1_1_optimizer_options_opaque.xhtml#a41297bcbc0f576cba32fabcdb2f893b8">GetReduceFp32ToBf16</a>() <span class="keyword">const</span>;</div>
<div class="line"><a name="l00290"></a><span class="lineno">  290</span>&#160; </div>
<div class="line"><a name="l00291"></a><span class="lineno">  291</span>&#160;    <span class="keywordtype">bool</span> <a class="code" href="classarmnn_1_1_optimizer_options_opaque.xhtml#a5c25504e5efe52a17f5b0ca45753aaf0">GetDebugEnabled</a>() <span class="keyword">const</span>;</div>
<div class="line"><a name="l00292"></a><span class="lineno">  292</span>&#160; </div>
<div class="line"><a name="l00293"></a><span class="lineno">  293</span>&#160;    <span class="keywordtype">bool</span> <a class="code" href="classarmnn_1_1_optimizer_options_opaque.xhtml#a8933eb842c6152f61535b69bd37c867e">GetDebugToFileEnabled</a>() <span class="keyword">const</span>;</div>
<div class="line"><a name="l00294"></a><span class="lineno">  294</span>&#160; </div>
<div class="line"><a name="l00295"></a><span class="lineno">  295</span>&#160;    <span class="keywordtype">bool</span> <a class="code" href="classarmnn_1_1_optimizer_options_opaque.xhtml#ad6f282c92535e2be398a9b350d4e2ee9">GetAllowExpandedDims</a>() <span class="keyword">const</span>;</div>
<div class="line"><a name="l00296"></a><span class="lineno">  296</span>&#160; </div>
<div class="line"><a name="l00297"></a><span class="lineno">  297</span>&#160;    <a class="code" href="namespacearmnn.xhtml#a5b6893cda5b69359a4244c06054da18f">armnn::ModelOptions</a> <a class="code" href="classarmnn_1_1_optimizer_options_opaque.xhtml#aac024dacf704e6933d1a6b18d5330738">GetModelOptions</a>() <span class="keyword">const</span>;</div>
<div class="line"><a name="l00298"></a><span class="lineno">  298</span>&#160; </div>
<div class="line"><a name="l00299"></a><span class="lineno">  299</span>&#160;    <a class="code" href="namespacearmnn.xhtml#adf57837d00e8352d9b5cc5ab1fb5fee9">armnn::ShapeInferenceMethod</a> <a class="code" href="classarmnn_1_1_optimizer_options_opaque.xhtml#a4d0994094ec68328df73a00304fb4af6">GetShapeInferenceMethod</a>() <span class="keyword">const</span>;</div>
<div class="line"><a name="l00300"></a><span class="lineno">  300</span>&#160; </div>
<div class="line"><a name="l00301"></a><span class="lineno">  301</span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classarmnn_1_1_optimizer_options_opaque.xhtml#a9258f2763407b5dec4c88f7f6109cbd7">SetImportEnabled</a>(<span class="keywordtype">bool</span> ImportState);</div>
<div class="line"><a name="l00302"></a><span class="lineno">  302</span>&#160; </div>
<div class="line"><a name="l00303"></a><span class="lineno">  303</span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classarmnn_1_1_optimizer_options_opaque.xhtml#a8c0b43721b8e82c9518e4a53b47c78e4">SetExportEnabled</a>(<span class="keywordtype">bool</span> ExportState);</div>
<div class="line"><a name="l00304"></a><span class="lineno">  304</span>&#160; </div>
<div class="line"><a name="l00305"></a><span class="lineno">  305</span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classarmnn_1_1_optimizer_options_opaque.xhtml#a78aff12fa10e9a2df9989a469ba0b7bd">SetProfilingEnabled</a>(<span class="keywordtype">bool</span> ProfilingState);</div>
<div class="line"><a name="l00306"></a><span class="lineno">  306</span>&#160; </div>
<div class="line"><a name="l00307"></a><span class="lineno">  307</span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classarmnn_1_1_optimizer_options_opaque.xhtml#a2559eecf0b1317953b2ec24e83d0f0b4">SetDebugEnabled</a>(<span class="keywordtype">bool</span> DebugState);</div>
<div class="line"><a name="l00308"></a><span class="lineno">  308</span>&#160; </div>
<div class="line"><a name="l00309"></a><span class="lineno">  309</span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classarmnn_1_1_optimizer_options_opaque.xhtml#a8a2218764dede9c24b0e52833469b5fe">SetDebugToFileEnabled</a>(<span class="keywordtype">bool</span> DebugFileState);</div>
<div class="line"><a name="l00310"></a><span class="lineno">  310</span>&#160; </div>
<div class="line"><a name="l00311"></a><span class="lineno">  311</span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classarmnn_1_1_optimizer_options_opaque.xhtml#a4c8ca1fa6bed9a68a78ab00f02d0fb38">SetReduceFp32ToFp16</a>(<span class="keywordtype">bool</span> ReduceFp32ToFp16State);</div>
<div class="line"><a name="l00312"></a><span class="lineno">  312</span>&#160; </div>
<div class="line"><a name="l00313"></a><span class="lineno">  313</span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classarmnn_1_1_optimizer_options_opaque.xhtml#acad25c09a856d551c88b183f08edc2c1">SetShapeInferenceMethod</a>(<a class="code" href="namespacearmnn.xhtml#adf57837d00e8352d9b5cc5ab1fb5fee9">armnn::ShapeInferenceMethod</a> ShapeInferenceMethodType);</div>
<div class="line"><a name="l00314"></a><span class="lineno">  314</span>&#160; </div>
<div class="line"><a name="l00315"></a><span class="lineno">  315</span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classarmnn_1_1_optimizer_options_opaque.xhtml#a1ad03005dfb602c109a1b4fed7fca9e3">AddModelOption</a>(<a class="code" href="structarmnn_1_1_backend_options.xhtml">armnn::BackendOptions</a>);</div>
<div class="line"><a name="l00316"></a><span class="lineno">  316</span>&#160; </div>
<div class="line"><a name="l00317"></a><span class="lineno">  317</span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classarmnn_1_1_optimizer_options_opaque.xhtml#a5a864f9b972da52f3ca9028f1c8ee44a">SetAllowExpandedDims</a>(<span class="keywordtype">bool</span> ExpandedDimsAllowed);</div>
<div class="line"><a name="l00318"></a><span class="lineno">  318</span>&#160; </div>
<div class="line"><a name="l00319"></a><span class="lineno">  319</span>&#160;<span class="keyword">private</span>:</div>
<div class="line"><a name="l00320"></a><span class="lineno">  320</span>&#160; </div>
<div class="line"><a name="l00321"></a><span class="lineno">  321</span>&#160;    std::unique_ptr&lt;armnn::OptimizerOptionsOpaqueImpl&gt; p_OptimizerOptionsImpl;</div>
<div class="line"><a name="l00322"></a><span class="lineno">  322</span>&#160; </div>
<div class="line"><a name="l00323"></a><span class="lineno">  323</span>&#160;};</div>
<div class="line"><a name="l00324"></a><span class="lineno">  324</span>&#160; </div>
<div class="line"><a name="l00325"></a><span class="lineno">  325</span>&#160;<span class="keyword">class </span><a class="code" href="classarmnn_1_1_i_workload_factory.xhtml">IWorkloadFactory</a>;</div>
<div class="line"><a name="l00326"></a><span class="lineno">  326</span>&#160;<span class="keyword">class </span><a class="code" href="classarmnn_1_1_network_impl.xhtml">NetworkImpl</a>;</div>
<div class="line"><a name="l00327"></a><span class="lineno"><a class="line" href="namespacearmnn.xhtml#ace74f6f9feb95a964a49d79458232703">  327</a></span>&#160;<span class="keyword">using</span> <a class="code" href="namespacearmnn.xhtml#ace74f6f9feb95a964a49d79458232703">INetworkPtr</a> = std::unique_ptr&lt;<a class="code" href="classarmnn_1_1_i_network.xhtml">INetwork</a>, void(*)(<a class="code" href="classarmnn_1_1_i_network.xhtml">INetwork</a>* network)&gt;;</div>
<div class="line"><a name="l00328"></a><span class="lineno"><a class="line" href="namespacearmnn.xhtml#a674efcf6cbdb9e831d653ff0e821fb38">  328</a></span>&#160;<span class="keyword">using</span> <a class="code" href="namespacearmnn.xhtml#a674efcf6cbdb9e831d653ff0e821fb38">IOptimizedNetworkPtr</a> = std::unique_ptr&lt;<a class="code" href="classarmnn_1_1_i_optimized_network.xhtml">IOptimizedNetwork</a>, void(*)(<a class="code" href="classarmnn_1_1_i_optimized_network.xhtml">IOptimizedNetwork</a>* network)&gt;;</div>
<div class="line"><a name="l00329"></a><span class="lineno">  329</span>&#160; </div>
<div class="line"><a name="l00330"></a><span class="lineno"><a class="line" href="namespacearmnn.xhtml#af244057f8225833d8e9dc03949a6f0a2">  330</a></span>&#160;<span class="keyword">using</span> <a class="code" href="namespacearmnn.xhtml#af244057f8225833d8e9dc03949a6f0a2">CompiledBlobDeleter</a> = std::function&lt;void(<span class="keyword">const</span> <span class="keywordtype">void</span>*)&gt;;</div>
<div class="line"><a name="l00331"></a><span class="lineno"><a class="line" href="namespacearmnn.xhtml#af362583b7b4c471c434cb0fdb86c2ae2">  331</a></span>&#160;<span class="keyword">using</span> <a class="code" href="namespacearmnn.xhtml#af362583b7b4c471c434cb0fdb86c2ae2">CompiledBlobPtr</a> = std::unique_ptr&lt;void, CompiledBlobDeleter&gt;;</div>
<div class="line"><a name="l00332"></a><span class="lineno">  332</span>&#160;<span class="comment"></span> </div>
<div class="line"><a name="l00333"></a><span class="lineno">  333</span>&#160;<span class="comment">/// Main network class which provides the interface for building up a neural network.</span></div>
<div class="line"><a name="l00334"></a><span class="lineno">  334</span>&#160;<span class="comment">/// This object is subsequently required by the IRuntime::Load() method.</span></div>
<div class="line"><a name="l00335"></a><span class="lineno"><a class="line" href="classarmnn_1_1_i_network.xhtml">  335</a></span>&#160;<span class="comment"></span><span class="keyword">class </span><a class="code" href="classarmnn_1_1_i_network.xhtml">INetwork</a></div>
<div class="line"><a name="l00336"></a><span class="lineno">  336</span>&#160;{</div>
<div class="line"><a name="l00337"></a><span class="lineno">  337</span>&#160;<span class="keyword">public</span>:</div>
<div class="line"><a name="l00338"></a><span class="lineno">  338</span>&#160;    <span class="keyword">static</span> <a class="code" href="classarmnn_1_1_i_network.xhtml">INetwork</a>* <a class="code" href="classarmnn_1_1_i_network.xhtml#ab534dfa7f086a5f09fd9e3734ca6ab28">CreateRaw</a>(<span class="keyword">const</span> <a class="code" href="namespacearmnn.xhtml#a4de71c3661093e5c4ae7775114f43413">NetworkOptions</a>&amp; networkOptions = {});</div>
<div class="line"><a name="l00339"></a><span class="lineno">  339</span>&#160;    <span class="keyword">static</span> <a class="code" href="namespacearmnn.xhtml#ace74f6f9feb95a964a49d79458232703">INetworkPtr</a> <a class="code" href="classarmnn_1_1_i_network.xhtml#a41ce159095e95f7cd4174ce5d4662697">Create</a>(<span class="keyword">const</span> <a class="code" href="namespacearmnn.xhtml#a4de71c3661093e5c4ae7775114f43413">NetworkOptions</a>&amp; networkOptions = {});</div>
<div class="line"><a name="l00340"></a><span class="lineno">  340</span>&#160;    <span class="keyword">static</span> <span class="keywordtype">void</span> <a class="code" href="classarmnn_1_1_i_network.xhtml#a55bd1bb29076dc45bb335e7322781463">Destroy</a>(<a class="code" href="classarmnn_1_1_i_network.xhtml">INetwork</a>* network);</div>
<div class="line"><a name="l00341"></a><span class="lineno">  341</span>&#160; </div>
<div class="line"><a name="l00342"></a><span class="lineno">  342</span>&#160;    <a class="code" href="namespacearmnn.xhtml#a67a0db04d321a74b7e7fcfd3f1a3f70b">Status</a> <a class="code" href="classarmnn_1_1_i_network.xhtml#aff3fde909d22ed157046682e70129259">PrintGraph</a>();</div>
<div class="line"><a name="l00343"></a><span class="lineno">  343</span>&#160;<span class="comment"></span> </div>
<div class="line"><a name="l00344"></a><span class="lineno">  344</span>&#160;<span class="comment">    /// Adds an input layer to the network.</span></div>
<div class="line"><a name="l00345"></a><span class="lineno">  345</span>&#160;<span class="comment">    /// @param id - User generated id to uniquely identify a particular input. The same id needs to be specified.</span></div>
<div class="line"><a name="l00346"></a><span class="lineno">  346</span>&#160;<span class="comment">    /// when passing the inputs to the IRuntime::EnqueueWorkload() function.</span></div>
<div class="line"><a name="l00347"></a><span class="lineno">  347</span>&#160;<span class="comment">    /// @param name - Optional name for the layer.</span></div>
<div class="line"><a name="l00348"></a><span class="lineno">  348</span>&#160;<span class="comment">    /// @return - Interface for configuring the layer.</span></div>
<div class="line"><a name="l00349"></a><span class="lineno">  349</span>&#160;<span class="comment"></span>    <a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml">IConnectableLayer</a>* <a class="code" href="classarmnn_1_1_i_network.xhtml#aa6c1c42ea44777302e87ce0fad5ac510">AddInputLayer</a>(<a class="code" href="namespacearmnn.xhtml#ab8cf8f9fb6792e654c2d8d8382f6f01b">LayerBindingId</a> <span class="keywordtype">id</span>, <span class="keyword">const</span> <span class="keywordtype">char</span>* name = <span class="keyword">nullptr</span>);</div>
<div class="line"><a name="l00350"></a><span class="lineno">  350</span>&#160;<span class="comment"></span> </div>
<div class="line"><a name="l00351"></a><span class="lineno">  351</span>&#160;<span class="comment">    /// Adds an ArgMinMax layer to the network.</span></div>
<div class="line"><a name="l00352"></a><span class="lineno">  352</span>&#160;<span class="comment">    /// @param desc - Parameters for the L2 normalization operation.</span></div>
<div class="line"><a name="l00353"></a><span class="lineno">  353</span>&#160;<span class="comment">    /// @param name - Optional name for the layer.</span></div>
<div class="line"><a name="l00354"></a><span class="lineno">  354</span>&#160;<span class="comment">    /// @return - Interface for configuring the layer.</span></div>
<div class="line"><a name="l00355"></a><span class="lineno">  355</span>&#160;<span class="comment"></span>    <a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml">IConnectableLayer</a>* <a class="code" href="classarmnn_1_1_i_network.xhtml#adc8c1c505bca8233fe238b3b7fb80200">AddArgMinMaxLayer</a>(<span class="keyword">const</span> <a class="code" href="structarmnn_1_1_arg_min_max_descriptor.xhtml">ArgMinMaxDescriptor</a>&amp; desc,</div>
<div class="line"><a name="l00356"></a><span class="lineno">  356</span>&#160;                                         <span class="keyword">const</span> <span class="keywordtype">char</span>* name = <span class="keyword">nullptr</span>);</div>
<div class="line"><a name="l00357"></a><span class="lineno">  357</span>&#160;<span class="comment"></span> </div>
<div class="line"><a name="l00358"></a><span class="lineno">  358</span>&#160;<span class="comment">    /// Adds a cast layer to the network.</span></div>
<div class="line"><a name="l00359"></a><span class="lineno">  359</span>&#160;<span class="comment">    /// @param name - Optional name for the layer.</span></div>
<div class="line"><a name="l00360"></a><span class="lineno">  360</span>&#160;<span class="comment">    /// @return - Interface for configuring the layer.</span></div>
<div class="line"><a name="l00361"></a><span class="lineno">  361</span>&#160;<span class="comment"></span>    <a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml">IConnectableLayer</a>* <a class="code" href="classarmnn_1_1_i_network.xhtml#a72f7f58c37d9d856fcb648b5fa68cf59">AddCastLayer</a>(<span class="keyword">const</span> <span class="keywordtype">char</span>* name = <span class="keyword">nullptr</span>);</div>
<div class="line"><a name="l00362"></a><span class="lineno">  362</span>&#160;<span class="comment"></span> </div>
<div class="line"><a name="l00363"></a><span class="lineno">  363</span>&#160;<span class="comment">    /// Add a Comparison layer to the network.</span></div>
<div class="line"><a name="l00364"></a><span class="lineno">  364</span>&#160;<span class="comment">    /// @param name - Optional name for the layer.</span></div>
<div class="line"><a name="l00365"></a><span class="lineno">  365</span>&#160;<span class="comment">    /// @param desc - Descriptor for the comparison operation.</span></div>
<div class="line"><a name="l00366"></a><span class="lineno">  366</span>&#160;<span class="comment">    /// @return - Interface for configuring the layer.</span></div>
<div class="line"><a name="l00367"></a><span class="lineno">  367</span>&#160;<span class="comment"></span>    <a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml">IConnectableLayer</a>* <a class="code" href="classarmnn_1_1_i_network.xhtml#ac7dca3e9f2ab2f2c64b42fc59a67188a">AddComparisonLayer</a>(<span class="keyword">const</span> <a class="code" href="structarmnn_1_1_comparison_descriptor.xhtml">ComparisonDescriptor</a>&amp; comparisonDescriptor,</div>
<div class="line"><a name="l00368"></a><span class="lineno">  368</span>&#160;                                          <span class="keyword">const</span> <span class="keywordtype">char</span>* name = <span class="keyword">nullptr</span>);</div>
<div class="line"><a name="l00369"></a><span class="lineno">  369</span>&#160;<span class="comment"></span> </div>
<div class="line"><a name="l00370"></a><span class="lineno">  370</span>&#160;<span class="comment">    /// Adds a concatenation layer to the network.</span></div>
<div class="line"><a name="l00371"></a><span class="lineno">  371</span>&#160;<span class="comment">    /// @param concatDescriptor - ConcatDescriptor (synonym for OriginsDescriptor) to configure the concatenation</span></div>
<div class="line"><a name="l00372"></a><span class="lineno">  372</span>&#160;<span class="comment">    ///                           process. Number of Views must be equal to the number of inputs, and their order</span></div>
<div class="line"><a name="l00373"></a><span class="lineno">  373</span>&#160;<span class="comment">    ///                           must match - e.g. first view corresponds to the first input, second view to the</span></div>
<div class="line"><a name="l00374"></a><span class="lineno">  374</span>&#160;<span class="comment">    ///                           second input, etc....</span></div>
<div class="line"><a name="l00375"></a><span class="lineno">  375</span>&#160;<span class="comment">    /// @param name - Optional name for the layer.</span></div>
<div class="line"><a name="l00376"></a><span class="lineno">  376</span>&#160;<span class="comment">    /// @return - Interface for configuring the layer.</span></div>
<div class="line"><a name="l00377"></a><span class="lineno">  377</span>&#160;<span class="comment"></span>    <a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml">IConnectableLayer</a>* <a class="code" href="classarmnn_1_1_i_network.xhtml#aea1059833739d3dccebb3a03ec35a1e6">AddConcatLayer</a>(<span class="keyword">const</span> <a class="code" href="structarmnn_1_1_origins_descriptor.xhtml">ConcatDescriptor</a>&amp; concatDescriptor,</div>
<div class="line"><a name="l00378"></a><span class="lineno">  378</span>&#160;                                      <span class="keyword">const</span> <span class="keywordtype">char</span>* name = <span class="keyword">nullptr</span>);</div>
<div class="line"><a name="l00379"></a><span class="lineno">  379</span>&#160;<span class="comment"></span> </div>
<div class="line"><a name="l00380"></a><span class="lineno">  380</span>&#160;<span class="comment">    /// Adds a 2D convolution layer to the network.</span></div>
<div class="line"><a name="l00381"></a><span class="lineno">  381</span>&#160;<span class="comment">    /// @param convolution2dDescriptor - Description of the 2D convolution layer.</span></div>
<div class="line"><a name="l00382"></a><span class="lineno">  382</span>&#160;<span class="comment">    /// @param name - Optional name for the layer.</span></div>
<div class="line"><a name="l00383"></a><span class="lineno">  383</span>&#160;<span class="comment">    /// @return - Interface for configuring the layer.</span></div>
<div class="line"><a name="l00384"></a><span class="lineno">  384</span>&#160;<span class="comment"></span>    <a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml">IConnectableLayer</a>* <a class="code" href="classarmnn_1_1_i_network.xhtml#a383e74ef080d4a81b8b371be4b840248">AddConvolution2dLayer</a>(<span class="keyword">const</span> <a class="code" href="structarmnn_1_1_convolution2d_descriptor.xhtml">Convolution2dDescriptor</a>&amp; convolution2dDescriptor,</div>
<div class="line"><a name="l00385"></a><span class="lineno">  385</span>&#160;                                             <span class="keyword">const</span> <span class="keywordtype">char</span>* name = <span class="keyword">nullptr</span>);</div>
<div class="line"><a name="l00386"></a><span class="lineno">  386</span>&#160;<span class="comment"></span> </div>
<div class="line"><a name="l00387"></a><span class="lineno">  387</span>&#160;<span class="comment">    /// Adds a 3D convolution layer to the network.</span></div>
<div class="line"><a name="l00388"></a><span class="lineno">  388</span>&#160;<span class="comment">    /// @param convolution3dDescriptor - Description of the 3D convolution layer.</span></div>
<div class="line"><a name="l00389"></a><span class="lineno">  389</span>&#160;<span class="comment">    /// @param name - Optional name for the layer.</span></div>
<div class="line"><a name="l00390"></a><span class="lineno">  390</span>&#160;<span class="comment">    /// @return - Interface for configuring the layer.</span></div>
<div class="line"><a name="l00391"></a><span class="lineno">  391</span>&#160;<span class="comment"></span>    <a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml">IConnectableLayer</a>* <a class="code" href="classarmnn_1_1_i_network.xhtml#a43de8213707de0e76d80a32cd4b9b482">AddConvolution3dLayer</a>(<span class="keyword">const</span> <a class="code" href="structarmnn_1_1_convolution3d_descriptor.xhtml">Convolution3dDescriptor</a>&amp; convolution3dDescriptor,</div>
<div class="line"><a name="l00392"></a><span class="lineno">  392</span>&#160;                                             <span class="keyword">const</span> <span class="keywordtype">char</span>* name = <span class="keyword">nullptr</span>);</div>
<div class="line"><a name="l00393"></a><span class="lineno">  393</span>&#160;<span class="comment"></span> </div>
<div class="line"><a name="l00394"></a><span class="lineno">  394</span>&#160;<span class="comment">    /// Adds a depth to space layer to the network.</span></div>
<div class="line"><a name="l00395"></a><span class="lineno">  395</span>&#160;<span class="comment">    /// @param depthToSpaceDescriptor - Parameters for the depth to space operation.</span></div>
<div class="line"><a name="l00396"></a><span class="lineno">  396</span>&#160;<span class="comment">    /// @param name - Optional name for the layer.</span></div>
<div class="line"><a name="l00397"></a><span class="lineno">  397</span>&#160;<span class="comment">    /// @return - Interface for configuring the layer.</span></div>
<div class="line"><a name="l00398"></a><span class="lineno">  398</span>&#160;<span class="comment"></span>    <a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml">IConnectableLayer</a>* <a class="code" href="classarmnn_1_1_i_network.xhtml#af1853466264ac187607c96b501a74e2b">AddDepthToSpaceLayer</a>(<span class="keyword">const</span> <a class="code" href="structarmnn_1_1_space_to_depth_descriptor.xhtml">DepthToSpaceDescriptor</a>&amp; depthToSpaceDescriptor,</div>
<div class="line"><a name="l00399"></a><span class="lineno">  399</span>&#160;                                            <span class="keyword">const</span> <span class="keywordtype">char</span>* name = <span class="keyword">nullptr</span>);</div>
<div class="line"><a name="l00400"></a><span class="lineno">  400</span>&#160;<span class="comment"></span> </div>
<div class="line"><a name="l00401"></a><span class="lineno">  401</span>&#160;<span class="comment">    /// Adds a 2D depthwise convolution layer to the network.</span></div>
<div class="line"><a name="l00402"></a><span class="lineno">  402</span>&#160;<span class="comment">    /// @param convolution2dDescriptor - Description of the 2D depthwise convolution layer.</span></div>
<div class="line"><a name="l00403"></a><span class="lineno">  403</span>&#160;<span class="comment">    /// @param name - Optional name for the layer.</span></div>
<div class="line"><a name="l00404"></a><span class="lineno">  404</span>&#160;<span class="comment">    /// @return - Interface for configuring the layer.</span></div>
<div class="line"><a name="l00405"></a><span class="lineno">  405</span>&#160;<span class="comment"></span>    <a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml">IConnectableLayer</a>* <a class="code" href="classarmnn_1_1_i_network.xhtml#ac6771c8752811fcfa91b3f0dee748144">AddDepthwiseConvolution2dLayer</a>(<span class="keyword">const</span> <a class="code" href="structarmnn_1_1_depthwise_convolution2d_descriptor.xhtml">DepthwiseConvolution2dDescriptor</a>&amp; convolution2dDescriptor,</div>
<div class="line"><a name="l00406"></a><span class="lineno">  406</span>&#160;                                                      <span class="keyword">const</span> <span class="keywordtype">char</span>* name = <span class="keyword">nullptr</span>);</div>
<div class="line"><a name="l00407"></a><span class="lineno">  407</span>&#160;<span class="comment"></span> </div>
<div class="line"><a name="l00408"></a><span class="lineno">  408</span>&#160;<span class="comment">    /// Adds a Dequantize layer to the network.</span></div>
<div class="line"><a name="l00409"></a><span class="lineno">  409</span>&#160;<span class="comment">    /// @return - Interface for configuring the layer.</span></div>
<div class="line"><a name="l00410"></a><span class="lineno">  410</span>&#160;<span class="comment"></span>    <a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml">IConnectableLayer</a>* <a class="code" href="classarmnn_1_1_i_network.xhtml#a357aca04172ed22fa32e5a69122b0fec">AddDequantizeLayer</a>(<span class="keyword">const</span> <span class="keywordtype">char</span>* name = <span class="keyword">nullptr</span>);</div>
<div class="line"><a name="l00411"></a><span class="lineno">  411</span>&#160;<span class="comment"></span> </div>
<div class="line"><a name="l00412"></a><span class="lineno">  412</span>&#160;<span class="comment">    /// Adds a Detection PostProcess layer to the network.</span></div>
<div class="line"><a name="l00413"></a><span class="lineno">  413</span>&#160;<span class="comment">    /// @param descriptor - Description of the Detection PostProcess layer.</span></div>
<div class="line"><a name="l00414"></a><span class="lineno">  414</span>&#160;<span class="comment">    /// @param anchors - Tensor for anchors.</span></div>
<div class="line"><a name="l00415"></a><span class="lineno">  415</span>&#160;<span class="comment">    /// @param name - Optional name for the layer.</span></div>
<div class="line"><a name="l00416"></a><span class="lineno">  416</span>&#160;<span class="comment">    /// @return - Interface for configuring the layer.</span></div>
<div class="line"><a name="l00417"></a><span class="lineno">  417</span>&#160;<span class="comment"></span>    <a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml">IConnectableLayer</a>* <a class="code" href="classarmnn_1_1_i_network.xhtml#ac1134a94265293ea7347180260f787d2">AddDetectionPostProcessLayer</a>(</div>
<div class="line"><a name="l00418"></a><span class="lineno">  418</span>&#160;        <span class="keyword">const</span> <a class="code" href="structarmnn_1_1_detection_post_process_descriptor.xhtml">DetectionPostProcessDescriptor</a>&amp; descriptor,</div>
<div class="line"><a name="l00419"></a><span class="lineno">  419</span>&#160;        <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_const_tensor.xhtml">ConstTensor</a>&amp; anchors,</div>
<div class="line"><a name="l00420"></a><span class="lineno">  420</span>&#160;        <span class="keyword">const</span> <span class="keywordtype">char</span>* name = <span class="keyword">nullptr</span>);</div>
<div class="line"><a name="l00421"></a><span class="lineno">  421</span>&#160;<span class="comment"></span> </div>
<div class="line"><a name="l00422"></a><span class="lineno">  422</span>&#160;<span class="comment">    /// Add an ElementwiseBinary layer to the network.</span></div>
<div class="line"><a name="l00423"></a><span class="lineno">  423</span>&#160;<span class="comment">    /// @param name - Optional name for the layer.</span></div>
<div class="line"><a name="l00424"></a><span class="lineno">  424</span>&#160;<span class="comment">    /// @param desc - Descriptor for the elementwiseBinary operations.</span></div>
<div class="line"><a name="l00425"></a><span class="lineno">  425</span>&#160;<span class="comment">    /// @return - Interface for configuring the layer.</span></div>
<div class="line"><a name="l00426"></a><span class="lineno">  426</span>&#160;<span class="comment"></span>    <a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml">IConnectableLayer</a>* <a class="code" href="classarmnn_1_1_i_network.xhtml#af71383a4986faf7f0e339fbaf70e8957">AddElementwiseBinaryLayer</a>(<span class="keyword">const</span> <a class="code" href="structarmnn_1_1_elementwise_binary_descriptor.xhtml">ElementwiseBinaryDescriptor</a>&amp; elementwiseUnaryDescriptor,</div>
<div class="line"><a name="l00427"></a><span class="lineno">  427</span>&#160;                                                 <span class="keyword">const</span> <span class="keywordtype">char</span>* name = <span class="keyword">nullptr</span>);</div>
<div class="line"><a name="l00428"></a><span class="lineno">  428</span>&#160;<span class="comment"></span> </div>
<div class="line"><a name="l00429"></a><span class="lineno">  429</span>&#160;<span class="comment">    /// Add an ElementwiseUnary layer to the network.</span></div>
<div class="line"><a name="l00430"></a><span class="lineno">  430</span>&#160;<span class="comment">    /// @param name - Optional name for the layer.</span></div>
<div class="line"><a name="l00431"></a><span class="lineno">  431</span>&#160;<span class="comment">    /// @param desc - Descriptor for the elementwiseUnary operations.</span></div>
<div class="line"><a name="l00432"></a><span class="lineno">  432</span>&#160;<span class="comment">    /// @return - Interface for configuring the layer.</span></div>
<div class="line"><a name="l00433"></a><span class="lineno">  433</span>&#160;<span class="comment"></span>    <a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml">IConnectableLayer</a>* <a class="code" href="classarmnn_1_1_i_network.xhtml#a095a9b700dc857edc23c5d3bf088919f">AddElementwiseUnaryLayer</a>(<span class="keyword">const</span> <a class="code" href="structarmnn_1_1_elementwise_unary_descriptor.xhtml">ElementwiseUnaryDescriptor</a>&amp; elementwiseUnaryDescriptor,</div>
<div class="line"><a name="l00434"></a><span class="lineno">  434</span>&#160;                                                <span class="keyword">const</span> <span class="keywordtype">char</span>* name = <span class="keyword">nullptr</span>);</div>
<div class="line"><a name="l00435"></a><span class="lineno">  435</span>&#160;<span class="comment"></span> </div>
<div class="line"><a name="l00436"></a><span class="lineno">  436</span>&#160;<span class="comment">    /// Add an Fill layer to the network.</span></div>
<div class="line"><a name="l00437"></a><span class="lineno">  437</span>&#160;<span class="comment">    /// @param name - Optional name for the layer.</span></div>
<div class="line"><a name="l00438"></a><span class="lineno">  438</span>&#160;<span class="comment">    /// @param fillDescriptor - Descriptor for the fill operation.</span></div>
<div class="line"><a name="l00439"></a><span class="lineno">  439</span>&#160;<span class="comment">    /// @return - Interface for configuring the layer.</span></div>
<div class="line"><a name="l00440"></a><span class="lineno">  440</span>&#160;<span class="comment"></span>    <a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml">IConnectableLayer</a>* <a class="code" href="classarmnn_1_1_i_network.xhtml#afc94c35c0bbe852a60046bf2e756b2e0">AddFillLayer</a>(<span class="keyword">const</span> <a class="code" href="structarmnn_1_1_fill_descriptor.xhtml">FillDescriptor</a>&amp; fillDescriptor,</div>
<div class="line"><a name="l00441"></a><span class="lineno">  441</span>&#160;                                    <span class="keyword">const</span> <span class="keywordtype">char</span>* name = <span class="keyword">nullptr</span>);</div>
<div class="line"><a name="l00442"></a><span class="lineno">  442</span>&#160; </div>
<div class="line"><a name="l00443"></a><span class="lineno">  443</span>&#160;<span class="comment"></span> </div>
<div class="line"><a name="l00444"></a><span class="lineno">  444</span>&#160;<span class="comment">    /// Adds a fully connected layer to the network.</span></div>
<div class="line"><a name="l00445"></a><span class="lineno">  445</span>&#160;<span class="comment">    /// @param fullyConnectedDescriptor - Description of the fully connected layer.</span></div>
<div class="line"><a name="l00446"></a><span class="lineno">  446</span>&#160;<span class="comment">    /// @return - Interface for configuring the layer.</span></div>
<div class="line"><a name="l00447"></a><span class="lineno">  447</span>&#160;<span class="comment">    ///</span></div>
<div class="line"><a name="l00448"></a><span class="lineno">  448</span>&#160;<span class="comment">    /// @note Weights and biases are passed in as inputs. If they are constant tensors you can simply store</span></div>
<div class="line"><a name="l00449"></a><span class="lineno">  449</span>&#160;<span class="comment">    ///       them in a ConstantLayer as seen below. A full example can be found in samples/SimpleSample.cpp.</span></div>
<div class="line"><a name="l00450"></a><span class="lineno">  450</span>&#160;<span class="comment">    ///</span></div>
<div class="line"><a name="l00451"></a><span class="lineno">  451</span>&#160;<span class="comment">    /// @code</span></div>
<div class="line"><a name="l00452"></a><span class="lineno">  452</span>&#160;<span class="comment">    /// // Make sure the IsConstant flag is set on the weightsInfo before passing it to the ConstTensor.</span></div>
<div class="line"><a name="l00453"></a><span class="lineno">  453</span>&#160;<span class="comment">    /// ConstTensor weights(weightsInfo, weightsData);</span></div>
<div class="line"><a name="l00454"></a><span class="lineno">  454</span>&#160;<span class="comment">    ///</span></div>
<div class="line"><a name="l00455"></a><span class="lineno">  455</span>&#160;<span class="comment">    /// // Constant layer that now holds weights data for FullyConnected</span></div>
<div class="line"><a name="l00456"></a><span class="lineno">  456</span>&#160;<span class="comment">    /// IConnectableLayer* const constantWeightsLayer = myNetwork-&gt;AddConstantLayer(weights, &quot;weights&quot;);</span></div>
<div class="line"><a name="l00457"></a><span class="lineno">  457</span>&#160;<span class="comment">    ///</span></div>
<div class="line"><a name="l00458"></a><span class="lineno">  458</span>&#160;<span class="comment">    /// FullyConnectedDescriptor fullyConnectedDesc;</span></div>
<div class="line"><a name="l00459"></a><span class="lineno">  459</span>&#160;<span class="comment">    /// IConnectableLayer* const fullyConnectedLayer = myNetwork-&gt;AddFullyConnectedLayer(fullyConnectedDesc,</span></div>
<div class="line"><a name="l00460"></a><span class="lineno">  460</span>&#160;<span class="comment">    ///                                                                                  &quot;fully connected&quot;);</span></div>
<div class="line"><a name="l00461"></a><span class="lineno">  461</span>&#160;<span class="comment">    /// IConnectableLayer* InputLayer = myNetwork-&gt;AddInputLayer(0);</span></div>
<div class="line"><a name="l00462"></a><span class="lineno">  462</span>&#160;<span class="comment">    /// InputLayer-&gt;GetOutputSlot(0).Connect(fullyConnectedLayer-&gt;GetInputSlot(0));</span></div>
<div class="line"><a name="l00463"></a><span class="lineno">  463</span>&#160;<span class="comment">    /// constantWeightsLayer-&gt;GetOutputSlot(0).Connect(fullyConnectedLayer-&gt;GetInputSlot(1));</span></div>
<div class="line"><a name="l00464"></a><span class="lineno">  464</span>&#160;<span class="comment">    /// @endcode</span></div>
<div class="line"><a name="l00465"></a><span class="lineno">  465</span>&#160;<span class="comment"></span>    <a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml">IConnectableLayer</a>* <a class="code" href="classarmnn_1_1_i_network.xhtml#a471991a84030eb3ae601da2bee757870">AddFullyConnectedLayer</a>(<span class="keyword">const</span> <a class="code" href="structarmnn_1_1_fully_connected_descriptor.xhtml">FullyConnectedDescriptor</a>&amp; fullyConnectedDescriptor,</div>
<div class="line"><a name="l00466"></a><span class="lineno">  466</span>&#160;                                              <span class="keyword">const</span> <span class="keywordtype">char</span>* name = <span class="keyword">nullptr</span>);</div>
<div class="line"><a name="l00467"></a><span class="lineno">  467</span>&#160;<span class="comment"></span> </div>
<div class="line"><a name="l00468"></a><span class="lineno">  468</span>&#160;<span class="comment">    /// Adds a permute layer to the network.</span></div>
<div class="line"><a name="l00469"></a><span class="lineno">  469</span>&#160;<span class="comment">    /// @param permuteDescriptor - PermuteDescriptor to configure the permute.</span></div>
<div class="line"><a name="l00470"></a><span class="lineno">  470</span>&#160;<span class="comment">    /// @param name - Optional name for the layer.</span></div>
<div class="line"><a name="l00471"></a><span class="lineno">  471</span>&#160;<span class="comment">    /// @return - Interface for configuring the layer.</span></div>
<div class="line"><a name="l00472"></a><span class="lineno">  472</span>&#160;<span class="comment"></span>    <a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml">IConnectableLayer</a>* <a class="code" href="classarmnn_1_1_i_network.xhtml#a11f49d84f0cfd8df65f4d5206cd43b6d">AddPermuteLayer</a>(<span class="keyword">const</span> <a class="code" href="structarmnn_1_1_permute_descriptor.xhtml">PermuteDescriptor</a>&amp; permuteDescriptor,</div>
<div class="line"><a name="l00473"></a><span class="lineno">  473</span>&#160;                                       <span class="keyword">const</span> <span class="keywordtype">char</span>* name = <span class="keyword">nullptr</span>);</div>
<div class="line"><a name="l00474"></a><span class="lineno">  474</span>&#160;<span class="comment"></span> </div>
<div class="line"><a name="l00475"></a><span class="lineno">  475</span>&#160;<span class="comment">    /// Adds a batch to space ND layer to the network.</span></div>
<div class="line"><a name="l00476"></a><span class="lineno">  476</span>&#160;<span class="comment">    /// @param batchToSpaceNdDescriptor - Description of the layer.</span></div>
<div class="line"><a name="l00477"></a><span class="lineno">  477</span>&#160;<span class="comment">    /// @param name - Optional name for the layer.</span></div>
<div class="line"><a name="l00478"></a><span class="lineno">  478</span>&#160;<span class="comment">    /// @return - Interface for configuring the layer.</span></div>
<div class="line"><a name="l00479"></a><span class="lineno">  479</span>&#160;<span class="comment"></span>    <a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml">IConnectableLayer</a>* <a class="code" href="classarmnn_1_1_i_network.xhtml#a9a9bcc00ae3d96343c93b437d6f77088">AddBatchToSpaceNdLayer</a>(<span class="keyword">const</span> <a class="code" href="structarmnn_1_1_batch_to_space_nd_descriptor.xhtml">BatchToSpaceNdDescriptor</a>&amp; batchToSpaceNdDescriptor,</div>
<div class="line"><a name="l00480"></a><span class="lineno">  480</span>&#160;                                              <span class="keyword">const</span> <span class="keywordtype">char</span>* name = <span class="keyword">nullptr</span>);</div>
<div class="line"><a name="l00481"></a><span class="lineno">  481</span>&#160;<span class="comment"></span> </div>
<div class="line"><a name="l00482"></a><span class="lineno">  482</span>&#160;<span class="comment">    /// Adds a 2D pooling layer to the network.</span></div>
<div class="line"><a name="l00483"></a><span class="lineno">  483</span>&#160;<span class="comment">    /// @param pooling2dDescriptor - Pooling2dDescriptor to configure the pooling.</span></div>
<div class="line"><a name="l00484"></a><span class="lineno">  484</span>&#160;<span class="comment">    /// @param name - Optional name for the layer.</span></div>
<div class="line"><a name="l00485"></a><span class="lineno">  485</span>&#160;<span class="comment">    /// @return - Interface for configuring the layer.</span></div>
<div class="line"><a name="l00486"></a><span class="lineno">  486</span>&#160;<span class="comment"></span>    <a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml">IConnectableLayer</a>* <a class="code" href="classarmnn_1_1_i_network.xhtml#ae913b4351b7027f37eb5657dd7867733">AddPooling2dLayer</a>(<span class="keyword">const</span> <a class="code" href="structarmnn_1_1_pooling2d_descriptor.xhtml">Pooling2dDescriptor</a>&amp; pooling2dDescriptor,</div>
<div class="line"><a name="l00487"></a><span class="lineno">  487</span>&#160;        <span class="keyword">const</span> <span class="keywordtype">char</span>* name = <span class="keyword">nullptr</span>);</div>
<div class="line"><a name="l00488"></a><span class="lineno">  488</span>&#160;<span class="comment"></span> </div>
<div class="line"><a name="l00489"></a><span class="lineno">  489</span>&#160;<span class="comment">    /// Adds a 3D pooling layer to the network.</span></div>
<div class="line"><a name="l00490"></a><span class="lineno">  490</span>&#160;<span class="comment">    /// @param pooling3dDescriptor - Pooling3dDescriptor to configure the pooling.</span></div>
<div class="line"><a name="l00491"></a><span class="lineno">  491</span>&#160;<span class="comment">    /// @param name - Optional name for the layer.</span></div>
<div class="line"><a name="l00492"></a><span class="lineno">  492</span>&#160;<span class="comment">    /// @return - Interface for configuring the layer.</span></div>
<div class="line"><a name="l00493"></a><span class="lineno">  493</span>&#160;<span class="comment"></span>    <a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml">IConnectableLayer</a>* <a class="code" href="classarmnn_1_1_i_network.xhtml#aee282f8e3379d3f5bed1032d20884248">AddPooling3dLayer</a>(<span class="keyword">const</span> <a class="code" href="structarmnn_1_1_pooling3d_descriptor.xhtml">Pooling3dDescriptor</a>&amp; pooling3dDescriptor,</div>
<div class="line"><a name="l00494"></a><span class="lineno">  494</span>&#160;        <span class="keyword">const</span> <span class="keywordtype">char</span>* name = <span class="keyword">nullptr</span>);</div>
<div class="line"><a name="l00495"></a><span class="lineno">  495</span>&#160;<span class="comment"></span> </div>
<div class="line"><a name="l00496"></a><span class="lineno">  496</span>&#160;<span class="comment">    /// Adds a Precompiled layer to the network.</span></div>
<div class="line"><a name="l00497"></a><span class="lineno">  497</span>&#160;<span class="comment">    /// Method use is for backend users.</span></div>
<div class="line"><a name="l00498"></a><span class="lineno">  498</span>&#160;<span class="comment">    /// @param preCompiledDescriptor - PreCompiledDescriptor contains parameters for the Precompiled layer.</span></div>
<div class="line"><a name="l00499"></a><span class="lineno">  499</span>&#160;<span class="comment">    /// @param compiledBlobPtr - CompiledBlobPtr pre-compiled object set for the Precompiled layer.</span></div>
<div class="line"><a name="l00500"></a><span class="lineno">  500</span>&#160;<span class="comment">    /// @param backend - optional BackendId set for the Precompiled layer.</span></div>
<div class="line"><a name="l00501"></a><span class="lineno">  501</span>&#160;<span class="comment">    /// @return - Interface for configuring the layer.</span></div>
<div class="line"><a name="l00502"></a><span class="lineno">  502</span>&#160;<span class="comment"></span>    <a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml">IConnectableLayer</a>* <a class="code" href="classarmnn_1_1_i_network.xhtml#aee3a15d2fa419f50a8ac45e6d3c11e16">AddPrecompiledLayer</a>(<span class="keyword">const</span> <a class="code" href="structarmnn_1_1_pre_compiled_descriptor.xhtml">PreCompiledDescriptor</a>&amp; preCompiledDescriptor,</div>
<div class="line"><a name="l00503"></a><span class="lineno">  503</span>&#160;                                           <a class="code" href="namespacearmnn.xhtml#af362583b7b4c471c434cb0fdb86c2ae2">CompiledBlobPtr</a> compiledBlobPtr,</div>
<div class="line"><a name="l00504"></a><span class="lineno">  504</span>&#160;                                           <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_optional.xhtml">Optional&lt;BackendId&gt;</a>&amp; backend,</div>
<div class="line"><a name="l00505"></a><span class="lineno">  505</span>&#160;                                           <span class="keyword">const</span> <span class="keywordtype">char</span>* name = <span class="keyword">nullptr</span>);</div>
<div class="line"><a name="l00506"></a><span class="lineno">  506</span>&#160;<span class="comment"></span> </div>
<div class="line"><a name="l00507"></a><span class="lineno">  507</span>&#160;<span class="comment">    /// Adds an activation layer to the network.</span></div>
<div class="line"><a name="l00508"></a><span class="lineno">  508</span>&#160;<span class="comment">    /// @param activationDescriptor - ActivationDescriptor to configure the activation.</span></div>
<div class="line"><a name="l00509"></a><span class="lineno">  509</span>&#160;<span class="comment">    /// @param name - Optional name for the layer.</span></div>
<div class="line"><a name="l00510"></a><span class="lineno">  510</span>&#160;<span class="comment">    /// @return - Interface for configuring the layer.</span></div>
<div class="line"><a name="l00511"></a><span class="lineno">  511</span>&#160;<span class="comment"></span>    <a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml">IConnectableLayer</a>* <a class="code" href="classarmnn_1_1_i_network.xhtml#aa51350bdd4976f3dd5a4e9d00a906b2c">AddActivationLayer</a>(<span class="keyword">const</span> <a class="code" href="structarmnn_1_1_activation_descriptor.xhtml">ActivationDescriptor</a>&amp; activationDescriptor,</div>
<div class="line"><a name="l00512"></a><span class="lineno">  512</span>&#160;        <span class="keyword">const</span> <span class="keywordtype">char</span>* name = <span class="keyword">nullptr</span>);</div>
<div class="line"><a name="l00513"></a><span class="lineno">  513</span>&#160;<span class="comment"></span> </div>
<div class="line"><a name="l00514"></a><span class="lineno">  514</span>&#160;<span class="comment">    /// Adds a normalization layer to the network.</span></div>
<div class="line"><a name="l00515"></a><span class="lineno">  515</span>&#160;<span class="comment">    /// @param normalizationDescriptor - NormalizationDescriptor to configure the normalization.</span></div>
<div class="line"><a name="l00516"></a><span class="lineno">  516</span>&#160;<span class="comment">    /// @param name - Optional name for the layer.</span></div>
<div class="line"><a name="l00517"></a><span class="lineno">  517</span>&#160;<span class="comment">    /// @return - Interface for configuring the layer.</span></div>
<div class="line"><a name="l00518"></a><span class="lineno">  518</span>&#160;<span class="comment"></span>    <a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml">IConnectableLayer</a>* <a class="code" href="classarmnn_1_1_i_network.xhtml#a6c5376053e1f875776d7bc36fd0b7d45">AddNormalizationLayer</a>(<span class="keyword">const</span> <a class="code" href="structarmnn_1_1_normalization_descriptor.xhtml">NormalizationDescriptor</a>&amp; normalizationDescriptor,</div>
<div class="line"><a name="l00519"></a><span class="lineno">  519</span>&#160;        <span class="keyword">const</span> <span class="keywordtype">char</span>* name = <span class="keyword">nullptr</span>);</div>
<div class="line"><a name="l00520"></a><span class="lineno">  520</span>&#160;<span class="comment"></span> </div>
<div class="line"><a name="l00521"></a><span class="lineno">  521</span>&#160;<span class="comment">    /// Adds a slice layer to the network.</span></div>
<div class="line"><a name="l00522"></a><span class="lineno">  522</span>&#160;<span class="comment">    /// @param sliceDescriptor - SliceDescriptor to configure the slice operation.</span></div>
<div class="line"><a name="l00523"></a><span class="lineno">  523</span>&#160;<span class="comment">    /// @param name - Optional name for the layer.</span></div>
<div class="line"><a name="l00524"></a><span class="lineno">  524</span>&#160;<span class="comment">    /// @return - Interface for configuring the layer.</span></div>
<div class="line"><a name="l00525"></a><span class="lineno">  525</span>&#160;<span class="comment"></span>    <a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml">IConnectableLayer</a>* <a class="code" href="classarmnn_1_1_i_network.xhtml#a8de6b047fcaff95df48dca683e1f3aa4">AddSliceLayer</a>(<span class="keyword">const</span> <a class="code" href="structarmnn_1_1_slice_descriptor.xhtml">SliceDescriptor</a>&amp; sliceDescriptor, <span class="keyword">const</span> <span class="keywordtype">char</span>* name = <span class="keyword">nullptr</span>);</div>
<div class="line"><a name="l00526"></a><span class="lineno">  526</span>&#160;<span class="comment"></span> </div>
<div class="line"><a name="l00527"></a><span class="lineno">  527</span>&#160;<span class="comment">    /// Adds a softmax layer to the network.</span></div>
<div class="line"><a name="l00528"></a><span class="lineno">  528</span>&#160;<span class="comment">    /// If the data type is QAsymm8, then the output quantization parameters</span></div>
<div class="line"><a name="l00529"></a><span class="lineno">  529</span>&#160;<span class="comment">    /// must have a scale of 1/256 and an offset of 0</span></div>
<div class="line"><a name="l00530"></a><span class="lineno">  530</span>&#160;<span class="comment">    /// @param softmaxDescriptor - SoftmaxDescriptor to configure the softmax.</span></div>
<div class="line"><a name="l00531"></a><span class="lineno">  531</span>&#160;<span class="comment">    /// @param name - Optional name for the layer.</span></div>
<div class="line"><a name="l00532"></a><span class="lineno">  532</span>&#160;<span class="comment">    /// @return - Interface for configuring the layer.</span></div>
<div class="line"><a name="l00533"></a><span class="lineno">  533</span>&#160;<span class="comment"></span>    <a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml">IConnectableLayer</a>* <a class="code" href="classarmnn_1_1_i_network.xhtml#a30528a3bd85a0dba158bd14e252bd68a">AddSoftmaxLayer</a>(<span class="keyword">const</span> <a class="code" href="structarmnn_1_1_softmax_descriptor.xhtml">SoftmaxDescriptor</a>&amp; softmaxDescriptor,</div>
<div class="line"><a name="l00534"></a><span class="lineno">  534</span>&#160;        <span class="keyword">const</span> <span class="keywordtype">char</span>* name = <span class="keyword">nullptr</span>);</div>
<div class="line"><a name="l00535"></a><span class="lineno">  535</span>&#160;<span class="comment"></span> </div>
<div class="line"><a name="l00536"></a><span class="lineno">  536</span>&#160;<span class="comment">    /// Adds a splitter layer to the network.</span></div>
<div class="line"><a name="l00537"></a><span class="lineno">  537</span>&#160;<span class="comment">    /// @param splitterDescriptor - ViewsDescriptor to configure the splitting process.</span></div>
<div class="line"><a name="l00538"></a><span class="lineno">  538</span>&#160;<span class="comment">    ///                             Number of Views must be equal to the number of outputs,</span></div>
<div class="line"><a name="l00539"></a><span class="lineno">  539</span>&#160;<span class="comment">    ///                             and their order must match - e.g. first view corresponds to</span></div>
<div class="line"><a name="l00540"></a><span class="lineno">  540</span>&#160;<span class="comment">    ///                             the first output, second view to the second output, etc....</span></div>
<div class="line"><a name="l00541"></a><span class="lineno">  541</span>&#160;<span class="comment">    /// @param name - Optional name for the layer.</span></div>
<div class="line"><a name="l00542"></a><span class="lineno">  542</span>&#160;<span class="comment">    /// @return - Interface for configuring the layer.</span></div>
<div class="line"><a name="l00543"></a><span class="lineno">  543</span>&#160;<span class="comment"></span>    <a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml">IConnectableLayer</a>* <a class="code" href="classarmnn_1_1_i_network.xhtml#a6f6d81d8a4f1f85f3616e8306760061c">AddSplitterLayer</a>(<span class="keyword">const</span> <a class="code" href="structarmnn_1_1_views_descriptor.xhtml">ViewsDescriptor</a>&amp; splitterDescriptor,</div>
<div class="line"><a name="l00544"></a><span class="lineno">  544</span>&#160;                                        <span class="keyword">const</span> <span class="keywordtype">char</span>* name = <span class="keyword">nullptr</span>);</div>
<div class="line"><a name="l00545"></a><span class="lineno">  545</span>&#160;<span class="comment"></span> </div>
<div class="line"><a name="l00546"></a><span class="lineno">  546</span>&#160;<span class="comment">    /// Adds a merge layer to the network.</span></div>
<div class="line"><a name="l00547"></a><span class="lineno">  547</span>&#160;<span class="comment">    /// @param name - Optional name for the layer.</span></div>
<div class="line"><a name="l00548"></a><span class="lineno">  548</span>&#160;<span class="comment">    /// @return - Interface for configuring the layer.</span></div>
<div class="line"><a name="l00549"></a><span class="lineno">  549</span>&#160;<span class="comment"></span>    <a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml">IConnectableLayer</a>* <a class="code" href="classarmnn_1_1_i_network.xhtml#a0f19808bdada45222e72edf7671a275a">AddMergeLayer</a>(<span class="keyword">const</span> <span class="keywordtype">char</span>* name = <span class="keyword">nullptr</span>);</div>
<div class="line"><a name="l00550"></a><span class="lineno">  550</span>&#160;<span class="comment"></span> </div>
<div class="line"><a name="l00551"></a><span class="lineno">  551</span>&#160;<span class="comment">    /// Adds an addition layer to the network.</span></div>
<div class="line"><a name="l00552"></a><span class="lineno">  552</span>&#160;<span class="comment">    /// @param name - Optional name for the layer.</span></div>
<div class="line"><a name="l00553"></a><span class="lineno">  553</span>&#160;<span class="comment">    /// @return - Interface for configuring the layer.</span></div>
<div class="line"><a name="l00554"></a><span class="lineno">  554</span>&#160;<span class="comment"></span>    <a class="code" href="_deprecated_8hpp.xhtml#af16119336bd0dfbfbc83fc283151067e">ARMNN_DEPRECATED_MSG_REMOVAL_DATE</a>(<span class="stringliteral">&quot;Use AddElementwiseBinaryLayer instead&quot;</span>, <span class="stringliteral">&quot;24.02&quot;</span>)</div>
<div class="line"><a name="l00555"></a><span class="lineno">  555</span>&#160;    <a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml">IConnectableLayer</a>* <a class="code" href="classarmnn_1_1_i_network.xhtml#a39f1b38d89c4de186742eafcbb3b1319">AddAdditionLayer</a>(<span class="keyword">const</span> <span class="keywordtype">char</span>* name = <span class="keyword">nullptr</span>);</div>
<div class="line"><a name="l00556"></a><span class="lineno">  556</span>&#160;<span class="comment"></span> </div>
<div class="line"><a name="l00557"></a><span class="lineno">  557</span>&#160;<span class="comment">    /// Adds a multiplication layer to the network.</span></div>
<div class="line"><a name="l00558"></a><span class="lineno">  558</span>&#160;<span class="comment">    /// @param name - Optional name for the layer.</span></div>
<div class="line"><a name="l00559"></a><span class="lineno">  559</span>&#160;<span class="comment">    /// @return - Interface for configuring the layer.</span></div>
<div class="line"><a name="l00560"></a><span class="lineno">  560</span>&#160;<span class="comment"></span>    <a class="code" href="_deprecated_8hpp.xhtml#af16119336bd0dfbfbc83fc283151067e">ARMNN_DEPRECATED_MSG_REMOVAL_DATE</a>(<span class="stringliteral">&quot;Use AddElementwiseBinaryLayer instead&quot;</span>, <span class="stringliteral">&quot;24.02&quot;</span>)</div>
<div class="line"><a name="l00561"></a><span class="lineno">  561</span>&#160;    <a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml">IConnectableLayer</a>* <a class="code" href="classarmnn_1_1_i_network.xhtml#abb59f6ba9988dae88e0f48e68d87fc32">AddMultiplicationLayer</a>(<span class="keyword">const</span> <span class="keywordtype">char</span>* name = <span class="keyword">nullptr</span>);</div>
<div class="line"><a name="l00562"></a><span class="lineno">  562</span>&#160;<span class="comment"></span> </div>
<div class="line"><a name="l00563"></a><span class="lineno">  563</span>&#160;<span class="comment">    /// Adds a batch normalization layer to the network.</span></div>
<div class="line"><a name="l00564"></a><span class="lineno">  564</span>&#160;<span class="comment">    /// @param mean - Pre-calculated mean for each channel.</span></div>
<div class="line"><a name="l00565"></a><span class="lineno">  565</span>&#160;<span class="comment">    /// @param variance - Pre-calculated variance for each channel.</span></div>
<div class="line"><a name="l00566"></a><span class="lineno">  566</span>&#160;<span class="comment">    /// @param beta - Per-channel additive factor.</span></div>
<div class="line"><a name="l00567"></a><span class="lineno">  567</span>&#160;<span class="comment">    /// @param gamma - Per-channel multiplicative factor.</span></div>
<div class="line"><a name="l00568"></a><span class="lineno">  568</span>&#160;<span class="comment">    /// @return - Interface for configuring the layer.</span></div>
<div class="line"><a name="l00569"></a><span class="lineno">  569</span>&#160;<span class="comment">    /// @param name - Optional name for the layer.</span></div>
<div class="line"><a name="l00570"></a><span class="lineno">  570</span>&#160;<span class="comment"></span>    <a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml">IConnectableLayer</a>* <a class="code" href="classarmnn_1_1_i_network.xhtml#a8f798e19187ac7ae6ae6153ee64ab645">AddBatchNormalizationLayer</a>(<span class="keyword">const</span> <a class="code" href="structarmnn_1_1_batch_normalization_descriptor.xhtml">BatchNormalizationDescriptor</a>&amp; desc,</div>
<div class="line"><a name="l00571"></a><span class="lineno">  571</span>&#160;        <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_const_tensor.xhtml">ConstTensor</a>&amp; mean,</div>
<div class="line"><a name="l00572"></a><span class="lineno">  572</span>&#160;        <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_const_tensor.xhtml">ConstTensor</a>&amp; variance,</div>
<div class="line"><a name="l00573"></a><span class="lineno">  573</span>&#160;        <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_const_tensor.xhtml">ConstTensor</a>&amp; beta,</div>
<div class="line"><a name="l00574"></a><span class="lineno">  574</span>&#160;        <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_const_tensor.xhtml">ConstTensor</a>&amp; gamma,</div>
<div class="line"><a name="l00575"></a><span class="lineno">  575</span>&#160;        <span class="keyword">const</span> <span class="keywordtype">char</span>* name = <span class="keyword">nullptr</span>);</div>
<div class="line"><a name="l00576"></a><span class="lineno">  576</span>&#160;<span class="comment"></span> </div>
<div class="line"><a name="l00577"></a><span class="lineno">  577</span>&#160;<span class="comment">    /// Adds a rank layer to the network.</span></div>
<div class="line"><a name="l00578"></a><span class="lineno">  578</span>&#160;<span class="comment">    /// @param name - Optional name for the layer.</span></div>
<div class="line"><a name="l00579"></a><span class="lineno">  579</span>&#160;<span class="comment">    /// @return - Interface for configuring the layer.</span></div>
<div class="line"><a name="l00580"></a><span class="lineno">  580</span>&#160;<span class="comment"></span>    <a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml">IConnectableLayer</a>* <a class="code" href="classarmnn_1_1_i_network.xhtml#a25563024ec66627ee83727244a53e944">AddRankLayer</a>(<span class="keyword">const</span> <span class="keywordtype">char</span>* name = <span class="keyword">nullptr</span>);</div>
<div class="line"><a name="l00581"></a><span class="lineno">  581</span>&#160;<span class="comment"></span> </div>
<div class="line"><a name="l00582"></a><span class="lineno">  582</span>&#160;<span class="comment">    /// Adds a resize layer to the network.</span></div>
<div class="line"><a name="l00583"></a><span class="lineno">  583</span>&#160;<span class="comment">    /// @param resizeDescriptor - Parameters for the resize operation.</span></div>
<div class="line"><a name="l00584"></a><span class="lineno">  584</span>&#160;<span class="comment">    /// @param name - Optional name for the layer.</span></div>
<div class="line"><a name="l00585"></a><span class="lineno">  585</span>&#160;<span class="comment">    /// @return - Interface for configuring the layer.</span></div>
<div class="line"><a name="l00586"></a><span class="lineno">  586</span>&#160;<span class="comment"></span>    <a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml">IConnectableLayer</a>* <a class="code" href="classarmnn_1_1_i_network.xhtml#ad97411f1fcb2c30c212483d8c673506f">AddResizeLayer</a>(<span class="keyword">const</span> <a class="code" href="structarmnn_1_1_resize_descriptor.xhtml">ResizeDescriptor</a>&amp; resizeDescriptor,</div>
<div class="line"><a name="l00587"></a><span class="lineno">  587</span>&#160;                                      <span class="keyword">const</span> <span class="keywordtype">char</span>* name = <span class="keyword">nullptr</span>);</div>
<div class="line"><a name="l00588"></a><span class="lineno">  588</span>&#160;<span class="comment"></span> </div>
<div class="line"><a name="l00589"></a><span class="lineno">  589</span>&#160;<span class="comment">    /// Adds a reduce layer to the network.</span></div>
<div class="line"><a name="l00590"></a><span class="lineno">  590</span>&#160;<span class="comment">    /// @param ReduceDescriptor - Parameters for the reduce operation.</span></div>
<div class="line"><a name="l00591"></a><span class="lineno">  591</span>&#160;<span class="comment">    /// @param name - Optional name for the layer.</span></div>
<div class="line"><a name="l00592"></a><span class="lineno">  592</span>&#160;<span class="comment">    /// @return - Interface for configuring the layer.</span></div>
<div class="line"><a name="l00593"></a><span class="lineno">  593</span>&#160;<span class="comment"></span>    <a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml">IConnectableLayer</a>* <a class="code" href="classarmnn_1_1_i_network.xhtml#ae0cfae1ea51669892608a1a060d24fa0">AddReduceLayer</a>(<span class="keyword">const</span> <a class="code" href="structarmnn_1_1_reduce_descriptor.xhtml">ReduceDescriptor</a>&amp; reduceDescriptor,</div>
<div class="line"><a name="l00594"></a><span class="lineno">  594</span>&#160;                                      <span class="keyword">const</span> <span class="keywordtype">char</span>* name = <span class="keyword">nullptr</span>);</div>
<div class="line"><a name="l00595"></a><span class="lineno">  595</span>&#160;<span class="comment"></span> </div>
<div class="line"><a name="l00596"></a><span class="lineno">  596</span>&#160;<span class="comment">    /// Adds an instance normalization layer to the network.</span></div>
<div class="line"><a name="l00597"></a><span class="lineno">  597</span>&#160;<span class="comment">    /// @param desc - Parameters for the instance normalization operation.</span></div>
<div class="line"><a name="l00598"></a><span class="lineno">  598</span>&#160;<span class="comment">    /// @param name - Optional name for the layer.</span></div>
<div class="line"><a name="l00599"></a><span class="lineno">  599</span>&#160;<span class="comment">    /// @return - Interface for configuring the layer.</span></div>
<div class="line"><a name="l00600"></a><span class="lineno">  600</span>&#160;<span class="comment"></span>    <a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml">IConnectableLayer</a>* <a class="code" href="classarmnn_1_1_i_network.xhtml#abd61d3e7ab67551c75bc219bbc4baeb5">AddInstanceNormalizationLayer</a>(<span class="keyword">const</span> <a class="code" href="structarmnn_1_1_instance_normalization_descriptor.xhtml">InstanceNormalizationDescriptor</a>&amp; desc,</div>
<div class="line"><a name="l00601"></a><span class="lineno">  601</span>&#160;                                                     <span class="keyword">const</span> <span class="keywordtype">char</span>* name = <span class="keyword">nullptr</span>);</div>
<div class="line"><a name="l00602"></a><span class="lineno">  602</span>&#160;<span class="comment"></span> </div>
<div class="line"><a name="l00603"></a><span class="lineno">  603</span>&#160;<span class="comment">    /// Adds an L2 normalization layer to the network.</span></div>
<div class="line"><a name="l00604"></a><span class="lineno">  604</span>&#160;<span class="comment">    /// Normalization is performed along dimension 1, but requires a 4d input.</span></div>
<div class="line"><a name="l00605"></a><span class="lineno">  605</span>&#160;<span class="comment">    /// @param desc - Parameters for the L2 normalization operation.</span></div>
<div class="line"><a name="l00606"></a><span class="lineno">  606</span>&#160;<span class="comment">    /// @param name - Optional name for the layer.</span></div>
<div class="line"><a name="l00607"></a><span class="lineno">  607</span>&#160;<span class="comment">    /// @return - Interface for configuring the layer.</span></div>
<div class="line"><a name="l00608"></a><span class="lineno">  608</span>&#160;<span class="comment"></span>    <a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml">IConnectableLayer</a>* <a class="code" href="classarmnn_1_1_i_network.xhtml#aaff51346dadec2c1430abf007fed4cc9">AddL2NormalizationLayer</a>(<span class="keyword">const</span> <a class="code" href="structarmnn_1_1_l2_normalization_descriptor.xhtml">L2NormalizationDescriptor</a>&amp; desc,</div>
<div class="line"><a name="l00609"></a><span class="lineno">  609</span>&#160;                                               <span class="keyword">const</span> <span class="keywordtype">char</span>* name = <span class="keyword">nullptr</span>);</div>
<div class="line"><a name="l00610"></a><span class="lineno">  610</span>&#160;<span class="comment"></span> </div>
<div class="line"><a name="l00611"></a><span class="lineno">  611</span>&#160;<span class="comment">    /// Adds a log softmax layer to the network.</span></div>
<div class="line"><a name="l00612"></a><span class="lineno">  612</span>&#160;<span class="comment">    /// @param logSoftmaxDescriptor - LogSoftmaxDescriptor to configure the log softmax.</span></div>
<div class="line"><a name="l00613"></a><span class="lineno">  613</span>&#160;<span class="comment">    /// @param name - Optional name for the layer.</span></div>
<div class="line"><a name="l00614"></a><span class="lineno">  614</span>&#160;<span class="comment">    /// @return - Interface for configuring the layer.</span></div>
<div class="line"><a name="l00615"></a><span class="lineno">  615</span>&#160;<span class="comment"></span>    <a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml">IConnectableLayer</a>* <a class="code" href="classarmnn_1_1_i_network.xhtml#a83b33973ca12078166b2436b313627b9">AddLogSoftmaxLayer</a>(<span class="keyword">const</span> <a class="code" href="structarmnn_1_1_softmax_descriptor.xhtml">LogSoftmaxDescriptor</a>&amp; logSoftmaxDescriptor,</div>
<div class="line"><a name="l00616"></a><span class="lineno">  616</span>&#160;                                          <span class="keyword">const</span> <span class="keywordtype">char</span>* name = <span class="keyword">nullptr</span>);</div>
<div class="line"><a name="l00617"></a><span class="lineno">  617</span>&#160;<span class="comment"></span> </div>
<div class="line"><a name="l00618"></a><span class="lineno">  618</span>&#160;<span class="comment">    /// Adds a layer with no inputs and a single output, which always corresponds to</span></div>
<div class="line"><a name="l00619"></a><span class="lineno">  619</span>&#160;<span class="comment">    /// the passed in constant tensor.</span></div>
<div class="line"><a name="l00620"></a><span class="lineno">  620</span>&#160;<span class="comment">    /// @param input - Tensor to be provided as the only output of the layer. The layer will maintain</span></div>
<div class="line"><a name="l00621"></a><span class="lineno">  621</span>&#160;<span class="comment">    ///                its own copy of the tensor data, meaning the memory referenced by @a input can</span></div>
<div class="line"><a name="l00622"></a><span class="lineno">  622</span>&#160;<span class="comment">    ///                be freed or reused after this function is called.</span></div>
<div class="line"><a name="l00623"></a><span class="lineno">  623</span>&#160;<span class="comment">    /// @param name - Optional name for the layer.</span></div>
<div class="line"><a name="l00624"></a><span class="lineno">  624</span>&#160;<span class="comment">    /// @return - Interface for configuring the layer.</span></div>
<div class="line"><a name="l00625"></a><span class="lineno">  625</span>&#160;<span class="comment"></span>    <a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml">IConnectableLayer</a>* <a class="code" href="classarmnn_1_1_i_network.xhtml#a1aa567f46c30960851c02847dc7b4215">AddConstantLayer</a>(<span class="keyword">const</span> <a class="code" href="classarmnn_1_1_const_tensor.xhtml">ConstTensor</a>&amp; input,</div>
<div class="line"><a name="l00626"></a><span class="lineno">  626</span>&#160;                                        <span class="keyword">const</span> <span class="keywordtype">char</span>* name = <span class="keyword">nullptr</span>);</div>
<div class="line"><a name="l00627"></a><span class="lineno">  627</span>&#160;<span class="comment"></span> </div>
<div class="line"><a name="l00628"></a><span class="lineno">  628</span>&#160;<span class="comment">    /// Adds a reshape layer to the network.</span></div>
<div class="line"><a name="l00629"></a><span class="lineno">  629</span>&#160;<span class="comment">    /// @param reshapeDescriptor - Parameters for the reshape operation.</span></div>
<div class="line"><a name="l00630"></a><span class="lineno">  630</span>&#160;<span class="comment">    /// @param name - Optional name for the layer.</span></div>
<div class="line"><a name="l00631"></a><span class="lineno">  631</span>&#160;<span class="comment">    /// @return - Interface for configuring the layer.</span></div>
<div class="line"><a name="l00632"></a><span class="lineno">  632</span>&#160;<span class="comment"></span>    <a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml">IConnectableLayer</a>* <a class="code" href="classarmnn_1_1_i_network.xhtml#a8a3380be13fba749fc4208214b049347">AddReshapeLayer</a>(<span class="keyword">const</span> <a class="code" href="structarmnn_1_1_reshape_descriptor.xhtml">ReshapeDescriptor</a>&amp; reshapeDescriptor,</div>
<div class="line"><a name="l00633"></a><span class="lineno">  633</span>&#160;                                       <span class="keyword">const</span> <span class="keywordtype">char</span>* name = <span class="keyword">nullptr</span>);</div>
<div class="line"><a name="l00634"></a><span class="lineno">  634</span>&#160;<span class="comment"></span> </div>
<div class="line"><a name="l00635"></a><span class="lineno">  635</span>&#160;<span class="comment">    /// Adds a shape layer to the network.</span></div>
<div class="line"><a name="l00636"></a><span class="lineno">  636</span>&#160;<span class="comment">    /// @param name - Optional name for the layer.</span></div>
<div class="line"><a name="l00637"></a><span class="lineno">  637</span>&#160;<span class="comment">    /// @return - Interface for configuring the layer.</span></div>
<div class="line"><a name="l00638"></a><span class="lineno">  638</span>&#160;<span class="comment"></span>    <a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml">IConnectableLayer</a>* <a class="code" href="classarmnn_1_1_i_network.xhtml#af9dd4b5273829b846ab83b3ae7f3defc">AddShapeLayer</a>(<span class="keyword">const</span> <span class="keywordtype">char</span>* name = <span class="keyword">nullptr</span>);</div>
<div class="line"><a name="l00639"></a><span class="lineno">  639</span>&#160;<span class="comment"></span> </div>
<div class="line"><a name="l00640"></a><span class="lineno">  640</span>&#160;<span class="comment">    /// Adds a space to batch layer to the network.</span></div>
<div class="line"><a name="l00641"></a><span class="lineno">  641</span>&#160;<span class="comment">    /// @param spaceToBatchNdDescriptor - Parameters for the space to batch operation.</span></div>
<div class="line"><a name="l00642"></a><span class="lineno">  642</span>&#160;<span class="comment">    /// @param name - Optional name for the layer.</span></div>
<div class="line"><a name="l00643"></a><span class="lineno">  643</span>&#160;<span class="comment">    /// @return - Interface for configuring the layer.</span></div>
<div class="line"><a name="l00644"></a><span class="lineno">  644</span>&#160;<span class="comment"></span>    <a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml">IConnectableLayer</a>* <a class="code" href="classarmnn_1_1_i_network.xhtml#a72b9d30e9d555bb5c35460b62faedf0d">AddSpaceToBatchNdLayer</a>(<span class="keyword">const</span> <a class="code" href="structarmnn_1_1_space_to_batch_nd_descriptor.xhtml">SpaceToBatchNdDescriptor</a>&amp; spaceToBatchNdDescriptor,</div>
<div class="line"><a name="l00645"></a><span class="lineno">  645</span>&#160;                                              <span class="keyword">const</span> <span class="keywordtype">char</span>* name = <span class="keyword">nullptr</span>);</div>
<div class="line"><a name="l00646"></a><span class="lineno">  646</span>&#160;<span class="comment"></span> </div>
<div class="line"><a name="l00647"></a><span class="lineno">  647</span>&#160;<span class="comment">    /// Adds a space to depth layer to the network.</span></div>
<div class="line"><a name="l00648"></a><span class="lineno">  648</span>&#160;<span class="comment">    /// @param spaceToDepthDescriptor - Parameters for the space to depth operation.</span></div>
<div class="line"><a name="l00649"></a><span class="lineno">  649</span>&#160;<span class="comment">    /// @param name - Optional name for the layer.</span></div>
<div class="line"><a name="l00650"></a><span class="lineno">  650</span>&#160;<span class="comment">    /// @return - Interface for configuring the layer.</span></div>
<div class="line"><a name="l00651"></a><span class="lineno">  651</span>&#160;<span class="comment"></span>    <a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml">IConnectableLayer</a>* <a class="code" href="classarmnn_1_1_i_network.xhtml#a19bad0cc50526ca9f4f84a688812cdf5">AddSpaceToDepthLayer</a>(<span class="keyword">const</span> <a class="code" href="structarmnn_1_1_space_to_depth_descriptor.xhtml">SpaceToDepthDescriptor</a>&amp; spaceToDepthDescriptor,</div>
<div class="line"><a name="l00652"></a><span class="lineno">  652</span>&#160;                                            <span class="keyword">const</span> <span class="keywordtype">char</span>* name = <span class="keyword">nullptr</span>);</div>
<div class="line"><a name="l00653"></a><span class="lineno">  653</span>&#160;<span class="comment"></span> </div>
<div class="line"><a name="l00654"></a><span class="lineno">  654</span>&#160;<span class="comment">    /// Adds a floor layer to the network.</span></div>
<div class="line"><a name="l00655"></a><span class="lineno">  655</span>&#160;<span class="comment">    /// @param name - Optional name for the layer.</span></div>
<div class="line"><a name="l00656"></a><span class="lineno">  656</span>&#160;<span class="comment">    /// @return - Interface for configuring the layer.</span></div>
<div class="line"><a name="l00657"></a><span class="lineno">  657</span>&#160;<span class="comment"></span>    <a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml">IConnectableLayer</a>* <a class="code" href="classarmnn_1_1_i_network.xhtml#a435ea88480b8645026dd45fd692663a1">AddFloorLayer</a>(<span class="keyword">const</span> <span class="keywordtype">char</span>* name = <span class="keyword">nullptr</span>);</div>
<div class="line"><a name="l00658"></a><span class="lineno">  658</span>&#160;<span class="comment"></span> </div>
<div class="line"><a name="l00659"></a><span class="lineno">  659</span>&#160;<span class="comment">    /// Adds an output layer to the network.</span></div>
<div class="line"><a name="l00660"></a><span class="lineno">  660</span>&#160;<span class="comment">    /// @param id - User generated id to uniquely identify a particular output. The same id needs to be specified</span></div>
<div class="line"><a name="l00661"></a><span class="lineno">  661</span>&#160;<span class="comment">    /// when passing the outputs to the IRuntime::EnqueueWorkload() function.</span></div>
<div class="line"><a name="l00662"></a><span class="lineno">  662</span>&#160;<span class="comment">    /// @param name - Optional name for the layer.</span></div>
<div class="line"><a name="l00663"></a><span class="lineno">  663</span>&#160;<span class="comment">    /// @return - Interface for configuring the layer.</span></div>
<div class="line"><a name="l00664"></a><span class="lineno">  664</span>&#160;<span class="comment"></span>    <a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml">IConnectableLayer</a>* <a class="code" href="classarmnn_1_1_i_network.xhtml#af5790069aa11fd1c5bb2e17cecb06528">AddOutputLayer</a>(<a class="code" href="namespacearmnn.xhtml#ab8cf8f9fb6792e654c2d8d8382f6f01b">LayerBindingId</a> <span class="keywordtype">id</span>, <span class="keyword">const</span> <span class="keywordtype">char</span>* name = <span class="keyword">nullptr</span>);</div>
<div class="line"><a name="l00665"></a><span class="lineno">  665</span>&#160;<span class="comment"></span> </div>
<div class="line"><a name="l00666"></a><span class="lineno">  666</span>&#160;<span class="comment">    /// Add a Lstm layer to the network</span></div>
<div class="line"><a name="l00667"></a><span class="lineno">  667</span>&#160;<span class="comment">    /// @param descriptor - Parameters for the Lstm operation</span></div>
<div class="line"><a name="l00668"></a><span class="lineno">  668</span>&#160;<span class="comment">    /// @param params - Weights and biases for the LSTM cell</span></div>
<div class="line"><a name="l00669"></a><span class="lineno">  669</span>&#160;<span class="comment">    /// @param name - Optional name for the layer</span></div>
<div class="line"><a name="l00670"></a><span class="lineno">  670</span>&#160;<span class="comment">    /// @return - Interface for configuring the layer.</span></div>
<div class="line"><a name="l00671"></a><span class="lineno">  671</span>&#160;<span class="comment"></span>    <a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml">IConnectableLayer</a>* <a class="code" href="classarmnn_1_1_i_network.xhtml#a0a2fdd4f442952c97a8f24de6700473a">AddLstmLayer</a>(<span class="keyword">const</span> <a class="code" href="structarmnn_1_1_lstm_descriptor.xhtml">LstmDescriptor</a>&amp; descriptor,</div>
<div class="line"><a name="l00672"></a><span class="lineno">  672</span>&#160;                                    <span class="keyword">const</span> <a class="code" href="structarmnn_1_1_lstm_input_params.xhtml">LstmInputParams</a>&amp; params,</div>
<div class="line"><a name="l00673"></a><span class="lineno">  673</span>&#160;                                    <span class="keyword">const</span> <span class="keywordtype">char</span>* name = <span class="keyword">nullptr</span>);</div>
<div class="line"><a name="l00674"></a><span class="lineno">  674</span>&#160;<span class="comment"></span> </div>
<div class="line"><a name="l00675"></a><span class="lineno">  675</span>&#160;<span class="comment">    /// Adds a division layer to the network.</span></div>
<div class="line"><a name="l00676"></a><span class="lineno">  676</span>&#160;<span class="comment">    /// @param name - Optional name for the layer.</span></div>
<div class="line"><a name="l00677"></a><span class="lineno">  677</span>&#160;<span class="comment">    /// @return - Interface for configuring the layer.</span></div>
<div class="line"><a name="l00678"></a><span class="lineno">  678</span>&#160;<span class="comment"></span>    <a class="code" href="_deprecated_8hpp.xhtml#af16119336bd0dfbfbc83fc283151067e">ARMNN_DEPRECATED_MSG_REMOVAL_DATE</a>(<span class="stringliteral">&quot;Use AddElementwiseBinaryLayer instead&quot;</span>, <span class="stringliteral">&quot;24.02&quot;</span>)</div>
<div class="line"><a name="l00679"></a><span class="lineno">  679</span>&#160;    <a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml">IConnectableLayer</a>* <a class="code" href="classarmnn_1_1_i_network.xhtml#a0aeb4e528cf6ba4b7caca14a94fbcafe">AddDivisionLayer</a>(<span class="keyword">const</span> <span class="keywordtype">char</span>* name = <span class="keyword">nullptr</span>);</div>
<div class="line"><a name="l00680"></a><span class="lineno">  680</span>&#160;<span class="comment"></span> </div>
<div class="line"><a name="l00681"></a><span class="lineno">  681</span>&#160;<span class="comment">    /// Adds a subtraction layer to the network.</span></div>
<div class="line"><a name="l00682"></a><span class="lineno">  682</span>&#160;<span class="comment">    /// @param name - Optional name for the layer.</span></div>
<div class="line"><a name="l00683"></a><span class="lineno">  683</span>&#160;<span class="comment">    /// @return - Interface for configuring the layer.</span></div>
<div class="line"><a name="l00684"></a><span class="lineno">  684</span>&#160;<span class="comment"></span>    <a class="code" href="_deprecated_8hpp.xhtml#af16119336bd0dfbfbc83fc283151067e">ARMNN_DEPRECATED_MSG_REMOVAL_DATE</a>(<span class="stringliteral">&quot;Use AddElementwiseBinaryLayer instead&quot;</span>, <span class="stringliteral">&quot;24.02&quot;</span>)</div>
<div class="line"><a name="l00685"></a><span class="lineno">  685</span>&#160;    <a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml">IConnectableLayer</a>* <a class="code" href="classarmnn_1_1_i_network.xhtml#af13795cdf49e63d8bc3cb409592cdb9d">AddSubtractionLayer</a>(<span class="keyword">const</span> <span class="keywordtype">char</span>* name = <span class="keyword">nullptr</span>);</div>
<div class="line"><a name="l00686"></a><span class="lineno">  686</span>&#160;<span class="comment"></span> </div>
<div class="line"><a name="l00687"></a><span class="lineno">  687</span>&#160;<span class="comment">    /// Add a Maximum layer to the network.</span></div>
<div class="line"><a name="l00688"></a><span class="lineno">  688</span>&#160;<span class="comment">    /// @param name - Optional name for the layer.</span></div>
<div class="line"><a name="l00689"></a><span class="lineno">  689</span>&#160;<span class="comment">    /// @return - Interface for configuring the layer.</span></div>
<div class="line"><a name="l00690"></a><span class="lineno">  690</span>&#160;<span class="comment"></span>    <a class="code" href="_deprecated_8hpp.xhtml#af16119336bd0dfbfbc83fc283151067e">ARMNN_DEPRECATED_MSG_REMOVAL_DATE</a>(<span class="stringliteral">&quot;Use AddElementwiseBinaryLayer instead&quot;</span>, <span class="stringliteral">&quot;24.02&quot;</span>)</div>
<div class="line"><a name="l00691"></a><span class="lineno">  691</span>&#160;    <a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml">IConnectableLayer</a>* <a class="code" href="classarmnn_1_1_i_network.xhtml#a57590d7777211673d2052f702f0b07a1">AddMaximumLayer</a>(<span class="keyword">const</span> <span class="keywordtype">char</span>* name = <span class="keyword">nullptr</span>);</div>
<div class="line"><a name="l00692"></a><span class="lineno">  692</span>&#160;<span class="comment"></span> </div>
<div class="line"><a name="l00693"></a><span class="lineno">  693</span>&#160;<span class="comment">    /// Add a Mean layer to the network.</span></div>
<div class="line"><a name="l00694"></a><span class="lineno">  694</span>&#160;<span class="comment">    /// @param meanDescriptor - Parameters for the mean operation.</span></div>
<div class="line"><a name="l00695"></a><span class="lineno">  695</span>&#160;<span class="comment">    /// @param name - Optional name for the layer.</span></div>
<div class="line"><a name="l00696"></a><span class="lineno">  696</span>&#160;<span class="comment">    /// @return - Interface for configuring the layer.</span></div>
<div class="line"><a name="l00697"></a><span class="lineno">  697</span>&#160;<span class="comment"></span>    <a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml">IConnectableLayer</a>* <a class="code" href="classarmnn_1_1_i_network.xhtml#ad4726f9b7dd11db250d2a494a8a39494">AddMeanLayer</a>(<span class="keyword">const</span> <a class="code" href="structarmnn_1_1_mean_descriptor.xhtml">MeanDescriptor</a>&amp; meanDescriptor, <span class="keyword">const</span> <span class="keywordtype">char</span>* name = <span class="keyword">nullptr</span>);</div>
<div class="line"><a name="l00698"></a><span class="lineno">  698</span>&#160;<span class="comment"></span> </div>
<div class="line"><a name="l00699"></a><span class="lineno">  699</span>&#160;<span class="comment">    /// Adds a fully pad layer to the network.</span></div>
<div class="line"><a name="l00700"></a><span class="lineno">  700</span>&#160;<span class="comment">    /// @param paddings - n by 2 tensor, where n is the rank of the input tensor,</span></div>
<div class="line"><a name="l00701"></a><span class="lineno">  701</span>&#160;<span class="comment">    ///                   such that paddings[i,0] indicates the amount of padding to add in front of dimonsion i, and</span></div>
<div class="line"><a name="l00702"></a><span class="lineno">  702</span>&#160;<span class="comment">    ///                   paddings[i,1] indicates the amount of padding to add after the end of dimension i</span></div>
<div class="line"><a name="l00703"></a><span class="lineno">  703</span>&#160;<span class="comment">    /// @param name - Optional name for the layer.</span></div>
<div class="line"><a name="l00704"></a><span class="lineno">  704</span>&#160;<span class="comment">    /// @return - Interface for configuring the layer.</span></div>
<div class="line"><a name="l00705"></a><span class="lineno">  705</span>&#160;<span class="comment"></span>    <a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml">IConnectableLayer</a>* <a class="code" href="classarmnn_1_1_i_network.xhtml#a6e2df484ecc65bc82712590b96e04df4">AddPadLayer</a>(<span class="keyword">const</span> <a class="code" href="structarmnn_1_1_pad_descriptor.xhtml">PadDescriptor</a>&amp; padDescriptor,</div>
<div class="line"><a name="l00706"></a><span class="lineno">  706</span>&#160;                                           <span class="keyword">const</span> <span class="keywordtype">char</span>* name = <span class="keyword">nullptr</span>);</div>
<div class="line"><a name="l00707"></a><span class="lineno">  707</span>&#160;<span class="comment"></span> </div>
<div class="line"><a name="l00708"></a><span class="lineno">  708</span>&#160;<span class="comment">    /// Add a quantize layer to the network</span></div>
<div class="line"><a name="l00709"></a><span class="lineno">  709</span>&#160;<span class="comment">    ///@param name - Optional name for the layer.</span></div>
<div class="line"><a name="l00710"></a><span class="lineno">  710</span>&#160;<span class="comment">    /// @return - Interface for configuring the layer.</span></div>
<div class="line"><a name="l00711"></a><span class="lineno">  711</span>&#160;<span class="comment"></span>    <a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml">IConnectableLayer</a>* <a class="code" href="classarmnn_1_1_i_network.xhtml#a0b426a3feffc76e66d73b5761806e899">AddQuantizeLayer</a>(<span class="keyword">const</span> <span class="keywordtype">char</span>* name = <span class="keyword">nullptr</span>);</div>
<div class="line"><a name="l00712"></a><span class="lineno">  712</span>&#160;<span class="comment"></span> </div>
<div class="line"><a name="l00713"></a><span class="lineno">  713</span>&#160;<span class="comment">    /// Adds a strided slice layer to the network.</span></div>
<div class="line"><a name="l00714"></a><span class="lineno">  714</span>&#160;<span class="comment">    /// @param StridedSliceDescriptor - Parameters for the strided slice operation.</span></div>
<div class="line"><a name="l00715"></a><span class="lineno">  715</span>&#160;<span class="comment">    /// @param name - Optional name for the layer.</span></div>
<div class="line"><a name="l00716"></a><span class="lineno">  716</span>&#160;<span class="comment">    /// @return - Interface for configuring the layer.</span></div>
<div class="line"><a name="l00717"></a><span class="lineno">  717</span>&#160;<span class="comment"></span>    <a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml">IConnectableLayer</a>* <a class="code" href="classarmnn_1_1_i_network.xhtml#ac5c93cad39a690af862d49ffaec0d3c0">AddStridedSliceLayer</a>(<span class="keyword">const</span> <a class="code" href="structarmnn_1_1_strided_slice_descriptor.xhtml">StridedSliceDescriptor</a>&amp; stridedSliceDescriptor,</div>
<div class="line"><a name="l00718"></a><span class="lineno">  718</span>&#160;                                                    <span class="keyword">const</span> <span class="keywordtype">char</span>* name = <span class="keyword">nullptr</span>);</div>
<div class="line"><a name="l00719"></a><span class="lineno">  719</span>&#160;<span class="comment"></span> </div>
<div class="line"><a name="l00720"></a><span class="lineno">  720</span>&#160;<span class="comment">    /// Add a Minimum layer to the network.</span></div>
<div class="line"><a name="l00721"></a><span class="lineno">  721</span>&#160;<span class="comment">    /// @param name - Optional name for the layer.</span></div>
<div class="line"><a name="l00722"></a><span class="lineno">  722</span>&#160;<span class="comment">    /// @return - Interface for configuring the layer.</span></div>
<div class="line"><a name="l00723"></a><span class="lineno">  723</span>&#160;<span class="comment"></span>    <a class="code" href="_deprecated_8hpp.xhtml#af16119336bd0dfbfbc83fc283151067e">ARMNN_DEPRECATED_MSG_REMOVAL_DATE</a>(<span class="stringliteral">&quot;Use AddElementwiseBinaryLayer instead&quot;</span>, <span class="stringliteral">&quot;24.02&quot;</span>)</div>
<div class="line"><a name="l00724"></a><span class="lineno">  724</span>&#160;    <a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml">IConnectableLayer</a>* <a class="code" href="classarmnn_1_1_i_network.xhtml#a4bfd8dee1a0315b651e977c672c0847c">AddMinimumLayer</a>(<span class="keyword">const</span> <span class="keywordtype">char</span>* name = <span class="keyword">nullptr</span>);</div>
<div class="line"><a name="l00725"></a><span class="lineno">  725</span>&#160;<span class="comment"></span> </div>
<div class="line"><a name="l00726"></a><span class="lineno">  726</span>&#160;<span class="comment">    /// Add Gather layer to the network.</span></div>
<div class="line"><a name="l00727"></a><span class="lineno">  727</span>&#160;<span class="comment">    /// @param descriptor - Description of the gather layer.</span></div>
<div class="line"><a name="l00728"></a><span class="lineno">  728</span>&#160;<span class="comment">    /// @param name - Optional name for the layer.</span></div>
<div class="line"><a name="l00729"></a><span class="lineno">  729</span>&#160;<span class="comment">    /// @return - Interface for configuring the layer.</span></div>
<div class="line"><a name="l00730"></a><span class="lineno">  730</span>&#160;<span class="comment"></span>    <a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml">IConnectableLayer</a>* <a class="code" href="classarmnn_1_1_i_network.xhtml#a1da203a7e3caa6ae4f0630a4758aac55">AddGatherLayer</a>(<span class="keyword">const</span> <a class="code" href="structarmnn_1_1_gather_descriptor.xhtml">GatherDescriptor</a>&amp; descriptor,</div>
<div class="line"><a name="l00731"></a><span class="lineno">  731</span>&#160;                                              <span class="keyword">const</span> <span class="keywordtype">char</span>* name = <span class="keyword">nullptr</span>);</div>
<div class="line"><a name="l00732"></a><span class="lineno">  732</span>&#160;<span class="comment"></span> </div>
<div class="line"><a name="l00733"></a><span class="lineno">  733</span>&#160;<span class="comment">    /// Add GatherNd layer to the network.</span></div>
<div class="line"><a name="l00734"></a><span class="lineno">  734</span>&#160;<span class="comment">    /// @param name - Optional name for the layer.</span></div>
<div class="line"><a name="l00735"></a><span class="lineno">  735</span>&#160;<span class="comment">    /// @return - Interface for configuring the layer.</span></div>
<div class="line"><a name="l00736"></a><span class="lineno">  736</span>&#160;<span class="comment"></span>    <a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml">IConnectableLayer</a>* <a class="code" href="classarmnn_1_1_i_network.xhtml#af776e284b9e2c4a3563abb8cf5e8ac5e">AddGatherNdLayer</a>(<span class="keyword">const</span> <span class="keywordtype">char</span>* name = <span class="keyword">nullptr</span>);</div>
<div class="line"><a name="l00737"></a><span class="lineno">  737</span>&#160;<span class="comment"></span> </div>
<div class="line"><a name="l00738"></a><span class="lineno">  738</span>&#160;<span class="comment">    /// Adds a switch layer to the network.</span></div>
<div class="line"><a name="l00739"></a><span class="lineno">  739</span>&#160;<span class="comment">    /// @param name - Optional name for the layer.</span></div>
<div class="line"><a name="l00740"></a><span class="lineno">  740</span>&#160;<span class="comment">    /// @return - Interface for configuring the layer.</span></div>
<div class="line"><a name="l00741"></a><span class="lineno">  741</span>&#160;<span class="comment"></span>    <a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml">IConnectableLayer</a>* <a class="code" href="classarmnn_1_1_i_network.xhtml#a26e69cda5fe9642f9198c24ae5fdf9bc">AddSwitchLayer</a>(<span class="keyword">const</span> <span class="keywordtype">char</span>* name = <span class="keyword">nullptr</span>);</div>
<div class="line"><a name="l00742"></a><span class="lineno">  742</span>&#160;<span class="comment"></span> </div>
<div class="line"><a name="l00743"></a><span class="lineno">  743</span>&#160;<span class="comment">    /// Adds a PReLU layer to the network.</span></div>
<div class="line"><a name="l00744"></a><span class="lineno">  744</span>&#160;<span class="comment">    /// @param name - Optional name for the layer.</span></div>
<div class="line"><a name="l00745"></a><span class="lineno">  745</span>&#160;<span class="comment">    /// @return - Interface for configuring the layer.</span></div>
<div class="line"><a name="l00746"></a><span class="lineno">  746</span>&#160;<span class="comment"></span>    <a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml">IConnectableLayer</a>* <a class="code" href="classarmnn_1_1_i_network.xhtml#a6d614a503a34ea3712b388aa4340ddbe">AddPreluLayer</a>(<span class="keyword">const</span> <span class="keywordtype">char</span>* name = <span class="keyword">nullptr</span>);</div>
<div class="line"><a name="l00747"></a><span class="lineno">  747</span>&#160;<span class="comment"></span> </div>
<div class="line"><a name="l00748"></a><span class="lineno">  748</span>&#160;<span class="comment">    /// Adds a 2D transpose convolution layer to the network.</span></div>
<div class="line"><a name="l00749"></a><span class="lineno">  749</span>&#160;<span class="comment">    /// @param descriptor - Description of the 2D transpose convolution layer.</span></div>
<div class="line"><a name="l00750"></a><span class="lineno">  750</span>&#160;<span class="comment">    /// @param weights - Tensor for the weights data.</span></div>
<div class="line"><a name="l00751"></a><span class="lineno">  751</span>&#160;<span class="comment">    /// @param biases - Optional tensor for the bias data.</span></div>
<div class="line"><a name="l00752"></a><span class="lineno">  752</span>&#160;<span class="comment">    /// @param name - Optional name for the layer.</span></div>
<div class="line"><a name="l00753"></a><span class="lineno">  753</span>&#160;<span class="comment">    /// @return - Interface for configuring the layer.</span></div>
<div class="line"><a name="l00754"></a><span class="lineno">  754</span>&#160;<span class="comment"></span>    <a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml">IConnectableLayer</a>* <a class="code" href="classarmnn_1_1_i_network.xhtml#a41fd7b56923d5625bac2cbfebed1a393">AddTransposeConvolution2dLayer</a>(<span class="keyword">const</span> <a class="code" href="structarmnn_1_1_transpose_convolution2d_descriptor.xhtml">TransposeConvolution2dDescriptor</a>&amp; descriptor,</div>
<div class="line"><a name="l00755"></a><span class="lineno">  755</span>&#160;                                                              <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_const_tensor.xhtml">ConstTensor</a>&amp; weights,</div>
<div class="line"><a name="l00756"></a><span class="lineno">  756</span>&#160;                                                              <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_optional.xhtml">Optional&lt;ConstTensor&gt;</a>&amp; biases,</div>
<div class="line"><a name="l00757"></a><span class="lineno">  757</span>&#160;                                                              <span class="keyword">const</span> <span class="keywordtype">char</span>* name = <span class="keyword">nullptr</span>);</div>
<div class="line"><a name="l00758"></a><span class="lineno">  758</span>&#160;<span class="comment"></span> </div>
<div class="line"><a name="l00759"></a><span class="lineno">  759</span>&#160;<span class="comment">    /// Adds a transpose layer to the network.</span></div>
<div class="line"><a name="l00760"></a><span class="lineno">  760</span>&#160;<span class="comment">    /// @param transposeDescriptor - TransposeDescriptor to configure the transpose.</span></div>
<div class="line"><a name="l00761"></a><span class="lineno">  761</span>&#160;<span class="comment">    /// @param name - Optional name for the layer.</span></div>
<div class="line"><a name="l00762"></a><span class="lineno">  762</span>&#160;<span class="comment">    /// @return - Interface for configuring the layer.</span></div>
<div class="line"><a name="l00763"></a><span class="lineno">  763</span>&#160;<span class="comment"></span>    <a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml">IConnectableLayer</a>* <a class="code" href="classarmnn_1_1_i_network.xhtml#ab067ba4ee9416d93abb8a52f3dc8feba">AddTransposeLayer</a>(<span class="keyword">const</span> <a class="code" href="structarmnn_1_1_transpose_descriptor.xhtml">TransposeDescriptor</a>&amp; transposeDescriptor,</div>
<div class="line"><a name="l00764"></a><span class="lineno">  764</span>&#160;                                                 <span class="keyword">const</span> <span class="keywordtype">char</span>* name = <span class="keyword">nullptr</span>);</div>
<div class="line"><a name="l00765"></a><span class="lineno">  765</span>&#160;<span class="comment"></span> </div>
<div class="line"><a name="l00766"></a><span class="lineno">  766</span>&#160;<span class="comment">    /// Adds a stack layer to the network.</span></div>
<div class="line"><a name="l00767"></a><span class="lineno">  767</span>&#160;<span class="comment">    /// @param descriptor - Description of the stack layer.</span></div>
<div class="line"><a name="l00768"></a><span class="lineno">  768</span>&#160;<span class="comment">    /// @param name - Optional name for the layer.</span></div>
<div class="line"><a name="l00769"></a><span class="lineno">  769</span>&#160;<span class="comment">    /// @return - Interface for configuring the layer.</span></div>
<div class="line"><a name="l00770"></a><span class="lineno">  770</span>&#160;<span class="comment"></span>    <a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml">IConnectableLayer</a>* <a class="code" href="classarmnn_1_1_i_network.xhtml#a5210b3df77e7a51ab369b577de821aa2">AddStackLayer</a>(<span class="keyword">const</span> <a class="code" href="structarmnn_1_1_stack_descriptor.xhtml">StackDescriptor</a>&amp; descriptor,</div>
<div class="line"><a name="l00771"></a><span class="lineno">  771</span>&#160;                                             <span class="keyword">const</span> <span class="keywordtype">char</span>* name = <span class="keyword">nullptr</span>);</div>
<div class="line"><a name="l00772"></a><span class="lineno">  772</span>&#160;<span class="comment"></span> </div>
<div class="line"><a name="l00773"></a><span class="lineno">  773</span>&#160;<span class="comment">    /// Add a stand-in layer for a type unknown to the Arm NN framework.</span></div>
<div class="line"><a name="l00774"></a><span class="lineno">  774</span>&#160;<span class="comment">    /// Note: Due to the nature of this layer, no validation can be performed by the framework.</span></div>
<div class="line"><a name="l00775"></a><span class="lineno">  775</span>&#160;<span class="comment">    /// Furthermore, Any model containing this layer cannot make use of dynamic tensors since the</span></div>
<div class="line"><a name="l00776"></a><span class="lineno">  776</span>&#160;<span class="comment">    /// tensor sizes cannot be inferred.</span></div>
<div class="line"><a name="l00777"></a><span class="lineno">  777</span>&#160;<span class="comment">    /// @descriptor - Descriptor for the StandIn layer.</span></div>
<div class="line"><a name="l00778"></a><span class="lineno">  778</span>&#160;<span class="comment">    /// @return - Interface for configuring the layer.</span></div>
<div class="line"><a name="l00779"></a><span class="lineno">  779</span>&#160;<span class="comment"></span>    <a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml">IConnectableLayer</a>* <a class="code" href="classarmnn_1_1_i_network.xhtml#a74894d085e78ff80f45fc09dd2381f08">AddStandInLayer</a>(<span class="keyword">const</span> <a class="code" href="structarmnn_1_1_stand_in_descriptor.xhtml">StandInDescriptor</a>&amp; descriptor,</div>
<div class="line"><a name="l00780"></a><span class="lineno">  780</span>&#160;                                               <span class="keyword">const</span> <span class="keywordtype">char</span>* name = <span class="keyword">nullptr</span>);</div>
<div class="line"><a name="l00781"></a><span class="lineno">  781</span>&#160;<span class="comment"></span> </div>
<div class="line"><a name="l00782"></a><span class="lineno">  782</span>&#160;<span class="comment">    /// Add a QuantizedLstm layer to the network</span></div>
<div class="line"><a name="l00783"></a><span class="lineno">  783</span>&#160;<span class="comment">    /// @param params - The weights and biases for the Quantized LSTM cell</span></div>
<div class="line"><a name="l00784"></a><span class="lineno">  784</span>&#160;<span class="comment">    /// @param name - Optional name for the layer</span></div>
<div class="line"><a name="l00785"></a><span class="lineno">  785</span>&#160;<span class="comment">    /// @return - Interface for configuring the layer.</span></div>
<div class="line"><a name="l00786"></a><span class="lineno">  786</span>&#160;<span class="comment"></span>    <a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml">IConnectableLayer</a>* <a class="code" href="classarmnn_1_1_i_network.xhtml#a40067b05f30a3ab65568c826df7a8ea7">AddQuantizedLstmLayer</a>(<span class="keyword">const</span> <a class="code" href="structarmnn_1_1_quantized_lstm_input_params.xhtml">QuantizedLstmInputParams</a>&amp; params,</div>
<div class="line"><a name="l00787"></a><span class="lineno">  787</span>&#160;                                                     <span class="keyword">const</span> <span class="keywordtype">char</span>* name = <span class="keyword">nullptr</span>);</div>
<div class="line"><a name="l00788"></a><span class="lineno">  788</span>&#160;<span class="comment"></span> </div>
<div class="line"><a name="l00789"></a><span class="lineno">  789</span>&#160;<span class="comment">    /// Add a QLstm layer to the network</span></div>
<div class="line"><a name="l00790"></a><span class="lineno">  790</span>&#160;<span class="comment">    /// @param descriptor - Parameters for the QLstm operation</span></div>
<div class="line"><a name="l00791"></a><span class="lineno">  791</span>&#160;<span class="comment">    /// @param params - Weights and biases for the layer</span></div>
<div class="line"><a name="l00792"></a><span class="lineno">  792</span>&#160;<span class="comment">    /// @param name - Optional name for the layer</span></div>
<div class="line"><a name="l00793"></a><span class="lineno">  793</span>&#160;<span class="comment">    /// @return - Interface for configuring the layer.</span></div>
<div class="line"><a name="l00794"></a><span class="lineno">  794</span>&#160;<span class="comment"></span>    <a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml">IConnectableLayer</a>* <a class="code" href="classarmnn_1_1_i_network.xhtml#a2acbae0b9e98c94b843677484775c86a">AddQLstmLayer</a>(<span class="keyword">const</span> <a class="code" href="structarmnn_1_1_q_lstm_descriptor.xhtml">QLstmDescriptor</a>&amp; descriptor,</div>
<div class="line"><a name="l00795"></a><span class="lineno">  795</span>&#160;                                             <span class="keyword">const</span> <a class="code" href="structarmnn_1_1_lstm_input_params.xhtml">LstmInputParams</a>&amp; params,</div>
<div class="line"><a name="l00796"></a><span class="lineno">  796</span>&#160;                                             <span class="keyword">const</span> <span class="keywordtype">char</span>* name = <span class="keyword">nullptr</span>);</div>
<div class="line"><a name="l00797"></a><span class="lineno">  797</span>&#160;<span class="comment"></span> </div>
<div class="line"><a name="l00798"></a><span class="lineno">  798</span>&#160;<span class="comment">    /// Adds a Logical Binary layer to the network.</span></div>
<div class="line"><a name="l00799"></a><span class="lineno">  799</span>&#160;<span class="comment">    /// @param descriptor - Description of the Logical Binary layer.</span></div>
<div class="line"><a name="l00800"></a><span class="lineno">  800</span>&#160;<span class="comment">    /// @param name - Optional name for the layer.</span></div>
<div class="line"><a name="l00801"></a><span class="lineno">  801</span>&#160;<span class="comment">    /// @return - Interface for configuring the layer.</span></div>
<div class="line"><a name="l00802"></a><span class="lineno">  802</span>&#160;<span class="comment"></span>    <a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml">IConnectableLayer</a>* <a class="code" href="classarmnn_1_1_i_network.xhtml#a7dfc9717e76257867ad0a9239f210df0">AddLogicalBinaryLayer</a>(<span class="keyword">const</span> <a class="code" href="structarmnn_1_1_logical_binary_descriptor.xhtml">LogicalBinaryDescriptor</a>&amp; descriptor,</div>
<div class="line"><a name="l00803"></a><span class="lineno">  803</span>&#160;                                                     <span class="keyword">const</span> <span class="keywordtype">char</span>* name = <span class="keyword">nullptr</span>);</div>
<div class="line"><a name="l00804"></a><span class="lineno">  804</span>&#160;<span class="comment"></span> </div>
<div class="line"><a name="l00805"></a><span class="lineno">  805</span>&#160;<span class="comment">    /// Add a UnidirectionalSequenceLstm layer to the network</span></div>
<div class="line"><a name="l00806"></a><span class="lineno">  806</span>&#160;<span class="comment">    /// @param descriptor - Parameters for the UnidirectionalSequenceLstm operation</span></div>
<div class="line"><a name="l00807"></a><span class="lineno">  807</span>&#160;<span class="comment">    /// @param params - Weights and biases for the UnidirectionalSequenceLstm</span></div>
<div class="line"><a name="l00808"></a><span class="lineno">  808</span>&#160;<span class="comment">    /// @param name - Optional name for the layer</span></div>
<div class="line"><a name="l00809"></a><span class="lineno">  809</span>&#160;<span class="comment">    /// @return - Interface for configuring the layer.</span></div>
<div class="line"><a name="l00810"></a><span class="lineno">  810</span>&#160;<span class="comment"></span>    <a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml">IConnectableLayer</a>* <a class="code" href="classarmnn_1_1_i_network.xhtml#aba22dcdeed6e7c489aea6eb798c0a10a">AddUnidirectionalSequenceLstmLayer</a>(<span class="keyword">const</span> <a class="code" href="structarmnn_1_1_lstm_descriptor.xhtml">UnidirectionalSequenceLstmDescriptor</a>&amp; descriptor,</div>
<div class="line"><a name="l00811"></a><span class="lineno">  811</span>&#160;                                                          <span class="keyword">const</span> <a class="code" href="structarmnn_1_1_lstm_input_params.xhtml">LstmInputParams</a>&amp; params,</div>
<div class="line"><a name="l00812"></a><span class="lineno">  812</span>&#160;                                                          <span class="keyword">const</span> <span class="keywordtype">char</span>* name = <span class="keyword">nullptr</span>);</div>
<div class="line"><a name="l00813"></a><span class="lineno">  813</span>&#160;<span class="comment"></span> </div>
<div class="line"><a name="l00814"></a><span class="lineno">  814</span>&#160;<span class="comment">    /// Add a ChannelShuffle layer to the network</span></div>
<div class="line"><a name="l00815"></a><span class="lineno">  815</span>&#160;<span class="comment">    /// @param descriptor - Parameters for the ChannelShuffle operation</span></div>
<div class="line"><a name="l00816"></a><span class="lineno">  816</span>&#160;<span class="comment">    /// @param name - Optional name for the layer</span></div>
<div class="line"><a name="l00817"></a><span class="lineno">  817</span>&#160;<span class="comment">    /// @return - Interface for configuring the layer</span></div>
<div class="line"><a name="l00818"></a><span class="lineno">  818</span>&#160;<span class="comment"></span>    <a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml">IConnectableLayer</a>* <a class="code" href="classarmnn_1_1_i_network.xhtml#a786be4af14ba595c9946f935ba99f170">AddChannelShuffleLayer</a>(<span class="keyword">const</span> <a class="code" href="structarmnn_1_1_channel_shuffle_descriptor.xhtml">ChannelShuffleDescriptor</a>&amp; descriptor,</div>
<div class="line"><a name="l00819"></a><span class="lineno">  819</span>&#160;                                              <span class="keyword">const</span> <span class="keywordtype">char</span>* name = <span class="keyword">nullptr</span>);</div>
<div class="line"><a name="l00820"></a><span class="lineno">  820</span>&#160;<span class="comment"></span> </div>
<div class="line"><a name="l00821"></a><span class="lineno">  821</span>&#160;<span class="comment">    /// Add a BatchMatMul layer to the network</span></div>
<div class="line"><a name="l00822"></a><span class="lineno">  822</span>&#160;<span class="comment">    /// @param descriptor - Parameters for the BatchMatMul operation</span></div>
<div class="line"><a name="l00823"></a><span class="lineno">  823</span>&#160;<span class="comment">    /// @param name - Optional name for the layer</span></div>
<div class="line"><a name="l00824"></a><span class="lineno">  824</span>&#160;<span class="comment">    /// @return - Interface for configuring the layer</span></div>
<div class="line"><a name="l00825"></a><span class="lineno">  825</span>&#160;<span class="comment"></span>    <a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml">IConnectableLayer</a>* <a class="code" href="classarmnn_1_1_i_network.xhtml#aead50fe5965878e58cfdbe782736fa2a">AddBatchMatMulLayer</a>(<span class="keyword">const</span> <a class="code" href="structarmnn_1_1_batch_mat_mul_descriptor.xhtml">BatchMatMulDescriptor</a>&amp; descriptor,</div>
<div class="line"><a name="l00826"></a><span class="lineno">  826</span>&#160;                                           <span class="keyword">const</span> <span class="keywordtype">char</span>* name = <span class="keyword">nullptr</span>);</div>
<div class="line"><a name="l00827"></a><span class="lineno">  827</span>&#160; </div>
<div class="line"><a name="l00828"></a><span class="lineno">  828</span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classarmnn_1_1_i_network.xhtml#a72032c65bf8b8acf09b564b7d80078c5">ExecuteStrategy</a>(<a class="code" href="classarmnn_1_1_i_strategy.xhtml">IStrategy</a>&amp; strategy) <span class="keyword">const</span>;</div>
<div class="line"><a name="l00829"></a><span class="lineno">  829</span>&#160; </div>
<div class="line"><a name="l00830"></a><span class="lineno">  830</span>&#160;<span class="keyword">protected</span>:</div>
<div class="line"><a name="l00831"></a><span class="lineno">  831</span>&#160;    <a class="code" href="classarmnn_1_1_i_network.xhtml#af760179196d57e2ddbc64b989fb72586">~INetwork</a>();</div>
<div class="line"><a name="l00832"></a><span class="lineno">  832</span>&#160; </div>
<div class="line"><a name="l00833"></a><span class="lineno">  833</span>&#160;    <span class="keyword">friend</span> <span class="keywordtype">void</span> <a class="code" href="classarmnn_1_1_i_network.xhtml#af32ea41e89c446958a5376291d19ef49">VisitLayersTopologically</a>(<span class="keyword">const</span> <a class="code" href="classarmnn_1_1_i_network.xhtml">INetwork</a>* inputNetwork, <a class="code" href="classarmnn_1_1_i_strategy.xhtml">IStrategy</a>&amp; strategy);</div>
<div class="line"><a name="l00834"></a><span class="lineno"><a class="line" href="classarmnn_1_1_i_network.xhtml#abc7f5a6538288c9cba3f54ab8ac70012">  834</a></span>&#160;    <span class="keyword">friend</span> <span class="keyword">class </span><a class="code" href="classarmnn_1_1_i_network.xhtml#abc7f5a6538288c9cba3f54ab8ac70012">TestConnectionPreservation</a>;</div>
<div class="line"><a name="l00835"></a><span class="lineno">  835</span>&#160;    <span class="keyword">friend</span> <a class="code" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> <a class="code" href="classarmnn_1_1_i_network.xhtml#a0ec772587bcadc2fd02cc0e882efcfe8">GetInputTensorInfo</a>(<span class="keyword">const</span> <a class="code" href="classarmnn_1_1_i_network.xhtml">INetwork</a>* network);</div>
<div class="line"><a name="l00836"></a><span class="lineno">  836</span>&#160;    <span class="keyword">friend</span> <a class="code" href="namespacearmnn.xhtml#a674efcf6cbdb9e831d653ff0e821fb38">IOptimizedNetworkPtr</a> <a class="code" href="classarmnn_1_1_i_network.xhtml#ae569ba62ba5cf22f910ae7f369dc7948">Optimize</a>(<span class="keyword">const</span> <a class="code" href="classarmnn_1_1_i_network.xhtml">INetwork</a>&amp; network,</div>
<div class="line"><a name="l00837"></a><span class="lineno">  837</span>&#160;                                         <span class="keyword">const</span> std::vector&lt;BackendId&gt;&amp; backendPreferences,</div>
<div class="line"><a name="l00838"></a><span class="lineno">  838</span>&#160;                                         <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_i_device_spec.xhtml">IDeviceSpec</a>&amp; deviceSpec,</div>
<div class="line"><a name="l00839"></a><span class="lineno">  839</span>&#160;                                         <span class="keyword">const</span> <a class="code" href="structarmnn_1_1_optimizer_options.xhtml">OptimizerOptions</a>&amp; options,</div>
<div class="line"><a name="l00840"></a><span class="lineno">  840</span>&#160;                                         <a class="code" href="classarmnn_1_1_optional.xhtml">Optional</a>&lt;std::vector&lt;std::string&gt;&amp;&gt; messages);</div>
<div class="line"><a name="l00841"></a><span class="lineno">  841</span>&#160;    <span class="keyword">friend</span> <a class="code" href="namespacearmnn.xhtml#a674efcf6cbdb9e831d653ff0e821fb38">IOptimizedNetworkPtr</a> <a class="code" href="classarmnn_1_1_i_network.xhtml#ae569ba62ba5cf22f910ae7f369dc7948">Optimize</a>(<span class="keyword">const</span> <a class="code" href="classarmnn_1_1_i_network.xhtml">INetwork</a>&amp; network,</div>
<div class="line"><a name="l00842"></a><span class="lineno">  842</span>&#160;                                         <span class="keyword">const</span> std::vector&lt;BackendId&gt;&amp; backendPreferences,</div>
<div class="line"><a name="l00843"></a><span class="lineno">  843</span>&#160;                                         <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_i_device_spec.xhtml">IDeviceSpec</a>&amp; deviceSpec,</div>
<div class="line"><a name="l00844"></a><span class="lineno">  844</span>&#160;                                         <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_optimizer_options_opaque.xhtml">OptimizerOptionsOpaque</a>&amp; options,</div>
<div class="line"><a name="l00845"></a><span class="lineno">  845</span>&#160;                                         <a class="code" href="classarmnn_1_1_optional.xhtml">Optional</a>&lt;std::vector&lt;std::string&gt;&amp;&gt; messages);</div>
<div class="line"><a name="l00846"></a><span class="lineno">  846</span>&#160; </div>
<div class="line"><a name="l00847"></a><span class="lineno">  847</span>&#160;    <a class="code" href="classarmnn_1_1_i_network.xhtml#a2d936beb0fcf3c5d22ff332f0812b05e">INetwork</a>(<a class="code" href="namespacearmnn.xhtml#a4de71c3661093e5c4ae7775114f43413">NetworkOptions</a> networkOptions = {});</div>
<div class="line"><a name="l00848"></a><span class="lineno">  848</span>&#160; </div>
<div class="line"><a name="l00849"></a><span class="lineno"><a class="line" href="classarmnn_1_1_i_network.xhtml#a4353fa80ece13e3b1664881c27f5a67c">  849</a></span>&#160;    std::unique_ptr&lt;NetworkImpl&gt; <a class="code" href="classarmnn_1_1_i_network.xhtml#a4353fa80ece13e3b1664881c27f5a67c">pNetworkImpl</a>;</div>
<div class="line"><a name="l00850"></a><span class="lineno">  850</span>&#160;};</div>
<div class="line"><a name="l00851"></a><span class="lineno">  851</span>&#160; </div>
<div class="line"><a name="l00852"></a><span class="lineno">  852</span>&#160;<span class="keyword">namespace </span>experimental</div>
<div class="line"><a name="l00853"></a><span class="lineno">  853</span>&#160;{</div>
<div class="line"><a name="l00854"></a><span class="lineno">  854</span>&#160;<span class="keyword">class </span>AsyncNetworkImpl;</div>
<div class="line"><a name="l00855"></a><span class="lineno">  855</span>&#160;<span class="keyword">class </span><a class="code" href="classarmnn_1_1experimental_1_1_working_mem_handle.xhtml">WorkingMemHandle</a>;</div>
<div class="line"><a name="l00856"></a><span class="lineno">  856</span>&#160;}</div>
<div class="line"><a name="l00857"></a><span class="lineno">  857</span>&#160; </div>
<div class="line"><a name="l00858"></a><span class="lineno">  858</span>&#160;<span class="keyword">struct </span>BackendSettings;</div>
<div class="line"><a name="l00859"></a><span class="lineno">  859</span>&#160;<span class="keyword">struct </span>OptimizationResult;</div>
<div class="line"><a name="l00860"></a><span class="lineno">  860</span>&#160;<span class="keyword">class </span>OptimizedNetworkImpl;</div>
<div class="line"><a name="l00861"></a><span class="lineno">  861</span>&#160;<span class="keyword">class </span>IProfiler;</div>
<div class="line"><a name="l00862"></a><span class="lineno"><a class="line" href="classarmnn_1_1_i_optimized_network.xhtml">  862</a></span>&#160;<span class="keyword">class </span><a class="code" href="classarmnn_1_1_i_optimized_network.xhtml">IOptimizedNetwork</a></div>
<div class="line"><a name="l00863"></a><span class="lineno">  863</span>&#160;{</div>
<div class="line"><a name="l00864"></a><span class="lineno">  864</span>&#160;<span class="keyword">public</span>:</div>
<div class="line"><a name="l00865"></a><span class="lineno">  865</span>&#160;    <span class="keyword">static</span> <span class="keywordtype">void</span> <a class="code" href="classarmnn_1_1_i_optimized_network.xhtml#a58ee539cf95c1e99fe4f54ef6e8bbd05">Destroy</a>(<a class="code" href="classarmnn_1_1_i_optimized_network.xhtml">IOptimizedNetwork</a>* network);</div>
<div class="line"><a name="l00866"></a><span class="lineno">  866</span>&#160; </div>
<div class="line"><a name="l00867"></a><span class="lineno">  867</span>&#160;    <a class="code" href="namespacearmnn.xhtml#a67a0db04d321a74b7e7fcfd3f1a3f70b">Status</a> <a class="code" href="classarmnn_1_1_i_optimized_network.xhtml#aff3fde909d22ed157046682e70129259">PrintGraph</a>();</div>
<div class="line"><a name="l00868"></a><span class="lineno">  868</span>&#160;    <a class="code" href="namespacearmnn.xhtml#a67a0db04d321a74b7e7fcfd3f1a3f70b">Status</a> <a class="code" href="classarmnn_1_1_i_optimized_network.xhtml#a26794f014974a6f963a8925de07bffeb">SerializeToDot</a>(std::ostream&amp; stream) <span class="keyword">const</span>;</div>
<div class="line"><a name="l00869"></a><span class="lineno">  869</span>&#160; </div>
<div class="line"><a name="l00870"></a><span class="lineno">  870</span>&#160;    arm::pipe::ProfilingGuid <a class="code" href="classarmnn_1_1_i_optimized_network.xhtml#aa1b6106cb25d38e369fd647f4324cebe">GetGuid</a>() <span class="keyword">const</span>;</div>
<div class="line"><a name="l00871"></a><span class="lineno">  871</span>&#160; </div>
<div class="line"><a name="l00872"></a><span class="lineno">  872</span>&#160;    <span class="keywordtype">size_t</span> <a class="code" href="classarmnn_1_1_i_optimized_network.xhtml#a8d8179a4a0703602a5d7dbb6e92eaf69">GetNumInputs</a>() <span class="keyword">const</span>;</div>
<div class="line"><a name="l00873"></a><span class="lineno">  873</span>&#160;    <span class="keywordtype">size_t</span> <a class="code" href="classarmnn_1_1_i_optimized_network.xhtml#a604654b453ec291a503d62a0beb849d3">GetNumOutputs</a>() <span class="keyword">const</span>;</div>
<div class="line"><a name="l00874"></a><span class="lineno">  874</span>&#160; </div>
<div class="line"><a name="l00875"></a><span class="lineno">  875</span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classarmnn_1_1_i_optimized_network.xhtml#a72032c65bf8b8acf09b564b7d80078c5">ExecuteStrategy</a>(<a class="code" href="classarmnn_1_1_i_strategy.xhtml">IStrategy</a>&amp; strategy) <span class="keyword">const</span>;</div>
<div class="line"><a name="l00876"></a><span class="lineno">  876</span>&#160;<span class="comment"></span> </div>
<div class="line"><a name="l00877"></a><span class="lineno">  877</span>&#160;<span class="comment">    /// Creates a copy of the IOptimizedNetwork. The IOptimizedNetwork will not be reoptimized,</span></div>
<div class="line"><a name="l00878"></a><span class="lineno">  878</span>&#160;<span class="comment">    /// the provided ModelOptions will only be used when creating a LoadedNetwork.</span></div>
<div class="line"><a name="l00879"></a><span class="lineno">  879</span>&#160;<span class="comment"></span>    <a class="code" href="classarmnn_1_1_i_optimized_network.xhtml#a32eecbed1d4cd2602204a2ab3f5f249e">IOptimizedNetwork</a>(<span class="keyword">const</span> <a class="code" href="classarmnn_1_1_i_optimized_network.xhtml">IOptimizedNetwork</a>&amp; other, <span class="keyword">const</span> <a class="code" href="namespacearmnn.xhtml#a5b6893cda5b69359a4244c06054da18f">ModelOptions</a>&amp; modelOptions);</div>
<div class="line"><a name="l00880"></a><span class="lineno">  880</span>&#160;    <a class="code" href="classarmnn_1_1_i_optimized_network.xhtml#a32eecbed1d4cd2602204a2ab3f5f249e">IOptimizedNetwork</a>(std::unique_ptr&lt;Graph&gt; graph);</div>
<div class="line"><a name="l00881"></a><span class="lineno">  881</span>&#160;    <a class="code" href="classarmnn_1_1_i_optimized_network.xhtml#a32eecbed1d4cd2602204a2ab3f5f249e">IOptimizedNetwork</a>(std::unique_ptr&lt;OptimizedNetworkImpl&gt; impl);</div>
<div class="line"><a name="l00882"></a><span class="lineno">  882</span>&#160;    <a class="code" href="classarmnn_1_1_i_optimized_network.xhtml#a437cc59f5247f213adf34e84696f60da">~IOptimizedNetwork</a>();</div>
<div class="line"><a name="l00883"></a><span class="lineno">  883</span>&#160; </div>
<div class="line"><a name="l00884"></a><span class="lineno">  884</span>&#160;    <span class="keyword">const</span> std::shared_ptr&lt;IProfiler&gt;&amp; <a class="code" href="classarmnn_1_1_i_optimized_network.xhtml#a880db527e7dbf8d0de3fee52ba072482">GetProfiler</a>() <span class="keyword">const</span>;</div>
<div class="line"><a name="l00885"></a><span class="lineno">  885</span>&#160; </div>
<div class="line"><a name="l00886"></a><span class="lineno">  886</span>&#160;<span class="keyword">protected</span>:</div>
<div class="line"><a name="l00887"></a><span class="lineno"><a class="line" href="classarmnn_1_1_i_optimized_network.xhtml#a848000b2be0cb1853c9f7c4fb4dc719e">  887</a></span>&#160;    <span class="keyword">friend</span> <span class="keyword">class </span><a class="code" href="classarmnn_1_1_loaded_network.xhtml">LoadedNetwork</a>;</div>
<div class="line"><a name="l00888"></a><span class="lineno">  888</span>&#160; </div>
<div class="line"><a name="l00889"></a><span class="lineno"><a class="line" href="classarmnn_1_1_i_optimized_network.xhtml#a150601aebab0c979f258bf862b6fd5db">  889</a></span>&#160;    <span class="keyword">friend</span> <span class="keyword">class </span><a class="code" href="classarmnn_1_1_i_optimized_network.xhtml#a150601aebab0c979f258bf862b6fd5db">experimental::AsyncNetworkImpl</a>;</div>
<div class="line"><a name="l00890"></a><span class="lineno"><a class="line" href="classarmnn_1_1_i_optimized_network.xhtml#a21b1820e69a256697d3a5603d656e833">  890</a></span>&#160;    <span class="keyword">friend</span> <span class="keyword">class </span><a class="code" href="classarmnn_1_1experimental_1_1_working_mem_handle.xhtml">experimental::WorkingMemHandle</a>;</div>
<div class="line"><a name="l00891"></a><span class="lineno">  891</span>&#160; </div>
<div class="line"><a name="l00892"></a><span class="lineno">  892</span>&#160;    <span class="keyword">friend</span> <a class="code" href="classarmnn_1_1_graph.xhtml">Graph</a>&amp; <a class="code" href="classarmnn_1_1_i_optimized_network.xhtml#a519b2b784c275693e37a9b6c693342eb">GetGraphForTesting</a>(<a class="code" href="classarmnn_1_1_i_optimized_network.xhtml">IOptimizedNetwork</a>* optNetPtr);</div>
<div class="line"><a name="l00893"></a><span class="lineno">  893</span>&#160;    <span class="keyword">friend</span> <a class="code" href="namespacearmnn.xhtml#a5b6893cda5b69359a4244c06054da18f">ModelOptions</a>&amp; <a class="code" href="classarmnn_1_1_i_optimized_network.xhtml#aa25c1acd249228c82a687d713673725a">GetModelOptionsForTesting</a>(<a class="code" href="classarmnn_1_1_i_optimized_network.xhtml">IOptimizedNetwork</a>* optNetPtr);</div>
<div class="line"><a name="l00894"></a><span class="lineno">  894</span>&#160;    <span class="keyword">friend</span> <a class="code" href="namespacearmnn.xhtml#a674efcf6cbdb9e831d653ff0e821fb38">IOptimizedNetworkPtr</a> <a class="code" href="classarmnn_1_1_i_optimized_network.xhtml#ad6454b9a2fdc8862f25bcfeb36433eb7">Optimize</a>(<span class="keyword">const</span> <a class="code" href="classarmnn_1_1_i_network.xhtml">INetwork</a>&amp; inNetwork,</div>
<div class="line"><a name="l00895"></a><span class="lineno">  895</span>&#160;                                         <span class="keyword">const</span> std::vector&lt;BackendId&gt;&amp; backendPreferences,</div>
<div class="line"><a name="l00896"></a><span class="lineno">  896</span>&#160;                                         <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_i_device_spec.xhtml">IDeviceSpec</a>&amp; deviceSpec,</div>
<div class="line"><a name="l00897"></a><span class="lineno">  897</span>&#160;                                         <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_optimizer_options_opaque.xhtml">OptimizerOptionsOpaque</a>&amp; options,</div>
<div class="line"><a name="l00898"></a><span class="lineno">  898</span>&#160;                                         <a class="code" href="classarmnn_1_1_optional.xhtml">Optional</a>&lt;std::vector&lt;std::string&gt;&amp;&gt; messages);</div>
<div class="line"><a name="l00899"></a><span class="lineno">  899</span>&#160;    <span class="keyword">friend</span> <a class="code" href="namespacearmnn.xhtml#a674efcf6cbdb9e831d653ff0e821fb38">IOptimizedNetworkPtr</a> <a class="code" href="classarmnn_1_1_i_optimized_network.xhtml#ad6454b9a2fdc8862f25bcfeb36433eb7">Optimize</a>(<span class="keyword">const</span> <a class="code" href="classarmnn_1_1_graph.xhtml">Graph</a>&amp; inGraph,</div>
<div class="line"><a name="l00900"></a><span class="lineno">  900</span>&#160;                                         <span class="keyword">const</span> std::vector&lt;BackendId&gt;&amp; backendPreferences,</div>
<div class="line"><a name="l00901"></a><span class="lineno">  901</span>&#160;                                         <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_i_device_spec.xhtml">IDeviceSpec</a>&amp; deviceSpec,</div>
<div class="line"><a name="l00902"></a><span class="lineno">  902</span>&#160;                                         <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_optimizer_options_opaque.xhtml">OptimizerOptionsOpaque</a>&amp; options,</div>
<div class="line"><a name="l00903"></a><span class="lineno">  903</span>&#160;                                         <a class="code" href="classarmnn_1_1_optional.xhtml">Optional</a>&lt;std::vector&lt;std::string&gt;&amp;&gt; messages);</div>
<div class="line"><a name="l00904"></a><span class="lineno">  904</span>&#160; </div>
<div class="line"><a name="l00905"></a><span class="lineno">  905</span>&#160;    <a class="code" href="classarmnn_1_1_i_optimized_network.xhtml#a32eecbed1d4cd2602204a2ab3f5f249e">IOptimizedNetwork</a>(std::unique_ptr&lt;Graph&gt; graph, <span class="keyword">const</span> <a class="code" href="namespacearmnn.xhtml#a5b6893cda5b69359a4244c06054da18f">ModelOptions</a>&amp; modelOptions);</div>
<div class="line"><a name="l00906"></a><span class="lineno">  906</span>&#160; </div>
<div class="line"><a name="l00907"></a><span class="lineno"><a class="line" href="classarmnn_1_1_i_optimized_network.xhtml#a374d52340ec8dc02a819acc20fb5aa92">  907</a></span>&#160;    std::unique_ptr&lt;OptimizedNetworkImpl&gt; <a class="code" href="classarmnn_1_1_i_optimized_network.xhtml#a374d52340ec8dc02a819acc20fb5aa92">pOptimizedNetworkImpl</a>;</div>
<div class="line"><a name="l00908"></a><span class="lineno">  908</span>&#160;};</div>
<div class="line"><a name="l00909"></a><span class="lineno">  909</span>&#160;<span class="comment"></span> </div>
<div class="line"><a name="l00910"></a><span class="lineno">  910</span>&#160;<span class="comment">/// Create an optimized version of the network</span></div>
<div class="line"><a name="l00911"></a><span class="lineno">  911</span>&#160;<span class="comment">/// @param network INetwork description of the network to be optimized.</span></div>
<div class="line"><a name="l00912"></a><span class="lineno">  912</span>&#160;<span class="comment">/// @param backendPreferences The choice of the backend ordered by user preferences.</span></div>
<div class="line"><a name="l00913"></a><span class="lineno">  913</span>&#160;<span class="comment">/// @param deviceSpec DeviceSpec object as queried from the runtime. See IRuntime::GetDeviceSpec()</span></div>
<div class="line"><a name="l00914"></a><span class="lineno">  914</span>&#160;<span class="comment">/// @param messages If there are failures or warnings a string describing same will be added to the vector</span></div>
<div class="line"><a name="l00915"></a><span class="lineno">  915</span>&#160;<span class="comment">/// @param options OptimizerOptions object with optimizer configuration options</span></div>
<div class="line"><a name="l00916"></a><span class="lineno">  916</span>&#160;<span class="comment">/// @return An IOptimizedNetworkPtr interface to the optimized network, throws an exception derived from</span></div>
<div class="line"><a name="l00917"></a><span class="lineno">  917</span>&#160;<span class="comment">/// armnn::Exception if process fails.</span></div>
<div class="line"><a name="l00918"></a><span class="lineno">  918</span>&#160;<span class="comment"></span> </div>
<div class="line"><a name="l00919"></a><span class="lineno">  919</span>&#160;<a class="code" href="namespacearmnn.xhtml#a674efcf6cbdb9e831d653ff0e821fb38">IOptimizedNetworkPtr</a> <a class="code" href="namespacearmnn.xhtml#aa42e128b41f4e966fc901f9bf42c5a1c">Optimize</a>(<span class="keyword">const</span> <a class="code" href="classarmnn_1_1_i_network.xhtml">INetwork</a>&amp; network,</div>
<div class="line"><a name="l00920"></a><span class="lineno">  920</span>&#160;                              <span class="keyword">const</span> std::vector&lt;BackendId&gt;&amp; backendPreferences,</div>
<div class="line"><a name="l00921"></a><span class="lineno">  921</span>&#160;                              <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_i_device_spec.xhtml">IDeviceSpec</a>&amp; deviceSpec,</div>
<div class="line"><a name="l00922"></a><span class="lineno">  922</span>&#160;                              <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_optimizer_options_opaque.xhtml">OptimizerOptionsOpaque</a>&amp; options = <a class="code" href="classarmnn_1_1_optimizer_options_opaque.xhtml">OptimizerOptionsOpaque</a>(),</div>
<div class="line"><a name="l00923"></a><span class="lineno">  923</span>&#160;                              <a class="code" href="classarmnn_1_1_optional.xhtml">Optional</a>&lt;std::vector&lt;std::string&gt;&amp;&gt; messages = <a class="code" href="structarmnn_1_1_empty_optional.xhtml">EmptyOptional</a>());</div>
<div class="line"><a name="l00924"></a><span class="lineno">  924</span>&#160;<span class="comment"></span> </div>
<div class="line"><a name="l00925"></a><span class="lineno">  925</span>&#160;<span class="comment">/// Create an optimized version of the network</span></div>
<div class="line"><a name="l00926"></a><span class="lineno">  926</span>&#160;<span class="comment">/// @param inGraph Graph to be optimized.</span></div>
<div class="line"><a name="l00927"></a><span class="lineno">  927</span>&#160;<span class="comment">/// @param backendPreferences The choice of the backend ordered by user preferences.</span></div>
<div class="line"><a name="l00928"></a><span class="lineno">  928</span>&#160;<span class="comment">/// @param deviceSpec DeviceSpec object as queried from the runtime. See IRuntime::GetDeviceSpec()</span></div>
<div class="line"><a name="l00929"></a><span class="lineno">  929</span>&#160;<span class="comment">/// @param messages If there are failures or warnings a string describing same will be added to the vector</span></div>
<div class="line"><a name="l00930"></a><span class="lineno">  930</span>&#160;<span class="comment">/// @param options OptimizerOptions object with optimizer configuration options</span></div>
<div class="line"><a name="l00931"></a><span class="lineno">  931</span>&#160;<span class="comment">/// @return An IOptimizedNetworkPtr interface to the optimized network, throws an exception derived from</span></div>
<div class="line"><a name="l00932"></a><span class="lineno">  932</span>&#160;<span class="comment">/// armnn::Exception if process fails.</span></div>
<div class="line"><a name="l00933"></a><span class="lineno">  933</span>&#160;<span class="comment"></span> </div>
<div class="line"><a name="l00934"></a><span class="lineno">  934</span>&#160;<a class="code" href="namespacearmnn.xhtml#a674efcf6cbdb9e831d653ff0e821fb38">IOptimizedNetworkPtr</a> <a class="code" href="namespacearmnn.xhtml#aa42e128b41f4e966fc901f9bf42c5a1c">Optimize</a>(<span class="keyword">const</span> <a class="code" href="classarmnn_1_1_graph.xhtml">Graph</a>&amp; inGraph,</div>
<div class="line"><a name="l00935"></a><span class="lineno">  935</span>&#160;                              <span class="keyword">const</span> std::vector&lt;BackendId&gt;&amp; backendPreferences,</div>
<div class="line"><a name="l00936"></a><span class="lineno">  936</span>&#160;                              <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_i_device_spec.xhtml">IDeviceSpec</a>&amp; deviceSpec,</div>
<div class="line"><a name="l00937"></a><span class="lineno">  937</span>&#160;                              <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_optimizer_options_opaque.xhtml">OptimizerOptionsOpaque</a>&amp; options,</div>
<div class="line"><a name="l00938"></a><span class="lineno">  938</span>&#160;                              <a class="code" href="classarmnn_1_1_optional.xhtml">Optional</a>&lt;std::vector&lt;std::string&gt;&amp;&gt; messages = <a class="code" href="structarmnn_1_1_empty_optional.xhtml">EmptyOptional</a>());</div>
<div class="line"><a name="l00939"></a><span class="lineno">  939</span>&#160;<span class="comment"></span> </div>
<div class="line"><a name="l00940"></a><span class="lineno">  940</span>&#160;<span class="comment">/// Accept legacy OptimizerOptions</span></div>
<div class="line"><a name="l00941"></a><span class="lineno">  941</span>&#160;<span class="comment"></span><a class="code" href="namespacearmnn.xhtml#a674efcf6cbdb9e831d653ff0e821fb38">IOptimizedNetworkPtr</a> <a class="code" href="namespacearmnn.xhtml#aa42e128b41f4e966fc901f9bf42c5a1c">Optimize</a>(<span class="keyword">const</span> <a class="code" href="classarmnn_1_1_graph.xhtml">Graph</a>&amp; inGraph,</div>
<div class="line"><a name="l00942"></a><span class="lineno">  942</span>&#160;                              <span class="keyword">const</span> std::vector&lt;BackendId&gt;&amp; backendPreferences,</div>
<div class="line"><a name="l00943"></a><span class="lineno">  943</span>&#160;                              <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_i_device_spec.xhtml">IDeviceSpec</a>&amp; deviceSpec,</div>
<div class="line"><a name="l00944"></a><span class="lineno">  944</span>&#160;                              <span class="keyword">const</span> <a class="code" href="structarmnn_1_1_optimizer_options.xhtml">OptimizerOptions</a>&amp; options,</div>
<div class="line"><a name="l00945"></a><span class="lineno">  945</span>&#160;                              <a class="code" href="classarmnn_1_1_optional.xhtml">Optional</a>&lt;std::vector&lt;std::string&gt;&amp;&gt; messages = <a class="code" href="structarmnn_1_1_empty_optional.xhtml">EmptyOptional</a>());</div>
<div class="line"><a name="l00946"></a><span class="lineno">  946</span>&#160;<span class="comment"></span> </div>
<div class="line"><a name="l00947"></a><span class="lineno">  947</span>&#160;<span class="comment">/// Accept legacy OptimizerOptions</span></div>
<div class="line"><a name="l00948"></a><span class="lineno">  948</span>&#160;<span class="comment"></span><a class="code" href="namespacearmnn.xhtml#a674efcf6cbdb9e831d653ff0e821fb38">IOptimizedNetworkPtr</a> <a class="code" href="namespacearmnn.xhtml#aa42e128b41f4e966fc901f9bf42c5a1c">Optimize</a>(<span class="keyword">const</span> <a class="code" href="classarmnn_1_1_i_network.xhtml">INetwork</a>&amp; network,</div>
<div class="line"><a name="l00949"></a><span class="lineno">  949</span>&#160;                              <span class="keyword">const</span> std::vector&lt;BackendId&gt;&amp; backendPreferences,</div>
<div class="line"><a name="l00950"></a><span class="lineno">  950</span>&#160;                              <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_i_device_spec.xhtml">IDeviceSpec</a>&amp; deviceSpec,</div>
<div class="line"><a name="l00951"></a><span class="lineno">  951</span>&#160;                              <span class="keyword">const</span> <a class="code" href="structarmnn_1_1_optimizer_options.xhtml">OptimizerOptions</a>&amp; options,</div>
<div class="line"><a name="l00952"></a><span class="lineno">  952</span>&#160;                              <a class="code" href="classarmnn_1_1_optional.xhtml">Optional</a>&lt;std::vector&lt;std::string&gt;&amp;&gt; messages = <a class="code" href="structarmnn_1_1_empty_optional.xhtml">EmptyOptional</a>());</div>
<div class="line"><a name="l00953"></a><span class="lineno">  953</span>&#160; </div>
<div class="line"><a name="l00954"></a><span class="lineno">  954</span>&#160;} <span class="comment">//namespace armnn</span></div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<div class="ttc" id="aclassarmnn_1_1_i_connectable_layer_xhtml_a52799628c0df0037c4708de02bec7185"><div class="ttname"><a href="classarmnn_1_1_i_connectable_layer.xhtml#a52799628c0df0037c4708de02bec7185">armnn::IConnectableLayer::ExecuteStrategy</a></div><div class="ttdeci">virtual void ExecuteStrategy(IStrategy &amp;strategy) const =0</div><div class="ttdoc">Apply a visitor to this layer.</div></div>
<div class="ttc" id="aclassarmnn_1_1_i_network_xhtml_a383e74ef080d4a81b8b371be4b840248"><div class="ttname"><a href="classarmnn_1_1_i_network.xhtml#a383e74ef080d4a81b8b371be4b840248">armnn::INetwork::AddConvolution2dLayer</a></div><div class="ttdeci">IConnectableLayer * AddConvolution2dLayer(const Convolution2dDescriptor &amp;convolution2dDescriptor, const char *name=nullptr)</div><div class="ttdoc">Adds a 2D convolution layer to the network.</div><div class="ttdef"><b>Definition:</b> <a href="_network_8cpp_source.xhtml#l00271">Network.cpp:271</a></div></div>
<div class="ttc" id="aclassarmnn_1_1_optimizer_options_opaque_xhtml"><div class="ttname"><a href="classarmnn_1_1_optimizer_options_opaque.xhtml">armnn::OptimizerOptionsOpaque</a></div><div class="ttdef"><b>Definition:</b> <a href="_i_network_8hpp_source.xhtml#l00260">INetwork.hpp:260</a></div></div>
<div class="ttc" id="aclassarmnn_1_1_i_network_xhtml_ac6771c8752811fcfa91b3f0dee748144"><div class="ttname"><a href="classarmnn_1_1_i_network.xhtml#ac6771c8752811fcfa91b3f0dee748144">armnn::INetwork::AddDepthwiseConvolution2dLayer</a></div><div class="ttdeci">IConnectableLayer * AddDepthwiseConvolution2dLayer(const DepthwiseConvolution2dDescriptor &amp;convolution2dDescriptor, const char *name=nullptr)</div><div class="ttdoc">Adds a 2D depthwise convolution layer to the network.</div><div class="ttdef"><b>Definition:</b> <a href="_network_8cpp_source.xhtml#l00291">Network.cpp:291</a></div></div>
<div class="ttc" id="aclassarmnn_1_1_i_optimized_network_xhtml_a519b2b784c275693e37a9b6c693342eb"><div class="ttname"><a href="classarmnn_1_1_i_optimized_network.xhtml#a519b2b784c275693e37a9b6c693342eb">armnn::IOptimizedNetwork::GetGraphForTesting</a></div><div class="ttdeci">friend Graph &amp; GetGraphForTesting(IOptimizedNetwork *optNetPtr)</div><div class="ttdef"><b>Definition:</b> <a href="_test_utils_8cpp_source.xhtml#l00049">TestUtils.cpp:49</a></div></div>
<div class="ttc" id="aclassarmnn_1_1_backend_id_xhtml"><div class="ttname"><a href="classarmnn_1_1_backend_id.xhtml">armnn::BackendId</a></div><div class="ttdef"><b>Definition:</b> <a href="_backend_id_8hpp_source.xhtml#l00075">BackendId.hpp:75</a></div></div>
<div class="ttc" id="aclassarmnn_1_1_optimizer_options_opaque_xhtml_a5c25504e5efe52a17f5b0ca45753aaf0"><div class="ttname"><a href="classarmnn_1_1_optimizer_options_opaque.xhtml#a5c25504e5efe52a17f5b0ca45753aaf0">armnn::OptimizerOptionsOpaque::GetDebugEnabled</a></div><div class="ttdeci">bool GetDebugEnabled() const</div><div class="ttdef"><b>Definition:</b> <a href="_network_8cpp_source.xhtml#l00180">Network.cpp:180</a></div></div>
<div class="ttc" id="aclassarmnn_1_1_i_output_slot_xhtml_a22b3f11f56aa924c0c1b6ee4d6cc90e1"><div class="ttname"><a href="classarmnn_1_1_i_output_slot.xhtml#a22b3f11f56aa924c0c1b6ee4d6cc90e1">armnn::IOutputSlot::GetOwningIConnectableLayer</a></div><div class="ttdeci">virtual const IConnectableLayer &amp; GetOwningIConnectableLayer() const =0</div></div>
<div class="ttc" id="aclassarmnn_1_1_i_optimized_network_xhtml_a880db527e7dbf8d0de3fee52ba072482"><div class="ttname"><a href="classarmnn_1_1_i_optimized_network.xhtml#a880db527e7dbf8d0de3fee52ba072482">armnn::IOptimizedNetwork::GetProfiler</a></div><div class="ttdeci">const std::shared_ptr&lt; IProfiler &gt; &amp; GetProfiler() const</div><div class="ttdef"><b>Definition:</b> <a href="_network_8cpp_source.xhtml#l00691">Network.cpp:691</a></div></div>
<div class="ttc" id="astructarmnn_1_1_backend_options_1_1_backend_option_xhtml_a9dd404db54065d13616225910db3dec4"><div class="ttname"><a href="structarmnn_1_1_backend_options_1_1_backend_option.xhtml#a9dd404db54065d13616225910db3dec4">armnn::BackendOptions::BackendOption::GetValue</a></div><div class="ttdeci">Var GetValue() const</div><div class="ttdef"><b>Definition:</b> <a href="_backend_options_8hpp_source.xhtml#l00252">BackendOptions.hpp:252</a></div></div>
<div class="ttc" id="aclassarmnn_1_1_i_connectable_layer_xhtml_aa6e3c075c888e7c16942a468a3aae33c"><div class="ttname"><a href="classarmnn_1_1_i_connectable_layer.xhtml#aa6e3c075c888e7c16942a468a3aae33c">armnn::IConnectableLayer::InferOutputShapes</a></div><div class="ttdeci">virtual std::vector&lt; TensorShape &gt; InferOutputShapes(const std::vector&lt; TensorShape &gt; &amp;inputShapes) const =0</div><div class="ttdoc">Infer the shape of the output(s) based on the provided input shape(s)</div></div>
<div class="ttc" id="aclassarmnn_1_1_i_network_xhtml_a435ea88480b8645026dd45fd692663a1"><div class="ttname"><a href="classarmnn_1_1_i_network.xhtml#a435ea88480b8645026dd45fd692663a1">armnn::INetwork::AddFloorLayer</a></div><div class="ttdeci">IConnectableLayer * AddFloorLayer(const char *name=nullptr)</div><div class="ttdoc">Adds a floor layer to the network.</div><div class="ttdef"><b>Definition:</b> <a href="_network_8cpp_source.xhtml#l00485">Network.cpp:485</a></div></div>
<div class="ttc" id="astructarmnn_1_1_gather_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_gather_descriptor.xhtml">armnn::GatherDescriptor</a></div><div class="ttdoc">A GatherDescriptor for the GatherLayer.</div><div class="ttdef"><b>Definition:</b> <a href="_descriptors_8hpp_source.xhtml#l00932">Descriptors.hpp:932</a></div></div>
<div class="ttc" id="astructarmnn_1_1_normalization_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_normalization_descriptor.xhtml">armnn::NormalizationDescriptor</a></div><div class="ttdoc">A NormalizationDescriptor for the NormalizationLayer.</div><div class="ttdef"><b>Definition:</b> <a href="_descriptors_8hpp_source.xhtml#l00757">Descriptors.hpp:757</a></div></div>
<div class="ttc" id="astructarmnn_1_1_transpose_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_transpose_descriptor.xhtml">armnn::TransposeDescriptor</a></div><div class="ttdoc">A TransposeDescriptor for the TransposeLayer.</div><div class="ttdef"><b>Definition:</b> <a href="_descriptors_8hpp_source.xhtml#l01457">Descriptors.hpp:1457</a></div></div>
<div class="ttc" id="aclassarmnn_1_1_optimizer_options_opaque_xhtml_a8933eb842c6152f61535b69bd37c867e"><div class="ttname"><a href="classarmnn_1_1_optimizer_options_opaque.xhtml#a8933eb842c6152f61535b69bd37c867e">armnn::OptimizerOptionsOpaque::GetDebugToFileEnabled</a></div><div class="ttdeci">bool GetDebugToFileEnabled() const</div><div class="ttdef"><b>Definition:</b> <a href="_network_8cpp_source.xhtml#l00185">Network.cpp:185</a></div></div>
<div class="ttc" id="aclassarmnn_1_1_i_network_xhtml_a1aa567f46c30960851c02847dc7b4215"><div class="ttname"><a href="classarmnn_1_1_i_network.xhtml#a1aa567f46c30960851c02847dc7b4215">armnn::INetwork::AddConstantLayer</a></div><div class="ttdeci">IConnectableLayer * AddConstantLayer(const ConstTensor &amp;input, const char *name=nullptr)</div><div class="ttdoc">Adds a layer with no inputs and a single output, which always corresponds to the passed in constant t...</div><div class="ttdef"><b>Definition:</b> <a href="_network_8cpp_source.xhtml#l00461">Network.cpp:461</a></div></div>
<div class="ttc" id="aclassarmnn_1_1_i_network_xhtml_a41fd7b56923d5625bac2cbfebed1a393"><div class="ttname"><a href="classarmnn_1_1_i_network.xhtml#a41fd7b56923d5625bac2cbfebed1a393">armnn::INetwork::AddTransposeConvolution2dLayer</a></div><div class="ttdeci">IConnectableLayer * AddTransposeConvolution2dLayer(const TransposeConvolution2dDescriptor &amp;descriptor, const ConstTensor &amp;weights, const Optional&lt; ConstTensor &gt; &amp;biases, const char *name=nullptr)</div><div class="ttdoc">Adds a 2D transpose convolution layer to the network.</div><div class="ttdef"><b>Definition:</b> <a href="_network_8cpp_source.xhtml#l00572">Network.cpp:572</a></div></div>
<div class="ttc" id="anamespacearmnn_xhtml_a674efcf6cbdb9e831d653ff0e821fb38"><div class="ttname"><a href="namespacearmnn.xhtml#a674efcf6cbdb9e831d653ff0e821fb38">armnn::IOptimizedNetworkPtr</a></div><div class="ttdeci">std::unique_ptr&lt; IOptimizedNetwork, void(*)(IOptimizedNetwork *network)&gt; IOptimizedNetworkPtr</div><div class="ttdef"><b>Definition:</b> <a href="_i_network_8hpp_source.xhtml#l00328">INetwork.hpp:328</a></div></div>
<div class="ttc" id="astructarmnn_1_1_elementwise_unary_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_elementwise_unary_descriptor.xhtml">armnn::ElementwiseUnaryDescriptor</a></div><div class="ttdoc">A ElementwiseUnaryDescriptor for the ElementwiseUnaryLayer.</div><div class="ttdef"><b>Definition:</b> <a href="_descriptors_8hpp_source.xhtml#l00129">Descriptors.hpp:129</a></div></div>
<div class="ttc" id="astructarmnn_1_1_pad_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_pad_descriptor.xhtml">armnn::PadDescriptor</a></div><div class="ttdoc">A PadDescriptor for the PadLayer.</div><div class="ttdef"><b>Definition:</b> <a href="_descriptors_8hpp_source.xhtml#l01163">Descriptors.hpp:1163</a></div></div>
<div class="ttc" id="astructarmnn_1_1_softmax_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_softmax_descriptor.xhtml">armnn::SoftmaxDescriptor</a></div><div class="ttdoc">A SoftmaxDescriptor for the SoftmaxLayer.</div><div class="ttdef"><b>Definition:</b> <a href="_descriptors_8hpp_source.xhtml#l00177">Descriptors.hpp:177</a></div></div>
<div class="ttc" id="aclassarmnn_1_1_i_network_xhtml_a4353fa80ece13e3b1664881c27f5a67c"><div class="ttname"><a href="classarmnn_1_1_i_network.xhtml#a4353fa80ece13e3b1664881c27f5a67c">armnn::INetwork::pNetworkImpl</a></div><div class="ttdeci">std::unique_ptr&lt; NetworkImpl &gt; pNetworkImpl</div><div class="ttdef"><b>Definition:</b> <a href="_i_network_8hpp_source.xhtml#l00849">INetwork.hpp:849</a></div></div>
<div class="ttc" id="aclassarmnn_1_1_i_optimized_network_xhtml_ad6454b9a2fdc8862f25bcfeb36433eb7"><div class="ttname"><a href="classarmnn_1_1_i_optimized_network.xhtml#ad6454b9a2fdc8862f25bcfeb36433eb7">armnn::IOptimizedNetwork::Optimize</a></div><div class="ttdeci">friend IOptimizedNetworkPtr Optimize(const INetwork &amp;inNetwork, const std::vector&lt; BackendId &gt; &amp;backendPreferences, const IDeviceSpec &amp;deviceSpec, const OptimizerOptionsOpaque &amp;options, Optional&lt; std::vector&lt; std::string &gt; &amp; &gt; messages)</div><div class="ttdoc">Create an optimized version of the network.</div><div class="ttdef"><b>Definition:</b> <a href="_network_8cpp_source.xhtml#l02003">Network.cpp:2003</a></div></div>
<div class="ttc" id="astructarmnn_1_1_optimizer_options_xhtml_a9ef8ddbeee4b869e4c68eb2ed278b8d9"><div class="ttname"><a href="structarmnn_1_1_optimizer_options.xhtml#a9ef8ddbeee4b869e4c68eb2ed278b8d9">armnn::OptimizerOptions::m_AllowExpandedDims</a></div><div class="ttdeci">bool m_AllowExpandedDims</div><div class="ttdoc">When calculating tensor sizes, dimensions of size == 1 will be ignored.</div><div class="ttdef"><b>Definition:</b> <a href="_i_network_8hpp_source.xhtml#l00253">INetwork.hpp:253</a></div></div>
<div class="ttc" id="astructarmnn_1_1_stack_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_stack_descriptor.xhtml">armnn::StackDescriptor</a></div><div class="ttdoc">A StackDescriptor for the StackLayer.</div><div class="ttdef"><b>Definition:</b> <a href="_descriptors_8hpp_source.xhtml#l01218">Descriptors.hpp:1218</a></div></div>
<div class="ttc" id="aclassarmnn_1_1_i_network_xhtml_aee282f8e3379d3f5bed1032d20884248"><div class="ttname"><a href="classarmnn_1_1_i_network.xhtml#aee282f8e3379d3f5bed1032d20884248">armnn::INetwork::AddPooling3dLayer</a></div><div class="ttdeci">IConnectableLayer * AddPooling3dLayer(const Pooling3dDescriptor &amp;pooling3dDescriptor, const char *name=nullptr)</div><div class="ttdoc">Adds a 3D pooling layer to the network.</div><div class="ttdef"><b>Definition:</b> <a href="_network_8cpp_source.xhtml#l00355">Network.cpp:355</a></div></div>
<div class="ttc" id="astructarmnn_1_1_slice_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_slice_descriptor.xhtml">armnn::SliceDescriptor</a></div><div class="ttdoc">A SliceDescriptor for the SliceLayer.</div><div class="ttdef"><b>Definition:</b> <a href="_descriptors_8hpp_source.xhtml#l01195">Descriptors.hpp:1195</a></div></div>
<div class="ttc" id="aclassarmnn_1_1_i_network_xhtml_ae569ba62ba5cf22f910ae7f369dc7948"><div class="ttname"><a href="classarmnn_1_1_i_network.xhtml#ae569ba62ba5cf22f910ae7f369dc7948">armnn::INetwork::Optimize</a></div><div class="ttdeci">friend IOptimizedNetworkPtr Optimize(const INetwork &amp;network, const std::vector&lt; BackendId &gt; &amp;backendPreferences, const IDeviceSpec &amp;deviceSpec, const OptimizerOptions &amp;options, Optional&lt; std::vector&lt; std::string &gt; &amp; &gt; messages)</div><div class="ttdoc">Accept legacy OptimizerOptions.</div><div class="ttdef"><b>Definition:</b> <a href="_network_8cpp_source.xhtml#l01990">Network.cpp:1990</a></div></div>
<div class="ttc" id="a_network_fwd_8hpp_xhtml"><div class="ttname"><a href="_network_fwd_8hpp.xhtml">NetworkFwd.hpp</a></div></div>
<div class="ttc" id="aclassarmnn_1_1_i_network_xhtml_a0aeb4e528cf6ba4b7caca14a94fbcafe"><div class="ttname"><a href="classarmnn_1_1_i_network.xhtml#a0aeb4e528cf6ba4b7caca14a94fbcafe">armnn::INetwork::AddDivisionLayer</a></div><div class="ttdeci">IConnectableLayer * AddDivisionLayer(const char *name=nullptr)</div><div class="ttdoc">Adds a division layer to the network.</div><div class="ttdef"><b>Definition:</b> <a href="_network_8cpp_source.xhtml#l00501">Network.cpp:501</a></div></div>
<div class="ttc" id="aclassarmnn_1_1_i_optimized_network_xhtml_a26794f014974a6f963a8925de07bffeb"><div class="ttname"><a href="classarmnn_1_1_i_optimized_network.xhtml#a26794f014974a6f963a8925de07bffeb">armnn::IOptimizedNetwork::SerializeToDot</a></div><div class="ttdeci">Status SerializeToDot(std::ostream &amp;stream) const</div><div class="ttdef"><b>Definition:</b> <a href="_network_8cpp_source.xhtml#l00686">Network.cpp:686</a></div></div>
<div class="ttc" id="astructarmnn_1_1_optimizer_options_xhtml_a0054f53e4e70bb39c000bcf240627b18"><div class="ttname"><a href="structarmnn_1_1_optimizer_options.xhtml#a0054f53e4e70bb39c000bcf240627b18">armnn::OptimizerOptions::m_ExportEnabled</a></div><div class="ttdeci">bool m_ExportEnabled</div><div class="ttdoc">Enable Export.</div><div class="ttdef"><b>Definition:</b> <a href="_i_network_8hpp_source.xhtml#l00250">INetwork.hpp:250</a></div></div>
<div class="ttc" id="astructarmnn_1_1_optimizer_options_xhtml_a6e1a42622ca43dafc7ba8e684c016eb4"><div class="ttname"><a href="structarmnn_1_1_optimizer_options.xhtml#a6e1a42622ca43dafc7ba8e684c016eb4">armnn::OptimizerOptions::m_ReduceFp32ToFp16</a></div><div class="ttdeci">bool m_ReduceFp32ToFp16</div><div class="ttdoc">Reduces all Fp32 operators in the model to Fp16 for faster processing.</div><div class="ttdef"><b>Definition:</b> <a href="_i_network_8hpp_source.xhtml#l00225">INetwork.hpp:225</a></div></div>
<div class="ttc" id="aclassarmnn_1_1_i_network_xhtml_ab534dfa7f086a5f09fd9e3734ca6ab28"><div class="ttname"><a href="classarmnn_1_1_i_network.xhtml#ab534dfa7f086a5f09fd9e3734ca6ab28">armnn::INetwork::CreateRaw</a></div><div class="ttdeci">static INetwork * CreateRaw(const NetworkOptions &amp;networkOptions={})</div><div class="ttdef"><b>Definition:</b> <a href="_network_8cpp_source.xhtml#l00647">Network.cpp:647</a></div></div>
<div class="ttc" id="aclassarmnn_1_1_i_network_xhtml_a0ec772587bcadc2fd02cc0e882efcfe8"><div class="ttname"><a href="classarmnn_1_1_i_network.xhtml#a0ec772587bcadc2fd02cc0e882efcfe8">armnn::INetwork::GetInputTensorInfo</a></div><div class="ttdeci">friend TensorInfo GetInputTensorInfo(const INetwork *network)</div></div>
<div class="ttc" id="aclassarmnn_1_1_i_output_slot_xhtml_aefb9214c1e4bc5f50e84d113e52e1242"><div class="ttname"><a href="classarmnn_1_1_i_output_slot.xhtml#aefb9214c1e4bc5f50e84d113e52e1242">armnn::IOutputSlot::~IOutputSlot</a></div><div class="ttdeci">~IOutputSlot()</div><div class="ttdoc">Not user deletable.</div><div class="ttdef"><b>Definition:</b> <a href="_i_network_8hpp_source.xhtml#l00064">INetwork.hpp:64</a></div></div>
<div class="ttc" id="aclassarmnn_1_1_i_network_xhtml_a2acbae0b9e98c94b843677484775c86a"><div class="ttname"><a href="classarmnn_1_1_i_network.xhtml#a2acbae0b9e98c94b843677484775c86a">armnn::INetwork::AddQLstmLayer</a></div><div class="ttdeci">IConnectableLayer * AddQLstmLayer(const QLstmDescriptor &amp;descriptor, const LstmInputParams &amp;params, const char *name=nullptr)</div><div class="ttdoc">Add a QLstm layer to the network.</div><div class="ttdef"><b>Definition:</b> <a href="_network_8cpp_source.xhtml#l00609">Network.cpp:609</a></div></div>
<div class="ttc" id="aclassarmnn_1_1_i_network_xhtml_a83b33973ca12078166b2436b313627b9"><div class="ttname"><a href="classarmnn_1_1_i_network.xhtml#a83b33973ca12078166b2436b313627b9">armnn::INetwork::AddLogSoftmaxLayer</a></div><div class="ttdeci">IConnectableLayer * AddLogSoftmaxLayer(const LogSoftmaxDescriptor &amp;logSoftmaxDescriptor, const char *name=nullptr)</div><div class="ttdoc">Adds a log softmax layer to the network.</div><div class="ttdef"><b>Definition:</b> <a href="_network_8cpp_source.xhtml#l00455">Network.cpp:455</a></div></div>
<div class="ttc" id="anamespacearmnn_xhtml_ab8cf8f9fb6792e654c2d8d8382f6f01b"><div class="ttname"><a href="namespacearmnn.xhtml#ab8cf8f9fb6792e654c2d8d8382f6f01b">armnn::LayerBindingId</a></div><div class="ttdeci">int LayerBindingId</div><div class="ttdoc">Type of identifiers for bindable layers (inputs, outputs).</div><div class="ttdef"><b>Definition:</b> <a href="_types_8hpp_source.xhtml#l00301">Types.hpp:301</a></div></div>
<div class="ttc" id="astructarmnn_1_1_activation_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_activation_descriptor.xhtml">armnn::ActivationDescriptor</a></div><div class="ttdoc">An ActivationDescriptor for the ActivationLayer.</div><div class="ttdef"><b>Definition:</b> <a href="_descriptors_8hpp_source.xhtml#l00036">Descriptors.hpp:36</a></div></div>
<div class="ttc" id="anamespacearmnn_xhtml_adf57837d00e8352d9b5cc5ab1fb5fee9af6486a22a9bb11959bfae60a3e5174b1"><div class="ttname"><a href="namespacearmnn.xhtml#adf57837d00e8352d9b5cc5ab1fb5fee9af6486a22a9bb11959bfae60a3e5174b1">armnn::ShapeInferenceMethod::ValidateOnly</a></div><div class="ttdeci">@ ValidateOnly</div><div class="ttdoc">Validate all output shapes.</div></div>
<div class="ttc" id="aclassarmnn_1_1_i_connectable_layer_xhtml"><div class="ttname"><a href="classarmnn_1_1_i_connectable_layer.xhtml">armnn::IConnectableLayer</a></div><div class="ttdoc">Interface for a layer that is connectable to other layers via InputSlots and OutputSlots.</div><div class="ttdef"><b>Definition:</b> <a href="_i_network_8hpp_source.xhtml#l00068">INetwork.hpp:68</a></div></div>
<div class="ttc" id="a_optional_8hpp_xhtml"><div class="ttname"><a href="_optional_8hpp.xhtml">Optional.hpp</a></div></div>
<div class="ttc" id="astructarmnn_1_1_lstm_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_lstm_descriptor.xhtml">armnn::LstmDescriptor</a></div><div class="ttdoc">An LstmDescriptor for the LstmLayer.</div><div class="ttdef"><b>Definition:</b> <a href="_descriptors_8hpp_source.xhtml#l01069">Descriptors.hpp:1069</a></div></div>
<div class="ttc" id="astructarmnn_1_1_fully_connected_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_fully_connected_descriptor.xhtml">armnn::FullyConnectedDescriptor</a></div><div class="ttdoc">A FullyConnectedDescriptor for the FullyConnectedLayer.</div><div class="ttdef"><b>Definition:</b> <a href="_descriptors_8hpp_source.xhtml#l00495">Descriptors.hpp:495</a></div></div>
<div class="ttc" id="aclassarmnn_1_1_optimizer_options_opaque_xhtml_a58fbf98b638ebabb8bad26760f20a554"><div class="ttname"><a href="classarmnn_1_1_optimizer_options_opaque.xhtml#a58fbf98b638ebabb8bad26760f20a554">armnn::OptimizerOptionsOpaque::OptimizerOptionsOpaque</a></div><div class="ttdeci">OptimizerOptionsOpaque()</div><div class="ttdef"><b>Definition:</b> <a href="_network_8cpp_source.xhtml#l00048">Network.cpp:48</a></div></div>
<div class="ttc" id="astructarmnn_1_1_optimizer_options_xhtml_a71194277c60153a5f86539f5d39f01db"><div class="ttname"><a href="structarmnn_1_1_optimizer_options.xhtml#a71194277c60153a5f86539f5d39f01db">armnn::OptimizerOptions::m_ModelOptions</a></div><div class="ttdeci">ModelOptions m_ModelOptions</div><div class="ttdoc">Enable Model Options.</div><div class="ttdef"><b>Definition:</b> <a href="_i_network_8hpp_source.xhtml#l00244">INetwork.hpp:244</a></div></div>
<div class="ttc" id="aclassarmnn_1_1_loaded_network_xhtml"><div class="ttname"><a href="classarmnn_1_1_loaded_network.xhtml">armnn::LoadedNetwork</a></div><div class="ttdef"><b>Definition:</b> <a href="_loaded_network_8hpp_source.xhtml#l00042">LoadedNetwork.hpp:42</a></div></div>
<div class="ttc" id="aclassarmnn_1_1_i_input_slot_xhtml_a22b3f11f56aa924c0c1b6ee4d6cc90e1"><div class="ttname"><a href="classarmnn_1_1_i_input_slot.xhtml#a22b3f11f56aa924c0c1b6ee4d6cc90e1">armnn::IInputSlot::GetOwningIConnectableLayer</a></div><div class="ttdeci">virtual const IConnectableLayer &amp; GetOwningIConnectableLayer() const =0</div></div>
<div class="ttc" id="aclassarmnn_1_1_i_optimized_network_xhtml"><div class="ttname"><a href="classarmnn_1_1_i_optimized_network.xhtml">armnn::IOptimizedNetwork</a></div><div class="ttdef"><b>Definition:</b> <a href="_i_network_8hpp_source.xhtml#l00862">INetwork.hpp:862</a></div></div>
<div class="ttc" id="aclassarmnn_1_1_optimizer_options_opaque_xhtml_a4d0994094ec68328df73a00304fb4af6"><div class="ttname"><a href="classarmnn_1_1_optimizer_options_opaque.xhtml#a4d0994094ec68328df73a00304fb4af6">armnn::OptimizerOptionsOpaque::GetShapeInferenceMethod</a></div><div class="ttdeci">armnn::ShapeInferenceMethod GetShapeInferenceMethod() const</div><div class="ttdef"><b>Definition:</b> <a href="_network_8cpp_source.xhtml#l00200">Network.cpp:200</a></div></div>
<div class="ttc" id="aclassarmnn_1_1_i_network_xhtml_ac1134a94265293ea7347180260f787d2"><div class="ttname"><a href="classarmnn_1_1_i_network.xhtml#ac1134a94265293ea7347180260f787d2">armnn::INetwork::AddDetectionPostProcessLayer</a></div><div class="ttdeci">IConnectableLayer * AddDetectionPostProcessLayer(const DetectionPostProcessDescriptor &amp;descriptor, const ConstTensor &amp;anchors, const char *name=nullptr)</div><div class="ttdoc">Adds a Detection PostProcess layer to the network.</div><div class="ttdef"><b>Definition:</b> <a href="_network_8cpp_source.xhtml#l00305">Network.cpp:305</a></div></div>
<div class="ttc" id="aclassarmnn_1_1_i_network_xhtml_af13795cdf49e63d8bc3cb409592cdb9d"><div class="ttname"><a href="classarmnn_1_1_i_network.xhtml#af13795cdf49e63d8bc3cb409592cdb9d">armnn::INetwork::AddSubtractionLayer</a></div><div class="ttdeci">IConnectableLayer * AddSubtractionLayer(const char *name=nullptr)</div><div class="ttdoc">Adds a subtraction layer to the network.</div><div class="ttdef"><b>Definition:</b> <a href="_network_8cpp_source.xhtml#l00508">Network.cpp:508</a></div></div>
<div class="ttc" id="astructarmnn_1_1_batch_mat_mul_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_batch_mat_mul_descriptor.xhtml">armnn::BatchMatMulDescriptor</a></div><div class="ttdoc">A BatchMatMulDescriptor for the BatchMatMul operator.</div><div class="ttdef"><b>Definition:</b> <a href="_descriptors_8hpp_source.xhtml#l01551">Descriptors.hpp:1551</a></div></div>
<div class="ttc" id="astructarmnn_1_1_resize_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_resize_descriptor.xhtml">armnn::ResizeDescriptor</a></div><div class="ttdoc">A ResizeDescriptor for the ResizeLayer.</div><div class="ttdef"><b>Definition:</b> <a href="_descriptors_8hpp_source.xhtml#l00952">Descriptors.hpp:952</a></div></div>
<div class="ttc" id="aclassarmnn_1_1_i_network_xhtml_a8de6b047fcaff95df48dca683e1f3aa4"><div class="ttname"><a href="classarmnn_1_1_i_network.xhtml#a8de6b047fcaff95df48dca683e1f3aa4">armnn::INetwork::AddSliceLayer</a></div><div class="ttdeci">IConnectableLayer * AddSliceLayer(const SliceDescriptor &amp;sliceDescriptor, const char *name=nullptr)</div><div class="ttdoc">Adds a slice layer to the network.</div><div class="ttdef"><b>Definition:</b> <a href="_network_8cpp_source.xhtml#l00381">Network.cpp:381</a></div></div>
<div class="ttc" id="astructarmnn_1_1_strided_slice_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_strided_slice_descriptor.xhtml">armnn::StridedSliceDescriptor</a></div><div class="ttdoc">A StridedSliceDescriptor for the StridedSliceLayer.</div><div class="ttdef"><b>Definition:</b> <a href="_descriptors_8hpp_source.xhtml#l01270">Descriptors.hpp:1270</a></div></div>
<div class="ttc" id="aclassarmnn_1_1_const_tensor_xhtml"><div class="ttname"><a href="classarmnn_1_1_const_tensor.xhtml">armnn::ConstTensor</a></div><div class="ttdoc">A tensor defined by a TensorInfo (shape and data type) and an immutable backing store.</div><div class="ttdef"><b>Definition:</b> <a href="_tensor_8hpp_source.xhtml#l00327">Tensor.hpp:327</a></div></div>
<div class="ttc" id="astructarmnn_1_1_pooling3d_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_pooling3d_descriptor.xhtml">armnn::Pooling3dDescriptor</a></div><div class="ttdoc">A Pooling3dDescriptor for the Pooling3dLayer.</div><div class="ttdef"><b>Definition:</b> <a href="_descriptors_8hpp_source.xhtml#l00419">Descriptors.hpp:419</a></div></div>
<div class="ttc" id="astructarmnn_1_1_reduce_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_reduce_descriptor.xhtml">armnn::ReduceDescriptor</a></div><div class="ttdoc">A ReduceDescriptor for the REDUCE operators.</div><div class="ttdef"><b>Definition:</b> <a href="_descriptors_8hpp_source.xhtml#l01505">Descriptors.hpp:1505</a></div></div>
<div class="ttc" id="aclassarmnn_1_1_i_optimized_network_xhtml_a150601aebab0c979f258bf862b6fd5db"><div class="ttname"><a href="classarmnn_1_1_i_optimized_network.xhtml#a150601aebab0c979f258bf862b6fd5db">armnn::IOptimizedNetwork::AsyncNetworkImpl</a></div><div class="ttdeci">friend class experimental::AsyncNetworkImpl</div><div class="ttdef"><b>Definition:</b> <a href="_i_network_8hpp_source.xhtml#l00889">INetwork.hpp:889</a></div></div>
<div class="ttc" id="astructarmnn_1_1_backend_options_xhtml"><div class="ttname"><a href="structarmnn_1_1_backend_options.xhtml">armnn::BackendOptions</a></div><div class="ttdoc">Struct for the users to pass backend specific options.</div><div class="ttdef"><b>Definition:</b> <a href="_backend_options_8hpp_source.xhtml#l00022">BackendOptions.hpp:22</a></div></div>
<div class="ttc" id="aclassarmnn_1_1_i_network_xhtml_abc7f5a6538288c9cba3f54ab8ac70012"><div class="ttname"><a href="classarmnn_1_1_i_network.xhtml#abc7f5a6538288c9cba3f54ab8ac70012">armnn::INetwork::TestConnectionPreservation</a></div><div class="ttdeci">friend class TestConnectionPreservation</div><div class="ttdef"><b>Definition:</b> <a href="_i_network_8hpp_source.xhtml#l00834">INetwork.hpp:834</a></div></div>
<div class="ttc" id="aclassarmnn_1_1_optimizer_options_opaque_xhtml_ad6f282c92535e2be398a9b350d4e2ee9"><div class="ttname"><a href="classarmnn_1_1_optimizer_options_opaque.xhtml#ad6f282c92535e2be398a9b350d4e2ee9">armnn::OptimizerOptionsOpaque::GetAllowExpandedDims</a></div><div class="ttdeci">bool GetAllowExpandedDims() const</div><div class="ttdef"><b>Definition:</b> <a href="_network_8cpp_source.xhtml#l00190">Network.cpp:190</a></div></div>
<div class="ttc" id="anamespacearmnn_xhtml_a5b6893cda5b69359a4244c06054da18f"><div class="ttname"><a href="namespacearmnn.xhtml#a5b6893cda5b69359a4244c06054da18f">armnn::ModelOptions</a></div><div class="ttdeci">std::vector&lt; BackendOptions &gt; ModelOptions</div><div class="ttdef"><b>Definition:</b> <a href="_backend_options_8hpp_source.xhtml#l00018">BackendOptions.hpp:18</a></div></div>
<div class="ttc" id="astructarmnn_1_1_comparison_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_comparison_descriptor.xhtml">armnn::ComparisonDescriptor</a></div><div class="ttdoc">A ComparisonDescriptor for the ComparisonLayer.</div><div class="ttdef"><b>Definition:</b> <a href="_descriptors_8hpp_source.xhtml#l00089">Descriptors.hpp:89</a></div></div>
<div class="ttc" id="aclassarmnn_1_1_i_connectable_layer_xhtml_af978f897fb7e115a901cb7ed95f8e532"><div class="ttname"><a href="classarmnn_1_1_i_connectable_layer.xhtml#af978f897fb7e115a901cb7ed95f8e532">armnn::IConnectableLayer::ConstantTensors</a></div><div class="ttdeci">std::vector&lt; std::reference_wrapper&lt; std::shared_ptr&lt; ConstTensorHandle &gt; &gt;&gt; ConstantTensors</div><div class="ttdef"><b>Definition:</b> <a href="_i_network_8hpp_source.xhtml#l00124">INetwork.hpp:124</a></div></div>
<div class="ttc" id="astructarmnn_1_1_stand_in_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_stand_in_descriptor.xhtml">armnn::StandInDescriptor</a></div><div class="ttdoc">A StandInDescriptor for the StandIn layer.</div><div class="ttdef"><b>Definition:</b> <a href="_descriptors_8hpp_source.xhtml#l01248">Descriptors.hpp:1248</a></div></div>
<div class="ttc" id="aclassarmnn_1_1_i_network_xhtml_af71383a4986faf7f0e339fbaf70e8957"><div class="ttname"><a href="classarmnn_1_1_i_network.xhtml#af71383a4986faf7f0e339fbaf70e8957">armnn::INetwork::AddElementwiseBinaryLayer</a></div><div class="ttdeci">IConnectableLayer * AddElementwiseBinaryLayer(const ElementwiseBinaryDescriptor &amp;elementwiseUnaryDescriptor, const char *name=nullptr)</div><div class="ttdoc">Add an ElementwiseBinary layer to the network.</div><div class="ttdef"><b>Definition:</b> <a href="_network_8cpp_source.xhtml#l00313">Network.cpp:313</a></div></div>
<div class="ttc" id="a_deprecated_8hpp_xhtml_af16119336bd0dfbfbc83fc283151067e"><div class="ttname"><a href="_deprecated_8hpp.xhtml#af16119336bd0dfbfbc83fc283151067e">ARMNN_DEPRECATED_MSG_REMOVAL_DATE</a></div><div class="ttdeci">#define ARMNN_DEPRECATED_MSG_REMOVAL_DATE(message, removed_in_release)</div><div class="ttdef"><b>Definition:</b> <a href="_deprecated_8hpp_source.xhtml#l00044">Deprecated.hpp:44</a></div></div>
<div class="ttc" id="aclassarmnn_1_1_i_network_xhtml_a0b426a3feffc76e66d73b5761806e899"><div class="ttname"><a href="classarmnn_1_1_i_network.xhtml#a0b426a3feffc76e66d73b5761806e899">armnn::INetwork::AddQuantizeLayer</a></div><div class="ttdeci">IConnectableLayer * AddQuantizeLayer(const char *name=nullptr)</div><div class="ttdoc">Add a quantize layer to the network.</div><div class="ttdef"><b>Definition:</b> <a href="_network_8cpp_source.xhtml#l00533">Network.cpp:533</a></div></div>
<div class="ttc" id="a_i_strategy_8hpp_xhtml"><div class="ttname"><a href="_i_strategy_8hpp.xhtml">IStrategy.hpp</a></div></div>
<div class="ttc" id="aclassarmnn_1_1_i_network_xhtml_a4bfd8dee1a0315b651e977c672c0847c"><div class="ttname"><a href="classarmnn_1_1_i_network.xhtml#a4bfd8dee1a0315b651e977c672c0847c">armnn::INetwork::AddMinimumLayer</a></div><div class="ttdeci">IConnectableLayer * AddMinimumLayer(const char *name=nullptr)</div><div class="ttdoc">Add a Minimum layer to the network.</div><div class="ttdef"><b>Definition:</b> <a href="_network_8cpp_source.xhtml#l00544">Network.cpp:544</a></div></div>
<div class="ttc" id="a_tensor_handle_8hpp_xhtml"><div class="ttname"><a href="_tensor_handle_8hpp.xhtml">TensorHandle.hpp</a></div></div>
<div class="ttc" id="astructarmnn_1_1_views_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_views_descriptor.xhtml">armnn::ViewsDescriptor</a></div><div class="ttdoc">A ViewsDescriptor for the SplitterLayer.</div><div class="ttdef"><b>Definition:</b> <a href="_descriptors_8hpp_source.xhtml#l00244">Descriptors.hpp:244</a></div></div>
<div class="ttc" id="aclassarmnn_1_1_i_workload_factory_xhtml"><div class="ttname"><a href="classarmnn_1_1_i_workload_factory.xhtml">armnn::IWorkloadFactory</a></div><div class="ttdef"><b>Definition:</b> <a href="_workload_factory_8hpp_source.xhtml#l00022">WorkloadFactory.hpp:22</a></div></div>
<div class="ttc" id="a_tensor_fwd_8hpp_xhtml"><div class="ttname"><a href="_tensor_fwd_8hpp.xhtml">TensorFwd.hpp</a></div></div>
<div class="ttc" id="astructarmnn_1_1_pre_compiled_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_pre_compiled_descriptor.xhtml">armnn::PreCompiledDescriptor</a></div><div class="ttdoc">A PreCompiledDescriptor for the PreCompiledLayer.</div><div class="ttdef"><b>Definition:</b> <a href="_descriptors_8hpp_source.xhtml#l01334">Descriptors.hpp:1334</a></div></div>
<div class="ttc" id="aclassarmnn_1_1_i_connectable_layer_xhtml_a80ac4eda2e7f2757ec9dd96fc96dbd16"><div class="ttname"><a href="classarmnn_1_1_i_connectable_layer.xhtml#a80ac4eda2e7f2757ec9dd96fc96dbd16">armnn::IConnectableLayer::GetOutputSlot</a></div><div class="ttdeci">virtual const IOutputSlot &amp; GetOutputSlot(unsigned int index) const =0</div><div class="ttdoc">Get the const output slot handle by slot index.</div></div>
<div class="ttc" id="aclassarmnn_1_1_optimizer_options_opaque_xhtml_acad25c09a856d551c88b183f08edc2c1"><div class="ttname"><a href="classarmnn_1_1_optimizer_options_opaque.xhtml#acad25c09a856d551c88b183f08edc2c1">armnn::OptimizerOptionsOpaque::SetShapeInferenceMethod</a></div><div class="ttdeci">void SetShapeInferenceMethod(armnn::ShapeInferenceMethod ShapeInferenceMethodType)</div><div class="ttdef"><b>Definition:</b> <a href="_network_8cpp_source.xhtml#l00140">Network.cpp:140</a></div></div>
<div class="ttc" id="aclassarmnn_1_1_i_network_xhtml_ae913b4351b7027f37eb5657dd7867733"><div class="ttname"><a href="classarmnn_1_1_i_network.xhtml#ae913b4351b7027f37eb5657dd7867733">armnn::INetwork::AddPooling2dLayer</a></div><div class="ttdeci">IConnectableLayer * AddPooling2dLayer(const Pooling2dDescriptor &amp;pooling2dDescriptor, const char *name=nullptr)</div><div class="ttdoc">Adds a 2D pooling layer to the network.</div><div class="ttdef"><b>Definition:</b> <a href="_network_8cpp_source.xhtml#l00349">Network.cpp:349</a></div></div>
<div class="ttc" id="anamespacearmnn_xhtml_adf57837d00e8352d9b5cc5ab1fb5fee9"><div class="ttname"><a href="namespacearmnn.xhtml#adf57837d00e8352d9b5cc5ab1fb5fee9">armnn::ShapeInferenceMethod</a></div><div class="ttdeci">ShapeInferenceMethod</div><div class="ttdoc">The ShapeInferenceMethod modify how the output shapes are treated.</div><div class="ttdef"><b>Definition:</b> <a href="_types_8hpp_source.xhtml#l00232">Types.hpp:232</a></div></div>
<div class="ttc" id="aclassarmnn_1_1_optimizer_options_opaque_xhtml_a9258f2763407b5dec4c88f7f6109cbd7"><div class="ttname"><a href="classarmnn_1_1_optimizer_options_opaque.xhtml#a9258f2763407b5dec4c88f7f6109cbd7">armnn::OptimizerOptionsOpaque::SetImportEnabled</a></div><div class="ttdeci">void SetImportEnabled(bool ImportState)</div><div class="ttdef"><b>Definition:</b> <a href="_network_8cpp_source.xhtml#l00110">Network.cpp:110</a></div></div>
<div class="ttc" id="aclassarmnn_1_1_i_network_xhtml_aead50fe5965878e58cfdbe782736fa2a"><div class="ttname"><a href="classarmnn_1_1_i_network.xhtml#aead50fe5965878e58cfdbe782736fa2a">armnn::INetwork::AddBatchMatMulLayer</a></div><div class="ttdeci">IConnectableLayer * AddBatchMatMulLayer(const BatchMatMulDescriptor &amp;descriptor, const char *name=nullptr)</div><div class="ttdoc">Add a BatchMatMul layer to the network.</div><div class="ttdef"><b>Definition:</b> <a href="_network_8cpp_source.xhtml#l00636">Network.cpp:636</a></div></div>
<div class="ttc" id="aclassarmnn_1_1_i_optimized_network_xhtml_a604654b453ec291a503d62a0beb849d3"><div class="ttname"><a href="classarmnn_1_1_i_optimized_network.xhtml#a604654b453ec291a503d62a0beb849d3">armnn::IOptimizedNetwork::GetNumOutputs</a></div><div class="ttdeci">size_t GetNumOutputs() const</div><div class="ttdef"><b>Definition:</b> <a href="_network_8cpp_source.xhtml#l00706">Network.cpp:706</a></div></div>
<div class="ttc" id="anamespacearmnn_xhtml_aa42e128b41f4e966fc901f9bf42c5a1c"><div class="ttname"><a href="namespacearmnn.xhtml#aa42e128b41f4e966fc901f9bf42c5a1c">armnn::Optimize</a></div><div class="ttdeci">IOptimizedNetworkPtr Optimize(const INetwork &amp;network, const std::vector&lt; BackendId &gt; &amp;backendPreferences, const IDeviceSpec &amp;deviceSpec, const OptimizerOptionsOpaque &amp;options=OptimizerOptionsOpaque(), Optional&lt; std::vector&lt; std::string &gt; &amp; &gt; messages=EmptyOptional())</div><div class="ttdoc">Create an optimized version of the network.</div><div class="ttdef"><b>Definition:</b> <a href="_network_8cpp_source.xhtml#l02003">Network.cpp:2003</a></div></div>
<div class="ttc" id="aclassarmnn_1_1_i_output_slot_xhtml_ab4e57caf059794897b17266090ebcb39"><div class="ttname"><a href="classarmnn_1_1_i_output_slot.xhtml#ab4e57caf059794897b17266090ebcb39">armnn::IOutputSlot::IsTensorInfoSet</a></div><div class="ttdeci">virtual bool IsTensorInfoSet() const =0</div></div>
<div class="ttc" id="aclassarmnn_1_1_optimizer_options_opaque_xhtml_a5a864f9b972da52f3ca9028f1c8ee44a"><div class="ttname"><a href="classarmnn_1_1_optimizer_options_opaque.xhtml#a5a864f9b972da52f3ca9028f1c8ee44a">armnn::OptimizerOptionsOpaque::SetAllowExpandedDims</a></div><div class="ttdeci">void SetAllowExpandedDims(bool ExpandedDimsAllowed)</div><div class="ttdef"><b>Definition:</b> <a href="_network_8cpp_source.xhtml#l00145">Network.cpp:145</a></div></div>
<div class="ttc" id="aclassarmnn_1_1_i_network_xhtml_ae0cfae1ea51669892608a1a060d24fa0"><div class="ttname"><a href="classarmnn_1_1_i_network.xhtml#ae0cfae1ea51669892608a1a060d24fa0">armnn::INetwork::AddReduceLayer</a></div><div class="ttdeci">IConnectableLayer * AddReduceLayer(const ReduceDescriptor &amp;reduceDescriptor, const char *name=nullptr)</div><div class="ttdoc">Adds a reduce layer to the network.</div><div class="ttdef"><b>Definition:</b> <a href="_network_8cpp_source.xhtml#l00437">Network.cpp:437</a></div></div>
<div class="ttc" id="aclassarmnn_1_1_i_output_slot_xhtml_ac1835f8756a9f03c02fcf9664e3a0fce"><div class="ttname"><a href="classarmnn_1_1_i_output_slot.xhtml#ac1835f8756a9f03c02fcf9664e3a0fce">armnn::IOutputSlot::Connect</a></div><div class="ttdeci">virtual int Connect(IInputSlot &amp;destination)=0</div></div>
<div class="ttc" id="aclassarmnn_1_1_i_network_xhtml_a357aca04172ed22fa32e5a69122b0fec"><div class="ttname"><a href="classarmnn_1_1_i_network.xhtml#a357aca04172ed22fa32e5a69122b0fec">armnn::INetwork::AddDequantizeLayer</a></div><div class="ttdeci">IConnectableLayer * AddDequantizeLayer(const char *name=nullptr)</div><div class="ttdoc">Adds a Dequantize layer to the network.</div><div class="ttdef"><b>Definition:</b> <a href="_network_8cpp_source.xhtml#l00299">Network.cpp:299</a></div></div>
<div class="ttc" id="aclassarmnn_1_1_i_network_xhtml_a55bd1bb29076dc45bb335e7322781463"><div class="ttname"><a href="classarmnn_1_1_i_network.xhtml#a55bd1bb29076dc45bb335e7322781463">armnn::INetwork::Destroy</a></div><div class="ttdeci">static void Destroy(INetwork *network)</div><div class="ttdef"><b>Definition:</b> <a href="_network_8cpp_source.xhtml#l00657">Network.cpp:657</a></div></div>
<div class="ttc" id="anamespacearmnn_xhtml"><div class="ttname"><a href="namespacearmnn.xhtml">armnn</a></div><div class="ttdoc">Copyright (c) 2021 ARM Limited and Contributors.</div><div class="ttdef"><b>Definition:</b> <a href="01__00__quick__start_8dox_source.xhtml#l00006">01_00_quick_start.dox:6</a></div></div>
<div class="ttc" id="aclassarmnn_1_1_i_network_xhtml_a57590d7777211673d2052f702f0b07a1"><div class="ttname"><a href="classarmnn_1_1_i_network.xhtml#a57590d7777211673d2052f702f0b07a1">armnn::INetwork::AddMaximumLayer</a></div><div class="ttdeci">IConnectableLayer * AddMaximumLayer(const char *name=nullptr)</div><div class="ttdoc">Add a Maximum layer to the network.</div><div class="ttdef"><b>Definition:</b> <a href="_network_8cpp_source.xhtml#l00515">Network.cpp:515</a></div></div>
<div class="ttc" id="aclassarmnn_1_1_i_strategy_xhtml"><div class="ttname"><a href="classarmnn_1_1_i_strategy.xhtml">armnn::IStrategy</a></div><div class="ttdef"><b>Definition:</b> <a href="_i_strategy_8hpp_source.xhtml#l00016">IStrategy.hpp:16</a></div></div>
<div class="ttc" id="anamespacearmnn_xhtml_af244057f8225833d8e9dc03949a6f0a2"><div class="ttname"><a href="namespacearmnn.xhtml#af244057f8225833d8e9dc03949a6f0a2">armnn::CompiledBlobDeleter</a></div><div class="ttdeci">std::function&lt; void(const void *)&gt; CompiledBlobDeleter</div><div class="ttdef"><b>Definition:</b> <a href="_i_network_8hpp_source.xhtml#l00330">INetwork.hpp:330</a></div></div>
<div class="ttc" id="aclassarmnn_1_1_backend_options_1_1_var_xhtml_a7ef596a0c429a1a74709cf14d8fa15d2"><div class="ttname"><a href="classarmnn_1_1_backend_options_1_1_var.xhtml#a7ef596a0c429a1a74709cf14d8fa15d2">armnn::BackendOptions::Var::ToString</a></div><div class="ttdeci">std::string ToString()</div><div class="ttdef"><b>Definition:</b> <a href="_backend_options_8hpp_source.xhtml#l00124">BackendOptions.hpp:124</a></div></div>
<div class="ttc" id="aclassarmnn_1_1_i_input_slot_xhtml"><div class="ttname"><a href="classarmnn_1_1_i_input_slot.xhtml">armnn::IInputSlot</a></div><div class="ttdoc">An input connection slot for a layer.</div><div class="ttdef"><b>Definition:</b> <a href="_i_network_8hpp_source.xhtml#l00025">INetwork.hpp:25</a></div></div>
<div class="ttc" id="aclassarmnn_1_1_optimizer_options_opaque_xhtml_a70dc46a7e4105cf24df5a5bb58ae07a5"><div class="ttname"><a href="classarmnn_1_1_optimizer_options_opaque.xhtml#a70dc46a7e4105cf24df5a5bb58ae07a5">armnn::OptimizerOptionsOpaque::GetReduceFp32ToFp16</a></div><div class="ttdeci">bool GetReduceFp32ToFp16() const</div><div class="ttdef"><b>Definition:</b> <a href="_network_8cpp_source.xhtml#l00170">Network.cpp:170</a></div></div>
<div class="ttc" id="aclassarmnn_1_1_i_network_xhtml_a5210b3df77e7a51ab369b577de821aa2"><div class="ttname"><a href="classarmnn_1_1_i_network.xhtml#a5210b3df77e7a51ab369b577de821aa2">armnn::INetwork::AddStackLayer</a></div><div class="ttdeci">IConnectableLayer * AddStackLayer(const StackDescriptor &amp;descriptor, const char *name=nullptr)</div><div class="ttdoc">Adds a stack layer to the network.</div><div class="ttdef"><b>Definition:</b> <a href="_network_8cpp_source.xhtml#l00591">Network.cpp:591</a></div></div>
<div class="ttc" id="aclassarmnn_1_1_i_output_slot_xhtml_ae16a4d0c56ca96e5d61785bd3e3e7992"><div class="ttname"><a href="classarmnn_1_1_i_output_slot.xhtml#ae16a4d0c56ca96e5d61785bd3e3e7992">armnn::IOutputSlot::Disconnect</a></div><div class="ttdeci">virtual void Disconnect(IInputSlot &amp;slot)=0</div></div>
<div class="ttc" id="aclassarmnn_1_1_i_network_xhtml_a2d936beb0fcf3c5d22ff332f0812b05e"><div class="ttname"><a href="classarmnn_1_1_i_network.xhtml#a2d936beb0fcf3c5d22ff332f0812b05e">armnn::INetwork::INetwork</a></div><div class="ttdeci">INetwork(NetworkOptions networkOptions={})</div><div class="ttdef"><b>Definition:</b> <a href="_network_8cpp_source.xhtml#l00044">Network.cpp:44</a></div></div>
<div class="ttc" id="astructarmnn_1_1_backend_options_1_1_backend_option_xhtml_a9a98946a64f3893b085f650932c9dfee"><div class="ttname"><a href="structarmnn_1_1_backend_options_1_1_backend_option.xhtml#a9a98946a64f3893b085f650932c9dfee">armnn::BackendOptions::BackendOption::GetName</a></div><div class="ttdeci">std::string GetName() const</div><div class="ttdef"><b>Definition:</b> <a href="_backend_options_8hpp_source.xhtml#l00251">BackendOptions.hpp:251</a></div></div>
<div class="ttc" id="astructarmnn_1_1_batch_to_space_nd_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_batch_to_space_nd_descriptor.xhtml">armnn::BatchToSpaceNdDescriptor</a></div><div class="ttdoc">A BatchToSpaceNdDescriptor for the BatchToSpaceNdLayer.</div><div class="ttdef"><b>Definition:</b> <a href="_descriptors_8hpp_source.xhtml#l00863">Descriptors.hpp:863</a></div></div>
<div class="ttc" id="aclassarmnn_1_1_i_network_xhtml_aee3a15d2fa419f50a8ac45e6d3c11e16"><div class="ttname"><a href="classarmnn_1_1_i_network.xhtml#aee3a15d2fa419f50a8ac45e6d3c11e16">armnn::INetwork::AddPrecompiledLayer</a></div><div class="ttdeci">IConnectableLayer * AddPrecompiledLayer(const PreCompiledDescriptor &amp;preCompiledDescriptor, CompiledBlobPtr compiledBlobPtr, const Optional&lt; BackendId &gt; &amp;backend, const char *name=nullptr)</div><div class="ttdoc">Adds a Precompiled layer to the network.</div><div class="ttdef"><b>Definition:</b> <a href="_network_8cpp_source.xhtml#l00361">Network.cpp:361</a></div></div>
<div class="ttc" id="aclassarmnn_1_1_i_connectable_layer_xhtml_a6ec9e0eb66d7d6a01240492a0b18104c"><div class="ttname"><a href="classarmnn_1_1_i_connectable_layer.xhtml#a6ec9e0eb66d7d6a01240492a0b18104c">armnn::IConnectableLayer::GetInputSlot</a></div><div class="ttdeci">virtual const IInputSlot &amp; GetInputSlot(unsigned int index) const =0</div><div class="ttdoc">Get a const input slot handle by slot index.</div></div>
<div class="ttc" id="astructarmnn_1_1_space_to_depth_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_space_to_depth_descriptor.xhtml">armnn::SpaceToDepthDescriptor</a></div><div class="ttdoc">A SpaceToDepthDescriptor for the SpaceToDepthLayer.</div><div class="ttdef"><b>Definition:</b> <a href="_descriptors_8hpp_source.xhtml#l01042">Descriptors.hpp:1042</a></div></div>
<div class="ttc" id="aclassarmnn_1_1_i_network_xhtml_abb59f6ba9988dae88e0f48e68d87fc32"><div class="ttname"><a href="classarmnn_1_1_i_network.xhtml#abb59f6ba9988dae88e0f48e68d87fc32">armnn::INetwork::AddMultiplicationLayer</a></div><div class="ttdeci">IConnectableLayer * AddMultiplicationLayer(const char *name=nullptr)</div><div class="ttdoc">Adds a multiplication layer to the network.</div><div class="ttdef"><b>Definition:</b> <a href="_network_8cpp_source.xhtml#l00409">Network.cpp:409</a></div></div>
<div class="ttc" id="aclassarmnn_1_1_optimizer_options_opaque_xhtml_a05c07a263bb054a828db2fe3f841e31f"><div class="ttname"><a href="classarmnn_1_1_optimizer_options_opaque.xhtml#a05c07a263bb054a828db2fe3f841e31f">armnn::OptimizerOptionsOpaque::~OptimizerOptionsOpaque</a></div><div class="ttdeci">~OptimizerOptionsOpaque()</div></div>
<div class="ttc" id="anamespacearmnn_xhtml_a4de71c3661093e5c4ae7775114f43413"><div class="ttname"><a href="namespacearmnn.xhtml#a4de71c3661093e5c4ae7775114f43413">armnn::NetworkOptions</a></div><div class="ttdeci">std::vector&lt; BackendOptions &gt; NetworkOptions</div><div class="ttdef"><b>Definition:</b> <a href="_backend_options_8hpp_source.xhtml#l00016">BackendOptions.hpp:16</a></div></div>
<div class="ttc" id="aclassarmnn_1_1_i_network_xhtml_a6c5376053e1f875776d7bc36fd0b7d45"><div class="ttname"><a href="classarmnn_1_1_i_network.xhtml#a6c5376053e1f875776d7bc36fd0b7d45">armnn::INetwork::AddNormalizationLayer</a></div><div class="ttdeci">IConnectableLayer * AddNormalizationLayer(const NormalizationDescriptor &amp;normalizationDescriptor, const char *name=nullptr)</div><div class="ttdoc">Adds a normalization layer to the network.</div><div class="ttdef"><b>Definition:</b> <a href="_network_8cpp_source.xhtml#l00375">Network.cpp:375</a></div></div>
<div class="ttc" id="astructarmnn_1_1_optimizer_options_xhtml_a1b1892da2aaf7eaedaa38671d56b7f19"><div class="ttname"><a href="structarmnn_1_1_optimizer_options.xhtml#a1b1892da2aaf7eaedaa38671d56b7f19">armnn::OptimizerOptions::m_ProfilingEnabled</a></div><div class="ttdeci">bool m_ProfilingEnabled</div><div class="ttdoc">Enable profiling dump of the optimizer phase.</div><div class="ttdef"><b>Definition:</b> <a href="_i_network_8hpp_source.xhtml#l00247">INetwork.hpp:247</a></div></div>
<div class="ttc" id="astructarmnn_1_1_detection_post_process_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_detection_post_process_descriptor.xhtml">armnn::DetectionPostProcessDescriptor</a></div><div class="ttdef"><b>Definition:</b> <a href="_descriptors_8hpp_source.xhtml#l00701">Descriptors.hpp:701</a></div></div>
<div class="ttc" id="aclassarmnn_1_1_i_network_xhtml_a72b9d30e9d555bb5c35460b62faedf0d"><div class="ttname"><a href="classarmnn_1_1_i_network.xhtml#a72b9d30e9d555bb5c35460b62faedf0d">armnn::INetwork::AddSpaceToBatchNdLayer</a></div><div class="ttdeci">IConnectableLayer * AddSpaceToBatchNdLayer(const SpaceToBatchNdDescriptor &amp;spaceToBatchNdDescriptor, const char *name=nullptr)</div><div class="ttdoc">Adds a space to batch layer to the network.</div><div class="ttdef"><b>Definition:</b> <a href="_network_8cpp_source.xhtml#l00473">Network.cpp:473</a></div></div>
<div class="ttc" id="astructarmnn_1_1_fill_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_fill_descriptor.xhtml">armnn::FillDescriptor</a></div><div class="ttdoc">A FillDescriptor for the FillLayer.</div><div class="ttdef"><b>Definition:</b> <a href="_descriptors_8hpp_source.xhtml#l00913">Descriptors.hpp:913</a></div></div>
<div class="ttc" id="aclassarmnn_1_1_i_network_xhtml_a43de8213707de0e76d80a32cd4b9b482"><div class="ttname"><a href="classarmnn_1_1_i_network.xhtml#a43de8213707de0e76d80a32cd4b9b482">armnn::INetwork::AddConvolution3dLayer</a></div><div class="ttdeci">IConnectableLayer * AddConvolution3dLayer(const Convolution3dDescriptor &amp;convolution3dDescriptor, const char *name=nullptr)</div><div class="ttdoc">Adds a 3D convolution layer to the network.</div><div class="ttdef"><b>Definition:</b> <a href="_network_8cpp_source.xhtml#l00277">Network.cpp:277</a></div></div>
<div class="ttc" id="anamespacearmnn_xhtml_a56943a0946e5f15e5e58054b8e7a04a4"><div class="ttname"><a href="namespacearmnn.xhtml#a56943a0946e5f15e5e58054b8e7a04a4">armnn::LayerType</a></div><div class="ttdeci">LayerType</div><div class="ttdoc">When adding a new layer, adapt also the LastLayer enum value in the enum class LayerType below.</div><div class="ttdef"><b>Definition:</b> <a href="_types_8hpp_source.xhtml#l00479">Types.hpp:479</a></div></div>
<div class="ttc" id="aclassarmnn_1_1_i_network_xhtml_aaff51346dadec2c1430abf007fed4cc9"><div class="ttname"><a href="classarmnn_1_1_i_network.xhtml#aaff51346dadec2c1430abf007fed4cc9">armnn::INetwork::AddL2NormalizationLayer</a></div><div class="ttdeci">IConnectableLayer * AddL2NormalizationLayer(const L2NormalizationDescriptor &amp;desc, const char *name=nullptr)</div><div class="ttdoc">Adds an L2 normalization layer to the network.</div><div class="ttdef"><b>Definition:</b> <a href="_network_8cpp_source.xhtml#l00449">Network.cpp:449</a></div></div>
<div class="ttc" id="aclassarmnn_1_1_i_output_slot_xhtml_a9943775a364fc4ab53b85ac88f311886"><div class="ttname"><a href="classarmnn_1_1_i_output_slot.xhtml#a9943775a364fc4ab53b85ac88f311886">armnn::IOutputSlot::GetTensorInfo</a></div><div class="ttdeci">virtual const TensorInfo &amp; GetTensorInfo() const =0</div></div>
<div class="ttc" id="aclassarmnn_1_1_optimizer_options_opaque_xhtml_a4c8ca1fa6bed9a68a78ab00f02d0fb38"><div class="ttname"><a href="classarmnn_1_1_optimizer_options_opaque.xhtml#a4c8ca1fa6bed9a68a78ab00f02d0fb38">armnn::OptimizerOptionsOpaque::SetReduceFp32ToFp16</a></div><div class="ttdeci">void SetReduceFp32ToFp16(bool ReduceFp32ToFp16State)</div><div class="ttdef"><b>Definition:</b> <a href="_network_8cpp_source.xhtml#l00135">Network.cpp:135</a></div></div>
<div class="ttc" id="aclassarmnn_1_1_i_output_slot_xhtml_aab97b09d9ee85a105883949abcae52f3"><div class="ttname"><a href="classarmnn_1_1_i_output_slot.xhtml#aab97b09d9ee85a105883949abcae52f3">armnn::IOutputSlot::GetNumConnections</a></div><div class="ttdeci">virtual unsigned int GetNumConnections() const =0</div></div>
<div class="ttc" id="aclassarmnn_1_1_i_network_xhtml_ab067ba4ee9416d93abb8a52f3dc8feba"><div class="ttname"><a href="classarmnn_1_1_i_network.xhtml#ab067ba4ee9416d93abb8a52f3dc8feba">armnn::INetwork::AddTransposeLayer</a></div><div class="ttdeci">IConnectableLayer * AddTransposeLayer(const TransposeDescriptor &amp;transposeDescriptor, const char *name=nullptr)</div><div class="ttdoc">Adds a transpose layer to the network.</div><div class="ttdef"><b>Definition:</b> <a href="_network_8cpp_source.xhtml#l00580">Network.cpp:580</a></div></div>
<div class="ttc" id="aclassarmnn_1_1_i_network_xhtml_a74894d085e78ff80f45fc09dd2381f08"><div class="ttname"><a href="classarmnn_1_1_i_network.xhtml#a74894d085e78ff80f45fc09dd2381f08">armnn::INetwork::AddStandInLayer</a></div><div class="ttdeci">IConnectableLayer * AddStandInLayer(const StandInDescriptor &amp;descriptor, const char *name=nullptr)</div><div class="ttdoc">Add a stand-in layer for a type unknown to the Arm NN framework.</div><div class="ttdef"><b>Definition:</b> <a href="_network_8cpp_source.xhtml#l00597">Network.cpp:597</a></div></div>
<div class="ttc" id="aclassarmnn_1_1_i_output_slot_xhtml_a41d30a9cd272e05986d71a69d6ad618b"><div class="ttname"><a href="classarmnn_1_1_i_output_slot.xhtml#a41d30a9cd272e05986d71a69d6ad618b">armnn::IOutputSlot::CalculateIndexOnOwner</a></div><div class="ttdeci">virtual unsigned int CalculateIndexOnOwner() const =0</div></div>
<div class="ttc" id="aclassarmnn_1_1_i_network_xhtml_a39f1b38d89c4de186742eafcbb3b1319"><div class="ttname"><a href="classarmnn_1_1_i_network.xhtml#a39f1b38d89c4de186742eafcbb3b1319">armnn::INetwork::AddAdditionLayer</a></div><div class="ttdeci">IConnectableLayer * AddAdditionLayer(const char *name=nullptr)</div><div class="ttdoc">Adds an addition layer to the network.</div><div class="ttdef"><b>Definition:</b> <a href="_network_8cpp_source.xhtml#l00402">Network.cpp:402</a></div></div>
<div class="ttc" id="aclassarmnn_1_1_optimizer_options_opaque_xhtml_a4527a67076f983e8db3496207d120fb5"><div class="ttname"><a href="classarmnn_1_1_optimizer_options_opaque.xhtml#a4527a67076f983e8db3496207d120fb5">armnn::OptimizerOptionsOpaque::GetProfilingEnabled</a></div><div class="ttdeci">bool GetProfilingEnabled() const</div><div class="ttdef"><b>Definition:</b> <a href="_network_8cpp_source.xhtml#l00155">Network.cpp:155</a></div></div>
<div class="ttc" id="aclassarmnn_1_1_i_network_xhtml_a6e2df484ecc65bc82712590b96e04df4"><div class="ttname"><a href="classarmnn_1_1_i_network.xhtml#a6e2df484ecc65bc82712590b96e04df4">armnn::INetwork::AddPadLayer</a></div><div class="ttdeci">IConnectableLayer * AddPadLayer(const PadDescriptor &amp;padDescriptor, const char *name=nullptr)</div><div class="ttdoc">Adds a fully pad layer to the network.</div><div class="ttdef"><b>Definition:</b> <a href="_network_8cpp_source.xhtml#l00527">Network.cpp:527</a></div></div>
<div class="ttc" id="astructarmnn_1_1_depthwise_convolution2d_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_depthwise_convolution2d_descriptor.xhtml">armnn::DepthwiseConvolution2dDescriptor</a></div><div class="ttdoc">A DepthwiseConvolution2dDescriptor for the DepthwiseConvolution2dLayer.</div><div class="ttdef"><b>Definition:</b> <a href="_descriptors_8hpp_source.xhtml#l00647">Descriptors.hpp:647</a></div></div>
<div class="ttc" id="astructarmnn_1_1_mean_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_mean_descriptor.xhtml">armnn::MeanDescriptor</a></div><div class="ttdoc">A MeanDescriptor for the MeanLayer.</div><div class="ttdef"><b>Definition:</b> <a href="_descriptors_8hpp_source.xhtml#l01139">Descriptors.hpp:1139</a></div></div>
<div class="ttc" id="aclassarmnn_1_1_i_connectable_layer_xhtml_ac2dac3b61c94de52093616be4ab17f8d"><div class="ttname"><a href="classarmnn_1_1_i_connectable_layer.xhtml#ac2dac3b61c94de52093616be4ab17f8d">armnn::IConnectableLayer::GetNumOutputSlots</a></div><div class="ttdeci">virtual unsigned int GetNumOutputSlots() const =0</div><div class="ttdoc">Returns the number of connectable output slots.</div></div>
<div class="ttc" id="aclassarmnn_1_1_i_network_xhtml_abd61d3e7ab67551c75bc219bbc4baeb5"><div class="ttname"><a href="classarmnn_1_1_i_network.xhtml#abd61d3e7ab67551c75bc219bbc4baeb5">armnn::INetwork::AddInstanceNormalizationLayer</a></div><div class="ttdeci">IConnectableLayer * AddInstanceNormalizationLayer(const InstanceNormalizationDescriptor &amp;desc, const char *name=nullptr)</div><div class="ttdoc">Adds an instance normalization layer to the network.</div><div class="ttdef"><b>Definition:</b> <a href="_network_8cpp_source.xhtml#l00443">Network.cpp:443</a></div></div>
<div class="ttc" id="astructarmnn_1_1_optimizer_options_xhtml_afc07add3304c3d79293acb881c2168df"><div class="ttname"><a href="structarmnn_1_1_optimizer_options.xhtml#afc07add3304c3d79293acb881c2168df">armnn::OptimizerOptions::m_DebugToFile</a></div><div class="ttdeci">bool m_DebugToFile</div><div class="ttdoc">Pass debug data to separate output files for easier troubleshooting.</div><div class="ttdef"><b>Definition:</b> <a href="_i_network_8hpp_source.xhtml#l00231">INetwork.hpp:231</a></div></div>
<div class="ttc" id="aclassarmnn_1_1_optimizer_options_opaque_xhtml_a2559eecf0b1317953b2ec24e83d0f0b4"><div class="ttname"><a href="classarmnn_1_1_optimizer_options_opaque.xhtml#a2559eecf0b1317953b2ec24e83d0f0b4">armnn::OptimizerOptionsOpaque::SetDebugEnabled</a></div><div class="ttdeci">void SetDebugEnabled(bool DebugState)</div><div class="ttdef"><b>Definition:</b> <a href="_network_8cpp_source.xhtml#l00125">Network.cpp:125</a></div></div>
<div class="ttc" id="aclassarmnn_1_1_i_device_spec_xhtml"><div class="ttname"><a href="classarmnn_1_1_i_device_spec.xhtml">armnn::IDeviceSpec</a></div><div class="ttdoc">Device specific knowledge to be passed to the optimizer.</div><div class="ttdef"><b>Definition:</b> <a href="_types_8hpp_source.xhtml#l00291">Types.hpp:291</a></div></div>
<div class="ttc" id="aclassarmnn_1_1_i_optimized_network_xhtml_aa1b6106cb25d38e369fd647f4324cebe"><div class="ttname"><a href="classarmnn_1_1_i_optimized_network.xhtml#aa1b6106cb25d38e369fd647f4324cebe">armnn::IOptimizedNetwork::GetGuid</a></div><div class="ttdeci">arm::pipe::ProfilingGuid GetGuid() const</div><div class="ttdef"><b>Definition:</b> <a href="_network_8cpp_source.xhtml#l00696">Network.cpp:696</a></div></div>
<div class="ttc" id="aclassarmnn_1_1_i_optimized_network_xhtml_a58ee539cf95c1e99fe4f54ef6e8bbd05"><div class="ttname"><a href="classarmnn_1_1_i_optimized_network.xhtml#a58ee539cf95c1e99fe4f54ef6e8bbd05">armnn::IOptimizedNetwork::Destroy</a></div><div class="ttdeci">static void Destroy(IOptimizedNetwork *network)</div><div class="ttdef"><b>Definition:</b> <a href="_network_8cpp_source.xhtml#l00676">Network.cpp:676</a></div></div>
<div class="ttc" id="aclassarmnn_1_1_i_network_xhtml_a0f19808bdada45222e72edf7671a275a"><div class="ttname"><a href="classarmnn_1_1_i_network.xhtml#a0f19808bdada45222e72edf7671a275a">armnn::INetwork::AddMergeLayer</a></div><div class="ttdeci">IConnectableLayer * AddMergeLayer(const char *name=nullptr)</div><div class="ttdoc">Adds a merge layer to the network.</div><div class="ttdef"><b>Definition:</b> <a href="_network_8cpp_source.xhtml#l00397">Network.cpp:397</a></div></div>
<div class="ttc" id="anamespacearmnn_xhtml_af362583b7b4c471c434cb0fdb86c2ae2"><div class="ttname"><a href="namespacearmnn.xhtml#af362583b7b4c471c434cb0fdb86c2ae2">armnn::CompiledBlobPtr</a></div><div class="ttdeci">std::unique_ptr&lt; void, CompiledBlobDeleter &gt; CompiledBlobPtr</div><div class="ttdef"><b>Definition:</b> <a href="_i_network_8hpp_source.xhtml#l00331">INetwork.hpp:331</a></div></div>
<div class="ttc" id="aclassarmnn_1_1_i_output_slot_xhtml_a9fffb92dc6d2edd5258d574a5862fc83"><div class="ttname"><a href="classarmnn_1_1_i_output_slot.xhtml#a9fffb92dc6d2edd5258d574a5862fc83">armnn::IOutputSlot::GetConnection</a></div><div class="ttdeci">virtual const IInputSlot * GetConnection(unsigned int index) const =0</div></div>
<div class="ttc" id="aclassarmnn_1_1_i_optimized_network_xhtml_a374d52340ec8dc02a819acc20fb5aa92"><div class="ttname"><a href="classarmnn_1_1_i_optimized_network.xhtml#a374d52340ec8dc02a819acc20fb5aa92">armnn::IOptimizedNetwork::pOptimizedNetworkImpl</a></div><div class="ttdeci">std::unique_ptr&lt; OptimizedNetworkImpl &gt; pOptimizedNetworkImpl</div><div class="ttdef"><b>Definition:</b> <a href="_i_network_8hpp_source.xhtml#l00907">INetwork.hpp:907</a></div></div>
<div class="ttc" id="astructarmnn_1_1_l2_normalization_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_l2_normalization_descriptor.xhtml">armnn::L2NormalizationDescriptor</a></div><div class="ttdoc">A L2NormalizationDescriptor for the L2NormalizationLayer.</div><div class="ttdef"><b>Definition:</b> <a href="_descriptors_8hpp_source.xhtml#l00797">Descriptors.hpp:797</a></div></div>
<div class="ttc" id="aclassarmnn_1_1_i_network_xhtml_a11f49d84f0cfd8df65f4d5206cd43b6d"><div class="ttname"><a href="classarmnn_1_1_i_network.xhtml#a11f49d84f0cfd8df65f4d5206cd43b6d">armnn::INetwork::AddPermuteLayer</a></div><div class="ttdeci">IConnectableLayer * AddPermuteLayer(const PermuteDescriptor &amp;permuteDescriptor, const char *name=nullptr)</div><div class="ttdoc">Adds a permute layer to the network.</div><div class="ttdef"><b>Definition:</b> <a href="_network_8cpp_source.xhtml#l00337">Network.cpp:337</a></div></div>
<div class="ttc" id="aclassarmnn_1_1_i_connectable_layer_xhtml_afb5e65c770f6cee222db8af7581541a6"><div class="ttname"><a href="classarmnn_1_1_i_connectable_layer.xhtml#afb5e65c770f6cee222db8af7581541a6">armnn::IConnectableLayer::GetGuid</a></div><div class="ttdeci">virtual LayerGuid GetGuid() const =0</div><div class="ttdoc">Returns the unique id of the layer.</div></div>
<div class="ttc" id="astructarmnn_1_1_channel_shuffle_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_channel_shuffle_descriptor.xhtml">armnn::ChannelShuffleDescriptor</a></div><div class="ttdoc">A ChannelShuffleDescriptor for the ChannelShuffle operator.</div><div class="ttdef"><b>Definition:</b> <a href="_descriptors_8hpp_source.xhtml#l01529">Descriptors.hpp:1529</a></div></div>
<div class="ttc" id="aclassarmnn_1_1_i_optimized_network_xhtml_aff3fde909d22ed157046682e70129259"><div class="ttname"><a href="classarmnn_1_1_i_optimized_network.xhtml#aff3fde909d22ed157046682e70129259">armnn::IOptimizedNetwork::PrintGraph</a></div><div class="ttdeci">Status PrintGraph()</div><div class="ttdef"><b>Definition:</b> <a href="_network_8cpp_source.xhtml#l00681">Network.cpp:681</a></div></div>
<div class="ttc" id="aclassarmnn_1_1_i_output_slot_xhtml"><div class="ttname"><a href="classarmnn_1_1_i_output_slot.xhtml">armnn::IOutputSlot</a></div><div class="ttdoc">An output connection slot for a layer.</div><div class="ttdef"><b>Definition:</b> <a href="_i_network_8hpp_source.xhtml#l00041">INetwork.hpp:41</a></div></div>
<div class="ttc" id="astructarmnn_1_1_convolution3d_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_convolution3d_descriptor.xhtml">armnn::Convolution3dDescriptor</a></div><div class="ttdoc">A Convolution3dDescriptor for the Convolution3dLayer.</div><div class="ttdef"><b>Definition:</b> <a href="_descriptors_8hpp_source.xhtml#l00576">Descriptors.hpp:576</a></div></div>
<div class="ttc" id="astructarmnn_1_1_optimizer_options_xhtml_a906953de2f5edc60b2c27bd720a70aa4"><div class="ttname"><a href="structarmnn_1_1_optimizer_options.xhtml#a906953de2f5edc60b2c27bd720a70aa4">armnn::OptimizerOptions::ToString</a></div><div class="ttdeci">const std::string ToString() const</div><div class="ttdef"><b>Definition:</b> <a href="_i_network_8hpp_source.xhtml#l00189">INetwork.hpp:189</a></div></div>
<div class="ttc" id="aclassarmnn_1_1_i_connectable_layer_xhtml_a8c7faf37c1d965431aaa02ae934d67ee"><div class="ttname"><a href="classarmnn_1_1_i_connectable_layer.xhtml#a8c7faf37c1d965431aaa02ae934d67ee">armnn::IConnectableLayer::~IConnectableLayer</a></div><div class="ttdeci">~IConnectableLayer()</div><div class="ttdoc">Objects are not deletable via the handle.</div><div class="ttdef"><b>Definition:</b> <a href="_i_network_8hpp_source.xhtml#l00136">INetwork.hpp:136</a></div></div>
<div class="ttc" id="aclassarmnn_1_1_tensor_info_xhtml"><div class="ttname"><a href="classarmnn_1_1_tensor_info.xhtml">armnn::TensorInfo</a></div><div class="ttdef"><b>Definition:</b> <a href="_tensor_8hpp_source.xhtml#l00152">Tensor.hpp:152</a></div></div>
<div class="ttc" id="astructarmnn_1_1_convolution2d_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_convolution2d_descriptor.xhtml">armnn::Convolution2dDescriptor</a></div><div class="ttdoc">A Convolution2dDescriptor for the Convolution2dLayer.</div><div class="ttdef"><b>Definition:</b> <a href="_descriptors_8hpp_source.xhtml#l00522">Descriptors.hpp:522</a></div></div>
<div class="ttc" id="aclassarmnn_1_1_i_network_xhtml_ac7dca3e9f2ab2f2c64b42fc59a67188a"><div class="ttname"><a href="classarmnn_1_1_i_network.xhtml#ac7dca3e9f2ab2f2c64b42fc59a67188a">armnn::INetwork::AddComparisonLayer</a></div><div class="ttdeci">IConnectableLayer * AddComparisonLayer(const ComparisonDescriptor &amp;comparisonDescriptor, const char *name=nullptr)</div><div class="ttdoc">Add a Comparison layer to the network.</div><div class="ttdef"><b>Definition:</b> <a href="_network_8cpp_source.xhtml#l00257">Network.cpp:257</a></div></div>
<div class="ttc" id="aclassarmnn_1_1_i_optimized_network_xhtml_a32eecbed1d4cd2602204a2ab3f5f249e"><div class="ttname"><a href="classarmnn_1_1_i_optimized_network.xhtml#a32eecbed1d4cd2602204a2ab3f5f249e">armnn::IOptimizedNetwork::IOptimizedNetwork</a></div><div class="ttdeci">IOptimizedNetwork(const IOptimizedNetwork &amp;other, const ModelOptions &amp;modelOptions)</div><div class="ttdoc">Creates a copy of the IOptimizedNetwork.</div><div class="ttdef"><b>Definition:</b> <a href="_network_8cpp_source.xhtml#l00662">Network.cpp:662</a></div></div>
<div class="ttc" id="aclassarmnn_1_1_i_network_xhtml_a72f7f58c37d9d856fcb648b5fa68cf59"><div class="ttname"><a href="classarmnn_1_1_i_network.xhtml#a72f7f58c37d9d856fcb648b5fa68cf59">armnn::INetwork::AddCastLayer</a></div><div class="ttdeci">IConnectableLayer * AddCastLayer(const char *name=nullptr)</div><div class="ttdoc">Adds a cast layer to the network.</div><div class="ttdef"><b>Definition:</b> <a href="_network_8cpp_source.xhtml#l00252">Network.cpp:252</a></div></div>
<div class="ttc" id="astructarmnn_1_1_batch_normalization_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_batch_normalization_descriptor.xhtml">armnn::BatchNormalizationDescriptor</a></div><div class="ttdoc">A BatchNormalizationDescriptor for the BatchNormalizationLayer.</div><div class="ttdef"><b>Definition:</b> <a href="_descriptors_8hpp_source.xhtml#l00816">Descriptors.hpp:816</a></div></div>
<div class="ttc" id="aclassarmnn_1_1_optimizer_options_opaque_xhtml_a8a2218764dede9c24b0e52833469b5fe"><div class="ttname"><a href="classarmnn_1_1_optimizer_options_opaque.xhtml#a8a2218764dede9c24b0e52833469b5fe">armnn::OptimizerOptionsOpaque::SetDebugToFileEnabled</a></div><div class="ttdeci">void SetDebugToFileEnabled(bool DebugFileState)</div><div class="ttdef"><b>Definition:</b> <a href="_network_8cpp_source.xhtml#l00130">Network.cpp:130</a></div></div>
<div class="ttc" id="astructarmnn_1_1_backend_options_1_1_backend_option_xhtml"><div class="ttname"><a href="structarmnn_1_1_backend_options_1_1_backend_option.xhtml">armnn::BackendOptions::BackendOption</a></div><div class="ttdef"><b>Definition:</b> <a href="_backend_options_8hpp_source.xhtml#l00215">BackendOptions.hpp:215</a></div></div>
<div class="ttc" id="astructarmnn_1_1_q_lstm_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_q_lstm_descriptor.xhtml">armnn::QLstmDescriptor</a></div><div class="ttdoc">A QLstmDescriptor for the QLstmLayer.</div><div class="ttdef"><b>Definition:</b> <a href="_descriptors_8hpp_source.xhtml#l01347">Descriptors.hpp:1347</a></div></div>
<div class="ttc" id="astructarmnn_1_1_empty_optional_xhtml"><div class="ttname"><a href="structarmnn_1_1_empty_optional.xhtml">armnn::EmptyOptional</a></div><div class="ttdoc">EmptyOptional is used to initialize the Optional class in case we want to have default value for an O...</div><div class="ttdef"><b>Definition:</b> <a href="_optional_8hpp_source.xhtml#l00032">Optional.hpp:32</a></div></div>
<div class="ttc" id="astructarmnn_1_1_optimizer_options_xhtml_a11f463726addcc1d2845266997d79e9c"><div class="ttname"><a href="structarmnn_1_1_optimizer_options.xhtml#a11f463726addcc1d2845266997d79e9c">armnn::OptimizerOptions::m_ReduceFp32ToBf16</a></div><div class="ttdeci">bool m_ReduceFp32ToBf16</div><div class="ttdoc">@Note This feature has been replaced by enabling Fast Math in compute library backend options.</div><div class="ttdef"><b>Definition:</b> <a href="_i_network_8hpp_source.xhtml#l00235">INetwork.hpp:235</a></div></div>
<div class="ttc" id="anamespacearmnn_xhtml_a67a0db04d321a74b7e7fcfd3f1a3f70b"><div class="ttname"><a href="namespacearmnn.xhtml#a67a0db04d321a74b7e7fcfd3f1a3f70b">armnn::Status</a></div><div class="ttdeci">Status</div><div class="ttdef"><b>Definition:</b> <a href="_types_8hpp_source.xhtml#l00042">Types.hpp:42</a></div></div>
<div class="ttc" id="a_descriptors_fwd_8hpp_xhtml"><div class="ttname"><a href="_descriptors_fwd_8hpp.xhtml">DescriptorsFwd.hpp</a></div></div>
<div class="ttc" id="aclassarmnn_1_1_i_optimized_network_xhtml_a72032c65bf8b8acf09b564b7d80078c5"><div class="ttname"><a href="classarmnn_1_1_i_optimized_network.xhtml#a72032c65bf8b8acf09b564b7d80078c5">armnn::IOptimizedNetwork::ExecuteStrategy</a></div><div class="ttdeci">void ExecuteStrategy(IStrategy &amp;strategy) const</div><div class="ttdef"><b>Definition:</b> <a href="_network_8cpp_source.xhtml#l02967">Network.cpp:2967</a></div></div>
<div class="ttc" id="astructarmnn_1_1_optimizer_options_xhtml_a9416d94a8aad7cdfa47eb35e825cbda5"><div class="ttname"><a href="structarmnn_1_1_optimizer_options.xhtml#a9416d94a8aad7cdfa47eb35e825cbda5">armnn::OptimizerOptions::m_shapeInferenceMethod</a></div><div class="ttdeci">ShapeInferenceMethod m_shapeInferenceMethod</div><div class="ttdoc">Infer output size when not available.</div><div class="ttdef"><b>Definition:</b> <a href="_i_network_8hpp_source.xhtml#l00238">INetwork.hpp:238</a></div></div>
<div class="ttc" id="aclassarmnn_1_1_optimizer_options_opaque_xhtml_a2bb6d411e26a7eb77664bd7040e7e8ab"><div class="ttname"><a href="classarmnn_1_1_optimizer_options_opaque.xhtml#a2bb6d411e26a7eb77664bd7040e7e8ab">armnn::OptimizerOptionsOpaque::operator=</a></div><div class="ttdeci">OptimizerOptionsOpaque &amp; operator=(OptimizerOptionsOpaque other)</div><div class="ttdef"><b>Definition:</b> <a href="_network_8cpp_source.xhtml#l00095">Network.cpp:95</a></div></div>
<div class="ttc" id="aclassarmnn_1_1_i_network_xhtml_aa51350bdd4976f3dd5a4e9d00a906b2c"><div class="ttname"><a href="classarmnn_1_1_i_network.xhtml#aa51350bdd4976f3dd5a4e9d00a906b2c">armnn::INetwork::AddActivationLayer</a></div><div class="ttdeci">IConnectableLayer * AddActivationLayer(const ActivationDescriptor &amp;activationDescriptor, const char *name=nullptr)</div><div class="ttdoc">Adds an activation layer to the network.</div><div class="ttdef"><b>Definition:</b> <a href="_network_8cpp_source.xhtml#l00369">Network.cpp:369</a></div></div>
<div class="ttc" id="aclassarmnn_1_1_i_input_slot_xhtml_af9d1da899b5c925de16bc0a1fb49dc61"><div class="ttname"><a href="classarmnn_1_1_i_input_slot.xhtml#af9d1da899b5c925de16bc0a1fb49dc61">armnn::IInputSlot::~IInputSlot</a></div><div class="ttdeci">~IInputSlot()</div><div class="ttdoc">Not user deletable.</div><div class="ttdef"><b>Definition:</b> <a href="_i_network_8hpp_source.xhtml#l00036">INetwork.hpp:36</a></div></div>
<div class="ttc" id="aclassarmnn_1_1_i_network_xhtml_af776e284b9e2c4a3563abb8cf5e8ac5e"><div class="ttname"><a href="classarmnn_1_1_i_network.xhtml#af776e284b9e2c4a3563abb8cf5e8ac5e">armnn::INetwork::AddGatherNdLayer</a></div><div class="ttdeci">IConnectableLayer * AddGatherNdLayer(const char *name=nullptr)</div><div class="ttdoc">Add GatherNd layer to the network.</div><div class="ttdef"><b>Definition:</b> <a href="_network_8cpp_source.xhtml#l00557">Network.cpp:557</a></div></div>
<div class="ttc" id="astructarmnn_1_1_quantized_lstm_input_params_xhtml"><div class="ttname"><a href="structarmnn_1_1_quantized_lstm_input_params.xhtml">armnn::QuantizedLstmInputParams</a></div><div class="ttdef"><b>Definition:</b> <a href="_quantized_lstm_params_8hpp_source.xhtml#l00013">QuantizedLstmParams.hpp:13</a></div></div>
<div class="ttc" id="aclassarmnn_1_1_i_input_slot_xhtml_a81fbf6103761e55061b62ba989b00f10"><div class="ttname"><a href="classarmnn_1_1_i_input_slot.xhtml#a81fbf6103761e55061b62ba989b00f10">armnn::IInputSlot::GetConnection</a></div><div class="ttdeci">virtual const IOutputSlot * GetConnection() const =0</div></div>
<div class="ttc" id="aclassarmnn_1_1_i_optimized_network_xhtml_a8d8179a4a0703602a5d7dbb6e92eaf69"><div class="ttname"><a href="classarmnn_1_1_i_optimized_network.xhtml#a8d8179a4a0703602a5d7dbb6e92eaf69">armnn::IOptimizedNetwork::GetNumInputs</a></div><div class="ttdeci">size_t GetNumInputs() const</div><div class="ttdef"><b>Definition:</b> <a href="_network_8cpp_source.xhtml#l00701">Network.cpp:701</a></div></div>
<div class="ttc" id="aclassarmnn_1_1_optimizer_options_opaque_xhtml_a3cb5ef29e47f60acd88b16d6fee254f5"><div class="ttname"><a href="classarmnn_1_1_optimizer_options_opaque.xhtml#a3cb5ef29e47f60acd88b16d6fee254f5">armnn::OptimizerOptionsOpaque::GetImportEnabled</a></div><div class="ttdeci">bool GetImportEnabled() const</div><div class="ttdef"><b>Definition:</b> <a href="_network_8cpp_source.xhtml#l00160">Network.cpp:160</a></div></div>
<div class="ttc" id="aclassarmnn_1_1_i_network_xhtml_a786be4af14ba595c9946f935ba99f170"><div class="ttname"><a href="classarmnn_1_1_i_network.xhtml#a786be4af14ba595c9946f935ba99f170">armnn::INetwork::AddChannelShuffleLayer</a></div><div class="ttdeci">IConnectableLayer * AddChannelShuffleLayer(const ChannelShuffleDescriptor &amp;descriptor, const char *name=nullptr)</div><div class="ttdoc">Add a ChannelShuffle layer to the network.</div><div class="ttdef"><b>Definition:</b> <a href="_network_8cpp_source.xhtml#l00630">Network.cpp:630</a></div></div>
<div class="ttc" id="aclassarmnn_1_1_i_network_xhtml_a1da203a7e3caa6ae4f0630a4758aac55"><div class="ttname"><a href="classarmnn_1_1_i_network.xhtml#a1da203a7e3caa6ae4f0630a4758aac55">armnn::INetwork::AddGatherLayer</a></div><div class="ttdeci">IConnectableLayer * AddGatherLayer(const GatherDescriptor &amp;descriptor, const char *name=nullptr)</div><div class="ttdoc">Add Gather layer to the network.</div><div class="ttdef"><b>Definition:</b> <a href="_network_8cpp_source.xhtml#l00551">Network.cpp:551</a></div></div>
<div class="ttc" id="anamespacearmnn_xhtml_a4dc0adc6737b5944e7671bee71788407aad42f6697b035b7580e4fef93be20b4d"><div class="ttname"><a href="namespacearmnn.xhtml#a4dc0adc6737b5944e7671bee71788407aad42f6697b035b7580e4fef93be20b4d">armnn::BoostLogSeverityMapping::debug</a></div><div class="ttdeci">@ debug</div></div>
<div class="ttc" id="aclassarmnn_1_1_i_network_xhtml_a41ce159095e95f7cd4174ce5d4662697"><div class="ttname"><a href="classarmnn_1_1_i_network.xhtml#a41ce159095e95f7cd4174ce5d4662697">armnn::INetwork::Create</a></div><div class="ttdeci">static INetworkPtr Create(const NetworkOptions &amp;networkOptions={})</div><div class="ttdef"><b>Definition:</b> <a href="_network_8cpp_source.xhtml#l00652">Network.cpp:652</a></div></div>
<div class="ttc" id="aclassarmnn_1_1_i_connectable_layer_xhtml_a99cc75f524d831824c5f3730a88e9ca3"><div class="ttname"><a href="classarmnn_1_1_i_connectable_layer.xhtml#a99cc75f524d831824c5f3730a88e9ca3">armnn::IConnectableLayer::SetBackendId</a></div><div class="ttdeci">virtual void SetBackendId(const BackendId &amp;id)=0</div><div class="ttdoc">Set the backend of the IConnectableLayer.</div></div>
<div class="ttc" id="aclassarmnn_1_1_i_network_xhtml_af1853466264ac187607c96b501a74e2b"><div class="ttname"><a href="classarmnn_1_1_i_network.xhtml#af1853466264ac187607c96b501a74e2b">armnn::INetwork::AddDepthToSpaceLayer</a></div><div class="ttdeci">IConnectableLayer * AddDepthToSpaceLayer(const DepthToSpaceDescriptor &amp;depthToSpaceDescriptor, const char *name=nullptr)</div><div class="ttdoc">Adds a depth to space layer to the network.</div><div class="ttdef"><b>Definition:</b> <a href="_network_8cpp_source.xhtml#l00284">Network.cpp:284</a></div></div>
<div class="ttc" id="astructarmnn_1_1_base_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_base_descriptor.xhtml">armnn::BaseDescriptor</a></div><div class="ttdoc">Base class for all descriptors.</div><div class="ttdef"><b>Definition:</b> <a href="_descriptors_8hpp_source.xhtml#l00022">Descriptors.hpp:22</a></div></div>
<div class="ttc" id="astructarmnn_1_1_origins_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_origins_descriptor.xhtml">armnn::OriginsDescriptor</a></div><div class="ttdoc">An OriginsDescriptor for the ConcatLayer.</div><div class="ttdef"><b>Definition:</b> <a href="_descriptors_8hpp_source.xhtml#l00201">Descriptors.hpp:201</a></div></div>
<div class="ttc" id="aclassarmnn_1_1_optimizer_options_opaque_xhtml_af7a1f38591d1a19952ac13515becc894"><div class="ttname"><a href="classarmnn_1_1_optimizer_options_opaque.xhtml#af7a1f38591d1a19952ac13515becc894">armnn::OptimizerOptionsOpaque::GetExportEnabled</a></div><div class="ttdeci">bool GetExportEnabled() const</div><div class="ttdef"><b>Definition:</b> <a href="_network_8cpp_source.xhtml#l00165">Network.cpp:165</a></div></div>
<div class="ttc" id="astructarmnn_1_1_reshape_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_reshape_descriptor.xhtml">armnn::ReshapeDescriptor</a></div><div class="ttdoc">A ReshapeDescriptor for the ReshapeLayer.</div><div class="ttdef"><b>Definition:</b> <a href="_descriptors_8hpp_source.xhtml#l00990">Descriptors.hpp:990</a></div></div>
<div class="ttc" id="aclassarmnn_1_1_i_network_xhtml_a6d614a503a34ea3712b388aa4340ddbe"><div class="ttname"><a href="classarmnn_1_1_i_network.xhtml#a6d614a503a34ea3712b388aa4340ddbe">armnn::INetwork::AddPreluLayer</a></div><div class="ttdeci">IConnectableLayer * AddPreluLayer(const char *name=nullptr)</div><div class="ttdoc">Adds a PReLU layer to the network.</div><div class="ttdef"><b>Definition:</b> <a href="_network_8cpp_source.xhtml#l00567">Network.cpp:567</a></div></div>
<div class="ttc" id="aclassarmnn_1_1_optimizer_options_opaque_xhtml_a906953de2f5edc60b2c27bd720a70aa4"><div class="ttname"><a href="classarmnn_1_1_optimizer_options_opaque.xhtml#a906953de2f5edc60b2c27bd720a70aa4">armnn::OptimizerOptionsOpaque::ToString</a></div><div class="ttdeci">const std::string ToString() const</div><div class="ttdef"><b>Definition:</b> <a href="_network_8cpp_source.xhtml#l00205">Network.cpp:205</a></div></div>
<div class="ttc" id="aclassarmnn_1_1_i_output_slot_xhtml_ad0c3555b126975ad6b3e250fe2a59534"><div class="ttname"><a href="classarmnn_1_1_i_output_slot.xhtml#ad0c3555b126975ad6b3e250fe2a59534">armnn::IOutputSlot::GetOwningLayerGuid</a></div><div class="ttdeci">virtual LayerGuid GetOwningLayerGuid() const =0</div></div>
<div class="ttc" id="astructarmnn_1_1_permute_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_permute_descriptor.xhtml">armnn::PermuteDescriptor</a></div><div class="ttdoc">A PermuteDescriptor for the PermuteLayer.</div><div class="ttdef"><b>Definition:</b> <a href="_descriptors_8hpp_source.xhtml#l00149">Descriptors.hpp:149</a></div></div>
<div class="ttc" id="astructarmnn_1_1_transpose_convolution2d_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_transpose_convolution2d_descriptor.xhtml">armnn::TransposeConvolution2dDescriptor</a></div><div class="ttdoc">A TransposeConvolution2dDescriptor for the TransposeConvolution2dLayer.</div><div class="ttdef"><b>Definition:</b> <a href="_descriptors_8hpp_source.xhtml#l01407">Descriptors.hpp:1407</a></div></div>
<div class="ttc" id="aclassarmnn_1_1_graph_xhtml"><div class="ttname"><a href="classarmnn_1_1_graph.xhtml">armnn::Graph</a></div><div class="ttdef"><b>Definition:</b> <a href="_graph_8hpp_source.xhtml#l00030">Graph.hpp:30</a></div></div>
<div class="ttc" id="aclassarmnn_1_1_i_network_xhtml_a19bad0cc50526ca9f4f84a688812cdf5"><div class="ttname"><a href="classarmnn_1_1_i_network.xhtml#a19bad0cc50526ca9f4f84a688812cdf5">armnn::INetwork::AddSpaceToDepthLayer</a></div><div class="ttdeci">IConnectableLayer * AddSpaceToDepthLayer(const SpaceToDepthDescriptor &amp;spaceToDepthDescriptor, const char *name=nullptr)</div><div class="ttdoc">Adds a space to depth layer to the network.</div><div class="ttdef"><b>Definition:</b> <a href="_network_8cpp_source.xhtml#l00479">Network.cpp:479</a></div></div>
<div class="ttc" id="aclassarmnn_1_1_i_network_xhtml_a26e69cda5fe9642f9198c24ae5fdf9bc"><div class="ttname"><a href="classarmnn_1_1_i_network.xhtml#a26e69cda5fe9642f9198c24ae5fdf9bc">armnn::INetwork::AddSwitchLayer</a></div><div class="ttdeci">IConnectableLayer * AddSwitchLayer(const char *name=nullptr)</div><div class="ttdoc">Adds a switch layer to the network.</div><div class="ttdef"><b>Definition:</b> <a href="_network_8cpp_source.xhtml#l00562">Network.cpp:562</a></div></div>
<div class="ttc" id="aclassarmnn_1_1_i_optimized_network_xhtml_a437cc59f5247f213adf34e84696f60da"><div class="ttname"><a href="classarmnn_1_1_i_optimized_network.xhtml#a437cc59f5247f213adf34e84696f60da">armnn::IOptimizedNetwork::~IOptimizedNetwork</a></div><div class="ttdeci">~IOptimizedNetwork()</div></div>
<div class="ttc" id="aclassarmnn_1_1_i_input_slot_xhtml_a9b2d963c1755ade4b2cf70e192fed371"><div class="ttname"><a href="classarmnn_1_1_i_input_slot.xhtml#a9b2d963c1755ade4b2cf70e192fed371">armnn::IInputSlot::GetSlotIndex</a></div><div class="ttdeci">virtual unsigned int GetSlotIndex() const =0</div></div>
<div class="ttc" id="aclassarmnn_1_1_i_output_slot_xhtml_a5ee4a6c9a2481245487b1b1a70d20fd0"><div class="ttname"><a href="classarmnn_1_1_i_output_slot.xhtml#a5ee4a6c9a2481245487b1b1a70d20fd0">armnn::IOutputSlot::SetTensorInfo</a></div><div class="ttdeci">virtual void SetTensorInfo(const TensorInfo &amp;tensorInfo)=0</div></div>
<div class="ttc" id="aclassarmnn_1_1_i_network_xhtml_ad4726f9b7dd11db250d2a494a8a39494"><div class="ttname"><a href="classarmnn_1_1_i_network.xhtml#ad4726f9b7dd11db250d2a494a8a39494">armnn::INetwork::AddMeanLayer</a></div><div class="ttdeci">IConnectableLayer * AddMeanLayer(const MeanDescriptor &amp;meanDescriptor, const char *name=nullptr)</div><div class="ttdoc">Add a Mean layer to the network.</div><div class="ttdef"><b>Definition:</b> <a href="_network_8cpp_source.xhtml#l00522">Network.cpp:522</a></div></div>
<div class="ttc" id="aclassarmnn_1_1_i_network_xhtml_af32ea41e89c446958a5376291d19ef49"><div class="ttname"><a href="classarmnn_1_1_i_network.xhtml#af32ea41e89c446958a5376291d19ef49">armnn::INetwork::VisitLayersTopologically</a></div><div class="ttdeci">friend void VisitLayersTopologically(const INetwork *inputNetwork, IStrategy &amp;strategy)</div></div>
<div class="ttc" id="aclassarmnn_1_1_i_network_xhtml_a72032c65bf8b8acf09b564b7d80078c5"><div class="ttname"><a href="classarmnn_1_1_i_network.xhtml#a72032c65bf8b8acf09b564b7d80078c5">armnn::INetwork::ExecuteStrategy</a></div><div class="ttdeci">void ExecuteStrategy(IStrategy &amp;strategy) const</div><div class="ttdef"><b>Definition:</b> <a href="_network_8cpp_source.xhtml#l00642">Network.cpp:642</a></div></div>
<div class="ttc" id="aclassarmnn_1_1_i_network_xhtml_af9dd4b5273829b846ab83b3ae7f3defc"><div class="ttname"><a href="classarmnn_1_1_i_network.xhtml#af9dd4b5273829b846ab83b3ae7f3defc">armnn::INetwork::AddShapeLayer</a></div><div class="ttdeci">IConnectableLayer * AddShapeLayer(const char *name=nullptr)</div><div class="ttdoc">Adds a shape layer to the network.</div><div class="ttdef"><b>Definition:</b> <a href="_network_8cpp_source.xhtml#l00586">Network.cpp:586</a></div></div>
<div class="ttc" id="astructarmnn_1_1_pooling2d_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_pooling2d_descriptor.xhtml">armnn::Pooling2dDescriptor</a></div><div class="ttdoc">A Pooling2dDescriptor for the Pooling2dLayer.</div><div class="ttdef"><b>Definition:</b> <a href="_descriptors_8hpp_source.xhtml#l00359">Descriptors.hpp:359</a></div></div>
<div class="ttc" id="aclassarmnn_1_1_i_optimized_network_xhtml_aa25c1acd249228c82a687d713673725a"><div class="ttname"><a href="classarmnn_1_1_i_optimized_network.xhtml#aa25c1acd249228c82a687d713673725a">armnn::IOptimizedNetwork::GetModelOptionsForTesting</a></div><div class="ttdeci">friend ModelOptions &amp; GetModelOptionsForTesting(IOptimizedNetwork *optNetPtr)</div><div class="ttdef"><b>Definition:</b> <a href="_test_utils_8cpp_source.xhtml#l00054">TestUtils.cpp:54</a></div></div>
<div class="ttc" id="astructarmnn_1_1_logical_binary_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_logical_binary_descriptor.xhtml">armnn::LogicalBinaryDescriptor</a></div><div class="ttdoc">A LogicalBinaryDescriptor for the LogicalBinaryLayer.</div><div class="ttdef"><b>Definition:</b> <a href="_descriptors_8hpp_source.xhtml#l01485">Descriptors.hpp:1485</a></div></div>
<div class="ttc" id="aclassarmnn_1_1_i_network_xhtml_af760179196d57e2ddbc64b989fb72586"><div class="ttname"><a href="classarmnn_1_1_i_network.xhtml#af760179196d57e2ddbc64b989fb72586">armnn::INetwork::~INetwork</a></div><div class="ttdeci">~INetwork()</div></div>
<div class="ttc" id="aclassarmnn_1_1_i_network_xhtml_ad97411f1fcb2c30c212483d8c673506f"><div class="ttname"><a href="classarmnn_1_1_i_network.xhtml#ad97411f1fcb2c30c212483d8c673506f">armnn::INetwork::AddResizeLayer</a></div><div class="ttdeci">IConnectableLayer * AddResizeLayer(const ResizeDescriptor &amp;resizeDescriptor, const char *name=nullptr)</div><div class="ttdoc">Adds a resize layer to the network.</div><div class="ttdef"><b>Definition:</b> <a href="_network_8cpp_source.xhtml#l00431">Network.cpp:431</a></div></div>
<div class="ttc" id="aclassarmnn_1_1_i_network_xhtml_aea1059833739d3dccebb3a03ec35a1e6"><div class="ttname"><a href="classarmnn_1_1_i_network.xhtml#aea1059833739d3dccebb3a03ec35a1e6">armnn::INetwork::AddConcatLayer</a></div><div class="ttdeci">IConnectableLayer * AddConcatLayer(const ConcatDescriptor &amp;concatDescriptor, const char *name=nullptr)</div><div class="ttdoc">Adds a concatenation layer to the network.</div><div class="ttdef"><b>Definition:</b> <a href="_network_8cpp_source.xhtml#l00264">Network.cpp:264</a></div></div>
<div class="ttc" id="aclassarmnn_1_1_i_network_xhtml_a9a9bcc00ae3d96343c93b437d6f77088"><div class="ttname"><a href="classarmnn_1_1_i_network.xhtml#a9a9bcc00ae3d96343c93b437d6f77088">armnn::INetwork::AddBatchToSpaceNdLayer</a></div><div class="ttdeci">IConnectableLayer * AddBatchToSpaceNdLayer(const BatchToSpaceNdDescriptor &amp;batchToSpaceNdDescriptor, const char *name=nullptr)</div><div class="ttdoc">Adds a batch to space ND layer to the network.</div><div class="ttdef"><b>Definition:</b> <a href="_network_8cpp_source.xhtml#l00343">Network.cpp:343</a></div></div>
<div class="ttc" id="aclassarmnn_1_1_i_network_xhtml"><div class="ttname"><a href="classarmnn_1_1_i_network.xhtml">armnn::INetwork</a></div><div class="ttdoc">Main network class which provides the interface for building up a neural network.</div><div class="ttdef"><b>Definition:</b> <a href="_i_network_8hpp_source.xhtml#l00335">INetwork.hpp:335</a></div></div>
<div class="ttc" id="aclassarmnn_1_1_optional_xhtml"><div class="ttname"><a href="classarmnn_1_1_optional.xhtml">armnn::Optional</a></div><div class="ttdef"><b>Definition:</b> <a href="_optional_8hpp_source.xhtml#l00270">Optional.hpp:270</a></div></div>
<div class="ttc" id="aclassarmnn_1_1_i_network_xhtml_aff3fde909d22ed157046682e70129259"><div class="ttname"><a href="classarmnn_1_1_i_network.xhtml#aff3fde909d22ed157046682e70129259">armnn::INetwork::PrintGraph</a></div><div class="ttdeci">Status PrintGraph()</div><div class="ttdef"><b>Definition:</b> <a href="_network_8cpp_source.xhtml#l00236">Network.cpp:236</a></div></div>
<div class="ttc" id="a_logging_8hpp_xhtml"><div class="ttname"><a href="_logging_8hpp.xhtml">Logging.hpp</a></div></div>
<div class="ttc" id="aclassarmnn_1_1_optimizer_options_opaque_xhtml_a1ad03005dfb602c109a1b4fed7fca9e3"><div class="ttname"><a href="classarmnn_1_1_optimizer_options_opaque.xhtml#a1ad03005dfb602c109a1b4fed7fca9e3">armnn::OptimizerOptionsOpaque::AddModelOption</a></div><div class="ttdeci">void AddModelOption(armnn::BackendOptions)</div><div class="ttdef"><b>Definition:</b> <a href="_network_8cpp_source.xhtml#l00150">Network.cpp:150</a></div></div>
<div class="ttc" id="aclassarmnn_1_1_i_network_xhtml_afc94c35c0bbe852a60046bf2e756b2e0"><div class="ttname"><a href="classarmnn_1_1_i_network.xhtml#afc94c35c0bbe852a60046bf2e756b2e0">armnn::INetwork::AddFillLayer</a></div><div class="ttdeci">IConnectableLayer * AddFillLayer(const FillDescriptor &amp;fillDescriptor, const char *name=nullptr)</div><div class="ttdoc">Add an Fill layer to the network.</div><div class="ttdef"><b>Definition:</b> <a href="_network_8cpp_source.xhtml#l00325">Network.cpp:325</a></div></div>
<div class="ttc" id="aclassarmnn_1_1_optimizer_options_opaque_xhtml_a41297bcbc0f576cba32fabcdb2f893b8"><div class="ttname"><a href="classarmnn_1_1_optimizer_options_opaque.xhtml#a41297bcbc0f576cba32fabcdb2f893b8">armnn::OptimizerOptionsOpaque::GetReduceFp32ToBf16</a></div><div class="ttdeci">bool GetReduceFp32ToBf16() const</div><div class="ttdef"><b>Definition:</b> <a href="_network_8cpp_source.xhtml#l00175">Network.cpp:175</a></div></div>
<div class="ttc" id="astructarmnn_1_1_optimizer_options_opaque_impl_xhtml"><div class="ttname"><a href="structarmnn_1_1_optimizer_options_opaque_impl.xhtml">armnn::OptimizerOptionsOpaqueImpl</a></div><div class="ttdef"><b>Definition:</b> <a href="_network_8hpp_source.xhtml#l00296">Network.hpp:296</a></div></div>
<div class="ttc" id="aclassarmnn_1_1_i_network_xhtml_a40067b05f30a3ab65568c826df7a8ea7"><div class="ttname"><a href="classarmnn_1_1_i_network.xhtml#a40067b05f30a3ab65568c826df7a8ea7">armnn::INetwork::AddQuantizedLstmLayer</a></div><div class="ttdeci">IConnectableLayer * AddQuantizedLstmLayer(const QuantizedLstmInputParams &amp;params, const char *name=nullptr)</div><div class="ttdoc">Add a QuantizedLstm layer to the network.</div><div class="ttdef"><b>Definition:</b> <a href="_network_8cpp_source.xhtml#l00603">Network.cpp:603</a></div></div>
<div class="ttc" id="aclassarmnn_1_1_i_connectable_layer_xhtml_afcc1c3a20bd2860e0ddd21674389246f"><div class="ttname"><a href="classarmnn_1_1_i_connectable_layer.xhtml#afcc1c3a20bd2860e0ddd21674389246f">armnn::IConnectableLayer::GetName</a></div><div class="ttdeci">virtual const char * GetName() const =0</div><div class="ttdoc">Returns the name of the layer.</div></div>
<div class="ttc" id="aclassarmnn_1_1_i_network_xhtml_a095a9b700dc857edc23c5d3bf088919f"><div class="ttname"><a href="classarmnn_1_1_i_network.xhtml#a095a9b700dc857edc23c5d3bf088919f">armnn::INetwork::AddElementwiseUnaryLayer</a></div><div class="ttdeci">IConnectableLayer * AddElementwiseUnaryLayer(const ElementwiseUnaryDescriptor &amp;elementwiseUnaryDescriptor, const char *name=nullptr)</div><div class="ttdoc">Add an ElementwiseUnary layer to the network.</div><div class="ttdef"><b>Definition:</b> <a href="_network_8cpp_source.xhtml#l00319">Network.cpp:319</a></div></div>
<div class="ttc" id="aclassarmnn_1_1_i_network_xhtml_ac5c93cad39a690af862d49ffaec0d3c0"><div class="ttname"><a href="classarmnn_1_1_i_network.xhtml#ac5c93cad39a690af862d49ffaec0d3c0">armnn::INetwork::AddStridedSliceLayer</a></div><div class="ttdeci">IConnectableLayer * AddStridedSliceLayer(const StridedSliceDescriptor &amp;stridedSliceDescriptor, const char *name=nullptr)</div><div class="ttdoc">Adds a strided slice layer to the network.</div><div class="ttdef"><b>Definition:</b> <a href="_network_8cpp_source.xhtml#l00538">Network.cpp:538</a></div></div>
<div class="ttc" id="aclassarmnn_1_1_i_network_xhtml_a25563024ec66627ee83727244a53e944"><div class="ttname"><a href="classarmnn_1_1_i_network.xhtml#a25563024ec66627ee83727244a53e944">armnn::INetwork::AddRankLayer</a></div><div class="ttdeci">IConnectableLayer * AddRankLayer(const char *name=nullptr)</div><div class="ttdoc">Adds a rank layer to the network.</div><div class="ttdef"><b>Definition:</b> <a href="_network_8cpp_source.xhtml#l00426">Network.cpp:426</a></div></div>
<div class="ttc" id="anamespacearmnn_xhtml_ace74f6f9feb95a964a49d79458232703"><div class="ttname"><a href="namespacearmnn.xhtml#ace74f6f9feb95a964a49d79458232703">armnn::INetworkPtr</a></div><div class="ttdeci">std::unique_ptr&lt; INetwork, void(*)(INetwork *network)&gt; INetworkPtr</div><div class="ttdef"><b>Definition:</b> <a href="_i_network_8hpp_source.xhtml#l00327">INetwork.hpp:327</a></div></div>
<div class="ttc" id="astructarmnn_1_1_arg_min_max_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_arg_min_max_descriptor.xhtml">armnn::ArgMinMaxDescriptor</a></div><div class="ttdoc">An ArgMinMaxDescriptor for ArgMinMaxLayer.</div><div class="ttdef"><b>Definition:</b> <a href="_descriptors_8hpp_source.xhtml#l00067">Descriptors.hpp:67</a></div></div>
<div class="ttc" id="aclassarmnn_1_1_network_impl_xhtml"><div class="ttname"><a href="classarmnn_1_1_network_impl.xhtml">armnn::NetworkImpl</a></div><div class="ttdoc">Private implementation of INetwork.</div><div class="ttdef"><b>Definition:</b> <a href="_network_8hpp_source.xhtml#l00032">Network.hpp:32</a></div></div>
<div class="ttc" id="aclassarmnn_1_1_i_connectable_layer_xhtml_adceb04ae84c524e4d01881e3754a4d59"><div class="ttname"><a href="classarmnn_1_1_i_connectable_layer.xhtml#adceb04ae84c524e4d01881e3754a4d59">armnn::IConnectableLayer::GetType</a></div><div class="ttdeci">virtual LayerType GetType() const =0</div><div class="ttdoc">Returns the armnn::LayerType of this layer.</div></div>
<div class="ttc" id="aclassarmnn_1_1_i_network_xhtml_aba22dcdeed6e7c489aea6eb798c0a10a"><div class="ttname"><a href="classarmnn_1_1_i_network.xhtml#aba22dcdeed6e7c489aea6eb798c0a10a">armnn::INetwork::AddUnidirectionalSequenceLstmLayer</a></div><div class="ttdeci">IConnectableLayer * AddUnidirectionalSequenceLstmLayer(const UnidirectionalSequenceLstmDescriptor &amp;descriptor, const LstmInputParams &amp;params, const char *name=nullptr)</div><div class="ttdoc">Add a UnidirectionalSequenceLstm layer to the network.</div><div class="ttdef"><b>Definition:</b> <a href="_network_8cpp_source.xhtml#l00622">Network.cpp:622</a></div></div>
<div class="ttc" id="astructarmnn_1_1_lstm_input_params_xhtml"><div class="ttname"><a href="structarmnn_1_1_lstm_input_params.xhtml">armnn::LstmInputParams</a></div><div class="ttdef"><b>Definition:</b> <a href="_lstm_params_8hpp_source.xhtml#l00013">LstmParams.hpp:13</a></div></div>
<div class="ttc" id="a_backend_options_8hpp_xhtml"><div class="ttname"><a href="_backend_options_8hpp.xhtml">BackendOptions.hpp</a></div></div>
<div class="ttc" id="aclassarmnn_1_1_i_connectable_layer_xhtml_a9c2cba04b6d7ace4fc2a2436b82a5a63"><div class="ttname"><a href="classarmnn_1_1_i_connectable_layer.xhtml#a9c2cba04b6d7ace4fc2a2436b82a5a63">armnn::IConnectableLayer::GetNumInputSlots</a></div><div class="ttdeci">virtual unsigned int GetNumInputSlots() const =0</div><div class="ttdoc">Returns the number of connectable input slots.</div></div>
<div class="ttc" id="aclassarmnn_1_1experimental_1_1_working_mem_handle_xhtml"><div class="ttname"><a href="classarmnn_1_1experimental_1_1_working_mem_handle.xhtml">armnn::experimental::WorkingMemHandle</a></div><div class="ttdef"><b>Definition:</b> <a href="_working_mem_handle_8hpp_source.xhtml#l00029">WorkingMemHandle.hpp:29</a></div></div>
<div class="ttc" id="a_types_8hpp_xhtml_af22094b802160f09f7c89ad9eee10084"><div class="ttname"><a href="_types_8hpp.xhtml#af22094b802160f09f7c89ad9eee10084">LayerGuid</a></div><div class="ttdeci">arm::pipe::ProfilingGuid LayerGuid</div><div class="ttdoc">Define LayerGuid type.</div><div class="ttdef"><b>Definition:</b> <a href="_types_8hpp_source.xhtml#l00026">Types.hpp:26</a></div></div>
<div class="ttc" id="aclassarmnn_1_1_i_connectable_layer_xhtml_aba5c20cadbebd2e7ba67e20a47e31472"><div class="ttname"><a href="classarmnn_1_1_i_connectable_layer.xhtml#aba5c20cadbebd2e7ba67e20a47e31472">armnn::IConnectableLayer::ImmutableConstantTensors</a></div><div class="ttdeci">std::vector&lt; std::reference_wrapper&lt; const std::shared_ptr&lt; ConstTensorHandle &gt; &gt;&gt; ImmutableConstantTensors</div><div class="ttdef"><b>Definition:</b> <a href="_i_network_8hpp_source.xhtml#l00129">INetwork.hpp:129</a></div></div>
<div class="ttc" id="astructarmnn_1_1_instance_normalization_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_instance_normalization_descriptor.xhtml">armnn::InstanceNormalizationDescriptor</a></div><div class="ttdoc">An InstanceNormalizationDescriptor for InstanceNormalizationLayer.</div><div class="ttdef"><b>Definition:</b> <a href="_descriptors_8hpp_source.xhtml#l00835">Descriptors.hpp:835</a></div></div>
<div class="ttc" id="aclassarmnn_1_1_i_network_xhtml_a8f798e19187ac7ae6ae6153ee64ab645"><div class="ttname"><a href="classarmnn_1_1_i_network.xhtml#a8f798e19187ac7ae6ae6153ee64ab645">armnn::INetwork::AddBatchNormalizationLayer</a></div><div class="ttdeci">IConnectableLayer * AddBatchNormalizationLayer(const BatchNormalizationDescriptor &amp;desc, const ConstTensor &amp;mean, const ConstTensor &amp;variance, const ConstTensor &amp;beta, const ConstTensor &amp;gamma, const char *name=nullptr)</div><div class="ttdoc">Adds a batch normalization layer to the network.</div><div class="ttdef"><b>Definition:</b> <a href="_network_8cpp_source.xhtml#l00416">Network.cpp:416</a></div></div>
<div class="ttc" id="aclassarmnn_1_1_i_network_xhtml_aa6c1c42ea44777302e87ce0fad5ac510"><div class="ttname"><a href="classarmnn_1_1_i_network.xhtml#aa6c1c42ea44777302e87ce0fad5ac510">armnn::INetwork::AddInputLayer</a></div><div class="ttdeci">IConnectableLayer * AddInputLayer(LayerBindingId id, const char *name=nullptr)</div><div class="ttdoc">Adds an input layer to the network.</div><div class="ttdef"><b>Definition:</b> <a href="_network_8cpp_source.xhtml#l00241">Network.cpp:241</a></div></div>
<div class="ttc" id="aclassarmnn_1_1_i_network_xhtml_adc8c1c505bca8233fe238b3b7fb80200"><div class="ttname"><a href="classarmnn_1_1_i_network.xhtml#adc8c1c505bca8233fe238b3b7fb80200">armnn::INetwork::AddArgMinMaxLayer</a></div><div class="ttdeci">IConnectableLayer * AddArgMinMaxLayer(const ArgMinMaxDescriptor &amp;desc, const char *name=nullptr)</div><div class="ttdoc">Adds an ArgMinMax layer to the network.</div><div class="ttdef"><b>Definition:</b> <a href="_network_8cpp_source.xhtml#l00246">Network.cpp:246</a></div></div>
<div class="ttc" id="astructarmnn_1_1_optimizer_options_xhtml"><div class="ttname"><a href="structarmnn_1_1_optimizer_options.xhtml">armnn::OptimizerOptions</a></div><div class="ttdef"><b>Definition:</b> <a href="_i_network_8hpp_source.xhtml#l00139">INetwork.hpp:139</a></div></div>
<div class="ttc" id="astructarmnn_1_1_elementwise_binary_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_elementwise_binary_descriptor.xhtml">armnn::ElementwiseBinaryDescriptor</a></div><div class="ttdoc">A ElementwiseBinaryDescriptor for the ElementwiseBinaryLayer.</div><div class="ttdef"><b>Definition:</b> <a href="_descriptors_8hpp_source.xhtml#l00109">Descriptors.hpp:109</a></div></div>
<div class="ttc" id="aclassarmnn_1_1_i_network_xhtml_a7dfc9717e76257867ad0a9239f210df0"><div class="ttname"><a href="classarmnn_1_1_i_network.xhtml#a7dfc9717e76257867ad0a9239f210df0">armnn::INetwork::AddLogicalBinaryLayer</a></div><div class="ttdeci">IConnectableLayer * AddLogicalBinaryLayer(const LogicalBinaryDescriptor &amp;descriptor, const char *name=nullptr)</div><div class="ttdoc">Adds a Logical Binary layer to the network.</div><div class="ttdef"><b>Definition:</b> <a href="_network_8cpp_source.xhtml#l00616">Network.cpp:616</a></div></div>
<div class="ttc" id="aclassarmnn_1_1_i_connectable_layer_xhtml_a833170f92e96b3ef414b6cf6e5720d2b"><div class="ttname"><a href="classarmnn_1_1_i_connectable_layer.xhtml#a833170f92e96b3ef414b6cf6e5720d2b">armnn::IConnectableLayer::BackendSelectionHint</a></div><div class="ttdeci">virtual void BackendSelectionHint(Optional&lt; BackendId &gt; backend)=0</div><div class="ttdoc">Provide a hint for the optimizer as to which backend to prefer for this layer.</div></div>
<div class="ttc" id="aclassarmnn_1_1_i_network_xhtml_a0a2fdd4f442952c97a8f24de6700473a"><div class="ttname"><a href="classarmnn_1_1_i_network.xhtml#a0a2fdd4f442952c97a8f24de6700473a">armnn::INetwork::AddLstmLayer</a></div><div class="ttdeci">IConnectableLayer * AddLstmLayer(const LstmDescriptor &amp;descriptor, const LstmInputParams &amp;params, const char *name=nullptr)</div><div class="ttdoc">Add a Lstm layer to the network.</div><div class="ttdef"><b>Definition:</b> <a href="_network_8cpp_source.xhtml#l00494">Network.cpp:494</a></div></div>
<div class="ttc" id="aclassarmnn_1_1_optimizer_options_opaque_xhtml_a8c0b43721b8e82c9518e4a53b47c78e4"><div class="ttname"><a href="classarmnn_1_1_optimizer_options_opaque.xhtml#a8c0b43721b8e82c9518e4a53b47c78e4">armnn::OptimizerOptionsOpaque::SetExportEnabled</a></div><div class="ttdeci">void SetExportEnabled(bool ExportState)</div><div class="ttdef"><b>Definition:</b> <a href="_network_8cpp_source.xhtml#l00115">Network.cpp:115</a></div></div>
<div class="ttc" id="aclassarmnn_1_1_i_network_xhtml_a6f6d81d8a4f1f85f3616e8306760061c"><div class="ttname"><a href="classarmnn_1_1_i_network.xhtml#a6f6d81d8a4f1f85f3616e8306760061c">armnn::INetwork::AddSplitterLayer</a></div><div class="ttdeci">IConnectableLayer * AddSplitterLayer(const ViewsDescriptor &amp;splitterDescriptor, const char *name=nullptr)</div><div class="ttdoc">Adds a splitter layer to the network.</div><div class="ttdef"><b>Definition:</b> <a href="_network_8cpp_source.xhtml#l00391">Network.cpp:391</a></div></div>
<div class="ttc" id="astructarmnn_1_1_optimizer_options_xhtml_a69eb14082d40fa0a3cff50457344a5e0"><div class="ttname"><a href="structarmnn_1_1_optimizer_options.xhtml#a69eb14082d40fa0a3cff50457344a5e0">armnn::OptimizerOptions::m_Debug</a></div><div class="ttdeci">bool m_Debug</div><div class="ttdoc">Add debug data for easier troubleshooting.</div><div class="ttdef"><b>Definition:</b> <a href="_i_network_8hpp_source.xhtml#l00228">INetwork.hpp:228</a></div></div>
<div class="ttc" id="aclassarmnn_1_1_i_network_xhtml_a30528a3bd85a0dba158bd14e252bd68a"><div class="ttname"><a href="classarmnn_1_1_i_network.xhtml#a30528a3bd85a0dba158bd14e252bd68a">armnn::INetwork::AddSoftmaxLayer</a></div><div class="ttdeci">IConnectableLayer * AddSoftmaxLayer(const SoftmaxDescriptor &amp;softmaxDescriptor, const char *name=nullptr)</div><div class="ttdoc">Adds a softmax layer to the network.</div><div class="ttdef"><b>Definition:</b> <a href="_network_8cpp_source.xhtml#l00385">Network.cpp:385</a></div></div>
<div class="ttc" id="aclassarmnn_1_1_optimizer_options_opaque_xhtml_a78aff12fa10e9a2df9989a469ba0b7bd"><div class="ttname"><a href="classarmnn_1_1_optimizer_options_opaque.xhtml#a78aff12fa10e9a2df9989a469ba0b7bd">armnn::OptimizerOptionsOpaque::SetProfilingEnabled</a></div><div class="ttdeci">void SetProfilingEnabled(bool ProfilingState)</div><div class="ttdef"><b>Definition:</b> <a href="_network_8cpp_source.xhtml#l00120">Network.cpp:120</a></div></div>
<div class="ttc" id="aclassarmnn_1_1_i_connectable_layer_xhtml_a7ce723f9ed0cba4430ec1fc11daa4ce9"><div class="ttname"><a href="classarmnn_1_1_i_connectable_layer.xhtml#a7ce723f9ed0cba4430ec1fc11daa4ce9">armnn::IConnectableLayer::GetParameters</a></div><div class="ttdeci">virtual const BaseDescriptor &amp; GetParameters() const =0</div><div class="ttdoc">If the layer has a descriptor return it.</div></div>
<div class="ttc" id="aclassarmnn_1_1_i_network_xhtml_af5790069aa11fd1c5bb2e17cecb06528"><div class="ttname"><a href="classarmnn_1_1_i_network.xhtml#af5790069aa11fd1c5bb2e17cecb06528">armnn::INetwork::AddOutputLayer</a></div><div class="ttdeci">IConnectableLayer * AddOutputLayer(LayerBindingId id, const char *name=nullptr)</div><div class="ttdoc">Adds an output layer to the network.</div><div class="ttdef"><b>Definition:</b> <a href="_network_8cpp_source.xhtml#l00489">Network.cpp:489</a></div></div>
<div class="ttc" id="aclassarmnn_1_1_i_network_xhtml_a471991a84030eb3ae601da2bee757870"><div class="ttname"><a href="classarmnn_1_1_i_network.xhtml#a471991a84030eb3ae601da2bee757870">armnn::INetwork::AddFullyConnectedLayer</a></div><div class="ttdeci">IConnectableLayer * AddFullyConnectedLayer(const FullyConnectedDescriptor &amp;fullyConnectedDescriptor, const char *name=nullptr)</div><div class="ttdoc">Adds a fully connected layer to the network.</div><div class="ttdef"><b>Definition:</b> <a href="_network_8cpp_source.xhtml#l00331">Network.cpp:331</a></div></div>
<div class="ttc" id="aclassarmnn_1_1_i_network_xhtml_a8a3380be13fba749fc4208214b049347"><div class="ttname"><a href="classarmnn_1_1_i_network.xhtml#a8a3380be13fba749fc4208214b049347">armnn::INetwork::AddReshapeLayer</a></div><div class="ttdeci">IConnectableLayer * AddReshapeLayer(const ReshapeDescriptor &amp;reshapeDescriptor, const char *name=nullptr)</div><div class="ttdoc">Adds a reshape layer to the network.</div><div class="ttdef"><b>Definition:</b> <a href="_network_8cpp_source.xhtml#l00467">Network.cpp:467</a></div></div>
<div class="ttc" id="aclassarmnn_1_1_i_connectable_layer_xhtml_a4c2ceb86756bf870d10a9ebe6fe8e14e"><div class="ttname"><a href="classarmnn_1_1_i_connectable_layer.xhtml#a4c2ceb86756bf870d10a9ebe6fe8e14e">armnn::IConnectableLayer::GetConstantTensorsByRef</a></div><div class="ttdeci">virtual ConstantTensors GetConstantTensorsByRef()=0</div></div>
<div class="ttc" id="a_deprecated_8hpp_xhtml"><div class="ttname"><a href="_deprecated_8hpp.xhtml">Deprecated.hpp</a></div></div>
<div class="ttc" id="aclassarmnn_1_1_optimizer_options_opaque_xhtml_aac024dacf704e6933d1a6b18d5330738"><div class="ttname"><a href="classarmnn_1_1_optimizer_options_opaque.xhtml#aac024dacf704e6933d1a6b18d5330738">armnn::OptimizerOptionsOpaque::GetModelOptions</a></div><div class="ttdeci">armnn::ModelOptions GetModelOptions() const</div><div class="ttdef"><b>Definition:</b> <a href="_network_8cpp_source.xhtml#l00195">Network.cpp:195</a></div></div>
<div class="ttc" id="astructarmnn_1_1_space_to_batch_nd_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_space_to_batch_nd_descriptor.xhtml">armnn::SpaceToBatchNdDescriptor</a></div><div class="ttdoc">A SpaceToBatchNdDescriptor for the SpaceToBatchNdLayer.</div><div class="ttdef"><b>Definition:</b> <a href="_descriptors_8hpp_source.xhtml#l01010">Descriptors.hpp:1010</a></div></div>
<div class="ttc" id="astructarmnn_1_1_optimizer_options_xhtml_a05c1bba6ba3ecc1339d4c4c10c0d8890"><div class="ttname"><a href="structarmnn_1_1_optimizer_options.xhtml#a05c1bba6ba3ecc1339d4c4c10c0d8890">armnn::OptimizerOptions::m_ImportEnabled</a></div><div class="ttdeci">bool m_ImportEnabled</div><div class="ttdoc">Enable Import.</div><div class="ttdef"><b>Definition:</b> <a href="_i_network_8hpp_source.xhtml#l00241">INetwork.hpp:241</a></div></div>
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="dir_d44c64559bbebec7f509842c48db8b23.xhtml">include</a></li><li class="navelem"><a class="el" href="dir_2b72cc348e06937955e62ebdd8a13436.xhtml">armnn</a></li><li class="navelem"><a class="el" href="_i_network_8hpp.xhtml">INetwork.hpp</a></li>
    <li class="footer">Generated on Thu May 18 2023 10:35:39 for ArmNN by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.17 </li>
  </ul>
</div>
</body>
</html>
