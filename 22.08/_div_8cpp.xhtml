<!-- Copyright (c) 2020 ARM Limited. -->
<!--                                 -->
<!-- SPDX-License-Identifier: MIT    -->
<!--                                 -->
<!-- HTML header for doxygen 1.8.13-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.13"/>
<meta name="robots" content="NOINDEX, NOFOLLOW" />
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>ArmNN: src/armnnTfLiteParser/test/Div.cpp File Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script><script type="text/javascript" src="http://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="stylesheet.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <img alt="ArmNN" src="Arm_NN_horizontal_blue.png" style="max-width: 10rem; margin-top: .5rem; margin-left 10px"/>
  <td style="padding-left: 0.5em;">
   <div id="projectname">
   &#160;<span id="projectnumber">22.08</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.13 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
$(document).ready(function(){initNavTree('_div_8cpp.xhtml','');});
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="summary">
<a href="#func-members">Functions</a>  </div>
  <div class="headertitle">
<div class="title">Div.cpp File Reference</div>  </div>
</div><!--header-->
<div class="contents">
<div class="textblock"><code>#include &quot;<a class="el" href="_parser_flatbuffers_fixture_8hpp_source.xhtml">ParserFlatbuffersFixture.hpp</a>&quot;</code><br />
</div>
<p><a href="_div_8cpp_source.xhtml">Go to the source code of this file.</a></p>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="func-members"></a>
Functions</h2></td></tr>
<tr class="memitem:a5be1a390d6fa5ddffe4bd6cad72f1b20"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_div_8cpp.xhtml#a5be1a390d6fa5ddffe4bd6cad72f1b20">TEST_SUITE</a> (&quot;TensorflowLiteParser_Div&quot;)</td></tr>
<tr class="separator:a5be1a390d6fa5ddffe4bd6cad72f1b20"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<h2 class="groupheader">Function Documentation</h2>
<a id="a5be1a390d6fa5ddffe4bd6cad72f1b20"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a5be1a390d6fa5ddffe4bd6cad72f1b20">&#9670;&nbsp;</a></span>TEST_SUITE()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">TEST_SUITE </td>
          <td>(</td>
          <td class="paramtype">&quot;TensorflowLiteParser_Div&quot;&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_div_8cpp_source.xhtml#l00009">9</a> of file <a class="el" href="_div_8cpp_source.xhtml">Div.cpp</a>.</p>

<p class="reference">References <a class="el" href="_parser_flatbuffers_fixture_8hpp_source.xhtml#l00063">ParserFlatbuffersFixture::Setup()</a>, and <a class="el" href="_mem_copy_tests_8cpp_source.xhtml#l00089">TEST_CASE_FIXTURE()</a>.</p>
<div class="fragment"><div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;{</div><div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;<span class="keyword">struct </span>DivFixture : <span class="keyword">public</span> <a class="code" href="struct_parser_flatbuffers_fixture.xhtml">ParserFlatbuffersFixture</a></div><div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;{</div><div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;    <span class="keyword">explicit</span> DivFixture(<span class="keyword">const</span> std::string &amp; inputShape1,</div><div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;                        <span class="keyword">const</span> std::string &amp; inputShape2,</div><div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;                        <span class="keyword">const</span> std::string &amp; outputShape,</div><div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;                        <span class="keyword">const</span> std::string &amp; activation=<span class="stringliteral">&quot;NONE&quot;</span>)</div><div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;    {</div><div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;        m_JsonString = R<span class="stringliteral">&quot;(</span></div><div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;<span class="stringliteral">            {</span></div><div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;<span class="stringliteral">                &quot;version&quot;: 3,</span></div><div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;<span class="stringliteral">                &quot;operator_codes&quot;: [ { &quot;builtin_code&quot;: &quot;DIV&quot; } ],</span></div><div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;<span class="stringliteral">                &quot;subgraphs&quot;: [ {</span></div><div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;<span class="stringliteral">                    &quot;tensors&quot;: [</span></div><div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;<span class="stringliteral">                        {</span></div><div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;<span class="stringliteral">                            &quot;shape&quot;: )&quot; + inputShape1 + R</span><span class="stringliteral">&quot;(,</span></div><div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;<span class="stringliteral">                            &quot;type&quot;: &quot;FLOAT32&quot;,</span></div><div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;<span class="stringliteral">                            &quot;buffer&quot;: 0,</span></div><div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;<span class="stringliteral">                            &quot;name&quot;: &quot;inputTensor1&quot;,</span></div><div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;<span class="stringliteral">                            &quot;quantization&quot;: {</span></div><div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;<span class="stringliteral">                                &quot;min&quot;: [ 0.0 ],</span></div><div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;<span class="stringliteral">                                &quot;max&quot;: [ 255.0 ],</span></div><div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;<span class="stringliteral">                                &quot;scale&quot;: [ 1.0 ],</span></div><div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;<span class="stringliteral">                                &quot;zero_point&quot;: [ 0 ],</span></div><div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;<span class="stringliteral">                            }</span></div><div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;<span class="stringliteral">                        },</span></div><div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;<span class="stringliteral">                        {</span></div><div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;<span class="stringliteral">                            &quot;shape&quot;: )&quot; + inputShape2 + R</span><span class="stringliteral">&quot;(,</span></div><div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;<span class="stringliteral">                            &quot;type&quot;: &quot;FLOAT32&quot;,</span></div><div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;<span class="stringliteral">                            &quot;buffer&quot;: 1,</span></div><div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;<span class="stringliteral">                            &quot;name&quot;: &quot;inputTensor2&quot;,</span></div><div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;<span class="stringliteral">                            &quot;quantization&quot;: {</span></div><div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;<span class="stringliteral">                                &quot;min&quot;: [ 0.0 ],</span></div><div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;<span class="stringliteral">                                &quot;max&quot;: [ 255.0 ],</span></div><div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;<span class="stringliteral">                                &quot;scale&quot;: [ 1.0 ],</span></div><div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;<span class="stringliteral">                                &quot;zero_point&quot;: [ 0 ],</span></div><div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;<span class="stringliteral">                            }</span></div><div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;<span class="stringliteral">                        },</span></div><div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;<span class="stringliteral">                        {</span></div><div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;<span class="stringliteral">                            &quot;shape&quot;: )&quot; + outputShape + R</span><span class="stringliteral">&quot;( ,</span></div><div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;<span class="stringliteral">                            &quot;type&quot;: &quot;FLOAT32&quot;,</span></div><div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;<span class="stringliteral">                            &quot;buffer&quot;: 2,</span></div><div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;<span class="stringliteral">                            &quot;name&quot;: &quot;outputTensor&quot;,</span></div><div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;<span class="stringliteral">                            &quot;quantization&quot;: {</span></div><div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;<span class="stringliteral">                                &quot;min&quot;: [ 0.0 ],</span></div><div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;<span class="stringliteral">                                &quot;max&quot;: [ 255.0 ],</span></div><div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;<span class="stringliteral">                                &quot;scale&quot;: [ 1.0 ],</span></div><div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;<span class="stringliteral">                                &quot;zero_point&quot;: [ 0 ],</span></div><div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;<span class="stringliteral">                            }</span></div><div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;<span class="stringliteral">                        }</span></div><div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;<span class="stringliteral">                    ],</span></div><div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;<span class="stringliteral">                    &quot;inputs&quot;: [ 0, 1 ],</span></div><div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;<span class="stringliteral">                    &quot;outputs&quot;: [ 2 ],</span></div><div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;<span class="stringliteral">                    &quot;operators&quot;: [</span></div><div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;<span class="stringliteral">                        {</span></div><div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;<span class="stringliteral">                            &quot;opcode_index&quot;: 0,</span></div><div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;<span class="stringliteral">                            &quot;inputs&quot;: [ 0, 1 ],</span></div><div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;<span class="stringliteral">                            &quot;outputs&quot;: [ 2 ],</span></div><div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;<span class="stringliteral">                            &quot;builtin_options_type&quot;: &quot;DivOptions&quot;,</span></div><div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;<span class="stringliteral">                            &quot;builtin_options&quot;: {</span></div><div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;<span class="stringliteral">                                &quot;fused_activation_function&quot;: )&quot; + activation + R</span><span class="stringliteral">&quot;(</span></div><div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;<span class="stringliteral">                            },</span></div><div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;<span class="stringliteral">                            &quot;custom_options_format&quot;: &quot;FLEXBUFFERS&quot;</span></div><div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;<span class="stringliteral">                        }</span></div><div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;<span class="stringliteral">                    ],</span></div><div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;<span class="stringliteral">                } ],</span></div><div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;<span class="stringliteral">                &quot;buffers&quot; : [</span></div><div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;<span class="stringliteral">                    { },</span></div><div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;<span class="stringliteral">                    { }</span></div><div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;<span class="stringliteral">                ]</span></div><div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;<span class="stringliteral">            }</span></div><div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;<span class="stringliteral">        )&quot;;</span></div><div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;<span class="stringliteral">        <a class="code" href="struct_parser_flatbuffers_fixture.xhtml#a30fe33b872259560a868fc9b94195ec0">Setup</a>();</span></div><div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;<span class="stringliteral">    }</span></div><div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;<span class="stringliteral">};</span></div><div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;<span class="stringliteral"></span></div><div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;<span class="stringliteral"></span><span class="keyword">struct </span>SimpleDivFixture : <span class="keyword">public</span> DivFixture</div><div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;{</div><div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;    SimpleDivFixture() : DivFixture(<span class="stringliteral">&quot;[ 1, 2, 2, 3 ]&quot;</span>, <span class="stringliteral">&quot;[ 1, 2, 2, 3 ]&quot;</span>, <span class="stringliteral">&quot;[ 1, 2, 2, 3 ]&quot;</span>) {}</div><div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;};</div><div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;</div><div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;<a class="code" href="_mem_copy_tests_8cpp.xhtml#a3df1acc0ccc35bce0bd6c027e23e2c45">TEST_CASE_FIXTURE</a>(SimpleDivFixture, <span class="stringliteral">&quot;ParseDiv&quot;</span>)</div><div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;{</div><div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;    <span class="keyword">using</span> <a class="code" href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6">armnn::DataType</a>;</div><div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;    <span class="keywordtype">float</span> Inf = std::numeric_limits&lt;float&gt;::infinity();</div><div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;    <span class="keywordtype">float</span> NaN = std::numeric_limits&lt;float&gt;::quiet_NaN();</div><div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;</div><div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;    RunTest&lt;4, DataType::Float32&gt;(0, {{ <span class="stringliteral">&quot;inputTensor1&quot;</span>, { 0.0f,  1.0f,  2.0f,</div><div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;                                                          3.0f,  4.0f,  5.0f,</div><div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;                                                          6.0f,  7.0f,  8.0f,</div><div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;                                                          9.0f, 10.0f, -11.0f } },</div><div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;                                      { <span class="stringliteral">&quot;inputTensor2&quot;</span>, { 0.0f,  0.0f,  4.0f,</div><div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;                                                          3.0f,  40.0f,  5.0f,</div><div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;                                                          6.0f,  7.0f,  8.0f,</div><div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;                                                          9.0f,  10.0f,  11.0f} } },</div><div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;                                     {{ <span class="stringliteral">&quot;outputTensor&quot;</span>, { NaN,   Inf,  0.5f,</div><div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;                                                          1.0f,  0.1f, 1.0f,</div><div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;                                                          1.0f,  1.0f, 1.0f,</div><div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;                                                          1.0f,  1.0f, -1.0f } } });</div><div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;}</div><div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;</div><div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;</div><div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;<span class="keyword">struct </span>DynamicDivFixture : <span class="keyword">public</span> DivFixture</div><div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;{</div><div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;    DynamicDivFixture() : DivFixture(<span class="stringliteral">&quot;[ 1, 2, 2, 3 ]&quot;</span>, <span class="stringliteral">&quot;[ 1, 2, 2, 3 ]&quot;</span>, <span class="stringliteral">&quot;[  ]&quot;</span>) {}</div><div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;};</div><div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;</div><div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;<a class="code" href="_mem_copy_tests_8cpp.xhtml#a3df1acc0ccc35bce0bd6c027e23e2c45">TEST_CASE_FIXTURE</a>(DynamicDivFixture, <span class="stringliteral">&quot;ParseDynamicDiv&quot;</span>)</div><div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;{</div><div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;    <span class="keyword">using</span> <a class="code" href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6">armnn::DataType</a>;</div><div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;    <span class="keywordtype">float</span> Inf = std::numeric_limits&lt;float&gt;::infinity();</div><div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;    <span class="keywordtype">float</span> NaN = std::numeric_limits&lt;float&gt;::quiet_NaN();</div><div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;</div><div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;    RunTest&lt;4, DataType::Float32, DataType::Float32&gt;(0, {{ <span class="stringliteral">&quot;inputTensor1&quot;</span>, { 0.0f,  1.0f,  2.0f,</div><div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;                                                            3.0f,  4.0f,  5.0f,</div><div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;                                                            6.0f,  7.0f,  8.0f,</div><div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;                                                            9.0f, 10.0f, -11.0f } },</div><div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;                                      { <span class="stringliteral">&quot;inputTensor2&quot;</span>, { 0.0f,  0.0f,  4.0f,</div><div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;                                                            3.0f,  40.0f,  5.0f,</div><div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;                                                            6.0f,  7.0f,  8.0f,</div><div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;                                                            9.0f,  10.0f,  11.0f} } },</div><div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;                                  {{ <span class="stringliteral">&quot;outputTensor&quot;</span>, { NaN,   Inf,  0.5f,</div><div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;                                                         1.0f,  0.1f, 1.0f,</div><div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;                                                         1.0f,  1.0f, 1.0f,</div><div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;                                                         1.0f,  1.0f, -1.0f } } }, <span class="keyword">true</span>);</div><div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;}</div><div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;</div><div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;}</div><div class="ttc" id="struct_parser_flatbuffers_fixture_xhtml"><div class="ttname"><a href="struct_parser_flatbuffers_fixture.xhtml">ParserFlatbuffersFixture</a></div><div class="ttdef"><b>Definition:</b> <a href="_parser_flatbuffers_fixture_8hpp_source.xhtml#l00035">ParserFlatbuffersFixture.hpp:35</a></div></div>
<div class="ttc" id="_mem_copy_tests_8cpp_xhtml_a3df1acc0ccc35bce0bd6c027e23e2c45"><div class="ttname"><a href="_mem_copy_tests_8cpp.xhtml#a3df1acc0ccc35bce0bd6c027e23e2c45">TEST_CASE_FIXTURE</a></div><div class="ttdeci">TEST_CASE_FIXTURE(ClContextControlFixture, &quot;CopyBetweenNeonAndGpu&quot;)</div><div class="ttdef"><b>Definition:</b> <a href="_mem_copy_tests_8cpp_source.xhtml#l00089">MemCopyTests.cpp:89</a></div></div>
<div class="ttc" id="namespacearmnn_xhtml_ad8ed01ff3ff33333d8e19db4d2818bb6"><div class="ttname"><a href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6">armnn::DataType</a></div><div class="ttdeci">DataType</div><div class="ttdef"><b>Definition:</b> <a href="_types_8hpp_source.xhtml#l00048">Types.hpp:48</a></div></div>
<div class="ttc" id="struct_parser_flatbuffers_fixture_xhtml_a30fe33b872259560a868fc9b94195ec0"><div class="ttname"><a href="struct_parser_flatbuffers_fixture.xhtml#a30fe33b872259560a868fc9b94195ec0">ParserFlatbuffersFixture::Setup</a></div><div class="ttdeci">void Setup(bool testDynamic=true)</div><div class="ttdef"><b>Definition:</b> <a href="_parser_flatbuffers_fixture_8hpp_source.xhtml#l00063">ParserFlatbuffersFixture.hpp:63</a></div></div>
</div><!-- fragment -->
</div>
</div>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="dir_68267d1309a1af8e8297ef4c3efbcdba.xhtml">src</a></li><li class="navelem"><a class="el" href="dir_510324e450b9df55f9aac2d01fae83d8.xhtml">armnnTfLiteParser</a></li><li class="navelem"><a class="el" href="dir_6d8d07609c57029a35488d2120e28fbd.xhtml">test</a></li><li class="navelem"><a class="el" href="_div_8cpp.xhtml">Div.cpp</a></li>
    <li class="footer">Generated on Fri Aug 19 2022 14:38:32 for ArmNN by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.13 </li>
  </ul>
</div>
</body>
</html>
