<!-- Copyright (c) 2020 ARM Limited. -->
<!--                                 -->
<!-- SPDX-License-Identifier: MIT    -->
<!--                                 -->
<!-- HTML header for doxygen 1.8.13-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.13"/>
<meta name="robots" content="NOINDEX, NOFOLLOW" />
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>ArmNN: OptionalReferenceSwitch&lt; IsReference, T &gt; Class Template Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script><script type="text/javascript" src="http://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="stylesheet.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <img alt="ArmNN" src="Arm_NN_horizontal_blue.png" style="max-width: 10rem; margin-top: .5rem; margin-left 10px"/>
  <td style="padding-left: 0.5em;">
   <div id="projectname">
   &#160;<span id="projectnumber">22.02</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.13 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
$(document).ready(function(){initNavTree('classarmnn_1_1_optional_reference_switch.xhtml','');});
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="summary">
<a href="#pub-types">Public Types</a> &#124;
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="classarmnn_1_1_optional_reference_switch-members.xhtml">List of all members</a>  </div>
  <div class="headertitle">
<div class="title">OptionalReferenceSwitch&lt; IsReference, T &gt; Class Template Reference</div>  </div>
</div><!--header-->
<div class="contents">

<p>The default implementation is the non-reference case.  
 <a href="classarmnn_1_1_optional_reference_switch.xhtml#details">More...</a></p>

<p><code>#include &lt;<a class="el" href="_optional_8hpp_source.xhtml">Optional.hpp</a>&gt;</code></p>
<div class="dynheader">
Inheritance diagram for OptionalReferenceSwitch&lt; IsReference, T &gt;:</div>
<div class="dyncontent">
 <div class="center">
  <img src="classarmnn_1_1_optional_reference_switch.png" usemap="#OptionalReferenceSwitch_3C_20IsReference_2C_20T_20_3E_map" alt=""/>
  <map id="OptionalReferenceSwitch_3C_20IsReference_2C_20T_20_3E_map" name="OptionalReferenceSwitch_3C_20IsReference_2C_20T_20_3E_map">
<area href="classarmnn_1_1_optional_base.xhtml" title="OptionalBase is the common functionality between reference and non-reference optional types..." alt="OptionalBase" shape="rect" coords="0,0,263,24"/>
</map>
 </div></div>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-types"></a>
Public Types</h2></td></tr>
<tr class="memitem:a13da864f1d4a5e3957ba70473f8fbf8d"><td class="memItemLeft" align="right" valign="top">using&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_optional_reference_switch.xhtml#a13da864f1d4a5e3957ba70473f8fbf8d">Base</a> = <a class="el" href="classarmnn_1_1_optional_base.xhtml">OptionalBase</a></td></tr>
<tr class="separator:a13da864f1d4a5e3957ba70473f8fbf8d"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:ae0e39323497d71182ed4ff2c15f1e565"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_optional_reference_switch.xhtml#ae0e39323497d71182ed4ff2c15f1e565">OptionalReferenceSwitch</a> () noexcept</td></tr>
<tr class="separator:ae0e39323497d71182ed4ff2c15f1e565"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a13961a32b21df02dad8c66e11995f006"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_optional_reference_switch.xhtml#a13961a32b21df02dad8c66e11995f006">OptionalReferenceSwitch</a> (<a class="el" href="structarmnn_1_1_empty_optional.xhtml">EmptyOptional</a>) noexcept</td></tr>
<tr class="separator:a13961a32b21df02dad8c66e11995f006"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6beefcffe9bf038690c90acd176c2263"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_optional_reference_switch.xhtml#a6beefcffe9bf038690c90acd176c2263">OptionalReferenceSwitch</a> (const T &amp;<a class="el" href="classarmnn_1_1_optional_reference_switch.xhtml#a77c7d528ac063d870b8c8426ec81c1c3">value</a>)</td></tr>
<tr class="separator:a6beefcffe9bf038690c90acd176c2263"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4f012dc9cb58d868dc77bb3b4ba3a76d"><td class="memTemplParams" colspan="2">template&lt;class... Args&gt; </td></tr>
<tr class="memitem:a4f012dc9cb58d868dc77bb3b4ba3a76d"><td class="memTemplItemLeft" align="right" valign="top">&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_optional_reference_switch.xhtml#a4f012dc9cb58d868dc77bb3b4ba3a76d">OptionalReferenceSwitch</a> (<a class="el" href="structarmnn_1_1_construct_in_place.xhtml">ConstructInPlace</a>, Args &amp;&amp;... args)</td></tr>
<tr class="separator:a4f012dc9cb58d868dc77bb3b4ba3a76d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a66ffe2beacf3f0e66c2ccb21fcfba30f"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_optional_reference_switch.xhtml#a66ffe2beacf3f0e66c2ccb21fcfba30f">OptionalReferenceSwitch</a> (const <a class="el" href="classarmnn_1_1_optional_reference_switch.xhtml">OptionalReferenceSwitch</a> &amp;other)</td></tr>
<tr class="separator:a66ffe2beacf3f0e66c2ccb21fcfba30f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:abe5947e3f9acc0738b3ef2ee4cf3547d"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classarmnn_1_1_optional_reference_switch.xhtml">OptionalReferenceSwitch</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_optional_reference_switch.xhtml#abe5947e3f9acc0738b3ef2ee4cf3547d">operator=</a> (const T &amp;<a class="el" href="classarmnn_1_1_optional_reference_switch.xhtml#a77c7d528ac063d870b8c8426ec81c1c3">value</a>)</td></tr>
<tr class="separator:abe5947e3f9acc0738b3ef2ee4cf3547d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:afcdbef8eae7fb1de8ea387da20dd369c"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classarmnn_1_1_optional_reference_switch.xhtml">OptionalReferenceSwitch</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_optional_reference_switch.xhtml#afcdbef8eae7fb1de8ea387da20dd369c">operator=</a> (const <a class="el" href="classarmnn_1_1_optional_reference_switch.xhtml">OptionalReferenceSwitch</a> &amp;other)</td></tr>
<tr class="separator:afcdbef8eae7fb1de8ea387da20dd369c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:affce7d7dd75fd7b406f5112bd54ac7d8"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classarmnn_1_1_optional_reference_switch.xhtml">OptionalReferenceSwitch</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_optional_reference_switch.xhtml#affce7d7dd75fd7b406f5112bd54ac7d8">operator=</a> (<a class="el" href="structarmnn_1_1_empty_optional.xhtml">EmptyOptional</a>)</td></tr>
<tr class="separator:affce7d7dd75fd7b406f5112bd54ac7d8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:abf0cbbed2029d141b8a8f1b39c7028f9"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_optional_reference_switch.xhtml#abf0cbbed2029d141b8a8f1b39c7028f9">~OptionalReferenceSwitch</a> ()</td></tr>
<tr class="separator:abf0cbbed2029d141b8a8f1b39c7028f9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad20897c5c8bd47f5d4005989bead0e55"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_optional_reference_switch.xhtml#ad20897c5c8bd47f5d4005989bead0e55">reset</a> ()</td></tr>
<tr class="separator:ad20897c5c8bd47f5d4005989bead0e55"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a77c7d528ac063d870b8c8426ec81c1c3"><td class="memItemLeft" align="right" valign="top">const T &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_optional_reference_switch.xhtml#a77c7d528ac063d870b8c8426ec81c1c3">value</a> () const</td></tr>
<tr class="separator:a77c7d528ac063d870b8c8426ec81c1c3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a464298ad7afeafebbb149f566ecabbab"><td class="memItemLeft" align="right" valign="top">T &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_optional_reference_switch.xhtml#a464298ad7afeafebbb149f566ecabbab">value</a> ()</td></tr>
<tr class="separator:a464298ad7afeafebbb149f566ecabbab"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pub_methods_classarmnn_1_1_optional_base"><td colspan="2" onclick="javascript:toggleInherit('pub_methods_classarmnn_1_1_optional_base')"><img src="closed.png" alt="-"/>&#160;Public Member Functions inherited from <a class="el" href="classarmnn_1_1_optional_base.xhtml">OptionalBase</a></td></tr>
<tr class="memitem:ac2bde2f7113f72440ad3638eeb4d06f6 inherit pub_methods_classarmnn_1_1_optional_base"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_optional_base.xhtml#ac2bde2f7113f72440ad3638eeb4d06f6">OptionalBase</a> () noexcept</td></tr>
<tr class="separator:ac2bde2f7113f72440ad3638eeb4d06f6 inherit pub_methods_classarmnn_1_1_optional_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a86b749ce2c4bc627fa8a1fcfaf0e314f inherit pub_methods_classarmnn_1_1_optional_base"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_optional_base.xhtml#a86b749ce2c4bc627fa8a1fcfaf0e314f">has_value</a> () const noexcept</td></tr>
<tr class="separator:a86b749ce2c4bc627fa8a1fcfaf0e314f inherit pub_methods_classarmnn_1_1_optional_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a420e60e9788bfa3b52aa3aab72ea3a5e inherit pub_methods_classarmnn_1_1_optional_base"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_optional_base.xhtml#a420e60e9788bfa3b52aa3aab72ea3a5e">operator bool</a> () const noexcept</td></tr>
<tr class="memdesc:a420e60e9788bfa3b52aa3aab72ea3a5e inherit pub_methods_classarmnn_1_1_optional_base"><td class="mdescLeft">&#160;</td><td class="mdescRight">Conversion to bool, so can be used in if-statements and similar contexts expecting a bool.  <a href="classarmnn_1_1_optional_base.xhtml#a420e60e9788bfa3b52aa3aab72ea3a5e">More...</a><br /></td></tr>
<tr class="separator:a420e60e9788bfa3b52aa3aab72ea3a5e inherit pub_methods_classarmnn_1_1_optional_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="inherited"></a>
Additional Inherited Members</h2></td></tr>
<tr class="inherit_header pro_methods_classarmnn_1_1_optional_base"><td colspan="2" onclick="javascript:toggleInherit('pro_methods_classarmnn_1_1_optional_base')"><img src="closed.png" alt="-"/>&#160;Protected Member Functions inherited from <a class="el" href="classarmnn_1_1_optional_base.xhtml">OptionalBase</a></td></tr>
<tr class="memitem:a50b53f38c96fdf12c90890d2dfbb8719 inherit pro_methods_classarmnn_1_1_optional_base"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_optional_base.xhtml#a50b53f38c96fdf12c90890d2dfbb8719">OptionalBase</a> (bool hasValue) noexcept</td></tr>
<tr class="separator:a50b53f38c96fdf12c90890d2dfbb8719 inherit pro_methods_classarmnn_1_1_optional_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pro_attribs_classarmnn_1_1_optional_base"><td colspan="2" onclick="javascript:toggleInherit('pro_attribs_classarmnn_1_1_optional_base')"><img src="closed.png" alt="-"/>&#160;Protected Attributes inherited from <a class="el" href="classarmnn_1_1_optional_base.xhtml">OptionalBase</a></td></tr>
<tr class="memitem:a53e87efb7e1b2df3dc4420dafaf2ee7e inherit pro_attribs_classarmnn_1_1_optional_base"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_optional_base.xhtml#a53e87efb7e1b2df3dc4420dafaf2ee7e">m_HasValue</a></td></tr>
<tr class="separator:a53e87efb7e1b2df3dc4420dafaf2ee7e inherit pro_attribs_classarmnn_1_1_optional_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><h3>template&lt;bool IsReference, typename T&gt;<br />
class armnn::OptionalReferenceSwitch&lt; IsReference, T &gt;</h3>

<p>The default implementation is the non-reference case. </p>
<p>This has an unsigned char array for storing the optional value which is in-place constructed there. </p>

<p class="definition">Definition at line <a class="el" href="_optional_8hpp_source.xhtml#l00081">81</a> of file <a class="el" href="_optional_8hpp_source.xhtml">Optional.hpp</a>.</p>
</div><h2 class="groupheader">Member Typedef Documentation</h2>
<a id="a13da864f1d4a5e3957ba70473f8fbf8d"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a13da864f1d4a5e3957ba70473f8fbf8d">&#9670;&nbsp;</a></span>Base</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">using <a class="el" href="classarmnn_1_1_optional_reference_switch.xhtml#a13da864f1d4a5e3957ba70473f8fbf8d">Base</a> =  <a class="el" href="classarmnn_1_1_optional_base.xhtml">OptionalBase</a></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_optional_8hpp_source.xhtml#l00084">84</a> of file <a class="el" href="_optional_8hpp_source.xhtml">Optional.hpp</a>.</p>

</div>
</div>
<h2 class="groupheader">Constructor &amp; Destructor Documentation</h2>
<a id="ae0e39323497d71182ed4ff2c15f1e565"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ae0e39323497d71182ed4ff2c15f1e565">&#9670;&nbsp;</a></span>OptionalReferenceSwitch() <span class="overload">[1/5]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarmnn_1_1_optional_reference_switch.xhtml">OptionalReferenceSwitch</a> </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">noexcept</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_optional_8hpp_source.xhtml#l00086">86</a> of file <a class="el" href="_optional_8hpp_source.xhtml">Optional.hpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;: <a class="code" href="classarmnn_1_1_optional_reference_switch.xhtml#a13da864f1d4a5e3957ba70473f8fbf8d">Base</a>{} {}</div><div class="ttc" id="classarmnn_1_1_optional_reference_switch_xhtml_a13da864f1d4a5e3957ba70473f8fbf8d"><div class="ttname"><a href="classarmnn_1_1_optional_reference_switch.xhtml#a13da864f1d4a5e3957ba70473f8fbf8d">armnn::OptionalReferenceSwitch::Base</a></div><div class="ttdeci">OptionalBase Base</div><div class="ttdef"><b>Definition:</b> <a href="_optional_8hpp_source.xhtml#l00084">Optional.hpp:84</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="a13961a32b21df02dad8c66e11995f006"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a13961a32b21df02dad8c66e11995f006">&#9670;&nbsp;</a></span>OptionalReferenceSwitch() <span class="overload">[2/5]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarmnn_1_1_optional_reference_switch.xhtml">OptionalReferenceSwitch</a> </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="structarmnn_1_1_empty_optional.xhtml">EmptyOptional</a>&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">noexcept</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_optional_8hpp_source.xhtml#l00087">87</a> of file <a class="el" href="_optional_8hpp_source.xhtml">Optional.hpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;: <a class="code" href="classarmnn_1_1_optional_reference_switch.xhtml#a13da864f1d4a5e3957ba70473f8fbf8d">Base</a>{} {}</div><div class="ttc" id="classarmnn_1_1_optional_reference_switch_xhtml_a13da864f1d4a5e3957ba70473f8fbf8d"><div class="ttname"><a href="classarmnn_1_1_optional_reference_switch.xhtml#a13da864f1d4a5e3957ba70473f8fbf8d">armnn::OptionalReferenceSwitch::Base</a></div><div class="ttdeci">OptionalBase Base</div><div class="ttdef"><b>Definition:</b> <a href="_optional_8hpp_source.xhtml#l00084">Optional.hpp:84</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="a6beefcffe9bf038690c90acd176c2263"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a6beefcffe9bf038690c90acd176c2263">&#9670;&nbsp;</a></span>OptionalReferenceSwitch() <span class="overload">[3/5]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarmnn_1_1_optional_reference_switch.xhtml">OptionalReferenceSwitch</a> </td>
          <td>(</td>
          <td class="paramtype">const T &amp;&#160;</td>
          <td class="paramname"><em>value</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_optional_8hpp_source.xhtml#l00089">89</a> of file <a class="el" href="_optional_8hpp_source.xhtml">Optional.hpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;        : <a class="code" href="classarmnn_1_1_optional_reference_switch.xhtml#a13da864f1d4a5e3957ba70473f8fbf8d">Base</a>{}</div><div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;    {</div><div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;        Construct(<a class="code" href="classarmnn_1_1_optional_reference_switch.xhtml#a77c7d528ac063d870b8c8426ec81c1c3">value</a>);</div><div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;    }</div><div class="ttc" id="classarmnn_1_1_optional_reference_switch_xhtml_a77c7d528ac063d870b8c8426ec81c1c3"><div class="ttname"><a href="classarmnn_1_1_optional_reference_switch.xhtml#a77c7d528ac063d870b8c8426ec81c1c3">armnn::OptionalReferenceSwitch::value</a></div><div class="ttdeci">const T &amp; value() const</div><div class="ttdef"><b>Definition:</b> <a href="_optional_8hpp_source.xhtml#l00146">Optional.hpp:146</a></div></div>
<div class="ttc" id="classarmnn_1_1_optional_reference_switch_xhtml_a13da864f1d4a5e3957ba70473f8fbf8d"><div class="ttname"><a href="classarmnn_1_1_optional_reference_switch.xhtml#a13da864f1d4a5e3957ba70473f8fbf8d">armnn::OptionalReferenceSwitch::Base</a></div><div class="ttdeci">OptionalBase Base</div><div class="ttdef"><b>Definition:</b> <a href="_optional_8hpp_source.xhtml#l00084">Optional.hpp:84</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="a4f012dc9cb58d868dc77bb3b4ba3a76d"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a4f012dc9cb58d868dc77bb3b4ba3a76d">&#9670;&nbsp;</a></span>OptionalReferenceSwitch() <span class="overload">[4/5]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarmnn_1_1_optional_reference_switch.xhtml">OptionalReferenceSwitch</a> </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="structarmnn_1_1_construct_in_place.xhtml">ConstructInPlace</a>&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">Args &amp;&amp;...&#160;</td>
          <td class="paramname"><em>args</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_optional_8hpp_source.xhtml#l00096">96</a> of file <a class="el" href="_optional_8hpp_source.xhtml">Optional.hpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;        : <a class="code" href="classarmnn_1_1_optional_reference_switch.xhtml#a13da864f1d4a5e3957ba70473f8fbf8d">Base</a>{}</div><div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;    {</div><div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;        Construct(<a class="code" href="_optional_8hpp.xhtml#acbec11f88a308826fa811f370d363a4a">CONSTRUCT_IN_PLACE</a>, std::forward&lt;Args&gt;(args)...);</div><div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;    }</div><div class="ttc" id="_optional_8hpp_xhtml_acbec11f88a308826fa811f370d363a4a"><div class="ttname"><a href="_optional_8hpp.xhtml#acbec11f88a308826fa811f370d363a4a">CONSTRUCT_IN_PLACE</a></div><div class="ttdeci">#define CONSTRUCT_IN_PLACE</div><div class="ttdef"><b>Definition:</b> <a href="_optional_8hpp_source.xhtml#l00041">Optional.hpp:41</a></div></div>
<div class="ttc" id="classarmnn_1_1_optional_reference_switch_xhtml_a13da864f1d4a5e3957ba70473f8fbf8d"><div class="ttname"><a href="classarmnn_1_1_optional_reference_switch.xhtml#a13da864f1d4a5e3957ba70473f8fbf8d">armnn::OptionalReferenceSwitch::Base</a></div><div class="ttdeci">OptionalBase Base</div><div class="ttdef"><b>Definition:</b> <a href="_optional_8hpp_source.xhtml#l00084">Optional.hpp:84</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="a66ffe2beacf3f0e66c2ccb21fcfba30f"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a66ffe2beacf3f0e66c2ccb21fcfba30f">&#9670;&nbsp;</a></span>OptionalReferenceSwitch() <span class="overload">[5/5]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarmnn_1_1_optional_reference_switch.xhtml">OptionalReferenceSwitch</a> </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_optional_reference_switch.xhtml">OptionalReferenceSwitch</a>&lt; IsReference, T &gt; &amp;&#160;</td>
          <td class="paramname"><em>other</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_optional_8hpp_source.xhtml#l00102">102</a> of file <a class="el" href="_optional_8hpp_source.xhtml">Optional.hpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;        : <a class="code" href="classarmnn_1_1_optional_reference_switch.xhtml#a13da864f1d4a5e3957ba70473f8fbf8d">Base</a>{}</div><div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;    {</div><div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;        *<span class="keyword">this</span> = other;</div><div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;    }</div><div class="ttc" id="classarmnn_1_1_optional_reference_switch_xhtml_a13da864f1d4a5e3957ba70473f8fbf8d"><div class="ttname"><a href="classarmnn_1_1_optional_reference_switch.xhtml#a13da864f1d4a5e3957ba70473f8fbf8d">armnn::OptionalReferenceSwitch::Base</a></div><div class="ttdeci">OptionalBase Base</div><div class="ttdef"><b>Definition:</b> <a href="_optional_8hpp_source.xhtml#l00084">Optional.hpp:84</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="abf0cbbed2029d141b8a8f1b39c7028f9"></a>
<h2 class="memtitle"><span class="permalink"><a href="#abf0cbbed2029d141b8a8f1b39c7028f9">&#9670;&nbsp;</a></span>~OptionalReferenceSwitch()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">~<a class="el" href="classarmnn_1_1_optional_reference_switch.xhtml">OptionalReferenceSwitch</a> </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_optional_8hpp_source.xhtml#l00132">132</a> of file <a class="el" href="_optional_8hpp_source.xhtml">Optional.hpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;    {</div><div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;        <a class="code" href="classarmnn_1_1_optional_reference_switch.xhtml#ad20897c5c8bd47f5d4005989bead0e55">reset</a>();</div><div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;    }</div><div class="ttc" id="classarmnn_1_1_optional_reference_switch_xhtml_ad20897c5c8bd47f5d4005989bead0e55"><div class="ttname"><a href="classarmnn_1_1_optional_reference_switch.xhtml#ad20897c5c8bd47f5d4005989bead0e55">armnn::OptionalReferenceSwitch::reset</a></div><div class="ttdeci">void reset()</div><div class="ttdef"><b>Definition:</b> <a href="_optional_8hpp_source.xhtml#l00137">Optional.hpp:137</a></div></div>
</div><!-- fragment -->
</div>
</div>
<h2 class="groupheader">Member Function Documentation</h2>
<a id="abe5947e3f9acc0738b3ef2ee4cf3547d"></a>
<h2 class="memtitle"><span class="permalink"><a href="#abe5947e3f9acc0738b3ef2ee4cf3547d">&#9670;&nbsp;</a></span>operator=() <span class="overload">[1/3]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarmnn_1_1_optional_reference_switch.xhtml">OptionalReferenceSwitch</a>&amp; operator= </td>
          <td>(</td>
          <td class="paramtype">const T &amp;&#160;</td>
          <td class="paramname"><em>value</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_optional_8hpp_source.xhtml#l00108">108</a> of file <a class="el" href="_optional_8hpp_source.xhtml">Optional.hpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;    {</div><div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;        <a class="code" href="classarmnn_1_1_optional_reference_switch.xhtml#ad20897c5c8bd47f5d4005989bead0e55">reset</a>();</div><div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;        Construct(<a class="code" href="classarmnn_1_1_optional_reference_switch.xhtml#a77c7d528ac063d870b8c8426ec81c1c3">value</a>);</div><div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;        <span class="keywordflow">return</span> *<span class="keyword">this</span>;</div><div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;    }</div><div class="ttc" id="classarmnn_1_1_optional_reference_switch_xhtml_a77c7d528ac063d870b8c8426ec81c1c3"><div class="ttname"><a href="classarmnn_1_1_optional_reference_switch.xhtml#a77c7d528ac063d870b8c8426ec81c1c3">armnn::OptionalReferenceSwitch::value</a></div><div class="ttdeci">const T &amp; value() const</div><div class="ttdef"><b>Definition:</b> <a href="_optional_8hpp_source.xhtml#l00146">Optional.hpp:146</a></div></div>
<div class="ttc" id="classarmnn_1_1_optional_reference_switch_xhtml_ad20897c5c8bd47f5d4005989bead0e55"><div class="ttname"><a href="classarmnn_1_1_optional_reference_switch.xhtml#ad20897c5c8bd47f5d4005989bead0e55">armnn::OptionalReferenceSwitch::reset</a></div><div class="ttdeci">void reset()</div><div class="ttdef"><b>Definition:</b> <a href="_optional_8hpp_source.xhtml#l00137">Optional.hpp:137</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="afcdbef8eae7fb1de8ea387da20dd369c"></a>
<h2 class="memtitle"><span class="permalink"><a href="#afcdbef8eae7fb1de8ea387da20dd369c">&#9670;&nbsp;</a></span>operator=() <span class="overload">[2/3]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarmnn_1_1_optional_reference_switch.xhtml">OptionalReferenceSwitch</a>&amp; operator= </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_optional_reference_switch.xhtml">OptionalReferenceSwitch</a>&lt; IsReference, T &gt; &amp;&#160;</td>
          <td class="paramname"><em>other</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_optional_8hpp_source.xhtml#l00115">115</a> of file <a class="el" href="_optional_8hpp_source.xhtml">Optional.hpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;    {</div><div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;        <a class="code" href="classarmnn_1_1_optional_reference_switch.xhtml#ad20897c5c8bd47f5d4005989bead0e55">reset</a>();</div><div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;        <span class="keywordflow">if</span> (other.has_value())</div><div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;        {</div><div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;            Construct(other.value());</div><div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;        }</div><div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;</div><div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;        <span class="keywordflow">return</span> *<span class="keyword">this</span>;</div><div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;    }</div><div class="ttc" id="classarmnn_1_1_optional_reference_switch_xhtml_ad20897c5c8bd47f5d4005989bead0e55"><div class="ttname"><a href="classarmnn_1_1_optional_reference_switch.xhtml#ad20897c5c8bd47f5d4005989bead0e55">armnn::OptionalReferenceSwitch::reset</a></div><div class="ttdeci">void reset()</div><div class="ttdef"><b>Definition:</b> <a href="_optional_8hpp_source.xhtml#l00137">Optional.hpp:137</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="affce7d7dd75fd7b406f5112bd54ac7d8"></a>
<h2 class="memtitle"><span class="permalink"><a href="#affce7d7dd75fd7b406f5112bd54ac7d8">&#9670;&nbsp;</a></span>operator=() <span class="overload">[3/3]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarmnn_1_1_optional_reference_switch.xhtml">OptionalReferenceSwitch</a>&amp; operator= </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="structarmnn_1_1_empty_optional.xhtml">EmptyOptional</a>&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_optional_8hpp_source.xhtml#l00126">126</a> of file <a class="el" href="_optional_8hpp_source.xhtml">Optional.hpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;    {</div><div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;        <a class="code" href="classarmnn_1_1_optional_reference_switch.xhtml#ad20897c5c8bd47f5d4005989bead0e55">reset</a>();</div><div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;        <span class="keywordflow">return</span> *<span class="keyword">this</span>;</div><div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;    }</div><div class="ttc" id="classarmnn_1_1_optional_reference_switch_xhtml_ad20897c5c8bd47f5d4005989bead0e55"><div class="ttname"><a href="classarmnn_1_1_optional_reference_switch.xhtml#ad20897c5c8bd47f5d4005989bead0e55">armnn::OptionalReferenceSwitch::reset</a></div><div class="ttdeci">void reset()</div><div class="ttdef"><b>Definition:</b> <a href="_optional_8hpp_source.xhtml#l00137">Optional.hpp:137</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="ad20897c5c8bd47f5d4005989bead0e55"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ad20897c5c8bd47f5d4005989bead0e55">&#9670;&nbsp;</a></span>reset()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void reset </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_optional_8hpp_source.xhtml#l00137">137</a> of file <a class="el" href="_optional_8hpp_source.xhtml">Optional.hpp</a>.</p>

<p class="reference">Referenced by <a class="el" href="_optional_test_8cpp_source.xhtml#l00027">TEST_SUITE()</a>.</p>
<div class="fragment"><div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;    {</div><div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;        <span class="keywordflow">if</span> (<a class="code" href="classarmnn_1_1_optional_base.xhtml#a86b749ce2c4bc627fa8a1fcfaf0e314f">Base::has_value</a>())</div><div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;        {</div><div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;            <a class="code" href="classarmnn_1_1_optional_reference_switch.xhtml#a77c7d528ac063d870b8c8426ec81c1c3">value</a>().T::~T();</div><div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;            <a class="code" href="classarmnn_1_1_optional_base.xhtml#a53e87efb7e1b2df3dc4420dafaf2ee7e">Base::m_HasValue</a> = <span class="keyword">false</span>;</div><div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;        }</div><div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;    }</div><div class="ttc" id="classarmnn_1_1_optional_base_xhtml_a53e87efb7e1b2df3dc4420dafaf2ee7e"><div class="ttname"><a href="classarmnn_1_1_optional_base.xhtml#a53e87efb7e1b2df3dc4420dafaf2ee7e">armnn::OptionalBase::m_HasValue</a></div><div class="ttdeci">bool m_HasValue</div><div class="ttdef"><b>Definition:</b> <a href="_optional_8hpp_source.xhtml#l00072">Optional.hpp:72</a></div></div>
<div class="ttc" id="classarmnn_1_1_optional_reference_switch_xhtml_a77c7d528ac063d870b8c8426ec81c1c3"><div class="ttname"><a href="classarmnn_1_1_optional_reference_switch.xhtml#a77c7d528ac063d870b8c8426ec81c1c3">armnn::OptionalReferenceSwitch::value</a></div><div class="ttdeci">const T &amp; value() const</div><div class="ttdef"><b>Definition:</b> <a href="_optional_8hpp_source.xhtml#l00146">Optional.hpp:146</a></div></div>
<div class="ttc" id="classarmnn_1_1_optional_base_xhtml_a86b749ce2c4bc627fa8a1fcfaf0e314f"><div class="ttname"><a href="classarmnn_1_1_optional_base.xhtml#a86b749ce2c4bc627fa8a1fcfaf0e314f">armnn::OptionalBase::has_value</a></div><div class="ttdeci">bool has_value() const noexcept</div><div class="ttdef"><b>Definition:</b> <a href="_optional_8hpp_source.xhtml#l00053">Optional.hpp:53</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="a77c7d528ac063d870b8c8426ec81c1c3"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a77c7d528ac063d870b8c8426ec81c1c3">&#9670;&nbsp;</a></span>value() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">const T&amp; value </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_optional_8hpp_source.xhtml#l00146">146</a> of file <a class="el" href="_optional_8hpp_source.xhtml">Optional.hpp</a>.</p>

<p class="reference">Referenced by <a class="el" href="_profiling_details_8hpp_source.xhtml#l00034">ProfilingDetails::AddDetailsToString()</a>, <a class="el" href="_profiling_8cpp_source.xhtml#l00303">armnn::ExtractJsonObjects()</a>, <a class="el" href="_serializer_8cpp_source.xhtml#l00086">armnnSerializer::GetFlatBufferArgMinMaxFunction()</a>, <a class="el" href="_delegate_options_8hpp_source.xhtml#l00213">DelegateOptions::GetLoggingSeverity()</a>, <a class="el" href="_tensor_utils_8cpp_source.xhtml#l00173">armnnUtils::GetPerAxisParams()</a>, <a class="el" href="_connection_acknowledged_command_handler_8cpp_source.xhtml#l00019">ConnectionAcknowledgedCommandHandler::operator()()</a>, <a class="el" href="_optional_8hpp_source.xhtml#l00115">OptionalReferenceSwitch&lt; std::is_reference&lt; armnn::DebugCallbackFunction &gt;::value, armnn::DebugCallbackFunction &gt;::operator=()</a>, <a class="el" href="_periodic_counter_selection_command_handler_8hpp_source.xhtml#l00035">PeriodicCounterSelectionCommandHandler::PeriodicCounterSelectionCommandHandler()</a>, <a class="el" href="_permute_8cpp_source.xhtml#l00115">armnnUtils::Permuted()</a>, <a class="el" href="_network_execution_utils_8cpp_source.xhtml#l00231">PopulateTensorWithData()</a>, <a class="el" href="_network_execution_utils_8hpp_source.xhtml#l00107">PopulateTensorWithDataGeneric()</a>, <a class="el" href="_counter_directory_8cpp_source.xhtml#l00181">CounterDirectory::RegisterCounter()</a>, <a class="el" href="_counter_directory_8cpp_source.xhtml#l00114">CounterDirectory::RegisterCounterSet()</a>, <a class="el" href="_counter_directory_8cpp_source.xhtml#l00053">CounterDirectory::RegisterDevice()</a>, and <a class="el" href="_optional_test_8cpp_source.xhtml#l00027">TEST_SUITE()</a>.</p>
<div class="fragment"><div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;    {</div><div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;        <span class="keywordflow">if</span> (!<a class="code" href="classarmnn_1_1_optional_base.xhtml#a86b749ce2c4bc627fa8a1fcfaf0e314f">Base::has_value</a>())</div><div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;        {</div><div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;            <span class="keywordflow">throw</span> BadOptionalAccessException(<span class="stringliteral">&quot;Optional has no value&quot;</span>);</div><div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;        }</div><div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;</div><div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;        <span class="keyword">auto</span> valuePtr = <span class="keyword">reinterpret_cast&lt;</span><span class="keyword">const </span>T*<span class="keyword">&gt;</span>(m_Storage);</div><div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;        <span class="keywordflow">return</span> *valuePtr;</div><div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;    }</div><div class="ttc" id="classarmnn_1_1_optional_base_xhtml_a86b749ce2c4bc627fa8a1fcfaf0e314f"><div class="ttname"><a href="classarmnn_1_1_optional_base.xhtml#a86b749ce2c4bc627fa8a1fcfaf0e314f">armnn::OptionalBase::has_value</a></div><div class="ttdeci">bool has_value() const noexcept</div><div class="ttdef"><b>Definition:</b> <a href="_optional_8hpp_source.xhtml#l00053">Optional.hpp:53</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="a464298ad7afeafebbb149f566ecabbab"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a464298ad7afeafebbb149f566ecabbab">&#9670;&nbsp;</a></span>value() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">T&amp; value </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_optional_8hpp_source.xhtml#l00157">157</a> of file <a class="el" href="_optional_8hpp_source.xhtml">Optional.hpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;    {</div><div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160;        <span class="keywordflow">if</span> (!<a class="code" href="classarmnn_1_1_optional_base.xhtml#a86b749ce2c4bc627fa8a1fcfaf0e314f">Base::has_value</a>())</div><div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160;        {</div><div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160;            <span class="keywordflow">throw</span> BadOptionalAccessException(<span class="stringliteral">&quot;Optional has no value&quot;</span>);</div><div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160;        }</div><div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160;</div><div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;        <span class="keyword">auto</span> valuePtr = <span class="keyword">reinterpret_cast&lt;</span>T*<span class="keyword">&gt;</span>(m_Storage);</div><div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160;        <span class="keywordflow">return</span> *valuePtr;</div><div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160;    }</div><div class="ttc" id="classarmnn_1_1_optional_base_xhtml_a86b749ce2c4bc627fa8a1fcfaf0e314f"><div class="ttname"><a href="classarmnn_1_1_optional_base.xhtml#a86b749ce2c4bc627fa8a1fcfaf0e314f">armnn::OptionalBase::has_value</a></div><div class="ttdeci">bool has_value() const noexcept</div><div class="ttdef"><b>Definition:</b> <a href="_optional_8hpp_source.xhtml#l00053">Optional.hpp:53</a></div></div>
</div><!-- fragment -->
</div>
</div>
<hr/>The documentation for this class was generated from the following file:<ul>
<li>include/armnn/<a class="el" href="_optional_8hpp_source.xhtml">Optional.hpp</a></li>
</ul>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="namespacearmnn.xhtml">armnn</a></li><li class="navelem"><a class="el" href="classarmnn_1_1_optional_reference_switch.xhtml">OptionalReferenceSwitch</a></li>
    <li class="footer">Generated on Wed Mar 9 2022 12:01:21 for ArmNN by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.13 </li>
  </ul>
</div>
</body>
</html>
