<!-- Copyright (c) 2020 ARM Limited. -->
<!--                                 -->
<!-- SPDX-License-Identifier: MIT    -->
<!--                                 -->
<!-- HTML header for doxygen 1.8.13-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.13"/>
<meta name="robots" content="NOINDEX, NOFOLLOW" />
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>ArmNN: src/backends/backendsCommon/test/CompatibilityTests.cpp Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script><script type="text/javascript" src="http://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="stylesheet.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <img alt="ArmNN" src="Arm_NN_horizontal_blue.png" style="max-width: 10rem; margin-top: .5rem; margin-left 10px"/>
  <td style="padding-left: 0.5em;">
   <div id="projectname">
   &#160;<span id="projectnumber">22.02</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.13 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
$(document).ready(function(){initNavTree('_compatibility_tests_8cpp_source.xhtml','');});
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="headertitle">
<div class="title">CompatibilityTests.cpp</div>  </div>
</div><!--header-->
<div class="contents">
<a href="_compatibility_tests_8cpp.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="comment">//</span></div><div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="comment">// Copyright Â© 2017 Arm Ltd. All rights reserved.</span></div><div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="comment">// SPDX-License-Identifier: MIT</span></div><div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="comment">//</span></div><div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;</div><div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="preprocessor">#if defined(ARMCOMPUTECL_ENABLED)</span></div><div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="preprocessor">#include &lt;<a class="code" href="_cl_backend_8hpp.xhtml">cl/ClBackend.hpp</a>&gt;</span></div><div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="preprocessor">#endif</span></div><div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="preprocessor">#if defined(ARMCOMPUTENEON_ENABLED)</span></div><div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="preprocessor">#include &lt;<a class="code" href="_neon_backend_8hpp.xhtml">neon/NeonBackend.hpp</a>&gt;</span></div><div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;<span class="preprocessor">#endif</span></div><div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;<span class="preprocessor">#include &lt;<a class="code" href="_ref_backend_8hpp.xhtml">reference/RefBackend.hpp</a>&gt;</span></div><div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;<span class="preprocessor">#include &lt;<a class="code" href="_backend_helper_8hpp.xhtml">armnn/BackendHelper.hpp</a>&gt;</span></div><div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;</div><div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;<span class="preprocessor">#include &lt;<a class="code" href="_network_8hpp.xhtml">Network.hpp</a>&gt;</span></div><div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;</div><div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;<span class="preprocessor">#include &lt;doctest/doctest.h&gt;</span></div><div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;</div><div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;<span class="preprocessor">#include &lt;vector&gt;</span></div><div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;<span class="preprocessor">#include &lt;string&gt;</span></div><div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;</div><div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;<span class="keyword">using namespace </span><a class="code" href="namespacearmnn.xhtml">armnn</a>;</div><div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;</div><div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;<span class="preprocessor">#if defined(ARMCOMPUTENEON_ENABLED) &amp;&amp; defined(ARMCOMPUTECL_ENABLED)</span></div><div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;</div><div class="line"><a name="l00026"></a><span class="lineno"><a class="line" href="_compatibility_tests_8cpp.xhtml#a8749ab0d5ad5c9f934863aac12c2b70a">   26</a></span>&#160;<a class="code" href="namespacearmnn.xhtml#a1621fb2f10314c394c9023d3e090d394">TEST_SUITE</a>(<span class="stringliteral">&quot;BackendsCompatibility&quot;</span>)</div><div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;{</div><div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;<span class="comment">// Partially disabled Test Suite</span></div><div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;TEST_CASE(<span class="stringliteral">&quot;Neon_Cl_DirectCompatibility_Test&quot;</span>)</div><div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;{</div><div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;    <span class="keyword">auto</span> neonBackend = std::make_unique&lt;NeonBackend&gt;();</div><div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;    <span class="keyword">auto</span> clBackend = std::make_unique&lt;ClBackend&gt;();</div><div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;</div><div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;    <a class="code" href="classarmnn_1_1_tensor_handle_factory_registry.xhtml">TensorHandleFactoryRegistry</a> registry;</div><div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;    neonBackend-&gt;RegisterTensorHandleFactories(registry);</div><div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;    clBackend-&gt;RegisterTensorHandleFactories(registry);</div><div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;</div><div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;    <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_backend_id.xhtml">BackendId</a>&amp; neonBackendId = neonBackend-&gt;GetId();</div><div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;    <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_backend_id.xhtml">BackendId</a>&amp; clBackendId = clBackend-&gt;GetId();</div><div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;</div><div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;    <a class="code" href="namespacearmnn.xhtml#a9173495a61a0092b5f38b855f02c3585">BackendsMap</a> backends;</div><div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;    backends[neonBackendId] = std::move(neonBackend);</div><div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;    backends[clBackendId] = std::move(clBackend);</div><div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;</div><div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;    <a class="code" href="classarmnn_1_1_graph.xhtml">armnn::Graph</a> graph;</div><div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;</div><div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;    <a class="code" href="classarmnn_1_1_input_layer.xhtml">armnn::InputLayer</a>* <span class="keyword">const</span> inputLayer = graph.<a class="code" href="classarmnn_1_1_graph.xhtml#a7563c5b899e7d0ada08fd0fdb202f205">AddLayer</a>&lt;<a class="code" href="classarmnn_1_1_input_layer.xhtml">armnn::InputLayer</a>&gt;(0, <span class="stringliteral">&quot;input&quot;</span>);</div><div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;</div><div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;    inputLayer-&gt;<a class="code" href="classarmnn_1_1_layer.xhtml#a3f6ad59212fa8a47c9265162fff8a274">SetBackendId</a>(neonBackendId);</div><div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;</div><div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;    <a class="code" href="structarmnn_1_1_softmax_descriptor.xhtml">armnn::SoftmaxDescriptor</a> smDesc;</div><div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;    <a class="code" href="classarmnn_1_1_softmax_layer.xhtml">armnn::SoftmaxLayer</a>* <span class="keyword">const</span> softmaxLayer1 = graph.<a class="code" href="classarmnn_1_1_graph.xhtml#a7563c5b899e7d0ada08fd0fdb202f205">AddLayer</a>&lt;<a class="code" href="classarmnn_1_1_softmax_layer.xhtml">armnn::SoftmaxLayer</a>&gt;(smDesc, <span class="stringliteral">&quot;softmax1&quot;</span>);</div><div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;    softmaxLayer1-&gt;<a class="code" href="classarmnn_1_1_layer.xhtml#a3f6ad59212fa8a47c9265162fff8a274">SetBackendId</a>(clBackendId);</div><div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;</div><div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;    <a class="code" href="classarmnn_1_1_softmax_layer.xhtml">armnn::SoftmaxLayer</a>* <span class="keyword">const</span> softmaxLayer2 = graph.<a class="code" href="classarmnn_1_1_graph.xhtml#a7563c5b899e7d0ada08fd0fdb202f205">AddLayer</a>&lt;<a class="code" href="classarmnn_1_1_softmax_layer.xhtml">armnn::SoftmaxLayer</a>&gt;(smDesc, <span class="stringliteral">&quot;softmax2&quot;</span>);</div><div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;    softmaxLayer2-&gt;<a class="code" href="classarmnn_1_1_layer.xhtml#a3f6ad59212fa8a47c9265162fff8a274">SetBackendId</a>(neonBackendId);</div><div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;</div><div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;    <a class="code" href="classarmnn_1_1_softmax_layer.xhtml">armnn::SoftmaxLayer</a>* <span class="keyword">const</span> softmaxLayer3 = graph.<a class="code" href="classarmnn_1_1_graph.xhtml#a7563c5b899e7d0ada08fd0fdb202f205">AddLayer</a>&lt;<a class="code" href="classarmnn_1_1_softmax_layer.xhtml">armnn::SoftmaxLayer</a>&gt;(smDesc, <span class="stringliteral">&quot;softmax3&quot;</span>);</div><div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;    softmaxLayer3-&gt;<a class="code" href="classarmnn_1_1_layer.xhtml#a3f6ad59212fa8a47c9265162fff8a274">SetBackendId</a>(clBackendId);</div><div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;</div><div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;    <a class="code" href="classarmnn_1_1_softmax_layer.xhtml">armnn::SoftmaxLayer</a>* <span class="keyword">const</span> softmaxLayer4 = graph.<a class="code" href="classarmnn_1_1_graph.xhtml#a7563c5b899e7d0ada08fd0fdb202f205">AddLayer</a>&lt;<a class="code" href="classarmnn_1_1_softmax_layer.xhtml">armnn::SoftmaxLayer</a>&gt;(smDesc, <span class="stringliteral">&quot;softmax4&quot;</span>);</div><div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;    softmaxLayer4-&gt;<a class="code" href="classarmnn_1_1_layer.xhtml#a3f6ad59212fa8a47c9265162fff8a274">SetBackendId</a>(neonBackendId);</div><div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;</div><div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;    <a class="code" href="classarmnn_1_1_output_layer.xhtml">armnn::OutputLayer</a>* <span class="keyword">const</span> outputLayer = graph.<a class="code" href="classarmnn_1_1_graph.xhtml#a7563c5b899e7d0ada08fd0fdb202f205">AddLayer</a>&lt;<a class="code" href="classarmnn_1_1_output_layer.xhtml">armnn::OutputLayer</a>&gt;(0, <span class="stringliteral">&quot;output&quot;</span>);</div><div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;    outputLayer-&gt;<a class="code" href="classarmnn_1_1_layer.xhtml#a3f6ad59212fa8a47c9265162fff8a274">SetBackendId</a>(clBackendId);</div><div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;</div><div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;    inputLayer-&gt;<a class="code" href="classarmnn_1_1_layer.xhtml#a0e36688a43c35668d8db5257274c68fe">GetOutputSlot</a>(0).<a class="code" href="classarmnn_1_1_output_slot.xhtml#adcfb97035799ea4c043f9ef370714815">Connect</a>(softmaxLayer1-&gt;<a class="code" href="classarmnn_1_1_layer.xhtml#acf8b8e23bf647836592982f97088d375">GetInputSlot</a>(0));</div><div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;    softmaxLayer1-&gt;<a class="code" href="classarmnn_1_1_layer.xhtml#a0e36688a43c35668d8db5257274c68fe">GetOutputSlot</a>(0).<a class="code" href="classarmnn_1_1_output_slot.xhtml#adcfb97035799ea4c043f9ef370714815">Connect</a>(softmaxLayer2-&gt;<a class="code" href="classarmnn_1_1_layer.xhtml#acf8b8e23bf647836592982f97088d375">GetInputSlot</a>(0));</div><div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;    softmaxLayer2-&gt;<a class="code" href="classarmnn_1_1_layer.xhtml#a0e36688a43c35668d8db5257274c68fe">GetOutputSlot</a>(0).<a class="code" href="classarmnn_1_1_output_slot.xhtml#adcfb97035799ea4c043f9ef370714815">Connect</a>(softmaxLayer3-&gt;<a class="code" href="classarmnn_1_1_layer.xhtml#acf8b8e23bf647836592982f97088d375">GetInputSlot</a>(0));</div><div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;    softmaxLayer3-&gt;<a class="code" href="classarmnn_1_1_layer.xhtml#a0e36688a43c35668d8db5257274c68fe">GetOutputSlot</a>(0).<a class="code" href="classarmnn_1_1_output_slot.xhtml#adcfb97035799ea4c043f9ef370714815">Connect</a>(softmaxLayer4-&gt;<a class="code" href="classarmnn_1_1_layer.xhtml#acf8b8e23bf647836592982f97088d375">GetInputSlot</a>(0));</div><div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;    softmaxLayer4-&gt;<a class="code" href="classarmnn_1_1_layer.xhtml#a0e36688a43c35668d8db5257274c68fe">GetOutputSlot</a>(0).<a class="code" href="classarmnn_1_1_output_slot.xhtml#adcfb97035799ea4c043f9ef370714815">Connect</a>(outputLayer-&gt;<a class="code" href="classarmnn_1_1_layer.xhtml#acf8b8e23bf647836592982f97088d375">GetInputSlot</a>(0));</div><div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;</div><div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;    graph.<a class="code" href="classarmnn_1_1_graph.xhtml#a9a7209345edfdb2b066b0ceb66414d7c">TopologicalSort</a>();</div><div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;</div><div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;    std::vector&lt;std::string&gt; errors;</div><div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;    <span class="keyword">auto</span> result = <a class="code" href="namespacearmnn.xhtml#a86541d11fcad5246a78cbc21d637a504">SelectTensorHandleStrategy</a>(graph, backends, registry, <span class="keyword">true</span>, errors);</div><div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;</div><div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;    CHECK(result.m_Error == <span class="keyword">false</span>);</div><div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;    CHECK(result.m_Warning == <span class="keyword">false</span>);</div><div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;</div><div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;    <span class="comment">// OutputSlot&amp; inputLayerOut = inputLayer-&gt;GetOutputSlot(0);</span></div><div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;    <span class="comment">// OutputSlot&amp; softmaxLayer1Out = softmaxLayer1-&gt;GetOutputSlot(0);</span></div><div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;    <span class="comment">// OutputSlot&amp; softmaxLayer2Out = softmaxLayer2-&gt;GetOutputSlot(0);</span></div><div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;    <span class="comment">// OutputSlot&amp; softmaxLayer3Out = softmaxLayer3-&gt;GetOutputSlot(0);</span></div><div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;    <span class="comment">// OutputSlot&amp; softmaxLayer4Out = softmaxLayer4-&gt;GetOutputSlot(0);</span></div><div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;</div><div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;    <span class="comment">// // Check that the correct factory was selected</span></div><div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;    <span class="comment">// CHECK(inputLayerOut.GetTensorHandleFactoryId()    == &quot;Arm/Cl/TensorHandleFactory&quot;);</span></div><div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;    <span class="comment">// CHECK(softmaxLayer1Out.GetTensorHandleFactoryId() == &quot;Arm/Cl/TensorHandleFactory&quot;);</span></div><div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;    <span class="comment">// CHECK(softmaxLayer2Out.GetTensorHandleFactoryId() == &quot;Arm/Cl/TensorHandleFactory&quot;);</span></div><div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;    <span class="comment">// CHECK(softmaxLayer3Out.GetTensorHandleFactoryId() == &quot;Arm/Cl/TensorHandleFactory&quot;);</span></div><div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;    <span class="comment">// CHECK(softmaxLayer4Out.GetTensorHandleFactoryId() == &quot;Arm/Cl/TensorHandleFactory&quot;);</span></div><div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;</div><div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;    <span class="comment">// // Check that the correct strategy was selected</span></div><div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;    <span class="comment">// CHECK((inputLayerOut.GetEdgeStrategyForConnection(0) == EdgeStrategy::DirectCompatibility));</span></div><div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;    <span class="comment">// CHECK((softmaxLayer1Out.GetEdgeStrategyForConnection(0) == EdgeStrategy::DirectCompatibility));</span></div><div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;    <span class="comment">// CHECK((softmaxLayer2Out.GetEdgeStrategyForConnection(0) == EdgeStrategy::DirectCompatibility));</span></div><div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;    <span class="comment">// CHECK((softmaxLayer3Out.GetEdgeStrategyForConnection(0) == EdgeStrategy::DirectCompatibility));</span></div><div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;    <span class="comment">// CHECK((softmaxLayer4Out.GetEdgeStrategyForConnection(0) == EdgeStrategy::DirectCompatibility));</span></div><div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;</div><div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;    graph.<a class="code" href="classarmnn_1_1_graph.xhtml#ad1bbee7bf5f93b792675886f57d3ebe0">AddCompatibilityLayers</a>(backends, registry);</div><div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;</div><div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;    <span class="comment">// Test for copy layers</span></div><div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;    <span class="keywordtype">int</span> copyCount= 0;</div><div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;    graph.<a class="code" href="classarmnn_1_1_graph.xhtml#ad6521013ad981519904822f2ada2c4ec">ForEachLayer</a>([&amp;copyCount](<a class="code" href="classarmnn_1_1_layer.xhtml">Layer</a>* layer)</div><div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;    {</div><div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;        <span class="keywordflow">if</span> (layer-&gt;<a class="code" href="classarmnn_1_1_layer.xhtml#ad8e15c530c929ab823d89ae9fd2d3f11">GetType</a>() == <a class="code" href="namespacearmnn.xhtml#a56943a0946e5f15e5e58054b8e7a04a4a4dd48794eb3305a0f5aece88b111a97b">LayerType::MemCopy</a>)</div><div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;        {</div><div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;            copyCount++;</div><div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;        }</div><div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;    });</div><div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;    <span class="comment">// CHECK(copyCount == 0);</span></div><div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;</div><div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;    <span class="comment">// Test for import layers</span></div><div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;    <span class="keywordtype">int</span> importCount= 0;</div><div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;    graph.<a class="code" href="classarmnn_1_1_graph.xhtml#ad6521013ad981519904822f2ada2c4ec">ForEachLayer</a>([&amp;importCount](<a class="code" href="classarmnn_1_1_layer.xhtml">Layer</a> *layer)</div><div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;    {</div><div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;        <span class="keywordflow">if</span> (layer-&gt;<a class="code" href="classarmnn_1_1_layer.xhtml#ad8e15c530c929ab823d89ae9fd2d3f11">GetType</a>() == <a class="code" href="namespacearmnn.xhtml#a56943a0946e5f15e5e58054b8e7a04a4a115bfc5d633eae55c67f9588acdd2bf9">LayerType::MemImport</a>)</div><div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;        {</div><div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;            importCount++;</div><div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;        }</div><div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;    });</div><div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;    <span class="comment">// CHECK(importCount == 0);</span></div><div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;}</div><div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;</div><div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;}</div><div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;<span class="preprocessor">#endif</span></div><div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;</div><div class="line"><a name="l00129"></a><span class="lineno"><a class="line" href="_compatibility_tests_8cpp.xhtml#a98b6ed37baab5212d8686731c2d2df85">  129</a></span>&#160;<a class="code" href="namespacearmnn.xhtml#a1621fb2f10314c394c9023d3e090d394">TEST_SUITE</a>(<span class="stringliteral">&quot;BackendCapability&quot;</span>)</div><div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;{</div><div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;</div><div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;<span class="keyword">namespace</span></div><div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;{</div><div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;</div><div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;<span class="preprocessor">#if defined(ARMNNREF_ENABLED) || defined(ARMCOMPUTENEON_ENABLED) || defined(ARMCOMPUTECL_ENABLED)</span></div><div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;<span class="keywordtype">void</span> CapabilityTestHelper(<a class="code" href="structarmnn_1_1_backend_options.xhtml">BackendCapabilities</a> &amp;capabilities,</div><div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;                          std::vector&lt;std::pair&lt;std::string, bool&gt;&gt; capabilityVector)</div><div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;{</div><div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;    <span class="keywordflow">for</span> (<span class="keyword">auto</span> pair : capabilityVector)</div><div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;    {</div><div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;        CHECK_MESSAGE(<a class="code" href="namespacearmnn.xhtml#abd839f0f103c1ae19a4b38d59b869108">armnn::HasCapability</a>(pair.first, capabilities),</div><div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;                        pair.first &lt;&lt; <span class="stringliteral">&quot; capability was not been found&quot;</span>);</div><div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;        CHECK_MESSAGE(<a class="code" href="namespacearmnn.xhtml#abd839f0f103c1ae19a4b38d59b869108">armnn::HasCapability</a>(<a class="code" href="structarmnn_1_1_backend_options_1_1_backend_option.xhtml">BackendOptions::BackendOption</a>{pair.first, pair.second}, capabilities),</div><div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;                        pair.first &lt;&lt; <span class="stringliteral">&quot; capability set incorrectly&quot;</span>);</div><div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;    }</div><div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;}</div><div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;<span class="preprocessor">#endif</span></div><div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;</div><div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;<span class="preprocessor">#if defined(ARMNNREF_ENABLED)</span></div><div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;</div><div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;TEST_CASE(<span class="stringliteral">&quot;Ref_Backends_Unknown_Capability_Test&quot;</span>)</div><div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;{</div><div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;    <span class="keyword">auto</span> refBackend = std::make_unique&lt;RefBackend&gt;();</div><div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;    <span class="keyword">auto</span> refCapabilities = refBackend-&gt;GetCapabilities();</div><div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;</div><div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;    <a class="code" href="structarmnn_1_1_backend_options_1_1_backend_option.xhtml">armnn::BackendOptions::BackendOption</a> AsyncExecutionFalse{<span class="stringliteral">&quot;AsyncExecution&quot;</span>, <span class="keyword">false</span>};</div><div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160;    CHECK(!<a class="code" href="namespacearmnn.xhtml#abd839f0f103c1ae19a4b38d59b869108">armnn::HasCapability</a>(AsyncExecutionFalse, refCapabilities));</div><div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;</div><div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160;    <a class="code" href="structarmnn_1_1_backend_options_1_1_backend_option.xhtml">armnn::BackendOptions::BackendOption</a> AsyncExecutionInt{<span class="stringliteral">&quot;AsyncExecution&quot;</span>, 50};</div><div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160;    CHECK(!<a class="code" href="namespacearmnn.xhtml#abd839f0f103c1ae19a4b38d59b869108">armnn::HasCapability</a>(AsyncExecutionFalse, refCapabilities));</div><div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160;</div><div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160;    <a class="code" href="structarmnn_1_1_backend_options_1_1_backend_option.xhtml">armnn::BackendOptions::BackendOption</a> AsyncExecutionFloat{<span class="stringliteral">&quot;AsyncExecution&quot;</span>, 0.0f};</div><div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160;    CHECK(!<a class="code" href="namespacearmnn.xhtml#abd839f0f103c1ae19a4b38d59b869108">armnn::HasCapability</a>(AsyncExecutionFloat, refCapabilities));</div><div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;</div><div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160;    <a class="code" href="structarmnn_1_1_backend_options_1_1_backend_option.xhtml">armnn::BackendOptions::BackendOption</a> AsyncExecutionString{<span class="stringliteral">&quot;AsyncExecution&quot;</span>, <span class="stringliteral">&quot;true&quot;</span>};</div><div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160;    CHECK(!<a class="code" href="namespacearmnn.xhtml#abd839f0f103c1ae19a4b38d59b869108">armnn::HasCapability</a>(AsyncExecutionString, refCapabilities));</div><div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160;</div><div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160;    CHECK(!<a class="code" href="namespacearmnn.xhtml#abd839f0f103c1ae19a4b38d59b869108">armnn::HasCapability</a>(<span class="stringliteral">&quot;Telekinesis&quot;</span>, refCapabilities));</div><div class="line"><a name="l00169"></a><span class="lineno">  169</span>&#160;    <a class="code" href="structarmnn_1_1_backend_options_1_1_backend_option.xhtml">armnn::BackendOptions::BackendOption</a> unknownCapability{<span class="stringliteral">&quot;Telekinesis&quot;</span>, <span class="keyword">true</span>};</div><div class="line"><a name="l00170"></a><span class="lineno">  170</span>&#160;    CHECK(!<a class="code" href="namespacearmnn.xhtml#abd839f0f103c1ae19a4b38d59b869108">armnn::HasCapability</a>(unknownCapability, refCapabilities));</div><div class="line"><a name="l00171"></a><span class="lineno">  171</span>&#160;}</div><div class="line"><a name="l00172"></a><span class="lineno">  172</span>&#160;</div><div class="line"><a name="l00173"></a><span class="lineno">  173</span>&#160;TEST_CASE (<span class="stringliteral">&quot;Ref_Backends_Capability_Test&quot;</span>)</div><div class="line"><a name="l00174"></a><span class="lineno">  174</span>&#160;{</div><div class="line"><a name="l00175"></a><span class="lineno">  175</span>&#160;    <span class="keyword">auto</span> refBackend = std::make_unique&lt;RefBackend&gt;();</div><div class="line"><a name="l00176"></a><span class="lineno">  176</span>&#160;    <span class="keyword">auto</span> refCapabilities = refBackend-&gt;GetCapabilities();</div><div class="line"><a name="l00177"></a><span class="lineno">  177</span>&#160;</div><div class="line"><a name="l00178"></a><span class="lineno">  178</span>&#160;    CapabilityTestHelper(refCapabilities,</div><div class="line"><a name="l00179"></a><span class="lineno">  179</span>&#160;                         {{<span class="stringliteral">&quot;NonConstWeights&quot;</span>, <span class="keyword">true</span>},</div><div class="line"><a name="l00180"></a><span class="lineno">  180</span>&#160;                          {<span class="stringliteral">&quot;AsyncExecution&quot;</span>, <span class="keyword">true</span>},</div><div class="line"><a name="l00181"></a><span class="lineno">  181</span>&#160;                          {<span class="stringliteral">&quot;ProtectedContentAllocation&quot;</span>, <span class="keyword">false</span>},</div><div class="line"><a name="l00182"></a><span class="lineno">  182</span>&#160;                          {<span class="stringliteral">&quot;ConstantTensorsAsInputs&quot;</span>, <span class="keyword">true</span>},</div><div class="line"><a name="l00183"></a><span class="lineno">  183</span>&#160;                          {<span class="stringliteral">&quot;PreImportIOTensors&quot;</span>, <span class="keyword">true</span>},</div><div class="line"><a name="l00184"></a><span class="lineno">  184</span>&#160;                          {<span class="stringliteral">&quot;ExternallyManagedMemory&quot;</span>, <span class="keyword">true</span>},</div><div class="line"><a name="l00185"></a><span class="lineno">  185</span>&#160;                          {<span class="stringliteral">&quot;MultiAxisPacking&quot;</span>, <span class="keyword">false</span>}});</div><div class="line"><a name="l00186"></a><span class="lineno">  186</span>&#160;}</div><div class="line"><a name="l00187"></a><span class="lineno">  187</span>&#160;</div><div class="line"><a name="l00188"></a><span class="lineno">  188</span>&#160;<span class="preprocessor">#endif</span></div><div class="line"><a name="l00189"></a><span class="lineno">  189</span>&#160;</div><div class="line"><a name="l00190"></a><span class="lineno">  190</span>&#160;<span class="preprocessor">#if defined(ARMCOMPUTENEON_ENABLED)</span></div><div class="line"><a name="l00191"></a><span class="lineno">  191</span>&#160;</div><div class="line"><a name="l00192"></a><span class="lineno">  192</span>&#160;TEST_CASE (<span class="stringliteral">&quot;Neon_Backends_Capability_Test&quot;</span>)</div><div class="line"><a name="l00193"></a><span class="lineno">  193</span>&#160;{</div><div class="line"><a name="l00194"></a><span class="lineno">  194</span>&#160;    <span class="keyword">auto</span> neonBackend = std::make_unique&lt;NeonBackend&gt;();</div><div class="line"><a name="l00195"></a><span class="lineno">  195</span>&#160;    <span class="keyword">auto</span> neonCapabilities = neonBackend-&gt;GetCapabilities();</div><div class="line"><a name="l00196"></a><span class="lineno">  196</span>&#160;</div><div class="line"><a name="l00197"></a><span class="lineno">  197</span>&#160;    CapabilityTestHelper(neonCapabilities,</div><div class="line"><a name="l00198"></a><span class="lineno">  198</span>&#160;                         {{<span class="stringliteral">&quot;NonConstWeights&quot;</span>, <span class="keyword">false</span>},</div><div class="line"><a name="l00199"></a><span class="lineno">  199</span>&#160;                          {<span class="stringliteral">&quot;AsyncExecution&quot;</span>, <span class="keyword">false</span>},</div><div class="line"><a name="l00200"></a><span class="lineno">  200</span>&#160;                          {<span class="stringliteral">&quot;ProtectedContentAllocation&quot;</span>, <span class="keyword">false</span>},</div><div class="line"><a name="l00201"></a><span class="lineno">  201</span>&#160;                          {<span class="stringliteral">&quot;ConstantTensorsAsInputs&quot;</span>, <span class="keyword">false</span>},</div><div class="line"><a name="l00202"></a><span class="lineno">  202</span>&#160;                          {<span class="stringliteral">&quot;PreImportIOTensors&quot;</span>, <span class="keyword">false</span>},</div><div class="line"><a name="l00203"></a><span class="lineno">  203</span>&#160;                          {<span class="stringliteral">&quot;ExternallyManagedMemory&quot;</span>, <span class="keyword">true</span>},</div><div class="line"><a name="l00204"></a><span class="lineno">  204</span>&#160;                          {<span class="stringliteral">&quot;MultiAxisPacking&quot;</span>, <span class="keyword">false</span>}});</div><div class="line"><a name="l00205"></a><span class="lineno">  205</span>&#160;}</div><div class="line"><a name="l00206"></a><span class="lineno">  206</span>&#160;</div><div class="line"><a name="l00207"></a><span class="lineno">  207</span>&#160;<span class="preprocessor">#endif</span></div><div class="line"><a name="l00208"></a><span class="lineno">  208</span>&#160;</div><div class="line"><a name="l00209"></a><span class="lineno">  209</span>&#160;<span class="preprocessor">#if defined(ARMCOMPUTECL_ENABLED)</span></div><div class="line"><a name="l00210"></a><span class="lineno">  210</span>&#160;</div><div class="line"><a name="l00211"></a><span class="lineno">  211</span>&#160;TEST_CASE (<span class="stringliteral">&quot;Cl_Backends_Capability_Test&quot;</span>)</div><div class="line"><a name="l00212"></a><span class="lineno">  212</span>&#160;{</div><div class="line"><a name="l00213"></a><span class="lineno">  213</span>&#160;    <span class="keyword">auto</span> clBackend = std::make_unique&lt;ClBackend&gt;();</div><div class="line"><a name="l00214"></a><span class="lineno">  214</span>&#160;    <span class="keyword">auto</span> clCapabilities = clBackend-&gt;GetCapabilities();</div><div class="line"><a name="l00215"></a><span class="lineno">  215</span>&#160;</div><div class="line"><a name="l00216"></a><span class="lineno">  216</span>&#160;    CapabilityTestHelper(clCapabilities,</div><div class="line"><a name="l00217"></a><span class="lineno">  217</span>&#160;                         {{<span class="stringliteral">&quot;NonConstWeights&quot;</span>, <span class="keyword">false</span>},</div><div class="line"><a name="l00218"></a><span class="lineno">  218</span>&#160;                          {<span class="stringliteral">&quot;AsyncExecution&quot;</span>, <span class="keyword">false</span>},</div><div class="line"><a name="l00219"></a><span class="lineno">  219</span>&#160;                          {<span class="stringliteral">&quot;ProtectedContentAllocation&quot;</span>, <span class="keyword">true</span>},</div><div class="line"><a name="l00220"></a><span class="lineno">  220</span>&#160;                          {<span class="stringliteral">&quot;ConstantTensorsAsInputs&quot;</span>, <span class="keyword">false</span>},</div><div class="line"><a name="l00221"></a><span class="lineno">  221</span>&#160;                          {<span class="stringliteral">&quot;PreImportIOTensors&quot;</span>, <span class="keyword">false</span>},</div><div class="line"><a name="l00222"></a><span class="lineno">  222</span>&#160;                          {<span class="stringliteral">&quot;ExternallyManagedMemory&quot;</span>, <span class="keyword">true</span>},</div><div class="line"><a name="l00223"></a><span class="lineno">  223</span>&#160;                          {<span class="stringliteral">&quot;MultiAxisPacking&quot;</span>, <span class="keyword">false</span>}});</div><div class="line"><a name="l00224"></a><span class="lineno">  224</span>&#160;}</div><div class="line"><a name="l00225"></a><span class="lineno">  225</span>&#160;</div><div class="line"><a name="l00226"></a><span class="lineno">  226</span>&#160;<span class="preprocessor">#endif</span></div><div class="line"><a name="l00227"></a><span class="lineno">  227</span>&#160;}</div><div class="line"><a name="l00228"></a><span class="lineno">  228</span>&#160;}</div><div class="ttc" id="namespacearmnn_xhtml_a1621fb2f10314c394c9023d3e090d394"><div class="ttname"><a href="namespacearmnn.xhtml#a1621fb2f10314c394c9023d3e090d394">armnn::TEST_SUITE</a></div><div class="ttdeci">TEST_SUITE(&quot;TestConstTensorLayerVisitor&quot;)</div><div class="ttdef"><b>Definition:</b> <a href="_const_tensor_layer_visitor_8cpp_source.xhtml#l00110">ConstTensorLayerVisitor.cpp:110</a></div></div>
<div class="ttc" id="namespacearmnn_xhtml_abd839f0f103c1ae19a4b38d59b869108"><div class="ttname"><a href="namespacearmnn.xhtml#abd839f0f103c1ae19a4b38d59b869108">armnn::HasCapability</a></div><div class="ttdeci">bool HasCapability(const std::string &amp;name, const BackendCapabilities &amp;capabilities)</div><div class="ttdoc">Convenience function to check if a capability exists in a BackendCapabilites struct. </div><div class="ttdef"><b>Definition:</b> <a href="_backend_helper_8cpp_source.xhtml#l00058">BackendHelper.cpp:58</a></div></div>
<div class="ttc" id="_neon_backend_8hpp_xhtml"><div class="ttname"><a href="_neon_backend_8hpp.xhtml">NeonBackend.hpp</a></div></div>
<div class="ttc" id="classarmnn_1_1_graph_xhtml_a7563c5b899e7d0ada08fd0fdb202f205"><div class="ttname"><a href="classarmnn_1_1_graph.xhtml#a7563c5b899e7d0ada08fd0fdb202f205">armnn::Graph::AddLayer</a></div><div class="ttdeci">LayerT * AddLayer(Args &amp;&amp;... args)</div><div class="ttdoc">Adds a new layer, of type LayerType, to the graph constructed with the arguments passed. </div><div class="ttdef"><b>Definition:</b> <a href="_graph_8hpp_source.xhtml#l00420">Graph.hpp:420</a></div></div>
<div class="ttc" id="classarmnn_1_1_output_slot_xhtml_adcfb97035799ea4c043f9ef370714815"><div class="ttname"><a href="classarmnn_1_1_output_slot.xhtml#adcfb97035799ea4c043f9ef370714815">armnn::OutputSlot::Connect</a></div><div class="ttdeci">int Connect(InputSlot &amp;destination)</div><div class="ttdef"><b>Definition:</b> <a href="_layer_8cpp_source.xhtml#l00086">Layer.cpp:86</a></div></div>
<div class="ttc" id="_backend_helper_8hpp_xhtml"><div class="ttname"><a href="_backend_helper_8hpp.xhtml">BackendHelper.hpp</a></div></div>
<div class="ttc" id="namespacearmnn_xhtml"><div class="ttname"><a href="namespacearmnn.xhtml">armnn</a></div><div class="ttdoc">Copyright (c) 2021 ARM Limited and Contributors. </div><div class="ttdef"><b>Definition:</b> <a href="01__00__quick__start_8dox_source.xhtml#l00006">01_00_quick_start.dox:6</a></div></div>
<div class="ttc" id="classarmnn_1_1_layer_xhtml_a3f6ad59212fa8a47c9265162fff8a274"><div class="ttname"><a href="classarmnn_1_1_layer.xhtml#a3f6ad59212fa8a47c9265162fff8a274">armnn::Layer::SetBackendId</a></div><div class="ttdeci">void SetBackendId(const BackendId &amp;id)</div><div class="ttdef"><b>Definition:</b> <a href="_layer_8hpp_source.xhtml#l00275">Layer.hpp:275</a></div></div>
<div class="ttc" id="_cl_backend_8hpp_xhtml"><div class="ttname"><a href="_cl_backend_8hpp.xhtml">ClBackend.hpp</a></div></div>
<div class="ttc" id="classarmnn_1_1_layer_xhtml_acf8b8e23bf647836592982f97088d375"><div class="ttname"><a href="classarmnn_1_1_layer.xhtml#acf8b8e23bf647836592982f97088d375">armnn::Layer::GetInputSlot</a></div><div class="ttdeci">const InputSlot &amp; GetInputSlot(unsigned int index) const override</div><div class="ttdoc">Get a const input slot handle by slot index. </div><div class="ttdef"><b>Definition:</b> <a href="_layer_8hpp_source.xhtml#l00321">Layer.hpp:321</a></div></div>
<div class="ttc" id="classarmnn_1_1_output_layer_xhtml"><div class="ttname"><a href="classarmnn_1_1_output_layer.xhtml">armnn::OutputLayer</a></div><div class="ttdoc">A layer user-provided data can be bound to (e.g. inputs, outputs). </div><div class="ttdef"><b>Definition:</b> <a href="_output_layer_8hpp_source.xhtml#l00013">OutputLayer.hpp:13</a></div></div>
<div class="ttc" id="classarmnn_1_1_graph_xhtml_ad6521013ad981519904822f2ada2c4ec"><div class="ttname"><a href="classarmnn_1_1_graph.xhtml#ad6521013ad981519904822f2ada2c4ec">armnn::Graph::ForEachLayer</a></div><div class="ttdeci">void ForEachLayer(Func func) const</div><div class="ttdef"><b>Definition:</b> <a href="_graph_8hpp_source.xhtml#l00040">Graph.hpp:40</a></div></div>
<div class="ttc" id="_ref_backend_8hpp_xhtml"><div class="ttname"><a href="_ref_backend_8hpp.xhtml">RefBackend.hpp</a></div></div>
<div class="ttc" id="classarmnn_1_1_softmax_layer_xhtml"><div class="ttname"><a href="classarmnn_1_1_softmax_layer.xhtml">armnn::SoftmaxLayer</a></div><div class="ttdoc">This layer represents a softmax operation. </div><div class="ttdef"><b>Definition:</b> <a href="_softmax_layer_8hpp_source.xhtml#l00013">SoftmaxLayer.hpp:13</a></div></div>
<div class="ttc" id="classarmnn_1_1_layer_xhtml_ad8e15c530c929ab823d89ae9fd2d3f11"><div class="ttname"><a href="classarmnn_1_1_layer.xhtml#ad8e15c530c929ab823d89ae9fd2d3f11">armnn::Layer::GetType</a></div><div class="ttdeci">LayerType GetType() const override</div><div class="ttdoc">Returns the armnn::LayerType of this layer. </div><div class="ttdef"><b>Definition:</b> <a href="_layer_8hpp_source.xhtml#l00270">Layer.hpp:270</a></div></div>
<div class="ttc" id="namespacearmnn_xhtml_a56943a0946e5f15e5e58054b8e7a04a4a4dd48794eb3305a0f5aece88b111a97b"><div class="ttname"><a href="namespacearmnn.xhtml#a56943a0946e5f15e5e58054b8e7a04a4a4dd48794eb3305a0f5aece88b111a97b">armnn::LayerType::MemCopy</a></div></div>
<div class="ttc" id="classarmnn_1_1_graph_xhtml"><div class="ttname"><a href="classarmnn_1_1_graph.xhtml">armnn::Graph</a></div><div class="ttdef"><b>Definition:</b> <a href="_graph_8hpp_source.xhtml#l00030">Graph.hpp:30</a></div></div>
<div class="ttc" id="classarmnn_1_1_tensor_handle_factory_registry_xhtml"><div class="ttname"><a href="classarmnn_1_1_tensor_handle_factory_registry.xhtml">armnn::TensorHandleFactoryRegistry</a></div><div class="ttdef"><b>Definition:</b> <a href="_tensor_handle_factory_registry_8hpp_source.xhtml#l00022">TensorHandleFactoryRegistry.hpp:22</a></div></div>
<div class="ttc" id="structarmnn_1_1_backend_options_xhtml"><div class="ttname"><a href="structarmnn_1_1_backend_options.xhtml">armnn::BackendOptions</a></div><div class="ttdoc">Struct for the users to pass backend specific options. </div><div class="ttdef"><b>Definition:</b> <a href="_backend_options_8hpp_source.xhtml#l00022">BackendOptions.hpp:22</a></div></div>
<div class="ttc" id="namespacearmnn_xhtml_a56943a0946e5f15e5e58054b8e7a04a4a115bfc5d633eae55c67f9588acdd2bf9"><div class="ttname"><a href="namespacearmnn.xhtml#a56943a0946e5f15e5e58054b8e7a04a4a115bfc5d633eae55c67f9588acdd2bf9">armnn::LayerType::MemImport</a></div></div>
<div class="ttc" id="classarmnn_1_1_input_layer_xhtml"><div class="ttname"><a href="classarmnn_1_1_input_layer.xhtml">armnn::InputLayer</a></div><div class="ttdoc">A layer user-provided data can be bound to (e.g. inputs, outputs). </div><div class="ttdef"><b>Definition:</b> <a href="_input_layer_8hpp_source.xhtml#l00013">InputLayer.hpp:13</a></div></div>
<div class="ttc" id="_network_8hpp_xhtml"><div class="ttname"><a href="_network_8hpp.xhtml">Network.hpp</a></div></div>
<div class="ttc" id="classarmnn_1_1_layer_xhtml_a0e36688a43c35668d8db5257274c68fe"><div class="ttname"><a href="classarmnn_1_1_layer.xhtml#a0e36688a43c35668d8db5257274c68fe">armnn::Layer::GetOutputSlot</a></div><div class="ttdeci">const OutputSlot &amp; GetOutputSlot(unsigned int index=0) const override</div><div class="ttdoc">Get the const output slot handle by slot index. </div><div class="ttdef"><b>Definition:</b> <a href="_layer_8hpp_source.xhtml#l00323">Layer.hpp:323</a></div></div>
<div class="ttc" id="structarmnn_1_1_backend_options_1_1_backend_option_xhtml"><div class="ttname"><a href="structarmnn_1_1_backend_options_1_1_backend_option.xhtml">armnn::BackendOptions::BackendOption</a></div><div class="ttdef"><b>Definition:</b> <a href="_backend_options_8hpp_source.xhtml#l00215">BackendOptions.hpp:215</a></div></div>
<div class="ttc" id="namespacearmnn_xhtml_a86541d11fcad5246a78cbc21d637a504"><div class="ttname"><a href="namespacearmnn.xhtml#a86541d11fcad5246a78cbc21d637a504">armnn::SelectTensorHandleStrategy</a></div><div class="ttdeci">OptimizationResult SelectTensorHandleStrategy(Graph &amp;optGraph, BackendsMap &amp;backends, TensorHandleFactoryRegistry &amp;registry, bool importEnabled, Optional&lt; std::vector&lt; std::string &gt; &amp;&gt; errMessages)</div><div class="ttdef"><b>Definition:</b> <a href="_network_8cpp_source.xhtml#l01611">Network.cpp:1611</a></div></div>
<div class="ttc" id="classarmnn_1_1_graph_xhtml_a9a7209345edfdb2b066b0ceb66414d7c"><div class="ttname"><a href="classarmnn_1_1_graph.xhtml#a9a7209345edfdb2b066b0ceb66414d7c">armnn::Graph::TopologicalSort</a></div><div class="ttdeci">Graph &amp; TopologicalSort()</div><div class="ttdoc">Sorts layers in topological order and return this. </div><div class="ttdef"><b>Definition:</b> <a href="_graph_8hpp_source.xhtml#l00182">Graph.hpp:182</a></div></div>
<div class="ttc" id="structarmnn_1_1_softmax_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_softmax_descriptor.xhtml">armnn::SoftmaxDescriptor</a></div><div class="ttdoc">A SoftmaxDescriptor for the SoftmaxLayer. </div><div class="ttdef"><b>Definition:</b> <a href="_descriptors_8hpp_source.xhtml#l00150">Descriptors.hpp:150</a></div></div>
<div class="ttc" id="classarmnn_1_1_graph_xhtml_ad1bbee7bf5f93b792675886f57d3ebe0"><div class="ttname"><a href="classarmnn_1_1_graph.xhtml#ad1bbee7bf5f93b792675886f57d3ebe0">armnn::Graph::AddCompatibilityLayers</a></div><div class="ttdeci">void AddCompatibilityLayers(std::map&lt; BackendId, std::unique_ptr&lt; class IBackendInternal &gt;&gt; &amp;backends, TensorHandleFactoryRegistry &amp;registry)</div><div class="ttdoc">Modifies the graph in-place, removing edges connecting layers using different compute devices...</div><div class="ttdef"><b>Definition:</b> <a href="_graph_8cpp_source.xhtml#l00301">Graph.cpp:301</a></div></div>
<div class="ttc" id="classarmnn_1_1_layer_xhtml"><div class="ttname"><a href="classarmnn_1_1_layer.xhtml">armnn::Layer</a></div><div class="ttdef"><b>Definition:</b> <a href="_layer_8hpp_source.xhtml#l00215">Layer.hpp:215</a></div></div>
<div class="ttc" id="namespacearmnn_xhtml_a9173495a61a0092b5f38b855f02c3585"><div class="ttname"><a href="namespacearmnn.xhtml#a9173495a61a0092b5f38b855f02c3585">armnn::BackendsMap</a></div><div class="ttdeci">std::map&lt; BackendId, std::unique_ptr&lt; class IBackendInternal &gt; &gt; BackendsMap</div><div class="ttdef"><b>Definition:</b> <a href="_network_8hpp_source.xhtml#l00287">Network.hpp:287</a></div></div>
<div class="ttc" id="classarmnn_1_1_backend_id_xhtml"><div class="ttname"><a href="classarmnn_1_1_backend_id.xhtml">armnn::BackendId</a></div><div class="ttdef"><b>Definition:</b> <a href="_backend_id_8hpp_source.xhtml#l00075">BackendId.hpp:75</a></div></div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="dir_68267d1309a1af8e8297ef4c3efbcdba.xhtml">src</a></li><li class="navelem"><a class="el" href="dir_0f3cdec46afbc61a1ded8e1687c9c9a0.xhtml">backends</a></li><li class="navelem"><a class="el" href="dir_797a213d7d01b98ef12d53b0820ea64e.xhtml">backendsCommon</a></li><li class="navelem"><a class="el" href="dir_28bfe507f7e135bdae07c2a6b7f66696.xhtml">test</a></li><li class="navelem"><a class="el" href="_compatibility_tests_8cpp.xhtml">CompatibilityTests.cpp</a></li>
    <li class="footer">Generated on Wed Mar 9 2022 12:00:56 for ArmNN by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.13 </li>
  </ul>
</div>
</body>
</html>
