<!-- Copyright (c) 2020 ARM Limited. -->
<!--                                 -->
<!-- SPDX-License-Identifier: MIT    -->
<!--                                 -->
<!-- HTML header for doxygen 1.8.13-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.13"/>
<meta name="robots" content="NOINDEX, NOFOLLOW" />
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>ArmNN: src/profiling/test/ProfilingConnectionDumpToFileDecoratorTests.cpp File Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script><script type="text/javascript" src="http://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="stylesheet.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <img alt="ArmNN" src="Arm_NN_horizontal_blue.png" style="max-width: 10rem; margin-top: .5rem; margin-left 10px"/>
  <td style="padding-left: 0.5em;">
   <div id="projectname">
   &#160;<span id="projectnumber">22.05</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.13 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
$(document).ready(function(){initNavTree('_profiling_connection_dump_to_file_decorator_tests_8cpp.xhtml','');});
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="summary">
<a href="#func-members">Functions</a>  </div>
  <div class="headertitle">
<div class="title">ProfilingConnectionDumpToFileDecoratorTests.cpp File Reference</div>  </div>
</div><!--header-->
<div class="contents">
<div class="textblock"><code>#include &lt;client/src/ProfilingConnectionDumpToFileDecorator.hpp&gt;</code><br />
<code>#include &lt;<a class="el" href="_runtime_8hpp_source.xhtml">Runtime.hpp</a>&gt;</code><br />
<code>#include &lt;<a class="el" href="_filesystem_8hpp_source.xhtml">armnnUtils/Filesystem.hpp</a>&gt;</code><br />
<code>#include &lt;common/include/IgnoreUnused.hpp&gt;</code><br />
<code>#include &lt;common/include/NumericCast.hpp&gt;</code><br />
<code>#include &lt;fstream&gt;</code><br />
<code>#include &lt;sstream&gt;</code><br />
<code>#include &lt;doctest/doctest.h&gt;</code><br />
</div>
<p><a href="_profiling_connection_dump_to_file_decorator_tests_8cpp_source.xhtml">Go to the source code of this file.</a></p>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="func-members"></a>
Functions</h2></td></tr>
<tr class="memitem:a6710344455c19c8d72bc23b0836d0bbe"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_profiling_connection_dump_to_file_decorator_tests_8cpp.xhtml#a6710344455c19c8d72bc23b0836d0bbe">TEST_SUITE</a> (&quot;ProfilingConnectionDumpToFileDecoratorTests&quot;)</td></tr>
<tr class="separator:a6710344455c19c8d72bc23b0836d0bbe"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<h2 class="groupheader">Function Documentation</h2>
<a id="a6710344455c19c8d72bc23b0836d0bbe"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a6710344455c19c8d72bc23b0836d0bbe">&#9670;&nbsp;</a></span>TEST_SUITE()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">TEST_SUITE </td>
          <td>(</td>
          <td class="paramtype">&quot;ProfilingConnectionDumpToFileDecoratorTests&quot;&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_profiling_connection_dump_to_file_decorator_tests_8cpp_source.xhtml#l00081">81</a> of file <a class="el" href="_profiling_connection_dump_to_file_decorator_tests_8cpp_source.xhtml">ProfilingConnectionDumpToFileDecoratorTests.cpp</a>.</p>

<p class="reference">References <a class="el" href="_filesystem_8cpp_source.xhtml#l00024">armnnUtils::Filesystem::NamedTempFile()</a>.</p>
<div class="fragment"><div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;{</div><div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;TEST_CASE(<span class="stringliteral">&quot;DumpIncomingInvalidFile&quot;</span>)</div><div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;{</div><div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;    ProfilingOptions options;</div><div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;    options.m_IncomingCaptureFile = <span class="stringliteral">&quot;/&quot;</span>;</div><div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;    options.m_OutgoingCaptureFile =  <span class="stringliteral">&quot;&quot;</span>;</div><div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;    ProfilingConnectionDumpToFileDecorator decorator(std::make_unique&lt;DummyProfilingConnection&gt;(), options, <span class="keyword">false</span>);</div><div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;    CHECK_THROWS_AS(decorator.ReadPacket(0), arm::pipe::ProfilingException);</div><div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;}</div><div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;</div><div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;TEST_CASE(<span class="stringliteral">&quot;DumpIncomingInvalidFileIgnoreErrors&quot;</span>)</div><div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;{</div><div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;    ProfilingOptions options;</div><div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;    options.m_IncomingCaptureFile = <span class="stringliteral">&quot;/&quot;</span>;</div><div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;    options.m_OutgoingCaptureFile =  <span class="stringliteral">&quot;&quot;</span>;</div><div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;    ProfilingConnectionDumpToFileDecorator decorator(std::make_unique&lt;DummyProfilingConnection&gt;(), options, <span class="keyword">true</span>);</div><div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;    CHECK_NOTHROW(decorator.ReadPacket(0));</div><div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;}</div><div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;</div><div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;TEST_CASE(<span class="stringliteral">&quot;DumpIncomingValidFile&quot;</span>)</div><div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;{</div><div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;    fs::path fileName = <a class="code" href="namespacearmnn_utils_1_1_filesystem.xhtml#a606d65835d72a332109c3c9f96a01b8a">armnnUtils::Filesystem::NamedTempFile</a>(<span class="stringliteral">&quot;Armnn-DumpIncomingValidFileTest-TempFile&quot;</span>);</div><div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;</div><div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;    ProfilingOptions options;</div><div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;    options.m_IncomingCaptureFile = fileName.string();</div><div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;    options.m_OutgoingCaptureFile =  <span class="stringliteral">&quot;&quot;</span>;</div><div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;</div><div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;    ProfilingConnectionDumpToFileDecorator decorator(std::make_unique&lt;DummyProfilingConnection&gt;(), options, <span class="keyword">false</span>);</div><div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;</div><div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;    <span class="comment">// NOTE: unique_ptr is needed here because operator=() is deleted for Packet</span></div><div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;    std::unique_ptr&lt;Packet&gt; packet;</div><div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;    CHECK_NOTHROW(packet = std::make_unique&lt;Packet&gt;(decorator.ReadPacket(0)));</div><div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;</div><div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;    decorator.Close();</div><div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;</div><div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;    std::vector&lt;char&gt; data = ReadDumpFile(options.m_IncomingCaptureFile);</div><div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">char</span>* packetData = <span class="keyword">reinterpret_cast&lt;</span><span class="keyword">const </span><span class="keywordtype">char</span>*<span class="keyword">&gt;</span>(packet-&gt;GetData());</div><div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;</div><div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;    <span class="comment">// check if the data read back from the dump file matches the original</span></div><div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;    constexpr <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> bytesToSkip = 2u * <span class="keyword">sizeof</span>(uint32_t); <span class="comment">// skip header and packet length</span></div><div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;    <span class="keywordtype">int</span> diff = std::strncmp(data.data() + bytesToSkip, packetData, g_DataLength);</div><div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;    CHECK(diff == 0);</div><div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;    fs::remove(fileName);</div><div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;}</div><div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;</div><div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;TEST_CASE(<span class="stringliteral">&quot;DumpOutgoingInvalidFile&quot;</span>)</div><div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;{</div><div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;    ProfilingOptions options;</div><div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;    options.m_IncomingCaptureFile = <span class="stringliteral">&quot;&quot;</span>;</div><div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;    options.m_OutgoingCaptureFile = <span class="stringliteral">&quot;/&quot;</span>;</div><div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;    ProfilingConnectionDumpToFileDecorator decorator(std::make_unique&lt;DummyProfilingConnection&gt;(), options, <span class="keyword">false</span>);</div><div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;    CHECK_THROWS_AS(decorator.WritePacket(g_DataPtr, g_DataLength), arm::pipe::ProfilingException);</div><div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;}</div><div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;</div><div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;TEST_CASE(<span class="stringliteral">&quot;DumpOutgoingInvalidFileIgnoreErrors&quot;</span>)</div><div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;{</div><div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;    ProfilingOptions options;</div><div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;    options.m_IncomingCaptureFile = <span class="stringliteral">&quot;&quot;</span>;</div><div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;    options.m_OutgoingCaptureFile = <span class="stringliteral">&quot;/&quot;</span>;</div><div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;</div><div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;    ProfilingConnectionDumpToFileDecorator decorator(std::make_unique&lt;DummyProfilingConnection&gt;(), options, <span class="keyword">true</span>);</div><div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;    CHECK_NOTHROW(decorator.WritePacket(g_DataPtr, g_DataLength));</div><div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;</div><div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;    <span class="keywordtype">bool</span> success = decorator.WritePacket(g_DataPtr, g_DataLength);</div><div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;    CHECK(!success);</div><div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;}</div><div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;</div><div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;TEST_CASE(<span class="stringliteral">&quot;DumpOutgoingValidFile&quot;</span>)</div><div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;{</div><div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;    fs::path fileName = <a class="code" href="namespacearmnn_utils_1_1_filesystem.xhtml#a606d65835d72a332109c3c9f96a01b8a">armnnUtils::Filesystem::NamedTempFile</a>(<span class="stringliteral">&quot;Armnn-DumpOutgoingValidFileTest-TempFile&quot;</span>);</div><div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;</div><div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;    ProfilingOptions options;</div><div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;    options.m_IncomingCaptureFile = <span class="stringliteral">&quot;&quot;</span>;</div><div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;    options.m_OutgoingCaptureFile = fileName.string();</div><div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;</div><div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160;    ProfilingConnectionDumpToFileDecorator decorator(std::make_unique&lt;DummyProfilingConnection&gt;(), options, <span class="keyword">false</span>);</div><div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;</div><div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160;    <span class="keywordtype">bool</span> success = <span class="keyword">false</span>;</div><div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160;    CHECK_NOTHROW(success = decorator.WritePacket(g_DataPtr, g_DataLength));</div><div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160;    CHECK(success);</div><div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160;</div><div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160;    decorator.Close();</div><div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;</div><div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160;    std::vector&lt;char&gt; data = ReadDumpFile(options.m_OutgoingCaptureFile);</div><div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160;</div><div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160;    <span class="comment">// check if the data read back from the dump file matches the original</span></div><div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160;    <span class="keywordtype">int</span> diff = std::strncmp(data.data(), g_Data.data(), g_DataLength);</div><div class="line"><a name="l00169"></a><span class="lineno">  169</span>&#160;    CHECK(diff == 0);</div><div class="line"><a name="l00170"></a><span class="lineno">  170</span>&#160;    fs::remove(fileName);</div><div class="line"><a name="l00171"></a><span class="lineno">  171</span>&#160;}</div><div class="line"><a name="l00172"></a><span class="lineno">  172</span>&#160;</div><div class="line"><a name="l00173"></a><span class="lineno">  173</span>&#160;}</div><div class="ttc" id="namespacearmnn_utils_1_1_filesystem_xhtml_a606d65835d72a332109c3c9f96a01b8a"><div class="ttname"><a href="namespacearmnn_utils_1_1_filesystem.xhtml#a606d65835d72a332109c3c9f96a01b8a">armnnUtils::Filesystem::NamedTempFile</a></div><div class="ttdeci">fs::path NamedTempFile(const char *fileName)</div><div class="ttdoc">Returns a path to a file in the system temporary folder. If the file existed it will be deleted...</div><div class="ttdef"><b>Definition:</b> <a href="_filesystem_8cpp_source.xhtml#l00024">Filesystem.cpp:24</a></div></div>
</div><!-- fragment -->
</div>
</div>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="dir_68267d1309a1af8e8297ef4c3efbcdba.xhtml">src</a></li><li class="navelem"><a class="el" href="dir_637c692f14729569dd2eac0c18e2a54a.xhtml">profiling</a></li><li class="navelem"><a class="el" href="dir_6b1198f6e738611120ec65b09506d2f8.xhtml">test</a></li><li class="navelem"><a class="el" href="_profiling_connection_dump_to_file_decorator_tests_8cpp.xhtml">ProfilingConnectionDumpToFileDecoratorTests.cpp</a></li>
    <li class="footer">Generated on Tue May 24 2022 11:27:20 for ArmNN by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.13 </li>
  </ul>
</div>
</body>
</html>
