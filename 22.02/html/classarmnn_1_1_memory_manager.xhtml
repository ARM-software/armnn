<!-- Copyright (c) 2020 ARM Limited. -->
<!--                                 -->
<!-- SPDX-License-Identifier: MIT    -->
<!--                                 -->
<!-- HTML header for doxygen 1.8.13-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.13"/>
<meta name="robots" content="NOINDEX, NOFOLLOW" />
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>ArmNN: MemoryManager Class Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script><script type="text/javascript" src="http://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="stylesheet.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <img alt="ArmNN" src="Arm_NN_horizontal_blue.png" style="max-width: 10rem; margin-top: .5rem; margin-left 10px"/>
  <td style="padding-left: 0.5em;">
   <div id="projectname">
   &#160;<span id="projectnumber">22.02</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.13 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
$(document).ready(function(){initNavTree('classarmnn_1_1_memory_manager.xhtml','');});
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="summary">
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="classarmnn_1_1_memory_manager-members.xhtml">List of all members</a>  </div>
  <div class="headertitle">
<div class="title">MemoryManager Class Reference</div>  </div>
</div><!--header-->
<div class="contents">

<p><code>#include &lt;<a class="el" href="_memory_manager_8hpp_source.xhtml">MemoryManager.hpp</a>&gt;</code></p>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:a07bc28679b487cc58281a168c3a1c18b"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_memory_manager.xhtml#a07bc28679b487cc58281a168c3a1c18b">StoreMemToAllocate</a> (std::vector&lt; <a class="el" href="structarmnn_1_1_buffer_storage.xhtml">BufferStorage</a> &gt; bufferStorageVector, std::shared_ptr&lt; <a class="el" href="classarmnn_1_1_i_custom_allocator.xhtml">ICustomAllocator</a> &gt; customAllocator, size_t typeAlignment=0)</td></tr>
<tr class="memdesc:a07bc28679b487cc58281a168c3a1c18b"><td class="mdescLeft">&#160;</td><td class="mdescRight">Initialization method to store in  all information needed.  <a href="#a07bc28679b487cc58281a168c3a1c18b">More...</a><br /></td></tr>
<tr class="separator:a07bc28679b487cc58281a168c3a1c18b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a36571ba095c5f84e8dbaee44d9068af8"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_memory_manager.xhtml#a36571ba095c5f84e8dbaee44d9068af8">Allocate</a> ()</td></tr>
<tr class="memdesc:a36571ba095c5f84e8dbaee44d9068af8"><td class="mdescLeft">&#160;</td><td class="mdescRight">Allocate the amount of memory indicated by , and point each  to each correspondent <a class="el" href="classarmnn_1_1_tensor.xhtml" title="A tensor defined by a TensorInfo (shape and data type) and a mutable backing store. ">Tensor</a> so that they are  bytes separated.  <a href="#a36571ba095c5f84e8dbaee44d9068af8">More...</a><br /></td></tr>
<tr class="separator:a36571ba095c5f84e8dbaee44d9068af8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:afaf63777ab6c7323a7b4eceecdfee3df"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_memory_manager.xhtml#afaf63777ab6c7323a7b4eceecdfee3df">Deallocate</a> ()</td></tr>
<tr class="memdesc:afaf63777ab6c7323a7b4eceecdfee3df"><td class="mdescLeft">&#160;</td><td class="mdescRight">Deallocate memory.  <a href="#afaf63777ab6c7323a7b4eceecdfee3df">More...</a><br /></td></tr>
<tr class="separator:afaf63777ab6c7323a7b4eceecdfee3df"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock">
<p class="definition">Definition at line <a class="el" href="_memory_manager_8hpp_source.xhtml#l00039">39</a> of file <a class="el" href="_memory_manager_8hpp_source.xhtml">MemoryManager.hpp</a>.</p>
</div><h2 class="groupheader">Member Function Documentation</h2>
<a id="a36571ba095c5f84e8dbaee44d9068af8"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a36571ba095c5f84e8dbaee44d9068af8">&#9670;&nbsp;</a></span>Allocate()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void Allocate </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Allocate the amount of memory indicated by , and point each  to each correspondent <a class="el" href="classarmnn_1_1_tensor.xhtml" title="A tensor defined by a TensorInfo (shape and data type) and a mutable backing store. ">Tensor</a> so that they are  bytes separated. </p>

<p class="definition">Definition at line <a class="el" href="_memory_manager_8cpp_source.xhtml#l00023">23</a> of file <a class="el" href="_memory_manager_8cpp_source.xhtml">MemoryManager.cpp</a>.</p>

<p class="reference">Referenced by <a class="el" href="_memory_manager_tests_8cpp_source.xhtml#l00053">armnn::TEST_SUITE()</a>.</p>
<div class="fragment"><div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;{</div><div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;    <span class="keywordflow">for</span> (<span class="keyword">auto</span>&amp; m_AllocatorBufferStoragePair : m_AllocatorBufferStoragePairVector)</div><div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;    {</div><div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;        <span class="keyword">auto</span>&amp; allocator = m_AllocatorBufferStoragePair.first;</div><div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;        <span class="keywordflow">for</span> (<span class="keyword">auto</span>&amp;&amp; bufferStorage : m_AllocatorBufferStoragePair.second)</div><div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;        {</div><div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;           bufferStorage.m_Buffer = allocator.m_CustomAllocator-&gt;allocate(bufferStorage.m_BufferSize, 0);</div><div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;</div><div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;            <span class="keywordflow">for</span> (<span class="keyword">auto</span> tensorMemory : bufferStorage.m_TensorMemoryVector)</div><div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;            {</div><div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;                tensorMemory-&gt;m_Data = allocator.m_CustomAllocator-&gt;GetMemoryRegionAtOffset(bufferStorage.m_Buffer,</div><div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;                                                                                            tensorMemory-&gt;m_Offset);</div><div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;            }</div><div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;        }</div><div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;    }</div><div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;}</div></div><!-- fragment -->
</div>
</div>
<a id="afaf63777ab6c7323a7b4eceecdfee3df"></a>
<h2 class="memtitle"><span class="permalink"><a href="#afaf63777ab6c7323a7b4eceecdfee3df">&#9670;&nbsp;</a></span>Deallocate()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void Deallocate </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Deallocate memory. </p>

<p class="definition">Definition at line <a class="el" href="_memory_manager_8cpp_source.xhtml#l00041">41</a> of file <a class="el" href="_memory_manager_8cpp_source.xhtml">MemoryManager.cpp</a>.</p>

<p class="reference">Referenced by <a class="el" href="_memory_manager_tests_8cpp_source.xhtml#l00053">armnn::TEST_SUITE()</a>.</p>
<div class="fragment"><div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;{</div><div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;    <span class="keywordflow">for</span> (<span class="keyword">auto</span>&amp; m_AllocatorBufferStoragePair : m_AllocatorBufferStoragePairVector)</div><div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;    {</div><div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;        <span class="keyword">auto</span>&amp; allocator = m_AllocatorBufferStoragePair.first;</div><div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;        <span class="keywordflow">for</span> (<span class="keyword">auto</span>&amp;&amp; bufferStorage : m_AllocatorBufferStoragePair.second)</div><div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;        {</div><div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;            allocator.m_CustomAllocator-&gt;free(bufferStorage.m_Buffer);</div><div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;        }</div><div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;    }</div><div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;}</div></div><!-- fragment -->
</div>
</div>
<a id="a07bc28679b487cc58281a168c3a1c18b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a07bc28679b487cc58281a168c3a1c18b">&#9670;&nbsp;</a></span>StoreMemToAllocate()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void StoreMemToAllocate </td>
          <td>(</td>
          <td class="paramtype">std::vector&lt; <a class="el" href="structarmnn_1_1_buffer_storage.xhtml">BufferStorage</a> &gt;&#160;</td>
          <td class="paramname"><em>bufferStorageVector</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">std::shared_ptr&lt; <a class="el" href="classarmnn_1_1_i_custom_allocator.xhtml">ICustomAllocator</a> &gt;&#160;</td>
          <td class="paramname"><em>customAllocator</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">size_t&#160;</td>
          <td class="paramname"><em>typeAlignment</em> = <code>0</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Initialization method to store in  all information needed. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">bufferStorageVector</td><td>- Vector of . </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">customAllocator</td><td>- Pointer to . </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">typeAlignment</td><td>- <a class="el" href="classarmnn_1_1_optional.xhtml">Optional</a> parameter. Value of which the size of each value has to be multiple of. </td></tr>
  </table>
  </dd>
</dl>

<p class="definition">Definition at line <a class="el" href="_memory_manager_8cpp_source.xhtml#l00013">13</a> of file <a class="el" href="_memory_manager_8cpp_source.xhtml">MemoryManager.cpp</a>.</p>

<p class="reference">References <a class="el" href="_ignore_unused_8hpp_source.xhtml#l00014">armnn::IgnoreUnused()</a>.</p>

<p class="reference">Referenced by <a class="el" href="_memory_manager_tests_8cpp_source.xhtml#l00053">armnn::TEST_SUITE()</a>.</p>
<div class="fragment"><div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;{</div><div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;    <a class="code" href="namespacearmnn.xhtml#a44affeeb090c3c6a3062830562672e84">IgnoreUnused</a>(typeAlignment);</div><div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;    m_AllocatorBufferStoragePairVector.emplace_back(std::make_pair&lt;Allocator, std::vector&lt;BufferStorage&gt;&gt;(</div><div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;                                                    Allocator{customAllocator},</div><div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;                                                    std::move(bufferStorageVector)));</div><div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;}</div><div class="ttc" id="namespacearmnn_xhtml_a44affeeb090c3c6a3062830562672e84"><div class="ttname"><a href="namespacearmnn.xhtml#a44affeeb090c3c6a3062830562672e84">armnn::IgnoreUnused</a></div><div class="ttdeci">void IgnoreUnused(Ts &amp;&amp;...)</div><div class="ttdef"><b>Definition:</b> <a href="_ignore_unused_8hpp_source.xhtml#l00014">IgnoreUnused.hpp:14</a></div></div>
</div><!-- fragment -->
</div>
</div>
<hr/>The documentation for this class was generated from the following files:<ul>
<li>src/backends/backendsCommon/<a class="el" href="_memory_manager_8hpp_source.xhtml">MemoryManager.hpp</a></li>
<li>src/backends/backendsCommon/<a class="el" href="_memory_manager_8cpp_source.xhtml">MemoryManager.cpp</a></li>
</ul>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="namespacearmnn.xhtml">armnn</a></li><li class="navelem"><a class="el" href="classarmnn_1_1_memory_manager.xhtml">MemoryManager</a></li>
    <li class="footer">Generated on Tue Feb 22 2022 11:39:48 for ArmNN by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.13 </li>
  </ul>
</div>
</body>
</html>
