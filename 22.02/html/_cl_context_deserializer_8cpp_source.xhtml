<!-- Copyright (c) 2020 ARM Limited. -->
<!--                                 -->
<!-- SPDX-License-Identifier: MIT    -->
<!--                                 -->
<!-- HTML header for doxygen 1.8.13-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.13"/>
<meta name="robots" content="NOINDEX, NOFOLLOW" />
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>ArmNN: src/backends/cl/ClContextDeserializer.cpp Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script><script type="text/javascript" src="http://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="stylesheet.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <img alt="ArmNN" src="Arm_NN_horizontal_blue.png" style="max-width: 10rem; margin-top: .5rem; margin-left 10px"/>
  <td style="padding-left: 0.5em;">
   <div id="projectname">
   &#160;<span id="projectnumber">22.02</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.13 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
$(document).ready(function(){initNavTree('_cl_context_deserializer_8cpp_source.xhtml','');});
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="headertitle">
<div class="title">ClContextDeserializer.cpp</div>  </div>
</div><!--header-->
<div class="contents">
<a href="_cl_context_deserializer_8cpp.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="comment">//</span></div><div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="comment">// Copyright Â© 2020 Arm Ltd and Contributors. All rights reserved.</span></div><div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="comment">// SPDX-License-Identifier: MIT</span></div><div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="comment">//</span></div><div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;</div><div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_cl_context_deserializer_8hpp.xhtml">ClContextDeserializer.hpp</a>&quot;</span></div><div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_cl_context_schema__generated_8h.xhtml">ClContextSchema_generated.h</a>&quot;</span></div><div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;</div><div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="preprocessor">#include &lt;<a class="code" href="_exceptions_8hpp.xhtml">armnn/Exceptions.hpp</a>&gt;</span></div><div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="preprocessor">#include &lt;<a class="code" href="_numeric_cast_8hpp.xhtml">armnn/utility/NumericCast.hpp</a>&gt;</span></div><div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;</div><div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;<span class="preprocessor">#include &lt;flatbuffers/flexbuffers.h&gt;</span></div><div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;</div><div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;<span class="preprocessor">#include &lt;fmt/format.h&gt;</span></div><div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;</div><div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;<span class="preprocessor">#include &lt;cstdlib&gt;</span></div><div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;<span class="preprocessor">#include &lt;fstream&gt;</span></div><div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;<span class="preprocessor">#include &lt;iostream&gt;</span></div><div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;<span class="preprocessor">#include &lt;vector&gt;</span></div><div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;</div><div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;<span class="keyword">namespace </span><a class="code" href="namespacearmnn.xhtml">armnn</a></div><div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;{</div><div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;</div><div class="line"><a name="l00024"></a><span class="lineno"><a class="line" href="classarmnn_1_1_cl_context_deserializer.xhtml#abc96e506e291bdb238d60bb46fc0d105">   24</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="classarmnn_1_1_cl_context_deserializer.xhtml#abc96e506e291bdb238d60bb46fc0d105">ClContextDeserializer::Deserialize</a>(arm_compute::CLCompileContext&amp; clCompileContext,</div><div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;                                        cl::Context&amp; context,</div><div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;                                        cl::Device&amp; device,</div><div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;                                        <span class="keyword">const</span> std::string&amp; filePath)</div><div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;{</div><div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;    std::ifstream inputFileStream(filePath, std::ios::binary);</div><div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;    std::vector&lt;std::uint8_t&gt; binaryContent;</div><div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;    <span class="keywordflow">while</span> (inputFileStream)</div><div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;    {</div><div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;        <span class="keywordtype">char</span> input;</div><div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;        inputFileStream.get(input);</div><div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;        <span class="keywordflow">if</span> (inputFileStream)</div><div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;        {</div><div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;            binaryContent.push_back(static_cast&lt;std::uint8_t&gt;(input));</div><div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;        }</div><div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;    }</div><div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;    inputFileStream.close();</div><div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;    <a class="code" href="classarmnn_1_1_cl_context_deserializer.xhtml#aef8850786daf73d7b0a0215362d8fb99">DeserializeFromBinary</a>(clCompileContext, context, device, binaryContent);</div><div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;}</div><div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;</div><div class="line"><a name="l00044"></a><span class="lineno"><a class="line" href="classarmnn_1_1_cl_context_deserializer.xhtml#aef8850786daf73d7b0a0215362d8fb99">   44</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="classarmnn_1_1_cl_context_deserializer.xhtml#aef8850786daf73d7b0a0215362d8fb99">ClContextDeserializer::DeserializeFromBinary</a>(arm_compute::CLCompileContext&amp; clCompileContext,</div><div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;                                                  cl::Context&amp; context,</div><div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;                                                  cl::Device&amp; device,</div><div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;                                                  <span class="keyword">const</span> std::vector&lt;uint8_t&gt;&amp; binaryContent)</div><div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;{</div><div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;    <span class="keywordflow">if</span> (binaryContent.data() == <span class="keyword">nullptr</span>)</div><div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;    {</div><div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;        <span class="keywordflow">throw</span> <a class="code" href="classarmnn_1_1_invalid_argument_exception.xhtml">InvalidArgumentException</a>(fmt::format(<span class="stringliteral">&quot;Invalid (null) binary content {}&quot;</span>,</div><div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;                                                   <a class="code" href="_exceptions_8hpp.xhtml#aa3be76aec4ce713822a5ea1ecbb7bc61">CHECK_LOCATION</a>().AsString()));</div><div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;    }</div><div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;</div><div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;    <span class="keywordtype">size_t</span> binaryContentSize = binaryContent.size();</div><div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;    flatbuffers::Verifier verifier(binaryContent.data(), binaryContentSize);</div><div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;    <span class="keywordflow">if</span> (verifier.VerifyBuffer&lt;ClContext&gt;() == <span class="keyword">false</span>)</div><div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;    {</div><div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;        <span class="keywordflow">throw</span> <a class="code" href="classarmnn_1_1_parse_exception.xhtml">ParseException</a>(fmt::format(<span class="stringliteral">&quot;Buffer doesn&#39;t conform to the expected Armnn &quot;</span></div><div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;                                         <span class="stringliteral">&quot;flatbuffers format. size:{0} {1}&quot;</span>,</div><div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;                                         binaryContentSize,</div><div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;                                         <a class="code" href="_exceptions_8hpp.xhtml#aa3be76aec4ce713822a5ea1ecbb7bc61">CHECK_LOCATION</a>().AsString()));</div><div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;    }</div><div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;    <span class="keyword">auto</span> clContext = <a class="code" href="namespacearmnn.xhtml#ac3dec65fab0e6a1a6fef52e6321b4993">GetClContext</a>(binaryContent.data());</div><div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;</div><div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;    <span class="keywordflow">for</span> (Program <span class="keyword">const</span>* program : *clContext-&gt;programs())</div><div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;    {</div><div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;        <span class="keyword">const</span> <span class="keywordtype">char</span>* <span class="keyword">volatile</span> programName = program-&gt;name()-&gt;c_str();</div><div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;        <span class="keyword">auto</span> programBinary = program-&gt;binary();</div><div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;        std::vector&lt;uint8_t&gt; binary(programBinary-&gt;begin(), programBinary-&gt;begin() + programBinary-&gt;size());</div><div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;</div><div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;        cl::Program::Binaries   binaries{ binary };</div><div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;        std::vector&lt;cl::Device&gt; devices {device};</div><div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;        cl::Program             theProgram(context, devices, binaries);</div><div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;        theProgram.build();</div><div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;        clCompileContext.add_built_program(programName, theProgram);</div><div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;    }</div><div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;}</div><div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;</div><div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;} <span class="comment">// namespace armnn</span></div><div class="ttc" id="_cl_context_schema__generated_8h_xhtml"><div class="ttname"><a href="_cl_context_schema__generated_8h.xhtml">ClContextSchema_generated.h</a></div></div>
<div class="ttc" id="namespacearmnn_xhtml"><div class="ttname"><a href="namespacearmnn.xhtml">armnn</a></div><div class="ttdoc">Copyright (c) 2021 ARM Limited and Contributors. </div><div class="ttdef"><b>Definition:</b> <a href="01__00__quick__start_8dox_source.xhtml#l00006">01_00_quick_start.dox:6</a></div></div>
<div class="ttc" id="classarmnn_1_1_cl_context_deserializer_xhtml_aef8850786daf73d7b0a0215362d8fb99"><div class="ttname"><a href="classarmnn_1_1_cl_context_deserializer.xhtml#aef8850786daf73d7b0a0215362d8fb99">armnn::ClContextDeserializer::DeserializeFromBinary</a></div><div class="ttdeci">void DeserializeFromBinary(arm_compute::CLCompileContext &amp;clCompileContext, cl::Context &amp;context, cl::Device &amp;device, const std::vector&lt; uint8_t &gt; &amp;binaryContent)</div><div class="ttdoc">Deserializes the CLCompileContext built-in programs from binary file contents. </div><div class="ttdef"><b>Definition:</b> <a href="_cl_context_deserializer_8cpp_source.xhtml#l00044">ClContextDeserializer.cpp:44</a></div></div>
<div class="ttc" id="_numeric_cast_8hpp_xhtml"><div class="ttname"><a href="_numeric_cast_8hpp.xhtml">NumericCast.hpp</a></div></div>
<div class="ttc" id="namespacearmnn_xhtml_ac3dec65fab0e6a1a6fef52e6321b4993"><div class="ttname"><a href="namespacearmnn.xhtml#ac3dec65fab0e6a1a6fef52e6321b4993">armnn::GetClContext</a></div><div class="ttdeci">const armnn::ClContext * GetClContext(const void *buf)</div><div class="ttdef"><b>Definition:</b> <a href="_cl_context_schema__generated_8h_source.xhtml#l00140">ClContextSchema_generated.h:140</a></div></div>
<div class="ttc" id="classarmnn_1_1_invalid_argument_exception_xhtml"><div class="ttname"><a href="classarmnn_1_1_invalid_argument_exception.xhtml">armnn::InvalidArgumentException</a></div><div class="ttdef"><b>Definition:</b> <a href="_exceptions_8hpp_source.xhtml#l00080">Exceptions.hpp:80</a></div></div>
<div class="ttc" id="_exceptions_8hpp_xhtml_aa3be76aec4ce713822a5ea1ecbb7bc61"><div class="ttname"><a href="_exceptions_8hpp.xhtml#aa3be76aec4ce713822a5ea1ecbb7bc61">CHECK_LOCATION</a></div><div class="ttdeci">#define CHECK_LOCATION()</div><div class="ttdef"><b>Definition:</b> <a href="_exceptions_8hpp_source.xhtml#l00209">Exceptions.hpp:209</a></div></div>
<div class="ttc" id="classarmnn_1_1_cl_context_deserializer_xhtml_abc96e506e291bdb238d60bb46fc0d105"><div class="ttname"><a href="classarmnn_1_1_cl_context_deserializer.xhtml#abc96e506e291bdb238d60bb46fc0d105">armnn::ClContextDeserializer::Deserialize</a></div><div class="ttdeci">void Deserialize(arm_compute::CLCompileContext &amp;clCompileContext, cl::Context &amp;context, cl::Device &amp;device, const std::string &amp;filePath)</div><div class="ttdoc">Deserializes the CLCompileContext built-in programs from a binary file. </div><div class="ttdef"><b>Definition:</b> <a href="_cl_context_deserializer_8cpp_source.xhtml#l00024">ClContextDeserializer.cpp:24</a></div></div>
<div class="ttc" id="classarmnn_1_1_parse_exception_xhtml"><div class="ttname"><a href="classarmnn_1_1_parse_exception.xhtml">armnn::ParseException</a></div><div class="ttdef"><b>Definition:</b> <a href="_exceptions_8hpp_source.xhtml#l00092">Exceptions.hpp:92</a></div></div>
<div class="ttc" id="_exceptions_8hpp_xhtml"><div class="ttname"><a href="_exceptions_8hpp.xhtml">Exceptions.hpp</a></div></div>
<div class="ttc" id="_cl_context_deserializer_8hpp_xhtml"><div class="ttname"><a href="_cl_context_deserializer_8hpp.xhtml">ClContextDeserializer.hpp</a></div></div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="dir_68267d1309a1af8e8297ef4c3efbcdba.xhtml">src</a></li><li class="navelem"><a class="el" href="dir_0f3cdec46afbc61a1ded8e1687c9c9a0.xhtml">backends</a></li><li class="navelem"><a class="el" href="dir_1ad86c6d39ab715a831555571b9e98a5.xhtml">cl</a></li><li class="navelem"><a class="el" href="_cl_context_deserializer_8cpp.xhtml">ClContextDeserializer.cpp</a></li>
    <li class="footer">Generated on Tue Feb 22 2022 11:39:34 for ArmNN by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.13 </li>
  </ul>
</div>
</body>
</html>
