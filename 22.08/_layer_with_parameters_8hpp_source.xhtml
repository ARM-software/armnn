<!-- Copyright (c) 2020 ARM Limited. -->
<!--                                 -->
<!-- SPDX-License-Identifier: MIT    -->
<!--                                 -->
<!-- HTML header for doxygen 1.8.13-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.13"/>
<meta name="robots" content="NOINDEX, NOFOLLOW" />
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>ArmNN: src/armnn/layers/LayerWithParameters.hpp Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script><script type="text/javascript" src="http://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="stylesheet.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <img alt="ArmNN" src="Arm_NN_horizontal_blue.png" style="max-width: 10rem; margin-top: .5rem; margin-left 10px"/>
  <td style="padding-left: 0.5em;">
   <div id="projectname">
   &#160;<span id="projectnumber">22.08</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.13 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
$(document).ready(function(){initNavTree('_layer_with_parameters_8hpp_source.xhtml','');});
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="headertitle">
<div class="title">LayerWithParameters.hpp</div>  </div>
</div><!--header-->
<div class="contents">
<a href="_layer_with_parameters_8hpp.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="comment">//</span></div><div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="comment">// Copyright Â© 2017 Arm Ltd. All rights reserved.</span></div><div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="comment">// SPDX-License-Identifier: MIT</span></div><div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="comment">//</span></div><div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="preprocessor">#pragma once</span></div><div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;</div><div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_constant_layer_8hpp.xhtml">ConstantLayer.hpp</a>&quot;</span></div><div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="preprocessor">#include &lt;<a class="code" href="_layer_8hpp.xhtml">Layer.hpp</a>&gt;</span></div><div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;</div><div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="keyword">namespace </span><a class="code" href="namespacearmnn.xhtml">armnn</a></div><div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;{</div><div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;</div><div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> Parameters&gt;</div><div class="line"><a name="l00014"></a><span class="lineno"><a class="line" href="classarmnn_1_1_layer_with_parameters.xhtml">   14</a></span>&#160;<span class="keyword">class </span><a class="code" href="classarmnn_1_1_layer_with_parameters.xhtml">LayerWithParameters</a> : <span class="keyword">public</span> <a class="code" href="classarmnn_1_1_layer.xhtml">Layer</a></div><div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;{</div><div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;<span class="keyword">public</span>:</div><div class="line"><a name="l00017"></a><span class="lineno"><a class="line" href="classarmnn_1_1_layer_with_parameters.xhtml#a6b1bd3d5380a0ce8ecb71ddb0261c3fa">   17</a></span>&#160;    <span class="keyword">using</span> <a class="code" href="structarmnn_1_1_pooling3d_descriptor.xhtml">DescriptorType</a> = Parameters;</div><div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;</div><div class="line"><a name="l00019"></a><span class="lineno"><a class="line" href="classarmnn_1_1_layer_with_parameters.xhtml#afa3e8a8f23589b1eaddbe203825bbdcf">   19</a></span>&#160;    <span class="keyword">const</span> Parameters&amp; <a class="code" href="classarmnn_1_1_layer_with_parameters.xhtml#afa3e8a8f23589b1eaddbe203825bbdcf">GetParameters</a>()<span class="keyword"> const override </span>{ <span class="keywordflow">return</span> <a class="code" href="classarmnn_1_1_layer_with_parameters.xhtml#ad32ac22bc72e28dfd6b466d143c8e262">m_Param</a>; }</div><div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;<span class="comment">    /// Helper to serialize the layer parameters to string</span></div><div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;<span class="comment">    /// (currently used in DotSerializer and company).</span></div><div class="line"><a name="l00023"></a><span class="lineno"><a class="line" href="classarmnn_1_1_layer_with_parameters.xhtml#a2ca654770a1890f15e3c7aab98e434a5">   23</a></span>&#160;<span class="comment"></span>    <span class="keywordtype">void</span> <a class="code" href="classarmnn_1_1_layer_with_parameters.xhtml#a2ca654770a1890f15e3c7aab98e434a5">SerializeLayerParameters</a>(<a class="code" href="namespacearmnn.xhtml#a8c42c6647e31ebe525aeba878d133e45">ParameterStringifyFunction</a>&amp; fn)<span class="keyword"> const override</span></div><div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;<span class="keyword">    </span>{</div><div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;        <a class="code" href="structarmnn_1_1_stringify_layer_parameters.xhtml#a84990e31a235f27cd3d7f3fc90fa0035">StringifyLayerParameters&lt;Parameters&gt;::Serialize</a>(fn, <a class="code" href="classarmnn_1_1_layer_with_parameters.xhtml#ad32ac22bc72e28dfd6b466d143c8e262">m_Param</a>);</div><div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;        <a class="code" href="classarmnn_1_1_layer.xhtml#ac04cd8de9b9185756eb02463ffd432b1">Layer::SerializeLayerParameters</a>(fn);</div><div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;    }</div><div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;</div><div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;<span class="keyword">protected</span>:</div><div class="line"><a name="l00030"></a><span class="lineno"><a class="line" href="classarmnn_1_1_layer_with_parameters.xhtml#a1f5a1d629b1ef52a0d8e0214a0fb51a1">   30</a></span>&#160;    <a class="code" href="classarmnn_1_1_layer_with_parameters.xhtml#a1f5a1d629b1ef52a0d8e0214a0fb51a1">LayerWithParameters</a>(<span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> numInputSlots,</div><div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;                        <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> numOutputSlots,</div><div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;                        <a class="code" href="namespacearmnn.xhtml#a56943a0946e5f15e5e58054b8e7a04a4">LayerType</a> type,</div><div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;                        <span class="keyword">const</span> Parameters&amp; param,</div><div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;                        <span class="keyword">const</span> <span class="keywordtype">char</span>* name)</div><div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;        : <a class="code" href="classarmnn_1_1_layer.xhtml">Layer</a>(numInputSlots, numOutputSlots, type, name)</div><div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;        , <a class="code" href="classarmnn_1_1_layer_with_parameters.xhtml#ad32ac22bc72e28dfd6b466d143c8e262">m_Param</a>(param)</div><div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;    {</div><div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;    }</div><div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;</div><div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;    <a class="code" href="classarmnn_1_1_layer_with_parameters.xhtml#adc0f578e075f63379058f2d2641a509a">~LayerWithParameters</a>() = <span class="keywordflow">default</span>;</div><div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;<span class="comment">    /// Helper function to reduce duplication in *Layer::CreateWorkload.</span></div><div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;<span class="comment"></span>    <span class="keyword">template</span> &lt;<span class="keyword">typename</span> QueueDescriptor&gt;</div><div class="line"><a name="l00044"></a><span class="lineno"><a class="line" href="classarmnn_1_1_layer_with_parameters.xhtml#a30a858b2b26d651a066537e499fbf40d">   44</a></span>&#160;    <a class="code" href="structarmnn_1_1_workload_info.xhtml">WorkloadInfo</a> <a class="code" href="classarmnn_1_1_layer_with_parameters.xhtml#a30a858b2b26d651a066537e499fbf40d">PrepInfoAndDesc</a>(<a class="code" href="structarmnn_1_1_queue_descriptor.xhtml">QueueDescriptor</a>&amp; descriptor)<span class="keyword"> const</span></div><div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;<span class="keyword">    </span>{</div><div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;        descriptor.m_Parameters = <a class="code" href="classarmnn_1_1_layer_with_parameters.xhtml#ad32ac22bc72e28dfd6b466d143c8e262">m_Param</a>;</div><div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;        descriptor.<a class="code" href="structarmnn_1_1_queue_descriptor.xhtml#a9ef8ddbeee4b869e4c68eb2ed278b8d9">m_AllowExpandedDims</a> = <a class="code" href="classarmnn_1_1_layer.xhtml#ad6f282c92535e2be398a9b350d4e2ee9">GetAllowExpandedDims</a>();</div><div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;        <span class="keywordflow">return</span> <a class="code" href="classarmnn_1_1_layer.xhtml#a30a858b2b26d651a066537e499fbf40d">Layer::PrepInfoAndDesc</a>(descriptor);</div><div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;    }</div><div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;<span class="comment">    /// The parameters for the layer (not including tensor-valued weights etc.).</span></div><div class="line"><a name="l00052"></a><span class="lineno"><a class="line" href="classarmnn_1_1_layer_with_parameters.xhtml#ad32ac22bc72e28dfd6b466d143c8e262">   52</a></span>&#160;<span class="comment"></span>    Parameters <a class="code" href="classarmnn_1_1_layer_with_parameters.xhtml#ad32ac22bc72e28dfd6b466d143c8e262">m_Param</a>;</div><div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;</div><div class="line"><a name="l00054"></a><span class="lineno"><a class="line" href="classarmnn_1_1_layer_with_parameters.xhtml#a46fc3fdd4b2a5dd6d184e57983cf20bc">   54</a></span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classarmnn_1_1_layer_with_parameters.xhtml#a46fc3fdd4b2a5dd6d184e57983cf20bc">ExecuteStrategy</a>(<a class="code" href="classarmnn_1_1_i_strategy.xhtml">IStrategy</a>&amp; strategy)<span class="keyword"> const override</span></div><div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;<span class="keyword">    </span>{</div><div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;        strategy.<a class="code" href="classarmnn_1_1_i_strategy.xhtml#ad4f8c9ff973cf6a603d26b56c5b34967">ExecuteStrategy</a>(<span class="keyword">this</span>, <a class="code" href="classarmnn_1_1_layer_with_parameters.xhtml#afa3e8a8f23589b1eaddbe203825bbdcf">GetParameters</a>(), {}, <a class="code" href="classarmnn_1_1_layer.xhtml#a7ddf0cf6f620d59c10e63495ace795d0">GetName</a>());</div><div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;    }</div><div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;</div><div class="line"><a name="l00059"></a><span class="lineno"><a class="line" href="classarmnn_1_1_layer_with_parameters.xhtml#a400b2bd0b111631f5a70ea4ff5e0443f">   59</a></span>&#160;    <a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml#af978f897fb7e115a901cb7ed95f8e532">Layer::ConstantTensors</a> <a class="code" href="classarmnn_1_1_layer_with_parameters.xhtml#a400b2bd0b111631f5a70ea4ff5e0443f">GetConnectedConstantAsInputTensors</a>()</div><div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;    {</div><div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;        <a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml#af978f897fb7e115a901cb7ed95f8e532">Layer::ConstantTensors</a> tensors;</div><div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;        <span class="keywordflow">for</span> (<span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> i = 0; i &lt; <a class="code" href="classarmnn_1_1_layer.xhtml#abc0660dc440c8a285b456c9ef6383c26">GetNumInputSlots</a>(); ++i)</div><div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;        {</div><div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;            <span class="keywordflow">if</span> (<a class="code" href="classarmnn_1_1_layer.xhtml#acf8b8e23bf647836592982f97088d375">GetInputSlot</a>(i).<a class="code" href="classarmnn_1_1_input_slot.xhtml#a3153abb7c0c0a84629079b2fac7db54f">GetConnection</a>() &amp;&amp; <a class="code" href="classarmnn_1_1_layer.xhtml#acf8b8e23bf647836592982f97088d375">GetInputSlot</a>(i).<a class="code" href="classarmnn_1_1_input_slot.xhtml#a3153abb7c0c0a84629079b2fac7db54f">GetConnection</a>()-&gt;<a class="code" href="classarmnn_1_1_i_output_slot.xhtml#a9943775a364fc4ab53b85ac88f311886">GetTensorInfo</a>().<a class="code" href="classarmnn_1_1_tensor_info.xhtml#a945263e85c27f3216a8323cfc16d8919">IsConstant</a>())</div><div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;            {</div><div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;                <span class="keyword">auto</span> &amp;inputLayer = <a class="code" href="classarmnn_1_1_layer.xhtml#acf8b8e23bf647836592982f97088d375">GetInputSlot</a>(i).<a class="code" href="classarmnn_1_1_input_slot.xhtml#a9effd325a6d512a3f8ff4bd207d53255">GetConnectedOutputSlot</a>()-&gt;<a class="code" href="classarmnn_1_1_output_slot.xhtml#a7ddaf04177053a536f0e7be83a642bc6">GetOwningLayer</a>();</div><div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;                <span class="keywordflow">if</span> (inputLayer.GetType() == <a class="code" href="namespacearmnn.xhtml#a14d24d90ab4ba2956e92e27890ba4c91acb17869fe51048b5a5c4c6106551a255">armnn::LayerType::Constant</a>)</div><div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;                {</div><div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;                    <span class="keyword">auto</span> &amp;constantLayer = <span class="keyword">static_cast&lt;</span><a class="code" href="classarmnn_1_1_constant_layer.xhtml">ConstantLayer</a>&amp;<span class="keyword">&gt;</span>(inputLayer);</div><div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;</div><div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;                    tensors.push_back(constantLayer.m_LayerOutput);</div><div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;                }</div><div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;            }</div><div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;        }</div><div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;        <span class="keywordflow">if</span> (tensors.empty())</div><div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;        {</div><div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;            <span class="keyword">const</span> std::string warningMessage{<span class="stringliteral">&quot;GetConnectedConstantAsInputTensors() called on Layer with no &quot;</span></div><div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;                                             <span class="stringliteral">&quot;connected Constants as Input Tensors.&quot;</span>};</div><div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;            <a class="code" href="_logging_8hpp.xhtml#a7b6ad073975f437ec38ca7d20154727f">ARMNN_LOG</a>(<a class="code" href="namespacearmnn.xhtml#a4dc0adc6737b5944e7671bee71788407a7b83d3f08fa392b79e3f553b585971cd">warning</a>) &lt;&lt; warningMessage;</div><div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;        }</div><div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;        <span class="keywordflow">return</span> tensors;</div><div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;    }</div><div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;};</div><div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;</div><div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;</div><div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;</div><div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;</div><div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;} <span class="comment">// namespace</span></div><div class="ttc" id="classarmnn_1_1_constant_layer_xhtml"><div class="ttname"><a href="classarmnn_1_1_constant_layer.xhtml">armnn::ConstantLayer</a></div><div class="ttdoc">A layer that the constant data can be bound to. </div><div class="ttdef"><b>Definition:</b> <a href="_constant_layer_8hpp_source.xhtml#l00015">ConstantLayer.hpp:15</a></div></div>
<div class="ttc" id="classarmnn_1_1_tensor_info_xhtml_a945263e85c27f3216a8323cfc16d8919"><div class="ttname"><a href="classarmnn_1_1_tensor_info.xhtml#a945263e85c27f3216a8323cfc16d8919">armnn::TensorInfo::IsConstant</a></div><div class="ttdeci">bool IsConstant() const</div><div class="ttdef"><b>Definition:</b> <a href="_tensor_8cpp_source.xhtml#l00509">Tensor.cpp:509</a></div></div>
<div class="ttc" id="classarmnn_1_1_layer_with_parameters_xhtml_a46fc3fdd4b2a5dd6d184e57983cf20bc"><div class="ttname"><a href="classarmnn_1_1_layer_with_parameters.xhtml#a46fc3fdd4b2a5dd6d184e57983cf20bc">armnn::LayerWithParameters::ExecuteStrategy</a></div><div class="ttdeci">void ExecuteStrategy(IStrategy &amp;strategy) const override</div><div class="ttdoc">Apply a visitor to this layer. </div><div class="ttdef"><b>Definition:</b> <a href="_layer_with_parameters_8hpp_source.xhtml#l00054">LayerWithParameters.hpp:54</a></div></div>
<div class="ttc" id="classarmnn_1_1_layer_with_parameters_xhtml_a1f5a1d629b1ef52a0d8e0214a0fb51a1"><div class="ttname"><a href="classarmnn_1_1_layer_with_parameters.xhtml#a1f5a1d629b1ef52a0d8e0214a0fb51a1">armnn::LayerWithParameters::LayerWithParameters</a></div><div class="ttdeci">LayerWithParameters(unsigned int numInputSlots, unsigned int numOutputSlots, LayerType type, const Parameters &amp;param, const char *name)</div><div class="ttdef"><b>Definition:</b> <a href="_layer_with_parameters_8hpp_source.xhtml#l00030">LayerWithParameters.hpp:30</a></div></div>
<div class="ttc" id="classarmnn_1_1_layer_with_parameters_xhtml_ad32ac22bc72e28dfd6b466d143c8e262"><div class="ttname"><a href="classarmnn_1_1_layer_with_parameters.xhtml#ad32ac22bc72e28dfd6b466d143c8e262">armnn::LayerWithParameters::m_Param</a></div><div class="ttdeci">Parameters m_Param</div><div class="ttdoc">The parameters for the layer (not including tensor-valued weights etc.). </div><div class="ttdef"><b>Definition:</b> <a href="_layer_with_parameters_8hpp_source.xhtml#l00052">LayerWithParameters.hpp:52</a></div></div>
<div class="ttc" id="classarmnn_1_1_layer_xhtml_abc0660dc440c8a285b456c9ef6383c26"><div class="ttname"><a href="classarmnn_1_1_layer.xhtml#abc0660dc440c8a285b456c9ef6383c26">armnn::Layer::GetNumInputSlots</a></div><div class="ttdeci">unsigned int GetNumInputSlots() const override</div><div class="ttdoc">Returns the number of connectable input slots. </div><div class="ttdef"><b>Definition:</b> <a href="_layer_8hpp_source.xhtml#l00321">Layer.hpp:321</a></div></div>
<div class="ttc" id="structarmnn_1_1_queue_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_queue_descriptor.xhtml">armnn::QueueDescriptor</a></div><div class="ttdef"><b>Definition:</b> <a href="include_2armnn_2backends_2_workload_data_8hpp_source.xhtml#l00024">WorkloadData.hpp:24</a></div></div>
<div class="ttc" id="classarmnn_1_1_output_slot_xhtml_a7ddaf04177053a536f0e7be83a642bc6"><div class="ttname"><a href="classarmnn_1_1_output_slot.xhtml#a7ddaf04177053a536f0e7be83a642bc6">armnn::OutputSlot::GetOwningLayer</a></div><div class="ttdeci">Layer &amp; GetOwningLayer() const</div><div class="ttdef"><b>Definition:</b> <a href="_layer_8hpp_source.xhtml#l00119">Layer.hpp:119</a></div></div>
<div class="ttc" id="_logging_8hpp_xhtml_a7b6ad073975f437ec38ca7d20154727f"><div class="ttname"><a href="_logging_8hpp.xhtml#a7b6ad073975f437ec38ca7d20154727f">ARMNN_LOG</a></div><div class="ttdeci">#define ARMNN_LOG(severity)</div><div class="ttdef"><b>Definition:</b> <a href="_logging_8hpp_source.xhtml#l00205">Logging.hpp:205</a></div></div>
<div class="ttc" id="classarmnn_1_1_layer_with_parameters_xhtml_a2ca654770a1890f15e3c7aab98e434a5"><div class="ttname"><a href="classarmnn_1_1_layer_with_parameters.xhtml#a2ca654770a1890f15e3c7aab98e434a5">armnn::LayerWithParameters::SerializeLayerParameters</a></div><div class="ttdeci">void SerializeLayerParameters(ParameterStringifyFunction &amp;fn) const override</div><div class="ttdoc">Helper to serialize the layer parameters to string (currently used in DotSerializer and company)...</div><div class="ttdef"><b>Definition:</b> <a href="_layer_with_parameters_8hpp_source.xhtml#l00023">LayerWithParameters.hpp:23</a></div></div>
<div class="ttc" id="namespacearmnn_xhtml"><div class="ttname"><a href="namespacearmnn.xhtml">armnn</a></div><div class="ttdoc">Copyright (c) 2021 ARM Limited and Contributors. </div><div class="ttdef"><b>Definition:</b> <a href="01__00__quick__start_8dox_source.xhtml#l00006">01_00_quick_start.dox:6</a></div></div>
<div class="ttc" id="classarmnn_1_1_layer_with_parameters_xhtml_afa3e8a8f23589b1eaddbe203825bbdcf"><div class="ttname"><a href="classarmnn_1_1_layer_with_parameters.xhtml#afa3e8a8f23589b1eaddbe203825bbdcf">armnn::LayerWithParameters::GetParameters</a></div><div class="ttdeci">const Parameters &amp; GetParameters() const override</div><div class="ttdoc">If the layer has a descriptor return it. </div><div class="ttdef"><b>Definition:</b> <a href="_layer_with_parameters_8hpp_source.xhtml#l00019">LayerWithParameters.hpp:19</a></div></div>
<div class="ttc" id="classarmnn_1_1_input_slot_xhtml_a3153abb7c0c0a84629079b2fac7db54f"><div class="ttname"><a href="classarmnn_1_1_input_slot.xhtml#a3153abb7c0c0a84629079b2fac7db54f">armnn::InputSlot::GetConnection</a></div><div class="ttdeci">const IOutputSlot * GetConnection() const override</div><div class="ttdef"><b>Definition:</b> <a href="_layer_8hpp_source.xhtml#l00206">Layer.hpp:206</a></div></div>
<div class="ttc" id="_constant_layer_8hpp_xhtml"><div class="ttname"><a href="_constant_layer_8hpp.xhtml">ConstantLayer.hpp</a></div></div>
<div class="ttc" id="classarmnn_1_1_i_strategy_xhtml"><div class="ttname"><a href="classarmnn_1_1_i_strategy.xhtml">armnn::IStrategy</a></div><div class="ttdef"><b>Definition:</b> <a href="_i_strategy_8hpp_source.xhtml#l00016">IStrategy.hpp:16</a></div></div>
<div class="ttc" id="classarmnn_1_1_layer_xhtml_acf8b8e23bf647836592982f97088d375"><div class="ttname"><a href="classarmnn_1_1_layer.xhtml#acf8b8e23bf647836592982f97088d375">armnn::Layer::GetInputSlot</a></div><div class="ttdeci">const InputSlot &amp; GetInputSlot(unsigned int index) const override</div><div class="ttdoc">Get a const input slot handle by slot index. </div><div class="ttdef"><b>Definition:</b> <a href="_layer_8hpp_source.xhtml#l00324">Layer.hpp:324</a></div></div>
<div class="ttc" id="classarmnn_1_1_i_connectable_layer_xhtml_af978f897fb7e115a901cb7ed95f8e532"><div class="ttname"><a href="classarmnn_1_1_i_connectable_layer.xhtml#af978f897fb7e115a901cb7ed95f8e532">armnn::IConnectableLayer::ConstantTensors</a></div><div class="ttdeci">std::vector&lt; std::reference_wrapper&lt; std::shared_ptr&lt; ConstTensorHandle &gt; &gt;&gt; ConstantTensors</div><div class="ttdef"><b>Definition:</b> <a href="_i_network_8hpp_source.xhtml#l00114">INetwork.hpp:114</a></div></div>
<div class="ttc" id="classarmnn_1_1_layer_xhtml_a30a858b2b26d651a066537e499fbf40d"><div class="ttname"><a href="classarmnn_1_1_layer.xhtml#a30a858b2b26d651a066537e499fbf40d">armnn::Layer::PrepInfoAndDesc</a></div><div class="ttdeci">WorkloadInfo PrepInfoAndDesc(QueueDescriptor &amp;descriptor) const</div><div class="ttdoc">Helper function to reduce duplication in *LayerCreateWorkload. </div><div class="ttdef"><b>Definition:</b> <a href="_layer_8hpp_source.xhtml#l00396">Layer.hpp:396</a></div></div>
<div class="ttc" id="namespacearmnn_xhtml_a4dc0adc6737b5944e7671bee71788407a7b83d3f08fa392b79e3f553b585971cd"><div class="ttname"><a href="namespacearmnn.xhtml#a4dc0adc6737b5944e7671bee71788407a7b83d3f08fa392b79e3f553b585971cd">armnn::BoostLogSeverityMapping::warning</a></div></div>
<div class="ttc" id="classarmnn_1_1_input_slot_xhtml_a9effd325a6d512a3f8ff4bd207d53255"><div class="ttname"><a href="classarmnn_1_1_input_slot.xhtml#a9effd325a6d512a3f8ff4bd207d53255">armnn::InputSlot::GetConnectedOutputSlot</a></div><div class="ttdeci">const OutputSlot * GetConnectedOutputSlot() const</div><div class="ttdef"><b>Definition:</b> <a href="_layer_8hpp_source.xhtml#l00056">Layer.hpp:56</a></div></div>
<div class="ttc" id="classarmnn_1_1_i_strategy_xhtml_ad4f8c9ff973cf6a603d26b56c5b34967"><div class="ttname"><a href="classarmnn_1_1_i_strategy.xhtml#ad4f8c9ff973cf6a603d26b56c5b34967">armnn::IStrategy::ExecuteStrategy</a></div><div class="ttdeci">virtual void ExecuteStrategy(const IConnectableLayer *layer, const armnn::BaseDescriptor &amp;descriptor, const std::vector&lt; armnn::ConstTensor &gt; &amp;constants, const char *name, const armnn::LayerBindingId id=0)=0</div></div>
<div class="ttc" id="structarmnn_1_1_pooling3d_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_pooling3d_descriptor.xhtml">armnn::Pooling3dDescriptor</a></div><div class="ttdoc">A Pooling3dDescriptor for the Pooling3dLayer. </div><div class="ttdef"><b>Definition:</b> <a href="_descriptors_8hpp_source.xhtml#l00392">Descriptors.hpp:392</a></div></div>
<div class="ttc" id="structarmnn_1_1_queue_descriptor_xhtml_a9ef8ddbeee4b869e4c68eb2ed278b8d9"><div class="ttname"><a href="structarmnn_1_1_queue_descriptor.xhtml#a9ef8ddbeee4b869e4c68eb2ed278b8d9">armnn::QueueDescriptor::m_AllowExpandedDims</a></div><div class="ttdeci">bool m_AllowExpandedDims</div><div class="ttdef"><b>Definition:</b> <a href="include_2armnn_2backends_2_workload_data_8hpp_source.xhtml#l00052">WorkloadData.hpp:52</a></div></div>
<div class="ttc" id="_layer_8hpp_xhtml"><div class="ttname"><a href="_layer_8hpp.xhtml">Layer.hpp</a></div></div>
<div class="ttc" id="classarmnn_1_1_layer_with_parameters_xhtml_adc0f578e075f63379058f2d2641a509a"><div class="ttname"><a href="classarmnn_1_1_layer_with_parameters.xhtml#adc0f578e075f63379058f2d2641a509a">armnn::LayerWithParameters::~LayerWithParameters</a></div><div class="ttdeci">~LayerWithParameters()=default</div></div>
<div class="ttc" id="classarmnn_1_1_layer_with_parameters_xhtml_a400b2bd0b111631f5a70ea4ff5e0443f"><div class="ttname"><a href="classarmnn_1_1_layer_with_parameters.xhtml#a400b2bd0b111631f5a70ea4ff5e0443f">armnn::LayerWithParameters::GetConnectedConstantAsInputTensors</a></div><div class="ttdeci">Layer::ConstantTensors GetConnectedConstantAsInputTensors()</div><div class="ttdef"><b>Definition:</b> <a href="_layer_with_parameters_8hpp_source.xhtml#l00059">LayerWithParameters.hpp:59</a></div></div>
<div class="ttc" id="classarmnn_1_1_layer_xhtml_ad6f282c92535e2be398a9b350d4e2ee9"><div class="ttname"><a href="classarmnn_1_1_layer.xhtml#ad6f282c92535e2be398a9b350d4e2ee9">armnn::Layer::GetAllowExpandedDims</a></div><div class="ttdeci">bool GetAllowExpandedDims() const</div><div class="ttdef"><b>Definition:</b> <a href="_layer_8hpp_source.xhtml#l00243">Layer.hpp:243</a></div></div>
<div class="ttc" id="classarmnn_1_1_layer_with_parameters_xhtml_a30a858b2b26d651a066537e499fbf40d"><div class="ttname"><a href="classarmnn_1_1_layer_with_parameters.xhtml#a30a858b2b26d651a066537e499fbf40d">armnn::LayerWithParameters::PrepInfoAndDesc</a></div><div class="ttdeci">WorkloadInfo PrepInfoAndDesc(QueueDescriptor &amp;descriptor) const</div><div class="ttdoc">Helper function to reduce duplication in *LayerCreateWorkload. </div><div class="ttdef"><b>Definition:</b> <a href="_layer_with_parameters_8hpp_source.xhtml#l00044">LayerWithParameters.hpp:44</a></div></div>
<div class="ttc" id="classarmnn_1_1_layer_xhtml_ac04cd8de9b9185756eb02463ffd432b1"><div class="ttname"><a href="classarmnn_1_1_layer.xhtml#ac04cd8de9b9185756eb02463ffd432b1">armnn::Layer::SerializeLayerParameters</a></div><div class="ttdeci">virtual void SerializeLayerParameters(ParameterStringifyFunction &amp;fn) const</div><div class="ttdoc">Helper to serialize the layer parameters to string. </div><div class="ttdef"><b>Definition:</b> <a href="_layer_8cpp_source.xhtml#l00505">Layer.cpp:505</a></div></div>
<div class="ttc" id="classarmnn_1_1_i_output_slot_xhtml_a9943775a364fc4ab53b85ac88f311886"><div class="ttname"><a href="classarmnn_1_1_i_output_slot.xhtml#a9943775a364fc4ab53b85ac88f311886">armnn::IOutputSlot::GetTensorInfo</a></div><div class="ttdeci">virtual const TensorInfo &amp; GetTensorInfo() const =0</div></div>
<div class="ttc" id="structarmnn_1_1_workload_info_xhtml"><div class="ttname"><a href="structarmnn_1_1_workload_info.xhtml">armnn::WorkloadInfo</a></div><div class="ttdoc">Contains information about TensorInfos of a layer. </div><div class="ttdef"><b>Definition:</b> <a href="include_2armnn_2backends_2_workload_info_8hpp_source.xhtml#l00016">WorkloadInfo.hpp:16</a></div></div>
<div class="ttc" id="classarmnn_1_1_layer_xhtml_a7ddf0cf6f620d59c10e63495ace795d0"><div class="ttname"><a href="classarmnn_1_1_layer.xhtml#a7ddf0cf6f620d59c10e63495ace795d0">armnn::Layer::GetName</a></div><div class="ttdeci">const char * GetName() const override</div><div class="ttdoc">Returns the name of the layer. </div><div class="ttdef"><b>Definition:</b> <a href="_layer_8hpp_source.xhtml#l00319">Layer.hpp:319</a></div></div>
<div class="ttc" id="classarmnn_1_1_layer_with_parameters_xhtml"><div class="ttname"><a href="classarmnn_1_1_layer_with_parameters.xhtml">armnn::LayerWithParameters</a></div><div class="ttdef"><b>Definition:</b> <a href="_layer_with_parameters_8hpp_source.xhtml#l00014">LayerWithParameters.hpp:14</a></div></div>
<div class="ttc" id="namespacearmnn_xhtml_a8c42c6647e31ebe525aeba878d133e45"><div class="ttname"><a href="namespacearmnn.xhtml#a8c42c6647e31ebe525aeba878d133e45">armnn::ParameterStringifyFunction</a></div><div class="ttdeci">std::function&lt; void(const std::string &amp;name, const std::string &amp;value)&gt; ParameterStringifyFunction</div><div class="ttdef"><b>Definition:</b> <a href="_serialize_layer_parameters_8hpp_source.xhtml#l00014">SerializeLayerParameters.hpp:14</a></div></div>
<div class="ttc" id="structarmnn_1_1_stringify_layer_parameters_xhtml_a84990e31a235f27cd3d7f3fc90fa0035"><div class="ttname"><a href="structarmnn_1_1_stringify_layer_parameters.xhtml#a84990e31a235f27cd3d7f3fc90fa0035">armnn::StringifyLayerParameters::Serialize</a></div><div class="ttdeci">static void Serialize(ParameterStringifyFunction &amp;, const LayerParameter &amp;)</div><div class="ttdef"><b>Definition:</b> <a href="_serialize_layer_parameters_8hpp_source.xhtml#l00025">SerializeLayerParameters.hpp:25</a></div></div>
<div class="ttc" id="namespacearmnn_xhtml_a14d24d90ab4ba2956e92e27890ba4c91acb17869fe51048b5a5c4c6106551a255"><div class="ttname"><a href="namespacearmnn.xhtml#a14d24d90ab4ba2956e92e27890ba4c91acb17869fe51048b5a5c4c6106551a255">armnn::PaddingMode::Constant</a></div></div>
<div class="ttc" id="classarmnn_1_1_layer_xhtml"><div class="ttname"><a href="classarmnn_1_1_layer.xhtml">armnn::Layer</a></div><div class="ttdef"><b>Definition:</b> <a href="_layer_8hpp_source.xhtml#l00217">Layer.hpp:217</a></div></div>
<div class="ttc" id="namespacearmnn_xhtml_a56943a0946e5f15e5e58054b8e7a04a4"><div class="ttname"><a href="namespacearmnn.xhtml#a56943a0946e5f15e5e58054b8e7a04a4">armnn::LayerType</a></div><div class="ttdeci">LayerType</div><div class="ttdoc">When adding a new layer, adapt also the LastLayer enum value in the enum class LayerType below...</div><div class="ttdef"><b>Definition:</b> <a href="_types_8hpp_source.xhtml#l00468">Types.hpp:468</a></div></div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="dir_68267d1309a1af8e8297ef4c3efbcdba.xhtml">src</a></li><li class="navelem"><a class="el" href="dir_e0a84d05c80a2ef4231141dcbbeac5c8.xhtml">armnn</a></li><li class="navelem"><a class="el" href="dir_9da6642ce0fd5a8c83524f1b621275be.xhtml">layers</a></li><li class="navelem"><a class="el" href="_layer_with_parameters_8hpp.xhtml">LayerWithParameters.hpp</a></li>
    <li class="footer">Generated on Fri Aug 19 2022 14:38:26 for ArmNN by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.13 </li>
  </ul>
</div>
</body>
</html>
