<!-- Copyright (c) 2020 ARM Limited. -->
<!--                                 -->
<!-- SPDX-License-Identifier: MIT    -->
<!--                                 -->
<!-- HTML header for doxygen 1.8.13-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.13"/>
<meta name="robots" content="NOINDEX, NOFOLLOW" />
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>ArmNN: MockBufferManager Class Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script><script type="text/javascript" src="http://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="stylesheet.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <img alt="ArmNN" src="Arm_NN_horizontal_blue.png" style="max-width: 10rem; margin-top: .5rem; margin-left 10px"/>
  <td style="padding-left: 0.5em;">
   <div id="projectname">
   &#160;<span id="projectnumber">22.08</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.13 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
$(document).ready(function(){initNavTree('classarm_1_1pipe_1_1_mock_buffer_manager.xhtml','');});
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="summary">
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="classarm_1_1pipe_1_1_mock_buffer_manager-members.xhtml">List of all members</a>  </div>
  <div class="headertitle">
<div class="title">MockBufferManager Class Reference</div>  </div>
</div><!--header-->
<div class="contents">

<p><code>#include &lt;<a class="el" href="_profiling_mocks_8hpp_source.xhtml">ProfilingMocks.hpp</a>&gt;</code></p>
<div class="dynheader">
Inheritance diagram for MockBufferManager:</div>
<div class="dyncontent">
 <div class="center">
  <img src="classarm_1_1pipe_1_1_mock_buffer_manager.png" usemap="#MockBufferManager_map" alt=""/>
  <map id="MockBufferManager_map" name="MockBufferManager_map">
</map>
 </div></div>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:ac29af30972ae62351f87a669e2c8940f"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm_1_1pipe_1_1_mock_buffer_manager.xhtml#ac29af30972ae62351f87a669e2c8940f">MockBufferManager</a> (unsigned int size)</td></tr>
<tr class="separator:ac29af30972ae62351f87a669e2c8940f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae8b885e4225f3b0976f22ae8bc94f52a"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm_1_1pipe_1_1_mock_buffer_manager.xhtml#ae8b885e4225f3b0976f22ae8bc94f52a">~MockBufferManager</a> ()</td></tr>
<tr class="separator:ae8b885e4225f3b0976f22ae8bc94f52a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac3f43b4dd3fafd6b13342acc2263bbb4"><td class="memItemLeft" align="right" valign="top">IPacketBufferPtr&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm_1_1pipe_1_1_mock_buffer_manager.xhtml#ac3f43b4dd3fafd6b13342acc2263bbb4">Reserve</a> (unsigned int requestedSize, unsigned int &amp;reservedSize) override</td></tr>
<tr class="separator:ac3f43b4dd3fafd6b13342acc2263bbb4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a183eaa37ccd326bd82179bed901c7122"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm_1_1pipe_1_1_mock_buffer_manager.xhtml#a183eaa37ccd326bd82179bed901c7122">Commit</a> (IPacketBufferPtr &amp;packetBuffer, unsigned int size, bool notifyConsumer=true) override</td></tr>
<tr class="separator:a183eaa37ccd326bd82179bed901c7122"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:abce8709dc1b666a26f427ba7ff08b737"><td class="memItemLeft" align="right" valign="top">IPacketBufferPtr&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm_1_1pipe_1_1_mock_buffer_manager.xhtml#abce8709dc1b666a26f427ba7ff08b737">GetReadableBuffer</a> () override</td></tr>
<tr class="separator:abce8709dc1b666a26f427ba7ff08b737"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a226108649851aa1b1a8168560c5228b5"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm_1_1pipe_1_1_mock_buffer_manager.xhtml#a226108649851aa1b1a8168560c5228b5">Release</a> (IPacketBufferPtr &amp;packetBuffer) override</td></tr>
<tr class="separator:a226108649851aa1b1a8168560c5228b5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae717263b3243e9f88f4caea6d31b0652"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm_1_1pipe_1_1_mock_buffer_manager.xhtml#ae717263b3243e9f88f4caea6d31b0652">MarkRead</a> (IPacketBufferPtr &amp;packetBuffer) override</td></tr>
<tr class="separator:ae717263b3243e9f88f4caea6d31b0652"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad675ff4e9053375bd41d0aad6b3bbb63"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm_1_1pipe_1_1_mock_buffer_manager.xhtml#ad675ff4e9053375bd41d0aad6b3bbb63">SetConsumer</a> (IConsumer *consumer) override</td></tr>
<tr class="separator:ad675ff4e9053375bd41d0aad6b3bbb63"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af22fdc7450c285c4d7449425c8fe994f"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm_1_1pipe_1_1_mock_buffer_manager.xhtml#af22fdc7450c285c4d7449425c8fe994f">FlushReadList</a> () override</td></tr>
<tr class="separator:af22fdc7450c285c4d7449425c8fe994f"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock">
<p class="definition">Definition at line <a class="el" href="_profiling_mocks_8hpp_source.xhtml#l00207">207</a> of file <a class="el" href="_profiling_mocks_8hpp_source.xhtml">ProfilingMocks.hpp</a>.</p>
</div><h2 class="groupheader">Constructor &amp; Destructor Documentation</h2>
<a id="ac29af30972ae62351f87a669e2c8940f"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ac29af30972ae62351f87a669e2c8940f">&#9670;&nbsp;</a></span>MockBufferManager()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarm_1_1pipe_1_1_mock_buffer_manager.xhtml">MockBufferManager</a> </td>
          <td>(</td>
          <td class="paramtype">unsigned int&#160;</td>
          <td class="paramname"><em>size</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_profiling_mocks_8hpp_source.xhtml#l00210">210</a> of file <a class="el" href="_profiling_mocks_8hpp_source.xhtml">ProfilingMocks.hpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00211"></a><span class="lineno">  211</span>&#160;    : m_BufferSize(size),</div><div class="line"><a name="l00212"></a><span class="lineno">  212</span>&#160;      m_Buffer(std::make_unique&lt;MockPacketBuffer&gt;(size)) {}</div></div><!-- fragment -->
</div>
</div>
<a id="ae8b885e4225f3b0976f22ae8bc94f52a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ae8b885e4225f3b0976f22ae8bc94f52a">&#9670;&nbsp;</a></span>~MockBufferManager()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">~<a class="el" href="classarm_1_1pipe_1_1_mock_buffer_manager.xhtml">MockBufferManager</a> </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_profiling_mocks_8hpp_source.xhtml#l00214">214</a> of file <a class="el" href="_profiling_mocks_8hpp_source.xhtml">ProfilingMocks.hpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00214"></a><span class="lineno">  214</span>&#160;{}</div></div><!-- fragment -->
</div>
</div>
<h2 class="groupheader">Member Function Documentation</h2>
<a id="a183eaa37ccd326bd82179bed901c7122"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a183eaa37ccd326bd82179bed901c7122">&#9670;&nbsp;</a></span>Commit()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void Commit </td>
          <td>(</td>
          <td class="paramtype">IPacketBufferPtr &amp;&#160;</td>
          <td class="paramname"><em>packetBuffer</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">unsigned int&#160;</td>
          <td class="paramname"><em>size</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>notifyConsumer</em> = <code>true</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">override</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_profiling_mocks_8hpp_source.xhtml#l00230">230</a> of file <a class="el" href="_profiling_mocks_8hpp_source.xhtml">ProfilingMocks.hpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00231"></a><span class="lineno">  231</span>&#160;    {</div><div class="line"><a name="l00232"></a><span class="lineno">  232</span>&#160;        packetBuffer-&gt;Commit(size);</div><div class="line"><a name="l00233"></a><span class="lineno">  233</span>&#160;        m_Buffer = std::move(packetBuffer);</div><div class="line"><a name="l00234"></a><span class="lineno">  234</span>&#160;</div><div class="line"><a name="l00235"></a><span class="lineno">  235</span>&#160;        <span class="keywordflow">if</span> (notifyConsumer)</div><div class="line"><a name="l00236"></a><span class="lineno">  236</span>&#160;        {</div><div class="line"><a name="l00237"></a><span class="lineno">  237</span>&#160;            <a class="code" href="classarm_1_1pipe_1_1_mock_buffer_manager.xhtml#af22fdc7450c285c4d7449425c8fe994f">FlushReadList</a>();</div><div class="line"><a name="l00238"></a><span class="lineno">  238</span>&#160;        }</div><div class="line"><a name="l00239"></a><span class="lineno">  239</span>&#160;    }</div><div class="ttc" id="classarm_1_1pipe_1_1_mock_buffer_manager_xhtml_af22fdc7450c285c4d7449425c8fe994f"><div class="ttname"><a href="classarm_1_1pipe_1_1_mock_buffer_manager.xhtml#af22fdc7450c285c4d7449425c8fe994f">arm::pipe::MockBufferManager::FlushReadList</a></div><div class="ttdeci">void FlushReadList() override</div><div class="ttdef"><b>Definition:</b> <a href="_profiling_mocks_8hpp_source.xhtml#l00266">ProfilingMocks.hpp:266</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="af22fdc7450c285c4d7449425c8fe994f"></a>
<h2 class="memtitle"><span class="permalink"><a href="#af22fdc7450c285c4d7449425c8fe994f">&#9670;&nbsp;</a></span>FlushReadList()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void FlushReadList </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">override</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_profiling_mocks_8hpp_source.xhtml#l00266">266</a> of file <a class="el" href="_profiling_mocks_8hpp_source.xhtml">ProfilingMocks.hpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00267"></a><span class="lineno">  267</span>&#160;    {</div><div class="line"><a name="l00268"></a><span class="lineno">  268</span>&#160;        <span class="comment">// notify consumer that packet is ready to read</span></div><div class="line"><a name="l00269"></a><span class="lineno">  269</span>&#160;        <span class="keywordflow">if</span> (m_Consumer != <span class="keyword">nullptr</span>)</div><div class="line"><a name="l00270"></a><span class="lineno">  270</span>&#160;        {</div><div class="line"><a name="l00271"></a><span class="lineno">  271</span>&#160;            m_Consumer-&gt;SetReadyToRead();</div><div class="line"><a name="l00272"></a><span class="lineno">  272</span>&#160;        }</div><div class="line"><a name="l00273"></a><span class="lineno">  273</span>&#160;    }</div></div><!-- fragment -->
</div>
</div>
<a id="abce8709dc1b666a26f427ba7ff08b737"></a>
<h2 class="memtitle"><span class="permalink"><a href="#abce8709dc1b666a26f427ba7ff08b737">&#9670;&nbsp;</a></span>GetReadableBuffer()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">IPacketBufferPtr GetReadableBuffer </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">override</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_profiling_mocks_8hpp_source.xhtml#l00241">241</a> of file <a class="el" href="_profiling_mocks_8hpp_source.xhtml">ProfilingMocks.hpp</a>.</p>

<p class="reference">Referenced by <a class="el" href="_profiling_tests_8cpp_source.xhtml#l00059">TEST_SUITE()</a>.</p>
<div class="fragment"><div class="line"><a name="l00242"></a><span class="lineno">  242</span>&#160;    {</div><div class="line"><a name="l00243"></a><span class="lineno">  243</span>&#160;        <span class="keywordflow">return</span> std::move(m_Buffer);</div><div class="line"><a name="l00244"></a><span class="lineno">  244</span>&#160;    }</div></div><!-- fragment -->
</div>
</div>
<a id="ae717263b3243e9f88f4caea6d31b0652"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ae717263b3243e9f88f4caea6d31b0652">&#9670;&nbsp;</a></span>MarkRead()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void MarkRead </td>
          <td>(</td>
          <td class="paramtype">IPacketBufferPtr &amp;&#160;</td>
          <td class="paramname"><em>packetBuffer</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">override</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_profiling_mocks_8hpp_source.xhtml#l00252">252</a> of file <a class="el" href="_profiling_mocks_8hpp_source.xhtml">ProfilingMocks.hpp</a>.</p>

<p class="reference">Referenced by <a class="el" href="_profiling_tests_8cpp_source.xhtml#l00059">TEST_SUITE()</a>.</p>
<div class="fragment"><div class="line"><a name="l00253"></a><span class="lineno">  253</span>&#160;    {</div><div class="line"><a name="l00254"></a><span class="lineno">  254</span>&#160;        packetBuffer-&gt;MarkRead();</div><div class="line"><a name="l00255"></a><span class="lineno">  255</span>&#160;        m_Buffer = std::move(packetBuffer);</div><div class="line"><a name="l00256"></a><span class="lineno">  256</span>&#160;    }</div></div><!-- fragment -->
</div>
</div>
<a id="a226108649851aa1b1a8168560c5228b5"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a226108649851aa1b1a8168560c5228b5">&#9670;&nbsp;</a></span>Release()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void Release </td>
          <td>(</td>
          <td class="paramtype">IPacketBufferPtr &amp;&#160;</td>
          <td class="paramname"><em>packetBuffer</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">override</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_profiling_mocks_8hpp_source.xhtml#l00246">246</a> of file <a class="el" href="_profiling_mocks_8hpp_source.xhtml">ProfilingMocks.hpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00247"></a><span class="lineno">  247</span>&#160;    {</div><div class="line"><a name="l00248"></a><span class="lineno">  248</span>&#160;        packetBuffer-&gt;Release();</div><div class="line"><a name="l00249"></a><span class="lineno">  249</span>&#160;        m_Buffer = std::move(packetBuffer);</div><div class="line"><a name="l00250"></a><span class="lineno">  250</span>&#160;    }</div></div><!-- fragment -->
</div>
</div>
<a id="ac3f43b4dd3fafd6b13342acc2263bbb4"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ac3f43b4dd3fafd6b13342acc2263bbb4">&#9670;&nbsp;</a></span>Reserve()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">IPacketBufferPtr Reserve </td>
          <td>(</td>
          <td class="paramtype">unsigned int&#160;</td>
          <td class="paramname"><em>requestedSize</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">unsigned int &amp;&#160;</td>
          <td class="paramname"><em>reservedSize</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">override</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_profiling_mocks_8hpp_source.xhtml#l00216">216</a> of file <a class="el" href="_profiling_mocks_8hpp_source.xhtml">ProfilingMocks.hpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00217"></a><span class="lineno">  217</span>&#160;    {</div><div class="line"><a name="l00218"></a><span class="lineno">  218</span>&#160;        <span class="keywordflow">if</span> (requestedSize &gt; m_BufferSize)</div><div class="line"><a name="l00219"></a><span class="lineno">  219</span>&#160;        {</div><div class="line"><a name="l00220"></a><span class="lineno">  220</span>&#160;            reservedSize = m_BufferSize;</div><div class="line"><a name="l00221"></a><span class="lineno">  221</span>&#160;        }</div><div class="line"><a name="l00222"></a><span class="lineno">  222</span>&#160;        <span class="keywordflow">else</span></div><div class="line"><a name="l00223"></a><span class="lineno">  223</span>&#160;        {</div><div class="line"><a name="l00224"></a><span class="lineno">  224</span>&#160;            reservedSize = requestedSize;</div><div class="line"><a name="l00225"></a><span class="lineno">  225</span>&#160;        }</div><div class="line"><a name="l00226"></a><span class="lineno">  226</span>&#160;</div><div class="line"><a name="l00227"></a><span class="lineno">  227</span>&#160;        <span class="keywordflow">return</span> std::move(m_Buffer);</div><div class="line"><a name="l00228"></a><span class="lineno">  228</span>&#160;    }</div></div><!-- fragment -->
</div>
</div>
<a id="ad675ff4e9053375bd41d0aad6b3bbb63"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ad675ff4e9053375bd41d0aad6b3bbb63">&#9670;&nbsp;</a></span>SetConsumer()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void SetConsumer </td>
          <td>(</td>
          <td class="paramtype">IConsumer *&#160;</td>
          <td class="paramname"><em>consumer</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">override</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_profiling_mocks_8hpp_source.xhtml#l00258">258</a> of file <a class="el" href="_profiling_mocks_8hpp_source.xhtml">ProfilingMocks.hpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00259"></a><span class="lineno">  259</span>&#160;   {</div><div class="line"><a name="l00260"></a><span class="lineno">  260</span>&#160;        <span class="keywordflow">if</span> (consumer != <span class="keyword">nullptr</span>)</div><div class="line"><a name="l00261"></a><span class="lineno">  261</span>&#160;        {</div><div class="line"><a name="l00262"></a><span class="lineno">  262</span>&#160;            m_Consumer = consumer;</div><div class="line"><a name="l00263"></a><span class="lineno">  263</span>&#160;        }</div><div class="line"><a name="l00264"></a><span class="lineno">  264</span>&#160;   }</div></div><!-- fragment -->
</div>
</div>
<hr/>The documentation for this class was generated from the following file:<ul>
<li>src/profiling/test/<a class="el" href="_profiling_mocks_8hpp_source.xhtml">ProfilingMocks.hpp</a></li>
</ul>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="namespacearm.xhtml">arm</a></li><li class="navelem"><a class="el" href="namespacearm_1_1pipe.xhtml">pipe</a></li><li class="navelem"><a class="el" href="classarm_1_1pipe_1_1_mock_buffer_manager.xhtml">MockBufferManager</a></li>
    <li class="footer">Generated on Fri Aug 19 2022 14:38:36 for ArmNN by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.13 </li>
  </ul>
</div>
</body>
</html>
