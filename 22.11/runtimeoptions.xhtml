<!-- Copyright (c) 2020 ARM Limited. -->
<!--                                 -->
<!-- SPDX-License-Identifier: MIT    -->
<!--                                 -->
<!-- HTML header for doxygen 1.8.13-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.13"/>
<meta name="robots" content="NOINDEX, NOFOLLOW" />
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>ArmNN: Runtime options for Arm NN</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script><script type="text/javascript" src="http://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="stylesheet.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <img alt="ArmNN" src="Arm_NN_horizontal_blue.png" style="max-width: 10rem; margin-top: .5rem; margin-left 10px"/>
  <td style="padding-left: 0.5em;">
   <div id="projectname">
   &#160;<span id="projectnumber">22.11</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.13 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
$(document).ready(function(){initNavTree('runtimeoptions.xhtml','');});
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="headertitle">
<div class="title">Runtime options </div>  </div>
</div><!--header-->
<div class="contents">
<div class="toc"><h3>Table of Contents</h3>
<ul><ul><li class="level2"><a href="#deviceselection">Compute device selection</a></li>
<li class="level2"><a href="#runtimeoptions">Runtime options</a></li>
<li class="level2"><a href="#instanceoptions">Arm NN Instance level options</a></li>
<li class="level2"><a href="#networkoptions">NetworkOptions</a></li>
<li class="level2"><a href="#optimizeroptions">OptimizerOptions</a></li>
<li class="level2"><a href="#modeloptions">OptimizerOptions::ModelOptions</a></li>
<li class="level2"><a href="#gpuaccmodeloptions">GpuAcc backend model options</a></li>
<li class="level2"><a href="#cpuaccmodeloptions">CpuAcc backend model options</a></li>
<li class="level2"><a href="#ethosnmodeloptions">EthosNAcc backend model options</a></li>
</ul>
</ul>
</div>
<div class="textblock"><p>Across all software interfaces to Arm NN there are a set of common configuration parameters.</p>
<p>These parameters control how a model is loaded or how the inference is executed. The widest set of options are available at the lowest, Arm NN C++ interface. They reduce as you move outward to the TfLite delegate and NNAPI Support Library. The tables below describe the arguments and in which interface they are available.</p>
<p>The compute device selected is required to be specified across all interfaces. The device selection will dictate the availability of some parameters and whether some sub graphs are supported.</p>
<table class="doxtable">
<tr>
<th align="left">Interface </th><th align="left">Device selection  </th></tr>
<tr>
<td align="left">Arm NN </td><td align="left">The parameter "const std::vector&lt;BackendId&gt;&amp; backendPreferences" to <a class="el" href="namespacearmnn.xhtml#a82e98ef05fd67036d1195ba17174d685" title="Create an optimized version of the network. ">armnn::Optimize</a> provides a vector of backendId's. If multiple devices are specifed the order of the vector dictates the order in which execution will be attempted. If all or part of the model is not supported by a backend, the next in order will be tried. </td></tr>
<tr>
<td align="left">TfLite delegate </td><td align="left"><a class="el" href="classarmnn_delegate_1_1_delegate_options.xhtml">armnnDelegate::DelegateOptions</a> Compute device or backend ids: This tells Arm NN which devices will be used to process the inference. A single device can be specified using the <a class="el" href="namespacearmnn.xhtml#ae2f04a162585c0a5222a537efd5456ae" title="The Compute enum is now deprecated and it is now being replaced by BackendId. ">armnn::Compute</a> enum. Multiple devices can be specified using a vector of <a class="el" href="classarmnn_1_1_backend_id.xhtml">armnn::BackendId</a>. If multiple devices are specifed the order of the vector dictates the order in which execution will be attempted. If all or part of the model is not supported by a backend the next in order will be tried. Valid backend ids are: [EthosNAcc/GpuAcc/CpuAcc/CpuRef] </td></tr>
<tr>
<td align="left">Support Library </td><td align="left"><a class="el" href="classarmnn__driver_1_1_driver_options.xhtml">armnn_driver::DriverOptions</a> Compute device or backend ids: This tells Arm NN which devices will be used to process the inference. A single device can be specified using the <a class="el" href="namespacearmnn.xhtml#ae2f04a162585c0a5222a537efd5456ae" title="The Compute enum is now deprecated and it is now being replaced by BackendId. ">armnn::Compute</a> enum. Multiple devices can be specified using a vector of <a class="el" href="classarmnn_1_1_backend_id.xhtml">armnn::BackendId</a>. If multiple devices are specifed the order of the vector dictates the order in which execution will be attempted. If all or part of the model is not supported by a backend the next in order will be tried. Valid backend ids are: [EthosNAcc/GpuAcc/CpuAcc/CpuRef] </td></tr>
</table>
<p>There a several levels at which Arm NN accepts runtime parameters. Some of these are specific to an Arm NN instance, some to a loaded network and some to the backend on which a network inference is to execute. Each of the external interfaces handles these options in different ways.</p>
<p>In the Arm NN C++ interface these options are set by passing an armnn::CreationOptions struct to <a class="el" href="classarmnn_1_1_i_runtime.xhtml">IRuntime</a>. Not all available options are described here.</p>
<table class="doxtable">
<tr>
<th align="left">Arm NN Parameter </th><th align="left">Delegate </th><th align="left">Support library </th><th align="left">Values </th><th align="left">Description  </th></tr>
<tr>
<td align="left">m_DynamicBackendsPath </td><td align="left">dynamic-backends-path </td><td align="left">(Not Available) </td><td align="left">String file path </td><td align="left">A path in which Arm NN will search for dynamic backends to load. </td></tr>
<tr>
<td align="left">m_ProtectedMode </td><td align="left">(Not Available) </td><td align="left">(Not Available) </td><td align="left">["true"/"false"] </td><td align="left">Setting this flag will allow the user to create the Runtime in protected mode. It will run all the inferences on protected memory and will make sure that <a class="el" href="structarmnn_1_1_i_network_properties.xhtml#a111a52fb2bd24aee9fc125f28c2eb1cb" title="Deprecated and will be removed in future release. ">INetworkProperties::m_ImportEnabled</a> set to true with <a class="el" href="namespacearmnn.xhtml#a14fcd7f88d11cea0a018269dca5f9277a7f9067c59dd34aca0ad09a7f283ed1f8">MemorySource::DmaBufProtected</a> option. This requires that the backend supports Protected Memory and has an allocator capable of allocating Protected Memory associated with it. </td></tr>
<tr>
<td align="left">m_CustomAllocatorMap </td><td align="left">(Not Available) </td><td align="left">(Not Available) </td><td align="left">std::map&lt;<a class="el" href="classarmnn_1_1_backend_id.xhtml">BackendId</a>, std::shared_ptr&lt;ICustomAllocator&gt;&gt; </td><td align="left">A map of Custom <a class="el" href="structarmnn_1_1_allocator.xhtml">Allocator</a> used for allocation of working memory in the backends. Required for Protected Mode in order to correctly allocate Protected Memory </td></tr>
<tr>
<td align="left">m_MemoryOptimizerStrategyMap </td><td align="left">(Not Available) </td><td align="left">(Not Available) </td><td align="left">std::map&lt;<a class="el" href="classarmnn_1_1_backend_id.xhtml">BackendId</a>, std::shared_ptr&lt;IMemoryOptimizerStrategy&gt;&gt; </td><td align="left">A map to define a custom memory optimizer strategy for specific backend Ids. </td></tr>
<tr>
<td align="left">m_GpuAccTunedParameters </td><td align="left">gpu-tuning-level </td><td align="left">cl-tuning-level </td><td align="left">["0"/"1"/"2"/"3"] </td><td align="left">0=UseOnly(default), 1=RapidTuning, 2=NormalTuning, 3=ExhaustiveTuning. Requires option gpu-tuning-file. 1,2 and 3 will create a tuning-file, 0 will apply the tunings from an existing file </td></tr>
<tr>
<td align="left">(Not Available) </td><td align="left">disable-tflite-runtime-fallback </td><td align="left">(Not Available) </td><td align="left">["true"/"false"] </td><td align="left">Disable TfLite Runtime fallback in the Arm NN TfLite delegate. An exception will be thrown if unsupported operators are encountered. This option is only for testing purposes. </td></tr>
<tr>
<td align="left"><a class="el" href="namespacearmnn.xhtml#aa59f7a819c3e29d10ffc41e5c0616872" title="Configures the logging behaviour of the ARMNN library. ">armnn::ConfigureLogging</a> </td><td align="left">logging-severity </td><td align="left">verbose-logging </td><td align="left">[Trace/Debug/Info/Warning/Error/Fatal </td><td align="left">Set the level of logging information output by Arm NN. </td></tr>
<tr>
<td align="left"><a class="el" href="namespacearmnn.xhtml#a674efcf6cbdb9e831d653ff0e821fb38">armnn::IOptimizedNetworkPtr</a>-&gt;SerializeToDot </td><td align="left">serialize-to-dot </td><td align="left">(Not Available) </td><td align="left">String file path </td><td align="left">Serialize the optimized network to the file specified in "dot" format. </td></tr>
</table>
<p>A specific sub-struct of parameters exists to configure external profiling. This is held as a member, m_ProfilingOptions, of CreationOptions</p>
<table class="doxtable">
<tr>
<th align="left">Arm NN Parameter </th><th align="left">Delegate </th><th align="left">Support library </th><th align="left">Values </th><th align="left">Description  </th></tr>
<tr>
<td align="left">m_ProfilingOptions.m_EnableProfiling </td><td align="left">enable-external-profiling </td><td align="left">(Not Available) </td><td align="left">["true"/"false"] </td><td align="left">Enable external profiling. </td></tr>
<tr>
<td align="left">m_ProfilingOptions.m_TimelineEnabled </td><td align="left">timeline-profiling </td><td align="left">(Not Available) </td><td align="left">["true"/"false"] </td><td align="left">Enable Arm Development studio Timeline events. </td></tr>
<tr>
<td align="left">m_ProfilingOptions.m_OutgoingCaptureFile </td><td align="left">outgoing-capture-file </td><td align="left">(Not Available) </td><td align="left">String file path </td><td align="left">Path to a file in which outgoing timeline profiling messages will be stored. </td></tr>
<tr>
<td align="left">m_ProfilingOptions.m_IncomingCaptureFile </td><td align="left">incoming-capture-file </td><td align="left">(Not Available) </td><td align="left">String file path </td><td align="left">Path to a file in which incoming timeline profiling messages will be stored. </td></tr>
<tr>
<td align="left">m_ProfilingOptions.m_FileOnly </td><td align="left">file-only-external-profiling </td><td align="left">(Not Available) </td><td align="left">["true"/"false"] </td><td align="left">Enable profiling output to file only. </td></tr>
<tr>
<td align="left">m_ProfilingOptions.m_CapturePeriod </td><td align="left">counter-capture-period </td><td align="left">(Not Available) </td><td align="left">Integer (default : 10000) </td><td align="left">Value in microseconds of the profiling capture period. </td></tr>
<tr>
<td align="left">m_ProfilingOptions.m_FileFormat </td><td align="left">profiling-file-format </td><td align="left">(Not Available) </td><td align="left">String of ["binary"] </td><td align="left">The format of the file used for outputting profiling data. Currently on "binary" is supported. </td></tr>
</table>
<p>During Network creation you can specify several optional parameters via <a class="el" href="namespacearmnn.xhtml#a4de71c3661093e5c4ae7775114f43413">armnn::NetworkOptions</a>.</p>
<table class="doxtable">
<tr>
<th align="left">Arm NN Parameter </th><th align="left">Delegate </th><th align="left">Support library </th><th align="left">Values </th><th align="left">Description  </th></tr>
<tr>
<td align="left">ShapeInferenceMethod </td><td align="left">infer-output-shape </td><td align="left">(Not Available) </td><td align="left">["true"/"false"] </td><td align="left">Infers output tensor shape from input tensor shape and validate where applicable. </td></tr>
<tr>
<td align="left">AllowExpandedDims </td><td align="left">allow-expanded-dims </td><td align="left">(Not Available) </td><td align="left">["true"/"false"] </td><td align="left">If true will disregard dimensions with a size of 1 when validating tensor shapes. <a class="el" href="classarmnn_1_1_tensor.xhtml" title="A tensor defined by a TensorInfo (shape and data type) and a mutable backing store. ">Tensor</a> sizes must still match. This is an Experimental parameter that is incompatible with infer-output-shape. </td></tr>
<tr>
<td align="left">profilingEnabled </td><td align="left">enable-internal-profiling </td><td align="left">enable-internal-profiling </td><td align="left">["true"/"false"] </td><td align="left">Enable json profiling in CpuAcc and GpuAcc backends. </td></tr>
<tr>
<td align="left">detailsMethod </td><td align="left">internal-profiling-detail </td><td align="left">(Not Available) </td><td align="left">ProfilingDetailsMethod </td><td align="left">Set the detail of internale porfiling. Options are DetailsWithEvents and DetailsOnly. </td></tr>
</table>
<p><a class="el" href="structarmnn_1_1_optimizer_options.xhtml" title="ArmNN performs an optimization on each model/network before it gets loaded for execution. ">OptimizerOptions</a> are a set of parameters specifically targeting the Arm NN optimizer. This executes when a model is being loaded and these parameters are used to tune its operation.</p>
<table class="doxtable">
<tr>
<th align="left">Arm NN Parameter </th><th align="left">Delegate </th><th align="left">Support library </th><th align="left">Values </th><th align="left">Description  </th></tr>
<tr>
<td align="left">reduceFp32ToFp16 </td><td align="left">reduce-fp32-to-fp16 </td><td align="left">(Not available) </td><td align="left">["true"/"false"] </td><td align="left">Note This feature works best if all operators of the model are in Fp32. ArmNN will add conversion layers between layers that weren't in Fp32 in the first place or if the operator is not supported in Fp16. The overhead of these conversions can lead to a slower overall performance if too many conversions are required. </td></tr>
<tr>
<td align="left">reduceFp32ToBf16 </td><td align="left">reduce-fp32-to-bf16 </td><td align="left">(Not available) </td><td align="left">["true"/"false"] </td><td align="left">This feature works best if all operators of the model are in Fp32. ArmNN will add conversion layers between layers that weren't in Fp32 in the first place or if the operator is not supported in Bf16. The overhead of these conversions can lead to a slower overall performance if too many conversions are required. </td></tr>
<tr>
<td align="left">debug </td><td align="left">debug-data </td><td align="left">(Not available) </td><td align="left">["true"/"false"] </td><td align="left">If the debug flag is set a <a class="el" href="classarmnn_1_1_debug_layer.xhtml" title="This layer visualizes the data flowing through the network. ">DebugLayer</a> is inserted after each layer. The action of each debug layer is backend specific. </td></tr>
<tr>
<td align="left">importEnabled </td><td align="left">memory-import </td><td align="left">(Not available) </td><td align="left">["true"/"false"] </td><td align="left">Instructs the optimizer that this model will be importing it's input tensors. This value must match the MemorySource set for input in <a class="el" href="structarmnn_1_1_i_network_properties.xhtml">INetworkProperties</a>. </td></tr>
<tr>
<td align="left">exportEnabled </td><td align="left">(Not available) </td><td align="left">(Not available) </td><td align="left">["true"/"false"] </td><td align="left">Instructs the optimizer that this model will be exporting it's output tensors. This value must match the MemorySource set for output in <a class="el" href="structarmnn_1_1_i_network_properties.xhtml">INetworkProperties</a>. </td></tr>
</table>
<p>Model options is a vector of name value pairs contained inside <a class="el" href="structarmnn_1_1_optimizer_options.xhtml" title="ArmNN performs an optimization on each model/network before it gets loaded for execution. ">OptimizerOptions</a>. The options specifically target backends.</p>
<table class="doxtable">
<tr>
<th align="left">Arm NN Parameter </th><th align="left">Delegate </th><th align="left">Support library </th><th align="left">Values </th><th align="left">Description  </th></tr>
<tr>
<td align="left">FastMathEnabled </td><td align="left">enable-fast-math </td><td align="left">enable-fast-math </td><td align="left">["true"/"false"] </td><td align="left">Enables fast_math options in backends that support it. </td></tr>
<tr>
<td align="left">SaveCachedNetwork</td><td align="left">save-cached-network </td><td align="left">save-cached-network </td><td align="left">["true"/"false"] </td><td align="left">Enables saving the cached network to the file given with cached-network-file option. </td></tr>
<tr>
<td align="left">CachedNetworkFilePath</td><td align="left">cached-network-filepath </td><td align="left">cached-network-file </td><td align="left">String file path </td><td align="left">If non-empty, the given file will be used to load/save cached network. If save-cached-network option is given will save the cached network to given file. If save-cached-network option is not given will load the cached network from given file. </td></tr>
<tr>
<td align="left">MLGOTuningFilePath </td><td align="left">gpu-mlgo-tuning-file </td><td align="left">mlgo-cl-tuned-parameters-file </td><td align="left">String file path </td><td align="left">If non-empty, the given file will be used to load/save MLGO CL tuned parameters. </td></tr>
<tr>
<td align="left">KernelProfilingEnabled </td><td align="left">gpu-kernel-profiling-enabled </td><td align="left">(Not available) </td><td align="left">["true"/"false"] </td><td align="left">Enables GPU kernel profiling </td></tr>
</table>
<table class="doxtable">
<tr>
<th align="left">Arm NN Parameter </th><th align="left">Delegate </th><th align="left">Support library </th><th align="left">Values </th><th align="left">Description  </th></tr>
<tr>
<td align="left">FastMathEnabled </td><td align="left">enable-fast-math </td><td align="left">enable-fast-math </td><td align="left">["true"/"false"] </td><td align="left">Enables fast_math options in backends that support it. </td></tr>
<tr>
<td align="left">NumberOfThreads </td><td align="left">number-of-threads </td><td align="left">number-of-threads </td><td align="left">Integer [1-64] </td><td align="left">Assign the number of threads used by the CpuAcc backend. Input value must be between 1 and 64. Default is set to 0 (Backend will decide number of threads to use). </td></tr>
</table>
<table class="doxtable">
<tr>
<th align="left">Arm NN Parameter </th><th align="left">Delegate </th><th align="left">Support library </th><th align="left">Values </th><th align="left">Description  </th></tr>
<tr>
<td align="left">DisableWinograd </td><td align="left">(Not available) </td><td align="left">(Not available) </td><td align="left">["true"/"false"] </td><td align="left">Disables Winograd fast convolution. </td></tr>
<tr>
<td align="left">StrictPrecision </td><td align="left">(Not available) </td><td align="left">(Not available) </td><td align="left">["true"/"false"] </td><td align="left">When enabled the network is more precise as the Re-quantize operations aren't fused, but it is slower to compile as there will be additional operations. This is currently only supported for the Concat operation. </td></tr>
<tr>
<td align="left">SaveCachedNetwork</td><td align="left">save-cached-network </td><td align="left">save-cached-network </td><td align="left">["true"/"false"] </td><td align="left">Enables saving the cached network to the file given with cached-network-file option. </td></tr>
<tr>
<td align="left">CachedNetworkFilePath</td><td align="left">cached-network-filepath </td><td align="left">cached-network-file </td><td align="left">String file path </td><td align="left">If non-empty, the given file will be used to load/save cached network. If save-cached-network option is given will save the cached network to given file. If save-cached-network option is not given will load the cached network from given file. </td></tr>
</table>
</div></div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="swtools.xhtml">Software Components</a></li><li class="navelem"><a class="el" href="supportlibrary.xhtml">NNAPI Support Library</a></li>
    <li class="footer">Generated on Wed Nov 23 2022 10:57:39 for ArmNN by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.13 </li>
  </ul>
</div>
</body>
</html>
