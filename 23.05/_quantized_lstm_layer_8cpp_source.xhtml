<!-- Copyright (c) 2020 ARM Limited. -->
<!--                                 -->
<!-- SPDX-License-Identifier: MIT    -->
<!--                                 -->
<!-- HTML header for doxygen 1.8.13-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.17"/>
<meta name="robots" content="NOINDEX, NOFOLLOW" />
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>ArmNN: src/armnn/layers/QuantizedLstmLayer.cpp Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script>
<script type="text/javascript" async="async" src="http://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="stylesheet.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <img alt="ArmNN" src="Arm_NN_horizontal_blue.png" style="max-width: 10rem; margin-top: .5rem; margin-left 10px"/>
  <td style="padding-left: 0.5em;">
   <div id="projectname">
   &#160;<span id="projectnumber">23.05</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.17 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "search",false,'Search');
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(document).ready(function(){initNavTree('_quantized_lstm_layer_8cpp_source.xhtml',''); initResizable(); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="headertitle">
<div class="title">QuantizedLstmLayer.cpp</div>  </div>
</div><!--header-->
<div class="contents">
<a href="_quantized_lstm_layer_8cpp.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="comment">//</span></div>
<div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="comment">// Copyright Â© 2017 Arm Ltd and Contributors. All rights reserved.</span></div>
<div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="comment">// SPDX-License-Identifier: MIT</span></div>
<div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="comment">//</span></div>
<div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_quantized_lstm_layer_8hpp.xhtml">QuantizedLstmLayer.hpp</a>&quot;</span></div>
<div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160; </div>
<div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_layer_clone_base_8hpp.xhtml">LayerCloneBase.hpp</a>&quot;</span></div>
<div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160; </div>
<div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="preprocessor">#include &lt;<a class="code" href="_quantized_lstm_params_8hpp.xhtml">armnn/QuantizedLstmParams.hpp</a>&gt;</span></div>
<div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="preprocessor">#include &lt;<a class="code" href="_types_utils_8hpp.xhtml">armnn/TypesUtils.hpp</a>&gt;</span></div>
<div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;<span class="preprocessor">#include &lt;<a class="code" href="_tensor_handle_8hpp.xhtml">armnn/backends/TensorHandle.hpp</a>&gt;</span></div>
<div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;<span class="preprocessor">#include &lt;<a class="code" href="_workload_factory_8hpp.xhtml">armnn/backends/WorkloadFactory.hpp</a>&gt;</span></div>
<div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160; </div>
<div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;<span class="keyword">namespace </span><a class="code" href="namespacearmnn.xhtml">armnn</a></div>
<div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;{</div>
<div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160; </div>
<div class="line"><a name="l00017"></a><span class="lineno"><a class="line" href="classarmnn_1_1_quantized_lstm_layer.xhtml#a1e8a4f8777390120259787caa45d743a">   17</a></span>&#160;<a class="code" href="classarmnn_1_1_quantized_lstm_layer.xhtml#a1e8a4f8777390120259787caa45d743a">QuantizedLstmLayer::QuantizedLstmLayer</a>(<span class="keyword">const</span> <span class="keywordtype">char</span>* name)</div>
<div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;    : <a class="code" href="classarmnn_1_1_layer.xhtml">Layer</a>(3, 2, <a class="code" href="namespacearmnn.xhtml#a56943a0946e5f15e5e58054b8e7a04a4">LayerType</a>::<a class="code" href="namespacearmnn.xhtml#a56943a0946e5f15e5e58054b8e7a04a4a890a37ff3bfe123414ba7e6f052b49f3">QuantizedLstm</a>, name)</div>
<div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;{</div>
<div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;}</div>
<div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160; </div>
<div class="line"><a name="l00022"></a><span class="lineno"><a class="line" href="classarmnn_1_1_quantized_lstm_layer.xhtml#adfa912d0c4c6c00f1af2cbfa799572b7">   22</a></span>&#160;std::unique_ptr&lt;IWorkload&gt; <a class="code" href="classarmnn_1_1_quantized_lstm_layer.xhtml#adfa912d0c4c6c00f1af2cbfa799572b7">QuantizedLstmLayer::CreateWorkload</a>(<span class="keyword">const</span> <a class="code" href="classarmnn_1_1_i_workload_factory.xhtml">IWorkloadFactory</a>&amp; factory)<span class="keyword"> const</span></div>
<div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;    <a class="code" href="structarmnn_1_1_quantized_lstm_queue_descriptor.xhtml">QuantizedLstmQueueDescriptor</a> descriptor;</div>
<div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160; </div>
<div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;    <span class="comment">// QuantizedLstmLayer parameters - there are no optional params</span></div>
<div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;    descriptor.<a class="code" href="structarmnn_1_1_quantized_lstm_queue_descriptor.xhtml#ab160eba2493d5fe52185c0986dcb190c">m_InputToInputWeights</a>  = <a class="code" href="classarmnn_1_1_quantized_lstm_layer.xhtml#ad3c37b52145c3cf1b4856c0df008a468">m_QuantizedLstmParameters</a>.<a class="code" href="structarmnn_1_1_quantized_lstm_parameters.xhtml#a281954ff495d27f7a29e42a98768c670">m_InputToInputWeights</a>.get();</div>
<div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;    descriptor.<a class="code" href="structarmnn_1_1_quantized_lstm_queue_descriptor.xhtml#aab77f54a037658ca9b2bf9cc8a1fadf1">m_InputToForgetWeights</a> = <a class="code" href="classarmnn_1_1_quantized_lstm_layer.xhtml#ad3c37b52145c3cf1b4856c0df008a468">m_QuantizedLstmParameters</a>.<a class="code" href="structarmnn_1_1_quantized_lstm_parameters.xhtml#aafad117fb253359c1d472c9faefe49ef">m_InputToForgetWeights</a>.get();</div>
<div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;    descriptor.<a class="code" href="structarmnn_1_1_quantized_lstm_queue_descriptor.xhtml#a841439e3b8dc157a7368b19c9ecb7d03">m_InputToCellWeights</a>   = <a class="code" href="classarmnn_1_1_quantized_lstm_layer.xhtml#ad3c37b52145c3cf1b4856c0df008a468">m_QuantizedLstmParameters</a>.<a class="code" href="structarmnn_1_1_quantized_lstm_parameters.xhtml#ad3f42762262330534a4be0dde29a1318">m_InputToCellWeights</a>.get();</div>
<div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;    descriptor.<a class="code" href="structarmnn_1_1_quantized_lstm_queue_descriptor.xhtml#a17ba1c8bcc71a55a95b2a3913f8cb203">m_InputToOutputWeights</a> = <a class="code" href="classarmnn_1_1_quantized_lstm_layer.xhtml#ad3c37b52145c3cf1b4856c0df008a468">m_QuantizedLstmParameters</a>.<a class="code" href="structarmnn_1_1_quantized_lstm_parameters.xhtml#a3d4f6f42e10ba6f808a5244bb7853e7e">m_InputToOutputWeights</a>.get();</div>
<div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160; </div>
<div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;    descriptor.<a class="code" href="structarmnn_1_1_quantized_lstm_queue_descriptor.xhtml#a299587d4f3fca029492700f3e2585bd8">m_RecurrentToInputWeights</a>  = <a class="code" href="classarmnn_1_1_quantized_lstm_layer.xhtml#ad3c37b52145c3cf1b4856c0df008a468">m_QuantizedLstmParameters</a>.<a class="code" href="structarmnn_1_1_quantized_lstm_parameters.xhtml#addfb6b081817510deb924c8fb5ce216c">m_RecurrentToInputWeights</a>.get();</div>
<div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;    descriptor.<a class="code" href="structarmnn_1_1_quantized_lstm_queue_descriptor.xhtml#adf8571dd1867ee91082bd005f94f2610">m_RecurrentToForgetWeights</a> = <a class="code" href="classarmnn_1_1_quantized_lstm_layer.xhtml#ad3c37b52145c3cf1b4856c0df008a468">m_QuantizedLstmParameters</a>.<a class="code" href="structarmnn_1_1_quantized_lstm_parameters.xhtml#a1dd41cd674924907643cb088070a65d3">m_RecurrentToForgetWeights</a>.get();</div>
<div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;    descriptor.<a class="code" href="structarmnn_1_1_quantized_lstm_queue_descriptor.xhtml#ac18c8b8b2039267d8282e91b4162d8aa">m_RecurrentToCellWeights</a>   = <a class="code" href="classarmnn_1_1_quantized_lstm_layer.xhtml#ad3c37b52145c3cf1b4856c0df008a468">m_QuantizedLstmParameters</a>.<a class="code" href="structarmnn_1_1_quantized_lstm_parameters.xhtml#a608ed1a3d4135921ce33a286a87a072b">m_RecurrentToCellWeights</a>.get();</div>
<div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;    descriptor.<a class="code" href="structarmnn_1_1_quantized_lstm_queue_descriptor.xhtml#a4c27716f61bb68e8ea0bd4e8389ba01a">m_RecurrentToOutputWeights</a> = <a class="code" href="classarmnn_1_1_quantized_lstm_layer.xhtml#ad3c37b52145c3cf1b4856c0df008a468">m_QuantizedLstmParameters</a>.<a class="code" href="structarmnn_1_1_quantized_lstm_parameters.xhtml#addad136e04521a1d31cbebf7280c312e">m_RecurrentToOutputWeights</a>.get();</div>
<div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160; </div>
<div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;    descriptor.<a class="code" href="structarmnn_1_1_quantized_lstm_queue_descriptor.xhtml#a44eb7524badcca9b2073359e3814c98b">m_InputGateBias</a>  = <a class="code" href="classarmnn_1_1_quantized_lstm_layer.xhtml#ad3c37b52145c3cf1b4856c0df008a468">m_QuantizedLstmParameters</a>.<a class="code" href="structarmnn_1_1_quantized_lstm_parameters.xhtml#a85684ffb2d12d0d04fbd188591488a2c">m_InputGateBias</a>.get();</div>
<div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;    descriptor.<a class="code" href="structarmnn_1_1_quantized_lstm_queue_descriptor.xhtml#a29fa293fffbf9c6f00cd75db1dc0a52a">m_ForgetGateBias</a> = <a class="code" href="classarmnn_1_1_quantized_lstm_layer.xhtml#ad3c37b52145c3cf1b4856c0df008a468">m_QuantizedLstmParameters</a>.<a class="code" href="structarmnn_1_1_quantized_lstm_parameters.xhtml#af7f44bcc5b6cf669268a9ac0ff1446be">m_ForgetGateBias</a>.get();</div>
<div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;    descriptor.<a class="code" href="structarmnn_1_1_quantized_lstm_queue_descriptor.xhtml#a6e9593869b82984de198fed27f72cdcf">m_CellBias</a>       = <a class="code" href="classarmnn_1_1_quantized_lstm_layer.xhtml#ad3c37b52145c3cf1b4856c0df008a468">m_QuantizedLstmParameters</a>.<a class="code" href="structarmnn_1_1_quantized_lstm_parameters.xhtml#a21a90800797f1e122bc44d7022001558">m_CellBias</a>.get();</div>
<div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;    descriptor.<a class="code" href="structarmnn_1_1_quantized_lstm_queue_descriptor.xhtml#a5ff4158b1b363b898d0da04c42d37ce0">m_OutputGateBias</a> = <a class="code" href="classarmnn_1_1_quantized_lstm_layer.xhtml#ad3c37b52145c3cf1b4856c0df008a468">m_QuantizedLstmParameters</a>.<a class="code" href="structarmnn_1_1_quantized_lstm_parameters.xhtml#a950c538e326db48f4c26a354c2b982e3">m_OutputGateBias</a>.get();</div>
<div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160; </div>
<div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;    <a class="code" href="classarmnn_1_1_layer.xhtml#af7f0460d32511de0da525f1817d13e8c">SetAdditionalInfo</a>(descriptor);</div>
<div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160; </div>
<div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;    <span class="keywordflow">return</span> factory.<a class="code" href="classarmnn_1_1_i_workload_factory.xhtml#a13060ebb89d2c21a7a5d897e99cccf72">CreateWorkload</a>(<a class="code" href="namespacearmnn.xhtml#a56943a0946e5f15e5e58054b8e7a04a4a890a37ff3bfe123414ba7e6f052b49f3">LayerType::QuantizedLstm</a>, descriptor, <a class="code" href="classarmnn_1_1_layer.xhtml#a30a858b2b26d651a066537e499fbf40d">PrepInfoAndDesc</a>(descriptor));</div>
<div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;}</div>
<div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160; </div>
<div class="line"><a name="l00047"></a><span class="lineno"><a class="line" href="classarmnn_1_1_quantized_lstm_layer.xhtml#a08edea9423b6da5da174ce5269f6e28b">   47</a></span>&#160;<a class="code" href="classarmnn_1_1_quantized_lstm_layer.xhtml">QuantizedLstmLayer</a>* <a class="code" href="classarmnn_1_1_quantized_lstm_layer.xhtml#a08edea9423b6da5da174ce5269f6e28b">QuantizedLstmLayer::Clone</a>(<a class="code" href="classarmnn_1_1_graph.xhtml">Graph</a>&amp; graph)<span class="keyword"> const</span></div>
<div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;    <span class="keyword">auto</span> layer = CloneBase&lt;QuantizedLstmLayer&gt;(graph, <a class="code" href="classarmnn_1_1_layer.xhtml#a7ddf0cf6f620d59c10e63495ace795d0">GetName</a>());</div>
<div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160; </div>
<div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;    layer-&gt;m_QuantizedLstmParameters.m_InputToInputWeights = <a class="code" href="classarmnn_1_1_quantized_lstm_layer.xhtml#ad3c37b52145c3cf1b4856c0df008a468">m_QuantizedLstmParameters</a>.<a class="code" href="structarmnn_1_1_quantized_lstm_parameters.xhtml#a281954ff495d27f7a29e42a98768c670">m_InputToInputWeights</a> ?</div>
<div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;            <a class="code" href="classarmnn_1_1_quantized_lstm_layer.xhtml#ad3c37b52145c3cf1b4856c0df008a468">m_QuantizedLstmParameters</a>.<a class="code" href="structarmnn_1_1_quantized_lstm_parameters.xhtml#a281954ff495d27f7a29e42a98768c670">m_InputToInputWeights</a> : <span class="keyword">nullptr</span>;</div>
<div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;    layer-&gt;m_QuantizedLstmParameters.m_InputToForgetWeights = <a class="code" href="classarmnn_1_1_quantized_lstm_layer.xhtml#ad3c37b52145c3cf1b4856c0df008a468">m_QuantizedLstmParameters</a>.<a class="code" href="structarmnn_1_1_quantized_lstm_parameters.xhtml#aafad117fb253359c1d472c9faefe49ef">m_InputToForgetWeights</a> ?</div>
<div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;            <a class="code" href="classarmnn_1_1_quantized_lstm_layer.xhtml#ad3c37b52145c3cf1b4856c0df008a468">m_QuantizedLstmParameters</a>.<a class="code" href="structarmnn_1_1_quantized_lstm_parameters.xhtml#aafad117fb253359c1d472c9faefe49ef">m_InputToForgetWeights</a> : <span class="keyword">nullptr</span>;</div>
<div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;    layer-&gt;m_QuantizedLstmParameters.m_InputToCellWeights = <a class="code" href="classarmnn_1_1_quantized_lstm_layer.xhtml#ad3c37b52145c3cf1b4856c0df008a468">m_QuantizedLstmParameters</a>.<a class="code" href="structarmnn_1_1_quantized_lstm_parameters.xhtml#ad3f42762262330534a4be0dde29a1318">m_InputToCellWeights</a> ?</div>
<div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;            <a class="code" href="classarmnn_1_1_quantized_lstm_layer.xhtml#ad3c37b52145c3cf1b4856c0df008a468">m_QuantizedLstmParameters</a>.<a class="code" href="structarmnn_1_1_quantized_lstm_parameters.xhtml#ad3f42762262330534a4be0dde29a1318">m_InputToCellWeights</a> : <span class="keyword">nullptr</span>;</div>
<div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;    layer-&gt;m_QuantizedLstmParameters.m_InputToOutputWeights = <a class="code" href="classarmnn_1_1_quantized_lstm_layer.xhtml#ad3c37b52145c3cf1b4856c0df008a468">m_QuantizedLstmParameters</a>.<a class="code" href="structarmnn_1_1_quantized_lstm_parameters.xhtml#a3d4f6f42e10ba6f808a5244bb7853e7e">m_InputToOutputWeights</a> ?</div>
<div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;            <a class="code" href="classarmnn_1_1_quantized_lstm_layer.xhtml#ad3c37b52145c3cf1b4856c0df008a468">m_QuantizedLstmParameters</a>.<a class="code" href="structarmnn_1_1_quantized_lstm_parameters.xhtml#a3d4f6f42e10ba6f808a5244bb7853e7e">m_InputToOutputWeights</a> : <span class="keyword">nullptr</span>;</div>
<div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160; </div>
<div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;    layer-&gt;m_QuantizedLstmParameters.m_RecurrentToInputWeights = <a class="code" href="classarmnn_1_1_quantized_lstm_layer.xhtml#ad3c37b52145c3cf1b4856c0df008a468">m_QuantizedLstmParameters</a>.<a class="code" href="structarmnn_1_1_quantized_lstm_parameters.xhtml#addfb6b081817510deb924c8fb5ce216c">m_RecurrentToInputWeights</a> ?</div>
<div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;            <a class="code" href="classarmnn_1_1_quantized_lstm_layer.xhtml#ad3c37b52145c3cf1b4856c0df008a468">m_QuantizedLstmParameters</a>.<a class="code" href="structarmnn_1_1_quantized_lstm_parameters.xhtml#addfb6b081817510deb924c8fb5ce216c">m_RecurrentToInputWeights</a> : <span class="keyword">nullptr</span>;</div>
<div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;    layer-&gt;m_QuantizedLstmParameters.m_RecurrentToForgetWeights = <a class="code" href="classarmnn_1_1_quantized_lstm_layer.xhtml#ad3c37b52145c3cf1b4856c0df008a468">m_QuantizedLstmParameters</a>.<a class="code" href="structarmnn_1_1_quantized_lstm_parameters.xhtml#a1dd41cd674924907643cb088070a65d3">m_RecurrentToForgetWeights</a></div>
<div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;            ? <a class="code" href="classarmnn_1_1_quantized_lstm_layer.xhtml#ad3c37b52145c3cf1b4856c0df008a468">m_QuantizedLstmParameters</a>.<a class="code" href="structarmnn_1_1_quantized_lstm_parameters.xhtml#a1dd41cd674924907643cb088070a65d3">m_RecurrentToForgetWeights</a> : <span class="keyword">nullptr</span>;</div>
<div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;    layer-&gt;m_QuantizedLstmParameters.m_RecurrentToCellWeights = <a class="code" href="classarmnn_1_1_quantized_lstm_layer.xhtml#ad3c37b52145c3cf1b4856c0df008a468">m_QuantizedLstmParameters</a>.<a class="code" href="structarmnn_1_1_quantized_lstm_parameters.xhtml#a608ed1a3d4135921ce33a286a87a072b">m_RecurrentToCellWeights</a> ?</div>
<div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;            <a class="code" href="classarmnn_1_1_quantized_lstm_layer.xhtml#ad3c37b52145c3cf1b4856c0df008a468">m_QuantizedLstmParameters</a>.<a class="code" href="structarmnn_1_1_quantized_lstm_parameters.xhtml#a608ed1a3d4135921ce33a286a87a072b">m_RecurrentToCellWeights</a> : <span class="keyword">nullptr</span>;</div>
<div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;    layer-&gt;m_QuantizedLstmParameters.m_RecurrentToOutputWeights = <a class="code" href="classarmnn_1_1_quantized_lstm_layer.xhtml#ad3c37b52145c3cf1b4856c0df008a468">m_QuantizedLstmParameters</a>.<a class="code" href="structarmnn_1_1_quantized_lstm_parameters.xhtml#addad136e04521a1d31cbebf7280c312e">m_RecurrentToOutputWeights</a></div>
<div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;            ? <a class="code" href="classarmnn_1_1_quantized_lstm_layer.xhtml#ad3c37b52145c3cf1b4856c0df008a468">m_QuantizedLstmParameters</a>.<a class="code" href="structarmnn_1_1_quantized_lstm_parameters.xhtml#addad136e04521a1d31cbebf7280c312e">m_RecurrentToOutputWeights</a> : <span class="keyword">nullptr</span>;</div>
<div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160; </div>
<div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;    layer-&gt;m_QuantizedLstmParameters.m_InputGateBias = <a class="code" href="classarmnn_1_1_quantized_lstm_layer.xhtml#ad3c37b52145c3cf1b4856c0df008a468">m_QuantizedLstmParameters</a>.<a class="code" href="structarmnn_1_1_quantized_lstm_parameters.xhtml#a85684ffb2d12d0d04fbd188591488a2c">m_InputGateBias</a> ?</div>
<div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;            <a class="code" href="classarmnn_1_1_quantized_lstm_layer.xhtml#ad3c37b52145c3cf1b4856c0df008a468">m_QuantizedLstmParameters</a>.<a class="code" href="structarmnn_1_1_quantized_lstm_parameters.xhtml#a85684ffb2d12d0d04fbd188591488a2c">m_InputGateBias</a> : <span class="keyword">nullptr</span>;</div>
<div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;    layer-&gt;m_QuantizedLstmParameters.m_ForgetGateBias = <a class="code" href="classarmnn_1_1_quantized_lstm_layer.xhtml#ad3c37b52145c3cf1b4856c0df008a468">m_QuantizedLstmParameters</a>.<a class="code" href="structarmnn_1_1_quantized_lstm_parameters.xhtml#af7f44bcc5b6cf669268a9ac0ff1446be">m_ForgetGateBias</a> ?</div>
<div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;            <a class="code" href="classarmnn_1_1_quantized_lstm_layer.xhtml#ad3c37b52145c3cf1b4856c0df008a468">m_QuantizedLstmParameters</a>.<a class="code" href="structarmnn_1_1_quantized_lstm_parameters.xhtml#af7f44bcc5b6cf669268a9ac0ff1446be">m_ForgetGateBias</a> : <span class="keyword">nullptr</span>;</div>
<div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;    layer-&gt;m_QuantizedLstmParameters.m_CellBias = <a class="code" href="classarmnn_1_1_quantized_lstm_layer.xhtml#ad3c37b52145c3cf1b4856c0df008a468">m_QuantizedLstmParameters</a>.<a class="code" href="structarmnn_1_1_quantized_lstm_parameters.xhtml#a21a90800797f1e122bc44d7022001558">m_CellBias</a> ?</div>
<div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;            <a class="code" href="classarmnn_1_1_quantized_lstm_layer.xhtml#ad3c37b52145c3cf1b4856c0df008a468">m_QuantizedLstmParameters</a>.<a class="code" href="structarmnn_1_1_quantized_lstm_parameters.xhtml#a21a90800797f1e122bc44d7022001558">m_CellBias</a> : <span class="keyword">nullptr</span>;</div>
<div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;    layer-&gt;m_QuantizedLstmParameters.m_OutputGateBias = <a class="code" href="classarmnn_1_1_quantized_lstm_layer.xhtml#ad3c37b52145c3cf1b4856c0df008a468">m_QuantizedLstmParameters</a>.<a class="code" href="structarmnn_1_1_quantized_lstm_parameters.xhtml#a950c538e326db48f4c26a354c2b982e3">m_OutputGateBias</a> ?</div>
<div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;            <a class="code" href="classarmnn_1_1_quantized_lstm_layer.xhtml#ad3c37b52145c3cf1b4856c0df008a468">m_QuantizedLstmParameters</a>.<a class="code" href="structarmnn_1_1_quantized_lstm_parameters.xhtml#a950c538e326db48f4c26a354c2b982e3">m_OutputGateBias</a> : <span class="keyword">nullptr</span>;</div>
<div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160; </div>
<div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;    <span class="keywordflow">return</span> std::move(layer);</div>
<div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;}</div>
<div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160; </div>
<div class="line"><a name="l00081"></a><span class="lineno"><a class="line" href="classarmnn_1_1_quantized_lstm_layer.xhtml#a65ca562c882ad619684445a1402f415a">   81</a></span>&#160;std::vector&lt;TensorShape&gt; <a class="code" href="classarmnn_1_1_quantized_lstm_layer.xhtml#a65ca562c882ad619684445a1402f415a">QuantizedLstmLayer::InferOutputShapes</a>(<span class="keyword">const</span> std::vector&lt;TensorShape&gt;&amp; inputShapes)<span class="keyword"> const</span></div>
<div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;    <a class="code" href="_assert_8hpp.xhtml#a5698be69cbd5dfe6c28fcd9867e8cbed">ARMNN_ASSERT</a>(inputShapes.size() == 3);</div>
<div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160; </div>
<div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;    <span class="comment">// Get input values for validation</span></div>
<div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;    <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> numBatches = inputShapes[0][0];</div>
<div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;    <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> outputSize = inputShapes[1][1];</div>
<div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160; </div>
<div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;    std::vector&lt;TensorShape&gt; outShapes;</div>
<div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;    outShapes.push_back(<a class="code" href="classarmnn_1_1_tensor_shape.xhtml">TensorShape</a>({numBatches, outputSize})); <span class="comment">// cellStateOut</span></div>
<div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;    outShapes.push_back(<a class="code" href="classarmnn_1_1_tensor_shape.xhtml">TensorShape</a>({numBatches, outputSize})); <span class="comment">// output</span></div>
<div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160; </div>
<div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;    <span class="keywordflow">return</span> outShapes;</div>
<div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;}</div>
<div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160; </div>
<div class="line"><a name="l00096"></a><span class="lineno"><a class="line" href="classarmnn_1_1_quantized_lstm_layer.xhtml#a8c8f543d7e9729362c266d12ec169966">   96</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="classarmnn_1_1_quantized_lstm_layer.xhtml#a8c8f543d7e9729362c266d12ec169966">QuantizedLstmLayer::ValidateTensorShapesFromInputs</a>()</div>
<div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;{</div>
<div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;    <a class="code" href="classarmnn_1_1_layer.xhtml#a0607e36e88f38c34c71c663164b76776">VerifyLayerConnections</a>(3, <a class="code" href="_exceptions_8hpp.xhtml#aa3be76aec4ce713822a5ea1ecbb7bc61">CHECK_LOCATION</a>());</div>
<div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160; </div>
<div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;    <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_shape.xhtml">TensorShape</a>&amp; outputShape = <a class="code" href="classarmnn_1_1_layer.xhtml#a0e36688a43c35668d8db5257274c68fe">GetOutputSlot</a>(0).<a class="code" href="classarmnn_1_1_output_slot.xhtml#ada2ad7d1caeeb4ef6195c8925fad6a65">GetTensorInfo</a>().<a class="code" href="classarmnn_1_1_tensor_info.xhtml#a8b5d0f8a24e9d9238f412260a552acf8">GetShape</a>();</div>
<div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160; </div>
<div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;    <a class="code" href="classarmnn_1_1_layer.xhtml#a448afc716fda85394df1e8e5b7d530e8">VerifyShapeInferenceType</a>(outputShape, <a class="code" href="classarmnn_1_1_layer.xhtml#afe508761cc8318b15329ba4acf7fbfec">m_ShapeInferenceMethod</a>);</div>
<div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160; </div>
<div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;    <span class="keyword">auto</span> inferredShapes = <a class="code" href="classarmnn_1_1_quantized_lstm_layer.xhtml#a65ca562c882ad619684445a1402f415a">InferOutputShapes</a>(</div>
<div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;    {</div>
<div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;        <a class="code" href="classarmnn_1_1_layer.xhtml#acf8b8e23bf647836592982f97088d375">GetInputSlot</a>(0).<a class="code" href="classarmnn_1_1_input_slot.xhtml#a9e3eee087babbe637e77f85404b9d761">GetConnection</a>()-&gt;<a class="code" href="classarmnn_1_1_i_output_slot.xhtml#a9943775a364fc4ab53b85ac88f311886">GetTensorInfo</a>().<a class="code" href="classarmnn_1_1_tensor_info.xhtml#a8b5d0f8a24e9d9238f412260a552acf8">GetShape</a>(), <span class="comment">// input</span></div>
<div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;        <a class="code" href="classarmnn_1_1_layer.xhtml#acf8b8e23bf647836592982f97088d375">GetInputSlot</a>(1).<a class="code" href="classarmnn_1_1_input_slot.xhtml#a9e3eee087babbe637e77f85404b9d761">GetConnection</a>()-&gt;<a class="code" href="classarmnn_1_1_i_output_slot.xhtml#a9943775a364fc4ab53b85ac88f311886">GetTensorInfo</a>().<a class="code" href="classarmnn_1_1_tensor_info.xhtml#a8b5d0f8a24e9d9238f412260a552acf8">GetShape</a>(), <span class="comment">// previousCellStateIn</span></div>
<div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;        <a class="code" href="classarmnn_1_1_layer.xhtml#acf8b8e23bf647836592982f97088d375">GetInputSlot</a>(2).<a class="code" href="classarmnn_1_1_input_slot.xhtml#a9e3eee087babbe637e77f85404b9d761">GetConnection</a>()-&gt;<a class="code" href="classarmnn_1_1_i_output_slot.xhtml#a9943775a364fc4ab53b85ac88f311886">GetTensorInfo</a>().<a class="code" href="classarmnn_1_1_tensor_info.xhtml#a8b5d0f8a24e9d9238f412260a552acf8">GetShape</a>()  <span class="comment">// previousOutputIn</span></div>
<div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;    });</div>
<div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160; </div>
<div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;    <a class="code" href="_assert_8hpp.xhtml#a5698be69cbd5dfe6c28fcd9867e8cbed">ARMNN_ASSERT</a>(inferredShapes.size() == 2);</div>
<div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160; </div>
<div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;    <span class="comment">// Check weights and bias for nullptr</span></div>
<div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;    <a class="code" href="_assert_8hpp.xhtml#a91c4dfde57907d7698c7531785690a7f">ARMNN_ASSERT_MSG</a>(<a class="code" href="classarmnn_1_1_quantized_lstm_layer.xhtml#ad3c37b52145c3cf1b4856c0df008a468">m_QuantizedLstmParameters</a>.<a class="code" href="structarmnn_1_1_quantized_lstm_parameters.xhtml#a281954ff495d27f7a29e42a98768c670">m_InputToInputWeights</a> != <span class="keyword">nullptr</span>,</div>
<div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;                     <span class="stringliteral">&quot;QuantizedLstmLayer: m_QuantizedLstmParameters.m_InputToInputWeights should not be null.&quot;</span>);</div>
<div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;    <a class="code" href="_assert_8hpp.xhtml#a91c4dfde57907d7698c7531785690a7f">ARMNN_ASSERT_MSG</a>(<a class="code" href="classarmnn_1_1_quantized_lstm_layer.xhtml#ad3c37b52145c3cf1b4856c0df008a468">m_QuantizedLstmParameters</a>.<a class="code" href="structarmnn_1_1_quantized_lstm_parameters.xhtml#aafad117fb253359c1d472c9faefe49ef">m_InputToForgetWeights</a> != <span class="keyword">nullptr</span>,</div>
<div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;                     <span class="stringliteral">&quot;QuantizedLstmLayer: m_QuantizedLstmParameters.m_InputToForgetWeights should not be null.&quot;</span>);</div>
<div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;    <a class="code" href="_assert_8hpp.xhtml#a91c4dfde57907d7698c7531785690a7f">ARMNN_ASSERT_MSG</a>(<a class="code" href="classarmnn_1_1_quantized_lstm_layer.xhtml#ad3c37b52145c3cf1b4856c0df008a468">m_QuantizedLstmParameters</a>.<a class="code" href="structarmnn_1_1_quantized_lstm_parameters.xhtml#ad3f42762262330534a4be0dde29a1318">m_InputToCellWeights</a> != <span class="keyword">nullptr</span>,</div>
<div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;                     <span class="stringliteral">&quot;QuantizedLstmLayer: m_QuantizedLstmParameters.m_InputToCellWeights should not be null.&quot;</span>);</div>
<div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;    <a class="code" href="_assert_8hpp.xhtml#a91c4dfde57907d7698c7531785690a7f">ARMNN_ASSERT_MSG</a>(<a class="code" href="classarmnn_1_1_quantized_lstm_layer.xhtml#ad3c37b52145c3cf1b4856c0df008a468">m_QuantizedLstmParameters</a>.<a class="code" href="structarmnn_1_1_quantized_lstm_parameters.xhtml#a3d4f6f42e10ba6f808a5244bb7853e7e">m_InputToOutputWeights</a> != <span class="keyword">nullptr</span>,</div>
<div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;                     <span class="stringliteral">&quot;QuantizedLstmLayer: m_QuantizedLstmParameters.m_InputToOutputWeights should not be null.&quot;</span>);</div>
<div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160; </div>
<div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;    <a class="code" href="_assert_8hpp.xhtml#a91c4dfde57907d7698c7531785690a7f">ARMNN_ASSERT_MSG</a>(<a class="code" href="classarmnn_1_1_quantized_lstm_layer.xhtml#ad3c37b52145c3cf1b4856c0df008a468">m_QuantizedLstmParameters</a>.<a class="code" href="structarmnn_1_1_quantized_lstm_parameters.xhtml#addfb6b081817510deb924c8fb5ce216c">m_RecurrentToInputWeights</a> != <span class="keyword">nullptr</span>,</div>
<div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;                     <span class="stringliteral">&quot;QuantizedLstmLayer: m_QuantizedLstmParameters.m_RecurrentToInputWeights should not be null.&quot;</span>);</div>
<div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;    <a class="code" href="_assert_8hpp.xhtml#a91c4dfde57907d7698c7531785690a7f">ARMNN_ASSERT_MSG</a>(<a class="code" href="classarmnn_1_1_quantized_lstm_layer.xhtml#ad3c37b52145c3cf1b4856c0df008a468">m_QuantizedLstmParameters</a>.<a class="code" href="structarmnn_1_1_quantized_lstm_parameters.xhtml#a1dd41cd674924907643cb088070a65d3">m_RecurrentToForgetWeights</a> != <span class="keyword">nullptr</span>,</div>
<div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;                     <span class="stringliteral">&quot;QuantizedLstmLayer: m_QuantizedLstmParameters.m_RecurrentToForgetWeights should not be null.&quot;</span>);</div>
<div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;    <a class="code" href="_assert_8hpp.xhtml#a91c4dfde57907d7698c7531785690a7f">ARMNN_ASSERT_MSG</a>(<a class="code" href="classarmnn_1_1_quantized_lstm_layer.xhtml#ad3c37b52145c3cf1b4856c0df008a468">m_QuantizedLstmParameters</a>.<a class="code" href="structarmnn_1_1_quantized_lstm_parameters.xhtml#a608ed1a3d4135921ce33a286a87a072b">m_RecurrentToCellWeights</a> != <span class="keyword">nullptr</span>,</div>
<div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;                     <span class="stringliteral">&quot;QuantizedLstmLayer: m_QuantizedLstmParameters.m_RecurrentToCellWeights should not be null.&quot;</span>);</div>
<div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;    <a class="code" href="_assert_8hpp.xhtml#a91c4dfde57907d7698c7531785690a7f">ARMNN_ASSERT_MSG</a>(<a class="code" href="classarmnn_1_1_quantized_lstm_layer.xhtml#ad3c37b52145c3cf1b4856c0df008a468">m_QuantizedLstmParameters</a>.<a class="code" href="structarmnn_1_1_quantized_lstm_parameters.xhtml#addad136e04521a1d31cbebf7280c312e">m_RecurrentToOutputWeights</a> != <span class="keyword">nullptr</span>,</div>
<div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;                     <span class="stringliteral">&quot;QuantizedLstmLayer: m_QuantizedLstmParameters.m_RecurrentToOutputWeights should not be null.&quot;</span>);</div>
<div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160; </div>
<div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;    <a class="code" href="_assert_8hpp.xhtml#a91c4dfde57907d7698c7531785690a7f">ARMNN_ASSERT_MSG</a>(<a class="code" href="classarmnn_1_1_quantized_lstm_layer.xhtml#ad3c37b52145c3cf1b4856c0df008a468">m_QuantizedLstmParameters</a>.<a class="code" href="structarmnn_1_1_quantized_lstm_parameters.xhtml#a85684ffb2d12d0d04fbd188591488a2c">m_InputGateBias</a> != <span class="keyword">nullptr</span>,</div>
<div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;                     <span class="stringliteral">&quot;QuantizedLstmLayer: m_QuantizedLstmParameters.m_InputGateBias should not be null.&quot;</span>);</div>
<div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;    <a class="code" href="_assert_8hpp.xhtml#a91c4dfde57907d7698c7531785690a7f">ARMNN_ASSERT_MSG</a>(<a class="code" href="classarmnn_1_1_quantized_lstm_layer.xhtml#ad3c37b52145c3cf1b4856c0df008a468">m_QuantizedLstmParameters</a>.<a class="code" href="structarmnn_1_1_quantized_lstm_parameters.xhtml#af7f44bcc5b6cf669268a9ac0ff1446be">m_ForgetGateBias</a> != <span class="keyword">nullptr</span>,</div>
<div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;                     <span class="stringliteral">&quot;QuantizedLstmLayer: m_QuantizedLstmParameters.m_ForgetGateBias should not be null.&quot;</span>);</div>
<div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;    <a class="code" href="_assert_8hpp.xhtml#a91c4dfde57907d7698c7531785690a7f">ARMNN_ASSERT_MSG</a>(<a class="code" href="classarmnn_1_1_quantized_lstm_layer.xhtml#ad3c37b52145c3cf1b4856c0df008a468">m_QuantizedLstmParameters</a>.<a class="code" href="structarmnn_1_1_quantized_lstm_parameters.xhtml#a21a90800797f1e122bc44d7022001558">m_CellBias</a> != <span class="keyword">nullptr</span>,</div>
<div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;                     <span class="stringliteral">&quot;QuantizedLstmLayer: m_QuantizedLstmParameters.m_CellBias should not be null.&quot;</span>);</div>
<div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;    <a class="code" href="_assert_8hpp.xhtml#a91c4dfde57907d7698c7531785690a7f">ARMNN_ASSERT_MSG</a>(<a class="code" href="classarmnn_1_1_quantized_lstm_layer.xhtml#ad3c37b52145c3cf1b4856c0df008a468">m_QuantizedLstmParameters</a>.<a class="code" href="structarmnn_1_1_quantized_lstm_parameters.xhtml#a950c538e326db48f4c26a354c2b982e3">m_OutputGateBias</a> != <span class="keyword">nullptr</span>,</div>
<div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;                     <span class="stringliteral">&quot;QuantizedLstmLayer: m_QuantizedLstmParameters.m_OutputGateBias should not be null.&quot;</span>);</div>
<div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160; </div>
<div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;    <span class="comment">// Check output TensorShape(s) match inferred shape</span></div>
<div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;    <a class="code" href="classarmnn_1_1_layer.xhtml#aeb2d638cc0e02c10075e015100996f2d">ValidateAndCopyShape</a>(outputShape, inferredShapes[0], <a class="code" href="classarmnn_1_1_layer.xhtml#afe508761cc8318b15329ba4acf7fbfec">m_ShapeInferenceMethod</a>, <span class="stringliteral">&quot;QuantizedLstmLayer&quot;</span>);</div>
<div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160; </div>
<div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;    <a class="code" href="classarmnn_1_1_layer.xhtml#aeb2d638cc0e02c10075e015100996f2d">ValidateAndCopyShape</a>(<a class="code" href="classarmnn_1_1_layer.xhtml#a0e36688a43c35668d8db5257274c68fe">GetOutputSlot</a>(1).<a class="code" href="namespacearmnn.xhtml#aa815fde54f6d8e8aa5b4f0301cf4178b">GetTensorInfo</a>().GetShape(),</div>
<div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;                         inferredShapes[1],</div>
<div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;                         <a class="code" href="classarmnn_1_1_layer.xhtml#afe508761cc8318b15329ba4acf7fbfec">m_ShapeInferenceMethod</a>,</div>
<div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;                         <span class="stringliteral">&quot;QuantizedLstmLayer&quot;</span>,</div>
<div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;                         1);</div>
<div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;}</div>
<div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160; </div>
<div class="line"><a name="l00151"></a><span class="lineno"><a class="line" href="classarmnn_1_1_quantized_lstm_layer.xhtml#a29cc31172f6ab16ac931f90c667c092d">  151</a></span>&#160;<a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml#aba5c20cadbebd2e7ba67e20a47e31472">Layer::ImmutableConstantTensors</a> <a class="code" href="classarmnn_1_1_quantized_lstm_layer.xhtml#a29cc31172f6ab16ac931f90c667c092d">QuantizedLstmLayer::GetConstantTensorsByRef</a>()<span class="keyword"> const</span></div>
<div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;    <span class="comment">// For API stability DO NOT ALTER order and add new members to the end of vector</span></div>
<div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;    <span class="keywordflow">return</span></div>
<div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;    {</div>
<div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;        <a class="code" href="classarmnn_1_1_quantized_lstm_layer.xhtml#ad3c37b52145c3cf1b4856c0df008a468">m_QuantizedLstmParameters</a>.<a class="code" href="structarmnn_1_1_quantized_lstm_parameters.xhtml#a281954ff495d27f7a29e42a98768c670">m_InputToInputWeights</a>,</div>
<div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160;        <a class="code" href="classarmnn_1_1_quantized_lstm_layer.xhtml#ad3c37b52145c3cf1b4856c0df008a468">m_QuantizedLstmParameters</a>.<a class="code" href="structarmnn_1_1_quantized_lstm_parameters.xhtml#aafad117fb253359c1d472c9faefe49ef">m_InputToForgetWeights</a>,</div>
<div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;        <a class="code" href="classarmnn_1_1_quantized_lstm_layer.xhtml#ad3c37b52145c3cf1b4856c0df008a468">m_QuantizedLstmParameters</a>.<a class="code" href="structarmnn_1_1_quantized_lstm_parameters.xhtml#ad3f42762262330534a4be0dde29a1318">m_InputToCellWeights</a>,</div>
<div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160;        <a class="code" href="classarmnn_1_1_quantized_lstm_layer.xhtml#ad3c37b52145c3cf1b4856c0df008a468">m_QuantizedLstmParameters</a>.<a class="code" href="structarmnn_1_1_quantized_lstm_parameters.xhtml#a3d4f6f42e10ba6f808a5244bb7853e7e">m_InputToOutputWeights</a>,</div>
<div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160; </div>
<div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160;        <a class="code" href="classarmnn_1_1_quantized_lstm_layer.xhtml#ad3c37b52145c3cf1b4856c0df008a468">m_QuantizedLstmParameters</a>.<a class="code" href="structarmnn_1_1_quantized_lstm_parameters.xhtml#addfb6b081817510deb924c8fb5ce216c">m_RecurrentToInputWeights</a>,</div>
<div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160;        <a class="code" href="classarmnn_1_1_quantized_lstm_layer.xhtml#ad3c37b52145c3cf1b4856c0df008a468">m_QuantizedLstmParameters</a>.<a class="code" href="structarmnn_1_1_quantized_lstm_parameters.xhtml#a1dd41cd674924907643cb088070a65d3">m_RecurrentToForgetWeights</a>,</div>
<div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160;        <a class="code" href="classarmnn_1_1_quantized_lstm_layer.xhtml#ad3c37b52145c3cf1b4856c0df008a468">m_QuantizedLstmParameters</a>.<a class="code" href="structarmnn_1_1_quantized_lstm_parameters.xhtml#a608ed1a3d4135921ce33a286a87a072b">m_RecurrentToCellWeights</a>,</div>
<div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;        <a class="code" href="classarmnn_1_1_quantized_lstm_layer.xhtml#ad3c37b52145c3cf1b4856c0df008a468">m_QuantizedLstmParameters</a>.<a class="code" href="structarmnn_1_1_quantized_lstm_parameters.xhtml#addad136e04521a1d31cbebf7280c312e">m_RecurrentToOutputWeights</a>,</div>
<div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160; </div>
<div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160;        <a class="code" href="classarmnn_1_1_quantized_lstm_layer.xhtml#ad3c37b52145c3cf1b4856c0df008a468">m_QuantizedLstmParameters</a>.<a class="code" href="structarmnn_1_1_quantized_lstm_parameters.xhtml#a85684ffb2d12d0d04fbd188591488a2c">m_InputGateBias</a>,</div>
<div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160;        <a class="code" href="classarmnn_1_1_quantized_lstm_layer.xhtml#ad3c37b52145c3cf1b4856c0df008a468">m_QuantizedLstmParameters</a>.<a class="code" href="structarmnn_1_1_quantized_lstm_parameters.xhtml#af7f44bcc5b6cf669268a9ac0ff1446be">m_ForgetGateBias</a>,</div>
<div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160;        <a class="code" href="classarmnn_1_1_quantized_lstm_layer.xhtml#ad3c37b52145c3cf1b4856c0df008a468">m_QuantizedLstmParameters</a>.<a class="code" href="structarmnn_1_1_quantized_lstm_parameters.xhtml#a21a90800797f1e122bc44d7022001558">m_CellBias</a>,</div>
<div class="line"><a name="l00169"></a><span class="lineno">  169</span>&#160;        <a class="code" href="classarmnn_1_1_quantized_lstm_layer.xhtml#ad3c37b52145c3cf1b4856c0df008a468">m_QuantizedLstmParameters</a>.<a class="code" href="structarmnn_1_1_quantized_lstm_parameters.xhtml#a950c538e326db48f4c26a354c2b982e3">m_OutputGateBias</a></div>
<div class="line"><a name="l00170"></a><span class="lineno">  170</span>&#160;    };</div>
<div class="line"><a name="l00171"></a><span class="lineno">  171</span>&#160;}</div>
<div class="line"><a name="l00172"></a><span class="lineno">  172</span>&#160; </div>
<div class="line"><a name="l00173"></a><span class="lineno"><a class="line" href="classarmnn_1_1_quantized_lstm_layer.xhtml#a46fc3fdd4b2a5dd6d184e57983cf20bc">  173</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="classarmnn_1_1_quantized_lstm_layer.xhtml#a46fc3fdd4b2a5dd6d184e57983cf20bc">QuantizedLstmLayer::ExecuteStrategy</a>(<a class="code" href="classarmnn_1_1_i_strategy.xhtml">IStrategy</a>&amp; strategy)<span class="keyword"> const</span></div>
<div class="line"><a name="l00174"></a><span class="lineno">  174</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l00175"></a><span class="lineno">  175</span>&#160;    std::vector&lt;ConstTensor&gt; constTensors;</div>
<div class="line"><a name="l00176"></a><span class="lineno">  176</span>&#160; </div>
<div class="line"><a name="l00177"></a><span class="lineno">  177</span>&#160;    <a class="code" href="classarmnn_1_1_managed_const_tensor_handle.xhtml">ManagedConstTensorHandle</a> managedInputToInputWeights(<a class="code" href="classarmnn_1_1_quantized_lstm_layer.xhtml#ad3c37b52145c3cf1b4856c0df008a468">m_QuantizedLstmParameters</a>.<a class="code" href="structarmnn_1_1_quantized_lstm_parameters.xhtml#a281954ff495d27f7a29e42a98768c670">m_InputToInputWeights</a>);</div>
<div class="line"><a name="l00178"></a><span class="lineno">  178</span>&#160;    <a class="code" href="classarmnn_1_1_managed_const_tensor_handle.xhtml">ManagedConstTensorHandle</a> managedInputToForgetWeights(<a class="code" href="classarmnn_1_1_quantized_lstm_layer.xhtml#ad3c37b52145c3cf1b4856c0df008a468">m_QuantizedLstmParameters</a>.<a class="code" href="structarmnn_1_1_quantized_lstm_parameters.xhtml#aafad117fb253359c1d472c9faefe49ef">m_InputToForgetWeights</a>);</div>
<div class="line"><a name="l00179"></a><span class="lineno">  179</span>&#160;    <a class="code" href="classarmnn_1_1_managed_const_tensor_handle.xhtml">ManagedConstTensorHandle</a> managedInputToCellWeights(<a class="code" href="classarmnn_1_1_quantized_lstm_layer.xhtml#ad3c37b52145c3cf1b4856c0df008a468">m_QuantizedLstmParameters</a>.<a class="code" href="structarmnn_1_1_quantized_lstm_parameters.xhtml#ad3f42762262330534a4be0dde29a1318">m_InputToCellWeights</a>);</div>
<div class="line"><a name="l00180"></a><span class="lineno">  180</span>&#160;    <a class="code" href="classarmnn_1_1_managed_const_tensor_handle.xhtml">ManagedConstTensorHandle</a> managedInputToOutputWeights(<a class="code" href="classarmnn_1_1_quantized_lstm_layer.xhtml#ad3c37b52145c3cf1b4856c0df008a468">m_QuantizedLstmParameters</a>.<a class="code" href="structarmnn_1_1_quantized_lstm_parameters.xhtml#a3d4f6f42e10ba6f808a5244bb7853e7e">m_InputToOutputWeights</a>);</div>
<div class="line"><a name="l00181"></a><span class="lineno">  181</span>&#160; </div>
<div class="line"><a name="l00182"></a><span class="lineno">  182</span>&#160;    <a class="code" href="classarmnn_1_1_managed_const_tensor_handle.xhtml">ManagedConstTensorHandle</a> managedRecurrentToInputWeights(<a class="code" href="classarmnn_1_1_quantized_lstm_layer.xhtml#ad3c37b52145c3cf1b4856c0df008a468">m_QuantizedLstmParameters</a>.<a class="code" href="structarmnn_1_1_quantized_lstm_parameters.xhtml#addfb6b081817510deb924c8fb5ce216c">m_RecurrentToInputWeights</a>);</div>
<div class="line"><a name="l00183"></a><span class="lineno">  183</span>&#160;    <a class="code" href="classarmnn_1_1_managed_const_tensor_handle.xhtml">ManagedConstTensorHandle</a> managedRecurrentToForgetWeights(<a class="code" href="classarmnn_1_1_quantized_lstm_layer.xhtml#ad3c37b52145c3cf1b4856c0df008a468">m_QuantizedLstmParameters</a>.<a class="code" href="structarmnn_1_1_quantized_lstm_parameters.xhtml#a1dd41cd674924907643cb088070a65d3">m_RecurrentToForgetWeights</a>);</div>
<div class="line"><a name="l00184"></a><span class="lineno">  184</span>&#160;    <a class="code" href="classarmnn_1_1_managed_const_tensor_handle.xhtml">ManagedConstTensorHandle</a> managedRecurrentToCellWeights(<a class="code" href="classarmnn_1_1_quantized_lstm_layer.xhtml#ad3c37b52145c3cf1b4856c0df008a468">m_QuantizedLstmParameters</a>.<a class="code" href="structarmnn_1_1_quantized_lstm_parameters.xhtml#a608ed1a3d4135921ce33a286a87a072b">m_RecurrentToCellWeights</a>);</div>
<div class="line"><a name="l00185"></a><span class="lineno">  185</span>&#160;    <a class="code" href="classarmnn_1_1_managed_const_tensor_handle.xhtml">ManagedConstTensorHandle</a> managedRecurrentToOutputWeights(<a class="code" href="classarmnn_1_1_quantized_lstm_layer.xhtml#ad3c37b52145c3cf1b4856c0df008a468">m_QuantizedLstmParameters</a>.<a class="code" href="structarmnn_1_1_quantized_lstm_parameters.xhtml#addad136e04521a1d31cbebf7280c312e">m_RecurrentToOutputWeights</a>);</div>
<div class="line"><a name="l00186"></a><span class="lineno">  186</span>&#160; </div>
<div class="line"><a name="l00187"></a><span class="lineno">  187</span>&#160;    <a class="code" href="classarmnn_1_1_managed_const_tensor_handle.xhtml">ManagedConstTensorHandle</a> managedInputGateBias(<a class="code" href="classarmnn_1_1_quantized_lstm_layer.xhtml#ad3c37b52145c3cf1b4856c0df008a468">m_QuantizedLstmParameters</a>.<a class="code" href="structarmnn_1_1_quantized_lstm_parameters.xhtml#a85684ffb2d12d0d04fbd188591488a2c">m_InputGateBias</a>);</div>
<div class="line"><a name="l00188"></a><span class="lineno">  188</span>&#160;    <a class="code" href="classarmnn_1_1_managed_const_tensor_handle.xhtml">ManagedConstTensorHandle</a> managedForgetGateBias(<a class="code" href="classarmnn_1_1_quantized_lstm_layer.xhtml#ad3c37b52145c3cf1b4856c0df008a468">m_QuantizedLstmParameters</a>.<a class="code" href="structarmnn_1_1_quantized_lstm_parameters.xhtml#af7f44bcc5b6cf669268a9ac0ff1446be">m_ForgetGateBias</a>);</div>
<div class="line"><a name="l00189"></a><span class="lineno">  189</span>&#160;    <a class="code" href="classarmnn_1_1_managed_const_tensor_handle.xhtml">ManagedConstTensorHandle</a> managedCellBias(<a class="code" href="classarmnn_1_1_quantized_lstm_layer.xhtml#ad3c37b52145c3cf1b4856c0df008a468">m_QuantizedLstmParameters</a>.<a class="code" href="structarmnn_1_1_quantized_lstm_parameters.xhtml#a21a90800797f1e122bc44d7022001558">m_CellBias</a>);</div>
<div class="line"><a name="l00190"></a><span class="lineno">  190</span>&#160;    <a class="code" href="classarmnn_1_1_managed_const_tensor_handle.xhtml">ManagedConstTensorHandle</a> managedOutputGateBias(<a class="code" href="classarmnn_1_1_quantized_lstm_layer.xhtml#ad3c37b52145c3cf1b4856c0df008a468">m_QuantizedLstmParameters</a>.<a class="code" href="structarmnn_1_1_quantized_lstm_parameters.xhtml#a950c538e326db48f4c26a354c2b982e3">m_OutputGateBias</a>);</div>
<div class="line"><a name="l00191"></a><span class="lineno">  191</span>&#160; </div>
<div class="line"><a name="l00192"></a><span class="lineno">  192</span>&#160;    <span class="comment">// InputToX weight tensors</span></div>
<div class="line"><a name="l00193"></a><span class="lineno">  193</span>&#160;    <span class="keywordflow">if</span> (<a class="code" href="classarmnn_1_1_quantized_lstm_layer.xhtml#ad3c37b52145c3cf1b4856c0df008a468">m_QuantizedLstmParameters</a>.<a class="code" href="structarmnn_1_1_quantized_lstm_parameters.xhtml#a281954ff495d27f7a29e42a98768c670">m_InputToInputWeights</a> != <span class="keyword">nullptr</span>)</div>
<div class="line"><a name="l00194"></a><span class="lineno">  194</span>&#160;    {</div>
<div class="line"><a name="l00195"></a><span class="lineno">  195</span>&#160;        constTensors.emplace_back(<a class="code" href="classarmnn_1_1_const_tensor.xhtml">ConstTensor</a>(managedInputToInputWeights.<a class="code" href="classarmnn_1_1_managed_const_tensor_handle.xhtml#a66e8f43a5b42b500871ed96e15419567">GetTensorInfo</a>(),</div>
<div class="line"><a name="l00196"></a><span class="lineno">  196</span>&#160;                                              managedInputToInputWeights.<a class="code" href="classarmnn_1_1_managed_const_tensor_handle.xhtml#a85e02725184184331cc2e3b00642be47">Map</a>()));</div>
<div class="line"><a name="l00197"></a><span class="lineno">  197</span>&#160;    }</div>
<div class="line"><a name="l00198"></a><span class="lineno">  198</span>&#160; </div>
<div class="line"><a name="l00199"></a><span class="lineno">  199</span>&#160;    <span class="keywordflow">if</span> (<a class="code" href="classarmnn_1_1_quantized_lstm_layer.xhtml#ad3c37b52145c3cf1b4856c0df008a468">m_QuantizedLstmParameters</a>.<a class="code" href="structarmnn_1_1_quantized_lstm_parameters.xhtml#aafad117fb253359c1d472c9faefe49ef">m_InputToForgetWeights</a> != <span class="keyword">nullptr</span>)</div>
<div class="line"><a name="l00200"></a><span class="lineno">  200</span>&#160;    {</div>
<div class="line"><a name="l00201"></a><span class="lineno">  201</span>&#160;        constTensors.emplace_back(<a class="code" href="classarmnn_1_1_const_tensor.xhtml">ConstTensor</a>(managedInputToForgetWeights.<a class="code" href="classarmnn_1_1_managed_const_tensor_handle.xhtml#a66e8f43a5b42b500871ed96e15419567">GetTensorInfo</a>(),</div>
<div class="line"><a name="l00202"></a><span class="lineno">  202</span>&#160;                                              managedInputToForgetWeights.<a class="code" href="classarmnn_1_1_managed_const_tensor_handle.xhtml#a85e02725184184331cc2e3b00642be47">Map</a>()));</div>
<div class="line"><a name="l00203"></a><span class="lineno">  203</span>&#160;    }</div>
<div class="line"><a name="l00204"></a><span class="lineno">  204</span>&#160; </div>
<div class="line"><a name="l00205"></a><span class="lineno">  205</span>&#160;    <span class="keywordflow">if</span> (<a class="code" href="classarmnn_1_1_quantized_lstm_layer.xhtml#ad3c37b52145c3cf1b4856c0df008a468">m_QuantizedLstmParameters</a>.<a class="code" href="structarmnn_1_1_quantized_lstm_parameters.xhtml#ad3f42762262330534a4be0dde29a1318">m_InputToCellWeights</a> != <span class="keyword">nullptr</span>)</div>
<div class="line"><a name="l00206"></a><span class="lineno">  206</span>&#160;    {</div>
<div class="line"><a name="l00207"></a><span class="lineno">  207</span>&#160;        constTensors.emplace_back(<a class="code" href="classarmnn_1_1_const_tensor.xhtml">ConstTensor</a>(managedInputToCellWeights.<a class="code" href="classarmnn_1_1_managed_const_tensor_handle.xhtml#a66e8f43a5b42b500871ed96e15419567">GetTensorInfo</a>(),</div>
<div class="line"><a name="l00208"></a><span class="lineno">  208</span>&#160;                                              managedInputToCellWeights.<a class="code" href="classarmnn_1_1_managed_const_tensor_handle.xhtml#a85e02725184184331cc2e3b00642be47">Map</a>()));</div>
<div class="line"><a name="l00209"></a><span class="lineno">  209</span>&#160;    }</div>
<div class="line"><a name="l00210"></a><span class="lineno">  210</span>&#160; </div>
<div class="line"><a name="l00211"></a><span class="lineno">  211</span>&#160;    <span class="keywordflow">if</span> (<a class="code" href="classarmnn_1_1_quantized_lstm_layer.xhtml#ad3c37b52145c3cf1b4856c0df008a468">m_QuantizedLstmParameters</a>.<a class="code" href="structarmnn_1_1_quantized_lstm_parameters.xhtml#a3d4f6f42e10ba6f808a5244bb7853e7e">m_InputToOutputWeights</a> != <span class="keyword">nullptr</span>)</div>
<div class="line"><a name="l00212"></a><span class="lineno">  212</span>&#160;    {</div>
<div class="line"><a name="l00213"></a><span class="lineno">  213</span>&#160;        constTensors.emplace_back(<a class="code" href="classarmnn_1_1_const_tensor.xhtml">ConstTensor</a>(managedInputToOutputWeights.<a class="code" href="classarmnn_1_1_managed_const_tensor_handle.xhtml#a66e8f43a5b42b500871ed96e15419567">GetTensorInfo</a>(),</div>
<div class="line"><a name="l00214"></a><span class="lineno">  214</span>&#160;                                              managedInputToOutputWeights.<a class="code" href="classarmnn_1_1_managed_const_tensor_handle.xhtml#a85e02725184184331cc2e3b00642be47">Map</a>()));</div>
<div class="line"><a name="l00215"></a><span class="lineno">  215</span>&#160;    }</div>
<div class="line"><a name="l00216"></a><span class="lineno">  216</span>&#160; </div>
<div class="line"><a name="l00217"></a><span class="lineno">  217</span>&#160;    <span class="comment">// RecurrentToX weight tensors</span></div>
<div class="line"><a name="l00218"></a><span class="lineno">  218</span>&#160;    <span class="keywordflow">if</span> (<a class="code" href="classarmnn_1_1_quantized_lstm_layer.xhtml#ad3c37b52145c3cf1b4856c0df008a468">m_QuantizedLstmParameters</a>.<a class="code" href="structarmnn_1_1_quantized_lstm_parameters.xhtml#addfb6b081817510deb924c8fb5ce216c">m_RecurrentToInputWeights</a> != <span class="keyword">nullptr</span>)</div>
<div class="line"><a name="l00219"></a><span class="lineno">  219</span>&#160;    {</div>
<div class="line"><a name="l00220"></a><span class="lineno">  220</span>&#160;        constTensors.emplace_back(<a class="code" href="classarmnn_1_1_const_tensor.xhtml">ConstTensor</a>(</div>
<div class="line"><a name="l00221"></a><span class="lineno">  221</span>&#160;                managedRecurrentToInputWeights.<a class="code" href="classarmnn_1_1_managed_const_tensor_handle.xhtml#a66e8f43a5b42b500871ed96e15419567">GetTensorInfo</a>(),</div>
<div class="line"><a name="l00222"></a><span class="lineno">  222</span>&#160;                managedRecurrentToInputWeights.<a class="code" href="classarmnn_1_1_managed_const_tensor_handle.xhtml#a85e02725184184331cc2e3b00642be47">Map</a>()));</div>
<div class="line"><a name="l00223"></a><span class="lineno">  223</span>&#160;    }</div>
<div class="line"><a name="l00224"></a><span class="lineno">  224</span>&#160; </div>
<div class="line"><a name="l00225"></a><span class="lineno">  225</span>&#160;    <span class="keywordflow">if</span> (<a class="code" href="classarmnn_1_1_quantized_lstm_layer.xhtml#ad3c37b52145c3cf1b4856c0df008a468">m_QuantizedLstmParameters</a>.<a class="code" href="structarmnn_1_1_quantized_lstm_parameters.xhtml#a1dd41cd674924907643cb088070a65d3">m_RecurrentToForgetWeights</a> != <span class="keyword">nullptr</span>)</div>
<div class="line"><a name="l00226"></a><span class="lineno">  226</span>&#160;    {</div>
<div class="line"><a name="l00227"></a><span class="lineno">  227</span>&#160;        constTensors.emplace_back(<a class="code" href="classarmnn_1_1_const_tensor.xhtml">ConstTensor</a>(</div>
<div class="line"><a name="l00228"></a><span class="lineno">  228</span>&#160;                managedRecurrentToForgetWeights.<a class="code" href="classarmnn_1_1_managed_const_tensor_handle.xhtml#a66e8f43a5b42b500871ed96e15419567">GetTensorInfo</a>(),</div>
<div class="line"><a name="l00229"></a><span class="lineno">  229</span>&#160;                managedRecurrentToForgetWeights.<a class="code" href="classarmnn_1_1_managed_const_tensor_handle.xhtml#a85e02725184184331cc2e3b00642be47">Map</a>()));</div>
<div class="line"><a name="l00230"></a><span class="lineno">  230</span>&#160;    }</div>
<div class="line"><a name="l00231"></a><span class="lineno">  231</span>&#160; </div>
<div class="line"><a name="l00232"></a><span class="lineno">  232</span>&#160;    <span class="keywordflow">if</span> (<a class="code" href="classarmnn_1_1_quantized_lstm_layer.xhtml#ad3c37b52145c3cf1b4856c0df008a468">m_QuantizedLstmParameters</a>.<a class="code" href="structarmnn_1_1_quantized_lstm_parameters.xhtml#a608ed1a3d4135921ce33a286a87a072b">m_RecurrentToCellWeights</a> != <span class="keyword">nullptr</span>)</div>
<div class="line"><a name="l00233"></a><span class="lineno">  233</span>&#160;    {</div>
<div class="line"><a name="l00234"></a><span class="lineno">  234</span>&#160;        constTensors.emplace_back(<a class="code" href="classarmnn_1_1_const_tensor.xhtml">ConstTensor</a>(</div>
<div class="line"><a name="l00235"></a><span class="lineno">  235</span>&#160;                managedRecurrentToCellWeights.<a class="code" href="classarmnn_1_1_managed_const_tensor_handle.xhtml#a66e8f43a5b42b500871ed96e15419567">GetTensorInfo</a>(),</div>
<div class="line"><a name="l00236"></a><span class="lineno">  236</span>&#160;                managedRecurrentToCellWeights.<a class="code" href="classarmnn_1_1_managed_const_tensor_handle.xhtml#a85e02725184184331cc2e3b00642be47">Map</a>()));</div>
<div class="line"><a name="l00237"></a><span class="lineno">  237</span>&#160;    }</div>
<div class="line"><a name="l00238"></a><span class="lineno">  238</span>&#160; </div>
<div class="line"><a name="l00239"></a><span class="lineno">  239</span>&#160;    <span class="keywordflow">if</span> (<a class="code" href="classarmnn_1_1_quantized_lstm_layer.xhtml#ad3c37b52145c3cf1b4856c0df008a468">m_QuantizedLstmParameters</a>.<a class="code" href="structarmnn_1_1_quantized_lstm_parameters.xhtml#addad136e04521a1d31cbebf7280c312e">m_RecurrentToOutputWeights</a> != <span class="keyword">nullptr</span>)</div>
<div class="line"><a name="l00240"></a><span class="lineno">  240</span>&#160;    {</div>
<div class="line"><a name="l00241"></a><span class="lineno">  241</span>&#160;        constTensors.emplace_back(<a class="code" href="classarmnn_1_1_const_tensor.xhtml">ConstTensor</a>(</div>
<div class="line"><a name="l00242"></a><span class="lineno">  242</span>&#160;                managedRecurrentToOutputWeights.<a class="code" href="classarmnn_1_1_managed_const_tensor_handle.xhtml#a66e8f43a5b42b500871ed96e15419567">GetTensorInfo</a>(),</div>
<div class="line"><a name="l00243"></a><span class="lineno">  243</span>&#160;                managedRecurrentToOutputWeights.<a class="code" href="classarmnn_1_1_managed_const_tensor_handle.xhtml#a85e02725184184331cc2e3b00642be47">Map</a>()));</div>
<div class="line"><a name="l00244"></a><span class="lineno">  244</span>&#160;    }</div>
<div class="line"><a name="l00245"></a><span class="lineno">  245</span>&#160; </div>
<div class="line"><a name="l00246"></a><span class="lineno">  246</span>&#160;    <span class="comment">// Bias tensors</span></div>
<div class="line"><a name="l00247"></a><span class="lineno">  247</span>&#160;    <span class="keywordflow">if</span> (<a class="code" href="classarmnn_1_1_quantized_lstm_layer.xhtml#ad3c37b52145c3cf1b4856c0df008a468">m_QuantizedLstmParameters</a>.<a class="code" href="structarmnn_1_1_quantized_lstm_parameters.xhtml#a85684ffb2d12d0d04fbd188591488a2c">m_InputGateBias</a> != <span class="keyword">nullptr</span>)</div>
<div class="line"><a name="l00248"></a><span class="lineno">  248</span>&#160;    {</div>
<div class="line"><a name="l00249"></a><span class="lineno">  249</span>&#160;        constTensors.emplace_back(<a class="code" href="classarmnn_1_1_const_tensor.xhtml">ConstTensor</a>(managedInputGateBias.<a class="code" href="classarmnn_1_1_managed_const_tensor_handle.xhtml#a66e8f43a5b42b500871ed96e15419567">GetTensorInfo</a>(),</div>
<div class="line"><a name="l00250"></a><span class="lineno">  250</span>&#160;                                              managedInputGateBias.<a class="code" href="classarmnn_1_1_managed_const_tensor_handle.xhtml#a85e02725184184331cc2e3b00642be47">Map</a>()));</div>
<div class="line"><a name="l00251"></a><span class="lineno">  251</span>&#160;    }</div>
<div class="line"><a name="l00252"></a><span class="lineno">  252</span>&#160; </div>
<div class="line"><a name="l00253"></a><span class="lineno">  253</span>&#160;    <span class="keywordflow">if</span> (<a class="code" href="classarmnn_1_1_quantized_lstm_layer.xhtml#ad3c37b52145c3cf1b4856c0df008a468">m_QuantizedLstmParameters</a>.<a class="code" href="structarmnn_1_1_quantized_lstm_parameters.xhtml#af7f44bcc5b6cf669268a9ac0ff1446be">m_ForgetGateBias</a> != <span class="keyword">nullptr</span>)</div>
<div class="line"><a name="l00254"></a><span class="lineno">  254</span>&#160;    {</div>
<div class="line"><a name="l00255"></a><span class="lineno">  255</span>&#160;        constTensors.emplace_back(<a class="code" href="classarmnn_1_1_const_tensor.xhtml">ConstTensor</a>(managedForgetGateBias.<a class="code" href="classarmnn_1_1_managed_const_tensor_handle.xhtml#a66e8f43a5b42b500871ed96e15419567">GetTensorInfo</a>(),</div>
<div class="line"><a name="l00256"></a><span class="lineno">  256</span>&#160;                                              managedForgetGateBias.<a class="code" href="classarmnn_1_1_managed_const_tensor_handle.xhtml#a85e02725184184331cc2e3b00642be47">Map</a>()));</div>
<div class="line"><a name="l00257"></a><span class="lineno">  257</span>&#160;    }</div>
<div class="line"><a name="l00258"></a><span class="lineno">  258</span>&#160; </div>
<div class="line"><a name="l00259"></a><span class="lineno">  259</span>&#160;    <span class="keywordflow">if</span> (<a class="code" href="classarmnn_1_1_quantized_lstm_layer.xhtml#ad3c37b52145c3cf1b4856c0df008a468">m_QuantizedLstmParameters</a>.<a class="code" href="structarmnn_1_1_quantized_lstm_parameters.xhtml#a21a90800797f1e122bc44d7022001558">m_CellBias</a> != <span class="keyword">nullptr</span>)</div>
<div class="line"><a name="l00260"></a><span class="lineno">  260</span>&#160;    {</div>
<div class="line"><a name="l00261"></a><span class="lineno">  261</span>&#160;        constTensors.emplace_back(<a class="code" href="classarmnn_1_1_const_tensor.xhtml">ConstTensor</a>(managedCellBias.<a class="code" href="classarmnn_1_1_managed_const_tensor_handle.xhtml#a66e8f43a5b42b500871ed96e15419567">GetTensorInfo</a>(),</div>
<div class="line"><a name="l00262"></a><span class="lineno">  262</span>&#160;                                              managedCellBias.<a class="code" href="classarmnn_1_1_managed_const_tensor_handle.xhtml#a85e02725184184331cc2e3b00642be47">Map</a>()));</div>
<div class="line"><a name="l00263"></a><span class="lineno">  263</span>&#160;    }</div>
<div class="line"><a name="l00264"></a><span class="lineno">  264</span>&#160; </div>
<div class="line"><a name="l00265"></a><span class="lineno">  265</span>&#160;    <span class="keywordflow">if</span> (<a class="code" href="classarmnn_1_1_quantized_lstm_layer.xhtml#ad3c37b52145c3cf1b4856c0df008a468">m_QuantizedLstmParameters</a>.<a class="code" href="structarmnn_1_1_quantized_lstm_parameters.xhtml#a950c538e326db48f4c26a354c2b982e3">m_OutputGateBias</a> != <span class="keyword">nullptr</span>)</div>
<div class="line"><a name="l00266"></a><span class="lineno">  266</span>&#160;    {</div>
<div class="line"><a name="l00267"></a><span class="lineno">  267</span>&#160;        constTensors.emplace_back(<a class="code" href="classarmnn_1_1_const_tensor.xhtml">ConstTensor</a>(managedOutputGateBias.<a class="code" href="classarmnn_1_1_managed_const_tensor_handle.xhtml#a66e8f43a5b42b500871ed96e15419567">GetTensorInfo</a>(),</div>
<div class="line"><a name="l00268"></a><span class="lineno">  268</span>&#160;                                              managedOutputGateBias.<a class="code" href="classarmnn_1_1_managed_const_tensor_handle.xhtml#a85e02725184184331cc2e3b00642be47">Map</a>()));</div>
<div class="line"><a name="l00269"></a><span class="lineno">  269</span>&#160;    }</div>
<div class="line"><a name="l00270"></a><span class="lineno">  270</span>&#160; </div>
<div class="line"><a name="l00271"></a><span class="lineno">  271</span>&#160; </div>
<div class="line"><a name="l00272"></a><span class="lineno">  272</span>&#160;    strategy.<a class="code" href="classarmnn_1_1_i_strategy.xhtml#ad4f8c9ff973cf6a603d26b56c5b34967">ExecuteStrategy</a>(<span class="keyword">this</span>, <a class="code" href="structarmnn_1_1_base_descriptor.xhtml">BaseDescriptor</a>(), constTensors, <a class="code" href="classarmnn_1_1_layer.xhtml#a7ddf0cf6f620d59c10e63495ace795d0">GetName</a>());</div>
<div class="line"><a name="l00273"></a><span class="lineno">  273</span>&#160;}</div>
<div class="line"><a name="l00274"></a><span class="lineno">  274</span>&#160; </div>
<div class="line"><a name="l00275"></a><span class="lineno">  275</span>&#160;} <span class="comment">// namespace armnn</span></div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<div class="ttc" id="anamespacearmnn_xhtml_aa815fde54f6d8e8aa5b4f0301cf4178b"><div class="ttname"><a href="namespacearmnn.xhtml#aa815fde54f6d8e8aa5b4f0301cf4178b">armnn::GetTensorInfo</a></div><div class="ttdeci">const TensorInfo &amp; GetTensorInfo(const ITensorHandle *tensorHandle)</div><div class="ttdoc">float32 helpers</div><div class="ttdef"><b>Definition:</b> <a href="_ref_workload_utils_8hpp_source.xhtml#l00027">RefWorkloadUtils.hpp:27</a></div></div>
<div class="ttc" id="astructarmnn_1_1_quantized_lstm_queue_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_quantized_lstm_queue_descriptor.xhtml">armnn::QuantizedLstmQueueDescriptor</a></div><div class="ttdef"><b>Definition:</b> <a href="_workload_data_8hpp_source.xhtml#l00609">WorkloadData.hpp:609</a></div></div>
<div class="ttc" id="aclassarmnn_1_1_quantized_lstm_layer_xhtml_adfa912d0c4c6c00f1af2cbfa799572b7"><div class="ttname"><a href="classarmnn_1_1_quantized_lstm_layer.xhtml#adfa912d0c4c6c00f1af2cbfa799572b7">armnn::QuantizedLstmLayer::CreateWorkload</a></div><div class="ttdeci">virtual std::unique_ptr&lt; IWorkload &gt; CreateWorkload(const IWorkloadFactory &amp;factory) const override</div><div class="ttdoc">Makes a workload for the QuantizedLstm type.</div><div class="ttdef"><b>Definition:</b> <a href="_quantized_lstm_layer_8cpp_source.xhtml#l00022">QuantizedLstmLayer.cpp:22</a></div></div>
<div class="ttc" id="astructarmnn_1_1_quantized_lstm_parameters_xhtml_addfb6b081817510deb924c8fb5ce216c"><div class="ttname"><a href="structarmnn_1_1_quantized_lstm_parameters.xhtml#addfb6b081817510deb924c8fb5ce216c">armnn::QuantizedLstmParameters::m_RecurrentToInputWeights</a></div><div class="ttdeci">std::shared_ptr&lt; ConstTensorHandle &gt; m_RecurrentToInputWeights</div><div class="ttdoc">A unique pointer to represent 2D weights tensor with dimensions [outputSize, outputSize] (QAsymm8).</div><div class="ttdef"><b>Definition:</b> <a href="_quantized_lstm_layer_8hpp_source.xhtml#l00026">QuantizedLstmLayer.hpp:26</a></div></div>
<div class="ttc" id="a_quantized_lstm_params_8hpp_xhtml"><div class="ttname"><a href="_quantized_lstm_params_8hpp.xhtml">QuantizedLstmParams.hpp</a></div></div>
<div class="ttc" id="astructarmnn_1_1_quantized_lstm_queue_descriptor_xhtml_ab160eba2493d5fe52185c0986dcb190c"><div class="ttname"><a href="structarmnn_1_1_quantized_lstm_queue_descriptor.xhtml#ab160eba2493d5fe52185c0986dcb190c">armnn::QuantizedLstmQueueDescriptor::m_InputToInputWeights</a></div><div class="ttdeci">const ConstTensorHandle * m_InputToInputWeights</div><div class="ttdef"><b>Definition:</b> <a href="_workload_data_8hpp_source.xhtml#l00628">WorkloadData.hpp:628</a></div></div>
<div class="ttc" id="a_exceptions_8hpp_xhtml_aa3be76aec4ce713822a5ea1ecbb7bc61"><div class="ttname"><a href="_exceptions_8hpp.xhtml#aa3be76aec4ce713822a5ea1ecbb7bc61">CHECK_LOCATION</a></div><div class="ttdeci">#define CHECK_LOCATION()</div><div class="ttdef"><b>Definition:</b> <a href="_exceptions_8hpp_source.xhtml#l00203">Exceptions.hpp:203</a></div></div>
<div class="ttc" id="aclassarmnn_1_1_quantized_lstm_layer_xhtml_a29cc31172f6ab16ac931f90c667c092d"><div class="ttname"><a href="classarmnn_1_1_quantized_lstm_layer.xhtml#a29cc31172f6ab16ac931f90c667c092d">armnn::QuantizedLstmLayer::GetConstantTensorsByRef</a></div><div class="ttdeci">Layer::ImmutableConstantTensors GetConstantTensorsByRef() const override</div><div class="ttdoc">Retrieve the handles to the constant values stored by the layer.</div><div class="ttdef"><b>Definition:</b> <a href="_quantized_lstm_layer_8cpp_source.xhtml#l00151">QuantizedLstmLayer.cpp:151</a></div></div>
<div class="ttc" id="astructarmnn_1_1_quantized_lstm_parameters_xhtml_af7f44bcc5b6cf669268a9ac0ff1446be"><div class="ttname"><a href="structarmnn_1_1_quantized_lstm_parameters.xhtml#af7f44bcc5b6cf669268a9ac0ff1446be">armnn::QuantizedLstmParameters::m_ForgetGateBias</a></div><div class="ttdeci">std::shared_ptr&lt; ConstTensorHandle &gt; m_ForgetGateBias</div><div class="ttdoc">A unique pointer to represent 1D bias tensor with dimensions [outputSize] (int32).</div><div class="ttdef"><b>Definition:</b> <a href="_quantized_lstm_layer_8hpp_source.xhtml#l00037">QuantizedLstmLayer.hpp:37</a></div></div>
<div class="ttc" id="aclassarmnn_1_1_layer_xhtml_a0607e36e88f38c34c71c663164b76776"><div class="ttname"><a href="classarmnn_1_1_layer.xhtml#a0607e36e88f38c34c71c663164b76776">armnn::Layer::VerifyLayerConnections</a></div><div class="ttdeci">void VerifyLayerConnections(unsigned int expectedConnections, const CheckLocation &amp;location) const</div><div class="ttdef"><b>Definition:</b> <a href="_layer_8cpp_source.xhtml#l00378">Layer.cpp:378</a></div></div>
<div class="ttc" id="aclassarmnn_1_1_input_slot_xhtml_a9e3eee087babbe637e77f85404b9d761"><div class="ttname"><a href="classarmnn_1_1_input_slot.xhtml#a9e3eee087babbe637e77f85404b9d761">armnn::InputSlot::GetConnection</a></div><div class="ttdeci">const IOutputSlot * GetConnection() const override</div><div class="ttdef"><b>Definition:</b> <a href="_layer_8hpp_source.xhtml#l00206">Layer.hpp:206</a></div></div>
<div class="ttc" id="aclassarmnn_1_1_quantized_lstm_layer_xhtml_a65ca562c882ad619684445a1402f415a"><div class="ttname"><a href="classarmnn_1_1_quantized_lstm_layer.xhtml#a65ca562c882ad619684445a1402f415a">armnn::QuantizedLstmLayer::InferOutputShapes</a></div><div class="ttdeci">std::vector&lt; TensorShape &gt; InferOutputShapes(const std::vector&lt; TensorShape &gt; &amp;inputShapes) const override</div><div class="ttdoc">By default returns inputShapes if the number of inputs are equal to number of outputs,...</div><div class="ttdef"><b>Definition:</b> <a href="_quantized_lstm_layer_8cpp_source.xhtml#l00081">QuantizedLstmLayer.cpp:81</a></div></div>
<div class="ttc" id="aclassarmnn_1_1_managed_const_tensor_handle_xhtml"><div class="ttname"><a href="classarmnn_1_1_managed_const_tensor_handle.xhtml">armnn::ManagedConstTensorHandle</a></div><div class="ttdef"><b>Definition:</b> <a href="_tensor_handle_8hpp_source.xhtml#l00187">TensorHandle.hpp:187</a></div></div>
<div class="ttc" id="aclassarmnn_1_1_const_tensor_xhtml"><div class="ttname"><a href="classarmnn_1_1_const_tensor.xhtml">armnn::ConstTensor</a></div><div class="ttdoc">A tensor defined by a TensorInfo (shape and data type) and an immutable backing store.</div><div class="ttdef"><b>Definition:</b> <a href="_tensor_8hpp_source.xhtml#l00327">Tensor.hpp:327</a></div></div>
<div class="ttc" id="aclassarmnn_1_1_quantized_lstm_layer_xhtml_a46fc3fdd4b2a5dd6d184e57983cf20bc"><div class="ttname"><a href="classarmnn_1_1_quantized_lstm_layer.xhtml#a46fc3fdd4b2a5dd6d184e57983cf20bc">armnn::QuantizedLstmLayer::ExecuteStrategy</a></div><div class="ttdeci">void ExecuteStrategy(IStrategy &amp;strategy) const override</div><div class="ttdoc">Apply a visitor to this layer.</div><div class="ttdef"><b>Definition:</b> <a href="_quantized_lstm_layer_8cpp_source.xhtml#l00173">QuantizedLstmLayer.cpp:173</a></div></div>
<div class="ttc" id="aclassarmnn_1_1_layer_xhtml"><div class="ttname"><a href="classarmnn_1_1_layer.xhtml">armnn::Layer</a></div><div class="ttdef"><b>Definition:</b> <a href="_layer_8hpp_source.xhtml#l00217">Layer.hpp:217</a></div></div>
<div class="ttc" id="aclassarmnn_1_1_managed_const_tensor_handle_xhtml_a85e02725184184331cc2e3b00642be47"><div class="ttname"><a href="classarmnn_1_1_managed_const_tensor_handle.xhtml#a85e02725184184331cc2e3b00642be47">armnn::ManagedConstTensorHandle::Map</a></div><div class="ttdeci">const void * Map(bool blocking=true)</div><div class="ttdoc">RAII Managed resource Unmaps MemoryArea once out of scope.</div><div class="ttdef"><b>Definition:</b> <a href="_tensor_handle_8hpp_source.xhtml#l00196">TensorHandle.hpp:196</a></div></div>
<div class="ttc" id="aclassarmnn_1_1_quantized_lstm_layer_xhtml_ad3c37b52145c3cf1b4856c0df008a468"><div class="ttname"><a href="classarmnn_1_1_quantized_lstm_layer.xhtml#ad3c37b52145c3cf1b4856c0df008a468">armnn::QuantizedLstmLayer::m_QuantizedLstmParameters</a></div><div class="ttdeci">QuantizedLstmParameters m_QuantizedLstmParameters</div><div class="ttdef"><b>Definition:</b> <a href="_quantized_lstm_layer_8hpp_source.xhtml#l00049">QuantizedLstmLayer.hpp:49</a></div></div>
<div class="ttc" id="a_quantized_lstm_layer_8hpp_xhtml"><div class="ttname"><a href="_quantized_lstm_layer_8hpp.xhtml">QuantizedLstmLayer.hpp</a></div></div>
<div class="ttc" id="aclassarmnn_1_1_layer_xhtml_a448afc716fda85394df1e8e5b7d530e8"><div class="ttname"><a href="classarmnn_1_1_layer.xhtml#a448afc716fda85394df1e8e5b7d530e8">armnn::Layer::VerifyShapeInferenceType</a></div><div class="ttdeci">void VerifyShapeInferenceType(const TensorShape &amp;outputShape, ShapeInferenceMethod shapeInferenceMethod)</div><div class="ttdef"><b>Definition:</b> <a href="_layer_8cpp_source.xhtml#l00491">Layer.cpp:491</a></div></div>
<div class="ttc" id="a_tensor_handle_8hpp_xhtml"><div class="ttname"><a href="_tensor_handle_8hpp.xhtml">TensorHandle.hpp</a></div></div>
<div class="ttc" id="aclassarmnn_1_1_i_workload_factory_xhtml"><div class="ttname"><a href="classarmnn_1_1_i_workload_factory.xhtml">armnn::IWorkloadFactory</a></div><div class="ttdef"><b>Definition:</b> <a href="_workload_factory_8hpp_source.xhtml#l00022">WorkloadFactory.hpp:22</a></div></div>
<div class="ttc" id="a_workload_factory_8hpp_xhtml"><div class="ttname"><a href="_workload_factory_8hpp.xhtml">WorkloadFactory.hpp</a></div></div>
<div class="ttc" id="anamespacearmnn_xhtml_a56943a0946e5f15e5e58054b8e7a04a4a890a37ff3bfe123414ba7e6f052b49f3"><div class="ttname"><a href="namespacearmnn.xhtml#a56943a0946e5f15e5e58054b8e7a04a4a890a37ff3bfe123414ba7e6f052b49f3">armnn::LayerType::QuantizedLstm</a></div><div class="ttdeci">@ QuantizedLstm</div></div>
<div class="ttc" id="aclassarmnn_1_1_layer_xhtml_af7f0460d32511de0da525f1817d13e8c"><div class="ttname"><a href="classarmnn_1_1_layer.xhtml#af7f0460d32511de0da525f1817d13e8c">armnn::Layer::SetAdditionalInfo</a></div><div class="ttdeci">void SetAdditionalInfo(QueueDescriptor &amp;descriptor) const</div><div class="ttdef"><b>Definition:</b> <a href="_layer_8cpp_source.xhtml#l00274">Layer.cpp:274</a></div></div>
<div class="ttc" id="astructarmnn_1_1_quantized_lstm_parameters_xhtml_a85684ffb2d12d0d04fbd188591488a2c"><div class="ttname"><a href="structarmnn_1_1_quantized_lstm_parameters.xhtml#a85684ffb2d12d0d04fbd188591488a2c">armnn::QuantizedLstmParameters::m_InputGateBias</a></div><div class="ttdeci">std::shared_ptr&lt; ConstTensorHandle &gt; m_InputGateBias</div><div class="ttdoc">A unique pointer to represent 1D bias tensor with dimensions [outputSize] (int32).</div><div class="ttdef"><b>Definition:</b> <a href="_quantized_lstm_layer_8hpp_source.xhtml#l00035">QuantizedLstmLayer.hpp:35</a></div></div>
<div class="ttc" id="aclassarmnn_1_1_layer_xhtml_afe508761cc8318b15329ba4acf7fbfec"><div class="ttname"><a href="classarmnn_1_1_layer.xhtml#afe508761cc8318b15329ba4acf7fbfec">armnn::Layer::m_ShapeInferenceMethod</a></div><div class="ttdeci">ShapeInferenceMethod m_ShapeInferenceMethod</div><div class="ttdef"><b>Definition:</b> <a href="_layer_8hpp_source.xhtml#l00427">Layer.hpp:427</a></div></div>
<div class="ttc" id="aclassarmnn_1_1_layer_xhtml_aeb2d638cc0e02c10075e015100996f2d"><div class="ttname"><a href="classarmnn_1_1_layer.xhtml#aeb2d638cc0e02c10075e015100996f2d">armnn::Layer::ValidateAndCopyShape</a></div><div class="ttdeci">void ValidateAndCopyShape(const TensorShape &amp;outputShape, const TensorShape &amp;inferredShape, const ShapeInferenceMethod shapeInferenceMethod, const std::string &amp;layerName, const unsigned int outputSlotIndex=0)</div><div class="ttdef"><b>Definition:</b> <a href="_layer_8cpp_source.xhtml#l00422">Layer.cpp:422</a></div></div>
<div class="ttc" id="aclassarmnn_1_1_managed_const_tensor_handle_xhtml_a66e8f43a5b42b500871ed96e15419567"><div class="ttname"><a href="classarmnn_1_1_managed_const_tensor_handle.xhtml#a66e8f43a5b42b500871ed96e15419567">armnn::ManagedConstTensorHandle::GetTensorInfo</a></div><div class="ttdeci">const TensorInfo &amp; GetTensorInfo() const</div><div class="ttdef"><b>Definition:</b> <a href="_tensor_handle_8hpp_source.xhtml#l00239">TensorHandle.hpp:239</a></div></div>
<div class="ttc" id="aclassarmnn_1_1_quantized_lstm_layer_xhtml_a8c8f543d7e9729362c266d12ec169966"><div class="ttname"><a href="classarmnn_1_1_quantized_lstm_layer.xhtml#a8c8f543d7e9729362c266d12ec169966">armnn::QuantizedLstmLayer::ValidateTensorShapesFromInputs</a></div><div class="ttdeci">void ValidateTensorShapesFromInputs() override</div><div class="ttdoc">Check if the input tensor shape(s) will lead to a valid configuration of QuantizedLstmLayer.</div><div class="ttdef"><b>Definition:</b> <a href="_quantized_lstm_layer_8cpp_source.xhtml#l00096">QuantizedLstmLayer.cpp:96</a></div></div>
<div class="ttc" id="anamespacearmnn_xhtml"><div class="ttname"><a href="namespacearmnn.xhtml">armnn</a></div><div class="ttdoc">Copyright (c) 2021 ARM Limited and Contributors.</div><div class="ttdef"><b>Definition:</b> <a href="01__00__quick__start_8dox_source.xhtml#l00006">01_00_quick_start.dox:6</a></div></div>
<div class="ttc" id="aclassarmnn_1_1_i_strategy_xhtml"><div class="ttname"><a href="classarmnn_1_1_i_strategy.xhtml">armnn::IStrategy</a></div><div class="ttdef"><b>Definition:</b> <a href="_i_strategy_8hpp_source.xhtml#l00016">IStrategy.hpp:16</a></div></div>
<div class="ttc" id="aclassarmnn_1_1_output_slot_xhtml_ada2ad7d1caeeb4ef6195c8925fad6a65"><div class="ttname"><a href="classarmnn_1_1_output_slot.xhtml#ada2ad7d1caeeb4ef6195c8925fad6a65">armnn::OutputSlot::GetTensorInfo</a></div><div class="ttdeci">const TensorInfo &amp; GetTensorInfo() const override</div><div class="ttdef"><b>Definition:</b> <a href="_layer_8cpp_source.xhtml#l00092">Layer.cpp:92</a></div></div>
<div class="ttc" id="astructarmnn_1_1_quantized_lstm_parameters_xhtml_aafad117fb253359c1d472c9faefe49ef"><div class="ttname"><a href="structarmnn_1_1_quantized_lstm_parameters.xhtml#aafad117fb253359c1d472c9faefe49ef">armnn::QuantizedLstmParameters::m_InputToForgetWeights</a></div><div class="ttdeci">std::shared_ptr&lt; ConstTensorHandle &gt; m_InputToForgetWeights</div><div class="ttdoc">A unique pointer to represent 2D weights tensor with dimensions [outputSize, inputSize] (QAsymm8).</div><div class="ttdef"><b>Definition:</b> <a href="_quantized_lstm_layer_8hpp_source.xhtml#l00019">QuantizedLstmLayer.hpp:19</a></div></div>
<div class="ttc" id="astructarmnn_1_1_quantized_lstm_queue_descriptor_xhtml_a6e9593869b82984de198fed27f72cdcf"><div class="ttname"><a href="structarmnn_1_1_quantized_lstm_queue_descriptor.xhtml#a6e9593869b82984de198fed27f72cdcf">armnn::QuantizedLstmQueueDescriptor::m_CellBias</a></div><div class="ttdeci">const ConstTensorHandle * m_CellBias</div><div class="ttdef"><b>Definition:</b> <a href="_workload_data_8hpp_source.xhtml#l00640">WorkloadData.hpp:640</a></div></div>
<div class="ttc" id="aclassarmnn_1_1_tensor_shape_xhtml"><div class="ttname"><a href="classarmnn_1_1_tensor_shape.xhtml">armnn::TensorShape</a></div><div class="ttdef"><b>Definition:</b> <a href="_tensor_8hpp_source.xhtml#l00020">Tensor.hpp:20</a></div></div>
<div class="ttc" id="anamespacearmnn_xhtml_a56943a0946e5f15e5e58054b8e7a04a4"><div class="ttname"><a href="namespacearmnn.xhtml#a56943a0946e5f15e5e58054b8e7a04a4">armnn::LayerType</a></div><div class="ttdeci">LayerType</div><div class="ttdoc">When adding a new layer, adapt also the LastLayer enum value in the enum class LayerType below.</div><div class="ttdef"><b>Definition:</b> <a href="_types_8hpp_source.xhtml#l00479">Types.hpp:479</a></div></div>
<div class="ttc" id="aclassarmnn_1_1_i_output_slot_xhtml_a9943775a364fc4ab53b85ac88f311886"><div class="ttname"><a href="classarmnn_1_1_i_output_slot.xhtml#a9943775a364fc4ab53b85ac88f311886">armnn::IOutputSlot::GetTensorInfo</a></div><div class="ttdeci">virtual const TensorInfo &amp; GetTensorInfo() const =0</div></div>
<div class="ttc" id="aclassarmnn_1_1_layer_xhtml_a30a858b2b26d651a066537e499fbf40d"><div class="ttname"><a href="classarmnn_1_1_layer.xhtml#a30a858b2b26d651a066537e499fbf40d">armnn::Layer::PrepInfoAndDesc</a></div><div class="ttdeci">WorkloadInfo PrepInfoAndDesc(QueueDescriptor &amp;descriptor) const</div><div class="ttdoc">Helper function to reduce duplication in *Layer::CreateWorkload.</div><div class="ttdef"><b>Definition:</b> <a href="_layer_8hpp_source.xhtml#l00396">Layer.hpp:396</a></div></div>
<div class="ttc" id="aclassarmnn_1_1_layer_xhtml_a0e36688a43c35668d8db5257274c68fe"><div class="ttname"><a href="classarmnn_1_1_layer.xhtml#a0e36688a43c35668d8db5257274c68fe">armnn::Layer::GetOutputSlot</a></div><div class="ttdeci">const OutputSlot &amp; GetOutputSlot(unsigned int index=0) const override</div><div class="ttdoc">Get the const output slot handle by slot index.</div><div class="ttdef"><b>Definition:</b> <a href="_layer_8hpp_source.xhtml#l00326">Layer.hpp:326</a></div></div>
<div class="ttc" id="astructarmnn_1_1_quantized_lstm_queue_descriptor_xhtml_aab77f54a037658ca9b2bf9cc8a1fadf1"><div class="ttname"><a href="structarmnn_1_1_quantized_lstm_queue_descriptor.xhtml#aab77f54a037658ca9b2bf9cc8a1fadf1">armnn::QuantizedLstmQueueDescriptor::m_InputToForgetWeights</a></div><div class="ttdeci">const ConstTensorHandle * m_InputToForgetWeights</div><div class="ttdef"><b>Definition:</b> <a href="_workload_data_8hpp_source.xhtml#l00629">WorkloadData.hpp:629</a></div></div>
<div class="ttc" id="astructarmnn_1_1_quantized_lstm_parameters_xhtml_a281954ff495d27f7a29e42a98768c670"><div class="ttname"><a href="structarmnn_1_1_quantized_lstm_parameters.xhtml#a281954ff495d27f7a29e42a98768c670">armnn::QuantizedLstmParameters::m_InputToInputWeights</a></div><div class="ttdeci">std::shared_ptr&lt; ConstTensorHandle &gt; m_InputToInputWeights</div><div class="ttdoc">A unique pointer to represent 2D weights tensor with dimensions [outputSize, inputSize] (QAsymm8).</div><div class="ttdef"><b>Definition:</b> <a href="_quantized_lstm_layer_8hpp_source.xhtml#l00017">QuantizedLstmLayer.hpp:17</a></div></div>
<div class="ttc" id="aclassarmnn_1_1_quantized_lstm_layer_xhtml"><div class="ttname"><a href="classarmnn_1_1_quantized_lstm_layer.xhtml">armnn::QuantizedLstmLayer</a></div><div class="ttdoc">This layer represents a QuantizedLstm operation.</div><div class="ttdef"><b>Definition:</b> <a href="_quantized_lstm_layer_8hpp_source.xhtml#l00045">QuantizedLstmLayer.hpp:45</a></div></div>
<div class="ttc" id="astructarmnn_1_1_quantized_lstm_queue_descriptor_xhtml_a841439e3b8dc157a7368b19c9ecb7d03"><div class="ttname"><a href="structarmnn_1_1_quantized_lstm_queue_descriptor.xhtml#a841439e3b8dc157a7368b19c9ecb7d03">armnn::QuantizedLstmQueueDescriptor::m_InputToCellWeights</a></div><div class="ttdeci">const ConstTensorHandle * m_InputToCellWeights</div><div class="ttdef"><b>Definition:</b> <a href="_workload_data_8hpp_source.xhtml#l00630">WorkloadData.hpp:630</a></div></div>
<div class="ttc" id="astructarmnn_1_1_quantized_lstm_parameters_xhtml_ad3f42762262330534a4be0dde29a1318"><div class="ttname"><a href="structarmnn_1_1_quantized_lstm_parameters.xhtml#ad3f42762262330534a4be0dde29a1318">armnn::QuantizedLstmParameters::m_InputToCellWeights</a></div><div class="ttdeci">std::shared_ptr&lt; ConstTensorHandle &gt; m_InputToCellWeights</div><div class="ttdoc">A unique pointer to represent 2D weights tensor with dimensions [outputSize, inputSize] (QAsymm8).</div><div class="ttdef"><b>Definition:</b> <a href="_quantized_lstm_layer_8hpp_source.xhtml#l00021">QuantizedLstmLayer.hpp:21</a></div></div>
<div class="ttc" id="astructarmnn_1_1_quantized_lstm_parameters_xhtml_addad136e04521a1d31cbebf7280c312e"><div class="ttname"><a href="structarmnn_1_1_quantized_lstm_parameters.xhtml#addad136e04521a1d31cbebf7280c312e">armnn::QuantizedLstmParameters::m_RecurrentToOutputWeights</a></div><div class="ttdeci">std::shared_ptr&lt; ConstTensorHandle &gt; m_RecurrentToOutputWeights</div><div class="ttdoc">A unique pointer to represent 2D weights tensor with dimensions [outputSize, outputSize] (QAsymm8).</div><div class="ttdef"><b>Definition:</b> <a href="_quantized_lstm_layer_8hpp_source.xhtml#l00032">QuantizedLstmLayer.hpp:32</a></div></div>
<div class="ttc" id="astructarmnn_1_1_quantized_lstm_queue_descriptor_xhtml_a17ba1c8bcc71a55a95b2a3913f8cb203"><div class="ttname"><a href="structarmnn_1_1_quantized_lstm_queue_descriptor.xhtml#a17ba1c8bcc71a55a95b2a3913f8cb203">armnn::QuantizedLstmQueueDescriptor::m_InputToOutputWeights</a></div><div class="ttdeci">const ConstTensorHandle * m_InputToOutputWeights</div><div class="ttdef"><b>Definition:</b> <a href="_workload_data_8hpp_source.xhtml#l00631">WorkloadData.hpp:631</a></div></div>
<div class="ttc" id="astructarmnn_1_1_quantized_lstm_queue_descriptor_xhtml_a4c27716f61bb68e8ea0bd4e8389ba01a"><div class="ttname"><a href="structarmnn_1_1_quantized_lstm_queue_descriptor.xhtml#a4c27716f61bb68e8ea0bd4e8389ba01a">armnn::QuantizedLstmQueueDescriptor::m_RecurrentToOutputWeights</a></div><div class="ttdeci">const ConstTensorHandle * m_RecurrentToOutputWeights</div><div class="ttdef"><b>Definition:</b> <a href="_workload_data_8hpp_source.xhtml#l00636">WorkloadData.hpp:636</a></div></div>
<div class="ttc" id="aclassarmnn_1_1_tensor_info_xhtml_a8b5d0f8a24e9d9238f412260a552acf8"><div class="ttname"><a href="classarmnn_1_1_tensor_info.xhtml#a8b5d0f8a24e9d9238f412260a552acf8">armnn::TensorInfo::GetShape</a></div><div class="ttdeci">const TensorShape &amp; GetShape() const</div><div class="ttdef"><b>Definition:</b> <a href="_tensor_8hpp_source.xhtml#l00191">Tensor.hpp:191</a></div></div>
<div class="ttc" id="astructarmnn_1_1_quantized_lstm_queue_descriptor_xhtml_a5ff4158b1b363b898d0da04c42d37ce0"><div class="ttname"><a href="structarmnn_1_1_quantized_lstm_queue_descriptor.xhtml#a5ff4158b1b363b898d0da04c42d37ce0">armnn::QuantizedLstmQueueDescriptor::m_OutputGateBias</a></div><div class="ttdeci">const ConstTensorHandle * m_OutputGateBias</div><div class="ttdef"><b>Definition:</b> <a href="_workload_data_8hpp_source.xhtml#l00641">WorkloadData.hpp:641</a></div></div>
<div class="ttc" id="a_assert_8hpp_xhtml_a91c4dfde57907d7698c7531785690a7f"><div class="ttname"><a href="_assert_8hpp.xhtml#a91c4dfde57907d7698c7531785690a7f">ARMNN_ASSERT_MSG</a></div><div class="ttdeci">#define ARMNN_ASSERT_MSG(COND, MSG)</div><div class="ttdef"><b>Definition:</b> <a href="_assert_8hpp_source.xhtml#l00015">Assert.hpp:15</a></div></div>
<div class="ttc" id="astructarmnn_1_1_quantized_lstm_parameters_xhtml_a950c538e326db48f4c26a354c2b982e3"><div class="ttname"><a href="structarmnn_1_1_quantized_lstm_parameters.xhtml#a950c538e326db48f4c26a354c2b982e3">armnn::QuantizedLstmParameters::m_OutputGateBias</a></div><div class="ttdeci">std::shared_ptr&lt; ConstTensorHandle &gt; m_OutputGateBias</div><div class="ttdoc">A unique pointer to represent 1D bias tensor with dimensions [outputSize] (int32).</div><div class="ttdef"><b>Definition:</b> <a href="_quantized_lstm_layer_8hpp_source.xhtml#l00041">QuantizedLstmLayer.hpp:41</a></div></div>
<div class="ttc" id="a_layer_clone_base_8hpp_xhtml"><div class="ttname"><a href="_layer_clone_base_8hpp.xhtml">LayerCloneBase.hpp</a></div></div>
<div class="ttc" id="aclassarmnn_1_1_layer_xhtml_acf8b8e23bf647836592982f97088d375"><div class="ttname"><a href="classarmnn_1_1_layer.xhtml#acf8b8e23bf647836592982f97088d375">armnn::Layer::GetInputSlot</a></div><div class="ttdeci">const InputSlot &amp; GetInputSlot(unsigned int index) const override</div><div class="ttdoc">Get a const input slot handle by slot index.</div><div class="ttdef"><b>Definition:</b> <a href="_layer_8hpp_source.xhtml#l00324">Layer.hpp:324</a></div></div>
<div class="ttc" id="astructarmnn_1_1_quantized_lstm_parameters_xhtml_a608ed1a3d4135921ce33a286a87a072b"><div class="ttname"><a href="structarmnn_1_1_quantized_lstm_parameters.xhtml#a608ed1a3d4135921ce33a286a87a072b">armnn::QuantizedLstmParameters::m_RecurrentToCellWeights</a></div><div class="ttdeci">std::shared_ptr&lt; ConstTensorHandle &gt; m_RecurrentToCellWeights</div><div class="ttdoc">A unique pointer to represent 2D weights tensor with dimensions [outputSize, outputSize] (QAsymm8).</div><div class="ttdef"><b>Definition:</b> <a href="_quantized_lstm_layer_8hpp_source.xhtml#l00030">QuantizedLstmLayer.hpp:30</a></div></div>
<div class="ttc" id="astructarmnn_1_1_base_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_base_descriptor.xhtml">armnn::BaseDescriptor</a></div><div class="ttdoc">Base class for all descriptors.</div><div class="ttdef"><b>Definition:</b> <a href="_descriptors_8hpp_source.xhtml#l00022">Descriptors.hpp:22</a></div></div>
<div class="ttc" id="aclassarmnn_1_1_i_strategy_xhtml_ad4f8c9ff973cf6a603d26b56c5b34967"><div class="ttname"><a href="classarmnn_1_1_i_strategy.xhtml#ad4f8c9ff973cf6a603d26b56c5b34967">armnn::IStrategy::ExecuteStrategy</a></div><div class="ttdeci">virtual void ExecuteStrategy(const IConnectableLayer *layer, const armnn::BaseDescriptor &amp;descriptor, const std::vector&lt; armnn::ConstTensor &gt; &amp;constants, const char *name, const armnn::LayerBindingId id=0)=0</div></div>
<div class="ttc" id="astructarmnn_1_1_quantized_lstm_parameters_xhtml_a1dd41cd674924907643cb088070a65d3"><div class="ttname"><a href="structarmnn_1_1_quantized_lstm_parameters.xhtml#a1dd41cd674924907643cb088070a65d3">armnn::QuantizedLstmParameters::m_RecurrentToForgetWeights</a></div><div class="ttdeci">std::shared_ptr&lt; ConstTensorHandle &gt; m_RecurrentToForgetWeights</div><div class="ttdoc">A unique pointer to represent 2D weights tensor with dimensions [outputSize, outputSize] (QAsymm8).</div><div class="ttdef"><b>Definition:</b> <a href="_quantized_lstm_layer_8hpp_source.xhtml#l00028">QuantizedLstmLayer.hpp:28</a></div></div>
<div class="ttc" id="aclassarmnn_1_1_graph_xhtml"><div class="ttname"><a href="classarmnn_1_1_graph.xhtml">armnn::Graph</a></div><div class="ttdef"><b>Definition:</b> <a href="_graph_8hpp_source.xhtml#l00030">Graph.hpp:30</a></div></div>
<div class="ttc" id="a_assert_8hpp_xhtml_a5698be69cbd5dfe6c28fcd9867e8cbed"><div class="ttname"><a href="_assert_8hpp.xhtml#a5698be69cbd5dfe6c28fcd9867e8cbed">ARMNN_ASSERT</a></div><div class="ttdeci">#define ARMNN_ASSERT(COND)</div><div class="ttdef"><b>Definition:</b> <a href="_assert_8hpp_source.xhtml#l00014">Assert.hpp:14</a></div></div>
<div class="ttc" id="astructarmnn_1_1_quantized_lstm_parameters_xhtml_a3d4f6f42e10ba6f808a5244bb7853e7e"><div class="ttname"><a href="structarmnn_1_1_quantized_lstm_parameters.xhtml#a3d4f6f42e10ba6f808a5244bb7853e7e">armnn::QuantizedLstmParameters::m_InputToOutputWeights</a></div><div class="ttdeci">std::shared_ptr&lt; ConstTensorHandle &gt; m_InputToOutputWeights</div><div class="ttdoc">A unique pointer to represent 2D weights tensor with dimensions [outputSize, inputSize] (QAsymm8).</div><div class="ttdef"><b>Definition:</b> <a href="_quantized_lstm_layer_8hpp_source.xhtml#l00023">QuantizedLstmLayer.hpp:23</a></div></div>
<div class="ttc" id="aclassarmnn_1_1_quantized_lstm_layer_xhtml_a08edea9423b6da5da174ce5269f6e28b"><div class="ttname"><a href="classarmnn_1_1_quantized_lstm_layer.xhtml#a08edea9423b6da5da174ce5269f6e28b">armnn::QuantizedLstmLayer::Clone</a></div><div class="ttdeci">QuantizedLstmLayer * Clone(Graph &amp;graph) const override</div><div class="ttdoc">Creates a dynamically-allocated copy of this layer.</div><div class="ttdef"><b>Definition:</b> <a href="_quantized_lstm_layer_8cpp_source.xhtml#l00047">QuantizedLstmLayer.cpp:47</a></div></div>
<div class="ttc" id="astructarmnn_1_1_quantized_lstm_parameters_xhtml_a21a90800797f1e122bc44d7022001558"><div class="ttname"><a href="structarmnn_1_1_quantized_lstm_parameters.xhtml#a21a90800797f1e122bc44d7022001558">armnn::QuantizedLstmParameters::m_CellBias</a></div><div class="ttdeci">std::shared_ptr&lt; ConstTensorHandle &gt; m_CellBias</div><div class="ttdoc">A unique pointer to represent 1D bias tensor with dimensions [outputSize] (int32).</div><div class="ttdef"><b>Definition:</b> <a href="_quantized_lstm_layer_8hpp_source.xhtml#l00039">QuantizedLstmLayer.hpp:39</a></div></div>
<div class="ttc" id="aclassarmnn_1_1_i_workload_factory_xhtml_a13060ebb89d2c21a7a5d897e99cccf72"><div class="ttname"><a href="classarmnn_1_1_i_workload_factory.xhtml#a13060ebb89d2c21a7a5d897e99cccf72">armnn::IWorkloadFactory::CreateWorkload</a></div><div class="ttdeci">virtual std::unique_ptr&lt; IWorkload &gt; CreateWorkload(LayerType type, const QueueDescriptor &amp;descriptor, const WorkloadInfo &amp;info) const</div><div class="ttdef"><b>Definition:</b> <a href="_workload_factory_8cpp_source.xhtml#l01590">WorkloadFactory.cpp:1590</a></div></div>
<div class="ttc" id="astructarmnn_1_1_quantized_lstm_queue_descriptor_xhtml_ac18c8b8b2039267d8282e91b4162d8aa"><div class="ttname"><a href="structarmnn_1_1_quantized_lstm_queue_descriptor.xhtml#ac18c8b8b2039267d8282e91b4162d8aa">armnn::QuantizedLstmQueueDescriptor::m_RecurrentToCellWeights</a></div><div class="ttdeci">const ConstTensorHandle * m_RecurrentToCellWeights</div><div class="ttdef"><b>Definition:</b> <a href="_workload_data_8hpp_source.xhtml#l00635">WorkloadData.hpp:635</a></div></div>
<div class="ttc" id="aclassarmnn_1_1_quantized_lstm_layer_xhtml_a1e8a4f8777390120259787caa45d743a"><div class="ttname"><a href="classarmnn_1_1_quantized_lstm_layer.xhtml#a1e8a4f8777390120259787caa45d743a">armnn::QuantizedLstmLayer::QuantizedLstmLayer</a></div><div class="ttdeci">QuantizedLstmLayer(const char *name)</div><div class="ttdoc">Constructor to create a QuantizedLstmLayer.</div><div class="ttdef"><b>Definition:</b> <a href="_quantized_lstm_layer_8cpp_source.xhtml#l00017">QuantizedLstmLayer.cpp:17</a></div></div>
<div class="ttc" id="aclassarmnn_1_1_layer_xhtml_a7ddf0cf6f620d59c10e63495ace795d0"><div class="ttname"><a href="classarmnn_1_1_layer.xhtml#a7ddf0cf6f620d59c10e63495ace795d0">armnn::Layer::GetName</a></div><div class="ttdeci">const char * GetName() const override</div><div class="ttdoc">Returns the name of the layer.</div><div class="ttdef"><b>Definition:</b> <a href="_layer_8hpp_source.xhtml#l00319">Layer.hpp:319</a></div></div>
<div class="ttc" id="astructarmnn_1_1_quantized_lstm_queue_descriptor_xhtml_a299587d4f3fca029492700f3e2585bd8"><div class="ttname"><a href="structarmnn_1_1_quantized_lstm_queue_descriptor.xhtml#a299587d4f3fca029492700f3e2585bd8">armnn::QuantizedLstmQueueDescriptor::m_RecurrentToInputWeights</a></div><div class="ttdeci">const ConstTensorHandle * m_RecurrentToInputWeights</div><div class="ttdef"><b>Definition:</b> <a href="_workload_data_8hpp_source.xhtml#l00633">WorkloadData.hpp:633</a></div></div>
<div class="ttc" id="a_types_utils_8hpp_xhtml"><div class="ttname"><a href="_types_utils_8hpp.xhtml">TypesUtils.hpp</a></div></div>
<div class="ttc" id="astructarmnn_1_1_quantized_lstm_queue_descriptor_xhtml_a29fa293fffbf9c6f00cd75db1dc0a52a"><div class="ttname"><a href="structarmnn_1_1_quantized_lstm_queue_descriptor.xhtml#a29fa293fffbf9c6f00cd75db1dc0a52a">armnn::QuantizedLstmQueueDescriptor::m_ForgetGateBias</a></div><div class="ttdeci">const ConstTensorHandle * m_ForgetGateBias</div><div class="ttdef"><b>Definition:</b> <a href="_workload_data_8hpp_source.xhtml#l00639">WorkloadData.hpp:639</a></div></div>
<div class="ttc" id="astructarmnn_1_1_quantized_lstm_queue_descriptor_xhtml_a44eb7524badcca9b2073359e3814c98b"><div class="ttname"><a href="structarmnn_1_1_quantized_lstm_queue_descriptor.xhtml#a44eb7524badcca9b2073359e3814c98b">armnn::QuantizedLstmQueueDescriptor::m_InputGateBias</a></div><div class="ttdeci">const ConstTensorHandle * m_InputGateBias</div><div class="ttdef"><b>Definition:</b> <a href="_workload_data_8hpp_source.xhtml#l00638">WorkloadData.hpp:638</a></div></div>
<div class="ttc" id="aclassarmnn_1_1_i_connectable_layer_xhtml_aba5c20cadbebd2e7ba67e20a47e31472"><div class="ttname"><a href="classarmnn_1_1_i_connectable_layer.xhtml#aba5c20cadbebd2e7ba67e20a47e31472">armnn::IConnectableLayer::ImmutableConstantTensors</a></div><div class="ttdeci">std::vector&lt; std::reference_wrapper&lt; const std::shared_ptr&lt; ConstTensorHandle &gt; &gt;&gt; ImmutableConstantTensors</div><div class="ttdef"><b>Definition:</b> <a href="_i_network_8hpp_source.xhtml#l00129">INetwork.hpp:129</a></div></div>
<div class="ttc" id="astructarmnn_1_1_quantized_lstm_queue_descriptor_xhtml_adf8571dd1867ee91082bd005f94f2610"><div class="ttname"><a href="structarmnn_1_1_quantized_lstm_queue_descriptor.xhtml#adf8571dd1867ee91082bd005f94f2610">armnn::QuantizedLstmQueueDescriptor::m_RecurrentToForgetWeights</a></div><div class="ttdeci">const ConstTensorHandle * m_RecurrentToForgetWeights</div><div class="ttdef"><b>Definition:</b> <a href="_workload_data_8hpp_source.xhtml#l00634">WorkloadData.hpp:634</a></div></div>
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="dir_68267d1309a1af8e8297ef4c3efbcdba.xhtml">src</a></li><li class="navelem"><a class="el" href="dir_e0a84d05c80a2ef4231141dcbbeac5c8.xhtml">armnn</a></li><li class="navelem"><a class="el" href="dir_9da6642ce0fd5a8c83524f1b621275be.xhtml">layers</a></li><li class="navelem"><a class="el" href="_quantized_lstm_layer_8cpp.xhtml">QuantizedLstmLayer.cpp</a></li>
    <li class="footer">Generated on Thu May 18 2023 10:35:40 for ArmNN by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.17 </li>
  </ul>
</div>
</body>
</html>
