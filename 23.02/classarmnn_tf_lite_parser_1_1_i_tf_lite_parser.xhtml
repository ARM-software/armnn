<!-- Copyright (c) 2020 ARM Limited. -->
<!--                                 -->
<!-- SPDX-License-Identifier: MIT    -->
<!--                                 -->
<!-- HTML header for doxygen 1.8.13-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.13"/>
<meta name="robots" content="NOINDEX, NOFOLLOW" />
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>ArmNN: ITfLiteParser Class Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script><script type="text/javascript" src="http://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="stylesheet.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <img alt="ArmNN" src="Arm_NN_horizontal_blue.png" style="max-width: 10rem; margin-top: .5rem; margin-left 10px"/>
  <td style="padding-left: 0.5em;">
   <div id="projectname">
   &#160;<span id="projectnumber">23.02</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.13 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
$(document).ready(function(){initNavTree('classarmnn_tf_lite_parser_1_1_i_tf_lite_parser.xhtml','');});
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="summary">
<a href="#nested-classes">Classes</a> &#124;
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="#pub-static-methods">Static Public Member Functions</a> &#124;
<a href="classarmnn_tf_lite_parser_1_1_i_tf_lite_parser-members.xhtml">List of all members</a>  </div>
  <div class="headertitle">
<div class="title">ITfLiteParser Class Reference</div>  </div>
</div><!--header-->
<div class="contents">

<p><code>#include &lt;<a class="el" href="_i_tf_lite_parser_8hpp_source.xhtml">ITfLiteParser.hpp</a>&gt;</code></p>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="nested-classes"></a>
Classes</h2></td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structarmnn_tf_lite_parser_1_1_i_tf_lite_parser_1_1_tf_lite_parser_options.xhtml">TfLiteParserOptions</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:a6bf5861864c8828e59df24a7868c5439"><td class="memItemLeft" align="right" valign="top"><a class="el" href="namespacearmnn.xhtml#ace74f6f9feb95a964a49d79458232703">armnn::INetworkPtr</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_tf_lite_parser_1_1_i_tf_lite_parser.xhtml#a6bf5861864c8828e59df24a7868c5439">CreateNetworkFromBinaryFile</a> (const char *graphFile)</td></tr>
<tr class="memdesc:a6bf5861864c8828e59df24a7868c5439"><td class="mdescLeft">&#160;</td><td class="mdescRight">Create the network from a flatbuffers binary file on disk.  <a href="#a6bf5861864c8828e59df24a7868c5439">More...</a><br /></td></tr>
<tr class="separator:a6bf5861864c8828e59df24a7868c5439"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aaa88c7afbe8e8f777d05f99a2a540a99"><td class="memItemLeft" align="right" valign="top"><a class="el" href="namespacearmnn.xhtml#ace74f6f9feb95a964a49d79458232703">armnn::INetworkPtr</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_tf_lite_parser_1_1_i_tf_lite_parser.xhtml#aaa88c7afbe8e8f777d05f99a2a540a99">CreateNetworkFromBinary</a> (const std::vector&lt; uint8_t &gt; &amp;binaryContent)</td></tr>
<tr class="memdesc:aaa88c7afbe8e8f777d05f99a2a540a99"><td class="mdescLeft">&#160;</td><td class="mdescRight">Create the network from a flatbuffers binary.  <a href="#aaa88c7afbe8e8f777d05f99a2a540a99">More...</a><br /></td></tr>
<tr class="separator:aaa88c7afbe8e8f777d05f99a2a540a99"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a913d452e7766210b59a69d3c658b2862"><td class="memItemLeft" align="right" valign="top"><a class="el" href="namespacearmnn_tf_lite_parser.xhtml#a9084adbf804022c874039ad40d1939e9">BindingPointInfo</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_tf_lite_parser_1_1_i_tf_lite_parser.xhtml#a913d452e7766210b59a69d3c658b2862">GetNetworkInputBindingInfo</a> (size_t subgraphId, const std::string &amp;name) const</td></tr>
<tr class="memdesc:a913d452e7766210b59a69d3c658b2862"><td class="mdescLeft">&#160;</td><td class="mdescRight">Retrieve binding info (layer id and tensor info) for the network input identified by the given layer name and subgraph id.  <a href="#a913d452e7766210b59a69d3c658b2862">More...</a><br /></td></tr>
<tr class="separator:a913d452e7766210b59a69d3c658b2862"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a59139faede3a07a43c4c8f86bb03dc43"><td class="memItemLeft" align="right" valign="top"><a class="el" href="namespacearmnn_tf_lite_parser.xhtml#a9084adbf804022c874039ad40d1939e9">BindingPointInfo</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_tf_lite_parser_1_1_i_tf_lite_parser.xhtml#a59139faede3a07a43c4c8f86bb03dc43">GetNetworkOutputBindingInfo</a> (size_t subgraphId, const std::string &amp;name) const</td></tr>
<tr class="memdesc:a59139faede3a07a43c4c8f86bb03dc43"><td class="mdescLeft">&#160;</td><td class="mdescRight">Retrieve binding info (layer id and tensor info) for the network output identified by the given layer name and subgraph id.  <a href="#a59139faede3a07a43c4c8f86bb03dc43">More...</a><br /></td></tr>
<tr class="separator:a59139faede3a07a43c4c8f86bb03dc43"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1b7aed8466cc5792966d271a65285d0e"><td class="memItemLeft" align="right" valign="top">size_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_tf_lite_parser_1_1_i_tf_lite_parser.xhtml#a1b7aed8466cc5792966d271a65285d0e">GetSubgraphCount</a> () const</td></tr>
<tr class="memdesc:a1b7aed8466cc5792966d271a65285d0e"><td class="mdescLeft">&#160;</td><td class="mdescRight">Return the number of subgraphs in the parsed model.  <a href="#a1b7aed8466cc5792966d271a65285d0e">More...</a><br /></td></tr>
<tr class="separator:a1b7aed8466cc5792966d271a65285d0e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:afe1ea028d8fcb9942c204d4415ff3319"><td class="memItemLeft" align="right" valign="top">std::vector&lt; std::string &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_tf_lite_parser_1_1_i_tf_lite_parser.xhtml#afe1ea028d8fcb9942c204d4415ff3319">GetSubgraphInputTensorNames</a> (size_t subgraphId) const</td></tr>
<tr class="memdesc:afe1ea028d8fcb9942c204d4415ff3319"><td class="mdescLeft">&#160;</td><td class="mdescRight">Return the input tensor names for a given subgraph.  <a href="#afe1ea028d8fcb9942c204d4415ff3319">More...</a><br /></td></tr>
<tr class="separator:afe1ea028d8fcb9942c204d4415ff3319"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a949070abe70fabe18cc1eb29d5853f47"><td class="memItemLeft" align="right" valign="top">std::vector&lt; std::string &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_tf_lite_parser_1_1_i_tf_lite_parser.xhtml#a949070abe70fabe18cc1eb29d5853f47">GetSubgraphOutputTensorNames</a> (size_t subgraphId) const</td></tr>
<tr class="memdesc:a949070abe70fabe18cc1eb29d5853f47"><td class="mdescLeft">&#160;</td><td class="mdescRight">Return the output tensor names for a given subgraph.  <a href="#a949070abe70fabe18cc1eb29d5853f47">More...</a><br /></td></tr>
<tr class="separator:a949070abe70fabe18cc1eb29d5853f47"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-static-methods"></a>
Static Public Member Functions</h2></td></tr>
<tr class="memitem:acf8cc929eadbabf197b36f7364d3d2cb"><td class="memItemLeft" align="right" valign="top">static <a class="el" href="classarmnn_tf_lite_parser_1_1_i_tf_lite_parser.xhtml">ITfLiteParser</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_tf_lite_parser_1_1_i_tf_lite_parser.xhtml#acf8cc929eadbabf197b36f7364d3d2cb">CreateRaw</a> (const <a class="el" href="classarmnn_1_1_optional.xhtml">armnn::Optional</a>&lt; <a class="el" href="structarmnn_tf_lite_parser_1_1_i_tf_lite_parser_1_1_tf_lite_parser_options.xhtml">TfLiteParserOptions</a> &gt; &amp;options=<a class="el" href="structarmnn_1_1_empty_optional.xhtml">armnn::EmptyOptional</a>())</td></tr>
<tr class="separator:acf8cc929eadbabf197b36f7364d3d2cb"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9932449a89a62cfcfd72a4fedbee1ab7"><td class="memItemLeft" align="right" valign="top">static <a class="el" href="namespacearmnn_tf_lite_parser.xhtml#af69bedce3c37be895f75146016ba8a17">ITfLiteParserPtr</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_tf_lite_parser_1_1_i_tf_lite_parser.xhtml#a9932449a89a62cfcfd72a4fedbee1ab7">Create</a> (const <a class="el" href="classarmnn_1_1_optional.xhtml">armnn::Optional</a>&lt; <a class="el" href="structarmnn_tf_lite_parser_1_1_i_tf_lite_parser_1_1_tf_lite_parser_options.xhtml">TfLiteParserOptions</a> &gt; &amp;options=<a class="el" href="structarmnn_1_1_empty_optional.xhtml">armnn::EmptyOptional</a>())</td></tr>
<tr class="separator:a9932449a89a62cfcfd72a4fedbee1ab7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a29a2a153962a701843d5c8ae953cb032"><td class="memItemLeft" align="right" valign="top">static void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_tf_lite_parser_1_1_i_tf_lite_parser.xhtml#a29a2a153962a701843d5c8ae953cb032">Destroy</a> (<a class="el" href="classarmnn_tf_lite_parser_1_1_i_tf_lite_parser.xhtml">ITfLiteParser</a> *parser)</td></tr>
<tr class="separator:a29a2a153962a701843d5c8ae953cb032"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock">
<p class="definition">Definition at line <a class="el" href="_i_tf_lite_parser_8hpp_source.xhtml#l00026">26</a> of file <a class="el" href="_i_tf_lite_parser_8hpp_source.xhtml">ITfLiteParser.hpp</a>.</p>
</div><h2 class="groupheader">Member Function Documentation</h2>
<a id="a9932449a89a62cfcfd72a4fedbee1ab7"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a9932449a89a62cfcfd72a4fedbee1ab7">&#9670;&nbsp;</a></span>Create()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="namespacearmnn_tf_lite_parser.xhtml#af69bedce3c37be895f75146016ba8a17">ITfLiteParserPtr</a> Create </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_optional.xhtml">armnn::Optional</a>&lt; <a class="el" href="structarmnn_tf_lite_parser_1_1_i_tf_lite_parser_1_1_tf_lite_parser_options.xhtml">TfLiteParserOptions</a> &gt; &amp;&#160;</td>
          <td class="paramname"><em>options</em> = <code><a class="el" href="structarmnn_1_1_empty_optional.xhtml">armnn::EmptyOptional</a>()</code></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_tf_lite_parser_8cpp_source.xhtml#l00064">64</a> of file <a class="el" href="_tf_lite_parser_8cpp_source.xhtml">TfLiteParser.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;{</div><div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="namespacearmnn_tf_lite_parser.xhtml#af69bedce3c37be895f75146016ba8a17">ITfLiteParserPtr</a>(<a class="code" href="classarmnn_tf_lite_parser_1_1_i_tf_lite_parser.xhtml#acf8cc929eadbabf197b36f7364d3d2cb">CreateRaw</a>(options), &amp;<a class="code" href="classarmnn_tf_lite_parser_1_1_i_tf_lite_parser.xhtml#a29a2a153962a701843d5c8ae953cb032">ITfLiteParser::Destroy</a>);</div><div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;}</div><div class="ttc" id="namespacearmnn_tf_lite_parser_xhtml_af69bedce3c37be895f75146016ba8a17"><div class="ttname"><a href="namespacearmnn_tf_lite_parser.xhtml#af69bedce3c37be895f75146016ba8a17">armnnTfLiteParser::ITfLiteParserPtr</a></div><div class="ttdeci">std::unique_ptr&lt; ITfLiteParser, void(*)(ITfLiteParser *parser)&gt; ITfLiteParserPtr</div><div class="ttdef"><b>Definition:</b> <a href="_i_tf_lite_parser_8hpp_source.xhtml#l00024">ITfLiteParser.hpp:24</a></div></div>
<div class="ttc" id="classarmnn_tf_lite_parser_1_1_i_tf_lite_parser_xhtml_a29a2a153962a701843d5c8ae953cb032"><div class="ttname"><a href="classarmnn_tf_lite_parser_1_1_i_tf_lite_parser.xhtml#a29a2a153962a701843d5c8ae953cb032">armnnTfLiteParser::ITfLiteParser::Destroy</a></div><div class="ttdeci">static void Destroy(ITfLiteParser *parser)</div><div class="ttdef"><b>Definition:</b> <a href="_tf_lite_parser_8cpp_source.xhtml#l00069">TfLiteParser.cpp:69</a></div></div>
<div class="ttc" id="classarmnn_tf_lite_parser_1_1_i_tf_lite_parser_xhtml_acf8cc929eadbabf197b36f7364d3d2cb"><div class="ttname"><a href="classarmnn_tf_lite_parser_1_1_i_tf_lite_parser.xhtml#acf8cc929eadbabf197b36f7364d3d2cb">armnnTfLiteParser::ITfLiteParser::CreateRaw</a></div><div class="ttdeci">static ITfLiteParser * CreateRaw(const armnn::Optional&lt; TfLiteParserOptions &gt; &amp;options=armnn::EmptyOptional())</div><div class="ttdef"><b>Definition:</b> <a href="_tf_lite_parser_8cpp_source.xhtml#l00059">TfLiteParser.cpp:59</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="aaa88c7afbe8e8f777d05f99a2a540a99"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aaa88c7afbe8e8f777d05f99a2a540a99">&#9670;&nbsp;</a></span>CreateNetworkFromBinary()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="namespacearmnn.xhtml#ace74f6f9feb95a964a49d79458232703">armnn::INetworkPtr</a> CreateNetworkFromBinary </td>
          <td>(</td>
          <td class="paramtype">const std::vector&lt; uint8_t &gt; &amp;&#160;</td>
          <td class="paramname"><em>binaryContent</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Create the network from a flatbuffers binary. </p>

<p class="definition">Definition at line <a class="el" href="_tf_lite_parser_8cpp_source.xhtml#l00079">79</a> of file <a class="el" href="_tf_lite_parser_8cpp_source.xhtml">TfLiteParser.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;{</div><div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;    <span class="keywordflow">return</span> pTfLiteParserImpl-&gt;CreateNetworkFromBinary(binaryContent);</div><div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;}</div></div><!-- fragment -->
</div>
</div>
<a id="a6bf5861864c8828e59df24a7868c5439"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a6bf5861864c8828e59df24a7868c5439">&#9670;&nbsp;</a></span>CreateNetworkFromBinaryFile()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="namespacearmnn.xhtml#ace74f6f9feb95a964a49d79458232703">armnn::INetworkPtr</a> CreateNetworkFromBinaryFile </td>
          <td>(</td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>graphFile</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Create the network from a flatbuffers binary file on disk. </p>

<p class="definition">Definition at line <a class="el" href="_tf_lite_parser_8cpp_source.xhtml#l00074">74</a> of file <a class="el" href="_tf_lite_parser_8cpp_source.xhtml">TfLiteParser.cpp</a>.</p>

<p class="reference">References <a class="el" href="_tf_lite_parser_8cpp_source.xhtml#l00074">ITfLiteParser::CreateNetworkFromBinaryFile()</a>.</p>

<p class="reference">Referenced by <a class="el" href="_tf_lite_parser_8cpp_source.xhtml#l00074">ITfLiteParser::CreateNetworkFromBinaryFile()</a>.</p>
<div class="fragment"><div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;{</div><div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;    <span class="keywordflow">return</span> pTfLiteParserImpl-&gt;CreateNetworkFromBinaryFile(graphFile);</div><div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;}</div></div><!-- fragment -->
</div>
</div>
<a id="acf8cc929eadbabf197b36f7364d3d2cb"></a>
<h2 class="memtitle"><span class="permalink"><a href="#acf8cc929eadbabf197b36f7364d3d2cb">&#9670;&nbsp;</a></span>CreateRaw()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarmnn_tf_lite_parser_1_1_i_tf_lite_parser.xhtml">ITfLiteParser</a> * CreateRaw </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_optional.xhtml">armnn::Optional</a>&lt; <a class="el" href="structarmnn_tf_lite_parser_1_1_i_tf_lite_parser_1_1_tf_lite_parser_options.xhtml">TfLiteParserOptions</a> &gt; &amp;&#160;</td>
          <td class="paramname"><em>options</em> = <code><a class="el" href="structarmnn_1_1_empty_optional.xhtml">armnn::EmptyOptional</a>()</code></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_tf_lite_parser_8cpp_source.xhtml#l00059">59</a> of file <a class="el" href="_tf_lite_parser_8cpp_source.xhtml">TfLiteParser.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;{</div><div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;    <span class="keywordflow">return</span> <span class="keyword">new</span> ITfLiteParser(options);</div><div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;}</div></div><!-- fragment -->
</div>
</div>
<a id="a29a2a153962a701843d5c8ae953cb032"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a29a2a153962a701843d5c8ae953cb032">&#9670;&nbsp;</a></span>Destroy()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void Destroy </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classarmnn_tf_lite_parser_1_1_i_tf_lite_parser.xhtml">ITfLiteParser</a> *&#160;</td>
          <td class="paramname"><em>parser</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_tf_lite_parser_8cpp_source.xhtml#l00069">69</a> of file <a class="el" href="_tf_lite_parser_8cpp_source.xhtml">TfLiteParser.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;{</div><div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;    <span class="keyword">delete</span> parser;</div><div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;}</div></div><!-- fragment -->
</div>
</div>
<a id="a913d452e7766210b59a69d3c658b2862"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a913d452e7766210b59a69d3c658b2862">&#9670;&nbsp;</a></span>GetNetworkInputBindingInfo()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="namespacearmnn_tf_lite_parser.xhtml#a9084adbf804022c874039ad40d1939e9">BindingPointInfo</a> GetNetworkInputBindingInfo </td>
          <td>(</td>
          <td class="paramtype">size_t&#160;</td>
          <td class="paramname"><em>subgraphId</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const std::string &amp;&#160;</td>
          <td class="paramname"><em>name</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Retrieve binding info (layer id and tensor info) for the network input identified by the given layer name and subgraph id. </p>

<p class="definition">Definition at line <a class="el" href="_tf_lite_parser_8cpp_source.xhtml#l00084">84</a> of file <a class="el" href="_tf_lite_parser_8cpp_source.xhtml">TfLiteParser.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;{</div><div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;    <span class="keywordflow">return</span> pTfLiteParserImpl-&gt;GetNetworkInputBindingInfo(subgraphId, name);</div><div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;}</div></div><!-- fragment -->
</div>
</div>
<a id="a59139faede3a07a43c4c8f86bb03dc43"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a59139faede3a07a43c4c8f86bb03dc43">&#9670;&nbsp;</a></span>GetNetworkOutputBindingInfo()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="namespacearmnn_tf_lite_parser.xhtml#a9084adbf804022c874039ad40d1939e9">BindingPointInfo</a> GetNetworkOutputBindingInfo </td>
          <td>(</td>
          <td class="paramtype">size_t&#160;</td>
          <td class="paramname"><em>subgraphId</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const std::string &amp;&#160;</td>
          <td class="paramname"><em>name</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Retrieve binding info (layer id and tensor info) for the network output identified by the given layer name and subgraph id. </p>

<p class="definition">Definition at line <a class="el" href="_tf_lite_parser_8cpp_source.xhtml#l00090">90</a> of file <a class="el" href="_tf_lite_parser_8cpp_source.xhtml">TfLiteParser.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;{</div><div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;    <span class="keywordflow">return</span> pTfLiteParserImpl-&gt;GetNetworkOutputBindingInfo(subgraphId, name);</div><div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;}</div></div><!-- fragment -->
</div>
</div>
<a id="a1b7aed8466cc5792966d271a65285d0e"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a1b7aed8466cc5792966d271a65285d0e">&#9670;&nbsp;</a></span>GetSubgraphCount()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">size_t GetSubgraphCount </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Return the number of subgraphs in the parsed model. </p>

<p class="definition">Definition at line <a class="el" href="_tf_lite_parser_8cpp_source.xhtml#l00096">96</a> of file <a class="el" href="_tf_lite_parser_8cpp_source.xhtml">TfLiteParser.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;{</div><div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;    <span class="keywordflow">return</span> pTfLiteParserImpl-&gt;GetSubgraphCount();</div><div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;}</div></div><!-- fragment -->
</div>
</div>
<a id="afe1ea028d8fcb9942c204d4415ff3319"></a>
<h2 class="memtitle"><span class="permalink"><a href="#afe1ea028d8fcb9942c204d4415ff3319">&#9670;&nbsp;</a></span>GetSubgraphInputTensorNames()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">std::vector&lt; std::string &gt; GetSubgraphInputTensorNames </td>
          <td>(</td>
          <td class="paramtype">size_t&#160;</td>
          <td class="paramname"><em>subgraphId</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Return the input tensor names for a given subgraph. </p>

<p class="definition">Definition at line <a class="el" href="_tf_lite_parser_8cpp_source.xhtml#l00101">101</a> of file <a class="el" href="_tf_lite_parser_8cpp_source.xhtml">TfLiteParser.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;{</div><div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;    <span class="keywordflow">return</span> pTfLiteParserImpl-&gt;GetSubgraphInputTensorNames(subgraphId);</div><div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;}</div></div><!-- fragment -->
</div>
</div>
<a id="a949070abe70fabe18cc1eb29d5853f47"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a949070abe70fabe18cc1eb29d5853f47">&#9670;&nbsp;</a></span>GetSubgraphOutputTensorNames()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">std::vector&lt; std::string &gt; GetSubgraphOutputTensorNames </td>
          <td>(</td>
          <td class="paramtype">size_t&#160;</td>
          <td class="paramname"><em>subgraphId</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Return the output tensor names for a given subgraph. </p>

<p class="definition">Definition at line <a class="el" href="_tf_lite_parser_8cpp_source.xhtml#l00106">106</a> of file <a class="el" href="_tf_lite_parser_8cpp_source.xhtml">TfLiteParser.cpp</a>.</p>

<p class="reference">References <a class="el" href="_exceptions_8hpp_source.xhtml#l00037">CheckLocation::FileLine()</a>, and <a class="el" href="_exceptions_8hpp_source.xhtml#l00016">CheckLocation::m_Function</a>.</p>
<div class="fragment"><div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;{</div><div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;    <span class="keywordflow">return</span> pTfLiteParserImpl-&gt;GetSubgraphOutputTensorNames(subgraphId);</div><div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;}</div></div><!-- fragment -->
</div>
</div>
<hr/>The documentation for this class was generated from the following files:<ul>
<li>include/armnnTfLiteParser/<a class="el" href="_i_tf_lite_parser_8hpp_source.xhtml">ITfLiteParser.hpp</a></li>
<li>src/armnnTfLiteParser/<a class="el" href="_tf_lite_parser_8cpp_source.xhtml">TfLiteParser.cpp</a></li>
</ul>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="namespacearmnn_tf_lite_parser.xhtml">armnnTfLiteParser</a></li><li class="navelem"><a class="el" href="classarmnn_tf_lite_parser_1_1_i_tf_lite_parser.xhtml">ITfLiteParser</a></li>
    <li class="footer">Generated on Fri Feb 24 2023 10:24:34 for ArmNN by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.13 </li>
  </ul>
</div>
</body>
</html>
