<!-- Copyright (c) 2020 ARM Limited. -->
<!--                                 -->
<!-- SPDX-License-Identifier: MIT    -->
<!--                                 -->
<!-- HTML header for doxygen 1.8.13-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.13"/>
<meta name="robots" content="NOINDEX, NOFOLLOW" />
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>ArmNN: TensorHandleFactoryRegistry Class Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script><script type="text/javascript" src="http://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="stylesheet.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <img alt="ArmNN" src="Arm_NN_horizontal_blue.png" style="max-width: 10rem; margin-top: .5rem; margin-left 10px"/>
  <td style="padding-left: 0.5em;">
   <div id="projectname">
   &#160;<span id="projectnumber">22.02</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.13 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
$(document).ready(function(){initNavTree('classarmnn_1_1_tensor_handle_factory_registry.xhtml','');});
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="summary">
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="classarmnn_1_1_tensor_handle_factory_registry-members.xhtml">List of all members</a>  </div>
  <div class="headertitle">
<div class="title">TensorHandleFactoryRegistry Class Reference</div>  </div>
</div><!--header-->
<div class="contents">

<p><code>#include &lt;<a class="el" href="_tensor_handle_factory_registry_8hpp_source.xhtml">TensorHandleFactoryRegistry.hpp</a>&gt;</code></p>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:aaab866fac81161a61959c56d5b6b2a46"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_tensor_handle_factory_registry.xhtml#aaab866fac81161a61959c56d5b6b2a46">TensorHandleFactoryRegistry</a> ()=default</td></tr>
<tr class="separator:aaab866fac81161a61959c56d5b6b2a46"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a66513e8bf5c9e30be799966b26a998ae"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_tensor_handle_factory_registry.xhtml#a66513e8bf5c9e30be799966b26a998ae">TensorHandleFactoryRegistry</a> (const <a class="el" href="classarmnn_1_1_tensor_handle_factory_registry.xhtml">TensorHandleFactoryRegistry</a> &amp;other)=delete</td></tr>
<tr class="separator:a66513e8bf5c9e30be799966b26a998ae"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a317ac56d401ef5697f1fb41652932621"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_tensor_handle_factory_registry.xhtml#a317ac56d401ef5697f1fb41652932621">TensorHandleFactoryRegistry</a> (<a class="el" href="classarmnn_1_1_tensor_handle_factory_registry.xhtml">TensorHandleFactoryRegistry</a> &amp;&amp;other)=delete</td></tr>
<tr class="separator:a317ac56d401ef5697f1fb41652932621"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a05f82bd846630bb3aa8afe22ef6f15fc"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_tensor_handle_factory_registry.xhtml#a05f82bd846630bb3aa8afe22ef6f15fc">RegisterFactory</a> (std::unique_ptr&lt; <a class="el" href="classarmnn_1_1_i_tensor_handle_factory.xhtml">ITensorHandleFactory</a> &gt; allocator)</td></tr>
<tr class="memdesc:a05f82bd846630bb3aa8afe22ef6f15fc"><td class="mdescLeft">&#160;</td><td class="mdescRight">Register a TensorHandleFactory and transfer ownership.  <a href="#a05f82bd846630bb3aa8afe22ef6f15fc">More...</a><br /></td></tr>
<tr class="separator:a05f82bd846630bb3aa8afe22ef6f15fc"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a958ab0c60b6bfdfba5cc075211edec37"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_tensor_handle_factory_registry.xhtml#a958ab0c60b6bfdfba5cc075211edec37">RegisterMemoryManager</a> (std::shared_ptr&lt; <a class="el" href="classarmnn_1_1_i_memory_manager.xhtml">IMemoryManager</a> &gt; memoryManger)</td></tr>
<tr class="memdesc:a958ab0c60b6bfdfba5cc075211edec37"><td class="mdescLeft">&#160;</td><td class="mdescRight">Register a memory manager with shared ownership.  <a href="#a958ab0c60b6bfdfba5cc075211edec37">More...</a><br /></td></tr>
<tr class="separator:a958ab0c60b6bfdfba5cc075211edec37"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae5ecc42140a12c855554a4a621fc8456"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classarmnn_1_1_i_tensor_handle_factory.xhtml">ITensorHandleFactory</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_tensor_handle_factory_registry.xhtml#ae5ecc42140a12c855554a4a621fc8456">GetFactory</a> (<a class="el" href="classarmnn_1_1_i_tensor_handle_factory.xhtml#a32f4aa6a7089d877af08928139c2c277">ITensorHandleFactory::FactoryId</a> id) const</td></tr>
<tr class="memdesc:ae5ecc42140a12c855554a4a621fc8456"><td class="mdescLeft">&#160;</td><td class="mdescRight">Find a TensorHandleFactory by Id Returns nullptr if not found.  <a href="#ae5ecc42140a12c855554a4a621fc8456">More...</a><br /></td></tr>
<tr class="separator:ae5ecc42140a12c855554a4a621fc8456"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a08d93f2a6cfe6746b978d0f0b9ab7622"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classarmnn_1_1_i_tensor_handle_factory.xhtml">ITensorHandleFactory</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_tensor_handle_factory_registry.xhtml#a08d93f2a6cfe6746b978d0f0b9ab7622">GetFactory</a> (<a class="el" href="classarmnn_1_1_i_tensor_handle_factory.xhtml#a32f4aa6a7089d877af08928139c2c277">ITensorHandleFactory::FactoryId</a> id, <a class="el" href="namespacearmnn.xhtml#a14fcd7f88d11cea0a018269dca5f9277">MemorySource</a> memSource) const</td></tr>
<tr class="memdesc:a08d93f2a6cfe6746b978d0f0b9ab7622"><td class="mdescLeft">&#160;</td><td class="mdescRight">Overload of above allowing specification of Memory Source.  <a href="#a08d93f2a6cfe6746b978d0f0b9ab7622">More...</a><br /></td></tr>
<tr class="separator:a08d93f2a6cfe6746b978d0f0b9ab7622"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:afae069d084e8541c8970d17d26011ac6"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_tensor_handle_factory_registry.xhtml#afae069d084e8541c8970d17d26011ac6">RegisterCopyAndImportFactoryPair</a> (<a class="el" href="classarmnn_1_1_i_tensor_handle_factory.xhtml#a32f4aa6a7089d877af08928139c2c277">ITensorHandleFactory::FactoryId</a> copyFactoryId, <a class="el" href="classarmnn_1_1_i_tensor_handle_factory.xhtml#a32f4aa6a7089d877af08928139c2c277">ITensorHandleFactory::FactoryId</a> importFactoryId)</td></tr>
<tr class="memdesc:afae069d084e8541c8970d17d26011ac6"><td class="mdescLeft">&#160;</td><td class="mdescRight">Register a pair of TensorHandleFactory Id for Memory Copy and TensorHandleFactory Id for Memory Import.  <a href="#afae069d084e8541c8970d17d26011ac6">More...</a><br /></td></tr>
<tr class="separator:afae069d084e8541c8970d17d26011ac6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aeef3a1178e2dfe2ca2461d89cd47fff6"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classarmnn_1_1_i_tensor_handle_factory.xhtml#a32f4aa6a7089d877af08928139c2c277">ITensorHandleFactory::FactoryId</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_tensor_handle_factory_registry.xhtml#aeef3a1178e2dfe2ca2461d89cd47fff6">GetMatchingImportFactoryId</a> (<a class="el" href="classarmnn_1_1_i_tensor_handle_factory.xhtml#a32f4aa6a7089d877af08928139c2c277">ITensorHandleFactory::FactoryId</a> copyFactoryId)</td></tr>
<tr class="memdesc:aeef3a1178e2dfe2ca2461d89cd47fff6"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get a matching TensorHandleFatory Id for Memory Import given TensorHandleFactory Id for Memory Copy.  <a href="#aeef3a1178e2dfe2ca2461d89cd47fff6">More...</a><br /></td></tr>
<tr class="separator:aeef3a1178e2dfe2ca2461d89cd47fff6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a46d1634d1bfbf6920adc98569ba10a94"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_tensor_handle_factory_registry.xhtml#a46d1634d1bfbf6920adc98569ba10a94">AquireMemory</a> ()</td></tr>
<tr class="memdesc:a46d1634d1bfbf6920adc98569ba10a94"><td class="mdescLeft">&#160;</td><td class="mdescRight">Aquire memory required for inference.  <a href="#a46d1634d1bfbf6920adc98569ba10a94">More...</a><br /></td></tr>
<tr class="separator:a46d1634d1bfbf6920adc98569ba10a94"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a69ca23561f4f8a887f19c6580cbd34c8"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_tensor_handle_factory_registry.xhtml#a69ca23561f4f8a887f19c6580cbd34c8">ReleaseMemory</a> ()</td></tr>
<tr class="memdesc:a69ca23561f4f8a887f19c6580cbd34c8"><td class="mdescLeft">&#160;</td><td class="mdescRight">Release memory required for inference.  <a href="#a69ca23561f4f8a887f19c6580cbd34c8">More...</a><br /></td></tr>
<tr class="separator:a69ca23561f4f8a887f19c6580cbd34c8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7d5faf6ceef6e7246b3b4976869b7a18"><td class="memItemLeft" align="right" valign="top">std::vector&lt; std::shared_ptr&lt; <a class="el" href="classarmnn_1_1_i_memory_manager.xhtml">IMemoryManager</a> &gt; &gt; &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_tensor_handle_factory_registry.xhtml#a7d5faf6ceef6e7246b3b4976869b7a18">GetMemoryManagers</a> ()</td></tr>
<tr class="separator:a7d5faf6ceef6e7246b3b4976869b7a18"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock">
<p class="definition">Definition at line <a class="el" href="_tensor_handle_factory_registry_8hpp_source.xhtml#l00022">22</a> of file <a class="el" href="_tensor_handle_factory_registry_8hpp_source.xhtml">TensorHandleFactoryRegistry.hpp</a>.</p>
</div><h2 class="groupheader">Constructor &amp; Destructor Documentation</h2>
<a id="aaab866fac81161a61959c56d5b6b2a46"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aaab866fac81161a61959c56d5b6b2a46">&#9670;&nbsp;</a></span>TensorHandleFactoryRegistry() <span class="overload">[1/3]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarmnn_1_1_tensor_handle_factory_registry.xhtml">TensorHandleFactoryRegistry</a> </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">default</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a66513e8bf5c9e30be799966b26a998ae"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a66513e8bf5c9e30be799966b26a998ae">&#9670;&nbsp;</a></span>TensorHandleFactoryRegistry() <span class="overload">[2/3]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarmnn_1_1_tensor_handle_factory_registry.xhtml">TensorHandleFactoryRegistry</a> </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_tensor_handle_factory_registry.xhtml">TensorHandleFactoryRegistry</a> &amp;&#160;</td>
          <td class="paramname"><em>other</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">delete</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a317ac56d401ef5697f1fb41652932621"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a317ac56d401ef5697f1fb41652932621">&#9670;&nbsp;</a></span>TensorHandleFactoryRegistry() <span class="overload">[3/3]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarmnn_1_1_tensor_handle_factory_registry.xhtml">TensorHandleFactoryRegistry</a> </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classarmnn_1_1_tensor_handle_factory_registry.xhtml">TensorHandleFactoryRegistry</a> &amp;&amp;&#160;</td>
          <td class="paramname"><em>other</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">delete</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<h2 class="groupheader">Member Function Documentation</h2>
<a id="a46d1634d1bfbf6920adc98569ba10a94"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a46d1634d1bfbf6920adc98569ba10a94">&#9670;&nbsp;</a></span>AquireMemory()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void AquireMemory </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Aquire memory required for inference. </p>

<p class="definition">Definition at line <a class="el" href="_tensor_handle_factory_registry_8cpp_source.xhtml#l00078">78</a> of file <a class="el" href="_tensor_handle_factory_registry_8cpp_source.xhtml">TensorHandleFactoryRegistry.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;{</div><div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;    <span class="keywordflow">for</span> (<span class="keyword">auto</span>&amp; mgr : m_MemoryManagers)</div><div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;    {</div><div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;        mgr-&gt;Acquire();</div><div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;    }</div><div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;}</div></div><!-- fragment -->
</div>
</div>
<a id="ae5ecc42140a12c855554a4a621fc8456"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ae5ecc42140a12c855554a4a621fc8456">&#9670;&nbsp;</a></span>GetFactory() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarmnn_1_1_i_tensor_handle_factory.xhtml">ITensorHandleFactory</a> * GetFactory </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classarmnn_1_1_i_tensor_handle_factory.xhtml#a32f4aa6a7089d877af08928139c2c277">ITensorHandleFactory::FactoryId</a>&#160;</td>
          <td class="paramname"><em>id</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Find a TensorHandleFactory by Id Returns nullptr if not found. </p>

<p class="definition">Definition at line <a class="el" href="_tensor_handle_factory_registry_8cpp_source.xhtml#l00039">39</a> of file <a class="el" href="_tensor_handle_factory_registry_8cpp_source.xhtml">TensorHandleFactoryRegistry.cpp</a>.</p>

<p class="reference">Referenced by <a class="el" href="_graph_8cpp_source.xhtml#l00301">Graph::AddCompatibilityLayers()</a>, <a class="el" href="_network_8cpp_source.xhtml#l01522">armnn::CalculateEdgeStrategy()</a>, <a class="el" href="_network_8cpp_source.xhtml#l01372">armnn::CalculateSlotOption()</a>, <a class="el" href="_network_8cpp_source.xhtml#l01277">armnn::CalculateSlotOptionForInput()</a>, <a class="el" href="_splitter_layer_8cpp_source.xhtml#l00178">SplitterLayer::CreateTensorHandles()</a>, <a class="el" href="_concat_layer_8cpp_source.xhtml#l00180">ConcatLayer::CreateTensorHandles()</a>, <a class="el" href="_layer_8cpp_source.xhtml#l00253">Layer::CreateTensorHandles()</a>, <a class="el" href="_splitter_layer_8cpp_source.xhtml#l00021">SplitterLayer::CreateWorkload()</a>, <a class="el" href="_concat_layer_8cpp_source.xhtml#l00023">ConcatLayer::CreateWorkload()</a>, and <a class="el" href="_network_8cpp_source.xhtml#l01257">armnn::RequiresCopy()</a>.</p>
<div class="fragment"><div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;{</div><div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;    <span class="keywordflow">for</span> (<span class="keyword">auto</span>&amp; factory : m_Factories)</div><div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;    {</div><div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;        <span class="keywordflow">if</span> (factory-&gt;GetId() == id)</div><div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;        {</div><div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;            <span class="keywordflow">return</span> factory.get();</div><div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;        }</div><div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;    }</div><div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;</div><div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;    <span class="keywordflow">return</span> <span class="keyword">nullptr</span>;</div><div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;}</div></div><!-- fragment -->
</div>
</div>
<a id="a08d93f2a6cfe6746b978d0f0b9ab7622"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a08d93f2a6cfe6746b978d0f0b9ab7622">&#9670;&nbsp;</a></span>GetFactory() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarmnn_1_1_i_tensor_handle_factory.xhtml">ITensorHandleFactory</a> * GetFactory </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classarmnn_1_1_i_tensor_handle_factory.xhtml#a32f4aa6a7089d877af08928139c2c277">ITensorHandleFactory::FactoryId</a>&#160;</td>
          <td class="paramname"><em>id</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="namespacearmnn.xhtml#a14fcd7f88d11cea0a018269dca5f9277">MemorySource</a>&#160;</td>
          <td class="paramname"><em>memSource</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Overload of above allowing specification of Memory Source. </p>

<p class="definition">Definition at line <a class="el" href="_tensor_handle_factory_registry_8cpp_source.xhtml#l00052">52</a> of file <a class="el" href="_tensor_handle_factory_registry_8cpp_source.xhtml">TensorHandleFactoryRegistry.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;{</div><div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;    <span class="keywordflow">for</span> (<span class="keyword">auto</span>&amp; factory : m_Factories)</div><div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;    {</div><div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;        <span class="keywordflow">if</span> (factory-&gt;GetId() == <span class="keywordtype">id</span> &amp;&amp; factory-&gt;GetImportFlags() == <span class="keyword">static_cast&lt;</span><a class="code" href="namespacearmnn.xhtml#a5b05f3b7208ec7cea3338e30057c0bac">MemorySourceFlags</a><span class="keyword">&gt;</span>(memSource))</div><div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;        {</div><div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;            <span class="keywordflow">return</span> factory.get();</div><div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;        }</div><div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;    }</div><div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;</div><div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;    <span class="keywordflow">return</span> <span class="keyword">nullptr</span>;</div><div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;}</div><div class="ttc" id="namespacearmnn_xhtml_a5b05f3b7208ec7cea3338e30057c0bac"><div class="ttname"><a href="namespacearmnn.xhtml#a5b05f3b7208ec7cea3338e30057c0bac">armnn::MemorySourceFlags</a></div><div class="ttdeci">unsigned int MemorySourceFlags</div><div class="ttdef"><b>Definition:</b> <a href="_memory_sources_8hpp_source.xhtml#l00015">MemorySources.hpp:15</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="aeef3a1178e2dfe2ca2461d89cd47fff6"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aeef3a1178e2dfe2ca2461d89cd47fff6">&#9670;&nbsp;</a></span>GetMatchingImportFactoryId()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarmnn_1_1_i_tensor_handle_factory.xhtml#a32f4aa6a7089d877af08928139c2c277">ITensorHandleFactory::FactoryId</a> GetMatchingImportFactoryId </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classarmnn_1_1_i_tensor_handle_factory.xhtml#a32f4aa6a7089d877af08928139c2c277">ITensorHandleFactory::FactoryId</a>&#160;</td>
          <td class="paramname"><em>copyFactoryId</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Get a matching TensorHandleFatory Id for Memory Import given TensorHandleFactory Id for Memory Copy. </p>

<p class="definition">Definition at line <a class="el" href="_tensor_handle_factory_registry_8cpp_source.xhtml#l00072">72</a> of file <a class="el" href="_tensor_handle_factory_registry_8cpp_source.xhtml">TensorHandleFactoryRegistry.cpp</a>.</p>

<p class="reference">Referenced by <a class="el" href="_tensor_handle_strategy_test_8cpp_source.xhtml#l00274">TEST_SUITE()</a>.</p>
<div class="fragment"><div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;{</div><div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;    <span class="keywordflow">return</span> m_FactoryMappings[copyFactoryId];</div><div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;}</div></div><!-- fragment -->
</div>
</div>
<a id="a7d5faf6ceef6e7246b3b4976869b7a18"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a7d5faf6ceef6e7246b3b4976869b7a18">&#9670;&nbsp;</a></span>GetMemoryManagers()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">std::vector&lt;std::shared_ptr&lt;<a class="el" href="classarmnn_1_1_i_memory_manager.xhtml">IMemoryManager</a>&gt; &gt;&amp; GetMemoryManagers </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_tensor_handle_factory_registry_8hpp_source.xhtml#l00057">57</a> of file <a class="el" href="_tensor_handle_factory_registry_8hpp_source.xhtml">TensorHandleFactoryRegistry.hpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;    {</div><div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;        <span class="keywordflow">return</span> m_MemoryManagers;</div><div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;    }</div></div><!-- fragment -->
</div>
</div>
<a id="afae069d084e8541c8970d17d26011ac6"></a>
<h2 class="memtitle"><span class="permalink"><a href="#afae069d084e8541c8970d17d26011ac6">&#9670;&nbsp;</a></span>RegisterCopyAndImportFactoryPair()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void RegisterCopyAndImportFactoryPair </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classarmnn_1_1_i_tensor_handle_factory.xhtml#a32f4aa6a7089d877af08928139c2c277">ITensorHandleFactory::FactoryId</a>&#160;</td>
          <td class="paramname"><em>copyFactoryId</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="classarmnn_1_1_i_tensor_handle_factory.xhtml#a32f4aa6a7089d877af08928139c2c277">ITensorHandleFactory::FactoryId</a>&#160;</td>
          <td class="paramname"><em>importFactoryId</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Register a pair of TensorHandleFactory Id for Memory Copy and TensorHandleFactory Id for Memory Import. </p>

<p class="definition">Definition at line <a class="el" href="_tensor_handle_factory_registry_8cpp_source.xhtml#l00066">66</a> of file <a class="el" href="_tensor_handle_factory_registry_8cpp_source.xhtml">TensorHandleFactoryRegistry.cpp</a>.</p>

<p class="reference">Referenced by <a class="el" href="_neon_backend_8cpp_source.xhtml#l00070">NeonBackend::CreateWorkloadFactory()</a>, <a class="el" href="_ref_backend_8cpp_source.xhtml#l00035">RefBackend::CreateWorkloadFactory()</a>, <a class="el" href="_cl_backend_8cpp_source.xhtml#l00074">ClBackend::CreateWorkloadFactory()</a>, <a class="el" href="_ref_backend_8cpp_source.xhtml#l00087">RefBackend::RegisterTensorHandleFactories()</a>, <a class="el" href="_neon_backend_8cpp_source.xhtml#l00438">NeonBackend::RegisterTensorHandleFactories()</a>, <a class="el" href="_cl_backend_8cpp_source.xhtml#l00176">ClBackend::RegisterTensorHandleFactories()</a>, and <a class="el" href="_tensor_handle_strategy_test_8cpp_source.xhtml#l00274">TEST_SUITE()</a>.</p>
<div class="fragment"><div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;{</div><div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;    m_FactoryMappings[copyFactoryId] = importFactoryId;</div><div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;}</div></div><!-- fragment -->
</div>
</div>
<a id="a05f82bd846630bb3aa8afe22ef6f15fc"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a05f82bd846630bb3aa8afe22ef6f15fc">&#9670;&nbsp;</a></span>RegisterFactory()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void RegisterFactory </td>
          <td>(</td>
          <td class="paramtype">std::unique_ptr&lt; <a class="el" href="classarmnn_1_1_i_tensor_handle_factory.xhtml">ITensorHandleFactory</a> &gt;&#160;</td>
          <td class="paramname"><em>allocator</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Register a TensorHandleFactory and transfer ownership. </p>

<p class="definition">Definition at line <a class="el" href="_tensor_handle_factory_registry_8cpp_source.xhtml#l00012">12</a> of file <a class="el" href="_tensor_handle_factory_registry_8cpp_source.xhtml">TensorHandleFactoryRegistry.cpp</a>.</p>

<p class="reference">Referenced by <a class="el" href="_mock_import_backend_8cpp_source.xhtml#l00055">MockImportBackend::CreateWorkloadFactory()</a>, <a class="el" href="_neon_backend_8cpp_source.xhtml#l00070">NeonBackend::CreateWorkloadFactory()</a>, <a class="el" href="_ref_backend_8cpp_source.xhtml#l00035">RefBackend::CreateWorkloadFactory()</a>, <a class="el" href="_cl_backend_8cpp_source.xhtml#l00074">ClBackend::CreateWorkloadFactory()</a>, <a class="el" href="_mock_import_backend_8cpp_source.xhtml#l00102">MockImportBackend::RegisterTensorHandleFactories()</a>, <a class="el" href="_ref_backend_8cpp_source.xhtml#l00087">RefBackend::RegisterTensorHandleFactories()</a>, <a class="el" href="_neon_backend_8cpp_source.xhtml#l00438">NeonBackend::RegisterTensorHandleFactories()</a>, <a class="el" href="_cl_backend_8cpp_source.xhtml#l00176">ClBackend::RegisterTensorHandleFactories()</a>, and <a class="el" href="_sample_dynamic_backend_8cpp_source.xhtml#l00018">sdb::SampleDynamicBackendId()</a>.</p>
<div class="fragment"><div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;{</div><div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;    <span class="keywordflow">if</span> (!newFactory)</div><div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;    {</div><div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;        <span class="keywordflow">return</span>;</div><div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;    }</div><div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;</div><div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;    <a class="code" href="classarmnn_1_1_i_tensor_handle_factory.xhtml#a32f4aa6a7089d877af08928139c2c277">ITensorHandleFactory::FactoryId</a> <span class="keywordtype">id</span> = newFactory-&gt;GetId();</div><div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;</div><div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;    <span class="comment">// Don&#39;t register duplicates</span></div><div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;    <span class="keywordflow">for</span> (<span class="keyword">auto</span>&amp; registeredFactory : m_Factories)</div><div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;    {</div><div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;        <span class="keywordflow">if</span> (<span class="keywordtype">id</span> == registeredFactory-&gt;GetId())</div><div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;        {</div><div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;            <span class="keywordflow">return</span>;</div><div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;        }</div><div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;    }</div><div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;</div><div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;    <span class="comment">// Take ownership of the new allocator</span></div><div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;    m_Factories.push_back(std::move(newFactory));</div><div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;}</div><div class="ttc" id="classarmnn_1_1_i_tensor_handle_factory_xhtml_a32f4aa6a7089d877af08928139c2c277"><div class="ttname"><a href="classarmnn_1_1_i_tensor_handle_factory.xhtml#a32f4aa6a7089d877af08928139c2c277">armnn::ITensorHandleFactory::FactoryId</a></div><div class="ttdeci">std::string FactoryId</div><div class="ttdef"><b>Definition:</b> <a href="include_2armnn_2backends_2_i_tensor_handle_factory_8hpp_source.xhtml#l00045">ITensorHandleFactory.hpp:45</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="a958ab0c60b6bfdfba5cc075211edec37"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a958ab0c60b6bfdfba5cc075211edec37">&#9670;&nbsp;</a></span>RegisterMemoryManager()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void RegisterMemoryManager </td>
          <td>(</td>
          <td class="paramtype">std::shared_ptr&lt; <a class="el" href="classarmnn_1_1_i_memory_manager.xhtml">IMemoryManager</a> &gt;&#160;</td>
          <td class="paramname"><em>memoryManger</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Register a memory manager with shared ownership. </p>

<p class="definition">Definition at line <a class="el" href="_tensor_handle_factory_registry_8cpp_source.xhtml#l00034">34</a> of file <a class="el" href="_tensor_handle_factory_registry_8cpp_source.xhtml">TensorHandleFactoryRegistry.cpp</a>.</p>

<p class="reference">Referenced by <a class="el" href="_mock_import_backend_8cpp_source.xhtml#l00055">MockImportBackend::CreateWorkloadFactory()</a>, <a class="el" href="_neon_backend_8cpp_source.xhtml#l00070">NeonBackend::CreateWorkloadFactory()</a>, <a class="el" href="_ref_backend_8cpp_source.xhtml#l00035">RefBackend::CreateWorkloadFactory()</a>, <a class="el" href="_cl_backend_8cpp_source.xhtml#l00074">ClBackend::CreateWorkloadFactory()</a>, <a class="el" href="_mock_import_backend_8cpp_source.xhtml#l00102">MockImportBackend::RegisterTensorHandleFactories()</a>, <a class="el" href="_ref_backend_8cpp_source.xhtml#l00087">RefBackend::RegisterTensorHandleFactories()</a>, <a class="el" href="_neon_backend_8cpp_source.xhtml#l00438">NeonBackend::RegisterTensorHandleFactories()</a>, <a class="el" href="_cl_backend_8cpp_source.xhtml#l00176">ClBackend::RegisterTensorHandleFactories()</a>, and <a class="el" href="_sample_dynamic_backend_8cpp_source.xhtml#l00018">sdb::SampleDynamicBackendId()</a>.</p>
<div class="fragment"><div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;{</div><div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;    m_MemoryManagers.push_back(memoryManger);</div><div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;}</div></div><!-- fragment -->
</div>
</div>
<a id="a69ca23561f4f8a887f19c6580cbd34c8"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a69ca23561f4f8a887f19c6580cbd34c8">&#9670;&nbsp;</a></span>ReleaseMemory()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void ReleaseMemory </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Release memory required for inference. </p>

<p class="definition">Definition at line <a class="el" href="_tensor_handle_factory_registry_8cpp_source.xhtml#l00086">86</a> of file <a class="el" href="_tensor_handle_factory_registry_8cpp_source.xhtml">TensorHandleFactoryRegistry.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;{</div><div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;    <span class="keywordflow">for</span> (<span class="keyword">auto</span>&amp; mgr : m_MemoryManagers)</div><div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;    {</div><div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;        mgr-&gt;Release();</div><div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;    }</div><div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;}</div></div><!-- fragment -->
</div>
</div>
<hr/>The documentation for this class was generated from the following files:<ul>
<li>src/backends/backendsCommon/<a class="el" href="_tensor_handle_factory_registry_8hpp_source.xhtml">TensorHandleFactoryRegistry.hpp</a></li>
<li>src/backends/backendsCommon/<a class="el" href="_tensor_handle_factory_registry_8cpp_source.xhtml">TensorHandleFactoryRegistry.cpp</a></li>
</ul>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="namespacearmnn.xhtml">armnn</a></li><li class="navelem"><a class="el" href="classarmnn_1_1_tensor_handle_factory_registry.xhtml">TensorHandleFactoryRegistry</a></li>
    <li class="footer">Generated on Tue Feb 22 2022 11:39:51 for ArmNN by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.13 </li>
  </ul>
</div>
</body>
</html>
