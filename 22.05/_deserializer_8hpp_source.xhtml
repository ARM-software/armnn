<!-- Copyright (c) 2020 ARM Limited. -->
<!--                                 -->
<!-- SPDX-License-Identifier: MIT    -->
<!--                                 -->
<!-- HTML header for doxygen 1.8.13-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.13"/>
<meta name="robots" content="NOINDEX, NOFOLLOW" />
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>ArmNN: src/armnnDeserializer/Deserializer.hpp Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script><script type="text/javascript" src="http://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="stylesheet.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <img alt="ArmNN" src="Arm_NN_horizontal_blue.png" style="max-width: 10rem; margin-top: .5rem; margin-left 10px"/>
  <td style="padding-left: 0.5em;">
   <div id="projectname">
   &#160;<span id="projectnumber">22.05</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.13 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
$(document).ready(function(){initNavTree('_deserializer_8hpp_source.xhtml','');});
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="headertitle">
<div class="title">Deserializer.hpp</div>  </div>
</div><!--header-->
<div class="contents">
<a href="_deserializer_8hpp.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="comment">//</span></div><div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="comment">// Copyright Â© 2017 Arm Ltd and Contributors. All rights reserved.</span></div><div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="comment">// SPDX-License-Identifier: MIT</span></div><div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="comment">//</span></div><div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;</div><div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="preprocessor">#pragma once</span></div><div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;</div><div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="preprocessor">#include &lt;<a class="code" href="_i_network_8hpp.xhtml">armnn/INetwork.hpp</a>&gt;</span></div><div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="preprocessor">#include &lt;<a class="code" href="_i_deserializer_8hpp.xhtml">armnnDeserializer/IDeserializer.hpp</a>&gt;</span></div><div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="preprocessor">#include &lt;<a class="code" href="_armnn_schema__generated_8h.xhtml">ArmnnSchema_generated.h</a>&gt;</span></div><div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;</div><div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;<span class="preprocessor">#include &lt;unordered_map&gt;</span></div><div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;</div><div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;<span class="keyword">namespace </span><a class="code" href="namespacearmnn_deserializer.xhtml">armnnDeserializer</a></div><div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;{</div><div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;</div><div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;<span class="comment">// Shorthands for deserializer types</span></div><div class="line"><a name="l00018"></a><span class="lineno"><a class="line" href="namespacearmnn_deserializer.xhtml#a68b76ee033fdd629404369171c3d4f90">   18</a></span>&#160;<span class="keyword">using</span> <a class="code" href="namespacearmnn_deserializer.xhtml#a68b76ee033fdd629404369171c3d4f90">ConstTensorRawPtr</a> = <span class="keyword">const</span> armnnSerializer::ConstTensor *;</div><div class="line"><a name="l00019"></a><span class="lineno"><a class="line" href="namespacearmnn_deserializer.xhtml#a38c1f8ba8e51364802669c968cf98ff5">   19</a></span>&#160;<span class="keyword">using</span> <a class="code" href="namespacearmnn_deserializer.xhtml#a38c1f8ba8e51364802669c968cf98ff5">GraphPtr</a> = <span class="keyword">const</span> armnnSerializer::SerializedGraph *;</div><div class="line"><a name="l00020"></a><span class="lineno"><a class="line" href="namespacearmnn_deserializer.xhtml#a80888061963ddd18e87105807a035d9a">   20</a></span>&#160;<span class="keyword">using</span> <a class="code" href="namespacearmnn_deserializer.xhtml#a80888061963ddd18e87105807a035d9a">TensorRawPtr</a> = <span class="keyword">const</span> armnnSerializer::TensorInfo *;</div><div class="line"><a name="l00021"></a><span class="lineno"><a class="line" href="namespacearmnn_deserializer.xhtml#a7e75f47f676327bce37149932aa4a011">   21</a></span>&#160;<span class="keyword">using</span> <a class="code" href="namespacearmnn_deserializer.xhtml#a7e75f47f676327bce37149932aa4a011">Pooling2dDescriptor</a> = <span class="keyword">const</span> <a class="code" href="namespacearmnn_deserializer.xhtml#a7e75f47f676327bce37149932aa4a011">armnnSerializer::Pooling2dDescriptor</a> *;</div><div class="line"><a name="l00022"></a><span class="lineno"><a class="line" href="namespacearmnn_deserializer.xhtml#a6713b8a83104db317823b5367b195d2e">   22</a></span>&#160;<span class="keyword">using</span> <a class="code" href="namespacearmnn_deserializer.xhtml#a6713b8a83104db317823b5367b195d2e">Pooling3dDescriptor</a> = <span class="keyword">const</span> <a class="code" href="namespacearmnn_deserializer.xhtml#a6713b8a83104db317823b5367b195d2e">armnnSerializer::Pooling3dDescriptor</a> *;</div><div class="line"><a name="l00023"></a><span class="lineno"><a class="line" href="namespacearmnn_deserializer.xhtml#a2a282cf18fcfe848b47e946327ca1048">   23</a></span>&#160;<span class="keyword">using</span> <a class="code" href="namespacearmnn_deserializer.xhtml#a2a282cf18fcfe848b47e946327ca1048">NormalizationDescriptorPtr</a> = <span class="keyword">const</span> armnnSerializer::NormalizationDescriptor *;</div><div class="line"><a name="l00024"></a><span class="lineno"><a class="line" href="namespacearmnn_deserializer.xhtml#a15397ee26bc4b7d3a459b05e457be428">   24</a></span>&#160;<span class="keyword">using</span> <a class="code" href="namespacearmnn_deserializer.xhtml#a15397ee26bc4b7d3a459b05e457be428">LstmDescriptorPtr</a> = <span class="keyword">const</span> armnnSerializer::LstmDescriptor *;</div><div class="line"><a name="l00025"></a><span class="lineno"><a class="line" href="namespacearmnn_deserializer.xhtml#a93460fcf78d1b2dcab72dd8378739145">   25</a></span>&#160;<span class="keyword">using</span> <a class="code" href="namespacearmnn_deserializer.xhtml#a93460fcf78d1b2dcab72dd8378739145">LstmInputParamsPtr</a> = <span class="keyword">const</span> armnnSerializer::LstmInputParams *;</div><div class="line"><a name="l00026"></a><span class="lineno"><a class="line" href="namespacearmnn_deserializer.xhtml#a5cd994198e775b8e919853fd0da5b9c1">   26</a></span>&#160;<span class="keyword">using</span> <a class="code" href="namespacearmnn_deserializer.xhtml#a5cd994198e775b8e919853fd0da5b9c1">QLstmDescriptorPtr</a> = <span class="keyword">const</span> armnnSerializer::QLstmDescriptor *;</div><div class="line"><a name="l00027"></a><span class="lineno"><a class="line" href="namespacearmnn_deserializer.xhtml#a7acf3a0a92158bf8a2df8ab5467ad6f4">   27</a></span>&#160;<span class="keyword">using</span> <a class="code" href="namespacearmnn_deserializer.xhtml#a7acf3a0a92158bf8a2df8ab5467ad6f4">QunatizedLstmInputParamsPtr</a> = <span class="keyword">const</span> armnnSerializer::QuantizedLstmInputParams *;</div><div class="line"><a name="l00028"></a><span class="lineno"><a class="line" href="namespacearmnn_deserializer.xhtml#abd8bee7fb9b86485a60bc7ee05114270">   28</a></span>&#160;<span class="keyword">using</span> <a class="code" href="namespacearmnn_deserializer.xhtml#abd8bee7fb9b86485a60bc7ee05114270">TensorRawPtrVector</a> = std::vector&lt;TensorRawPtr&gt;;</div><div class="line"><a name="l00029"></a><span class="lineno"><a class="line" href="namespacearmnn_deserializer.xhtml#a39be8e36d57d85162d1d72c320bc22f6">   29</a></span>&#160;<span class="keyword">using</span> <a class="code" href="namespacearmnn_deserializer.xhtml#a39be8e36d57d85162d1d72c320bc22f6">LayerRawPtr</a> = <span class="keyword">const</span> armnnSerializer::LayerBase *;</div><div class="line"><a name="l00030"></a><span class="lineno"><a class="line" href="namespacearmnn_deserializer.xhtml#a91ade61b5704e4f2c38c263c2be148ef">   30</a></span>&#160;<span class="keyword">using</span> <a class="code" href="namespacearmnn_deserializer.xhtml#a91ade61b5704e4f2c38c263c2be148ef">LayerBaseRawPtr</a> = <span class="keyword">const</span> armnnSerializer::LayerBase *;</div><div class="line"><a name="l00031"></a><span class="lineno"><a class="line" href="namespacearmnn_deserializer.xhtml#aaabcc180b1c18918e92459fc282848c1">   31</a></span>&#160;<span class="keyword">using</span> <a class="code" href="namespacearmnn_deserializer.xhtml#aaabcc180b1c18918e92459fc282848c1">LayerBaseRawPtrVector</a> = std::vector&lt;LayerBaseRawPtr&gt;;</div><div class="line"><a name="l00032"></a><span class="lineno"><a class="line" href="namespacearmnn_deserializer.xhtml#a9eb5db921d6fa5015a57916a5d0c7cd9">   32</a></span>&#160;<span class="keyword">using</span> <a class="code" href="namespacearmnn_deserializer.xhtml#a9eb5db921d6fa5015a57916a5d0c7cd9">UnidirectionalSequenceLstmDescriptorPtr</a> = <span class="keyword">const</span> <a class="code" href="namespacearmnn.xhtml#ae6c5f1b51bd32133c4dcc632045d6b58">armnnSerializer::UnidirectionalSequenceLstmDescriptor</a> *;</div><div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;</div><div class="line"><a name="l00034"></a><span class="lineno"><a class="line" href="classarmnn_deserializer_1_1_i_deserializer_1_1_deserializer_impl.xhtml">   34</a></span>&#160;<span class="keyword">class </span><a class="code" href="classarmnn_deserializer_1_1_i_deserializer_1_1_deserializer_impl.xhtml">IDeserializer::DeserializerImpl</a></div><div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;{</div><div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;<span class="keyword">public</span>:</div><div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;<span class="comment">    /// Create an input network from binary file contents</span></div><div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;<span class="comment"></span>    <a class="code" href="namespacearmnn.xhtml#ace74f6f9feb95a964a49d79458232703">armnn::INetworkPtr</a> <a class="code" href="classarmnn_deserializer_1_1_i_deserializer_1_1_deserializer_impl.xhtml#a32a96909bc8a8ee9076bd4d5c1028301">CreateNetworkFromBinary</a>(<span class="keyword">const</span> std::vector&lt;uint8_t&gt;&amp; binaryContent);</div><div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;<span class="comment">    /// Create an input network from a binary input stream</span></div><div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;<span class="comment"></span>    <a class="code" href="namespacearmnn.xhtml#ace74f6f9feb95a964a49d79458232703">armnn::INetworkPtr</a> <a class="code" href="classarmnn_deserializer_1_1_i_deserializer_1_1_deserializer_impl.xhtml#a32a96909bc8a8ee9076bd4d5c1028301">CreateNetworkFromBinary</a>(std::istream&amp; binaryContent);</div><div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;<span class="comment">    /// Retrieve binding info (layer id and tensor info) for the network input identified by the given layer name</span></div><div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;<span class="comment"></span>    <a class="code" href="structarmnn_deserializer_1_1_binding_point_info.xhtml">BindingPointInfo</a> <a class="code" href="classarmnn_deserializer_1_1_i_deserializer_1_1_deserializer_impl.xhtml#a5de68e32eabd643f55a35f288ba10294">GetNetworkInputBindingInfo</a>(<span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> layerId, <span class="keyword">const</span> std::string&amp; name) <span class="keyword">const</span>;</div><div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;<span class="comment">    /// Retrieve binding info (layer id and tensor info) for the network output identified by the given layer name</span></div><div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;<span class="comment"></span>    <a class="code" href="structarmnn_deserializer_1_1_binding_point_info.xhtml">BindingPointInfo</a> <a class="code" href="classarmnn_deserializer_1_1_i_deserializer_1_1_deserializer_impl.xhtml#a2f66de823cd61765a40407fee754655e">GetNetworkOutputBindingInfo</a>(<span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> layerId, <span class="keyword">const</span> std::string&amp; name) <span class="keyword">const</span>;</div><div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;</div><div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;    <a class="code" href="classarmnn_deserializer_1_1_i_deserializer_1_1_deserializer_impl.xhtml#abfdc037ebcc11de0e1432ba4d3d98fe7">DeserializerImpl</a>();</div><div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;    <a class="code" href="classarmnn_deserializer_1_1_i_deserializer_1_1_deserializer_impl.xhtml#a28e2ce091ba1ac8242f17134c662ea0f">~DeserializerImpl</a>() = <span class="keywordflow">default</span>;</div><div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;</div><div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;    <span class="comment">// No copying allowed until it is wanted and properly implemented</span></div><div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;    <a class="code" href="classarmnn_deserializer_1_1_i_deserializer_1_1_deserializer_impl.xhtml#abfdc037ebcc11de0e1432ba4d3d98fe7">DeserializerImpl</a>(<span class="keyword">const</span> <a class="code" href="classarmnn_deserializer_1_1_i_deserializer_1_1_deserializer_impl.xhtml">DeserializerImpl</a>&amp;) = <span class="keyword">delete</span>;</div><div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;    <a class="code" href="classarmnn_deserializer_1_1_i_deserializer_1_1_deserializer_impl.xhtml">DeserializerImpl</a>&amp; <a class="code" href="classarmnn_deserializer_1_1_i_deserializer_1_1_deserializer_impl.xhtml#abe99e44e1f642428be714ebac948915e">operator=</a>(<span class="keyword">const</span> <a class="code" href="classarmnn_deserializer_1_1_i_deserializer_1_1_deserializer_impl.xhtml">DeserializerImpl</a>&amp;) = <span class="keyword">delete</span>;</div><div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;</div><div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;    <span class="comment">// testable helpers</span></div><div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;    <span class="keyword">static</span> <a class="code" href="namespacearmnn_deserializer.xhtml#a38c1f8ba8e51364802669c968cf98ff5">GraphPtr</a> <a class="code" href="classarmnn_deserializer_1_1_i_deserializer_1_1_deserializer_impl.xhtml#a0bab2006e8fafc4a7fd02efa536f2828">LoadGraphFromBinary</a>(<span class="keyword">const</span> uint8_t* binaryContent, <span class="keywordtype">size_t</span> len);</div><div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;    <span class="keyword">static</span> <a class="code" href="namespacearmnn_deserializer.xhtml#abd8bee7fb9b86485a60bc7ee05114270">TensorRawPtrVector</a> <a class="code" href="classarmnn_deserializer_1_1_i_deserializer_1_1_deserializer_impl.xhtml#ac337f5478049cba1da222da655be49cc">GetInputs</a>(<span class="keyword">const</span> <a class="code" href="namespacearmnn_deserializer.xhtml#a38c1f8ba8e51364802669c968cf98ff5">GraphPtr</a>&amp; graph, <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> layerIndex);</div><div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;    <span class="keyword">static</span> <a class="code" href="namespacearmnn_deserializer.xhtml#abd8bee7fb9b86485a60bc7ee05114270">TensorRawPtrVector</a> <a class="code" href="classarmnn_deserializer_1_1_i_deserializer_1_1_deserializer_impl.xhtml#a9069127d4430d97fe0f2c53fb2c32ab9">GetOutputs</a>(<span class="keyword">const</span> <a class="code" href="namespacearmnn_deserializer.xhtml#a38c1f8ba8e51364802669c968cf98ff5">GraphPtr</a>&amp; graph, <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> layerIndex);</div><div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;    <span class="keyword">static</span> <a class="code" href="namespacearmnn_deserializer.xhtml#a91ade61b5704e4f2c38c263c2be148ef">LayerBaseRawPtr</a> <a class="code" href="classarmnn_deserializer_1_1_i_deserializer_1_1_deserializer_impl.xhtml#ab3dff510bec873d3e4ffe5cdfa71f1cd">GetBaseLayer</a>(<span class="keyword">const</span> <a class="code" href="namespacearmnn_deserializer.xhtml#a38c1f8ba8e51364802669c968cf98ff5">GraphPtr</a>&amp; graphPtr, <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> layerIndex);</div><div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;    <span class="keyword">static</span> int32_t <a class="code" href="classarmnn_deserializer_1_1_i_deserializer_1_1_deserializer_impl.xhtml#afcc87bf0e20779861dd5d01a4bedcda9">GetBindingLayerInfo</a>(<span class="keyword">const</span> <a class="code" href="namespacearmnn_deserializer.xhtml#a38c1f8ba8e51364802669c968cf98ff5">GraphPtr</a>&amp; graphPtr, <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> layerIndex);</div><div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;    <span class="keyword">static</span> std::string <a class="code" href="classarmnn_deserializer_1_1_i_deserializer_1_1_deserializer_impl.xhtml#af2e5b4595b6abc056779ecd12bd271c2">GetLayerName</a>(<span class="keyword">const</span> <a class="code" href="namespacearmnn_deserializer.xhtml#a38c1f8ba8e51364802669c968cf98ff5">GraphPtr</a>&amp; graph, <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> index);</div><div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;    <span class="keyword">static</span> <a class="code" href="structarmnn_1_1_pooling2d_descriptor.xhtml">armnn::Pooling2dDescriptor</a> <a class="code" href="classarmnn_deserializer_1_1_i_deserializer_1_1_deserializer_impl.xhtml#ac17b9b154461bfa49ff7ade08f3c4bdf">GetPooling2dDescriptor</a>(<a class="code" href="namespacearmnn_deserializer.xhtml#a7e75f47f676327bce37149932aa4a011">Pooling2dDescriptor</a> pooling2dDescriptor,</div><div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;                                                           <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> layerIndex);</div><div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;    <span class="keyword">static</span> <a class="code" href="structarmnn_1_1_pooling3d_descriptor.xhtml">armnn::Pooling3dDescriptor</a> <a class="code" href="classarmnn_deserializer_1_1_i_deserializer_1_1_deserializer_impl.xhtml#a1467999b659959577bb2efc8fc62e15a">GetPooling3dDescriptor</a>(<a class="code" href="namespacearmnn_deserializer.xhtml#a6713b8a83104db317823b5367b195d2e">Pooling3dDescriptor</a> pooling3dDescriptor,</div><div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;                                                           <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> layerIndex);</div><div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;    <span class="keyword">static</span> <a class="code" href="structarmnn_1_1_normalization_descriptor.xhtml">armnn::NormalizationDescriptor</a> <a class="code" href="classarmnn_deserializer_1_1_i_deserializer_1_1_deserializer_impl.xhtml#a920251d49a8f32085d458ba23f776800">GetNormalizationDescriptor</a>(</div><div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;        <a class="code" href="namespacearmnn_deserializer.xhtml#a2a282cf18fcfe848b47e946327ca1048">NormalizationDescriptorPtr</a> normalizationDescriptor, <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> layerIndex);</div><div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;    <span class="keyword">static</span> <a class="code" href="structarmnn_1_1_lstm_descriptor.xhtml">armnn::LstmDescriptor</a> <a class="code" href="classarmnn_deserializer_1_1_i_deserializer_1_1_deserializer_impl.xhtml#af7bb02c61c6a5663121da024b7e042e8">GetLstmDescriptor</a>(<a class="code" href="namespacearmnn_deserializer.xhtml#a15397ee26bc4b7d3a459b05e457be428">LstmDescriptorPtr</a> lstmDescriptor);</div><div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;    <span class="keyword">static</span> <a class="code" href="structarmnn_1_1_lstm_input_params.xhtml">armnn::LstmInputParams</a> <a class="code" href="classarmnn_deserializer_1_1_i_deserializer_1_1_deserializer_impl.xhtml#a327a399d46f8216c9f4c1eea5f18a542">GetLstmInputParams</a>(<a class="code" href="namespacearmnn_deserializer.xhtml#a15397ee26bc4b7d3a459b05e457be428">LstmDescriptorPtr</a> lstmDescriptor,</div><div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;                                                     <a class="code" href="namespacearmnn_deserializer.xhtml#a93460fcf78d1b2dcab72dd8378739145">LstmInputParamsPtr</a> lstmInputParams);</div><div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;    <span class="keyword">static</span> <a class="code" href="structarmnn_1_1_q_lstm_descriptor.xhtml">armnn::QLstmDescriptor</a> <a class="code" href="classarmnn_deserializer_1_1_i_deserializer_1_1_deserializer_impl.xhtml#a57e32d26ac8c87b118e77da920481123">GetQLstmDescriptor</a>(<a class="code" href="namespacearmnn_deserializer.xhtml#a5cd994198e775b8e919853fd0da5b9c1">QLstmDescriptorPtr</a> qLstmDescriptorPtr);</div><div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;    <span class="keyword">static</span> <a class="code" href="structarmnn_1_1_lstm_descriptor.xhtml">armnn::UnidirectionalSequenceLstmDescriptor</a> <a class="code" href="classarmnn_deserializer_1_1_i_deserializer_1_1_deserializer_impl.xhtml#ad04b4361ec1ded6b9334dae64c7c4579">GetUnidirectionalSequenceLstmDescriptor</a>(</div><div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;        <a class="code" href="namespacearmnn_deserializer.xhtml#a9eb5db921d6fa5015a57916a5d0c7cd9">UnidirectionalSequenceLstmDescriptorPtr</a> descriptor);</div><div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;    <span class="keyword">static</span> <a class="code" href="classarmnn_1_1_tensor_info.xhtml">armnn::TensorInfo</a> <a class="code" href="classarmnn_deserializer_1_1_i_deserializer_1_1_deserializer_impl.xhtml#a8752c2b994619ae67201a297c2c76be2">OutputShapeOfReshape</a>(<span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_info.xhtml">armnn::TensorInfo</a> &amp; inputTensorInfo,</div><div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;                                                  <span class="keyword">const</span> std::vector&lt;uint32_t&gt; &amp; targetDimsIn);</div><div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;</div><div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;<span class="keyword">private</span>:<span class="comment"></span></div><div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;<span class="comment">    /// Create the network from an already loaded flatbuffers graph</span></div><div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;<span class="comment"></span>    <a class="code" href="namespacearmnn.xhtml#ace74f6f9feb95a964a49d79458232703">armnn::INetworkPtr</a> CreateNetworkFromGraph(<a class="code" href="namespacearmnn_deserializer.xhtml#a38c1f8ba8e51364802669c968cf98ff5">GraphPtr</a> graph);</div><div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;</div><div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;    <span class="comment">// signature for the parser functions</span></div><div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;    <span class="keyword">using</span> LayerParsingFunction = void(<a class="code" href="classarmnn_deserializer_1_1_i_deserializer_1_1_deserializer_impl.xhtml">DeserializerImpl</a>::*)(<a class="code" href="namespacearmnn_deserializer.xhtml#a38c1f8ba8e51364802669c968cf98ff5">GraphPtr</a> graph, <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> layerIndex);</div><div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;</div><div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;    <span class="keywordtype">void</span> ParseUnsupportedLayer(<a class="code" href="namespacearmnn_deserializer.xhtml#a38c1f8ba8e51364802669c968cf98ff5">GraphPtr</a> graph, <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> layerIndex);</div><div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;    <span class="keywordtype">void</span> ParseAbs(<a class="code" href="namespacearmnn_deserializer.xhtml#a38c1f8ba8e51364802669c968cf98ff5">GraphPtr</a> graph, <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> layerIndex);</div><div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;    <span class="keywordtype">void</span> ParseActivation(<a class="code" href="namespacearmnn_deserializer.xhtml#a38c1f8ba8e51364802669c968cf98ff5">GraphPtr</a> graph, <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> layerIndex);</div><div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;    <span class="keywordtype">void</span> ParseAdd(<a class="code" href="namespacearmnn_deserializer.xhtml#a38c1f8ba8e51364802669c968cf98ff5">GraphPtr</a> graph, <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> layerIndex);</div><div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;    <span class="keywordtype">void</span> ParseArgMinMax(<a class="code" href="namespacearmnn_deserializer.xhtml#a38c1f8ba8e51364802669c968cf98ff5">GraphPtr</a> graph, <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> layerIndex);</div><div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;    <span class="keywordtype">void</span> ParseBatchToSpaceNd(<a class="code" href="namespacearmnn_deserializer.xhtml#a38c1f8ba8e51364802669c968cf98ff5">GraphPtr</a> graph, <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> layerIndex);</div><div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;    <span class="keywordtype">void</span> ParseBatchNormalization(<a class="code" href="namespacearmnn_deserializer.xhtml#a38c1f8ba8e51364802669c968cf98ff5">GraphPtr</a> graph, <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> layerIndex);</div><div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;    <span class="keywordtype">void</span> ParseCast(<a class="code" href="namespacearmnn_deserializer.xhtml#a38c1f8ba8e51364802669c968cf98ff5">GraphPtr</a> graph, <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> layerIndex);</div><div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;    <span class="keywordtype">void</span> ParseChannelShuffle(<a class="code" href="namespacearmnn_deserializer.xhtml#a38c1f8ba8e51364802669c968cf98ff5">GraphPtr</a> graph, <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> layerIndex);</div><div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;    <span class="keywordtype">void</span> ParseComparison(<a class="code" href="namespacearmnn_deserializer.xhtml#a38c1f8ba8e51364802669c968cf98ff5">GraphPtr</a> graph, <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> layerIndex);</div><div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;    <span class="keywordtype">void</span> ParseConcat(<a class="code" href="namespacearmnn_deserializer.xhtml#a38c1f8ba8e51364802669c968cf98ff5">GraphPtr</a> graph, <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> layerIndex);</div><div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;    <span class="keywordtype">void</span> ParseConstant(<a class="code" href="namespacearmnn_deserializer.xhtml#a38c1f8ba8e51364802669c968cf98ff5">GraphPtr</a> graph, <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> layerIndex);</div><div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;    <span class="keywordtype">void</span> ParseConvolution2d(<a class="code" href="namespacearmnn_deserializer.xhtml#a38c1f8ba8e51364802669c968cf98ff5">GraphPtr</a> graph, <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> layerIndex);</div><div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;    <span class="keywordtype">void</span> ParseConvolution3d(<a class="code" href="namespacearmnn_deserializer.xhtml#a38c1f8ba8e51364802669c968cf98ff5">GraphPtr</a> graph, <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> layerIndex);</div><div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;    <span class="keywordtype">void</span> ParseDepthToSpace(<a class="code" href="namespacearmnn_deserializer.xhtml#a38c1f8ba8e51364802669c968cf98ff5">GraphPtr</a> graph, <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> layerIndex);</div><div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;    <span class="keywordtype">void</span> ParseDepthwiseConvolution2d(<a class="code" href="namespacearmnn_deserializer.xhtml#a38c1f8ba8e51364802669c968cf98ff5">GraphPtr</a> graph, <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> layerIndex);</div><div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;    <span class="keywordtype">void</span> ParseDequantize(<a class="code" href="namespacearmnn_deserializer.xhtml#a38c1f8ba8e51364802669c968cf98ff5">GraphPtr</a> graph, <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> layerIndex);</div><div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;    <span class="keywordtype">void</span> ParseDetectionPostProcess(<a class="code" href="namespacearmnn_deserializer.xhtml#a38c1f8ba8e51364802669c968cf98ff5">GraphPtr</a> graph, <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> layerIndex);</div><div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;    <span class="keywordtype">void</span> ParseDivision(<a class="code" href="namespacearmnn_deserializer.xhtml#a38c1f8ba8e51364802669c968cf98ff5">GraphPtr</a> graph, <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> layerIndex);</div><div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;    <span class="keywordtype">void</span> ParseElementwiseUnary(<a class="code" href="namespacearmnn_deserializer.xhtml#a38c1f8ba8e51364802669c968cf98ff5">GraphPtr</a> graph, <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> layerIndex);</div><div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;    <span class="keywordtype">void</span> ParseEqual(<a class="code" href="namespacearmnn_deserializer.xhtml#a38c1f8ba8e51364802669c968cf98ff5">GraphPtr</a> graph, <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> layerIndex);</div><div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;    <span class="keywordtype">void</span> ParseFill(<a class="code" href="namespacearmnn_deserializer.xhtml#a38c1f8ba8e51364802669c968cf98ff5">GraphPtr</a> graph, <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> layerIndex);</div><div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;    <span class="keywordtype">void</span> ParseFloor(<a class="code" href="namespacearmnn_deserializer.xhtml#a38c1f8ba8e51364802669c968cf98ff5">GraphPtr</a> graph, <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> layerIndex);</div><div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;    <span class="keywordtype">void</span> ParseFullyConnected(<a class="code" href="namespacearmnn_deserializer.xhtml#a38c1f8ba8e51364802669c968cf98ff5">GraphPtr</a> graph, <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> layerIndex);</div><div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;    <span class="keywordtype">void</span> ParseGather(<a class="code" href="namespacearmnn_deserializer.xhtml#a38c1f8ba8e51364802669c968cf98ff5">GraphPtr</a> graph, <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> layerIndex);</div><div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;    <span class="keywordtype">void</span> ParseGatherNd(<a class="code" href="namespacearmnn_deserializer.xhtml#a38c1f8ba8e51364802669c968cf98ff5">GraphPtr</a> graph, <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> layerIndex);</div><div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;    <span class="keywordtype">void</span> ParseGreater(<a class="code" href="namespacearmnn_deserializer.xhtml#a38c1f8ba8e51364802669c968cf98ff5">GraphPtr</a> graph, <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> layerIndex);</div><div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;    <span class="keywordtype">void</span> ParseInstanceNormalization(<a class="code" href="namespacearmnn_deserializer.xhtml#a38c1f8ba8e51364802669c968cf98ff5">GraphPtr</a> graph, <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> layerIndex);</div><div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;    <span class="keywordtype">void</span> ParseL2Normalization(<a class="code" href="namespacearmnn_deserializer.xhtml#a38c1f8ba8e51364802669c968cf98ff5">GraphPtr</a> graph, <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> layerIndex);</div><div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;    <span class="keywordtype">void</span> ParseLogicalBinary(<a class="code" href="namespacearmnn_deserializer.xhtml#a38c1f8ba8e51364802669c968cf98ff5">GraphPtr</a> graph, <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> layerIndex);</div><div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;    <span class="keywordtype">void</span> ParseLogSoftmax(<a class="code" href="namespacearmnn_deserializer.xhtml#a38c1f8ba8e51364802669c968cf98ff5">GraphPtr</a> graph, <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> layerIndex);</div><div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;    <span class="keywordtype">void</span> ParseMaximum(<a class="code" href="namespacearmnn_deserializer.xhtml#a38c1f8ba8e51364802669c968cf98ff5">GraphPtr</a> graph, <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> layerIndex);</div><div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;    <span class="keywordtype">void</span> ParseMean(<a class="code" href="namespacearmnn_deserializer.xhtml#a38c1f8ba8e51364802669c968cf98ff5">GraphPtr</a> graph, <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> layerIndex);</div><div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;    <span class="keywordtype">void</span> ParseMinimum(<a class="code" href="namespacearmnn_deserializer.xhtml#a38c1f8ba8e51364802669c968cf98ff5">GraphPtr</a> graph, <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> layerIndex);</div><div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;    <span class="keywordtype">void</span> ParseMerge(<a class="code" href="namespacearmnn_deserializer.xhtml#a38c1f8ba8e51364802669c968cf98ff5">GraphPtr</a> graph, <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> layerIndex);</div><div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;    <span class="keywordtype">void</span> ParseMultiplication(<a class="code" href="namespacearmnn_deserializer.xhtml#a38c1f8ba8e51364802669c968cf98ff5">GraphPtr</a> graph, <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> layerIndex);</div><div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;    <span class="keywordtype">void</span> ParseNormalization(<a class="code" href="namespacearmnn_deserializer.xhtml#a38c1f8ba8e51364802669c968cf98ff5">GraphPtr</a> graph, <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> layerIndex);</div><div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;    <span class="keywordtype">void</span> ParseLstm(<a class="code" href="namespacearmnn_deserializer.xhtml#a38c1f8ba8e51364802669c968cf98ff5">GraphPtr</a> graph, <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> layerIndex);</div><div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;    <span class="keywordtype">void</span> ParseQuantizedLstm(<a class="code" href="namespacearmnn_deserializer.xhtml#a38c1f8ba8e51364802669c968cf98ff5">GraphPtr</a> graph, <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> layerIndex);</div><div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;    <span class="keywordtype">void</span> ParsePad(<a class="code" href="namespacearmnn_deserializer.xhtml#a38c1f8ba8e51364802669c968cf98ff5">GraphPtr</a> graph, <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> layerIndex);</div><div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;    <span class="keywordtype">void</span> ParsePermute(<a class="code" href="namespacearmnn_deserializer.xhtml#a38c1f8ba8e51364802669c968cf98ff5">GraphPtr</a> graph, <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> layerIndex);</div><div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;    <span class="keywordtype">void</span> ParsePooling2d(<a class="code" href="namespacearmnn_deserializer.xhtml#a38c1f8ba8e51364802669c968cf98ff5">GraphPtr</a> graph, <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> layerIndex);</div><div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;    <span class="keywordtype">void</span> ParsePooling3d(<a class="code" href="namespacearmnn_deserializer.xhtml#a38c1f8ba8e51364802669c968cf98ff5">GraphPtr</a> graph, <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> layerIndex);</div><div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;    <span class="keywordtype">void</span> ParsePrelu(<a class="code" href="namespacearmnn_deserializer.xhtml#a38c1f8ba8e51364802669c968cf98ff5">GraphPtr</a> graph, <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> layerIndex);</div><div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;    <span class="keywordtype">void</span> ParseQLstm(<a class="code" href="namespacearmnn_deserializer.xhtml#a38c1f8ba8e51364802669c968cf98ff5">GraphPtr</a> graph, <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> layerIndex);</div><div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;    <span class="keywordtype">void</span> ParseQuantize(<a class="code" href="namespacearmnn_deserializer.xhtml#a38c1f8ba8e51364802669c968cf98ff5">GraphPtr</a> graph, <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> layerIndex);</div><div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;    <span class="keywordtype">void</span> ParseRank(<a class="code" href="namespacearmnn_deserializer.xhtml#a38c1f8ba8e51364802669c968cf98ff5">GraphPtr</a> graph, <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> layerIndex);</div><div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;    <span class="keywordtype">void</span> ParseReduce(<a class="code" href="namespacearmnn_deserializer.xhtml#a38c1f8ba8e51364802669c968cf98ff5">GraphPtr</a> graph, <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> layerIndex);</div><div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;    <span class="keywordtype">void</span> ParseReshape(<a class="code" href="namespacearmnn_deserializer.xhtml#a38c1f8ba8e51364802669c968cf98ff5">GraphPtr</a> graph, <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> layerIndex);</div><div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;    <span class="keywordtype">void</span> ParseResize(<a class="code" href="namespacearmnn_deserializer.xhtml#a38c1f8ba8e51364802669c968cf98ff5">GraphPtr</a> graph, <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> layerIndex);</div><div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;    <span class="keywordtype">void</span> ParseResizeBilinear(<a class="code" href="namespacearmnn_deserializer.xhtml#a38c1f8ba8e51364802669c968cf98ff5">GraphPtr</a> graph, <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> layerIndex);</div><div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;    <span class="keywordtype">void</span> ParseRsqrt(<a class="code" href="namespacearmnn_deserializer.xhtml#a38c1f8ba8e51364802669c968cf98ff5">GraphPtr</a> graph, <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> layerIndex);</div><div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;    <span class="keywordtype">void</span> ParseShape(<a class="code" href="namespacearmnn_deserializer.xhtml#a38c1f8ba8e51364802669c968cf98ff5">GraphPtr</a> graph, <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> layerIndex);</div><div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;    <span class="keywordtype">void</span> ParseSlice(<a class="code" href="namespacearmnn_deserializer.xhtml#a38c1f8ba8e51364802669c968cf98ff5">GraphPtr</a> graph, <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> layerIndex);</div><div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;    <span class="keywordtype">void</span> ParseSoftmax(<a class="code" href="namespacearmnn_deserializer.xhtml#a38c1f8ba8e51364802669c968cf98ff5">GraphPtr</a> graph, <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> layerIndex);</div><div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;    <span class="keywordtype">void</span> ParseSpaceToBatchNd(<a class="code" href="namespacearmnn_deserializer.xhtml#a38c1f8ba8e51364802669c968cf98ff5">GraphPtr</a> graph, <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> layerIndex);</div><div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;    <span class="keywordtype">void</span> ParseSpaceToDepth(<a class="code" href="namespacearmnn_deserializer.xhtml#a38c1f8ba8e51364802669c968cf98ff5">GraphPtr</a> graph, <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> layerIndex);</div><div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;    <span class="keywordtype">void</span> ParseSplitter(<a class="code" href="namespacearmnn_deserializer.xhtml#a38c1f8ba8e51364802669c968cf98ff5">GraphPtr</a> graph, <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> layerIndex);</div><div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;    <span class="keywordtype">void</span> ParseStack(<a class="code" href="namespacearmnn_deserializer.xhtml#a38c1f8ba8e51364802669c968cf98ff5">GraphPtr</a> graph, <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> layerIndex);</div><div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;    <span class="keywordtype">void</span> ParseStandIn(<a class="code" href="namespacearmnn_deserializer.xhtml#a38c1f8ba8e51364802669c968cf98ff5">GraphPtr</a> graph, <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> layerIndex);</div><div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;    <span class="keywordtype">void</span> ParseStridedSlice(<a class="code" href="namespacearmnn_deserializer.xhtml#a38c1f8ba8e51364802669c968cf98ff5">GraphPtr</a> graph, <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> layerIndex);</div><div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;    <span class="keywordtype">void</span> ParseSubtraction(<a class="code" href="namespacearmnn_deserializer.xhtml#a38c1f8ba8e51364802669c968cf98ff5">GraphPtr</a> graph, <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> layerIndex);</div><div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;    <span class="keywordtype">void</span> ParseSwitch(<a class="code" href="namespacearmnn_deserializer.xhtml#a38c1f8ba8e51364802669c968cf98ff5">GraphPtr</a> graph, <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> layerIndex);</div><div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;    <span class="keywordtype">void</span> ParseTranspose(<a class="code" href="namespacearmnn_deserializer.xhtml#a38c1f8ba8e51364802669c968cf98ff5">GraphPtr</a> graph, <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> layerIndex);</div><div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;    <span class="keywordtype">void</span> ParseTransposeConvolution2d(<a class="code" href="namespacearmnn_deserializer.xhtml#a38c1f8ba8e51364802669c968cf98ff5">GraphPtr</a> graph, <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> layerIndex);</div><div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;    <span class="keywordtype">void</span> ParseUnidirectionalSequenceLstm(<a class="code" href="namespacearmnn_deserializer.xhtml#a38c1f8ba8e51364802669c968cf98ff5">GraphPtr</a> graph, <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> layerIndex);</div><div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;</div><div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;    <span class="keywordtype">void</span> RegisterInputSlots(<a class="code" href="namespacearmnn_deserializer.xhtml#a38c1f8ba8e51364802669c968cf98ff5">GraphPtr</a> graph,</div><div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;                            uint32_t layerIndex,</div><div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;                            <a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml">armnn::IConnectableLayer</a>* layer,</div><div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;                            std::vector&lt;unsigned int&gt; ignoreSlots = {});</div><div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160;    <span class="keywordtype">void</span> RegisterOutputSlots(<a class="code" href="namespacearmnn_deserializer.xhtml#a38c1f8ba8e51364802669c968cf98ff5">GraphPtr</a> graph,</div><div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;                             uint32_t layerIndex,</div><div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160;                             <a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml">armnn::IConnectableLayer</a>* layer);</div><div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160;</div><div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160;    <span class="comment">// NOTE index here must be from flatbuffer object index property</span></div><div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160;    <span class="keywordtype">void</span> RegisterOutputSlotOfConnection(uint32_t sourceLayerIndex, uint32_t outputSlotIndex, <a class="code" href="classarmnn_1_1_i_output_slot.xhtml">armnn::IOutputSlot</a>* slot);</div><div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160;    <span class="keywordtype">void</span> RegisterInputSlotOfConnection(uint32_t sourceLayerIndex, uint32_t outputSlotIndex, <a class="code" href="classarmnn_1_1_i_input_slot.xhtml">armnn::IInputSlot</a>* slot);</div><div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;</div><div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160;    <span class="keywordtype">void</span> ResetParser();</div><div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160;</div><div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160;    <span class="keywordtype">void</span> SetupInputLayers(<a class="code" href="namespacearmnn_deserializer.xhtml#a38c1f8ba8e51364802669c968cf98ff5">GraphPtr</a> graphPtr);</div><div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160;    <span class="keywordtype">void</span> SetupOutputLayers(<a class="code" href="namespacearmnn_deserializer.xhtml#a38c1f8ba8e51364802669c968cf98ff5">GraphPtr</a> graphPtr);</div><div class="line"><a name="l00169"></a><span class="lineno">  169</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00170"></a><span class="lineno">  170</span>&#160;<span class="comment">    /// Helper to get the index of the layer in the flatbuffer vector from its bindingId property</span></div><div class="line"><a name="l00171"></a><span class="lineno">  171</span>&#160;<span class="comment"></span>    <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> GetInputLayerInVector(<a class="code" href="namespacearmnn_deserializer.xhtml#a38c1f8ba8e51364802669c968cf98ff5">GraphPtr</a> graph, <span class="keywordtype">int</span> targetId);</div><div class="line"><a name="l00172"></a><span class="lineno">  172</span>&#160;    <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> GetOutputLayerInVector(<a class="code" href="namespacearmnn_deserializer.xhtml#a38c1f8ba8e51364802669c968cf98ff5">GraphPtr</a> graph, <span class="keywordtype">int</span> targetId);</div><div class="line"><a name="l00173"></a><span class="lineno">  173</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00174"></a><span class="lineno">  174</span>&#160;<span class="comment">    /// Helper to get the index of the layer in the flatbuffer vector from its index property</span></div><div class="line"><a name="l00175"></a><span class="lineno">  175</span>&#160;<span class="comment"></span>    <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> GetLayerIndexInVector(<a class="code" href="namespacearmnn_deserializer.xhtml#a38c1f8ba8e51364802669c968cf98ff5">GraphPtr</a> graph, <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> index);</div><div class="line"><a name="l00176"></a><span class="lineno">  176</span>&#160;</div><div class="line"><a name="l00177"></a><span class="lineno">  177</span>&#160;    <span class="keyword">struct </span>FeatureVersions</div><div class="line"><a name="l00178"></a><span class="lineno">  178</span>&#160;    {</div><div class="line"><a name="l00179"></a><span class="lineno">  179</span>&#160;        <span class="comment">// Default values to zero for backward compatibility</span></div><div class="line"><a name="l00180"></a><span class="lineno">  180</span>&#160;        <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> m_BindingIdScheme = 0;</div><div class="line"><a name="l00181"></a><span class="lineno">  181</span>&#160;</div><div class="line"><a name="l00182"></a><span class="lineno">  182</span>&#160;        <span class="comment">// Default values to zero for backward compatibility</span></div><div class="line"><a name="l00183"></a><span class="lineno">  183</span>&#160;        <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> m_WeightsLayoutScheme = 0;</div><div class="line"><a name="l00184"></a><span class="lineno">  184</span>&#160;</div><div class="line"><a name="l00185"></a><span class="lineno">  185</span>&#160;        <span class="comment">// Default values to zero for backward compatibility</span></div><div class="line"><a name="l00186"></a><span class="lineno">  186</span>&#160;        <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> m_ConstTensorsAsInputs = 0;</div><div class="line"><a name="l00187"></a><span class="lineno">  187</span>&#160;    };</div><div class="line"><a name="l00188"></a><span class="lineno">  188</span>&#160;</div><div class="line"><a name="l00189"></a><span class="lineno">  189</span>&#160;    FeatureVersions GetFeatureVersions(<a class="code" href="namespacearmnn_deserializer.xhtml#a38c1f8ba8e51364802669c968cf98ff5">GraphPtr</a> graph);</div><div class="line"><a name="l00190"></a><span class="lineno">  190</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00191"></a><span class="lineno">  191</span>&#160;<span class="comment">    /// The network we&#39;re building. Gets cleared after it is passed to the user</span></div><div class="line"><a name="l00192"></a><span class="lineno">  192</span>&#160;<span class="comment"></span>    <a class="code" href="namespacearmnn.xhtml#ace74f6f9feb95a964a49d79458232703">armnn::INetworkPtr</a>                    m_Network;</div><div class="line"><a name="l00193"></a><span class="lineno">  193</span>&#160;    std::vector&lt;LayerParsingFunction&gt;     m_ParserFunctions;</div><div class="line"><a name="l00194"></a><span class="lineno">  194</span>&#160;</div><div class="line"><a name="l00195"></a><span class="lineno">  195</span>&#160;    <span class="keyword">using</span> NameToBindingInfo = std::pair&lt;std::string, BindingPointInfo &gt;;</div><div class="line"><a name="l00196"></a><span class="lineno">  196</span>&#160;    std::vector&lt;NameToBindingInfo&gt;    m_InputBindings;</div><div class="line"><a name="l00197"></a><span class="lineno">  197</span>&#160;    std::vector&lt;NameToBindingInfo&gt;    m_OutputBindings;</div><div class="line"><a name="l00198"></a><span class="lineno">  198</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00199"></a><span class="lineno">  199</span>&#160;<span class="comment">    /// This struct describe connections for each layer</span></div><div class="line"><a name="l00200"></a><span class="lineno">  200</span>&#160;<span class="comment"></span>    <span class="keyword">struct </span>Connections</div><div class="line"><a name="l00201"></a><span class="lineno">  201</span>&#160;    {</div><div class="line"><a name="l00202"></a><span class="lineno">  202</span>&#160;        <span class="comment">// Maps output slot index (property in flatbuffer object) to IOutputSlot pointer</span></div><div class="line"><a name="l00203"></a><span class="lineno">  203</span>&#160;        std::unordered_map&lt;unsigned int, armnn::IOutputSlot*&gt; outputSlots;</div><div class="line"><a name="l00204"></a><span class="lineno">  204</span>&#160;</div><div class="line"><a name="l00205"></a><span class="lineno">  205</span>&#160;        <span class="comment">// Maps output slot index to IInputSlot pointer the output slot should be connected to</span></div><div class="line"><a name="l00206"></a><span class="lineno">  206</span>&#160;        std::unordered_map&lt;unsigned int, std::vector&lt;armnn::IInputSlot*&gt;&gt; inputSlots;</div><div class="line"><a name="l00207"></a><span class="lineno">  207</span>&#160;    };</div><div class="line"><a name="l00208"></a><span class="lineno">  208</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00209"></a><span class="lineno">  209</span>&#160;<span class="comment">    /// Maps layer index (index property in flatbuffer object) to Connections for each layer</span></div><div class="line"><a name="l00210"></a><span class="lineno">  210</span>&#160;<span class="comment"></span>    std::unordered_map&lt;unsigned int, Connections&gt; m_GraphConnections;</div><div class="line"><a name="l00211"></a><span class="lineno">  211</span>&#160;};</div><div class="line"><a name="l00212"></a><span class="lineno">  212</span>&#160;</div><div class="line"><a name="l00213"></a><span class="lineno">  213</span>&#160;} <span class="comment">// namespace armnnDeserializer</span></div><div class="ttc" id="classarmnn_deserializer_1_1_i_deserializer_1_1_deserializer_impl_xhtml_a920251d49a8f32085d458ba23f776800"><div class="ttname"><a href="classarmnn_deserializer_1_1_i_deserializer_1_1_deserializer_impl.xhtml#a920251d49a8f32085d458ba23f776800">armnnDeserializer::IDeserializer::DeserializerImpl::GetNormalizationDescriptor</a></div><div class="ttdeci">static armnn::NormalizationDescriptor GetNormalizationDescriptor(NormalizationDescriptorPtr normalizationDescriptor, unsigned int layerIndex)</div><div class="ttdef"><b>Definition:</b> <a href="_deserializer_8cpp_source.xhtml#l02785">Deserializer.cpp:2785</a></div></div>
<div class="ttc" id="classarmnn_deserializer_1_1_i_deserializer_1_1_deserializer_impl_xhtml_a9069127d4430d97fe0f2c53fb2c32ab9"><div class="ttname"><a href="classarmnn_deserializer_1_1_i_deserializer_1_1_deserializer_impl.xhtml#a9069127d4430d97fe0f2c53fb2c32ab9">armnnDeserializer::IDeserializer::DeserializerImpl::GetOutputs</a></div><div class="ttdeci">static TensorRawPtrVector GetOutputs(const GraphPtr &amp;graph, unsigned int layerIndex)</div><div class="ttdef"><b>Definition:</b> <a href="_deserializer_8cpp_source.xhtml#l00779">Deserializer.cpp:779</a></div></div>
<div class="ttc" id="classarmnn_1_1_i_connectable_layer_xhtml"><div class="ttname"><a href="classarmnn_1_1_i_connectable_layer.xhtml">armnn::IConnectableLayer</a></div><div class="ttdoc">Interface for a layer that is connectable to other layers via InputSlots and OutputSlots. </div><div class="ttdef"><b>Definition:</b> <a href="_i_network_8hpp_source.xhtml#l00066">INetwork.hpp:66</a></div></div>
<div class="ttc" id="classarmnn_deserializer_1_1_i_deserializer_1_1_deserializer_impl_xhtml_ab3dff510bec873d3e4ffe5cdfa71f1cd"><div class="ttname"><a href="classarmnn_deserializer_1_1_i_deserializer_1_1_deserializer_impl.xhtml#ab3dff510bec873d3e4ffe5cdfa71f1cd">armnnDeserializer::IDeserializer::DeserializerImpl::GetBaseLayer</a></div><div class="ttdeci">static LayerBaseRawPtr GetBaseLayer(const GraphPtr &amp;graphPtr, unsigned int layerIndex)</div><div class="ttdef"><b>Definition:</b> <a href="_deserializer_8cpp_source.xhtml#l00281">Deserializer.cpp:281</a></div></div>
<div class="ttc" id="namespacearmnn_deserializer_xhtml_a68b76ee033fdd629404369171c3d4f90"><div class="ttname"><a href="namespacearmnn_deserializer.xhtml#a68b76ee033fdd629404369171c3d4f90">armnnDeserializer::ConstTensorRawPtr</a></div><div class="ttdeci">const armnnSerializer::ConstTensor * ConstTensorRawPtr</div><div class="ttdef"><b>Definition:</b> <a href="_deserializer_8hpp_source.xhtml#l00018">Deserializer.hpp:18</a></div></div>
<div class="ttc" id="classarmnn_1_1_tensor_info_xhtml"><div class="ttname"><a href="classarmnn_1_1_tensor_info.xhtml">armnn::TensorInfo</a></div><div class="ttdef"><b>Definition:</b> <a href="_tensor_8hpp_source.xhtml#l00152">Tensor.hpp:152</a></div></div>
<div class="ttc" id="namespacearmnn_deserializer_xhtml_a2a282cf18fcfe848b47e946327ca1048"><div class="ttname"><a href="namespacearmnn_deserializer.xhtml#a2a282cf18fcfe848b47e946327ca1048">armnnDeserializer::NormalizationDescriptorPtr</a></div><div class="ttdeci">const armnnSerializer::NormalizationDescriptor * NormalizationDescriptorPtr</div><div class="ttdef"><b>Definition:</b> <a href="_deserializer_8hpp_source.xhtml#l00023">Deserializer.hpp:23</a></div></div>
<div class="ttc" id="classarmnn_deserializer_1_1_i_deserializer_1_1_deserializer_impl_xhtml_a0bab2006e8fafc4a7fd02efa536f2828"><div class="ttname"><a href="classarmnn_deserializer_1_1_i_deserializer_1_1_deserializer_impl.xhtml#a0bab2006e8fafc4a7fd02efa536f2828">armnnDeserializer::IDeserializer::DeserializerImpl::LoadGraphFromBinary</a></div><div class="ttdeci">static GraphPtr LoadGraphFromBinary(const uint8_t *binaryContent, size_t len)</div><div class="ttdef"><b>Definition:</b> <a href="_deserializer_8cpp_source.xhtml#l00836">Deserializer.cpp:836</a></div></div>
<div class="ttc" id="namespacearmnn_deserializer_xhtml_a5cd994198e775b8e919853fd0da5b9c1"><div class="ttname"><a href="namespacearmnn_deserializer.xhtml#a5cd994198e775b8e919853fd0da5b9c1">armnnDeserializer::QLstmDescriptorPtr</a></div><div class="ttdeci">const armnnSerializer::QLstmDescriptor * QLstmDescriptorPtr</div><div class="ttdef"><b>Definition:</b> <a href="_deserializer_8hpp_source.xhtml#l00026">Deserializer.hpp:26</a></div></div>
<div class="ttc" id="classarmnn_deserializer_1_1_i_deserializer_1_1_deserializer_impl_xhtml_ad04b4361ec1ded6b9334dae64c7c4579"><div class="ttname"><a href="classarmnn_deserializer_1_1_i_deserializer_1_1_deserializer_impl.xhtml#ad04b4361ec1ded6b9334dae64c7c4579">armnnDeserializer::IDeserializer::DeserializerImpl::GetUnidirectionalSequenceLstmDescriptor</a></div><div class="ttdeci">static armnn::UnidirectionalSequenceLstmDescriptor GetUnidirectionalSequenceLstmDescriptor(UnidirectionalSequenceLstmDescriptorPtr descriptor)</div><div class="ttdef"><b>Definition:</b> <a href="_deserializer_8cpp_source.xhtml#l03677">Deserializer.cpp:3677</a></div></div>
<div class="ttc" id="classarmnn_deserializer_1_1_i_deserializer_1_1_deserializer_impl_xhtml_a5de68e32eabd643f55a35f288ba10294"><div class="ttname"><a href="classarmnn_deserializer_1_1_i_deserializer_1_1_deserializer_impl.xhtml#a5de68e32eabd643f55a35f288ba10294">armnnDeserializer::IDeserializer::DeserializerImpl::GetNetworkInputBindingInfo</a></div><div class="ttdeci">BindingPointInfo GetNetworkInputBindingInfo(unsigned int layerId, const std::string &amp;name) const</div><div class="ttdoc">Retrieve binding info (layer id and tensor info) for the network input identified by the given layer ...</div><div class="ttdef"><b>Definition:</b> <a href="_deserializer_8cpp_source.xhtml#l00895">Deserializer.cpp:895</a></div></div>
<div class="ttc" id="classarmnn_deserializer_1_1_i_deserializer_1_1_deserializer_impl_xhtml_a32a96909bc8a8ee9076bd4d5c1028301"><div class="ttname"><a href="classarmnn_deserializer_1_1_i_deserializer_1_1_deserializer_impl.xhtml#a32a96909bc8a8ee9076bd4d5c1028301">armnnDeserializer::IDeserializer::DeserializerImpl::CreateNetworkFromBinary</a></div><div class="ttdeci">armnn::INetworkPtr CreateNetworkFromBinary(const std::vector&lt; uint8_t &gt; &amp;binaryContent)</div><div class="ttdoc">Create an input network from binary file contents. </div><div class="ttdef"><b>Definition:</b> <a href="_deserializer_8cpp_source.xhtml#l00813">Deserializer.cpp:813</a></div></div>
<div class="ttc" id="namespacearmnn_deserializer_xhtml_aaabcc180b1c18918e92459fc282848c1"><div class="ttname"><a href="namespacearmnn_deserializer.xhtml#aaabcc180b1c18918e92459fc282848c1">armnnDeserializer::LayerBaseRawPtrVector</a></div><div class="ttdeci">std::vector&lt; LayerBaseRawPtr &gt; LayerBaseRawPtrVector</div><div class="ttdef"><b>Definition:</b> <a href="_deserializer_8hpp_source.xhtml#l00031">Deserializer.hpp:31</a></div></div>
<div class="ttc" id="namespacearmnn_deserializer_xhtml_a38c1f8ba8e51364802669c968cf98ff5"><div class="ttname"><a href="namespacearmnn_deserializer.xhtml#a38c1f8ba8e51364802669c968cf98ff5">armnnDeserializer::GraphPtr</a></div><div class="ttdeci">const armnnSerializer::SerializedGraph * GraphPtr</div><div class="ttdef"><b>Definition:</b> <a href="_deserializer_8hpp_source.xhtml#l00019">Deserializer.hpp:19</a></div></div>
<div class="ttc" id="namespacearmnn_deserializer_xhtml_a7e75f47f676327bce37149932aa4a011"><div class="ttname"><a href="namespacearmnn_deserializer.xhtml#a7e75f47f676327bce37149932aa4a011">armnnDeserializer::Pooling2dDescriptor</a></div><div class="ttdeci">const armnnSerializer::Pooling2dDescriptor * Pooling2dDescriptor</div><div class="ttdef"><b>Definition:</b> <a href="_deserializer_8hpp_source.xhtml#l00021">Deserializer.hpp:21</a></div></div>
<div class="ttc" id="classarmnn_deserializer_1_1_i_deserializer_1_1_deserializer_impl_xhtml"><div class="ttname"><a href="classarmnn_deserializer_1_1_i_deserializer_1_1_deserializer_impl.xhtml">armnnDeserializer::IDeserializer::DeserializerImpl</a></div><div class="ttdef"><b>Definition:</b> <a href="_deserializer_8hpp_source.xhtml#l00034">Deserializer.hpp:34</a></div></div>
<div class="ttc" id="structarmnn_deserializer_1_1_binding_point_info_xhtml"><div class="ttname"><a href="structarmnn_deserializer_1_1_binding_point_info.xhtml">armnnDeserializer::BindingPointInfo</a></div><div class="ttdef"><b>Definition:</b> <a href="_i_deserializer_8hpp_source.xhtml#l00018">IDeserializer.hpp:18</a></div></div>
<div class="ttc" id="classarmnn_deserializer_1_1_i_deserializer_1_1_deserializer_impl_xhtml_afcc87bf0e20779861dd5d01a4bedcda9"><div class="ttname"><a href="classarmnn_deserializer_1_1_i_deserializer_1_1_deserializer_impl.xhtml#afcc87bf0e20779861dd5d01a4bedcda9">armnnDeserializer::IDeserializer::DeserializerImpl::GetBindingLayerInfo</a></div><div class="ttdeci">static int32_t GetBindingLayerInfo(const GraphPtr &amp;graphPtr, unsigned int layerIndex)</div><div class="ttdef"><b>Definition:</b> <a href="_deserializer_8cpp_source.xhtml#l00436">Deserializer.cpp:436</a></div></div>
<div class="ttc" id="namespacearmnn_deserializer_xhtml_a91ade61b5704e4f2c38c263c2be148ef"><div class="ttname"><a href="namespacearmnn_deserializer.xhtml#a91ade61b5704e4f2c38c263c2be148ef">armnnDeserializer::LayerBaseRawPtr</a></div><div class="ttdeci">const armnnSerializer::LayerBase * LayerBaseRawPtr</div><div class="ttdef"><b>Definition:</b> <a href="_deserializer_8hpp_source.xhtml#l00030">Deserializer.hpp:30</a></div></div>
<div class="ttc" id="namespacearmnn_deserializer_xhtml_abd8bee7fb9b86485a60bc7ee05114270"><div class="ttname"><a href="namespacearmnn_deserializer.xhtml#abd8bee7fb9b86485a60bc7ee05114270">armnnDeserializer::TensorRawPtrVector</a></div><div class="ttdeci">std::vector&lt; TensorRawPtr &gt; TensorRawPtrVector</div><div class="ttdef"><b>Definition:</b> <a href="_deserializer_8hpp_source.xhtml#l00028">Deserializer.hpp:28</a></div></div>
<div class="ttc" id="namespacearmnn_deserializer_xhtml_a9eb5db921d6fa5015a57916a5d0c7cd9"><div class="ttname"><a href="namespacearmnn_deserializer.xhtml#a9eb5db921d6fa5015a57916a5d0c7cd9">armnnDeserializer::UnidirectionalSequenceLstmDescriptorPtr</a></div><div class="ttdeci">const armnnSerializer::UnidirectionalSequenceLstmDescriptor * UnidirectionalSequenceLstmDescriptorPtr</div><div class="ttdef"><b>Definition:</b> <a href="_deserializer_8hpp_source.xhtml#l00032">Deserializer.hpp:32</a></div></div>
<div class="ttc" id="classarmnn_deserializer_1_1_i_deserializer_1_1_deserializer_impl_xhtml_abe99e44e1f642428be714ebac948915e"><div class="ttname"><a href="classarmnn_deserializer_1_1_i_deserializer_1_1_deserializer_impl.xhtml#abe99e44e1f642428be714ebac948915e">armnnDeserializer::IDeserializer::DeserializerImpl::operator=</a></div><div class="ttdeci">DeserializerImpl &amp; operator=(const DeserializerImpl &amp;)=delete</div></div>
<div class="ttc" id="namespacearmnn_deserializer_xhtml_a7acf3a0a92158bf8a2df8ab5467ad6f4"><div class="ttname"><a href="namespacearmnn_deserializer.xhtml#a7acf3a0a92158bf8a2df8ab5467ad6f4">armnnDeserializer::QunatizedLstmInputParamsPtr</a></div><div class="ttdeci">const armnnSerializer::QuantizedLstmInputParams * QunatizedLstmInputParamsPtr</div><div class="ttdef"><b>Definition:</b> <a href="_deserializer_8hpp_source.xhtml#l00027">Deserializer.hpp:27</a></div></div>
<div class="ttc" id="namespacearmnn_deserializer_xhtml_a15397ee26bc4b7d3a459b05e457be428"><div class="ttname"><a href="namespacearmnn_deserializer.xhtml#a15397ee26bc4b7d3a459b05e457be428">armnnDeserializer::LstmDescriptorPtr</a></div><div class="ttdeci">const armnnSerializer::LstmDescriptor * LstmDescriptorPtr</div><div class="ttdef"><b>Definition:</b> <a href="_deserializer_8hpp_source.xhtml#l00024">Deserializer.hpp:24</a></div></div>
<div class="ttc" id="classarmnn_deserializer_1_1_i_deserializer_1_1_deserializer_impl_xhtml_af7bb02c61c6a5663121da024b7e042e8"><div class="ttname"><a href="classarmnn_deserializer_1_1_i_deserializer_1_1_deserializer_impl.xhtml#af7bb02c61c6a5663121da024b7e042e8">armnnDeserializer::IDeserializer::DeserializerImpl::GetLstmDescriptor</a></div><div class="ttdeci">static armnn::LstmDescriptor GetLstmDescriptor(LstmDescriptorPtr lstmDescriptor)</div><div class="ttdef"><b>Definition:</b> <a href="_deserializer_8cpp_source.xhtml#l03114">Deserializer.cpp:3114</a></div></div>
<div class="ttc" id="structarmnn_1_1_lstm_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_lstm_descriptor.xhtml">armnn::LstmDescriptor</a></div><div class="ttdoc">An LstmDescriptor for the LstmLayer. </div><div class="ttdef"><b>Definition:</b> <a href="_descriptors_8hpp_source.xhtml#l01083">Descriptors.hpp:1083</a></div></div>
<div class="ttc" id="classarmnn_1_1_i_output_slot_xhtml"><div class="ttname"><a href="classarmnn_1_1_i_output_slot.xhtml">armnn::IOutputSlot</a></div><div class="ttdoc">An output connection slot for a layer. </div><div class="ttdef"><b>Definition:</b> <a href="_i_network_8hpp_source.xhtml#l00040">INetwork.hpp:40</a></div></div>
<div class="ttc" id="classarmnn_deserializer_1_1_i_deserializer_1_1_deserializer_impl_xhtml_ac337f5478049cba1da222da655be49cc"><div class="ttname"><a href="classarmnn_deserializer_1_1_i_deserializer_1_1_deserializer_impl.xhtml#ac337f5478049cba1da222da655be49cc">armnnDeserializer::IDeserializer::DeserializerImpl::GetInputs</a></div><div class="ttdeci">static TensorRawPtrVector GetInputs(const GraphPtr &amp;graph, unsigned int layerIndex)</div><div class="ttdef"><b>Definition:</b> <a href="_deserializer_8cpp_source.xhtml#l00762">Deserializer.cpp:762</a></div></div>
<div class="ttc" id="classarmnn_deserializer_1_1_i_deserializer_1_1_deserializer_impl_xhtml_a2f66de823cd61765a40407fee754655e"><div class="ttname"><a href="classarmnn_deserializer_1_1_i_deserializer_1_1_deserializer_impl.xhtml#a2f66de823cd61765a40407fee754655e">armnnDeserializer::IDeserializer::DeserializerImpl::GetNetworkOutputBindingInfo</a></div><div class="ttdeci">BindingPointInfo GetNetworkOutputBindingInfo(unsigned int layerId, const std::string &amp;name) const</div><div class="ttdoc">Retrieve binding info (layer id and tensor info) for the network output identified by the given layer...</div><div class="ttdef"><b>Definition:</b> <a href="_deserializer_8cpp_source.xhtml#l00911">Deserializer.cpp:911</a></div></div>
<div class="ttc" id="structarmnn_1_1_lstm_input_params_xhtml"><div class="ttname"><a href="structarmnn_1_1_lstm_input_params.xhtml">armnn::LstmInputParams</a></div><div class="ttdef"><b>Definition:</b> <a href="_lstm_params_8hpp_source.xhtml#l00013">LstmParams.hpp:13</a></div></div>
<div class="ttc" id="structarmnn_1_1_q_lstm_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_q_lstm_descriptor.xhtml">armnn::QLstmDescriptor</a></div><div class="ttdoc">A QLstmDescriptor for the QLstmLayer. </div><div class="ttdef"><b>Definition:</b> <a href="_descriptors_8hpp_source.xhtml#l01361">Descriptors.hpp:1361</a></div></div>
<div class="ttc" id="namespacearmnn_xhtml_ae6c5f1b51bd32133c4dcc632045d6b58"><div class="ttname"><a href="namespacearmnn.xhtml#ae6c5f1b51bd32133c4dcc632045d6b58">armnn::UnidirectionalSequenceLstmDescriptor</a></div><div class="ttdeci">LstmDescriptor UnidirectionalSequenceLstmDescriptor</div><div class="ttdef"><b>Definition:</b> <a href="_descriptors_8hpp_source.xhtml#l01150">Descriptors.hpp:1150</a></div></div>
<div class="ttc" id="classarmnn_deserializer_1_1_i_deserializer_1_1_deserializer_impl_xhtml_a1467999b659959577bb2efc8fc62e15a"><div class="ttname"><a href="classarmnn_deserializer_1_1_i_deserializer_1_1_deserializer_impl.xhtml#a1467999b659959577bb2efc8fc62e15a">armnnDeserializer::IDeserializer::DeserializerImpl::GetPooling3dDescriptor</a></div><div class="ttdeci">static armnn::Pooling3dDescriptor GetPooling3dDescriptor(Pooling3dDescriptor pooling3dDescriptor, unsigned int layerIndex)</div><div class="ttdef"><b>Definition:</b> <a href="_deserializer_8cpp_source.xhtml#l02326">Deserializer.cpp:2326</a></div></div>
<div class="ttc" id="classarmnn_deserializer_1_1_i_deserializer_1_1_deserializer_impl_xhtml_a327a399d46f8216c9f4c1eea5f18a542"><div class="ttname"><a href="classarmnn_deserializer_1_1_i_deserializer_1_1_deserializer_impl.xhtml#a327a399d46f8216c9f4c1eea5f18a542">armnnDeserializer::IDeserializer::DeserializerImpl::GetLstmInputParams</a></div><div class="ttdeci">static armnn::LstmInputParams GetLstmInputParams(LstmDescriptorPtr lstmDescriptor, LstmInputParamsPtr lstmInputParams)</div></div>
<div class="ttc" id="_i_network_8hpp_xhtml"><div class="ttname"><a href="_i_network_8hpp.xhtml">INetwork.hpp</a></div></div>
<div class="ttc" id="classarmnn_deserializer_1_1_i_deserializer_1_1_deserializer_impl_xhtml_abfdc037ebcc11de0e1432ba4d3d98fe7"><div class="ttname"><a href="classarmnn_deserializer_1_1_i_deserializer_1_1_deserializer_impl.xhtml#abfdc037ebcc11de0e1432ba4d3d98fe7">armnnDeserializer::IDeserializer::DeserializerImpl::DeserializerImpl</a></div><div class="ttdeci">DeserializerImpl()</div><div class="ttdef"><b>Definition:</b> <a href="_deserializer_8cpp_source.xhtml#l00207">Deserializer.cpp:207</a></div></div>
<div class="ttc" id="structarmnn_1_1_pooling3d_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_pooling3d_descriptor.xhtml">armnn::Pooling3dDescriptor</a></div><div class="ttdoc">A Pooling3dDescriptor for the Pooling3dLayer. </div><div class="ttdef"><b>Definition:</b> <a href="_descriptors_8hpp_source.xhtml#l00392">Descriptors.hpp:392</a></div></div>
<div class="ttc" id="classarmnn_deserializer_1_1_i_deserializer_1_1_deserializer_impl_xhtml_ac17b9b154461bfa49ff7ade08f3c4bdf"><div class="ttname"><a href="classarmnn_deserializer_1_1_i_deserializer_1_1_deserializer_impl.xhtml#ac17b9b154461bfa49ff7ade08f3c4bdf">armnnDeserializer::IDeserializer::DeserializerImpl::GetPooling2dDescriptor</a></div><div class="ttdeci">static armnn::Pooling2dDescriptor GetPooling2dDescriptor(Pooling2dDescriptor pooling2dDescriptor, unsigned int layerIndex)</div><div class="ttdef"><b>Definition:</b> <a href="_deserializer_8cpp_source.xhtml#l02231">Deserializer.cpp:2231</a></div></div>
<div class="ttc" id="namespacearmnn_deserializer_xhtml_a80888061963ddd18e87105807a035d9a"><div class="ttname"><a href="namespacearmnn_deserializer.xhtml#a80888061963ddd18e87105807a035d9a">armnnDeserializer::TensorRawPtr</a></div><div class="ttdeci">const armnnSerializer::TensorInfo * TensorRawPtr</div><div class="ttdef"><b>Definition:</b> <a href="_deserializer_8hpp_source.xhtml#l00020">Deserializer.hpp:20</a></div></div>
<div class="ttc" id="_armnn_schema__generated_8h_xhtml"><div class="ttname"><a href="_armnn_schema__generated_8h.xhtml">ArmnnSchema_generated.h</a></div></div>
<div class="ttc" id="_i_deserializer_8hpp_xhtml"><div class="ttname"><a href="_i_deserializer_8hpp.xhtml">IDeserializer.hpp</a></div></div>
<div class="ttc" id="namespacearmnn_deserializer_xhtml"><div class="ttname"><a href="namespacearmnn_deserializer.xhtml">armnnDeserializer</a></div><div class="ttdef"><b>Definition:</b> <a href="_i_deserializer_8hpp_source.xhtml#l00016">IDeserializer.hpp:16</a></div></div>
<div class="ttc" id="classarmnn_deserializer_1_1_i_deserializer_1_1_deserializer_impl_xhtml_a28e2ce091ba1ac8242f17134c662ea0f"><div class="ttname"><a href="classarmnn_deserializer_1_1_i_deserializer_1_1_deserializer_impl.xhtml#a28e2ce091ba1ac8242f17134c662ea0f">armnnDeserializer::IDeserializer::DeserializerImpl::~DeserializerImpl</a></div><div class="ttdeci">~DeserializerImpl()=default</div></div>
<div class="ttc" id="classarmnn_deserializer_1_1_i_deserializer_1_1_deserializer_impl_xhtml_af2e5b4595b6abc056779ecd12bd271c2"><div class="ttname"><a href="classarmnn_deserializer_1_1_i_deserializer_1_1_deserializer_impl.xhtml#af2e5b4595b6abc056779ecd12bd271c2">armnnDeserializer::IDeserializer::DeserializerImpl::GetLayerName</a></div><div class="ttdeci">static std::string GetLayerName(const GraphPtr &amp;graph, unsigned int index)</div><div class="ttdef"><b>Definition:</b> <a href="_deserializer_8cpp_source.xhtml#l00429">Deserializer.cpp:429</a></div></div>
<div class="ttc" id="classarmnn_deserializer_1_1_i_deserializer_1_1_deserializer_impl_xhtml_a57e32d26ac8c87b118e77da920481123"><div class="ttname"><a href="classarmnn_deserializer_1_1_i_deserializer_1_1_deserializer_impl.xhtml#a57e32d26ac8c87b118e77da920481123">armnnDeserializer::IDeserializer::DeserializerImpl::GetQLstmDescriptor</a></div><div class="ttdeci">static armnn::QLstmDescriptor GetQLstmDescriptor(QLstmDescriptorPtr qLstmDescriptorPtr)</div><div class="ttdef"><b>Definition:</b> <a href="_deserializer_8cpp_source.xhtml#l03245">Deserializer.cpp:3245</a></div></div>
<div class="ttc" id="classarmnn_deserializer_1_1_i_deserializer_1_1_deserializer_impl_xhtml_a8752c2b994619ae67201a297c2c76be2"><div class="ttname"><a href="classarmnn_deserializer_1_1_i_deserializer_1_1_deserializer_impl.xhtml#a8752c2b994619ae67201a297c2c76be2">armnnDeserializer::IDeserializer::DeserializerImpl::OutputShapeOfReshape</a></div><div class="ttdeci">static armnn::TensorInfo OutputShapeOfReshape(const armnn::TensorInfo &amp;inputTensorInfo, const std::vector&lt; uint32_t &gt; &amp;targetDimsIn)</div><div class="ttdef"><b>Definition:</b> <a href="_deserializer_8cpp_source.xhtml#l02486">Deserializer.cpp:2486</a></div></div>
<div class="ttc" id="namespacearmnn_deserializer_xhtml_a39be8e36d57d85162d1d72c320bc22f6"><div class="ttname"><a href="namespacearmnn_deserializer.xhtml#a39be8e36d57d85162d1d72c320bc22f6">armnnDeserializer::LayerRawPtr</a></div><div class="ttdeci">const armnnSerializer::LayerBase * LayerRawPtr</div><div class="ttdef"><b>Definition:</b> <a href="_deserializer_8hpp_source.xhtml#l00029">Deserializer.hpp:29</a></div></div>
<div class="ttc" id="namespacearmnn_xhtml_ace74f6f9feb95a964a49d79458232703"><div class="ttname"><a href="namespacearmnn.xhtml#ace74f6f9feb95a964a49d79458232703">armnn::INetworkPtr</a></div><div class="ttdeci">std::unique_ptr&lt; INetwork, void(*)(INetwork *network)&gt; INetworkPtr</div><div class="ttdef"><b>Definition:</b> <a href="_i_network_8hpp_source.xhtml#l00241">INetwork.hpp:241</a></div></div>
<div class="ttc" id="structarmnn_1_1_pooling2d_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_pooling2d_descriptor.xhtml">armnn::Pooling2dDescriptor</a></div><div class="ttdoc">A Pooling2dDescriptor for the Pooling2dLayer. </div><div class="ttdef"><b>Definition:</b> <a href="_descriptors_8hpp_source.xhtml#l00332">Descriptors.hpp:332</a></div></div>
<div class="ttc" id="structarmnn_1_1_normalization_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_normalization_descriptor.xhtml">armnn::NormalizationDescriptor</a></div><div class="ttdoc">A NormalizationDescriptor for the NormalizationLayer. </div><div class="ttdef"><b>Definition:</b> <a href="_descriptors_8hpp_source.xhtml#l00734">Descriptors.hpp:734</a></div></div>
<div class="ttc" id="namespacearmnn_deserializer_xhtml_a93460fcf78d1b2dcab72dd8378739145"><div class="ttname"><a href="namespacearmnn_deserializer.xhtml#a93460fcf78d1b2dcab72dd8378739145">armnnDeserializer::LstmInputParamsPtr</a></div><div class="ttdeci">const armnnSerializer::LstmInputParams * LstmInputParamsPtr</div><div class="ttdef"><b>Definition:</b> <a href="_deserializer_8hpp_source.xhtml#l00025">Deserializer.hpp:25</a></div></div>
<div class="ttc" id="classarmnn_1_1_i_input_slot_xhtml"><div class="ttname"><a href="classarmnn_1_1_i_input_slot.xhtml">armnn::IInputSlot</a></div><div class="ttdoc">An input connection slot for a layer. </div><div class="ttdef"><b>Definition:</b> <a href="_i_network_8hpp_source.xhtml#l00026">INetwork.hpp:26</a></div></div>
<div class="ttc" id="namespacearmnn_deserializer_xhtml_a6713b8a83104db317823b5367b195d2e"><div class="ttname"><a href="namespacearmnn_deserializer.xhtml#a6713b8a83104db317823b5367b195d2e">armnnDeserializer::Pooling3dDescriptor</a></div><div class="ttdeci">const armnnSerializer::Pooling3dDescriptor * Pooling3dDescriptor</div><div class="ttdef"><b>Definition:</b> <a href="_deserializer_8hpp_source.xhtml#l00022">Deserializer.hpp:22</a></div></div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="dir_68267d1309a1af8e8297ef4c3efbcdba.xhtml">src</a></li><li class="navelem"><a class="el" href="dir_926e64104daaa2ed9ca6061297f76df9.xhtml">armnnDeserializer</a></li><li class="navelem"><a class="el" href="_deserializer_8hpp.xhtml">Deserializer.hpp</a></li>
    <li class="footer">Generated on Tue May 24 2022 11:26:33 for ArmNN by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.13 </li>
  </ul>
</div>
</body>
</html>
