<!-- Copyright (c) 2020 ARM Limited. -->
<!--                                 -->
<!-- SPDX-License-Identifier: MIT    -->
<!--                                 -->
<!-- HTML header for doxygen 1.8.13-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.17"/>
<meta name="robots" content="NOINDEX, NOFOLLOW" />
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>ArmNN: src/backends/reference/workloads/RefShapeWorkload.hpp Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script>
<script type="text/javascript" async="async" src="http://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="stylesheet.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <img alt="ArmNN" src="Arm_NN_horizontal_blue.png" style="max-width: 10rem; margin-top: .5rem; margin-left 10px"/>
  <td style="padding-left: 0.5em;">
   <div id="projectname">
   &#160;<span id="projectnumber">23.05</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.17 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "search",false,'Search');
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(document).ready(function(){initNavTree('_ref_shape_workload_8hpp_source.xhtml',''); initResizable(); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="headertitle">
<div class="title">RefShapeWorkload.hpp</div>  </div>
</div><!--header-->
<div class="contents">
<a href="_ref_shape_workload_8hpp.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="comment">//</span></div>
<div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="comment">// Copyright Â© 2022 Arm Ltd and Contributors. All rights reserved.</span></div>
<div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="comment">// SPDX-License-Identifier: MIT</span></div>
<div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="comment">//</span></div>
<div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160; </div>
<div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="preprocessor">#pragma once</span></div>
<div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160; </div>
<div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_ref_base_workload_8hpp.xhtml">RefBaseWorkload.hpp</a>&quot;</span></div>
<div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="preprocessor">#include &lt;<a class="code" href="_workload_data_8hpp.xhtml">armnn/backends/WorkloadData.hpp</a>&gt;</span></div>
<div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160; </div>
<div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_ref_workload_utils_8hpp.xhtml">RefWorkloadUtils.hpp</a>&quot;</span></div>
<div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160; </div>
<div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;<span class="keyword">namespace </span><a class="code" href="namespacearmnn.xhtml">armnn</a></div>
<div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;{</div>
<div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160; </div>
<div class="line"><a name="l00016"></a><span class="lineno"><a class="line" href="structarmnn_1_1_ref_shape_workload.xhtml">   16</a></span>&#160;<span class="keyword">struct </span><a class="code" href="structarmnn_1_1_ref_shape_workload.xhtml">RefShapeWorkload</a> : <span class="keyword">public</span> <a class="code" href="classarmnn_1_1_ref_base_workload.xhtml">RefBaseWorkload</a>&lt;ShapeQueueDescriptor&gt;</div>
<div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;{</div>
<div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;<span class="keyword">public</span>:</div>
<div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;    <span class="keyword">using</span> <a class="code" href="classarmnn_1_1_ref_base_workload.xhtml">RefBaseWorkload&lt;ShapeQueueDescriptor&gt;::RefBaseWorkload</a>;</div>
<div class="line"><a name="l00020"></a><span class="lineno"><a class="line" href="structarmnn_1_1_ref_shape_workload.xhtml#a9b5a391ab2d035e1e4f59251cd8e2446">   20</a></span>&#160;    <span class="keyword">virtual</span> <span class="keywordtype">void</span> <a class="code" href="structarmnn_1_1_ref_shape_workload.xhtml#a9b5a391ab2d035e1e4f59251cd8e2446">Execute</a>()<span class="keyword"> const override</span></div>
<div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;<span class="keyword">    </span>{</div>
<div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;        <a class="code" href="structarmnn_1_1_ref_shape_workload.xhtml#a9b5a391ab2d035e1e4f59251cd8e2446">Execute</a>(<a class="code" href="classarmnn_1_1_base_workload.xhtml#afb8d2c8817c75de9d01a4c0e0d5c160b">m_Data</a>.<a class="code" href="structarmnn_1_1_queue_descriptor.xhtml#a4b50e46a6810018f3edecfb68b2a76b3">m_Inputs</a>, <a class="code" href="classarmnn_1_1_base_workload.xhtml#afb8d2c8817c75de9d01a4c0e0d5c160b">m_Data</a>.<a class="code" href="structarmnn_1_1_queue_descriptor.xhtml#a6abd491bb99ffe88bd472c1ae5a1ed1a">m_Outputs</a>);</div>
<div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;    }</div>
<div class="line"><a name="l00024"></a><span class="lineno"><a class="line" href="structarmnn_1_1_ref_shape_workload.xhtml#ae1c43d025fc90382d7aff7a500937e2c">   24</a></span>&#160;    <span class="keywordtype">void</span> <a class="code" href="structarmnn_1_1_ref_shape_workload.xhtml#ae1c43d025fc90382d7aff7a500937e2c">ExecuteAsync</a>(<a class="code" href="structarmnn_1_1experimental_1_1_execution_data.xhtml">ExecutionData</a>&amp; executionData)<span class="keyword">  override</span></div>
<div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;<span class="keyword">    </span>{</div>
<div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;        <a class="code" href="structarmnn_1_1experimental_1_1_working_mem_descriptor.xhtml">WorkingMemDescriptor</a>* workingMemDescriptor = <span class="keyword">static_cast&lt;</span><a class="code" href="structarmnn_1_1experimental_1_1_working_mem_descriptor.xhtml">WorkingMemDescriptor</a>*<span class="keyword">&gt;</span>(executionData.<a class="code" href="structarmnn_1_1experimental_1_1_execution_data.xhtml#ad2b382076f26f48cd44783cfca2e3642">m_Data</a>);</div>
<div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;    <a class="code" href="structarmnn_1_1_ref_shape_workload.xhtml#a9b5a391ab2d035e1e4f59251cd8e2446">Execute</a>(workingMemDescriptor-&gt;<a class="code" href="structarmnn_1_1experimental_1_1_working_mem_descriptor.xhtml#a4b50e46a6810018f3edecfb68b2a76b3">m_Inputs</a>, workingMemDescriptor-&gt;<a class="code" href="structarmnn_1_1experimental_1_1_working_mem_descriptor.xhtml#a6abd491bb99ffe88bd472c1ae5a1ed1a">m_Outputs</a>);</div>
<div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;    }</div>
<div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160; </div>
<div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;<span class="keyword">private</span>:</div>
<div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;    <span class="keywordtype">void</span> <a class="code" href="structarmnn_1_1_ref_shape_workload.xhtml#a9b5a391ab2d035e1e4f59251cd8e2446">Execute</a>(std::vector&lt;ITensorHandle*&gt; inputs, std::vector&lt;ITensorHandle*&gt; outputs)<span class="keyword"> const</span></div>
<div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;<span class="keyword">    </span>{</div>
<div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;        <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_shape.xhtml">TensorShape</a> <a class="code" href="namespacearmnn.xhtml#a56943a0946e5f15e5e58054b8e7a04a4a880c1273b27d27cfc82004c3a4b205c9">Shape</a> = <a class="code" href="namespacearmnn.xhtml#aa815fde54f6d8e8aa5b4f0301cf4178b">GetTensorInfo</a>(inputs[0]).<a class="code" href="classarmnn_1_1_tensor_info.xhtml#a8b5d0f8a24e9d9238f412260a552acf8">GetShape</a>();</div>
<div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160; </div>
<div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;        <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a>&amp; outputInfo = <a class="code" href="namespacearmnn.xhtml#aa815fde54f6d8e8aa5b4f0301cf4178b">GetTensorInfo</a>(outputs[0]);</div>
<div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160; </div>
<div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;        <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> numBytes =</div>
<div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;            <a class="code" href="namespacearmnn.xhtml#aa815fde54f6d8e8aa5b4f0301cf4178b">GetTensorInfo</a>(inputs[0]).<a class="code" href="classarmnn_1_1_tensor_info.xhtml#a157e27d41e9f6b21f0d3c025fa47dc24">GetNumDimensions</a>() * <a class="code" href="namespacearmnn.xhtml#aa02b9e06fb20fa3c13da0427e6ee5ab2">GetDataTypeSize</a>(outputInfo.<a class="code" href="classarmnn_1_1_tensor_info.xhtml#aea909c7327109228ef618d459015def3">GetDataType</a>());</div>
<div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160; </div>
<div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;        std::memcpy(outputs[0]-&gt;<a class="code" href="namespacearmnn.xhtml#a56943a0946e5f15e5e58054b8e7a04a4a46f3ea056caa3126b91f3f70beea068c">Map</a>(), &amp;Shape, numBytes);</div>
<div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;        outputs[0]-&gt;Unmap();</div>
<div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;    }</div>
<div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;};</div>
<div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160; </div>
<div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;} <span class="comment">//namespace armnn</span></div>
<div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160; </div>
<div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160; </div>
<div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160; </div>
<div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160; </div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<div class="ttc" id="anamespacearmnn_xhtml_aa815fde54f6d8e8aa5b4f0301cf4178b"><div class="ttname"><a href="namespacearmnn.xhtml#aa815fde54f6d8e8aa5b4f0301cf4178b">armnn::GetTensorInfo</a></div><div class="ttdeci">const TensorInfo &amp; GetTensorInfo(const ITensorHandle *tensorHandle)</div><div class="ttdoc">float32 helpers</div><div class="ttdef"><b>Definition:</b> <a href="_ref_workload_utils_8hpp_source.xhtml#l00027">RefWorkloadUtils.hpp:27</a></div></div>
<div class="ttc" id="aclassarmnn_1_1_ref_base_workload_xhtml"><div class="ttname"><a href="classarmnn_1_1_ref_base_workload.xhtml">armnn::RefBaseWorkload</a></div><div class="ttdef"><b>Definition:</b> <a href="_ref_base_workload_8hpp_source.xhtml#l00013">RefBaseWorkload.hpp:13</a></div></div>
<div class="ttc" id="anamespacearmnn_xhtml_a56943a0946e5f15e5e58054b8e7a04a4a46f3ea056caa3126b91f3f70beea068c"><div class="ttname"><a href="namespacearmnn.xhtml#a56943a0946e5f15e5e58054b8e7a04a4a46f3ea056caa3126b91f3f70beea068c">armnn::LayerType::Map</a></div><div class="ttdeci">@ Map</div></div>
<div class="ttc" id="astructarmnn_1_1experimental_1_1_working_mem_descriptor_xhtml_a4b50e46a6810018f3edecfb68b2a76b3"><div class="ttname"><a href="structarmnn_1_1experimental_1_1_working_mem_descriptor.xhtml#a4b50e46a6810018f3edecfb68b2a76b3">armnn::experimental::WorkingMemDescriptor::m_Inputs</a></div><div class="ttdeci">std::vector&lt; ITensorHandle * &gt; m_Inputs</div><div class="ttdef"><b>Definition:</b> <a href="_working_mem_descriptor_8hpp_source.xhtml#l00020">WorkingMemDescriptor.hpp:20</a></div></div>
<div class="ttc" id="astructarmnn_1_1experimental_1_1_execution_data_xhtml"><div class="ttname"><a href="structarmnn_1_1experimental_1_1_execution_data.xhtml">armnn::experimental::ExecutionData</a></div><div class="ttdef"><b>Definition:</b> <a href="_execution_data_8hpp_source.xhtml#l00014">ExecutionData.hpp:14</a></div></div>
<div class="ttc" id="anamespacearmnn_xhtml_a56943a0946e5f15e5e58054b8e7a04a4a880c1273b27d27cfc82004c3a4b205c9"><div class="ttname"><a href="namespacearmnn.xhtml#a56943a0946e5f15e5e58054b8e7a04a4a880c1273b27d27cfc82004c3a4b205c9">armnn::LayerType::Shape</a></div><div class="ttdeci">@ Shape</div></div>
<div class="ttc" id="astructarmnn_1_1experimental_1_1_execution_data_xhtml_ad2b382076f26f48cd44783cfca2e3642"><div class="ttname"><a href="structarmnn_1_1experimental_1_1_execution_data.xhtml#ad2b382076f26f48cd44783cfca2e3642">armnn::experimental::ExecutionData::m_Data</a></div><div class="ttdeci">void * m_Data</div><div class="ttdef"><b>Definition:</b> <a href="_execution_data_8hpp_source.xhtml#l00016">ExecutionData.hpp:16</a></div></div>
<div class="ttc" id="astructarmnn_1_1experimental_1_1_working_mem_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1experimental_1_1_working_mem_descriptor.xhtml">armnn::experimental::WorkingMemDescriptor</a></div><div class="ttdef"><b>Definition:</b> <a href="_working_mem_descriptor_8hpp_source.xhtml#l00018">WorkingMemDescriptor.hpp:18</a></div></div>
<div class="ttc" id="aclassarmnn_1_1_base_workload_xhtml_afb8d2c8817c75de9d01a4c0e0d5c160b"><div class="ttname"><a href="classarmnn_1_1_base_workload.xhtml#afb8d2c8817c75de9d01a4c0e0d5c160b">armnn::BaseWorkload&lt; ShapeQueueDescriptor &gt;::m_Data</a></div><div class="ttdeci">ShapeQueueDescriptor m_Data</div><div class="ttdef"><b>Definition:</b> <a href="_workload_8hpp_source.xhtml#l00083">Workload.hpp:83</a></div></div>
<div class="ttc" id="astructarmnn_1_1_ref_shape_workload_xhtml_a9b5a391ab2d035e1e4f59251cd8e2446"><div class="ttname"><a href="structarmnn_1_1_ref_shape_workload.xhtml#a9b5a391ab2d035e1e4f59251cd8e2446">armnn::RefShapeWorkload::Execute</a></div><div class="ttdeci">virtual void Execute() const override</div><div class="ttdef"><b>Definition:</b> <a href="_ref_shape_workload_8hpp_source.xhtml#l00020">RefShapeWorkload.hpp:20</a></div></div>
<div class="ttc" id="a_ref_base_workload_8hpp_xhtml"><div class="ttname"><a href="_ref_base_workload_8hpp.xhtml">RefBaseWorkload.hpp</a></div></div>
<div class="ttc" id="anamespacearmnn_xhtml_aa02b9e06fb20fa3c13da0427e6ee5ab2"><div class="ttname"><a href="namespacearmnn.xhtml#aa02b9e06fb20fa3c13da0427e6ee5ab2">armnn::GetDataTypeSize</a></div><div class="ttdeci">constexpr unsigned int GetDataTypeSize(DataType dataType)</div><div class="ttdef"><b>Definition:</b> <a href="_types_utils_8hpp_source.xhtml#l00169">TypesUtils.hpp:169</a></div></div>
<div class="ttc" id="anamespacearmnn_xhtml"><div class="ttname"><a href="namespacearmnn.xhtml">armnn</a></div><div class="ttdoc">Copyright (c) 2021 ARM Limited and Contributors.</div><div class="ttdef"><b>Definition:</b> <a href="01__00__quick__start_8dox_source.xhtml#l00006">01_00_quick_start.dox:6</a></div></div>
<div class="ttc" id="aclassarmnn_1_1_tensor_shape_xhtml"><div class="ttname"><a href="classarmnn_1_1_tensor_shape.xhtml">armnn::TensorShape</a></div><div class="ttdef"><b>Definition:</b> <a href="_tensor_8hpp_source.xhtml#l00020">Tensor.hpp:20</a></div></div>
<div class="ttc" id="aclassarmnn_1_1_tensor_info_xhtml_a157e27d41e9f6b21f0d3c025fa47dc24"><div class="ttname"><a href="classarmnn_1_1_tensor_info.xhtml#a157e27d41e9f6b21f0d3c025fa47dc24">armnn::TensorInfo::GetNumDimensions</a></div><div class="ttdeci">unsigned int GetNumDimensions() const</div><div class="ttdef"><b>Definition:</b> <a href="_tensor_8hpp_source.xhtml#l00195">Tensor.hpp:195</a></div></div>
<div class="ttc" id="a_ref_workload_utils_8hpp_xhtml"><div class="ttname"><a href="_ref_workload_utils_8hpp.xhtml">RefWorkloadUtils.hpp</a></div></div>
<div class="ttc" id="aclassarmnn_1_1_tensor_info_xhtml"><div class="ttname"><a href="classarmnn_1_1_tensor_info.xhtml">armnn::TensorInfo</a></div><div class="ttdef"><b>Definition:</b> <a href="_tensor_8hpp_source.xhtml#l00152">Tensor.hpp:152</a></div></div>
<div class="ttc" id="astructarmnn_1_1_ref_shape_workload_xhtml"><div class="ttname"><a href="structarmnn_1_1_ref_shape_workload.xhtml">armnn::RefShapeWorkload</a></div><div class="ttdef"><b>Definition:</b> <a href="_ref_shape_workload_8hpp_source.xhtml#l00016">RefShapeWorkload.hpp:16</a></div></div>
<div class="ttc" id="astructarmnn_1_1_ref_shape_workload_xhtml_ae1c43d025fc90382d7aff7a500937e2c"><div class="ttname"><a href="structarmnn_1_1_ref_shape_workload.xhtml#ae1c43d025fc90382d7aff7a500937e2c">armnn::RefShapeWorkload::ExecuteAsync</a></div><div class="ttdeci">void ExecuteAsync(ExecutionData &amp;executionData) override</div><div class="ttdef"><b>Definition:</b> <a href="_ref_shape_workload_8hpp_source.xhtml#l00024">RefShapeWorkload.hpp:24</a></div></div>
<div class="ttc" id="aclassarmnn_1_1_tensor_info_xhtml_a8b5d0f8a24e9d9238f412260a552acf8"><div class="ttname"><a href="classarmnn_1_1_tensor_info.xhtml#a8b5d0f8a24e9d9238f412260a552acf8">armnn::TensorInfo::GetShape</a></div><div class="ttdeci">const TensorShape &amp; GetShape() const</div><div class="ttdef"><b>Definition:</b> <a href="_tensor_8hpp_source.xhtml#l00191">Tensor.hpp:191</a></div></div>
<div class="ttc" id="astructarmnn_1_1experimental_1_1_working_mem_descriptor_xhtml_a6abd491bb99ffe88bd472c1ae5a1ed1a"><div class="ttname"><a href="structarmnn_1_1experimental_1_1_working_mem_descriptor.xhtml#a6abd491bb99ffe88bd472c1ae5a1ed1a">armnn::experimental::WorkingMemDescriptor::m_Outputs</a></div><div class="ttdeci">std::vector&lt; ITensorHandle * &gt; m_Outputs</div><div class="ttdef"><b>Definition:</b> <a href="_working_mem_descriptor_8hpp_source.xhtml#l00021">WorkingMemDescriptor.hpp:21</a></div></div>
<div class="ttc" id="astructarmnn_1_1_queue_descriptor_xhtml_a6abd491bb99ffe88bd472c1ae5a1ed1a"><div class="ttname"><a href="structarmnn_1_1_queue_descriptor.xhtml#a6abd491bb99ffe88bd472c1ae5a1ed1a">armnn::QueueDescriptor::m_Outputs</a></div><div class="ttdeci">std::vector&lt; ITensorHandle * &gt; m_Outputs</div><div class="ttdef"><b>Definition:</b> <a href="_workload_data_8hpp_source.xhtml#l00027">WorkloadData.hpp:27</a></div></div>
<div class="ttc" id="a_workload_data_8hpp_xhtml"><div class="ttname"><a href="_workload_data_8hpp.xhtml">WorkloadData.hpp</a></div></div>
<div class="ttc" id="aclassarmnn_1_1_tensor_info_xhtml_aea909c7327109228ef618d459015def3"><div class="ttname"><a href="classarmnn_1_1_tensor_info.xhtml#aea909c7327109228ef618d459015def3">armnn::TensorInfo::GetDataType</a></div><div class="ttdeci">DataType GetDataType() const</div><div class="ttdef"><b>Definition:</b> <a href="_tensor_8hpp_source.xhtml#l00198">Tensor.hpp:198</a></div></div>
<div class="ttc" id="astructarmnn_1_1_queue_descriptor_xhtml_a4b50e46a6810018f3edecfb68b2a76b3"><div class="ttname"><a href="structarmnn_1_1_queue_descriptor.xhtml#a4b50e46a6810018f3edecfb68b2a76b3">armnn::QueueDescriptor::m_Inputs</a></div><div class="ttdeci">std::vector&lt; ITensorHandle * &gt; m_Inputs</div><div class="ttdef"><b>Definition:</b> <a href="_workload_data_8hpp_source.xhtml#l00026">WorkloadData.hpp:26</a></div></div>
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="dir_68267d1309a1af8e8297ef4c3efbcdba.xhtml">src</a></li><li class="navelem"><a class="el" href="dir_0f3cdec46afbc61a1ded8e1687c9c9a0.xhtml">backends</a></li><li class="navelem"><a class="el" href="dir_efae4012d0e357ebeaba7d02491d70e5.xhtml">reference</a></li><li class="navelem"><a class="el" href="dir_d2f3b8e2e64df3181ebe92efcc0a3012.xhtml">workloads</a></li><li class="navelem"><a class="el" href="_ref_shape_workload_8hpp.xhtml">RefShapeWorkload.hpp</a></li>
    <li class="footer">Generated on Thu May 18 2023 10:35:43 for ArmNN by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.17 </li>
  </ul>
</div>
</body>
</html>
