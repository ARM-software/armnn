<!-- Copyright (c) 2020 ARM Limited. -->
<!--                                 -->
<!-- SPDX-License-Identifier: MIT    -->
<!--                                 -->
<!-- HTML header for doxygen 1.8.13-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.13"/>
<meta name="robots" content="NOINDEX, NOFOLLOW" />
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>ArmNN: TestQuantizedLstmLayerVisitor Class Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script><script type="text/javascript" src="http://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="stylesheet.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <img alt="ArmNN" src="Arm_NN_horizontal_blue.png" style="max-width: 10rem; margin-top: .5rem; margin-left 10px"/>
  <td style="padding-left: 0.5em;">
   <div id="projectname">
   &#160;<span id="projectnumber">22.08</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.13 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
$(document).ready(function(){initNavTree('classarmnn_1_1_test_quantized_lstm_layer_visitor.xhtml','');});
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="summary">
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="#pro-methods">Protected Member Functions</a> &#124;
<a href="classarmnn_1_1_test_quantized_lstm_layer_visitor-members.xhtml">List of all members</a>  </div>
  <div class="headertitle">
<div class="title">TestQuantizedLstmLayerVisitor Class Reference</div>  </div>
</div><!--header-->
<div class="contents">

<p><code>#include &lt;<a class="el" href="_const_tensor_layer_visitor_8hpp_source.xhtml">ConstTensorLayerVisitor.hpp</a>&gt;</code></p>
<div class="dynheader">
Inheritance diagram for TestQuantizedLstmLayerVisitor:</div>
<div class="dyncontent">
 <div class="center">
  <img src="classarmnn_1_1_test_quantized_lstm_layer_visitor.png" usemap="#TestQuantizedLstmLayerVisitor_map" alt=""/>
  <map id="TestQuantizedLstmLayerVisitor_map" name="TestQuantizedLstmLayerVisitor_map">
<area href="classarmnn_1_1_test_layer_visitor.xhtml" alt="TestLayerVisitor" shape="rect" coords="0,112,209,136"/>
<area href="classarmnn_1_1_strategy_base.xhtml" alt="StrategyBase&lt; NoThrowStrategy &gt;" shape="rect" coords="0,56,209,80"/>
<area href="classarmnn_1_1_i_strategy.xhtml" alt="IStrategy" shape="rect" coords="0,0,209,24"/>
</map>
 </div></div>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:a1d72b0f4a1516fc85b2c04789d562392"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_test_quantized_lstm_layer_visitor.xhtml#a1d72b0f4a1516fc85b2c04789d562392">TestQuantizedLstmLayerVisitor</a> (const <a class="el" href="structarmnn_1_1_quantized_lstm_input_params.xhtml">QuantizedLstmInputParams</a> &amp;params, const char *name=nullptr)</td></tr>
<tr class="separator:a1d72b0f4a1516fc85b2c04789d562392"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a49f7f1098adb86fd2197d9aee3924de2"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_test_quantized_lstm_layer_visitor.xhtml#a49f7f1098adb86fd2197d9aee3924de2">ExecuteStrategy</a> (const <a class="el" href="classarmnn_1_1_i_connectable_layer.xhtml">armnn::IConnectableLayer</a> *layer, const <a class="el" href="structarmnn_1_1_base_descriptor.xhtml">armnn::BaseDescriptor</a> &amp;descriptor, const std::vector&lt; <a class="el" href="classarmnn_1_1_const_tensor.xhtml">armnn::ConstTensor</a> &gt; &amp;constants, const char *name, const <a class="el" href="namespacearmnn.xhtml#ab8cf8f9fb6792e654c2d8d8382f6f01b">armnn::LayerBindingId</a> id=0) override</td></tr>
<tr class="separator:a49f7f1098adb86fd2197d9aee3924de2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pub_methods_classarmnn_1_1_test_layer_visitor"><td colspan="2" onclick="javascript:toggleInherit('pub_methods_classarmnn_1_1_test_layer_visitor')"><img src="closed.png" alt="-"/>&#160;Public Member Functions inherited from <a class="el" href="classarmnn_1_1_test_layer_visitor.xhtml">TestLayerVisitor</a></td></tr>
<tr class="memitem:a7bca6e8733a25190cb5b2731d31c195f inherit pub_methods_classarmnn_1_1_test_layer_visitor"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_test_layer_visitor.xhtml#a7bca6e8733a25190cb5b2731d31c195f">TestLayerVisitor</a> (const char *name)</td></tr>
<tr class="separator:a7bca6e8733a25190cb5b2731d31c195f inherit pub_methods_classarmnn_1_1_test_layer_visitor"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pub_methods_classarmnn_1_1_i_strategy"><td colspan="2" onclick="javascript:toggleInherit('pub_methods_classarmnn_1_1_i_strategy')"><img src="closed.png" alt="-"/>&#160;Public Member Functions inherited from <a class="el" href="classarmnn_1_1_i_strategy.xhtml">IStrategy</a></td></tr>
<tr class="memitem:adf2f7effbf860b32e9a4ef2a73f84190 inherit pub_methods_classarmnn_1_1_i_strategy"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_i_strategy.xhtml#adf2f7effbf860b32e9a4ef2a73f84190">FinishStrategy</a> ()</td></tr>
<tr class="separator:adf2f7effbf860b32e9a4ef2a73f84190 inherit pub_methods_classarmnn_1_1_i_strategy"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pro-methods"></a>
Protected Member Functions</h2></td></tr>
<tr class="memitem:adb450ce824515f6b217d3b0eb91ff748"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_test_quantized_lstm_layer_visitor.xhtml#adb450ce824515f6b217d3b0eb91ff748">CheckInputParameters</a> (const <a class="el" href="structarmnn_1_1_quantized_lstm_input_params.xhtml">QuantizedLstmInputParams</a> &amp;params)</td></tr>
<tr class="separator:adb450ce824515f6b217d3b0eb91ff748"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pro_methods_classarmnn_1_1_test_layer_visitor"><td colspan="2" onclick="javascript:toggleInherit('pro_methods_classarmnn_1_1_test_layer_visitor')"><img src="closed.png" alt="-"/>&#160;Protected Member Functions inherited from <a class="el" href="classarmnn_1_1_test_layer_visitor.xhtml">TestLayerVisitor</a></td></tr>
<tr class="memitem:a91d4162aba5f047ac80adaf0abf9c804 inherit pro_methods_classarmnn_1_1_test_layer_visitor"><td class="memItemLeft" align="right" valign="top">virtual&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_test_layer_visitor.xhtml#a91d4162aba5f047ac80adaf0abf9c804">~TestLayerVisitor</a> ()</td></tr>
<tr class="separator:a91d4162aba5f047ac80adaf0abf9c804 inherit pro_methods_classarmnn_1_1_test_layer_visitor"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a50d9ed2d05fac25795824c880f0eee6b inherit pro_methods_classarmnn_1_1_test_layer_visitor"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_test_layer_visitor.xhtml#a50d9ed2d05fac25795824c880f0eee6b">CheckLayerName</a> (const char *name)</td></tr>
<tr class="separator:a50d9ed2d05fac25795824c880f0eee6b inherit pro_methods_classarmnn_1_1_test_layer_visitor"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3fb243351836fe2feebd36e7e3869154 inherit pro_methods_classarmnn_1_1_test_layer_visitor"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_test_layer_visitor.xhtml#a3fb243351836fe2feebd36e7e3869154">CheckLayerPointer</a> (const <a class="el" href="classarmnn_1_1_i_connectable_layer.xhtml">IConnectableLayer</a> *layer)</td></tr>
<tr class="separator:a3fb243351836fe2feebd36e7e3869154 inherit pro_methods_classarmnn_1_1_test_layer_visitor"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab49c9a185af94e39ae9cd81aa8ec926c inherit pro_methods_classarmnn_1_1_test_layer_visitor"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_test_layer_visitor.xhtml#ab49c9a185af94e39ae9cd81aa8ec926c">CheckConstTensors</a> (const <a class="el" href="classarmnn_1_1_const_tensor.xhtml">ConstTensor</a> &amp;expected, const <a class="el" href="classarmnn_1_1_const_tensor.xhtml">ConstTensor</a> &amp;actual)</td></tr>
<tr class="separator:ab49c9a185af94e39ae9cd81aa8ec926c inherit pro_methods_classarmnn_1_1_test_layer_visitor"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7737443404804375fd677bc4b7c599be inherit pro_methods_classarmnn_1_1_test_layer_visitor"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_test_layer_visitor.xhtml#a7737443404804375fd677bc4b7c599be">CheckConstTensors</a> (const <a class="el" href="classarmnn_1_1_const_tensor.xhtml">ConstTensor</a> &amp;expected, const <a class="el" href="classarmnn_1_1_const_tensor_handle.xhtml">ConstTensorHandle</a> &amp;actual)</td></tr>
<tr class="separator:a7737443404804375fd677bc4b7c599be inherit pro_methods_classarmnn_1_1_test_layer_visitor"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac45b7720c3156ab1004a904da7d42b44 inherit pro_methods_classarmnn_1_1_test_layer_visitor"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_test_layer_visitor.xhtml#ac45b7720c3156ab1004a904da7d42b44">CheckConstTensorPtrs</a> (const std::string &amp;name, const <a class="el" href="classarmnn_1_1_const_tensor.xhtml">ConstTensor</a> *expected, const <a class="el" href="classarmnn_1_1_const_tensor.xhtml">ConstTensor</a> *actual)</td></tr>
<tr class="separator:ac45b7720c3156ab1004a904da7d42b44 inherit pro_methods_classarmnn_1_1_test_layer_visitor"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a606572552d4609bbb3e9d46c1147f218 inherit pro_methods_classarmnn_1_1_test_layer_visitor"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_test_layer_visitor.xhtml#a606572552d4609bbb3e9d46c1147f218">CheckConstTensorPtrs</a> (const std::string &amp;name, const <a class="el" href="classarmnn_1_1_const_tensor.xhtml">ConstTensor</a> *expected, const std::shared_ptr&lt; <a class="el" href="classarmnn_1_1_const_tensor_handle.xhtml">ConstTensorHandle</a> &gt; actual)</td></tr>
<tr class="separator:a606572552d4609bbb3e9d46c1147f218 inherit pro_methods_classarmnn_1_1_test_layer_visitor"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2d389b5affe2059991cfd9184b8e0b47 inherit pro_methods_classarmnn_1_1_test_layer_visitor"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_test_layer_visitor.xhtml#a2d389b5affe2059991cfd9184b8e0b47">CheckOptionalConstTensors</a> (const <a class="el" href="classarmnn_1_1_optional.xhtml">Optional</a>&lt; <a class="el" href="classarmnn_1_1_const_tensor.xhtml">ConstTensor</a> &gt; &amp;expected, const <a class="el" href="classarmnn_1_1_optional.xhtml">Optional</a>&lt; <a class="el" href="classarmnn_1_1_const_tensor.xhtml">ConstTensor</a> &gt; &amp;actual)</td></tr>
<tr class="separator:a2d389b5affe2059991cfd9184b8e0b47 inherit pro_methods_classarmnn_1_1_test_layer_visitor"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pro_methods_classarmnn_1_1_strategy_base"><td colspan="2" onclick="javascript:toggleInherit('pro_methods_classarmnn_1_1_strategy_base')"><img src="closed.png" alt="-"/>&#160;Protected Member Functions inherited from <a class="el" href="classarmnn_1_1_strategy_base.xhtml">StrategyBase&lt; NoThrowStrategy &gt;</a></td></tr>
<tr class="memitem:ae3168b9deef118b7f6031f6f38fdc781 inherit pro_methods_classarmnn_1_1_strategy_base"><td class="memItemLeft" align="right" valign="top">virtual&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_strategy_base.xhtml#ae3168b9deef118b7f6031f6f38fdc781">~StrategyBase</a> ()</td></tr>
<tr class="separator:ae3168b9deef118b7f6031f6f38fdc781 inherit pro_methods_classarmnn_1_1_strategy_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pro_methods_classarmnn_1_1_i_strategy"><td colspan="2" onclick="javascript:toggleInherit('pro_methods_classarmnn_1_1_i_strategy')"><img src="closed.png" alt="-"/>&#160;Protected Member Functions inherited from <a class="el" href="classarmnn_1_1_i_strategy.xhtml">IStrategy</a></td></tr>
<tr class="memitem:a196ae18353afdcea7f8ab5c4cc7b3a6b inherit pro_methods_classarmnn_1_1_i_strategy"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_i_strategy.xhtml#a196ae18353afdcea7f8ab5c4cc7b3a6b">IStrategy</a> ()</td></tr>
<tr class="separator:a196ae18353afdcea7f8ab5c4cc7b3a6b inherit pro_methods_classarmnn_1_1_i_strategy"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6f538e1051453290c8b8bb61e417bce1 inherit pro_methods_classarmnn_1_1_i_strategy"><td class="memItemLeft" align="right" valign="top">virtual&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_i_strategy.xhtml#a6f538e1051453290c8b8bb61e417bce1">~IStrategy</a> ()</td></tr>
<tr class="separator:a6f538e1051453290c8b8bb61e417bce1 inherit pro_methods_classarmnn_1_1_i_strategy"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="inherited"></a>
Additional Inherited Members</h2></td></tr>
<tr class="inherit_header pro_attribs_classarmnn_1_1_strategy_base"><td colspan="2" onclick="javascript:toggleInherit('pro_attribs_classarmnn_1_1_strategy_base')"><img src="closed.png" alt="-"/>&#160;Protected Attributes inherited from <a class="el" href="classarmnn_1_1_strategy_base.xhtml">StrategyBase&lt; NoThrowStrategy &gt;</a></td></tr>
<tr class="memitem:a9a0391eb40693be520f3092c130c2a57 inherit pro_attribs_classarmnn_1_1_strategy_base"><td class="memItemLeft" align="right" valign="top"><a class="el" href="structarmnn_1_1_no_throw_strategy.xhtml">NoThrowStrategy</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_strategy_base.xhtml#a9a0391eb40693be520f3092c130c2a57">m_DefaultStrategy</a></td></tr>
<tr class="separator:a9a0391eb40693be520f3092c130c2a57 inherit pro_attribs_classarmnn_1_1_strategy_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock">
<p class="definition">Definition at line <a class="el" href="_const_tensor_layer_visitor_8hpp_source.xhtml#l00404">404</a> of file <a class="el" href="_const_tensor_layer_visitor_8hpp_source.xhtml">ConstTensorLayerVisitor.hpp</a>.</p>
</div><h2 class="groupheader">Constructor &amp; Destructor Documentation</h2>
<a id="a1d72b0f4a1516fc85b2c04789d562392"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a1d72b0f4a1516fc85b2c04789d562392">&#9670;&nbsp;</a></span>TestQuantizedLstmLayerVisitor()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarmnn_1_1_test_quantized_lstm_layer_visitor.xhtml">TestQuantizedLstmLayerVisitor</a> </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="structarmnn_1_1_quantized_lstm_input_params.xhtml">QuantizedLstmInputParams</a> &amp;&#160;</td>
          <td class="paramname"><em>params</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>name</em> = <code>nullptr</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">explicit</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_const_tensor_layer_visitor_8hpp_source.xhtml#l00407">407</a> of file <a class="el" href="_const_tensor_layer_visitor_8hpp_source.xhtml">ConstTensorLayerVisitor.hpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00409"></a><span class="lineno">  409</span>&#160;        : <a class="code" href="classarmnn_1_1_test_layer_visitor.xhtml#a7bca6e8733a25190cb5b2731d31c195f">TestLayerVisitor</a>(name)</div><div class="line"><a name="l00410"></a><span class="lineno">  410</span>&#160;        , m_InputParams(params)</div><div class="line"><a name="l00411"></a><span class="lineno">  411</span>&#160;    {}</div><div class="ttc" id="classarmnn_1_1_test_layer_visitor_xhtml_a7bca6e8733a25190cb5b2731d31c195f"><div class="ttname"><a href="classarmnn_1_1_test_layer_visitor.xhtml#a7bca6e8733a25190cb5b2731d31c195f">armnn::TestLayerVisitor::TestLayerVisitor</a></div><div class="ttdeci">TestLayerVisitor(const char *name)</div><div class="ttdef"><b>Definition:</b> <a href="_test_layer_visitor_8hpp_source.xhtml#l00041">TestLayerVisitor.hpp:41</a></div></div>
</div><!-- fragment -->
</div>
</div>
<h2 class="groupheader">Member Function Documentation</h2>
<a id="adb450ce824515f6b217d3b0eb91ff748"></a>
<h2 class="memtitle"><span class="permalink"><a href="#adb450ce824515f6b217d3b0eb91ff748">&#9670;&nbsp;</a></span>CheckInputParameters()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void CheckInputParameters </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="structarmnn_1_1_quantized_lstm_input_params.xhtml">QuantizedLstmInputParams</a> &amp;&#160;</td>
          <td class="paramname"><em>params</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_const_tensor_layer_visitor_8cpp_source.xhtml#l00070">70</a> of file <a class="el" href="_const_tensor_layer_visitor_8cpp_source.xhtml">ConstTensorLayerVisitor.cpp</a>.</p>

<p class="reference">References <a class="el" href="_test_layer_visitor_8cpp_source.xhtml#l00090">TestLayerVisitor::CheckConstTensorPtrs()</a>, <a class="el" href="_quantized_lstm_params_8hpp_source.xhtml#l00045">QuantizedLstmInputParams::m_CellBias</a>, <a class="el" href="_quantized_lstm_params_8hpp_source.xhtml#l00044">QuantizedLstmInputParams::m_ForgetGateBias</a>, <a class="el" href="_quantized_lstm_params_8hpp_source.xhtml#l00043">QuantizedLstmInputParams::m_InputGateBias</a>, <a class="el" href="_quantized_lstm_params_8hpp_source.xhtml#l00035">QuantizedLstmInputParams::m_InputToCellWeights</a>, <a class="el" href="_quantized_lstm_params_8hpp_source.xhtml#l00034">QuantizedLstmInputParams::m_InputToForgetWeights</a>, <a class="el" href="_quantized_lstm_params_8hpp_source.xhtml#l00033">QuantizedLstmInputParams::m_InputToInputWeights</a>, <a class="el" href="_quantized_lstm_params_8hpp_source.xhtml#l00036">QuantizedLstmInputParams::m_InputToOutputWeights</a>, <a class="el" href="_quantized_lstm_params_8hpp_source.xhtml#l00046">QuantizedLstmInputParams::m_OutputGateBias</a>, <a class="el" href="_quantized_lstm_params_8hpp_source.xhtml#l00040">QuantizedLstmInputParams::m_RecurrentToCellWeights</a>, <a class="el" href="_quantized_lstm_params_8hpp_source.xhtml#l00039">QuantizedLstmInputParams::m_RecurrentToForgetWeights</a>, <a class="el" href="_quantized_lstm_params_8hpp_source.xhtml#l00038">QuantizedLstmInputParams::m_RecurrentToInputWeights</a>, and <a class="el" href="_quantized_lstm_params_8hpp_source.xhtml#l00041">QuantizedLstmInputParams::m_RecurrentToOutputWeights</a>.</p>
<div class="fragment"><div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;{</div><div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;    <a class="code" href="classarmnn_1_1_test_layer_visitor.xhtml#ac45b7720c3156ab1004a904da7d42b44">CheckConstTensorPtrs</a>(<span class="stringliteral">&quot;InputToInputWeights&quot;</span>,</div><div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;                         m_InputParams.<a class="code" href="structarmnn_1_1_quantized_lstm_input_params.xhtml#affcee5f4ab5994a21bee3b78b4e43de3">m_InputToInputWeights</a>,</div><div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;                         inputParams.m_InputToInputWeights);</div><div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;</div><div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;    <a class="code" href="classarmnn_1_1_test_layer_visitor.xhtml#ac45b7720c3156ab1004a904da7d42b44">CheckConstTensorPtrs</a>(<span class="stringliteral">&quot;InputToForgetWeights&quot;</span>,</div><div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;                         m_InputParams.<a class="code" href="structarmnn_1_1_quantized_lstm_input_params.xhtml#a31da1ead6794dd64571afdd0b6efc771">m_InputToForgetWeights</a>,</div><div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;                         inputParams.m_InputToForgetWeights);</div><div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;</div><div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;    <a class="code" href="classarmnn_1_1_test_layer_visitor.xhtml#ac45b7720c3156ab1004a904da7d42b44">CheckConstTensorPtrs</a>(<span class="stringliteral">&quot;InputToCellWeights&quot;</span>,</div><div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;                         m_InputParams.<a class="code" href="structarmnn_1_1_quantized_lstm_input_params.xhtml#a49e11acda22742cbaf6f1b259ead0d84">m_InputToCellWeights</a>,</div><div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;                         inputParams.m_InputToCellWeights);</div><div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;</div><div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;    <a class="code" href="classarmnn_1_1_test_layer_visitor.xhtml#ac45b7720c3156ab1004a904da7d42b44">CheckConstTensorPtrs</a>(<span class="stringliteral">&quot;InputToOutputWeights&quot;</span>,</div><div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;                         m_InputParams.<a class="code" href="structarmnn_1_1_quantized_lstm_input_params.xhtml#a6e30c7b3451da3ea9cf4259fb602e6e6">m_InputToOutputWeights</a>,</div><div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;                         inputParams.m_InputToOutputWeights);</div><div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;</div><div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;    <a class="code" href="classarmnn_1_1_test_layer_visitor.xhtml#ac45b7720c3156ab1004a904da7d42b44">CheckConstTensorPtrs</a>(<span class="stringliteral">&quot;RecurrentToInputWeights&quot;</span>,</div><div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;                         m_InputParams.<a class="code" href="structarmnn_1_1_quantized_lstm_input_params.xhtml#a435d3651482bbfcc11263b4e4e0c900f">m_RecurrentToInputWeights</a>,</div><div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;                         inputParams.m_RecurrentToInputWeights);</div><div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;</div><div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;    <a class="code" href="classarmnn_1_1_test_layer_visitor.xhtml#ac45b7720c3156ab1004a904da7d42b44">CheckConstTensorPtrs</a>(<span class="stringliteral">&quot;RecurrentToForgetWeights&quot;</span>,</div><div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;                         m_InputParams.<a class="code" href="structarmnn_1_1_quantized_lstm_input_params.xhtml#ae83131e16df1cace69395a5f99bc5ecb">m_RecurrentToForgetWeights</a>,</div><div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;                         inputParams.m_RecurrentToForgetWeights);</div><div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;</div><div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;    <a class="code" href="classarmnn_1_1_test_layer_visitor.xhtml#ac45b7720c3156ab1004a904da7d42b44">CheckConstTensorPtrs</a>(<span class="stringliteral">&quot;RecurrentToCellWeights&quot;</span>,</div><div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;                         m_InputParams.<a class="code" href="structarmnn_1_1_quantized_lstm_input_params.xhtml#a1759754ccb88ecc9af44f3aae6e244ee">m_RecurrentToCellWeights</a>,</div><div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;                         inputParams.m_RecurrentToCellWeights);</div><div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;</div><div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;    <a class="code" href="classarmnn_1_1_test_layer_visitor.xhtml#ac45b7720c3156ab1004a904da7d42b44">CheckConstTensorPtrs</a>(<span class="stringliteral">&quot;RecurrentToOutputWeights&quot;</span>,</div><div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;                         m_InputParams.<a class="code" href="structarmnn_1_1_quantized_lstm_input_params.xhtml#a56b81ca8ba4b4937e0787e4951f043fc">m_RecurrentToOutputWeights</a>,</div><div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;                         inputParams.m_RecurrentToOutputWeights);</div><div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;</div><div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;    <a class="code" href="classarmnn_1_1_test_layer_visitor.xhtml#ac45b7720c3156ab1004a904da7d42b44">CheckConstTensorPtrs</a>(<span class="stringliteral">&quot;InputGateBias&quot;</span>,  m_InputParams.<a class="code" href="structarmnn_1_1_quantized_lstm_input_params.xhtml#a9e081a9b94defb30d1558dc912507e0e">m_InputGateBias</a>,  inputParams.m_InputGateBias);</div><div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;    <a class="code" href="classarmnn_1_1_test_layer_visitor.xhtml#ac45b7720c3156ab1004a904da7d42b44">CheckConstTensorPtrs</a>(<span class="stringliteral">&quot;ForgetGateBias&quot;</span>, m_InputParams.<a class="code" href="structarmnn_1_1_quantized_lstm_input_params.xhtml#ace7a1f1f1041b412b7d8ef82b95ff352">m_ForgetGateBias</a>, inputParams.m_ForgetGateBias);</div><div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;    <a class="code" href="classarmnn_1_1_test_layer_visitor.xhtml#ac45b7720c3156ab1004a904da7d42b44">CheckConstTensorPtrs</a>(<span class="stringliteral">&quot;CellBias&quot;</span>,       m_InputParams.<a class="code" href="structarmnn_1_1_quantized_lstm_input_params.xhtml#a4a9d678146f572808a361dbdc5489f38">m_CellBias</a>,       inputParams.m_CellBias);</div><div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;    <a class="code" href="classarmnn_1_1_test_layer_visitor.xhtml#ac45b7720c3156ab1004a904da7d42b44">CheckConstTensorPtrs</a>(<span class="stringliteral">&quot;OutputGateBias&quot;</span>, m_InputParams.<a class="code" href="structarmnn_1_1_quantized_lstm_input_params.xhtml#a8c0f6d48705f40c5590dde09be262222">m_OutputGateBias</a>, inputParams.m_OutputGateBias);</div><div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;}</div><div class="ttc" id="structarmnn_1_1_quantized_lstm_input_params_xhtml_a49e11acda22742cbaf6f1b259ead0d84"><div class="ttname"><a href="structarmnn_1_1_quantized_lstm_input_params.xhtml#a49e11acda22742cbaf6f1b259ead0d84">armnn::QuantizedLstmInputParams::m_InputToCellWeights</a></div><div class="ttdeci">const ConstTensor * m_InputToCellWeights</div><div class="ttdef"><b>Definition:</b> <a href="_quantized_lstm_params_8hpp_source.xhtml#l00035">QuantizedLstmParams.hpp:35</a></div></div>
<div class="ttc" id="structarmnn_1_1_quantized_lstm_input_params_xhtml_a4a9d678146f572808a361dbdc5489f38"><div class="ttname"><a href="structarmnn_1_1_quantized_lstm_input_params.xhtml#a4a9d678146f572808a361dbdc5489f38">armnn::QuantizedLstmInputParams::m_CellBias</a></div><div class="ttdeci">const ConstTensor * m_CellBias</div><div class="ttdef"><b>Definition:</b> <a href="_quantized_lstm_params_8hpp_source.xhtml#l00045">QuantizedLstmParams.hpp:45</a></div></div>
<div class="ttc" id="structarmnn_1_1_quantized_lstm_input_params_xhtml_a56b81ca8ba4b4937e0787e4951f043fc"><div class="ttname"><a href="structarmnn_1_1_quantized_lstm_input_params.xhtml#a56b81ca8ba4b4937e0787e4951f043fc">armnn::QuantizedLstmInputParams::m_RecurrentToOutputWeights</a></div><div class="ttdeci">const ConstTensor * m_RecurrentToOutputWeights</div><div class="ttdef"><b>Definition:</b> <a href="_quantized_lstm_params_8hpp_source.xhtml#l00041">QuantizedLstmParams.hpp:41</a></div></div>
<div class="ttc" id="structarmnn_1_1_quantized_lstm_input_params_xhtml_ae83131e16df1cace69395a5f99bc5ecb"><div class="ttname"><a href="structarmnn_1_1_quantized_lstm_input_params.xhtml#ae83131e16df1cace69395a5f99bc5ecb">armnn::QuantizedLstmInputParams::m_RecurrentToForgetWeights</a></div><div class="ttdeci">const ConstTensor * m_RecurrentToForgetWeights</div><div class="ttdef"><b>Definition:</b> <a href="_quantized_lstm_params_8hpp_source.xhtml#l00039">QuantizedLstmParams.hpp:39</a></div></div>
<div class="ttc" id="structarmnn_1_1_quantized_lstm_input_params_xhtml_ace7a1f1f1041b412b7d8ef82b95ff352"><div class="ttname"><a href="structarmnn_1_1_quantized_lstm_input_params.xhtml#ace7a1f1f1041b412b7d8ef82b95ff352">armnn::QuantizedLstmInputParams::m_ForgetGateBias</a></div><div class="ttdeci">const ConstTensor * m_ForgetGateBias</div><div class="ttdef"><b>Definition:</b> <a href="_quantized_lstm_params_8hpp_source.xhtml#l00044">QuantizedLstmParams.hpp:44</a></div></div>
<div class="ttc" id="structarmnn_1_1_quantized_lstm_input_params_xhtml_a9e081a9b94defb30d1558dc912507e0e"><div class="ttname"><a href="structarmnn_1_1_quantized_lstm_input_params.xhtml#a9e081a9b94defb30d1558dc912507e0e">armnn::QuantizedLstmInputParams::m_InputGateBias</a></div><div class="ttdeci">const ConstTensor * m_InputGateBias</div><div class="ttdef"><b>Definition:</b> <a href="_quantized_lstm_params_8hpp_source.xhtml#l00043">QuantizedLstmParams.hpp:43</a></div></div>
<div class="ttc" id="structarmnn_1_1_quantized_lstm_input_params_xhtml_affcee5f4ab5994a21bee3b78b4e43de3"><div class="ttname"><a href="structarmnn_1_1_quantized_lstm_input_params.xhtml#affcee5f4ab5994a21bee3b78b4e43de3">armnn::QuantizedLstmInputParams::m_InputToInputWeights</a></div><div class="ttdeci">const ConstTensor * m_InputToInputWeights</div><div class="ttdef"><b>Definition:</b> <a href="_quantized_lstm_params_8hpp_source.xhtml#l00033">QuantizedLstmParams.hpp:33</a></div></div>
<div class="ttc" id="structarmnn_1_1_quantized_lstm_input_params_xhtml_a31da1ead6794dd64571afdd0b6efc771"><div class="ttname"><a href="structarmnn_1_1_quantized_lstm_input_params.xhtml#a31da1ead6794dd64571afdd0b6efc771">armnn::QuantizedLstmInputParams::m_InputToForgetWeights</a></div><div class="ttdeci">const ConstTensor * m_InputToForgetWeights</div><div class="ttdef"><b>Definition:</b> <a href="_quantized_lstm_params_8hpp_source.xhtml#l00034">QuantizedLstmParams.hpp:34</a></div></div>
<div class="ttc" id="structarmnn_1_1_quantized_lstm_input_params_xhtml_a8c0f6d48705f40c5590dde09be262222"><div class="ttname"><a href="structarmnn_1_1_quantized_lstm_input_params.xhtml#a8c0f6d48705f40c5590dde09be262222">armnn::QuantizedLstmInputParams::m_OutputGateBias</a></div><div class="ttdeci">const ConstTensor * m_OutputGateBias</div><div class="ttdef"><b>Definition:</b> <a href="_quantized_lstm_params_8hpp_source.xhtml#l00046">QuantizedLstmParams.hpp:46</a></div></div>
<div class="ttc" id="structarmnn_1_1_quantized_lstm_input_params_xhtml_a435d3651482bbfcc11263b4e4e0c900f"><div class="ttname"><a href="structarmnn_1_1_quantized_lstm_input_params.xhtml#a435d3651482bbfcc11263b4e4e0c900f">armnn::QuantizedLstmInputParams::m_RecurrentToInputWeights</a></div><div class="ttdeci">const ConstTensor * m_RecurrentToInputWeights</div><div class="ttdef"><b>Definition:</b> <a href="_quantized_lstm_params_8hpp_source.xhtml#l00038">QuantizedLstmParams.hpp:38</a></div></div>
<div class="ttc" id="classarmnn_1_1_test_layer_visitor_xhtml_ac45b7720c3156ab1004a904da7d42b44"><div class="ttname"><a href="classarmnn_1_1_test_layer_visitor.xhtml#ac45b7720c3156ab1004a904da7d42b44">armnn::TestLayerVisitor::CheckConstTensorPtrs</a></div><div class="ttdeci">void CheckConstTensorPtrs(const std::string &amp;name, const ConstTensor *expected, const ConstTensor *actual)</div><div class="ttdef"><b>Definition:</b> <a href="_test_layer_visitor_8cpp_source.xhtml#l00090">TestLayerVisitor.cpp:90</a></div></div>
<div class="ttc" id="structarmnn_1_1_quantized_lstm_input_params_xhtml_a1759754ccb88ecc9af44f3aae6e244ee"><div class="ttname"><a href="structarmnn_1_1_quantized_lstm_input_params.xhtml#a1759754ccb88ecc9af44f3aae6e244ee">armnn::QuantizedLstmInputParams::m_RecurrentToCellWeights</a></div><div class="ttdeci">const ConstTensor * m_RecurrentToCellWeights</div><div class="ttdef"><b>Definition:</b> <a href="_quantized_lstm_params_8hpp_source.xhtml#l00040">QuantizedLstmParams.hpp:40</a></div></div>
<div class="ttc" id="structarmnn_1_1_quantized_lstm_input_params_xhtml_a6e30c7b3451da3ea9cf4259fb602e6e6"><div class="ttname"><a href="structarmnn_1_1_quantized_lstm_input_params.xhtml#a6e30c7b3451da3ea9cf4259fb602e6e6">armnn::QuantizedLstmInputParams::m_InputToOutputWeights</a></div><div class="ttdeci">const ConstTensor * m_InputToOutputWeights</div><div class="ttdef"><b>Definition:</b> <a href="_quantized_lstm_params_8hpp_source.xhtml#l00036">QuantizedLstmParams.hpp:36</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="a49f7f1098adb86fd2197d9aee3924de2"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a49f7f1098adb86fd2197d9aee3924de2">&#9670;&nbsp;</a></span>ExecuteStrategy()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void ExecuteStrategy </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_i_connectable_layer.xhtml">armnn::IConnectableLayer</a> *&#160;</td>
          <td class="paramname"><em>layer</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="structarmnn_1_1_base_descriptor.xhtml">armnn::BaseDescriptor</a> &amp;&#160;</td>
          <td class="paramname"><em>descriptor</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const std::vector&lt; <a class="el" href="classarmnn_1_1_const_tensor.xhtml">armnn::ConstTensor</a> &gt; &amp;&#160;</td>
          <td class="paramname"><em>constants</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>name</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="namespacearmnn.xhtml#ab8cf8f9fb6792e654c2d8d8382f6f01b">armnn::LayerBindingId</a>&#160;</td>
          <td class="paramname"><em>id</em> = <code>0</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Reimplemented from <a class="el" href="classarmnn_1_1_strategy_base.xhtml#a889a82ed924e0a300c4d98a0333b37ff">StrategyBase&lt; NoThrowStrategy &gt;</a>.</p>

<p class="definition">Definition at line <a class="el" href="_const_tensor_layer_visitor_8hpp_source.xhtml#l00413">413</a> of file <a class="el" href="_const_tensor_layer_visitor_8hpp_source.xhtml">ConstTensorLayerVisitor.hpp</a>.</p>

<p class="reference">References <a class="el" href="_strategy_base_8hpp_source.xhtml#l00022">NoThrowStrategy::Apply()</a>, <a class="el" href="_test_layer_visitor_8cpp_source.xhtml#l00013">TestLayerVisitor::CheckLayerName()</a>, <a class="el" href="_test_layer_visitor_8cpp_source.xhtml#l00029">TestLayerVisitor::CheckLayerPointer()</a>, <a class="el" href="_internal_types_8cpp_source.xhtml#l00013">armnn::GetLayerTypeAsCString()</a>, <a class="el" href="classarmnn_1_1_i_connectable_layer.xhtml#adceb04ae84c524e4d01881e3754a4d59">IConnectableLayer::GetType()</a>, <a class="el" href="_ignore_unused_8hpp_source.xhtml#l00014">armnn::IgnoreUnused()</a>, <a class="el" href="_strategy_base_8hpp_source.xhtml#l00050">StrategyBase&lt; NoThrowStrategy &gt;::m_DefaultStrategy</a>, and <a class="el" href="namespacearmnn.xhtml#a56943a0946e5f15e5e58054b8e7a04a4a890a37ff3bfe123414ba7e6f052b49f3">armnn::QuantizedLstm</a>.</p>
<div class="fragment"><div class="line"><a name="l00418"></a><span class="lineno">  418</span>&#160;    {</div><div class="line"><a name="l00419"></a><span class="lineno">  419</span>&#160;        <a class="code" href="namespacearmnn.xhtml#a44affeeb090c3c6a3062830562672e84">armnn::IgnoreUnused</a>(descriptor, constants, <span class="keywordtype">id</span>);</div><div class="line"><a name="l00420"></a><span class="lineno">  420</span>&#160;        <span class="keywordflow">switch</span> (layer-&gt;<a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml#adceb04ae84c524e4d01881e3754a4d59">GetType</a>())</div><div class="line"><a name="l00421"></a><span class="lineno">  421</span>&#160;        {</div><div class="line"><a name="l00422"></a><span class="lineno">  422</span>&#160;            <span class="keywordflow">case</span> <a class="code" href="namespacearmnn.xhtml#a56943a0946e5f15e5e58054b8e7a04a4a890a37ff3bfe123414ba7e6f052b49f3">armnn::LayerType::QuantizedLstm</a>:</div><div class="line"><a name="l00423"></a><span class="lineno">  423</span>&#160;            {</div><div class="line"><a name="l00424"></a><span class="lineno">  424</span>&#160;                <a class="code" href="classarmnn_1_1_test_layer_visitor.xhtml#a3fb243351836fe2feebd36e7e3869154">CheckLayerPointer</a>(layer);</div><div class="line"><a name="l00425"></a><span class="lineno">  425</span>&#160;                <a class="code" href="classarmnn_1_1_test_layer_visitor.xhtml#a50d9ed2d05fac25795824c880f0eee6b">CheckLayerName</a>(name);</div><div class="line"><a name="l00426"></a><span class="lineno">  426</span>&#160;                <a class="code" href="classarmnn_1_1_test_quantized_lstm_layer_visitor.xhtml#adb450ce824515f6b217d3b0eb91ff748">CheckInputParameters</a>(m_InputParams);</div><div class="line"><a name="l00427"></a><span class="lineno">  427</span>&#160;                <span class="keywordflow">break</span>;</div><div class="line"><a name="l00428"></a><span class="lineno">  428</span>&#160;            }</div><div class="line"><a name="l00429"></a><span class="lineno">  429</span>&#160;            <span class="keywordflow">default</span>:</div><div class="line"><a name="l00430"></a><span class="lineno">  430</span>&#160;            {</div><div class="line"><a name="l00431"></a><span class="lineno">  431</span>&#160;                <a class="code" href="classarmnn_1_1_strategy_base.xhtml#a9a0391eb40693be520f3092c130c2a57">m_DefaultStrategy</a>.<a class="code" href="structarmnn_1_1_no_throw_strategy.xhtml#a2aca18ff985599b0b917abb4292b8a91">Apply</a>(<a class="code" href="namespacearmnn.xhtml#addb6b14dd1b632263ffe77430259a7c4">GetLayerTypeAsCString</a>(layer-&gt;<a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml#adceb04ae84c524e4d01881e3754a4d59">GetType</a>()));</div><div class="line"><a name="l00432"></a><span class="lineno">  432</span>&#160;            }</div><div class="line"><a name="l00433"></a><span class="lineno">  433</span>&#160;        }</div><div class="line"><a name="l00434"></a><span class="lineno">  434</span>&#160;    }</div><div class="ttc" id="classarmnn_1_1_test_layer_visitor_xhtml_a50d9ed2d05fac25795824c880f0eee6b"><div class="ttname"><a href="classarmnn_1_1_test_layer_visitor.xhtml#a50d9ed2d05fac25795824c880f0eee6b">armnn::TestLayerVisitor::CheckLayerName</a></div><div class="ttdeci">void CheckLayerName(const char *name)</div><div class="ttdef"><b>Definition:</b> <a href="_test_layer_visitor_8cpp_source.xhtml#l00013">TestLayerVisitor.cpp:13</a></div></div>
<div class="ttc" id="classarmnn_1_1_test_layer_visitor_xhtml_a3fb243351836fe2feebd36e7e3869154"><div class="ttname"><a href="classarmnn_1_1_test_layer_visitor.xhtml#a3fb243351836fe2feebd36e7e3869154">armnn::TestLayerVisitor::CheckLayerPointer</a></div><div class="ttdeci">void CheckLayerPointer(const IConnectableLayer *layer)</div><div class="ttdef"><b>Definition:</b> <a href="_test_layer_visitor_8cpp_source.xhtml#l00029">TestLayerVisitor.cpp:29</a></div></div>
<div class="ttc" id="namespacearmnn_xhtml_a44affeeb090c3c6a3062830562672e84"><div class="ttname"><a href="namespacearmnn.xhtml#a44affeeb090c3c6a3062830562672e84">armnn::IgnoreUnused</a></div><div class="ttdeci">void IgnoreUnused(Ts &amp;&amp;...)</div><div class="ttdef"><b>Definition:</b> <a href="_ignore_unused_8hpp_source.xhtml#l00014">IgnoreUnused.hpp:14</a></div></div>
<div class="ttc" id="classarmnn_1_1_strategy_base_xhtml_a9a0391eb40693be520f3092c130c2a57"><div class="ttname"><a href="classarmnn_1_1_strategy_base.xhtml#a9a0391eb40693be520f3092c130c2a57">armnn::StrategyBase&lt; NoThrowStrategy &gt;::m_DefaultStrategy</a></div><div class="ttdeci">NoThrowStrategy m_DefaultStrategy</div><div class="ttdef"><b>Definition:</b> <a href="_strategy_base_8hpp_source.xhtml#l00050">StrategyBase.hpp:50</a></div></div>
<div class="ttc" id="structarmnn_1_1_no_throw_strategy_xhtml_a2aca18ff985599b0b917abb4292b8a91"><div class="ttname"><a href="structarmnn_1_1_no_throw_strategy.xhtml#a2aca18ff985599b0b917abb4292b8a91">armnn::NoThrowStrategy::Apply</a></div><div class="ttdeci">void Apply(const std::string &amp;)</div><div class="ttdef"><b>Definition:</b> <a href="_strategy_base_8hpp_source.xhtml#l00022">StrategyBase.hpp:22</a></div></div>
<div class="ttc" id="classarmnn_1_1_i_connectable_layer_xhtml_adceb04ae84c524e4d01881e3754a4d59"><div class="ttname"><a href="classarmnn_1_1_i_connectable_layer.xhtml#adceb04ae84c524e4d01881e3754a4d59">armnn::IConnectableLayer::GetType</a></div><div class="ttdeci">virtual LayerType GetType() const =0</div><div class="ttdoc">Returns the armnn::LayerType of this layer. </div></div>
<div class="ttc" id="classarmnn_1_1_test_quantized_lstm_layer_visitor_xhtml_adb450ce824515f6b217d3b0eb91ff748"><div class="ttname"><a href="classarmnn_1_1_test_quantized_lstm_layer_visitor.xhtml#adb450ce824515f6b217d3b0eb91ff748">armnn::TestQuantizedLstmLayerVisitor::CheckInputParameters</a></div><div class="ttdeci">void CheckInputParameters(const QuantizedLstmInputParams &amp;params)</div><div class="ttdef"><b>Definition:</b> <a href="_const_tensor_layer_visitor_8cpp_source.xhtml#l00070">ConstTensorLayerVisitor.cpp:70</a></div></div>
<div class="ttc" id="namespacearmnn_xhtml_a56943a0946e5f15e5e58054b8e7a04a4a890a37ff3bfe123414ba7e6f052b49f3"><div class="ttname"><a href="namespacearmnn.xhtml#a56943a0946e5f15e5e58054b8e7a04a4a890a37ff3bfe123414ba7e6f052b49f3">armnn::LayerType::QuantizedLstm</a></div></div>
<div class="ttc" id="namespacearmnn_xhtml_addb6b14dd1b632263ffe77430259a7c4"><div class="ttname"><a href="namespacearmnn.xhtml#addb6b14dd1b632263ffe77430259a7c4">armnn::GetLayerTypeAsCString</a></div><div class="ttdeci">const char * GetLayerTypeAsCString(LayerType type)</div><div class="ttdef"><b>Definition:</b> <a href="_internal_types_8cpp_source.xhtml#l00013">InternalTypes.cpp:13</a></div></div>
</div><!-- fragment -->
</div>
</div>
<hr/>The documentation for this class was generated from the following files:<ul>
<li>src/armnn/test/<a class="el" href="_const_tensor_layer_visitor_8hpp_source.xhtml">ConstTensorLayerVisitor.hpp</a></li>
<li>src/armnn/test/<a class="el" href="_const_tensor_layer_visitor_8cpp_source.xhtml">ConstTensorLayerVisitor.cpp</a></li>
</ul>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="namespacearmnn.xhtml">armnn</a></li><li class="navelem"><a class="el" href="classarmnn_1_1_test_quantized_lstm_layer_visitor.xhtml">TestQuantizedLstmLayerVisitor</a></li>
    <li class="footer">Generated on Fri Aug 19 2022 14:38:42 for ArmNN by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.13 </li>
  </ul>
</div>
</body>
</html>
