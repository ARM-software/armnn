<!-- Copyright (c) 2020 ARM Limited. -->
<!--                                 -->
<!-- SPDX-License-Identifier: MIT    -->
<!--                                 -->
<!-- HTML header for doxygen 1.8.13-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.13"/>
<meta name="robots" content="NOINDEX, NOFOLLOW" />
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>ArmNN: include/armnn/backends/profiling/IBackendProfiling.hpp Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script><script type="text/javascript" src="http://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="stylesheet.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <img alt="ArmNN" src="Arm_NN_horizontal_blue.png" style="max-width: 10rem; margin-top: .5rem; margin-left 10px"/>
  <td style="padding-left: 0.5em;">
   <div id="projectname">
   &#160;<span id="projectnumber">22.02</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.13 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
$(document).ready(function(){initNavTree('_i_backend_profiling_8hpp_source.xhtml','');});
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="headertitle">
<div class="title">IBackendProfiling.hpp</div>  </div>
</div><!--header-->
<div class="contents">
<a href="_i_backend_profiling_8hpp.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="comment">//</span></div><div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="comment">// Copyright Â© 2020 Arm Ltd. All rights reserved.</span></div><div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="comment">// SPDX-License-Identifier: MIT</span></div><div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="comment">//</span></div><div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="preprocessor">#pragma once</span></div><div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;</div><div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="preprocessor">#include &lt;<a class="code" href="_i_runtime_8hpp.xhtml">armnn/IRuntime.hpp</a>&gt;</span></div><div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="preprocessor">#include &lt;<a class="code" href="_i_send_timeline_packet_8hpp.xhtml">armnn/profiling/ISendTimelinePacket.hpp</a>&gt;</span></div><div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;</div><div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="preprocessor">#include &lt;common/include/IProfilingGuidGenerator.hpp&gt;</span></div><div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;</div><div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;<span class="preprocessor">#include &lt;memory&gt;</span></div><div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;<span class="preprocessor">#include &lt;vector&gt;</span></div><div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;</div><div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;<span class="keyword">namespace </span><a class="code" href="namespacearmnn.xhtml">armnn</a></div><div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;{</div><div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;</div><div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;<span class="keyword">namespace </span>profiling</div><div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;{</div><div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;</div><div class="line"><a name="l00021"></a><span class="lineno"><a class="line" href="structarmnn_1_1profiling_1_1_counter_value.xhtml">   21</a></span>&#160;<span class="keyword">struct </span><a class="code" href="structarmnn_1_1profiling_1_1_counter_value.xhtml">CounterValue</a></div><div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;{</div><div class="line"><a name="l00023"></a><span class="lineno"><a class="line" href="structarmnn_1_1profiling_1_1_counter_value.xhtml#afa9ef31ef4eb33946d75f8433057628f">   23</a></span>&#160;    <a class="code" href="structarmnn_1_1profiling_1_1_counter_value.xhtml#afa9ef31ef4eb33946d75f8433057628f">CounterValue</a>(uint16_t <span class="keywordtype">id</span>, uint32_t value) :</div><div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;        <a class="code" href="structarmnn_1_1profiling_1_1_counter_value.xhtml#a9dc4f22f8155623eb1f0104d668db6c2">counterId</a>(id), <a class="code" href="structarmnn_1_1profiling_1_1_counter_value.xhtml#ac888c22e9908fbb7cf75b7f73e31440e">counterValue</a>(value) {}</div><div class="line"><a name="l00025"></a><span class="lineno"><a class="line" href="structarmnn_1_1profiling_1_1_counter_value.xhtml#a9dc4f22f8155623eb1f0104d668db6c2">   25</a></span>&#160;    uint16_t <a class="code" href="structarmnn_1_1profiling_1_1_counter_value.xhtml#a9dc4f22f8155623eb1f0104d668db6c2">counterId</a>;</div><div class="line"><a name="l00026"></a><span class="lineno"><a class="line" href="structarmnn_1_1profiling_1_1_counter_value.xhtml#ac888c22e9908fbb7cf75b7f73e31440e">   26</a></span>&#160;    uint32_t <a class="code" href="structarmnn_1_1profiling_1_1_counter_value.xhtml#ac888c22e9908fbb7cf75b7f73e31440e">counterValue</a>;</div><div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;};</div><div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;</div><div class="line"><a name="l00029"></a><span class="lineno"><a class="line" href="structarmnn_1_1profiling_1_1_timestamp.xhtml">   29</a></span>&#160;<span class="keyword">struct </span><a class="code" href="structarmnn_1_1profiling_1_1_timestamp.xhtml">Timestamp</a></div><div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;{</div><div class="line"><a name="l00031"></a><span class="lineno"><a class="line" href="structarmnn_1_1profiling_1_1_timestamp.xhtml#a465bef81f6478756e5443025b1f2ddfa">   31</a></span>&#160;    uint64_t <a class="code" href="structarmnn_1_1profiling_1_1_timestamp.xhtml#a465bef81f6478756e5443025b1f2ddfa">timestamp</a>;</div><div class="line"><a name="l00032"></a><span class="lineno"><a class="line" href="structarmnn_1_1profiling_1_1_timestamp.xhtml#a92029bbd41c23ebf7a7f2e2cc5ad4dd7">   32</a></span>&#160;    std::vector&lt;CounterValue&gt; <a class="code" href="structarmnn_1_1profiling_1_1_timestamp.xhtml#a92029bbd41c23ebf7a7f2e2cc5ad4dd7">counterValues</a>;</div><div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;};</div><div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;</div><div class="line"><a name="l00035"></a><span class="lineno"><a class="line" href="structarmnn_1_1profiling_1_1_counter_status.xhtml">   35</a></span>&#160;<span class="keyword">struct </span><a class="code" href="structarmnn_1_1profiling_1_1_counter_status.xhtml">CounterStatus</a></div><div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;{</div><div class="line"><a name="l00037"></a><span class="lineno"><a class="line" href="structarmnn_1_1profiling_1_1_counter_status.xhtml#af098e2527c8ce8b094ecd5af650e643b">   37</a></span>&#160;    <a class="code" href="structarmnn_1_1profiling_1_1_counter_status.xhtml#af098e2527c8ce8b094ecd5af650e643b">CounterStatus</a>(uint16_t backendCounterId,</div><div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;                  uint16_t globalCounterId,</div><div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;                  <span class="keywordtype">bool</span> enabled,</div><div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;                  uint32_t samplingRateInMicroseconds)</div><div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;                  : m_BackendCounterId(backendCounterId),</div><div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;                    m_GlobalCounterId(globalCounterId),</div><div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;                    m_Enabled(enabled),</div><div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;                    m_SamplingRateInMicroseconds(samplingRateInMicroseconds) {}</div><div class="line"><a name="l00045"></a><span class="lineno"><a class="line" href="structarmnn_1_1profiling_1_1_counter_status.xhtml#a29f0ccf670004d1b4127bbfba5ded78b">   45</a></span>&#160;    uint16_t <a class="code" href="structarmnn_1_1profiling_1_1_counter_status.xhtml#a29f0ccf670004d1b4127bbfba5ded78b">m_BackendCounterId</a>;</div><div class="line"><a name="l00046"></a><span class="lineno"><a class="line" href="structarmnn_1_1profiling_1_1_counter_status.xhtml#a968102920ba1226a62e1551d45f1e2d8">   46</a></span>&#160;    uint16_t <a class="code" href="structarmnn_1_1profiling_1_1_counter_status.xhtml#a968102920ba1226a62e1551d45f1e2d8">m_GlobalCounterId</a>;</div><div class="line"><a name="l00047"></a><span class="lineno"><a class="line" href="structarmnn_1_1profiling_1_1_counter_status.xhtml#a34e0355a7ef90e2770f21df2fec7045d">   47</a></span>&#160;    <span class="keywordtype">bool</span>     <a class="code" href="structarmnn_1_1profiling_1_1_counter_status.xhtml#a34e0355a7ef90e2770f21df2fec7045d">m_Enabled</a>;</div><div class="line"><a name="l00048"></a><span class="lineno"><a class="line" href="structarmnn_1_1profiling_1_1_counter_status.xhtml#a20d049794ba79333eaae506448b764b6">   48</a></span>&#160;    uint32_t <a class="code" href="structarmnn_1_1profiling_1_1_counter_status.xhtml#a20d049794ba79333eaae506448b764b6">m_SamplingRateInMicroseconds</a>;</div><div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;};</div><div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;</div><div class="line"><a name="l00051"></a><span class="lineno"><a class="line" href="classarmnn_1_1profiling_1_1_i_register_backend_counters.xhtml">   51</a></span>&#160;<span class="keyword">class </span><a class="code" href="classarmnn_1_1profiling_1_1_i_register_backend_counters.xhtml">IRegisterBackendCounters</a></div><div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;{</div><div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;<span class="keyword">public</span>:</div><div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;    <span class="keyword">virtual</span> <span class="keywordtype">void</span> RegisterCategory(<span class="keyword">const</span> std::string&amp; categoryName) = 0;</div><div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;</div><div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;    <span class="keyword">virtual</span> uint16_t RegisterDevice(<span class="keyword">const</span> std::string&amp; deviceName,</div><div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;                                    uint16_t cores = 0,</div><div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;                                    <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_optional.xhtml">Optional&lt;std::string&gt;</a>&amp; parentCategoryName = <a class="code" href="structarmnn_1_1_empty_optional.xhtml">EmptyOptional</a>()) = 0;</div><div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;</div><div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;    <span class="keyword">virtual</span> uint16_t RegisterCounterSet(<span class="keyword">const</span> std::string&amp; counterSetName,</div><div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;                                        uint16_t count = 0,</div><div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;                                        <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_optional.xhtml">Optional&lt;std::string&gt;</a>&amp; parentCategoryName = <a class="code" href="structarmnn_1_1_empty_optional.xhtml">EmptyOptional</a>()) = 0;</div><div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;</div><div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;    <span class="keyword">virtual</span> uint16_t RegisterCounter(<span class="keyword">const</span> uint16_t uid,</div><div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;                                     <span class="keyword">const</span> std::string&amp; parentCategoryName,</div><div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;                                     uint16_t counterClass,</div><div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;                                     uint16_t interpolation,</div><div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;                                     <span class="keywordtype">double</span> multiplier,</div><div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;                                     <span class="keyword">const</span> std::string&amp; name,</div><div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;                                     <span class="keyword">const</span> std::string&amp; description,</div><div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;                                     <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_optional.xhtml">Optional&lt;std::string&gt;</a>&amp; units      = <a class="code" href="structarmnn_1_1_empty_optional.xhtml">EmptyOptional</a>(),</div><div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;                                     <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_optional.xhtml">Optional&lt;uint16_t&gt;</a>&amp; numberOfCores = <a class="code" href="structarmnn_1_1_empty_optional.xhtml">EmptyOptional</a>(),</div><div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;                                     <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_optional.xhtml">Optional&lt;uint16_t&gt;</a>&amp; deviceUid     = <a class="code" href="structarmnn_1_1_empty_optional.xhtml">EmptyOptional</a>(),</div><div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;                                     <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_optional.xhtml">Optional&lt;uint16_t&gt;</a>&amp; counterSetUid = <a class="code" href="structarmnn_1_1_empty_optional.xhtml">EmptyOptional</a>()) = 0;</div><div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;</div><div class="line"><a name="l00076"></a><span class="lineno"><a class="line" href="classarmnn_1_1profiling_1_1_i_register_backend_counters.xhtml#a1df38f206d3d114ab5c98624a74595e7">   76</a></span>&#160;    <span class="keyword">virtual</span> <a class="code" href="classarmnn_1_1profiling_1_1_i_register_backend_counters.xhtml#a1df38f206d3d114ab5c98624a74595e7">~IRegisterBackendCounters</a>() {}</div><div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;};</div><div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;</div><div class="line"><a name="l00079"></a><span class="lineno"><a class="line" href="classarmnn_1_1profiling_1_1_i_backend_profiling.xhtml">   79</a></span>&#160;<span class="keyword">class </span><a class="code" href="classarmnn_1_1profiling_1_1_i_backend_profiling.xhtml">IBackendProfiling</a></div><div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;{</div><div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;<span class="keyword">public</span>:</div><div class="line"><a name="l00082"></a><span class="lineno"><a class="line" href="classarmnn_1_1profiling_1_1_i_backend_profiling.xhtml#a1179976118abc3d6765a5b2fea4be35c">   82</a></span>&#160;    <span class="keyword">virtual</span> <a class="code" href="classarmnn_1_1profiling_1_1_i_backend_profiling.xhtml#a1179976118abc3d6765a5b2fea4be35c">~IBackendProfiling</a>()</div><div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;    {}</div><div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;</div><div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;    <span class="keyword">virtual</span> std::unique_ptr&lt;IRegisterBackendCounters&gt;</div><div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;            GetCounterRegistrationInterface(uint16_t currentMaxGlobalCounterID) = 0;</div><div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;</div><div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;    <span class="keyword">virtual</span> std::unique_ptr&lt;ISendTimelinePacket&gt; GetSendTimelinePacket() = 0;</div><div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;</div><div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;    <span class="keyword">virtual</span> IProfilingGuidGenerator&amp; GetProfilingGuidGenerator() = 0;</div><div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;</div><div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;    <span class="keyword">virtual</span> <span class="keywordtype">void</span> ReportCounters(<span class="keyword">const</span> std::vector&lt;Timestamp&gt;&amp; counterValues) = 0;</div><div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;</div><div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;    <span class="keyword">virtual</span> <a class="code" href="structarmnn_1_1profiling_1_1_counter_status.xhtml">CounterStatus</a> GetCounterStatus(uint16_t backendCounterId) = 0;</div><div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;</div><div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;    <span class="keyword">virtual</span> std::vector&lt;CounterStatus&gt; GetActiveCounters() = 0;</div><div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;</div><div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;    <span class="keyword">virtual</span> <span class="keywordtype">bool</span> IsProfilingEnabled() <span class="keyword">const</span> = 0;</div><div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;</div><div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;};</div><div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;</div><div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;}    <span class="comment">// namespace profiling</span></div><div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;</div><div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;}    <span class="comment">// namespace armnn</span></div><div class="ttc" id="structarmnn_1_1profiling_1_1_counter_status_xhtml_a34e0355a7ef90e2770f21df2fec7045d"><div class="ttname"><a href="structarmnn_1_1profiling_1_1_counter_status.xhtml#a34e0355a7ef90e2770f21df2fec7045d">armnn::profiling::CounterStatus::m_Enabled</a></div><div class="ttdeci">bool m_Enabled</div><div class="ttdef"><b>Definition:</b> <a href="_i_backend_profiling_8hpp_source.xhtml#l00047">IBackendProfiling.hpp:47</a></div></div>
<div class="ttc" id="structarmnn_1_1profiling_1_1_timestamp_xhtml_a465bef81f6478756e5443025b1f2ddfa"><div class="ttname"><a href="structarmnn_1_1profiling_1_1_timestamp.xhtml#a465bef81f6478756e5443025b1f2ddfa">armnn::profiling::Timestamp::timestamp</a></div><div class="ttdeci">uint64_t timestamp</div><div class="ttdef"><b>Definition:</b> <a href="_i_backend_profiling_8hpp_source.xhtml#l00031">IBackendProfiling.hpp:31</a></div></div>
<div class="ttc" id="classarmnn_1_1_optional_xhtml"><div class="ttname"><a href="classarmnn_1_1_optional.xhtml">armnn::Optional&lt; std::string &gt;</a></div></div>
<div class="ttc" id="structarmnn_1_1profiling_1_1_counter_value_xhtml"><div class="ttname"><a href="structarmnn_1_1profiling_1_1_counter_value.xhtml">armnn::profiling::CounterValue</a></div><div class="ttdef"><b>Definition:</b> <a href="_i_backend_profiling_8hpp_source.xhtml#l00021">IBackendProfiling.hpp:21</a></div></div>
<div class="ttc" id="structarmnn_1_1profiling_1_1_counter_value_xhtml_afa9ef31ef4eb33946d75f8433057628f"><div class="ttname"><a href="structarmnn_1_1profiling_1_1_counter_value.xhtml#afa9ef31ef4eb33946d75f8433057628f">armnn::profiling::CounterValue::CounterValue</a></div><div class="ttdeci">CounterValue(uint16_t id, uint32_t value)</div><div class="ttdef"><b>Definition:</b> <a href="_i_backend_profiling_8hpp_source.xhtml#l00023">IBackendProfiling.hpp:23</a></div></div>
<div class="ttc" id="classarmnn_1_1profiling_1_1_i_register_backend_counters_xhtml"><div class="ttname"><a href="classarmnn_1_1profiling_1_1_i_register_backend_counters.xhtml">armnn::profiling::IRegisterBackendCounters</a></div><div class="ttdef"><b>Definition:</b> <a href="_i_backend_profiling_8hpp_source.xhtml#l00051">IBackendProfiling.hpp:51</a></div></div>
<div class="ttc" id="structarmnn_1_1profiling_1_1_counter_status_xhtml_a20d049794ba79333eaae506448b764b6"><div class="ttname"><a href="structarmnn_1_1profiling_1_1_counter_status.xhtml#a20d049794ba79333eaae506448b764b6">armnn::profiling::CounterStatus::m_SamplingRateInMicroseconds</a></div><div class="ttdeci">uint32_t m_SamplingRateInMicroseconds</div><div class="ttdef"><b>Definition:</b> <a href="_i_backend_profiling_8hpp_source.xhtml#l00048">IBackendProfiling.hpp:48</a></div></div>
<div class="ttc" id="structarmnn_1_1profiling_1_1_counter_value_xhtml_a9dc4f22f8155623eb1f0104d668db6c2"><div class="ttname"><a href="structarmnn_1_1profiling_1_1_counter_value.xhtml#a9dc4f22f8155623eb1f0104d668db6c2">armnn::profiling::CounterValue::counterId</a></div><div class="ttdeci">uint16_t counterId</div><div class="ttdef"><b>Definition:</b> <a href="_i_backend_profiling_8hpp_source.xhtml#l00025">IBackendProfiling.hpp:25</a></div></div>
<div class="ttc" id="classarmnn_1_1profiling_1_1_i_backend_profiling_xhtml_a1179976118abc3d6765a5b2fea4be35c"><div class="ttname"><a href="classarmnn_1_1profiling_1_1_i_backend_profiling.xhtml#a1179976118abc3d6765a5b2fea4be35c">armnn::profiling::IBackendProfiling::~IBackendProfiling</a></div><div class="ttdeci">virtual ~IBackendProfiling()</div><div class="ttdef"><b>Definition:</b> <a href="_i_backend_profiling_8hpp_source.xhtml#l00082">IBackendProfiling.hpp:82</a></div></div>
<div class="ttc" id="_i_runtime_8hpp_xhtml"><div class="ttname"><a href="_i_runtime_8hpp.xhtml">IRuntime.hpp</a></div></div>
<div class="ttc" id="structarmnn_1_1profiling_1_1_timestamp_xhtml"><div class="ttname"><a href="structarmnn_1_1profiling_1_1_timestamp.xhtml">armnn::profiling::Timestamp</a></div><div class="ttdef"><b>Definition:</b> <a href="_i_backend_profiling_8hpp_source.xhtml#l00029">IBackendProfiling.hpp:29</a></div></div>
<div class="ttc" id="classarmnn_1_1profiling_1_1_i_register_backend_counters_xhtml_a1df38f206d3d114ab5c98624a74595e7"><div class="ttname"><a href="classarmnn_1_1profiling_1_1_i_register_backend_counters.xhtml#a1df38f206d3d114ab5c98624a74595e7">armnn::profiling::IRegisterBackendCounters::~IRegisterBackendCounters</a></div><div class="ttdeci">virtual ~IRegisterBackendCounters()</div><div class="ttdef"><b>Definition:</b> <a href="_i_backend_profiling_8hpp_source.xhtml#l00076">IBackendProfiling.hpp:76</a></div></div>
<div class="ttc" id="namespacearmnn_xhtml"><div class="ttname"><a href="namespacearmnn.xhtml">armnn</a></div><div class="ttdoc">Copyright (c) 2021 ARM Limited and Contributors. </div><div class="ttdef"><b>Definition:</b> <a href="01__00__quick__start_8dox_source.xhtml#l00006">01_00_quick_start.dox:6</a></div></div>
<div class="ttc" id="structarmnn_1_1profiling_1_1_counter_status_xhtml_af098e2527c8ce8b094ecd5af650e643b"><div class="ttname"><a href="structarmnn_1_1profiling_1_1_counter_status.xhtml#af098e2527c8ce8b094ecd5af650e643b">armnn::profiling::CounterStatus::CounterStatus</a></div><div class="ttdeci">CounterStatus(uint16_t backendCounterId, uint16_t globalCounterId, bool enabled, uint32_t samplingRateInMicroseconds)</div><div class="ttdef"><b>Definition:</b> <a href="_i_backend_profiling_8hpp_source.xhtml#l00037">IBackendProfiling.hpp:37</a></div></div>
<div class="ttc" id="structarmnn_1_1profiling_1_1_timestamp_xhtml_a92029bbd41c23ebf7a7f2e2cc5ad4dd7"><div class="ttname"><a href="structarmnn_1_1profiling_1_1_timestamp.xhtml#a92029bbd41c23ebf7a7f2e2cc5ad4dd7">armnn::profiling::Timestamp::counterValues</a></div><div class="ttdeci">std::vector&lt; CounterValue &gt; counterValues</div><div class="ttdef"><b>Definition:</b> <a href="_i_backend_profiling_8hpp_source.xhtml#l00032">IBackendProfiling.hpp:32</a></div></div>
<div class="ttc" id="classarmnn_1_1profiling_1_1_i_backend_profiling_xhtml"><div class="ttname"><a href="classarmnn_1_1profiling_1_1_i_backend_profiling.xhtml">armnn::profiling::IBackendProfiling</a></div><div class="ttdef"><b>Definition:</b> <a href="_i_backend_profiling_8hpp_source.xhtml#l00079">IBackendProfiling.hpp:79</a></div></div>
<div class="ttc" id="structarmnn_1_1profiling_1_1_counter_status_xhtml_a968102920ba1226a62e1551d45f1e2d8"><div class="ttname"><a href="structarmnn_1_1profiling_1_1_counter_status.xhtml#a968102920ba1226a62e1551d45f1e2d8">armnn::profiling::CounterStatus::m_GlobalCounterId</a></div><div class="ttdeci">uint16_t m_GlobalCounterId</div><div class="ttdef"><b>Definition:</b> <a href="_i_backend_profiling_8hpp_source.xhtml#l00046">IBackendProfiling.hpp:46</a></div></div>
<div class="ttc" id="structarmnn_1_1profiling_1_1_counter_value_xhtml_ac888c22e9908fbb7cf75b7f73e31440e"><div class="ttname"><a href="structarmnn_1_1profiling_1_1_counter_value.xhtml#ac888c22e9908fbb7cf75b7f73e31440e">armnn::profiling::CounterValue::counterValue</a></div><div class="ttdeci">uint32_t counterValue</div><div class="ttdef"><b>Definition:</b> <a href="_i_backend_profiling_8hpp_source.xhtml#l00026">IBackendProfiling.hpp:26</a></div></div>
<div class="ttc" id="structarmnn_1_1_empty_optional_xhtml"><div class="ttname"><a href="structarmnn_1_1_empty_optional.xhtml">armnn::EmptyOptional</a></div><div class="ttdoc">EmptyOptional is used to initialize the Optional class in case we want to have default value for an O...</div><div class="ttdef"><b>Definition:</b> <a href="_optional_8hpp_source.xhtml#l00032">Optional.hpp:32</a></div></div>
<div class="ttc" id="structarmnn_1_1profiling_1_1_counter_status_xhtml"><div class="ttname"><a href="structarmnn_1_1profiling_1_1_counter_status.xhtml">armnn::profiling::CounterStatus</a></div><div class="ttdef"><b>Definition:</b> <a href="_i_backend_profiling_8hpp_source.xhtml#l00035">IBackendProfiling.hpp:35</a></div></div>
<div class="ttc" id="_i_send_timeline_packet_8hpp_xhtml"><div class="ttname"><a href="_i_send_timeline_packet_8hpp.xhtml">ISendTimelinePacket.hpp</a></div></div>
<div class="ttc" id="structarmnn_1_1profiling_1_1_counter_status_xhtml_a29f0ccf670004d1b4127bbfba5ded78b"><div class="ttname"><a href="structarmnn_1_1profiling_1_1_counter_status.xhtml#a29f0ccf670004d1b4127bbfba5ded78b">armnn::profiling::CounterStatus::m_BackendCounterId</a></div><div class="ttdeci">uint16_t m_BackendCounterId</div><div class="ttdef"><b>Definition:</b> <a href="_i_backend_profiling_8hpp_source.xhtml#l00045">IBackendProfiling.hpp:45</a></div></div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="dir_d44c64559bbebec7f509842c48db8b23.xhtml">include</a></li><li class="navelem"><a class="el" href="dir_2b72cc348e06937955e62ebdd8a13436.xhtml">armnn</a></li><li class="navelem"><a class="el" href="dir_8946eb9d8f826e973720979438627a91.xhtml">backends</a></li><li class="navelem"><a class="el" href="dir_5110d2ffe04c8c868b8c599687bce3f0.xhtml">profiling</a></li><li class="navelem"><a class="el" href="_i_backend_profiling_8hpp.xhtml">IBackendProfiling.hpp</a></li>
    <li class="footer">Generated on Wed Mar 9 2022 12:00:05 for ArmNN by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.13 </li>
  </ul>
</div>
</body>
</html>
