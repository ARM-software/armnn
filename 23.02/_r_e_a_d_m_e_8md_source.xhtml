<!-- Copyright (c) 2020 ARM Limited. -->
<!--                                 -->
<!-- SPDX-License-Identifier: MIT    -->
<!--                                 -->
<!-- HTML header for doxygen 1.8.13-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.13"/>
<meta name="robots" content="NOINDEX, NOFOLLOW" />
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>ArmNN: README.md Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script><script type="text/javascript" src="http://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="stylesheet.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <img alt="ArmNN" src="Arm_NN_horizontal_blue.png" style="max-width: 10rem; margin-top: .5rem; margin-left 10px"/>
  <td style="padding-left: 0.5em;">
   <div id="projectname">
   &#160;<span id="projectnumber">23.02</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.13 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
$(document).ready(function(){initNavTree('_r_e_a_d_m_e_8md.xhtml','');});
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="headertitle">
<div class="title">README.md</div>  </div>
</div><!--header-->
<div class="contents">
<a href="_r_e_a_d_m_e_8md.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;&lt;br&gt;</div><div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;&lt;div align=&quot;center&quot;&gt;</div><div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;  &lt;img src=&quot;Arm_NN_horizontal_blue.png&quot; class=&quot;center&quot; alt=&quot;Arm NN Logo&quot; width=&quot;300&quot;/&gt;</div><div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;&lt;/div&gt;</div><div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;</div><div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;* [Quick Start Guides](#quick-start-guides)</div><div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;* [Pre-Built Binaries](#pre-built-binaries)</div><div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;* [Software Overview](#software-overview)</div><div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;* [Get Involved](#get-involved)</div><div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;* [Contributions](#contributions)</div><div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;* [Disclaimer](#disclaimer)</div><div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;* [License](#license)</div><div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;* [Third-Party](#third-party)</div><div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;* [Build Flags](#build-flags)</div><div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;</div><div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;# Arm NN</div><div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;</div><div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;**Arm NN** is the **most performant** machine learning (ML) inference engine for Android and Linux, accelerating ML</div><div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;on **Arm Cortex-A CPUs and Arm Mali GPUs**. This ML inference engine is an open source SDK which bridges the gap</div><div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;between existing neural network frameworks and power-efficient Arm IP.</div><div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;</div><div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;Arm NN outperforms generic ML libraries due to **Arm architecture-specific optimizations** (e.g. SVE2) by utilizing</div><div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;**[Arm Compute Library (ACL)](https://github.com/ARM-software/ComputeLibrary/)**. To target Arm Ethos-N NPUs, Arm NN</div><div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;utilizes the [Ethos-N NPU Driver](https://github.com/ARM-software/ethos-n-driver-stack). For Arm Cortex-M acceleration,</div><div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;please see [CMSIS-NN](https://github.com/ARM-software/CMSIS_5).</div><div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;</div><div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;Arm NN is written using portable **C++14** and built using [CMake](https://cmake.org/) - enabling builds for a wide</div><div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;variety of target platforms, from a wide variety of host environments. **Python** developers can interface with Arm NN</div><div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;through the use of our **Arm NN TF Lite Delegate**.</div><div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;</div><div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;</div><div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;## Quick Start Guides</div><div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;**The Arm NN TF Lite Delegate provides the widest ML operator support in Arm NN** and is an easy way to accelerate</div><div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;your ML model. To start using the TF Lite Delegate, first download the **[Pre-Built Binaries](#pre-built-binaries)** for</div><div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;the latest release of Arm NN. Using a Python interpreter, you can load your TF Lite model into the Arm NN TF Lite</div><div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;Delegate and run accelerated inference. Please see this</div><div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;**[Quick Start Guide](delegate/DelegateQuickStartGuide.md)** on GitHub or this more comprehensive</div><div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;**[Arm Developer Guide](https://developer.arm.com/documentation/102561/latest/)** for information on how to accelerate</div><div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;your TF Lite model using the Arm NN TF Lite Delegate.</div><div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;</div><div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;The fastest way to integrate Arm NN into an **Android app** is by using our **Arm NN AAR (Android Archive) file with</div><div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;Android Studio**. The AAR file nicely packages up the Arm NN TF Lite Delegate, Arm NN itself and ACL; ready to be</div><div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;integrated into your Android ML application. Using the AAR allows you to benefit from the **vast operator support** of</div><div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;the Arm NN TF Lite Delegate. We held an **[Arm AI Tech Talk](https://www.youtube.com/watch?v=Zu4v0nqq2FA)** on how to</div><div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;accelerate an ML Image Segmentation app in 5 minutes using this AAR file. To download the Arm NN AAR file, please see the</div><div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;**[Pre-Built Binaries](#pre-built-binaries)** section below.</div><div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;</div><div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;We also provide Debian packages for Arm NN, which are a quick way to start using Arm NN and the TF Lite Parser</div><div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;(albeit with less ML operator support than the TF Lite Delegate). There is an installation guide available</div><div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;[here](InstallationViaAptRepository.md) which provides instructions on how to install the Arm NN Core and the TF Lite</div><div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;Parser for Ubuntu 20.04.</div><div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;</div><div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;To build Arm NN from scratch, we provide the **[Arm NN Build Tool](build-tool/README.md)**. This tool consists of</div><div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;**parameterized bash scripts** accompanied by a **Dockerfile** for building Arm NN and its dependencies, including</div><div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;**[Arm Compute Library (ACL)](https://github.com/ARM-software/ComputeLibrary/)**. This tool replaces/supersedes the</div><div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;majority of the existing Arm NN build guides as a user-friendly way to build Arm NN. The main benefit of building</div><div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;Arm NN from scratch is the ability to **exactly choose which components to build, targeted for your ML project**.&lt;br&gt;</div><div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;</div><div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;</div><div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;## Pre-Built Binaries</div><div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;</div><div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;| Operating System                              | Architecture-specific Release Archive (Download)                                                                                                                                                                                                                                                                                  |</div><div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;|-----------------------------------------------|-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|</div><div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;| Android (AAR)                                 | [![](https://img.shields.io/badge/download-android--aar-orange)](https://github.com/ARM-software/armnn/releases/download/v23.02/armnn_delegate_jni-23.02.aar)                                                                                                                                                                     |</div><div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;| Android 10 &quot;Q/Quince Tart&quot; (API level 29)     | [![](https://img.shields.io/badge/download-arm64--v8.2a-blue)](https://github.com/ARM-software/armnn/releases/download/v23.02/ArmNN-android-29-arm64-v8.2-a.tar.gz) [![](https://img.shields.io/badge/download-arm64--v8a-red)](https://github.com/ARM-software/armnn/releases/download/v23.02/ArmNN-android-29-arm64-v8a.tar.gz) |</div><div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;| Android 11 &quot;R/Red Velvet Cake&quot; (API level 30)     | [![](https://img.shields.io/badge/download-arm64--v8.2a-blue)](https://github.com/ARM-software/armnn/releases/download/v23.02/ArmNN-android-30-arm64-v8.2-a.tar.gz) [![](https://img.shields.io/badge/download-arm64--v8a-red)](https://github.com/ARM-software/armnn/releases/download/v23.02/ArmNN-android-30-arm64-v8a.tar.gz) |</div><div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;| Android 12 &quot;S/Snow Cone&quot; (API level 31)     | [![](https://img.shields.io/badge/download-arm64--v8.2a-blue)](https://github.com/ARM-software/armnn/releases/download/v23.02/ArmNN-android-31-arm64-v8.2-a.tar.gz) [![](https://img.shields.io/badge/download-arm64--v8a-red)](https://github.com/ARM-software/armnn/releases/download/v23.02/ArmNN-android-31-arm64-v8a.tar.gz) |</div><div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;| Android 13 &quot;T/Tiramisu&quot; (API level 32)     | [![](https://img.shields.io/badge/download-arm64--v8.2a-blue)](https://github.com/ARM-software/armnn/releases/download/v23.02/ArmNN-android-32-arm64-v8.2-a.tar.gz) [![](https://img.shields.io/badge/download-arm64--v8a-red)](https://github.com/ARM-software/armnn/releases/download/v23.02/ArmNN-android-32-arm64-v8a.tar.gz) |</div><div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;| Linux                                         | [![](https://img.shields.io/badge/download-aarch64-green)](https://github.com/ARM-software/armnn/releases/download/v23.02/ArmNN-linux-aarch64.tar.gz) [![](https://img.shields.io/badge/download-x86__64-yellow)](https://github.com/ARM-software/armnn/releases/download/v23.02/ArmNN-linux-x86_64.tar.gz)                       |</div><div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;</div><div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;</div><div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;## Software Overview</div><div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;The Arm NN SDK supports ML models in **TensorFlow Lite** (TF Lite) and **ONNX** formats.</div><div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;</div><div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;**Arm NN&#39;s TF Lite Delegate** accelerates TF Lite models through **Python or C++ APIs**. Supported TF Lite operators</div><div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;are accelerated by Arm NN and any unsupported operators are delegated (fallback) to the reference TF Lite runtime -</div><div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;ensuring extensive ML operator support. **The recommended way to use Arm NN is to</div><div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;[convert your model to TF Lite format](https://www.tensorflow.org/lite/convert) and use the TF Lite Delegate.** Please</div><div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;refer to the [Quick Start Guides](#quick-start-guides) for more information on how to use the TF Lite Delegate.</div><div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;</div><div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;Arm NN also provides **TF Lite and ONNX parsers** which are C++ libraries for integrating TF Lite or ONNX models</div><div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;into your ML application. Please note that these parsers do not provide extensive ML operator coverage as compared</div><div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;to the Arm NN TF Lite Delegate.</div><div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;</div><div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;**Android** ML application developers have a number of options for using Arm NN:</div><div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;* Use our Arm NN AAR (Android Archive) file with **Android Studio** as described in the</div><div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;[Quick Start Guides](#quick-start-guides) section</div><div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;* Download and use our [Pre-Built Binaries](#pre-built-binaries) for the Android platform</div><div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;* Build Arm NN from scratch with the Android NDK using this [GitHub guide](BuildGuideAndroidNDK.md)</div><div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;</div><div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;Arm also provides an [Android-NN-Driver](https://github.com/ARM-software/android-nn-driver) which implements a</div><div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;hardware abstraction layer (HAL) for the Android NNAPI. When the Android NN Driver is integrated on an Android device,</div><div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;ML models used in Android applications will automatically be accelerated by Arm NN.</div><div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;</div><div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;For more information about the Arm NN components, please refer to our</div><div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;[documentation](https://github.com/ARM-software/armnn/wiki/Documentation).</div><div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;</div><div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;Arm NN is a key component of the [machine learning platform](https://mlplatform.org/), which is part of the</div><div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;[Linaro Machine Intelligence Initiative](https://www.linaro.org/news/linaro-announces-launch-of-machine-intelligence-initiative/).</div><div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;</div><div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;For FAQs and troubleshooting advice, see the [FAQ](docs/FAQ.md) or take a look at previous</div><div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;[GitHub Issues](https://github.com/ARM-software/armnn/issues).</div><div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;</div><div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;</div><div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;## Get Involved</div><div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;The best way to get involved is by using our software. If you need help or encounter an issue, please raise it as a</div><div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;[GitHub Issue](https://github.com/ARM-software/armnn/issues). Feel free to have a look at any of our open issues too.</div><div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;We also welcome feedback on our documentation.</div><div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;</div><div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;Feature requests without a volunteer to implement them are closed, but have the &#39;Help wanted&#39; label, these can be</div><div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;found [here](https://github.com/ARM-software/armnn/issues?q=is%3Aissue+label%3A%22Help+wanted%22+).</div><div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;Once you find a suitable Issue, feel free to re-open it and add a comment, so that Arm NN engineers know you are</div><div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;working on it and can help.</div><div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;</div><div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;When the feature is implemented the &#39;Help wanted&#39; label will be removed.</div><div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;</div><div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;</div><div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;## Contributions</div><div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;The Arm NN project welcomes contributions. For more details on contributing to Arm NN please see the</div><div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;[Contributing page](https://mlplatform.org/contributing/) on the [MLPlatform.org](https://mlplatform.org/) website,</div><div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;or see the [Contributor Guide](CONTRIBUTING.md).</div><div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;</div><div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;Particularly if you&#39;d like to implement your own backend next to our CPU, GPU and NPU backends there are guides for</div><div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;backend development: [Backend development guide](src/backends/README.md),</div><div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;[Dynamic backend development guide](src/dynamic/README.md).</div><div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;</div><div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;</div><div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;## Disclaimer</div><div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;The armnn/tests directory contains tests used during Arm NN development. Many of them depend on third-party IP, model</div><div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;protobufs and image files not distributed with Arm NN. The dependencies for some tests are available freely on</div><div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;the Internet, for those who wish to experiment, but they won&#39;t run out of the box.</div><div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;</div><div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;</div><div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;## License</div><div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;Arm NN is provided under the [MIT](https://spdx.org/licenses/MIT.html) license.</div><div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;See [LICENSE](LICENSE) for more information. Contributions to this project are accepted under the same license.</div><div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;</div><div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;Individual files contain the following tag instead of the full license text.</div><div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;</div><div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;    SPDX-License-Identifier: MIT</div><div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;</div><div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;This enables machine processing of license information based on the SPDX License Identifiers that are available</div><div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;here: http://spdx.org/licenses/</div><div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;</div><div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;</div><div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;## Inclusive language commitment</div><div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;Arm NN conforms to Arm&#39;s inclusive language policy and, to the best of our knowledge, does not contain any non-inclusive language.</div><div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;</div><div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;If you find something that concerns you, please email terms@arm.com</div><div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;</div><div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;</div><div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;## Third-party</div><div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;Third party tools used by Arm NN:</div><div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;</div><div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;| Tool           | License (SPDX ID) | Description                    | Version | Provenience</div><div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;|----------------|-------------------|------------------------------------------------------------------|-------------|-------------------</div><div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160;| cxxopts        | MIT               | A lightweight C++ option parser library | SHA 12e496da3d486b87fa9df43edea65232ed852510 | https://github.com/jarro2783/cxxopts</div><div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;| doctest        | MIT               | Header-only C++ testing framework | 2.4.6 | https://github.com/onqtam/doctest</div><div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160;| fmt            | MIT               | {fmt} is an open-source formatting library providing a fast and safe alternative to C stdio and C++ iostreams. | 7.0.1 | https://github.com/fmtlib/fmt</div><div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160;| ghc            | MIT               | A header-only single-file std::filesystem compatible helper library | 1.3.2 | https://github.com/gulrak/filesystem</div><div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160;| half           | MIT               | IEEE 754 conformant 16-bit half-precision floating point library | 1.12.0 | http://half.sourceforge.net</div><div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160;| mapbox/variant | BSD               | A header-only alternative to &#39;boost::variant&#39; | 1.1.3 | https://github.com/mapbox/variant</div><div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160;| stb            | MIT               | Image loader, resize and writer | 2.16 | https://github.com/nothings/stb</div><div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;</div><div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160;</div><div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160;## Build Flags</div><div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160;Arm NN uses the following security related build flags in their code:</div><div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160;</div><div class="line"><a name="l00169"></a><span class="lineno">  169</span>&#160;| Build flags        |</div><div class="line"><a name="l00170"></a><span class="lineno">  170</span>&#160;|---------------------|</div><div class="line"><a name="l00171"></a><span class="lineno">  171</span>&#160;| -Wall                  |</div><div class="line"><a name="l00172"></a><span class="lineno">  172</span>&#160;| -Wextra             |</div><div class="line"><a name="l00173"></a><span class="lineno">  173</span>&#160;| -Wold-style-cast    |</div><div class="line"><a name="l00174"></a><span class="lineno">  174</span>&#160;| -Wno-missing-braces |</div><div class="line"><a name="l00175"></a><span class="lineno">  175</span>&#160;| -Wconversion        |</div><div class="line"><a name="l00176"></a><span class="lineno">  176</span>&#160;| -Wsign-conversion   |</div><div class="line"><a name="l00177"></a><span class="lineno">  177</span>&#160;| -Werror             |</div></div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="_r_e_a_d_m_e_8md.xhtml">README.md</a></li>
    <li class="footer">Generated on Fri Feb 24 2023 10:24:24 for ArmNN by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.13 </li>
  </ul>
</div>
</body>
</html>
