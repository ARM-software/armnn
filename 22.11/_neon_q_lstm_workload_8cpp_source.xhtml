<!-- Copyright (c) 2020 ARM Limited. -->
<!--                                 -->
<!-- SPDX-License-Identifier: MIT    -->
<!--                                 -->
<!-- HTML header for doxygen 1.8.13-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.13"/>
<meta name="robots" content="NOINDEX, NOFOLLOW" />
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>ArmNN: src/backends/neon/workloads/NeonQLstmWorkload.cpp Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script><script type="text/javascript" src="http://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="stylesheet.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <img alt="ArmNN" src="Arm_NN_horizontal_blue.png" style="max-width: 10rem; margin-top: .5rem; margin-left 10px"/>
  <td style="padding-left: 0.5em;">
   <div id="projectname">
   &#160;<span id="projectnumber">22.11</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.13 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
$(document).ready(function(){initNavTree('_neon_q_lstm_workload_8cpp_source.xhtml','');});
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="headertitle">
<div class="title">NeonQLstmWorkload.cpp</div>  </div>
</div><!--header-->
<div class="contents">
<a href="_neon_q_lstm_workload_8cpp.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="comment">//</span></div><div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="comment">// Copyright Â© 2020 Arm Ltd and Contributors. All rights reserved.</span></div><div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="comment">// SPDX-License-Identifier: MIT</span></div><div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="comment">//</span></div><div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;</div><div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_neon_q_lstm_workload_8hpp.xhtml">NeonQLstmWorkload.hpp</a>&quot;</span></div><div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_neon_workload_utils_8hpp.xhtml">NeonWorkloadUtils.hpp</a>&quot;</span></div><div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;</div><div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_arm_compute_tensor_utils_8hpp.xhtml">aclCommon/ArmComputeTensorUtils.hpp</a>&quot;</span></div><div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;</div><div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_neon_tensor_handle_8hpp.xhtml">neon/NeonTensorHandle.hpp</a>&quot;</span></div><div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;</div><div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;<span class="keyword">namespace </span><a class="code" href="namespacearmnn.xhtml">armnn</a></div><div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;{</div><div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;<span class="keyword">using namespace </span>armcomputetensorutils;</div><div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;</div><div class="line"><a name="l00017"></a><span class="lineno"><a class="line" href="classarmnn_1_1_neon_q_lstm_workload.xhtml#a83c87b3dd014c18b6609c6fecf6c8368">   17</a></span>&#160;<a class="code" href="classarmnn_1_1_neon_q_lstm_workload.xhtml#a83c87b3dd014c18b6609c6fecf6c8368">NeonQLstmWorkload::NeonQLstmWorkload</a>(<span class="keyword">const</span> <a class="code" href="structarmnn_1_1_q_lstm_queue_descriptor.xhtml">QLstmQueueDescriptor</a>&amp; descriptor, <span class="keyword">const</span> <a class="code" href="structarmnn_1_1_workload_info.xhtml">WorkloadInfo</a>&amp; <a class="code" href="namespacearmnn.xhtml#a4dc0adc6737b5944e7671bee71788407acaf9b6b99962bf5c2264824231d7a40c">info</a>)</div><div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;        : <a class="code" href="classarmnn_1_1_neon_base_workload.xhtml">NeonBaseWorkload</a>&lt;<a class="code" href="structarmnn_1_1_q_lstm_queue_descriptor.xhtml">QLstmQueueDescriptor</a>&gt;(descriptor, info)</div><div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;{</div><div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;    <span class="comment">// Report Profiling Details</span></div><div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;    <a class="code" href="_profiling_8hpp.xhtml#a786492a3881a4c760ab1eec2149f4aba">ARMNN_REPORT_PROFILING_WORKLOAD_DESC</a>(<span class="stringliteral">&quot;NeonQLstmWorkload_Construct&quot;</span>,</div><div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;                                         descriptor.<a class="code" href="structarmnn_1_1_queue_descriptor_with_parameters.xhtml#aad91b9bbf7aa365d304febe79a3d1333">m_Parameters</a>,</div><div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;                                         info,</div><div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;                                         this-&gt;GetGuid());</div><div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;</div><div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;    arm_compute::LSTMParams&lt;arm_compute::ITensor&gt; qLstmParams;</div><div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;</div><div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;    <span class="comment">// Mandatory params</span></div><div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;    m_InputToForgetWeightsTensor = std::make_unique&lt;arm_compute::Tensor&gt;();</div><div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;    BuildArmComputeTensor(*m_InputToForgetWeightsTensor, <a class="code" href="classarmnn_1_1_base_workload.xhtml#afb8d2c8817c75de9d01a4c0e0d5c160b">m_Data</a>.<a class="code" href="structarmnn_1_1_q_lstm_queue_descriptor.xhtml#aab77f54a037658ca9b2bf9cc8a1fadf1">m_InputToForgetWeights</a>-&gt;<a class="code" href="classarmnn_1_1_const_tensor_handle.xhtml#a66e8f43a5b42b500871ed96e15419567">GetTensorInfo</a>());</div><div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;</div><div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;    m_InputToCellWeightsTensor = std::make_unique&lt;arm_compute::Tensor&gt;();</div><div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;    BuildArmComputeTensor(*m_InputToCellWeightsTensor, <a class="code" href="classarmnn_1_1_base_workload.xhtml#afb8d2c8817c75de9d01a4c0e0d5c160b">m_Data</a>.<a class="code" href="structarmnn_1_1_q_lstm_queue_descriptor.xhtml#a841439e3b8dc157a7368b19c9ecb7d03">m_InputToCellWeights</a>-&gt;<a class="code" href="classarmnn_1_1_const_tensor_handle.xhtml#a66e8f43a5b42b500871ed96e15419567">GetTensorInfo</a>());</div><div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;</div><div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;    m_InputToOutputWeightsTensor = std::make_unique&lt;arm_compute::Tensor&gt;();</div><div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;    BuildArmComputeTensor(*m_InputToOutputWeightsTensor, <a class="code" href="classarmnn_1_1_base_workload.xhtml#afb8d2c8817c75de9d01a4c0e0d5c160b">m_Data</a>.<a class="code" href="structarmnn_1_1_q_lstm_queue_descriptor.xhtml#a17ba1c8bcc71a55a95b2a3913f8cb203">m_InputToOutputWeights</a>-&gt;<a class="code" href="classarmnn_1_1_const_tensor_handle.xhtml#a66e8f43a5b42b500871ed96e15419567">GetTensorInfo</a>());</div><div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;</div><div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;    m_RecurrentToForgetWeightsTensor = std::make_unique&lt;arm_compute::Tensor&gt;();</div><div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;    BuildArmComputeTensor(*m_RecurrentToForgetWeightsTensor, <a class="code" href="classarmnn_1_1_base_workload.xhtml#afb8d2c8817c75de9d01a4c0e0d5c160b">m_Data</a>.<a class="code" href="structarmnn_1_1_q_lstm_queue_descriptor.xhtml#adf8571dd1867ee91082bd005f94f2610">m_RecurrentToForgetWeights</a>-&gt;<a class="code" href="classarmnn_1_1_const_tensor_handle.xhtml#a66e8f43a5b42b500871ed96e15419567">GetTensorInfo</a>());</div><div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;</div><div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;    m_RecurrentToCellWeightsTensor = std::make_unique&lt;arm_compute::Tensor&gt;();</div><div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;    BuildArmComputeTensor(*m_RecurrentToCellWeightsTensor, <a class="code" href="classarmnn_1_1_base_workload.xhtml#afb8d2c8817c75de9d01a4c0e0d5c160b">m_Data</a>.<a class="code" href="structarmnn_1_1_q_lstm_queue_descriptor.xhtml#ac18c8b8b2039267d8282e91b4162d8aa">m_RecurrentToCellWeights</a>-&gt;<a class="code" href="classarmnn_1_1_const_tensor_handle.xhtml#a66e8f43a5b42b500871ed96e15419567">GetTensorInfo</a>());</div><div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;</div><div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;    m_RecurrentToOutputWeightsTensor = std::make_unique&lt;arm_compute::Tensor&gt;();</div><div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;    BuildArmComputeTensor(*m_RecurrentToOutputWeightsTensor, <a class="code" href="classarmnn_1_1_base_workload.xhtml#afb8d2c8817c75de9d01a4c0e0d5c160b">m_Data</a>.<a class="code" href="structarmnn_1_1_q_lstm_queue_descriptor.xhtml#a4c27716f61bb68e8ea0bd4e8389ba01a">m_RecurrentToOutputWeights</a>-&gt;<a class="code" href="classarmnn_1_1_const_tensor_handle.xhtml#a66e8f43a5b42b500871ed96e15419567">GetTensorInfo</a>());</div><div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;</div><div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;    m_ForgetGateBiasTensor = std::make_unique&lt;arm_compute::Tensor&gt;();</div><div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;    BuildArmComputeTensor(*m_ForgetGateBiasTensor, <a class="code" href="classarmnn_1_1_base_workload.xhtml#afb8d2c8817c75de9d01a4c0e0d5c160b">m_Data</a>.<a class="code" href="structarmnn_1_1_q_lstm_queue_descriptor.xhtml#a29fa293fffbf9c6f00cd75db1dc0a52a">m_ForgetGateBias</a>-&gt;<a class="code" href="classarmnn_1_1_const_tensor_handle.xhtml#a66e8f43a5b42b500871ed96e15419567">GetTensorInfo</a>());</div><div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;</div><div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;    m_CellBiasTensor = std::make_unique&lt;arm_compute::Tensor&gt;();</div><div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;    BuildArmComputeTensor(*m_CellBiasTensor, <a class="code" href="classarmnn_1_1_base_workload.xhtml#afb8d2c8817c75de9d01a4c0e0d5c160b">m_Data</a>.<a class="code" href="structarmnn_1_1_q_lstm_queue_descriptor.xhtml#a6e9593869b82984de198fed27f72cdcf">m_CellBias</a>-&gt;<a class="code" href="classarmnn_1_1_const_tensor_handle.xhtml#a66e8f43a5b42b500871ed96e15419567">GetTensorInfo</a>());</div><div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;</div><div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;    m_OutputGateBiasTensor = std::make_unique&lt;arm_compute::Tensor&gt;();</div><div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;    BuildArmComputeTensor(*m_OutputGateBiasTensor, <a class="code" href="classarmnn_1_1_base_workload.xhtml#afb8d2c8817c75de9d01a4c0e0d5c160b">m_Data</a>.<a class="code" href="structarmnn_1_1_q_lstm_queue_descriptor.xhtml#a5ff4158b1b363b898d0da04c42d37ce0">m_OutputGateBias</a>-&gt;<a class="code" href="classarmnn_1_1_const_tensor_handle.xhtml#a66e8f43a5b42b500871ed96e15419567">GetTensorInfo</a>());</div><div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;</div><div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;    <span class="comment">// Create tensors for optional params if they are enabled</span></div><div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;    <span class="keywordflow">if</span> (<a class="code" href="classarmnn_1_1_base_workload.xhtml#afb8d2c8817c75de9d01a4c0e0d5c160b">m_Data</a>.<a class="code" href="structarmnn_1_1_queue_descriptor_with_parameters.xhtml#aad91b9bbf7aa365d304febe79a3d1333">m_Parameters</a>.<a class="code" href="structarmnn_1_1_q_lstm_descriptor.xhtml#a2837b4396f20c956952d1a7286cab5f8">m_PeepholeEnabled</a>)</div><div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;    {</div><div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;        m_CellToInputWeightsTensor = std::make_unique&lt;arm_compute::Tensor&gt;();</div><div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;</div><div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;        <span class="keywordflow">if</span> (!<a class="code" href="classarmnn_1_1_base_workload.xhtml#afb8d2c8817c75de9d01a4c0e0d5c160b">m_Data</a>.<a class="code" href="structarmnn_1_1_queue_descriptor_with_parameters.xhtml#aad91b9bbf7aa365d304febe79a3d1333">m_Parameters</a>.<a class="code" href="structarmnn_1_1_q_lstm_descriptor.xhtml#ad474e5c51a0b194ef32e812b86c0cbdb">m_CifgEnabled</a>)</div><div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;        {</div><div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;            <span class="comment">// In ACL this is categorised as a CIFG param and not a Peephole param</span></div><div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;            BuildArmComputeTensor(*m_CellToInputWeightsTensor, <a class="code" href="classarmnn_1_1_base_workload.xhtml#afb8d2c8817c75de9d01a4c0e0d5c160b">m_Data</a>.<a class="code" href="structarmnn_1_1_q_lstm_queue_descriptor.xhtml#a951b7c90b862138071a298065f16be61">m_CellToInputWeights</a>-&gt;<a class="code" href="classarmnn_1_1_const_tensor_handle.xhtml#a66e8f43a5b42b500871ed96e15419567">GetTensorInfo</a>());</div><div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;        }</div><div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;</div><div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;        m_CellToForgetWeightsTensor = std::make_unique&lt;arm_compute::Tensor&gt;();</div><div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;        BuildArmComputeTensor(*m_CellToForgetWeightsTensor, <a class="code" href="classarmnn_1_1_base_workload.xhtml#afb8d2c8817c75de9d01a4c0e0d5c160b">m_Data</a>.<a class="code" href="structarmnn_1_1_q_lstm_queue_descriptor.xhtml#a20c10fcb26657477377d07b7b1e13120">m_CellToForgetWeights</a>-&gt;<a class="code" href="classarmnn_1_1_const_tensor_handle.xhtml#a66e8f43a5b42b500871ed96e15419567">GetTensorInfo</a>());</div><div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;</div><div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;        m_CellToOutputWeightsTensor = std::make_unique&lt;arm_compute::Tensor&gt;();</div><div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;        BuildArmComputeTensor(*m_CellToOutputWeightsTensor, <a class="code" href="classarmnn_1_1_base_workload.xhtml#afb8d2c8817c75de9d01a4c0e0d5c160b">m_Data</a>.<a class="code" href="structarmnn_1_1_q_lstm_queue_descriptor.xhtml#aa09f7bdb9fd0d06b6386e412a4e72dd6">m_CellToOutputWeights</a>-&gt;<a class="code" href="classarmnn_1_1_const_tensor_handle.xhtml#a66e8f43a5b42b500871ed96e15419567">GetTensorInfo</a>());</div><div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;</div><div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;        <span class="comment">// Set Peephole params</span></div><div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;        qLstmParams.set_peephole_params(m_CellToForgetWeightsTensor.get(),</div><div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;                                        m_CellToOutputWeightsTensor.get());</div><div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;    }</div><div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;</div><div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;    <span class="keywordflow">if</span> (<a class="code" href="classarmnn_1_1_base_workload.xhtml#afb8d2c8817c75de9d01a4c0e0d5c160b">m_Data</a>.<a class="code" href="structarmnn_1_1_queue_descriptor_with_parameters.xhtml#aad91b9bbf7aa365d304febe79a3d1333">m_Parameters</a>.<a class="code" href="structarmnn_1_1_q_lstm_descriptor.xhtml#a6c9de81fc65b3c4924cab11907075a17">m_ProjectionEnabled</a>)</div><div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;    {</div><div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;        m_ProjectionWeightsTensor = std::make_unique&lt;arm_compute::Tensor&gt;();</div><div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;        BuildArmComputeTensor(*m_ProjectionWeightsTensor, <a class="code" href="classarmnn_1_1_base_workload.xhtml#afb8d2c8817c75de9d01a4c0e0d5c160b">m_Data</a>.<a class="code" href="structarmnn_1_1_q_lstm_queue_descriptor.xhtml#a3ead2ef8da00b2709d561d85996fc513">m_ProjectionWeights</a>-&gt;<a class="code" href="classarmnn_1_1_const_tensor_handle.xhtml#a66e8f43a5b42b500871ed96e15419567">GetTensorInfo</a>());</div><div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;</div><div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;        m_ProjectionBiasTensor = std::make_unique&lt;arm_compute::Tensor&gt;();</div><div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;        <span class="keywordflow">if</span> (<a class="code" href="classarmnn_1_1_base_workload.xhtml#afb8d2c8817c75de9d01a4c0e0d5c160b">m_Data</a>.<a class="code" href="structarmnn_1_1_q_lstm_queue_descriptor.xhtml#ac668b31de6fb0f19d4c793d5ed3c3316">m_ProjectionBias</a> != <span class="keyword">nullptr</span>)</div><div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;        {</div><div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;            BuildArmComputeTensor(*m_ProjectionBiasTensor, <a class="code" href="classarmnn_1_1_base_workload.xhtml#afb8d2c8817c75de9d01a4c0e0d5c160b">m_Data</a>.<a class="code" href="structarmnn_1_1_q_lstm_queue_descriptor.xhtml#ac668b31de6fb0f19d4c793d5ed3c3316">m_ProjectionBias</a>-&gt;<a class="code" href="classarmnn_1_1_const_tensor_handle.xhtml#a66e8f43a5b42b500871ed96e15419567">GetTensorInfo</a>());</div><div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;        }</div><div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;</div><div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;        <span class="comment">// Set projection params</span></div><div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;        qLstmParams.set_projection_params(</div><div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;            m_ProjectionWeightsTensor.get(),</div><div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;            <a class="code" href="classarmnn_1_1_base_workload.xhtml#afb8d2c8817c75de9d01a4c0e0d5c160b">m_Data</a>.<a class="code" href="structarmnn_1_1_q_lstm_queue_descriptor.xhtml#ac668b31de6fb0f19d4c793d5ed3c3316">m_ProjectionBias</a> != <span class="keyword">nullptr</span> ? m_ProjectionBiasTensor.get() : <span class="keyword">nullptr</span>);</div><div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;    }</div><div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;</div><div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;    <span class="keywordflow">if</span> (<a class="code" href="classarmnn_1_1_base_workload.xhtml#afb8d2c8817c75de9d01a4c0e0d5c160b">m_Data</a>.<a class="code" href="structarmnn_1_1_queue_descriptor_with_parameters.xhtml#aad91b9bbf7aa365d304febe79a3d1333">m_Parameters</a>.<a class="code" href="structarmnn_1_1_q_lstm_descriptor.xhtml#a4a8ec49f130084445d44297549254780">m_LayerNormEnabled</a>)</div><div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;    {</div><div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;        m_InputLayerNormWeightsTensor = std::make_unique&lt;arm_compute::Tensor&gt;();</div><div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;</div><div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;        <span class="keywordflow">if</span> (!<a class="code" href="classarmnn_1_1_base_workload.xhtml#afb8d2c8817c75de9d01a4c0e0d5c160b">m_Data</a>.<a class="code" href="structarmnn_1_1_queue_descriptor_with_parameters.xhtml#aad91b9bbf7aa365d304febe79a3d1333">m_Parameters</a>.<a class="code" href="structarmnn_1_1_q_lstm_descriptor.xhtml#ad474e5c51a0b194ef32e812b86c0cbdb">m_CifgEnabled</a>)</div><div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;        {</div><div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;            BuildArmComputeTensor(*m_InputLayerNormWeightsTensor, <a class="code" href="classarmnn_1_1_base_workload.xhtml#afb8d2c8817c75de9d01a4c0e0d5c160b">m_Data</a>.<a class="code" href="structarmnn_1_1_q_lstm_queue_descriptor.xhtml#a1dbad32cad5c0437e1272f59fedf52ea">m_InputLayerNormWeights</a>-&gt;<a class="code" href="classarmnn_1_1_const_tensor_handle.xhtml#a66e8f43a5b42b500871ed96e15419567">GetTensorInfo</a>());</div><div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;        }</div><div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;</div><div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;        m_ForgetLayerNormWeightsTensor = std::make_unique&lt;arm_compute::Tensor&gt;();</div><div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;        BuildArmComputeTensor(*m_ForgetLayerNormWeightsTensor, <a class="code" href="classarmnn_1_1_base_workload.xhtml#afb8d2c8817c75de9d01a4c0e0d5c160b">m_Data</a>.<a class="code" href="structarmnn_1_1_q_lstm_queue_descriptor.xhtml#ad9442e26aa79f896da5f404ab825a9c8">m_ForgetLayerNormWeights</a>-&gt;<a class="code" href="classarmnn_1_1_const_tensor_handle.xhtml#a66e8f43a5b42b500871ed96e15419567">GetTensorInfo</a>());</div><div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;</div><div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;        m_CellLayerNormWeightsTensor = std::make_unique&lt;arm_compute::Tensor&gt;();</div><div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;        BuildArmComputeTensor(*m_CellLayerNormWeightsTensor, <a class="code" href="classarmnn_1_1_base_workload.xhtml#afb8d2c8817c75de9d01a4c0e0d5c160b">m_Data</a>.<a class="code" href="structarmnn_1_1_q_lstm_queue_descriptor.xhtml#aeef6f1ac3efad8ec8b0a7118652b64c9">m_CellLayerNormWeights</a>-&gt;<a class="code" href="classarmnn_1_1_const_tensor_handle.xhtml#a66e8f43a5b42b500871ed96e15419567">GetTensorInfo</a>());</div><div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;</div><div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;        m_OutputLayerNormWeightsTensor = std::make_unique&lt;arm_compute::Tensor&gt;();</div><div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;        BuildArmComputeTensor(*m_OutputLayerNormWeightsTensor, <a class="code" href="classarmnn_1_1_base_workload.xhtml#afb8d2c8817c75de9d01a4c0e0d5c160b">m_Data</a>.<a class="code" href="structarmnn_1_1_q_lstm_queue_descriptor.xhtml#a0e0f66bd03c88f3d2dc666f581d3cf12">m_OutputLayerNormWeights</a>-&gt;<a class="code" href="classarmnn_1_1_const_tensor_handle.xhtml#a66e8f43a5b42b500871ed96e15419567">GetTensorInfo</a>());</div><div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;</div><div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;        <span class="comment">// Set layer norm params</span></div><div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;        qLstmParams.set_layer_normalization_params(</div><div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;            <a class="code" href="classarmnn_1_1_base_workload.xhtml#afb8d2c8817c75de9d01a4c0e0d5c160b">m_Data</a>.<a class="code" href="structarmnn_1_1_q_lstm_queue_descriptor.xhtml#a1dbad32cad5c0437e1272f59fedf52ea">m_InputLayerNormWeights</a> != <span class="keyword">nullptr</span> ? m_InputLayerNormWeightsTensor.get() : <span class="keyword">nullptr</span>,</div><div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;            m_ForgetLayerNormWeightsTensor.get(),</div><div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;            m_CellLayerNormWeightsTensor.get(),</div><div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;            m_OutputLayerNormWeightsTensor.get());</div><div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;    }</div><div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;</div><div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;    <span class="keywordflow">if</span> (!<a class="code" href="classarmnn_1_1_base_workload.xhtml#afb8d2c8817c75de9d01a4c0e0d5c160b">m_Data</a>.<a class="code" href="structarmnn_1_1_queue_descriptor_with_parameters.xhtml#aad91b9bbf7aa365d304febe79a3d1333">m_Parameters</a>.<a class="code" href="structarmnn_1_1_q_lstm_descriptor.xhtml#ad474e5c51a0b194ef32e812b86c0cbdb">m_CifgEnabled</a>)</div><div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;    {</div><div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;        m_InputToInputWeightsTensor = std::make_unique&lt;arm_compute::Tensor&gt;();</div><div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;        BuildArmComputeTensor(*m_InputToInputWeightsTensor, <a class="code" href="classarmnn_1_1_base_workload.xhtml#afb8d2c8817c75de9d01a4c0e0d5c160b">m_Data</a>.<a class="code" href="structarmnn_1_1_q_lstm_queue_descriptor.xhtml#ab160eba2493d5fe52185c0986dcb190c">m_InputToInputWeights</a>-&gt;<a class="code" href="classarmnn_1_1_const_tensor_handle.xhtml#a66e8f43a5b42b500871ed96e15419567">GetTensorInfo</a>());</div><div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;</div><div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;        m_RecurrentToInputWeightsTensor = std::make_unique&lt;arm_compute::Tensor&gt;();</div><div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;        BuildArmComputeTensor(*m_RecurrentToInputWeightsTensor, <a class="code" href="classarmnn_1_1_base_workload.xhtml#afb8d2c8817c75de9d01a4c0e0d5c160b">m_Data</a>.<a class="code" href="structarmnn_1_1_q_lstm_queue_descriptor.xhtml#a299587d4f3fca029492700f3e2585bd8">m_RecurrentToInputWeights</a>-&gt;<a class="code" href="classarmnn_1_1_const_tensor_handle.xhtml#a66e8f43a5b42b500871ed96e15419567">GetTensorInfo</a>());</div><div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;</div><div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;        m_InputGateBiasTensor = std::make_unique&lt;arm_compute::Tensor&gt;();</div><div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;        BuildArmComputeTensor(*m_InputGateBiasTensor, <a class="code" href="classarmnn_1_1_base_workload.xhtml#afb8d2c8817c75de9d01a4c0e0d5c160b">m_Data</a>.<a class="code" href="structarmnn_1_1_q_lstm_queue_descriptor.xhtml#a44eb7524badcca9b2073359e3814c98b">m_InputGateBias</a>-&gt;<a class="code" href="classarmnn_1_1_const_tensor_handle.xhtml#a66e8f43a5b42b500871ed96e15419567">GetTensorInfo</a>());</div><div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;</div><div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;        <span class="comment">// Set CIFG params</span></div><div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;        qLstmParams.set_cifg_params(</div><div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;            m_InputToInputWeightsTensor.get(),</div><div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;            m_RecurrentToInputWeightsTensor.get(),</div><div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;            <a class="code" href="classarmnn_1_1_base_workload.xhtml#afb8d2c8817c75de9d01a4c0e0d5c160b">m_Data</a>.<a class="code" href="structarmnn_1_1_q_lstm_queue_descriptor.xhtml#a951b7c90b862138071a298065f16be61">m_CellToInputWeights</a> != <span class="keyword">nullptr</span> ? m_CellToInputWeightsTensor.get() : <span class="keyword">nullptr</span>,</div><div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;            m_InputGateBiasTensor.get());</div><div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;    }</div><div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;</div><div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;    <span class="comment">// Input/Output tensors</span></div><div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;    <span class="keyword">const</span> arm_compute::ITensor&amp; input         = <span class="keyword">static_cast&lt;</span><a class="code" href="classarmnn_1_1_i_acl_tensor_handle.xhtml">IAclTensorHandle</a>*<span class="keyword">&gt;</span>(<a class="code" href="classarmnn_1_1_base_workload.xhtml#afb8d2c8817c75de9d01a4c0e0d5c160b">m_Data</a>.<a class="code" href="structarmnn_1_1_queue_descriptor.xhtml#a4b50e46a6810018f3edecfb68b2a76b3">m_Inputs</a>[0])-&gt;GetTensor();</div><div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;    arm_compute::ITensor&amp; outputStateIn = <span class="keyword">static_cast&lt;</span><a class="code" href="classarmnn_1_1_i_acl_tensor_handle.xhtml">IAclTensorHandle</a>*<span class="keyword">&gt;</span>(<a class="code" href="classarmnn_1_1_base_workload.xhtml#afb8d2c8817c75de9d01a4c0e0d5c160b">m_Data</a>.<a class="code" href="structarmnn_1_1_queue_descriptor.xhtml#a4b50e46a6810018f3edecfb68b2a76b3">m_Inputs</a>[1])-&gt;GetTensor();</div><div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;    <span class="keyword">const</span> arm_compute::ITensor&amp; cellStateIn   = <span class="keyword">static_cast&lt;</span><a class="code" href="classarmnn_1_1_i_acl_tensor_handle.xhtml">IAclTensorHandle</a>*<span class="keyword">&gt;</span>(<a class="code" href="classarmnn_1_1_base_workload.xhtml#afb8d2c8817c75de9d01a4c0e0d5c160b">m_Data</a>.<a class="code" href="structarmnn_1_1_queue_descriptor.xhtml#a4b50e46a6810018f3edecfb68b2a76b3">m_Inputs</a>[2])-&gt;GetTensor();</div><div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;</div><div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;    arm_compute::ITensor&amp; outputStateOut = <span class="keyword">static_cast&lt;</span><a class="code" href="classarmnn_1_1_i_acl_tensor_handle.xhtml">IAclTensorHandle</a>*<span class="keyword">&gt;</span>(<a class="code" href="classarmnn_1_1_base_workload.xhtml#afb8d2c8817c75de9d01a4c0e0d5c160b">m_Data</a>.<a class="code" href="structarmnn_1_1_queue_descriptor.xhtml#a6abd491bb99ffe88bd472c1ae5a1ed1a">m_Outputs</a>[0])-&gt;GetTensor();</div><div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;    arm_compute::ITensor&amp; cellStateOut   = <span class="keyword">static_cast&lt;</span><a class="code" href="classarmnn_1_1_i_acl_tensor_handle.xhtml">IAclTensorHandle</a>*<span class="keyword">&gt;</span>(<a class="code" href="classarmnn_1_1_base_workload.xhtml#afb8d2c8817c75de9d01a4c0e0d5c160b">m_Data</a>.<a class="code" href="structarmnn_1_1_queue_descriptor.xhtml#a6abd491bb99ffe88bd472c1ae5a1ed1a">m_Outputs</a>[1])-&gt;GetTensor();</div><div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;    arm_compute::ITensor&amp; output         = <span class="keyword">static_cast&lt;</span><a class="code" href="classarmnn_1_1_i_acl_tensor_handle.xhtml">IAclTensorHandle</a>*<span class="keyword">&gt;</span>(<a class="code" href="classarmnn_1_1_base_workload.xhtml#afb8d2c8817c75de9d01a4c0e0d5c160b">m_Data</a>.<a class="code" href="structarmnn_1_1_queue_descriptor.xhtml#a6abd491bb99ffe88bd472c1ae5a1ed1a">m_Outputs</a>[2])-&gt;GetTensor();</div><div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;</div><div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;    <span class="comment">// Set scalar descriptor params</span></div><div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;    qLstmParams.set_cell_clip_params(<a class="code" href="classarmnn_1_1_base_workload.xhtml#afb8d2c8817c75de9d01a4c0e0d5c160b">m_Data</a>.<a class="code" href="structarmnn_1_1_queue_descriptor_with_parameters.xhtml#aad91b9bbf7aa365d304febe79a3d1333">m_Parameters</a>.<a class="code" href="structarmnn_1_1_q_lstm_descriptor.xhtml#ac81fb0e66dc623dc37c77f219f53a6d3">m_CellClip</a>);</div><div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;    qLstmParams.set_projection_clip_params(<a class="code" href="classarmnn_1_1_base_workload.xhtml#afb8d2c8817c75de9d01a4c0e0d5c160b">m_Data</a>.<a class="code" href="structarmnn_1_1_queue_descriptor_with_parameters.xhtml#aad91b9bbf7aa365d304febe79a3d1333">m_Parameters</a>.<a class="code" href="structarmnn_1_1_q_lstm_descriptor.xhtml#aa6a518b65088f34803b3214334bdff61">m_ProjectionClip</a>);</div><div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;    qLstmParams.set_hidden_state_params(<a class="code" href="classarmnn_1_1_base_workload.xhtml#afb8d2c8817c75de9d01a4c0e0d5c160b">m_Data</a>.<a class="code" href="structarmnn_1_1_queue_descriptor_with_parameters.xhtml#aad91b9bbf7aa365d304febe79a3d1333">m_Parameters</a>.<a class="code" href="structarmnn_1_1_q_lstm_descriptor.xhtml#a4556cbd764d4848d8ad0637a9eed580d">m_HiddenStateZeroPoint</a>,</div><div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;                                        <a class="code" href="classarmnn_1_1_base_workload.xhtml#afb8d2c8817c75de9d01a4c0e0d5c160b">m_Data</a>.<a class="code" href="structarmnn_1_1_queue_descriptor_with_parameters.xhtml#aad91b9bbf7aa365d304febe79a3d1333">m_Parameters</a>.<a class="code" href="structarmnn_1_1_q_lstm_descriptor.xhtml#af8f724af7210b52529216feefa993c98">m_HiddenStateScale</a>);</div><div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;    qLstmParams.set_matmul_scale_params(<a class="code" href="classarmnn_1_1_base_workload.xhtml#afb8d2c8817c75de9d01a4c0e0d5c160b">m_Data</a>.<a class="code" href="structarmnn_1_1_queue_descriptor_with_parameters.xhtml#aad91b9bbf7aa365d304febe79a3d1333">m_Parameters</a>.<a class="code" href="structarmnn_1_1_q_lstm_descriptor.xhtml#a09e1f097944f61cc901240f9300364cf">m_InputIntermediateScale</a>,</div><div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;                                        <a class="code" href="classarmnn_1_1_base_workload.xhtml#afb8d2c8817c75de9d01a4c0e0d5c160b">m_Data</a>.<a class="code" href="structarmnn_1_1_queue_descriptor_with_parameters.xhtml#aad91b9bbf7aa365d304febe79a3d1333">m_Parameters</a>.<a class="code" href="structarmnn_1_1_q_lstm_descriptor.xhtml#afec7f36158448f723b426a9527acb189">m_ForgetIntermediateScale</a>,</div><div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;                                        <a class="code" href="classarmnn_1_1_base_workload.xhtml#afb8d2c8817c75de9d01a4c0e0d5c160b">m_Data</a>.<a class="code" href="structarmnn_1_1_queue_descriptor_with_parameters.xhtml#aad91b9bbf7aa365d304febe79a3d1333">m_Parameters</a>.<a class="code" href="structarmnn_1_1_q_lstm_descriptor.xhtml#a0477ee1b44ace6090119178eea78cb0b">m_CellIntermediateScale</a>,</div><div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160;                                        <a class="code" href="classarmnn_1_1_base_workload.xhtml#afb8d2c8817c75de9d01a4c0e0d5c160b">m_Data</a>.<a class="code" href="structarmnn_1_1_queue_descriptor_with_parameters.xhtml#aad91b9bbf7aa365d304febe79a3d1333">m_Parameters</a>.<a class="code" href="structarmnn_1_1_q_lstm_descriptor.xhtml#aa43409f9b457352c95c89f20ce5d844d">m_OutputIntermediateScale</a>);</div><div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;</div><div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160;    <span class="comment">// QLSTM NEON configure</span></div><div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160;    m_QLstmLayer.configure(&amp;input,</div><div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160;                           m_InputToForgetWeightsTensor.get(),</div><div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160;                           m_InputToCellWeightsTensor.get(),</div><div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160;                           m_InputToOutputWeightsTensor.get(),</div><div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;                           m_RecurrentToForgetWeightsTensor.get(),</div><div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160;                           m_RecurrentToCellWeightsTensor.get(),</div><div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160;                           m_RecurrentToOutputWeightsTensor.get(),</div><div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160;                           m_ForgetGateBiasTensor.get(),</div><div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160;                           m_CellBiasTensor.get(),</div><div class="line"><a name="l00169"></a><span class="lineno">  169</span>&#160;                           m_OutputGateBiasTensor.get(),</div><div class="line"><a name="l00170"></a><span class="lineno">  170</span>&#160;                           &amp;cellStateIn,</div><div class="line"><a name="l00171"></a><span class="lineno">  171</span>&#160;                           &amp;outputStateIn,</div><div class="line"><a name="l00172"></a><span class="lineno">  172</span>&#160;                           &amp;cellStateOut,</div><div class="line"><a name="l00173"></a><span class="lineno">  173</span>&#160;                           &amp;outputStateOut,</div><div class="line"><a name="l00174"></a><span class="lineno">  174</span>&#160;                           &amp;output,</div><div class="line"><a name="l00175"></a><span class="lineno">  175</span>&#160;                           qLstmParams);</div><div class="line"><a name="l00176"></a><span class="lineno">  176</span>&#160;</div><div class="line"><a name="l00177"></a><span class="lineno">  177</span>&#160;    <span class="comment">// Initialise ACL tensor data for mandatory params</span></div><div class="line"><a name="l00178"></a><span class="lineno">  178</span>&#160;    <a class="code" href="namespacearmnn.xhtml#acf8e1f43fc13cf7603564cc15743fce2">InitializeArmComputeTensorData</a>(*m_InputToForgetWeightsTensor, <a class="code" href="classarmnn_1_1_base_workload.xhtml#afb8d2c8817c75de9d01a4c0e0d5c160b">m_Data</a>.<a class="code" href="structarmnn_1_1_q_lstm_queue_descriptor.xhtml#aab77f54a037658ca9b2bf9cc8a1fadf1">m_InputToForgetWeights</a>);</div><div class="line"><a name="l00179"></a><span class="lineno">  179</span>&#160;    <a class="code" href="namespacearmnn.xhtml#acf8e1f43fc13cf7603564cc15743fce2">InitializeArmComputeTensorData</a>(*m_InputToCellWeightsTensor,   <a class="code" href="classarmnn_1_1_base_workload.xhtml#afb8d2c8817c75de9d01a4c0e0d5c160b">m_Data</a>.<a class="code" href="structarmnn_1_1_q_lstm_queue_descriptor.xhtml#a841439e3b8dc157a7368b19c9ecb7d03">m_InputToCellWeights</a>);</div><div class="line"><a name="l00180"></a><span class="lineno">  180</span>&#160;    <a class="code" href="namespacearmnn.xhtml#acf8e1f43fc13cf7603564cc15743fce2">InitializeArmComputeTensorData</a>(*m_InputToOutputWeightsTensor, <a class="code" href="classarmnn_1_1_base_workload.xhtml#afb8d2c8817c75de9d01a4c0e0d5c160b">m_Data</a>.<a class="code" href="structarmnn_1_1_q_lstm_queue_descriptor.xhtml#a17ba1c8bcc71a55a95b2a3913f8cb203">m_InputToOutputWeights</a>);</div><div class="line"><a name="l00181"></a><span class="lineno">  181</span>&#160;</div><div class="line"><a name="l00182"></a><span class="lineno">  182</span>&#160;    <a class="code" href="namespacearmnn.xhtml#acf8e1f43fc13cf7603564cc15743fce2">InitializeArmComputeTensorData</a>(*m_RecurrentToForgetWeightsTensor, <a class="code" href="classarmnn_1_1_base_workload.xhtml#afb8d2c8817c75de9d01a4c0e0d5c160b">m_Data</a>.<a class="code" href="structarmnn_1_1_q_lstm_queue_descriptor.xhtml#adf8571dd1867ee91082bd005f94f2610">m_RecurrentToForgetWeights</a>);</div><div class="line"><a name="l00183"></a><span class="lineno">  183</span>&#160;    <a class="code" href="namespacearmnn.xhtml#acf8e1f43fc13cf7603564cc15743fce2">InitializeArmComputeTensorData</a>(*m_RecurrentToCellWeightsTensor,   <a class="code" href="classarmnn_1_1_base_workload.xhtml#afb8d2c8817c75de9d01a4c0e0d5c160b">m_Data</a>.<a class="code" href="structarmnn_1_1_q_lstm_queue_descriptor.xhtml#ac18c8b8b2039267d8282e91b4162d8aa">m_RecurrentToCellWeights</a>);</div><div class="line"><a name="l00184"></a><span class="lineno">  184</span>&#160;    <a class="code" href="namespacearmnn.xhtml#acf8e1f43fc13cf7603564cc15743fce2">InitializeArmComputeTensorData</a>(*m_RecurrentToOutputWeightsTensor, <a class="code" href="classarmnn_1_1_base_workload.xhtml#afb8d2c8817c75de9d01a4c0e0d5c160b">m_Data</a>.<a class="code" href="structarmnn_1_1_q_lstm_queue_descriptor.xhtml#a4c27716f61bb68e8ea0bd4e8389ba01a">m_RecurrentToOutputWeights</a>);</div><div class="line"><a name="l00185"></a><span class="lineno">  185</span>&#160;</div><div class="line"><a name="l00186"></a><span class="lineno">  186</span>&#160;    <a class="code" href="namespacearmnn.xhtml#acf8e1f43fc13cf7603564cc15743fce2">InitializeArmComputeTensorData</a>(*m_ForgetGateBiasTensor, <a class="code" href="classarmnn_1_1_base_workload.xhtml#afb8d2c8817c75de9d01a4c0e0d5c160b">m_Data</a>.<a class="code" href="structarmnn_1_1_q_lstm_queue_descriptor.xhtml#a29fa293fffbf9c6f00cd75db1dc0a52a">m_ForgetGateBias</a>);</div><div class="line"><a name="l00187"></a><span class="lineno">  187</span>&#160;    <a class="code" href="namespacearmnn.xhtml#acf8e1f43fc13cf7603564cc15743fce2">InitializeArmComputeTensorData</a>(*m_CellBiasTensor,       <a class="code" href="classarmnn_1_1_base_workload.xhtml#afb8d2c8817c75de9d01a4c0e0d5c160b">m_Data</a>.<a class="code" href="structarmnn_1_1_q_lstm_queue_descriptor.xhtml#a6e9593869b82984de198fed27f72cdcf">m_CellBias</a>);</div><div class="line"><a name="l00188"></a><span class="lineno">  188</span>&#160;    <a class="code" href="namespacearmnn.xhtml#acf8e1f43fc13cf7603564cc15743fce2">InitializeArmComputeTensorData</a>(*m_OutputGateBiasTensor, <a class="code" href="classarmnn_1_1_base_workload.xhtml#afb8d2c8817c75de9d01a4c0e0d5c160b">m_Data</a>.<a class="code" href="structarmnn_1_1_q_lstm_queue_descriptor.xhtml#a5ff4158b1b363b898d0da04c42d37ce0">m_OutputGateBias</a>);</div><div class="line"><a name="l00189"></a><span class="lineno">  189</span>&#160;</div><div class="line"><a name="l00190"></a><span class="lineno">  190</span>&#160;    <span class="comment">// Initialise ACL tensor data for optional params</span></div><div class="line"><a name="l00191"></a><span class="lineno">  191</span>&#160;    <span class="keywordflow">if</span> (!<a class="code" href="classarmnn_1_1_base_workload.xhtml#afb8d2c8817c75de9d01a4c0e0d5c160b">m_Data</a>.<a class="code" href="structarmnn_1_1_queue_descriptor_with_parameters.xhtml#aad91b9bbf7aa365d304febe79a3d1333">m_Parameters</a>.<a class="code" href="structarmnn_1_1_q_lstm_descriptor.xhtml#ad474e5c51a0b194ef32e812b86c0cbdb">m_CifgEnabled</a>)</div><div class="line"><a name="l00192"></a><span class="lineno">  192</span>&#160;    {</div><div class="line"><a name="l00193"></a><span class="lineno">  193</span>&#160;        <a class="code" href="namespacearmnn.xhtml#acf8e1f43fc13cf7603564cc15743fce2">InitializeArmComputeTensorData</a>(*m_InputToInputWeightsTensor,     <a class="code" href="classarmnn_1_1_base_workload.xhtml#afb8d2c8817c75de9d01a4c0e0d5c160b">m_Data</a>.<a class="code" href="structarmnn_1_1_q_lstm_queue_descriptor.xhtml#ab160eba2493d5fe52185c0986dcb190c">m_InputToInputWeights</a>);</div><div class="line"><a name="l00194"></a><span class="lineno">  194</span>&#160;        <a class="code" href="namespacearmnn.xhtml#acf8e1f43fc13cf7603564cc15743fce2">InitializeArmComputeTensorData</a>(*m_RecurrentToInputWeightsTensor, <a class="code" href="classarmnn_1_1_base_workload.xhtml#afb8d2c8817c75de9d01a4c0e0d5c160b">m_Data</a>.<a class="code" href="structarmnn_1_1_q_lstm_queue_descriptor.xhtml#a299587d4f3fca029492700f3e2585bd8">m_RecurrentToInputWeights</a>);</div><div class="line"><a name="l00195"></a><span class="lineno">  195</span>&#160;        <a class="code" href="namespacearmnn.xhtml#acf8e1f43fc13cf7603564cc15743fce2">InitializeArmComputeTensorData</a>(*m_InputGateBiasTensor,           <a class="code" href="classarmnn_1_1_base_workload.xhtml#afb8d2c8817c75de9d01a4c0e0d5c160b">m_Data</a>.<a class="code" href="structarmnn_1_1_q_lstm_queue_descriptor.xhtml#a44eb7524badcca9b2073359e3814c98b">m_InputGateBias</a>);</div><div class="line"><a name="l00196"></a><span class="lineno">  196</span>&#160;    }</div><div class="line"><a name="l00197"></a><span class="lineno">  197</span>&#160;</div><div class="line"><a name="l00198"></a><span class="lineno">  198</span>&#160;    <span class="keywordflow">if</span> (<a class="code" href="classarmnn_1_1_base_workload.xhtml#afb8d2c8817c75de9d01a4c0e0d5c160b">m_Data</a>.<a class="code" href="structarmnn_1_1_queue_descriptor_with_parameters.xhtml#aad91b9bbf7aa365d304febe79a3d1333">m_Parameters</a>.<a class="code" href="structarmnn_1_1_q_lstm_descriptor.xhtml#a6c9de81fc65b3c4924cab11907075a17">m_ProjectionEnabled</a>)</div><div class="line"><a name="l00199"></a><span class="lineno">  199</span>&#160;    {</div><div class="line"><a name="l00200"></a><span class="lineno">  200</span>&#160;        <a class="code" href="namespacearmnn.xhtml#acf8e1f43fc13cf7603564cc15743fce2">InitializeArmComputeTensorData</a>(*m_ProjectionWeightsTensor, <a class="code" href="classarmnn_1_1_base_workload.xhtml#afb8d2c8817c75de9d01a4c0e0d5c160b">m_Data</a>.<a class="code" href="structarmnn_1_1_q_lstm_queue_descriptor.xhtml#a3ead2ef8da00b2709d561d85996fc513">m_ProjectionWeights</a>);</div><div class="line"><a name="l00201"></a><span class="lineno">  201</span>&#160;</div><div class="line"><a name="l00202"></a><span class="lineno">  202</span>&#160;        <span class="keywordflow">if</span> (<a class="code" href="classarmnn_1_1_base_workload.xhtml#afb8d2c8817c75de9d01a4c0e0d5c160b">m_Data</a>.<a class="code" href="structarmnn_1_1_q_lstm_queue_descriptor.xhtml#ac668b31de6fb0f19d4c793d5ed3c3316">m_ProjectionBias</a> != <span class="keyword">nullptr</span>)</div><div class="line"><a name="l00203"></a><span class="lineno">  203</span>&#160;        {</div><div class="line"><a name="l00204"></a><span class="lineno">  204</span>&#160;            <a class="code" href="namespacearmnn.xhtml#acf8e1f43fc13cf7603564cc15743fce2">InitializeArmComputeTensorData</a>(*m_ProjectionBiasTensor, <a class="code" href="classarmnn_1_1_base_workload.xhtml#afb8d2c8817c75de9d01a4c0e0d5c160b">m_Data</a>.<a class="code" href="structarmnn_1_1_q_lstm_queue_descriptor.xhtml#ac668b31de6fb0f19d4c793d5ed3c3316">m_ProjectionBias</a>);</div><div class="line"><a name="l00205"></a><span class="lineno">  205</span>&#160;        }</div><div class="line"><a name="l00206"></a><span class="lineno">  206</span>&#160;    }</div><div class="line"><a name="l00207"></a><span class="lineno">  207</span>&#160;</div><div class="line"><a name="l00208"></a><span class="lineno">  208</span>&#160;    <span class="keywordflow">if</span> (<a class="code" href="classarmnn_1_1_base_workload.xhtml#afb8d2c8817c75de9d01a4c0e0d5c160b">m_Data</a>.<a class="code" href="structarmnn_1_1_queue_descriptor_with_parameters.xhtml#aad91b9bbf7aa365d304febe79a3d1333">m_Parameters</a>.<a class="code" href="structarmnn_1_1_q_lstm_descriptor.xhtml#a2837b4396f20c956952d1a7286cab5f8">m_PeepholeEnabled</a>)</div><div class="line"><a name="l00209"></a><span class="lineno">  209</span>&#160;    {</div><div class="line"><a name="l00210"></a><span class="lineno">  210</span>&#160;        <span class="keywordflow">if</span> (!<a class="code" href="classarmnn_1_1_base_workload.xhtml#afb8d2c8817c75de9d01a4c0e0d5c160b">m_Data</a>.<a class="code" href="structarmnn_1_1_queue_descriptor_with_parameters.xhtml#aad91b9bbf7aa365d304febe79a3d1333">m_Parameters</a>.<a class="code" href="structarmnn_1_1_q_lstm_descriptor.xhtml#ad474e5c51a0b194ef32e812b86c0cbdb">m_CifgEnabled</a>)</div><div class="line"><a name="l00211"></a><span class="lineno">  211</span>&#160;        {</div><div class="line"><a name="l00212"></a><span class="lineno">  212</span>&#160;            <a class="code" href="namespacearmnn.xhtml#acf8e1f43fc13cf7603564cc15743fce2">InitializeArmComputeTensorData</a>(*m_CellToInputWeightsTensor, <a class="code" href="classarmnn_1_1_base_workload.xhtml#afb8d2c8817c75de9d01a4c0e0d5c160b">m_Data</a>.<a class="code" href="structarmnn_1_1_q_lstm_queue_descriptor.xhtml#a951b7c90b862138071a298065f16be61">m_CellToInputWeights</a>);</div><div class="line"><a name="l00213"></a><span class="lineno">  213</span>&#160;        }</div><div class="line"><a name="l00214"></a><span class="lineno">  214</span>&#160;</div><div class="line"><a name="l00215"></a><span class="lineno">  215</span>&#160;        <a class="code" href="namespacearmnn.xhtml#acf8e1f43fc13cf7603564cc15743fce2">InitializeArmComputeTensorData</a>(*m_CellToForgetWeightsTensor, <a class="code" href="classarmnn_1_1_base_workload.xhtml#afb8d2c8817c75de9d01a4c0e0d5c160b">m_Data</a>.<a class="code" href="structarmnn_1_1_q_lstm_queue_descriptor.xhtml#a20c10fcb26657477377d07b7b1e13120">m_CellToForgetWeights</a>);</div><div class="line"><a name="l00216"></a><span class="lineno">  216</span>&#160;        <a class="code" href="namespacearmnn.xhtml#acf8e1f43fc13cf7603564cc15743fce2">InitializeArmComputeTensorData</a>(*m_CellToOutputWeightsTensor, <a class="code" href="classarmnn_1_1_base_workload.xhtml#afb8d2c8817c75de9d01a4c0e0d5c160b">m_Data</a>.<a class="code" href="structarmnn_1_1_q_lstm_queue_descriptor.xhtml#aa09f7bdb9fd0d06b6386e412a4e72dd6">m_CellToOutputWeights</a>);</div><div class="line"><a name="l00217"></a><span class="lineno">  217</span>&#160;    }</div><div class="line"><a name="l00218"></a><span class="lineno">  218</span>&#160;</div><div class="line"><a name="l00219"></a><span class="lineno">  219</span>&#160;    <span class="keywordflow">if</span> (<a class="code" href="classarmnn_1_1_base_workload.xhtml#afb8d2c8817c75de9d01a4c0e0d5c160b">m_Data</a>.<a class="code" href="structarmnn_1_1_queue_descriptor_with_parameters.xhtml#aad91b9bbf7aa365d304febe79a3d1333">m_Parameters</a>.<a class="code" href="structarmnn_1_1_q_lstm_descriptor.xhtml#a4a8ec49f130084445d44297549254780">m_LayerNormEnabled</a>)</div><div class="line"><a name="l00220"></a><span class="lineno">  220</span>&#160;    {</div><div class="line"><a name="l00221"></a><span class="lineno">  221</span>&#160;        <span class="keywordflow">if</span> (!<a class="code" href="classarmnn_1_1_base_workload.xhtml#afb8d2c8817c75de9d01a4c0e0d5c160b">m_Data</a>.<a class="code" href="structarmnn_1_1_queue_descriptor_with_parameters.xhtml#aad91b9bbf7aa365d304febe79a3d1333">m_Parameters</a>.<a class="code" href="structarmnn_1_1_q_lstm_descriptor.xhtml#ad474e5c51a0b194ef32e812b86c0cbdb">m_CifgEnabled</a>)</div><div class="line"><a name="l00222"></a><span class="lineno">  222</span>&#160;        {</div><div class="line"><a name="l00223"></a><span class="lineno">  223</span>&#160;            <a class="code" href="namespacearmnn.xhtml#acf8e1f43fc13cf7603564cc15743fce2">InitializeArmComputeTensorData</a>(*m_InputLayerNormWeightsTensor, <a class="code" href="classarmnn_1_1_base_workload.xhtml#afb8d2c8817c75de9d01a4c0e0d5c160b">m_Data</a>.<a class="code" href="structarmnn_1_1_q_lstm_queue_descriptor.xhtml#a1dbad32cad5c0437e1272f59fedf52ea">m_InputLayerNormWeights</a>);</div><div class="line"><a name="l00224"></a><span class="lineno">  224</span>&#160;        }</div><div class="line"><a name="l00225"></a><span class="lineno">  225</span>&#160;</div><div class="line"><a name="l00226"></a><span class="lineno">  226</span>&#160;        <a class="code" href="namespacearmnn.xhtml#acf8e1f43fc13cf7603564cc15743fce2">InitializeArmComputeTensorData</a>(*m_ForgetLayerNormWeightsTensor, <a class="code" href="classarmnn_1_1_base_workload.xhtml#afb8d2c8817c75de9d01a4c0e0d5c160b">m_Data</a>.<a class="code" href="structarmnn_1_1_q_lstm_queue_descriptor.xhtml#ad9442e26aa79f896da5f404ab825a9c8">m_ForgetLayerNormWeights</a>);</div><div class="line"><a name="l00227"></a><span class="lineno">  227</span>&#160;        <a class="code" href="namespacearmnn.xhtml#acf8e1f43fc13cf7603564cc15743fce2">InitializeArmComputeTensorData</a>(*m_CellLayerNormWeightsTensor,   <a class="code" href="classarmnn_1_1_base_workload.xhtml#afb8d2c8817c75de9d01a4c0e0d5c160b">m_Data</a>.<a class="code" href="structarmnn_1_1_q_lstm_queue_descriptor.xhtml#aeef6f1ac3efad8ec8b0a7118652b64c9">m_CellLayerNormWeights</a>);</div><div class="line"><a name="l00228"></a><span class="lineno">  228</span>&#160;        <a class="code" href="namespacearmnn.xhtml#acf8e1f43fc13cf7603564cc15743fce2">InitializeArmComputeTensorData</a>(*m_OutputLayerNormWeightsTensor, <a class="code" href="classarmnn_1_1_base_workload.xhtml#afb8d2c8817c75de9d01a4c0e0d5c160b">m_Data</a>.<a class="code" href="structarmnn_1_1_q_lstm_queue_descriptor.xhtml#a0e0f66bd03c88f3d2dc666f581d3cf12">m_OutputLayerNormWeights</a>);</div><div class="line"><a name="l00229"></a><span class="lineno">  229</span>&#160;    }</div><div class="line"><a name="l00230"></a><span class="lineno">  230</span>&#160;</div><div class="line"><a name="l00231"></a><span class="lineno">  231</span>&#160;    <span class="comment">// QLSTM NEON prepare</span></div><div class="line"><a name="l00232"></a><span class="lineno">  232</span>&#160;    m_QLstmLayer.prepare();</div><div class="line"><a name="l00233"></a><span class="lineno">  233</span>&#160;</div><div class="line"><a name="l00234"></a><span class="lineno">  234</span>&#160;    FreeUnusedTensors();</div><div class="line"><a name="l00235"></a><span class="lineno">  235</span>&#160;}</div><div class="line"><a name="l00236"></a><span class="lineno">  236</span>&#160;</div><div class="line"><a name="l00237"></a><span class="lineno"><a class="line" href="classarmnn_1_1_neon_q_lstm_workload.xhtml#ae071e8822437c78baea75c3aef3a263a">  237</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="classarmnn_1_1_neon_q_lstm_workload.xhtml#ae071e8822437c78baea75c3aef3a263a">NeonQLstmWorkload::Execute</a>()<span class="keyword"> const</span></div><div class="line"><a name="l00238"></a><span class="lineno">  238</span>&#160;<span class="keyword"></span>{</div><div class="line"><a name="l00239"></a><span class="lineno">  239</span>&#160;    <a class="code" href="_neon_workload_utils_8hpp.xhtml#a9165e41bcaf1b90f9ff91ef681e88c4f">ARMNN_SCOPED_PROFILING_EVENT_NEON_GUID</a>(<span class="stringliteral">&quot;NeonQuantizedLstmWorkload_Execute&quot;</span>, this-&gt;<a class="code" href="classarmnn_1_1_base_workload.xhtml#aaff95a48875d8fb4a616352906660ca9">GetGuid</a>());</div><div class="line"><a name="l00240"></a><span class="lineno">  240</span>&#160;    m_QLstmLayer.run();</div><div class="line"><a name="l00241"></a><span class="lineno">  241</span>&#160;}</div><div class="line"><a name="l00242"></a><span class="lineno">  242</span>&#160;</div><div class="line"><a name="l00243"></a><span class="lineno"><a class="line" href="namespacearmnn.xhtml#a6e6f731864d33c0acd4140c7dfe17b0a">  243</a></span>&#160;<a class="code" href="namespacearmnn.xhtml#a67a0db04d321a74b7e7fcfd3f1a3f70b">arm_compute::Status</a> <a class="code" href="namespacearmnn.xhtml#a6e6f731864d33c0acd4140c7dfe17b0a">NeonQLstmWorkloadValidate</a>(<span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a>&amp; input,</div><div class="line"><a name="l00244"></a><span class="lineno">  244</span>&#160;                                              <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a>&amp; cellStateIn,</div><div class="line"><a name="l00245"></a><span class="lineno">  245</span>&#160;                                              <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a>&amp; outputStateIn,</div><div class="line"><a name="l00246"></a><span class="lineno">  246</span>&#160;                                              <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a>&amp; cellStateOut,</div><div class="line"><a name="l00247"></a><span class="lineno">  247</span>&#160;                                              <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a>&amp; outputStateOut,</div><div class="line"><a name="l00248"></a><span class="lineno">  248</span>&#160;                                              <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a>&amp; output,</div><div class="line"><a name="l00249"></a><span class="lineno">  249</span>&#160;                                              <span class="keyword">const</span> <a class="code" href="structarmnn_1_1_q_lstm_descriptor.xhtml">QLstmDescriptor</a>&amp; descriptor,</div><div class="line"><a name="l00250"></a><span class="lineno">  250</span>&#160;                                              <span class="keyword">const</span> <a class="code" href="structarmnn_1_1_lstm_input_params_info.xhtml">LstmInputParamsInfo</a>&amp; paramsInfo)</div><div class="line"><a name="l00251"></a><span class="lineno">  251</span>&#160;{</div><div class="line"><a name="l00252"></a><span class="lineno">  252</span>&#160;    arm_compute::LSTMParams&lt;arm_compute::ITensorInfo&gt; aclParamsInfo;</div><div class="line"><a name="l00253"></a><span class="lineno">  253</span>&#160;</div><div class="line"><a name="l00254"></a><span class="lineno">  254</span>&#160;    <span class="comment">// Input/Output tensor info</span></div><div class="line"><a name="l00255"></a><span class="lineno">  255</span>&#160;    <span class="keyword">const</span> arm_compute::TensorInfo aclInputInfo         = BuildArmComputeTensorInfo(input);</div><div class="line"><a name="l00256"></a><span class="lineno">  256</span>&#160;    <span class="keyword">const</span> arm_compute::TensorInfo aclOutputStateInInfo = BuildArmComputeTensorInfo(outputStateIn);</div><div class="line"><a name="l00257"></a><span class="lineno">  257</span>&#160;    <span class="keyword">const</span> arm_compute::TensorInfo aclCellStateInInfo   = BuildArmComputeTensorInfo(cellStateIn);</div><div class="line"><a name="l00258"></a><span class="lineno">  258</span>&#160;</div><div class="line"><a name="l00259"></a><span class="lineno">  259</span>&#160;    <span class="keyword">const</span> arm_compute::TensorInfo aclOutputStateOutInfo = BuildArmComputeTensorInfo(outputStateOut);</div><div class="line"><a name="l00260"></a><span class="lineno">  260</span>&#160;    <span class="keyword">const</span> arm_compute::TensorInfo aclCellStateOutInfo   = BuildArmComputeTensorInfo(cellStateOut);</div><div class="line"><a name="l00261"></a><span class="lineno">  261</span>&#160;    <span class="keyword">const</span> arm_compute::TensorInfo aclOutputInfo         = BuildArmComputeTensorInfo(output);</div><div class="line"><a name="l00262"></a><span class="lineno">  262</span>&#160;</div><div class="line"><a name="l00263"></a><span class="lineno">  263</span>&#160;    <span class="comment">// Mandatory tensor info</span></div><div class="line"><a name="l00264"></a><span class="lineno">  264</span>&#160;    <span class="keyword">const</span> arm_compute::TensorInfo aclInputToForgetWeightsInfo</div><div class="line"><a name="l00265"></a><span class="lineno">  265</span>&#160;            = BuildArmComputeTensorInfo(paramsInfo.<a class="code" href="structarmnn_1_1_lstm_input_params_info.xhtml#a7dac08f19a1b235d5256d39136848a09">GetInputToForgetWeights</a>());</div><div class="line"><a name="l00266"></a><span class="lineno">  266</span>&#160;    <span class="keyword">const</span> arm_compute::TensorInfo aclInputToCellWeightsInfo</div><div class="line"><a name="l00267"></a><span class="lineno">  267</span>&#160;            = BuildArmComputeTensorInfo(paramsInfo.<a class="code" href="structarmnn_1_1_lstm_input_params_info.xhtml#a3b3c26330a05bf4ea40f8a6b402be354">GetInputToCellWeights</a>());</div><div class="line"><a name="l00268"></a><span class="lineno">  268</span>&#160;    <span class="keyword">const</span> arm_compute::TensorInfo aclInputToOutputWeightsInfo</div><div class="line"><a name="l00269"></a><span class="lineno">  269</span>&#160;            = BuildArmComputeTensorInfo(paramsInfo.<a class="code" href="structarmnn_1_1_lstm_input_params_info.xhtml#a800adf0f61e84d706060f63037c1a336">GetInputToOutputWeights</a>());</div><div class="line"><a name="l00270"></a><span class="lineno">  270</span>&#160;    <span class="keyword">const</span> arm_compute::TensorInfo aclRecurrentToForgetWeightsInfo</div><div class="line"><a name="l00271"></a><span class="lineno">  271</span>&#160;            = BuildArmComputeTensorInfo(paramsInfo.<a class="code" href="structarmnn_1_1_lstm_input_params_info.xhtml#a534af7e4f3a6d50a6dab05abc245133d">GetRecurrentToForgetWeights</a>());</div><div class="line"><a name="l00272"></a><span class="lineno">  272</span>&#160;    <span class="keyword">const</span> arm_compute::TensorInfo aclRecurrentToCellWeightsInfo</div><div class="line"><a name="l00273"></a><span class="lineno">  273</span>&#160;            = BuildArmComputeTensorInfo(paramsInfo.<a class="code" href="structarmnn_1_1_lstm_input_params_info.xhtml#ae5bfdd423b16f990c1713ef9f91f947b">GetRecurrentToCellWeights</a>());</div><div class="line"><a name="l00274"></a><span class="lineno">  274</span>&#160;    <span class="keyword">const</span> arm_compute::TensorInfo aclRecurrentToOutputWeightsInfo</div><div class="line"><a name="l00275"></a><span class="lineno">  275</span>&#160;            = BuildArmComputeTensorInfo(paramsInfo.<a class="code" href="structarmnn_1_1_lstm_input_params_info.xhtml#afe4d25acd31b98dee6f6b28d4d756071">GetRecurrentToOutputWeights</a>());</div><div class="line"><a name="l00276"></a><span class="lineno">  276</span>&#160;    <span class="keyword">const</span> arm_compute::TensorInfo aclForgetGateBiasInfo</div><div class="line"><a name="l00277"></a><span class="lineno">  277</span>&#160;            = BuildArmComputeTensorInfo(paramsInfo.<a class="code" href="structarmnn_1_1_lstm_input_params_info.xhtml#ac81393ef433b0c7c337f9f0d55f41ae4">GetForgetGateBias</a>());</div><div class="line"><a name="l00278"></a><span class="lineno">  278</span>&#160;    <span class="keyword">const</span> arm_compute::TensorInfo aclCellBiasInfo</div><div class="line"><a name="l00279"></a><span class="lineno">  279</span>&#160;            = BuildArmComputeTensorInfo(paramsInfo.<a class="code" href="structarmnn_1_1_lstm_input_params_info.xhtml#ad5f4be37766b41f342dd196cb1c6e141">GetCellBias</a>());</div><div class="line"><a name="l00280"></a><span class="lineno">  280</span>&#160;    <span class="keyword">const</span> arm_compute::TensorInfo aclOutputGateBiasInfo</div><div class="line"><a name="l00281"></a><span class="lineno">  281</span>&#160;            = BuildArmComputeTensorInfo(paramsInfo.<a class="code" href="structarmnn_1_1_lstm_input_params_info.xhtml#ae0da94ba17ce67b95b5b9d6e5adc4271">GetOutputGateBias</a>());</div><div class="line"><a name="l00282"></a><span class="lineno">  282</span>&#160;</div><div class="line"><a name="l00283"></a><span class="lineno">  283</span>&#160;    <span class="comment">// Optional tensor info</span></div><div class="line"><a name="l00284"></a><span class="lineno">  284</span>&#160;    arm_compute::TensorInfo aclInputToInputWeightsInfo;</div><div class="line"><a name="l00285"></a><span class="lineno">  285</span>&#160;    arm_compute::TensorInfo aclRecurrentToInputWeightsInfo;</div><div class="line"><a name="l00286"></a><span class="lineno">  286</span>&#160;</div><div class="line"><a name="l00287"></a><span class="lineno">  287</span>&#160;    arm_compute::TensorInfo aclCellToInputWeightsInfo;</div><div class="line"><a name="l00288"></a><span class="lineno">  288</span>&#160;    arm_compute::TensorInfo aclCellToForgetWeightsInfo;</div><div class="line"><a name="l00289"></a><span class="lineno">  289</span>&#160;    arm_compute::TensorInfo aclCellToOutputWeightsInfo;</div><div class="line"><a name="l00290"></a><span class="lineno">  290</span>&#160;</div><div class="line"><a name="l00291"></a><span class="lineno">  291</span>&#160;    arm_compute::TensorInfo aclInputGateBiasInfo;</div><div class="line"><a name="l00292"></a><span class="lineno">  292</span>&#160;</div><div class="line"><a name="l00293"></a><span class="lineno">  293</span>&#160;    arm_compute::TensorInfo aclProjectionWeightsInfo;</div><div class="line"><a name="l00294"></a><span class="lineno">  294</span>&#160;    arm_compute::TensorInfo aclProjectionBiasInfo;</div><div class="line"><a name="l00295"></a><span class="lineno">  295</span>&#160;</div><div class="line"><a name="l00296"></a><span class="lineno">  296</span>&#160;    arm_compute::TensorInfo aclInputLayerNormWeightsInfo;</div><div class="line"><a name="l00297"></a><span class="lineno">  297</span>&#160;    arm_compute::TensorInfo aclForgetLayerNormWeightsInfo;</div><div class="line"><a name="l00298"></a><span class="lineno">  298</span>&#160;    arm_compute::TensorInfo aclCellLayerNormWeightsInfo;</div><div class="line"><a name="l00299"></a><span class="lineno">  299</span>&#160;    arm_compute::TensorInfo aclOutputLayerNormWeightsInfo;</div><div class="line"><a name="l00300"></a><span class="lineno">  300</span>&#160;</div><div class="line"><a name="l00301"></a><span class="lineno">  301</span>&#160;    <span class="comment">// Create tensor info for optional params if they are enabled</span></div><div class="line"><a name="l00302"></a><span class="lineno">  302</span>&#160;    <span class="keywordflow">if</span> (descriptor.<a class="code" href="structarmnn_1_1_q_lstm_descriptor.xhtml#a2837b4396f20c956952d1a7286cab5f8">m_PeepholeEnabled</a>)</div><div class="line"><a name="l00303"></a><span class="lineno">  303</span>&#160;    {</div><div class="line"><a name="l00304"></a><span class="lineno">  304</span>&#160;        <span class="keywordflow">if</span> (!descriptor.<a class="code" href="structarmnn_1_1_q_lstm_descriptor.xhtml#ad474e5c51a0b194ef32e812b86c0cbdb">m_CifgEnabled</a>)</div><div class="line"><a name="l00305"></a><span class="lineno">  305</span>&#160;        {</div><div class="line"><a name="l00306"></a><span class="lineno">  306</span>&#160;            aclCellToInputWeightsInfo = BuildArmComputeTensorInfo(paramsInfo.<a class="code" href="structarmnn_1_1_lstm_input_params_info.xhtml#a36fa9439fda2e72234411956a1c7e64f">GetCellToInputWeights</a>());</div><div class="line"><a name="l00307"></a><span class="lineno">  307</span>&#160;        }</div><div class="line"><a name="l00308"></a><span class="lineno">  308</span>&#160;</div><div class="line"><a name="l00309"></a><span class="lineno">  309</span>&#160;        aclCellToForgetWeightsInfo = BuildArmComputeTensorInfo(paramsInfo.<a class="code" href="structarmnn_1_1_lstm_input_params_info.xhtml#a0e31db1891d11bbe0d8556c01e9812ef">GetCellToForgetWeights</a>());</div><div class="line"><a name="l00310"></a><span class="lineno">  310</span>&#160;        aclCellToOutputWeightsInfo = BuildArmComputeTensorInfo(paramsInfo.<a class="code" href="structarmnn_1_1_lstm_input_params_info.xhtml#a35825b1ec5bc2b14c8eac60887dbcf19">GetCellToOutputWeights</a>());</div><div class="line"><a name="l00311"></a><span class="lineno">  311</span>&#160;</div><div class="line"><a name="l00312"></a><span class="lineno">  312</span>&#160;        <span class="comment">// Set peephole params info</span></div><div class="line"><a name="l00313"></a><span class="lineno">  313</span>&#160;        aclParamsInfo.set_peephole_params(&amp;aclCellToForgetWeightsInfo,</div><div class="line"><a name="l00314"></a><span class="lineno">  314</span>&#160;                                          &amp;aclCellToOutputWeightsInfo);</div><div class="line"><a name="l00315"></a><span class="lineno">  315</span>&#160;    }</div><div class="line"><a name="l00316"></a><span class="lineno">  316</span>&#160;</div><div class="line"><a name="l00317"></a><span class="lineno">  317</span>&#160;    <span class="keywordflow">if</span> (descriptor.<a class="code" href="structarmnn_1_1_q_lstm_descriptor.xhtml#a6c9de81fc65b3c4924cab11907075a17">m_ProjectionEnabled</a>)</div><div class="line"><a name="l00318"></a><span class="lineno">  318</span>&#160;    {</div><div class="line"><a name="l00319"></a><span class="lineno">  319</span>&#160;        aclProjectionWeightsInfo = BuildArmComputeTensorInfo(paramsInfo.<a class="code" href="structarmnn_1_1_lstm_input_params_info.xhtml#a18038725f71bb5c5bd03c02cc164f879">GetProjectionWeights</a>());</div><div class="line"><a name="l00320"></a><span class="lineno">  320</span>&#160;</div><div class="line"><a name="l00321"></a><span class="lineno">  321</span>&#160;        <span class="keywordflow">if</span> (paramsInfo.<a class="code" href="structarmnn_1_1_lstm_input_params_info.xhtml#ae22fc962c59e7c24986718f5af0020db">m_ProjectionBias</a> != <span class="keyword">nullptr</span>)</div><div class="line"><a name="l00322"></a><span class="lineno">  322</span>&#160;        {</div><div class="line"><a name="l00323"></a><span class="lineno">  323</span>&#160;            aclProjectionBiasInfo = BuildArmComputeTensorInfo(paramsInfo.<a class="code" href="structarmnn_1_1_lstm_input_params_info.xhtml#a9f2cce936b4df49c487eaca513bf55ca">GetProjectionBias</a>());</div><div class="line"><a name="l00324"></a><span class="lineno">  324</span>&#160;        }</div><div class="line"><a name="l00325"></a><span class="lineno">  325</span>&#160;</div><div class="line"><a name="l00326"></a><span class="lineno">  326</span>&#160;        <span class="comment">// Set projection params info</span></div><div class="line"><a name="l00327"></a><span class="lineno">  327</span>&#160;        aclParamsInfo.set_projection_params(</div><div class="line"><a name="l00328"></a><span class="lineno">  328</span>&#160;            &amp;aclProjectionWeightsInfo,</div><div class="line"><a name="l00329"></a><span class="lineno">  329</span>&#160;            paramsInfo.<a class="code" href="structarmnn_1_1_lstm_input_params_info.xhtml#ae22fc962c59e7c24986718f5af0020db">m_ProjectionBias</a> != <span class="keyword">nullptr</span> ? &amp;aclProjectionBiasInfo : <span class="keyword">nullptr</span>);</div><div class="line"><a name="l00330"></a><span class="lineno">  330</span>&#160;    }</div><div class="line"><a name="l00331"></a><span class="lineno">  331</span>&#160;</div><div class="line"><a name="l00332"></a><span class="lineno">  332</span>&#160;    <span class="keywordflow">if</span> (descriptor.<a class="code" href="structarmnn_1_1_q_lstm_descriptor.xhtml#a4a8ec49f130084445d44297549254780">m_LayerNormEnabled</a>)</div><div class="line"><a name="l00333"></a><span class="lineno">  333</span>&#160;    {</div><div class="line"><a name="l00334"></a><span class="lineno">  334</span>&#160;        <span class="keywordflow">if</span> (!descriptor.<a class="code" href="structarmnn_1_1_q_lstm_descriptor.xhtml#ad474e5c51a0b194ef32e812b86c0cbdb">m_CifgEnabled</a>)</div><div class="line"><a name="l00335"></a><span class="lineno">  335</span>&#160;        {</div><div class="line"><a name="l00336"></a><span class="lineno">  336</span>&#160;            aclInputLayerNormWeightsInfo = BuildArmComputeTensorInfo(paramsInfo.<a class="code" href="structarmnn_1_1_lstm_input_params_info.xhtml#a3d2f638ba83ae5dad0094c006220c232">GetInputLayerNormWeights</a>());</div><div class="line"><a name="l00337"></a><span class="lineno">  337</span>&#160;        }</div><div class="line"><a name="l00338"></a><span class="lineno">  338</span>&#160;</div><div class="line"><a name="l00339"></a><span class="lineno">  339</span>&#160;        aclForgetLayerNormWeightsInfo = BuildArmComputeTensorInfo(paramsInfo.<a class="code" href="structarmnn_1_1_lstm_input_params_info.xhtml#ab50b4ccb0b84f6427996f76083a4107a">GetForgetLayerNormWeights</a>());</div><div class="line"><a name="l00340"></a><span class="lineno">  340</span>&#160;        aclCellLayerNormWeightsInfo   = BuildArmComputeTensorInfo(paramsInfo.<a class="code" href="structarmnn_1_1_lstm_input_params_info.xhtml#aaf1af3bc828c5daa4a5c0bac28f63cc3">GetCellLayerNormWeights</a>());</div><div class="line"><a name="l00341"></a><span class="lineno">  341</span>&#160;        aclOutputLayerNormWeightsInfo = BuildArmComputeTensorInfo(paramsInfo.<a class="code" href="structarmnn_1_1_lstm_input_params_info.xhtml#a045674b768295e617d7060f96f162366">GetOutputLayerNormWeights</a>());</div><div class="line"><a name="l00342"></a><span class="lineno">  342</span>&#160;</div><div class="line"><a name="l00343"></a><span class="lineno">  343</span>&#160;        <span class="comment">// Set layer norm params info</span></div><div class="line"><a name="l00344"></a><span class="lineno">  344</span>&#160;        aclParamsInfo.set_layer_normalization_params(</div><div class="line"><a name="l00345"></a><span class="lineno">  345</span>&#160;            paramsInfo.<a class="code" href="structarmnn_1_1_lstm_input_params_info.xhtml#ab8c7712c0c6bc427dede8c76945e8f89">m_InputLayerNormWeights</a> != <span class="keyword">nullptr</span> ? &amp;aclInputLayerNormWeightsInfo : <span class="keyword">nullptr</span>,</div><div class="line"><a name="l00346"></a><span class="lineno">  346</span>&#160;            &amp;aclForgetLayerNormWeightsInfo,</div><div class="line"><a name="l00347"></a><span class="lineno">  347</span>&#160;            &amp;aclCellLayerNormWeightsInfo,</div><div class="line"><a name="l00348"></a><span class="lineno">  348</span>&#160;            &amp;aclOutputLayerNormWeightsInfo);</div><div class="line"><a name="l00349"></a><span class="lineno">  349</span>&#160;    }</div><div class="line"><a name="l00350"></a><span class="lineno">  350</span>&#160;</div><div class="line"><a name="l00351"></a><span class="lineno">  351</span>&#160;    <span class="keywordflow">if</span> (!descriptor.<a class="code" href="structarmnn_1_1_q_lstm_descriptor.xhtml#ad474e5c51a0b194ef32e812b86c0cbdb">m_CifgEnabled</a>)</div><div class="line"><a name="l00352"></a><span class="lineno">  352</span>&#160;    {</div><div class="line"><a name="l00353"></a><span class="lineno">  353</span>&#160;        aclInputToInputWeightsInfo     = BuildArmComputeTensorInfo(paramsInfo.<a class="code" href="structarmnn_1_1_lstm_input_params_info.xhtml#afa2b04197a764428a8c3a648de8058fc">GetInputToInputWeights</a>());</div><div class="line"><a name="l00354"></a><span class="lineno">  354</span>&#160;        aclRecurrentToInputWeightsInfo = BuildArmComputeTensorInfo(paramsInfo.<a class="code" href="structarmnn_1_1_lstm_input_params_info.xhtml#ad159f9edbddeeb6cf6ff0ba042481ba8">GetRecurrentToInputWeights</a>());</div><div class="line"><a name="l00355"></a><span class="lineno">  355</span>&#160;        aclInputGateBiasInfo           = BuildArmComputeTensorInfo(paramsInfo.<a class="code" href="structarmnn_1_1_lstm_input_params_info.xhtml#ae1d5a487fcd13852927c8a2b9f9dfeb6">GetInputGateBias</a>());</div><div class="line"><a name="l00356"></a><span class="lineno">  356</span>&#160;</div><div class="line"><a name="l00357"></a><span class="lineno">  357</span>&#160;        <span class="comment">// Set CIFG params info</span></div><div class="line"><a name="l00358"></a><span class="lineno">  358</span>&#160;        aclParamsInfo.set_cifg_params(</div><div class="line"><a name="l00359"></a><span class="lineno">  359</span>&#160;            &amp;aclInputToInputWeightsInfo,</div><div class="line"><a name="l00360"></a><span class="lineno">  360</span>&#160;            &amp;aclRecurrentToInputWeightsInfo,</div><div class="line"><a name="l00361"></a><span class="lineno">  361</span>&#160;            paramsInfo.<a class="code" href="structarmnn_1_1_lstm_input_params_info.xhtml#ab99b2297c5a17114926b8b47c693fe43">m_CellToInputWeights</a> != <span class="keyword">nullptr</span> ? &amp;aclCellToInputWeightsInfo : <span class="keyword">nullptr</span>,</div><div class="line"><a name="l00362"></a><span class="lineno">  362</span>&#160;            &amp;aclInputGateBiasInfo);</div><div class="line"><a name="l00363"></a><span class="lineno">  363</span>&#160;    }</div><div class="line"><a name="l00364"></a><span class="lineno">  364</span>&#160;</div><div class="line"><a name="l00365"></a><span class="lineno">  365</span>&#160;    <span class="comment">// Set scalar descriptor params</span></div><div class="line"><a name="l00366"></a><span class="lineno">  366</span>&#160;    aclParamsInfo.set_cell_clip_params(descriptor.<a class="code" href="structarmnn_1_1_q_lstm_descriptor.xhtml#ac81fb0e66dc623dc37c77f219f53a6d3">m_CellClip</a>);</div><div class="line"><a name="l00367"></a><span class="lineno">  367</span>&#160;    aclParamsInfo.set_projection_clip_params(descriptor.<a class="code" href="structarmnn_1_1_q_lstm_descriptor.xhtml#aa6a518b65088f34803b3214334bdff61">m_ProjectionClip</a>);</div><div class="line"><a name="l00368"></a><span class="lineno">  368</span>&#160;    aclParamsInfo.set_hidden_state_params(descriptor.<a class="code" href="structarmnn_1_1_q_lstm_descriptor.xhtml#a4556cbd764d4848d8ad0637a9eed580d">m_HiddenStateZeroPoint</a>, descriptor.<a class="code" href="structarmnn_1_1_q_lstm_descriptor.xhtml#af8f724af7210b52529216feefa993c98">m_HiddenStateScale</a>);</div><div class="line"><a name="l00369"></a><span class="lineno">  369</span>&#160;    aclParamsInfo.set_matmul_scale_params(descriptor.<a class="code" href="structarmnn_1_1_q_lstm_descriptor.xhtml#a09e1f097944f61cc901240f9300364cf">m_InputIntermediateScale</a>,</div><div class="line"><a name="l00370"></a><span class="lineno">  370</span>&#160;                                          descriptor.<a class="code" href="structarmnn_1_1_q_lstm_descriptor.xhtml#afec7f36158448f723b426a9527acb189">m_ForgetIntermediateScale</a>,</div><div class="line"><a name="l00371"></a><span class="lineno">  371</span>&#160;                                          descriptor.<a class="code" href="structarmnn_1_1_q_lstm_descriptor.xhtml#a0477ee1b44ace6090119178eea78cb0b">m_CellIntermediateScale</a>,</div><div class="line"><a name="l00372"></a><span class="lineno">  372</span>&#160;                                          descriptor.<a class="code" href="structarmnn_1_1_q_lstm_descriptor.xhtml#aa43409f9b457352c95c89f20ce5d844d">m_OutputIntermediateScale</a>);</div><div class="line"><a name="l00373"></a><span class="lineno">  373</span>&#160;</div><div class="line"><a name="l00374"></a><span class="lineno">  374</span>&#160;    <span class="comment">// QLSTM NEON validate</span></div><div class="line"><a name="l00375"></a><span class="lineno">  375</span>&#160;    <span class="keywordflow">return</span> arm_compute::NEQLSTMLayer::validate(&amp;aclInputInfo,</div><div class="line"><a name="l00376"></a><span class="lineno">  376</span>&#160;                                               &amp;aclInputToForgetWeightsInfo,</div><div class="line"><a name="l00377"></a><span class="lineno">  377</span>&#160;                                               &amp;aclInputToCellWeightsInfo,</div><div class="line"><a name="l00378"></a><span class="lineno">  378</span>&#160;                                               &amp;aclInputToOutputWeightsInfo,</div><div class="line"><a name="l00379"></a><span class="lineno">  379</span>&#160;                                               &amp;aclRecurrentToForgetWeightsInfo,</div><div class="line"><a name="l00380"></a><span class="lineno">  380</span>&#160;                                               &amp;aclRecurrentToCellWeightsInfo,</div><div class="line"><a name="l00381"></a><span class="lineno">  381</span>&#160;                                               &amp;aclRecurrentToOutputWeightsInfo,</div><div class="line"><a name="l00382"></a><span class="lineno">  382</span>&#160;                                               &amp;aclForgetGateBiasInfo,</div><div class="line"><a name="l00383"></a><span class="lineno">  383</span>&#160;                                               &amp;aclCellBiasInfo,</div><div class="line"><a name="l00384"></a><span class="lineno">  384</span>&#160;                                               &amp;aclOutputGateBiasInfo,</div><div class="line"><a name="l00385"></a><span class="lineno">  385</span>&#160;                                               &amp;aclCellStateInInfo,</div><div class="line"><a name="l00386"></a><span class="lineno">  386</span>&#160;                                               &amp;aclOutputStateInInfo,</div><div class="line"><a name="l00387"></a><span class="lineno">  387</span>&#160;                                               &amp;aclCellStateOutInfo,</div><div class="line"><a name="l00388"></a><span class="lineno">  388</span>&#160;                                               &amp;aclOutputStateOutInfo,</div><div class="line"><a name="l00389"></a><span class="lineno">  389</span>&#160;                                               &amp;aclOutputInfo,</div><div class="line"><a name="l00390"></a><span class="lineno">  390</span>&#160;                                               aclParamsInfo);</div><div class="line"><a name="l00391"></a><span class="lineno">  391</span>&#160;}</div><div class="line"><a name="l00392"></a><span class="lineno">  392</span>&#160;</div><div class="line"><a name="l00393"></a><span class="lineno">  393</span>&#160;<span class="keywordtype">void</span> NeonQLstmWorkload::FreeUnusedTensors()</div><div class="line"><a name="l00394"></a><span class="lineno">  394</span>&#160;{</div><div class="line"><a name="l00395"></a><span class="lineno">  395</span>&#160;    FreeTensorIfUnused(m_InputToInputWeightsTensor);</div><div class="line"><a name="l00396"></a><span class="lineno">  396</span>&#160;    FreeTensorIfUnused(m_InputToForgetWeightsTensor);</div><div class="line"><a name="l00397"></a><span class="lineno">  397</span>&#160;    FreeTensorIfUnused(m_InputToCellWeightsTensor);</div><div class="line"><a name="l00398"></a><span class="lineno">  398</span>&#160;    FreeTensorIfUnused(m_InputToOutputWeightsTensor);</div><div class="line"><a name="l00399"></a><span class="lineno">  399</span>&#160;</div><div class="line"><a name="l00400"></a><span class="lineno">  400</span>&#160;    FreeTensorIfUnused(m_RecurrentToInputWeightsTensor);</div><div class="line"><a name="l00401"></a><span class="lineno">  401</span>&#160;    FreeTensorIfUnused(m_RecurrentToForgetWeightsTensor);</div><div class="line"><a name="l00402"></a><span class="lineno">  402</span>&#160;    FreeTensorIfUnused(m_RecurrentToCellWeightsTensor);</div><div class="line"><a name="l00403"></a><span class="lineno">  403</span>&#160;    FreeTensorIfUnused(m_RecurrentToOutputWeightsTensor);</div><div class="line"><a name="l00404"></a><span class="lineno">  404</span>&#160;</div><div class="line"><a name="l00405"></a><span class="lineno">  405</span>&#160;    FreeTensorIfUnused(m_CellToInputWeightsTensor);</div><div class="line"><a name="l00406"></a><span class="lineno">  406</span>&#160;    FreeTensorIfUnused(m_CellToForgetWeightsTensor);</div><div class="line"><a name="l00407"></a><span class="lineno">  407</span>&#160;    FreeTensorIfUnused(m_CellToOutputWeightsTensor);</div><div class="line"><a name="l00408"></a><span class="lineno">  408</span>&#160;</div><div class="line"><a name="l00409"></a><span class="lineno">  409</span>&#160;    FreeTensorIfUnused(m_InputGateBiasTensor);</div><div class="line"><a name="l00410"></a><span class="lineno">  410</span>&#160;    FreeTensorIfUnused(m_ForgetGateBiasTensor);</div><div class="line"><a name="l00411"></a><span class="lineno">  411</span>&#160;    FreeTensorIfUnused(m_CellBiasTensor);</div><div class="line"><a name="l00412"></a><span class="lineno">  412</span>&#160;    FreeTensorIfUnused(m_OutputGateBiasTensor);</div><div class="line"><a name="l00413"></a><span class="lineno">  413</span>&#160;</div><div class="line"><a name="l00414"></a><span class="lineno">  414</span>&#160;    FreeTensorIfUnused(m_ProjectionWeightsTensor);</div><div class="line"><a name="l00415"></a><span class="lineno">  415</span>&#160;    FreeTensorIfUnused(m_ProjectionBiasTensor);</div><div class="line"><a name="l00416"></a><span class="lineno">  416</span>&#160;</div><div class="line"><a name="l00417"></a><span class="lineno">  417</span>&#160;    FreeTensorIfUnused(m_InputLayerNormWeightsTensor);</div><div class="line"><a name="l00418"></a><span class="lineno">  418</span>&#160;    FreeTensorIfUnused(m_ForgetLayerNormWeightsTensor);</div><div class="line"><a name="l00419"></a><span class="lineno">  419</span>&#160;    FreeTensorIfUnused(m_CellLayerNormWeightsTensor);</div><div class="line"><a name="l00420"></a><span class="lineno">  420</span>&#160;    FreeTensorIfUnused(m_OutputLayerNormWeightsTensor);</div><div class="line"><a name="l00421"></a><span class="lineno">  421</span>&#160;}</div><div class="line"><a name="l00422"></a><span class="lineno">  422</span>&#160;</div><div class="line"><a name="l00423"></a><span class="lineno">  423</span>&#160;} <span class="comment">//namespace armnn</span></div><div class="ttc" id="structarmnn_1_1_q_lstm_queue_descriptor_xhtml_aeef6f1ac3efad8ec8b0a7118652b64c9"><div class="ttname"><a href="structarmnn_1_1_q_lstm_queue_descriptor.xhtml#aeef6f1ac3efad8ec8b0a7118652b64c9">armnn::QLstmQueueDescriptor::m_CellLayerNormWeights</a></div><div class="ttdeci">const ConstTensorHandle * m_CellLayerNormWeights</div><div class="ttdef"><b>Definition:</b> <a href="_workload_data_8hpp_source.xhtml#l00640">WorkloadData.hpp:640</a></div></div>
<div class="ttc" id="structarmnn_1_1_q_lstm_queue_descriptor_xhtml_a3ead2ef8da00b2709d561d85996fc513"><div class="ttname"><a href="structarmnn_1_1_q_lstm_queue_descriptor.xhtml#a3ead2ef8da00b2709d561d85996fc513">armnn::QLstmQueueDescriptor::m_ProjectionWeights</a></div><div class="ttdeci">const ConstTensorHandle * m_ProjectionWeights</div><div class="ttdef"><b>Definition:</b> <a href="_workload_data_8hpp_source.xhtml#l00636">WorkloadData.hpp:636</a></div></div>
<div class="ttc" id="_neon_q_lstm_workload_8hpp_xhtml"><div class="ttname"><a href="_neon_q_lstm_workload_8hpp.xhtml">NeonQLstmWorkload.hpp</a></div></div>
<div class="ttc" id="structarmnn_1_1_lstm_input_params_info_xhtml_ab8c7712c0c6bc427dede8c76945e8f89"><div class="ttname"><a href="structarmnn_1_1_lstm_input_params_info.xhtml#ab8c7712c0c6bc427dede8c76945e8f89">armnn::LstmInputParamsInfo::m_InputLayerNormWeights</a></div><div class="ttdeci">const TensorInfo * m_InputLayerNormWeights</div><div class="ttdef"><b>Definition:</b> <a href="_lstm_params_8hpp_source.xhtml#l00106">LstmParams.hpp:106</a></div></div>
<div class="ttc" id="structarmnn_1_1_lstm_input_params_info_xhtml_ae5bfdd423b16f990c1713ef9f91f947b"><div class="ttname"><a href="structarmnn_1_1_lstm_input_params_info.xhtml#ae5bfdd423b16f990c1713ef9f91f947b">armnn::LstmInputParamsInfo::GetRecurrentToCellWeights</a></div><div class="ttdeci">const TensorInfo &amp; GetRecurrentToCellWeights() const</div><div class="ttdef"><b>Definition:</b> <a href="_lstm_params_8hpp_source.xhtml#l00145">LstmParams.hpp:145</a></div></div>
<div class="ttc" id="structarmnn_1_1_q_lstm_queue_descriptor_xhtml_a29fa293fffbf9c6f00cd75db1dc0a52a"><div class="ttname"><a href="structarmnn_1_1_q_lstm_queue_descriptor.xhtml#a29fa293fffbf9c6f00cd75db1dc0a52a">armnn::QLstmQueueDescriptor::m_ForgetGateBias</a></div><div class="ttdeci">const ConstTensorHandle * m_ForgetGateBias</div><div class="ttdef"><b>Definition:</b> <a href="_workload_data_8hpp_source.xhtml#l00633">WorkloadData.hpp:633</a></div></div>
<div class="ttc" id="structarmnn_1_1_q_lstm_queue_descriptor_xhtml_a17ba1c8bcc71a55a95b2a3913f8cb203"><div class="ttname"><a href="structarmnn_1_1_q_lstm_queue_descriptor.xhtml#a17ba1c8bcc71a55a95b2a3913f8cb203">armnn::QLstmQueueDescriptor::m_InputToOutputWeights</a></div><div class="ttdeci">const ConstTensorHandle * m_InputToOutputWeights</div><div class="ttdef"><b>Definition:</b> <a href="_workload_data_8hpp_source.xhtml#l00624">WorkloadData.hpp:624</a></div></div>
<div class="ttc" id="classarmnn_1_1_neon_q_lstm_workload_xhtml_a83c87b3dd014c18b6609c6fecf6c8368"><div class="ttname"><a href="classarmnn_1_1_neon_q_lstm_workload.xhtml#a83c87b3dd014c18b6609c6fecf6c8368">armnn::NeonQLstmWorkload::NeonQLstmWorkload</a></div><div class="ttdeci">NeonQLstmWorkload(const QLstmQueueDescriptor &amp;descriptor, const WorkloadInfo &amp;info)</div><div class="ttdef"><b>Definition:</b> <a href="_neon_q_lstm_workload_8cpp_source.xhtml#l00017">NeonQLstmWorkload.cpp:17</a></div></div>
<div class="ttc" id="structarmnn_1_1_lstm_input_params_info_xhtml_ad5f4be37766b41f342dd196cb1c6e141"><div class="ttname"><a href="structarmnn_1_1_lstm_input_params_info.xhtml#ad5f4be37766b41f342dd196cb1c6e141">armnn::LstmInputParamsInfo::GetCellBias</a></div><div class="ttdeci">const TensorInfo &amp; GetCellBias() const</div><div class="ttdef"><b>Definition:</b> <a href="_lstm_params_8hpp_source.xhtml#l00173">LstmParams.hpp:173</a></div></div>
<div class="ttc" id="structarmnn_1_1_lstm_input_params_info_xhtml_ad159f9edbddeeb6cf6ff0ba042481ba8"><div class="ttname"><a href="structarmnn_1_1_lstm_input_params_info.xhtml#ad159f9edbddeeb6cf6ff0ba042481ba8">armnn::LstmInputParamsInfo::GetRecurrentToInputWeights</a></div><div class="ttdeci">const TensorInfo &amp; GetRecurrentToInputWeights() const</div><div class="ttdef"><b>Definition:</b> <a href="_lstm_params_8hpp_source.xhtml#l00137">LstmParams.hpp:137</a></div></div>
<div class="ttc" id="structarmnn_1_1_lstm_input_params_info_xhtml_aaf1af3bc828c5daa4a5c0bac28f63cc3"><div class="ttname"><a href="structarmnn_1_1_lstm_input_params_info.xhtml#aaf1af3bc828c5daa4a5c0bac28f63cc3">armnn::LstmInputParamsInfo::GetCellLayerNormWeights</a></div><div class="ttdeci">const TensorInfo &amp; GetCellLayerNormWeights() const</div><div class="ttdef"><b>Definition:</b> <a href="_lstm_params_8hpp_source.xhtml#l00197">LstmParams.hpp:197</a></div></div>
<div class="ttc" id="classarmnn_1_1_tensor_info_xhtml"><div class="ttname"><a href="classarmnn_1_1_tensor_info.xhtml">armnn::TensorInfo</a></div><div class="ttdef"><b>Definition:</b> <a href="_tensor_8hpp_source.xhtml#l00152">Tensor.hpp:152</a></div></div>
<div class="ttc" id="structarmnn_1_1_lstm_input_params_info_xhtml_afe4d25acd31b98dee6f6b28d4d756071"><div class="ttname"><a href="structarmnn_1_1_lstm_input_params_info.xhtml#afe4d25acd31b98dee6f6b28d4d756071">armnn::LstmInputParamsInfo::GetRecurrentToOutputWeights</a></div><div class="ttdeci">const TensorInfo &amp; GetRecurrentToOutputWeights() const</div><div class="ttdef"><b>Definition:</b> <a href="_lstm_params_8hpp_source.xhtml#l00149">LstmParams.hpp:149</a></div></div>
<div class="ttc" id="structarmnn_1_1_q_lstm_descriptor_xhtml_a2837b4396f20c956952d1a7286cab5f8"><div class="ttname"><a href="structarmnn_1_1_q_lstm_descriptor.xhtml#a2837b4396f20c956952d1a7286cab5f8">armnn::QLstmDescriptor::m_PeepholeEnabled</a></div><div class="ttdeci">bool m_PeepholeEnabled</div><div class="ttdoc">Enable/disable peephole. </div><div class="ttdef"><b>Definition:</b> <a href="_descriptors_8hpp_source.xhtml#l01360">Descriptors.hpp:1360</a></div></div>
<div class="ttc" id="structarmnn_1_1_q_lstm_descriptor_xhtml_af8f724af7210b52529216feefa993c98"><div class="ttname"><a href="structarmnn_1_1_q_lstm_descriptor.xhtml#af8f724af7210b52529216feefa993c98">armnn::QLstmDescriptor::m_HiddenStateScale</a></div><div class="ttdeci">float m_HiddenStateScale</div><div class="ttdoc">Hidden State quantization scale. </div><div class="ttdef"><b>Definition:</b> <a href="_descriptors_8hpp_source.xhtml#l01376">Descriptors.hpp:1376</a></div></div>
<div class="ttc" id="structarmnn_1_1_q_lstm_queue_descriptor_xhtml_ab160eba2493d5fe52185c0986dcb190c"><div class="ttname"><a href="structarmnn_1_1_q_lstm_queue_descriptor.xhtml#ab160eba2493d5fe52185c0986dcb190c">armnn::QLstmQueueDescriptor::m_InputToInputWeights</a></div><div class="ttdeci">const ConstTensorHandle * m_InputToInputWeights</div><div class="ttdef"><b>Definition:</b> <a href="_workload_data_8hpp_source.xhtml#l00621">WorkloadData.hpp:621</a></div></div>
<div class="ttc" id="structarmnn_1_1_q_lstm_queue_descriptor_xhtml_aa09f7bdb9fd0d06b6386e412a4e72dd6"><div class="ttname"><a href="structarmnn_1_1_q_lstm_queue_descriptor.xhtml#aa09f7bdb9fd0d06b6386e412a4e72dd6">armnn::QLstmQueueDescriptor::m_CellToOutputWeights</a></div><div class="ttdeci">const ConstTensorHandle * m_CellToOutputWeights</div><div class="ttdef"><b>Definition:</b> <a href="_workload_data_8hpp_source.xhtml#l00631">WorkloadData.hpp:631</a></div></div>
<div class="ttc" id="structarmnn_1_1_q_lstm_descriptor_xhtml_aa43409f9b457352c95c89f20ce5d844d"><div class="ttname"><a href="structarmnn_1_1_q_lstm_descriptor.xhtml#aa43409f9b457352c95c89f20ce5d844d">armnn::QLstmDescriptor::m_OutputIntermediateScale</a></div><div class="ttdeci">float m_OutputIntermediateScale</div><div class="ttdoc">Output intermediate quantization scale. </div><div class="ttdef"><b>Definition:</b> <a href="_descriptors_8hpp_source.xhtml#l01372">Descriptors.hpp:1372</a></div></div>
<div class="ttc" id="structarmnn_1_1_lstm_input_params_info_xhtml_a36fa9439fda2e72234411956a1c7e64f"><div class="ttname"><a href="structarmnn_1_1_lstm_input_params_info.xhtml#a36fa9439fda2e72234411956a1c7e64f">armnn::LstmInputParamsInfo::GetCellToInputWeights</a></div><div class="ttdeci">const TensorInfo &amp; GetCellToInputWeights() const</div><div class="ttdef"><b>Definition:</b> <a href="_lstm_params_8hpp_source.xhtml#l00153">LstmParams.hpp:153</a></div></div>
<div class="ttc" id="structarmnn_1_1_q_lstm_queue_descriptor_xhtml_a951b7c90b862138071a298065f16be61"><div class="ttname"><a href="structarmnn_1_1_q_lstm_queue_descriptor.xhtml#a951b7c90b862138071a298065f16be61">armnn::QLstmQueueDescriptor::m_CellToInputWeights</a></div><div class="ttdeci">const ConstTensorHandle * m_CellToInputWeights</div><div class="ttdef"><b>Definition:</b> <a href="_workload_data_8hpp_source.xhtml#l00629">WorkloadData.hpp:629</a></div></div>
<div class="ttc" id="_neon_tensor_handle_8hpp_xhtml"><div class="ttname"><a href="_neon_tensor_handle_8hpp.xhtml">NeonTensorHandle.hpp</a></div></div>
<div class="ttc" id="classarmnn_1_1_base_workload_xhtml_aaff95a48875d8fb4a616352906660ca9"><div class="ttname"><a href="classarmnn_1_1_base_workload.xhtml#aaff95a48875d8fb4a616352906660ca9">armnn::BaseWorkload&lt; QLstmQueueDescriptor &gt;::GetGuid</a></div><div class="ttdeci">arm::pipe::ProfilingGuid GetGuid() const final</div><div class="ttdef"><b>Definition:</b> <a href="_workload_8hpp_source.xhtml#l00061">Workload.hpp:61</a></div></div>
<div class="ttc" id="namespacearmnn_xhtml_a6e6f731864d33c0acd4140c7dfe17b0a"><div class="ttname"><a href="namespacearmnn.xhtml#a6e6f731864d33c0acd4140c7dfe17b0a">armnn::NeonQLstmWorkloadValidate</a></div><div class="ttdeci">arm_compute::Status NeonQLstmWorkloadValidate(const TensorInfo &amp;input, const TensorInfo &amp;cellStateIn, const TensorInfo &amp;outputStateIn, const TensorInfo &amp;cellStateOut, const TensorInfo &amp;outputStateOut, const TensorInfo &amp;output, const QLstmDescriptor &amp;descriptor, const LstmInputParamsInfo &amp;paramsInfo)</div><div class="ttdef"><b>Definition:</b> <a href="_neon_q_lstm_workload_8cpp_source.xhtml#l00243">NeonQLstmWorkload.cpp:243</a></div></div>
<div class="ttc" id="_arm_compute_tensor_utils_8hpp_xhtml"><div class="ttname"><a href="_arm_compute_tensor_utils_8hpp.xhtml">ArmComputeTensorUtils.hpp</a></div></div>
<div class="ttc" id="namespacearmnn_xhtml"><div class="ttname"><a href="namespacearmnn.xhtml">armnn</a></div><div class="ttdoc">Copyright (c) 2021 ARM Limited and Contributors. </div><div class="ttdef"><b>Definition:</b> <a href="01__00__quick__start_8dox_source.xhtml#l00006">01_00_quick_start.dox:6</a></div></div>
<div class="ttc" id="structarmnn_1_1_lstm_input_params_info_xhtml_a0e31db1891d11bbe0d8556c01e9812ef"><div class="ttname"><a href="structarmnn_1_1_lstm_input_params_info.xhtml#a0e31db1891d11bbe0d8556c01e9812ef">armnn::LstmInputParamsInfo::GetCellToForgetWeights</a></div><div class="ttdeci">const TensorInfo &amp; GetCellToForgetWeights() const</div><div class="ttdef"><b>Definition:</b> <a href="_lstm_params_8hpp_source.xhtml#l00157">LstmParams.hpp:157</a></div></div>
<div class="ttc" id="classarmnn_1_1_i_acl_tensor_handle_xhtml"><div class="ttname"><a href="classarmnn_1_1_i_acl_tensor_handle.xhtml">armnn::IAclTensorHandle</a></div><div class="ttdef"><b>Definition:</b> <a href="_arm_compute_tensor_handle_8hpp_source.xhtml#l00016">ArmComputeTensorHandle.hpp:16</a></div></div>
<div class="ttc" id="structarmnn_1_1_queue_descriptor_with_parameters_xhtml_aad91b9bbf7aa365d304febe79a3d1333"><div class="ttname"><a href="structarmnn_1_1_queue_descriptor_with_parameters.xhtml#aad91b9bbf7aa365d304febe79a3d1333">armnn::QueueDescriptorWithParameters::m_Parameters</a></div><div class="ttdeci">LayerDescriptor m_Parameters</div><div class="ttdef"><b>Definition:</b> <a href="_workload_data_8hpp_source.xhtml#l00066">WorkloadData.hpp:66</a></div></div>
<div class="ttc" id="structarmnn_1_1_lstm_input_params_info_xhtml_ab50b4ccb0b84f6427996f76083a4107a"><div class="ttname"><a href="structarmnn_1_1_lstm_input_params_info.xhtml#ab50b4ccb0b84f6427996f76083a4107a">armnn::LstmInputParamsInfo::GetForgetLayerNormWeights</a></div><div class="ttdeci">const TensorInfo &amp; GetForgetLayerNormWeights() const</div><div class="ttdef"><b>Definition:</b> <a href="_lstm_params_8hpp_source.xhtml#l00193">LstmParams.hpp:193</a></div></div>
<div class="ttc" id="classarmnn_1_1_neon_q_lstm_workload_xhtml_ae071e8822437c78baea75c3aef3a263a"><div class="ttname"><a href="classarmnn_1_1_neon_q_lstm_workload.xhtml#ae071e8822437c78baea75c3aef3a263a">armnn::NeonQLstmWorkload::Execute</a></div><div class="ttdeci">virtual void Execute() const override</div><div class="ttdef"><b>Definition:</b> <a href="_neon_q_lstm_workload_8cpp_source.xhtml#l00237">NeonQLstmWorkload.cpp:237</a></div></div>
<div class="ttc" id="structarmnn_1_1_lstm_input_params_info_xhtml_a35825b1ec5bc2b14c8eac60887dbcf19"><div class="ttname"><a href="structarmnn_1_1_lstm_input_params_info.xhtml#a35825b1ec5bc2b14c8eac60887dbcf19">armnn::LstmInputParamsInfo::GetCellToOutputWeights</a></div><div class="ttdeci">const TensorInfo &amp; GetCellToOutputWeights() const</div><div class="ttdef"><b>Definition:</b> <a href="_lstm_params_8hpp_source.xhtml#l00161">LstmParams.hpp:161</a></div></div>
<div class="ttc" id="structarmnn_1_1_q_lstm_queue_descriptor_xhtml_ad9442e26aa79f896da5f404ab825a9c8"><div class="ttname"><a href="structarmnn_1_1_q_lstm_queue_descriptor.xhtml#ad9442e26aa79f896da5f404ab825a9c8">armnn::QLstmQueueDescriptor::m_ForgetLayerNormWeights</a></div><div class="ttdeci">const ConstTensorHandle * m_ForgetLayerNormWeights</div><div class="ttdef"><b>Definition:</b> <a href="_workload_data_8hpp_source.xhtml#l00639">WorkloadData.hpp:639</a></div></div>
<div class="ttc" id="structarmnn_1_1_lstm_input_params_info_xhtml_a3b3c26330a05bf4ea40f8a6b402be354"><div class="ttname"><a href="structarmnn_1_1_lstm_input_params_info.xhtml#a3b3c26330a05bf4ea40f8a6b402be354">armnn::LstmInputParamsInfo::GetInputToCellWeights</a></div><div class="ttdeci">const TensorInfo &amp; GetInputToCellWeights() const</div><div class="ttdef"><b>Definition:</b> <a href="_lstm_params_8hpp_source.xhtml#l00129">LstmParams.hpp:129</a></div></div>
<div class="ttc" id="classarmnn_1_1_neon_base_workload_xhtml"><div class="ttname"><a href="classarmnn_1_1_neon_base_workload.xhtml">armnn::NeonBaseWorkload</a></div><div class="ttdef"><b>Definition:</b> <a href="_neon_base_workload_8hpp_source.xhtml#l00013">NeonBaseWorkload.hpp:13</a></div></div>
<div class="ttc" id="classarmnn_1_1_const_tensor_handle_xhtml_a66e8f43a5b42b500871ed96e15419567"><div class="ttname"><a href="classarmnn_1_1_const_tensor_handle.xhtml#a66e8f43a5b42b500871ed96e15419567">armnn::ConstTensorHandle::GetTensorInfo</a></div><div class="ttdeci">const TensorInfo &amp; GetTensorInfo() const</div><div class="ttdef"><b>Definition:</b> <a href="_tensor_handle_8hpp_source.xhtml#l00040">TensorHandle.hpp:40</a></div></div>
<div class="ttc" id="structarmnn_1_1_lstm_input_params_info_xhtml"><div class="ttname"><a href="structarmnn_1_1_lstm_input_params_info.xhtml">armnn::LstmInputParamsInfo</a></div><div class="ttdef"><b>Definition:</b> <a href="_lstm_params_8hpp_source.xhtml#l00063">LstmParams.hpp:63</a></div></div>
<div class="ttc" id="structarmnn_1_1_q_lstm_descriptor_xhtml_a4a8ec49f130084445d44297549254780"><div class="ttname"><a href="structarmnn_1_1_q_lstm_descriptor.xhtml#a4a8ec49f130084445d44297549254780">armnn::QLstmDescriptor::m_LayerNormEnabled</a></div><div class="ttdeci">bool m_LayerNormEnabled</div><div class="ttdoc">Enable/disable layer normalization. </div><div class="ttdef"><b>Definition:</b> <a href="_descriptors_8hpp_source.xhtml#l01364">Descriptors.hpp:1364</a></div></div>
<div class="ttc" id="structarmnn_1_1_lstm_input_params_info_xhtml_a800adf0f61e84d706060f63037c1a336"><div class="ttname"><a href="structarmnn_1_1_lstm_input_params_info.xhtml#a800adf0f61e84d706060f63037c1a336">armnn::LstmInputParamsInfo::GetInputToOutputWeights</a></div><div class="ttdeci">const TensorInfo &amp; GetInputToOutputWeights() const</div><div class="ttdef"><b>Definition:</b> <a href="_lstm_params_8hpp_source.xhtml#l00133">LstmParams.hpp:133</a></div></div>
<div class="ttc" id="classarmnn_1_1_base_workload_xhtml_afb8d2c8817c75de9d01a4c0e0d5c160b"><div class="ttname"><a href="classarmnn_1_1_base_workload.xhtml#afb8d2c8817c75de9d01a4c0e0d5c160b">armnn::BaseWorkload&lt; QLstmQueueDescriptor &gt;::m_Data</a></div><div class="ttdeci">QLstmQueueDescriptor m_Data</div><div class="ttdef"><b>Definition:</b> <a href="_workload_8hpp_source.xhtml#l00083">Workload.hpp:83</a></div></div>
<div class="ttc" id="structarmnn_1_1_q_lstm_descriptor_xhtml_aa6a518b65088f34803b3214334bdff61"><div class="ttname"><a href="structarmnn_1_1_q_lstm_descriptor.xhtml#aa6a518b65088f34803b3214334bdff61">armnn::QLstmDescriptor::m_ProjectionClip</a></div><div class="ttdeci">float m_ProjectionClip</div><div class="ttdoc">Clipping threshold value for the projection. </div><div class="ttdef"><b>Definition:</b> <a href="_descriptors_8hpp_source.xhtml#l01356">Descriptors.hpp:1356</a></div></div>
<div class="ttc" id="structarmnn_1_1_q_lstm_queue_descriptor_xhtml_aab77f54a037658ca9b2bf9cc8a1fadf1"><div class="ttname"><a href="structarmnn_1_1_q_lstm_queue_descriptor.xhtml#aab77f54a037658ca9b2bf9cc8a1fadf1">armnn::QLstmQueueDescriptor::m_InputToForgetWeights</a></div><div class="ttdeci">const ConstTensorHandle * m_InputToForgetWeights</div><div class="ttdef"><b>Definition:</b> <a href="_workload_data_8hpp_source.xhtml#l00622">WorkloadData.hpp:622</a></div></div>
<div class="ttc" id="structarmnn_1_1_q_lstm_descriptor_xhtml_a09e1f097944f61cc901240f9300364cf"><div class="ttname"><a href="structarmnn_1_1_q_lstm_descriptor.xhtml#a09e1f097944f61cc901240f9300364cf">armnn::QLstmDescriptor::m_InputIntermediateScale</a></div><div class="ttdeci">float m_InputIntermediateScale</div><div class="ttdoc">Input intermediate quantization scale. </div><div class="ttdef"><b>Definition:</b> <a href="_descriptors_8hpp_source.xhtml#l01366">Descriptors.hpp:1366</a></div></div>
<div class="ttc" id="structarmnn_1_1_lstm_input_params_info_xhtml_ae22fc962c59e7c24986718f5af0020db"><div class="ttname"><a href="structarmnn_1_1_lstm_input_params_info.xhtml#ae22fc962c59e7c24986718f5af0020db">armnn::LstmInputParamsInfo::m_ProjectionBias</a></div><div class="ttdeci">const TensorInfo * m_ProjectionBias</div><div class="ttdef"><b>Definition:</b> <a href="_lstm_params_8hpp_source.xhtml#l00105">LstmParams.hpp:105</a></div></div>
<div class="ttc" id="namespacearmnn_xhtml_a67a0db04d321a74b7e7fcfd3f1a3f70b"><div class="ttname"><a href="namespacearmnn.xhtml#a67a0db04d321a74b7e7fcfd3f1a3f70b">armnn::Status</a></div><div class="ttdeci">Status</div><div class="ttdoc">enumeration </div><div class="ttdef"><b>Definition:</b> <a href="_types_8hpp_source.xhtml#l00042">Types.hpp:42</a></div></div>
<div class="ttc" id="structarmnn_1_1_q_lstm_queue_descriptor_xhtml_a6e9593869b82984de198fed27f72cdcf"><div class="ttname"><a href="structarmnn_1_1_q_lstm_queue_descriptor.xhtml#a6e9593869b82984de198fed27f72cdcf">armnn::QLstmQueueDescriptor::m_CellBias</a></div><div class="ttdeci">const ConstTensorHandle * m_CellBias</div><div class="ttdef"><b>Definition:</b> <a href="_workload_data_8hpp_source.xhtml#l00634">WorkloadData.hpp:634</a></div></div>
<div class="ttc" id="_neon_workload_utils_8hpp_xhtml"><div class="ttname"><a href="_neon_workload_utils_8hpp.xhtml">NeonWorkloadUtils.hpp</a></div></div>
<div class="ttc" id="structarmnn_1_1_q_lstm_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_q_lstm_descriptor.xhtml">armnn::QLstmDescriptor</a></div><div class="ttdoc">A QLstmDescriptor for the QLstmLayer. </div><div class="ttdef"><b>Definition:</b> <a href="_descriptors_8hpp_source.xhtml#l01320">Descriptors.hpp:1320</a></div></div>
<div class="ttc" id="structarmnn_1_1_q_lstm_queue_descriptor_xhtml_a1dbad32cad5c0437e1272f59fedf52ea"><div class="ttname"><a href="structarmnn_1_1_q_lstm_queue_descriptor.xhtml#a1dbad32cad5c0437e1272f59fedf52ea">armnn::QLstmQueueDescriptor::m_InputLayerNormWeights</a></div><div class="ttdeci">const ConstTensorHandle * m_InputLayerNormWeights</div><div class="ttdef"><b>Definition:</b> <a href="_workload_data_8hpp_source.xhtml#l00638">WorkloadData.hpp:638</a></div></div>
<div class="ttc" id="structarmnn_1_1_lstm_input_params_info_xhtml_ab99b2297c5a17114926b8b47c693fe43"><div class="ttname"><a href="structarmnn_1_1_lstm_input_params_info.xhtml#ab99b2297c5a17114926b8b47c693fe43">armnn::LstmInputParamsInfo::m_CellToInputWeights</a></div><div class="ttdeci">const TensorInfo * m_CellToInputWeights</div><div class="ttdef"><b>Definition:</b> <a href="_lstm_params_8hpp_source.xhtml#l00097">LstmParams.hpp:97</a></div></div>
<div class="ttc" id="structarmnn_1_1_lstm_input_params_info_xhtml_a534af7e4f3a6d50a6dab05abc245133d"><div class="ttname"><a href="structarmnn_1_1_lstm_input_params_info.xhtml#a534af7e4f3a6d50a6dab05abc245133d">armnn::LstmInputParamsInfo::GetRecurrentToForgetWeights</a></div><div class="ttdeci">const TensorInfo &amp; GetRecurrentToForgetWeights() const</div><div class="ttdef"><b>Definition:</b> <a href="_lstm_params_8hpp_source.xhtml#l00141">LstmParams.hpp:141</a></div></div>
<div class="ttc" id="structarmnn_1_1_q_lstm_descriptor_xhtml_afec7f36158448f723b426a9527acb189"><div class="ttname"><a href="structarmnn_1_1_q_lstm_descriptor.xhtml#afec7f36158448f723b426a9527acb189">armnn::QLstmDescriptor::m_ForgetIntermediateScale</a></div><div class="ttdeci">float m_ForgetIntermediateScale</div><div class="ttdoc">Forget intermediate quantization scale. </div><div class="ttdef"><b>Definition:</b> <a href="_descriptors_8hpp_source.xhtml#l01368">Descriptors.hpp:1368</a></div></div>
<div class="ttc" id="structarmnn_1_1_q_lstm_queue_descriptor_xhtml_a841439e3b8dc157a7368b19c9ecb7d03"><div class="ttname"><a href="structarmnn_1_1_q_lstm_queue_descriptor.xhtml#a841439e3b8dc157a7368b19c9ecb7d03">armnn::QLstmQueueDescriptor::m_InputToCellWeights</a></div><div class="ttdeci">const ConstTensorHandle * m_InputToCellWeights</div><div class="ttdef"><b>Definition:</b> <a href="_workload_data_8hpp_source.xhtml#l00623">WorkloadData.hpp:623</a></div></div>
<div class="ttc" id="structarmnn_1_1_lstm_input_params_info_xhtml_afa2b04197a764428a8c3a648de8058fc"><div class="ttname"><a href="structarmnn_1_1_lstm_input_params_info.xhtml#afa2b04197a764428a8c3a648de8058fc">armnn::LstmInputParamsInfo::GetInputToInputWeights</a></div><div class="ttdeci">const TensorInfo &amp; GetInputToInputWeights() const</div><div class="ttdef"><b>Definition:</b> <a href="_lstm_params_8hpp_source.xhtml#l00121">LstmParams.hpp:121</a></div></div>
<div class="ttc" id="structarmnn_1_1_lstm_input_params_info_xhtml_a045674b768295e617d7060f96f162366"><div class="ttname"><a href="structarmnn_1_1_lstm_input_params_info.xhtml#a045674b768295e617d7060f96f162366">armnn::LstmInputParamsInfo::GetOutputLayerNormWeights</a></div><div class="ttdeci">const TensorInfo &amp; GetOutputLayerNormWeights() const</div><div class="ttdef"><b>Definition:</b> <a href="_lstm_params_8hpp_source.xhtml#l00201">LstmParams.hpp:201</a></div></div>
<div class="ttc" id="structarmnn_1_1_q_lstm_descriptor_xhtml_ac81fb0e66dc623dc37c77f219f53a6d3"><div class="ttname"><a href="structarmnn_1_1_q_lstm_descriptor.xhtml#ac81fb0e66dc623dc37c77f219f53a6d3">armnn::QLstmDescriptor::m_CellClip</a></div><div class="ttdeci">float m_CellClip</div><div class="ttdoc">Clipping threshold value for the cell state. </div><div class="ttdef"><b>Definition:</b> <a href="_descriptors_8hpp_source.xhtml#l01354">Descriptors.hpp:1354</a></div></div>
<div class="ttc" id="structarmnn_1_1_q_lstm_queue_descriptor_xhtml_a20c10fcb26657477377d07b7b1e13120"><div class="ttname"><a href="structarmnn_1_1_q_lstm_queue_descriptor.xhtml#a20c10fcb26657477377d07b7b1e13120">armnn::QLstmQueueDescriptor::m_CellToForgetWeights</a></div><div class="ttdeci">const ConstTensorHandle * m_CellToForgetWeights</div><div class="ttdef"><b>Definition:</b> <a href="_workload_data_8hpp_source.xhtml#l00630">WorkloadData.hpp:630</a></div></div>
<div class="ttc" id="structarmnn_1_1_q_lstm_queue_descriptor_xhtml_ac668b31de6fb0f19d4c793d5ed3c3316"><div class="ttname"><a href="structarmnn_1_1_q_lstm_queue_descriptor.xhtml#ac668b31de6fb0f19d4c793d5ed3c3316">armnn::QLstmQueueDescriptor::m_ProjectionBias</a></div><div class="ttdeci">const ConstTensorHandle * m_ProjectionBias</div><div class="ttdef"><b>Definition:</b> <a href="_workload_data_8hpp_source.xhtml#l00637">WorkloadData.hpp:637</a></div></div>
<div class="ttc" id="structarmnn_1_1_lstm_input_params_info_xhtml_ac81393ef433b0c7c337f9f0d55f41ae4"><div class="ttname"><a href="structarmnn_1_1_lstm_input_params_info.xhtml#ac81393ef433b0c7c337f9f0d55f41ae4">armnn::LstmInputParamsInfo::GetForgetGateBias</a></div><div class="ttdeci">const TensorInfo &amp; GetForgetGateBias() const</div><div class="ttdef"><b>Definition:</b> <a href="_lstm_params_8hpp_source.xhtml#l00169">LstmParams.hpp:169</a></div></div>
<div class="ttc" id="structarmnn_1_1_queue_descriptor_xhtml_a6abd491bb99ffe88bd472c1ae5a1ed1a"><div class="ttname"><a href="structarmnn_1_1_queue_descriptor.xhtml#a6abd491bb99ffe88bd472c1ae5a1ed1a">armnn::QueueDescriptor::m_Outputs</a></div><div class="ttdeci">std::vector&lt; ITensorHandle * &gt; m_Outputs</div><div class="ttdef"><b>Definition:</b> <a href="_workload_data_8hpp_source.xhtml#l00027">WorkloadData.hpp:27</a></div></div>
<div class="ttc" id="structarmnn_1_1_q_lstm_queue_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_q_lstm_queue_descriptor.xhtml">armnn::QLstmQueueDescriptor</a></div><div class="ttdef"><b>Definition:</b> <a href="_workload_data_8hpp_source.xhtml#l00594">WorkloadData.hpp:594</a></div></div>
<div class="ttc" id="namespacearmnn_xhtml_a4dc0adc6737b5944e7671bee71788407acaf9b6b99962bf5c2264824231d7a40c"><div class="ttname"><a href="namespacearmnn.xhtml#a4dc0adc6737b5944e7671bee71788407acaf9b6b99962bf5c2264824231d7a40c">armnn::BoostLogSeverityMapping::info</a></div></div>
<div class="ttc" id="structarmnn_1_1_q_lstm_queue_descriptor_xhtml_ac18c8b8b2039267d8282e91b4162d8aa"><div class="ttname"><a href="structarmnn_1_1_q_lstm_queue_descriptor.xhtml#ac18c8b8b2039267d8282e91b4162d8aa">armnn::QLstmQueueDescriptor::m_RecurrentToCellWeights</a></div><div class="ttdeci">const ConstTensorHandle * m_RecurrentToCellWeights</div><div class="ttdef"><b>Definition:</b> <a href="_workload_data_8hpp_source.xhtml#l00627">WorkloadData.hpp:627</a></div></div>
<div class="ttc" id="structarmnn_1_1_q_lstm_descriptor_xhtml_a6c9de81fc65b3c4924cab11907075a17"><div class="ttname"><a href="structarmnn_1_1_q_lstm_descriptor.xhtml#a6c9de81fc65b3c4924cab11907075a17">armnn::QLstmDescriptor::m_ProjectionEnabled</a></div><div class="ttdeci">bool m_ProjectionEnabled</div><div class="ttdoc">Enable/disable the projection layer. </div><div class="ttdef"><b>Definition:</b> <a href="_descriptors_8hpp_source.xhtml#l01362">Descriptors.hpp:1362</a></div></div>
<div class="ttc" id="structarmnn_1_1_q_lstm_queue_descriptor_xhtml_a44eb7524badcca9b2073359e3814c98b"><div class="ttname"><a href="structarmnn_1_1_q_lstm_queue_descriptor.xhtml#a44eb7524badcca9b2073359e3814c98b">armnn::QLstmQueueDescriptor::m_InputGateBias</a></div><div class="ttdeci">const ConstTensorHandle * m_InputGateBias</div><div class="ttdef"><b>Definition:</b> <a href="_workload_data_8hpp_source.xhtml#l00632">WorkloadData.hpp:632</a></div></div>
<div class="ttc" id="_profiling_8hpp_xhtml_a786492a3881a4c760ab1eec2149f4aba"><div class="ttname"><a href="_profiling_8hpp.xhtml#a786492a3881a4c760ab1eec2149f4aba">ARMNN_REPORT_PROFILING_WORKLOAD_DESC</a></div><div class="ttdeci">#define ARMNN_REPORT_PROFILING_WORKLOAD_DESC(name, desc, infos, guid)</div><div class="ttdef"><b>Definition:</b> <a href="_profiling_8hpp_source.xhtml#l00227">Profiling.hpp:227</a></div></div>
<div class="ttc" id="namespacearmnn_xhtml_acf8e1f43fc13cf7603564cc15743fce2"><div class="ttname"><a href="namespacearmnn.xhtml#acf8e1f43fc13cf7603564cc15743fce2">armnn::InitializeArmComputeTensorData</a></div><div class="ttdeci">void InitializeArmComputeTensorData(arm_compute::Tensor &amp;tensor, const ConstTensorHandle *handle)</div><div class="ttdef"><b>Definition:</b> <a href="_neon_workload_utils_8hpp_source.xhtml#l00060">NeonWorkloadUtils.hpp:60</a></div></div>
<div class="ttc" id="structarmnn_1_1_lstm_input_params_info_xhtml_ae1d5a487fcd13852927c8a2b9f9dfeb6"><div class="ttname"><a href="structarmnn_1_1_lstm_input_params_info.xhtml#ae1d5a487fcd13852927c8a2b9f9dfeb6">armnn::LstmInputParamsInfo::GetInputGateBias</a></div><div class="ttdeci">const TensorInfo &amp; GetInputGateBias() const</div><div class="ttdef"><b>Definition:</b> <a href="_lstm_params_8hpp_source.xhtml#l00165">LstmParams.hpp:165</a></div></div>
<div class="ttc" id="structarmnn_1_1_lstm_input_params_info_xhtml_a18038725f71bb5c5bd03c02cc164f879"><div class="ttname"><a href="structarmnn_1_1_lstm_input_params_info.xhtml#a18038725f71bb5c5bd03c02cc164f879">armnn::LstmInputParamsInfo::GetProjectionWeights</a></div><div class="ttdeci">const TensorInfo &amp; GetProjectionWeights() const</div><div class="ttdef"><b>Definition:</b> <a href="_lstm_params_8hpp_source.xhtml#l00181">LstmParams.hpp:181</a></div></div>
<div class="ttc" id="structarmnn_1_1_lstm_input_params_info_xhtml_a7dac08f19a1b235d5256d39136848a09"><div class="ttname"><a href="structarmnn_1_1_lstm_input_params_info.xhtml#a7dac08f19a1b235d5256d39136848a09">armnn::LstmInputParamsInfo::GetInputToForgetWeights</a></div><div class="ttdeci">const TensorInfo &amp; GetInputToForgetWeights() const</div><div class="ttdef"><b>Definition:</b> <a href="_lstm_params_8hpp_source.xhtml#l00125">LstmParams.hpp:125</a></div></div>
<div class="ttc" id="structarmnn_1_1_workload_info_xhtml"><div class="ttname"><a href="structarmnn_1_1_workload_info.xhtml">armnn::WorkloadInfo</a></div><div class="ttdoc">Contains information about TensorInfos of a layer. </div><div class="ttdef"><b>Definition:</b> <a href="include_2armnn_2backends_2_workload_info_8hpp_source.xhtml#l00016">WorkloadInfo.hpp:16</a></div></div>
<div class="ttc" id="structarmnn_1_1_q_lstm_queue_descriptor_xhtml_a5ff4158b1b363b898d0da04c42d37ce0"><div class="ttname"><a href="structarmnn_1_1_q_lstm_queue_descriptor.xhtml#a5ff4158b1b363b898d0da04c42d37ce0">armnn::QLstmQueueDescriptor::m_OutputGateBias</a></div><div class="ttdeci">const ConstTensorHandle * m_OutputGateBias</div><div class="ttdef"><b>Definition:</b> <a href="_workload_data_8hpp_source.xhtml#l00635">WorkloadData.hpp:635</a></div></div>
<div class="ttc" id="structarmnn_1_1_lstm_input_params_info_xhtml_a3d2f638ba83ae5dad0094c006220c232"><div class="ttname"><a href="structarmnn_1_1_lstm_input_params_info.xhtml#a3d2f638ba83ae5dad0094c006220c232">armnn::LstmInputParamsInfo::GetInputLayerNormWeights</a></div><div class="ttdeci">const TensorInfo &amp; GetInputLayerNormWeights() const</div><div class="ttdef"><b>Definition:</b> <a href="_lstm_params_8hpp_source.xhtml#l00189">LstmParams.hpp:189</a></div></div>
<div class="ttc" id="structarmnn_1_1_queue_descriptor_xhtml_a4b50e46a6810018f3edecfb68b2a76b3"><div class="ttname"><a href="structarmnn_1_1_queue_descriptor.xhtml#a4b50e46a6810018f3edecfb68b2a76b3">armnn::QueueDescriptor::m_Inputs</a></div><div class="ttdeci">std::vector&lt; ITensorHandle * &gt; m_Inputs</div><div class="ttdef"><b>Definition:</b> <a href="_workload_data_8hpp_source.xhtml#l00026">WorkloadData.hpp:26</a></div></div>
<div class="ttc" id="structarmnn_1_1_lstm_input_params_info_xhtml_ae0da94ba17ce67b95b5b9d6e5adc4271"><div class="ttname"><a href="structarmnn_1_1_lstm_input_params_info.xhtml#ae0da94ba17ce67b95b5b9d6e5adc4271">armnn::LstmInputParamsInfo::GetOutputGateBias</a></div><div class="ttdeci">const TensorInfo &amp; GetOutputGateBias() const</div><div class="ttdef"><b>Definition:</b> <a href="_lstm_params_8hpp_source.xhtml#l00177">LstmParams.hpp:177</a></div></div>
<div class="ttc" id="structarmnn_1_1_q_lstm_queue_descriptor_xhtml_a0e0f66bd03c88f3d2dc666f581d3cf12"><div class="ttname"><a href="structarmnn_1_1_q_lstm_queue_descriptor.xhtml#a0e0f66bd03c88f3d2dc666f581d3cf12">armnn::QLstmQueueDescriptor::m_OutputLayerNormWeights</a></div><div class="ttdeci">const ConstTensorHandle * m_OutputLayerNormWeights</div><div class="ttdef"><b>Definition:</b> <a href="_workload_data_8hpp_source.xhtml#l00641">WorkloadData.hpp:641</a></div></div>
<div class="ttc" id="_neon_workload_utils_8hpp_xhtml_a9165e41bcaf1b90f9ff91ef681e88c4f"><div class="ttname"><a href="_neon_workload_utils_8hpp.xhtml#a9165e41bcaf1b90f9ff91ef681e88c4f">ARMNN_SCOPED_PROFILING_EVENT_NEON_GUID</a></div><div class="ttdeci">#define ARMNN_SCOPED_PROFILING_EVENT_NEON_GUID(name, guid)</div><div class="ttdef"><b>Definition:</b> <a href="_neon_workload_utils_8hpp_source.xhtml#l00024">NeonWorkloadUtils.hpp:24</a></div></div>
<div class="ttc" id="structarmnn_1_1_lstm_input_params_info_xhtml_a9f2cce936b4df49c487eaca513bf55ca"><div class="ttname"><a href="structarmnn_1_1_lstm_input_params_info.xhtml#a9f2cce936b4df49c487eaca513bf55ca">armnn::LstmInputParamsInfo::GetProjectionBias</a></div><div class="ttdeci">const TensorInfo &amp; GetProjectionBias() const</div><div class="ttdef"><b>Definition:</b> <a href="_lstm_params_8hpp_source.xhtml#l00185">LstmParams.hpp:185</a></div></div>
<div class="ttc" id="structarmnn_1_1_q_lstm_descriptor_xhtml_a0477ee1b44ace6090119178eea78cb0b"><div class="ttname"><a href="structarmnn_1_1_q_lstm_descriptor.xhtml#a0477ee1b44ace6090119178eea78cb0b">armnn::QLstmDescriptor::m_CellIntermediateScale</a></div><div class="ttdeci">float m_CellIntermediateScale</div><div class="ttdoc">Cell intermediate quantization scale. </div><div class="ttdef"><b>Definition:</b> <a href="_descriptors_8hpp_source.xhtml#l01370">Descriptors.hpp:1370</a></div></div>
<div class="ttc" id="structarmnn_1_1_q_lstm_queue_descriptor_xhtml_a4c27716f61bb68e8ea0bd4e8389ba01a"><div class="ttname"><a href="structarmnn_1_1_q_lstm_queue_descriptor.xhtml#a4c27716f61bb68e8ea0bd4e8389ba01a">armnn::QLstmQueueDescriptor::m_RecurrentToOutputWeights</a></div><div class="ttdeci">const ConstTensorHandle * m_RecurrentToOutputWeights</div><div class="ttdef"><b>Definition:</b> <a href="_workload_data_8hpp_source.xhtml#l00628">WorkloadData.hpp:628</a></div></div>
<div class="ttc" id="structarmnn_1_1_q_lstm_queue_descriptor_xhtml_a299587d4f3fca029492700f3e2585bd8"><div class="ttname"><a href="structarmnn_1_1_q_lstm_queue_descriptor.xhtml#a299587d4f3fca029492700f3e2585bd8">armnn::QLstmQueueDescriptor::m_RecurrentToInputWeights</a></div><div class="ttdeci">const ConstTensorHandle * m_RecurrentToInputWeights</div><div class="ttdef"><b>Definition:</b> <a href="_workload_data_8hpp_source.xhtml#l00625">WorkloadData.hpp:625</a></div></div>
<div class="ttc" id="structarmnn_1_1_q_lstm_descriptor_xhtml_ad474e5c51a0b194ef32e812b86c0cbdb"><div class="ttname"><a href="structarmnn_1_1_q_lstm_descriptor.xhtml#ad474e5c51a0b194ef32e812b86c0cbdb">armnn::QLstmDescriptor::m_CifgEnabled</a></div><div class="ttdeci">bool m_CifgEnabled</div><div class="ttdoc">Enable/disable CIFG (coupled input &amp; forget gate). </div><div class="ttdef"><b>Definition:</b> <a href="_descriptors_8hpp_source.xhtml#l01358">Descriptors.hpp:1358</a></div></div>
<div class="ttc" id="structarmnn_1_1_q_lstm_queue_descriptor_xhtml_adf8571dd1867ee91082bd005f94f2610"><div class="ttname"><a href="structarmnn_1_1_q_lstm_queue_descriptor.xhtml#adf8571dd1867ee91082bd005f94f2610">armnn::QLstmQueueDescriptor::m_RecurrentToForgetWeights</a></div><div class="ttdeci">const ConstTensorHandle * m_RecurrentToForgetWeights</div><div class="ttdef"><b>Definition:</b> <a href="_workload_data_8hpp_source.xhtml#l00626">WorkloadData.hpp:626</a></div></div>
<div class="ttc" id="structarmnn_1_1_q_lstm_descriptor_xhtml_a4556cbd764d4848d8ad0637a9eed580d"><div class="ttname"><a href="structarmnn_1_1_q_lstm_descriptor.xhtml#a4556cbd764d4848d8ad0637a9eed580d">armnn::QLstmDescriptor::m_HiddenStateZeroPoint</a></div><div class="ttdeci">int32_t m_HiddenStateZeroPoint</div><div class="ttdoc">Hidden State zero point. </div><div class="ttdef"><b>Definition:</b> <a href="_descriptors_8hpp_source.xhtml#l01374">Descriptors.hpp:1374</a></div></div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="dir_68267d1309a1af8e8297ef4c3efbcdba.xhtml">src</a></li><li class="navelem"><a class="el" href="dir_0f3cdec46afbc61a1ded8e1687c9c9a0.xhtml">backends</a></li><li class="navelem"><a class="el" href="dir_d86eb514662c7c08e168285f21d00ea1.xhtml">neon</a></li><li class="navelem"><a class="el" href="dir_369c3c20501d0d10bd0354bf11c2f559.xhtml">workloads</a></li><li class="navelem"><a class="el" href="_neon_q_lstm_workload_8cpp.xhtml">NeonQLstmWorkload.cpp</a></li>
    <li class="footer">Generated on Wed Nov 23 2022 10:57:38 for ArmNN by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.13 </li>
  </ul>
</div>
</body>
</html>
