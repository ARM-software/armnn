<!-- Copyright (c) 2020 ARM Limited. -->
<!--                                 -->
<!-- SPDX-License-Identifier: MIT    -->
<!--                                 -->
<!-- HTML header for doxygen 1.8.13-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.13"/>
<meta name="robots" content="NOINDEX, NOFOLLOW" />
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>ArmNN: InputSlot Class Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script><script type="text/javascript" src="http://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="stylesheet.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <img alt="ArmNN" src="Arm_NN_horizontal_blue.png" style="max-width: 10rem; margin-top: .5rem; margin-left 10px"/>
  <td style="padding-left: 0.5em;">
   <div id="projectname">
   &#160;<span id="projectnumber">22.11</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.13 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
$(document).ready(function(){initNavTree('classarmnn_1_1_input_slot.xhtml','');});
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="summary">
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="classarmnn_1_1_input_slot-members.xhtml">List of all members</a>  </div>
  <div class="headertitle">
<div class="title">InputSlot Class Reference<span class="mlabels"><span class="mlabel">final</span></span></div>  </div>
</div><!--header-->
<div class="contents">

<p><code>#include &lt;<a class="el" href="_layer_8hpp_source.xhtml">Layer.hpp</a>&gt;</code></p>
<div class="dynheader">
Inheritance diagram for InputSlot:</div>
<div class="dyncontent">
 <div class="center">
  <img src="classarmnn_1_1_input_slot.png" usemap="#InputSlot_map" alt=""/>
  <map id="InputSlot_map" name="InputSlot_map">
<area href="classarmnn_1_1_i_input_slot.xhtml" title="An input connection slot for a layer. " alt="IInputSlot" shape="rect" coords="0,0,63,24"/>
</map>
 </div></div>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:a86682888c4c0161a95a080ec1fc91892"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_input_slot.xhtml#a86682888c4c0161a95a080ec1fc91892">InputSlot</a> (<a class="el" href="classarmnn_1_1_layer.xhtml">Layer</a> &amp;owner, unsigned int slotIndex)</td></tr>
<tr class="separator:a86682888c4c0161a95a080ec1fc91892"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0fe41ea612a97f8cd9b0e3e86d8b53fd"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_input_slot.xhtml#a0fe41ea612a97f8cd9b0e3e86d8b53fd">~InputSlot</a> ()</td></tr>
<tr class="separator:a0fe41ea612a97f8cd9b0e3e86d8b53fd"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7ddaf04177053a536f0e7be83a642bc6"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classarmnn_1_1_layer.xhtml">Layer</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_input_slot.xhtml#a7ddaf04177053a536f0e7be83a642bc6">GetOwningLayer</a> () const</td></tr>
<tr class="separator:a7ddaf04177053a536f0e7be83a642bc6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae3f69b193433448bee0f3925da4b01a3"><td class="memItemLeft" align="right" valign="top">unsigned int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_input_slot.xhtml#ae3f69b193433448bee0f3925da4b01a3">GetSlotIndex</a> () const override</td></tr>
<tr class="separator:ae3f69b193433448bee0f3925da4b01a3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9effd325a6d512a3f8ff4bd207d53255"><td class="memItemLeft" align="right" valign="top">const <a class="el" href="classarmnn_1_1_output_slot.xhtml">OutputSlot</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_input_slot.xhtml#a9effd325a6d512a3f8ff4bd207d53255">GetConnectedOutputSlot</a> () const</td></tr>
<tr class="separator:a9effd325a6d512a3f8ff4bd207d53255"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad5b716c1973e8476e5c338815aaeaac8"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classarmnn_1_1_output_slot.xhtml">OutputSlot</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_input_slot.xhtml#ad5b716c1973e8476e5c338815aaeaac8">GetConnectedOutputSlot</a> ()</td></tr>
<tr class="separator:ad5b716c1973e8476e5c338815aaeaac8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a07dcdabbae92b5c0d51d2d236db528ed"><td class="memItemLeft" align="right" valign="top">const <a class="el" href="classarmnn_1_1_i_connectable_layer.xhtml">IConnectableLayer</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_input_slot.xhtml#a07dcdabbae92b5c0d51d2d236db528ed">GetOwningIConnectableLayer</a> () const override</td></tr>
<tr class="separator:a07dcdabbae92b5c0d51d2d236db528ed"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab5622d9c20e8086606222bf847656070"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classarmnn_1_1_i_connectable_layer.xhtml">IConnectableLayer</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_input_slot.xhtml#ab5622d9c20e8086606222bf847656070">GetOwningIConnectableLayer</a> () override</td></tr>
<tr class="separator:ab5622d9c20e8086606222bf847656070"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae34c07e230a32ea853faed3fefc804f3"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_input_slot.xhtml#ae34c07e230a32ea853faed3fefc804f3">SetConnection</a> (<a class="el" href="classarmnn_1_1_output_slot.xhtml">OutputSlot</a> *source)</td></tr>
<tr class="memdesc:ae34c07e230a32ea853faed3fefc804f3"><td class="mdescLeft">&#160;</td><td class="mdescRight">Links the slot to an output slot or breaks an existing link if passing nullptr.  <a href="#ae34c07e230a32ea853faed3fefc804f3">More...</a><br /></td></tr>
<tr class="separator:ae34c07e230a32ea853faed3fefc804f3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5a0a7224d93d14db044426a3878dab4d"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_input_slot.xhtml#a5a0a7224d93d14db044426a3878dab4d">Insert</a> (<a class="el" href="classarmnn_1_1_layer.xhtml">Layer</a> &amp;layer)</td></tr>
<tr class="separator:a5a0a7224d93d14db044426a3878dab4d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3153abb7c0c0a84629079b2fac7db54f"><td class="memItemLeft" align="right" valign="top">const <a class="el" href="classarmnn_1_1_i_output_slot.xhtml">IOutputSlot</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_input_slot.xhtml#a3153abb7c0c0a84629079b2fac7db54f">GetConnection</a> () const override</td></tr>
<tr class="separator:a3153abb7c0c0a84629079b2fac7db54f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:afed01ea07472d9b32fac493e05bb0089"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classarmnn_1_1_i_output_slot.xhtml">IOutputSlot</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_input_slot.xhtml#afed01ea07472d9b32fac493e05bb0089">GetConnection</a> () override</td></tr>
<tr class="separator:afed01ea07472d9b32fac493e05bb0089"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="inherited"></a>
Additional Inherited Members</h2></td></tr>
<tr class="inherit_header pro_methods_classarmnn_1_1_i_input_slot"><td colspan="2" onclick="javascript:toggleInherit('pro_methods_classarmnn_1_1_i_input_slot')"><img src="closed.png" alt="-"/>&#160;Protected Member Functions inherited from <a class="el" href="classarmnn_1_1_i_input_slot.xhtml">IInputSlot</a></td></tr>
<tr class="memitem:af9d1da899b5c925de16bc0a1fb49dc61 inherit pro_methods_classarmnn_1_1_i_input_slot"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_i_input_slot.xhtml#af9d1da899b5c925de16bc0a1fb49dc61">~IInputSlot</a> ()</td></tr>
<tr class="memdesc:af9d1da899b5c925de16bc0a1fb49dc61 inherit pro_methods_classarmnn_1_1_i_input_slot"><td class="mdescLeft">&#160;</td><td class="mdescRight">Not user deletable.  <a href="classarmnn_1_1_i_input_slot.xhtml#af9d1da899b5c925de16bc0a1fb49dc61">More...</a><br /></td></tr>
<tr class="separator:af9d1da899b5c925de16bc0a1fb49dc61 inherit pro_methods_classarmnn_1_1_i_input_slot"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock">
<p class="definition">Definition at line <a class="el" href="_layer_8hpp_source.xhtml#l00042">42</a> of file <a class="el" href="_layer_8hpp_source.xhtml">Layer.hpp</a>.</p>
</div><h2 class="groupheader">Constructor &amp; Destructor Documentation</h2>
<a id="a86682888c4c0161a95a080ec1fc91892"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a86682888c4c0161a95a080ec1fc91892">&#9670;&nbsp;</a></span>InputSlot()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarmnn_1_1_input_slot.xhtml">InputSlot</a> </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classarmnn_1_1_layer.xhtml">Layer</a> &amp;&#160;</td>
          <td class="paramname"><em>owner</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">unsigned int&#160;</td>
          <td class="paramname"><em>slotIndex</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">explicit</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_layer_8hpp_source.xhtml#l00045">45</a> of file <a class="el" href="_layer_8hpp_source.xhtml">Layer.hpp</a>.</p>

<p class="reference">References <a class="el" href="_layer_8hpp_source.xhtml#l00186">InputSlot::~InputSlot()</a>.</p>
<div class="fragment"><div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;    : m_OwningLayer(owner)</div><div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;    , m_Connection(<span class="keyword">nullptr</span>)</div><div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;    , m_SlotIndex(slotIndex)</div><div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;    {}</div></div><!-- fragment -->
</div>
</div>
<a id="a0fe41ea612a97f8cd9b0e3e86d8b53fd"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a0fe41ea612a97f8cd9b0e3e86d8b53fd">&#9670;&nbsp;</a></span>~InputSlot()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">~<a class="el" href="classarmnn_1_1_input_slot.xhtml">InputSlot</a> </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_layer_8hpp_source.xhtml#l00186">186</a> of file <a class="el" href="_layer_8hpp_source.xhtml">Layer.hpp</a>.</p>

<p class="reference">Referenced by <a class="el" href="_layer_8hpp_source.xhtml#l00045">InputSlot::InputSlot()</a>.</p>
<div class="fragment"><div class="line"><a name="l00187"></a><span class="lineno">  187</span>&#160;{</div><div class="line"><a name="l00188"></a><span class="lineno">  188</span>&#160;    <span class="keywordflow">if</span> (m_Connection != <span class="keyword">nullptr</span>)</div><div class="line"><a name="l00189"></a><span class="lineno">  189</span>&#160;    {</div><div class="line"><a name="l00190"></a><span class="lineno">  190</span>&#160;        <span class="keywordflow">try</span></div><div class="line"><a name="l00191"></a><span class="lineno">  191</span>&#160;        {</div><div class="line"><a name="l00192"></a><span class="lineno">  192</span>&#160;            <span class="comment">// Coverity fix: Disconnect() may throw uncaught exceptions.</span></div><div class="line"><a name="l00193"></a><span class="lineno">  193</span>&#160;            m_Connection-&gt;<a class="code" href="classarmnn_1_1_output_slot.xhtml#ac72a192dfcfa19e6ce826f99b415a11d">Disconnect</a>(*<span class="keyword">this</span>);</div><div class="line"><a name="l00194"></a><span class="lineno">  194</span>&#160;        }</div><div class="line"><a name="l00195"></a><span class="lineno">  195</span>&#160;        <span class="keywordflow">catch</span> (<span class="keyword">const</span> std::exception&amp; e)</div><div class="line"><a name="l00196"></a><span class="lineno">  196</span>&#160;        {</div><div class="line"><a name="l00197"></a><span class="lineno">  197</span>&#160;            <span class="comment">// Coverity fix: BOOST_LOG_TRIVIAL (typically used to report errors) may throw an</span></div><div class="line"><a name="l00198"></a><span class="lineno">  198</span>&#160;            <span class="comment">// exception of type std::length_error.</span></div><div class="line"><a name="l00199"></a><span class="lineno">  199</span>&#160;            <span class="comment">// Using stderr instead in this context as there is no point in nesting try-catch blocks here.</span></div><div class="line"><a name="l00200"></a><span class="lineno">  200</span>&#160;            std::cerr &lt;&lt; <span class="stringliteral">&quot;WARNING: An error has occurred when disconnecting an input slot: &quot;</span></div><div class="line"><a name="l00201"></a><span class="lineno">  201</span>&#160;                      &lt;&lt; e.what() &lt;&lt; std::endl;</div><div class="line"><a name="l00202"></a><span class="lineno">  202</span>&#160;        }</div><div class="line"><a name="l00203"></a><span class="lineno">  203</span>&#160;    }</div><div class="line"><a name="l00204"></a><span class="lineno">  204</span>&#160;}</div><div class="ttc" id="classarmnn_1_1_output_slot_xhtml_ac72a192dfcfa19e6ce826f99b415a11d"><div class="ttname"><a href="classarmnn_1_1_output_slot.xhtml#ac72a192dfcfa19e6ce826f99b415a11d">armnn::OutputSlot::Disconnect</a></div><div class="ttdeci">void Disconnect(InputSlot &amp;slot)</div><div class="ttdef"><b>Definition:</b> <a href="_layer_8cpp_source.xhtml#l00120">Layer.cpp:120</a></div></div>
</div><!-- fragment -->
</div>
</div>
<h2 class="groupheader">Member Function Documentation</h2>
<a id="a9effd325a6d512a3f8ff4bd207d53255"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a9effd325a6d512a3f8ff4bd207d53255">&#9670;&nbsp;</a></span>GetConnectedOutputSlot() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">const <a class="el" href="classarmnn_1_1_output_slot.xhtml">OutputSlot</a>* GetConnectedOutputSlot </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_layer_8hpp_source.xhtml#l00056">56</a> of file <a class="el" href="_layer_8hpp_source.xhtml">Layer.hpp</a>.</p>

<p class="reference">Referenced by <a class="el" href="_concat_layer_8cpp_source.xhtml#l00023">ConcatLayer::CreateWorkload()</a>, <a class="el" href="_debug_layer_8cpp_source.xhtml#l00025">DebugLayer::CreateWorkload()</a>, <a class="el" href="_fold_pad_into_layer2d_8hpp_source.xhtml#l00144">armnn::optimizations::pad_fold::FoldPadIntoLayer2dImpl()</a>, <a class="el" href="_layer_with_parameters_8hpp_source.xhtml#l00059">LayerWithParameters&lt; Pooling3dDescriptor &gt;::GetConnectedConstantAsInputTensors()</a>, <a class="el" href="_layer_8hpp_source.xhtml#l00206">InputSlot::GetConnection()</a>, <a class="el" href="_loaded_network_8cpp_source.xhtml#l01558">LoadedNetwork::ImportOutputs()</a>, <a class="el" href="_graph_8cpp_source.xhtml#l00562">Graph::InferTensorInfos()</a>, <a class="el" href="_layer_8cpp_source.xhtml#l00048">InputSlot::Insert()</a>, <a class="el" href="_network_utils_8cpp_source.xhtml#l00053">armnn::InsertConvertBf16ToFp32LayersBefore()</a>, <a class="el" href="_network_utils_8cpp_source.xhtml#l00140">armnn::InsertConvertFp16ToFp32LayersBefore()</a>, <a class="el" href="_network_utils_8cpp_source.xhtml#l00179">armnn::InsertConvertFp32ToBf16LayersAfter()</a>, <a class="el" href="_network_utils_8cpp_source.xhtml#l00092">armnn::InsertConvertFp32ToBf16LayersBefore()</a>, <a class="el" href="_network_utils_8cpp_source.xhtml#l00212">armnn::InsertConvertFp32ToFp16LayersAfter()</a>, <a class="el" href="_network_utils_8cpp_source.xhtml#l00245">armnn::InsertDebugLayerAfter()</a>, <a class="el" href="_graph_8hpp_source.xhtml#l00471">Graph::InsertNewLayer()</a>, <a class="el" href="_ref_backend_8cpp_source.xhtml#l00074">RefBackend::OptimizeSubgraphView()</a>, <a class="el" href="_neon_backend_8cpp_source.xhtml#l00142">NeonBackend::OptimizeSubgraphView()</a>, <a class="el" href="_cl_backend_8cpp_source.xhtml#l00276">ClBackend::OptimizeSubgraphView()</a>, <a class="el" href="_loaded_network_8cpp_source.xhtml#l02195">LoadedNetwork::RegisterDebugCallback()</a>, <a class="el" href="_optimize_consecutive_reshapes_8hpp_source.xhtml#l00019">OptimizeConsecutiveReshapesImpl::Run()</a>, <a class="el" href="_convert_const_permute_layers_to_const_layers_8hpp_source.xhtml#l00020">ConvertConstPermuteLayersToConstLayers::Run()</a>, <a class="el" href="_fuse_convert_fp32_to_bf16_into_const_layers_8hpp_source.xhtml#l00020">FuseConvertFp32ToBf16IntoConstLayers::Run()</a>, <a class="el" href="_permute_and_batch_to_space_as_depth_to_space_8hpp_source.xhtml#l00021">PermuteAndBatchToSpaceAsDepthToSpaceImpl&lt; PermuteType &gt;::Run()</a>, <a class="el" href="_convert_const_dequantisation_layers_to_const_layers_8hpp_source.xhtml#l00021">ConvertConstDequantisationLayersToConstLayersImpl::Run()</a>, <a class="el" href="_optimize_inverse_conversions_8hpp_source.xhtml#l00021">OptimizeInverseConversionsImpl::Run()</a>, <a class="el" href="_move_permute_up_8hpp_source.xhtml#l00023">MovePermuteUpImpl::Run()</a>, <a class="el" href="_permute_depthwise_conv2d_weights_8hpp_source.xhtml#l00023">PermuteDepthwiseConv2dWeightsImpl::Run()</a>, <a class="el" href="_move_transpose_up_8hpp_source.xhtml#l00023">MoveTransposeUpImpl::Run()</a>, <a class="el" href="_optimize_inverse_permutes_8hpp_source.xhtml#l00023">OptimizeInversePermutesImpl&lt; PermuteType &gt;::Run()</a>, <a class="el" href="_squash_equal_siblings_8hpp_source.xhtml#l00025">SquashEqualSiblingsImpl&lt; Comparable &gt;::Run()</a>, <a class="el" href="_add_broadcast_reshape_layer_8hpp_source.xhtml#l00027">AddBroadcastReshapeLayerImpl::Run()</a>, and <a class="el" href="_fuse_batch_norm_8hpp_source.xhtml#l00027">FuseBatchNorm&lt; ConvLayer, ArmnnType, T &gt;::Run()</a>.</p>
<div class="fragment"><div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;{ <span class="keywordflow">return</span> m_Connection; }</div></div><!-- fragment -->
</div>
</div>
<a id="ad5b716c1973e8476e5c338815aaeaac8"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ad5b716c1973e8476e5c338815aaeaac8">&#9670;&nbsp;</a></span>GetConnectedOutputSlot() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarmnn_1_1_output_slot.xhtml">OutputSlot</a>* GetConnectedOutputSlot </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_layer_8hpp_source.xhtml#l00057">57</a> of file <a class="el" href="_layer_8hpp_source.xhtml">Layer.hpp</a>.</p>

<p class="reference">References <a class="el" href="_layer_8cpp_source.xhtml#l00551">InputSlot::GetOwningIConnectableLayer()</a>.</p>
<div class="fragment"><div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;{ <span class="keywordflow">return</span> m_Connection; }</div></div><!-- fragment -->
</div>
</div>
<a id="a3153abb7c0c0a84629079b2fac7db54f"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a3153abb7c0c0a84629079b2fac7db54f">&#9670;&nbsp;</a></span>GetConnection() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">const <a class="el" href="classarmnn_1_1_i_output_slot.xhtml">IOutputSlot</a> * GetConnection </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Implements <a class="el" href="classarmnn_1_1_i_input_slot.xhtml#a81fbf6103761e55061b62ba989b00f10">IInputSlot</a>.</p>

<p class="definition">Definition at line <a class="el" href="_layer_8hpp_source.xhtml#l00206">206</a> of file <a class="el" href="_layer_8hpp_source.xhtml">Layer.hpp</a>.</p>

<p class="reference">References <a class="el" href="_layer_8hpp_source.xhtml#l00056">InputSlot::GetConnectedOutputSlot()</a>.</p>

<p class="reference">Referenced by <a class="el" href="_layer_8cpp_source.xhtml#l00136">OutputSlot::DisconnectAll()</a>, <a class="el" href="_layer_with_parameters_8hpp_source.xhtml#l00059">LayerWithParameters&lt; Pooling3dDescriptor &gt;::GetConnectedConstantAsInputTensors()</a>, <a class="el" href="_layer_8cpp_source.xhtml#l00313">Layer::GetDataType()</a>, <a class="el" href="_layer_8hpp_source.xhtml#l00145">OutputSlot::GetNumConnections()</a>, <a class="el" href="_layer_8cpp_source.xhtml#l00145">OutputSlot::MoveAllConnections()</a>, <a class="el" href="_layer_8cpp_source.xhtml#l00172">OutputSlot::operator==()</a>, <a class="el" href="_network_utils_8cpp_source.xhtml#l00277">armnn::RevertConstantWeightsToFP32()</a>, <a class="el" href="_permute_and_batch_to_space_as_depth_to_space_8hpp_source.xhtml#l00021">PermuteAndBatchToSpaceAsDepthToSpaceImpl&lt; PermuteType &gt;::Run()</a>, <a class="el" href="_convolution3d_layer_8cpp_source.xhtml#l00023">Convolution3dLayer::SerializeLayerParameters()</a>, <a class="el" href="_depthwise_convolution2d_layer_8cpp_source.xhtml#l00029">DepthwiseConvolution2dLayer::SerializeLayerParameters()</a>, <a class="el" href="_convolution2d_layer_8cpp_source.xhtml#l00029">Convolution2dLayer::SerializeLayerParameters()</a>, <a class="el" href="_layer_8hpp_source.xhtml#l00063">InputSlot::SetConnection()</a>, <a class="el" href="_elementwise_base_layer_8cpp_source.xhtml#l00076">ElementwiseBaseLayer::ValidateTensorShapesFromInputs()</a>, <a class="el" href="_quantize_layer_8cpp_source.xhtml#l00033">QuantizeLayer::ValidateTensorShapesFromInputs()</a>, <a class="el" href="_activation_layer_8cpp_source.xhtml#l00033">ActivationLayer::ValidateTensorShapesFromInputs()</a>, <a class="el" href="_channel_shuffle_layer_8cpp_source.xhtml#l00035">ChannelShuffleLayer::ValidateTensorShapesFromInputs()</a>, <a class="el" href="_fill_layer_8cpp_source.xhtml#l00034">FillLayer::ValidateTensorShapesFromInputs()</a>, <a class="el" href="_convert_fp32_to_fp16_layer_8cpp_source.xhtml#l00034">ConvertFp32ToFp16Layer::ValidateTensorShapesFromInputs()</a>, <a class="el" href="_reduce_layer_8cpp_source.xhtml#l00043">ReduceLayer::ValidateTensorShapesFromInputs()</a>, <a class="el" href="_softmax_layer_8cpp_source.xhtml#l00034">SoftmaxLayer::ValidateTensorShapesFromInputs()</a>, <a class="el" href="_convert_bf16_to_fp32_layer_8cpp_source.xhtml#l00035">ConvertBf16ToFp32Layer::ValidateTensorShapesFromInputs()</a>, <a class="el" href="_floor_layer_8cpp_source.xhtml#l00034">FloorLayer::ValidateTensorShapesFromInputs()</a>, <a class="el" href="_convert_fp16_to_fp32_layer_8cpp_source.xhtml#l00035">ConvertFp16ToFp32Layer::ValidateTensorShapesFromInputs()</a>, <a class="el" href="_switch_layer_8cpp_source.xhtml#l00032">SwitchLayer::ValidateTensorShapesFromInputs()</a>, <a class="el" href="_instance_normalization_layer_8cpp_source.xhtml#l00034">InstanceNormalizationLayer::ValidateTensorShapesFromInputs()</a>, <a class="el" href="_l2_normalization_layer_8cpp_source.xhtml#l00034">L2NormalizationLayer::ValidateTensorShapesFromInputs()</a>, <a class="el" href="_convert_fp32_to_bf16_layer_8cpp_source.xhtml#l00035">ConvertFp32ToBf16Layer::ValidateTensorShapesFromInputs()</a>, <a class="el" href="_normalization_layer_8cpp_source.xhtml#l00034">NormalizationLayer::ValidateTensorShapesFromInputs()</a>, <a class="el" href="_stack_layer_8cpp_source.xhtml#l00063">StackLayer::ValidateTensorShapesFromInputs()</a>, <a class="el" href="_mem_copy_layer_8cpp_source.xhtml#l00037">MemCopyLayer::ValidateTensorShapesFromInputs()</a>, <a class="el" href="_mem_import_layer_8cpp_source.xhtml#l00037">MemImportLayer::ValidateTensorShapesFromInputs()</a>, <a class="el" href="_merge_layer_8cpp_source.xhtml#l00030">MergeLayer::ValidateTensorShapesFromInputs()</a>, <a class="el" href="_batch_to_space_nd_layer_8cpp_source.xhtml#l00045">BatchToSpaceNdLayer::ValidateTensorShapesFromInputs()</a>, <a class="el" href="_debug_layer_8cpp_source.xhtml#l00045">DebugLayer::ValidateTensorShapesFromInputs()</a>, <a class="el" href="_pooling2d_layer_8cpp_source.xhtml#l00105">Pooling2dLayer::ValidateTensorShapesFromInputs()</a>, <a class="el" href="_cast_layer_8cpp_source.xhtml#l00034">CastLayer::ValidateTensorShapesFromInputs()</a>, <a class="el" href="_pooling3d_layer_8cpp_source.xhtml#l00109">Pooling3dLayer::ValidateTensorShapesFromInputs()</a>, <a class="el" href="_resize_layer_8cpp_source.xhtml#l00063">ResizeLayer::ValidateTensorShapesFromInputs()</a>, <a class="el" href="_shape_layer_8cpp_source.xhtml#l00037">ShapeLayer::ValidateTensorShapesFromInputs()</a>, <a class="el" href="_dequantize_layer_8cpp_source.xhtml#l00033">DequantizeLayer::ValidateTensorShapesFromInputs()</a>, <a class="el" href="_abs_layer_8cpp_source.xhtml#l00036">AbsLayer::ValidateTensorShapesFromInputs()</a>, <a class="el" href="_fake_quantization_layer_8cpp_source.xhtml#l00034">FakeQuantizationLayer::ValidateTensorShapesFromInputs()</a>, <a class="el" href="_rsqrt_layer_8cpp_source.xhtml#l00036">RsqrtLayer::ValidateTensorShapesFromInputs()</a>, <a class="el" href="_slice_layer_8cpp_source.xhtml#l00037">SliceLayer::ValidateTensorShapesFromInputs()</a>, <a class="el" href="_transpose_layer_8cpp_source.xhtml#l00045">TransposeLayer::ValidateTensorShapesFromInputs()</a>, <a class="el" href="_log_softmax_layer_8cpp_source.xhtml#l00034">LogSoftmaxLayer::ValidateTensorShapesFromInputs()</a>, <a class="el" href="_mean_layer_8cpp_source.xhtml#l00044">MeanLayer::ValidateTensorShapesFromInputs()</a>, <a class="el" href="_pad_layer_8cpp_source.xhtml#l00061">PadLayer::ValidateTensorShapesFromInputs()</a>, <a class="el" href="_reshape_layer_8cpp_source.xhtml#l00041">ReshapeLayer::ValidateTensorShapesFromInputs()</a>, <a class="el" href="_permute_layer_8cpp_source.xhtml#l00045">PermuteLayer::ValidateTensorShapesFromInputs()</a>, <a class="el" href="_convolution3d_layer_8cpp_source.xhtml#l00107">Convolution3dLayer::ValidateTensorShapesFromInputs()</a>, <a class="el" href="_gather_nd_layer_8cpp_source.xhtml#l00078">GatherNdLayer::ValidateTensorShapesFromInputs()</a>, <a class="el" href="_batch_mat_mul_layer_8cpp_source.xhtml#l00093">BatchMatMulLayer::ValidateTensorShapesFromInputs()</a>, <a class="el" href="_arg_min_max_layer_8cpp_source.xhtml#l00074">ArgMinMaxLayer::ValidateTensorShapesFromInputs()</a>, <a class="el" href="_elementwise_unary_layer_8cpp_source.xhtml#l00043">ElementwiseUnaryLayer::ValidateTensorShapesFromInputs()</a>, <a class="el" href="_strided_slice_layer_8cpp_source.xhtml#l00099">StridedSliceLayer::ValidateTensorShapesFromInputs()</a>, <a class="el" href="_gather_layer_8cpp_source.xhtml#l00074">GatherLayer::ValidateTensorShapesFromInputs()</a>, <a class="el" href="_transpose_convolution2d_layer_8cpp_source.xhtml#l00090">TransposeConvolution2dLayer::ValidateTensorShapesFromInputs()</a>, <a class="el" href="_space_to_batch_nd_layer_8cpp_source.xhtml#l00070">SpaceToBatchNdLayer::ValidateTensorShapesFromInputs()</a>, <a class="el" href="_space_to_depth_layer_8cpp_source.xhtml#l00064">SpaceToDepthLayer::ValidateTensorShapesFromInputs()</a>, <a class="el" href="_prelu_layer_8cpp_source.xhtml#l00100">PreluLayer::ValidateTensorShapesFromInputs()</a>, <a class="el" href="_comparison_layer_8cpp_source.xhtml#l00060">ComparisonLayer::ValidateTensorShapesFromInputs()</a>, <a class="el" href="_logical_binary_layer_8cpp_source.xhtml#l00058">LogicalBinaryLayer::ValidateTensorShapesFromInputs()</a>, <a class="el" href="_depth_to_space_layer_8cpp_source.xhtml#l00062">DepthToSpaceLayer::ValidateTensorShapesFromInputs()</a>, <a class="el" href="_fully_connected_layer_8cpp_source.xhtml#l00062">FullyConnectedLayer::ValidateTensorShapesFromInputs()</a>, <a class="el" href="_depthwise_convolution2d_layer_8cpp_source.xhtml#l00122">DepthwiseConvolution2dLayer::ValidateTensorShapesFromInputs()</a>, <a class="el" href="_lstm_layer_8cpp_source.xhtml#l00168">LstmLayer::ValidateTensorShapesFromInputs()</a>, <a class="el" href="_convolution2d_layer_8cpp_source.xhtml#l00120">Convolution2dLayer::ValidateTensorShapesFromInputs()</a>, <a class="el" href="_unidirectional_sequence_lstm_layer_8cpp_source.xhtml#l00170">UnidirectionalSequenceLstmLayer::ValidateTensorShapesFromInputs()</a>, <a class="el" href="_batch_normalization_layer_8cpp_source.xhtml#l00052">BatchNormalizationLayer::ValidateTensorShapesFromInputs()</a>, <a class="el" href="_output_layer_8cpp_source.xhtml#l00032">OutputLayer::ValidateTensorShapesFromInputs()</a>, <a class="el" href="_quantized_lstm_layer_8cpp_source.xhtml#l00096">QuantizedLstmLayer::ValidateTensorShapesFromInputs()</a>, and <a class="el" href="_q_lstm_layer_8cpp_source.xhtml#l00170">QLstmLayer::ValidateTensorShapesFromInputs()</a>.</p>
<div class="fragment"><div class="line"><a name="l00206"></a><span class="lineno">  206</span>&#160;{ <span class="keywordflow">return</span> <a class="code" href="classarmnn_1_1_input_slot.xhtml#a9effd325a6d512a3f8ff4bd207d53255">GetConnectedOutputSlot</a>(); }</div><div class="ttc" id="classarmnn_1_1_input_slot_xhtml_a9effd325a6d512a3f8ff4bd207d53255"><div class="ttname"><a href="classarmnn_1_1_input_slot.xhtml#a9effd325a6d512a3f8ff4bd207d53255">armnn::InputSlot::GetConnectedOutputSlot</a></div><div class="ttdeci">const OutputSlot * GetConnectedOutputSlot() const</div><div class="ttdef"><b>Definition:</b> <a href="_layer_8hpp_source.xhtml#l00056">Layer.hpp:56</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="afed01ea07472d9b32fac493e05bb0089"></a>
<h2 class="memtitle"><span class="permalink"><a href="#afed01ea07472d9b32fac493e05bb0089">&#9670;&nbsp;</a></span>GetConnection() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarmnn_1_1_i_output_slot.xhtml">IOutputSlot</a> * GetConnection </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Implements <a class="el" href="classarmnn_1_1_i_input_slot.xhtml#a15243d9b0df87810b0f3416029e74671">IInputSlot</a>.</p>

<p class="definition">Definition at line <a class="el" href="_layer_8hpp_source.xhtml#l00207">207</a> of file <a class="el" href="_layer_8hpp_source.xhtml">Layer.hpp</a>.</p>

<p class="reference">References <a class="el" href="_layer_8hpp_source.xhtml#l00056">InputSlot::GetConnectedOutputSlot()</a>.</p>
<div class="fragment"><div class="line"><a name="l00207"></a><span class="lineno">  207</span>&#160;{ <span class="keywordflow">return</span> <a class="code" href="classarmnn_1_1_input_slot.xhtml#a9effd325a6d512a3f8ff4bd207d53255">GetConnectedOutputSlot</a>(); }</div><div class="ttc" id="classarmnn_1_1_input_slot_xhtml_a9effd325a6d512a3f8ff4bd207d53255"><div class="ttname"><a href="classarmnn_1_1_input_slot.xhtml#a9effd325a6d512a3f8ff4bd207d53255">armnn::InputSlot::GetConnectedOutputSlot</a></div><div class="ttdeci">const OutputSlot * GetConnectedOutputSlot() const</div><div class="ttdef"><b>Definition:</b> <a href="_layer_8hpp_source.xhtml#l00056">Layer.hpp:56</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="a07dcdabbae92b5c0d51d2d236db528ed"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a07dcdabbae92b5c0d51d2d236db528ed">&#9670;&nbsp;</a></span>GetOwningIConnectableLayer() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">const <a class="el" href="classarmnn_1_1_i_connectable_layer.xhtml">IConnectableLayer</a> &amp; GetOwningIConnectableLayer </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Implements <a class="el" href="classarmnn_1_1_i_input_slot.xhtml#a22b3f11f56aa924c0c1b6ee4d6cc90e1">IInputSlot</a>.</p>

<p class="definition">Definition at line <a class="el" href="_layer_8cpp_source.xhtml#l00551">551</a> of file <a class="el" href="_layer_8cpp_source.xhtml">Layer.cpp</a>.</p>

<p class="reference">Referenced by <a class="el" href="_layer_8hpp_source.xhtml#l00057">InputSlot::GetConnectedOutputSlot()</a>, and <a class="el" href="_layer_8hpp_source.xhtml#l00119">OutputSlot::GetOwningLayer()</a>.</p>
<div class="fragment"><div class="line"><a name="l00552"></a><span class="lineno">  552</span>&#160;{</div><div class="line"><a name="l00553"></a><span class="lineno">  553</span>&#160;    <span class="keywordflow">return</span> m_OwningLayer;</div><div class="line"><a name="l00554"></a><span class="lineno">  554</span>&#160;}</div></div><!-- fragment -->
</div>
</div>
<a id="ab5622d9c20e8086606222bf847656070"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ab5622d9c20e8086606222bf847656070">&#9670;&nbsp;</a></span>GetOwningIConnectableLayer() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarmnn_1_1_i_connectable_layer.xhtml">IConnectableLayer</a> &amp; GetOwningIConnectableLayer </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Implements <a class="el" href="classarmnn_1_1_i_input_slot.xhtml#a670e3850e63940e165126a52237f4c96">IInputSlot</a>.</p>

<p class="definition">Definition at line <a class="el" href="_layer_8cpp_source.xhtml#l00556">556</a> of file <a class="el" href="_layer_8cpp_source.xhtml">Layer.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00557"></a><span class="lineno">  557</span>&#160;{</div><div class="line"><a name="l00558"></a><span class="lineno">  558</span>&#160;    <span class="keywordflow">return</span> m_OwningLayer;</div><div class="line"><a name="l00559"></a><span class="lineno">  559</span>&#160;}</div></div><!-- fragment -->
</div>
</div>
<a id="a7ddaf04177053a536f0e7be83a642bc6"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a7ddaf04177053a536f0e7be83a642bc6">&#9670;&nbsp;</a></span>GetOwningLayer()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarmnn_1_1_layer.xhtml">Layer</a>&amp; GetOwningLayer </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_layer_8hpp_source.xhtml#l00053">53</a> of file <a class="el" href="_layer_8hpp_source.xhtml">Layer.hpp</a>.</p>

<p class="reference">Referenced by <a class="el" href="_graph_8cpp_source.xhtml#l00303">Graph::AddCompatibilityLayers()</a>, <a class="el" href="_layer_8cpp_source.xhtml#l00159">OutputSlot::CalculateIndexOnOwner()</a>, <a class="el" href="_splitter_layer_8cpp_source.xhtml#l00021">SplitterLayer::CreateWorkload()</a>, <a class="el" href="_fold_pad_into_layer2d_8hpp_source.xhtml#l00144">armnn::optimizations::pad_fold::FoldPadIntoLayer2dImpl()</a>, <a class="el" href="_layer_8cpp_source.xhtml#l00195">OutputSlot::GetOwningLayerGuid()</a>, <a class="el" href="_graph_8hpp_source.xhtml#l00471">Graph::InsertNewLayer()</a>, <a class="el" href="_layer_8cpp_source.xhtml#l00097">OutputSlot::IsTensorInfoSet()</a>, <a class="el" href="_optimize_consecutive_reshapes_8hpp_source.xhtml#l00019">OptimizeConsecutiveReshapesImpl::Run()</a>, <a class="el" href="_convert_const_permute_layers_to_const_layers_8hpp_source.xhtml#l00020">ConvertConstPermuteLayersToConstLayers::Run()</a>, <a class="el" href="_fuse_convert_fp32_to_bf16_into_const_layers_8hpp_source.xhtml#l00020">FuseConvertFp32ToBf16IntoConstLayers::Run()</a>, <a class="el" href="_optimize_inverse_conversions_8hpp_source.xhtml#l00021">OptimizeInverseConversionsImpl::Run()</a>, <a class="el" href="_permute_and_batch_to_space_as_depth_to_space_8hpp_source.xhtml#l00021">PermuteAndBatchToSpaceAsDepthToSpaceImpl&lt; PermuteType &gt;::Run()</a>, <a class="el" href="_convert_const_dequantisation_layers_to_const_layers_8hpp_source.xhtml#l00021">ConvertConstDequantisationLayersToConstLayersImpl::Run()</a>, <a class="el" href="_move_permute_up_8hpp_source.xhtml#l00023">MovePermuteUpImpl::Run()</a>, <a class="el" href="_optimize_inverse_permutes_8hpp_source.xhtml#l00023">OptimizeInversePermutesImpl&lt; PermuteType &gt;::Run()</a>, <a class="el" href="_move_transpose_up_8hpp_source.xhtml#l00023">MoveTransposeUpImpl::Run()</a>, <a class="el" href="_squash_equal_siblings_8hpp_source.xhtml#l00025">SquashEqualSiblingsImpl&lt; Comparable &gt;::Run()</a>, <a class="el" href="_fuse_batch_norm_8hpp_source.xhtml#l00027">FuseBatchNorm&lt; ConvLayer, ArmnnType, T &gt;::Run()</a>, <a class="el" href="_fold_pad_into_layer2d_8hpp_source.xhtml#l00192">FoldPadIntoConvolution2dImpl::Run()</a>, and <a class="el" href="_fold_pad_into_layer2d_8hpp_source.xhtml#l00226">FoldPadIntoDepthwiseConvolution2dImpl::Run()</a>.</p>
<div class="fragment"><div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;{ <span class="keywordflow">return</span> m_OwningLayer; }</div></div><!-- fragment -->
</div>
</div>
<a id="ae3f69b193433448bee0f3925da4b01a3"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ae3f69b193433448bee0f3925da4b01a3">&#9670;&nbsp;</a></span>GetSlotIndex()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">unsigned int GetSlotIndex </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Implements <a class="el" href="classarmnn_1_1_i_input_slot.xhtml#a9b2d963c1755ade4b2cf70e192fed371">IInputSlot</a>.</p>

<p class="definition">Definition at line <a class="el" href="_layer_8hpp_source.xhtml#l00054">54</a> of file <a class="el" href="_layer_8hpp_source.xhtml">Layer.hpp</a>.</p>

<p class="reference">Referenced by <a class="el" href="_graph_8cpp_source.xhtml#l00303">Graph::AddCompatibilityLayers()</a>.</p>
<div class="fragment"><div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;{ <span class="keywordflow">return</span> m_SlotIndex; }</div></div><!-- fragment -->
</div>
</div>
<a id="a5a0a7224d93d14db044426a3878dab4d"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a5a0a7224d93d14db044426a3878dab4d">&#9670;&nbsp;</a></span>Insert()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void Insert </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classarmnn_1_1_layer.xhtml">Layer</a> &amp;&#160;</td>
          <td class="paramname"><em>layer</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_layer_8cpp_source.xhtml#l00048">48</a> of file <a class="el" href="_layer_8cpp_source.xhtml">Layer.cpp</a>.</p>

<p class="reference">References <a class="el" href="_assert_8hpp_source.xhtml#l00014">ARMNN_ASSERT</a>, <a class="el" href="_layer_8cpp_source.xhtml#l00028">armnn::AssertNumberOfInputSlots()</a>, <a class="el" href="_layer_8cpp_source.xhtml#l00112">OutputSlot::Connect()</a>, <a class="el" href="_layer_8hpp_source.xhtml#l00056">InputSlot::GetConnectedOutputSlot()</a>, <a class="el" href="_layer_8hpp_source.xhtml#l00324">Layer::GetInputSlot()</a>, <a class="el" href="_layer_8hpp_source.xhtml#l00322">Layer::GetNumOutputSlots()</a>, <a class="el" href="_layer_8hpp_source.xhtml#l00232">Layer::GetOutputHandler()</a>, <a class="el" href="_layer_8hpp_source.xhtml#l00326">Layer::GetOutputSlot()</a>, <a class="el" href="_layer_8cpp_source.xhtml#l00210">OutputSlot::SetEdgeStrategy()</a>, <a class="el" href="_output_handler_8cpp_source.xhtml#l00015">OutputHandler::SetTensorInfo()</a>, and <a class="el" href="namespacearmnn.xhtml#ae2f04a162585c0a5222a537efd5456aeaec0fc0100c4fc1ce4eea230c3dc10360">armnn::Undefined</a>.</p>

<p class="reference">Referenced by <a class="el" href="_graph_8hpp_source.xhtml#l00471">Graph::InsertNewLayer()</a>, and <a class="el" href="_layer_8hpp_source.xhtml#l00063">InputSlot::SetConnection()</a>.</p>
<div class="fragment"><div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;{</div><div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;    <a class="code" href="_assert_8hpp.xhtml#a5698be69cbd5dfe6c28fcd9867e8cbed">ARMNN_ASSERT</a>(layer.GetNumOutputSlots() == 1);</div><div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;</div><div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;    OutputSlot* <span class="keyword">const</span> prevSlot = <a class="code" href="classarmnn_1_1_input_slot.xhtml#a9effd325a6d512a3f8ff4bd207d53255">GetConnectedOutputSlot</a>();</div><div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;</div><div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;    <span class="keywordflow">if</span> (prevSlot != <span class="keyword">nullptr</span>)</div><div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;    {</div><div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;        <span class="comment">// Disconnects parent from this.</span></div><div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;        prevSlot-&gt;Disconnect(*<span class="keyword">this</span>);</div><div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;</div><div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;        <a class="code" href="namespacearmnn.xhtml#a3854dece5adbc9c94f7e460b58b82be9">AssertNumberOfInputSlots</a>(layer);</div><div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;</div><div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;        <span class="comment">// Connects inserted layer to parent.</span></div><div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;        <span class="keywordtype">int</span> idx = prevSlot-&gt;Connect(layer.GetInputSlot(0));</div><div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;        prevSlot-&gt;SetEdgeStrategy(armnn::numeric_cast&lt;unsigned int&gt;(idx), <a class="code" href="namespacearmnn.xhtml#ae2f04a162585c0a5222a537efd5456aeaec0fc0100c4fc1ce4eea230c3dc10360">EdgeStrategy::Undefined</a>);</div><div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;</div><div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;        <span class="comment">// Sets tensor info for inserted layer.</span></div><div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;        <span class="keyword">const</span> TensorInfo&amp; tensorInfo = prevSlot-&gt;GetTensorInfo();</div><div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;        layer.GetOutputHandler().SetTensorInfo(tensorInfo);</div><div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;    }</div><div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;</div><div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;    <span class="comment">// Connects inserted layer to this.</span></div><div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;    layer.GetOutputSlot(0).Connect(*<span class="keyword">this</span>);</div><div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;    layer.GetOutputSlot(0).SetEdgeStrategy(0, <a class="code" href="namespacearmnn.xhtml#ae2f04a162585c0a5222a537efd5456aeaec0fc0100c4fc1ce4eea230c3dc10360">EdgeStrategy::Undefined</a>);</div><div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;}</div><div class="ttc" id="namespacearmnn_xhtml_a3854dece5adbc9c94f7e460b58b82be9"><div class="ttname"><a href="namespacearmnn.xhtml#a3854dece5adbc9c94f7e460b58b82be9">armnn::AssertNumberOfInputSlots</a></div><div class="ttdeci">void AssertNumberOfInputSlots(Layer &amp;layer)</div><div class="ttdef"><b>Definition:</b> <a href="_layer_8cpp_source.xhtml#l00028">Layer.cpp:28</a></div></div>
<div class="ttc" id="namespacearmnn_xhtml_ae2f04a162585c0a5222a537efd5456aeaec0fc0100c4fc1ce4eea230c3dc10360"><div class="ttname"><a href="namespacearmnn.xhtml#ae2f04a162585c0a5222a537efd5456aeaec0fc0100c4fc1ce4eea230c3dc10360">armnn::Compute::Undefined</a></div></div>
<div class="ttc" id="_assert_8hpp_xhtml_a5698be69cbd5dfe6c28fcd9867e8cbed"><div class="ttname"><a href="_assert_8hpp.xhtml#a5698be69cbd5dfe6c28fcd9867e8cbed">ARMNN_ASSERT</a></div><div class="ttdeci">#define ARMNN_ASSERT(COND)</div><div class="ttdef"><b>Definition:</b> <a href="_assert_8hpp_source.xhtml#l00014">Assert.hpp:14</a></div></div>
<div class="ttc" id="classarmnn_1_1_input_slot_xhtml_a9effd325a6d512a3f8ff4bd207d53255"><div class="ttname"><a href="classarmnn_1_1_input_slot.xhtml#a9effd325a6d512a3f8ff4bd207d53255">armnn::InputSlot::GetConnectedOutputSlot</a></div><div class="ttdeci">const OutputSlot * GetConnectedOutputSlot() const</div><div class="ttdef"><b>Definition:</b> <a href="_layer_8hpp_source.xhtml#l00056">Layer.hpp:56</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="ae34c07e230a32ea853faed3fefc804f3"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ae34c07e230a32ea853faed3fefc804f3">&#9670;&nbsp;</a></span>SetConnection()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void SetConnection </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classarmnn_1_1_output_slot.xhtml">OutputSlot</a> *&#160;</td>
          <td class="paramname"><em>source</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Links the slot to an output slot or breaks an existing link if passing nullptr. </p>

<p class="definition">Definition at line <a class="el" href="_layer_8hpp_source.xhtml#l00063">63</a> of file <a class="el" href="_layer_8hpp_source.xhtml">Layer.hpp</a>.</p>

<p class="reference">References <a class="el" href="_layer_8hpp_source.xhtml#l00206">InputSlot::GetConnection()</a>, and <a class="el" href="_layer_8cpp_source.xhtml#l00048">InputSlot::Insert()</a>.</p>

<p class="reference">Referenced by <a class="el" href="_layer_8cpp_source.xhtml#l00112">OutputSlot::Connect()</a>, and <a class="el" href="_layer_8cpp_source.xhtml#l00120">OutputSlot::Disconnect()</a>.</p>
<div class="fragment"><div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;    {</div><div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;        <span class="keywordflow">if</span> (m_Connection != <span class="keyword">nullptr</span> &amp;&amp; source != <span class="keyword">nullptr</span>)</div><div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;        {</div><div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;            <span class="keywordflow">throw</span> InvalidArgumentException(<span class="stringliteral">&quot;Tried to connect an output slot to an input slot, &quot;</span></div><div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;                <span class="stringliteral">&quot;but the latter already has a connection&quot;</span>);</div><div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;        }</div><div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;        m_Connection = source;</div><div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;    }</div></div><!-- fragment -->
</div>
</div>
<hr/>The documentation for this class was generated from the following files:<ul>
<li>src/armnn/<a class="el" href="_layer_8hpp_source.xhtml">Layer.hpp</a></li>
<li>src/armnn/<a class="el" href="_layer_8cpp_source.xhtml">Layer.cpp</a></li>
</ul>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="namespacearmnn.xhtml">armnn</a></li><li class="navelem"><a class="el" href="classarmnn_1_1_input_slot.xhtml">InputSlot</a></li>
    <li class="footer">Generated on Wed Nov 23 2022 10:57:40 for ArmNN by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.13 </li>
  </ul>
</div>
</body>
</html>
