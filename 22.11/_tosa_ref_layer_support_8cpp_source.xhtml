<!-- Copyright (c) 2020 ARM Limited. -->
<!--                                 -->
<!-- SPDX-License-Identifier: MIT    -->
<!--                                 -->
<!-- HTML header for doxygen 1.8.13-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.13"/>
<meta name="robots" content="NOINDEX, NOFOLLOW" />
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>ArmNN: src/backends/tosaReference/TosaRefLayerSupport.cpp Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script><script type="text/javascript" src="http://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="stylesheet.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <img alt="ArmNN" src="Arm_NN_horizontal_blue.png" style="max-width: 10rem; margin-top: .5rem; margin-left 10px"/>
  <td style="padding-left: 0.5em;">
   <div id="projectname">
   &#160;<span id="projectnumber">22.11</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.13 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
$(document).ready(function(){initNavTree('_tosa_ref_layer_support_8cpp_source.xhtml','');});
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="headertitle">
<div class="title">TosaRefLayerSupport.cpp</div>  </div>
</div><!--header-->
<div class="contents">
<a href="_tosa_ref_layer_support_8cpp.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="comment">//</span></div><div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="comment">// Copyright Â© 2022 Arm Ltd and Contributors. All rights reserved.</span></div><div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="comment">// SPDX-License-Identifier: MIT</span></div><div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="comment">//</span></div><div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;</div><div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_tosa_ref_layer_support_8hpp.xhtml">TosaRefLayerSupport.hpp</a>&quot;</span></div><div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="preprocessor">#include &lt;<a class="code" href="_tosa_mappings_8hpp.xhtml">tosaCommon/TosaMappings.hpp</a>&gt;</span></div><div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;</div><div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="preprocessor">#include &lt;<a class="code" href="_types_8hpp.xhtml">armnn/Types.hpp</a>&gt;</span></div><div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="preprocessor">#include &lt;<a class="code" href="_ignore_unused_8hpp.xhtml">armnn/utility/IgnoreUnused.hpp</a>&gt;</span></div><div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;<span class="preprocessor">#include &lt;<a class="code" href="_tosa_layer_support_rules_8hpp.xhtml">tosaCommon/TosaLayerSupportRules.hpp</a>&gt;</span></div><div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;<span class="preprocessor">#include &lt;<a class="code" href="_layer_support_common_8hpp.xhtml">LayerSupportCommon.hpp</a>&gt;</span></div><div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;</div><div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;<span class="preprocessor">#include &lt;vector&gt;</span></div><div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;<span class="preprocessor">#include &lt;array&gt;</span></div><div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;</div><div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;<span class="keyword">namespace </span><a class="code" href="namespacearmnn.xhtml">armnn</a></div><div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;{</div><div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;</div><div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;<span class="keyword">static</span> <span class="keywordtype">bool</span> IsTosaLayerSupported(TosaSerializationOperator* op,</div><div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;                                 <span class="keyword">const</span> std::vector&lt;TosaSerializationTensor*&gt;&amp; inputs,</div><div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;                                 <span class="keyword">const</span> std::vector&lt;TosaSerializationTensor*&gt;&amp; outputs,</div><div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;                                 <a class="code" href="classarmnn_1_1_optional.xhtml">Optional&lt;string&amp;&gt;</a> reasonIfUnsupported)</div><div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;{</div><div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;    <span class="keywordflow">switch</span>(op-&gt;GetOp())</div><div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;    {</div><div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;        <span class="keywordflow">case</span> tosa::Op_ADD:</div><div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;        {</div><div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;            <span class="keywordtype">bool</span> supported = <span class="keyword">true</span>;</div><div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;</div><div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;            std::array&lt;Attribute, 1&gt; supportedAttributes =</div><div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;            {</div><div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;                Attribute_NONE</div><div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;            };</div><div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;</div><div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;            <span class="comment">// Check Attribute from operator (GetAttribute)</span></div><div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;            supported &amp;= <a class="code" href="namespacearmnn.xhtml#acea2d8c53b441e24b6d60b090fda37c9">CheckSupportRule</a>(<a class="code" href="struct_tosa_operator_attribute_of_any.xhtml">TosaOperatorAttributeOfAny</a>(op, supportedAttributes), reasonIfUnsupported,</div><div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;                std::string(<span class="stringliteral">&quot;TOSA Reference addition: operator has an unsupported attribute.&quot;</span>).c_str());</div><div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;</div><div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;            std::array&lt;DType, 9&gt; supportedTypes =</div><div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;            {</div><div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;                DType_BOOL,</div><div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;                DType_UINT8,</div><div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;                DType_UINT16,</div><div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;                DType_INT4,</div><div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;                DType_INT8,</div><div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;                DType_INT16,</div><div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;                DType_INT32,</div><div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;                DType_FP16,</div><div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;                DType_FP32</div><div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;            };</div><div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;</div><div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;            <span class="keywordflow">for</span> (<span class="keyword">auto</span> tensor : inputs)</div><div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;            {</div><div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;                <span class="comment">// Check Dtype from tensor (GetDtype)</span></div><div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;                supported &amp;= <a class="code" href="namespacearmnn.xhtml#acea2d8c53b441e24b6d60b090fda37c9">CheckSupportRule</a>(<a class="code" href="struct_tosa_type_any_of.xhtml">TosaTypeAnyOf</a>(tensor, supportedTypes),</div><div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;                    reasonIfUnsupported,</div><div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;                    std::string(<span class="stringliteral">&quot;TOSA Reference addition: &quot;</span> + tensor-&gt;GetName() +</div><div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;                    <span class="stringliteral">&quot; is not a supported type.&quot;</span>).c_str());</div><div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;</div><div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;                <span class="comment">// Check Shape from tensor (GetShape)</span></div><div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;                supported &amp;= <a class="code" href="namespacearmnn.xhtml#acea2d8c53b441e24b6d60b090fda37c9">CheckSupportRule</a>(<a class="code" href="struct_tosa_tensor_num_dimensions_within_bounds.xhtml">TosaTensorNumDimensionsWithinBounds</a>(tensor),</div><div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;                    reasonIfUnsupported,</div><div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;                    std::string(<span class="stringliteral">&quot;Tosa Reference addition: &quot;</span> + tensor-&gt;GetName() + <span class="stringliteral">&quot; Shape.Size()&quot;</span></div><div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;                    <span class="stringliteral">&quot; outside bounds of between Zero and MaxNumOfTensorDimensions.&quot;</span>).c_str());</div><div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;            }</div><div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;</div><div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;            <span class="comment">// Check Dtype from tensor (GetDtype)</span></div><div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;            supported &amp;= <a class="code" href="namespacearmnn.xhtml#acea2d8c53b441e24b6d60b090fda37c9">CheckSupportRule</a>(<a class="code" href="struct_tosa_type_any_of.xhtml">TosaTypeAnyOf</a>(outputs[0], supportedTypes),</div><div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;                reasonIfUnsupported,</div><div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;                std::string(<span class="stringliteral">&quot;TOSA Reference addition: &quot;</span> + outputs[0]-&gt;GetName() +</div><div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;                <span class="stringliteral">&quot; is not a supported type.&quot;</span>).c_str());</div><div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;</div><div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;            <span class="comment">// Check Shape from tensor (GetShape)</span></div><div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;            supported &amp;= <a class="code" href="namespacearmnn.xhtml#acea2d8c53b441e24b6d60b090fda37c9">CheckSupportRule</a>(<a class="code" href="struct_tosa_tensor_num_dimensions_within_bounds.xhtml">TosaTensorNumDimensionsWithinBounds</a>(outputs[0]),</div><div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;                reasonIfUnsupported,</div><div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;                std::string(<span class="stringliteral">&quot;Tosa Reference addition: &quot;</span> + outputs[0]-&gt;GetName() + <span class="stringliteral">&quot; Shape.Size()&quot;</span></div><div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;                <span class="stringliteral">&quot; outside bounds of between Zero and MaxNumOfTensorDimensions.&quot;</span>).c_str());</div><div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;</div><div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;            <span class="keywordflow">return</span> supported;</div><div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;        }</div><div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;        <span class="keywordflow">default</span>:</div><div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;            <a class="code" href="namespacearmnn.xhtml#a13c7d751e4d37f65a6d40c3c6e50d2b8">SetValueChecked</a>(reasonIfUnsupported, <span class="stringliteral">&quot;Operation is currently unsupported by the TOSA Reference Backend.&quot;</span>);</div><div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;            <span class="keywordflow">return</span> <span class="keyword">false</span>;</div><div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;    }</div><div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;}</div><div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;</div><div class="line"><a name="l00088"></a><span class="lineno"><a class="line" href="classarmnn_1_1_tosa_ref_layer_support.xhtml#a1bc545faee603e5975a957a0946f4aa2">   88</a></span>&#160;<span class="keywordtype">bool</span> <a class="code" href="classarmnn_1_1_tosa_ref_layer_support.xhtml#a1bc545faee603e5975a957a0946f4aa2">TosaRefLayerSupport::IsLayerSupported</a>(<span class="keyword">const</span> <a class="code" href="namespacearmnn.xhtml#a56943a0946e5f15e5e58054b8e7a04a4">LayerType</a>&amp; type,</div><div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;                                           <span class="keyword">const</span> std::vector&lt;TensorInfo&gt;&amp; infos,</div><div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;                                           <span class="keyword">const</span> <a class="code" href="structarmnn_1_1_base_descriptor.xhtml">BaseDescriptor</a>&amp; descriptor,</div><div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;                                           <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_optional.xhtml">Optional&lt;LstmInputParamsInfo&gt;</a>&amp; lstmParamsInfo,</div><div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;                                           <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_optional.xhtml">Optional&lt;QuantizedLstmInputParamsInfo&gt;</a>&amp; quantizedLstmInputParamsInfo,</div><div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;                                           <a class="code" href="classarmnn_1_1_optional.xhtml">Optional&lt;std::string&amp;&gt;</a> reasonIfUnsupported)<span class="keyword"> const</span></div><div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;<span class="keyword"></span>{</div><div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;    <a class="code" href="namespacearmnn.xhtml#a44affeeb090c3c6a3062830562672e84">IgnoreUnused</a>(lstmParamsInfo);</div><div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;    <a class="code" href="namespacearmnn.xhtml#a44affeeb090c3c6a3062830562672e84">IgnoreUnused</a>(quantizedLstmInputParamsInfo);</div><div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;</div><div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;    std::vector&lt;const TensorInfo*&gt; inputInfos;</div><div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;    std::vector&lt;const TensorInfo*&gt; outputInfos;</div><div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;</div><div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;    <span class="keywordflow">switch</span> (type)</div><div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;    {</div><div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;        <span class="keywordflow">case</span> <a class="code" href="namespacearmnn.xhtml#a56943a0946e5f15e5e58054b8e7a04a4a7c5531bbefed0945814f874baf9e0e0f">LayerType::Addition</a>:</div><div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;            <span class="comment">// Setup inputs and outputs</span></div><div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;            inputInfos.push_back(&amp;infos[0]);</div><div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;            inputInfos.push_back(&amp;infos[1]);</div><div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;            outputInfos.push_back(&amp;infos[2]);</div><div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;            <span class="keywordflow">break</span>;</div><div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;        <span class="keywordflow">case</span> <a class="code" href="namespacearmnn.xhtml#a56943a0946e5f15e5e58054b8e7a04a4a324118a6721dd6b8a9b9f4e327df2bf5">LayerType::Input</a>:</div><div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;        <span class="keywordflow">case</span> <a class="code" href="namespacearmnn.xhtml#a56943a0946e5f15e5e58054b8e7a04a4a29c2c02a361c9d7028472e5d92cd4a54">LayerType::Output</a>:</div><div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;            <span class="keywordflow">return</span> <span class="keyword">true</span>;</div><div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;        <span class="keywordflow">default</span>:</div><div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;            <span class="keywordflow">break</span>;</div><div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;    }</div><div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;</div><div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;    <span class="keyword">auto</span> mappings = <a class="code" href="_tosa_mappings_8cpp.xhtml#a93e8a4b4eba8c921bbe3619635187d5c">GetTosaMapping</a>(type, inputInfos, outputInfos, descriptor, <span class="keyword">false</span>);</div><div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;    <span class="keywordflow">if</span> (mappings-&gt;GetName() == <span class="stringliteral">&quot;&quot;</span>)</div><div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;    {</div><div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;        <span class="comment">// There currently isn&#39;t a TOSA mapping for this layer, as the default was returned.</span></div><div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;        <span class="keywordflow">return</span> <span class="keyword">false</span>;</div><div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;    }</div><div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;</div><div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;    <span class="comment">// Loop through block and get each tensor and operator</span></div><div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;    <span class="keywordflow">for</span> (<span class="keywordtype">long</span> <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> i = 0; i &lt; mappings-&gt;GetOperators().size(); ++i)</div><div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;    {</div><div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;        <span class="comment">// While looping over operators check for op_UNKNOWN which is unsupported</span></div><div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;        <span class="keywordflow">if</span> (mappings-&gt;GetOperators()[i]-&gt;GetOp() == tosa::Op_UNKNOWN) { <span class="keywordflow">return</span> <span class="keyword">false</span>; }</div><div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;</div><div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;        <span class="comment">// Loop over operators and get GetInput/OutputTensorNames, loop over resulting names and</span></div><div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;        <span class="comment">// use GetTensorByName to pass pointers to tensors on to the IsTosaLayerSupported()</span></div><div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;        std::vector&lt;TosaSerializationTensor*&gt; inputTensorsVect;</div><div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;        <span class="keywordflow">for</span> (<span class="keyword">const</span> <span class="keyword">auto</span>&amp; name : mappings-&gt;GetOperators()[i]-&gt;GetInputTensorNames())</div><div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;        {</div><div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;            inputTensorsVect.push_back(mappings-&gt;GetTensorByName(name));</div><div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;        }</div><div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;</div><div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;        std::vector&lt;TosaSerializationTensor*&gt; outputTensorsVect;</div><div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;        <span class="keywordflow">for</span> (<span class="keyword">const</span> <span class="keyword">auto</span>&amp; name : mappings-&gt;GetOperators()[i]-&gt;GetOutputTensorNames())</div><div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;        {</div><div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;            outputTensorsVect.push_back(mappings-&gt;GetTensorByName(name));</div><div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;        }</div><div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;</div><div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;        <span class="keywordflow">if</span> (!IsTosaLayerSupported(mappings-&gt;GetOperators()[i],</div><div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;                                  inputTensorsVect,</div><div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;                                  outputTensorsVect,</div><div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;                                  <a class="code" href="classarmnn_1_1_i_layer_support.xhtml#ac75f9a02b051716a0cc1cc0818dfe454">reasonIfUnsupported</a>))</div><div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;        {</div><div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;            <span class="keywordflow">return</span> <span class="keyword">false</span>;</div><div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;        }</div><div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;    }</div><div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;    <span class="keywordflow">return</span> <span class="keyword">true</span>;</div><div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;}</div><div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;</div><div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;} <span class="comment">// namespace armnn</span></div><div class="ttc" id="classarmnn_1_1_tosa_ref_layer_support_xhtml_a1bc545faee603e5975a957a0946f4aa2"><div class="ttname"><a href="classarmnn_1_1_tosa_ref_layer_support.xhtml#a1bc545faee603e5975a957a0946f4aa2">armnn::TosaRefLayerSupport::IsLayerSupported</a></div><div class="ttdeci">bool IsLayerSupported(const LayerType &amp;type, const std::vector&lt; TensorInfo &gt; &amp;infos, const BaseDescriptor &amp;descriptor, const Optional&lt; LstmInputParamsInfo &gt; &amp;lstmParamsInfo, const Optional&lt; QuantizedLstmInputParamsInfo &gt; &amp;, Optional&lt; std::string &amp;&gt; reasonIfUnsupported) const override</div><div class="ttdef"><b>Definition:</b> <a href="_tosa_ref_layer_support_8cpp_source.xhtml#l00088">TosaRefLayerSupport.cpp:88</a></div></div>
<div class="ttc" id="_ignore_unused_8hpp_xhtml"><div class="ttname"><a href="_ignore_unused_8hpp.xhtml">IgnoreUnused.hpp</a></div></div>
<div class="ttc" id="classarmnn_1_1_optional_xhtml"><div class="ttname"><a href="classarmnn_1_1_optional.xhtml">armnn::Optional</a></div><div class="ttdef"><b>Definition:</b> <a href="_optional_8hpp_source.xhtml#l00270">Optional.hpp:270</a></div></div>
<div class="ttc" id="namespacearmnn_xhtml_a56943a0946e5f15e5e58054b8e7a04a4a29c2c02a361c9d7028472e5d92cd4a54"><div class="ttname"><a href="namespacearmnn.xhtml#a56943a0946e5f15e5e58054b8e7a04a4a29c2c02a361c9d7028472e5d92cd4a54">armnn::LayerType::Output</a></div></div>
<div class="ttc" id="classarmnn_1_1_i_layer_support_xhtml_ac75f9a02b051716a0cc1cc0818dfe454"><div class="ttname"><a href="classarmnn_1_1_i_layer_support.xhtml#ac75f9a02b051716a0cc1cc0818dfe454">armnn::ILayerSupport::reasonIfUnsupported</a></div><div class="ttdeci">const TensorInfo const ActivationDescriptor Optional&lt; std::string &amp; &gt; reasonIfUnsupported</div><div class="ttdef"><b>Definition:</b> <a href="_i_layer_support_8hpp_source.xhtml#l00043">ILayerSupport.hpp:43</a></div></div>
<div class="ttc" id="_tosa_mappings_8hpp_xhtml"><div class="ttname"><a href="_tosa_mappings_8hpp.xhtml">TosaMappings.hpp</a></div></div>
<div class="ttc" id="namespacearmnn_xhtml"><div class="ttname"><a href="namespacearmnn.xhtml">armnn</a></div><div class="ttdoc">Copyright (c) 2021 ARM Limited and Contributors. </div><div class="ttdef"><b>Definition:</b> <a href="01__00__quick__start_8dox_source.xhtml#l00006">01_00_quick_start.dox:6</a></div></div>
<div class="ttc" id="_tosa_mappings_8cpp_xhtml_a93e8a4b4eba8c921bbe3619635187d5c"><div class="ttname"><a href="_tosa_mappings_8cpp.xhtml#a93e8a4b4eba8c921bbe3619635187d5c">GetTosaMapping</a></div><div class="ttdeci">TosaSerializationBasicBlock * GetTosaMapping(const LayerType type, const std::vector&lt; const TensorInfo *&gt; &amp;inputs, const std::vector&lt; const TensorInfo *&gt; &amp;outputs, const BaseDescriptor &amp;, bool isMain=false)</div><div class="ttdef"><b>Definition:</b> <a href="_tosa_mappings_8cpp_source.xhtml#l00026">TosaMappings.cpp:26</a></div></div>
<div class="ttc" id="namespacearmnn_xhtml_a44affeeb090c3c6a3062830562672e84"><div class="ttname"><a href="namespacearmnn.xhtml#a44affeeb090c3c6a3062830562672e84">armnn::IgnoreUnused</a></div><div class="ttdeci">void IgnoreUnused(Ts &amp;&amp;...)</div><div class="ttdef"><b>Definition:</b> <a href="_ignore_unused_8hpp_source.xhtml#l00014">IgnoreUnused.hpp:14</a></div></div>
<div class="ttc" id="structarmnn_1_1_base_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_base_descriptor.xhtml">armnn::BaseDescriptor</a></div><div class="ttdoc">Base class for all descriptors. </div><div class="ttdef"><b>Definition:</b> <a href="_descriptors_8hpp_source.xhtml#l00022">Descriptors.hpp:22</a></div></div>
<div class="ttc" id="_layer_support_common_8hpp_xhtml"><div class="ttname"><a href="_layer_support_common_8hpp.xhtml">LayerSupportCommon.hpp</a></div></div>
<div class="ttc" id="struct_tosa_operator_attribute_of_any_xhtml"><div class="ttname"><a href="struct_tosa_operator_attribute_of_any.xhtml">TosaOperatorAttributeOfAny</a></div><div class="ttdef"><b>Definition:</b> <a href="_tosa_layer_support_rules_8hpp_source.xhtml#l00010">TosaLayerSupportRules.hpp:10</a></div></div>
<div class="ttc" id="_types_8hpp_xhtml"><div class="ttname"><a href="_types_8hpp.xhtml">Types.hpp</a></div></div>
<div class="ttc" id="namespacearmnn_xhtml_a56943a0946e5f15e5e58054b8e7a04a4a7c5531bbefed0945814f874baf9e0e0f"><div class="ttname"><a href="namespacearmnn.xhtml#a56943a0946e5f15e5e58054b8e7a04a4a7c5531bbefed0945814f874baf9e0e0f">armnn::LayerType::Addition</a></div></div>
<div class="ttc" id="struct_tosa_tensor_num_dimensions_within_bounds_xhtml"><div class="ttname"><a href="struct_tosa_tensor_num_dimensions_within_bounds.xhtml">TosaTensorNumDimensionsWithinBounds</a></div><div class="ttdef"><b>Definition:</b> <a href="_tosa_layer_support_rules_8hpp_source.xhtml#l00034">TosaLayerSupportRules.hpp:34</a></div></div>
<div class="ttc" id="namespacearmnn_xhtml_a13c7d751e4d37f65a6d40c3c6e50d2b8"><div class="ttname"><a href="namespacearmnn.xhtml#a13c7d751e4d37f65a6d40c3c6e50d2b8">armnn::SetValueChecked</a></div><div class="ttdeci">void SetValueChecked(Optional&lt; T &amp;&gt; optionalRef, V &amp;&amp;val)</div><div class="ttdef"><b>Definition:</b> <a href="_layer_support_common_8hpp_source.xhtml#l00017">LayerSupportCommon.hpp:17</a></div></div>
<div class="ttc" id="_tosa_layer_support_rules_8hpp_xhtml"><div class="ttname"><a href="_tosa_layer_support_rules_8hpp.xhtml">TosaLayerSupportRules.hpp</a></div></div>
<div class="ttc" id="namespacearmnn_xhtml_a56943a0946e5f15e5e58054b8e7a04a4a324118a6721dd6b8a9b9f4e327df2bf5"><div class="ttname"><a href="namespacearmnn.xhtml#a56943a0946e5f15e5e58054b8e7a04a4a324118a6721dd6b8a9b9f4e327df2bf5">armnn::LayerType::Input</a></div></div>
<div class="ttc" id="_tosa_ref_layer_support_8hpp_xhtml"><div class="ttname"><a href="_tosa_ref_layer_support_8hpp.xhtml">TosaRefLayerSupport.hpp</a></div></div>
<div class="ttc" id="struct_tosa_type_any_of_xhtml"><div class="ttname"><a href="struct_tosa_type_any_of.xhtml">TosaTypeAnyOf</a></div><div class="ttdef"><b>Definition:</b> <a href="_tosa_layer_support_rules_8hpp_source.xhtml#l00022">TosaLayerSupportRules.hpp:22</a></div></div>
<div class="ttc" id="namespacearmnn_xhtml_acea2d8c53b441e24b6d60b090fda37c9"><div class="ttname"><a href="namespacearmnn.xhtml#acea2d8c53b441e24b6d60b090fda37c9">armnn::CheckSupportRule</a></div><div class="ttdeci">bool CheckSupportRule(F rule, Optional&lt; std::string &amp;&gt; reasonIfUnsupported, const char *reason)</div><div class="ttdef"><b>Definition:</b> <a href="_layer_support_rules_8hpp_source.xhtml#l00038">LayerSupportRules.hpp:38</a></div></div>
<div class="ttc" id="namespacearmnn_xhtml_a56943a0946e5f15e5e58054b8e7a04a4"><div class="ttname"><a href="namespacearmnn.xhtml#a56943a0946e5f15e5e58054b8e7a04a4">armnn::LayerType</a></div><div class="ttdeci">LayerType</div><div class="ttdoc">When adding a new layer, adapt also the LastLayer enum value in the enum class LayerType below...</div><div class="ttdef"><b>Definition:</b> <a href="_types_8hpp_source.xhtml#l00468">Types.hpp:468</a></div></div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="dir_68267d1309a1af8e8297ef4c3efbcdba.xhtml">src</a></li><li class="navelem"><a class="el" href="dir_0f3cdec46afbc61a1ded8e1687c9c9a0.xhtml">backends</a></li><li class="navelem"><a class="el" href="dir_1cbeeacd5feb3dda3e9a1c9b48ce5f80.xhtml">tosaReference</a></li><li class="navelem"><a class="el" href="_tosa_ref_layer_support_8cpp.xhtml">TosaRefLayerSupport.cpp</a></li>
    <li class="footer">Generated on Wed Nov 23 2022 10:57:38 for ArmNN by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.13 </li>
  </ul>
</div>
</body>
</html>
