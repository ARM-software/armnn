<!-- Copyright (c) 2020 ARM Limited. -->
<!--                                 -->
<!-- SPDX-License-Identifier: MIT    -->
<!--                                 -->
<!-- HTML header for doxygen 1.8.13-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.13"/>
<meta name="robots" content="NOINDEX, NOFOLLOW" />
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>ArmNN: include/armnn/Threadpool.hpp Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script><script type="text/javascript" src="http://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="stylesheet.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <img alt="ArmNN" src="Arm_NN_horizontal_blue.png" style="max-width: 10rem; margin-top: .5rem; margin-left 10px"/>
  <td style="padding-left: 0.5em;">
   <div id="projectname">
   &#160;<span id="projectnumber">22.05</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.13 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
$(document).ready(function(){initNavTree('_threadpool_8hpp_source.xhtml','');});
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="headertitle">
<div class="title">Threadpool.hpp</div>  </div>
</div><!--header-->
<div class="contents">
<a href="_threadpool_8hpp.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="comment">//</span></div><div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="comment">// Copyright Â© 2021 Arm Ltd and Contributors. All rights reserved.</span></div><div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="comment">// SPDX-License-Identifier: MIT</span></div><div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="comment">//</span></div><div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="preprocessor">#if !defined(ARMNN_DISABLE_THREADS)</span></div><div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;</div><div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="preprocessor">#pragma once</span></div><div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;</div><div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="preprocessor">#include &lt;<a class="code" href="_tensor_8hpp.xhtml">armnn/Tensor.hpp</a>&gt;</span></div><div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="preprocessor">#include &lt;<a class="code" href="_types_8hpp.xhtml">armnn/Types.hpp</a>&gt;</span></div><div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;</div><div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_i_network_8hpp.xhtml">INetwork.hpp</a>&quot;</span></div><div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_i_runtime_8hpp.xhtml">IRuntime.hpp</a>&quot;</span></div><div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;</div><div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;<span class="preprocessor">#include &lt;thread&gt;</span></div><div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;<span class="preprocessor">#include &lt;mutex&gt;</span></div><div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;<span class="preprocessor">#include &lt;condition_variable&gt;</span></div><div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;<span class="preprocessor">#include &lt;unordered_map&gt;</span></div><div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;<span class="preprocessor">#include &lt;queue&gt;</span></div><div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;</div><div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;<span class="keyword">namespace </span><a class="code" href="namespacearmnn.xhtml">armnn</a></div><div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;{</div><div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;<span class="keyword">namespace </span>experimental</div><div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;{</div><div class="line"><a name="l00025"></a><span class="lineno"><a class="line" href="classarmnn_1_1experimental_1_1_threadpool.xhtml">   25</a></span>&#160;<span class="keyword">class </span><a class="code" href="classarmnn_1_1experimental_1_1_threadpool.xhtml">Threadpool</a></div><div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;{</div><div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;<span class="keyword">public</span>:</div><div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;    <a class="code" href="classarmnn_1_1experimental_1_1_threadpool.xhtml#a22944b5254612236c06e24865262e1d5">Threadpool</a>(std::size_t numThreads,</div><div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;               <a class="code" href="classarmnn_1_1_i_runtime.xhtml">IRuntime</a>* runtimePtr,</div><div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;               std::vector&lt;std::shared_ptr&lt;IWorkingMemHandle&gt;&gt; memHandles);</div><div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;</div><div class="line"><a name="l00032"></a><span class="lineno"><a class="line" href="classarmnn_1_1experimental_1_1_threadpool.xhtml#a10680e8013c90b056416dd4643c4d9bd">   32</a></span>&#160;    <a class="code" href="classarmnn_1_1experimental_1_1_threadpool.xhtml#a10680e8013c90b056416dd4643c4d9bd">~Threadpool</a>()</div><div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;    {</div><div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;        <a class="code" href="classarmnn_1_1experimental_1_1_threadpool.xhtml#a3be6ab6132ee76b0b36149f70f842f61">TerminateThreadPool</a>();</div><div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;    }</div><div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;</div><div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classarmnn_1_1experimental_1_1_threadpool.xhtml#ac54bebf6abec4a11e033d703f6441df8">LoadMemHandles</a>(std::vector&lt;std::shared_ptr&lt;IWorkingMemHandle&gt;&gt; memHandles);</div><div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classarmnn_1_1experimental_1_1_threadpool.xhtml#a11f8027065067f9f77f54fe2400479d2">UnloadMemHandles</a>(<a class="code" href="namespacearmnn.xhtml#a0d8160388a127c1a23b37bc88dc6e2ec">NetworkId</a> networkId);</div><div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;<span class="comment">    /// Schedule an asynchronous execution on the loaded network</span></div><div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;<span class="comment"></span>    <span class="keywordtype">void</span> <a class="code" href="classarmnn_1_1experimental_1_1_threadpool.xhtml#ab38a8efb11e2dfeeb5a3709644985748">Schedule</a>(<a class="code" href="namespacearmnn.xhtml#a0d8160388a127c1a23b37bc88dc6e2ec">NetworkId</a> networkId,</div><div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;                  <span class="keyword">const</span> <a class="code" href="namespacearmnn.xhtml#aa01bce88f89975a5a031db4cc8861527">InputTensors</a> &amp;inputTensors,</div><div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;                  <span class="keyword">const</span> <a class="code" href="namespacearmnn.xhtml#a8f091a512915d1cb29a4ebf13dfc53ea">OutputTensors</a> &amp;outputTensors,</div><div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;                  <span class="keyword">const</span> <a class="code" href="namespacearmnn.xhtml#a8e72227ebe5ac505cf44790f2e6eb488">QosExecPriority</a> priority,</div><div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;                  std::shared_ptr&lt;IAsyncExecutionCallback&gt; cb);</div><div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;</div><div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classarmnn_1_1experimental_1_1_threadpool.xhtml#a3be6ab6132ee76b0b36149f70f842f61">TerminateThreadPool</a>() noexcept;</div><div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;</div><div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;<span class="keyword">private</span>:</div><div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;    <span class="keyword">using</span> ExecutionTuple = std::tuple&lt;<a class="code" href="namespacearmnn.xhtml#a0d8160388a127c1a23b37bc88dc6e2ec">NetworkId</a>,</div><div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;                                      <a class="code" href="namespacearmnn.xhtml#aa01bce88f89975a5a031db4cc8861527">InputTensors</a>,</div><div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;                                      <a class="code" href="namespacearmnn.xhtml#a8f091a512915d1cb29a4ebf13dfc53ea">OutputTensors</a>,</div><div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;                                      std::shared_ptr&lt;IAsyncExecutionCallback&gt;&gt;;</div><div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;</div><div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;    <span class="keyword">using</span> ExecutionQueue = std::queue&lt;std::shared_ptr&lt;ExecutionTuple&gt;&gt;;</div><div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;</div><div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;    <span class="keywordtype">void</span> ProcessExecPriorities(uint32_t index);</div><div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;</div><div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;    <a class="code" href="classarmnn_1_1_i_runtime.xhtml">IRuntime</a>* m_RuntimePtr;</div><div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;</div><div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;    ExecutionQueue m_HighPriorityQueue;</div><div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;    ExecutionQueue m_MediumPriorityQueue;</div><div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;    ExecutionQueue m_LowPriorityQueue;</div><div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;</div><div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;    <span class="comment">// Condition Variables require mutex which will guard the shared state.</span></div><div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;    <span class="comment">// Has an event happened? Stop signal for example</span></div><div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;    std::condition_variable m_ThreadPoolEvent;</div><div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;    std::mutex m_ThreadPoolMutex;</div><div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;</div><div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;    <span class="comment">// The shared state for conditional variable</span></div><div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;    <span class="keywordtype">bool</span> m_TerminatePool = <span class="keyword">false</span>;</div><div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;</div><div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;    std::unordered_map&lt;NetworkId, std::vector&lt;std::shared_ptr&lt;IWorkingMemHandle&gt;&gt;&gt; m_WorkingMemHandleMap;</div><div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;    std::vector&lt;std::unique_ptr&lt;std::thread&gt;&gt; m_Threads;</div><div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;};</div><div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;</div><div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;} <span class="comment">// namespace experimental</span></div><div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;</div><div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;} <span class="comment">// namespace armnn</span></div><div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;</div><div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;<span class="preprocessor">#endif</span></div><div class="ttc" id="classarmnn_1_1experimental_1_1_threadpool_xhtml_ac54bebf6abec4a11e033d703f6441df8"><div class="ttname"><a href="classarmnn_1_1experimental_1_1_threadpool.xhtml#ac54bebf6abec4a11e033d703f6441df8">armnn::experimental::Threadpool::LoadMemHandles</a></div><div class="ttdeci">void LoadMemHandles(std::vector&lt; std::shared_ptr&lt; IWorkingMemHandle &gt;&gt; memHandles)</div><div class="ttdef"><b>Definition:</b> <a href="_threadpool_8cpp_source.xhtml#l00029">Threadpool.cpp:29</a></div></div>
<div class="ttc" id="_tensor_8hpp_xhtml"><div class="ttname"><a href="_tensor_8hpp.xhtml">Tensor.hpp</a></div></div>
<div class="ttc" id="_i_runtime_8hpp_xhtml"><div class="ttname"><a href="_i_runtime_8hpp.xhtml">IRuntime.hpp</a></div></div>
<div class="ttc" id="namespacearmnn_xhtml_aa01bce88f89975a5a031db4cc8861527"><div class="ttname"><a href="namespacearmnn.xhtml#aa01bce88f89975a5a031db4cc8861527">armnn::InputTensors</a></div><div class="ttdeci">std::vector&lt; std::pair&lt; LayerBindingId, class ConstTensor &gt; &gt; InputTensors</div><div class="ttdef"><b>Definition:</b> <a href="_tensor_8hpp_source.xhtml#l00392">Tensor.hpp:392</a></div></div>
<div class="ttc" id="namespacearmnn_xhtml"><div class="ttname"><a href="namespacearmnn.xhtml">armnn</a></div><div class="ttdoc">Copyright (c) 2021 ARM Limited and Contributors. </div><div class="ttdef"><b>Definition:</b> <a href="01__00__quick__start_8dox_source.xhtml#l00006">01_00_quick_start.dox:6</a></div></div>
<div class="ttc" id="classarmnn_1_1_i_runtime_xhtml"><div class="ttname"><a href="classarmnn_1_1_i_runtime.xhtml">armnn::IRuntime</a></div><div class="ttdef"><b>Definition:</b> <a href="_i_runtime_8hpp_source.xhtml#l00074">IRuntime.hpp:74</a></div></div>
<div class="ttc" id="classarmnn_1_1experimental_1_1_threadpool_xhtml_a3be6ab6132ee76b0b36149f70f842f61"><div class="ttname"><a href="classarmnn_1_1experimental_1_1_threadpool.xhtml#a3be6ab6132ee76b0b36149f70f842f61">armnn::experimental::Threadpool::TerminateThreadPool</a></div><div class="ttdeci">void TerminateThreadPool() noexcept</div><div class="ttdef"><b>Definition:</b> <a href="_threadpool_8cpp_source.xhtml#l00102">Threadpool.cpp:102</a></div></div>
<div class="ttc" id="classarmnn_1_1experimental_1_1_threadpool_xhtml_ab38a8efb11e2dfeeb5a3709644985748"><div class="ttname"><a href="classarmnn_1_1experimental_1_1_threadpool.xhtml#ab38a8efb11e2dfeeb5a3709644985748">armnn::experimental::Threadpool::Schedule</a></div><div class="ttdeci">void Schedule(NetworkId networkId, const InputTensors &amp;inputTensors, const OutputTensors &amp;outputTensors, const QosExecPriority priority, std::shared_ptr&lt; IAsyncExecutionCallback &gt; cb)</div><div class="ttdoc">Schedule an asynchronous execution on the loaded network. </div><div class="ttdef"><b>Definition:</b> <a href="_threadpool_8cpp_source.xhtml#l00069">Threadpool.cpp:69</a></div></div>
<div class="ttc" id="_types_8hpp_xhtml"><div class="ttname"><a href="_types_8hpp.xhtml">Types.hpp</a></div></div>
<div class="ttc" id="namespacearmnn_xhtml_a0d8160388a127c1a23b37bc88dc6e2ec"><div class="ttname"><a href="namespacearmnn.xhtml#a0d8160388a127c1a23b37bc88dc6e2ec">armnn::NetworkId</a></div><div class="ttdeci">int NetworkId</div><div class="ttdef"><b>Definition:</b> <a href="_i_runtime_8hpp_source.xhtml#l00027">IRuntime.hpp:27</a></div></div>
<div class="ttc" id="namespacearmnn_xhtml_a8f091a512915d1cb29a4ebf13dfc53ea"><div class="ttname"><a href="namespacearmnn.xhtml#a8f091a512915d1cb29a4ebf13dfc53ea">armnn::OutputTensors</a></div><div class="ttdeci">std::vector&lt; std::pair&lt; LayerBindingId, class Tensor &gt; &gt; OutputTensors</div><div class="ttdef"><b>Definition:</b> <a href="_tensor_8hpp_source.xhtml#l00393">Tensor.hpp:393</a></div></div>
<div class="ttc" id="classarmnn_1_1experimental_1_1_threadpool_xhtml_a22944b5254612236c06e24865262e1d5"><div class="ttname"><a href="classarmnn_1_1experimental_1_1_threadpool.xhtml#a22944b5254612236c06e24865262e1d5">armnn::experimental::Threadpool::Threadpool</a></div><div class="ttdeci">Threadpool(std::size_t numThreads, IRuntime *runtimePtr, std::vector&lt; std::shared_ptr&lt; IWorkingMemHandle &gt;&gt; memHandles)</div><div class="ttdef"><b>Definition:</b> <a href="_threadpool_8cpp_source.xhtml#l00016">Threadpool.cpp:16</a></div></div>
<div class="ttc" id="classarmnn_1_1experimental_1_1_threadpool_xhtml_a10680e8013c90b056416dd4643c4d9bd"><div class="ttname"><a href="classarmnn_1_1experimental_1_1_threadpool.xhtml#a10680e8013c90b056416dd4643c4d9bd">armnn::experimental::Threadpool::~Threadpool</a></div><div class="ttdeci">~Threadpool()</div><div class="ttdef"><b>Definition:</b> <a href="_threadpool_8hpp_source.xhtml#l00032">Threadpool.hpp:32</a></div></div>
<div class="ttc" id="classarmnn_1_1experimental_1_1_threadpool_xhtml_a11f8027065067f9f77f54fe2400479d2"><div class="ttname"><a href="classarmnn_1_1experimental_1_1_threadpool.xhtml#a11f8027065067f9f77f54fe2400479d2">armnn::experimental::Threadpool::UnloadMemHandles</a></div><div class="ttdeci">void UnloadMemHandles(NetworkId networkId)</div><div class="ttdef"><b>Definition:</b> <a href="_threadpool_8cpp_source.xhtml#l00057">Threadpool.cpp:57</a></div></div>
<div class="ttc" id="_i_network_8hpp_xhtml"><div class="ttname"><a href="_i_network_8hpp.xhtml">INetwork.hpp</a></div></div>
<div class="ttc" id="classarmnn_1_1experimental_1_1_threadpool_xhtml"><div class="ttname"><a href="classarmnn_1_1experimental_1_1_threadpool.xhtml">armnn::experimental::Threadpool</a></div><div class="ttdef"><b>Definition:</b> <a href="_threadpool_8hpp_source.xhtml#l00025">Threadpool.hpp:25</a></div></div>
<div class="ttc" id="namespacearmnn_xhtml_a8e72227ebe5ac505cf44790f2e6eb488"><div class="ttname"><a href="namespacearmnn.xhtml#a8e72227ebe5ac505cf44790f2e6eb488">armnn::QosExecPriority</a></div><div class="ttdeci">QosExecPriority</div><div class="ttdef"><b>Definition:</b> <a href="_types_8hpp_source.xhtml#l00079">Types.hpp:79</a></div></div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="dir_d44c64559bbebec7f509842c48db8b23.xhtml">include</a></li><li class="navelem"><a class="el" href="dir_2b72cc348e06937955e62ebdd8a13436.xhtml">armnn</a></li><li class="navelem"><a class="el" href="_threadpool_8hpp.xhtml">Threadpool.hpp</a></li>
    <li class="footer">Generated on Tue May 24 2022 11:26:32 for ArmNN by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.13 </li>
  </ul>
</div>
</body>
</html>
