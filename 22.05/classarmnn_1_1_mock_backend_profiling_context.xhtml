<!-- Copyright (c) 2020 ARM Limited. -->
<!--                                 -->
<!-- SPDX-License-Identifier: MIT    -->
<!--                                 -->
<!-- HTML header for doxygen 1.8.13-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.13"/>
<meta name="robots" content="NOINDEX, NOFOLLOW" />
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>ArmNN: MockBackendProfilingContext Class Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script><script type="text/javascript" src="http://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="stylesheet.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <img alt="ArmNN" src="Arm_NN_horizontal_blue.png" style="max-width: 10rem; margin-top: .5rem; margin-left 10px"/>
  <td style="padding-left: 0.5em;">
   <div id="projectname">
   &#160;<span id="projectnumber">22.05</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.13 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
$(document).ready(function(){initNavTree('classarmnn_1_1_mock_backend_profiling_context.xhtml','');});
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="summary">
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="classarmnn_1_1_mock_backend_profiling_context-members.xhtml">List of all members</a>  </div>
  <div class="headertitle">
<div class="title">MockBackendProfilingContext Class Reference</div>  </div>
</div><!--header-->
<div class="contents">

<p><code>#include &lt;<a class="el" href="_mock_backend_8hpp_source.xhtml">MockBackend.hpp</a>&gt;</code></p>
<div class="dynheader">
Inheritance diagram for MockBackendProfilingContext:</div>
<div class="dyncontent">
 <div class="center">
  <img src="classarmnn_1_1_mock_backend_profiling_context.png" usemap="#MockBackendProfilingContext_map" alt=""/>
  <map id="MockBackendProfilingContext_map" name="MockBackendProfilingContext_map">
</map>
 </div></div>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:aadbea1ff4262aeb6eda84517253a5958"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_mock_backend_profiling_context.xhtml#aadbea1ff4262aeb6eda84517253a5958">MockBackendProfilingContext</a> (<a class="el" href="classarmnn_1_1_i_backend_internal.xhtml#a335964abd41c91f7e6ef5c65865a7b98">IBackendInternal::IBackendProfilingPtr</a> &amp;backendProfiling)</td></tr>
<tr class="separator:aadbea1ff4262aeb6eda84517253a5958"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa3bb55f59fbbaeec067b74adf9089a59"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_mock_backend_profiling_context.xhtml#aa3bb55f59fbbaeec067b74adf9089a59">~MockBackendProfilingContext</a> ()=default</td></tr>
<tr class="separator:aa3bb55f59fbbaeec067b74adf9089a59"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5d24e91b1e41268d821891ced802b811"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classarmnn_1_1_i_backend_internal.xhtml#a335964abd41c91f7e6ef5c65865a7b98">IBackendInternal::IBackendProfilingPtr</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_mock_backend_profiling_context.xhtml#a5d24e91b1e41268d821891ced802b811">GetBackendProfiling</a> ()</td></tr>
<tr class="separator:a5d24e91b1e41268d821891ced802b811"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6f2834ca8b2c5f299a02b4a98c91b4d6"><td class="memItemLeft" align="right" valign="top">uint16_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_mock_backend_profiling_context.xhtml#a6f2834ca8b2c5f299a02b4a98c91b4d6">RegisterCounters</a> (uint16_t currentMaxGlobalCounterId)</td></tr>
<tr class="separator:a6f2834ca8b2c5f299a02b4a98c91b4d6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae3ee79a8ce5c0eba56425b88fec16f9e"><td class="memItemLeft" align="right" valign="top">arm::pipe::Optional&lt; std::string &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_mock_backend_profiling_context.xhtml#ae3ee79a8ce5c0eba56425b88fec16f9e">ActivateCounters</a> (uint32_t capturePeriod, const std::vector&lt; uint16_t &gt; &amp;counterIds)</td></tr>
<tr class="separator:ae3ee79a8ce5c0eba56425b88fec16f9e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad24c295e656b9cc9bd115a57e865a690"><td class="memItemLeft" align="right" valign="top">std::vector&lt; arm::pipe::Timestamp &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_mock_backend_profiling_context.xhtml#ad24c295e656b9cc9bd115a57e865a690">ReportCounterValues</a> ()</td></tr>
<tr class="separator:ad24c295e656b9cc9bd115a57e865a690"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a77892a6690e47dcfd4be01bf3de9b1c5"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_mock_backend_profiling_context.xhtml#a77892a6690e47dcfd4be01bf3de9b1c5">EnableProfiling</a> (bool)</td></tr>
<tr class="separator:a77892a6690e47dcfd4be01bf3de9b1c5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a054886fdb648e19cd083d169cf2136e7"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_mock_backend_profiling_context.xhtml#a054886fdb648e19cd083d169cf2136e7">EnableTimelineReporting</a> (bool isEnabled)</td></tr>
<tr class="separator:a054886fdb648e19cd083d169cf2136e7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af2c108bdd805535a58a13553b5848f31"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_mock_backend_profiling_context.xhtml#af2c108bdd805535a58a13553b5848f31">TimelineReportingEnabled</a> ()</td></tr>
<tr class="separator:af2c108bdd805535a58a13553b5848f31"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock">
<p class="definition">Definition at line <a class="el" href="_mock_backend_8hpp_source.xhtml#l00129">129</a> of file <a class="el" href="_mock_backend_8hpp_source.xhtml">MockBackend.hpp</a>.</p>
</div><h2 class="groupheader">Constructor &amp; Destructor Documentation</h2>
<a id="aadbea1ff4262aeb6eda84517253a5958"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aadbea1ff4262aeb6eda84517253a5958">&#9670;&nbsp;</a></span>MockBackendProfilingContext()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarmnn_1_1_mock_backend_profiling_context.xhtml">MockBackendProfilingContext</a> </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classarmnn_1_1_i_backend_internal.xhtml#a335964abd41c91f7e6ef5c65865a7b98">IBackendInternal::IBackendProfilingPtr</a> &amp;&#160;</td>
          <td class="paramname"><em>backendProfiling</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_mock_backend_8hpp_source.xhtml#l00132">132</a> of file <a class="el" href="_mock_backend_8hpp_source.xhtml">MockBackend.hpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;        : m_BackendProfiling(std::move(backendProfiling))</div><div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;        , m_CapturePeriod(0)</div><div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;        , m_IsTimelineEnabled(<span class="keyword">true</span>)</div><div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;    {}</div></div><!-- fragment -->
</div>
</div>
<a id="aa3bb55f59fbbaeec067b74adf9089a59"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aa3bb55f59fbbaeec067b74adf9089a59">&#9670;&nbsp;</a></span>~MockBackendProfilingContext()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">~<a class="el" href="classarmnn_1_1_mock_backend_profiling_context.xhtml">MockBackendProfilingContext</a> </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">default</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<h2 class="groupheader">Member Function Documentation</h2>
<a id="ae3ee79a8ce5c0eba56425b88fec16f9e"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ae3ee79a8ce5c0eba56425b88fec16f9e">&#9670;&nbsp;</a></span>ActivateCounters()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">arm::pipe::Optional&lt;std::string&gt; ActivateCounters </td>
          <td>(</td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>capturePeriod</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const std::vector&lt; uint16_t &gt; &amp;&#160;</td>
          <td class="paramname"><em>counterIds</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_mock_backend_8hpp_source.xhtml#l00165">165</a> of file <a class="el" href="_mock_backend_8hpp_source.xhtml">MockBackend.hpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160;    {</div><div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160;        <span class="keywordflow">if</span> (capturePeriod == 0 || counterIds.size() == 0)</div><div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160;        {</div><div class="line"><a name="l00169"></a><span class="lineno">  169</span>&#160;            m_ActiveCounters.clear();</div><div class="line"><a name="l00170"></a><span class="lineno">  170</span>&#160;        }</div><div class="line"><a name="l00171"></a><span class="lineno">  171</span>&#160;        <span class="keywordflow">else</span> <span class="keywordflow">if</span> (capturePeriod == 15939u)</div><div class="line"><a name="l00172"></a><span class="lineno">  172</span>&#160;        {</div><div class="line"><a name="l00173"></a><span class="lineno">  173</span>&#160;            <span class="keywordflow">return</span> arm::pipe::Optional&lt;std::string&gt;(<span class="stringliteral">&quot;ActivateCounters example test error&quot;</span>);</div><div class="line"><a name="l00174"></a><span class="lineno">  174</span>&#160;        }</div><div class="line"><a name="l00175"></a><span class="lineno">  175</span>&#160;        m_CapturePeriod  = capturePeriod;</div><div class="line"><a name="l00176"></a><span class="lineno">  176</span>&#160;        m_ActiveCounters = counterIds;</div><div class="line"><a name="l00177"></a><span class="lineno">  177</span>&#160;        <span class="keywordflow">return</span> arm::pipe::Optional&lt;std::string&gt;();</div><div class="line"><a name="l00178"></a><span class="lineno">  178</span>&#160;    }</div></div><!-- fragment -->
</div>
</div>
<a id="a77892a6690e47dcfd4be01bf3de9b1c5"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a77892a6690e47dcfd4be01bf3de9b1c5">&#9670;&nbsp;</a></span>EnableProfiling()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool EnableProfiling </td>
          <td>(</td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_mock_backend_8hpp_source.xhtml#l00193">193</a> of file <a class="el" href="_mock_backend_8hpp_source.xhtml">MockBackend.hpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00194"></a><span class="lineno">  194</span>&#160;    {</div><div class="line"><a name="l00195"></a><span class="lineno">  195</span>&#160;        <span class="keyword">auto</span> sendTimelinePacket = m_BackendProfiling-&gt;GetSendTimelinePacket();</div><div class="line"><a name="l00196"></a><span class="lineno">  196</span>&#160;        sendTimelinePacket-&gt;SendTimelineEntityBinaryPacket(4256);</div><div class="line"><a name="l00197"></a><span class="lineno">  197</span>&#160;        sendTimelinePacket-&gt;Commit();</div><div class="line"><a name="l00198"></a><span class="lineno">  198</span>&#160;        <span class="keywordflow">return</span> <span class="keyword">true</span>;</div><div class="line"><a name="l00199"></a><span class="lineno">  199</span>&#160;    }</div></div><!-- fragment -->
</div>
</div>
<a id="a054886fdb648e19cd083d169cf2136e7"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a054886fdb648e19cd083d169cf2136e7">&#9670;&nbsp;</a></span>EnableTimelineReporting()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool EnableTimelineReporting </td>
          <td>(</td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>isEnabled</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_mock_backend_8hpp_source.xhtml#l00201">201</a> of file <a class="el" href="_mock_backend_8hpp_source.xhtml">MockBackend.hpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00202"></a><span class="lineno">  202</span>&#160;    {</div><div class="line"><a name="l00203"></a><span class="lineno">  203</span>&#160;        m_IsTimelineEnabled = isEnabled;</div><div class="line"><a name="l00204"></a><span class="lineno">  204</span>&#160;        <span class="keywordflow">return</span> isEnabled;</div><div class="line"><a name="l00205"></a><span class="lineno">  205</span>&#160;    }</div></div><!-- fragment -->
</div>
</div>
<a id="a5d24e91b1e41268d821891ced802b811"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a5d24e91b1e41268d821891ced802b811">&#9670;&nbsp;</a></span>GetBackendProfiling()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarmnn_1_1_i_backend_internal.xhtml#a335964abd41c91f7e6ef5c65865a7b98">IBackendInternal::IBackendProfilingPtr</a>&amp; GetBackendProfiling </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_mock_backend_8hpp_source.xhtml#l00140">140</a> of file <a class="el" href="_mock_backend_8hpp_source.xhtml">MockBackend.hpp</a>.</p>

<p class="reference">Referenced by <a class="el" href="_backend_profiling_tests_8cpp_source.xhtml#l00156">TEST_SUITE()</a>.</p>
<div class="fragment"><div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;    {</div><div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;        <span class="keywordflow">return</span> m_BackendProfiling;</div><div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;    }</div></div><!-- fragment -->
</div>
</div>
<a id="a6f2834ca8b2c5f299a02b4a98c91b4d6"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a6f2834ca8b2c5f299a02b4a98c91b4d6">&#9670;&nbsp;</a></span>RegisterCounters()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">uint16_t RegisterCounters </td>
          <td>(</td>
          <td class="paramtype">uint16_t&#160;</td>
          <td class="paramname"><em>currentMaxGlobalCounterId</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_mock_backend_8hpp_source.xhtml#l00145">145</a> of file <a class="el" href="_mock_backend_8hpp_source.xhtml">MockBackend.hpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;    {</div><div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;        std::unique_ptr&lt;arm::pipe::IRegisterBackendCounters&gt; counterRegistrar =</div><div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;            m_BackendProfiling-&gt;GetCounterRegistrationInterface(static_cast&lt;uint16_t&gt;(currentMaxGlobalCounterId));</div><div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;</div><div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;        std::string categoryName(<span class="stringliteral">&quot;MockCounters&quot;</span>);</div><div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;        counterRegistrar-&gt;RegisterCategory(categoryName);</div><div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;</div><div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;        counterRegistrar-&gt;RegisterCounter(0, categoryName, 0, 0, 1.f, <span class="stringliteral">&quot;Mock Counter One&quot;</span>, <span class="stringliteral">&quot;Some notional counter&quot;</span>);</div><div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;</div><div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;        counterRegistrar-&gt;RegisterCounter(1, categoryName, 0, 0, 1.f, <span class="stringliteral">&quot;Mock Counter Two&quot;</span>,</div><div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;                                          <span class="stringliteral">&quot;Another notional counter&quot;</span>);</div><div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160;</div><div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;        std::string units(<span class="stringliteral">&quot;microseconds&quot;</span>);</div><div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160;        uint16_t nextMaxGlobalCounterId =</div><div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160;                        counterRegistrar-&gt;RegisterCounter(2, categoryName, 0, 0, 1.f, <span class="stringliteral">&quot;Mock MultiCore Counter&quot;</span>,</div><div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160;                                                          <span class="stringliteral">&quot;A dummy four core counter&quot;</span>, units, 4);</div><div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160;        <span class="keywordflow">return</span> nextMaxGlobalCounterId;</div><div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160;    }</div></div><!-- fragment -->
</div>
</div>
<a id="ad24c295e656b9cc9bd115a57e865a690"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ad24c295e656b9cc9bd115a57e865a690">&#9670;&nbsp;</a></span>ReportCounterValues()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">std::vector&lt;arm::pipe::Timestamp&gt; ReportCounterValues </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_mock_backend_8hpp_source.xhtml#l00180">180</a> of file <a class="el" href="_mock_backend_8hpp_source.xhtml">MockBackend.hpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00181"></a><span class="lineno">  181</span>&#160;    {</div><div class="line"><a name="l00182"></a><span class="lineno">  182</span>&#160;        std::vector&lt;arm::pipe::CounterValue&gt; counterValues;</div><div class="line"><a name="l00183"></a><span class="lineno">  183</span>&#160;</div><div class="line"><a name="l00184"></a><span class="lineno">  184</span>&#160;        <span class="keywordflow">for</span> (<span class="keyword">auto</span> counterId : m_ActiveCounters)</div><div class="line"><a name="l00185"></a><span class="lineno">  185</span>&#160;        {</div><div class="line"><a name="l00186"></a><span class="lineno">  186</span>&#160;            counterValues.emplace_back(arm::pipe::CounterValue{ counterId, counterId + 1u });</div><div class="line"><a name="l00187"></a><span class="lineno">  187</span>&#160;        }</div><div class="line"><a name="l00188"></a><span class="lineno">  188</span>&#160;</div><div class="line"><a name="l00189"></a><span class="lineno">  189</span>&#160;        uint64_t timestamp = m_CapturePeriod;</div><div class="line"><a name="l00190"></a><span class="lineno">  190</span>&#160;        <span class="keywordflow">return</span> { arm::pipe::Timestamp{ timestamp, counterValues } };</div><div class="line"><a name="l00191"></a><span class="lineno">  191</span>&#160;    }</div></div><!-- fragment -->
</div>
</div>
<a id="af2c108bdd805535a58a13553b5848f31"></a>
<h2 class="memtitle"><span class="permalink"><a href="#af2c108bdd805535a58a13553b5848f31">&#9670;&nbsp;</a></span>TimelineReportingEnabled()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool TimelineReportingEnabled </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_mock_backend_8hpp_source.xhtml#l00207">207</a> of file <a class="el" href="_mock_backend_8hpp_source.xhtml">MockBackend.hpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00208"></a><span class="lineno">  208</span>&#160;    {</div><div class="line"><a name="l00209"></a><span class="lineno">  209</span>&#160;        <span class="keywordflow">return</span> m_IsTimelineEnabled;</div><div class="line"><a name="l00210"></a><span class="lineno">  210</span>&#160;    }</div></div><!-- fragment -->
</div>
</div>
<hr/>The documentation for this class was generated from the following file:<ul>
<li>include/armnnTestUtils/<a class="el" href="_mock_backend_8hpp_source.xhtml">MockBackend.hpp</a></li>
</ul>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="namespacearmnn.xhtml">armnn</a></li><li class="navelem"><a class="el" href="classarmnn_1_1_mock_backend_profiling_context.xhtml">MockBackendProfilingContext</a></li>
    <li class="footer">Generated on Tue May 24 2022 11:27:23 for ArmNN by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.13 </li>
  </ul>
</div>
</body>
</html>
