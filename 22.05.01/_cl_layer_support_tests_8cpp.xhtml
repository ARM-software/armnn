<!-- Copyright (c) 2020 ARM Limited. -->
<!--                                 -->
<!-- SPDX-License-Identifier: MIT    -->
<!--                                 -->
<!-- HTML header for doxygen 1.8.13-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.13"/>
<meta name="robots" content="NOINDEX, NOFOLLOW" />
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>ArmNN: src/backends/cl/test/ClLayerSupportTests.cpp File Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script><script type="text/javascript" src="http://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="stylesheet.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <img alt="ArmNN" src="Arm_NN_horizontal_blue.png" style="max-width: 10rem; margin-top: .5rem; margin-left 10px"/>
  <td style="padding-left: 0.5em;">
   <div id="projectname">
   &#160;<span id="projectnumber">22.05.01</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.13 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
$(document).ready(function(){initNavTree('_cl_layer_support_tests_8cpp.xhtml','');});
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="summary">
<a href="#func-members">Functions</a>  </div>
  <div class="headertitle">
<div class="title">ClLayerSupportTests.cpp File Reference</div>  </div>
</div><!--header-->
<div class="contents">
<div class="textblock"><code>#include &quot;<a class="el" href="_cl_workload_factory_helper_8hpp_source.xhtml">ClWorkloadFactoryHelper.hpp</a>&quot;</code><br />
<code>#include &lt;<a class="el" href="_convert_fp16_to_fp32_layer_8hpp_source.xhtml">layers/ConvertFp16ToFp32Layer.hpp</a>&gt;</code><br />
<code>#include &lt;<a class="el" href="_convert_fp32_to_fp16_layer_8hpp_source.xhtml">layers/ConvertFp32ToFp16Layer.hpp</a>&gt;</code><br />
<code>#include &lt;<a class="el" href="_mean_layer_8hpp_source.xhtml">layers/MeanLayer.hpp</a>&gt;</code><br />
<code>#include &lt;<a class="el" href="include_2armnn_test_utils_2_tensor_helpers_8hpp_source.xhtml">armnnTestUtils/TensorHelpers.hpp</a>&gt;</code><br />
<code>#include &lt;<a class="el" href="include_2armnn_2backends_2_tensor_handle_8hpp_source.xhtml">armnn/backends/TensorHandle.hpp</a>&gt;</code><br />
<code>#include &lt;<a class="el" href="_cl_workload_factory_8hpp_source.xhtml">cl/ClWorkloadFactory.hpp</a>&gt;</code><br />
<code>#include &lt;<a class="el" href="_cl_context_control_fixture_8hpp_source.xhtml">cl/test/ClContextControlFixture.hpp</a>&gt;</code><br />
<code>#include &lt;<a class="el" href="_is_layer_supported_test_impl_8hpp_source.xhtml">backendsCommon/test/IsLayerSupportedTestImpl.hpp</a>&gt;</code><br />
<code>#include &lt;<a class="el" href="_layer_tests_8hpp_source.xhtml">backendsCommon/test/LayerTests.hpp</a>&gt;</code><br />
<code>#include &lt;doctest/doctest.h&gt;</code><br />
<code>#include &lt;string&gt;</code><br />
</div>
<p><a href="_cl_layer_support_tests_8cpp_source.xhtml">Go to the source code of this file.</a></p>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="func-members"></a>
Functions</h2></td></tr>
<tr class="memitem:a27c9d4e59e12d97d30b2eb4b1d48ad1e"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_cl_layer_support_tests_8cpp.xhtml#a27c9d4e59e12d97d30b2eb4b1d48ad1e">TEST_SUITE</a> (&quot;ClLayerSupport&quot;)</td></tr>
<tr class="separator:a27c9d4e59e12d97d30b2eb4b1d48ad1e"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<h2 class="groupheader">Function Documentation</h2>
<a id="a27c9d4e59e12d97d30b2eb4b1d48ad1e"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a27c9d4e59e12d97d30b2eb4b1d48ad1e">&#9670;&nbsp;</a></span>TEST_SUITE()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">TEST_SUITE </td>
          <td>(</td>
          <td class="paramtype">&quot;ClLayerSupport&quot;&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_cl_layer_support_tests_8cpp_source.xhtml#l00023">23</a> of file <a class="el" href="_cl_layer_support_tests_8cpp_source.xhtml">ClLayerSupportTests.cpp</a>.</p>

<p class="reference">References <a class="el" href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6acdb56b2d2f73c26480207524f2dbe0af">armnn::BFloat16</a>, <a class="el" href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a27226c864bac7454a8504f8edb15d95b">armnn::Boolean</a>, <a class="el" href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a26e6ed77470c6f2f830ecf874e6c0d55">armnn::Float16</a>, <a class="el" href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a166495adc0d0f53bee6baecc577f5204">armnn::Float32</a>, <a class="el" href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a9d02ea768c081d4bdb2b7cab0b3f510d">armnn::QAsymmS8</a>, <a class="el" href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a0a3f57c876f5a230244c38e1453a8a6e">armnn::QAsymmU8</a>, <a class="el" href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a053c769dcf82d66ef326c86980c02ba7">armnn::QSymmS16</a>, <a class="el" href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a9945327825b115e93a3b89f4302e76db">armnn::QSymmS8</a>, and <a class="el" href="_mem_copy_tests_8cpp_source.xhtml#l00089">TEST_CASE_FIXTURE()</a>.</p>
<div class="fragment"><div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;{</div><div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;<a class="code" href="_mem_copy_tests_8cpp.xhtml#a3df1acc0ccc35bce0bd6c027e23e2c45">TEST_CASE_FIXTURE</a>(<a class="code" href="struct_cl_context_control_fixture_base.xhtml">ClContextControlFixture</a>, <span class="stringliteral">&quot;IsLayerSupportedFloat16Cl&quot;</span>)</div><div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;{</div><div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;    <a class="code" href="classarmnn_1_1_cl_workload_factory.xhtml">armnn::ClWorkloadFactory</a> factory =</div><div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;        ClWorkloadFactoryHelper::GetFactory(ClWorkloadFactoryHelper::GetMemoryManager());</div><div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;    IsLayerSupportedTests&lt;armnn::ClWorkloadFactory, armnn::DataType::Float16&gt;(&amp;factory);</div><div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;}</div><div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;</div><div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;<a class="code" href="_mem_copy_tests_8cpp.xhtml#a3df1acc0ccc35bce0bd6c027e23e2c45">TEST_CASE_FIXTURE</a>(<a class="code" href="struct_cl_context_control_fixture_base.xhtml">ClContextControlFixture</a>, <span class="stringliteral">&quot;IsLayerSupportedFloat32Cl&quot;</span>)</div><div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;{</div><div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;    <a class="code" href="classarmnn_1_1_cl_workload_factory.xhtml">armnn::ClWorkloadFactory</a> factory =</div><div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;        ClWorkloadFactoryHelper::GetFactory(ClWorkloadFactoryHelper::GetMemoryManager());</div><div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;    IsLayerSupportedTests&lt;armnn::ClWorkloadFactory, armnn::DataType::Float32&gt;(&amp;factory);</div><div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;}</div><div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;</div><div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;<a class="code" href="_mem_copy_tests_8cpp.xhtml#a3df1acc0ccc35bce0bd6c027e23e2c45">TEST_CASE_FIXTURE</a>(<a class="code" href="struct_cl_context_control_fixture_base.xhtml">ClContextControlFixture</a>, <span class="stringliteral">&quot;IsLayerSupportedQAsymmU8Cl&quot;</span>)</div><div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;{</div><div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;    <a class="code" href="classarmnn_1_1_cl_workload_factory.xhtml">armnn::ClWorkloadFactory</a> factory =</div><div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;        ClWorkloadFactoryHelper::GetFactory(ClWorkloadFactoryHelper::GetMemoryManager());</div><div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;    IsLayerSupportedTests&lt;armnn::ClWorkloadFactory, armnn::DataType::QAsymmU8&gt;(&amp;factory);</div><div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;}</div><div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;</div><div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;<a class="code" href="_mem_copy_tests_8cpp.xhtml#a3df1acc0ccc35bce0bd6c027e23e2c45">TEST_CASE_FIXTURE</a>(<a class="code" href="struct_cl_context_control_fixture_base.xhtml">ClContextControlFixture</a>, <span class="stringliteral">&quot;IsLayerSupportedQAsymmS8Cl&quot;</span>)</div><div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;{</div><div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;    <a class="code" href="classarmnn_1_1_cl_workload_factory.xhtml">armnn::ClWorkloadFactory</a> factory =</div><div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;        ClWorkloadFactoryHelper::GetFactory(ClWorkloadFactoryHelper::GetMemoryManager());</div><div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;    IsLayerSupportedTests&lt;armnn::ClWorkloadFactory, armnn::DataType::QAsymmS8&gt;(&amp;factory);</div><div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;}</div><div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;</div><div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;<a class="code" href="_mem_copy_tests_8cpp.xhtml#a3df1acc0ccc35bce0bd6c027e23e2c45">TEST_CASE_FIXTURE</a>(<a class="code" href="struct_cl_context_control_fixture_base.xhtml">ClContextControlFixture</a>, <span class="stringliteral">&quot;IsLayerSupportedQSymmS8Cl&quot;</span>)</div><div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;{</div><div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;    <a class="code" href="classarmnn_1_1_cl_workload_factory.xhtml">armnn::ClWorkloadFactory</a> factory =</div><div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;        ClWorkloadFactoryHelper::GetFactory(ClWorkloadFactoryHelper::GetMemoryManager());</div><div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;    IsLayerSupportedTests&lt;armnn::ClWorkloadFactory, armnn::DataType::QSymmS8&gt;(&amp;factory);</div><div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;}</div><div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;</div><div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;<a class="code" href="_mem_copy_tests_8cpp.xhtml#a3df1acc0ccc35bce0bd6c027e23e2c45">TEST_CASE_FIXTURE</a>(<a class="code" href="struct_cl_context_control_fixture_base.xhtml">ClContextControlFixture</a>, <span class="stringliteral">&quot;IsConvertFp16ToFp32SupportedCl&quot;</span>)</div><div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;{</div><div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;    std::string reasonIfUnsupported;</div><div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;</div><div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;    <span class="keywordtype">bool</span> result = IsConvertLayerSupportedTests&lt;<a class="code" href="classarmnn_1_1_cl_workload_factory.xhtml">armnn::ClWorkloadFactory</a>, <a class="code" href="classarmnn_1_1_convert_fp16_to_fp32_layer.xhtml">armnn::ConvertFp16ToFp32Layer</a>,</div><div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;      <a class="code" href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a26e6ed77470c6f2f830ecf874e6c0d55">armnn::DataType::Float16</a>, <a class="code" href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a166495adc0d0f53bee6baecc577f5204">armnn::DataType::Float32</a>&gt;(reasonIfUnsupported);</div><div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;</div><div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;    CHECK(result);</div><div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;}</div><div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;</div><div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;<a class="code" href="_mem_copy_tests_8cpp.xhtml#a3df1acc0ccc35bce0bd6c027e23e2c45">TEST_CASE_FIXTURE</a>(<a class="code" href="struct_cl_context_control_fixture_base.xhtml">ClContextControlFixture</a>, <span class="stringliteral">&quot;IsConvertFp16ToFp32SupportedFp32InputCl&quot;</span>)</div><div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;{</div><div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;    std::string reasonIfUnsupported;</div><div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;</div><div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;    <span class="keywordtype">bool</span> result = IsConvertLayerSupportedTests&lt;<a class="code" href="classarmnn_1_1_cl_workload_factory.xhtml">armnn::ClWorkloadFactory</a>, <a class="code" href="classarmnn_1_1_convert_fp16_to_fp32_layer.xhtml">armnn::ConvertFp16ToFp32Layer</a>,</div><div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;      <a class="code" href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a166495adc0d0f53bee6baecc577f5204">armnn::DataType::Float32</a>, armnn::DataType::Float32&gt;(reasonIfUnsupported);</div><div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;</div><div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;    CHECK(!result);</div><div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;    CHECK_EQ(reasonIfUnsupported, <span class="stringliteral">&quot;Input should be Float16&quot;</span>);</div><div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;}</div><div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;</div><div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;<a class="code" href="_mem_copy_tests_8cpp.xhtml#a3df1acc0ccc35bce0bd6c027e23e2c45">TEST_CASE_FIXTURE</a>(<a class="code" href="struct_cl_context_control_fixture_base.xhtml">ClContextControlFixture</a>, <span class="stringliteral">&quot;IsConvertFp16ToFp32SupportedFp16OutputCl&quot;</span>)</div><div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;{</div><div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;    std::string reasonIfUnsupported;</div><div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;</div><div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;    <span class="keywordtype">bool</span> result = IsConvertLayerSupportedTests&lt;<a class="code" href="classarmnn_1_1_cl_workload_factory.xhtml">armnn::ClWorkloadFactory</a>, <a class="code" href="classarmnn_1_1_convert_fp16_to_fp32_layer.xhtml">armnn::ConvertFp16ToFp32Layer</a>,</div><div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;      <a class="code" href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a26e6ed77470c6f2f830ecf874e6c0d55">armnn::DataType::Float16</a>, armnn::DataType::Float16&gt;(reasonIfUnsupported);</div><div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;</div><div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;    CHECK(!result);</div><div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;    CHECK_EQ(reasonIfUnsupported, <span class="stringliteral">&quot;Output should be Float32&quot;</span>);</div><div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;}</div><div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;</div><div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;<a class="code" href="_mem_copy_tests_8cpp.xhtml#a3df1acc0ccc35bce0bd6c027e23e2c45">TEST_CASE_FIXTURE</a>(<a class="code" href="struct_cl_context_control_fixture_base.xhtml">ClContextControlFixture</a>, <span class="stringliteral">&quot;IsConvertFp32ToFp16SupportedCl&quot;</span>)</div><div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;{</div><div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;    std::string reasonIfUnsupported;</div><div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;</div><div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;    <span class="keywordtype">bool</span> result = IsConvertLayerSupportedTests&lt;<a class="code" href="classarmnn_1_1_cl_workload_factory.xhtml">armnn::ClWorkloadFactory</a>, <a class="code" href="classarmnn_1_1_convert_fp32_to_fp16_layer.xhtml">armnn::ConvertFp32ToFp16Layer</a>,</div><div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;      <a class="code" href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a166495adc0d0f53bee6baecc577f5204">armnn::DataType::Float32</a>, <a class="code" href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a26e6ed77470c6f2f830ecf874e6c0d55">armnn::DataType::Float16</a>&gt;(reasonIfUnsupported);</div><div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;</div><div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;    CHECK(result);</div><div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;}</div><div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;</div><div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;<a class="code" href="_mem_copy_tests_8cpp.xhtml#a3df1acc0ccc35bce0bd6c027e23e2c45">TEST_CASE_FIXTURE</a>(<a class="code" href="struct_cl_context_control_fixture_base.xhtml">ClContextControlFixture</a>, <span class="stringliteral">&quot;IsConvertFp32ToFp16SupportedFp16InputCl&quot;</span>)</div><div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;{</div><div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;    std::string reasonIfUnsupported;</div><div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;</div><div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;    <span class="keywordtype">bool</span> result = IsConvertLayerSupportedTests&lt;<a class="code" href="classarmnn_1_1_cl_workload_factory.xhtml">armnn::ClWorkloadFactory</a>, <a class="code" href="classarmnn_1_1_convert_fp32_to_fp16_layer.xhtml">armnn::ConvertFp32ToFp16Layer</a>,</div><div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;      <a class="code" href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a26e6ed77470c6f2f830ecf874e6c0d55">armnn::DataType::Float16</a>, armnn::DataType::Float16&gt;(reasonIfUnsupported);</div><div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;</div><div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;    CHECK(!result);</div><div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;    CHECK_EQ(reasonIfUnsupported, <span class="stringliteral">&quot;Input should be Float32&quot;</span>);</div><div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;}</div><div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;</div><div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;<a class="code" href="_mem_copy_tests_8cpp.xhtml#a3df1acc0ccc35bce0bd6c027e23e2c45">TEST_CASE_FIXTURE</a>(<a class="code" href="struct_cl_context_control_fixture_base.xhtml">ClContextControlFixture</a>, <span class="stringliteral">&quot;IsConvertFp32ToFp16SupportedFp32OutputCl&quot;</span>)</div><div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;{</div><div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;    std::string reasonIfUnsupported;</div><div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;</div><div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;    <span class="keywordtype">bool</span> result = IsConvertLayerSupportedTests&lt;<a class="code" href="classarmnn_1_1_cl_workload_factory.xhtml">armnn::ClWorkloadFactory</a>, <a class="code" href="classarmnn_1_1_convert_fp32_to_fp16_layer.xhtml">armnn::ConvertFp32ToFp16Layer</a>,</div><div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;      <a class="code" href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a166495adc0d0f53bee6baecc577f5204">armnn::DataType::Float32</a>, armnn::DataType::Float32&gt;(reasonIfUnsupported);</div><div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;</div><div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;    CHECK(!result);</div><div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;    CHECK_EQ(reasonIfUnsupported, <span class="stringliteral">&quot;Output should be Float16&quot;</span>);</div><div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;}</div><div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;</div><div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;<a class="code" href="_mem_copy_tests_8cpp.xhtml#a3df1acc0ccc35bce0bd6c027e23e2c45">TEST_CASE_FIXTURE</a>(<a class="code" href="struct_cl_context_control_fixture_base.xhtml">ClContextControlFixture</a>, <span class="stringliteral">&quot;IsLogicalBinarySupportedCl&quot;</span>)</div><div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;{</div><div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;    std::string reasonIfUnsupported;</div><div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;</div><div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;    <span class="keywordtype">bool</span> result = IsLogicalBinaryLayerSupportedTests&lt;<a class="code" href="classarmnn_1_1_cl_workload_factory.xhtml">armnn::ClWorkloadFactory</a>,</div><div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;      <a class="code" href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a27226c864bac7454a8504f8edb15d95b">armnn::DataType::Boolean</a>, armnn::DataType::Boolean&gt;(reasonIfUnsupported);</div><div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;</div><div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;    CHECK(result);</div><div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;}</div><div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;</div><div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;<a class="code" href="_mem_copy_tests_8cpp.xhtml#a3df1acc0ccc35bce0bd6c027e23e2c45">TEST_CASE_FIXTURE</a>(<a class="code" href="struct_cl_context_control_fixture_base.xhtml">ClContextControlFixture</a>, <span class="stringliteral">&quot;IsLogicalBinaryBroadcastSupportedCl&quot;</span>)</div><div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;{</div><div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;    std::string reasonIfUnsupported;</div><div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;</div><div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;    <span class="keywordtype">bool</span> result = IsLogicalBinaryLayerBroadcastSupportedTests&lt;<a class="code" href="classarmnn_1_1_cl_workload_factory.xhtml">armnn::ClWorkloadFactory</a>,</div><div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;      <a class="code" href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a27226c864bac7454a8504f8edb15d95b">armnn::DataType::Boolean</a>, armnn::DataType::Boolean&gt;(reasonIfUnsupported);</div><div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;</div><div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;    CHECK(result);</div><div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;}</div><div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;</div><div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;<a class="code" href="_mem_copy_tests_8cpp.xhtml#a3df1acc0ccc35bce0bd6c027e23e2c45">TEST_CASE_FIXTURE</a>(<a class="code" href="struct_cl_context_control_fixture_base.xhtml">ClContextControlFixture</a>, <span class="stringliteral">&quot;IsMeanSupportedCl&quot;</span>)</div><div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;{</div><div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;    std::string reasonIfUnsupported;</div><div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;</div><div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;    <span class="keywordtype">bool</span> result = IsMeanLayerSupportedTests&lt;<a class="code" href="classarmnn_1_1_cl_workload_factory.xhtml">armnn::ClWorkloadFactory</a>,</div><div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;      <a class="code" href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a166495adc0d0f53bee6baecc577f5204">armnn::DataType::Float32</a>, armnn::DataType::Float32&gt;(reasonIfUnsupported);</div><div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;</div><div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;    CHECK(result);</div><div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;}</div><div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;</div><div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;TEST_CASE(<span class="stringliteral">&quot;IsConstantSupportedCl&quot;</span>)</div><div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;{</div><div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;    std::string reasonIfUnsupported;</div><div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160;</div><div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;    <span class="keywordtype">bool</span> result = IsConstantLayerSupportedTests&lt;<a class="code" href="classarmnn_1_1_cl_workload_factory.xhtml">armnn::ClWorkloadFactory</a>,</div><div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160;            <a class="code" href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a26e6ed77470c6f2f830ecf874e6c0d55">armnn::DataType::Float16</a>&gt;(reasonIfUnsupported);</div><div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160;    CHECK(result);</div><div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160;</div><div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160;    result = IsConstantLayerSupportedTests&lt;armnn::ClWorkloadFactory,</div><div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160;            <a class="code" href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a166495adc0d0f53bee6baecc577f5204">armnn::DataType::Float32</a>&gt;(reasonIfUnsupported);</div><div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;    CHECK(result);</div><div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160;</div><div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160;    result = IsConstantLayerSupportedTests&lt;armnn::ClWorkloadFactory,</div><div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160;            <a class="code" href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a0a3f57c876f5a230244c38e1453a8a6e">armnn::DataType::QAsymmU8</a>&gt;(reasonIfUnsupported);</div><div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160;    CHECK(result);</div><div class="line"><a name="l00169"></a><span class="lineno">  169</span>&#160;</div><div class="line"><a name="l00170"></a><span class="lineno">  170</span>&#160;    result = IsConstantLayerSupportedTests&lt;armnn::ClWorkloadFactory,</div><div class="line"><a name="l00171"></a><span class="lineno">  171</span>&#160;            <a class="code" href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a27226c864bac7454a8504f8edb15d95b">armnn::DataType::Boolean</a>&gt;(reasonIfUnsupported);</div><div class="line"><a name="l00172"></a><span class="lineno">  172</span>&#160;    CHECK(!result);</div><div class="line"><a name="l00173"></a><span class="lineno">  173</span>&#160;</div><div class="line"><a name="l00174"></a><span class="lineno">  174</span>&#160;    result = IsConstantLayerSupportedTests&lt;armnn::ClWorkloadFactory,</div><div class="line"><a name="l00175"></a><span class="lineno">  175</span>&#160;            <a class="code" href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a053c769dcf82d66ef326c86980c02ba7">armnn::DataType::QSymmS16</a>&gt;(reasonIfUnsupported);</div><div class="line"><a name="l00176"></a><span class="lineno">  176</span>&#160;    CHECK(result);</div><div class="line"><a name="l00177"></a><span class="lineno">  177</span>&#160;</div><div class="line"><a name="l00178"></a><span class="lineno">  178</span>&#160;    result = IsConstantLayerSupportedTests&lt;armnn::ClWorkloadFactory,</div><div class="line"><a name="l00179"></a><span class="lineno">  179</span>&#160;            <a class="code" href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a9945327825b115e93a3b89f4302e76db">armnn::DataType::QSymmS8</a>&gt;(reasonIfUnsupported);</div><div class="line"><a name="l00180"></a><span class="lineno">  180</span>&#160;    CHECK(result);</div><div class="line"><a name="l00181"></a><span class="lineno">  181</span>&#160;</div><div class="line"><a name="l00182"></a><span class="lineno">  182</span>&#160;    result = IsConstantLayerSupportedTests&lt;armnn::ClWorkloadFactory,</div><div class="line"><a name="l00183"></a><span class="lineno">  183</span>&#160;            <a class="code" href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a9d02ea768c081d4bdb2b7cab0b3f510d">armnn::DataType::QAsymmS8</a>&gt;(reasonIfUnsupported);</div><div class="line"><a name="l00184"></a><span class="lineno">  184</span>&#160;    CHECK(result);</div><div class="line"><a name="l00185"></a><span class="lineno">  185</span>&#160;</div><div class="line"><a name="l00186"></a><span class="lineno">  186</span>&#160;    result = IsConstantLayerSupportedTests&lt;armnn::ClWorkloadFactory,</div><div class="line"><a name="l00187"></a><span class="lineno">  187</span>&#160;            <a class="code" href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6acdb56b2d2f73c26480207524f2dbe0af">armnn::DataType::BFloat16</a>&gt;(reasonIfUnsupported);</div><div class="line"><a name="l00188"></a><span class="lineno">  188</span>&#160;    CHECK(!result);</div><div class="line"><a name="l00189"></a><span class="lineno">  189</span>&#160;}</div><div class="line"><a name="l00190"></a><span class="lineno">  190</span>&#160;</div><div class="line"><a name="l00191"></a><span class="lineno">  191</span>&#160;}</div><div class="ttc" id="classarmnn_1_1_cl_workload_factory_xhtml"><div class="ttname"><a href="classarmnn_1_1_cl_workload_factory.xhtml">armnn::ClWorkloadFactory</a></div><div class="ttdef"><b>Definition:</b> <a href="_cl_workload_factory_8hpp_source.xhtml#l00021">ClWorkloadFactory.hpp:21</a></div></div>
<div class="ttc" id="namespacearmnn_xhtml_ad8ed01ff3ff33333d8e19db4d2818bb6a27226c864bac7454a8504f8edb15d95b"><div class="ttname"><a href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a27226c864bac7454a8504f8edb15d95b">armnn::DataType::Boolean</a></div></div>
<div class="ttc" id="classarmnn_1_1_convert_fp16_to_fp32_layer_xhtml"><div class="ttname"><a href="classarmnn_1_1_convert_fp16_to_fp32_layer.xhtml">armnn::ConvertFp16ToFp32Layer</a></div><div class="ttdoc">This layer converts data type Float 16 to Float 32. </div><div class="ttdef"><b>Definition:</b> <a href="_convert_fp16_to_fp32_layer_8hpp_source.xhtml#l00014">ConvertFp16ToFp32Layer.hpp:14</a></div></div>
<div class="ttc" id="namespacearmnn_xhtml_ad8ed01ff3ff33333d8e19db4d2818bb6a9d02ea768c081d4bdb2b7cab0b3f510d"><div class="ttname"><a href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a9d02ea768c081d4bdb2b7cab0b3f510d">armnn::DataType::QAsymmS8</a></div></div>
<div class="ttc" id="namespacearmnn_xhtml_ad8ed01ff3ff33333d8e19db4d2818bb6a053c769dcf82d66ef326c86980c02ba7"><div class="ttname"><a href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a053c769dcf82d66ef326c86980c02ba7">armnn::DataType::QSymmS16</a></div></div>
<div class="ttc" id="_mem_copy_tests_8cpp_xhtml_a3df1acc0ccc35bce0bd6c027e23e2c45"><div class="ttname"><a href="_mem_copy_tests_8cpp.xhtml#a3df1acc0ccc35bce0bd6c027e23e2c45">TEST_CASE_FIXTURE</a></div><div class="ttdeci">TEST_CASE_FIXTURE(ClContextControlFixture, &quot;CopyBetweenNeonAndGpu&quot;)</div><div class="ttdef"><b>Definition:</b> <a href="_mem_copy_tests_8cpp_source.xhtml#l00089">MemCopyTests.cpp:89</a></div></div>
<div class="ttc" id="namespacearmnn_xhtml_ad8ed01ff3ff33333d8e19db4d2818bb6a0a3f57c876f5a230244c38e1453a8a6e"><div class="ttname"><a href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a0a3f57c876f5a230244c38e1453a8a6e">armnn::DataType::QAsymmU8</a></div></div>
<div class="ttc" id="namespacearmnn_xhtml_ad8ed01ff3ff33333d8e19db4d2818bb6a26e6ed77470c6f2f830ecf874e6c0d55"><div class="ttname"><a href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a26e6ed77470c6f2f830ecf874e6c0d55">armnn::DataType::Float16</a></div></div>
<div class="ttc" id="namespacearmnn_xhtml_ad8ed01ff3ff33333d8e19db4d2818bb6acdb56b2d2f73c26480207524f2dbe0af"><div class="ttname"><a href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6acdb56b2d2f73c26480207524f2dbe0af">armnn::DataType::BFloat16</a></div></div>
<div class="ttc" id="classarmnn_1_1_convert_fp32_to_fp16_layer_xhtml"><div class="ttname"><a href="classarmnn_1_1_convert_fp32_to_fp16_layer.xhtml">armnn::ConvertFp32ToFp16Layer</a></div><div class="ttdoc">This layer converts data type Float 32 to Float 16. </div><div class="ttdef"><b>Definition:</b> <a href="_convert_fp32_to_fp16_layer_8hpp_source.xhtml#l00013">ConvertFp32ToFp16Layer.hpp:13</a></div></div>
<div class="ttc" id="namespacearmnn_xhtml_ad8ed01ff3ff33333d8e19db4d2818bb6a166495adc0d0f53bee6baecc577f5204"><div class="ttname"><a href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a166495adc0d0f53bee6baecc577f5204">armnn::DataType::Float32</a></div></div>
<div class="ttc" id="namespacearmnn_xhtml_ad8ed01ff3ff33333d8e19db4d2818bb6a9945327825b115e93a3b89f4302e76db"><div class="ttname"><a href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a9945327825b115e93a3b89f4302e76db">armnn::DataType::QSymmS8</a></div></div>
<div class="ttc" id="struct_cl_context_control_fixture_base_xhtml"><div class="ttname"><a href="struct_cl_context_control_fixture_base.xhtml">ClContextControlFixtureBase</a></div><div class="ttdef"><b>Definition:</b> <a href="_cl_context_control_fixture_8hpp_source.xhtml#l00012">ClContextControlFixture.hpp:12</a></div></div>
</div><!-- fragment -->
</div>
</div>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="dir_68267d1309a1af8e8297ef4c3efbcdba.xhtml">src</a></li><li class="navelem"><a class="el" href="dir_0f3cdec46afbc61a1ded8e1687c9c9a0.xhtml">backends</a></li><li class="navelem"><a class="el" href="dir_1ad86c6d39ab715a831555571b9e98a5.xhtml">cl</a></li><li class="navelem"><a class="el" href="dir_02bab2737bbb2fb3882a0be567244fbf.xhtml">test</a></li><li class="navelem"><a class="el" href="_cl_layer_support_tests_8cpp.xhtml">ClLayerSupportTests.cpp</a></li>
    <li class="footer">Generated on Fri Jun 17 2022 13:20:27 for ArmNN by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.13 </li>
  </ul>
</div>
</body>
</html>
