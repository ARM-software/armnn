<!-- Copyright (c) 2020 ARM Limited. -->
<!--                                 -->
<!-- SPDX-License-Identifier: MIT    -->
<!--                                 -->
<!-- HTML header for doxygen 1.8.13-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.13"/>
<meta name="robots" content="NOINDEX, NOFOLLOW" />
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>ArmNN: src/backends/neon/workloads/NeonQuantizedLstmWorkload.cpp Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script><script type="text/javascript" src="http://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="stylesheet.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <img alt="ArmNN" src="Arm_NN_horizontal_blue.png" style="max-width: 10rem; margin-top: .5rem; margin-left 10px"/>
  <td style="padding-left: 0.5em;">
   <div id="projectname">
   &#160;<span id="projectnumber">22.05.01</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.13 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
$(document).ready(function(){initNavTree('_neon_quantized_lstm_workload_8cpp_source.xhtml','');});
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="headertitle">
<div class="title">NeonQuantizedLstmWorkload.cpp</div>  </div>
</div><!--header-->
<div class="contents">
<a href="_neon_quantized_lstm_workload_8cpp.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="comment">//</span></div><div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="comment">// Copyright Â© 2017 Arm Ltd and Contributors. All rights reserved.</span></div><div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="comment">// SPDX-License-Identifier: MIT</span></div><div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="comment">//</span></div><div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;</div><div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_neon_quantized_lstm_workload_8hpp.xhtml">NeonQuantizedLstmWorkload.hpp</a>&quot;</span></div><div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_neon_workload_utils_8hpp.xhtml">NeonWorkloadUtils.hpp</a>&quot;</span></div><div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;</div><div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="preprocessor">#include &lt;<a class="code" href="_arm_compute_tensor_utils_8hpp.xhtml">aclCommon/ArmComputeTensorUtils.hpp</a>&gt;</span></div><div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="preprocessor">#include &lt;<a class="code" href="include_2armnn_2backends_2_tensor_handle_8hpp.xhtml">armnn/backends/TensorHandle.hpp</a>&gt;</span></div><div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;<span class="preprocessor">#include &lt;<a class="code" href="_neon_tensor_handle_8hpp.xhtml">neon/NeonTensorHandle.hpp</a>&gt;</span></div><div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;</div><div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;<span class="keyword">namespace </span><a class="code" href="namespacearmnn.xhtml">armnn</a></div><div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;{</div><div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;<span class="keyword">using namespace </span>armcomputetensorutils;</div><div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;</div><div class="line"><a name="l00017"></a><span class="lineno"><a class="line" href="classarmnn_1_1_neon_quantized_lstm_workload.xhtml#a22b3f0c6bd6ac4987c47b90521b82e57">   17</a></span>&#160;<a class="code" href="classarmnn_1_1_neon_quantized_lstm_workload.xhtml#a22b3f0c6bd6ac4987c47b90521b82e57">NeonQuantizedLstmWorkload::NeonQuantizedLstmWorkload</a>(<span class="keyword">const</span> <a class="code" href="structarmnn_1_1_quantized_lstm_queue_descriptor.xhtml">QuantizedLstmQueueDescriptor</a> &amp;descriptor,</div><div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;                                                     <span class="keyword">const</span> <a class="code" href="structarmnn_1_1_workload_info.xhtml">WorkloadInfo</a> &amp;<a class="code" href="namespacearmnn.xhtml#a4dc0adc6737b5944e7671bee71788407acaf9b6b99962bf5c2264824231d7a40c">info</a>)</div><div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;        : <a class="code" href="classarmnn_1_1_neon_base_workload.xhtml">NeonBaseWorkload</a>&lt;<a class="code" href="structarmnn_1_1_quantized_lstm_queue_descriptor.xhtml">QuantizedLstmQueueDescriptor</a>&gt;(descriptor, info)</div><div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;{</div><div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;    <span class="comment">// Basic parameters</span></div><div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;    m_InputToInputWeightsTensor = std::make_unique&lt;arm_compute::Tensor&gt;();</div><div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;    BuildArmComputeTensor(*m_InputToInputWeightsTensor, <a class="code" href="classarmnn_1_1_base_workload.xhtml#afb8d2c8817c75de9d01a4c0e0d5c160b">m_Data</a>.<a class="code" href="structarmnn_1_1_quantized_lstm_queue_descriptor.xhtml#ab160eba2493d5fe52185c0986dcb190c">m_InputToInputWeights</a>-&gt;<a class="code" href="classarmnn_1_1_const_tensor_handle.xhtml#a66e8f43a5b42b500871ed96e15419567">GetTensorInfo</a>());</div><div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;</div><div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;    m_InputToForgetWeightsTensor = std::make_unique&lt;arm_compute::Tensor&gt;();</div><div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;    BuildArmComputeTensor(*m_InputToForgetWeightsTensor, <a class="code" href="classarmnn_1_1_base_workload.xhtml#afb8d2c8817c75de9d01a4c0e0d5c160b">m_Data</a>.<a class="code" href="structarmnn_1_1_quantized_lstm_queue_descriptor.xhtml#aab77f54a037658ca9b2bf9cc8a1fadf1">m_InputToForgetWeights</a>-&gt;<a class="code" href="classarmnn_1_1_const_tensor_handle.xhtml#a66e8f43a5b42b500871ed96e15419567">GetTensorInfo</a>());</div><div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;</div><div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;    m_InputToCellWeightsTensor = std::make_unique&lt;arm_compute::Tensor&gt;();</div><div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;    BuildArmComputeTensor(*m_InputToCellWeightsTensor, <a class="code" href="classarmnn_1_1_base_workload.xhtml#afb8d2c8817c75de9d01a4c0e0d5c160b">m_Data</a>.<a class="code" href="structarmnn_1_1_quantized_lstm_queue_descriptor.xhtml#a841439e3b8dc157a7368b19c9ecb7d03">m_InputToCellWeights</a>-&gt;<a class="code" href="classarmnn_1_1_const_tensor_handle.xhtml#a66e8f43a5b42b500871ed96e15419567">GetTensorInfo</a>());</div><div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;</div><div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;    m_InputToOutputWeightsTensor = std::make_unique&lt;arm_compute::Tensor&gt;();</div><div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;    BuildArmComputeTensor(*m_InputToOutputWeightsTensor, <a class="code" href="classarmnn_1_1_base_workload.xhtml#afb8d2c8817c75de9d01a4c0e0d5c160b">m_Data</a>.<a class="code" href="structarmnn_1_1_quantized_lstm_queue_descriptor.xhtml#a17ba1c8bcc71a55a95b2a3913f8cb203">m_InputToOutputWeights</a>-&gt;<a class="code" href="classarmnn_1_1_const_tensor_handle.xhtml#a66e8f43a5b42b500871ed96e15419567">GetTensorInfo</a>());</div><div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;</div><div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;    m_RecurrentToInputWeightsTensor = std::make_unique&lt;arm_compute::Tensor&gt;();</div><div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;    BuildArmComputeTensor(*m_RecurrentToInputWeightsTensor, <a class="code" href="classarmnn_1_1_base_workload.xhtml#afb8d2c8817c75de9d01a4c0e0d5c160b">m_Data</a>.<a class="code" href="structarmnn_1_1_quantized_lstm_queue_descriptor.xhtml#a299587d4f3fca029492700f3e2585bd8">m_RecurrentToInputWeights</a>-&gt;<a class="code" href="classarmnn_1_1_const_tensor_handle.xhtml#a66e8f43a5b42b500871ed96e15419567">GetTensorInfo</a>());</div><div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;</div><div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;    m_RecurrentToForgetWeightsTensor = std::make_unique&lt;arm_compute::Tensor&gt;();</div><div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;    BuildArmComputeTensor(*m_RecurrentToForgetWeightsTensor, <a class="code" href="classarmnn_1_1_base_workload.xhtml#afb8d2c8817c75de9d01a4c0e0d5c160b">m_Data</a>.<a class="code" href="structarmnn_1_1_quantized_lstm_queue_descriptor.xhtml#adf8571dd1867ee91082bd005f94f2610">m_RecurrentToForgetWeights</a>-&gt;<a class="code" href="classarmnn_1_1_const_tensor_handle.xhtml#a66e8f43a5b42b500871ed96e15419567">GetTensorInfo</a>());</div><div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;</div><div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;    m_RecurrentToCellWeightsTensor = std::make_unique&lt;arm_compute::Tensor&gt;();</div><div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;    BuildArmComputeTensor(*m_RecurrentToCellWeightsTensor, <a class="code" href="classarmnn_1_1_base_workload.xhtml#afb8d2c8817c75de9d01a4c0e0d5c160b">m_Data</a>.<a class="code" href="structarmnn_1_1_quantized_lstm_queue_descriptor.xhtml#ac18c8b8b2039267d8282e91b4162d8aa">m_RecurrentToCellWeights</a>-&gt;<a class="code" href="classarmnn_1_1_const_tensor_handle.xhtml#a66e8f43a5b42b500871ed96e15419567">GetTensorInfo</a>());</div><div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;</div><div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;    m_RecurrentToOutputWeightsTensor = std::make_unique&lt;arm_compute::Tensor&gt;();</div><div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;    BuildArmComputeTensor(*m_RecurrentToOutputWeightsTensor, <a class="code" href="classarmnn_1_1_base_workload.xhtml#afb8d2c8817c75de9d01a4c0e0d5c160b">m_Data</a>.<a class="code" href="structarmnn_1_1_quantized_lstm_queue_descriptor.xhtml#a4c27716f61bb68e8ea0bd4e8389ba01a">m_RecurrentToOutputWeights</a>-&gt;<a class="code" href="classarmnn_1_1_const_tensor_handle.xhtml#a66e8f43a5b42b500871ed96e15419567">GetTensorInfo</a>());</div><div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;</div><div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;    m_InputGateBiasTensor = std::make_unique&lt;arm_compute::Tensor&gt;();</div><div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;    BuildArmComputeTensor(*m_InputGateBiasTensor, <a class="code" href="classarmnn_1_1_base_workload.xhtml#afb8d2c8817c75de9d01a4c0e0d5c160b">m_Data</a>.<a class="code" href="structarmnn_1_1_quantized_lstm_queue_descriptor.xhtml#a44eb7524badcca9b2073359e3814c98b">m_InputGateBias</a>-&gt;<a class="code" href="classarmnn_1_1_const_tensor_handle.xhtml#a66e8f43a5b42b500871ed96e15419567">GetTensorInfo</a>());</div><div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;</div><div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;    m_ForgetGateBiasTensor = std::make_unique&lt;arm_compute::Tensor&gt;();</div><div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;    BuildArmComputeTensor(*m_ForgetGateBiasTensor, <a class="code" href="classarmnn_1_1_base_workload.xhtml#afb8d2c8817c75de9d01a4c0e0d5c160b">m_Data</a>.<a class="code" href="structarmnn_1_1_quantized_lstm_queue_descriptor.xhtml#a29fa293fffbf9c6f00cd75db1dc0a52a">m_ForgetGateBias</a>-&gt;<a class="code" href="classarmnn_1_1_const_tensor_handle.xhtml#a66e8f43a5b42b500871ed96e15419567">GetTensorInfo</a>());</div><div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;</div><div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;    m_CellBiasTensor = std::make_unique&lt;arm_compute::Tensor&gt;();</div><div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;    BuildArmComputeTensor(*m_CellBiasTensor, <a class="code" href="classarmnn_1_1_base_workload.xhtml#afb8d2c8817c75de9d01a4c0e0d5c160b">m_Data</a>.<a class="code" href="structarmnn_1_1_quantized_lstm_queue_descriptor.xhtml#a6e9593869b82984de198fed27f72cdcf">m_CellBias</a>-&gt;<a class="code" href="classarmnn_1_1_const_tensor_handle.xhtml#a66e8f43a5b42b500871ed96e15419567">GetTensorInfo</a>());</div><div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;</div><div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;    m_OutputGateBiasTensor = std::make_unique&lt;arm_compute::Tensor&gt;();</div><div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;    BuildArmComputeTensor(*m_OutputGateBiasTensor, <a class="code" href="classarmnn_1_1_base_workload.xhtml#afb8d2c8817c75de9d01a4c0e0d5c160b">m_Data</a>.<a class="code" href="structarmnn_1_1_quantized_lstm_queue_descriptor.xhtml#a5ff4158b1b363b898d0da04c42d37ce0">m_OutputGateBias</a>-&gt;<a class="code" href="classarmnn_1_1_const_tensor_handle.xhtml#a66e8f43a5b42b500871ed96e15419567">GetTensorInfo</a>());</div><div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;</div><div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;    <span class="keyword">const</span> arm_compute::ITensor&amp; input           = <span class="keyword">static_cast&lt;</span><a class="code" href="classarmnn_1_1_i_acl_tensor_handle.xhtml">IAclTensorHandle</a>*<span class="keyword">&gt;</span>(<a class="code" href="classarmnn_1_1_base_workload.xhtml#afb8d2c8817c75de9d01a4c0e0d5c160b">m_Data</a>.<a class="code" href="structarmnn_1_1_queue_descriptor.xhtml#a4b50e46a6810018f3edecfb68b2a76b3">m_Inputs</a>[0])-&gt;GetTensor();</div><div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;    arm_compute::ITensor&amp; cell_state_in         = <span class="keyword">static_cast&lt;</span><a class="code" href="classarmnn_1_1_i_acl_tensor_handle.xhtml">IAclTensorHandle</a>*<span class="keyword">&gt;</span>(<a class="code" href="classarmnn_1_1_base_workload.xhtml#afb8d2c8817c75de9d01a4c0e0d5c160b">m_Data</a>.<a class="code" href="structarmnn_1_1_queue_descriptor.xhtml#a4b50e46a6810018f3edecfb68b2a76b3">m_Inputs</a>[1])-&gt;GetTensor();</div><div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;    <span class="keyword">const</span> arm_compute::ITensor&amp; output_state_in = <span class="keyword">static_cast&lt;</span><a class="code" href="classarmnn_1_1_i_acl_tensor_handle.xhtml">IAclTensorHandle</a>*<span class="keyword">&gt;</span>(<a class="code" href="classarmnn_1_1_base_workload.xhtml#afb8d2c8817c75de9d01a4c0e0d5c160b">m_Data</a>.<a class="code" href="structarmnn_1_1_queue_descriptor.xhtml#a4b50e46a6810018f3edecfb68b2a76b3">m_Inputs</a>[2])-&gt;GetTensor();</div><div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;</div><div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;    arm_compute::ITensor&amp; cell_state_out        = <span class="keyword">static_cast&lt;</span><a class="code" href="classarmnn_1_1_i_acl_tensor_handle.xhtml">IAclTensorHandle</a>*<span class="keyword">&gt;</span>(<a class="code" href="classarmnn_1_1_base_workload.xhtml#afb8d2c8817c75de9d01a4c0e0d5c160b">m_Data</a>.<a class="code" href="structarmnn_1_1_queue_descriptor.xhtml#a6abd491bb99ffe88bd472c1ae5a1ed1a">m_Outputs</a>[0])-&gt;GetTensor();</div><div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;    arm_compute::ITensor&amp; output_state_out      = <span class="keyword">static_cast&lt;</span><a class="code" href="classarmnn_1_1_i_acl_tensor_handle.xhtml">IAclTensorHandle</a>*<span class="keyword">&gt;</span>(<a class="code" href="classarmnn_1_1_base_workload.xhtml#afb8d2c8817c75de9d01a4c0e0d5c160b">m_Data</a>.<a class="code" href="structarmnn_1_1_queue_descriptor.xhtml#a6abd491bb99ffe88bd472c1ae5a1ed1a">m_Outputs</a>[1])-&gt;GetTensor();</div><div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;</div><div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;    m_QuantizedLstmLayer.configure(&amp;input,</div><div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;                                   m_InputToInputWeightsTensor.get(),</div><div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;                                   m_InputToForgetWeightsTensor.get(),</div><div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;                                   m_InputToCellWeightsTensor.get(),</div><div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;                                   m_InputToOutputWeightsTensor.get(),</div><div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;                                   m_RecurrentToInputWeightsTensor.get(),</div><div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;                                   m_RecurrentToForgetWeightsTensor.get(),</div><div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;                                   m_RecurrentToCellWeightsTensor.get(),</div><div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;                                   m_RecurrentToOutputWeightsTensor.get(),</div><div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;                                   m_InputGateBiasTensor.get(),</div><div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;                                   m_ForgetGateBiasTensor.get(),</div><div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;                                   m_CellBiasTensor.get(),</div><div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;                                   m_OutputGateBiasTensor.get(),</div><div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;                                   &amp;cell_state_in,</div><div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;                                   &amp;output_state_in,</div><div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;                                   &amp;cell_state_out,</div><div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;                                   &amp;output_state_out);</div><div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;</div><div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;    <a class="code" href="namespacearmnn.xhtml#acf8e1f43fc13cf7603564cc15743fce2">InitializeArmComputeTensorData</a>(*m_InputToInputWeightsTensor,</div><div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;                                   <a class="code" href="classarmnn_1_1_base_workload.xhtml#afb8d2c8817c75de9d01a4c0e0d5c160b">m_Data</a>.<a class="code" href="structarmnn_1_1_quantized_lstm_queue_descriptor.xhtml#ab160eba2493d5fe52185c0986dcb190c">m_InputToInputWeights</a>);</div><div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;</div><div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;    <a class="code" href="namespacearmnn.xhtml#acf8e1f43fc13cf7603564cc15743fce2">InitializeArmComputeTensorData</a>(*m_InputToForgetWeightsTensor,</div><div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;                                   <a class="code" href="classarmnn_1_1_base_workload.xhtml#afb8d2c8817c75de9d01a4c0e0d5c160b">m_Data</a>.<a class="code" href="structarmnn_1_1_quantized_lstm_queue_descriptor.xhtml#aab77f54a037658ca9b2bf9cc8a1fadf1">m_InputToForgetWeights</a>);</div><div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;</div><div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;    <a class="code" href="namespacearmnn.xhtml#acf8e1f43fc13cf7603564cc15743fce2">InitializeArmComputeTensorData</a>(*m_InputToCellWeightsTensor,</div><div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;                                   <a class="code" href="classarmnn_1_1_base_workload.xhtml#afb8d2c8817c75de9d01a4c0e0d5c160b">m_Data</a>.<a class="code" href="structarmnn_1_1_quantized_lstm_queue_descriptor.xhtml#a841439e3b8dc157a7368b19c9ecb7d03">m_InputToCellWeights</a>);</div><div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;</div><div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;    <a class="code" href="namespacearmnn.xhtml#acf8e1f43fc13cf7603564cc15743fce2">InitializeArmComputeTensorData</a>(*m_InputToOutputWeightsTensor,</div><div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;                                   <a class="code" href="classarmnn_1_1_base_workload.xhtml#afb8d2c8817c75de9d01a4c0e0d5c160b">m_Data</a>.<a class="code" href="structarmnn_1_1_quantized_lstm_queue_descriptor.xhtml#a17ba1c8bcc71a55a95b2a3913f8cb203">m_InputToOutputWeights</a>);</div><div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;</div><div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;    <a class="code" href="namespacearmnn.xhtml#acf8e1f43fc13cf7603564cc15743fce2">InitializeArmComputeTensorData</a>(*m_RecurrentToInputWeightsTensor,</div><div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;                                   <a class="code" href="classarmnn_1_1_base_workload.xhtml#afb8d2c8817c75de9d01a4c0e0d5c160b">m_Data</a>.<a class="code" href="structarmnn_1_1_quantized_lstm_queue_descriptor.xhtml#a299587d4f3fca029492700f3e2585bd8">m_RecurrentToInputWeights</a>);</div><div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;</div><div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;    <a class="code" href="namespacearmnn.xhtml#acf8e1f43fc13cf7603564cc15743fce2">InitializeArmComputeTensorData</a>(*m_RecurrentToForgetWeightsTensor,</div><div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;                                   <a class="code" href="classarmnn_1_1_base_workload.xhtml#afb8d2c8817c75de9d01a4c0e0d5c160b">m_Data</a>.<a class="code" href="structarmnn_1_1_quantized_lstm_queue_descriptor.xhtml#adf8571dd1867ee91082bd005f94f2610">m_RecurrentToForgetWeights</a>);</div><div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;</div><div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;    <a class="code" href="namespacearmnn.xhtml#acf8e1f43fc13cf7603564cc15743fce2">InitializeArmComputeTensorData</a>(*m_RecurrentToCellWeightsTensor,</div><div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;                                   <a class="code" href="classarmnn_1_1_base_workload.xhtml#afb8d2c8817c75de9d01a4c0e0d5c160b">m_Data</a>.<a class="code" href="structarmnn_1_1_quantized_lstm_queue_descriptor.xhtml#ac18c8b8b2039267d8282e91b4162d8aa">m_RecurrentToCellWeights</a>);</div><div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;</div><div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;    <a class="code" href="namespacearmnn.xhtml#acf8e1f43fc13cf7603564cc15743fce2">InitializeArmComputeTensorData</a>(*m_RecurrentToOutputWeightsTensor,</div><div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;                                   <a class="code" href="classarmnn_1_1_base_workload.xhtml#afb8d2c8817c75de9d01a4c0e0d5c160b">m_Data</a>.<a class="code" href="structarmnn_1_1_quantized_lstm_queue_descriptor.xhtml#a4c27716f61bb68e8ea0bd4e8389ba01a">m_RecurrentToOutputWeights</a>);</div><div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;</div><div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;    <a class="code" href="namespacearmnn.xhtml#acf8e1f43fc13cf7603564cc15743fce2">InitializeArmComputeTensorData</a>(*m_InputGateBiasTensor,</div><div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;                                   <a class="code" href="classarmnn_1_1_base_workload.xhtml#afb8d2c8817c75de9d01a4c0e0d5c160b">m_Data</a>.<a class="code" href="structarmnn_1_1_quantized_lstm_queue_descriptor.xhtml#a44eb7524badcca9b2073359e3814c98b">m_InputGateBias</a>);</div><div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;</div><div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;    <a class="code" href="namespacearmnn.xhtml#acf8e1f43fc13cf7603564cc15743fce2">InitializeArmComputeTensorData</a>(*m_ForgetGateBiasTensor,</div><div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;                                   <a class="code" href="classarmnn_1_1_base_workload.xhtml#afb8d2c8817c75de9d01a4c0e0d5c160b">m_Data</a>.<a class="code" href="structarmnn_1_1_quantized_lstm_queue_descriptor.xhtml#a29fa293fffbf9c6f00cd75db1dc0a52a">m_ForgetGateBias</a>);</div><div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;</div><div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;    <a class="code" href="namespacearmnn.xhtml#acf8e1f43fc13cf7603564cc15743fce2">InitializeArmComputeTensorData</a>(*m_CellBiasTensor,</div><div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;                                   <a class="code" href="classarmnn_1_1_base_workload.xhtml#afb8d2c8817c75de9d01a4c0e0d5c160b">m_Data</a>.<a class="code" href="structarmnn_1_1_quantized_lstm_queue_descriptor.xhtml#a6e9593869b82984de198fed27f72cdcf">m_CellBias</a>);</div><div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;</div><div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;    <a class="code" href="namespacearmnn.xhtml#acf8e1f43fc13cf7603564cc15743fce2">InitializeArmComputeTensorData</a>(*m_OutputGateBiasTensor,</div><div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;                                   <a class="code" href="classarmnn_1_1_base_workload.xhtml#afb8d2c8817c75de9d01a4c0e0d5c160b">m_Data</a>.<a class="code" href="structarmnn_1_1_quantized_lstm_queue_descriptor.xhtml#a5ff4158b1b363b898d0da04c42d37ce0">m_OutputGateBias</a>);</div><div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;</div><div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;    <span class="comment">// Force Compute Library to perform the necessary copying and reshaping, after which</span></div><div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;    <span class="comment">// delete all the input tensors that will no longer be needed</span></div><div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;    m_QuantizedLstmLayer.prepare();</div><div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;    FreeUnusedTensors();</div><div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;}</div><div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;</div><div class="line"><a name="l00125"></a><span class="lineno"><a class="line" href="classarmnn_1_1_neon_quantized_lstm_workload.xhtml#ae071e8822437c78baea75c3aef3a263a">  125</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="classarmnn_1_1_neon_quantized_lstm_workload.xhtml#ae071e8822437c78baea75c3aef3a263a">NeonQuantizedLstmWorkload::Execute</a>()<span class="keyword"> const</span></div><div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;<span class="keyword"></span>{</div><div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;    <a class="code" href="_neon_workload_utils_8hpp.xhtml#a9165e41bcaf1b90f9ff91ef681e88c4f">ARMNN_SCOPED_PROFILING_EVENT_NEON_GUID</a>(<span class="stringliteral">&quot;NeonQuantizedLstmWorkload_Execute&quot;</span>, this-&gt;<a class="code" href="classarmnn_1_1_base_workload.xhtml#aaff95a48875d8fb4a616352906660ca9">GetGuid</a>());</div><div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;    m_QuantizedLstmLayer.run();</div><div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;}</div><div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;</div><div class="line"><a name="l00131"></a><span class="lineno"><a class="line" href="namespacearmnn.xhtml#ae83632e641892ad2de78f316376f6bd0">  131</a></span>&#160;<a class="code" href="namespacearmnn.xhtml#a67a0db04d321a74b7e7fcfd3f1a3f70b">arm_compute::Status</a> <a class="code" href="namespacearmnn.xhtml#ae83632e641892ad2de78f316376f6bd0">NeonQuantizedLstmWorkloadValidate</a>(<span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a>&amp; input,</div><div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;                                                      <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a>&amp; cellStateIn,</div><div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;                                                      <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a>&amp; outputStateIn,</div><div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;                                                      <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a>&amp; cellStateOut,</div><div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;                                                      <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a>&amp; outputStateOut,</div><div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;                                                      <span class="keyword">const</span> <a class="code" href="structarmnn_1_1_quantized_lstm_input_params_info.xhtml">QuantizedLstmInputParamsInfo</a>&amp; paramsInfo)</div><div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;{</div><div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;    <span class="comment">// The inputs and outputs</span></div><div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;    <span class="keyword">const</span> arm_compute::TensorInfo aclInputInfo          = BuildArmComputeTensorInfo(input);</div><div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;    <span class="keyword">const</span> arm_compute::TensorInfo aclCellStateInInfo    = BuildArmComputeTensorInfo(cellStateIn);</div><div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;    <span class="keyword">const</span> arm_compute::TensorInfo aclOutputStateInInfo  = BuildArmComputeTensorInfo(outputStateIn);</div><div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;    <span class="keyword">const</span> arm_compute::TensorInfo aclCellStateOutInfo   = BuildArmComputeTensorInfo(cellStateOut);</div><div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;    <span class="keyword">const</span> arm_compute::TensorInfo aclOutputStateOutInfo = BuildArmComputeTensorInfo(outputStateOut);</div><div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;</div><div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;    <span class="comment">// Basic parameters</span></div><div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;    <span class="keyword">const</span> arm_compute::TensorInfo aclInputToInputWeightsInfo</div><div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;                                  = BuildArmComputeTensorInfo(paramsInfo.<a class="code" href="structarmnn_1_1_quantized_lstm_input_params_info.xhtml#afa2b04197a764428a8c3a648de8058fc">GetInputToInputWeights</a>());</div><div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;    <span class="keyword">const</span> arm_compute::TensorInfo aclInputToForgetWeightsInfo</div><div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;                                  = BuildArmComputeTensorInfo(paramsInfo.<a class="code" href="structarmnn_1_1_quantized_lstm_input_params_info.xhtml#a7dac08f19a1b235d5256d39136848a09">GetInputToForgetWeights</a>());</div><div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;    <span class="keyword">const</span> arm_compute::TensorInfo aclInputToCellWeightsInfo</div><div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;                                  = BuildArmComputeTensorInfo(paramsInfo.<a class="code" href="structarmnn_1_1_quantized_lstm_input_params_info.xhtml#a3b3c26330a05bf4ea40f8a6b402be354">GetInputToCellWeights</a>());</div><div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;    <span class="keyword">const</span> arm_compute::TensorInfo aclInputToOutputWeightsInfo</div><div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;                                  = BuildArmComputeTensorInfo(paramsInfo.<a class="code" href="structarmnn_1_1_quantized_lstm_input_params_info.xhtml#a800adf0f61e84d706060f63037c1a336">GetInputToOutputWeights</a>());</div><div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;</div><div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;    <span class="keyword">const</span> arm_compute::TensorInfo aclRecurrentToInputWeightsInfo</div><div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;                                  = BuildArmComputeTensorInfo(paramsInfo.<a class="code" href="structarmnn_1_1_quantized_lstm_input_params_info.xhtml#ad159f9edbddeeb6cf6ff0ba042481ba8">GetRecurrentToInputWeights</a>());</div><div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160;    <span class="keyword">const</span> arm_compute::TensorInfo aclRecurrentToForgetWeightsInfo</div><div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;                                  = BuildArmComputeTensorInfo(paramsInfo.<a class="code" href="structarmnn_1_1_quantized_lstm_input_params_info.xhtml#a534af7e4f3a6d50a6dab05abc245133d">GetRecurrentToForgetWeights</a>());</div><div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160;    <span class="keyword">const</span> arm_compute::TensorInfo aclRecurrentToCellWeightsInfo</div><div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160;                                  = BuildArmComputeTensorInfo(paramsInfo.<a class="code" href="structarmnn_1_1_quantized_lstm_input_params_info.xhtml#ae5bfdd423b16f990c1713ef9f91f947b">GetRecurrentToCellWeights</a>());</div><div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160;    <span class="keyword">const</span> arm_compute::TensorInfo aclRecurrentToOutputWeightsInfo</div><div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160;                                  = BuildArmComputeTensorInfo(paramsInfo.<a class="code" href="structarmnn_1_1_quantized_lstm_input_params_info.xhtml#afe4d25acd31b98dee6f6b28d4d756071">GetRecurrentToOutputWeights</a>());</div><div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160;</div><div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;    <span class="keyword">const</span> arm_compute::TensorInfo aclInputGateBiasInfo</div><div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160;                                  = BuildArmComputeTensorInfo(paramsInfo.<a class="code" href="structarmnn_1_1_quantized_lstm_input_params_info.xhtml#ae1d5a487fcd13852927c8a2b9f9dfeb6">GetInputGateBias</a>());</div><div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160;    <span class="keyword">const</span> arm_compute::TensorInfo aclForgetGateBiasInfo</div><div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160;                                  = BuildArmComputeTensorInfo(paramsInfo.<a class="code" href="structarmnn_1_1_quantized_lstm_input_params_info.xhtml#ac81393ef433b0c7c337f9f0d55f41ae4">GetForgetGateBias</a>());</div><div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160;    <span class="keyword">const</span> arm_compute::TensorInfo aclCellBiasInfo</div><div class="line"><a name="l00169"></a><span class="lineno">  169</span>&#160;                                  = BuildArmComputeTensorInfo(paramsInfo.<a class="code" href="structarmnn_1_1_quantized_lstm_input_params_info.xhtml#ad5f4be37766b41f342dd196cb1c6e141">GetCellBias</a>());</div><div class="line"><a name="l00170"></a><span class="lineno">  170</span>&#160;    <span class="keyword">const</span> arm_compute::TensorInfo aclOutputGateBiasInfo</div><div class="line"><a name="l00171"></a><span class="lineno">  171</span>&#160;                                  = BuildArmComputeTensorInfo(paramsInfo.<a class="code" href="structarmnn_1_1_quantized_lstm_input_params_info.xhtml#ae0da94ba17ce67b95b5b9d6e5adc4271">GetOutputGateBias</a>());</div><div class="line"><a name="l00172"></a><span class="lineno">  172</span>&#160;</div><div class="line"><a name="l00173"></a><span class="lineno">  173</span>&#160;    <span class="keywordflow">return</span> arm_compute::NELSTMLayerQuantized::validate(&amp;aclInputInfo,</div><div class="line"><a name="l00174"></a><span class="lineno">  174</span>&#160;                                                       &amp;aclInputToInputWeightsInfo,</div><div class="line"><a name="l00175"></a><span class="lineno">  175</span>&#160;                                                       &amp;aclInputToForgetWeightsInfo,</div><div class="line"><a name="l00176"></a><span class="lineno">  176</span>&#160;                                                       &amp;aclInputToCellWeightsInfo,</div><div class="line"><a name="l00177"></a><span class="lineno">  177</span>&#160;                                                       &amp;aclInputToOutputWeightsInfo,</div><div class="line"><a name="l00178"></a><span class="lineno">  178</span>&#160;                                                       &amp;aclRecurrentToInputWeightsInfo,</div><div class="line"><a name="l00179"></a><span class="lineno">  179</span>&#160;                                                       &amp;aclRecurrentToForgetWeightsInfo,</div><div class="line"><a name="l00180"></a><span class="lineno">  180</span>&#160;                                                       &amp;aclRecurrentToCellWeightsInfo,</div><div class="line"><a name="l00181"></a><span class="lineno">  181</span>&#160;                                                       &amp;aclRecurrentToOutputWeightsInfo,</div><div class="line"><a name="l00182"></a><span class="lineno">  182</span>&#160;                                                       &amp;aclInputGateBiasInfo,</div><div class="line"><a name="l00183"></a><span class="lineno">  183</span>&#160;                                                       &amp;aclForgetGateBiasInfo,</div><div class="line"><a name="l00184"></a><span class="lineno">  184</span>&#160;                                                       &amp;aclCellBiasInfo,</div><div class="line"><a name="l00185"></a><span class="lineno">  185</span>&#160;                                                       &amp;aclOutputGateBiasInfo,</div><div class="line"><a name="l00186"></a><span class="lineno">  186</span>&#160;                                                       &amp;aclCellStateInInfo,</div><div class="line"><a name="l00187"></a><span class="lineno">  187</span>&#160;                                                       &amp;aclOutputStateInInfo,</div><div class="line"><a name="l00188"></a><span class="lineno">  188</span>&#160;                                                       &amp;aclCellStateOutInfo,</div><div class="line"><a name="l00189"></a><span class="lineno">  189</span>&#160;                                                       &amp;aclOutputStateOutInfo);</div><div class="line"><a name="l00190"></a><span class="lineno">  190</span>&#160;}</div><div class="line"><a name="l00191"></a><span class="lineno">  191</span>&#160;</div><div class="line"><a name="l00192"></a><span class="lineno">  192</span>&#160;<span class="keywordtype">void</span> NeonQuantizedLstmWorkload::FreeUnusedTensors()</div><div class="line"><a name="l00193"></a><span class="lineno">  193</span>&#160;{</div><div class="line"><a name="l00194"></a><span class="lineno">  194</span>&#160;    FreeTensorIfUnused(m_InputToInputWeightsTensor);</div><div class="line"><a name="l00195"></a><span class="lineno">  195</span>&#160;    FreeTensorIfUnused(m_InputToForgetWeightsTensor);</div><div class="line"><a name="l00196"></a><span class="lineno">  196</span>&#160;    FreeTensorIfUnused(m_InputToCellWeightsTensor);</div><div class="line"><a name="l00197"></a><span class="lineno">  197</span>&#160;    FreeTensorIfUnused(m_InputToOutputWeightsTensor);</div><div class="line"><a name="l00198"></a><span class="lineno">  198</span>&#160;    FreeTensorIfUnused(m_RecurrentToInputWeightsTensor);</div><div class="line"><a name="l00199"></a><span class="lineno">  199</span>&#160;    FreeTensorIfUnused(m_RecurrentToForgetWeightsTensor);</div><div class="line"><a name="l00200"></a><span class="lineno">  200</span>&#160;    FreeTensorIfUnused(m_RecurrentToCellWeightsTensor);</div><div class="line"><a name="l00201"></a><span class="lineno">  201</span>&#160;    FreeTensorIfUnused(m_RecurrentToOutputWeightsTensor);</div><div class="line"><a name="l00202"></a><span class="lineno">  202</span>&#160;    FreeTensorIfUnused(m_InputGateBiasTensor);</div><div class="line"><a name="l00203"></a><span class="lineno">  203</span>&#160;    FreeTensorIfUnused(m_ForgetGateBiasTensor);</div><div class="line"><a name="l00204"></a><span class="lineno">  204</span>&#160;    FreeTensorIfUnused(m_CellBiasTensor);</div><div class="line"><a name="l00205"></a><span class="lineno">  205</span>&#160;    FreeTensorIfUnused(m_OutputGateBiasTensor);</div><div class="line"><a name="l00206"></a><span class="lineno">  206</span>&#160;    FreeTensorIfUnused(m_CellStateInTensor);</div><div class="line"><a name="l00207"></a><span class="lineno">  207</span>&#160;    FreeTensorIfUnused(m_OutputStateInTensor);</div><div class="line"><a name="l00208"></a><span class="lineno">  208</span>&#160;    FreeTensorIfUnused(m_CellStateOutTensor);</div><div class="line"><a name="l00209"></a><span class="lineno">  209</span>&#160;}</div><div class="line"><a name="l00210"></a><span class="lineno">  210</span>&#160;</div><div class="line"><a name="l00211"></a><span class="lineno">  211</span>&#160;} <span class="comment">//namespace armnn</span></div><div class="ttc" id="structarmnn_1_1_quantized_lstm_queue_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_quantized_lstm_queue_descriptor.xhtml">armnn::QuantizedLstmQueueDescriptor</a></div><div class="ttdef"><b>Definition:</b> <a href="include_2armnn_2backends_2_workload_data_8hpp_source.xhtml#l00654">WorkloadData.hpp:654</a></div></div>
<div class="ttc" id="structarmnn_1_1_quantized_lstm_input_params_info_xhtml_ae5bfdd423b16f990c1713ef9f91f947b"><div class="ttname"><a href="structarmnn_1_1_quantized_lstm_input_params_info.xhtml#ae5bfdd423b16f990c1713ef9f91f947b">armnn::QuantizedLstmInputParamsInfo::GetRecurrentToCellWeights</a></div><div class="ttdeci">const TensorInfo &amp; GetRecurrentToCellWeights() const</div><div class="ttdef"><b>Definition:</b> <a href="_quantized_lstm_params_8hpp_source.xhtml#l00190">QuantizedLstmParams.hpp:190</a></div></div>
<div class="ttc" id="classarmnn_1_1_tensor_info_xhtml"><div class="ttname"><a href="classarmnn_1_1_tensor_info.xhtml">armnn::TensorInfo</a></div><div class="ttdef"><b>Definition:</b> <a href="_tensor_8hpp_source.xhtml#l00152">Tensor.hpp:152</a></div></div>
<div class="ttc" id="structarmnn_1_1_quantized_lstm_input_params_info_xhtml_a800adf0f61e84d706060f63037c1a336"><div class="ttname"><a href="structarmnn_1_1_quantized_lstm_input_params_info.xhtml#a800adf0f61e84d706060f63037c1a336">armnn::QuantizedLstmInputParamsInfo::GetInputToOutputWeights</a></div><div class="ttdeci">const TensorInfo &amp; GetInputToOutputWeights() const</div><div class="ttdef"><b>Definition:</b> <a href="_quantized_lstm_params_8hpp_source.xhtml#l00177">QuantizedLstmParams.hpp:177</a></div></div>
<div class="ttc" id="_neon_quantized_lstm_workload_8hpp_xhtml"><div class="ttname"><a href="_neon_quantized_lstm_workload_8hpp.xhtml">NeonQuantizedLstmWorkload.hpp</a></div></div>
<div class="ttc" id="_neon_tensor_handle_8hpp_xhtml"><div class="ttname"><a href="_neon_tensor_handle_8hpp.xhtml">NeonTensorHandle.hpp</a></div></div>
<div class="ttc" id="classarmnn_1_1_base_workload_xhtml_aaff95a48875d8fb4a616352906660ca9"><div class="ttname"><a href="classarmnn_1_1_base_workload.xhtml#aaff95a48875d8fb4a616352906660ca9">armnn::BaseWorkload&lt; QuantizedLstmQueueDescriptor &gt;::GetGuid</a></div><div class="ttdeci">arm::pipe::ProfilingGuid GetGuid() const final</div><div class="ttdef"><b>Definition:</b> <a href="include_2armnn_2backends_2_workload_8hpp_source.xhtml#l00059">Workload.hpp:59</a></div></div>
<div class="ttc" id="_arm_compute_tensor_utils_8hpp_xhtml"><div class="ttname"><a href="_arm_compute_tensor_utils_8hpp.xhtml">ArmComputeTensorUtils.hpp</a></div></div>
<div class="ttc" id="structarmnn_1_1_quantized_lstm_queue_descriptor_xhtml_a44eb7524badcca9b2073359e3814c98b"><div class="ttname"><a href="structarmnn_1_1_quantized_lstm_queue_descriptor.xhtml#a44eb7524badcca9b2073359e3814c98b">armnn::QuantizedLstmQueueDescriptor::m_InputGateBias</a></div><div class="ttdeci">const ConstTensorHandle * m_InputGateBias</div><div class="ttdef"><b>Definition:</b> <a href="include_2armnn_2backends_2_workload_data_8hpp_source.xhtml#l00683">WorkloadData.hpp:683</a></div></div>
<div class="ttc" id="structarmnn_1_1_quantized_lstm_input_params_info_xhtml_afa2b04197a764428a8c3a648de8058fc"><div class="ttname"><a href="structarmnn_1_1_quantized_lstm_input_params_info.xhtml#afa2b04197a764428a8c3a648de8058fc">armnn::QuantizedLstmInputParamsInfo::GetInputToInputWeights</a></div><div class="ttdeci">const TensorInfo &amp; GetInputToInputWeights() const</div><div class="ttdef"><b>Definition:</b> <a href="_quantized_lstm_params_8hpp_source.xhtml#l00165">QuantizedLstmParams.hpp:165</a></div></div>
<div class="ttc" id="namespacearmnn_xhtml"><div class="ttname"><a href="namespacearmnn.xhtml">armnn</a></div><div class="ttdoc">Copyright (c) 2021 ARM Limited and Contributors. </div><div class="ttdef"><b>Definition:</b> <a href="01__00__quick__start_8dox_source.xhtml#l00006">01_00_quick_start.dox:6</a></div></div>
<div class="ttc" id="classarmnn_1_1_i_acl_tensor_handle_xhtml"><div class="ttname"><a href="classarmnn_1_1_i_acl_tensor_handle.xhtml">armnn::IAclTensorHandle</a></div><div class="ttdef"><b>Definition:</b> <a href="_arm_compute_tensor_handle_8hpp_source.xhtml#l00016">ArmComputeTensorHandle.hpp:16</a></div></div>
<div class="ttc" id="structarmnn_1_1_quantized_lstm_queue_descriptor_xhtml_a299587d4f3fca029492700f3e2585bd8"><div class="ttname"><a href="structarmnn_1_1_quantized_lstm_queue_descriptor.xhtml#a299587d4f3fca029492700f3e2585bd8">armnn::QuantizedLstmQueueDescriptor::m_RecurrentToInputWeights</a></div><div class="ttdeci">const ConstTensorHandle * m_RecurrentToInputWeights</div><div class="ttdef"><b>Definition:</b> <a href="include_2armnn_2backends_2_workload_data_8hpp_source.xhtml#l00678">WorkloadData.hpp:678</a></div></div>
<div class="ttc" id="classarmnn_1_1_neon_quantized_lstm_workload_xhtml_a22b3f0c6bd6ac4987c47b90521b82e57"><div class="ttname"><a href="classarmnn_1_1_neon_quantized_lstm_workload.xhtml#a22b3f0c6bd6ac4987c47b90521b82e57">armnn::NeonQuantizedLstmWorkload::NeonQuantizedLstmWorkload</a></div><div class="ttdeci">NeonQuantizedLstmWorkload(const QuantizedLstmQueueDescriptor &amp;descriptor, const WorkloadInfo &amp;info)</div><div class="ttdef"><b>Definition:</b> <a href="_neon_quantized_lstm_workload_8cpp_source.xhtml#l00017">NeonQuantizedLstmWorkload.cpp:17</a></div></div>
<div class="ttc" id="namespacearmnn_xhtml_ae83632e641892ad2de78f316376f6bd0"><div class="ttname"><a href="namespacearmnn.xhtml#ae83632e641892ad2de78f316376f6bd0">armnn::NeonQuantizedLstmWorkloadValidate</a></div><div class="ttdeci">arm_compute::Status NeonQuantizedLstmWorkloadValidate(const TensorInfo &amp;input, const TensorInfo &amp;cellStateIn, const TensorInfo &amp;outputStateIn, const TensorInfo &amp;cellStateOut, const TensorInfo &amp;outputStateOut, const QuantizedLstmInputParamsInfo &amp;paramsInfo)</div><div class="ttdef"><b>Definition:</b> <a href="_neon_quantized_lstm_workload_8cpp_source.xhtml#l00131">NeonQuantizedLstmWorkload.cpp:131</a></div></div>
<div class="ttc" id="classarmnn_1_1_neon_base_workload_xhtml"><div class="ttname"><a href="classarmnn_1_1_neon_base_workload.xhtml">armnn::NeonBaseWorkload</a></div><div class="ttdef"><b>Definition:</b> <a href="_neon_base_workload_8hpp_source.xhtml#l00013">NeonBaseWorkload.hpp:13</a></div></div>
<div class="ttc" id="classarmnn_1_1_const_tensor_handle_xhtml_a66e8f43a5b42b500871ed96e15419567"><div class="ttname"><a href="classarmnn_1_1_const_tensor_handle.xhtml#a66e8f43a5b42b500871ed96e15419567">armnn::ConstTensorHandle::GetTensorInfo</a></div><div class="ttdeci">const TensorInfo &amp; GetTensorInfo() const</div><div class="ttdef"><b>Definition:</b> <a href="include_2armnn_2backends_2_tensor_handle_8hpp_source.xhtml#l00040">TensorHandle.hpp:40</a></div></div>
<div class="ttc" id="structarmnn_1_1_quantized_lstm_queue_descriptor_xhtml_aab77f54a037658ca9b2bf9cc8a1fadf1"><div class="ttname"><a href="structarmnn_1_1_quantized_lstm_queue_descriptor.xhtml#aab77f54a037658ca9b2bf9cc8a1fadf1">armnn::QuantizedLstmQueueDescriptor::m_InputToForgetWeights</a></div><div class="ttdeci">const ConstTensorHandle * m_InputToForgetWeights</div><div class="ttdef"><b>Definition:</b> <a href="include_2armnn_2backends_2_workload_data_8hpp_source.xhtml#l00674">WorkloadData.hpp:674</a></div></div>
<div class="ttc" id="structarmnn_1_1_quantized_lstm_input_params_info_xhtml"><div class="ttname"><a href="structarmnn_1_1_quantized_lstm_input_params_info.xhtml">armnn::QuantizedLstmInputParamsInfo</a></div><div class="ttdef"><b>Definition:</b> <a href="_quantized_lstm_params_8hpp_source.xhtml#l00119">QuantizedLstmParams.hpp:119</a></div></div>
<div class="ttc" id="classarmnn_1_1_base_workload_xhtml_afb8d2c8817c75de9d01a4c0e0d5c160b"><div class="ttname"><a href="classarmnn_1_1_base_workload.xhtml#afb8d2c8817c75de9d01a4c0e0d5c160b">armnn::BaseWorkload&lt; QuantizedLstmQueueDescriptor &gt;::m_Data</a></div><div class="ttdeci">QuantizedLstmQueueDescriptor m_Data</div><div class="ttdef"><b>Definition:</b> <a href="include_2armnn_2backends_2_workload_8hpp_source.xhtml#l00081">Workload.hpp:81</a></div></div>
<div class="ttc" id="structarmnn_1_1_quantized_lstm_queue_descriptor_xhtml_ac18c8b8b2039267d8282e91b4162d8aa"><div class="ttname"><a href="structarmnn_1_1_quantized_lstm_queue_descriptor.xhtml#ac18c8b8b2039267d8282e91b4162d8aa">armnn::QuantizedLstmQueueDescriptor::m_RecurrentToCellWeights</a></div><div class="ttdeci">const ConstTensorHandle * m_RecurrentToCellWeights</div><div class="ttdef"><b>Definition:</b> <a href="include_2armnn_2backends_2_workload_data_8hpp_source.xhtml#l00680">WorkloadData.hpp:680</a></div></div>
<div class="ttc" id="structarmnn_1_1_quantized_lstm_queue_descriptor_xhtml_a29fa293fffbf9c6f00cd75db1dc0a52a"><div class="ttname"><a href="structarmnn_1_1_quantized_lstm_queue_descriptor.xhtml#a29fa293fffbf9c6f00cd75db1dc0a52a">armnn::QuantizedLstmQueueDescriptor::m_ForgetGateBias</a></div><div class="ttdeci">const ConstTensorHandle * m_ForgetGateBias</div><div class="ttdef"><b>Definition:</b> <a href="include_2armnn_2backends_2_workload_data_8hpp_source.xhtml#l00684">WorkloadData.hpp:684</a></div></div>
<div class="ttc" id="structarmnn_1_1_quantized_lstm_input_params_info_xhtml_a534af7e4f3a6d50a6dab05abc245133d"><div class="ttname"><a href="structarmnn_1_1_quantized_lstm_input_params_info.xhtml#a534af7e4f3a6d50a6dab05abc245133d">armnn::QuantizedLstmInputParamsInfo::GetRecurrentToForgetWeights</a></div><div class="ttdeci">const TensorInfo &amp; GetRecurrentToForgetWeights() const</div><div class="ttdef"><b>Definition:</b> <a href="_quantized_lstm_params_8hpp_source.xhtml#l00186">QuantizedLstmParams.hpp:186</a></div></div>
<div class="ttc" id="namespacearmnn_xhtml_a67a0db04d321a74b7e7fcfd3f1a3f70b"><div class="ttname"><a href="namespacearmnn.xhtml#a67a0db04d321a74b7e7fcfd3f1a3f70b">armnn::Status</a></div><div class="ttdeci">Status</div><div class="ttdoc">enumeration </div><div class="ttdef"><b>Definition:</b> <a href="_types_8hpp_source.xhtml#l00042">Types.hpp:42</a></div></div>
<div class="ttc" id="structarmnn_1_1_quantized_lstm_input_params_info_xhtml_a3b3c26330a05bf4ea40f8a6b402be354"><div class="ttname"><a href="structarmnn_1_1_quantized_lstm_input_params_info.xhtml#a3b3c26330a05bf4ea40f8a6b402be354">armnn::QuantizedLstmInputParamsInfo::GetInputToCellWeights</a></div><div class="ttdeci">const TensorInfo &amp; GetInputToCellWeights() const</div><div class="ttdef"><b>Definition:</b> <a href="_quantized_lstm_params_8hpp_source.xhtml#l00173">QuantizedLstmParams.hpp:173</a></div></div>
<div class="ttc" id="_neon_workload_utils_8hpp_xhtml"><div class="ttname"><a href="_neon_workload_utils_8hpp.xhtml">NeonWorkloadUtils.hpp</a></div></div>
<div class="ttc" id="include_2armnn_2backends_2_tensor_handle_8hpp_xhtml"><div class="ttname"><a href="include_2armnn_2backends_2_tensor_handle_8hpp.xhtml">TensorHandle.hpp</a></div></div>
<div class="ttc" id="structarmnn_1_1_quantized_lstm_queue_descriptor_xhtml_a4c27716f61bb68e8ea0bd4e8389ba01a"><div class="ttname"><a href="structarmnn_1_1_quantized_lstm_queue_descriptor.xhtml#a4c27716f61bb68e8ea0bd4e8389ba01a">armnn::QuantizedLstmQueueDescriptor::m_RecurrentToOutputWeights</a></div><div class="ttdeci">const ConstTensorHandle * m_RecurrentToOutputWeights</div><div class="ttdef"><b>Definition:</b> <a href="include_2armnn_2backends_2_workload_data_8hpp_source.xhtml#l00681">WorkloadData.hpp:681</a></div></div>
<div class="ttc" id="structarmnn_1_1_quantized_lstm_input_params_info_xhtml_ac81393ef433b0c7c337f9f0d55f41ae4"><div class="ttname"><a href="structarmnn_1_1_quantized_lstm_input_params_info.xhtml#ac81393ef433b0c7c337f9f0d55f41ae4">armnn::QuantizedLstmInputParamsInfo::GetForgetGateBias</a></div><div class="ttdeci">const TensorInfo &amp; GetForgetGateBias() const</div><div class="ttdef"><b>Definition:</b> <a href="_quantized_lstm_params_8hpp_source.xhtml#l00203">QuantizedLstmParams.hpp:203</a></div></div>
<div class="ttc" id="structarmnn_1_1_quantized_lstm_queue_descriptor_xhtml_a5ff4158b1b363b898d0da04c42d37ce0"><div class="ttname"><a href="structarmnn_1_1_quantized_lstm_queue_descriptor.xhtml#a5ff4158b1b363b898d0da04c42d37ce0">armnn::QuantizedLstmQueueDescriptor::m_OutputGateBias</a></div><div class="ttdeci">const ConstTensorHandle * m_OutputGateBias</div><div class="ttdef"><b>Definition:</b> <a href="include_2armnn_2backends_2_workload_data_8hpp_source.xhtml#l00686">WorkloadData.hpp:686</a></div></div>
<div class="ttc" id="structarmnn_1_1_quantized_lstm_queue_descriptor_xhtml_adf8571dd1867ee91082bd005f94f2610"><div class="ttname"><a href="structarmnn_1_1_quantized_lstm_queue_descriptor.xhtml#adf8571dd1867ee91082bd005f94f2610">armnn::QuantizedLstmQueueDescriptor::m_RecurrentToForgetWeights</a></div><div class="ttdeci">const ConstTensorHandle * m_RecurrentToForgetWeights</div><div class="ttdef"><b>Definition:</b> <a href="include_2armnn_2backends_2_workload_data_8hpp_source.xhtml#l00679">WorkloadData.hpp:679</a></div></div>
<div class="ttc" id="classarmnn_1_1_neon_quantized_lstm_workload_xhtml_ae071e8822437c78baea75c3aef3a263a"><div class="ttname"><a href="classarmnn_1_1_neon_quantized_lstm_workload.xhtml#ae071e8822437c78baea75c3aef3a263a">armnn::NeonQuantizedLstmWorkload::Execute</a></div><div class="ttdeci">virtual void Execute() const override</div><div class="ttdef"><b>Definition:</b> <a href="_neon_quantized_lstm_workload_8cpp_source.xhtml#l00125">NeonQuantizedLstmWorkload.cpp:125</a></div></div>
<div class="ttc" id="structarmnn_1_1_quantized_lstm_input_params_info_xhtml_ae1d5a487fcd13852927c8a2b9f9dfeb6"><div class="ttname"><a href="structarmnn_1_1_quantized_lstm_input_params_info.xhtml#ae1d5a487fcd13852927c8a2b9f9dfeb6">armnn::QuantizedLstmInputParamsInfo::GetInputGateBias</a></div><div class="ttdeci">const TensorInfo &amp; GetInputGateBias() const</div><div class="ttdef"><b>Definition:</b> <a href="_quantized_lstm_params_8hpp_source.xhtml#l00199">QuantizedLstmParams.hpp:199</a></div></div>
<div class="ttc" id="structarmnn_1_1_quantized_lstm_input_params_info_xhtml_a7dac08f19a1b235d5256d39136848a09"><div class="ttname"><a href="structarmnn_1_1_quantized_lstm_input_params_info.xhtml#a7dac08f19a1b235d5256d39136848a09">armnn::QuantizedLstmInputParamsInfo::GetInputToForgetWeights</a></div><div class="ttdeci">const TensorInfo &amp; GetInputToForgetWeights() const</div><div class="ttdef"><b>Definition:</b> <a href="_quantized_lstm_params_8hpp_source.xhtml#l00169">QuantizedLstmParams.hpp:169</a></div></div>
<div class="ttc" id="structarmnn_1_1_quantized_lstm_input_params_info_xhtml_ad5f4be37766b41f342dd196cb1c6e141"><div class="ttname"><a href="structarmnn_1_1_quantized_lstm_input_params_info.xhtml#ad5f4be37766b41f342dd196cb1c6e141">armnn::QuantizedLstmInputParamsInfo::GetCellBias</a></div><div class="ttdeci">const TensorInfo &amp; GetCellBias() const</div><div class="ttdef"><b>Definition:</b> <a href="_quantized_lstm_params_8hpp_source.xhtml#l00207">QuantizedLstmParams.hpp:207</a></div></div>
<div class="ttc" id="structarmnn_1_1_quantized_lstm_queue_descriptor_xhtml_a17ba1c8bcc71a55a95b2a3913f8cb203"><div class="ttname"><a href="structarmnn_1_1_quantized_lstm_queue_descriptor.xhtml#a17ba1c8bcc71a55a95b2a3913f8cb203">armnn::QuantizedLstmQueueDescriptor::m_InputToOutputWeights</a></div><div class="ttdeci">const ConstTensorHandle * m_InputToOutputWeights</div><div class="ttdef"><b>Definition:</b> <a href="include_2armnn_2backends_2_workload_data_8hpp_source.xhtml#l00676">WorkloadData.hpp:676</a></div></div>
<div class="ttc" id="structarmnn_1_1_quantized_lstm_input_params_info_xhtml_ae0da94ba17ce67b95b5b9d6e5adc4271"><div class="ttname"><a href="structarmnn_1_1_quantized_lstm_input_params_info.xhtml#ae0da94ba17ce67b95b5b9d6e5adc4271">armnn::QuantizedLstmInputParamsInfo::GetOutputGateBias</a></div><div class="ttdeci">const TensorInfo &amp; GetOutputGateBias() const</div><div class="ttdef"><b>Definition:</b> <a href="_quantized_lstm_params_8hpp_source.xhtml#l00211">QuantizedLstmParams.hpp:211</a></div></div>
<div class="ttc" id="structarmnn_1_1_queue_descriptor_xhtml_a6abd491bb99ffe88bd472c1ae5a1ed1a"><div class="ttname"><a href="structarmnn_1_1_queue_descriptor.xhtml#a6abd491bb99ffe88bd472c1ae5a1ed1a">armnn::QueueDescriptor::m_Outputs</a></div><div class="ttdeci">std::vector&lt; ITensorHandle * &gt; m_Outputs</div><div class="ttdef"><b>Definition:</b> <a href="include_2armnn_2backends_2_workload_data_8hpp_source.xhtml#l00027">WorkloadData.hpp:27</a></div></div>
<div class="ttc" id="namespacearmnn_xhtml_a4dc0adc6737b5944e7671bee71788407acaf9b6b99962bf5c2264824231d7a40c"><div class="ttname"><a href="namespacearmnn.xhtml#a4dc0adc6737b5944e7671bee71788407acaf9b6b99962bf5c2264824231d7a40c">armnn::BoostLogSeverityMapping::info</a></div></div>
<div class="ttc" id="structarmnn_1_1_quantized_lstm_queue_descriptor_xhtml_ab160eba2493d5fe52185c0986dcb190c"><div class="ttname"><a href="structarmnn_1_1_quantized_lstm_queue_descriptor.xhtml#ab160eba2493d5fe52185c0986dcb190c">armnn::QuantizedLstmQueueDescriptor::m_InputToInputWeights</a></div><div class="ttdeci">const ConstTensorHandle * m_InputToInputWeights</div><div class="ttdef"><b>Definition:</b> <a href="include_2armnn_2backends_2_workload_data_8hpp_source.xhtml#l00673">WorkloadData.hpp:673</a></div></div>
<div class="ttc" id="structarmnn_1_1_quantized_lstm_input_params_info_xhtml_ad159f9edbddeeb6cf6ff0ba042481ba8"><div class="ttname"><a href="structarmnn_1_1_quantized_lstm_input_params_info.xhtml#ad159f9edbddeeb6cf6ff0ba042481ba8">armnn::QuantizedLstmInputParamsInfo::GetRecurrentToInputWeights</a></div><div class="ttdeci">const TensorInfo &amp; GetRecurrentToInputWeights() const</div><div class="ttdef"><b>Definition:</b> <a href="_quantized_lstm_params_8hpp_source.xhtml#l00182">QuantizedLstmParams.hpp:182</a></div></div>
<div class="ttc" id="structarmnn_1_1_quantized_lstm_queue_descriptor_xhtml_a6e9593869b82984de198fed27f72cdcf"><div class="ttname"><a href="structarmnn_1_1_quantized_lstm_queue_descriptor.xhtml#a6e9593869b82984de198fed27f72cdcf">armnn::QuantizedLstmQueueDescriptor::m_CellBias</a></div><div class="ttdeci">const ConstTensorHandle * m_CellBias</div><div class="ttdef"><b>Definition:</b> <a href="include_2armnn_2backends_2_workload_data_8hpp_source.xhtml#l00685">WorkloadData.hpp:685</a></div></div>
<div class="ttc" id="namespacearmnn_xhtml_acf8e1f43fc13cf7603564cc15743fce2"><div class="ttname"><a href="namespacearmnn.xhtml#acf8e1f43fc13cf7603564cc15743fce2">armnn::InitializeArmComputeTensorData</a></div><div class="ttdeci">void InitializeArmComputeTensorData(arm_compute::Tensor &amp;tensor, const ConstTensorHandle *handle)</div><div class="ttdef"><b>Definition:</b> <a href="_neon_workload_utils_8hpp_source.xhtml#l00060">NeonWorkloadUtils.hpp:60</a></div></div>
<div class="ttc" id="structarmnn_1_1_workload_info_xhtml"><div class="ttname"><a href="structarmnn_1_1_workload_info.xhtml">armnn::WorkloadInfo</a></div><div class="ttdoc">Contains information about TensorInfos of a layer. </div><div class="ttdef"><b>Definition:</b> <a href="include_2armnn_2backends_2_workload_info_8hpp_source.xhtml#l00016">WorkloadInfo.hpp:16</a></div></div>
<div class="ttc" id="structarmnn_1_1_quantized_lstm_input_params_info_xhtml_afe4d25acd31b98dee6f6b28d4d756071"><div class="ttname"><a href="structarmnn_1_1_quantized_lstm_input_params_info.xhtml#afe4d25acd31b98dee6f6b28d4d756071">armnn::QuantizedLstmInputParamsInfo::GetRecurrentToOutputWeights</a></div><div class="ttdeci">const TensorInfo &amp; GetRecurrentToOutputWeights() const</div><div class="ttdef"><b>Definition:</b> <a href="_quantized_lstm_params_8hpp_source.xhtml#l00194">QuantizedLstmParams.hpp:194</a></div></div>
<div class="ttc" id="structarmnn_1_1_queue_descriptor_xhtml_a4b50e46a6810018f3edecfb68b2a76b3"><div class="ttname"><a href="structarmnn_1_1_queue_descriptor.xhtml#a4b50e46a6810018f3edecfb68b2a76b3">armnn::QueueDescriptor::m_Inputs</a></div><div class="ttdeci">std::vector&lt; ITensorHandle * &gt; m_Inputs</div><div class="ttdef"><b>Definition:</b> <a href="include_2armnn_2backends_2_workload_data_8hpp_source.xhtml#l00026">WorkloadData.hpp:26</a></div></div>
<div class="ttc" id="_neon_workload_utils_8hpp_xhtml_a9165e41bcaf1b90f9ff91ef681e88c4f"><div class="ttname"><a href="_neon_workload_utils_8hpp.xhtml#a9165e41bcaf1b90f9ff91ef681e88c4f">ARMNN_SCOPED_PROFILING_EVENT_NEON_GUID</a></div><div class="ttdeci">#define ARMNN_SCOPED_PROFILING_EVENT_NEON_GUID(name, guid)</div><div class="ttdef"><b>Definition:</b> <a href="_neon_workload_utils_8hpp_source.xhtml#l00024">NeonWorkloadUtils.hpp:24</a></div></div>
<div class="ttc" id="structarmnn_1_1_quantized_lstm_queue_descriptor_xhtml_a841439e3b8dc157a7368b19c9ecb7d03"><div class="ttname"><a href="structarmnn_1_1_quantized_lstm_queue_descriptor.xhtml#a841439e3b8dc157a7368b19c9ecb7d03">armnn::QuantizedLstmQueueDescriptor::m_InputToCellWeights</a></div><div class="ttdeci">const ConstTensorHandle * m_InputToCellWeights</div><div class="ttdef"><b>Definition:</b> <a href="include_2armnn_2backends_2_workload_data_8hpp_source.xhtml#l00675">WorkloadData.hpp:675</a></div></div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="dir_68267d1309a1af8e8297ef4c3efbcdba.xhtml">src</a></li><li class="navelem"><a class="el" href="dir_0f3cdec46afbc61a1ded8e1687c9c9a0.xhtml">backends</a></li><li class="navelem"><a class="el" href="dir_d86eb514662c7c08e168285f21d00ea1.xhtml">neon</a></li><li class="navelem"><a class="el" href="dir_369c3c20501d0d10bd0354bf11c2f559.xhtml">workloads</a></li><li class="navelem"><a class="el" href="_neon_quantized_lstm_workload_8cpp.xhtml">NeonQuantizedLstmWorkload.cpp</a></li>
    <li class="footer">Generated on Fri Jun 17 2022 13:20:23 for ArmNN by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.13 </li>
  </ul>
</div>
</body>
</html>
