<!-- Copyright (c) 2020 ARM Limited. -->
<!--                                 -->
<!-- SPDX-License-Identifier: MIT    -->
<!--                                 -->
<!-- HTML header for doxygen 1.8.13-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.13"/>
<meta name="robots" content="NOINDEX, NOFOLLOW" />
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>ArmNN: src/armnnTestUtils/GraphUtils.cpp Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script><script type="text/javascript" src="http://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="stylesheet.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <img alt="ArmNN" src="Arm_NN_horizontal_blue.png" style="max-width: 10rem; margin-top: .5rem; margin-left 10px"/>
  <td style="padding-left: 0.5em;">
   <div id="projectname">
   &#160;<span id="projectnumber">22.02</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.13 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
$(document).ready(function(){initNavTree('_graph_utils_8cpp_source.xhtml','');});
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="headertitle">
<div class="title">GraphUtils.cpp</div>  </div>
</div><!--header-->
<div class="contents">
<a href="_graph_utils_8cpp.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="comment">//</span></div><div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="comment">// Copyright Â© 2017 Arm Ltd and Contributors. All rights reserved.</span></div><div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="comment">// SPDX-License-Identifier: MIT</span></div><div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="comment">//</span></div><div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;</div><div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="est_utils_2_graph_utils_8hpp.xhtml">GraphUtils.hpp</a>&quot;</span></div><div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;</div><div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="preprocessor">#include &lt;<a class="code" href="_polymorphic_downcast_8hpp.xhtml">armnn/utility/PolymorphicDowncast.hpp</a>&gt;</span></div><div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;</div><div class="line"><a name="l00010"></a><span class="lineno"><a class="line" href="est_utils_2_graph_utils_8hpp.xhtml#ac73a43305233b7e5f70debdb2d14a8d3">   10</a></span>&#160;<span class="keywordtype">bool</span> <a class="code" href="_graph_utils_8cpp.xhtml#ac73a43305233b7e5f70debdb2d14a8d3">GraphHasNamedLayer</a>(<span class="keyword">const</span> <a class="code" href="classarmnn_1_1_graph.xhtml">armnn::Graph</a>&amp; graph, <span class="keyword">const</span> std::string&amp; name)</div><div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;{</div><div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;    <span class="keywordflow">for</span> (<span class="keyword">auto</span>&amp;&amp; layer : graph)</div><div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;    {</div><div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;        <span class="keywordflow">if</span> (layer-&gt;GetName() == name)</div><div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;        {</div><div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;            <span class="keywordflow">return</span> <span class="keyword">true</span>;</div><div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;        }</div><div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;    }</div><div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;    <span class="keywordflow">return</span> <span class="keyword">false</span>;</div><div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;}</div><div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;</div><div class="line"><a name="l00022"></a><span class="lineno"><a class="line" href="est_utils_2_graph_utils_8hpp.xhtml#a5f17e02e0054dac0a691685a0464ed36">   22</a></span>&#160;<a class="code" href="classarmnn_1_1_layer.xhtml">armnn::Layer</a>* <a class="code" href="_graph_utils_8cpp.xhtml#a5f17e02e0054dac0a691685a0464ed36">GetFirstLayerWithName</a>(<a class="code" href="classarmnn_1_1_graph.xhtml">armnn::Graph</a>&amp; graph, <span class="keyword">const</span> std::string&amp; name)</div><div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;{</div><div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;    <span class="keywordflow">for</span> (<span class="keyword">auto</span>&amp;&amp; layer : graph)</div><div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;    {</div><div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;        <span class="keywordflow">if</span> (layer-&gt;GetNameStr() == name)</div><div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;        {</div><div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;            <span class="keywordflow">return</span> layer;</div><div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;        }</div><div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;    }</div><div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;    <span class="keywordflow">return</span> <span class="keyword">nullptr</span>;</div><div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;}</div><div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;</div><div class="line"><a name="l00034"></a><span class="lineno"><a class="line" href="est_utils_2_graph_utils_8hpp.xhtml#a4c04337db4d5f380219a005657a8223b">   34</a></span>&#160;<span class="keywordtype">bool</span> <a class="code" href="_graph_utils_8cpp.xhtml#a4c04337db4d5f380219a005657a8223b">CheckNumberOfInputSlot</a>(<a class="code" href="classarmnn_1_1_layer.xhtml">armnn::Layer</a>* layer, <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> num)</div><div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;{</div><div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;    <span class="keywordflow">return</span> layer-&gt;<a class="code" href="classarmnn_1_1_layer.xhtml#abc0660dc440c8a285b456c9ef6383c26">GetNumInputSlots</a>() == num;</div><div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;}</div><div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;</div><div class="line"><a name="l00039"></a><span class="lineno"><a class="line" href="est_utils_2_graph_utils_8hpp.xhtml#aada2e27f100807f5786eecb03390ba58">   39</a></span>&#160;<span class="keywordtype">bool</span> <a class="code" href="_graph_utils_8cpp.xhtml#aada2e27f100807f5786eecb03390ba58">CheckNumberOfOutputSlot</a>(<a class="code" href="classarmnn_1_1_layer.xhtml">armnn::Layer</a>* layer, <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> num)</div><div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;{</div><div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;    <span class="keywordflow">return</span> layer-&gt;<a class="code" href="classarmnn_1_1_layer.xhtml#a1594bddc87d6477df300317658f566bb">GetNumOutputSlots</a>() == num;</div><div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;}</div><div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;</div><div class="line"><a name="l00044"></a><span class="lineno"><a class="line" href="est_utils_2_graph_utils_8hpp.xhtml#afd518dba3d52728670459e4ad3bed5e1">   44</a></span>&#160;<span class="keywordtype">bool</span> <a class="code" href="_graph_utils_8cpp.xhtml#afd518dba3d52728670459e4ad3bed5e1">IsConnected</a>(<a class="code" href="classarmnn_1_1_layer.xhtml">armnn::Layer</a>* srcLayer, <a class="code" href="classarmnn_1_1_layer.xhtml">armnn::Layer</a>* destLayer,</div><div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;                 <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> srcSlot, <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> destSlot,</div><div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;                 <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_info.xhtml">armnn::TensorInfo</a>&amp; expectedTensorInfo)</div><div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;{</div><div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;    <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_i_output_slot.xhtml">armnn::IOutputSlot</a>&amp; outputSlot = srcLayer-&gt;<a class="code" href="classarmnn_1_1_layer.xhtml#a0e36688a43c35668d8db5257274c68fe">GetOutputSlot</a>(srcSlot);</div><div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;    <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_info.xhtml">armnn::TensorInfo</a>&amp; tensorInfo = outputSlot.<a class="code" href="classarmnn_1_1_i_output_slot.xhtml#a9943775a364fc4ab53b85ac88f311886">GetTensorInfo</a>();</div><div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;    <span class="keywordflow">if</span> (expectedTensorInfo != tensorInfo)</div><div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;    {</div><div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;        <span class="keywordflow">return</span> <span class="keyword">false</span>;</div><div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;    }</div><div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> numConnections = outputSlot.<a class="code" href="classarmnn_1_1_i_output_slot.xhtml#aab97b09d9ee85a105883949abcae52f3">GetNumConnections</a>();</div><div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;    <span class="keywordflow">for</span> (<span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> c = 0; c &lt; numConnections; ++c)</div><div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;    {</div><div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;        <span class="keyword">auto</span> inputSlot = armnn::PolymorphicDowncast&lt;const armnn::InputSlot*&gt;(outputSlot.<a class="code" href="classarmnn_1_1_i_output_slot.xhtml#a9fffb92dc6d2edd5258d574a5862fc83">GetConnection</a>(c));</div><div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;        <span class="keywordflow">if</span> (inputSlot-&gt;GetOwningLayer().GetNameStr() == destLayer-&gt;<a class="code" href="classarmnn_1_1_layer.xhtml#a9a97cb6d32661a57fc33bd29b8e41ff4">GetNameStr</a>() &amp;&amp;</div><div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;            inputSlot-&gt;GetSlotIndex() == destSlot)</div><div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;        {</div><div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;            <span class="keywordflow">return</span> <span class="keyword">true</span>;</div><div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;        }</div><div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;    }</div><div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;    <span class="keywordflow">return</span> <span class="keyword">false</span>;</div><div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;}</div><div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;<span class="comment">/// Checks that first comes before second in the order.</span></div><div class="line"><a name="l00068"></a><span class="lineno"><a class="line" href="est_utils_2_graph_utils_8hpp.xhtml#a21d963c71be62057ed99b5007e7bbbfd">   68</a></span>&#160;<span class="comment"></span><span class="keywordtype">bool</span> <a class="code" href="_graph_utils_8cpp.xhtml#a21d963c71be62057ed99b5007e7bbbfd">CheckOrder</a>(<span class="keyword">const</span> <a class="code" href="classarmnn_1_1_graph.xhtml">armnn::Graph</a>&amp; graph, <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_layer.xhtml">armnn::Layer</a>* first, <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_layer.xhtml">armnn::Layer</a>* second)</div><div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;{</div><div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;    graph.<a class="code" href="classarmnn_1_1_graph.xhtml#afd329ee7d721aa6cdaacb8391308e34f">Print</a>();</div><div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;</div><div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;    <span class="keyword">const</span> <span class="keyword">auto</span>&amp; order = graph.<a class="code" href="classarmnn_1_1_graph.xhtml#a9a7209345edfdb2b066b0ceb66414d7c">TopologicalSort</a>();</div><div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;</div><div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;    <span class="keyword">auto</span> firstPos = std::find(order.begin(), order.end(), first);</div><div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;    <span class="keyword">auto</span> secondPos = std::find(firstPos, order.end(), second);</div><div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;</div><div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;    <span class="keywordflow">return</span> (secondPos != order.end());</div><div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;}</div><div class="ttc" id="classarmnn_1_1_layer_xhtml_abc0660dc440c8a285b456c9ef6383c26"><div class="ttname"><a href="classarmnn_1_1_layer.xhtml#abc0660dc440c8a285b456c9ef6383c26">armnn::Layer::GetNumInputSlots</a></div><div class="ttdeci">unsigned int GetNumInputSlots() const override</div><div class="ttdoc">Returns the number of connectable input slots. </div><div class="ttdef"><b>Definition:</b> <a href="_layer_8hpp_source.xhtml#l00318">Layer.hpp:318</a></div></div>
<div class="ttc" id="_graph_utils_8cpp_xhtml_a5f17e02e0054dac0a691685a0464ed36"><div class="ttname"><a href="_graph_utils_8cpp.xhtml#a5f17e02e0054dac0a691685a0464ed36">GetFirstLayerWithName</a></div><div class="ttdeci">armnn::Layer * GetFirstLayerWithName(armnn::Graph &amp;graph, const std::string &amp;name)</div><div class="ttdef"><b>Definition:</b> <a href="_graph_utils_8cpp_source.xhtml#l00022">GraphUtils.cpp:22</a></div></div>
<div class="ttc" id="_graph_utils_8cpp_xhtml_a21d963c71be62057ed99b5007e7bbbfd"><div class="ttname"><a href="_graph_utils_8cpp.xhtml#a21d963c71be62057ed99b5007e7bbbfd">CheckOrder</a></div><div class="ttdeci">bool CheckOrder(const armnn::Graph &amp;graph, const armnn::Layer *first, const armnn::Layer *second)</div><div class="ttdoc">Checks that first comes before second in the order. </div><div class="ttdef"><b>Definition:</b> <a href="_graph_utils_8cpp_source.xhtml#l00068">GraphUtils.cpp:68</a></div></div>
<div class="ttc" id="classarmnn_1_1_tensor_info_xhtml"><div class="ttname"><a href="classarmnn_1_1_tensor_info.xhtml">armnn::TensorInfo</a></div><div class="ttdef"><b>Definition:</b> <a href="_tensor_8hpp_source.xhtml#l00152">Tensor.hpp:152</a></div></div>
<div class="ttc" id="_graph_utils_8cpp_xhtml_ac73a43305233b7e5f70debdb2d14a8d3"><div class="ttname"><a href="_graph_utils_8cpp.xhtml#ac73a43305233b7e5f70debdb2d14a8d3">GraphHasNamedLayer</a></div><div class="ttdeci">bool GraphHasNamedLayer(const armnn::Graph &amp;graph, const std::string &amp;name)</div><div class="ttdef"><b>Definition:</b> <a href="_graph_utils_8cpp_source.xhtml#l00010">GraphUtils.cpp:10</a></div></div>
<div class="ttc" id="classarmnn_1_1_i_output_slot_xhtml_a9fffb92dc6d2edd5258d574a5862fc83"><div class="ttname"><a href="classarmnn_1_1_i_output_slot.xhtml#a9fffb92dc6d2edd5258d574a5862fc83">armnn::IOutputSlot::GetConnection</a></div><div class="ttdeci">virtual const IInputSlot * GetConnection(unsigned int index) const =0</div></div>
<div class="ttc" id="classarmnn_1_1_layer_xhtml_a1594bddc87d6477df300317658f566bb"><div class="ttname"><a href="classarmnn_1_1_layer.xhtml#a1594bddc87d6477df300317658f566bb">armnn::Layer::GetNumOutputSlots</a></div><div class="ttdeci">unsigned int GetNumOutputSlots() const override</div><div class="ttdoc">Returns the number of connectable output slots. </div><div class="ttdef"><b>Definition:</b> <a href="_layer_8hpp_source.xhtml#l00319">Layer.hpp:319</a></div></div>
<div class="ttc" id="_polymorphic_downcast_8hpp_xhtml"><div class="ttname"><a href="_polymorphic_downcast_8hpp.xhtml">PolymorphicDowncast.hpp</a></div></div>
<div class="ttc" id="classarmnn_1_1_i_output_slot_xhtml"><div class="ttname"><a href="classarmnn_1_1_i_output_slot.xhtml">armnn::IOutputSlot</a></div><div class="ttdoc">An output connection slot for a layer. </div><div class="ttdef"><b>Definition:</b> <a href="_i_network_8hpp_source.xhtml#l00040">INetwork.hpp:40</a></div></div>
<div class="ttc" id="classarmnn_1_1_layer_xhtml_a9a97cb6d32661a57fc33bd29b8e41ff4"><div class="ttname"><a href="classarmnn_1_1_layer.xhtml#a9a97cb6d32661a57fc33bd29b8e41ff4">armnn::Layer::GetNameStr</a></div><div class="ttdeci">const std::string &amp; GetNameStr() const</div><div class="ttdef"><b>Definition:</b> <a href="_layer_8hpp_source.xhtml#l00225">Layer.hpp:225</a></div></div>
<div class="ttc" id="classarmnn_1_1_graph_xhtml"><div class="ttname"><a href="classarmnn_1_1_graph.xhtml">armnn::Graph</a></div><div class="ttdef"><b>Definition:</b> <a href="_graph_8hpp_source.xhtml#l00030">Graph.hpp:30</a></div></div>
<div class="ttc" id="_graph_utils_8cpp_xhtml_afd518dba3d52728670459e4ad3bed5e1"><div class="ttname"><a href="_graph_utils_8cpp.xhtml#afd518dba3d52728670459e4ad3bed5e1">IsConnected</a></div><div class="ttdeci">bool IsConnected(armnn::Layer *srcLayer, armnn::Layer *destLayer, unsigned int srcSlot, unsigned int destSlot, const armnn::TensorInfo &amp;expectedTensorInfo)</div><div class="ttdef"><b>Definition:</b> <a href="_graph_utils_8cpp_source.xhtml#l00044">GraphUtils.cpp:44</a></div></div>
<div class="ttc" id="classarmnn_1_1_layer_xhtml_a0e36688a43c35668d8db5257274c68fe"><div class="ttname"><a href="classarmnn_1_1_layer.xhtml#a0e36688a43c35668d8db5257274c68fe">armnn::Layer::GetOutputSlot</a></div><div class="ttdeci">const OutputSlot &amp; GetOutputSlot(unsigned int index=0) const override</div><div class="ttdoc">Get the const output slot handle by slot index. </div><div class="ttdef"><b>Definition:</b> <a href="_layer_8hpp_source.xhtml#l00323">Layer.hpp:323</a></div></div>
<div class="ttc" id="classarmnn_1_1_i_output_slot_xhtml_a9943775a364fc4ab53b85ac88f311886"><div class="ttname"><a href="classarmnn_1_1_i_output_slot.xhtml#a9943775a364fc4ab53b85ac88f311886">armnn::IOutputSlot::GetTensorInfo</a></div><div class="ttdeci">virtual const TensorInfo &amp; GetTensorInfo() const =0</div></div>
<div class="ttc" id="est_utils_2_graph_utils_8hpp_xhtml"><div class="ttname"><a href="est_utils_2_graph_utils_8hpp.xhtml">GraphUtils.hpp</a></div></div>
<div class="ttc" id="_graph_utils_8cpp_xhtml_a4c04337db4d5f380219a005657a8223b"><div class="ttname"><a href="_graph_utils_8cpp.xhtml#a4c04337db4d5f380219a005657a8223b">CheckNumberOfInputSlot</a></div><div class="ttdeci">bool CheckNumberOfInputSlot(armnn::Layer *layer, unsigned int num)</div><div class="ttdef"><b>Definition:</b> <a href="_graph_utils_8cpp_source.xhtml#l00034">GraphUtils.cpp:34</a></div></div>
<div class="ttc" id="classarmnn_1_1_i_output_slot_xhtml_aab97b09d9ee85a105883949abcae52f3"><div class="ttname"><a href="classarmnn_1_1_i_output_slot.xhtml#aab97b09d9ee85a105883949abcae52f3">armnn::IOutputSlot::GetNumConnections</a></div><div class="ttdeci">virtual unsigned int GetNumConnections() const =0</div></div>
<div class="ttc" id="_graph_utils_8cpp_xhtml_aada2e27f100807f5786eecb03390ba58"><div class="ttname"><a href="_graph_utils_8cpp.xhtml#aada2e27f100807f5786eecb03390ba58">CheckNumberOfOutputSlot</a></div><div class="ttdeci">bool CheckNumberOfOutputSlot(armnn::Layer *layer, unsigned int num)</div><div class="ttdef"><b>Definition:</b> <a href="_graph_utils_8cpp_source.xhtml#l00039">GraphUtils.cpp:39</a></div></div>
<div class="ttc" id="classarmnn_1_1_graph_xhtml_a9a7209345edfdb2b066b0ceb66414d7c"><div class="ttname"><a href="classarmnn_1_1_graph.xhtml#a9a7209345edfdb2b066b0ceb66414d7c">armnn::Graph::TopologicalSort</a></div><div class="ttdeci">Graph &amp; TopologicalSort()</div><div class="ttdoc">Sorts layers in topological order and return this. </div><div class="ttdef"><b>Definition:</b> <a href="_graph_8hpp_source.xhtml#l00182">Graph.hpp:182</a></div></div>
<div class="ttc" id="classarmnn_1_1_graph_xhtml_afd329ee7d721aa6cdaacb8391308e34f"><div class="ttname"><a href="classarmnn_1_1_graph.xhtml#afd329ee7d721aa6cdaacb8391308e34f">armnn::Graph::Print</a></div><div class="ttdeci">Status Print() const</div><div class="ttdef"><b>Definition:</b> <a href="_graph_8cpp_source.xhtml#l00061">Graph.cpp:61</a></div></div>
<div class="ttc" id="classarmnn_1_1_layer_xhtml"><div class="ttname"><a href="classarmnn_1_1_layer.xhtml">armnn::Layer</a></div><div class="ttdef"><b>Definition:</b> <a href="_layer_8hpp_source.xhtml#l00215">Layer.hpp:215</a></div></div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="dir_68267d1309a1af8e8297ef4c3efbcdba.xhtml">src</a></li><li class="navelem"><a class="el" href="dir_f574f3650e467f7ec35d628d20229555.xhtml">armnnTestUtils</a></li><li class="navelem"><a class="el" href="_graph_utils_8cpp.xhtml">GraphUtils.cpp</a></li>
    <li class="footer">Generated on Tue Feb 22 2022 11:39:31 for ArmNN by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.13 </li>
  </ul>
</div>
</body>
</html>
