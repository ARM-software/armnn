<!-- Copyright (c) 2020 ARM Limited. -->
<!--                                 -->
<!-- SPDX-License-Identifier: MIT    -->
<!--                                 -->
<!-- HTML header for doxygen 1.8.13-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.13"/>
<meta name="robots" content="NOINDEX, NOFOLLOW" />
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>ArmNN: src/backends/backendsCommon/test/layerTests/DebugTestImpl.cpp Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script><script type="text/javascript" src="http://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="stylesheet.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <img alt="ArmNN" src="Arm_NN_horizontal_blue.png" style="max-width: 10rem; margin-top: .5rem; margin-left 10px"/>
  <td style="padding-left: 0.5em;">
   <div id="projectname">
   &#160;<span id="projectnumber">22.05</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.13 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
$(document).ready(function(){initNavTree('_debug_test_impl_8cpp_source.xhtml','');});
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="headertitle">
<div class="title">DebugTestImpl.cpp</div>  </div>
</div><!--header-->
<div class="contents">
<a href="_debug_test_impl_8cpp.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="comment">//</span></div><div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="comment">// Copyright Â© 2017 Arm Ltd and Contributors. All rights reserved.</span></div><div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="comment">// SPDX-License-Identifier: MIT</span></div><div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="comment">//</span></div><div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;</div><div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_debug_test_impl_8hpp.xhtml">DebugTestImpl.hpp</a>&quot;</span></div><div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;</div><div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="preprocessor">#include &lt;<a class="code" href="_quantize_helper_8hpp.xhtml">armnnUtils/QuantizeHelper.hpp</a>&gt;</span></div><div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="preprocessor">#include &lt;<a class="code" href="_resolve_type_8hpp.xhtml">ResolveType.hpp</a>&gt;</span></div><div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;</div><div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;</div><div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;<span class="preprocessor">#include &lt;<a class="code" href="include_2armnn_test_utils_2_tensor_copy_utils_8hpp.xhtml">armnnTestUtils/TensorCopyUtils.hpp</a>&gt;</span></div><div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;<span class="preprocessor">#include &lt;<a class="code" href="include_2armnn_test_utils_2_workload_test_utils_8hpp.xhtml">armnnTestUtils/WorkloadTestUtils.hpp</a>&gt;</span></div><div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;</div><div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;<span class="preprocessor">#include &lt;<a class="code" href="include_2armnn_test_utils_2_tensor_helpers_8hpp.xhtml">armnnTestUtils/TensorHelpers.hpp</a>&gt;</span></div><div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;</div><div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;<span class="preprocessor">#include &lt;doctest/doctest.h&gt;</span></div><div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;</div><div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;<span class="keyword">namespace</span></div><div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;{</div><div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;</div><div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;<span class="keyword">template</span>&lt;<span class="keyword">typename</span> T, std::<span class="keywordtype">size_t</span> Dim&gt;</div><div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;<a class="code" href="struct_layer_test_result.xhtml">LayerTestResult&lt;T, Dim&gt;</a> DebugTestImpl(</div><div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;    <a class="code" href="classarmnn_1_1_i_workload_factory.xhtml">armnn::IWorkloadFactory</a>&amp; workloadFactory,</div><div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;    <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_i_backend_internal.xhtml#a693b40e6b94e958836aeb0410ca186bd">armnn::IBackendInternal::IMemoryManagerSharedPtr</a>&amp; memoryManager,</div><div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;    <a class="code" href="classarmnn_1_1_tensor_info.xhtml">armnn::TensorInfo</a>&amp; inputTensorInfo,</div><div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;    <a class="code" href="classarmnn_1_1_tensor_info.xhtml">armnn::TensorInfo</a>&amp; outputTensorInfo,</div><div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;    std::vector&lt;float&gt;&amp; inputData,</div><div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;    std::vector&lt;float&gt;&amp; outputExpectedData,</div><div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;    <a class="code" href="structarmnn_1_1_debug_queue_descriptor.xhtml">armnn::DebugQueueDescriptor</a> descriptor,</div><div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;    <span class="keyword">const</span> std::string expectedStringOutput,</div><div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">float</span> qScale = 1.0f,</div><div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;    <span class="keyword">const</span> int32_t qOffset = 0)</div><div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;{</div><div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;    <a class="code" href="namespacearmnn.xhtml#a44affeeb090c3c6a3062830562672e84">IgnoreUnused</a>(memoryManager);</div><div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;    <span class="keywordflow">if</span>(armnn::IsQuantizedType&lt;T&gt;())</div><div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;    {</div><div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;        inputTensorInfo.<a class="code" href="classarmnn_1_1_tensor_info.xhtml#a685739c4eb65a580e075282cfe6787d6">SetQuantizationScale</a>(qScale);</div><div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;        inputTensorInfo.<a class="code" href="classarmnn_1_1_tensor_info.xhtml#a63cbc581012c957f9d68d224ddc3e43c">SetQuantizationOffset</a>(qOffset);</div><div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;</div><div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;        outputTensorInfo.<a class="code" href="classarmnn_1_1_tensor_info.xhtml#a685739c4eb65a580e075282cfe6787d6">SetQuantizationScale</a>(qScale);</div><div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;        outputTensorInfo.<a class="code" href="classarmnn_1_1_tensor_info.xhtml#a63cbc581012c957f9d68d224ddc3e43c">SetQuantizationOffset</a>(qOffset);</div><div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;    }</div><div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;</div><div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;    std::vector&lt;T&gt; input = armnnUtils::QuantizedVector&lt;T&gt;(inputData, qScale, qOffset);</div><div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;</div><div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;    std::vector&lt;T&gt; actualOutput(outputTensorInfo.<a class="code" href="classarmnn_1_1_tensor_info.xhtml#a8846406ac37fbd2204f0be16ee05d5b7">GetNumElements</a>());</div><div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;    std::vector&lt;T&gt; expectedOutput = armnnUtils::QuantizedVector&lt;T&gt;(outputExpectedData, qScale, qOffset);</div><div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;</div><div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;    <a class="code" href="_deprecated_8hpp.xhtml#ab66a241a0ed3ee89c866e777b035d0ed">ARMNN_NO_DEPRECATE_WARN_BEGIN</a></div><div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;    std::unique_ptr&lt;armnn::ITensorHandle&gt; inputHandle = workloadFactory.<a class="code" href="classarmnn_1_1_i_workload_factory.xhtml#a15c140be4ddceffee16436f009d3ed94">CreateTensorHandle</a>(inputTensorInfo);</div><div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;    std::unique_ptr&lt;armnn::ITensorHandle&gt; outputHandle = workloadFactory.<a class="code" href="classarmnn_1_1_i_workload_factory.xhtml#a15c140be4ddceffee16436f009d3ed94">CreateTensorHandle</a>(outputTensorInfo);</div><div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;    <a class="code" href="_deprecated_8hpp.xhtml#ad762b11b48e5c1d1c1743f529485728a">ARMNN_NO_DEPRECATE_WARN_END</a></div><div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;</div><div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;    <a class="code" href="structarmnn_1_1_workload_info.xhtml">armnn::WorkloadInfo</a> <a class="code" href="namespacearmnn.xhtml#a4dc0adc6737b5944e7671bee71788407acaf9b6b99962bf5c2264824231d7a40c">info</a>;</div><div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;    AddInputToWorkload(descriptor, info, inputTensorInfo, inputHandle.get());</div><div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;    AddOutputToWorkload(descriptor, info, outputTensorInfo, outputHandle.get());</div><div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;</div><div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;    std::unique_ptr&lt;armnn::IWorkload&gt; workload = workloadFactory.<a class="code" href="classarmnn_1_1_i_workload_factory.xhtml#a13060ebb89d2c21a7a5d897e99cccf72">CreateWorkload</a>(<a class="code" href="namespacearmnn.xhtml#a56943a0946e5f15e5e58054b8e7a04a4aa603905470e2a5b8c13e96b579ef0dba">armnn::LayerType::Debug</a>,</div><div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;                                                                                descriptor,</div><div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;                                                                                info);</div><div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;</div><div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;    inputHandle-&gt;Allocate();</div><div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;    outputHandle-&gt;Allocate();</div><div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;</div><div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;    <a class="code" href="include_2armnn_test_utils_2_tensor_copy_utils_8hpp.xhtml#ae15f1a3c55d2db87683577de9fa4437c">CopyDataToITensorHandle</a>(inputHandle.get(), input.data());</div><div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;</div><div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;    std::ostringstream oss;</div><div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;    std::streambuf* coutStreambuf = std::cout.rdbuf();</div><div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;    std::cout.rdbuf(oss.rdbuf());</div><div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;</div><div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;    ExecuteWorkload(*workload, memoryManager);</div><div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;</div><div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;    std::cout.rdbuf(coutStreambuf);</div><div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;</div><div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;    CHECK(oss.str() == expectedStringOutput);</div><div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;</div><div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;    <a class="code" href="include_2armnn_test_utils_2_tensor_copy_utils_8hpp.xhtml#ab5dfed8358e500ed523d78090ec78e88">CopyDataFromITensorHandle</a>(actualOutput.data(), outputHandle.get());</div><div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;</div><div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="struct_layer_test_result.xhtml">LayerTestResult&lt;T, Dim&gt;</a>(actualOutput,</div><div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;                                   expectedOutput,</div><div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;                                   outputHandle-&gt;GetShape(),</div><div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;                                   outputTensorInfo.<a class="code" href="classarmnn_1_1_tensor_info.xhtml#a8b5d0f8a24e9d9238f412260a552acf8">GetShape</a>());</div><div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;}</div><div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;</div><div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;<span class="keyword">template</span> &lt;armnn::DataType ArmnnType, <span class="keyword">typename</span> T = armnn::ResolveType&lt;ArmnnType&gt;&gt;</div><div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;<a class="code" href="struct_layer_test_result.xhtml">LayerTestResult&lt;T, 4&gt;</a> Debug4dTest(</div><div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;    <a class="code" href="classarmnn_1_1_i_workload_factory.xhtml">armnn::IWorkloadFactory</a>&amp; workloadFactory,</div><div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;    <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_i_backend_internal.xhtml#a693b40e6b94e958836aeb0410ca186bd">armnn::IBackendInternal::IMemoryManagerSharedPtr</a>&amp; memoryManager)</div><div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;{</div><div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;    <a class="code" href="classarmnn_1_1_tensor_info.xhtml">armnn::TensorInfo</a> inputTensorInfo;</div><div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;    <a class="code" href="classarmnn_1_1_tensor_info.xhtml">armnn::TensorInfo</a> outputTensorInfo;</div><div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;</div><div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;    <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> inputShape[]  = {1, 2, 2, 3};</div><div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;    <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> outputShape[] = {1, 2, 2, 3};</div><div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;</div><div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;    <a class="code" href="structarmnn_1_1_debug_queue_descriptor.xhtml">armnn::DebugQueueDescriptor</a> desc;</div><div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;    desc.<a class="code" href="structarmnn_1_1_debug_queue_descriptor.xhtml#a04f1026633579df1913f80db2877ce8c">m_Guid</a> = 1;</div><div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;    desc.<a class="code" href="structarmnn_1_1_debug_queue_descriptor.xhtml#a2b4595e9b6c840810995558801be6f6c">m_LayerName</a> = <span class="stringliteral">&quot;TestOutput&quot;</span>;</div><div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;    desc.<a class="code" href="structarmnn_1_1_debug_queue_descriptor.xhtml#ab53d42063d018ffebfceb019b26bf65a">m_SlotIndex</a> = 0;</div><div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;</div><div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;    inputTensorInfo = <a class="code" href="classarmnn_1_1_tensor_info.xhtml">armnn::TensorInfo</a>(4, inputShape, ArmnnType);</div><div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;    outputTensorInfo = <a class="code" href="classarmnn_1_1_tensor_info.xhtml">armnn::TensorInfo</a>(4, outputShape, ArmnnType);</div><div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;</div><div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;    std::vector&lt;float&gt; input = std::vector&lt;float&gt;(</div><div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;    {</div><div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;        1.0f,   2.0f,  3.0f,</div><div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;        4.0f,   5.0f,  6.0f,</div><div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;        7.0f,   8.0f,  9.0f,</div><div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;        10.0f, 11.0f, 12.0f,</div><div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;    });</div><div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;</div><div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;    std::vector&lt;float&gt; outputExpected = std::vector&lt;float&gt;(</div><div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;    {</div><div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;        1.0f,   2.0f,  3.0f,</div><div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;        4.0f,   5.0f,  6.0f,</div><div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;        7.0f,   8.0f,  9.0f,</div><div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;        10.0f, 11.0f, 12.0f,</div><div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;    });</div><div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;</div><div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;    <span class="keyword">const</span> std::string expectedStringOutput =</div><div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;        <span class="stringliteral">&quot;{ \&quot;layerGuid\&quot;: 1,&quot;</span></div><div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;        <span class="stringliteral">&quot; \&quot;layerName\&quot;: \&quot;TestOutput\&quot;,&quot;</span></div><div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;        <span class="stringliteral">&quot; \&quot;outputSlot\&quot;: 0,&quot;</span></div><div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;        <span class="stringliteral">&quot; \&quot;shape\&quot;: [1, 2, 2, 3],&quot;</span></div><div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;        <span class="stringliteral">&quot; \&quot;min\&quot;: 1, \&quot;max\&quot;: 12,&quot;</span></div><div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;        <span class="stringliteral">&quot; \&quot;data\&quot;: [[[[1, 2, 3], [4, 5, 6]], [[7, 8, 9], [10, 11, 12]]]] }\n&quot;</span>;</div><div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;</div><div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;    <span class="keywordflow">return</span> DebugTestImpl&lt;T, 4&gt;(workloadFactory,</div><div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;                               memoryManager,</div><div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;                               inputTensorInfo,</div><div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;                               outputTensorInfo,</div><div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;                               input,</div><div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;                               outputExpected,</div><div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;                               desc,</div><div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;                               expectedStringOutput);</div><div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;}</div><div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;</div><div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;<span class="keyword">template</span> &lt;armnn::DataType ArmnnType, <span class="keyword">typename</span> T = armnn::ResolveType&lt;ArmnnType&gt;&gt;</div><div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;<a class="code" href="struct_layer_test_result.xhtml">LayerTestResult&lt;T, 3&gt;</a> Debug3dTest(</div><div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;    <a class="code" href="classarmnn_1_1_i_workload_factory.xhtml">armnn::IWorkloadFactory</a>&amp; workloadFactory,</div><div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;    <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_i_backend_internal.xhtml#a693b40e6b94e958836aeb0410ca186bd">armnn::IBackendInternal::IMemoryManagerSharedPtr</a>&amp; memoryManager)</div><div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;{</div><div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;    <a class="code" href="classarmnn_1_1_tensor_info.xhtml">armnn::TensorInfo</a> inputTensorInfo;</div><div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;    <a class="code" href="classarmnn_1_1_tensor_info.xhtml">armnn::TensorInfo</a> outputTensorInfo;</div><div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;</div><div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;    <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> inputShape[]  = {3, 3, 1};</div><div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;    <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> outputShape[] = {3, 3, 1};</div><div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;</div><div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;    <a class="code" href="structarmnn_1_1_debug_queue_descriptor.xhtml">armnn::DebugQueueDescriptor</a> desc;</div><div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;    desc.<a class="code" href="structarmnn_1_1_debug_queue_descriptor.xhtml#a04f1026633579df1913f80db2877ce8c">m_Guid</a> = 1;</div><div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;    desc.<a class="code" href="structarmnn_1_1_debug_queue_descriptor.xhtml#a2b4595e9b6c840810995558801be6f6c">m_LayerName</a> = <span class="stringliteral">&quot;TestOutput&quot;</span>;</div><div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;    desc.<a class="code" href="structarmnn_1_1_debug_queue_descriptor.xhtml#ab53d42063d018ffebfceb019b26bf65a">m_SlotIndex</a> = 0;</div><div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;</div><div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;    inputTensorInfo = <a class="code" href="classarmnn_1_1_tensor_info.xhtml">armnn::TensorInfo</a>(3, inputShape, ArmnnType);</div><div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;    outputTensorInfo = <a class="code" href="classarmnn_1_1_tensor_info.xhtml">armnn::TensorInfo</a>(3, outputShape, ArmnnType);</div><div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160;</div><div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;    std::vector&lt;float&gt; input = std::vector&lt;float&gt;(</div><div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160;    {</div><div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160;        1.0f, 2.0f, 3.0f,</div><div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160;        4.0f, 5.0f, 6.0f,</div><div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160;        7.0f, 8.0f, 9.0f,</div><div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160;    });</div><div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;</div><div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160;    std::vector&lt;float&gt; outputExpected = std::vector&lt;float&gt;(</div><div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160;    {</div><div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160;        1.0f, 2.0f, 3.0f,</div><div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160;        4.0f, 5.0f, 6.0f,</div><div class="line"><a name="l00169"></a><span class="lineno">  169</span>&#160;        7.0f, 8.0f, 9.0f,</div><div class="line"><a name="l00170"></a><span class="lineno">  170</span>&#160;    });</div><div class="line"><a name="l00171"></a><span class="lineno">  171</span>&#160;</div><div class="line"><a name="l00172"></a><span class="lineno">  172</span>&#160;    <span class="keyword">const</span> std::string expectedStringOutput =</div><div class="line"><a name="l00173"></a><span class="lineno">  173</span>&#160;        <span class="stringliteral">&quot;{ \&quot;layerGuid\&quot;: 1,&quot;</span></div><div class="line"><a name="l00174"></a><span class="lineno">  174</span>&#160;        <span class="stringliteral">&quot; \&quot;layerName\&quot;: \&quot;TestOutput\&quot;,&quot;</span></div><div class="line"><a name="l00175"></a><span class="lineno">  175</span>&#160;        <span class="stringliteral">&quot; \&quot;outputSlot\&quot;: 0,&quot;</span></div><div class="line"><a name="l00176"></a><span class="lineno">  176</span>&#160;        <span class="stringliteral">&quot; \&quot;shape\&quot;: [3, 3, 1],&quot;</span></div><div class="line"><a name="l00177"></a><span class="lineno">  177</span>&#160;        <span class="stringliteral">&quot; \&quot;min\&quot;: 1, \&quot;max\&quot;: 9,&quot;</span></div><div class="line"><a name="l00178"></a><span class="lineno">  178</span>&#160;        <span class="stringliteral">&quot; \&quot;data\&quot;: [[[1], [2], [3]], [[4], [5], [6]], [[7], [8], [9]]] }\n&quot;</span>;</div><div class="line"><a name="l00179"></a><span class="lineno">  179</span>&#160;</div><div class="line"><a name="l00180"></a><span class="lineno">  180</span>&#160;    <span class="keywordflow">return</span> DebugTestImpl&lt;T, 3&gt;(workloadFactory,</div><div class="line"><a name="l00181"></a><span class="lineno">  181</span>&#160;                               memoryManager,</div><div class="line"><a name="l00182"></a><span class="lineno">  182</span>&#160;                               inputTensorInfo,</div><div class="line"><a name="l00183"></a><span class="lineno">  183</span>&#160;                               outputTensorInfo,</div><div class="line"><a name="l00184"></a><span class="lineno">  184</span>&#160;                               input,</div><div class="line"><a name="l00185"></a><span class="lineno">  185</span>&#160;                               outputExpected,</div><div class="line"><a name="l00186"></a><span class="lineno">  186</span>&#160;                               desc,</div><div class="line"><a name="l00187"></a><span class="lineno">  187</span>&#160;                               expectedStringOutput);</div><div class="line"><a name="l00188"></a><span class="lineno">  188</span>&#160;}</div><div class="line"><a name="l00189"></a><span class="lineno">  189</span>&#160;</div><div class="line"><a name="l00190"></a><span class="lineno">  190</span>&#160;<span class="keyword">template</span> &lt;armnn::DataType ArmnnType, <span class="keyword">typename</span> T = armnn::ResolveType&lt;ArmnnType&gt;&gt;</div><div class="line"><a name="l00191"></a><span class="lineno">  191</span>&#160;<a class="code" href="struct_layer_test_result.xhtml">LayerTestResult&lt;T, 2&gt;</a> Debug2dTest(</div><div class="line"><a name="l00192"></a><span class="lineno">  192</span>&#160;    <a class="code" href="classarmnn_1_1_i_workload_factory.xhtml">armnn::IWorkloadFactory</a>&amp; workloadFactory,</div><div class="line"><a name="l00193"></a><span class="lineno">  193</span>&#160;    <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_i_backend_internal.xhtml#a693b40e6b94e958836aeb0410ca186bd">armnn::IBackendInternal::IMemoryManagerSharedPtr</a>&amp; memoryManager)</div><div class="line"><a name="l00194"></a><span class="lineno">  194</span>&#160;{</div><div class="line"><a name="l00195"></a><span class="lineno">  195</span>&#160;    <a class="code" href="classarmnn_1_1_tensor_info.xhtml">armnn::TensorInfo</a> inputTensorInfo;</div><div class="line"><a name="l00196"></a><span class="lineno">  196</span>&#160;    <a class="code" href="classarmnn_1_1_tensor_info.xhtml">armnn::TensorInfo</a> outputTensorInfo;</div><div class="line"><a name="l00197"></a><span class="lineno">  197</span>&#160;</div><div class="line"><a name="l00198"></a><span class="lineno">  198</span>&#160;    <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> inputShape[]  = {2, 2};</div><div class="line"><a name="l00199"></a><span class="lineno">  199</span>&#160;    <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> outputShape[] = {2, 2};</div><div class="line"><a name="l00200"></a><span class="lineno">  200</span>&#160;</div><div class="line"><a name="l00201"></a><span class="lineno">  201</span>&#160;    <a class="code" href="structarmnn_1_1_debug_queue_descriptor.xhtml">armnn::DebugQueueDescriptor</a> desc;</div><div class="line"><a name="l00202"></a><span class="lineno">  202</span>&#160;    desc.<a class="code" href="structarmnn_1_1_debug_queue_descriptor.xhtml#a04f1026633579df1913f80db2877ce8c">m_Guid</a> = 1;</div><div class="line"><a name="l00203"></a><span class="lineno">  203</span>&#160;    desc.<a class="code" href="structarmnn_1_1_debug_queue_descriptor.xhtml#a2b4595e9b6c840810995558801be6f6c">m_LayerName</a> = <span class="stringliteral">&quot;TestOutput&quot;</span>;</div><div class="line"><a name="l00204"></a><span class="lineno">  204</span>&#160;    desc.<a class="code" href="structarmnn_1_1_debug_queue_descriptor.xhtml#ab53d42063d018ffebfceb019b26bf65a">m_SlotIndex</a> = 0;</div><div class="line"><a name="l00205"></a><span class="lineno">  205</span>&#160;</div><div class="line"><a name="l00206"></a><span class="lineno">  206</span>&#160;    inputTensorInfo = <a class="code" href="classarmnn_1_1_tensor_info.xhtml">armnn::TensorInfo</a>(2, inputShape, ArmnnType);</div><div class="line"><a name="l00207"></a><span class="lineno">  207</span>&#160;    outputTensorInfo = <a class="code" href="classarmnn_1_1_tensor_info.xhtml">armnn::TensorInfo</a>(2, outputShape, ArmnnType);</div><div class="line"><a name="l00208"></a><span class="lineno">  208</span>&#160;</div><div class="line"><a name="l00209"></a><span class="lineno">  209</span>&#160;    std::vector&lt;float&gt; input = std::vector&lt;float&gt;(</div><div class="line"><a name="l00210"></a><span class="lineno">  210</span>&#160;    {</div><div class="line"><a name="l00211"></a><span class="lineno">  211</span>&#160;        1.0f, 2.0f,</div><div class="line"><a name="l00212"></a><span class="lineno">  212</span>&#160;        3.0f, 4.0f,</div><div class="line"><a name="l00213"></a><span class="lineno">  213</span>&#160;    });</div><div class="line"><a name="l00214"></a><span class="lineno">  214</span>&#160;</div><div class="line"><a name="l00215"></a><span class="lineno">  215</span>&#160;    std::vector&lt;float&gt; outputExpected = std::vector&lt;float&gt;(</div><div class="line"><a name="l00216"></a><span class="lineno">  216</span>&#160;    {</div><div class="line"><a name="l00217"></a><span class="lineno">  217</span>&#160;        1.0f, 2.0f,</div><div class="line"><a name="l00218"></a><span class="lineno">  218</span>&#160;        3.0f, 4.0f,</div><div class="line"><a name="l00219"></a><span class="lineno">  219</span>&#160;    });</div><div class="line"><a name="l00220"></a><span class="lineno">  220</span>&#160;</div><div class="line"><a name="l00221"></a><span class="lineno">  221</span>&#160;    <span class="keyword">const</span> std::string expectedStringOutput =</div><div class="line"><a name="l00222"></a><span class="lineno">  222</span>&#160;        <span class="stringliteral">&quot;{ \&quot;layerGuid\&quot;: 1,&quot;</span></div><div class="line"><a name="l00223"></a><span class="lineno">  223</span>&#160;        <span class="stringliteral">&quot; \&quot;layerName\&quot;: \&quot;TestOutput\&quot;,&quot;</span></div><div class="line"><a name="l00224"></a><span class="lineno">  224</span>&#160;        <span class="stringliteral">&quot; \&quot;outputSlot\&quot;: 0,&quot;</span></div><div class="line"><a name="l00225"></a><span class="lineno">  225</span>&#160;        <span class="stringliteral">&quot; \&quot;shape\&quot;: [2, 2],&quot;</span></div><div class="line"><a name="l00226"></a><span class="lineno">  226</span>&#160;        <span class="stringliteral">&quot; \&quot;min\&quot;: 1, \&quot;max\&quot;: 4,&quot;</span></div><div class="line"><a name="l00227"></a><span class="lineno">  227</span>&#160;        <span class="stringliteral">&quot; \&quot;data\&quot;: [[1, 2], [3, 4]] }\n&quot;</span>;</div><div class="line"><a name="l00228"></a><span class="lineno">  228</span>&#160;</div><div class="line"><a name="l00229"></a><span class="lineno">  229</span>&#160;    <span class="keywordflow">return</span> DebugTestImpl&lt;T, 2&gt;(workloadFactory,</div><div class="line"><a name="l00230"></a><span class="lineno">  230</span>&#160;                               memoryManager,</div><div class="line"><a name="l00231"></a><span class="lineno">  231</span>&#160;                               inputTensorInfo,</div><div class="line"><a name="l00232"></a><span class="lineno">  232</span>&#160;                               outputTensorInfo,</div><div class="line"><a name="l00233"></a><span class="lineno">  233</span>&#160;                               input,</div><div class="line"><a name="l00234"></a><span class="lineno">  234</span>&#160;                               outputExpected,</div><div class="line"><a name="l00235"></a><span class="lineno">  235</span>&#160;                               desc,</div><div class="line"><a name="l00236"></a><span class="lineno">  236</span>&#160;                               expectedStringOutput);</div><div class="line"><a name="l00237"></a><span class="lineno">  237</span>&#160;}</div><div class="line"><a name="l00238"></a><span class="lineno">  238</span>&#160;</div><div class="line"><a name="l00239"></a><span class="lineno">  239</span>&#160;<span class="keyword">template</span> &lt;armnn::DataType ArmnnType, <span class="keyword">typename</span> T = armnn::ResolveType&lt;ArmnnType&gt;&gt;</div><div class="line"><a name="l00240"></a><span class="lineno">  240</span>&#160;<a class="code" href="struct_layer_test_result.xhtml">LayerTestResult&lt;T, 1&gt;</a> Debug1dTest(</div><div class="line"><a name="l00241"></a><span class="lineno">  241</span>&#160;    <a class="code" href="classarmnn_1_1_i_workload_factory.xhtml">armnn::IWorkloadFactory</a>&amp; workloadFactory,</div><div class="line"><a name="l00242"></a><span class="lineno">  242</span>&#160;    <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_i_backend_internal.xhtml#a693b40e6b94e958836aeb0410ca186bd">armnn::IBackendInternal::IMemoryManagerSharedPtr</a>&amp; memoryManager)</div><div class="line"><a name="l00243"></a><span class="lineno">  243</span>&#160;{</div><div class="line"><a name="l00244"></a><span class="lineno">  244</span>&#160;    <a class="code" href="classarmnn_1_1_tensor_info.xhtml">armnn::TensorInfo</a> inputTensorInfo;</div><div class="line"><a name="l00245"></a><span class="lineno">  245</span>&#160;    <a class="code" href="classarmnn_1_1_tensor_info.xhtml">armnn::TensorInfo</a> outputTensorInfo;</div><div class="line"><a name="l00246"></a><span class="lineno">  246</span>&#160;</div><div class="line"><a name="l00247"></a><span class="lineno">  247</span>&#160;    <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> inputShape[]  = {4};</div><div class="line"><a name="l00248"></a><span class="lineno">  248</span>&#160;    <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> outputShape[] = {4};</div><div class="line"><a name="l00249"></a><span class="lineno">  249</span>&#160;</div><div class="line"><a name="l00250"></a><span class="lineno">  250</span>&#160;    <a class="code" href="structarmnn_1_1_debug_queue_descriptor.xhtml">armnn::DebugQueueDescriptor</a> desc;</div><div class="line"><a name="l00251"></a><span class="lineno">  251</span>&#160;    desc.<a class="code" href="structarmnn_1_1_debug_queue_descriptor.xhtml#a04f1026633579df1913f80db2877ce8c">m_Guid</a> = 1;</div><div class="line"><a name="l00252"></a><span class="lineno">  252</span>&#160;    desc.<a class="code" href="structarmnn_1_1_debug_queue_descriptor.xhtml#a2b4595e9b6c840810995558801be6f6c">m_LayerName</a> = <span class="stringliteral">&quot;TestOutput&quot;</span>;</div><div class="line"><a name="l00253"></a><span class="lineno">  253</span>&#160;    desc.<a class="code" href="structarmnn_1_1_debug_queue_descriptor.xhtml#ab53d42063d018ffebfceb019b26bf65a">m_SlotIndex</a> = 0;</div><div class="line"><a name="l00254"></a><span class="lineno">  254</span>&#160;</div><div class="line"><a name="l00255"></a><span class="lineno">  255</span>&#160;    inputTensorInfo = <a class="code" href="classarmnn_1_1_tensor_info.xhtml">armnn::TensorInfo</a>(1, inputShape, ArmnnType);</div><div class="line"><a name="l00256"></a><span class="lineno">  256</span>&#160;    outputTensorInfo = <a class="code" href="classarmnn_1_1_tensor_info.xhtml">armnn::TensorInfo</a>(1, outputShape, ArmnnType);</div><div class="line"><a name="l00257"></a><span class="lineno">  257</span>&#160;</div><div class="line"><a name="l00258"></a><span class="lineno">  258</span>&#160;    std::vector&lt;float&gt; input = std::vector&lt;float&gt;(</div><div class="line"><a name="l00259"></a><span class="lineno">  259</span>&#160;    {</div><div class="line"><a name="l00260"></a><span class="lineno">  260</span>&#160;        1.0f, 2.0f, 3.0f, 4.0f,</div><div class="line"><a name="l00261"></a><span class="lineno">  261</span>&#160;    });</div><div class="line"><a name="l00262"></a><span class="lineno">  262</span>&#160;</div><div class="line"><a name="l00263"></a><span class="lineno">  263</span>&#160;    std::vector&lt;float&gt; outputExpected = std::vector&lt;float&gt;(</div><div class="line"><a name="l00264"></a><span class="lineno">  264</span>&#160;    {</div><div class="line"><a name="l00265"></a><span class="lineno">  265</span>&#160;        1.0f, 2.0f, 3.0f, 4.0f,</div><div class="line"><a name="l00266"></a><span class="lineno">  266</span>&#160;    });</div><div class="line"><a name="l00267"></a><span class="lineno">  267</span>&#160;</div><div class="line"><a name="l00268"></a><span class="lineno">  268</span>&#160;    <span class="keyword">const</span> std::string expectedStringOutput =</div><div class="line"><a name="l00269"></a><span class="lineno">  269</span>&#160;        <span class="stringliteral">&quot;{ \&quot;layerGuid\&quot;: 1,&quot;</span></div><div class="line"><a name="l00270"></a><span class="lineno">  270</span>&#160;        <span class="stringliteral">&quot; \&quot;layerName\&quot;: \&quot;TestOutput\&quot;,&quot;</span></div><div class="line"><a name="l00271"></a><span class="lineno">  271</span>&#160;        <span class="stringliteral">&quot; \&quot;outputSlot\&quot;: 0,&quot;</span></div><div class="line"><a name="l00272"></a><span class="lineno">  272</span>&#160;        <span class="stringliteral">&quot; \&quot;shape\&quot;: [4],&quot;</span></div><div class="line"><a name="l00273"></a><span class="lineno">  273</span>&#160;        <span class="stringliteral">&quot; \&quot;min\&quot;: 1, \&quot;max\&quot;: 4,&quot;</span></div><div class="line"><a name="l00274"></a><span class="lineno">  274</span>&#160;        <span class="stringliteral">&quot; \&quot;data\&quot;: [1, 2, 3, 4] }\n&quot;</span>;</div><div class="line"><a name="l00275"></a><span class="lineno">  275</span>&#160;</div><div class="line"><a name="l00276"></a><span class="lineno">  276</span>&#160;    <span class="keywordflow">return</span> DebugTestImpl&lt;T, 1&gt;(workloadFactory,</div><div class="line"><a name="l00277"></a><span class="lineno">  277</span>&#160;                               memoryManager,</div><div class="line"><a name="l00278"></a><span class="lineno">  278</span>&#160;                               inputTensorInfo,</div><div class="line"><a name="l00279"></a><span class="lineno">  279</span>&#160;                               outputTensorInfo,</div><div class="line"><a name="l00280"></a><span class="lineno">  280</span>&#160;                               input,</div><div class="line"><a name="l00281"></a><span class="lineno">  281</span>&#160;                               outputExpected,</div><div class="line"><a name="l00282"></a><span class="lineno">  282</span>&#160;                               desc,</div><div class="line"><a name="l00283"></a><span class="lineno">  283</span>&#160;                               expectedStringOutput);</div><div class="line"><a name="l00284"></a><span class="lineno">  284</span>&#160;}</div><div class="line"><a name="l00285"></a><span class="lineno">  285</span>&#160;</div><div class="line"><a name="l00286"></a><span class="lineno">  286</span>&#160;} <span class="comment">// anonymous namespace</span></div><div class="line"><a name="l00287"></a><span class="lineno">  287</span>&#160;</div><div class="line"><a name="l00288"></a><span class="lineno"><a class="line" href="_debug_test_impl_8hpp.xhtml#a3a17c31e0243a055d062f9ef00e00295">  288</a></span>&#160;<a class="code" href="struct_layer_test_result.xhtml">LayerTestResult&lt;float, 4&gt;</a> <a class="code" href="_debug_test_impl_8cpp.xhtml#a3a17c31e0243a055d062f9ef00e00295">Debug4dFloat32Test</a>(</div><div class="line"><a name="l00289"></a><span class="lineno">  289</span>&#160;    <a class="code" href="classarmnn_1_1_i_workload_factory.xhtml">armnn::IWorkloadFactory</a>&amp; workloadFactory,</div><div class="line"><a name="l00290"></a><span class="lineno">  290</span>&#160;    <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_i_backend_internal.xhtml#a693b40e6b94e958836aeb0410ca186bd">armnn::IBackendInternal::IMemoryManagerSharedPtr</a>&amp; memoryManager)</div><div class="line"><a name="l00291"></a><span class="lineno">  291</span>&#160;{</div><div class="line"><a name="l00292"></a><span class="lineno">  292</span>&#160;    <span class="keywordflow">return</span> Debug4dTest&lt;armnn::DataType::Float32&gt;(workloadFactory, memoryManager);</div><div class="line"><a name="l00293"></a><span class="lineno">  293</span>&#160;}</div><div class="line"><a name="l00294"></a><span class="lineno">  294</span>&#160;</div><div class="line"><a name="l00295"></a><span class="lineno"><a class="line" href="_debug_test_impl_8hpp.xhtml#ab27db9bc57b9d9285ef91e09a6ae1a2e">  295</a></span>&#160;<a class="code" href="struct_layer_test_result.xhtml">LayerTestResult&lt;float, 3&gt;</a> <a class="code" href="_debug_test_impl_8cpp.xhtml#ab27db9bc57b9d9285ef91e09a6ae1a2e">Debug3dFloat32Test</a>(</div><div class="line"><a name="l00296"></a><span class="lineno">  296</span>&#160;    <a class="code" href="classarmnn_1_1_i_workload_factory.xhtml">armnn::IWorkloadFactory</a>&amp; workloadFactory,</div><div class="line"><a name="l00297"></a><span class="lineno">  297</span>&#160;    <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_i_backend_internal.xhtml#a693b40e6b94e958836aeb0410ca186bd">armnn::IBackendInternal::IMemoryManagerSharedPtr</a>&amp; memoryManager)</div><div class="line"><a name="l00298"></a><span class="lineno">  298</span>&#160;{</div><div class="line"><a name="l00299"></a><span class="lineno">  299</span>&#160;    <span class="keywordflow">return</span> Debug3dTest&lt;armnn::DataType::Float32&gt;(workloadFactory, memoryManager);</div><div class="line"><a name="l00300"></a><span class="lineno">  300</span>&#160;}</div><div class="line"><a name="l00301"></a><span class="lineno">  301</span>&#160;</div><div class="line"><a name="l00302"></a><span class="lineno"><a class="line" href="_debug_test_impl_8hpp.xhtml#a340b57036ad22a70438e5e6b615eebfb">  302</a></span>&#160;<a class="code" href="struct_layer_test_result.xhtml">LayerTestResult&lt;float, 2&gt;</a> <a class="code" href="_debug_test_impl_8cpp.xhtml#a340b57036ad22a70438e5e6b615eebfb">Debug2dFloat32Test</a>(</div><div class="line"><a name="l00303"></a><span class="lineno">  303</span>&#160;    <a class="code" href="classarmnn_1_1_i_workload_factory.xhtml">armnn::IWorkloadFactory</a>&amp; workloadFactory,</div><div class="line"><a name="l00304"></a><span class="lineno">  304</span>&#160;    <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_i_backend_internal.xhtml#a693b40e6b94e958836aeb0410ca186bd">armnn::IBackendInternal::IMemoryManagerSharedPtr</a>&amp; memoryManager)</div><div class="line"><a name="l00305"></a><span class="lineno">  305</span>&#160;{</div><div class="line"><a name="l00306"></a><span class="lineno">  306</span>&#160;    <span class="keywordflow">return</span> Debug2dTest&lt;armnn::DataType::Float32&gt;(workloadFactory, memoryManager);</div><div class="line"><a name="l00307"></a><span class="lineno">  307</span>&#160;}</div><div class="line"><a name="l00308"></a><span class="lineno">  308</span>&#160;</div><div class="line"><a name="l00309"></a><span class="lineno"><a class="line" href="_debug_test_impl_8hpp.xhtml#a02e739d71284a1bb5cf25aa4e76ea034">  309</a></span>&#160;<a class="code" href="struct_layer_test_result.xhtml">LayerTestResult&lt;float, 1&gt;</a> <a class="code" href="_debug_test_impl_8cpp.xhtml#a02e739d71284a1bb5cf25aa4e76ea034">Debug1dFloat32Test</a>(</div><div class="line"><a name="l00310"></a><span class="lineno">  310</span>&#160;    <a class="code" href="classarmnn_1_1_i_workload_factory.xhtml">armnn::IWorkloadFactory</a>&amp; workloadFactory,</div><div class="line"><a name="l00311"></a><span class="lineno">  311</span>&#160;    <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_i_backend_internal.xhtml#a693b40e6b94e958836aeb0410ca186bd">armnn::IBackendInternal::IMemoryManagerSharedPtr</a>&amp; memoryManager)</div><div class="line"><a name="l00312"></a><span class="lineno">  312</span>&#160;{</div><div class="line"><a name="l00313"></a><span class="lineno">  313</span>&#160;    <span class="keywordflow">return</span> Debug1dTest&lt;armnn::DataType::Float32&gt;(workloadFactory, memoryManager);</div><div class="line"><a name="l00314"></a><span class="lineno">  314</span>&#160;}</div><div class="line"><a name="l00315"></a><span class="lineno">  315</span>&#160;</div><div class="line"><a name="l00316"></a><span class="lineno"><a class="line" href="_debug_test_impl_8hpp.xhtml#a9770886bff5c3815fc70738e3a673b08">  316</a></span>&#160;<a class="code" href="struct_layer_test_result.xhtml">LayerTestResult&lt;armnn::BFloat16, 4&gt;</a> <a class="code" href="_debug_test_impl_8cpp.xhtml#a9770886bff5c3815fc70738e3a673b08">Debug4dBFloat16Test</a>(</div><div class="line"><a name="l00317"></a><span class="lineno">  317</span>&#160;    <a class="code" href="classarmnn_1_1_i_workload_factory.xhtml">armnn::IWorkloadFactory</a>&amp; workloadFactory,</div><div class="line"><a name="l00318"></a><span class="lineno">  318</span>&#160;    <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_i_backend_internal.xhtml#a693b40e6b94e958836aeb0410ca186bd">armnn::IBackendInternal::IMemoryManagerSharedPtr</a>&amp; memoryManager)</div><div class="line"><a name="l00319"></a><span class="lineno">  319</span>&#160;{</div><div class="line"><a name="l00320"></a><span class="lineno">  320</span>&#160;    <span class="keywordflow">return</span> Debug4dTest&lt;armnn::DataType::BFloat16&gt;(workloadFactory, memoryManager);</div><div class="line"><a name="l00321"></a><span class="lineno">  321</span>&#160;}</div><div class="line"><a name="l00322"></a><span class="lineno">  322</span>&#160;</div><div class="line"><a name="l00323"></a><span class="lineno"><a class="line" href="_debug_test_impl_8hpp.xhtml#a9fc669585b91c13133f87ab8e3608c20">  323</a></span>&#160;<a class="code" href="struct_layer_test_result.xhtml">LayerTestResult&lt;armnn::BFloat16, 3&gt;</a> <a class="code" href="_debug_test_impl_8cpp.xhtml#a9fc669585b91c13133f87ab8e3608c20">Debug3dBFloat16Test</a>(</div><div class="line"><a name="l00324"></a><span class="lineno">  324</span>&#160;    <a class="code" href="classarmnn_1_1_i_workload_factory.xhtml">armnn::IWorkloadFactory</a>&amp; workloadFactory,</div><div class="line"><a name="l00325"></a><span class="lineno">  325</span>&#160;    <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_i_backend_internal.xhtml#a693b40e6b94e958836aeb0410ca186bd">armnn::IBackendInternal::IMemoryManagerSharedPtr</a>&amp; memoryManager)</div><div class="line"><a name="l00326"></a><span class="lineno">  326</span>&#160;{</div><div class="line"><a name="l00327"></a><span class="lineno">  327</span>&#160;    <span class="keywordflow">return</span> Debug3dTest&lt;armnn::DataType::BFloat16&gt;(workloadFactory, memoryManager);</div><div class="line"><a name="l00328"></a><span class="lineno">  328</span>&#160;}</div><div class="line"><a name="l00329"></a><span class="lineno">  329</span>&#160;</div><div class="line"><a name="l00330"></a><span class="lineno"><a class="line" href="_debug_test_impl_8hpp.xhtml#a1710c99292328a7e623f9326723bac52">  330</a></span>&#160;<a class="code" href="struct_layer_test_result.xhtml">LayerTestResult&lt;armnn::BFloat16, 2&gt;</a> <a class="code" href="_debug_test_impl_8cpp.xhtml#a1710c99292328a7e623f9326723bac52">Debug2dBFloat16Test</a>(</div><div class="line"><a name="l00331"></a><span class="lineno">  331</span>&#160;    <a class="code" href="classarmnn_1_1_i_workload_factory.xhtml">armnn::IWorkloadFactory</a>&amp; workloadFactory,</div><div class="line"><a name="l00332"></a><span class="lineno">  332</span>&#160;    <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_i_backend_internal.xhtml#a693b40e6b94e958836aeb0410ca186bd">armnn::IBackendInternal::IMemoryManagerSharedPtr</a>&amp; memoryManager)</div><div class="line"><a name="l00333"></a><span class="lineno">  333</span>&#160;{</div><div class="line"><a name="l00334"></a><span class="lineno">  334</span>&#160;    <span class="keywordflow">return</span> Debug2dTest&lt;armnn::DataType::BFloat16&gt;(workloadFactory, memoryManager);</div><div class="line"><a name="l00335"></a><span class="lineno">  335</span>&#160;}</div><div class="line"><a name="l00336"></a><span class="lineno">  336</span>&#160;</div><div class="line"><a name="l00337"></a><span class="lineno"><a class="line" href="_debug_test_impl_8hpp.xhtml#a7313bdcaf4c3cfbd900d583e888e10bf">  337</a></span>&#160;<a class="code" href="struct_layer_test_result.xhtml">LayerTestResult&lt;armnn::BFloat16, 1&gt;</a> <a class="code" href="_debug_test_impl_8cpp.xhtml#a7313bdcaf4c3cfbd900d583e888e10bf">Debug1dBFloat16Test</a>(</div><div class="line"><a name="l00338"></a><span class="lineno">  338</span>&#160;    <a class="code" href="classarmnn_1_1_i_workload_factory.xhtml">armnn::IWorkloadFactory</a>&amp; workloadFactory,</div><div class="line"><a name="l00339"></a><span class="lineno">  339</span>&#160;    <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_i_backend_internal.xhtml#a693b40e6b94e958836aeb0410ca186bd">armnn::IBackendInternal::IMemoryManagerSharedPtr</a>&amp; memoryManager)</div><div class="line"><a name="l00340"></a><span class="lineno">  340</span>&#160;{</div><div class="line"><a name="l00341"></a><span class="lineno">  341</span>&#160;    <span class="keywordflow">return</span> Debug1dTest&lt;armnn::DataType::BFloat16&gt;(workloadFactory, memoryManager);</div><div class="line"><a name="l00342"></a><span class="lineno">  342</span>&#160;}</div><div class="line"><a name="l00343"></a><span class="lineno">  343</span>&#160;</div><div class="line"><a name="l00344"></a><span class="lineno"><a class="line" href="_debug_test_impl_8hpp.xhtml#aff1f64410b029a9b9925bb4c69219896">  344</a></span>&#160;<a class="code" href="struct_layer_test_result.xhtml">LayerTestResult&lt;uint8_t, 4&gt;</a> <a class="code" href="_debug_test_impl_8cpp.xhtml#aff1f64410b029a9b9925bb4c69219896">Debug4dUint8Test</a>(</div><div class="line"><a name="l00345"></a><span class="lineno">  345</span>&#160;    <a class="code" href="classarmnn_1_1_i_workload_factory.xhtml">armnn::IWorkloadFactory</a>&amp; workloadFactory,</div><div class="line"><a name="l00346"></a><span class="lineno">  346</span>&#160;    <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_i_backend_internal.xhtml#a693b40e6b94e958836aeb0410ca186bd">armnn::IBackendInternal::IMemoryManagerSharedPtr</a>&amp; memoryManager)</div><div class="line"><a name="l00347"></a><span class="lineno">  347</span>&#160;{</div><div class="line"><a name="l00348"></a><span class="lineno">  348</span>&#160;    <span class="keywordflow">return</span> Debug4dTest&lt;armnn::DataType::QAsymmU8&gt;(workloadFactory, memoryManager);</div><div class="line"><a name="l00349"></a><span class="lineno">  349</span>&#160;}</div><div class="line"><a name="l00350"></a><span class="lineno">  350</span>&#160;</div><div class="line"><a name="l00351"></a><span class="lineno"><a class="line" href="_debug_test_impl_8hpp.xhtml#a353659f233efc7b8eb5a52b48c555c25">  351</a></span>&#160;<a class="code" href="struct_layer_test_result.xhtml">LayerTestResult&lt;uint8_t, 3&gt;</a> <a class="code" href="_debug_test_impl_8cpp.xhtml#a353659f233efc7b8eb5a52b48c555c25">Debug3dUint8Test</a>(</div><div class="line"><a name="l00352"></a><span class="lineno">  352</span>&#160;    <a class="code" href="classarmnn_1_1_i_workload_factory.xhtml">armnn::IWorkloadFactory</a>&amp; workloadFactory,</div><div class="line"><a name="l00353"></a><span class="lineno">  353</span>&#160;    <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_i_backend_internal.xhtml#a693b40e6b94e958836aeb0410ca186bd">armnn::IBackendInternal::IMemoryManagerSharedPtr</a>&amp; memoryManager)</div><div class="line"><a name="l00354"></a><span class="lineno">  354</span>&#160;{</div><div class="line"><a name="l00355"></a><span class="lineno">  355</span>&#160;    <span class="keywordflow">return</span> Debug3dTest&lt;armnn::DataType::QAsymmU8&gt;(workloadFactory, memoryManager);</div><div class="line"><a name="l00356"></a><span class="lineno">  356</span>&#160;}</div><div class="line"><a name="l00357"></a><span class="lineno">  357</span>&#160;</div><div class="line"><a name="l00358"></a><span class="lineno"><a class="line" href="_debug_test_impl_8hpp.xhtml#ad248b29d04a555ddfa407f2121f66333">  358</a></span>&#160;<a class="code" href="struct_layer_test_result.xhtml">LayerTestResult&lt;uint8_t, 2&gt;</a> <a class="code" href="_debug_test_impl_8cpp.xhtml#ad248b29d04a555ddfa407f2121f66333">Debug2dUint8Test</a>(</div><div class="line"><a name="l00359"></a><span class="lineno">  359</span>&#160;    <a class="code" href="classarmnn_1_1_i_workload_factory.xhtml">armnn::IWorkloadFactory</a>&amp; workloadFactory,</div><div class="line"><a name="l00360"></a><span class="lineno">  360</span>&#160;    <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_i_backend_internal.xhtml#a693b40e6b94e958836aeb0410ca186bd">armnn::IBackendInternal::IMemoryManagerSharedPtr</a>&amp; memoryManager)</div><div class="line"><a name="l00361"></a><span class="lineno">  361</span>&#160;{</div><div class="line"><a name="l00362"></a><span class="lineno">  362</span>&#160;    <span class="keywordflow">return</span> Debug2dTest&lt;armnn::DataType::QAsymmU8&gt;(workloadFactory, memoryManager);</div><div class="line"><a name="l00363"></a><span class="lineno">  363</span>&#160;}</div><div class="line"><a name="l00364"></a><span class="lineno">  364</span>&#160;</div><div class="line"><a name="l00365"></a><span class="lineno"><a class="line" href="_debug_test_impl_8hpp.xhtml#a38d2a08139107d420b511ffebeef4262">  365</a></span>&#160;<a class="code" href="struct_layer_test_result.xhtml">LayerTestResult&lt;uint8_t, 1&gt;</a> <a class="code" href="_debug_test_impl_8cpp.xhtml#a38d2a08139107d420b511ffebeef4262">Debug1dUint8Test</a>(</div><div class="line"><a name="l00366"></a><span class="lineno">  366</span>&#160;    <a class="code" href="classarmnn_1_1_i_workload_factory.xhtml">armnn::IWorkloadFactory</a>&amp; workloadFactory,</div><div class="line"><a name="l00367"></a><span class="lineno">  367</span>&#160;    <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_i_backend_internal.xhtml#a693b40e6b94e958836aeb0410ca186bd">armnn::IBackendInternal::IMemoryManagerSharedPtr</a>&amp; memoryManager)</div><div class="line"><a name="l00368"></a><span class="lineno">  368</span>&#160;{</div><div class="line"><a name="l00369"></a><span class="lineno">  369</span>&#160;    <span class="keywordflow">return</span> Debug1dTest&lt;armnn::DataType::QAsymmU8&gt;(workloadFactory, memoryManager);</div><div class="line"><a name="l00370"></a><span class="lineno">  370</span>&#160;}</div><div class="line"><a name="l00371"></a><span class="lineno">  371</span>&#160;</div><div class="line"><a name="l00372"></a><span class="lineno"><a class="line" href="_debug_test_impl_8hpp.xhtml#a6cce1d9e431fd143e71e8ba16267c774">  372</a></span>&#160;<a class="code" href="struct_layer_test_result.xhtml">LayerTestResult&lt;int16_t, 4&gt;</a> <a class="code" href="_debug_test_impl_8cpp.xhtml#a6cce1d9e431fd143e71e8ba16267c774">Debug4dInt16Test</a>(</div><div class="line"><a name="l00373"></a><span class="lineno">  373</span>&#160;    <a class="code" href="classarmnn_1_1_i_workload_factory.xhtml">armnn::IWorkloadFactory</a>&amp; workloadFactory,</div><div class="line"><a name="l00374"></a><span class="lineno">  374</span>&#160;    <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_i_backend_internal.xhtml#a693b40e6b94e958836aeb0410ca186bd">armnn::IBackendInternal::IMemoryManagerSharedPtr</a>&amp; memoryManager)</div><div class="line"><a name="l00375"></a><span class="lineno">  375</span>&#160;{</div><div class="line"><a name="l00376"></a><span class="lineno">  376</span>&#160;    <span class="keywordflow">return</span> Debug4dTest&lt;armnn::DataType::QSymmS16&gt;(workloadFactory, memoryManager);</div><div class="line"><a name="l00377"></a><span class="lineno">  377</span>&#160;}</div><div class="line"><a name="l00378"></a><span class="lineno">  378</span>&#160;</div><div class="line"><a name="l00379"></a><span class="lineno"><a class="line" href="_debug_test_impl_8hpp.xhtml#abdb0d918051840178c879d39e488909e">  379</a></span>&#160;<a class="code" href="struct_layer_test_result.xhtml">LayerTestResult&lt;int16_t, 3&gt;</a> <a class="code" href="_debug_test_impl_8cpp.xhtml#abdb0d918051840178c879d39e488909e">Debug3dInt16Test</a>(</div><div class="line"><a name="l00380"></a><span class="lineno">  380</span>&#160;    <a class="code" href="classarmnn_1_1_i_workload_factory.xhtml">armnn::IWorkloadFactory</a>&amp; workloadFactory,</div><div class="line"><a name="l00381"></a><span class="lineno">  381</span>&#160;    <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_i_backend_internal.xhtml#a693b40e6b94e958836aeb0410ca186bd">armnn::IBackendInternal::IMemoryManagerSharedPtr</a>&amp; memoryManager)</div><div class="line"><a name="l00382"></a><span class="lineno">  382</span>&#160;{</div><div class="line"><a name="l00383"></a><span class="lineno">  383</span>&#160;    <span class="keywordflow">return</span> Debug3dTest&lt;armnn::DataType::QSymmS16&gt;(workloadFactory, memoryManager);</div><div class="line"><a name="l00384"></a><span class="lineno">  384</span>&#160;}</div><div class="line"><a name="l00385"></a><span class="lineno">  385</span>&#160;</div><div class="line"><a name="l00386"></a><span class="lineno"><a class="line" href="_debug_test_impl_8hpp.xhtml#a70e2a4a133ff823cde320f7aac9eff79">  386</a></span>&#160;<a class="code" href="struct_layer_test_result.xhtml">LayerTestResult&lt;int16_t, 2&gt;</a> <a class="code" href="_debug_test_impl_8cpp.xhtml#a70e2a4a133ff823cde320f7aac9eff79">Debug2dInt16Test</a>(</div><div class="line"><a name="l00387"></a><span class="lineno">  387</span>&#160;    <a class="code" href="classarmnn_1_1_i_workload_factory.xhtml">armnn::IWorkloadFactory</a>&amp; workloadFactory,</div><div class="line"><a name="l00388"></a><span class="lineno">  388</span>&#160;    <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_i_backend_internal.xhtml#a693b40e6b94e958836aeb0410ca186bd">armnn::IBackendInternal::IMemoryManagerSharedPtr</a>&amp; memoryManager)</div><div class="line"><a name="l00389"></a><span class="lineno">  389</span>&#160;{</div><div class="line"><a name="l00390"></a><span class="lineno">  390</span>&#160;    <span class="keywordflow">return</span> Debug2dTest&lt;armnn::DataType::QSymmS16&gt;(workloadFactory, memoryManager);</div><div class="line"><a name="l00391"></a><span class="lineno">  391</span>&#160;}</div><div class="line"><a name="l00392"></a><span class="lineno">  392</span>&#160;</div><div class="line"><a name="l00393"></a><span class="lineno"><a class="line" href="_debug_test_impl_8hpp.xhtml#acf99889f3486cc377e44dc8c3c430bce">  393</a></span>&#160;<a class="code" href="struct_layer_test_result.xhtml">LayerTestResult&lt;int16_t, 1&gt;</a> <a class="code" href="_debug_test_impl_8cpp.xhtml#acf99889f3486cc377e44dc8c3c430bce">Debug1dInt16Test</a>(</div><div class="line"><a name="l00394"></a><span class="lineno">  394</span>&#160;    <a class="code" href="classarmnn_1_1_i_workload_factory.xhtml">armnn::IWorkloadFactory</a>&amp; workloadFactory,</div><div class="line"><a name="l00395"></a><span class="lineno">  395</span>&#160;    <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_i_backend_internal.xhtml#a693b40e6b94e958836aeb0410ca186bd">armnn::IBackendInternal::IMemoryManagerSharedPtr</a>&amp; memoryManager)</div><div class="line"><a name="l00396"></a><span class="lineno">  396</span>&#160;{</div><div class="line"><a name="l00397"></a><span class="lineno">  397</span>&#160;    <span class="keywordflow">return</span> Debug1dTest&lt;armnn::DataType::QSymmS16&gt;(workloadFactory, memoryManager);</div><div class="line"><a name="l00398"></a><span class="lineno">  398</span>&#160;}</div><div class="ttc" id="classarmnn_1_1_tensor_info_xhtml_a8b5d0f8a24e9d9238f412260a552acf8"><div class="ttname"><a href="classarmnn_1_1_tensor_info.xhtml#a8b5d0f8a24e9d9238f412260a552acf8">armnn::TensorInfo::GetShape</a></div><div class="ttdeci">const TensorShape &amp; GetShape() const</div><div class="ttdef"><b>Definition:</b> <a href="_tensor_8hpp_source.xhtml#l00191">Tensor.hpp:191</a></div></div>
<div class="ttc" id="_deprecated_8hpp_xhtml_ab66a241a0ed3ee89c866e777b035d0ed"><div class="ttname"><a href="_deprecated_8hpp.xhtml#ab66a241a0ed3ee89c866e777b035d0ed">ARMNN_NO_DEPRECATE_WARN_BEGIN</a></div><div class="ttdeci">#define ARMNN_NO_DEPRECATE_WARN_BEGIN</div><div class="ttdef"><b>Definition:</b> <a href="_deprecated_8hpp_source.xhtml#l00033">Deprecated.hpp:33</a></div></div>
<div class="ttc" id="classarmnn_1_1_tensor_info_xhtml"><div class="ttname"><a href="classarmnn_1_1_tensor_info.xhtml">armnn::TensorInfo</a></div><div class="ttdef"><b>Definition:</b> <a href="_tensor_8hpp_source.xhtml#l00152">Tensor.hpp:152</a></div></div>
<div class="ttc" id="_quantize_helper_8hpp_xhtml"><div class="ttname"><a href="_quantize_helper_8hpp.xhtml">QuantizeHelper.hpp</a></div></div>
<div class="ttc" id="classarmnn_1_1_i_workload_factory_xhtml"><div class="ttname"><a href="classarmnn_1_1_i_workload_factory.xhtml">armnn::IWorkloadFactory</a></div><div class="ttdef"><b>Definition:</b> <a href="include_2armnn_2backends_2_workload_factory_8hpp_source.xhtml#l00022">WorkloadFactory.hpp:22</a></div></div>
<div class="ttc" id="_debug_test_impl_8cpp_xhtml_abdb0d918051840178c879d39e488909e"><div class="ttname"><a href="_debug_test_impl_8cpp.xhtml#abdb0d918051840178c879d39e488909e">Debug3dInt16Test</a></div><div class="ttdeci">LayerTestResult&lt; int16_t, 3 &gt; Debug3dInt16Test(armnn::IWorkloadFactory &amp;workloadFactory, const armnn::IBackendInternal::IMemoryManagerSharedPtr &amp;memoryManager)</div><div class="ttdef"><b>Definition:</b> <a href="_debug_test_impl_8cpp_source.xhtml#l00379">DebugTestImpl.cpp:379</a></div></div>
<div class="ttc" id="structarmnn_1_1_debug_queue_descriptor_xhtml_a2b4595e9b6c840810995558801be6f6c"><div class="ttname"><a href="structarmnn_1_1_debug_queue_descriptor.xhtml#a2b4595e9b6c840810995558801be6f6c">armnn::DebugQueueDescriptor::m_LayerName</a></div><div class="ttdeci">std::string m_LayerName</div><div class="ttdef"><b>Definition:</b> <a href="include_2armnn_2backends_2_workload_data_8hpp_source.xhtml#l00533">WorkloadData.hpp:533</a></div></div>
<div class="ttc" id="_debug_test_impl_8cpp_xhtml_a02e739d71284a1bb5cf25aa4e76ea034"><div class="ttname"><a href="_debug_test_impl_8cpp.xhtml#a02e739d71284a1bb5cf25aa4e76ea034">Debug1dFloat32Test</a></div><div class="ttdeci">LayerTestResult&lt; float, 1 &gt; Debug1dFloat32Test(armnn::IWorkloadFactory &amp;workloadFactory, const armnn::IBackendInternal::IMemoryManagerSharedPtr &amp;memoryManager)</div><div class="ttdef"><b>Definition:</b> <a href="_debug_test_impl_8cpp_source.xhtml#l00309">DebugTestImpl.cpp:309</a></div></div>
<div class="ttc" id="_debug_test_impl_8cpp_xhtml_a7313bdcaf4c3cfbd900d583e888e10bf"><div class="ttname"><a href="_debug_test_impl_8cpp.xhtml#a7313bdcaf4c3cfbd900d583e888e10bf">Debug1dBFloat16Test</a></div><div class="ttdeci">LayerTestResult&lt; armnn::BFloat16, 1 &gt; Debug1dBFloat16Test(armnn::IWorkloadFactory &amp;workloadFactory, const armnn::IBackendInternal::IMemoryManagerSharedPtr &amp;memoryManager)</div><div class="ttdef"><b>Definition:</b> <a href="_debug_test_impl_8cpp_source.xhtml#l00337">DebugTestImpl.cpp:337</a></div></div>
<div class="ttc" id="_debug_test_impl_8cpp_xhtml_a38d2a08139107d420b511ffebeef4262"><div class="ttname"><a href="_debug_test_impl_8cpp.xhtml#a38d2a08139107d420b511ffebeef4262">Debug1dUint8Test</a></div><div class="ttdeci">LayerTestResult&lt; uint8_t, 1 &gt; Debug1dUint8Test(armnn::IWorkloadFactory &amp;workloadFactory, const armnn::IBackendInternal::IMemoryManagerSharedPtr &amp;memoryManager)</div><div class="ttdef"><b>Definition:</b> <a href="_debug_test_impl_8cpp_source.xhtml#l00365">DebugTestImpl.cpp:365</a></div></div>
<div class="ttc" id="_resolve_type_8hpp_xhtml"><div class="ttname"><a href="_resolve_type_8hpp.xhtml">ResolveType.hpp</a></div></div>
<div class="ttc" id="namespacearmnn_xhtml_a44affeeb090c3c6a3062830562672e84"><div class="ttname"><a href="namespacearmnn.xhtml#a44affeeb090c3c6a3062830562672e84">armnn::IgnoreUnused</a></div><div class="ttdeci">void IgnoreUnused(Ts &amp;&amp;...)</div><div class="ttdef"><b>Definition:</b> <a href="_ignore_unused_8hpp_source.xhtml#l00014">IgnoreUnused.hpp:14</a></div></div>
<div class="ttc" id="_deprecated_8hpp_xhtml_ad762b11b48e5c1d1c1743f529485728a"><div class="ttname"><a href="_deprecated_8hpp.xhtml#ad762b11b48e5c1d1c1743f529485728a">ARMNN_NO_DEPRECATE_WARN_END</a></div><div class="ttdeci">#define ARMNN_NO_DEPRECATE_WARN_END</div><div class="ttdef"><b>Definition:</b> <a href="_deprecated_8hpp_source.xhtml#l00034">Deprecated.hpp:34</a></div></div>
<div class="ttc" id="classarmnn_1_1_i_backend_internal_xhtml_a693b40e6b94e958836aeb0410ca186bd"><div class="ttname"><a href="classarmnn_1_1_i_backend_internal.xhtml#a693b40e6b94e958836aeb0410ca186bd">armnn::IBackendInternal::IMemoryManagerSharedPtr</a></div><div class="ttdeci">std::shared_ptr&lt; IMemoryManager &gt; IMemoryManagerSharedPtr</div><div class="ttdef"><b>Definition:</b> <a href="_i_backend_internal_8hpp_source.xhtml#l00097">IBackendInternal.hpp:97</a></div></div>
<div class="ttc" id="_debug_test_impl_8cpp_xhtml_acf99889f3486cc377e44dc8c3c430bce"><div class="ttname"><a href="_debug_test_impl_8cpp.xhtml#acf99889f3486cc377e44dc8c3c430bce">Debug1dInt16Test</a></div><div class="ttdeci">LayerTestResult&lt; int16_t, 1 &gt; Debug1dInt16Test(armnn::IWorkloadFactory &amp;workloadFactory, const armnn::IBackendInternal::IMemoryManagerSharedPtr &amp;memoryManager)</div><div class="ttdef"><b>Definition:</b> <a href="_debug_test_impl_8cpp_source.xhtml#l00393">DebugTestImpl.cpp:393</a></div></div>
<div class="ttc" id="include_2armnn_test_utils_2_tensor_copy_utils_8hpp_xhtml_ab5dfed8358e500ed523d78090ec78e88"><div class="ttname"><a href="include_2armnn_test_utils_2_tensor_copy_utils_8hpp.xhtml#ab5dfed8358e500ed523d78090ec78e88">CopyDataFromITensorHandle</a></div><div class="ttdeci">void CopyDataFromITensorHandle(void *mem, const armnn::ITensorHandle *tensorHandle)</div><div class="ttdef"><b>Definition:</b> <a href="_tensor_copy_utils_8cpp_source.xhtml#l00014">TensorCopyUtils.cpp:14</a></div></div>
<div class="ttc" id="_debug_test_impl_8cpp_xhtml_a340b57036ad22a70438e5e6b615eebfb"><div class="ttname"><a href="_debug_test_impl_8cpp.xhtml#a340b57036ad22a70438e5e6b615eebfb">Debug2dFloat32Test</a></div><div class="ttdeci">LayerTestResult&lt; float, 2 &gt; Debug2dFloat32Test(armnn::IWorkloadFactory &amp;workloadFactory, const armnn::IBackendInternal::IMemoryManagerSharedPtr &amp;memoryManager)</div><div class="ttdef"><b>Definition:</b> <a href="_debug_test_impl_8cpp_source.xhtml#l00302">DebugTestImpl.cpp:302</a></div></div>
<div class="ttc" id="classarmnn_1_1_tensor_info_xhtml_a685739c4eb65a580e075282cfe6787d6"><div class="ttname"><a href="classarmnn_1_1_tensor_info.xhtml#a685739c4eb65a580e075282cfe6787d6">armnn::TensorInfo::SetQuantizationScale</a></div><div class="ttdeci">void SetQuantizationScale(float scale)</div><div class="ttdef"><b>Definition:</b> <a href="_tensor_8cpp_source.xhtml#l00473">Tensor.cpp:473</a></div></div>
<div class="ttc" id="_debug_test_impl_8cpp_xhtml_a9fc669585b91c13133f87ab8e3608c20"><div class="ttname"><a href="_debug_test_impl_8cpp.xhtml#a9fc669585b91c13133f87ab8e3608c20">Debug3dBFloat16Test</a></div><div class="ttdeci">LayerTestResult&lt; armnn::BFloat16, 3 &gt; Debug3dBFloat16Test(armnn::IWorkloadFactory &amp;workloadFactory, const armnn::IBackendInternal::IMemoryManagerSharedPtr &amp;memoryManager)</div><div class="ttdef"><b>Definition:</b> <a href="_debug_test_impl_8cpp_source.xhtml#l00323">DebugTestImpl.cpp:323</a></div></div>
<div class="ttc" id="classarmnn_1_1_i_workload_factory_xhtml_a15c140be4ddceffee16436f009d3ed94"><div class="ttname"><a href="classarmnn_1_1_i_workload_factory.xhtml#a15c140be4ddceffee16436f009d3ed94">armnn::IWorkloadFactory::CreateTensorHandle</a></div><div class="ttdeci">virtual std::unique_ptr&lt; ITensorHandle &gt; CreateTensorHandle(const TensorInfo &amp;tensorInfo, const bool IsMemoryManaged=true) const =0</div></div>
<div class="ttc" id="_debug_test_impl_8cpp_xhtml_a1710c99292328a7e623f9326723bac52"><div class="ttname"><a href="_debug_test_impl_8cpp.xhtml#a1710c99292328a7e623f9326723bac52">Debug2dBFloat16Test</a></div><div class="ttdeci">LayerTestResult&lt; armnn::BFloat16, 2 &gt; Debug2dBFloat16Test(armnn::IWorkloadFactory &amp;workloadFactory, const armnn::IBackendInternal::IMemoryManagerSharedPtr &amp;memoryManager)</div><div class="ttdef"><b>Definition:</b> <a href="_debug_test_impl_8cpp_source.xhtml#l00330">DebugTestImpl.cpp:330</a></div></div>
<div class="ttc" id="_debug_test_impl_8cpp_xhtml_a6cce1d9e431fd143e71e8ba16267c774"><div class="ttname"><a href="_debug_test_impl_8cpp.xhtml#a6cce1d9e431fd143e71e8ba16267c774">Debug4dInt16Test</a></div><div class="ttdeci">LayerTestResult&lt; int16_t, 4 &gt; Debug4dInt16Test(armnn::IWorkloadFactory &amp;workloadFactory, const armnn::IBackendInternal::IMemoryManagerSharedPtr &amp;memoryManager)</div><div class="ttdef"><b>Definition:</b> <a href="_debug_test_impl_8cpp_source.xhtml#l00372">DebugTestImpl.cpp:372</a></div></div>
<div class="ttc" id="include_2armnn_test_utils_2_tensor_helpers_8hpp_xhtml"><div class="ttname"><a href="include_2armnn_test_utils_2_tensor_helpers_8hpp.xhtml">TensorHelpers.hpp</a></div></div>
<div class="ttc" id="_debug_test_impl_8cpp_xhtml_a353659f233efc7b8eb5a52b48c555c25"><div class="ttname"><a href="_debug_test_impl_8cpp.xhtml#a353659f233efc7b8eb5a52b48c555c25">Debug3dUint8Test</a></div><div class="ttdeci">LayerTestResult&lt; uint8_t, 3 &gt; Debug3dUint8Test(armnn::IWorkloadFactory &amp;workloadFactory, const armnn::IBackendInternal::IMemoryManagerSharedPtr &amp;memoryManager)</div><div class="ttdef"><b>Definition:</b> <a href="_debug_test_impl_8cpp_source.xhtml#l00351">DebugTestImpl.cpp:351</a></div></div>
<div class="ttc" id="_debug_test_impl_8cpp_xhtml_a9770886bff5c3815fc70738e3a673b08"><div class="ttname"><a href="_debug_test_impl_8cpp.xhtml#a9770886bff5c3815fc70738e3a673b08">Debug4dBFloat16Test</a></div><div class="ttdeci">LayerTestResult&lt; armnn::BFloat16, 4 &gt; Debug4dBFloat16Test(armnn::IWorkloadFactory &amp;workloadFactory, const armnn::IBackendInternal::IMemoryManagerSharedPtr &amp;memoryManager)</div><div class="ttdef"><b>Definition:</b> <a href="_debug_test_impl_8cpp_source.xhtml#l00316">DebugTestImpl.cpp:316</a></div></div>
<div class="ttc" id="_debug_test_impl_8cpp_xhtml_a3a17c31e0243a055d062f9ef00e00295"><div class="ttname"><a href="_debug_test_impl_8cpp.xhtml#a3a17c31e0243a055d062f9ef00e00295">Debug4dFloat32Test</a></div><div class="ttdeci">LayerTestResult&lt; float, 4 &gt; Debug4dFloat32Test(armnn::IWorkloadFactory &amp;workloadFactory, const armnn::IBackendInternal::IMemoryManagerSharedPtr &amp;memoryManager)</div><div class="ttdef"><b>Definition:</b> <a href="_debug_test_impl_8cpp_source.xhtml#l00288">DebugTestImpl.cpp:288</a></div></div>
<div class="ttc" id="structarmnn_1_1_debug_queue_descriptor_xhtml_a04f1026633579df1913f80db2877ce8c"><div class="ttname"><a href="structarmnn_1_1_debug_queue_descriptor.xhtml#a04f1026633579df1913f80db2877ce8c">armnn::DebugQueueDescriptor::m_Guid</a></div><div class="ttdeci">LayerGuid m_Guid</div><div class="ttdef"><b>Definition:</b> <a href="include_2armnn_2backends_2_workload_data_8hpp_source.xhtml#l00532">WorkloadData.hpp:532</a></div></div>
<div class="ttc" id="namespacearmnn_xhtml_a4dc0adc6737b5944e7671bee71788407acaf9b6b99962bf5c2264824231d7a40c"><div class="ttname"><a href="namespacearmnn.xhtml#a4dc0adc6737b5944e7671bee71788407acaf9b6b99962bf5c2264824231d7a40c">armnn::BoostLogSeverityMapping::info</a></div></div>
<div class="ttc" id="include_2armnn_test_utils_2_tensor_copy_utils_8hpp_xhtml_ae15f1a3c55d2db87683577de9fa4437c"><div class="ttname"><a href="include_2armnn_test_utils_2_tensor_copy_utils_8hpp.xhtml#ae15f1a3c55d2db87683577de9fa4437c">CopyDataToITensorHandle</a></div><div class="ttdeci">void CopyDataToITensorHandle(armnn::ITensorHandle *tensorHandle, const void *memory)</div><div class="ttdef"><b>Definition:</b> <a href="_tensor_copy_utils_8cpp_source.xhtml#l00009">TensorCopyUtils.cpp:9</a></div></div>
<div class="ttc" id="_debug_test_impl_8cpp_xhtml_a70e2a4a133ff823cde320f7aac9eff79"><div class="ttname"><a href="_debug_test_impl_8cpp.xhtml#a70e2a4a133ff823cde320f7aac9eff79">Debug2dInt16Test</a></div><div class="ttdeci">LayerTestResult&lt; int16_t, 2 &gt; Debug2dInt16Test(armnn::IWorkloadFactory &amp;workloadFactory, const armnn::IBackendInternal::IMemoryManagerSharedPtr &amp;memoryManager)</div><div class="ttdef"><b>Definition:</b> <a href="_debug_test_impl_8cpp_source.xhtml#l00386">DebugTestImpl.cpp:386</a></div></div>
<div class="ttc" id="structarmnn_1_1_workload_info_xhtml"><div class="ttname"><a href="structarmnn_1_1_workload_info.xhtml">armnn::WorkloadInfo</a></div><div class="ttdoc">Contains information about TensorInfos of a layer. </div><div class="ttdef"><b>Definition:</b> <a href="include_2armnn_2backends_2_workload_info_8hpp_source.xhtml#l00016">WorkloadInfo.hpp:16</a></div></div>
<div class="ttc" id="struct_layer_test_result_xhtml"><div class="ttname"><a href="struct_layer_test_result.xhtml">LayerTestResult</a></div><div class="ttdef"><b>Definition:</b> <a href="include_2armnn_test_utils_2_layer_test_result_8hpp_source.xhtml#l00015">LayerTestResult.hpp:15</a></div></div>
<div class="ttc" id="classarmnn_1_1_tensor_info_xhtml_a63cbc581012c957f9d68d224ddc3e43c"><div class="ttname"><a href="classarmnn_1_1_tensor_info.xhtml#a63cbc581012c957f9d68d224ddc3e43c">armnn::TensorInfo::SetQuantizationOffset</a></div><div class="ttdeci">void SetQuantizationOffset(int32_t offset)</div><div class="ttdef"><b>Definition:</b> <a href="_tensor_8cpp_source.xhtml#l00489">Tensor.cpp:489</a></div></div>
<div class="ttc" id="structarmnn_1_1_debug_queue_descriptor_xhtml_ab53d42063d018ffebfceb019b26bf65a"><div class="ttname"><a href="structarmnn_1_1_debug_queue_descriptor.xhtml#ab53d42063d018ffebfceb019b26bf65a">armnn::DebugQueueDescriptor::m_SlotIndex</a></div><div class="ttdeci">unsigned int m_SlotIndex</div><div class="ttdef"><b>Definition:</b> <a href="include_2armnn_2backends_2_workload_data_8hpp_source.xhtml#l00534">WorkloadData.hpp:534</a></div></div>
<div class="ttc" id="_debug_test_impl_8hpp_xhtml"><div class="ttname"><a href="_debug_test_impl_8hpp.xhtml">DebugTestImpl.hpp</a></div></div>
<div class="ttc" id="classarmnn_1_1_i_workload_factory_xhtml_a13060ebb89d2c21a7a5d897e99cccf72"><div class="ttname"><a href="classarmnn_1_1_i_workload_factory.xhtml#a13060ebb89d2c21a7a5d897e99cccf72">armnn::IWorkloadFactory::CreateWorkload</a></div><div class="ttdeci">virtual std::unique_ptr&lt; IWorkload &gt; CreateWorkload(LayerType type, const QueueDescriptor &amp;descriptor, const WorkloadInfo &amp;info) const</div><div class="ttdef"><b>Definition:</b> <a href="_workload_factory_8cpp_source.xhtml#l01559">WorkloadFactory.cpp:1559</a></div></div>
<div class="ttc" id="structarmnn_1_1_debug_queue_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_debug_queue_descriptor.xhtml">armnn::DebugQueueDescriptor</a></div><div class="ttdef"><b>Definition:</b> <a href="include_2armnn_2backends_2_workload_data_8hpp_source.xhtml#l00526">WorkloadData.hpp:526</a></div></div>
<div class="ttc" id="_debug_test_impl_8cpp_xhtml_aff1f64410b029a9b9925bb4c69219896"><div class="ttname"><a href="_debug_test_impl_8cpp.xhtml#aff1f64410b029a9b9925bb4c69219896">Debug4dUint8Test</a></div><div class="ttdeci">LayerTestResult&lt; uint8_t, 4 &gt; Debug4dUint8Test(armnn::IWorkloadFactory &amp;workloadFactory, const armnn::IBackendInternal::IMemoryManagerSharedPtr &amp;memoryManager)</div><div class="ttdef"><b>Definition:</b> <a href="_debug_test_impl_8cpp_source.xhtml#l00344">DebugTestImpl.cpp:344</a></div></div>
<div class="ttc" id="_debug_test_impl_8cpp_xhtml_ad248b29d04a555ddfa407f2121f66333"><div class="ttname"><a href="_debug_test_impl_8cpp.xhtml#ad248b29d04a555ddfa407f2121f66333">Debug2dUint8Test</a></div><div class="ttdeci">LayerTestResult&lt; uint8_t, 2 &gt; Debug2dUint8Test(armnn::IWorkloadFactory &amp;workloadFactory, const armnn::IBackendInternal::IMemoryManagerSharedPtr &amp;memoryManager)</div><div class="ttdef"><b>Definition:</b> <a href="_debug_test_impl_8cpp_source.xhtml#l00358">DebugTestImpl.cpp:358</a></div></div>
<div class="ttc" id="_debug_test_impl_8cpp_xhtml_ab27db9bc57b9d9285ef91e09a6ae1a2e"><div class="ttname"><a href="_debug_test_impl_8cpp.xhtml#ab27db9bc57b9d9285ef91e09a6ae1a2e">Debug3dFloat32Test</a></div><div class="ttdeci">LayerTestResult&lt; float, 3 &gt; Debug3dFloat32Test(armnn::IWorkloadFactory &amp;workloadFactory, const armnn::IBackendInternal::IMemoryManagerSharedPtr &amp;memoryManager)</div><div class="ttdef"><b>Definition:</b> <a href="_debug_test_impl_8cpp_source.xhtml#l00295">DebugTestImpl.cpp:295</a></div></div>
<div class="ttc" id="include_2armnn_test_utils_2_tensor_copy_utils_8hpp_xhtml"><div class="ttname"><a href="include_2armnn_test_utils_2_tensor_copy_utils_8hpp.xhtml">TensorCopyUtils.hpp</a></div></div>
<div class="ttc" id="namespacearmnn_xhtml_a56943a0946e5f15e5e58054b8e7a04a4aa603905470e2a5b8c13e96b579ef0dba"><div class="ttname"><a href="namespacearmnn.xhtml#a56943a0946e5f15e5e58054b8e7a04a4aa603905470e2a5b8c13e96b579ef0dba">armnn::LayerType::Debug</a></div></div>
<div class="ttc" id="classarmnn_1_1_tensor_info_xhtml_a8846406ac37fbd2204f0be16ee05d5b7"><div class="ttname"><a href="classarmnn_1_1_tensor_info.xhtml#a8846406ac37fbd2204f0be16ee05d5b7">armnn::TensorInfo::GetNumElements</a></div><div class="ttdeci">unsigned int GetNumElements() const</div><div class="ttdef"><b>Definition:</b> <a href="_tensor_8hpp_source.xhtml#l00196">Tensor.hpp:196</a></div></div>
<div class="ttc" id="include_2armnn_test_utils_2_workload_test_utils_8hpp_xhtml"><div class="ttname"><a href="include_2armnn_test_utils_2_workload_test_utils_8hpp.xhtml">WorkloadTestUtils.hpp</a></div></div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="dir_68267d1309a1af8e8297ef4c3efbcdba.xhtml">src</a></li><li class="navelem"><a class="el" href="dir_0f3cdec46afbc61a1ded8e1687c9c9a0.xhtml">backends</a></li><li class="navelem"><a class="el" href="dir_797a213d7d01b98ef12d53b0820ea64e.xhtml">backendsCommon</a></li><li class="navelem"><a class="el" href="dir_28bfe507f7e135bdae07c2a6b7f66696.xhtml">test</a></li><li class="navelem"><a class="el" href="dir_99a30439342d160875b21dac3498ad7f.xhtml">layerTests</a></li><li class="navelem"><a class="el" href="_debug_test_impl_8cpp.xhtml">DebugTestImpl.cpp</a></li>
    <li class="footer">Generated on Tue May 24 2022 11:27:12 for ArmNN by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.13 </li>
  </ul>
</div>
</body>
</html>
