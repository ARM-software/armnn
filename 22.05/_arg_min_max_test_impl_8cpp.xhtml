<!-- Copyright (c) 2020 ARM Limited. -->
<!--                                 -->
<!-- SPDX-License-Identifier: MIT    -->
<!--                                 -->
<!-- HTML header for doxygen 1.8.13-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.13"/>
<meta name="robots" content="NOINDEX, NOFOLLOW" />
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>ArmNN: src/backends/backendsCommon/test/layerTests/ArgMinMaxTestImpl.cpp File Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script><script type="text/javascript" src="http://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="stylesheet.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <img alt="ArmNN" src="Arm_NN_horizontal_blue.png" style="max-width: 10rem; margin-top: .5rem; margin-left 10px"/>
  <td style="padding-left: 0.5em;">
   <div id="projectname">
   &#160;<span id="projectnumber">22.05</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.13 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
$(document).ready(function(){initNavTree('_arg_min_max_test_impl_8cpp.xhtml','');});
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="summary">
<a href="#func-members">Functions</a>  </div>
  <div class="headertitle">
<div class="title">ArgMinMaxTestImpl.cpp File Reference</div>  </div>
</div><!--header-->
<div class="contents">
<div class="textblock"><code>#include &quot;<a class="el" href="_arg_min_max_test_impl_8hpp_source.xhtml">ArgMinMaxTestImpl.hpp</a>&quot;</code><br />
<code>#include &lt;DataTypeUtils.hpp&gt;</code><br />
<code>#include &lt;<a class="el" href="include_2armnn_test_utils_2_tensor_copy_utils_8hpp_source.xhtml">armnnTestUtils/TensorCopyUtils.hpp</a>&gt;</code><br />
<code>#include &lt;<a class="el" href="include_2armnn_test_utils_2_workload_test_utils_8hpp_source.xhtml">armnnTestUtils/WorkloadTestUtils.hpp</a>&gt;</code><br />
<code>#include &lt;<a class="el" href="include_2armnn_test_utils_2_tensor_helpers_8hpp_source.xhtml">armnnTestUtils/TensorHelpers.hpp</a>&gt;</code><br />
</div>
<p><a href="_arg_min_max_test_impl_8cpp_source.xhtml">Go to the source code of this file.</a></p>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="func-members"></a>
Functions</h2></td></tr>
<tr class="memitem:a1bc1aff00a67a4efb47226f8b5993c39"><td class="memTemplParams" colspan="2">template&lt;armnn::DataType ArmnnType, typename T &gt; </td></tr>
<tr class="memitem:a1bc1aff00a67a4efb47226f8b5993c39"><td class="memTemplItemLeft" align="right" valign="top"><a class="el" href="struct_layer_test_result.xhtml">LayerTestResult</a>&lt; int32_t, 3 &gt;&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="_arg_min_max_test_impl_8cpp.xhtml#a1bc1aff00a67a4efb47226f8b5993c39">ArgMaxSimpleTest</a> (<a class="el" href="classarmnn_1_1_i_workload_factory.xhtml">armnn::IWorkloadFactory</a> &amp;workloadFactory, const <a class="el" href="classarmnn_1_1_i_backend_internal.xhtml#a693b40e6b94e958836aeb0410ca186bd">armnn::IBackendInternal::IMemoryManagerSharedPtr</a> &amp;memoryManager, const <a class="el" href="classarmnn_1_1_i_tensor_handle_factory.xhtml">armnn::ITensorHandleFactory</a> &amp;tensorHandleFactory)</td></tr>
<tr class="separator:a1bc1aff00a67a4efb47226f8b5993c39"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a656352d139bbe8dd7adec8cb37fffc73"><td class="memTemplParams" colspan="2">template&lt;armnn::DataType ArmnnType, typename T &gt; </td></tr>
<tr class="memitem:a656352d139bbe8dd7adec8cb37fffc73"><td class="memTemplItemLeft" align="right" valign="top"><a class="el" href="struct_layer_test_result.xhtml">LayerTestResult</a>&lt; int32_t, 3 &gt;&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="_arg_min_max_test_impl_8cpp.xhtml#a656352d139bbe8dd7adec8cb37fffc73">ArgMinSimpleTest</a> (<a class="el" href="classarmnn_1_1_i_workload_factory.xhtml">armnn::IWorkloadFactory</a> &amp;workloadFactory, const <a class="el" href="classarmnn_1_1_i_backend_internal.xhtml#a693b40e6b94e958836aeb0410ca186bd">armnn::IBackendInternal::IMemoryManagerSharedPtr</a> &amp;memoryManager, const <a class="el" href="classarmnn_1_1_i_tensor_handle_factory.xhtml">armnn::ITensorHandleFactory</a> &amp;tensorHandleFactory)</td></tr>
<tr class="separator:a656352d139bbe8dd7adec8cb37fffc73"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3a2f8cb0c8adaa822297e0530136f358"><td class="memTemplParams" colspan="2">template&lt;armnn::DataType ArmnnType, typename T &gt; </td></tr>
<tr class="memitem:a3a2f8cb0c8adaa822297e0530136f358"><td class="memTemplItemLeft" align="right" valign="top"><a class="el" href="struct_layer_test_result.xhtml">LayerTestResult</a>&lt; int32_t, 3 &gt;&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="_arg_min_max_test_impl_8cpp.xhtml#a3a2f8cb0c8adaa822297e0530136f358">ArgMinChannelTest</a> (<a class="el" href="classarmnn_1_1_i_workload_factory.xhtml">armnn::IWorkloadFactory</a> &amp;workloadFactory, const <a class="el" href="classarmnn_1_1_i_backend_internal.xhtml#a693b40e6b94e958836aeb0410ca186bd">armnn::IBackendInternal::IMemoryManagerSharedPtr</a> &amp;memoryManager, const <a class="el" href="classarmnn_1_1_i_tensor_handle_factory.xhtml">armnn::ITensorHandleFactory</a> &amp;tensorHandleFactory)</td></tr>
<tr class="separator:a3a2f8cb0c8adaa822297e0530136f358"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aaf3bdf97c63a99b26d4f84370720e86b"><td class="memTemplParams" colspan="2">template&lt;armnn::DataType ArmnnType, typename T &gt; </td></tr>
<tr class="memitem:aaf3bdf97c63a99b26d4f84370720e86b"><td class="memTemplItemLeft" align="right" valign="top"><a class="el" href="struct_layer_test_result.xhtml">LayerTestResult</a>&lt; int32_t, 3 &gt;&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="_arg_min_max_test_impl_8cpp.xhtml#aaf3bdf97c63a99b26d4f84370720e86b">ArgMaxChannelTest</a> (<a class="el" href="classarmnn_1_1_i_workload_factory.xhtml">armnn::IWorkloadFactory</a> &amp;workloadFactory, const <a class="el" href="classarmnn_1_1_i_backend_internal.xhtml#a693b40e6b94e958836aeb0410ca186bd">armnn::IBackendInternal::IMemoryManagerSharedPtr</a> &amp;memoryManager, const <a class="el" href="classarmnn_1_1_i_tensor_handle_factory.xhtml">armnn::ITensorHandleFactory</a> &amp;tensorHandleFactory)</td></tr>
<tr class="separator:aaf3bdf97c63a99b26d4f84370720e86b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9b1c558709dc0f83ab07dfccd5f71654"><td class="memTemplParams" colspan="2">template&lt;armnn::DataType ArmnnType, typename T &gt; </td></tr>
<tr class="memitem:a9b1c558709dc0f83ab07dfccd5f71654"><td class="memTemplItemLeft" align="right" valign="top"><a class="el" href="struct_layer_test_result.xhtml">LayerTestResult</a>&lt; int32_t, 3 &gt;&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="_arg_min_max_test_impl_8cpp.xhtml#a9b1c558709dc0f83ab07dfccd5f71654">ArgMaxHeightTest</a> (<a class="el" href="classarmnn_1_1_i_workload_factory.xhtml">armnn::IWorkloadFactory</a> &amp;workloadFactory, const <a class="el" href="classarmnn_1_1_i_backend_internal.xhtml#a693b40e6b94e958836aeb0410ca186bd">armnn::IBackendInternal::IMemoryManagerSharedPtr</a> &amp;memoryManager, const <a class="el" href="classarmnn_1_1_i_tensor_handle_factory.xhtml">armnn::ITensorHandleFactory</a> &amp;tensorHandleFactory)</td></tr>
<tr class="separator:a9b1c558709dc0f83ab07dfccd5f71654"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7ba8a46b4b43fd967423d3dffc6c7f33"><td class="memTemplParams" colspan="2">template&lt;armnn::DataType ArmnnType, typename T &gt; </td></tr>
<tr class="memitem:a7ba8a46b4b43fd967423d3dffc6c7f33"><td class="memTemplItemLeft" align="right" valign="top"><a class="el" href="struct_layer_test_result.xhtml">LayerTestResult</a>&lt; int32_t, 3 &gt;&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="_arg_min_max_test_impl_8cpp.xhtml#a7ba8a46b4b43fd967423d3dffc6c7f33">ArgMinWidthTest</a> (<a class="el" href="classarmnn_1_1_i_workload_factory.xhtml">armnn::IWorkloadFactory</a> &amp;workloadFactory, const <a class="el" href="classarmnn_1_1_i_backend_internal.xhtml#a693b40e6b94e958836aeb0410ca186bd">armnn::IBackendInternal::IMemoryManagerSharedPtr</a> &amp;memoryManager, const <a class="el" href="classarmnn_1_1_i_tensor_handle_factory.xhtml">armnn::ITensorHandleFactory</a> &amp;tensorHandleFactory)</td></tr>
<tr class="separator:a7ba8a46b4b43fd967423d3dffc6c7f33"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8471bacc34662f1b587ba9a6385fda16"><td class="memItemLeft" align="right" valign="top">template <a class="el" href="struct_layer_test_result.xhtml">LayerTestResult</a>&lt; int32_t, 3 &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_arg_min_max_test_impl_8cpp.xhtml#a8471bacc34662f1b587ba9a6385fda16">ArgMaxSimpleTest&lt; armnn::DataType::Float32 &gt;</a> (<a class="el" href="classarmnn_1_1_i_workload_factory.xhtml">armnn::IWorkloadFactory</a> &amp;workloadFactory, const <a class="el" href="classarmnn_1_1_i_backend_internal.xhtml#a693b40e6b94e958836aeb0410ca186bd">armnn::IBackendInternal::IMemoryManagerSharedPtr</a> &amp;memoryManager, const <a class="el" href="classarmnn_1_1_i_tensor_handle_factory.xhtml">armnn::ITensorHandleFactory</a> &amp;tensorHandleFactory)</td></tr>
<tr class="separator:a8471bacc34662f1b587ba9a6385fda16"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a79e7379a83ad8ea3d2076dc4da9d1623"><td class="memItemLeft" align="right" valign="top">template <a class="el" href="struct_layer_test_result.xhtml">LayerTestResult</a>&lt; int32_t, 3 &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_arg_min_max_test_impl_8cpp.xhtml#a79e7379a83ad8ea3d2076dc4da9d1623">ArgMaxSimpleTest&lt; armnn::DataType::Float16 &gt;</a> (<a class="el" href="classarmnn_1_1_i_workload_factory.xhtml">armnn::IWorkloadFactory</a> &amp;workloadFactory, const <a class="el" href="classarmnn_1_1_i_backend_internal.xhtml#a693b40e6b94e958836aeb0410ca186bd">armnn::IBackendInternal::IMemoryManagerSharedPtr</a> &amp;memoryManager, const <a class="el" href="classarmnn_1_1_i_tensor_handle_factory.xhtml">armnn::ITensorHandleFactory</a> &amp;tensorHandleFactory)</td></tr>
<tr class="separator:a79e7379a83ad8ea3d2076dc4da9d1623"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a55307b25f0edf4b4de1b67927e1f916e"><td class="memItemLeft" align="right" valign="top">template <a class="el" href="struct_layer_test_result.xhtml">LayerTestResult</a>&lt; int32_t, 3 &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_arg_min_max_test_impl_8cpp.xhtml#a55307b25f0edf4b4de1b67927e1f916e">ArgMaxSimpleTest&lt; armnn::DataType::QAsymmS8 &gt;</a> (<a class="el" href="classarmnn_1_1_i_workload_factory.xhtml">armnn::IWorkloadFactory</a> &amp;workloadFactory, const <a class="el" href="classarmnn_1_1_i_backend_internal.xhtml#a693b40e6b94e958836aeb0410ca186bd">armnn::IBackendInternal::IMemoryManagerSharedPtr</a> &amp;memoryManager, const <a class="el" href="classarmnn_1_1_i_tensor_handle_factory.xhtml">armnn::ITensorHandleFactory</a> &amp;tensorHandleFactory)</td></tr>
<tr class="separator:a55307b25f0edf4b4de1b67927e1f916e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab9c285b775e2835f230f615e5e4dd5df"><td class="memItemLeft" align="right" valign="top">template <a class="el" href="struct_layer_test_result.xhtml">LayerTestResult</a>&lt; int32_t, 3 &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_arg_min_max_test_impl_8cpp.xhtml#ab9c285b775e2835f230f615e5e4dd5df">ArgMaxSimpleTest&lt; armnn::DataType::QAsymmU8 &gt;</a> (<a class="el" href="classarmnn_1_1_i_workload_factory.xhtml">armnn::IWorkloadFactory</a> &amp;workloadFactory, const <a class="el" href="classarmnn_1_1_i_backend_internal.xhtml#a693b40e6b94e958836aeb0410ca186bd">armnn::IBackendInternal::IMemoryManagerSharedPtr</a> &amp;memoryManager, const <a class="el" href="classarmnn_1_1_i_tensor_handle_factory.xhtml">armnn::ITensorHandleFactory</a> &amp;tensorHandleFactory)</td></tr>
<tr class="separator:ab9c285b775e2835f230f615e5e4dd5df"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6005410441a48d38d454ec5eed53e890"><td class="memItemLeft" align="right" valign="top">template <a class="el" href="struct_layer_test_result.xhtml">LayerTestResult</a>&lt; int32_t, 3 &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_arg_min_max_test_impl_8cpp.xhtml#a6005410441a48d38d454ec5eed53e890">ArgMaxSimpleTest&lt; armnn::DataType::QSymmS16 &gt;</a> (<a class="el" href="classarmnn_1_1_i_workload_factory.xhtml">armnn::IWorkloadFactory</a> &amp;workloadFactory, const <a class="el" href="classarmnn_1_1_i_backend_internal.xhtml#a693b40e6b94e958836aeb0410ca186bd">armnn::IBackendInternal::IMemoryManagerSharedPtr</a> &amp;memoryManager, const <a class="el" href="classarmnn_1_1_i_tensor_handle_factory.xhtml">armnn::ITensorHandleFactory</a> &amp;tensorHandleFactory)</td></tr>
<tr class="separator:a6005410441a48d38d454ec5eed53e890"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab518bbb6d0146f317b858c9f988d2693"><td class="memItemLeft" align="right" valign="top">template <a class="el" href="struct_layer_test_result.xhtml">LayerTestResult</a>&lt; int32_t, 3 &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_arg_min_max_test_impl_8cpp.xhtml#ab518bbb6d0146f317b858c9f988d2693">ArgMaxSimpleTest&lt; armnn::DataType::Signed32 &gt;</a> (<a class="el" href="classarmnn_1_1_i_workload_factory.xhtml">armnn::IWorkloadFactory</a> &amp;workloadFactory, const <a class="el" href="classarmnn_1_1_i_backend_internal.xhtml#a693b40e6b94e958836aeb0410ca186bd">armnn::IBackendInternal::IMemoryManagerSharedPtr</a> &amp;memoryManager, const <a class="el" href="classarmnn_1_1_i_tensor_handle_factory.xhtml">armnn::ITensorHandleFactory</a> &amp;tensorHandleFactory)</td></tr>
<tr class="separator:ab518bbb6d0146f317b858c9f988d2693"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a305d8e3356253be776caa2a291314505"><td class="memItemLeft" align="right" valign="top">template <a class="el" href="struct_layer_test_result.xhtml">LayerTestResult</a>&lt; int32_t, 3 &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_arg_min_max_test_impl_8cpp.xhtml#a305d8e3356253be776caa2a291314505">ArgMinSimpleTest&lt; armnn::DataType::Float32 &gt;</a> (<a class="el" href="classarmnn_1_1_i_workload_factory.xhtml">armnn::IWorkloadFactory</a> &amp;workloadFactory, const <a class="el" href="classarmnn_1_1_i_backend_internal.xhtml#a693b40e6b94e958836aeb0410ca186bd">armnn::IBackendInternal::IMemoryManagerSharedPtr</a> &amp;memoryManager, const <a class="el" href="classarmnn_1_1_i_tensor_handle_factory.xhtml">armnn::ITensorHandleFactory</a> &amp;tensorHandleFactory)</td></tr>
<tr class="separator:a305d8e3356253be776caa2a291314505"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ade9ca768a2703f77db3d991086b0ca13"><td class="memItemLeft" align="right" valign="top">template <a class="el" href="struct_layer_test_result.xhtml">LayerTestResult</a>&lt; int32_t, 3 &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_arg_min_max_test_impl_8cpp.xhtml#ade9ca768a2703f77db3d991086b0ca13">ArgMinSimpleTest&lt; armnn::DataType::Float16 &gt;</a> (<a class="el" href="classarmnn_1_1_i_workload_factory.xhtml">armnn::IWorkloadFactory</a> &amp;workloadFactory, const <a class="el" href="classarmnn_1_1_i_backend_internal.xhtml#a693b40e6b94e958836aeb0410ca186bd">armnn::IBackendInternal::IMemoryManagerSharedPtr</a> &amp;memoryManager, const <a class="el" href="classarmnn_1_1_i_tensor_handle_factory.xhtml">armnn::ITensorHandleFactory</a> &amp;tensorHandleFactory)</td></tr>
<tr class="separator:ade9ca768a2703f77db3d991086b0ca13"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6d210af569feaa065adc28149f0162a1"><td class="memItemLeft" align="right" valign="top">template <a class="el" href="struct_layer_test_result.xhtml">LayerTestResult</a>&lt; int32_t, 3 &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_arg_min_max_test_impl_8cpp.xhtml#a6d210af569feaa065adc28149f0162a1">ArgMinSimpleTest&lt; armnn::DataType::QAsymmS8 &gt;</a> (<a class="el" href="classarmnn_1_1_i_workload_factory.xhtml">armnn::IWorkloadFactory</a> &amp;workloadFactory, const <a class="el" href="classarmnn_1_1_i_backend_internal.xhtml#a693b40e6b94e958836aeb0410ca186bd">armnn::IBackendInternal::IMemoryManagerSharedPtr</a> &amp;memoryManager, const <a class="el" href="classarmnn_1_1_i_tensor_handle_factory.xhtml">armnn::ITensorHandleFactory</a> &amp;tensorHandleFactory)</td></tr>
<tr class="separator:a6d210af569feaa065adc28149f0162a1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab921106921e62b9e08c876f4fad6f721"><td class="memItemLeft" align="right" valign="top">template <a class="el" href="struct_layer_test_result.xhtml">LayerTestResult</a>&lt; int32_t, 3 &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_arg_min_max_test_impl_8cpp.xhtml#ab921106921e62b9e08c876f4fad6f721">ArgMinSimpleTest&lt; armnn::DataType::QAsymmU8 &gt;</a> (<a class="el" href="classarmnn_1_1_i_workload_factory.xhtml">armnn::IWorkloadFactory</a> &amp;workloadFactory, const <a class="el" href="classarmnn_1_1_i_backend_internal.xhtml#a693b40e6b94e958836aeb0410ca186bd">armnn::IBackendInternal::IMemoryManagerSharedPtr</a> &amp;memoryManager, const <a class="el" href="classarmnn_1_1_i_tensor_handle_factory.xhtml">armnn::ITensorHandleFactory</a> &amp;tensorHandleFactory)</td></tr>
<tr class="separator:ab921106921e62b9e08c876f4fad6f721"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a941fff4ef65df2195da6340e988fc972"><td class="memItemLeft" align="right" valign="top">template <a class="el" href="struct_layer_test_result.xhtml">LayerTestResult</a>&lt; int32_t, 3 &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_arg_min_max_test_impl_8cpp.xhtml#a941fff4ef65df2195da6340e988fc972">ArgMinSimpleTest&lt; armnn::DataType::QSymmS16 &gt;</a> (<a class="el" href="classarmnn_1_1_i_workload_factory.xhtml">armnn::IWorkloadFactory</a> &amp;workloadFactory, const <a class="el" href="classarmnn_1_1_i_backend_internal.xhtml#a693b40e6b94e958836aeb0410ca186bd">armnn::IBackendInternal::IMemoryManagerSharedPtr</a> &amp;memoryManager, const <a class="el" href="classarmnn_1_1_i_tensor_handle_factory.xhtml">armnn::ITensorHandleFactory</a> &amp;tensorHandleFactory)</td></tr>
<tr class="separator:a941fff4ef65df2195da6340e988fc972"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a427f04094277de4bbdb206f66e632ae6"><td class="memItemLeft" align="right" valign="top">template <a class="el" href="struct_layer_test_result.xhtml">LayerTestResult</a>&lt; int32_t, 3 &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_arg_min_max_test_impl_8cpp.xhtml#a427f04094277de4bbdb206f66e632ae6">ArgMinSimpleTest&lt; armnn::DataType::Signed32 &gt;</a> (<a class="el" href="classarmnn_1_1_i_workload_factory.xhtml">armnn::IWorkloadFactory</a> &amp;workloadFactory, const <a class="el" href="classarmnn_1_1_i_backend_internal.xhtml#a693b40e6b94e958836aeb0410ca186bd">armnn::IBackendInternal::IMemoryManagerSharedPtr</a> &amp;memoryManager, const <a class="el" href="classarmnn_1_1_i_tensor_handle_factory.xhtml">armnn::ITensorHandleFactory</a> &amp;tensorHandleFactory)</td></tr>
<tr class="separator:a427f04094277de4bbdb206f66e632ae6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac020d852312ea8caca8ac77e5d351f2c"><td class="memItemLeft" align="right" valign="top">template <a class="el" href="struct_layer_test_result.xhtml">LayerTestResult</a>&lt; int32_t, 3 &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_arg_min_max_test_impl_8cpp.xhtml#ac020d852312ea8caca8ac77e5d351f2c">ArgMinChannelTest&lt; armnn::DataType::Float32 &gt;</a> (<a class="el" href="classarmnn_1_1_i_workload_factory.xhtml">armnn::IWorkloadFactory</a> &amp;workloadFactory, const <a class="el" href="classarmnn_1_1_i_backend_internal.xhtml#a693b40e6b94e958836aeb0410ca186bd">armnn::IBackendInternal::IMemoryManagerSharedPtr</a> &amp;memoryManager, const <a class="el" href="classarmnn_1_1_i_tensor_handle_factory.xhtml">armnn::ITensorHandleFactory</a> &amp;tensorHandleFactory)</td></tr>
<tr class="separator:ac020d852312ea8caca8ac77e5d351f2c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:adc63d8db1e185a4e13a9be87cddcc02c"><td class="memItemLeft" align="right" valign="top">template <a class="el" href="struct_layer_test_result.xhtml">LayerTestResult</a>&lt; int32_t, 3 &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_arg_min_max_test_impl_8cpp.xhtml#adc63d8db1e185a4e13a9be87cddcc02c">ArgMinChannelTest&lt; armnn::DataType::Float16 &gt;</a> (<a class="el" href="classarmnn_1_1_i_workload_factory.xhtml">armnn::IWorkloadFactory</a> &amp;workloadFactory, const <a class="el" href="classarmnn_1_1_i_backend_internal.xhtml#a693b40e6b94e958836aeb0410ca186bd">armnn::IBackendInternal::IMemoryManagerSharedPtr</a> &amp;memoryManager, const <a class="el" href="classarmnn_1_1_i_tensor_handle_factory.xhtml">armnn::ITensorHandleFactory</a> &amp;tensorHandleFactory)</td></tr>
<tr class="separator:adc63d8db1e185a4e13a9be87cddcc02c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a681c85ad95189296f08aa88d66e15815"><td class="memItemLeft" align="right" valign="top">template <a class="el" href="struct_layer_test_result.xhtml">LayerTestResult</a>&lt; int32_t, 3 &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_arg_min_max_test_impl_8cpp.xhtml#a681c85ad95189296f08aa88d66e15815">ArgMinChannelTest&lt; armnn::DataType::QAsymmS8 &gt;</a> (<a class="el" href="classarmnn_1_1_i_workload_factory.xhtml">armnn::IWorkloadFactory</a> &amp;workloadFactory, const <a class="el" href="classarmnn_1_1_i_backend_internal.xhtml#a693b40e6b94e958836aeb0410ca186bd">armnn::IBackendInternal::IMemoryManagerSharedPtr</a> &amp;memoryManager, const <a class="el" href="classarmnn_1_1_i_tensor_handle_factory.xhtml">armnn::ITensorHandleFactory</a> &amp;tensorHandleFactory)</td></tr>
<tr class="separator:a681c85ad95189296f08aa88d66e15815"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad7bcda45cbd095d5c593230145b2b565"><td class="memItemLeft" align="right" valign="top">template <a class="el" href="struct_layer_test_result.xhtml">LayerTestResult</a>&lt; int32_t, 3 &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_arg_min_max_test_impl_8cpp.xhtml#ad7bcda45cbd095d5c593230145b2b565">ArgMinChannelTest&lt; armnn::DataType::QAsymmU8 &gt;</a> (<a class="el" href="classarmnn_1_1_i_workload_factory.xhtml">armnn::IWorkloadFactory</a> &amp;workloadFactory, const <a class="el" href="classarmnn_1_1_i_backend_internal.xhtml#a693b40e6b94e958836aeb0410ca186bd">armnn::IBackendInternal::IMemoryManagerSharedPtr</a> &amp;memoryManager, const <a class="el" href="classarmnn_1_1_i_tensor_handle_factory.xhtml">armnn::ITensorHandleFactory</a> &amp;tensorHandleFactory)</td></tr>
<tr class="separator:ad7bcda45cbd095d5c593230145b2b565"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a01d7291d1066b029d7ffb4726605063c"><td class="memItemLeft" align="right" valign="top">template <a class="el" href="struct_layer_test_result.xhtml">LayerTestResult</a>&lt; int32_t, 3 &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_arg_min_max_test_impl_8cpp.xhtml#a01d7291d1066b029d7ffb4726605063c">ArgMinChannelTest&lt; armnn::DataType::QSymmS16 &gt;</a> (<a class="el" href="classarmnn_1_1_i_workload_factory.xhtml">armnn::IWorkloadFactory</a> &amp;workloadFactory, const <a class="el" href="classarmnn_1_1_i_backend_internal.xhtml#a693b40e6b94e958836aeb0410ca186bd">armnn::IBackendInternal::IMemoryManagerSharedPtr</a> &amp;memoryManager, const <a class="el" href="classarmnn_1_1_i_tensor_handle_factory.xhtml">armnn::ITensorHandleFactory</a> &amp;tensorHandleFactory)</td></tr>
<tr class="separator:a01d7291d1066b029d7ffb4726605063c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2d035dd83a2bdf60a1b10bb476cb2b47"><td class="memItemLeft" align="right" valign="top">template <a class="el" href="struct_layer_test_result.xhtml">LayerTestResult</a>&lt; int32_t, 3 &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_arg_min_max_test_impl_8cpp.xhtml#a2d035dd83a2bdf60a1b10bb476cb2b47">ArgMinChannelTest&lt; armnn::DataType::Signed32 &gt;</a> (<a class="el" href="classarmnn_1_1_i_workload_factory.xhtml">armnn::IWorkloadFactory</a> &amp;workloadFactory, const <a class="el" href="classarmnn_1_1_i_backend_internal.xhtml#a693b40e6b94e958836aeb0410ca186bd">armnn::IBackendInternal::IMemoryManagerSharedPtr</a> &amp;memoryManager, const <a class="el" href="classarmnn_1_1_i_tensor_handle_factory.xhtml">armnn::ITensorHandleFactory</a> &amp;tensorHandleFactory)</td></tr>
<tr class="separator:a2d035dd83a2bdf60a1b10bb476cb2b47"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aea07b7756c0ca02d19a733eb754944a8"><td class="memItemLeft" align="right" valign="top">template <a class="el" href="struct_layer_test_result.xhtml">LayerTestResult</a>&lt; int32_t, 3 &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_arg_min_max_test_impl_8cpp.xhtml#aea07b7756c0ca02d19a733eb754944a8">ArgMaxChannelTest&lt; armnn::DataType::Float32 &gt;</a> (<a class="el" href="classarmnn_1_1_i_workload_factory.xhtml">armnn::IWorkloadFactory</a> &amp;workloadFactory, const <a class="el" href="classarmnn_1_1_i_backend_internal.xhtml#a693b40e6b94e958836aeb0410ca186bd">armnn::IBackendInternal::IMemoryManagerSharedPtr</a> &amp;memoryManager, const <a class="el" href="classarmnn_1_1_i_tensor_handle_factory.xhtml">armnn::ITensorHandleFactory</a> &amp;tensorHandleFactory)</td></tr>
<tr class="separator:aea07b7756c0ca02d19a733eb754944a8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a671d4b5dd252b1b4f48e1db185c5a30d"><td class="memItemLeft" align="right" valign="top">template <a class="el" href="struct_layer_test_result.xhtml">LayerTestResult</a>&lt; int32_t, 3 &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_arg_min_max_test_impl_8cpp.xhtml#a671d4b5dd252b1b4f48e1db185c5a30d">ArgMaxChannelTest&lt; armnn::DataType::Float16 &gt;</a> (<a class="el" href="classarmnn_1_1_i_workload_factory.xhtml">armnn::IWorkloadFactory</a> &amp;workloadFactory, const <a class="el" href="classarmnn_1_1_i_backend_internal.xhtml#a693b40e6b94e958836aeb0410ca186bd">armnn::IBackendInternal::IMemoryManagerSharedPtr</a> &amp;memoryManager, const <a class="el" href="classarmnn_1_1_i_tensor_handle_factory.xhtml">armnn::ITensorHandleFactory</a> &amp;tensorHandleFactory)</td></tr>
<tr class="separator:a671d4b5dd252b1b4f48e1db185c5a30d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a25e74630293ef23515b51c6f09ee2692"><td class="memItemLeft" align="right" valign="top">template <a class="el" href="struct_layer_test_result.xhtml">LayerTestResult</a>&lt; int32_t, 3 &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_arg_min_max_test_impl_8cpp.xhtml#a25e74630293ef23515b51c6f09ee2692">ArgMaxChannelTest&lt; armnn::DataType::QAsymmS8 &gt;</a> (<a class="el" href="classarmnn_1_1_i_workload_factory.xhtml">armnn::IWorkloadFactory</a> &amp;workloadFactory, const <a class="el" href="classarmnn_1_1_i_backend_internal.xhtml#a693b40e6b94e958836aeb0410ca186bd">armnn::IBackendInternal::IMemoryManagerSharedPtr</a> &amp;memoryManager, const <a class="el" href="classarmnn_1_1_i_tensor_handle_factory.xhtml">armnn::ITensorHandleFactory</a> &amp;tensorHandleFactory)</td></tr>
<tr class="separator:a25e74630293ef23515b51c6f09ee2692"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a64a7acd216fca515db423fa1edbb4962"><td class="memItemLeft" align="right" valign="top">template <a class="el" href="struct_layer_test_result.xhtml">LayerTestResult</a>&lt; int32_t, 3 &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_arg_min_max_test_impl_8cpp.xhtml#a64a7acd216fca515db423fa1edbb4962">ArgMaxChannelTest&lt; armnn::DataType::QAsymmU8 &gt;</a> (<a class="el" href="classarmnn_1_1_i_workload_factory.xhtml">armnn::IWorkloadFactory</a> &amp;workloadFactory, const <a class="el" href="classarmnn_1_1_i_backend_internal.xhtml#a693b40e6b94e958836aeb0410ca186bd">armnn::IBackendInternal::IMemoryManagerSharedPtr</a> &amp;memoryManager, const <a class="el" href="classarmnn_1_1_i_tensor_handle_factory.xhtml">armnn::ITensorHandleFactory</a> &amp;tensorHandleFactory)</td></tr>
<tr class="separator:a64a7acd216fca515db423fa1edbb4962"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2bbbb635206fd67813298653dd6d3703"><td class="memItemLeft" align="right" valign="top">template <a class="el" href="struct_layer_test_result.xhtml">LayerTestResult</a>&lt; int32_t, 3 &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_arg_min_max_test_impl_8cpp.xhtml#a2bbbb635206fd67813298653dd6d3703">ArgMaxChannelTest&lt; armnn::DataType::QSymmS16 &gt;</a> (<a class="el" href="classarmnn_1_1_i_workload_factory.xhtml">armnn::IWorkloadFactory</a> &amp;workloadFactory, const <a class="el" href="classarmnn_1_1_i_backend_internal.xhtml#a693b40e6b94e958836aeb0410ca186bd">armnn::IBackendInternal::IMemoryManagerSharedPtr</a> &amp;memoryManager, const <a class="el" href="classarmnn_1_1_i_tensor_handle_factory.xhtml">armnn::ITensorHandleFactory</a> &amp;tensorHandleFactory)</td></tr>
<tr class="separator:a2bbbb635206fd67813298653dd6d3703"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a14984b84f0b3653f5e0145dd65c0ca38"><td class="memItemLeft" align="right" valign="top">template <a class="el" href="struct_layer_test_result.xhtml">LayerTestResult</a>&lt; int32_t, 3 &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_arg_min_max_test_impl_8cpp.xhtml#a14984b84f0b3653f5e0145dd65c0ca38">ArgMaxChannelTest&lt; armnn::DataType::Signed32 &gt;</a> (<a class="el" href="classarmnn_1_1_i_workload_factory.xhtml">armnn::IWorkloadFactory</a> &amp;workloadFactory, const <a class="el" href="classarmnn_1_1_i_backend_internal.xhtml#a693b40e6b94e958836aeb0410ca186bd">armnn::IBackendInternal::IMemoryManagerSharedPtr</a> &amp;memoryManager, const <a class="el" href="classarmnn_1_1_i_tensor_handle_factory.xhtml">armnn::ITensorHandleFactory</a> &amp;tensorHandleFactory)</td></tr>
<tr class="separator:a14984b84f0b3653f5e0145dd65c0ca38"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5cce141a853e7dcff2fc55e39a36dee3"><td class="memItemLeft" align="right" valign="top">template <a class="el" href="struct_layer_test_result.xhtml">LayerTestResult</a>&lt; int32_t, 3 &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_arg_min_max_test_impl_8cpp.xhtml#a5cce141a853e7dcff2fc55e39a36dee3">ArgMaxHeightTest&lt; armnn::DataType::Float32 &gt;</a> (<a class="el" href="classarmnn_1_1_i_workload_factory.xhtml">armnn::IWorkloadFactory</a> &amp;workloadFactory, const <a class="el" href="classarmnn_1_1_i_backend_internal.xhtml#a693b40e6b94e958836aeb0410ca186bd">armnn::IBackendInternal::IMemoryManagerSharedPtr</a> &amp;memoryManager, const <a class="el" href="classarmnn_1_1_i_tensor_handle_factory.xhtml">armnn::ITensorHandleFactory</a> &amp;tensorHandleFactory)</td></tr>
<tr class="separator:a5cce141a853e7dcff2fc55e39a36dee3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7feda8fda9cb53e023f49fdab72af9a5"><td class="memItemLeft" align="right" valign="top">template <a class="el" href="struct_layer_test_result.xhtml">LayerTestResult</a>&lt; int32_t, 3 &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_arg_min_max_test_impl_8cpp.xhtml#a7feda8fda9cb53e023f49fdab72af9a5">ArgMaxHeightTest&lt; armnn::DataType::Float16 &gt;</a> (<a class="el" href="classarmnn_1_1_i_workload_factory.xhtml">armnn::IWorkloadFactory</a> &amp;workloadFactory, const <a class="el" href="classarmnn_1_1_i_backend_internal.xhtml#a693b40e6b94e958836aeb0410ca186bd">armnn::IBackendInternal::IMemoryManagerSharedPtr</a> &amp;memoryManager, const <a class="el" href="classarmnn_1_1_i_tensor_handle_factory.xhtml">armnn::ITensorHandleFactory</a> &amp;tensorHandleFactory)</td></tr>
<tr class="separator:a7feda8fda9cb53e023f49fdab72af9a5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1537bbcfdd0da37f6b85ee36d5c629ff"><td class="memItemLeft" align="right" valign="top">template <a class="el" href="struct_layer_test_result.xhtml">LayerTestResult</a>&lt; int32_t, 3 &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_arg_min_max_test_impl_8cpp.xhtml#a1537bbcfdd0da37f6b85ee36d5c629ff">ArgMaxHeightTest&lt; armnn::DataType::Signed32 &gt;</a> (<a class="el" href="classarmnn_1_1_i_workload_factory.xhtml">armnn::IWorkloadFactory</a> &amp;workloadFactory, const <a class="el" href="classarmnn_1_1_i_backend_internal.xhtml#a693b40e6b94e958836aeb0410ca186bd">armnn::IBackendInternal::IMemoryManagerSharedPtr</a> &amp;memoryManager, const <a class="el" href="classarmnn_1_1_i_tensor_handle_factory.xhtml">armnn::ITensorHandleFactory</a> &amp;tensorHandleFactory)</td></tr>
<tr class="separator:a1537bbcfdd0da37f6b85ee36d5c629ff"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a86255c73929dedfffdaacab32fc0f234"><td class="memItemLeft" align="right" valign="top">template <a class="el" href="struct_layer_test_result.xhtml">LayerTestResult</a>&lt; int32_t, 3 &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_arg_min_max_test_impl_8cpp.xhtml#a86255c73929dedfffdaacab32fc0f234">ArgMaxHeightTest&lt; armnn::DataType::QAsymmS8 &gt;</a> (<a class="el" href="classarmnn_1_1_i_workload_factory.xhtml">armnn::IWorkloadFactory</a> &amp;workloadFactory, const <a class="el" href="classarmnn_1_1_i_backend_internal.xhtml#a693b40e6b94e958836aeb0410ca186bd">armnn::IBackendInternal::IMemoryManagerSharedPtr</a> &amp;memoryManager, const <a class="el" href="classarmnn_1_1_i_tensor_handle_factory.xhtml">armnn::ITensorHandleFactory</a> &amp;tensorHandleFactory)</td></tr>
<tr class="separator:a86255c73929dedfffdaacab32fc0f234"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aca1bbf08fd351dbedbfc4fb8cb827562"><td class="memItemLeft" align="right" valign="top">template <a class="el" href="struct_layer_test_result.xhtml">LayerTestResult</a>&lt; int32_t, 3 &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_arg_min_max_test_impl_8cpp.xhtml#aca1bbf08fd351dbedbfc4fb8cb827562">ArgMaxHeightTest&lt; armnn::DataType::QAsymmU8 &gt;</a> (<a class="el" href="classarmnn_1_1_i_workload_factory.xhtml">armnn::IWorkloadFactory</a> &amp;workloadFactory, const <a class="el" href="classarmnn_1_1_i_backend_internal.xhtml#a693b40e6b94e958836aeb0410ca186bd">armnn::IBackendInternal::IMemoryManagerSharedPtr</a> &amp;memoryManager, const <a class="el" href="classarmnn_1_1_i_tensor_handle_factory.xhtml">armnn::ITensorHandleFactory</a> &amp;tensorHandleFactory)</td></tr>
<tr class="separator:aca1bbf08fd351dbedbfc4fb8cb827562"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac96f5e864b3898eab2e9844836199464"><td class="memItemLeft" align="right" valign="top">template <a class="el" href="struct_layer_test_result.xhtml">LayerTestResult</a>&lt; int32_t, 3 &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_arg_min_max_test_impl_8cpp.xhtml#ac96f5e864b3898eab2e9844836199464">ArgMinWidthTest&lt; armnn::DataType::Float32 &gt;</a> (<a class="el" href="classarmnn_1_1_i_workload_factory.xhtml">armnn::IWorkloadFactory</a> &amp;workloadFactory, const <a class="el" href="classarmnn_1_1_i_backend_internal.xhtml#a693b40e6b94e958836aeb0410ca186bd">armnn::IBackendInternal::IMemoryManagerSharedPtr</a> &amp;memoryManager, const <a class="el" href="classarmnn_1_1_i_tensor_handle_factory.xhtml">armnn::ITensorHandleFactory</a> &amp;tensorHandleFactory)</td></tr>
<tr class="separator:ac96f5e864b3898eab2e9844836199464"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7a230909328d99c6627b5d550a1bec41"><td class="memItemLeft" align="right" valign="top">template <a class="el" href="struct_layer_test_result.xhtml">LayerTestResult</a>&lt; int32_t, 3 &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_arg_min_max_test_impl_8cpp.xhtml#a7a230909328d99c6627b5d550a1bec41">ArgMinWidthTest&lt; armnn::DataType::Float16 &gt;</a> (<a class="el" href="classarmnn_1_1_i_workload_factory.xhtml">armnn::IWorkloadFactory</a> &amp;workloadFactory, const <a class="el" href="classarmnn_1_1_i_backend_internal.xhtml#a693b40e6b94e958836aeb0410ca186bd">armnn::IBackendInternal::IMemoryManagerSharedPtr</a> &amp;memoryManager, const <a class="el" href="classarmnn_1_1_i_tensor_handle_factory.xhtml">armnn::ITensorHandleFactory</a> &amp;tensorHandleFactory)</td></tr>
<tr class="separator:a7a230909328d99c6627b5d550a1bec41"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1948639e7af78c8c29b7caab64758b41"><td class="memItemLeft" align="right" valign="top">template <a class="el" href="struct_layer_test_result.xhtml">LayerTestResult</a>&lt; int32_t, 3 &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_arg_min_max_test_impl_8cpp.xhtml#a1948639e7af78c8c29b7caab64758b41">ArgMinWidthTest&lt; armnn::DataType::Signed32 &gt;</a> (<a class="el" href="classarmnn_1_1_i_workload_factory.xhtml">armnn::IWorkloadFactory</a> &amp;workloadFactory, const <a class="el" href="classarmnn_1_1_i_backend_internal.xhtml#a693b40e6b94e958836aeb0410ca186bd">armnn::IBackendInternal::IMemoryManagerSharedPtr</a> &amp;memoryManager, const <a class="el" href="classarmnn_1_1_i_tensor_handle_factory.xhtml">armnn::ITensorHandleFactory</a> &amp;tensorHandleFactory)</td></tr>
<tr class="separator:a1948639e7af78c8c29b7caab64758b41"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9e6b663698245a3f33ffec877738a74f"><td class="memItemLeft" align="right" valign="top">template <a class="el" href="struct_layer_test_result.xhtml">LayerTestResult</a>&lt; int32_t, 3 &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_arg_min_max_test_impl_8cpp.xhtml#a9e6b663698245a3f33ffec877738a74f">ArgMinWidthTest&lt; armnn::DataType::QAsymmS8 &gt;</a> (<a class="el" href="classarmnn_1_1_i_workload_factory.xhtml">armnn::IWorkloadFactory</a> &amp;workloadFactory, const <a class="el" href="classarmnn_1_1_i_backend_internal.xhtml#a693b40e6b94e958836aeb0410ca186bd">armnn::IBackendInternal::IMemoryManagerSharedPtr</a> &amp;memoryManager, const <a class="el" href="classarmnn_1_1_i_tensor_handle_factory.xhtml">armnn::ITensorHandleFactory</a> &amp;tensorHandleFactory)</td></tr>
<tr class="separator:a9e6b663698245a3f33ffec877738a74f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8abebb7c54764d2cc9ae1007b1c853f2"><td class="memItemLeft" align="right" valign="top">template <a class="el" href="struct_layer_test_result.xhtml">LayerTestResult</a>&lt; int32_t, 3 &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_arg_min_max_test_impl_8cpp.xhtml#a8abebb7c54764d2cc9ae1007b1c853f2">ArgMinWidthTest&lt; armnn::DataType::QAsymmU8 &gt;</a> (<a class="el" href="classarmnn_1_1_i_workload_factory.xhtml">armnn::IWorkloadFactory</a> &amp;workloadFactory, const <a class="el" href="classarmnn_1_1_i_backend_internal.xhtml#a693b40e6b94e958836aeb0410ca186bd">armnn::IBackendInternal::IMemoryManagerSharedPtr</a> &amp;memoryManager, const <a class="el" href="classarmnn_1_1_i_tensor_handle_factory.xhtml">armnn::ITensorHandleFactory</a> &amp;tensorHandleFactory)</td></tr>
<tr class="separator:a8abebb7c54764d2cc9ae1007b1c853f2"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<h2 class="groupheader">Function Documentation</h2>
<a id="aaf3bdf97c63a99b26d4f84370720e86b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aaf3bdf97c63a99b26d4f84370720e86b">&#9670;&nbsp;</a></span>ArgMaxChannelTest()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="struct_layer_test_result.xhtml">LayerTestResult</a>&lt;int32_t, 3&gt; ArgMaxChannelTest </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classarmnn_1_1_i_workload_factory.xhtml">armnn::IWorkloadFactory</a> &amp;&#160;</td>
          <td class="paramname"><em>workloadFactory</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_i_backend_internal.xhtml#a693b40e6b94e958836aeb0410ca186bd">armnn::IBackendInternal::IMemoryManagerSharedPtr</a> &amp;&#160;</td>
          <td class="paramname"><em>memoryManager</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_i_tensor_handle_factory.xhtml">armnn::ITensorHandleFactory</a> &amp;&#160;</td>
          <td class="paramname"><em>tensorHandleFactory</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_arg_min_max_test_impl_8cpp_source.xhtml#l00158">158</a> of file <a class="el" href="_arg_min_max_test_impl_8cpp_source.xhtml">ArgMinMaxTestImpl.cpp</a>.</p>

<p class="reference">References <a class="el" href="namespacearmnn.xhtml#ae7e8cbf71db6a490789ca6dcaa8deeaea6a061313d22e51e0f25b7cd4dc065233">armnn::Max</a>, <a class="el" href="_tensor_8cpp_source.xhtml#l00489">TensorInfo::SetQuantizationOffset()</a>, <a class="el" href="_tensor_8cpp_source.xhtml#l00473">TensorInfo::SetQuantizationScale()</a>, and <a class="el" href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6accedffbc6e5308e33d3843e8bdc0dad7">armnn::Signed32</a>.</p>
<div class="fragment"><div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160;{</div><div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160;    <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_shape.xhtml">armnn::TensorShape</a> inputShape{ 1, 3, 2, 4};</div><div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;    <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_shape.xhtml">armnn::TensorShape</a> outputShape{ 1, 2, 4 };</div><div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160;</div><div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160;    <a class="code" href="classarmnn_1_1_tensor_info.xhtml">armnn::TensorInfo</a> inputTensorInfo(inputShape, ArmnnType);</div><div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160;</div><div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160;    <span class="keywordflow">if</span> (armnn::IsQuantizedType&lt;T&gt;())</div><div class="line"><a name="l00169"></a><span class="lineno">  169</span>&#160;    {</div><div class="line"><a name="l00170"></a><span class="lineno">  170</span>&#160;        inputTensorInfo.SetQuantizationScale(1.0f);</div><div class="line"><a name="l00171"></a><span class="lineno">  171</span>&#160;        inputTensorInfo.SetQuantizationOffset(0);</div><div class="line"><a name="l00172"></a><span class="lineno">  172</span>&#160;    }</div><div class="line"><a name="l00173"></a><span class="lineno">  173</span>&#160;</div><div class="line"><a name="l00174"></a><span class="lineno">  174</span>&#160;    <a class="code" href="classarmnn_1_1_tensor_info.xhtml">armnn::TensorInfo</a> outputTensorInfo(outputShape, <a class="code" href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6accedffbc6e5308e33d3843e8bdc0dad7">armnn::DataType::Signed32</a>);</div><div class="line"><a name="l00175"></a><span class="lineno">  175</span>&#160;</div><div class="line"><a name="l00176"></a><span class="lineno">  176</span>&#160;    std::vector&lt;float&gt; inputValues({  1.0f,   2.0f,   3.0f,   4.0f,</div><div class="line"><a name="l00177"></a><span class="lineno">  177</span>&#160;                                      5.0f,   6.0f,   7.0f,   8.0f,</div><div class="line"><a name="l00178"></a><span class="lineno">  178</span>&#160;</div><div class="line"><a name="l00179"></a><span class="lineno">  179</span>&#160;                                     10.0f,  20.0f,  30.0f,  40.0f,</div><div class="line"><a name="l00180"></a><span class="lineno">  180</span>&#160;                                     50.0f,  60.0f,  70.0f,  80.0f,</div><div class="line"><a name="l00181"></a><span class="lineno">  181</span>&#160;</div><div class="line"><a name="l00182"></a><span class="lineno">  182</span>&#160;                                    100.0f, 200.0f, 300.0f, 400.0f,</div><div class="line"><a name="l00183"></a><span class="lineno">  183</span>&#160;                                    500.0f, 600.0f, 700.0f, 800.0f });</div><div class="line"><a name="l00184"></a><span class="lineno">  184</span>&#160;    std::vector&lt;int32_t&gt; outputValues({ 2, 2, 2, 2,</div><div class="line"><a name="l00185"></a><span class="lineno">  185</span>&#160;                                        2, 2, 2, 2 });</div><div class="line"><a name="l00186"></a><span class="lineno">  186</span>&#160;</div><div class="line"><a name="l00187"></a><span class="lineno">  187</span>&#160;    <span class="keywordflow">return</span> ArgMinMaxTestCommon&lt;ArmnnType&gt;(workloadFactory, memoryManager, tensorHandleFactory,</div><div class="line"><a name="l00188"></a><span class="lineno">  188</span>&#160;                                          <a class="code" href="namespacearmnn.xhtml#ae7e8cbf71db6a490789ca6dcaa8deeaea6a061313d22e51e0f25b7cd4dc065233">armnn::ArgMinMaxFunction::Max</a>,</div><div class="line"><a name="l00189"></a><span class="lineno">  189</span>&#160;                                          inputTensorInfo, outputTensorInfo,</div><div class="line"><a name="l00190"></a><span class="lineno">  190</span>&#160;                                          inputValues, outputValues, 1);</div><div class="line"><a name="l00191"></a><span class="lineno">  191</span>&#160;}</div><div class="ttc" id="classarmnn_1_1_tensor_info_xhtml"><div class="ttname"><a href="classarmnn_1_1_tensor_info.xhtml">armnn::TensorInfo</a></div><div class="ttdef"><b>Definition:</b> <a href="_tensor_8hpp_source.xhtml#l00152">Tensor.hpp:152</a></div></div>
<div class="ttc" id="namespacearmnn_xhtml_ad8ed01ff3ff33333d8e19db4d2818bb6accedffbc6e5308e33d3843e8bdc0dad7"><div class="ttname"><a href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6accedffbc6e5308e33d3843e8bdc0dad7">armnn::DataType::Signed32</a></div></div>
<div class="ttc" id="classarmnn_1_1_tensor_shape_xhtml"><div class="ttname"><a href="classarmnn_1_1_tensor_shape.xhtml">armnn::TensorShape</a></div><div class="ttdef"><b>Definition:</b> <a href="_tensor_8hpp_source.xhtml#l00020">Tensor.hpp:20</a></div></div>
<div class="ttc" id="namespacearmnn_xhtml_ae7e8cbf71db6a490789ca6dcaa8deeaea6a061313d22e51e0f25b7cd4dc065233"><div class="ttname"><a href="namespacearmnn.xhtml#ae7e8cbf71db6a490789ca6dcaa8deeaea6a061313d22e51e0f25b7cd4dc065233">armnn::ArgMinMaxFunction::Max</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="a671d4b5dd252b1b4f48e1db185c5a30d"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a671d4b5dd252b1b4f48e1db185c5a30d">&#9670;&nbsp;</a></span>ArgMaxChannelTest< armnn::DataType::Float16 >()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">template <a class="el" href="struct_layer_test_result.xhtml">LayerTestResult</a>&lt;int32_t, 3&gt; <a class="el" href="_arg_min_max_test_impl_8hpp.xhtml#aaf3bdf97c63a99b26d4f84370720e86b">ArgMaxChannelTest</a>&lt; <a class="el" href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a26e6ed77470c6f2f830ecf874e6c0d55">armnn::DataType::Float16</a> &gt; </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classarmnn_1_1_i_workload_factory.xhtml">armnn::IWorkloadFactory</a> &amp;&#160;</td>
          <td class="paramname"><em>workloadFactory</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_i_backend_internal.xhtml#a693b40e6b94e958836aeb0410ca186bd">armnn::IBackendInternal::IMemoryManagerSharedPtr</a> &amp;&#160;</td>
          <td class="paramname"><em>memoryManager</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_i_tensor_handle_factory.xhtml">armnn::ITensorHandleFactory</a> &amp;&#160;</td>
          <td class="paramname"><em>tensorHandleFactory</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="aea07b7756c0ca02d19a733eb754944a8"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aea07b7756c0ca02d19a733eb754944a8">&#9670;&nbsp;</a></span>ArgMaxChannelTest< armnn::DataType::Float32 >()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">template <a class="el" href="struct_layer_test_result.xhtml">LayerTestResult</a>&lt;int32_t, 3&gt; <a class="el" href="_arg_min_max_test_impl_8hpp.xhtml#aaf3bdf97c63a99b26d4f84370720e86b">ArgMaxChannelTest</a>&lt; <a class="el" href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a166495adc0d0f53bee6baecc577f5204">armnn::DataType::Float32</a> &gt; </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classarmnn_1_1_i_workload_factory.xhtml">armnn::IWorkloadFactory</a> &amp;&#160;</td>
          <td class="paramname"><em>workloadFactory</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_i_backend_internal.xhtml#a693b40e6b94e958836aeb0410ca186bd">armnn::IBackendInternal::IMemoryManagerSharedPtr</a> &amp;&#160;</td>
          <td class="paramname"><em>memoryManager</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_i_tensor_handle_factory.xhtml">armnn::ITensorHandleFactory</a> &amp;&#160;</td>
          <td class="paramname"><em>tensorHandleFactory</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a25e74630293ef23515b51c6f09ee2692"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a25e74630293ef23515b51c6f09ee2692">&#9670;&nbsp;</a></span>ArgMaxChannelTest< armnn::DataType::QAsymmS8 >()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">template <a class="el" href="struct_layer_test_result.xhtml">LayerTestResult</a>&lt;int32_t, 3&gt; <a class="el" href="_arg_min_max_test_impl_8hpp.xhtml#aaf3bdf97c63a99b26d4f84370720e86b">ArgMaxChannelTest</a>&lt; <a class="el" href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a9d02ea768c081d4bdb2b7cab0b3f510d">armnn::DataType::QAsymmS8</a> &gt; </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classarmnn_1_1_i_workload_factory.xhtml">armnn::IWorkloadFactory</a> &amp;&#160;</td>
          <td class="paramname"><em>workloadFactory</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_i_backend_internal.xhtml#a693b40e6b94e958836aeb0410ca186bd">armnn::IBackendInternal::IMemoryManagerSharedPtr</a> &amp;&#160;</td>
          <td class="paramname"><em>memoryManager</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_i_tensor_handle_factory.xhtml">armnn::ITensorHandleFactory</a> &amp;&#160;</td>
          <td class="paramname"><em>tensorHandleFactory</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a64a7acd216fca515db423fa1edbb4962"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a64a7acd216fca515db423fa1edbb4962">&#9670;&nbsp;</a></span>ArgMaxChannelTest< armnn::DataType::QAsymmU8 >()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">template <a class="el" href="struct_layer_test_result.xhtml">LayerTestResult</a>&lt;int32_t, 3&gt; <a class="el" href="_arg_min_max_test_impl_8hpp.xhtml#aaf3bdf97c63a99b26d4f84370720e86b">ArgMaxChannelTest</a>&lt; <a class="el" href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a0a3f57c876f5a230244c38e1453a8a6e">armnn::DataType::QAsymmU8</a> &gt; </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classarmnn_1_1_i_workload_factory.xhtml">armnn::IWorkloadFactory</a> &amp;&#160;</td>
          <td class="paramname"><em>workloadFactory</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_i_backend_internal.xhtml#a693b40e6b94e958836aeb0410ca186bd">armnn::IBackendInternal::IMemoryManagerSharedPtr</a> &amp;&#160;</td>
          <td class="paramname"><em>memoryManager</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_i_tensor_handle_factory.xhtml">armnn::ITensorHandleFactory</a> &amp;&#160;</td>
          <td class="paramname"><em>tensorHandleFactory</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a2bbbb635206fd67813298653dd6d3703"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a2bbbb635206fd67813298653dd6d3703">&#9670;&nbsp;</a></span>ArgMaxChannelTest< armnn::DataType::QSymmS16 >()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">template <a class="el" href="struct_layer_test_result.xhtml">LayerTestResult</a>&lt;int32_t, 3&gt; <a class="el" href="_arg_min_max_test_impl_8hpp.xhtml#aaf3bdf97c63a99b26d4f84370720e86b">ArgMaxChannelTest</a>&lt; <a class="el" href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a053c769dcf82d66ef326c86980c02ba7">armnn::DataType::QSymmS16</a> &gt; </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classarmnn_1_1_i_workload_factory.xhtml">armnn::IWorkloadFactory</a> &amp;&#160;</td>
          <td class="paramname"><em>workloadFactory</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_i_backend_internal.xhtml#a693b40e6b94e958836aeb0410ca186bd">armnn::IBackendInternal::IMemoryManagerSharedPtr</a> &amp;&#160;</td>
          <td class="paramname"><em>memoryManager</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_i_tensor_handle_factory.xhtml">armnn::ITensorHandleFactory</a> &amp;&#160;</td>
          <td class="paramname"><em>tensorHandleFactory</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a14984b84f0b3653f5e0145dd65c0ca38"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a14984b84f0b3653f5e0145dd65c0ca38">&#9670;&nbsp;</a></span>ArgMaxChannelTest< armnn::DataType::Signed32 >()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">template <a class="el" href="struct_layer_test_result.xhtml">LayerTestResult</a>&lt;int32_t, 3&gt; <a class="el" href="_arg_min_max_test_impl_8hpp.xhtml#aaf3bdf97c63a99b26d4f84370720e86b">ArgMaxChannelTest</a>&lt; <a class="el" href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6accedffbc6e5308e33d3843e8bdc0dad7">armnn::DataType::Signed32</a> &gt; </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classarmnn_1_1_i_workload_factory.xhtml">armnn::IWorkloadFactory</a> &amp;&#160;</td>
          <td class="paramname"><em>workloadFactory</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_i_backend_internal.xhtml#a693b40e6b94e958836aeb0410ca186bd">armnn::IBackendInternal::IMemoryManagerSharedPtr</a> &amp;&#160;</td>
          <td class="paramname"><em>memoryManager</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_i_tensor_handle_factory.xhtml">armnn::ITensorHandleFactory</a> &amp;&#160;</td>
          <td class="paramname"><em>tensorHandleFactory</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a9b1c558709dc0f83ab07dfccd5f71654"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a9b1c558709dc0f83ab07dfccd5f71654">&#9670;&nbsp;</a></span>ArgMaxHeightTest()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="struct_layer_test_result.xhtml">LayerTestResult</a>&lt;int32_t, 3&gt; ArgMaxHeightTest </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classarmnn_1_1_i_workload_factory.xhtml">armnn::IWorkloadFactory</a> &amp;&#160;</td>
          <td class="paramname"><em>workloadFactory</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_i_backend_internal.xhtml#a693b40e6b94e958836aeb0410ca186bd">armnn::IBackendInternal::IMemoryManagerSharedPtr</a> &amp;&#160;</td>
          <td class="paramname"><em>memoryManager</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_i_tensor_handle_factory.xhtml">armnn::ITensorHandleFactory</a> &amp;&#160;</td>
          <td class="paramname"><em>tensorHandleFactory</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_arg_min_max_test_impl_8cpp_source.xhtml#l00194">194</a> of file <a class="el" href="_arg_min_max_test_impl_8cpp_source.xhtml">ArgMinMaxTestImpl.cpp</a>.</p>

<p class="reference">References <a class="el" href="namespacearmnn.xhtml#ae7e8cbf71db6a490789ca6dcaa8deeaea6a061313d22e51e0f25b7cd4dc065233">armnn::Max</a>, <a class="el" href="_tensor_8cpp_source.xhtml#l00489">TensorInfo::SetQuantizationOffset()</a>, <a class="el" href="_tensor_8cpp_source.xhtml#l00473">TensorInfo::SetQuantizationScale()</a>, and <a class="el" href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6accedffbc6e5308e33d3843e8bdc0dad7">armnn::Signed32</a>.</p>
<div class="fragment"><div class="line"><a name="l00198"></a><span class="lineno">  198</span>&#160;{</div><div class="line"><a name="l00199"></a><span class="lineno">  199</span>&#160;    <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_shape.xhtml">armnn::TensorShape</a> inputShape{ 1, 3, 2, 4};</div><div class="line"><a name="l00200"></a><span class="lineno">  200</span>&#160;    <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_shape.xhtml">armnn::TensorShape</a> outputShape{ 1, 3, 4 };</div><div class="line"><a name="l00201"></a><span class="lineno">  201</span>&#160;</div><div class="line"><a name="l00202"></a><span class="lineno">  202</span>&#160;    <a class="code" href="classarmnn_1_1_tensor_info.xhtml">armnn::TensorInfo</a> inputTensorInfo(inputShape, ArmnnType);</div><div class="line"><a name="l00203"></a><span class="lineno">  203</span>&#160;    <a class="code" href="classarmnn_1_1_tensor_info.xhtml">armnn::TensorInfo</a> outputTensorInfo(outputShape, <a class="code" href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6accedffbc6e5308e33d3843e8bdc0dad7">armnn::DataType::Signed32</a>);</div><div class="line"><a name="l00204"></a><span class="lineno">  204</span>&#160;</div><div class="line"><a name="l00205"></a><span class="lineno">  205</span>&#160;    <span class="keywordflow">if</span> (armnn::IsQuantizedType&lt;T&gt;())</div><div class="line"><a name="l00206"></a><span class="lineno">  206</span>&#160;    {</div><div class="line"><a name="l00207"></a><span class="lineno">  207</span>&#160;        inputTensorInfo.SetQuantizationScale(1.0f);</div><div class="line"><a name="l00208"></a><span class="lineno">  208</span>&#160;        inputTensorInfo.SetQuantizationOffset(0);</div><div class="line"><a name="l00209"></a><span class="lineno">  209</span>&#160;    }</div><div class="line"><a name="l00210"></a><span class="lineno">  210</span>&#160;</div><div class="line"><a name="l00211"></a><span class="lineno">  211</span>&#160;    std::vector&lt;float&gt; inputValues({  1.0f,   2.0f,   3.0f,   4.0f,</div><div class="line"><a name="l00212"></a><span class="lineno">  212</span>&#160;                                      5.0f,   6.0f,   7.0f,   8.0f,</div><div class="line"><a name="l00213"></a><span class="lineno">  213</span>&#160;</div><div class="line"><a name="l00214"></a><span class="lineno">  214</span>&#160;                                     10.0f,  20.0f,  30.0f,  40.0f,</div><div class="line"><a name="l00215"></a><span class="lineno">  215</span>&#160;                                     50.0f,  60.0f,  70.0f,  80.0f,</div><div class="line"><a name="l00216"></a><span class="lineno">  216</span>&#160;</div><div class="line"><a name="l00217"></a><span class="lineno">  217</span>&#160;                                    100.0f, 200.0f, 300.0f, 400.0f,</div><div class="line"><a name="l00218"></a><span class="lineno">  218</span>&#160;                                    500.0f, 600.0f, 700.0f, 800.0f });</div><div class="line"><a name="l00219"></a><span class="lineno">  219</span>&#160;    std::vector&lt;int32_t&gt; outputValues({ 1, 1, 1, 1,</div><div class="line"><a name="l00220"></a><span class="lineno">  220</span>&#160;                                        1, 1, 1, 1,</div><div class="line"><a name="l00221"></a><span class="lineno">  221</span>&#160;                                        1, 1, 1, 1 });</div><div class="line"><a name="l00222"></a><span class="lineno">  222</span>&#160;</div><div class="line"><a name="l00223"></a><span class="lineno">  223</span>&#160;    <span class="keywordflow">return</span> ArgMinMaxTestCommon&lt;ArmnnType&gt;(workloadFactory, memoryManager, tensorHandleFactory,</div><div class="line"><a name="l00224"></a><span class="lineno">  224</span>&#160;                                          <a class="code" href="namespacearmnn.xhtml#ae7e8cbf71db6a490789ca6dcaa8deeaea6a061313d22e51e0f25b7cd4dc065233">armnn::ArgMinMaxFunction::Max</a>,</div><div class="line"><a name="l00225"></a><span class="lineno">  225</span>&#160;                                          inputTensorInfo, outputTensorInfo,</div><div class="line"><a name="l00226"></a><span class="lineno">  226</span>&#160;                                          inputValues, outputValues, 2);</div><div class="line"><a name="l00227"></a><span class="lineno">  227</span>&#160;}</div><div class="ttc" id="classarmnn_1_1_tensor_info_xhtml"><div class="ttname"><a href="classarmnn_1_1_tensor_info.xhtml">armnn::TensorInfo</a></div><div class="ttdef"><b>Definition:</b> <a href="_tensor_8hpp_source.xhtml#l00152">Tensor.hpp:152</a></div></div>
<div class="ttc" id="namespacearmnn_xhtml_ad8ed01ff3ff33333d8e19db4d2818bb6accedffbc6e5308e33d3843e8bdc0dad7"><div class="ttname"><a href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6accedffbc6e5308e33d3843e8bdc0dad7">armnn::DataType::Signed32</a></div></div>
<div class="ttc" id="classarmnn_1_1_tensor_shape_xhtml"><div class="ttname"><a href="classarmnn_1_1_tensor_shape.xhtml">armnn::TensorShape</a></div><div class="ttdef"><b>Definition:</b> <a href="_tensor_8hpp_source.xhtml#l00020">Tensor.hpp:20</a></div></div>
<div class="ttc" id="namespacearmnn_xhtml_ae7e8cbf71db6a490789ca6dcaa8deeaea6a061313d22e51e0f25b7cd4dc065233"><div class="ttname"><a href="namespacearmnn.xhtml#ae7e8cbf71db6a490789ca6dcaa8deeaea6a061313d22e51e0f25b7cd4dc065233">armnn::ArgMinMaxFunction::Max</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="a7feda8fda9cb53e023f49fdab72af9a5"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a7feda8fda9cb53e023f49fdab72af9a5">&#9670;&nbsp;</a></span>ArgMaxHeightTest< armnn::DataType::Float16 >()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">template <a class="el" href="struct_layer_test_result.xhtml">LayerTestResult</a>&lt;int32_t, 3&gt; <a class="el" href="_arg_min_max_test_impl_8hpp.xhtml#a9b1c558709dc0f83ab07dfccd5f71654">ArgMaxHeightTest</a>&lt; <a class="el" href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a26e6ed77470c6f2f830ecf874e6c0d55">armnn::DataType::Float16</a> &gt; </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classarmnn_1_1_i_workload_factory.xhtml">armnn::IWorkloadFactory</a> &amp;&#160;</td>
          <td class="paramname"><em>workloadFactory</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_i_backend_internal.xhtml#a693b40e6b94e958836aeb0410ca186bd">armnn::IBackendInternal::IMemoryManagerSharedPtr</a> &amp;&#160;</td>
          <td class="paramname"><em>memoryManager</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_i_tensor_handle_factory.xhtml">armnn::ITensorHandleFactory</a> &amp;&#160;</td>
          <td class="paramname"><em>tensorHandleFactory</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a5cce141a853e7dcff2fc55e39a36dee3"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a5cce141a853e7dcff2fc55e39a36dee3">&#9670;&nbsp;</a></span>ArgMaxHeightTest< armnn::DataType::Float32 >()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">template <a class="el" href="struct_layer_test_result.xhtml">LayerTestResult</a>&lt;int32_t, 3&gt; <a class="el" href="_arg_min_max_test_impl_8hpp.xhtml#a9b1c558709dc0f83ab07dfccd5f71654">ArgMaxHeightTest</a>&lt; <a class="el" href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a166495adc0d0f53bee6baecc577f5204">armnn::DataType::Float32</a> &gt; </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classarmnn_1_1_i_workload_factory.xhtml">armnn::IWorkloadFactory</a> &amp;&#160;</td>
          <td class="paramname"><em>workloadFactory</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_i_backend_internal.xhtml#a693b40e6b94e958836aeb0410ca186bd">armnn::IBackendInternal::IMemoryManagerSharedPtr</a> &amp;&#160;</td>
          <td class="paramname"><em>memoryManager</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_i_tensor_handle_factory.xhtml">armnn::ITensorHandleFactory</a> &amp;&#160;</td>
          <td class="paramname"><em>tensorHandleFactory</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a86255c73929dedfffdaacab32fc0f234"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a86255c73929dedfffdaacab32fc0f234">&#9670;&nbsp;</a></span>ArgMaxHeightTest< armnn::DataType::QAsymmS8 >()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">template <a class="el" href="struct_layer_test_result.xhtml">LayerTestResult</a>&lt;int32_t, 3&gt; <a class="el" href="_arg_min_max_test_impl_8hpp.xhtml#a9b1c558709dc0f83ab07dfccd5f71654">ArgMaxHeightTest</a>&lt; <a class="el" href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a9d02ea768c081d4bdb2b7cab0b3f510d">armnn::DataType::QAsymmS8</a> &gt; </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classarmnn_1_1_i_workload_factory.xhtml">armnn::IWorkloadFactory</a> &amp;&#160;</td>
          <td class="paramname"><em>workloadFactory</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_i_backend_internal.xhtml#a693b40e6b94e958836aeb0410ca186bd">armnn::IBackendInternal::IMemoryManagerSharedPtr</a> &amp;&#160;</td>
          <td class="paramname"><em>memoryManager</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_i_tensor_handle_factory.xhtml">armnn::ITensorHandleFactory</a> &amp;&#160;</td>
          <td class="paramname"><em>tensorHandleFactory</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="aca1bbf08fd351dbedbfc4fb8cb827562"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aca1bbf08fd351dbedbfc4fb8cb827562">&#9670;&nbsp;</a></span>ArgMaxHeightTest< armnn::DataType::QAsymmU8 >()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">template <a class="el" href="struct_layer_test_result.xhtml">LayerTestResult</a>&lt;int32_t, 3&gt; <a class="el" href="_arg_min_max_test_impl_8hpp.xhtml#a9b1c558709dc0f83ab07dfccd5f71654">ArgMaxHeightTest</a>&lt; <a class="el" href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a0a3f57c876f5a230244c38e1453a8a6e">armnn::DataType::QAsymmU8</a> &gt; </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classarmnn_1_1_i_workload_factory.xhtml">armnn::IWorkloadFactory</a> &amp;&#160;</td>
          <td class="paramname"><em>workloadFactory</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_i_backend_internal.xhtml#a693b40e6b94e958836aeb0410ca186bd">armnn::IBackendInternal::IMemoryManagerSharedPtr</a> &amp;&#160;</td>
          <td class="paramname"><em>memoryManager</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_i_tensor_handle_factory.xhtml">armnn::ITensorHandleFactory</a> &amp;&#160;</td>
          <td class="paramname"><em>tensorHandleFactory</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a1537bbcfdd0da37f6b85ee36d5c629ff"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a1537bbcfdd0da37f6b85ee36d5c629ff">&#9670;&nbsp;</a></span>ArgMaxHeightTest< armnn::DataType::Signed32 >()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">template <a class="el" href="struct_layer_test_result.xhtml">LayerTestResult</a>&lt;int32_t, 3&gt; <a class="el" href="_arg_min_max_test_impl_8hpp.xhtml#a9b1c558709dc0f83ab07dfccd5f71654">ArgMaxHeightTest</a>&lt; <a class="el" href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6accedffbc6e5308e33d3843e8bdc0dad7">armnn::DataType::Signed32</a> &gt; </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classarmnn_1_1_i_workload_factory.xhtml">armnn::IWorkloadFactory</a> &amp;&#160;</td>
          <td class="paramname"><em>workloadFactory</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_i_backend_internal.xhtml#a693b40e6b94e958836aeb0410ca186bd">armnn::IBackendInternal::IMemoryManagerSharedPtr</a> &amp;&#160;</td>
          <td class="paramname"><em>memoryManager</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_i_tensor_handle_factory.xhtml">armnn::ITensorHandleFactory</a> &amp;&#160;</td>
          <td class="paramname"><em>tensorHandleFactory</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a1bc1aff00a67a4efb47226f8b5993c39"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a1bc1aff00a67a4efb47226f8b5993c39">&#9670;&nbsp;</a></span>ArgMaxSimpleTest()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="struct_layer_test_result.xhtml">LayerTestResult</a>&lt;int32_t, 3&gt; ArgMaxSimpleTest </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classarmnn_1_1_i_workload_factory.xhtml">armnn::IWorkloadFactory</a> &amp;&#160;</td>
          <td class="paramname"><em>workloadFactory</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_i_backend_internal.xhtml#a693b40e6b94e958836aeb0410ca186bd">armnn::IBackendInternal::IMemoryManagerSharedPtr</a> &amp;&#160;</td>
          <td class="paramname"><em>memoryManager</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_i_tensor_handle_factory.xhtml">armnn::ITensorHandleFactory</a> &amp;&#160;</td>
          <td class="paramname"><em>tensorHandleFactory</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_arg_min_max_test_impl_8cpp_source.xhtml#l00066">66</a> of file <a class="el" href="_arg_min_max_test_impl_8cpp_source.xhtml">ArgMinMaxTestImpl.cpp</a>.</p>

<p class="reference">References <a class="el" href="namespacearmnn.xhtml#ae7e8cbf71db6a490789ca6dcaa8deeaea6a061313d22e51e0f25b7cd4dc065233">armnn::Max</a>, <a class="el" href="_tensor_8cpp_source.xhtml#l00489">TensorInfo::SetQuantizationOffset()</a>, <a class="el" href="_tensor_8cpp_source.xhtml#l00473">TensorInfo::SetQuantizationScale()</a>, and <a class="el" href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6accedffbc6e5308e33d3843e8bdc0dad7">armnn::Signed32</a>.</p>
<div class="fragment"><div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;{</div><div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;    <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_shape.xhtml">armnn::TensorShape</a> inputShape{ 1, 1, 1, 5 };</div><div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;    <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_shape.xhtml">armnn::TensorShape</a> outputShape{ 1, 1, 1 };</div><div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;</div><div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;    <a class="code" href="classarmnn_1_1_tensor_info.xhtml">armnn::TensorInfo</a> inputTensorInfo(inputShape, ArmnnType);</div><div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;</div><div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;    <span class="keywordflow">if</span> (armnn::IsQuantizedType&lt;T&gt;())</div><div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;    {</div><div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;        inputTensorInfo.SetQuantizationScale(1.0f);</div><div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;        inputTensorInfo.SetQuantizationOffset(0);</div><div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;    }</div><div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;</div><div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;    <a class="code" href="classarmnn_1_1_tensor_info.xhtml">armnn::TensorInfo</a> outputTensorInfo(outputShape, <a class="code" href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6accedffbc6e5308e33d3843e8bdc0dad7">armnn::DataType::Signed32</a>);</div><div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;</div><div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;    std::vector&lt;float&gt; inputValues({ 5.0f, 2.0f, 8.0f, 10.0f, 9.0f });</div><div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;    std::vector&lt;int32_t&gt; outputValues({ 3 });</div><div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;</div><div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;    <span class="keywordflow">return</span> ArgMinMaxTestCommon&lt;ArmnnType&gt;(workloadFactory, memoryManager, tensorHandleFactory,</div><div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;                                          <a class="code" href="namespacearmnn.xhtml#ae7e8cbf71db6a490789ca6dcaa8deeaea6a061313d22e51e0f25b7cd4dc065233">armnn::ArgMinMaxFunction::Max</a>,</div><div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;                                          inputTensorInfo, outputTensorInfo,</div><div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;                                          inputValues, outputValues, -1); <span class="comment">// axis -1 === 3</span></div><div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;}</div><div class="ttc" id="classarmnn_1_1_tensor_info_xhtml"><div class="ttname"><a href="classarmnn_1_1_tensor_info.xhtml">armnn::TensorInfo</a></div><div class="ttdef"><b>Definition:</b> <a href="_tensor_8hpp_source.xhtml#l00152">Tensor.hpp:152</a></div></div>
<div class="ttc" id="namespacearmnn_xhtml_ad8ed01ff3ff33333d8e19db4d2818bb6accedffbc6e5308e33d3843e8bdc0dad7"><div class="ttname"><a href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6accedffbc6e5308e33d3843e8bdc0dad7">armnn::DataType::Signed32</a></div></div>
<div class="ttc" id="classarmnn_1_1_tensor_shape_xhtml"><div class="ttname"><a href="classarmnn_1_1_tensor_shape.xhtml">armnn::TensorShape</a></div><div class="ttdef"><b>Definition:</b> <a href="_tensor_8hpp_source.xhtml#l00020">Tensor.hpp:20</a></div></div>
<div class="ttc" id="namespacearmnn_xhtml_ae7e8cbf71db6a490789ca6dcaa8deeaea6a061313d22e51e0f25b7cd4dc065233"><div class="ttname"><a href="namespacearmnn.xhtml#ae7e8cbf71db6a490789ca6dcaa8deeaea6a061313d22e51e0f25b7cd4dc065233">armnn::ArgMinMaxFunction::Max</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="a79e7379a83ad8ea3d2076dc4da9d1623"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a79e7379a83ad8ea3d2076dc4da9d1623">&#9670;&nbsp;</a></span>ArgMaxSimpleTest< armnn::DataType::Float16 >()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">template <a class="el" href="struct_layer_test_result.xhtml">LayerTestResult</a>&lt;int32_t, 3&gt; <a class="el" href="_arg_min_max_test_impl_8hpp.xhtml#a1bc1aff00a67a4efb47226f8b5993c39">ArgMaxSimpleTest</a>&lt; <a class="el" href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a26e6ed77470c6f2f830ecf874e6c0d55">armnn::DataType::Float16</a> &gt; </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classarmnn_1_1_i_workload_factory.xhtml">armnn::IWorkloadFactory</a> &amp;&#160;</td>
          <td class="paramname"><em>workloadFactory</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_i_backend_internal.xhtml#a693b40e6b94e958836aeb0410ca186bd">armnn::IBackendInternal::IMemoryManagerSharedPtr</a> &amp;&#160;</td>
          <td class="paramname"><em>memoryManager</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_i_tensor_handle_factory.xhtml">armnn::ITensorHandleFactory</a> &amp;&#160;</td>
          <td class="paramname"><em>tensorHandleFactory</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a8471bacc34662f1b587ba9a6385fda16"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a8471bacc34662f1b587ba9a6385fda16">&#9670;&nbsp;</a></span>ArgMaxSimpleTest< armnn::DataType::Float32 >()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">template <a class="el" href="struct_layer_test_result.xhtml">LayerTestResult</a>&lt;int32_t, 3&gt; <a class="el" href="_arg_min_max_test_impl_8hpp.xhtml#a1bc1aff00a67a4efb47226f8b5993c39">ArgMaxSimpleTest</a>&lt; <a class="el" href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a166495adc0d0f53bee6baecc577f5204">armnn::DataType::Float32</a> &gt; </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classarmnn_1_1_i_workload_factory.xhtml">armnn::IWorkloadFactory</a> &amp;&#160;</td>
          <td class="paramname"><em>workloadFactory</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_i_backend_internal.xhtml#a693b40e6b94e958836aeb0410ca186bd">armnn::IBackendInternal::IMemoryManagerSharedPtr</a> &amp;&#160;</td>
          <td class="paramname"><em>memoryManager</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_i_tensor_handle_factory.xhtml">armnn::ITensorHandleFactory</a> &amp;&#160;</td>
          <td class="paramname"><em>tensorHandleFactory</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a55307b25f0edf4b4de1b67927e1f916e"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a55307b25f0edf4b4de1b67927e1f916e">&#9670;&nbsp;</a></span>ArgMaxSimpleTest< armnn::DataType::QAsymmS8 >()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">template <a class="el" href="struct_layer_test_result.xhtml">LayerTestResult</a>&lt;int32_t, 3&gt; <a class="el" href="_arg_min_max_test_impl_8hpp.xhtml#a1bc1aff00a67a4efb47226f8b5993c39">ArgMaxSimpleTest</a>&lt; <a class="el" href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a9d02ea768c081d4bdb2b7cab0b3f510d">armnn::DataType::QAsymmS8</a> &gt; </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classarmnn_1_1_i_workload_factory.xhtml">armnn::IWorkloadFactory</a> &amp;&#160;</td>
          <td class="paramname"><em>workloadFactory</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_i_backend_internal.xhtml#a693b40e6b94e958836aeb0410ca186bd">armnn::IBackendInternal::IMemoryManagerSharedPtr</a> &amp;&#160;</td>
          <td class="paramname"><em>memoryManager</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_i_tensor_handle_factory.xhtml">armnn::ITensorHandleFactory</a> &amp;&#160;</td>
          <td class="paramname"><em>tensorHandleFactory</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="ab9c285b775e2835f230f615e5e4dd5df"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ab9c285b775e2835f230f615e5e4dd5df">&#9670;&nbsp;</a></span>ArgMaxSimpleTest< armnn::DataType::QAsymmU8 >()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">template <a class="el" href="struct_layer_test_result.xhtml">LayerTestResult</a>&lt;int32_t, 3&gt; <a class="el" href="_arg_min_max_test_impl_8hpp.xhtml#a1bc1aff00a67a4efb47226f8b5993c39">ArgMaxSimpleTest</a>&lt; <a class="el" href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a0a3f57c876f5a230244c38e1453a8a6e">armnn::DataType::QAsymmU8</a> &gt; </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classarmnn_1_1_i_workload_factory.xhtml">armnn::IWorkloadFactory</a> &amp;&#160;</td>
          <td class="paramname"><em>workloadFactory</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_i_backend_internal.xhtml#a693b40e6b94e958836aeb0410ca186bd">armnn::IBackendInternal::IMemoryManagerSharedPtr</a> &amp;&#160;</td>
          <td class="paramname"><em>memoryManager</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_i_tensor_handle_factory.xhtml">armnn::ITensorHandleFactory</a> &amp;&#160;</td>
          <td class="paramname"><em>tensorHandleFactory</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a6005410441a48d38d454ec5eed53e890"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a6005410441a48d38d454ec5eed53e890">&#9670;&nbsp;</a></span>ArgMaxSimpleTest< armnn::DataType::QSymmS16 >()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">template <a class="el" href="struct_layer_test_result.xhtml">LayerTestResult</a>&lt;int32_t, 3&gt; <a class="el" href="_arg_min_max_test_impl_8hpp.xhtml#a1bc1aff00a67a4efb47226f8b5993c39">ArgMaxSimpleTest</a>&lt; <a class="el" href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a053c769dcf82d66ef326c86980c02ba7">armnn::DataType::QSymmS16</a> &gt; </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classarmnn_1_1_i_workload_factory.xhtml">armnn::IWorkloadFactory</a> &amp;&#160;</td>
          <td class="paramname"><em>workloadFactory</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_i_backend_internal.xhtml#a693b40e6b94e958836aeb0410ca186bd">armnn::IBackendInternal::IMemoryManagerSharedPtr</a> &amp;&#160;</td>
          <td class="paramname"><em>memoryManager</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_i_tensor_handle_factory.xhtml">armnn::ITensorHandleFactory</a> &amp;&#160;</td>
          <td class="paramname"><em>tensorHandleFactory</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="ab518bbb6d0146f317b858c9f988d2693"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ab518bbb6d0146f317b858c9f988d2693">&#9670;&nbsp;</a></span>ArgMaxSimpleTest< armnn::DataType::Signed32 >()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">template <a class="el" href="struct_layer_test_result.xhtml">LayerTestResult</a>&lt;int32_t, 3&gt; <a class="el" href="_arg_min_max_test_impl_8hpp.xhtml#a1bc1aff00a67a4efb47226f8b5993c39">ArgMaxSimpleTest</a>&lt; <a class="el" href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6accedffbc6e5308e33d3843e8bdc0dad7">armnn::DataType::Signed32</a> &gt; </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classarmnn_1_1_i_workload_factory.xhtml">armnn::IWorkloadFactory</a> &amp;&#160;</td>
          <td class="paramname"><em>workloadFactory</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_i_backend_internal.xhtml#a693b40e6b94e958836aeb0410ca186bd">armnn::IBackendInternal::IMemoryManagerSharedPtr</a> &amp;&#160;</td>
          <td class="paramname"><em>memoryManager</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_i_tensor_handle_factory.xhtml">armnn::ITensorHandleFactory</a> &amp;&#160;</td>
          <td class="paramname"><em>tensorHandleFactory</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a3a2f8cb0c8adaa822297e0530136f358"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a3a2f8cb0c8adaa822297e0530136f358">&#9670;&nbsp;</a></span>ArgMinChannelTest()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="struct_layer_test_result.xhtml">LayerTestResult</a>&lt;int32_t, 3&gt; ArgMinChannelTest </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classarmnn_1_1_i_workload_factory.xhtml">armnn::IWorkloadFactory</a> &amp;&#160;</td>
          <td class="paramname"><em>workloadFactory</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_i_backend_internal.xhtml#a693b40e6b94e958836aeb0410ca186bd">armnn::IBackendInternal::IMemoryManagerSharedPtr</a> &amp;&#160;</td>
          <td class="paramname"><em>memoryManager</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_i_tensor_handle_factory.xhtml">armnn::ITensorHandleFactory</a> &amp;&#160;</td>
          <td class="paramname"><em>tensorHandleFactory</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_arg_min_max_test_impl_8cpp_source.xhtml#l00122">122</a> of file <a class="el" href="_arg_min_max_test_impl_8cpp_source.xhtml">ArgMinMaxTestImpl.cpp</a>.</p>

<p class="reference">References <a class="el" href="namespacearmnn.xhtml#ae7e8cbf71db6a490789ca6dcaa8deeaea78d811e98514cd165dda532286610fd2">armnn::Min</a>, <a class="el" href="_tensor_8cpp_source.xhtml#l00489">TensorInfo::SetQuantizationOffset()</a>, <a class="el" href="_tensor_8cpp_source.xhtml#l00473">TensorInfo::SetQuantizationScale()</a>, and <a class="el" href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6accedffbc6e5308e33d3843e8bdc0dad7">armnn::Signed32</a>.</p>
<div class="fragment"><div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;{</div><div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;    <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_shape.xhtml">armnn::TensorShape</a> inputShape{ 1, 3, 2, 4};</div><div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;    <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_shape.xhtml">armnn::TensorShape</a> outputShape{ 1, 2, 4 };</div><div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;</div><div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;    <a class="code" href="classarmnn_1_1_tensor_info.xhtml">armnn::TensorInfo</a> inputTensorInfo(inputShape, ArmnnType);</div><div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;</div><div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;    <span class="keywordflow">if</span> (armnn::IsQuantizedType&lt;T&gt;())</div><div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;    {</div><div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;        inputTensorInfo.SetQuantizationScale(1.0f);</div><div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;        inputTensorInfo.SetQuantizationOffset(0);</div><div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;    }</div><div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;</div><div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;    <a class="code" href="classarmnn_1_1_tensor_info.xhtml">armnn::TensorInfo</a> outputTensorInfo(outputShape, <a class="code" href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6accedffbc6e5308e33d3843e8bdc0dad7">armnn::DataType::Signed32</a>);</div><div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;</div><div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;    std::vector&lt;float&gt; inputValues({   1.0f,   2.0f,   3.0f,   4.0f,</div><div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;                                       5.0f,   6.0f,   7.0f,   8.0f,</div><div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;</div><div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;                                      10.0f,  20.0f,  30.0f,  40.0f,</div><div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;                                      50.0f,  60.0f,  70.0f,  80.0f,</div><div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;</div><div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;                                     100.0f, 200.0f, 300.0f, 400.0f,</div><div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;                                     500.0f, 600.0f, 700.0f, 800.0f });</div><div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;    std::vector&lt;int32_t&gt; outputValues({ 0, 0, 0, 0,</div><div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;                                        0, 0, 0, 0 });</div><div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;</div><div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;    <span class="keywordflow">return</span> ArgMinMaxTestCommon&lt;ArmnnType&gt;(workloadFactory, memoryManager, tensorHandleFactory,</div><div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;                                          <a class="code" href="namespacearmnn.xhtml#ae7e8cbf71db6a490789ca6dcaa8deeaea78d811e98514cd165dda532286610fd2">armnn::ArgMinMaxFunction::Min</a>,</div><div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;                                          inputTensorInfo, outputTensorInfo,</div><div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;                                          inputValues, outputValues, 1);</div><div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;}</div><div class="ttc" id="classarmnn_1_1_tensor_info_xhtml"><div class="ttname"><a href="classarmnn_1_1_tensor_info.xhtml">armnn::TensorInfo</a></div><div class="ttdef"><b>Definition:</b> <a href="_tensor_8hpp_source.xhtml#l00152">Tensor.hpp:152</a></div></div>
<div class="ttc" id="namespacearmnn_xhtml_ad8ed01ff3ff33333d8e19db4d2818bb6accedffbc6e5308e33d3843e8bdc0dad7"><div class="ttname"><a href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6accedffbc6e5308e33d3843e8bdc0dad7">armnn::DataType::Signed32</a></div></div>
<div class="ttc" id="classarmnn_1_1_tensor_shape_xhtml"><div class="ttname"><a href="classarmnn_1_1_tensor_shape.xhtml">armnn::TensorShape</a></div><div class="ttdef"><b>Definition:</b> <a href="_tensor_8hpp_source.xhtml#l00020">Tensor.hpp:20</a></div></div>
<div class="ttc" id="namespacearmnn_xhtml_ae7e8cbf71db6a490789ca6dcaa8deeaea78d811e98514cd165dda532286610fd2"><div class="ttname"><a href="namespacearmnn.xhtml#ae7e8cbf71db6a490789ca6dcaa8deeaea78d811e98514cd165dda532286610fd2">armnn::ArgMinMaxFunction::Min</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="adc63d8db1e185a4e13a9be87cddcc02c"></a>
<h2 class="memtitle"><span class="permalink"><a href="#adc63d8db1e185a4e13a9be87cddcc02c">&#9670;&nbsp;</a></span>ArgMinChannelTest< armnn::DataType::Float16 >()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">template <a class="el" href="struct_layer_test_result.xhtml">LayerTestResult</a>&lt;int32_t, 3&gt; <a class="el" href="_arg_min_max_test_impl_8hpp.xhtml#a3a2f8cb0c8adaa822297e0530136f358">ArgMinChannelTest</a>&lt; <a class="el" href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a26e6ed77470c6f2f830ecf874e6c0d55">armnn::DataType::Float16</a> &gt; </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classarmnn_1_1_i_workload_factory.xhtml">armnn::IWorkloadFactory</a> &amp;&#160;</td>
          <td class="paramname"><em>workloadFactory</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_i_backend_internal.xhtml#a693b40e6b94e958836aeb0410ca186bd">armnn::IBackendInternal::IMemoryManagerSharedPtr</a> &amp;&#160;</td>
          <td class="paramname"><em>memoryManager</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_i_tensor_handle_factory.xhtml">armnn::ITensorHandleFactory</a> &amp;&#160;</td>
          <td class="paramname"><em>tensorHandleFactory</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="ac020d852312ea8caca8ac77e5d351f2c"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ac020d852312ea8caca8ac77e5d351f2c">&#9670;&nbsp;</a></span>ArgMinChannelTest< armnn::DataType::Float32 >()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">template <a class="el" href="struct_layer_test_result.xhtml">LayerTestResult</a>&lt;int32_t, 3&gt; <a class="el" href="_arg_min_max_test_impl_8hpp.xhtml#a3a2f8cb0c8adaa822297e0530136f358">ArgMinChannelTest</a>&lt; <a class="el" href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a166495adc0d0f53bee6baecc577f5204">armnn::DataType::Float32</a> &gt; </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classarmnn_1_1_i_workload_factory.xhtml">armnn::IWorkloadFactory</a> &amp;&#160;</td>
          <td class="paramname"><em>workloadFactory</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_i_backend_internal.xhtml#a693b40e6b94e958836aeb0410ca186bd">armnn::IBackendInternal::IMemoryManagerSharedPtr</a> &amp;&#160;</td>
          <td class="paramname"><em>memoryManager</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_i_tensor_handle_factory.xhtml">armnn::ITensorHandleFactory</a> &amp;&#160;</td>
          <td class="paramname"><em>tensorHandleFactory</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a681c85ad95189296f08aa88d66e15815"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a681c85ad95189296f08aa88d66e15815">&#9670;&nbsp;</a></span>ArgMinChannelTest< armnn::DataType::QAsymmS8 >()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">template <a class="el" href="struct_layer_test_result.xhtml">LayerTestResult</a>&lt;int32_t, 3&gt; <a class="el" href="_arg_min_max_test_impl_8hpp.xhtml#a3a2f8cb0c8adaa822297e0530136f358">ArgMinChannelTest</a>&lt; <a class="el" href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a9d02ea768c081d4bdb2b7cab0b3f510d">armnn::DataType::QAsymmS8</a> &gt; </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classarmnn_1_1_i_workload_factory.xhtml">armnn::IWorkloadFactory</a> &amp;&#160;</td>
          <td class="paramname"><em>workloadFactory</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_i_backend_internal.xhtml#a693b40e6b94e958836aeb0410ca186bd">armnn::IBackendInternal::IMemoryManagerSharedPtr</a> &amp;&#160;</td>
          <td class="paramname"><em>memoryManager</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_i_tensor_handle_factory.xhtml">armnn::ITensorHandleFactory</a> &amp;&#160;</td>
          <td class="paramname"><em>tensorHandleFactory</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="ad7bcda45cbd095d5c593230145b2b565"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ad7bcda45cbd095d5c593230145b2b565">&#9670;&nbsp;</a></span>ArgMinChannelTest< armnn::DataType::QAsymmU8 >()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">template <a class="el" href="struct_layer_test_result.xhtml">LayerTestResult</a>&lt;int32_t, 3&gt; <a class="el" href="_arg_min_max_test_impl_8hpp.xhtml#a3a2f8cb0c8adaa822297e0530136f358">ArgMinChannelTest</a>&lt; <a class="el" href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a0a3f57c876f5a230244c38e1453a8a6e">armnn::DataType::QAsymmU8</a> &gt; </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classarmnn_1_1_i_workload_factory.xhtml">armnn::IWorkloadFactory</a> &amp;&#160;</td>
          <td class="paramname"><em>workloadFactory</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_i_backend_internal.xhtml#a693b40e6b94e958836aeb0410ca186bd">armnn::IBackendInternal::IMemoryManagerSharedPtr</a> &amp;&#160;</td>
          <td class="paramname"><em>memoryManager</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_i_tensor_handle_factory.xhtml">armnn::ITensorHandleFactory</a> &amp;&#160;</td>
          <td class="paramname"><em>tensorHandleFactory</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a01d7291d1066b029d7ffb4726605063c"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a01d7291d1066b029d7ffb4726605063c">&#9670;&nbsp;</a></span>ArgMinChannelTest< armnn::DataType::QSymmS16 >()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">template <a class="el" href="struct_layer_test_result.xhtml">LayerTestResult</a>&lt;int32_t, 3&gt; <a class="el" href="_arg_min_max_test_impl_8hpp.xhtml#a3a2f8cb0c8adaa822297e0530136f358">ArgMinChannelTest</a>&lt; <a class="el" href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a053c769dcf82d66ef326c86980c02ba7">armnn::DataType::QSymmS16</a> &gt; </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classarmnn_1_1_i_workload_factory.xhtml">armnn::IWorkloadFactory</a> &amp;&#160;</td>
          <td class="paramname"><em>workloadFactory</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_i_backend_internal.xhtml#a693b40e6b94e958836aeb0410ca186bd">armnn::IBackendInternal::IMemoryManagerSharedPtr</a> &amp;&#160;</td>
          <td class="paramname"><em>memoryManager</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_i_tensor_handle_factory.xhtml">armnn::ITensorHandleFactory</a> &amp;&#160;</td>
          <td class="paramname"><em>tensorHandleFactory</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a2d035dd83a2bdf60a1b10bb476cb2b47"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a2d035dd83a2bdf60a1b10bb476cb2b47">&#9670;&nbsp;</a></span>ArgMinChannelTest< armnn::DataType::Signed32 >()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">template <a class="el" href="struct_layer_test_result.xhtml">LayerTestResult</a>&lt;int32_t, 3&gt; <a class="el" href="_arg_min_max_test_impl_8hpp.xhtml#a3a2f8cb0c8adaa822297e0530136f358">ArgMinChannelTest</a>&lt; <a class="el" href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6accedffbc6e5308e33d3843e8bdc0dad7">armnn::DataType::Signed32</a> &gt; </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classarmnn_1_1_i_workload_factory.xhtml">armnn::IWorkloadFactory</a> &amp;&#160;</td>
          <td class="paramname"><em>workloadFactory</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_i_backend_internal.xhtml#a693b40e6b94e958836aeb0410ca186bd">armnn::IBackendInternal::IMemoryManagerSharedPtr</a> &amp;&#160;</td>
          <td class="paramname"><em>memoryManager</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_i_tensor_handle_factory.xhtml">armnn::ITensorHandleFactory</a> &amp;&#160;</td>
          <td class="paramname"><em>tensorHandleFactory</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a656352d139bbe8dd7adec8cb37fffc73"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a656352d139bbe8dd7adec8cb37fffc73">&#9670;&nbsp;</a></span>ArgMinSimpleTest()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="struct_layer_test_result.xhtml">LayerTestResult</a>&lt;int32_t, 3&gt; ArgMinSimpleTest </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classarmnn_1_1_i_workload_factory.xhtml">armnn::IWorkloadFactory</a> &amp;&#160;</td>
          <td class="paramname"><em>workloadFactory</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_i_backend_internal.xhtml#a693b40e6b94e958836aeb0410ca186bd">armnn::IBackendInternal::IMemoryManagerSharedPtr</a> &amp;&#160;</td>
          <td class="paramname"><em>memoryManager</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_i_tensor_handle_factory.xhtml">armnn::ITensorHandleFactory</a> &amp;&#160;</td>
          <td class="paramname"><em>tensorHandleFactory</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_arg_min_max_test_impl_8cpp_source.xhtml#l00094">94</a> of file <a class="el" href="_arg_min_max_test_impl_8cpp_source.xhtml">ArgMinMaxTestImpl.cpp</a>.</p>

<p class="reference">References <a class="el" href="namespacearmnn.xhtml#ae7e8cbf71db6a490789ca6dcaa8deeaea78d811e98514cd165dda532286610fd2">armnn::Min</a>, <a class="el" href="_tensor_8cpp_source.xhtml#l00489">TensorInfo::SetQuantizationOffset()</a>, <a class="el" href="_tensor_8cpp_source.xhtml#l00473">TensorInfo::SetQuantizationScale()</a>, and <a class="el" href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6accedffbc6e5308e33d3843e8bdc0dad7">armnn::Signed32</a>.</p>
<div class="fragment"><div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;{</div><div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;    <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_shape.xhtml">armnn::TensorShape</a> inputShape{ 1, 1, 1, 5 };</div><div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;    <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_shape.xhtml">armnn::TensorShape</a> outputShape{ 1, 1, 1 };</div><div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;</div><div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;    <a class="code" href="classarmnn_1_1_tensor_info.xhtml">armnn::TensorInfo</a> inputTensorInfo(inputShape, ArmnnType);</div><div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;</div><div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;    <span class="keywordflow">if</span> (armnn::IsQuantizedType&lt;T&gt;())</div><div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;    {</div><div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;        inputTensorInfo.SetQuantizationScale(1.0f);</div><div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;        inputTensorInfo.SetQuantizationOffset(0);</div><div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;    }</div><div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;</div><div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;    <a class="code" href="classarmnn_1_1_tensor_info.xhtml">armnn::TensorInfo</a> outputTensorInfo(outputShape, <a class="code" href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6accedffbc6e5308e33d3843e8bdc0dad7">armnn::DataType::Signed32</a>);</div><div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;</div><div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;    std::vector&lt;float&gt; inputValues({ 5.0f, 2.0f, 8.0f, 10.0f, 9.0f });</div><div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;    std::vector&lt;int32_t&gt; outputValues({ 1 });</div><div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;</div><div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;    <span class="keywordflow">return</span> ArgMinMaxTestCommon&lt;ArmnnType&gt;(workloadFactory, memoryManager, tensorHandleFactory,</div><div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;                                          <a class="code" href="namespacearmnn.xhtml#ae7e8cbf71db6a490789ca6dcaa8deeaea78d811e98514cd165dda532286610fd2">armnn::ArgMinMaxFunction::Min</a>,</div><div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;                                          inputTensorInfo, outputTensorInfo,</div><div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;                                          inputValues, outputValues, 3);</div><div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;}</div><div class="ttc" id="classarmnn_1_1_tensor_info_xhtml"><div class="ttname"><a href="classarmnn_1_1_tensor_info.xhtml">armnn::TensorInfo</a></div><div class="ttdef"><b>Definition:</b> <a href="_tensor_8hpp_source.xhtml#l00152">Tensor.hpp:152</a></div></div>
<div class="ttc" id="namespacearmnn_xhtml_ad8ed01ff3ff33333d8e19db4d2818bb6accedffbc6e5308e33d3843e8bdc0dad7"><div class="ttname"><a href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6accedffbc6e5308e33d3843e8bdc0dad7">armnn::DataType::Signed32</a></div></div>
<div class="ttc" id="classarmnn_1_1_tensor_shape_xhtml"><div class="ttname"><a href="classarmnn_1_1_tensor_shape.xhtml">armnn::TensorShape</a></div><div class="ttdef"><b>Definition:</b> <a href="_tensor_8hpp_source.xhtml#l00020">Tensor.hpp:20</a></div></div>
<div class="ttc" id="namespacearmnn_xhtml_ae7e8cbf71db6a490789ca6dcaa8deeaea78d811e98514cd165dda532286610fd2"><div class="ttname"><a href="namespacearmnn.xhtml#ae7e8cbf71db6a490789ca6dcaa8deeaea78d811e98514cd165dda532286610fd2">armnn::ArgMinMaxFunction::Min</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="ade9ca768a2703f77db3d991086b0ca13"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ade9ca768a2703f77db3d991086b0ca13">&#9670;&nbsp;</a></span>ArgMinSimpleTest< armnn::DataType::Float16 >()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">template <a class="el" href="struct_layer_test_result.xhtml">LayerTestResult</a>&lt;int32_t, 3&gt; <a class="el" href="_arg_min_max_test_impl_8hpp.xhtml#a656352d139bbe8dd7adec8cb37fffc73">ArgMinSimpleTest</a>&lt; <a class="el" href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a26e6ed77470c6f2f830ecf874e6c0d55">armnn::DataType::Float16</a> &gt; </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classarmnn_1_1_i_workload_factory.xhtml">armnn::IWorkloadFactory</a> &amp;&#160;</td>
          <td class="paramname"><em>workloadFactory</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_i_backend_internal.xhtml#a693b40e6b94e958836aeb0410ca186bd">armnn::IBackendInternal::IMemoryManagerSharedPtr</a> &amp;&#160;</td>
          <td class="paramname"><em>memoryManager</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_i_tensor_handle_factory.xhtml">armnn::ITensorHandleFactory</a> &amp;&#160;</td>
          <td class="paramname"><em>tensorHandleFactory</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a305d8e3356253be776caa2a291314505"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a305d8e3356253be776caa2a291314505">&#9670;&nbsp;</a></span>ArgMinSimpleTest< armnn::DataType::Float32 >()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">template <a class="el" href="struct_layer_test_result.xhtml">LayerTestResult</a>&lt;int32_t, 3&gt; <a class="el" href="_arg_min_max_test_impl_8hpp.xhtml#a656352d139bbe8dd7adec8cb37fffc73">ArgMinSimpleTest</a>&lt; <a class="el" href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a166495adc0d0f53bee6baecc577f5204">armnn::DataType::Float32</a> &gt; </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classarmnn_1_1_i_workload_factory.xhtml">armnn::IWorkloadFactory</a> &amp;&#160;</td>
          <td class="paramname"><em>workloadFactory</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_i_backend_internal.xhtml#a693b40e6b94e958836aeb0410ca186bd">armnn::IBackendInternal::IMemoryManagerSharedPtr</a> &amp;&#160;</td>
          <td class="paramname"><em>memoryManager</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_i_tensor_handle_factory.xhtml">armnn::ITensorHandleFactory</a> &amp;&#160;</td>
          <td class="paramname"><em>tensorHandleFactory</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a6d210af569feaa065adc28149f0162a1"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a6d210af569feaa065adc28149f0162a1">&#9670;&nbsp;</a></span>ArgMinSimpleTest< armnn::DataType::QAsymmS8 >()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">template <a class="el" href="struct_layer_test_result.xhtml">LayerTestResult</a>&lt;int32_t, 3&gt; <a class="el" href="_arg_min_max_test_impl_8hpp.xhtml#a656352d139bbe8dd7adec8cb37fffc73">ArgMinSimpleTest</a>&lt; <a class="el" href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a9d02ea768c081d4bdb2b7cab0b3f510d">armnn::DataType::QAsymmS8</a> &gt; </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classarmnn_1_1_i_workload_factory.xhtml">armnn::IWorkloadFactory</a> &amp;&#160;</td>
          <td class="paramname"><em>workloadFactory</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_i_backend_internal.xhtml#a693b40e6b94e958836aeb0410ca186bd">armnn::IBackendInternal::IMemoryManagerSharedPtr</a> &amp;&#160;</td>
          <td class="paramname"><em>memoryManager</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_i_tensor_handle_factory.xhtml">armnn::ITensorHandleFactory</a> &amp;&#160;</td>
          <td class="paramname"><em>tensorHandleFactory</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="ab921106921e62b9e08c876f4fad6f721"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ab921106921e62b9e08c876f4fad6f721">&#9670;&nbsp;</a></span>ArgMinSimpleTest< armnn::DataType::QAsymmU8 >()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">template <a class="el" href="struct_layer_test_result.xhtml">LayerTestResult</a>&lt;int32_t, 3&gt; <a class="el" href="_arg_min_max_test_impl_8hpp.xhtml#a656352d139bbe8dd7adec8cb37fffc73">ArgMinSimpleTest</a>&lt; <a class="el" href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a0a3f57c876f5a230244c38e1453a8a6e">armnn::DataType::QAsymmU8</a> &gt; </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classarmnn_1_1_i_workload_factory.xhtml">armnn::IWorkloadFactory</a> &amp;&#160;</td>
          <td class="paramname"><em>workloadFactory</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_i_backend_internal.xhtml#a693b40e6b94e958836aeb0410ca186bd">armnn::IBackendInternal::IMemoryManagerSharedPtr</a> &amp;&#160;</td>
          <td class="paramname"><em>memoryManager</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_i_tensor_handle_factory.xhtml">armnn::ITensorHandleFactory</a> &amp;&#160;</td>
          <td class="paramname"><em>tensorHandleFactory</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a941fff4ef65df2195da6340e988fc972"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a941fff4ef65df2195da6340e988fc972">&#9670;&nbsp;</a></span>ArgMinSimpleTest< armnn::DataType::QSymmS16 >()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">template <a class="el" href="struct_layer_test_result.xhtml">LayerTestResult</a>&lt;int32_t, 3&gt; <a class="el" href="_arg_min_max_test_impl_8hpp.xhtml#a656352d139bbe8dd7adec8cb37fffc73">ArgMinSimpleTest</a>&lt; <a class="el" href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a053c769dcf82d66ef326c86980c02ba7">armnn::DataType::QSymmS16</a> &gt; </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classarmnn_1_1_i_workload_factory.xhtml">armnn::IWorkloadFactory</a> &amp;&#160;</td>
          <td class="paramname"><em>workloadFactory</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_i_backend_internal.xhtml#a693b40e6b94e958836aeb0410ca186bd">armnn::IBackendInternal::IMemoryManagerSharedPtr</a> &amp;&#160;</td>
          <td class="paramname"><em>memoryManager</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_i_tensor_handle_factory.xhtml">armnn::ITensorHandleFactory</a> &amp;&#160;</td>
          <td class="paramname"><em>tensorHandleFactory</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a427f04094277de4bbdb206f66e632ae6"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a427f04094277de4bbdb206f66e632ae6">&#9670;&nbsp;</a></span>ArgMinSimpleTest< armnn::DataType::Signed32 >()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">template <a class="el" href="struct_layer_test_result.xhtml">LayerTestResult</a>&lt;int32_t, 3&gt; <a class="el" href="_arg_min_max_test_impl_8hpp.xhtml#a656352d139bbe8dd7adec8cb37fffc73">ArgMinSimpleTest</a>&lt; <a class="el" href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6accedffbc6e5308e33d3843e8bdc0dad7">armnn::DataType::Signed32</a> &gt; </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classarmnn_1_1_i_workload_factory.xhtml">armnn::IWorkloadFactory</a> &amp;&#160;</td>
          <td class="paramname"><em>workloadFactory</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_i_backend_internal.xhtml#a693b40e6b94e958836aeb0410ca186bd">armnn::IBackendInternal::IMemoryManagerSharedPtr</a> &amp;&#160;</td>
          <td class="paramname"><em>memoryManager</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_i_tensor_handle_factory.xhtml">armnn::ITensorHandleFactory</a> &amp;&#160;</td>
          <td class="paramname"><em>tensorHandleFactory</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a7ba8a46b4b43fd967423d3dffc6c7f33"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a7ba8a46b4b43fd967423d3dffc6c7f33">&#9670;&nbsp;</a></span>ArgMinWidthTest()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="struct_layer_test_result.xhtml">LayerTestResult</a>&lt;int32_t, 3&gt; ArgMinWidthTest </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classarmnn_1_1_i_workload_factory.xhtml">armnn::IWorkloadFactory</a> &amp;&#160;</td>
          <td class="paramname"><em>workloadFactory</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_i_backend_internal.xhtml#a693b40e6b94e958836aeb0410ca186bd">armnn::IBackendInternal::IMemoryManagerSharedPtr</a> &amp;&#160;</td>
          <td class="paramname"><em>memoryManager</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_i_tensor_handle_factory.xhtml">armnn::ITensorHandleFactory</a> &amp;&#160;</td>
          <td class="paramname"><em>tensorHandleFactory</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_arg_min_max_test_impl_8cpp_source.xhtml#l00230">230</a> of file <a class="el" href="_arg_min_max_test_impl_8cpp_source.xhtml">ArgMinMaxTestImpl.cpp</a>.</p>

<p class="reference">References <a class="el" href="namespacearmnn.xhtml#ae7e8cbf71db6a490789ca6dcaa8deeaea78d811e98514cd165dda532286610fd2">armnn::Min</a>, <a class="el" href="_tensor_8cpp_source.xhtml#l00489">TensorInfo::SetQuantizationOffset()</a>, <a class="el" href="_tensor_8cpp_source.xhtml#l00473">TensorInfo::SetQuantizationScale()</a>, and <a class="el" href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6accedffbc6e5308e33d3843e8bdc0dad7">armnn::Signed32</a>.</p>
<div class="fragment"><div class="line"><a name="l00234"></a><span class="lineno">  234</span>&#160;{</div><div class="line"><a name="l00235"></a><span class="lineno">  235</span>&#160;    <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_shape.xhtml">armnn::TensorShape</a> inputShape{ 1, 3, 2, 4};</div><div class="line"><a name="l00236"></a><span class="lineno">  236</span>&#160;    <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_shape.xhtml">armnn::TensorShape</a> outputShape{ 1, 3, 2 };</div><div class="line"><a name="l00237"></a><span class="lineno">  237</span>&#160;</div><div class="line"><a name="l00238"></a><span class="lineno">  238</span>&#160;    <a class="code" href="classarmnn_1_1_tensor_info.xhtml">armnn::TensorInfo</a> inputTensorInfo(inputShape, ArmnnType);</div><div class="line"><a name="l00239"></a><span class="lineno">  239</span>&#160;    <a class="code" href="classarmnn_1_1_tensor_info.xhtml">armnn::TensorInfo</a> outputTensorInfo(outputShape, <a class="code" href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6accedffbc6e5308e33d3843e8bdc0dad7">armnn::DataType::Signed32</a>);</div><div class="line"><a name="l00240"></a><span class="lineno">  240</span>&#160;</div><div class="line"><a name="l00241"></a><span class="lineno">  241</span>&#160;    <span class="keywordflow">if</span> (armnn::IsQuantizedType&lt;T&gt;())</div><div class="line"><a name="l00242"></a><span class="lineno">  242</span>&#160;    {</div><div class="line"><a name="l00243"></a><span class="lineno">  243</span>&#160;        inputTensorInfo.SetQuantizationScale(1.0f);</div><div class="line"><a name="l00244"></a><span class="lineno">  244</span>&#160;        inputTensorInfo.SetQuantizationOffset(0);</div><div class="line"><a name="l00245"></a><span class="lineno">  245</span>&#160;    }</div><div class="line"><a name="l00246"></a><span class="lineno">  246</span>&#160;</div><div class="line"><a name="l00247"></a><span class="lineno">  247</span>&#160;    std::vector&lt;float&gt; inputValues({  1.0f,   2.0f,   3.0f,   4.0f,</div><div class="line"><a name="l00248"></a><span class="lineno">  248</span>&#160;                                      5.0f,   6.0f,   7.0f,   8.0f,</div><div class="line"><a name="l00249"></a><span class="lineno">  249</span>&#160;</div><div class="line"><a name="l00250"></a><span class="lineno">  250</span>&#160;                                     10.0f,  20.0f,  30.0f,  40.0f,</div><div class="line"><a name="l00251"></a><span class="lineno">  251</span>&#160;                                     50.0f,  60.0f,  70.0f,  80.0f,</div><div class="line"><a name="l00252"></a><span class="lineno">  252</span>&#160;</div><div class="line"><a name="l00253"></a><span class="lineno">  253</span>&#160;                                    100.0f, 200.0f, 300.0f, 400.0f,</div><div class="line"><a name="l00254"></a><span class="lineno">  254</span>&#160;                                    500.0f, 600.0f, 700.0f, 800.0f });</div><div class="line"><a name="l00255"></a><span class="lineno">  255</span>&#160;    std::vector&lt;int32_t&gt; outputValues({ 0, 0,</div><div class="line"><a name="l00256"></a><span class="lineno">  256</span>&#160;                                        0, 0,</div><div class="line"><a name="l00257"></a><span class="lineno">  257</span>&#160;                                        0, 0 });</div><div class="line"><a name="l00258"></a><span class="lineno">  258</span>&#160;</div><div class="line"><a name="l00259"></a><span class="lineno">  259</span>&#160;    <span class="keywordflow">return</span> ArgMinMaxTestCommon&lt;ArmnnType&gt;(workloadFactory, memoryManager, tensorHandleFactory,</div><div class="line"><a name="l00260"></a><span class="lineno">  260</span>&#160;                                          <a class="code" href="namespacearmnn.xhtml#ae7e8cbf71db6a490789ca6dcaa8deeaea78d811e98514cd165dda532286610fd2">armnn::ArgMinMaxFunction::Min</a>,</div><div class="line"><a name="l00261"></a><span class="lineno">  261</span>&#160;                                          inputTensorInfo, outputTensorInfo,</div><div class="line"><a name="l00262"></a><span class="lineno">  262</span>&#160;                                          inputValues, outputValues, 3);</div><div class="line"><a name="l00263"></a><span class="lineno">  263</span>&#160;}</div><div class="ttc" id="classarmnn_1_1_tensor_info_xhtml"><div class="ttname"><a href="classarmnn_1_1_tensor_info.xhtml">armnn::TensorInfo</a></div><div class="ttdef"><b>Definition:</b> <a href="_tensor_8hpp_source.xhtml#l00152">Tensor.hpp:152</a></div></div>
<div class="ttc" id="namespacearmnn_xhtml_ad8ed01ff3ff33333d8e19db4d2818bb6accedffbc6e5308e33d3843e8bdc0dad7"><div class="ttname"><a href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6accedffbc6e5308e33d3843e8bdc0dad7">armnn::DataType::Signed32</a></div></div>
<div class="ttc" id="classarmnn_1_1_tensor_shape_xhtml"><div class="ttname"><a href="classarmnn_1_1_tensor_shape.xhtml">armnn::TensorShape</a></div><div class="ttdef"><b>Definition:</b> <a href="_tensor_8hpp_source.xhtml#l00020">Tensor.hpp:20</a></div></div>
<div class="ttc" id="namespacearmnn_xhtml_ae7e8cbf71db6a490789ca6dcaa8deeaea78d811e98514cd165dda532286610fd2"><div class="ttname"><a href="namespacearmnn.xhtml#ae7e8cbf71db6a490789ca6dcaa8deeaea78d811e98514cd165dda532286610fd2">armnn::ArgMinMaxFunction::Min</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="a7a230909328d99c6627b5d550a1bec41"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a7a230909328d99c6627b5d550a1bec41">&#9670;&nbsp;</a></span>ArgMinWidthTest< armnn::DataType::Float16 >()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">template <a class="el" href="struct_layer_test_result.xhtml">LayerTestResult</a>&lt;int32_t, 3&gt; <a class="el" href="_arg_min_max_test_impl_8hpp.xhtml#a7ba8a46b4b43fd967423d3dffc6c7f33">ArgMinWidthTest</a>&lt; <a class="el" href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a26e6ed77470c6f2f830ecf874e6c0d55">armnn::DataType::Float16</a> &gt; </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classarmnn_1_1_i_workload_factory.xhtml">armnn::IWorkloadFactory</a> &amp;&#160;</td>
          <td class="paramname"><em>workloadFactory</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_i_backend_internal.xhtml#a693b40e6b94e958836aeb0410ca186bd">armnn::IBackendInternal::IMemoryManagerSharedPtr</a> &amp;&#160;</td>
          <td class="paramname"><em>memoryManager</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_i_tensor_handle_factory.xhtml">armnn::ITensorHandleFactory</a> &amp;&#160;</td>
          <td class="paramname"><em>tensorHandleFactory</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="ac96f5e864b3898eab2e9844836199464"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ac96f5e864b3898eab2e9844836199464">&#9670;&nbsp;</a></span>ArgMinWidthTest< armnn::DataType::Float32 >()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">template <a class="el" href="struct_layer_test_result.xhtml">LayerTestResult</a>&lt;int32_t, 3&gt; <a class="el" href="_arg_min_max_test_impl_8hpp.xhtml#a7ba8a46b4b43fd967423d3dffc6c7f33">ArgMinWidthTest</a>&lt; <a class="el" href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a166495adc0d0f53bee6baecc577f5204">armnn::DataType::Float32</a> &gt; </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classarmnn_1_1_i_workload_factory.xhtml">armnn::IWorkloadFactory</a> &amp;&#160;</td>
          <td class="paramname"><em>workloadFactory</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_i_backend_internal.xhtml#a693b40e6b94e958836aeb0410ca186bd">armnn::IBackendInternal::IMemoryManagerSharedPtr</a> &amp;&#160;</td>
          <td class="paramname"><em>memoryManager</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_i_tensor_handle_factory.xhtml">armnn::ITensorHandleFactory</a> &amp;&#160;</td>
          <td class="paramname"><em>tensorHandleFactory</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a9e6b663698245a3f33ffec877738a74f"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a9e6b663698245a3f33ffec877738a74f">&#9670;&nbsp;</a></span>ArgMinWidthTest< armnn::DataType::QAsymmS8 >()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">template <a class="el" href="struct_layer_test_result.xhtml">LayerTestResult</a>&lt;int32_t, 3&gt; <a class="el" href="_arg_min_max_test_impl_8hpp.xhtml#a7ba8a46b4b43fd967423d3dffc6c7f33">ArgMinWidthTest</a>&lt; <a class="el" href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a9d02ea768c081d4bdb2b7cab0b3f510d">armnn::DataType::QAsymmS8</a> &gt; </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classarmnn_1_1_i_workload_factory.xhtml">armnn::IWorkloadFactory</a> &amp;&#160;</td>
          <td class="paramname"><em>workloadFactory</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_i_backend_internal.xhtml#a693b40e6b94e958836aeb0410ca186bd">armnn::IBackendInternal::IMemoryManagerSharedPtr</a> &amp;&#160;</td>
          <td class="paramname"><em>memoryManager</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_i_tensor_handle_factory.xhtml">armnn::ITensorHandleFactory</a> &amp;&#160;</td>
          <td class="paramname"><em>tensorHandleFactory</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a8abebb7c54764d2cc9ae1007b1c853f2"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a8abebb7c54764d2cc9ae1007b1c853f2">&#9670;&nbsp;</a></span>ArgMinWidthTest< armnn::DataType::QAsymmU8 >()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">template <a class="el" href="struct_layer_test_result.xhtml">LayerTestResult</a>&lt;int32_t, 3&gt; <a class="el" href="_arg_min_max_test_impl_8hpp.xhtml#a7ba8a46b4b43fd967423d3dffc6c7f33">ArgMinWidthTest</a>&lt; <a class="el" href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a0a3f57c876f5a230244c38e1453a8a6e">armnn::DataType::QAsymmU8</a> &gt; </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classarmnn_1_1_i_workload_factory.xhtml">armnn::IWorkloadFactory</a> &amp;&#160;</td>
          <td class="paramname"><em>workloadFactory</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_i_backend_internal.xhtml#a693b40e6b94e958836aeb0410ca186bd">armnn::IBackendInternal::IMemoryManagerSharedPtr</a> &amp;&#160;</td>
          <td class="paramname"><em>memoryManager</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_i_tensor_handle_factory.xhtml">armnn::ITensorHandleFactory</a> &amp;&#160;</td>
          <td class="paramname"><em>tensorHandleFactory</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a1948639e7af78c8c29b7caab64758b41"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a1948639e7af78c8c29b7caab64758b41">&#9670;&nbsp;</a></span>ArgMinWidthTest< armnn::DataType::Signed32 >()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">template <a class="el" href="struct_layer_test_result.xhtml">LayerTestResult</a>&lt;int32_t, 3&gt; <a class="el" href="_arg_min_max_test_impl_8hpp.xhtml#a7ba8a46b4b43fd967423d3dffc6c7f33">ArgMinWidthTest</a>&lt; <a class="el" href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6accedffbc6e5308e33d3843e8bdc0dad7">armnn::DataType::Signed32</a> &gt; </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classarmnn_1_1_i_workload_factory.xhtml">armnn::IWorkloadFactory</a> &amp;&#160;</td>
          <td class="paramname"><em>workloadFactory</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_i_backend_internal.xhtml#a693b40e6b94e958836aeb0410ca186bd">armnn::IBackendInternal::IMemoryManagerSharedPtr</a> &amp;&#160;</td>
          <td class="paramname"><em>memoryManager</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_i_tensor_handle_factory.xhtml">armnn::ITensorHandleFactory</a> &amp;&#160;</td>
          <td class="paramname"><em>tensorHandleFactory</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="dir_68267d1309a1af8e8297ef4c3efbcdba.xhtml">src</a></li><li class="navelem"><a class="el" href="dir_0f3cdec46afbc61a1ded8e1687c9c9a0.xhtml">backends</a></li><li class="navelem"><a class="el" href="dir_797a213d7d01b98ef12d53b0820ea64e.xhtml">backendsCommon</a></li><li class="navelem"><a class="el" href="dir_28bfe507f7e135bdae07c2a6b7f66696.xhtml">test</a></li><li class="navelem"><a class="el" href="dir_99a30439342d160875b21dac3498ad7f.xhtml">layerTests</a></li><li class="navelem"><a class="el" href="_arg_min_max_test_impl_8cpp.xhtml">ArgMinMaxTestImpl.cpp</a></li>
    <li class="footer">Generated on Tue May 24 2022 11:27:16 for ArmNN by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.13 </li>
  </ul>
</div>
</body>
</html>
