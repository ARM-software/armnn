<!-- Copyright (c) 2020 ARM Limited. -->
<!--                                 -->
<!-- SPDX-License-Identifier: MIT    -->
<!--                                 -->
<!-- HTML header for doxygen 1.8.13-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.13"/>
<meta name="robots" content="NOINDEX, NOFOLLOW" />
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>ArmNN: RangeTracker Class Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script><script type="text/javascript" src="http://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="stylesheet.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <img alt="ArmNN" src="Arm_NN_horizontal_blue.png" style="max-width: 10rem; margin-top: .5rem; margin-left 10px"/>
  <td style="padding-left: 0.5em;">
   <div id="projectname">
   &#160;<span id="projectnumber">22.08</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.13 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
$(document).ready(function(){initNavTree('classarmnn_1_1_range_tracker.xhtml','');});
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="summary">
<a href="#pub-types">Public Types</a> &#124;
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="classarmnn_1_1_range_tracker-members.xhtml">List of all members</a>  </div>
  <div class="headertitle">
<div class="title">RangeTracker Class Reference</div>  </div>
</div><!--header-->
<div class="contents">

<p><code>#include &lt;<a class="el" href="_range_tracker_8hpp_source.xhtml">RangeTracker.hpp</a>&gt;</code></p>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-types"></a>
Public Types</h2></td></tr>
<tr class="memitem:a997e96288bdb106c922202e3f33d5d7b"><td class="memItemLeft" align="right" valign="top">using&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_range_tracker.xhtml#a997e96288bdb106c922202e3f33d5d7b">MinMaxRange</a> = std::pair&lt; float, float &gt;</td></tr>
<tr class="separator:a997e96288bdb106c922202e3f33d5d7b"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:a507bae23f59e94b4161886ebe663cdf4"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classarmnn_1_1_range_tracker.xhtml#a997e96288bdb106c922202e3f33d5d7b">MinMaxRange</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_range_tracker.xhtml#a507bae23f59e94b4161886ebe663cdf4">GetRange</a> (<a class="el" href="_types_8hpp.xhtml#af22094b802160f09f7c89ad9eee10084">LayerGuid</a> guid, unsigned int idx) const</td></tr>
<tr class="memdesc:a507bae23f59e94b4161886ebe663cdf4"><td class="mdescLeft">&#160;</td><td class="mdescRight">Retrieve the Range for a particular output slot on a particular layer.  <a href="#a507bae23f59e94b4161886ebe663cdf4">More...</a><br /></td></tr>
<tr class="separator:a507bae23f59e94b4161886ebe663cdf4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2f058d459a4f21569be3266227f2f6e5"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_range_tracker.xhtml#a2f058d459a4f21569be3266227f2f6e5">SetRange</a> (const <a class="el" href="classarmnn_1_1_i_connectable_layer.xhtml">IConnectableLayer</a> *layer, unsigned int outputIdx, float min, float max)</td></tr>
<tr class="memdesc:a2f058d459a4f21569be3266227f2f6e5"><td class="mdescLeft">&#160;</td><td class="mdescRight">Set the range for an output slot on a layer.  <a href="#a2f058d459a4f21569be3266227f2f6e5">More...</a><br /></td></tr>
<tr class="separator:a2f058d459a4f21569be3266227f2f6e5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8e12342fc420701fbffd97025421575a"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_range_tracker.xhtml#a8e12342fc420701fbffd97025421575a">IsEmpty</a> () const</td></tr>
<tr class="memdesc:a8e12342fc420701fbffd97025421575a"><td class="mdescLeft">&#160;</td><td class="mdescRight">Query function to check that the <a class="el" href="classarmnn_1_1_range_tracker.xhtml">RangeTracker</a> is empty.  <a href="#a8e12342fc420701fbffd97025421575a">More...</a><br /></td></tr>
<tr class="separator:a8e12342fc420701fbffd97025421575a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a084c5aacd7e3bb07f2cfd5a8e9b0dd30"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_range_tracker.xhtml#a084c5aacd7e3bb07f2cfd5a8e9b0dd30">HasRanges</a> (<a class="el" href="_types_8hpp.xhtml#af22094b802160f09f7c89ad9eee10084">LayerGuid</a> guid) const</td></tr>
<tr class="memdesc:a084c5aacd7e3bb07f2cfd5a8e9b0dd30"><td class="mdescLeft">&#160;</td><td class="mdescRight">Query that there is an entry for a layer.  <a href="#a084c5aacd7e3bb07f2cfd5a8e9b0dd30">More...</a><br /></td></tr>
<tr class="separator:a084c5aacd7e3bb07f2cfd5a8e9b0dd30"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa55e27d7cc1569b82476e6b30cbd6c25"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_range_tracker.xhtml#aa55e27d7cc1569b82476e6b30cbd6c25">RefineMin</a> (<a class="el" href="_types_8hpp.xhtml#af22094b802160f09f7c89ad9eee10084">LayerGuid</a> guid, unsigned int slotIndex, float newMin)</td></tr>
<tr class="memdesc:aa55e27d7cc1569b82476e6b30cbd6c25"><td class="mdescLeft">&#160;</td><td class="mdescRight">Update min in <a class="el" href="classarmnn_1_1_range_tracker.xhtml">RangeTracker</a> with new_min if it is lower than current value.  <a href="#aa55e27d7cc1569b82476e6b30cbd6c25">More...</a><br /></td></tr>
<tr class="separator:aa55e27d7cc1569b82476e6b30cbd6c25"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae5a4c3257000f8a0b7392a0104775894"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_range_tracker.xhtml#ae5a4c3257000f8a0b7392a0104775894">RefineMax</a> (<a class="el" href="_types_8hpp.xhtml#af22094b802160f09f7c89ad9eee10084">LayerGuid</a> guid, unsigned int slotIndex, float newMax)</td></tr>
<tr class="memdesc:ae5a4c3257000f8a0b7392a0104775894"><td class="mdescLeft">&#160;</td><td class="mdescRight">Update max in <a class="el" href="classarmnn_1_1_range_tracker.xhtml">RangeTracker</a> with new_max if it is greater than current value.  <a href="#ae5a4c3257000f8a0b7392a0104775894">More...</a><br /></td></tr>
<tr class="separator:ae5a4c3257000f8a0b7392a0104775894"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4618337ffe8a3a2b5a6abf475454acdd"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_range_tracker.xhtml#a4618337ffe8a3a2b5a6abf475454acdd">ResetMinMax</a> (<a class="el" href="_types_8hpp.xhtml#af22094b802160f09f7c89ad9eee10084">LayerGuid</a> guid, unsigned int idx, float newMin, float newMax)</td></tr>
<tr class="memdesc:a4618337ffe8a3a2b5a6abf475454acdd"><td class="mdescLeft">&#160;</td><td class="mdescRight">Overwrite min and max in <a class="el" href="classarmnn_1_1_range_tracker.xhtml">RangeTracker</a> with newMin and newMax.  <a href="#a4618337ffe8a3a2b5a6abf475454acdd">More...</a><br /></td></tr>
<tr class="separator:a4618337ffe8a3a2b5a6abf475454acdd"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a372de693ad40b3f42839c8ec6ac845f4"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_range_tracker.xhtml#a372de693ad40b3f42839c8ec6ac845f4">Reset</a> ()</td></tr>
<tr class="separator:a372de693ad40b3f42839c8ec6ac845f4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad083f83ce01c5a1e16da1236442e2169"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_range_tracker.xhtml#ad083f83ce01c5a1e16da1236442e2169">SetDynamicMode</a> (bool flag)</td></tr>
<tr class="separator:ad083f83ce01c5a1e16da1236442e2169"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0c2d49bcd4d4340a31d71dd0e4ccefef"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_range_tracker.xhtml#a0c2d49bcd4d4340a31d71dd0e4ccefef">IsInDynamicMode</a> () const</td></tr>
<tr class="separator:a0c2d49bcd4d4340a31d71dd0e4ccefef"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock">
<p class="definition">Definition at line <a class="el" href="_range_tracker_8hpp_source.xhtml#l00019">19</a> of file <a class="el" href="_range_tracker_8hpp_source.xhtml">RangeTracker.hpp</a>.</p>
</div><h2 class="groupheader">Member Typedef Documentation</h2>
<a id="a997e96288bdb106c922202e3f33d5d7b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a997e96288bdb106c922202e3f33d5d7b">&#9670;&nbsp;</a></span>MinMaxRange</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">using <a class="el" href="classarmnn_1_1_range_tracker.xhtml#a997e96288bdb106c922202e3f33d5d7b">MinMaxRange</a> =  std::pair&lt;float, float&gt;</td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_range_tracker_8hpp_source.xhtml#l00022">22</a> of file <a class="el" href="_range_tracker_8hpp_source.xhtml">RangeTracker.hpp</a>.</p>

</div>
</div>
<h2 class="groupheader">Member Function Documentation</h2>
<a id="a507bae23f59e94b4161886ebe663cdf4"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a507bae23f59e94b4161886ebe663cdf4">&#9670;&nbsp;</a></span>GetRange()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarmnn_1_1_range_tracker.xhtml#a997e96288bdb106c922202e3f33d5d7b">RangeTracker::MinMaxRange</a> GetRange </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="_types_8hpp.xhtml#af22094b802160f09f7c89ad9eee10084">LayerGuid</a>&#160;</td>
          <td class="paramname"><em>guid</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">unsigned int&#160;</td>
          <td class="paramname"><em>idx</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Retrieve the Range for a particular output slot on a particular layer. </p>

<p class="definition">Definition at line <a class="el" href="_range_tracker_8cpp_source.xhtml#l00029">29</a> of file <a class="el" href="_range_tracker_8cpp_source.xhtml">RangeTracker.cpp</a>.</p>

<p class="reference">References <a class="el" href="_range_tracker_8hpp_source.xhtml#l00049">RangeTracker::IsInDynamicMode()</a>.</p>
<div class="fragment"><div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;{</div><div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;    <span class="keyword">auto</span> search = m_GuidToRangesMap.find(guid);</div><div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;    <span class="keywordflow">if</span> (search == m_GuidToRangesMap.end())</div><div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;    {</div><div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;        <span class="keywordflow">if</span> (<a class="code" href="classarmnn_1_1_range_tracker.xhtml#a0c2d49bcd4d4340a31d71dd0e4ccefef">IsInDynamicMode</a>())</div><div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;        {</div><div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;            <span class="keywordflow">throw</span> <a class="code" href="classarmnn_1_1_exception.xhtml">armnn::Exception</a>(<span class="stringliteral">&quot;Have no entry for layer GUID [&quot;</span> + std::to_string(guid) + <span class="stringliteral">&quot;]&quot;</span>);</div><div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;        }</div><div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;        <span class="keywordflow">else</span></div><div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;        {</div><div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;            <span class="keywordflow">return</span> DefaultRange();</div><div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;        }</div><div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;    }</div><div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;    <span class="keywordflow">return</span> search-&gt;second.at(idx);</div><div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;}</div><div class="ttc" id="classarmnn_1_1_range_tracker_xhtml_a0c2d49bcd4d4340a31d71dd0e4ccefef"><div class="ttname"><a href="classarmnn_1_1_range_tracker.xhtml#a0c2d49bcd4d4340a31d71dd0e4ccefef">armnn::RangeTracker::IsInDynamicMode</a></div><div class="ttdeci">bool IsInDynamicMode() const</div><div class="ttdef"><b>Definition:</b> <a href="_range_tracker_8hpp_source.xhtml#l00049">RangeTracker.hpp:49</a></div></div>
<div class="ttc" id="classarmnn_1_1_exception_xhtml"><div class="ttname"><a href="classarmnn_1_1_exception.xhtml">armnn::Exception</a></div><div class="ttdoc">Base class for all ArmNN exceptions so that users can filter to just those. </div><div class="ttdef"><b>Definition:</b> <a href="_exceptions_8hpp_source.xhtml#l00046">Exceptions.hpp:46</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="a084c5aacd7e3bb07f2cfd5a8e9b0dd30"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a084c5aacd7e3bb07f2cfd5a8e9b0dd30">&#9670;&nbsp;</a></span>HasRanges()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool HasRanges </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="_types_8hpp.xhtml#af22094b802160f09f7c89ad9eee10084">LayerGuid</a>&#160;</td>
          <td class="paramname"><em>guid</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Query that there is an entry for a layer. </p>

<p class="definition">Definition at line <a class="el" href="_range_tracker_8hpp_source.xhtml#l00034">34</a> of file <a class="el" href="_range_tracker_8hpp_source.xhtml">RangeTracker.hpp</a>.</p>

<p class="reference">References <a class="el" href="_range_tracker_8cpp_source.xhtml#l00055">RangeTracker::RefineMax()</a>, <a class="el" href="_range_tracker_8cpp_source.xhtml#l00046">RangeTracker::RefineMin()</a>, <a class="el" href="_range_tracker_8cpp_source.xhtml#l00074">RangeTracker::Reset()</a>, and <a class="el" href="_range_tracker_8cpp_source.xhtml#l00064">RangeTracker::ResetMinMax()</a>.</p>
<div class="fragment"><div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;{ <span class="keywordflow">return</span> m_GuidToRangesMap.find(guid) != m_GuidToRangesMap.end(); }</div></div><!-- fragment -->
</div>
</div>
<a id="a8e12342fc420701fbffd97025421575a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a8e12342fc420701fbffd97025421575a">&#9670;&nbsp;</a></span>IsEmpty()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool IsEmpty </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Query function to check that the <a class="el" href="classarmnn_1_1_range_tracker.xhtml">RangeTracker</a> is empty. </p>

<p class="definition">Definition at line <a class="el" href="_range_tracker_8hpp_source.xhtml#l00031">31</a> of file <a class="el" href="_range_tracker_8hpp_source.xhtml">RangeTracker.hpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;{ <span class="keywordflow">return</span> m_GuidToRangesMap.empty(); }</div></div><!-- fragment -->
</div>
</div>
<a id="a0c2d49bcd4d4340a31d71dd0e4ccefef"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a0c2d49bcd4d4340a31d71dd0e4ccefef">&#9670;&nbsp;</a></span>IsInDynamicMode()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool IsInDynamicMode </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_range_tracker_8hpp_source.xhtml#l00049">49</a> of file <a class="el" href="_range_tracker_8hpp_source.xhtml">RangeTracker.hpp</a>.</p>

<p class="reference">Referenced by <a class="el" href="_range_tracker_8cpp_source.xhtml#l00029">RangeTracker::GetRange()</a>.</p>
<div class="fragment"><div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;{ <span class="keywordflow">return</span> m_DynamicMode; }</div></div><!-- fragment -->
</div>
</div>
<a id="ae5a4c3257000f8a0b7392a0104775894"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ae5a4c3257000f8a0b7392a0104775894">&#9670;&nbsp;</a></span>RefineMax()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void RefineMax </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="_types_8hpp.xhtml#af22094b802160f09f7c89ad9eee10084">LayerGuid</a>&#160;</td>
          <td class="paramname"><em>guid</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">unsigned int&#160;</td>
          <td class="paramname"><em>slotIndex</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>newMax</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Update max in <a class="el" href="classarmnn_1_1_range_tracker.xhtml">RangeTracker</a> with new_max if it is greater than current value. </p>

<p class="definition">Definition at line <a class="el" href="_range_tracker_8cpp_source.xhtml#l00055">55</a> of file <a class="el" href="_range_tracker_8cpp_source.xhtml">RangeTracker.cpp</a>.</p>

<p class="reference">Referenced by <a class="el" href="_range_tracker_8hpp_source.xhtml#l00034">RangeTracker::HasRanges()</a>.</p>
<div class="fragment"><div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;{</div><div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;    <span class="keyword">auto</span>&amp; currentMax = m_GuidToRangesMap.find(guid)-&gt;second.at(idx).second;</div><div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;    <span class="keywordflow">if</span> (newMax &gt; currentMax)</div><div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;    {</div><div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;        currentMax = newMax;</div><div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;    }</div><div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;}</div></div><!-- fragment -->
</div>
</div>
<a id="aa55e27d7cc1569b82476e6b30cbd6c25"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aa55e27d7cc1569b82476e6b30cbd6c25">&#9670;&nbsp;</a></span>RefineMin()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void RefineMin </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="_types_8hpp.xhtml#af22094b802160f09f7c89ad9eee10084">LayerGuid</a>&#160;</td>
          <td class="paramname"><em>guid</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">unsigned int&#160;</td>
          <td class="paramname"><em>slotIndex</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>newMin</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Update min in <a class="el" href="classarmnn_1_1_range_tracker.xhtml">RangeTracker</a> with new_min if it is lower than current value. </p>

<p class="definition">Definition at line <a class="el" href="_range_tracker_8cpp_source.xhtml#l00046">46</a> of file <a class="el" href="_range_tracker_8cpp_source.xhtml">RangeTracker.cpp</a>.</p>

<p class="reference">Referenced by <a class="el" href="_range_tracker_8hpp_source.xhtml#l00034">RangeTracker::HasRanges()</a>.</p>
<div class="fragment"><div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;{</div><div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;    <span class="keyword">auto</span>&amp; currentMin = m_GuidToRangesMap.find(guid)-&gt;second.at(idx).first;</div><div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;    <span class="keywordflow">if</span> (newMin &lt; currentMin)</div><div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;    {</div><div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;        currentMin = newMin;</div><div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;    }</div><div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;}</div></div><!-- fragment -->
</div>
</div>
<a id="a372de693ad40b3f42839c8ec6ac845f4"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a372de693ad40b3f42839c8ec6ac845f4">&#9670;&nbsp;</a></span>Reset()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void Reset </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_range_tracker_8cpp_source.xhtml#l00074">74</a> of file <a class="el" href="_range_tracker_8cpp_source.xhtml">RangeTracker.cpp</a>.</p>

<p class="reference">Referenced by <a class="el" href="_range_tracker_8hpp_source.xhtml#l00034">RangeTracker::HasRanges()</a>.</p>
<div class="fragment"><div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;{</div><div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;    m_GuidToRangesMap.clear();</div><div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;}</div></div><!-- fragment -->
</div>
</div>
<a id="a4618337ffe8a3a2b5a6abf475454acdd"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a4618337ffe8a3a2b5a6abf475454acdd">&#9670;&nbsp;</a></span>ResetMinMax()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void ResetMinMax </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="_types_8hpp.xhtml#af22094b802160f09f7c89ad9eee10084">LayerGuid</a>&#160;</td>
          <td class="paramname"><em>guid</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">unsigned int&#160;</td>
          <td class="paramname"><em>idx</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>newMin</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>newMax</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Overwrite min and max in <a class="el" href="classarmnn_1_1_range_tracker.xhtml">RangeTracker</a> with newMin and newMax. </p>

<p class="definition">Definition at line <a class="el" href="_range_tracker_8cpp_source.xhtml#l00064">64</a> of file <a class="el" href="_range_tracker_8cpp_source.xhtml">RangeTracker.cpp</a>.</p>

<p class="reference">Referenced by <a class="el" href="_range_tracker_8hpp_source.xhtml#l00034">RangeTracker::HasRanges()</a>.</p>
<div class="fragment"><div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;{</div><div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;    <span class="keyword">auto</span> minMaxPair = m_GuidToRangesMap.find(guid);</div><div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;    <span class="keyword">auto</span>&amp; currentMin = minMaxPair-&gt;second.at(idx).first;</div><div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;    <span class="keyword">auto</span>&amp; currentMax = minMaxPair-&gt;second.at(idx).second;</div><div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;</div><div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;    currentMin = newMin;</div><div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;    currentMax = newMax;</div><div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;}</div></div><!-- fragment -->
</div>
</div>
<a id="ad083f83ce01c5a1e16da1236442e2169"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ad083f83ce01c5a1e16da1236442e2169">&#9670;&nbsp;</a></span>SetDynamicMode()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void SetDynamicMode </td>
          <td>(</td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>flag</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_range_tracker_8hpp_source.xhtml#l00047">47</a> of file <a class="el" href="_range_tracker_8hpp_source.xhtml">RangeTracker.hpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;{ m_DynamicMode = flag; }</div></div><!-- fragment -->
</div>
</div>
<a id="a2f058d459a4f21569be3266227f2f6e5"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a2f058d459a4f21569be3266227f2f6e5">&#9670;&nbsp;</a></span>SetRange()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void SetRange </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_i_connectable_layer.xhtml">IConnectableLayer</a> *&#160;</td>
          <td class="paramname"><em>layer</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">unsigned int&#160;</td>
          <td class="paramname"><em>outputIdx</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>min</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>max</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Set the range for an output slot on a layer. </p>

<p class="definition">Definition at line <a class="el" href="_range_tracker_8cpp_source.xhtml#l00012">12</a> of file <a class="el" href="_range_tracker_8cpp_source.xhtml">RangeTracker.cpp</a>.</p>

<p class="reference">References <a class="el" href="classarmnn_1_1_i_connectable_layer.xhtml#afb5e65c770f6cee222db8af7581541a6">IConnectableLayer::GetGuid()</a>, and <a class="el" href="classarmnn_1_1_i_connectable_layer.xhtml#ac2dac3b61c94de52093616be4ab17f8d">IConnectableLayer::GetNumOutputSlots()</a>.</p>
<div class="fragment"><div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;{</div><div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;    <span class="keyword">auto</span>&amp; ranges = m_GuidToRangesMap[layer-&gt;GetGuid()];</div><div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;</div><div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;    <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> numOfOutputSlots = layer-&gt;GetNumOutputSlots();</div><div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;    <span class="comment">// output layers are a special case</span></div><div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;    <span class="keywordflow">if</span> (numOfOutputSlots == 0)</div><div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;    {</div><div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;        ++numOfOutputSlots;</div><div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;    }</div><div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;    <span class="keywordflow">if</span> (ranges.size() &lt; numOfOutputSlots)</div><div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;    {</div><div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;        ranges.resize(numOfOutputSlots);</div><div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;    }</div><div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;    ranges[outputIdx] = std::make_pair(min, max);</div><div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;}</div></div><!-- fragment -->
</div>
</div>
<hr/>The documentation for this class was generated from the following files:<ul>
<li>src/armnn/<a class="el" href="_range_tracker_8hpp_source.xhtml">RangeTracker.hpp</a></li>
<li>src/armnn/<a class="el" href="_range_tracker_8cpp_source.xhtml">RangeTracker.cpp</a></li>
</ul>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="namespacearmnn.xhtml">armnn</a></li><li class="navelem"><a class="el" href="classarmnn_1_1_range_tracker.xhtml">RangeTracker</a></li>
    <li class="footer">Generated on Fri Aug 19 2022 14:38:41 for ArmNN by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.13 </li>
  </ul>
</div>
</body>
</html>
