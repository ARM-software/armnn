<!-- Copyright (c) 2020 ARM Limited. -->
<!--                                 -->
<!-- SPDX-License-Identifier: MIT    -->
<!--                                 -->
<!-- HTML header for doxygen 1.8.13-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.13"/>
<meta name="robots" content="NOINDEX, NOFOLLOW" />
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>ArmNN: tests/ImagePreprocessor.hpp Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script><script type="text/javascript" src="http://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="stylesheet.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <img alt="ArmNN" src="Arm_NN_horizontal_blue.png" style="max-width: 10rem; margin-top: .5rem; margin-left 10px"/>
  <td style="padding-left: 0.5em;">
   <div id="projectname">
   &#160;<span id="projectnumber">22.08</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.13 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
$(document).ready(function(){initNavTree('_image_preprocessor_8hpp_source.xhtml','');});
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="headertitle">
<div class="title">ImagePreprocessor.hpp</div>  </div>
</div><!--header-->
<div class="contents">
<a href="_image_preprocessor_8hpp.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="comment">//</span></div><div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="comment">// Copyright Â© 2017 Arm Ltd. All rights reserved.</span></div><div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="comment">// SPDX-License-Identifier: MIT</span></div><div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="comment">//</span></div><div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="preprocessor">#pragma once</span></div><div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;</div><div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_classifier_test_case_data_8hpp.xhtml">ClassifierTestCaseData.hpp</a>&quot;</span></div><div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;</div><div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="preprocessor">#include &lt;array&gt;</span></div><div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="preprocessor">#include &lt;string&gt;</span></div><div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;<span class="preprocessor">#include &lt;vector&gt;</span></div><div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;<span class="preprocessor">#include &lt;memory&gt;</span></div><div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;<span class="comment">///Tf requires RGB images, normalized in range [0, 1] and resized using Bilinear algorithm</span></div><div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;</div><div class="line"><a name="l00017"></a><span class="lineno"><a class="line" href="_image_preprocessor_8hpp.xhtml#aaf2811634c15da39d0966a444b780a55">   17</a></span>&#160;<span class="keyword">using</span> <a class="code" href="_image_preprocessor_8hpp.xhtml#aaf2811634c15da39d0966a444b780a55">ImageSet</a> = std::pair&lt;const std::string, unsigned int&gt;;</div><div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;</div><div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> TDataType&gt;</div><div class="line"><a name="l00020"></a><span class="lineno"><a class="line" href="class_image_preprocessor.xhtml">   20</a></span>&#160;<span class="keyword">class </span><a class="code" href="class_image_preprocessor.xhtml">ImagePreprocessor</a></div><div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;{</div><div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;<span class="keyword">public</span>:</div><div class="line"><a name="l00023"></a><span class="lineno"><a class="line" href="class_image_preprocessor.xhtml#af6964b8f91085191c5228d1a67db4523">   23</a></span>&#160;    <span class="keyword">using</span> <a class="code" href="class_image_preprocessor.xhtml#af6964b8f91085191c5228d1a67db4523">DataType</a> = TDataType;</div><div class="line"><a name="l00024"></a><span class="lineno"><a class="line" href="class_image_preprocessor.xhtml#a0b6d5426d97a60215cdcd609dee35cc9">   24</a></span>&#160;    <span class="keyword">using</span> <a class="code" href="class_classifier_test_case_data.xhtml">TTestCaseData</a> = <a class="code" href="class_classifier_test_case_data.xhtml">ClassifierTestCaseData&lt;DataType&gt;</a>;</div><div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;</div><div class="line"><a name="l00026"></a><span class="lineno"><a class="line" href="class_image_preprocessor.xhtml#a8b182988d497b07d1e06a1707b67897f">   26</a></span>&#160;    <span class="keyword">enum</span> <a class="code" href="class_image_preprocessor.xhtml#a8b182988d497b07d1e06a1707b67897f">DataFormat</a></div><div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;    {</div><div class="line"><a name="l00028"></a><span class="lineno"><a class="line" href="class_image_preprocessor.xhtml#a8b182988d497b07d1e06a1707b67897fa7442702e1d93df81504eb5e5d536c2fc">   28</a></span>&#160;        <a class="code" href="class_image_preprocessor.xhtml#a8b182988d497b07d1e06a1707b67897fa7442702e1d93df81504eb5e5d536c2fc">NHWC</a>,</div><div class="line"><a name="l00029"></a><span class="lineno"><a class="line" href="class_image_preprocessor.xhtml#a8b182988d497b07d1e06a1707b67897fa54d2c44e9fb4c89a3abd5088e04fdc48">   29</a></span>&#160;        <a class="code" href="class_image_preprocessor.xhtml#a8b182988d497b07d1e06a1707b67897fa54d2c44e9fb4c89a3abd5088e04fdc48">NCHW</a></div><div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;    };</div><div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;</div><div class="line"><a name="l00032"></a><span class="lineno"><a class="line" href="class_image_preprocessor.xhtml#a3d7f9eb381f95c181466db2172dfd775">   32</a></span>&#160;    <span class="keyword">explicit</span> <a class="code" href="class_image_preprocessor.xhtml#a3d7f9eb381f95c181466db2172dfd775">ImagePreprocessor</a>(<span class="keyword">const</span> std::string&amp; binaryFileDirectory,</div><div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;        <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> width,</div><div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;        <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> height,</div><div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;        <span class="keyword">const</span> std::vector&lt;ImageSet&gt;&amp; imageSet,</div><div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;        <span class="keywordtype">float</span> scale=255.0f,</div><div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;        <span class="keyword">const</span> std::array&lt;float, 3&gt; mean={{0, 0, 0}},</div><div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;        <span class="keyword">const</span> std::array&lt;float, 3&gt; stddev={{1, 1, 1}},</div><div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;        <a class="code" href="class_image_preprocessor.xhtml#a8b182988d497b07d1e06a1707b67897f">DataFormat</a> dataFormat=DataFormat::NHWC,</div><div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;        <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> batchSize=1)</div><div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;    : m_BinaryDirectory(binaryFileDirectory)</div><div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;    , m_Height(height)</div><div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;    , m_Width(width)</div><div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;    , m_BatchSize(batchSize)</div><div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;    , m_Scale(scale)</div><div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;    , m_ImageSet(imageSet)</div><div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;    , m_Mean(mean)</div><div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;    , m_Stddev(stddev)</div><div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;    , m_DataFormat(dataFormat)</div><div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;    {</div><div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;    }</div><div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;</div><div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;    std::unique_ptr&lt;TTestCaseData&gt; <a class="code" href="class_image_preprocessor.xhtml#ac2bd5628ca0535f9e8af78e65685d62f">GetTestCaseData</a>(<span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> testCaseId);</div><div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;</div><div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;<span class="keyword">private</span>:</div><div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;    <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> GetNumImageElements()<span class="keyword"> const </span>{ <span class="keywordflow">return</span> 3 * m_Width * m_Height; }</div><div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;    <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> GetNumImageBytes()<span class="keyword"> const </span>{ <span class="keywordflow">return</span> <span class="keyword">sizeof</span>(<a class="code" href="class_image_preprocessor.xhtml#af6964b8f91085191c5228d1a67db4523">DataType</a>) * GetNumImageElements(); }</div><div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;    <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> GetLabelAndResizedImageAsFloat(<span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> testCaseId,</div><div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;                                                std::vector&lt;float&gt; &amp; result);</div><div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;</div><div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;    std::string m_BinaryDirectory;</div><div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;    <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> m_Height;</div><div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;    <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> m_Width;</div><div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;    <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> m_BatchSize;</div><div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;    <span class="comment">// Quantization parameters</span></div><div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;    <span class="keywordtype">float</span> m_Scale;</div><div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;    <span class="keyword">const</span> std::vector&lt;ImageSet&gt; m_ImageSet;</div><div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;</div><div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;    <span class="keyword">const</span> std::array&lt;float, 3&gt; m_Mean;</div><div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;    <span class="keyword">const</span> std::array&lt;float, 3&gt; m_Stddev;</div><div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;</div><div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;    <a class="code" href="class_image_preprocessor.xhtml#a8b182988d497b07d1e06a1707b67897f">DataFormat</a> m_DataFormat;</div><div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;};</div><div class="ttc" id="class_image_preprocessor_xhtml_a8b182988d497b07d1e06a1707b67897fa54d2c44e9fb4c89a3abd5088e04fdc48"><div class="ttname"><a href="class_image_preprocessor.xhtml#a8b182988d497b07d1e06a1707b67897fa54d2c44e9fb4c89a3abd5088e04fdc48">ImagePreprocessor::NCHW</a></div><div class="ttdef"><b>Definition:</b> <a href="_image_preprocessor_8hpp_source.xhtml#l00029">ImagePreprocessor.hpp:29</a></div></div>
<div class="ttc" id="class_image_preprocessor_xhtml_ac2bd5628ca0535f9e8af78e65685d62f"><div class="ttname"><a href="class_image_preprocessor.xhtml#ac2bd5628ca0535f9e8af78e65685d62f">ImagePreprocessor::GetTestCaseData</a></div><div class="ttdeci">std::unique_ptr&lt; TTestCaseData &gt; GetTestCaseData(unsigned int testCaseId)</div></div>
<div class="ttc" id="class_classifier_test_case_data_xhtml"><div class="ttname"><a href="class_classifier_test_case_data.xhtml">ClassifierTestCaseData</a></div><div class="ttdef"><b>Definition:</b> <a href="_classifier_test_case_data_8hpp_source.xhtml#l00010">ClassifierTestCaseData.hpp:10</a></div></div>
<div class="ttc" id="_image_preprocessor_8hpp_xhtml_aaf2811634c15da39d0966a444b780a55"><div class="ttname"><a href="_image_preprocessor_8hpp.xhtml#aaf2811634c15da39d0966a444b780a55">ImageSet</a></div><div class="ttdeci">std::pair&lt; const std::string, unsigned int &gt; ImageSet</div><div class="ttdoc">Tf requires RGB images, normalized in range [0, 1] and resized using Bilinear algorithm. </div><div class="ttdef"><b>Definition:</b> <a href="_image_preprocessor_8hpp_source.xhtml#l00017">ImagePreprocessor.hpp:17</a></div></div>
<div class="ttc" id="class_image_preprocessor_xhtml_a8b182988d497b07d1e06a1707b67897fa7442702e1d93df81504eb5e5d536c2fc"><div class="ttname"><a href="class_image_preprocessor.xhtml#a8b182988d497b07d1e06a1707b67897fa7442702e1d93df81504eb5e5d536c2fc">ImagePreprocessor::NHWC</a></div><div class="ttdef"><b>Definition:</b> <a href="_image_preprocessor_8hpp_source.xhtml#l00028">ImagePreprocessor.hpp:28</a></div></div>
<div class="ttc" id="class_image_preprocessor_xhtml_a3d7f9eb381f95c181466db2172dfd775"><div class="ttname"><a href="class_image_preprocessor.xhtml#a3d7f9eb381f95c181466db2172dfd775">ImagePreprocessor::ImagePreprocessor</a></div><div class="ttdeci">ImagePreprocessor(const std::string &amp;binaryFileDirectory, unsigned int width, unsigned int height, const std::vector&lt; ImageSet &gt; &amp;imageSet, float scale=255.0f, const std::array&lt; float, 3 &gt; mean={{0, 0, 0}}, const std::array&lt; float, 3 &gt; stddev={{1, 1, 1}}, DataFormat dataFormat=DataFormat::NHWC, unsigned int batchSize=1)</div><div class="ttdef"><b>Definition:</b> <a href="_image_preprocessor_8hpp_source.xhtml#l00032">ImagePreprocessor.hpp:32</a></div></div>
<div class="ttc" id="_classifier_test_case_data_8hpp_xhtml"><div class="ttname"><a href="_classifier_test_case_data_8hpp.xhtml">ClassifierTestCaseData.hpp</a></div></div>
<div class="ttc" id="class_image_preprocessor_xhtml_af6964b8f91085191c5228d1a67db4523"><div class="ttname"><a href="class_image_preprocessor.xhtml#af6964b8f91085191c5228d1a67db4523">ImagePreprocessor::DataType</a></div><div class="ttdeci">TDataType DataType</div><div class="ttdef"><b>Definition:</b> <a href="_image_preprocessor_8hpp_source.xhtml#l00023">ImagePreprocessor.hpp:23</a></div></div>
<div class="ttc" id="class_image_preprocessor_xhtml"><div class="ttname"><a href="class_image_preprocessor.xhtml">ImagePreprocessor</a></div><div class="ttdef"><b>Definition:</b> <a href="_image_preprocessor_8hpp_source.xhtml#l00020">ImagePreprocessor.hpp:20</a></div></div>
<div class="ttc" id="class_image_preprocessor_xhtml_a8b182988d497b07d1e06a1707b67897f"><div class="ttname"><a href="class_image_preprocessor.xhtml#a8b182988d497b07d1e06a1707b67897f">ImagePreprocessor::DataFormat</a></div><div class="ttdeci">DataFormat</div><div class="ttdef"><b>Definition:</b> <a href="_image_preprocessor_8hpp_source.xhtml#l00026">ImagePreprocessor.hpp:26</a></div></div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="dir_59425e443f801f1f2fd8bbe4959a3ccf.xhtml">tests</a></li><li class="navelem"><a class="el" href="_image_preprocessor_8hpp.xhtml">ImagePreprocessor.hpp</a></li>
    <li class="footer">Generated on Fri Aug 19 2022 14:38:31 for ArmNN by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.13 </li>
  </ul>
</div>
</body>
</html>
