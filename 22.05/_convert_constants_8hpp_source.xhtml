<!-- Copyright (c) 2020 ARM Limited. -->
<!--                                 -->
<!-- SPDX-License-Identifier: MIT    -->
<!--                                 -->
<!-- HTML header for doxygen 1.8.13-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.13"/>
<meta name="robots" content="NOINDEX, NOFOLLOW" />
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>ArmNN: src/armnn/optimizations/ConvertConstants.hpp Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script><script type="text/javascript" src="http://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="stylesheet.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <img alt="ArmNN" src="Arm_NN_horizontal_blue.png" style="max-width: 10rem; margin-top: .5rem; margin-left 10px"/>
  <td style="padding-left: 0.5em;">
   <div id="projectname">
   &#160;<span id="projectnumber">22.05</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.13 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
$(document).ready(function(){initNavTree('_convert_constants_8hpp_source.xhtml','');});
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="headertitle">
<div class="title">ConvertConstants.hpp</div>  </div>
</div><!--header-->
<div class="contents">
<a href="_convert_constants_8hpp.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="comment">//</span></div><div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="comment">// Copyright Â© 2017 Arm Ltd. All rights reserved.</span></div><div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="comment">// SPDX-License-Identifier: MIT</span></div><div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="comment">//</span></div><div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;</div><div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="preprocessor">#pragma once</span></div><div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;</div><div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_optimization_8hpp.xhtml">Optimization.hpp</a>&quot;</span></div><div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;</div><div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="preprocessor">#include &lt;<a class="code" href="_floating_point_converter_8hpp.xhtml">armnnUtils/FloatingPointConverter.hpp</a>&gt;</span></div><div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;<span class="preprocessor">#include &lt;<a class="code" href="include_2armnn_2backends_2_tensor_handle_8hpp.xhtml">armnn/backends/TensorHandle.hpp</a>&gt;</span></div><div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;<span class="preprocessor">#include &lt;<a class="code" href="_ignore_unused_8hpp.xhtml">armnn/utility/IgnoreUnused.hpp</a>&gt;</span></div><div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;</div><div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;<span class="preprocessor">#include &lt;<a class="code" href="_b_float16_8hpp.xhtml">BFloat16.hpp</a>&gt;</span></div><div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;<span class="preprocessor">#include &lt;<a class="code" href="_half_8hpp.xhtml">Half.hpp</a>&gt;</span></div><div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;</div><div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;<span class="keyword">namespace </span><a class="code" href="namespacearmnn.xhtml">armnn</a></div><div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;{</div><div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;<span class="keyword">namespace </span>optimizations</div><div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;{</div><div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;</div><div class="line"><a name="l00022"></a><span class="lineno"><a class="line" href="structarmnn_1_1optimizations_1_1_b_float16_to_float32.xhtml">   22</a></span>&#160;<span class="keyword">struct </span><a class="code" href="structarmnn_1_1optimizations_1_1_b_float16_to_float32.xhtml">BFloat16ToFloat32</a></div><div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;{</div><div class="line"><a name="l00024"></a><span class="lineno"><a class="line" href="structarmnn_1_1optimizations_1_1_b_float16_to_float32.xhtml#a0617fdc915ac5caefaf3e4e78a7f28a2">   24</a></span>&#160;    <span class="keyword">static</span> <span class="keywordtype">void</span> <a class="code" href="structarmnn_1_1optimizations_1_1_b_float16_to_float32.xhtml#a0617fdc915ac5caefaf3e4e78a7f28a2">Func</a>(std::shared_ptr&lt;ConstTensorHandle&gt;&amp; handle)</div><div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;    {</div><div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;        <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a>&amp; <a class="code" href="namespacearmnn.xhtml#a4dc0adc6737b5944e7671bee71788407acaf9b6b99962bf5c2264824231d7a40c">info</a> = handle-&gt;GetTensorInfo();</div><div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;</div><div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;        <span class="keywordflow">if</span> (info.<a class="code" href="classarmnn_1_1_tensor_info.xhtml#aea909c7327109228ef618d459015def3">GetDataType</a>() == <a class="code" href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6acdb56b2d2f73c26480207524f2dbe0af">DataType::BFloat16</a>)</div><div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;        {</div><div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;            std::vector&lt;float&gt; newValues(info.<a class="code" href="classarmnn_1_1_tensor_info.xhtml#a8846406ac37fbd2204f0be16ee05d5b7">GetNumElements</a>());</div><div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;</div><div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;            <a class="code" href="classarmnn_utils_1_1_floating_point_converter.xhtml#af9e9df90cb6319b0406acf9a3bc27667">armnnUtils::FloatingPointConverter::ConvertBFloat16ToFloat32</a>(handle-&gt;GetConstTensor&lt;<a class="code" href="classarmnn_1_1_b_float16.xhtml">BFloat16</a>&gt;(),</div><div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;                                                                         info.<a class="code" href="classarmnn_1_1_tensor_info.xhtml#a8846406ac37fbd2204f0be16ee05d5b7">GetNumElements</a>(),</div><div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;                                                                         newValues.data());</div><div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;</div><div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;            <a class="code" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> newInfo(info.<a class="code" href="classarmnn_1_1_tensor_info.xhtml#a8b5d0f8a24e9d9238f412260a552acf8">GetShape</a>(), <a class="code" href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a166495adc0d0f53bee6baecc577f5204">DataType::Float32</a>, 0.0f, 0, <span class="keyword">true</span>);</div><div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;            <a class="code" href="classarmnn_1_1_const_tensor.xhtml">ConstTensor</a> newInput(newInfo, newValues);</div><div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;            handle.reset(<span class="keyword">new</span> <a class="code" href="classarmnn_1_1_scoped_tensor_handle.xhtml">ScopedTensorHandle</a>(newInput));</div><div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;        }</div><div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;    }</div><div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;};</div><div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;</div><div class="line"><a name="l00043"></a><span class="lineno"><a class="line" href="structarmnn_1_1optimizations_1_1_float16_to_float32.xhtml">   43</a></span>&#160;<span class="keyword">struct </span><a class="code" href="structarmnn_1_1optimizations_1_1_float16_to_float32.xhtml">Float16ToFloat32</a></div><div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;{</div><div class="line"><a name="l00045"></a><span class="lineno"><a class="line" href="structarmnn_1_1optimizations_1_1_float16_to_float32.xhtml#a0617fdc915ac5caefaf3e4e78a7f28a2">   45</a></span>&#160;    <span class="keyword">static</span> <span class="keywordtype">void</span> <a class="code" href="structarmnn_1_1optimizations_1_1_float16_to_float32.xhtml#a0617fdc915ac5caefaf3e4e78a7f28a2">Func</a>(std::shared_ptr&lt;ConstTensorHandle&gt;&amp; handle)</div><div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;    {</div><div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;        <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a>&amp; <a class="code" href="namespacearmnn.xhtml#a4dc0adc6737b5944e7671bee71788407acaf9b6b99962bf5c2264824231d7a40c">info</a> = handle-&gt;GetTensorInfo();</div><div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;</div><div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;        <span class="keywordflow">if</span> (info.<a class="code" href="classarmnn_1_1_tensor_info.xhtml#aea909c7327109228ef618d459015def3">GetDataType</a>() == <a class="code" href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a26e6ed77470c6f2f830ecf874e6c0d55">DataType::Float16</a>)</div><div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;        {</div><div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;            std::vector&lt;float&gt; newValues(info.<a class="code" href="classarmnn_1_1_tensor_info.xhtml#a8846406ac37fbd2204f0be16ee05d5b7">GetNumElements</a>());</div><div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;</div><div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;            <a class="code" href="classarmnn_utils_1_1_floating_point_converter.xhtml#ac1f1568f02163a68906a0030e0ba9871">armnnUtils::FloatingPointConverter::ConvertFloat16To32</a>(handle-&gt;GetConstTensor&lt;<a class="code" href="namespacearmnn.xhtml#a0f38fa92b2468d5378258a2b074c1a31">Half</a>&gt;(),</div><div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;                                                                   info.<a class="code" href="classarmnn_1_1_tensor_info.xhtml#a8846406ac37fbd2204f0be16ee05d5b7">GetNumElements</a>(),</div><div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;                                                                   newValues.data());</div><div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;</div><div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;            <a class="code" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> newInfo(info.<a class="code" href="classarmnn_1_1_tensor_info.xhtml#a8b5d0f8a24e9d9238f412260a552acf8">GetShape</a>(), <a class="code" href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a166495adc0d0f53bee6baecc577f5204">DataType::Float32</a>, 0.0f, 0, <span class="keyword">true</span>);</div><div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;            <a class="code" href="classarmnn_1_1_const_tensor.xhtml">ConstTensor</a> newInput(newInfo, newValues);</div><div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;            handle.reset(<span class="keyword">new</span> <a class="code" href="classarmnn_1_1_scoped_tensor_handle.xhtml">ScopedTensorHandle</a>(newInput));</div><div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;        }</div><div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;    }</div><div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;};</div><div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;</div><div class="line"><a name="l00064"></a><span class="lineno"><a class="line" href="structarmnn_1_1optimizations_1_1_float32_to_b_float16.xhtml">   64</a></span>&#160;<span class="keyword">struct </span><a class="code" href="structarmnn_1_1optimizations_1_1_float32_to_b_float16.xhtml">Float32ToBFloat16</a></div><div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;{</div><div class="line"><a name="l00066"></a><span class="lineno"><a class="line" href="structarmnn_1_1optimizations_1_1_float32_to_b_float16.xhtml#a0617fdc915ac5caefaf3e4e78a7f28a2">   66</a></span>&#160;    <span class="keyword">static</span> <span class="keywordtype">void</span> <a class="code" href="structarmnn_1_1optimizations_1_1_float32_to_b_float16.xhtml#a0617fdc915ac5caefaf3e4e78a7f28a2">Func</a>(std::shared_ptr&lt;ConstTensorHandle&gt;&amp; handle)</div><div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;    {</div><div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;        <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a>&amp; <a class="code" href="namespacearmnn.xhtml#a4dc0adc6737b5944e7671bee71788407acaf9b6b99962bf5c2264824231d7a40c">info</a> = handle-&gt;GetTensorInfo();</div><div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;</div><div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;        <span class="keywordflow">if</span> (info.<a class="code" href="classarmnn_1_1_tensor_info.xhtml#aea909c7327109228ef618d459015def3">GetDataType</a>() == <a class="code" href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a166495adc0d0f53bee6baecc577f5204">DataType::Float32</a>)</div><div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;        {</div><div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;            std::vector&lt;BFloat16&gt; newValues(info.<a class="code" href="classarmnn_1_1_tensor_info.xhtml#a8846406ac37fbd2204f0be16ee05d5b7">GetNumElements</a>());</div><div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;</div><div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;            <a class="code" href="classarmnn_utils_1_1_floating_point_converter.xhtml#ac7add3b3d40fbaab5e514c756a953d78">armnnUtils::FloatingPointConverter::ConvertFloat32ToBFloat16</a>(handle-&gt;GetConstTensor&lt;<span class="keywordtype">float</span>&gt;(),</div><div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;                                                                         info.<a class="code" href="classarmnn_1_1_tensor_info.xhtml#a8846406ac37fbd2204f0be16ee05d5b7">GetNumElements</a>(),</div><div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;                                                                         newValues.data());</div><div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;</div><div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;            <a class="code" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> newInfo(info.<a class="code" href="classarmnn_1_1_tensor_info.xhtml#a8b5d0f8a24e9d9238f412260a552acf8">GetShape</a>(), <a class="code" href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6acdb56b2d2f73c26480207524f2dbe0af">DataType::BFloat16</a>, 0.0f, 0, <span class="keyword">true</span>);</div><div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;            <a class="code" href="classarmnn_1_1_const_tensor.xhtml">ConstTensor</a> newInput(newInfo, newValues);</div><div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;            handle.reset(<span class="keyword">new</span> <a class="code" href="classarmnn_1_1_scoped_tensor_handle.xhtml">ScopedTensorHandle</a>(newInput));</div><div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;        }</div><div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;    }</div><div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;};</div><div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;</div><div class="line"><a name="l00085"></a><span class="lineno"><a class="line" href="structarmnn_1_1optimizations_1_1_float32_to_float16.xhtml">   85</a></span>&#160;<span class="keyword">struct </span><a class="code" href="structarmnn_1_1optimizations_1_1_float32_to_float16.xhtml">Float32ToFloat16</a></div><div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;{</div><div class="line"><a name="l00087"></a><span class="lineno"><a class="line" href="structarmnn_1_1optimizations_1_1_float32_to_float16.xhtml#a0617fdc915ac5caefaf3e4e78a7f28a2">   87</a></span>&#160;    <span class="keyword">static</span> <span class="keywordtype">void</span> <a class="code" href="structarmnn_1_1optimizations_1_1_float32_to_float16.xhtml#a0617fdc915ac5caefaf3e4e78a7f28a2">Func</a>(std::shared_ptr&lt;ConstTensorHandle&gt;&amp; handle)</div><div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;    {</div><div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;        <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a>&amp; <a class="code" href="namespacearmnn.xhtml#a4dc0adc6737b5944e7671bee71788407acaf9b6b99962bf5c2264824231d7a40c">info</a> = handle-&gt;GetTensorInfo();</div><div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;</div><div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;        <span class="keywordflow">if</span> (info.<a class="code" href="classarmnn_1_1_tensor_info.xhtml#aea909c7327109228ef618d459015def3">GetDataType</a>() == <a class="code" href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a166495adc0d0f53bee6baecc577f5204">DataType::Float32</a>)</div><div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;        {</div><div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;            std::vector&lt;Half&gt; newValues(info.<a class="code" href="classarmnn_1_1_tensor_info.xhtml#a8846406ac37fbd2204f0be16ee05d5b7">GetNumElements</a>());</div><div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;</div><div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;            <a class="code" href="classarmnn_utils_1_1_floating_point_converter.xhtml#af0fdbfb53596052d571cb73899f9da2b">armnnUtils::FloatingPointConverter::ConvertFloat32To16</a>(handle-&gt;GetConstTensor&lt;<span class="keywordtype">float</span>&gt;(),</div><div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;                                                                   info.<a class="code" href="classarmnn_1_1_tensor_info.xhtml#a8846406ac37fbd2204f0be16ee05d5b7">GetNumElements</a>(),</div><div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;                                                                   newValues.data());</div><div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;</div><div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;            <a class="code" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> newInfo(info.<a class="code" href="classarmnn_1_1_tensor_info.xhtml#a8b5d0f8a24e9d9238f412260a552acf8">GetShape</a>(), <a class="code" href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a26e6ed77470c6f2f830ecf874e6c0d55">DataType::Float16</a>, 0.0f, 0, <span class="keyword">true</span>);</div><div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;            <a class="code" href="classarmnn_1_1_const_tensor.xhtml">ConstTensor</a> newInput(newInfo, newValues);</div><div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;            handle.reset(<span class="keyword">new</span> <a class="code" href="classarmnn_1_1_scoped_tensor_handle.xhtml">ScopedTensorHandle</a>(newInput));</div><div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;        }</div><div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;    }</div><div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;};</div><div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;</div><div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;<span class="keyword">template</span>&lt;<span class="keyword">typename</span> Converter, <span class="keyword">typename</span> Predicate&gt;</div><div class="line"><a name="l00107"></a><span class="lineno"><a class="line" href="classarmnn_1_1optimizations_1_1_convert_constants.xhtml">  107</a></span>&#160;<span class="keyword">class </span><a class="code" href="classarmnn_1_1optimizations_1_1_convert_constants.xhtml">ConvertConstants</a> : <span class="keyword">public</span> <a class="code" href="classarmnn_1_1_optimization.xhtml">Optimization</a></div><div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;{</div><div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;<span class="keyword">public</span>:</div><div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;    <a class="code" href="classarmnn_1_1optimizations_1_1_convert_constants.xhtml">ConvertConstants</a>() = <span class="keywordflow">default</span>;</div><div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;    <a class="code" href="classarmnn_1_1optimizations_1_1_convert_constants.xhtml">ConvertConstants</a>(<span class="keyword">const</span> <a class="code" href="classarmnn_1_1optimizations_1_1_convert_constants.xhtml">ConvertConstants</a>&amp;) = <span class="keywordflow">default</span>;</div><div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;    <span class="keyword">virtual</span> ~<a class="code" href="classarmnn_1_1optimizations_1_1_convert_constants.xhtml">ConvertConstants</a>() = <span class="keywordflow">default</span>;</div><div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;</div><div class="line"><a name="l00114"></a><span class="lineno"><a class="line" href="classarmnn_1_1optimizations_1_1_convert_constants.xhtml#a47831303c57efc1f46d26934a3d773fb">  114</a></span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classarmnn_1_1optimizations_1_1_convert_constants.xhtml#a47831303c57efc1f46d26934a3d773fb">Run</a>(<a class="code" href="classarmnn_1_1_graph.xhtml">Graph</a>&amp; graph, <a class="code" href="classarmnn_1_1_layer.xhtml">Layer</a>&amp; layer)<span class="keyword"> const override</span></div><div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;<span class="keyword">    </span>{</div><div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;        <a class="code" href="namespacearmnn.xhtml#a44affeeb090c3c6a3062830562672e84">IgnoreUnused</a>(graph);</div><div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;        <span class="keywordflow">if</span> (Predicate::Test(layer))</div><div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;        {</div><div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;            layer.<a class="code" href="classarmnn_1_1_layer.xhtml#a386acff5f8430245239ce58d00ba7576">OperateOnConstantTensors</a>(Converter::Func);</div><div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;        }</div><div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;    }</div><div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;<span class="keyword">protected</span>:</div><div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;};</div><div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;</div><div class="line"><a name="l00125"></a><span class="lineno"><a class="line" href="structarmnn_1_1optimizations_1_1_is_float32_layer.xhtml">  125</a></span>&#160;<span class="keyword">struct </span><a class="code" href="structarmnn_1_1optimizations_1_1_is_float32_layer.xhtml">IsFloat32Layer</a></div><div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;{</div><div class="line"><a name="l00127"></a><span class="lineno"><a class="line" href="structarmnn_1_1optimizations_1_1_is_float32_layer.xhtml#a4d870e13875a9a0a1cf09ba349904350">  127</a></span>&#160;    <span class="keyword">static</span> <span class="keywordtype">bool</span> <a class="code" href="structarmnn_1_1optimizations_1_1_is_float32_layer.xhtml#a4d870e13875a9a0a1cf09ba349904350">Test</a>(<span class="keyword">const</span> <a class="code" href="classarmnn_1_1_layer.xhtml">Layer</a>&amp; layer)</div><div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;    {</div><div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;        <span class="keywordflow">return</span> layer.<a class="code" href="classarmnn_1_1_layer.xhtml#aea909c7327109228ef618d459015def3">GetDataType</a>() == <a class="code" href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a166495adc0d0f53bee6baecc577f5204">DataType::Float32</a>;</div><div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;    }</div><div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;};</div><div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;</div><div class="line"><a name="l00133"></a><span class="lineno"><a class="line" href="structarmnn_1_1optimizations_1_1_is_float16_layer.xhtml">  133</a></span>&#160;<span class="keyword">struct </span><a class="code" href="structarmnn_1_1optimizations_1_1_is_float16_layer.xhtml">IsFloat16Layer</a></div><div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;{</div><div class="line"><a name="l00135"></a><span class="lineno"><a class="line" href="structarmnn_1_1optimizations_1_1_is_float16_layer.xhtml#a4d870e13875a9a0a1cf09ba349904350">  135</a></span>&#160;    <span class="keyword">static</span> <span class="keywordtype">bool</span> <a class="code" href="structarmnn_1_1optimizations_1_1_is_float16_layer.xhtml#a4d870e13875a9a0a1cf09ba349904350">Test</a>(<span class="keyword">const</span> <a class="code" href="classarmnn_1_1_layer.xhtml">Layer</a>&amp; layer)</div><div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;    {</div><div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;        <span class="keywordflow">return</span> layer.<a class="code" href="classarmnn_1_1_layer.xhtml#aea909c7327109228ef618d459015def3">GetDataType</a>() == <a class="code" href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a26e6ed77470c6f2f830ecf874e6c0d55">DataType::Float16</a>;</div><div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;    }</div><div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;};</div><div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;</div><div class="line"><a name="l00141"></a><span class="lineno"><a class="line" href="structarmnn_1_1optimizations_1_1_is_b_float16_layer.xhtml">  141</a></span>&#160;<span class="keyword">struct </span><a class="code" href="structarmnn_1_1optimizations_1_1_is_b_float16_layer.xhtml">IsBFloat16Layer</a></div><div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;{</div><div class="line"><a name="l00143"></a><span class="lineno"><a class="line" href="structarmnn_1_1optimizations_1_1_is_b_float16_layer.xhtml#a4d870e13875a9a0a1cf09ba349904350">  143</a></span>&#160;    <span class="keyword">static</span> <span class="keywordtype">bool</span> <a class="code" href="structarmnn_1_1optimizations_1_1_is_b_float16_layer.xhtml#a4d870e13875a9a0a1cf09ba349904350">Test</a>(<span class="keyword">const</span> <a class="code" href="classarmnn_1_1_layer.xhtml">Layer</a>&amp; layer)</div><div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;    {</div><div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;        <span class="keywordflow">return</span> layer.<a class="code" href="classarmnn_1_1_layer.xhtml#aea909c7327109228ef618d459015def3">GetDataType</a>() == <a class="code" href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6acdb56b2d2f73c26480207524f2dbe0af">DataType::BFloat16</a>;</div><div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;    }</div><div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;};</div><div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;</div><div class="line"><a name="l00149"></a><span class="lineno"><a class="line" href="namespacearmnn_1_1optimizations.xhtml#ae8c1ba6bb2208ba3a0e17ad9ba5791ad">  149</a></span>&#160;<span class="keyword">using</span> <a class="code" href="classarmnn_1_1optimizations_1_1_convert_constants.xhtml">ConvertConstantsBFloatToFloat</a> = <a class="code" href="classarmnn_1_1optimizations_1_1_convert_constants.xhtml">ConvertConstants&lt;BFloat16ToFloat32, IsFloat32Layer&gt;</a>;</div><div class="line"><a name="l00150"></a><span class="lineno"><a class="line" href="namespacearmnn_1_1optimizations.xhtml#aee1a3b292f726335f0a3998b51101aef">  150</a></span>&#160;<span class="keyword">using</span> <a class="code" href="classarmnn_1_1optimizations_1_1_convert_constants.xhtml">ConvertConstantsFloatToBFloat</a> = <a class="code" href="classarmnn_1_1optimizations_1_1_convert_constants.xhtml">ConvertConstants&lt;Float32ToBFloat16, IsBFloat16Layer&gt;</a>;</div><div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;</div><div class="line"><a name="l00152"></a><span class="lineno"><a class="line" href="namespacearmnn_1_1optimizations.xhtml#a06cac66872538895dd6b59cdf39173d2">  152</a></span>&#160;<span class="keyword">using</span> <a class="code" href="classarmnn_1_1optimizations_1_1_convert_constants.xhtml">ConvertConstantsHalfToFloat</a> = <a class="code" href="classarmnn_1_1optimizations_1_1_convert_constants.xhtml">ConvertConstants&lt;Float16ToFloat32, IsFloat32Layer&gt;</a>;</div><div class="line"><a name="l00153"></a><span class="lineno"><a class="line" href="namespacearmnn_1_1optimizations.xhtml#a226cef3d775179e25ee35d231f4e8fae">  153</a></span>&#160;<span class="keyword">using</span> <a class="code" href="classarmnn_1_1optimizations_1_1_convert_constants.xhtml">ConvertConstantsFloatToHalf</a> = <a class="code" href="classarmnn_1_1optimizations_1_1_convert_constants.xhtml">ConvertConstants&lt;Float32ToFloat16, IsFloat16Layer&gt;</a>;</div><div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;</div><div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;} <span class="comment">//namespace optimizations</span></div><div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;} <span class="comment">//namespace armnn</span></div><div class="ttc" id="classarmnn_1_1optimizations_1_1_convert_constants_xhtml"><div class="ttname"><a href="classarmnn_1_1optimizations_1_1_convert_constants.xhtml">armnn::optimizations::ConvertConstants</a></div><div class="ttdef"><b>Definition:</b> <a href="_convert_constants_8hpp_source.xhtml#l00107">ConvertConstants.hpp:107</a></div></div>
<div class="ttc" id="_ignore_unused_8hpp_xhtml"><div class="ttname"><a href="_ignore_unused_8hpp.xhtml">IgnoreUnused.hpp</a></div></div>
<div class="ttc" id="structarmnn_1_1optimizations_1_1_is_float32_layer_xhtml_a4d870e13875a9a0a1cf09ba349904350"><div class="ttname"><a href="structarmnn_1_1optimizations_1_1_is_float32_layer.xhtml#a4d870e13875a9a0a1cf09ba349904350">armnn::optimizations::IsFloat32Layer::Test</a></div><div class="ttdeci">static bool Test(const Layer &amp;layer)</div><div class="ttdef"><b>Definition:</b> <a href="_convert_constants_8hpp_source.xhtml#l00127">ConvertConstants.hpp:127</a></div></div>
<div class="ttc" id="structarmnn_1_1optimizations_1_1_is_float32_layer_xhtml"><div class="ttname"><a href="structarmnn_1_1optimizations_1_1_is_float32_layer.xhtml">armnn::optimizations::IsFloat32Layer</a></div><div class="ttdef"><b>Definition:</b> <a href="_convert_constants_8hpp_source.xhtml#l00125">ConvertConstants.hpp:125</a></div></div>
<div class="ttc" id="classarmnn_1_1_tensor_info_xhtml_a8b5d0f8a24e9d9238f412260a552acf8"><div class="ttname"><a href="classarmnn_1_1_tensor_info.xhtml#a8b5d0f8a24e9d9238f412260a552acf8">armnn::TensorInfo::GetShape</a></div><div class="ttdeci">const TensorShape &amp; GetShape() const</div><div class="ttdef"><b>Definition:</b> <a href="_tensor_8hpp_source.xhtml#l00191">Tensor.hpp:191</a></div></div>
<div class="ttc" id="structarmnn_1_1optimizations_1_1_float32_to_b_float16_xhtml_a0617fdc915ac5caefaf3e4e78a7f28a2"><div class="ttname"><a href="structarmnn_1_1optimizations_1_1_float32_to_b_float16.xhtml#a0617fdc915ac5caefaf3e4e78a7f28a2">armnn::optimizations::Float32ToBFloat16::Func</a></div><div class="ttdeci">static void Func(std::shared_ptr&lt; ConstTensorHandle &gt; &amp;handle)</div><div class="ttdef"><b>Definition:</b> <a href="_convert_constants_8hpp_source.xhtml#l00066">ConvertConstants.hpp:66</a></div></div>
<div class="ttc" id="_floating_point_converter_8hpp_xhtml"><div class="ttname"><a href="_floating_point_converter_8hpp.xhtml">FloatingPointConverter.hpp</a></div></div>
<div class="ttc" id="classarmnn_1_1_tensor_info_xhtml"><div class="ttname"><a href="classarmnn_1_1_tensor_info.xhtml">armnn::TensorInfo</a></div><div class="ttdef"><b>Definition:</b> <a href="_tensor_8hpp_source.xhtml#l00152">Tensor.hpp:152</a></div></div>
<div class="ttc" id="structarmnn_1_1optimizations_1_1_is_float16_layer_xhtml_a4d870e13875a9a0a1cf09ba349904350"><div class="ttname"><a href="structarmnn_1_1optimizations_1_1_is_float16_layer.xhtml#a4d870e13875a9a0a1cf09ba349904350">armnn::optimizations::IsFloat16Layer::Test</a></div><div class="ttdeci">static bool Test(const Layer &amp;layer)</div><div class="ttdef"><b>Definition:</b> <a href="_convert_constants_8hpp_source.xhtml#l00135">ConvertConstants.hpp:135</a></div></div>
<div class="ttc" id="classarmnn_utils_1_1_floating_point_converter_xhtml_af9e9df90cb6319b0406acf9a3bc27667"><div class="ttname"><a href="classarmnn_utils_1_1_floating_point_converter.xhtml#af9e9df90cb6319b0406acf9a3bc27667">armnnUtils::FloatingPointConverter::ConvertBFloat16ToFloat32</a></div><div class="ttdeci">static void ConvertBFloat16ToFloat32(const void *srcBFloat16Buffer, size_t numElements, float *dstFloat32Buffer)</div><div class="ttdef"><b>Definition:</b> <a href="_floating_point_converter_8cpp_source.xhtml#l00061">FloatingPointConverter.cpp:61</a></div></div>
<div class="ttc" id="classarmnn_1_1_layer_xhtml_a386acff5f8430245239ce58d00ba7576"><div class="ttname"><a href="classarmnn_1_1_layer.xhtml#a386acff5f8430245239ce58d00ba7576">armnn::Layer::OperateOnConstantTensors</a></div><div class="ttdeci">void OperateOnConstantTensors(Op op)</div><div class="ttdef"><b>Definition:</b> <a href="_layer_8hpp_source.xhtml#l00304">Layer.hpp:304</a></div></div>
<div class="ttc" id="classarmnn_1_1_b_float16_xhtml"><div class="ttname"><a href="classarmnn_1_1_b_float16.xhtml">armnn::BFloat16</a></div><div class="ttdef"><b>Definition:</b> <a href="_b_float16_8hpp_source.xhtml#l00015">BFloat16.hpp:15</a></div></div>
<div class="ttc" id="structarmnn_1_1optimizations_1_1_is_b_float16_layer_xhtml_a4d870e13875a9a0a1cf09ba349904350"><div class="ttname"><a href="structarmnn_1_1optimizations_1_1_is_b_float16_layer.xhtml#a4d870e13875a9a0a1cf09ba349904350">armnn::optimizations::IsBFloat16Layer::Test</a></div><div class="ttdeci">static bool Test(const Layer &amp;layer)</div><div class="ttdef"><b>Definition:</b> <a href="_convert_constants_8hpp_source.xhtml#l00143">ConvertConstants.hpp:143</a></div></div>
<div class="ttc" id="structarmnn_1_1optimizations_1_1_is_b_float16_layer_xhtml"><div class="ttname"><a href="structarmnn_1_1optimizations_1_1_is_b_float16_layer.xhtml">armnn::optimizations::IsBFloat16Layer</a></div><div class="ttdef"><b>Definition:</b> <a href="_convert_constants_8hpp_source.xhtml#l00141">ConvertConstants.hpp:141</a></div></div>
<div class="ttc" id="namespacearmnn_xhtml"><div class="ttname"><a href="namespacearmnn.xhtml">armnn</a></div><div class="ttdoc">Copyright (c) 2021 ARM Limited and Contributors. </div><div class="ttdef"><b>Definition:</b> <a href="01__00__quick__start_8dox_source.xhtml#l00006">01_00_quick_start.dox:6</a></div></div>
<div class="ttc" id="namespacearmnn_xhtml_a44affeeb090c3c6a3062830562672e84"><div class="ttname"><a href="namespacearmnn.xhtml#a44affeeb090c3c6a3062830562672e84">armnn::IgnoreUnused</a></div><div class="ttdeci">void IgnoreUnused(Ts &amp;&amp;...)</div><div class="ttdef"><b>Definition:</b> <a href="_ignore_unused_8hpp_source.xhtml#l00014">IgnoreUnused.hpp:14</a></div></div>
<div class="ttc" id="structarmnn_1_1optimizations_1_1_b_float16_to_float32_xhtml_a0617fdc915ac5caefaf3e4e78a7f28a2"><div class="ttname"><a href="structarmnn_1_1optimizations_1_1_b_float16_to_float32.xhtml#a0617fdc915ac5caefaf3e4e78a7f28a2">armnn::optimizations::BFloat16ToFloat32::Func</a></div><div class="ttdeci">static void Func(std::shared_ptr&lt; ConstTensorHandle &gt; &amp;handle)</div><div class="ttdef"><b>Definition:</b> <a href="_convert_constants_8hpp_source.xhtml#l00024">ConvertConstants.hpp:24</a></div></div>
<div class="ttc" id="structarmnn_1_1optimizations_1_1_float16_to_float32_xhtml_a0617fdc915ac5caefaf3e4e78a7f28a2"><div class="ttname"><a href="structarmnn_1_1optimizations_1_1_float16_to_float32.xhtml#a0617fdc915ac5caefaf3e4e78a7f28a2">armnn::optimizations::Float16ToFloat32::Func</a></div><div class="ttdeci">static void Func(std::shared_ptr&lt; ConstTensorHandle &gt; &amp;handle)</div><div class="ttdef"><b>Definition:</b> <a href="_convert_constants_8hpp_source.xhtml#l00045">ConvertConstants.hpp:45</a></div></div>
<div class="ttc" id="structarmnn_1_1optimizations_1_1_float32_to_float16_xhtml"><div class="ttname"><a href="structarmnn_1_1optimizations_1_1_float32_to_float16.xhtml">armnn::optimizations::Float32ToFloat16</a></div><div class="ttdef"><b>Definition:</b> <a href="_convert_constants_8hpp_source.xhtml#l00085">ConvertConstants.hpp:85</a></div></div>
<div class="ttc" id="classarmnn_1_1_tensor_info_xhtml_aea909c7327109228ef618d459015def3"><div class="ttname"><a href="classarmnn_1_1_tensor_info.xhtml#aea909c7327109228ef618d459015def3">armnn::TensorInfo::GetDataType</a></div><div class="ttdeci">DataType GetDataType() const</div><div class="ttdef"><b>Definition:</b> <a href="_tensor_8hpp_source.xhtml#l00198">Tensor.hpp:198</a></div></div>
<div class="ttc" id="structarmnn_1_1optimizations_1_1_is_float16_layer_xhtml"><div class="ttname"><a href="structarmnn_1_1optimizations_1_1_is_float16_layer.xhtml">armnn::optimizations::IsFloat16Layer</a></div><div class="ttdef"><b>Definition:</b> <a href="_convert_constants_8hpp_source.xhtml#l00133">ConvertConstants.hpp:133</a></div></div>
<div class="ttc" id="classarmnn_utils_1_1_floating_point_converter_xhtml_af0fdbfb53596052d571cb73899f9da2b"><div class="ttname"><a href="classarmnn_utils_1_1_floating_point_converter.xhtml#af0fdbfb53596052d571cb73899f9da2b">armnnUtils::FloatingPointConverter::ConvertFloat32To16</a></div><div class="ttdeci">static void ConvertFloat32To16(const float *srcFloat32Buffer, size_t numElements, void *dstFloat16Buffer)</div><div class="ttdoc">Converts a buffer of FP32 values to FP16, and stores in the given dstFloat16Buffer. </div><div class="ttdef"><b>Definition:</b> <a href="_floating_point_converter_8cpp_source.xhtml#l00016">FloatingPointConverter.cpp:16</a></div></div>
<div class="ttc" id="classarmnn_1_1_const_tensor_xhtml"><div class="ttname"><a href="classarmnn_1_1_const_tensor.xhtml">armnn::ConstTensor</a></div><div class="ttdoc">A tensor defined by a TensorInfo (shape and data type) and an immutable backing store. </div><div class="ttdef"><b>Definition:</b> <a href="_tensor_8hpp_source.xhtml#l00327">Tensor.hpp:327</a></div></div>
<div class="ttc" id="structarmnn_1_1optimizations_1_1_float32_to_b_float16_xhtml"><div class="ttname"><a href="structarmnn_1_1optimizations_1_1_float32_to_b_float16.xhtml">armnn::optimizations::Float32ToBFloat16</a></div><div class="ttdef"><b>Definition:</b> <a href="_convert_constants_8hpp_source.xhtml#l00064">ConvertConstants.hpp:64</a></div></div>
<div class="ttc" id="classarmnn_1_1_scoped_tensor_handle_xhtml"><div class="ttname"><a href="classarmnn_1_1_scoped_tensor_handle.xhtml">armnn::ScopedTensorHandle</a></div><div class="ttdef"><b>Definition:</b> <a href="include_2armnn_2backends_2_tensor_handle_8hpp_source.xhtml#l00115">TensorHandle.hpp:115</a></div></div>
<div class="ttc" id="namespacearmnn_xhtml_ad8ed01ff3ff33333d8e19db4d2818bb6a26e6ed77470c6f2f830ecf874e6c0d55"><div class="ttname"><a href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a26e6ed77470c6f2f830ecf874e6c0d55">armnn::DataType::Float16</a></div></div>
<div class="ttc" id="include_2armnn_2backends_2_tensor_handle_8hpp_xhtml"><div class="ttname"><a href="include_2armnn_2backends_2_tensor_handle_8hpp.xhtml">TensorHandle.hpp</a></div></div>
<div class="ttc" id="classarmnn_1_1_optimization_xhtml"><div class="ttname"><a href="classarmnn_1_1_optimization.xhtml">armnn::Optimization</a></div><div class="ttdef"><b>Definition:</b> <a href="_optimization_8hpp_source.xhtml#l00015">Optimization.hpp:15</a></div></div>
<div class="ttc" id="classarmnn_utils_1_1_floating_point_converter_xhtml_ac1f1568f02163a68906a0030e0ba9871"><div class="ttname"><a href="classarmnn_utils_1_1_floating_point_converter.xhtml#ac1f1568f02163a68906a0030e0ba9871">armnnUtils::FloatingPointConverter::ConvertFloat16To32</a></div><div class="ttdeci">static void ConvertFloat16To32(const void *srcFloat16Buffer, size_t numElements, float *dstFloat32Buffer)</div><div class="ttdef"><b>Definition:</b> <a href="_floating_point_converter_8cpp_source.xhtml#l00031">FloatingPointConverter.cpp:31</a></div></div>
<div class="ttc" id="namespacearmnn_xhtml_ad8ed01ff3ff33333d8e19db4d2818bb6acdb56b2d2f73c26480207524f2dbe0af"><div class="ttname"><a href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6acdb56b2d2f73c26480207524f2dbe0af">armnn::DataType::BFloat16</a></div></div>
<div class="ttc" id="classarmnn_1_1optimizations_1_1_convert_constants_xhtml_a47831303c57efc1f46d26934a3d773fb"><div class="ttname"><a href="classarmnn_1_1optimizations_1_1_convert_constants.xhtml#a47831303c57efc1f46d26934a3d773fb">armnn::optimizations::ConvertConstants::Run</a></div><div class="ttdeci">void Run(Graph &amp;graph, Layer &amp;layer) const override</div><div class="ttdef"><b>Definition:</b> <a href="_convert_constants_8hpp_source.xhtml#l00114">ConvertConstants.hpp:114</a></div></div>
<div class="ttc" id="classarmnn_1_1_graph_xhtml"><div class="ttname"><a href="classarmnn_1_1_graph.xhtml">armnn::Graph</a></div><div class="ttdef"><b>Definition:</b> <a href="_graph_8hpp_source.xhtml#l00030">Graph.hpp:30</a></div></div>
<div class="ttc" id="_half_8hpp_xhtml"><div class="ttname"><a href="_half_8hpp.xhtml">Half.hpp</a></div></div>
<div class="ttc" id="structarmnn_1_1optimizations_1_1_float32_to_float16_xhtml_a0617fdc915ac5caefaf3e4e78a7f28a2"><div class="ttname"><a href="structarmnn_1_1optimizations_1_1_float32_to_float16.xhtml#a0617fdc915ac5caefaf3e4e78a7f28a2">armnn::optimizations::Float32ToFloat16::Func</a></div><div class="ttdeci">static void Func(std::shared_ptr&lt; ConstTensorHandle &gt; &amp;handle)</div><div class="ttdef"><b>Definition:</b> <a href="_convert_constants_8hpp_source.xhtml#l00087">ConvertConstants.hpp:87</a></div></div>
<div class="ttc" id="classarmnn_utils_1_1_floating_point_converter_xhtml_ac7add3b3d40fbaab5e514c756a953d78"><div class="ttname"><a href="classarmnn_utils_1_1_floating_point_converter.xhtml#ac7add3b3d40fbaab5e514c756a953d78">armnnUtils::FloatingPointConverter::ConvertFloat32ToBFloat16</a></div><div class="ttdeci">static void ConvertFloat32ToBFloat16(const float *srcFloat32Buffer, size_t numElements, void *dstBFloat16Buffer)</div><div class="ttdef"><b>Definition:</b> <a href="_floating_point_converter_8cpp_source.xhtml#l00046">FloatingPointConverter.cpp:46</a></div></div>
<div class="ttc" id="namespacearmnn_xhtml_a4dc0adc6737b5944e7671bee71788407acaf9b6b99962bf5c2264824231d7a40c"><div class="ttname"><a href="namespacearmnn.xhtml#a4dc0adc6737b5944e7671bee71788407acaf9b6b99962bf5c2264824231d7a40c">armnn::BoostLogSeverityMapping::info</a></div></div>
<div class="ttc" id="classarmnn_1_1_layer_xhtml_aea909c7327109228ef618d459015def3"><div class="ttname"><a href="classarmnn_1_1_layer.xhtml#aea909c7327109228ef618d459015def3">armnn::Layer::GetDataType</a></div><div class="ttdeci">DataType GetDataType() const</div><div class="ttdef"><b>Definition:</b> <a href="_layer_8cpp_source.xhtml#l00313">Layer.cpp:313</a></div></div>
<div class="ttc" id="_b_float16_8hpp_xhtml"><div class="ttname"><a href="_b_float16_8hpp.xhtml">BFloat16.hpp</a></div></div>
<div class="ttc" id="namespacearmnn_xhtml_ad8ed01ff3ff33333d8e19db4d2818bb6a166495adc0d0f53bee6baecc577f5204"><div class="ttname"><a href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a166495adc0d0f53bee6baecc577f5204">armnn::DataType::Float32</a></div></div>
<div class="ttc" id="structarmnn_1_1optimizations_1_1_b_float16_to_float32_xhtml"><div class="ttname"><a href="structarmnn_1_1optimizations_1_1_b_float16_to_float32.xhtml">armnn::optimizations::BFloat16ToFloat32</a></div><div class="ttdef"><b>Definition:</b> <a href="_convert_constants_8hpp_source.xhtml#l00022">ConvertConstants.hpp:22</a></div></div>
<div class="ttc" id="_optimization_8hpp_xhtml"><div class="ttname"><a href="_optimization_8hpp.xhtml">Optimization.hpp</a></div></div>
<div class="ttc" id="namespacearmnn_xhtml_a0f38fa92b2468d5378258a2b074c1a31"><div class="ttname"><a href="namespacearmnn.xhtml#a0f38fa92b2468d5378258a2b074c1a31">armnn::Half</a></div><div class="ttdeci">half_float::half Half</div><div class="ttdef"><b>Definition:</b> <a href="_half_8hpp_source.xhtml#l00018">Half.hpp:18</a></div></div>
<div class="ttc" id="classarmnn_1_1_layer_xhtml"><div class="ttname"><a href="classarmnn_1_1_layer.xhtml">armnn::Layer</a></div><div class="ttdef"><b>Definition:</b> <a href="_layer_8hpp_source.xhtml#l00215">Layer.hpp:215</a></div></div>
<div class="ttc" id="structarmnn_1_1optimizations_1_1_float16_to_float32_xhtml"><div class="ttname"><a href="structarmnn_1_1optimizations_1_1_float16_to_float32.xhtml">armnn::optimizations::Float16ToFloat32</a></div><div class="ttdef"><b>Definition:</b> <a href="_convert_constants_8hpp_source.xhtml#l00043">ConvertConstants.hpp:43</a></div></div>
<div class="ttc" id="classarmnn_1_1_tensor_info_xhtml_a8846406ac37fbd2204f0be16ee05d5b7"><div class="ttname"><a href="classarmnn_1_1_tensor_info.xhtml#a8846406ac37fbd2204f0be16ee05d5b7">armnn::TensorInfo::GetNumElements</a></div><div class="ttdeci">unsigned int GetNumElements() const</div><div class="ttdef"><b>Definition:</b> <a href="_tensor_8hpp_source.xhtml#l00196">Tensor.hpp:196</a></div></div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="dir_68267d1309a1af8e8297ef4c3efbcdba.xhtml">src</a></li><li class="navelem"><a class="el" href="dir_e0a84d05c80a2ef4231141dcbbeac5c8.xhtml">armnn</a></li><li class="navelem"><a class="el" href="dir_5bee762cfd03f62aa80233ed05f1bfdf.xhtml">optimizations</a></li><li class="navelem"><a class="el" href="_convert_constants_8hpp.xhtml">ConvertConstants.hpp</a></li>
    <li class="footer">Generated on Tue May 24 2022 11:26:33 for ArmNN by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.13 </li>
  </ul>
</div>
</body>
</html>
