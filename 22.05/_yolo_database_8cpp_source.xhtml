<!-- Copyright (c) 2020 ARM Limited. -->
<!--                                 -->
<!-- SPDX-License-Identifier: MIT    -->
<!--                                 -->
<!-- HTML header for doxygen 1.8.13-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.13"/>
<meta name="robots" content="NOINDEX, NOFOLLOW" />
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>ArmNN: tests/YoloDatabase.cpp Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script><script type="text/javascript" src="http://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="stylesheet.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <img alt="ArmNN" src="Arm_NN_horizontal_blue.png" style="max-width: 10rem; margin-top: .5rem; margin-left 10px"/>
  <td style="padding-left: 0.5em;">
   <div id="projectname">
   &#160;<span id="projectnumber">22.05</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.13 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
$(document).ready(function(){initNavTree('_yolo_database_8cpp_source.xhtml','');});
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="headertitle">
<div class="title">YoloDatabase.cpp</div>  </div>
</div><!--header-->
<div class="contents">
<a href="_yolo_database_8cpp.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="comment">//</span></div><div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="comment">// Copyright Â© 2017 Arm Ltd. All rights reserved.</span></div><div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="comment">// SPDX-License-Identifier: MIT</span></div><div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="comment">//</span></div><div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_yolo_database_8hpp.xhtml">YoloDatabase.hpp</a>&quot;</span></div><div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;</div><div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="preprocessor">#include &lt;<a class="code" href="_exceptions_8hpp.xhtml">armnn/Exceptions.hpp</a>&gt;</span></div><div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="preprocessor">#include &lt;<a class="code" href="_logging_8hpp.xhtml">armnn/Logging.hpp</a>&gt;</span></div><div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;</div><div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="preprocessor">#include &lt;<a class="code" href="_numeric_cast_8hpp.xhtml">armnn/utility/NumericCast.hpp</a>&gt;</span></div><div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;</div><div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;<span class="preprocessor">#include &lt;array&gt;</span></div><div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;<span class="preprocessor">#include &lt;cstdint&gt;</span></div><div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;<span class="preprocessor">#include &lt;tuple&gt;</span></div><div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;<span class="preprocessor">#include &lt;utility&gt;</span></div><div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;</div><div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_inference_test_image_8hpp.xhtml">InferenceTestImage.hpp</a>&quot;</span></div><div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;</div><div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;<span class="keyword">namespace</span></div><div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;{</div><div class="line"><a name="l00021"></a><span class="lineno"><a class="line" href="_yolo_database_8cpp.xhtml#adb2a65cc4248b55aff18649e9788f6dc">   21</a></span>&#160;<span class="keyword">enum class</span> <a class="code" href="_yolo_database_8cpp.xhtml#adb2a65cc4248b55aff18649e9788f6dc">YoloVocClass</a> : unsigned int</div><div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;{</div><div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;    Aeroplane,</div><div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;    Bicycle,</div><div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;    Bird,</div><div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;    Boat,</div><div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;    Bottle,</div><div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;    Bus,</div><div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;    Car,</div><div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;    Cat,</div><div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;    Chair,</div><div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;    Cow,</div><div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;    DiningTable,</div><div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;    Dog,</div><div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;    Horse,</div><div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;    Motorbike,</div><div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;    Person,</div><div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;    PottedPlant,</div><div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;    Sheep,</div><div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;    Sofa,</div><div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;    Train,</div><div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;    TvMonitor</div><div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;};</div><div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;</div><div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> E&gt;</div><div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;constexpr <span class="keyword">auto</span> to_underlying(E e) noexcept</div><div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;{</div><div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;    <span class="keywordflow">return</span> <span class="keyword">static_cast&lt;</span>std::underlying_type_t&lt;E&gt;<span class="keyword">&gt;</span>(e);</div><div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;}</div><div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;</div><div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;<span class="keyword">class </span>ImageNotFoundException : <span class="keyword">public</span> <a class="code" href="classarmnn_1_1_exception.xhtml">armnn::Exception</a></div><div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;{</div><div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;    <span class="keyword">using</span> Exception::Exception;</div><div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;};</div><div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;</div><div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;<span class="keyword">using</span> YoloInputOutput = std::pair&lt;const char* const, YoloDetectedObject&gt;;</div><div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;</div><div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;<span class="keyword">const</span> std::array&lt;YoloInputOutput,1&gt; g_PerTestCaseInputOutput =</div><div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;{</div><div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;    YoloInputOutput{</div><div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;        <span class="stringliteral">&quot;yolo_dog_448x448.png&quot;</span>,</div><div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;        { to_underlying(YoloVocClass::Dog), <a class="code" href="struct_yolo_bounding_box.xhtml">YoloBoundingBox</a>{ 233.0f, 256.0f, 299.0f, 462.0f }, 0.5088733434677124f }</div><div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;    },</div><div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;};</div><div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;</div><div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;} <span class="comment">// namespace</span></div><div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;</div><div class="line"><a name="l00068"></a><span class="lineno"><a class="line" href="class_yolo_database.xhtml#ae29cd81371801a0d70ac3dbd5adc01e5">   68</a></span>&#160;<a class="code" href="class_yolo_database.xhtml#ae29cd81371801a0d70ac3dbd5adc01e5">YoloDatabase::YoloDatabase</a>(<span class="keyword">const</span> std::string&amp; imageDir)</div><div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;    : m_ImageDir(imageDir)</div><div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;{</div><div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;}</div><div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;</div><div class="line"><a name="l00073"></a><span class="lineno"><a class="line" href="class_yolo_database.xhtml#a4b1e13e320d157200130d2161a8d2070">   73</a></span>&#160;std::unique_ptr&lt;YoloDatabase::TTestCaseData&gt; <a class="code" href="class_yolo_database.xhtml#a4b1e13e320d157200130d2161a8d2070">YoloDatabase::GetTestCaseData</a>(<span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> testCaseId)</div><div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;{</div><div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;    testCaseId = testCaseId % <a class="code" href="namespacearmnn.xhtml#a375ca3cff9f1b005d1412dc5f3cf5b6e">armnn::numeric_cast</a>&lt;<span class="keywordtype">unsigned</span> <span class="keywordtype">int</span>&gt;(g_PerTestCaseInputOutput.size());</div><div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;    <span class="keyword">const</span> <span class="keyword">auto</span>&amp; testCaseInputOutput = g_PerTestCaseInputOutput[testCaseId];</div><div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;    <span class="keyword">const</span> std::string imagePath = m_ImageDir + testCaseInputOutput.first;</div><div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;</div><div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;    <span class="comment">// Loads test case input image.</span></div><div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;    std::vector&lt;float&gt; imageData;</div><div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;    <span class="keywordflow">try</span></div><div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;    {</div><div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;        <a class="code" href="class_inference_test_image.xhtml">InferenceTestImage</a> image(imagePath.c_str());</div><div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;        <span class="keywordflow">if</span> (<a class="code" href="_yolo_database_8hpp.xhtml#a88c3339d57718f167a374ab572610ba8">YoloImageWidth</a> != image.GetWidth() || <a class="code" href="_yolo_database_8hpp.xhtml#af74f4ad1b33fe68237cb97c9345e9e87">YoloImageHeight</a> != image.GetHeight())</div><div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;        {</div><div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;            image.<a class="code" href="class_inference_test_image.xhtml#a4a6637c2a2952a14cb3a426133b67a73">Resize</a>(<a class="code" href="_yolo_database_8hpp.xhtml#a88c3339d57718f167a374ab572610ba8">YoloImageWidth</a>, <a class="code" href="_yolo_database_8hpp.xhtml#af74f4ad1b33fe68237cb97c9345e9e87">YoloImageHeight</a>, <a class="code" href="_exceptions_8hpp.xhtml#aa3be76aec4ce713822a5ea1ecbb7bc61">CHECK_LOCATION</a>());</div><div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;        }</div><div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;        imageData = <a class="code" href="_inference_test_image_8cpp.xhtml#a3f8ac82c346c723f775a383d22239182">GetImageDataInArmNnLayoutAsNormalizedFloats</a>(<a class="code" href="_inference_test_image_8hpp.xhtml#a5f7592b0a8fa09208cd32721cf207110aabe0e112dd5f40f1de00eccbf99798a3">ImageChannelLayout::Rgb</a>, image);</div><div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;    }</div><div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;    <span class="keywordflow">catch</span> (<span class="keyword">const</span> <a class="code" href="class_inference_test_image_exception.xhtml">InferenceTestImageException</a>&amp; e)</div><div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;    {</div><div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;        <a class="code" href="_logging_8hpp.xhtml#a7b6ad073975f437ec38ca7d20154727f">ARMNN_LOG</a>(fatal) &lt;&lt; <span class="stringliteral">&quot;Failed to load test case &quot;</span> &lt;&lt; testCaseId &lt;&lt; <span class="stringliteral">&quot; with error: &quot;</span> &lt;&lt; e.<a class="code" href="classarmnn_1_1_exception.xhtml#abf843cbb29dec939d0731e491bab6f70">what</a>();</div><div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;        <span class="keywordflow">return</span> <span class="keyword">nullptr</span>;</div><div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;    }</div><div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;</div><div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;    <span class="comment">// Prepares test case output.</span></div><div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;    std::vector&lt;YoloDetectedObject&gt; topObjectDetections;</div><div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;    topObjectDetections.reserve(1);</div><div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;    topObjectDetections.push_back(testCaseInputOutput.second);</div><div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;</div><div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;    <span class="keywordflow">return</span> std::make_unique&lt;YoloTestCaseData&gt;(std::move(imageData), std::move(topObjectDetections));</div><div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;}</div><div class="ttc" id="_yolo_database_8hpp_xhtml_af74f4ad1b33fe68237cb97c9345e9e87"><div class="ttname"><a href="_yolo_database_8hpp.xhtml#af74f4ad1b33fe68237cb97c9345e9e87">YoloImageHeight</a></div><div class="ttdeci">constexpr unsigned int YoloImageHeight</div><div class="ttdef"><b>Definition:</b> <a href="_yolo_database_8hpp_source.xhtml#l00051">YoloDatabase.hpp:51</a></div></div>
<div class="ttc" id="struct_yolo_bounding_box_xhtml"><div class="ttname"><a href="struct_yolo_bounding_box.xhtml">YoloBoundingBox</a></div><div class="ttdef"><b>Definition:</b> <a href="_yolo_database_8hpp_source.xhtml#l00013">YoloDatabase.hpp:13</a></div></div>
<div class="ttc" id="classarmnn_1_1_exception_xhtml_abf843cbb29dec939d0731e491bab6f70"><div class="ttname"><a href="classarmnn_1_1_exception.xhtml#abf843cbb29dec939d0731e491bab6f70">armnn::Exception::what</a></div><div class="ttdeci">virtual const char * what() const noexcept override</div><div class="ttdef"><b>Definition:</b> <a href="_exceptions_8cpp_source.xhtml#l00032">Exceptions.cpp:32</a></div></div>
<div class="ttc" id="_logging_8hpp_xhtml_a7b6ad073975f437ec38ca7d20154727f"><div class="ttname"><a href="_logging_8hpp.xhtml#a7b6ad073975f437ec38ca7d20154727f">ARMNN_LOG</a></div><div class="ttdeci">#define ARMNN_LOG(severity)</div><div class="ttdef"><b>Definition:</b> <a href="_logging_8hpp_source.xhtml#l00205">Logging.hpp:205</a></div></div>
<div class="ttc" id="_yolo_database_8hpp_xhtml"><div class="ttname"><a href="_yolo_database_8hpp.xhtml">YoloDatabase.hpp</a></div></div>
<div class="ttc" id="_numeric_cast_8hpp_xhtml"><div class="ttname"><a href="_numeric_cast_8hpp.xhtml">NumericCast.hpp</a></div></div>
<div class="ttc" id="_inference_test_image_8hpp_xhtml"><div class="ttname"><a href="_inference_test_image_8hpp.xhtml">InferenceTestImage.hpp</a></div></div>
<div class="ttc" id="class_inference_test_image_exception_xhtml"><div class="ttname"><a href="class_inference_test_image_exception.xhtml">InferenceTestImageException</a></div><div class="ttdef"><b>Definition:</b> <a href="_inference_test_image_8hpp_source.xhtml#l00015">InferenceTestImage.hpp:15</a></div></div>
<div class="ttc" id="_inference_test_image_8cpp_xhtml_a3f8ac82c346c723f775a383d22239182"><div class="ttname"><a href="_inference_test_image_8cpp.xhtml#a3f8ac82c346c723f775a383d22239182">GetImageDataInArmNnLayoutAsNormalizedFloats</a></div><div class="ttdeci">std::vector&lt; float &gt; GetImageDataInArmNnLayoutAsNormalizedFloats(ImageChannelLayout layout, const InferenceTestImage &amp;image)</div><div class="ttdef"><b>Definition:</b> <a href="_inference_test_image_8cpp_source.xhtml#l00310">InferenceTestImage.cpp:310</a></div></div>
<div class="ttc" id="_yolo_database_8cpp_xhtml_adb2a65cc4248b55aff18649e9788f6dc"><div class="ttname"><a href="_yolo_database_8cpp.xhtml#adb2a65cc4248b55aff18649e9788f6dc">YoloVocClass</a></div><div class="ttdeci">YoloVocClass</div><div class="ttdef"><b>Definition:</b> <a href="_yolo_database_8cpp_source.xhtml#l00021">YoloDatabase.cpp:21</a></div></div>
<div class="ttc" id="class_yolo_database_xhtml_ae29cd81371801a0d70ac3dbd5adc01e5"><div class="ttname"><a href="class_yolo_database.xhtml#ae29cd81371801a0d70ac3dbd5adc01e5">YoloDatabase::YoloDatabase</a></div><div class="ttdeci">YoloDatabase(const std::string &amp;imageDir)</div><div class="ttdef"><b>Definition:</b> <a href="_yolo_database_8cpp_source.xhtml#l00068">YoloDatabase.cpp:68</a></div></div>
<div class="ttc" id="class_yolo_database_xhtml_a4b1e13e320d157200130d2161a8d2070"><div class="ttname"><a href="class_yolo_database.xhtml#a4b1e13e320d157200130d2161a8d2070">YoloDatabase::GetTestCaseData</a></div><div class="ttdeci">std::unique_ptr&lt; TTestCaseData &gt; GetTestCaseData(unsigned int testCaseId)</div><div class="ttdef"><b>Definition:</b> <a href="_yolo_database_8cpp_source.xhtml#l00073">YoloDatabase.cpp:73</a></div></div>
<div class="ttc" id="_exceptions_8hpp_xhtml_aa3be76aec4ce713822a5ea1ecbb7bc61"><div class="ttname"><a href="_exceptions_8hpp.xhtml#aa3be76aec4ce713822a5ea1ecbb7bc61">CHECK_LOCATION</a></div><div class="ttdeci">#define CHECK_LOCATION()</div><div class="ttdef"><b>Definition:</b> <a href="_exceptions_8hpp_source.xhtml#l00203">Exceptions.hpp:203</a></div></div>
<div class="ttc" id="_logging_8hpp_xhtml"><div class="ttname"><a href="_logging_8hpp.xhtml">Logging.hpp</a></div></div>
<div class="ttc" id="class_inference_test_image_xhtml"><div class="ttname"><a href="class_inference_test_image.xhtml">InferenceTestImage</a></div><div class="ttdef"><b>Definition:</b> <a href="_inference_test_image_8hpp_source.xhtml#l00051">InferenceTestImage.hpp:51</a></div></div>
<div class="ttc" id="classarmnn_1_1_exception_xhtml"><div class="ttname"><a href="classarmnn_1_1_exception.xhtml">armnn::Exception</a></div><div class="ttdoc">Base class for all ArmNN exceptions so that users can filter to just those. </div><div class="ttdef"><b>Definition:</b> <a href="_exceptions_8hpp_source.xhtml#l00046">Exceptions.hpp:46</a></div></div>
<div class="ttc" id="_exceptions_8hpp_xhtml"><div class="ttname"><a href="_exceptions_8hpp.xhtml">Exceptions.hpp</a></div></div>
<div class="ttc" id="_yolo_database_8hpp_xhtml_a88c3339d57718f167a374ab572610ba8"><div class="ttname"><a href="_yolo_database_8hpp.xhtml#a88c3339d57718f167a374ab572610ba8">YoloImageWidth</a></div><div class="ttdeci">constexpr unsigned int YoloImageWidth</div><div class="ttdef"><b>Definition:</b> <a href="_yolo_database_8hpp_source.xhtml#l00050">YoloDatabase.hpp:50</a></div></div>
<div class="ttc" id="_inference_test_image_8hpp_xhtml_a5f7592b0a8fa09208cd32721cf207110aabe0e112dd5f40f1de00eccbf99798a3"><div class="ttname"><a href="_inference_test_image_8hpp.xhtml#a5f7592b0a8fa09208cd32721cf207110aabe0e112dd5f40f1de00eccbf99798a3">ImageChannelLayout::Rgb</a></div></div>
<div class="ttc" id="namespacearmnn_xhtml_a375ca3cff9f1b005d1412dc5f3cf5b6e"><div class="ttname"><a href="namespacearmnn.xhtml#a375ca3cff9f1b005d1412dc5f3cf5b6e">armnn::numeric_cast</a></div><div class="ttdeci">std::enable_if_t&lt; std::is_unsigned&lt; Source &gt;::value &amp;&amp;std::is_unsigned&lt; Dest &gt;::value, Dest &gt; numeric_cast(Source source)</div><div class="ttdef"><b>Definition:</b> <a href="_numeric_cast_8hpp_source.xhtml#l00035">NumericCast.hpp:35</a></div></div>
<div class="ttc" id="class_inference_test_image_xhtml_a4a6637c2a2952a14cb3a426133b67a73"><div class="ttname"><a href="class_inference_test_image.xhtml#a4a6637c2a2952a14cb3a426133b67a73">InferenceTestImage::Resize</a></div><div class="ttdeci">std::vector&lt; float &gt; Resize(unsigned int newWidth, unsigned int newHeight, const armnn::CheckLocation &amp;location, const ResizingMethods meth=ResizingMethods::STB, const std::array&lt; float, 3 &gt; &amp;mean={{0.0, 0.0, 0.0}}, const std::array&lt; float, 3 &gt; &amp;stddev={{1.0, 1.0, 1.0}}, const float scale=255.0f)</div><div class="ttdef"><b>Definition:</b> <a href="_inference_test_image_8cpp_source.xhtml#l00209">InferenceTestImage.cpp:209</a></div></div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="dir_59425e443f801f1f2fd8bbe4959a3ccf.xhtml">tests</a></li><li class="navelem"><a class="el" href="_yolo_database_8cpp.xhtml">YoloDatabase.cpp</a></li>
    <li class="footer">Generated on Tue May 24 2022 11:27:15 for ArmNN by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.13 </li>
  </ul>
</div>
</body>
</html>
