<!-- Copyright (c) 2020 ARM Limited. -->
<!--                                 -->
<!-- SPDX-License-Identifier: MIT    -->
<!--                                 -->
<!-- HTML header for doxygen 1.8.13-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.13"/>
<meta name="robots" content="NOINDEX, NOFOLLOW" />
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>ArmNN: tests/profiling/gatordmock/GatordMockMain.cpp Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script><script type="text/javascript" src="http://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="stylesheet.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <img alt="ArmNN" src="Arm_NN_horizontal_blue.png" style="max-width: 10rem; margin-top: .5rem; margin-left 10px"/>
  <td style="padding-left: 0.5em;">
   <div id="projectname">
   &#160;<span id="projectnumber">22.08</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.13 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
$(document).ready(function(){initNavTree('_gatord_mock_main_8cpp_source.xhtml','');});
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="headertitle">
<div class="title">GatordMockMain.cpp</div>  </div>
</div><!--header-->
<div class="contents">
<a href="_gatord_mock_main_8cpp.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="comment">//</span></div><div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="comment">// Copyright Â© 2019 Arm Ltd and Contributors. All rights reserved.</span></div><div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="comment">// SPDX-License-Identifier: MIT</span></div><div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="comment">//</span></div><div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;</div><div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_command_file_parser_8hpp.xhtml">CommandFileParser.hpp</a>&quot;</span></div><div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_command_line_processor_8hpp.xhtml">CommandLineProcessor.hpp</a>&quot;</span></div><div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_gatord_mock_service_8hpp.xhtml">GatordMockService.hpp</a>&quot;</span></div><div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;</div><div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="preprocessor">#include &lt;server/include/basePipeServer/ConnectionHandler.hpp&gt;</span></div><div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;</div><div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;<span class="preprocessor">#include &lt;string&gt;</span></div><div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;<span class="preprocessor">#include &lt;signal.h&gt;</span></div><div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;</div><div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;<span class="keyword">using namespace </span><a class="code" href="namespacearmnn.xhtml">armnn</a>;</div><div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;<span class="keyword">using namespace </span>gatordmock;</div><div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;</div><div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;<span class="comment">// Used to capture ctrl-c so we can close any remaining sockets before exit</span></div><div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;<span class="keyword">static</span> <span class="keyword">volatile</span> <span class="keywordtype">bool</span> run = <span class="keyword">true</span>;</div><div class="line"><a name="l00020"></a><span class="lineno"><a class="line" href="_gatord_mock_main_8cpp.xhtml#a772fe60604a1f224a36182a0d04734df">   20</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="_gatord_mock_main_8cpp.xhtml#a772fe60604a1f224a36182a0d04734df">exit_capture</a>(<span class="keywordtype">int</span> signum)</div><div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;{</div><div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;    <a class="code" href="namespacearmnn.xhtml#a44affeeb090c3c6a3062830562672e84">arm::pipe::IgnoreUnused</a>(signum);</div><div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;    run = <span class="keyword">false</span>;</div><div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;}</div><div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;</div><div class="line"><a name="l00026"></a><span class="lineno"><a class="line" href="_gatord_mock_main_8cpp.xhtml#aa9eb906c29d6ae82f7d9386afdf297d2">   26</a></span>&#160;<span class="keywordtype">bool</span> <a class="code" href="_gatord_mock_main_8cpp.xhtml#aa9eb906c29d6ae82f7d9386afdf297d2">CreateMockService</a>(std::unique_ptr&lt;arm::pipe::BasePipeServer&gt; basePipeServer,</div><div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;                       std::string commandFile,</div><div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;                       <span class="keywordtype">bool</span> isEchoEnabled)</div><div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;{</div><div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;    <a class="code" href="classarmnn_1_1gatordmock_1_1_gatord_mock_service.xhtml">GatordMockService</a> mockService(std::move(basePipeServer), isEchoEnabled);</div><div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;</div><div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;    <span class="comment">// Send receive the stream metadata and send connection ack.</span></div><div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;    <span class="keywordflow">if</span> (!mockService.<a class="code" href="classarmnn_1_1gatordmock_1_1_gatord_mock_service.xhtml#ac07351dbc304681b2efd5df4958a6735">WaitForStreamMetaData</a>())</div><div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;    {</div><div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;        <span class="keywordflow">return</span> EXIT_FAILURE;</div><div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;    }</div><div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;    mockService.<a class="code" href="classarmnn_1_1gatordmock_1_1_gatord_mock_service.xhtml#a41eaa65cf4e7212f09b04d06c130cd83">SendConnectionAck</a>();</div><div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;</div><div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;    <span class="comment">// Prepare to receive data.</span></div><div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;    mockService.<a class="code" href="classarmnn_1_1gatordmock_1_1_gatord_mock_service.xhtml#a5175305569ecb4e58004e977abeff61a">LaunchReceivingThread</a>();</div><div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;</div><div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;    <span class="comment">// Process the SET and WAIT command from the file.</span></div><div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;    <a class="code" href="classarmnn_1_1gatordmock_1_1_command_file_parser.xhtml">CommandFileParser</a> commandLineParser;</div><div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;    commandLineParser.<a class="code" href="classarmnn_1_1gatordmock_1_1_command_file_parser.xhtml#a224fc15053b9579998ce82f22038bab1">ParseFile</a>(commandFile, mockService);</div><div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;</div><div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;    <span class="comment">// Once we&#39;ve finished processing the file wait for the receiving thread to close.</span></div><div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;    mockService.<a class="code" href="classarmnn_1_1gatordmock_1_1_gatord_mock_service.xhtml#a93617d8640d5e93831d06a2ef3c86bef">WaitForReceivingThread</a>();</div><div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;</div><div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;    <span class="keywordflow">return</span> EXIT_SUCCESS;</div><div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;}</div><div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;</div><div class="line"><a name="l00052"></a><span class="lineno"><a class="line" href="_gatord_mock_main_8cpp.xhtml#a0ddf1224851353fc92bfbff6f499fa97">   52</a></span>&#160;<span class="keywordtype">int</span> <a class="code" href="_gatord_mock_main_8cpp.xhtml#a0ddf1224851353fc92bfbff6f499fa97">main</a>(<span class="keywordtype">int</span> argc, <span class="keywordtype">char</span>* argv[])</div><div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;{</div><div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;    <span class="comment">// We need to capture ctrl-c so we can close any remaining sockets before exit</span></div><div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;    signal(SIGINT, <a class="code" href="_gatord_mock_main_8cpp.xhtml#a772fe60604a1f224a36182a0d04734df">exit_capture</a>);</div><div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;</div><div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;    <span class="comment">// Process command line arguments</span></div><div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;    <a class="code" href="classarmnn_1_1gatordmock_1_1_command_line_processor.xhtml">CommandLineProcessor</a> cmdLine;</div><div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;    <span class="keywordflow">if</span> (!cmdLine.<a class="code" href="classarmnn_1_1gatordmock_1_1_command_line_processor.xhtml#a2f7e28f477647e992871d50e7b793221">ProcessCommandLine</a>(argc, argv))</div><div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;    {</div><div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;        <span class="keywordflow">return</span> EXIT_FAILURE;</div><div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;    }</div><div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;</div><div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;    std::vector&lt;std::thread&gt; threads;</div><div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;    std::string commandFile = cmdLine.<a class="code" href="classarmnn_1_1gatordmock_1_1_command_line_processor.xhtml#afc0b543e840606e43193b7d037c07c03">GetCommandFile</a>();</div><div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;</div><div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;    <span class="comment">// make the socket non-blocking so we can exit the loop</span></div><div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;    arm::pipe::ConnectionHandler connectionHandler(cmdLine.<a class="code" href="classarmnn_1_1gatordmock_1_1_command_line_processor.xhtml#a40e03b7685895e3d6fc5e45b0889f3f5">GetUdsNamespace</a>(), <span class="keyword">true</span>);</div><div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;</div><div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;    <span class="keywordflow">while</span> (run)</div><div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;    {</div><div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;        <span class="keyword">auto</span> basePipeServer = connectionHandler.GetNewBasePipeServer(cmdLine.<a class="code" href="classarmnn_1_1gatordmock_1_1_command_line_processor.xhtml#a75f41b893fe47f7bc9d30f58d94ab905">IsEchoEnabled</a>());</div><div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;</div><div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;        <span class="keywordflow">if</span> (basePipeServer != <span class="keyword">nullptr</span>)</div><div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;        {</div><div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;            threads.emplace_back(</div><div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;                    std::thread(<a class="code" href="_gatord_mock_main_8cpp.xhtml#aa9eb906c29d6ae82f7d9386afdf297d2">CreateMockService</a>, std::move(basePipeServer), commandFile, cmdLine.<a class="code" href="classarmnn_1_1gatordmock_1_1_command_line_processor.xhtml#a75f41b893fe47f7bc9d30f58d94ab905">IsEchoEnabled</a>()));</div><div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;        }</div><div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;</div><div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;        std::this_thread::sleep_for(std::chrono::milliseconds(100u));</div><div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;    }</div><div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;</div><div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;    std::for_each(threads.begin(), threads.end(), [](std::thread&amp; t){t.join();});</div><div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;}</div><div class="ttc" id="classarmnn_1_1gatordmock_1_1_command_line_processor_xhtml_a2f7e28f477647e992871d50e7b793221"><div class="ttname"><a href="classarmnn_1_1gatordmock_1_1_command_line_processor.xhtml#a2f7e28f477647e992871d50e7b793221">armnn::gatordmock::CommandLineProcessor::ProcessCommandLine</a></div><div class="ttdeci">bool ProcessCommandLine(int argc, char *argv[])</div><div class="ttdef"><b>Definition:</b> <a href="_command_line_processor_8cpp_source.xhtml#l00016">CommandLineProcessor.cpp:16</a></div></div>
<div class="ttc" id="_gatord_mock_main_8cpp_xhtml_a0ddf1224851353fc92bfbff6f499fa97"><div class="ttname"><a href="_gatord_mock_main_8cpp.xhtml#a0ddf1224851353fc92bfbff6f499fa97">main</a></div><div class="ttdeci">int main(int argc, char *argv[])</div><div class="ttdef"><b>Definition:</b> <a href="_gatord_mock_main_8cpp_source.xhtml#l00052">GatordMockMain.cpp:52</a></div></div>
<div class="ttc" id="_command_line_processor_8hpp_xhtml"><div class="ttname"><a href="_command_line_processor_8hpp.xhtml">CommandLineProcessor.hpp</a></div></div>
<div class="ttc" id="_gatord_mock_main_8cpp_xhtml_a772fe60604a1f224a36182a0d04734df"><div class="ttname"><a href="_gatord_mock_main_8cpp.xhtml#a772fe60604a1f224a36182a0d04734df">exit_capture</a></div><div class="ttdeci">void exit_capture(int signum)</div><div class="ttdef"><b>Definition:</b> <a href="_gatord_mock_main_8cpp_source.xhtml#l00020">GatordMockMain.cpp:20</a></div></div>
<div class="ttc" id="_gatord_mock_main_8cpp_xhtml_aa9eb906c29d6ae82f7d9386afdf297d2"><div class="ttname"><a href="_gatord_mock_main_8cpp.xhtml#aa9eb906c29d6ae82f7d9386afdf297d2">CreateMockService</a></div><div class="ttdeci">bool CreateMockService(std::unique_ptr&lt; arm::pipe::BasePipeServer &gt; basePipeServer, std::string commandFile, bool isEchoEnabled)</div><div class="ttdef"><b>Definition:</b> <a href="_gatord_mock_main_8cpp_source.xhtml#l00026">GatordMockMain.cpp:26</a></div></div>
<div class="ttc" id="classarmnn_1_1gatordmock_1_1_command_line_processor_xhtml_a75f41b893fe47f7bc9d30f58d94ab905"><div class="ttname"><a href="classarmnn_1_1gatordmock_1_1_command_line_processor.xhtml#a75f41b893fe47f7bc9d30f58d94ab905">armnn::gatordmock::CommandLineProcessor::IsEchoEnabled</a></div><div class="ttdeci">bool IsEchoEnabled()</div><div class="ttdef"><b>Definition:</b> <a href="_command_line_processor_8hpp_source.xhtml#l00024">CommandLineProcessor.hpp:24</a></div></div>
<div class="ttc" id="classarmnn_1_1gatordmock_1_1_command_file_parser_xhtml_a224fc15053b9579998ce82f22038bab1"><div class="ttname"><a href="classarmnn_1_1gatordmock_1_1_command_file_parser.xhtml#a224fc15053b9579998ce82f22038bab1">armnn::gatordmock::CommandFileParser::ParseFile</a></div><div class="ttdeci">void ParseFile(std::string CommandFile, GatordMockService &amp;mockService)</div><div class="ttdef"><b>Definition:</b> <a href="_command_file_parser_8cpp_source.xhtml#l00019">CommandFileParser.cpp:19</a></div></div>
<div class="ttc" id="_gatord_mock_service_8hpp_xhtml"><div class="ttname"><a href="_gatord_mock_service_8hpp.xhtml">GatordMockService.hpp</a></div></div>
<div class="ttc" id="namespacearmnn_xhtml"><div class="ttname"><a href="namespacearmnn.xhtml">armnn</a></div><div class="ttdoc">Copyright (c) 2021 ARM Limited and Contributors. </div><div class="ttdef"><b>Definition:</b> <a href="01__00__quick__start_8dox_source.xhtml#l00006">01_00_quick_start.dox:6</a></div></div>
<div class="ttc" id="namespacearmnn_xhtml_a44affeeb090c3c6a3062830562672e84"><div class="ttname"><a href="namespacearmnn.xhtml#a44affeeb090c3c6a3062830562672e84">armnn::IgnoreUnused</a></div><div class="ttdeci">void IgnoreUnused(Ts &amp;&amp;...)</div><div class="ttdef"><b>Definition:</b> <a href="_ignore_unused_8hpp_source.xhtml#l00014">IgnoreUnused.hpp:14</a></div></div>
<div class="ttc" id="classarmnn_1_1gatordmock_1_1_command_line_processor_xhtml_afc0b543e840606e43193b7d037c07c03"><div class="ttname"><a href="classarmnn_1_1gatordmock_1_1_command_line_processor.xhtml#afc0b543e840606e43193b7d037c07c03">armnn::gatordmock::CommandLineProcessor::GetCommandFile</a></div><div class="ttdeci">std::string GetCommandFile()</div><div class="ttdef"><b>Definition:</b> <a href="_command_line_processor_8hpp_source.xhtml#l00033">CommandLineProcessor.hpp:33</a></div></div>
<div class="ttc" id="classarmnn_1_1gatordmock_1_1_gatord_mock_service_xhtml_ac07351dbc304681b2efd5df4958a6735"><div class="ttname"><a href="classarmnn_1_1gatordmock_1_1_gatord_mock_service.xhtml#ac07351dbc304681b2efd5df4958a6735">armnn::gatordmock::GatordMockService::WaitForStreamMetaData</a></div><div class="ttdeci">bool WaitForStreamMetaData()</div><div class="ttdoc">Once the connection is open wait to receive the stream meta data packet from the client. </div><div class="ttdef"><b>Definition:</b> <a href="_gatord_mock_service_8cpp_source.xhtml#l00101">GatordMockService.cpp:101</a></div></div>
<div class="ttc" id="classarmnn_1_1gatordmock_1_1_command_line_processor_xhtml_a40e03b7685895e3d6fc5e45b0889f3f5"><div class="ttname"><a href="classarmnn_1_1gatordmock_1_1_command_line_processor.xhtml#a40e03b7685895e3d6fc5e45b0889f3f5">armnn::gatordmock::CommandLineProcessor::GetUdsNamespace</a></div><div class="ttdeci">std::string GetUdsNamespace()</div><div class="ttdef"><b>Definition:</b> <a href="_command_line_processor_8hpp_source.xhtml#l00029">CommandLineProcessor.hpp:29</a></div></div>
<div class="ttc" id="classarmnn_1_1gatordmock_1_1_gatord_mock_service_xhtml_a5175305569ecb4e58004e977abeff61a"><div class="ttname"><a href="classarmnn_1_1gatordmock_1_1_gatord_mock_service.xhtml#a5175305569ecb4e58004e977abeff61a">armnn::gatordmock::GatordMockService::LaunchReceivingThread</a></div><div class="ttdeci">bool LaunchReceivingThread()</div><div class="ttdoc">Start the thread that will receive all packets and print them nicely to stdout. </div><div class="ttdef"><b>Definition:</b> <a href="_gatord_mock_service_8cpp_source.xhtml#l00064">GatordMockService.cpp:64</a></div></div>
<div class="ttc" id="classarmnn_1_1gatordmock_1_1_command_line_processor_xhtml"><div class="ttname"><a href="classarmnn_1_1gatordmock_1_1_command_line_processor.xhtml">armnn::gatordmock::CommandLineProcessor</a></div><div class="ttdoc">Use Boost program options to process the command line. </div><div class="ttdef"><b>Definition:</b> <a href="_command_line_processor_8hpp_source.xhtml#l00020">CommandLineProcessor.hpp:20</a></div></div>
<div class="ttc" id="classarmnn_1_1gatordmock_1_1_gatord_mock_service_xhtml"><div class="ttname"><a href="classarmnn_1_1gatordmock_1_1_gatord_mock_service.xhtml">armnn::gatordmock::GatordMockService</a></div><div class="ttdoc">A class that implements a Mock Gatord server. </div><div class="ttdef"><b>Definition:</b> <a href="_gatord_mock_service_8hpp_source.xhtml#l00036">GatordMockService.hpp:36</a></div></div>
<div class="ttc" id="classarmnn_1_1gatordmock_1_1_command_file_parser_xhtml"><div class="ttname"><a href="classarmnn_1_1gatordmock_1_1_command_file_parser.xhtml">armnn::gatordmock::CommandFileParser</a></div><div class="ttdoc">This class parses a command file for the GatordMockService. </div><div class="ttdef"><b>Definition:</b> <a href="_command_file_parser_8hpp_source.xhtml#l00022">CommandFileParser.hpp:22</a></div></div>
<div class="ttc" id="_command_file_parser_8hpp_xhtml"><div class="ttname"><a href="_command_file_parser_8hpp.xhtml">CommandFileParser.hpp</a></div></div>
<div class="ttc" id="classarmnn_1_1gatordmock_1_1_gatord_mock_service_xhtml_a93617d8640d5e93831d06a2ef3c86bef"><div class="ttname"><a href="classarmnn_1_1gatordmock_1_1_gatord_mock_service.xhtml#a93617d8640d5e93831d06a2ef3c86bef">armnn::gatordmock::GatordMockService::WaitForReceivingThread</a></div><div class="ttdeci">void WaitForReceivingThread()</div><div class="ttdoc">This is a placeholder method to prevent main exiting. </div><div class="ttdef"><b>Definition:</b> <a href="_gatord_mock_service_8cpp_source.xhtml#l00081">GatordMockService.cpp:81</a></div></div>
<div class="ttc" id="classarmnn_1_1gatordmock_1_1_gatord_mock_service_xhtml_a41eaa65cf4e7212f09b04d06c130cd83"><div class="ttname"><a href="classarmnn_1_1gatordmock_1_1_gatord_mock_service.xhtml#a41eaa65cf4e7212f09b04d06c130cd83">armnn::gatordmock::GatordMockService::SendConnectionAck</a></div><div class="ttdeci">void SendConnectionAck()</div><div class="ttdoc">Send a connection acknowledged packet back to the client. </div><div class="ttdef"><b>Definition:</b> <a href="_gatord_mock_service_8cpp_source.xhtml#l00024">GatordMockService.cpp:24</a></div></div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="dir_59425e443f801f1f2fd8bbe4959a3ccf.xhtml">tests</a></li><li class="navelem"><a class="el" href="dir_659c7018c274c4a27f289b6765351cd5.xhtml">profiling</a></li><li class="navelem"><a class="el" href="dir_0f843ccd982e68996492857574f1c0de.xhtml">gatordmock</a></li><li class="navelem"><a class="el" href="_gatord_mock_main_8cpp.xhtml">GatordMockMain.cpp</a></li>
    <li class="footer">Generated on Fri Aug 19 2022 14:38:31 for ArmNN by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.13 </li>
  </ul>
</div>
</body>
</html>
