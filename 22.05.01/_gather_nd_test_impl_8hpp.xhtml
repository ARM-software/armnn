<!-- Copyright (c) 2020 ARM Limited. -->
<!--                                 -->
<!-- SPDX-License-Identifier: MIT    -->
<!--                                 -->
<!-- HTML header for doxygen 1.8.13-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.13"/>
<meta name="robots" content="NOINDEX, NOFOLLOW" />
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>ArmNN: src/backends/backendsCommon/test/layerTests/GatherNdTestImpl.hpp File Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script><script type="text/javascript" src="http://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="stylesheet.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <img alt="ArmNN" src="Arm_NN_horizontal_blue.png" style="max-width: 10rem; margin-top: .5rem; margin-left 10px"/>
  <td style="padding-left: 0.5em;">
   <div id="projectname">
   &#160;<span id="projectnumber">22.05.01</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.13 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
$(document).ready(function(){initNavTree('_gather_nd_test_impl_8hpp.xhtml','');});
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="summary">
<a href="#func-members">Functions</a>  </div>
  <div class="headertitle">
<div class="title">GatherNdTestImpl.hpp File Reference</div>  </div>
</div><!--header-->
<div class="contents">
<div class="textblock"><code>#include &lt;<a class="el" href="include_2armnn_test_utils_2_layer_test_result_8hpp_source.xhtml">armnnTestUtils/LayerTestResult.hpp</a>&gt;</code><br />
<code>#include &lt;<a class="el" href="_half_8hpp_source.xhtml">Half.hpp</a>&gt;</code><br />
<code>#include &lt;<a class="el" href="_resolve_type_8hpp_source.xhtml">ResolveType.hpp</a>&gt;</code><br />
<code>#include &lt;<a class="el" href="_i_backend_internal_8hpp_source.xhtml">armnn/backends/IBackendInternal.hpp</a>&gt;</code><br />
<code>#include &lt;<a class="el" href="include_2armnn_2backends_2_workload_factory_8hpp_source.xhtml">armnn/backends/WorkloadFactory.hpp</a>&gt;</code><br />
</div>
<p><a href="_gather_nd_test_impl_8hpp_source.xhtml">Go to the source code of this file.</a></p>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="func-members"></a>
Functions</h2></td></tr>
<tr class="memitem:aa3be3866bc677b81c3cfa26b0f0a582a"><td class="memTemplParams" colspan="2">template&lt;armnn::DataType ArmnnType, typename T  = armnn::ResolveType&lt;ArmnnType&gt;&gt; </td></tr>
<tr class="memitem:aa3be3866bc677b81c3cfa26b0f0a582a"><td class="memTemplItemLeft" align="right" valign="top"><a class="el" href="struct_layer_test_result.xhtml">LayerTestResult</a>&lt; T, 2 &gt;&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="_gather_nd_test_impl_8hpp.xhtml#aa3be3866bc677b81c3cfa26b0f0a582a">SimpleGatherNd2dTest</a> (<a class="el" href="classarmnn_1_1_i_workload_factory.xhtml">armnn::IWorkloadFactory</a> &amp;workloadFactory, const <a class="el" href="classarmnn_1_1_i_backend_internal.xhtml#a693b40e6b94e958836aeb0410ca186bd">armnn::IBackendInternal::IMemoryManagerSharedPtr</a> &amp;memoryManager, const <a class="el" href="classarmnn_1_1_i_tensor_handle_factory.xhtml">armnn::ITensorHandleFactory</a> &amp;tensorHandleFactory)</td></tr>
<tr class="separator:aa3be3866bc677b81c3cfa26b0f0a582a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a387db758b4b23761e3704e6c60ce4c4f"><td class="memTemplParams" colspan="2">template&lt;armnn::DataType ArmnnType, typename T  = armnn::ResolveType&lt;ArmnnType&gt;&gt; </td></tr>
<tr class="memitem:a387db758b4b23761e3704e6c60ce4c4f"><td class="memTemplItemLeft" align="right" valign="top"><a class="el" href="struct_layer_test_result.xhtml">LayerTestResult</a>&lt; T, 3 &gt;&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="_gather_nd_test_impl_8hpp.xhtml#a387db758b4b23761e3704e6c60ce4c4f">SimpleGatherNd3dTest</a> (<a class="el" href="classarmnn_1_1_i_workload_factory.xhtml">armnn::IWorkloadFactory</a> &amp;workloadFactory, const <a class="el" href="classarmnn_1_1_i_backend_internal.xhtml#a693b40e6b94e958836aeb0410ca186bd">armnn::IBackendInternal::IMemoryManagerSharedPtr</a> &amp;memoryManager, const <a class="el" href="classarmnn_1_1_i_tensor_handle_factory.xhtml">armnn::ITensorHandleFactory</a> &amp;tensorHandleFactory)</td></tr>
<tr class="separator:a387db758b4b23761e3704e6c60ce4c4f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab25ec470c15482971054caf3bed9d308"><td class="memTemplParams" colspan="2">template&lt;armnn::DataType ArmnnType, typename T  = armnn::ResolveType&lt;ArmnnType&gt;&gt; </td></tr>
<tr class="memitem:ab25ec470c15482971054caf3bed9d308"><td class="memTemplItemLeft" align="right" valign="top"><a class="el" href="struct_layer_test_result.xhtml">LayerTestResult</a>&lt; T, 4 &gt;&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="_gather_nd_test_impl_8hpp.xhtml#ab25ec470c15482971054caf3bed9d308">SimpleGatherNd4dTest</a> (<a class="el" href="classarmnn_1_1_i_workload_factory.xhtml">armnn::IWorkloadFactory</a> &amp;workloadFactory, const <a class="el" href="classarmnn_1_1_i_backend_internal.xhtml#a693b40e6b94e958836aeb0410ca186bd">armnn::IBackendInternal::IMemoryManagerSharedPtr</a> &amp;memoryManager, const <a class="el" href="classarmnn_1_1_i_tensor_handle_factory.xhtml">armnn::ITensorHandleFactory</a> &amp;tensorHandleFactory)</td></tr>
<tr class="separator:ab25ec470c15482971054caf3bed9d308"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<h2 class="groupheader">Function Documentation</h2>
<a id="aa3be3866bc677b81c3cfa26b0f0a582a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aa3be3866bc677b81c3cfa26b0f0a582a">&#9670;&nbsp;</a></span>SimpleGatherNd2dTest()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="struct_layer_test_result.xhtml">LayerTestResult</a>&lt;T, 2&gt; SimpleGatherNd2dTest </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classarmnn_1_1_i_workload_factory.xhtml">armnn::IWorkloadFactory</a> &amp;&#160;</td>
          <td class="paramname"><em>workloadFactory</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_i_backend_internal.xhtml#a693b40e6b94e958836aeb0410ca186bd">armnn::IBackendInternal::IMemoryManagerSharedPtr</a> &amp;&#160;</td>
          <td class="paramname"><em>memoryManager</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_i_tensor_handle_factory.xhtml">armnn::ITensorHandleFactory</a> &amp;&#160;</td>
          <td class="paramname"><em>tensorHandleFactory</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_gather_nd_test_impl_8cpp_source.xhtml#l00068">68</a> of file <a class="el" href="_gather_nd_test_impl_8cpp_source.xhtml">GatherNdTestImpl.cpp</a>.</p>

<p class="reference">References <a class="el" href="_tensor_8cpp_source.xhtml#l00489">TensorInfo::SetQuantizationOffset()</a>, <a class="el" href="_tensor_8cpp_source.xhtml#l00473">TensorInfo::SetQuantizationScale()</a>, and <a class="el" href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6accedffbc6e5308e33d3843e8bdc0dad7">armnn::Signed32</a>.</p>
<div class="fragment"><div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;{</div><div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;    <a class="code" href="classarmnn_1_1_tensor_info.xhtml">armnn::TensorInfo</a> paramsInfo({ 5, 2 }, ArmnnType);</div><div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;    <a class="code" href="classarmnn_1_1_tensor_info.xhtml">armnn::TensorInfo</a> indicesInfo({ 3, 1 }, <a class="code" href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6accedffbc6e5308e33d3843e8bdc0dad7">armnn::DataType::Signed32</a>);</div><div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;    <a class="code" href="classarmnn_1_1_tensor_info.xhtml">armnn::TensorInfo</a> outputInfo({ 3, 2 }, ArmnnType);</div><div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;    <span class="keywordflow">if</span> (armnn::IsQuantizedType&lt;T&gt;())</div><div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;    {</div><div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;        paramsInfo.<a class="code" href="classarmnn_1_1_tensor_info.xhtml#a685739c4eb65a580e075282cfe6787d6">SetQuantizationScale</a>(1.0f);</div><div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;        paramsInfo.SetQuantizationOffset(1);</div><div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;        outputInfo.SetQuantizationScale(1.0f);</div><div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;        outputInfo.SetQuantizationOffset(1);</div><div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;    }</div><div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;    <span class="keyword">const</span> std::vector&lt;T&gt; params = ConvertToDataType&lt;ArmnnType&gt;(</div><div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;            { 1, 2,</div><div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;              3, 4,</div><div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;              5, 6,</div><div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;              7, 8,</div><div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;              9, 10},</div><div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;            paramsInfo);</div><div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;    <span class="keyword">const</span> std::vector&lt;int32_t&gt; indices  = ConvertToDataType&lt;armnn::DataType::Signed32&gt;(</div><div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;            { 1, 0, 4},</div><div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;            indicesInfo);</div><div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;    <span class="keyword">const</span> std::vector&lt;T&gt; expectedOutput = ConvertToDataType&lt;ArmnnType&gt;(</div><div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;            { 3, 4,</div><div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;              1, 2,</div><div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;              9, 10},</div><div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;            outputInfo);</div><div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;    <span class="keywordflow">return</span> GatherNdTestImpl&lt;ArmnnType, T, 2, 2, 2&gt;(</div><div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;            workloadFactory,</div><div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;            memoryManager,</div><div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;            tensorHandleFactory,</div><div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;            paramsInfo,</div><div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;            indicesInfo,</div><div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;            outputInfo,</div><div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;            params,</div><div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;            indices,</div><div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;            expectedOutput);</div><div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;}</div><div class="ttc" id="classarmnn_1_1_tensor_info_xhtml"><div class="ttname"><a href="classarmnn_1_1_tensor_info.xhtml">armnn::TensorInfo</a></div><div class="ttdef"><b>Definition:</b> <a href="_tensor_8hpp_source.xhtml#l00152">Tensor.hpp:152</a></div></div>
<div class="ttc" id="namespacearmnn_xhtml_ad8ed01ff3ff33333d8e19db4d2818bb6accedffbc6e5308e33d3843e8bdc0dad7"><div class="ttname"><a href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6accedffbc6e5308e33d3843e8bdc0dad7">armnn::DataType::Signed32</a></div></div>
<div class="ttc" id="classarmnn_1_1_tensor_info_xhtml_a685739c4eb65a580e075282cfe6787d6"><div class="ttname"><a href="classarmnn_1_1_tensor_info.xhtml#a685739c4eb65a580e075282cfe6787d6">armnn::TensorInfo::SetQuantizationScale</a></div><div class="ttdeci">void SetQuantizationScale(float scale)</div><div class="ttdef"><b>Definition:</b> <a href="_tensor_8cpp_source.xhtml#l00473">Tensor.cpp:473</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="a387db758b4b23761e3704e6c60ce4c4f"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a387db758b4b23761e3704e6c60ce4c4f">&#9670;&nbsp;</a></span>SimpleGatherNd3dTest()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="struct_layer_test_result.xhtml">LayerTestResult</a>&lt;T, 3&gt; SimpleGatherNd3dTest </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classarmnn_1_1_i_workload_factory.xhtml">armnn::IWorkloadFactory</a> &amp;&#160;</td>
          <td class="paramname"><em>workloadFactory</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_i_backend_internal.xhtml#a693b40e6b94e958836aeb0410ca186bd">armnn::IBackendInternal::IMemoryManagerSharedPtr</a> &amp;&#160;</td>
          <td class="paramname"><em>memoryManager</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_i_tensor_handle_factory.xhtml">armnn::ITensorHandleFactory</a> &amp;&#160;</td>
          <td class="paramname"><em>tensorHandleFactory</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_gather_nd_test_impl_8cpp_source.xhtml#l00111">111</a> of file <a class="el" href="_gather_nd_test_impl_8cpp_source.xhtml">GatherNdTestImpl.cpp</a>.</p>

<p class="reference">References <a class="el" href="_tensor_8cpp_source.xhtml#l00489">TensorInfo::SetQuantizationOffset()</a>, <a class="el" href="_tensor_8cpp_source.xhtml#l00473">TensorInfo::SetQuantizationScale()</a>, and <a class="el" href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6accedffbc6e5308e33d3843e8bdc0dad7">armnn::Signed32</a>.</p>
<div class="fragment"><div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;{</div><div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;    <a class="code" href="classarmnn_1_1_tensor_info.xhtml">armnn::TensorInfo</a> paramsInfo({ 2, 3, 8, 4 }, ArmnnType);</div><div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;    <a class="code" href="classarmnn_1_1_tensor_info.xhtml">armnn::TensorInfo</a> indicesInfo({ 2, 2 }, <a class="code" href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6accedffbc6e5308e33d3843e8bdc0dad7">armnn::DataType::Signed32</a>);</div><div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;    <a class="code" href="classarmnn_1_1_tensor_info.xhtml">armnn::TensorInfo</a> outputInfo({ 2, 8, 4 }, ArmnnType);</div><div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;</div><div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;    <span class="keywordflow">if</span> (armnn::IsQuantizedType&lt;T&gt;())</div><div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;    {</div><div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;        paramsInfo.<a class="code" href="classarmnn_1_1_tensor_info.xhtml#a685739c4eb65a580e075282cfe6787d6">SetQuantizationScale</a>(1.0f);</div><div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;        paramsInfo.SetQuantizationOffset(0);</div><div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;        outputInfo.SetQuantizationScale(1.0f);</div><div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;        outputInfo.SetQuantizationOffset(0);</div><div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;    }</div><div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;    <span class="keyword">const</span> std::vector&lt;T&gt; params = ConvertToDataType&lt;ArmnnType&gt;(</div><div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;            { 0,   1,   2,   3, 4,   5,   6,   7, 8,   9,  10,  11, 12,  13,  14,  15,</div><div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;             16,  17,  18,  19, 20,  21,  22,  23, 24,  25,  26,  27, 28,  29,  30,  31,</div><div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;</div><div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;             32,  33,  34,  35, 36,  37,  38,  39, 40,  41,  42,  43, 44,  45,  46,  47,</div><div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;             48,  49,  50,  51, 52,  53,  54,  55, 56,  57,  58,  59, 60,  61,  62,  63,</div><div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;</div><div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;             64,  65,  66,  67, 68,  69,  70,  71, 72,  73,  74,  75, 76,  77,  78,  79,</div><div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;             80,  81,  82,  83, 84,  85,  86,  87, 88,  89,  90,  91, 92,  93,  94,  95,</div><div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;</div><div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;             96,  97,  98,  99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111,</div><div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;            112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127,</div><div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;</div><div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;            128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143,</div><div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;            144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159,</div><div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;</div><div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;            160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175,</div><div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;            176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191 },</div><div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;            paramsInfo);</div><div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;</div><div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;    <span class="keyword">const</span> std::vector&lt;int32_t&gt; indices  = ConvertToDataType&lt;armnn::DataType::Signed32&gt;(</div><div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;            { 1, 2, 1, 1},</div><div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;            indicesInfo);</div><div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;</div><div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;    <span class="keyword">const</span> std::vector&lt;T&gt; expectedOutput = ConvertToDataType&lt;ArmnnType&gt;(</div><div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;            { 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175,</div><div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;            176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191,</div><div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;</div><div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;            128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143,</div><div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;            144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159},</div><div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160;            outputInfo);</div><div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;</div><div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160;    <span class="keywordflow">return</span> GatherNdTestImpl&lt;ArmnnType, T, 4, 2, 3&gt;(</div><div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160;            workloadFactory,</div><div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160;            memoryManager,</div><div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160;            tensorHandleFactory,</div><div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160;            paramsInfo,</div><div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;            indicesInfo,</div><div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160;            outputInfo,</div><div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160;            params,</div><div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160;            indices,</div><div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160;            expectedOutput);</div><div class="line"><a name="l00169"></a><span class="lineno">  169</span>&#160;}</div><div class="ttc" id="classarmnn_1_1_tensor_info_xhtml"><div class="ttname"><a href="classarmnn_1_1_tensor_info.xhtml">armnn::TensorInfo</a></div><div class="ttdef"><b>Definition:</b> <a href="_tensor_8hpp_source.xhtml#l00152">Tensor.hpp:152</a></div></div>
<div class="ttc" id="namespacearmnn_xhtml_ad8ed01ff3ff33333d8e19db4d2818bb6accedffbc6e5308e33d3843e8bdc0dad7"><div class="ttname"><a href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6accedffbc6e5308e33d3843e8bdc0dad7">armnn::DataType::Signed32</a></div></div>
<div class="ttc" id="classarmnn_1_1_tensor_info_xhtml_a685739c4eb65a580e075282cfe6787d6"><div class="ttname"><a href="classarmnn_1_1_tensor_info.xhtml#a685739c4eb65a580e075282cfe6787d6">armnn::TensorInfo::SetQuantizationScale</a></div><div class="ttdeci">void SetQuantizationScale(float scale)</div><div class="ttdef"><b>Definition:</b> <a href="_tensor_8cpp_source.xhtml#l00473">Tensor.cpp:473</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="ab25ec470c15482971054caf3bed9d308"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ab25ec470c15482971054caf3bed9d308">&#9670;&nbsp;</a></span>SimpleGatherNd4dTest()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="struct_layer_test_result.xhtml">LayerTestResult</a>&lt;T, 4&gt; SimpleGatherNd4dTest </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classarmnn_1_1_i_workload_factory.xhtml">armnn::IWorkloadFactory</a> &amp;&#160;</td>
          <td class="paramname"><em>workloadFactory</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_i_backend_internal.xhtml#a693b40e6b94e958836aeb0410ca186bd">armnn::IBackendInternal::IMemoryManagerSharedPtr</a> &amp;&#160;</td>
          <td class="paramname"><em>memoryManager</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_i_tensor_handle_factory.xhtml">armnn::ITensorHandleFactory</a> &amp;&#160;</td>
          <td class="paramname"><em>tensorHandleFactory</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_gather_nd_test_impl_8cpp_source.xhtml#l00172">172</a> of file <a class="el" href="_gather_nd_test_impl_8cpp_source.xhtml">GatherNdTestImpl.cpp</a>.</p>

<p class="reference">References <a class="el" href="_tensor_8cpp_source.xhtml#l00489">TensorInfo::SetQuantizationOffset()</a>, <a class="el" href="_tensor_8cpp_source.xhtml#l00473">TensorInfo::SetQuantizationScale()</a>, and <a class="el" href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6accedffbc6e5308e33d3843e8bdc0dad7">armnn::Signed32</a>.</p>
<div class="fragment"><div class="line"><a name="l00176"></a><span class="lineno">  176</span>&#160;{</div><div class="line"><a name="l00177"></a><span class="lineno">  177</span>&#160;    <a class="code" href="classarmnn_1_1_tensor_info.xhtml">armnn::TensorInfo</a> paramsInfo({ 5, 5, 2 }, ArmnnType);</div><div class="line"><a name="l00178"></a><span class="lineno">  178</span>&#160;    <a class="code" href="classarmnn_1_1_tensor_info.xhtml">armnn::TensorInfo</a> indicesInfo({ 2, 2, 3, 2 }, <a class="code" href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6accedffbc6e5308e33d3843e8bdc0dad7">armnn::DataType::Signed32</a>);</div><div class="line"><a name="l00179"></a><span class="lineno">  179</span>&#160;    <a class="code" href="classarmnn_1_1_tensor_info.xhtml">armnn::TensorInfo</a> outputInfo({ 2, 2, 3, 2 }, ArmnnType);</div><div class="line"><a name="l00180"></a><span class="lineno">  180</span>&#160;</div><div class="line"><a name="l00181"></a><span class="lineno">  181</span>&#160;    <span class="keywordflow">if</span> (armnn::IsQuantizedType&lt;T&gt;())</div><div class="line"><a name="l00182"></a><span class="lineno">  182</span>&#160;    {</div><div class="line"><a name="l00183"></a><span class="lineno">  183</span>&#160;        paramsInfo.<a class="code" href="classarmnn_1_1_tensor_info.xhtml#a685739c4eb65a580e075282cfe6787d6">SetQuantizationScale</a>(1.0f);</div><div class="line"><a name="l00184"></a><span class="lineno">  184</span>&#160;        paramsInfo.SetQuantizationOffset(0);</div><div class="line"><a name="l00185"></a><span class="lineno">  185</span>&#160;        outputInfo.SetQuantizationScale(1.0f);</div><div class="line"><a name="l00186"></a><span class="lineno">  186</span>&#160;        outputInfo.SetQuantizationOffset(0);</div><div class="line"><a name="l00187"></a><span class="lineno">  187</span>&#160;    }</div><div class="line"><a name="l00188"></a><span class="lineno">  188</span>&#160;    <span class="keyword">const</span> std::vector&lt;T&gt; params = ConvertToDataType&lt;ArmnnType&gt;(</div><div class="line"><a name="l00189"></a><span class="lineno">  189</span>&#160;        { 0,  1,    2,  3,    4,  5,    6,  7,    8,  9,</div><div class="line"><a name="l00190"></a><span class="lineno">  190</span>&#160;         10, 11,   12,  13,   14, 15,   16, 17,   18, 19,</div><div class="line"><a name="l00191"></a><span class="lineno">  191</span>&#160;         20, 21,   22,  23,   24, 25,   26, 27,   28, 29,</div><div class="line"><a name="l00192"></a><span class="lineno">  192</span>&#160;         30, 31,   32,  33,   34, 35,   36, 37,   38, 39,</div><div class="line"><a name="l00193"></a><span class="lineno">  193</span>&#160;         40, 41,   42,  43,   44, 45,   46, 47,   48, 49 },</div><div class="line"><a name="l00194"></a><span class="lineno">  194</span>&#160;        paramsInfo);</div><div class="line"><a name="l00195"></a><span class="lineno">  195</span>&#160;</div><div class="line"><a name="l00196"></a><span class="lineno">  196</span>&#160;    <span class="keyword">const</span> std::vector&lt;int32_t&gt; indices  = ConvertToDataType&lt;armnn::DataType::Signed32&gt;(</div><div class="line"><a name="l00197"></a><span class="lineno">  197</span>&#160;        { 0, 0,</div><div class="line"><a name="l00198"></a><span class="lineno">  198</span>&#160;          3, 3,</div><div class="line"><a name="l00199"></a><span class="lineno">  199</span>&#160;          4, 4,</div><div class="line"><a name="l00200"></a><span class="lineno">  200</span>&#160;</div><div class="line"><a name="l00201"></a><span class="lineno">  201</span>&#160;          0, 0,</div><div class="line"><a name="l00202"></a><span class="lineno">  202</span>&#160;          1, 1,</div><div class="line"><a name="l00203"></a><span class="lineno">  203</span>&#160;          2, 2,</div><div class="line"><a name="l00204"></a><span class="lineno">  204</span>&#160;</div><div class="line"><a name="l00205"></a><span class="lineno">  205</span>&#160;          4, 4,</div><div class="line"><a name="l00206"></a><span class="lineno">  206</span>&#160;          3, 3,</div><div class="line"><a name="l00207"></a><span class="lineno">  207</span>&#160;          0, 0,</div><div class="line"><a name="l00208"></a><span class="lineno">  208</span>&#160;</div><div class="line"><a name="l00209"></a><span class="lineno">  209</span>&#160;          2, 2,</div><div class="line"><a name="l00210"></a><span class="lineno">  210</span>&#160;          1, 1,</div><div class="line"><a name="l00211"></a><span class="lineno">  211</span>&#160;          0, 0 },</div><div class="line"><a name="l00212"></a><span class="lineno">  212</span>&#160;        indicesInfo);</div><div class="line"><a name="l00213"></a><span class="lineno">  213</span>&#160;</div><div class="line"><a name="l00214"></a><span class="lineno">  214</span>&#160;    <span class="keyword">const</span> std::vector&lt;T&gt; expectedOutput = ConvertToDataType&lt;ArmnnType&gt;(</div><div class="line"><a name="l00215"></a><span class="lineno">  215</span>&#160;        {  0,  1,</div><div class="line"><a name="l00216"></a><span class="lineno">  216</span>&#160;          36, 37,</div><div class="line"><a name="l00217"></a><span class="lineno">  217</span>&#160;          48, 49,</div><div class="line"><a name="l00218"></a><span class="lineno">  218</span>&#160;</div><div class="line"><a name="l00219"></a><span class="lineno">  219</span>&#160;           0,  1,</div><div class="line"><a name="l00220"></a><span class="lineno">  220</span>&#160;          12, 13,</div><div class="line"><a name="l00221"></a><span class="lineno">  221</span>&#160;          24, 25,</div><div class="line"><a name="l00222"></a><span class="lineno">  222</span>&#160;</div><div class="line"><a name="l00223"></a><span class="lineno">  223</span>&#160;          48, 49,</div><div class="line"><a name="l00224"></a><span class="lineno">  224</span>&#160;          36, 37,</div><div class="line"><a name="l00225"></a><span class="lineno">  225</span>&#160;           0,  1,</div><div class="line"><a name="l00226"></a><span class="lineno">  226</span>&#160;</div><div class="line"><a name="l00227"></a><span class="lineno">  227</span>&#160;          24, 25,</div><div class="line"><a name="l00228"></a><span class="lineno">  228</span>&#160;          12, 13,</div><div class="line"><a name="l00229"></a><span class="lineno">  229</span>&#160;           0,  1 },</div><div class="line"><a name="l00230"></a><span class="lineno">  230</span>&#160;        outputInfo);</div><div class="line"><a name="l00231"></a><span class="lineno">  231</span>&#160;</div><div class="line"><a name="l00232"></a><span class="lineno">  232</span>&#160;    <span class="keywordflow">return</span> GatherNdTestImpl&lt;ArmnnType, T, 3, 4, 4&gt;(</div><div class="line"><a name="l00233"></a><span class="lineno">  233</span>&#160;            workloadFactory,</div><div class="line"><a name="l00234"></a><span class="lineno">  234</span>&#160;            memoryManager,</div><div class="line"><a name="l00235"></a><span class="lineno">  235</span>&#160;            tensorHandleFactory,</div><div class="line"><a name="l00236"></a><span class="lineno">  236</span>&#160;            paramsInfo,</div><div class="line"><a name="l00237"></a><span class="lineno">  237</span>&#160;            indicesInfo,</div><div class="line"><a name="l00238"></a><span class="lineno">  238</span>&#160;            outputInfo,</div><div class="line"><a name="l00239"></a><span class="lineno">  239</span>&#160;            params,</div><div class="line"><a name="l00240"></a><span class="lineno">  240</span>&#160;            indices,</div><div class="line"><a name="l00241"></a><span class="lineno">  241</span>&#160;            expectedOutput);</div><div class="line"><a name="l00242"></a><span class="lineno">  242</span>&#160;}</div><div class="ttc" id="classarmnn_1_1_tensor_info_xhtml"><div class="ttname"><a href="classarmnn_1_1_tensor_info.xhtml">armnn::TensorInfo</a></div><div class="ttdef"><b>Definition:</b> <a href="_tensor_8hpp_source.xhtml#l00152">Tensor.hpp:152</a></div></div>
<div class="ttc" id="namespacearmnn_xhtml_ad8ed01ff3ff33333d8e19db4d2818bb6accedffbc6e5308e33d3843e8bdc0dad7"><div class="ttname"><a href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6accedffbc6e5308e33d3843e8bdc0dad7">armnn::DataType::Signed32</a></div></div>
<div class="ttc" id="classarmnn_1_1_tensor_info_xhtml_a685739c4eb65a580e075282cfe6787d6"><div class="ttname"><a href="classarmnn_1_1_tensor_info.xhtml#a685739c4eb65a580e075282cfe6787d6">armnn::TensorInfo::SetQuantizationScale</a></div><div class="ttdeci">void SetQuantizationScale(float scale)</div><div class="ttdef"><b>Definition:</b> <a href="_tensor_8cpp_source.xhtml#l00473">Tensor.cpp:473</a></div></div>
</div><!-- fragment -->
</div>
</div>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="dir_68267d1309a1af8e8297ef4c3efbcdba.xhtml">src</a></li><li class="navelem"><a class="el" href="dir_0f3cdec46afbc61a1ded8e1687c9c9a0.xhtml">backends</a></li><li class="navelem"><a class="el" href="dir_797a213d7d01b98ef12d53b0820ea64e.xhtml">backendsCommon</a></li><li class="navelem"><a class="el" href="dir_28bfe507f7e135bdae07c2a6b7f66696.xhtml">test</a></li><li class="navelem"><a class="el" href="dir_99a30439342d160875b21dac3498ad7f.xhtml">layerTests</a></li><li class="navelem"><a class="el" href="_gather_nd_test_impl_8hpp.xhtml">GatherNdTestImpl.hpp</a></li>
    <li class="footer">Generated on Fri Jun 17 2022 13:20:26 for ArmNN by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.13 </li>
  </ul>
</div>
</body>
</html>
