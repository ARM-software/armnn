<!-- Copyright (c) 2020 ARM Limited. -->
<!--                                 -->
<!-- SPDX-License-Identifier: MIT    -->
<!--                                 -->
<!-- HTML header for doxygen 1.8.13-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.13"/>
<meta name="robots" content="NOINDEX, NOFOLLOW" />
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>ArmNN: src/profiling/test/ProfilingTestUtils.hpp Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script><script type="text/javascript" src="http://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="stylesheet.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <img alt="ArmNN" src="Arm_NN_horizontal_blue.png" style="max-width: 10rem; margin-top: .5rem; margin-left 10px"/>
  <td style="padding-left: 0.5em;">
   <div id="projectname">
   &#160;<span id="projectnumber">22.05</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.13 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
$(document).ready(function(){initNavTree('_profiling_test_utils_8hpp_source.xhtml','');});
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="headertitle">
<div class="title">ProfilingTestUtils.hpp</div>  </div>
</div><!--header-->
<div class="contents">
<a href="_profiling_test_utils_8hpp.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="comment">//</span></div><div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="comment">// Copyright Â© 2019 Arm Ltd and Contributors. All rights reserved.</span></div><div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="comment">// SPDX-License-Identifier: MIT</span></div><div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="comment">//</span></div><div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;</div><div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="preprocessor">#pragma once</span></div><div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;</div><div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_runtime_8hpp.xhtml">Runtime.hpp</a>&quot;</span></div><div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;</div><div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="preprocessor">#include &lt;client/src/BufferManager.hpp&gt;</span></div><div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;<span class="preprocessor">#include &lt;client/src/ProfilingService.hpp&gt;</span></div><div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;<span class="preprocessor">#include &lt;client/src/ProfilingUtils.hpp&gt;</span></div><div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;</div><div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;</div><div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;<span class="preprocessor">#include &lt;<a class="code" href="_arm_n_n_profiling_8hpp.xhtml">armnn/profiling/ArmNNProfiling.hpp</a>&gt;</span></div><div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;</div><div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;<span class="preprocessor">#include &lt;common/include/Optional.hpp&gt;</span></div><div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;<span class="preprocessor">#include &lt;common/include/ProfilingGuid.hpp&gt;</span></div><div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;</div><div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;<span class="keyword">using namespace </span><a class="code" href="namespacearmnn.xhtml">armnn</a>;</div><div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;<span class="keyword">using namespace </span><a class="code" href="namespacearm_1_1pipe.xhtml">arm::pipe</a>;</div><div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;</div><div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;<span class="keyword">const</span> <span class="keyword">static</span> uint32_t bodyHeaderSize = 6;</div><div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;</div><div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;uint32_t <a class="code" href="_profiling_test_utils_8hpp.xhtml#aa449021ed1a9de7abcdbd0ca903577db">GetStreamMetaDataPacketSize</a>();</div><div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;<span class="comment">/// Returns a vector of CpuRef, CpuAcc or GpuAcc backends if they where registered</span></div><div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;<span class="comment"></span>std::vector&lt;BackendId&gt; <a class="code" href="_profiling_test_utils_8hpp.xhtml#ae64165cd8af458ef4a8634c51892ef08">GetSuitableBackendRegistered</a>();</div><div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;</div><div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;<span class="keyword">inline</span> <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> <a class="code" href="_profiling_test_utils_8hpp.xhtml#a197f0ee221203c2b65fbef6e9da54941">OffsetToNextWord</a>(<span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> numberOfBytes);</div><div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;</div><div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;<span class="keywordtype">void</span> <a class="code" href="_profiling_test_utils_8hpp.xhtml#a6bd6e8ba2f989621f7348d2bb6ce13a4">VerifyTimelineHeaderBinary</a>(<span class="keyword">const</span> <span class="keywordtype">unsigned</span> <span class="keywordtype">char</span>* readableData,</div><div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;                                <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span>&amp; offset,</div><div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;                                uint32_t packetDataLength);</div><div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;</div><div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;ProfilingGuid <a class="code" href="_profiling_test_utils_8hpp.xhtml#a845d7ded3f1981b1a101c23465f99407">VerifyTimelineLabelBinaryPacketData</a>(arm::pipe::Optional&lt;ProfilingGuid&gt; guid,</div><div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;                                                  <span class="keyword">const</span> std::string&amp; label,</div><div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;                                                  <span class="keyword">const</span> <span class="keywordtype">unsigned</span> <span class="keywordtype">char</span>* readableData,</div><div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;                                                  <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span>&amp; offset);</div><div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;</div><div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;<span class="keywordtype">void</span> <a class="code" href="_profiling_test_utils_8hpp.xhtml#ae8508d42bb9bd2e705d05b921c83d2b0">VerifyTimelineEventClassBinaryPacketData</a>(ProfilingGuid guid,</div><div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;                                              ProfilingGuid nameGuid,</div><div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;                                              <span class="keyword">const</span> <span class="keywordtype">unsigned</span> <span class="keywordtype">char</span>* readableData,</div><div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;                                              <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span>&amp; offset);</div><div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;</div><div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;<span class="keywordtype">void</span> <a class="code" href="_profiling_test_utils_8hpp.xhtml#af25b6f3b19654d8d589e54e4e1404acb">VerifyTimelineRelationshipBinaryPacketData</a>(ProfilingRelationshipType relationshipType,</div><div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;                                                arm::pipe::Optional&lt;ProfilingGuid&gt; relationshipGuid,</div><div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;                                                arm::pipe::Optional&lt;ProfilingGuid&gt; headGuid,</div><div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;                                                arm::pipe::Optional&lt;ProfilingGuid&gt; tailGuid,</div><div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;                                                arm::pipe::Optional&lt;ProfilingGuid&gt; attributeGuid,</div><div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;                                                <span class="keyword">const</span> <span class="keywordtype">unsigned</span> <span class="keywordtype">char</span>* readableData,</div><div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;                                                <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span>&amp; offset);</div><div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;</div><div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;ProfilingGuid <a class="code" href="_profiling_test_utils_8hpp.xhtml#aca439c1ce381920dc07fbb20aa7ab747">VerifyTimelineEntityBinaryPacketData</a>(arm::pipe::Optional&lt;ProfilingGuid&gt; guid,</div><div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;                                                   <span class="keyword">const</span> <span class="keywordtype">unsigned</span> <span class="keywordtype">char</span>* readableData,</div><div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;                                                   <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span>&amp; offset);</div><div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;</div><div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;ProfilingGuid <a class="code" href="_profiling_test_utils_8hpp.xhtml#ac6ded51288940367b65287093e49ffa5">VerifyTimelineEventBinaryPacket</a>(arm::pipe::Optional&lt;uint64_t&gt; timestamp,</div><div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;                                              arm::pipe::Optional&lt;int&gt; threadId,</div><div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;                                              arm::pipe::Optional&lt;ProfilingGuid&gt; eventGuid,</div><div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;                                              <span class="keyword">const</span> <span class="keywordtype">unsigned</span> <span class="keywordtype">char</span>* readableData,</div><div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;                                              <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span>&amp; offset);</div><div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;</div><div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;<span class="keywordtype">void</span> <a class="code" href="_profiling_test_utils_8hpp.xhtml#a63249ab17e3797a6c5e3c187a17dbce4">VerifyPostOptimisationStructureTestImpl</a>(<a class="code" href="classarmnn_1_1_backend_id.xhtml">armnn::BackendId</a> backendId);</div><div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;</div><div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;<span class="keywordtype">bool</span> <a class="code" href="_profiling_test_utils_8hpp.xhtml#a574e305ad5b7b33c40fc025580e30dee">CompareOutput</a>(std::vector&lt;std::string&gt; output, std::vector&lt;std::string&gt; expectedOutput);</div><div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;</div><div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;<span class="keyword">namespace </span><a class="code" href="namespacearm.xhtml">arm</a></div><div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;{</div><div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;</div><div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;<span class="keyword">namespace </span>pipe</div><div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;{</div><div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;</div><div class="line"><a name="l00074"></a><span class="lineno"><a class="line" href="classarm_1_1pipe_1_1_profiling_service_runtime_helper.xhtml">   74</a></span>&#160;<span class="keyword">class </span><a class="code" href="classarm_1_1pipe_1_1_profiling_service_runtime_helper.xhtml">ProfilingServiceRuntimeHelper</a> : <span class="keyword">public</span> ProfilingService</div><div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;{</div><div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;<span class="keyword">public</span>:</div><div class="line"><a name="l00077"></a><span class="lineno"><a class="line" href="classarm_1_1pipe_1_1_profiling_service_runtime_helper.xhtml#a08ec5229bca5f4e08d63ad9db22fbc08">   77</a></span>&#160;    <a class="code" href="classarm_1_1pipe_1_1_profiling_service_runtime_helper.xhtml#a08ec5229bca5f4e08d63ad9db22fbc08">ProfilingServiceRuntimeHelper</a>(uint16_t maxGlobalCounterId,</div><div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;                                  <a class="code" href="namespacearmnn.xhtml#ac77c71a352f1e7f9fa4d9e4ceafa81d9">IInitialiseProfilingService</a>&amp; initialiser,</div><div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;                                  arm::pipe::IProfilingService&amp; profilingService)</div><div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;        : ProfilingService(maxGlobalCounterId,</div><div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;                           initialiser,</div><div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;                           <a class="code" href="namespacearm.xhtml">arm</a>::pipe::ARMNN_SOFTWARE_INFO,</div><div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;                           <a class="code" href="namespacearm.xhtml">arm</a>::pipe::ARMNN_SOFTWARE_VERSION,</div><div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;                           <a class="code" href="namespacearm.xhtml">arm</a>::pipe::ARMNN_HARDWARE_VERSION),</div><div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;          m_ProfilingService(profilingService) {}</div><div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;    ~<a class="code" href="classarm_1_1pipe_1_1_profiling_service_runtime_helper.xhtml">ProfilingServiceRuntimeHelper</a>() = <span class="keywordflow">default</span>;</div><div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;</div><div class="line"><a name="l00088"></a><span class="lineno"><a class="line" href="classarm_1_1pipe_1_1_profiling_service_runtime_helper.xhtml#a33b6add40a385911fe653ac446124deb">   88</a></span>&#160;    BufferManager&amp; <a class="code" href="classarm_1_1pipe_1_1_profiling_service_runtime_helper.xhtml#a33b6add40a385911fe653ac446124deb">GetProfilingBufferManager</a>()</div><div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;    {</div><div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;        <span class="keywordflow">return</span> GetBufferManager(static_cast&lt;arm::pipe::ProfilingService&amp;&gt;(m_ProfilingService));</div><div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;    }</div><div class="line"><a name="l00092"></a><span class="lineno"><a class="line" href="classarm_1_1pipe_1_1_profiling_service_runtime_helper.xhtml#a2a0358c96d2ca87c2738c32e29c3d774">   92</a></span>&#160;    arm::pipe::IProfilingService&amp; <a class="code" href="classarm_1_1pipe_1_1_profiling_service_runtime_helper.xhtml#a2a0358c96d2ca87c2738c32e29c3d774">m_ProfilingService</a>;</div><div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;</div><div class="line"><a name="l00094"></a><span class="lineno"><a class="line" href="classarm_1_1pipe_1_1_profiling_service_runtime_helper.xhtml#a03f72b1ccbef21ab7caafb037ce2144c">   94</a></span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classarm_1_1pipe_1_1_profiling_service_runtime_helper.xhtml#a03f72b1ccbef21ab7caafb037ce2144c">ForceTransitionToState</a>(ProfilingState newState)</div><div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;    {</div><div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;        TransitionToState(static_cast&lt;arm::pipe::ProfilingService&amp;&gt;(m_ProfilingService), newState);</div><div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;    }</div><div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;};</div><div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;</div><div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;<span class="keyword">struct </span>LogLevelSwapper</div><div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;{</div><div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;<span class="keyword">public</span>:</div><div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;    LogLevelSwapper(<a class="code" href="namespacearmnn.xhtml#a93a3ba385cad27c4774e5fe64c025d3d">arm::pipe::LogSeverity</a> severity)</div><div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;    {</div><div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;        <span class="comment">// Set the new log level</span></div><div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;        <a class="code" href="namespacearmnn.xhtml#aa59f7a819c3e29d10ffc41e5c0616872">arm::pipe::ConfigureLogging</a>(<span class="keyword">true</span>, <span class="keyword">true</span>, severity);</div><div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;    }</div><div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;    ~LogLevelSwapper()</div><div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;    {</div><div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;        <span class="comment">// The default log level for unit tests is &quot;Fatal&quot;</span></div><div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;        <a class="code" href="namespacearmnn.xhtml#aa59f7a819c3e29d10ffc41e5c0616872">arm::pipe::ConfigureLogging</a>(<span class="keyword">true</span>, <span class="keyword">true</span>, arm::pipe::LogSeverity::Fatal);</div><div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;    }</div><div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;};</div><div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;</div><div class="line"><a name="l00115"></a><span class="lineno"><a class="line" href="structarm_1_1pipe_1_1_stream_redirector.xhtml">  115</a></span>&#160;<span class="keyword">struct </span><a class="code" href="structarm_1_1pipe_1_1_stream_redirector.xhtml">StreamRedirector</a></div><div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;{</div><div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;<span class="keyword">public</span>:</div><div class="line"><a name="l00118"></a><span class="lineno"><a class="line" href="structarm_1_1pipe_1_1_stream_redirector.xhtml#a4665cd416148c6226a0214a14980cf8e">  118</a></span>&#160;    <a class="code" href="structarm_1_1pipe_1_1_stream_redirector.xhtml#a4665cd416148c6226a0214a14980cf8e">StreamRedirector</a>(std::ostream&amp; stream, std::streambuf* newStreamBuffer)</div><div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;        : m_Stream(stream)</div><div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;        , m_BackupBuffer(m_Stream.rdbuf(newStreamBuffer))</div><div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;    {}</div><div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;</div><div class="line"><a name="l00123"></a><span class="lineno"><a class="line" href="structarm_1_1pipe_1_1_stream_redirector.xhtml#a33f1ac84f2d52a4b268fa8926d7a75bd">  123</a></span>&#160;    <a class="code" href="structarm_1_1pipe_1_1_stream_redirector.xhtml#a33f1ac84f2d52a4b268fa8926d7a75bd">~StreamRedirector</a>() { CancelRedirect(); }</div><div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;</div><div class="line"><a name="l00125"></a><span class="lineno"><a class="line" href="structarm_1_1pipe_1_1_stream_redirector.xhtml#adc27fcb4c488ac39dc401a966315c24d">  125</a></span>&#160;    <span class="keywordtype">void</span> <a class="code" href="structarm_1_1pipe_1_1_stream_redirector.xhtml#adc27fcb4c488ac39dc401a966315c24d">CancelRedirect</a>()</div><div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;    {</div><div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;        <span class="comment">// Only cancel the redirect once.</span></div><div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;        <span class="keywordflow">if</span> (m_BackupBuffer != <span class="keyword">nullptr</span> )</div><div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;        {</div><div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;            m_Stream.rdbuf(m_BackupBuffer);</div><div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;            m_BackupBuffer = <span class="keyword">nullptr</span>;</div><div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;        }</div><div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;    }</div><div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;</div><div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;<span class="keyword">private</span>:</div><div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;    std::ostream&amp; m_Stream;</div><div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;    std::streambuf* m_BackupBuffer;</div><div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;};</div><div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;</div><div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;} <span class="comment">// namespace pipe</span></div><div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;</div><div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;} <span class="comment">// namespace arm</span></div><div class="ttc" id="_arm_n_n_profiling_8hpp_xhtml"><div class="ttname"><a href="_arm_n_n_profiling_8hpp.xhtml">ArmNNProfiling.hpp</a></div></div>
<div class="ttc" id="structarm_1_1pipe_1_1_stream_redirector_xhtml"><div class="ttname"><a href="structarm_1_1pipe_1_1_stream_redirector.xhtml">arm::pipe::StreamRedirector</a></div><div class="ttdef"><b>Definition:</b> <a href="_profiling_test_utils_8hpp_source.xhtml#l00115">ProfilingTestUtils.hpp:115</a></div></div>
<div class="ttc" id="classarm_1_1pipe_1_1_profiling_service_runtime_helper_xhtml_a33b6add40a385911fe653ac446124deb"><div class="ttname"><a href="classarm_1_1pipe_1_1_profiling_service_runtime_helper.xhtml#a33b6add40a385911fe653ac446124deb">arm::pipe::ProfilingServiceRuntimeHelper::GetProfilingBufferManager</a></div><div class="ttdeci">BufferManager &amp; GetProfilingBufferManager()</div><div class="ttdef"><b>Definition:</b> <a href="_profiling_test_utils_8hpp_source.xhtml#l00088">ProfilingTestUtils.hpp:88</a></div></div>
<div class="ttc" id="_profiling_test_utils_8hpp_xhtml_ac6ded51288940367b65287093e49ffa5"><div class="ttname"><a href="_profiling_test_utils_8hpp.xhtml#ac6ded51288940367b65287093e49ffa5">VerifyTimelineEventBinaryPacket</a></div><div class="ttdeci">ProfilingGuid VerifyTimelineEventBinaryPacket(arm::pipe::Optional&lt; uint64_t &gt; timestamp, arm::pipe::Optional&lt; int &gt; threadId, arm::pipe::Optional&lt; ProfilingGuid &gt; eventGuid, const unsigned char *readableData, unsigned int &amp;offset)</div><div class="ttdef"><b>Definition:</b> <a href="_profiling_test_utils_8cpp_source.xhtml#l00311">ProfilingTestUtils.cpp:311</a></div></div>
<div class="ttc" id="namespacearmnn_xhtml_aa59f7a819c3e29d10ffc41e5c0616872"><div class="ttname"><a href="namespacearmnn.xhtml#aa59f7a819c3e29d10ffc41e5c0616872">armnn::ConfigureLogging</a></div><div class="ttdeci">void ConfigureLogging(bool printToStandardOutput, bool printToDebugOutput, LogSeverity severity)</div><div class="ttdoc">Configures the logging behaviour of the ARMNN library. </div><div class="ttdef"><b>Definition:</b> <a href="_utils_8cpp_source.xhtml#l00018">Utils.cpp:18</a></div></div>
<div class="ttc" id="_runtime_8hpp_xhtml"><div class="ttname"><a href="_runtime_8hpp.xhtml">Runtime.hpp</a></div></div>
<div class="ttc" id="_profiling_test_utils_8hpp_xhtml_aca439c1ce381920dc07fbb20aa7ab747"><div class="ttname"><a href="_profiling_test_utils_8hpp.xhtml#aca439c1ce381920dc07fbb20aa7ab747">VerifyTimelineEntityBinaryPacketData</a></div><div class="ttdeci">ProfilingGuid VerifyTimelineEntityBinaryPacketData(arm::pipe::Optional&lt; ProfilingGuid &gt; guid, const unsigned char *readableData, unsigned int &amp;offset)</div><div class="ttdef"><b>Definition:</b> <a href="_profiling_test_utils_8cpp_source.xhtml#l00277">ProfilingTestUtils.cpp:277</a></div></div>
<div class="ttc" id="namespacearm_1_1pipe_xhtml"><div class="ttname"><a href="namespacearm_1_1pipe.xhtml">arm::pipe</a></div><div class="ttdef"><b>Definition:</b> <a href="_backend_registry_8hpp_source.xhtml#l00020">BackendRegistry.hpp:20</a></div></div>
<div class="ttc" id="_profiling_test_utils_8hpp_xhtml_a197f0ee221203c2b65fbef6e9da54941"><div class="ttname"><a href="_profiling_test_utils_8hpp.xhtml#a197f0ee221203c2b65fbef6e9da54941">OffsetToNextWord</a></div><div class="ttdeci">unsigned int OffsetToNextWord(unsigned int numberOfBytes)</div><div class="ttdef"><b>Definition:</b> <a href="_profiling_test_utils_8cpp_source.xhtml#l00064">ProfilingTestUtils.cpp:64</a></div></div>
<div class="ttc" id="_profiling_test_utils_8hpp_xhtml_aa449021ed1a9de7abcdbd0ca903577db"><div class="ttname"><a href="_profiling_test_utils_8hpp.xhtml#aa449021ed1a9de7abcdbd0ca903577db">GetStreamMetaDataPacketSize</a></div><div class="ttdeci">uint32_t GetStreamMetaDataPacketSize()</div><div class="ttdef"><b>Definition:</b> <a href="_profiling_test_utils_8cpp_source.xhtml#l00026">ProfilingTestUtils.cpp:26</a></div></div>
<div class="ttc" id="_profiling_test_utils_8hpp_xhtml_a63249ab17e3797a6c5e3c187a17dbce4"><div class="ttname"><a href="_profiling_test_utils_8hpp.xhtml#a63249ab17e3797a6c5e3c187a17dbce4">VerifyPostOptimisationStructureTestImpl</a></div><div class="ttdeci">void VerifyPostOptimisationStructureTestImpl(armnn::BackendId backendId)</div><div class="ttdef"><b>Definition:</b> <a href="_profiling_test_utils_8cpp_source.xhtml#l00371">ProfilingTestUtils.cpp:371</a></div></div>
<div class="ttc" id="namespacearmnn_xhtml_ac77c71a352f1e7f9fa4d9e4ceafa81d9"><div class="ttname"><a href="namespacearmnn.xhtml#ac77c71a352f1e7f9fa4d9e4ceafa81d9">armnn::IInitialiseProfilingService</a></div><div class="ttdeci">arm::pipe::IInitialiseProfilingService IInitialiseProfilingService</div><div class="ttdef"><b>Definition:</b> <a href="_runtime_8hpp_source.xhtml#l00028">Runtime.hpp:28</a></div></div>
<div class="ttc" id="namespacearmnn_xhtml"><div class="ttname"><a href="namespacearmnn.xhtml">armnn</a></div><div class="ttdoc">Copyright (c) 2021 ARM Limited and Contributors. </div><div class="ttdef"><b>Definition:</b> <a href="01__00__quick__start_8dox_source.xhtml#l00006">01_00_quick_start.dox:6</a></div></div>
<div class="ttc" id="structarm_1_1pipe_1_1_stream_redirector_xhtml_adc27fcb4c488ac39dc401a966315c24d"><div class="ttname"><a href="structarm_1_1pipe_1_1_stream_redirector.xhtml#adc27fcb4c488ac39dc401a966315c24d">arm::pipe::StreamRedirector::CancelRedirect</a></div><div class="ttdeci">void CancelRedirect()</div><div class="ttdef"><b>Definition:</b> <a href="_profiling_test_utils_8hpp_source.xhtml#l00125">ProfilingTestUtils.hpp:125</a></div></div>
<div class="ttc" id="structarm_1_1pipe_1_1_stream_redirector_xhtml_a4665cd416148c6226a0214a14980cf8e"><div class="ttname"><a href="structarm_1_1pipe_1_1_stream_redirector.xhtml#a4665cd416148c6226a0214a14980cf8e">arm::pipe::StreamRedirector::StreamRedirector</a></div><div class="ttdeci">StreamRedirector(std::ostream &amp;stream, std::streambuf *newStreamBuffer)</div><div class="ttdef"><b>Definition:</b> <a href="_profiling_test_utils_8hpp_source.xhtml#l00118">ProfilingTestUtils.hpp:118</a></div></div>
<div class="ttc" id="_profiling_test_utils_8hpp_xhtml_af25b6f3b19654d8d589e54e4e1404acb"><div class="ttname"><a href="_profiling_test_utils_8hpp.xhtml#af25b6f3b19654d8d589e54e4e1404acb">VerifyTimelineRelationshipBinaryPacketData</a></div><div class="ttdeci">void VerifyTimelineRelationshipBinaryPacketData(ProfilingRelationshipType relationshipType, arm::pipe::Optional&lt; ProfilingGuid &gt; relationshipGuid, arm::pipe::Optional&lt; ProfilingGuid &gt; headGuid, arm::pipe::Optional&lt; ProfilingGuid &gt; tailGuid, arm::pipe::Optional&lt; ProfilingGuid &gt; attributeGuid, const unsigned char *readableData, unsigned int &amp;offset)</div><div class="ttdef"><b>Definition:</b> <a href="_profiling_test_utils_8cpp_source.xhtml#l00183">ProfilingTestUtils.cpp:183</a></div></div>
<div class="ttc" id="_profiling_test_utils_8hpp_xhtml_ae64165cd8af458ef4a8634c51892ef08"><div class="ttname"><a href="_profiling_test_utils_8hpp.xhtml#ae64165cd8af458ef4a8634c51892ef08">GetSuitableBackendRegistered</a></div><div class="ttdeci">std::vector&lt; BackendId &gt; GetSuitableBackendRegistered()</div><div class="ttdoc">Returns a vector of CpuRef, CpuAcc or GpuAcc backends if they where registered. </div><div class="ttdef"><b>Definition:</b> <a href="_profiling_test_utils_8cpp_source.xhtml#l00046">ProfilingTestUtils.cpp:46</a></div></div>
<div class="ttc" id="_profiling_test_utils_8hpp_xhtml_a574e305ad5b7b33c40fc025580e30dee"><div class="ttname"><a href="_profiling_test_utils_8hpp.xhtml#a574e305ad5b7b33c40fc025580e30dee">CompareOutput</a></div><div class="ttdeci">bool CompareOutput(std::vector&lt; std::string &gt; output, std::vector&lt; std::string &gt; expectedOutput)</div><div class="ttdef"><b>Definition:</b> <a href="_profiling_test_utils_8cpp_source.xhtml#l01483">ProfilingTestUtils.cpp:1483</a></div></div>
<div class="ttc" id="_profiling_test_utils_8hpp_xhtml_a6bd6e8ba2f989621f7348d2bb6ce13a4"><div class="ttname"><a href="_profiling_test_utils_8hpp.xhtml#a6bd6e8ba2f989621f7348d2bb6ce13a4">VerifyTimelineHeaderBinary</a></div><div class="ttdeci">void VerifyTimelineHeaderBinary(const unsigned char *readableData, unsigned int &amp;offset, uint32_t packetDataLength)</div><div class="ttdef"><b>Definition:</b> <a href="_profiling_test_utils_8cpp_source.xhtml#l00077">ProfilingTestUtils.cpp:77</a></div></div>
<div class="ttc" id="namespacearm_xhtml"><div class="ttname"><a href="namespacearm.xhtml">arm</a></div><div class="ttdef"><b>Definition:</b> <a href="_backend_registry_8hpp_source.xhtml#l00018">BackendRegistry.hpp:18</a></div></div>
<div class="ttc" id="_profiling_test_utils_8hpp_xhtml_a845d7ded3f1981b1a101c23465f99407"><div class="ttname"><a href="_profiling_test_utils_8hpp.xhtml#a845d7ded3f1981b1a101c23465f99407">VerifyTimelineLabelBinaryPacketData</a></div><div class="ttdeci">ProfilingGuid VerifyTimelineLabelBinaryPacketData(arm::pipe::Optional&lt; ProfilingGuid &gt; guid, const std::string &amp;label, const unsigned char *readableData, unsigned int &amp;offset)</div><div class="ttdef"><b>Definition:</b> <a href="_profiling_test_utils_8cpp_source.xhtml#l00105">ProfilingTestUtils.cpp:105</a></div></div>
<div class="ttc" id="classarm_1_1pipe_1_1_profiling_service_runtime_helper_xhtml_a03f72b1ccbef21ab7caafb037ce2144c"><div class="ttname"><a href="classarm_1_1pipe_1_1_profiling_service_runtime_helper.xhtml#a03f72b1ccbef21ab7caafb037ce2144c">arm::pipe::ProfilingServiceRuntimeHelper::ForceTransitionToState</a></div><div class="ttdeci">void ForceTransitionToState(ProfilingState newState)</div><div class="ttdef"><b>Definition:</b> <a href="_profiling_test_utils_8hpp_source.xhtml#l00094">ProfilingTestUtils.hpp:94</a></div></div>
<div class="ttc" id="classarm_1_1pipe_1_1_profiling_service_runtime_helper_xhtml"><div class="ttname"><a href="classarm_1_1pipe_1_1_profiling_service_runtime_helper.xhtml">arm::pipe::ProfilingServiceRuntimeHelper</a></div><div class="ttdef"><b>Definition:</b> <a href="_profiling_test_utils_8hpp_source.xhtml#l00074">ProfilingTestUtils.hpp:74</a></div></div>
<div class="ttc" id="structarm_1_1pipe_1_1_stream_redirector_xhtml_a33f1ac84f2d52a4b268fa8926d7a75bd"><div class="ttname"><a href="structarm_1_1pipe_1_1_stream_redirector.xhtml#a33f1ac84f2d52a4b268fa8926d7a75bd">arm::pipe::StreamRedirector::~StreamRedirector</a></div><div class="ttdeci">~StreamRedirector()</div><div class="ttdef"><b>Definition:</b> <a href="_profiling_test_utils_8hpp_source.xhtml#l00123">ProfilingTestUtils.hpp:123</a></div></div>
<div class="ttc" id="namespacearmnn_xhtml_a93a3ba385cad27c4774e5fe64c025d3d"><div class="ttname"><a href="namespacearmnn.xhtml#a93a3ba385cad27c4774e5fe64c025d3d">armnn::LogSeverity</a></div><div class="ttdeci">LogSeverity</div><div class="ttdef"><b>Definition:</b> <a href="_utils_8hpp_source.xhtml#l00014">Utils.hpp:14</a></div></div>
<div class="ttc" id="classarm_1_1pipe_1_1_profiling_service_runtime_helper_xhtml_a2a0358c96d2ca87c2738c32e29c3d774"><div class="ttname"><a href="classarm_1_1pipe_1_1_profiling_service_runtime_helper.xhtml#a2a0358c96d2ca87c2738c32e29c3d774">arm::pipe::ProfilingServiceRuntimeHelper::m_ProfilingService</a></div><div class="ttdeci">arm::pipe::IProfilingService &amp; m_ProfilingService</div><div class="ttdef"><b>Definition:</b> <a href="_profiling_test_utils_8hpp_source.xhtml#l00092">ProfilingTestUtils.hpp:92</a></div></div>
<div class="ttc" id="classarm_1_1pipe_1_1_profiling_service_runtime_helper_xhtml_a08ec5229bca5f4e08d63ad9db22fbc08"><div class="ttname"><a href="classarm_1_1pipe_1_1_profiling_service_runtime_helper.xhtml#a08ec5229bca5f4e08d63ad9db22fbc08">arm::pipe::ProfilingServiceRuntimeHelper::ProfilingServiceRuntimeHelper</a></div><div class="ttdeci">ProfilingServiceRuntimeHelper(uint16_t maxGlobalCounterId, IInitialiseProfilingService &amp;initialiser, arm::pipe::IProfilingService &amp;profilingService)</div><div class="ttdef"><b>Definition:</b> <a href="_profiling_test_utils_8hpp_source.xhtml#l00077">ProfilingTestUtils.hpp:77</a></div></div>
<div class="ttc" id="classarmnn_1_1_backend_id_xhtml"><div class="ttname"><a href="classarmnn_1_1_backend_id.xhtml">armnn::BackendId</a></div><div class="ttdef"><b>Definition:</b> <a href="_backend_id_8hpp_source.xhtml#l00075">BackendId.hpp:75</a></div></div>
<div class="ttc" id="_profiling_test_utils_8hpp_xhtml_ae8508d42bb9bd2e705d05b921c83d2b0"><div class="ttname"><a href="_profiling_test_utils_8hpp.xhtml#ae8508d42bb9bd2e705d05b921c83d2b0">VerifyTimelineEventClassBinaryPacketData</a></div><div class="ttdeci">void VerifyTimelineEventClassBinaryPacketData(ProfilingGuid guid, ProfilingGuid nameGuid, const unsigned char *readableData, unsigned int &amp;offset)</div><div class="ttdef"><b>Definition:</b> <a href="_profiling_test_utils_8cpp_source.xhtml#l00155">ProfilingTestUtils.cpp:155</a></div></div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="dir_68267d1309a1af8e8297ef4c3efbcdba.xhtml">src</a></li><li class="navelem"><a class="el" href="dir_637c692f14729569dd2eac0c18e2a54a.xhtml">profiling</a></li><li class="navelem"><a class="el" href="dir_6b1198f6e738611120ec65b09506d2f8.xhtml">test</a></li><li class="navelem"><a class="el" href="_profiling_test_utils_8hpp.xhtml">ProfilingTestUtils.hpp</a></li>
    <li class="footer">Generated on Tue May 24 2022 11:27:15 for ArmNN by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.13 </li>
  </ul>
</div>
</body>
</html>
