<!-- Copyright (c) 2020 ARM Limited. -->
<!--                                 -->
<!-- SPDX-License-Identifier: MIT    -->
<!--                                 -->
<!-- HTML header for doxygen 1.8.13-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.13"/>
<meta name="robots" content="NOINDEX, NOFOLLOW" />
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>ArmNN: src/backends/backendsCommon/test/layerTests/Conv2dTestImpl.hpp File Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script><script type="text/javascript" src="http://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="stylesheet.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <img alt="ArmNN" src="Arm_NN_horizontal_blue.png" style="max-width: 10rem; margin-top: .5rem; margin-left 10px"/>
  <td style="padding-left: 0.5em;">
   <div id="projectname">
   &#160;<span id="projectnumber">22.05</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.13 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
$(document).ready(function(){initNavTree('_conv2d_test_impl_8hpp.xhtml','');});
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="summary">
<a href="#func-members">Functions</a>  </div>
  <div class="headertitle">
<div class="title">Conv2dTestImpl.hpp File Reference</div>  </div>
</div><!--header-->
<div class="contents">
<div class="textblock"><code>#include &lt;<a class="el" href="include_2armnn_test_utils_2_layer_test_result_8hpp_source.xhtml">armnnTestUtils/LayerTestResult.hpp</a>&gt;</code><br />
<code>#include &lt;<a class="el" href="_resolve_type_8hpp_source.xhtml">ResolveType.hpp</a>&gt;</code><br />
<code>#include &lt;<a class="el" href="_types_8hpp_source.xhtml">armnn/Types.hpp</a>&gt;</code><br />
<code>#include &lt;<a class="el" href="_i_backend_internal_8hpp_source.xhtml">armnn/backends/IBackendInternal.hpp</a>&gt;</code><br />
<code>#include &lt;<a class="el" href="include_2armnn_2backends_2_workload_factory_8hpp_source.xhtml">armnn/backends/WorkloadFactory.hpp</a>&gt;</code><br />
</div>
<p><a href="_conv2d_test_impl_8hpp_source.xhtml">Go to the source code of this file.</a></p>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="func-members"></a>
Functions</h2></td></tr>
<tr class="memitem:a0192d5e1143e77fb9c07f43cac008aa5"><td class="memTemplParams" colspan="2">template&lt;armnn::DataType ArmnnType, armnn::DataType ArmnnBType, typename T  = armnn::ResolveType&lt;ArmnnType&gt;&gt; </td></tr>
<tr class="memitem:a0192d5e1143e77fb9c07f43cac008aa5"><td class="memTemplItemLeft" align="right" valign="top"><a class="el" href="struct_layer_test_result.xhtml">LayerTestResult</a>&lt; T, 4 &gt;&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="_conv2d_test_impl_8hpp.xhtml#a0192d5e1143e77fb9c07f43cac008aa5">Convolution2d3x3Dilation3x3Test</a> (<a class="el" href="classarmnn_1_1_i_workload_factory.xhtml">armnn::IWorkloadFactory</a> &amp;workloadFactory, const <a class="el" href="classarmnn_1_1_i_backend_internal.xhtml#a693b40e6b94e958836aeb0410ca186bd">armnn::IBackendInternal::IMemoryManagerSharedPtr</a> &amp;memoryManager, const <a class="el" href="classarmnn_1_1_i_tensor_handle_factory.xhtml">armnn::ITensorHandleFactory</a> &amp;tensorHandleFactory, bool biasEnabled, const <a class="el" href="namespacearmnn.xhtml#ad1d5cce2d9e9a5d61c243e5c989112e0">armnn::DataLayout</a> layout)</td></tr>
<tr class="separator:a0192d5e1143e77fb9c07f43cac008aa5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a24ba5e372ff9e8c7603cd380d3673bff"><td class="memTemplParams" colspan="2">template&lt;armnn::DataType ArmnnType, armnn::DataType ArmnnBType, typename T  = armnn::ResolveType&lt;ArmnnType&gt;&gt; </td></tr>
<tr class="memitem:a24ba5e372ff9e8c7603cd380d3673bff"><td class="memTemplItemLeft" align="right" valign="top"><a class="el" href="struct_layer_test_result.xhtml">LayerTestResult</a>&lt; T, 4 &gt;&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="_conv2d_test_impl_8hpp.xhtml#a24ba5e372ff9e8c7603cd380d3673bff">Convolution2d2x3x3Dilation3x3Test</a> (<a class="el" href="classarmnn_1_1_i_workload_factory.xhtml">armnn::IWorkloadFactory</a> &amp;workloadFactory, const <a class="el" href="classarmnn_1_1_i_backend_internal.xhtml#a693b40e6b94e958836aeb0410ca186bd">armnn::IBackendInternal::IMemoryManagerSharedPtr</a> &amp;memoryManager, const <a class="el" href="classarmnn_1_1_i_tensor_handle_factory.xhtml">armnn::ITensorHandleFactory</a> &amp;tensorHandleFactory, bool biasEnabled, const <a class="el" href="namespacearmnn.xhtml#ad1d5cce2d9e9a5d61c243e5c989112e0">armnn::DataLayout</a> layout)</td></tr>
<tr class="separator:a24ba5e372ff9e8c7603cd380d3673bff"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a130df3a88eb9a5bf1aaec61642a702d0"><td class="memTemplParams" colspan="2">template&lt;armnn::DataType ArmnnType, armnn::DataType ArmnnBType, typename T  = armnn::ResolveType&lt;ArmnnType&gt;&gt; </td></tr>
<tr class="memitem:a130df3a88eb9a5bf1aaec61642a702d0"><td class="memTemplItemLeft" align="right" valign="top"><a class="el" href="struct_layer_test_result.xhtml">LayerTestResult</a>&lt; T, 4 &gt;&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="_conv2d_test_impl_8hpp.xhtml#a130df3a88eb9a5bf1aaec61642a702d0">Convolution2d2x2Dilation2x2Padding2x2Stride3x3Test</a> (<a class="el" href="classarmnn_1_1_i_workload_factory.xhtml">armnn::IWorkloadFactory</a> &amp;workloadFactory, const <a class="el" href="classarmnn_1_1_i_backend_internal.xhtml#a693b40e6b94e958836aeb0410ca186bd">armnn::IBackendInternal::IMemoryManagerSharedPtr</a> &amp;memoryManager, const <a class="el" href="classarmnn_1_1_i_tensor_handle_factory.xhtml">armnn::ITensorHandleFactory</a> &amp;tensorHandleFactory, bool biasEnabled, const <a class="el" href="namespacearmnn.xhtml#ad1d5cce2d9e9a5d61c243e5c989112e0">armnn::DataLayout</a> layout)</td></tr>
<tr class="separator:a130df3a88eb9a5bf1aaec61642a702d0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af541c93dcb094c01b52b99658704c500"><td class="memItemLeft" align="right" valign="top"><a class="el" href="struct_layer_test_result.xhtml">LayerTestResult</a>&lt; float, 4 &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_conv2d_test_impl_8hpp.xhtml#af541c93dcb094c01b52b99658704c500">SimpleConvolution2d3x5Test</a> (<a class="el" href="classarmnn_1_1_i_workload_factory.xhtml">armnn::IWorkloadFactory</a> &amp;workloadFactory, const <a class="el" href="classarmnn_1_1_i_backend_internal.xhtml#a693b40e6b94e958836aeb0410ca186bd">armnn::IBackendInternal::IMemoryManagerSharedPtr</a> &amp;memoryManager, const <a class="el" href="classarmnn_1_1_i_tensor_handle_factory.xhtml">armnn::ITensorHandleFactory</a> &amp;tensorHandleFactory, bool biasEnabled, const <a class="el" href="namespacearmnn.xhtml#ad1d5cce2d9e9a5d61c243e5c989112e0">armnn::DataLayout</a> layout)</td></tr>
<tr class="separator:af541c93dcb094c01b52b99658704c500"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1c22cdfa99117a1cdbc4b25064fd4c25"><td class="memItemLeft" align="right" valign="top"><a class="el" href="struct_layer_test_result.xhtml">LayerTestResult</a>&lt; float, 4 &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_conv2d_test_impl_8hpp.xhtml#a1c22cdfa99117a1cdbc4b25064fd4c25">SimpleConvolution2d3x3Test</a> (<a class="el" href="classarmnn_1_1_i_workload_factory.xhtml">armnn::IWorkloadFactory</a> &amp;workloadFactory, const <a class="el" href="classarmnn_1_1_i_backend_internal.xhtml#a693b40e6b94e958836aeb0410ca186bd">armnn::IBackendInternal::IMemoryManagerSharedPtr</a> &amp;memoryManager, const <a class="el" href="classarmnn_1_1_i_tensor_handle_factory.xhtml">armnn::ITensorHandleFactory</a> &amp;tensorHandleFactory, bool biasEnabled, const <a class="el" href="namespacearmnn.xhtml#ad1d5cce2d9e9a5d61c243e5c989112e0">armnn::DataLayout</a> layout)</td></tr>
<tr class="separator:a1c22cdfa99117a1cdbc4b25064fd4c25"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad232d77972b88a751dbf6ecd594b0faa"><td class="memItemLeft" align="right" valign="top"><a class="el" href="struct_layer_test_result.xhtml">LayerTestResult</a>&lt; float, 4 &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_conv2d_test_impl_8hpp.xhtml#ad232d77972b88a751dbf6ecd594b0faa">SimpleConvolution2d3x3Stride2x2Test</a> (<a class="el" href="classarmnn_1_1_i_workload_factory.xhtml">armnn::IWorkloadFactory</a> &amp;workloadFactory, const <a class="el" href="classarmnn_1_1_i_backend_internal.xhtml#a693b40e6b94e958836aeb0410ca186bd">armnn::IBackendInternal::IMemoryManagerSharedPtr</a> &amp;memoryManager, const <a class="el" href="classarmnn_1_1_i_tensor_handle_factory.xhtml">armnn::ITensorHandleFactory</a> &amp;tensorHandleFactory, bool biasEnabled, const <a class="el" href="namespacearmnn.xhtml#ad1d5cce2d9e9a5d61c243e5c989112e0">armnn::DataLayout</a> layout)</td></tr>
<tr class="separator:ad232d77972b88a751dbf6ecd594b0faa"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4d3ce31fe572451e18fea5add8543bf4"><td class="memItemLeft" align="right" valign="top"><a class="el" href="struct_layer_test_result.xhtml">LayerTestResult</a>&lt; float, 4 &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_conv2d_test_impl_8hpp.xhtml#a4d3ce31fe572451e18fea5add8543bf4">SimpleConvolution2d3x3NhwcTest</a> (<a class="el" href="classarmnn_1_1_i_workload_factory.xhtml">armnn::IWorkloadFactory</a> &amp;workloadFactory, const <a class="el" href="classarmnn_1_1_i_backend_internal.xhtml#a693b40e6b94e958836aeb0410ca186bd">armnn::IBackendInternal::IMemoryManagerSharedPtr</a> &amp;memoryManager, const <a class="el" href="classarmnn_1_1_i_tensor_handle_factory.xhtml">armnn::ITensorHandleFactory</a> &amp;tensorHandleFactory, bool biasEnabled)</td></tr>
<tr class="separator:a4d3ce31fe572451e18fea5add8543bf4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a10aae8f4c0c56c2c3574ca9ddf61a7af"><td class="memItemLeft" align="right" valign="top"><a class="el" href="struct_layer_test_result.xhtml">LayerTestResult</a>&lt; uint8_t, 4 &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_conv2d_test_impl_8hpp.xhtml#a10aae8f4c0c56c2c3574ca9ddf61a7af">SimpleConvolution2d3x5Uint8Test</a> (<a class="el" href="classarmnn_1_1_i_workload_factory.xhtml">armnn::IWorkloadFactory</a> &amp;workloadFactory, const <a class="el" href="classarmnn_1_1_i_backend_internal.xhtml#a693b40e6b94e958836aeb0410ca186bd">armnn::IBackendInternal::IMemoryManagerSharedPtr</a> &amp;memoryManager, const <a class="el" href="classarmnn_1_1_i_tensor_handle_factory.xhtml">armnn::ITensorHandleFactory</a> &amp;tensorHandleFactory, bool biasEnabled, const <a class="el" href="namespacearmnn.xhtml#ad1d5cce2d9e9a5d61c243e5c989112e0">armnn::DataLayout</a> layout)</td></tr>
<tr class="separator:a10aae8f4c0c56c2c3574ca9ddf61a7af"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9966f7b9070f4eb34deeb8fc3cb3d277"><td class="memItemLeft" align="right" valign="top"><a class="el" href="struct_layer_test_result.xhtml">LayerTestResult</a>&lt; uint8_t, 4 &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_conv2d_test_impl_8hpp.xhtml#a9966f7b9070f4eb34deeb8fc3cb3d277">SimpleConvolution2d3x3Uint8Test</a> (<a class="el" href="classarmnn_1_1_i_workload_factory.xhtml">armnn::IWorkloadFactory</a> &amp;workloadFactory, const <a class="el" href="classarmnn_1_1_i_backend_internal.xhtml#a693b40e6b94e958836aeb0410ca186bd">armnn::IBackendInternal::IMemoryManagerSharedPtr</a> &amp;memoryManager, const <a class="el" href="classarmnn_1_1_i_tensor_handle_factory.xhtml">armnn::ITensorHandleFactory</a> &amp;tensorHandleFactory, bool biasEnabled, const <a class="el" href="namespacearmnn.xhtml#ad1d5cce2d9e9a5d61c243e5c989112e0">armnn::DataLayout</a> layout)</td></tr>
<tr class="separator:a9966f7b9070f4eb34deeb8fc3cb3d277"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0f6ba53d8a3801fd33288c8a88a55902"><td class="memItemLeft" align="right" valign="top"><a class="el" href="struct_layer_test_result.xhtml">LayerTestResult</a>&lt; int16_t, 4 &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_conv2d_test_impl_8hpp.xhtml#a0f6ba53d8a3801fd33288c8a88a55902">SimpleConvolution2d3x5QSymm16Test</a> (<a class="el" href="classarmnn_1_1_i_workload_factory.xhtml">armnn::IWorkloadFactory</a> &amp;workloadFactory, const <a class="el" href="classarmnn_1_1_i_backend_internal.xhtml#a693b40e6b94e958836aeb0410ca186bd">armnn::IBackendInternal::IMemoryManagerSharedPtr</a> &amp;memoryManager, const <a class="el" href="classarmnn_1_1_i_tensor_handle_factory.xhtml">armnn::ITensorHandleFactory</a> &amp;tensorHandleFactory, bool biasEnabled, const <a class="el" href="namespacearmnn.xhtml#ad1d5cce2d9e9a5d61c243e5c989112e0">armnn::DataLayout</a> layout)</td></tr>
<tr class="separator:a0f6ba53d8a3801fd33288c8a88a55902"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aebd160fb0c5f5662a1cbaec5974c13ea"><td class="memItemLeft" align="right" valign="top"><a class="el" href="struct_layer_test_result.xhtml">LayerTestResult</a>&lt; int16_t, 4 &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_conv2d_test_impl_8hpp.xhtml#aebd160fb0c5f5662a1cbaec5974c13ea">SimpleConvolution2d3x3QSymm16Test</a> (<a class="el" href="classarmnn_1_1_i_workload_factory.xhtml">armnn::IWorkloadFactory</a> &amp;workloadFactory, const <a class="el" href="classarmnn_1_1_i_backend_internal.xhtml#a693b40e6b94e958836aeb0410ca186bd">armnn::IBackendInternal::IMemoryManagerSharedPtr</a> &amp;memoryManager, const <a class="el" href="classarmnn_1_1_i_tensor_handle_factory.xhtml">armnn::ITensorHandleFactory</a> &amp;tensorHandleFactory, bool biasEnabled, const <a class="el" href="namespacearmnn.xhtml#ad1d5cce2d9e9a5d61c243e5c989112e0">armnn::DataLayout</a> layout)</td></tr>
<tr class="separator:aebd160fb0c5f5662a1cbaec5974c13ea"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab1b3e3dfbd3807989911b05b5830f7ea"><td class="memItemLeft" align="right" valign="top"><a class="el" href="struct_layer_test_result.xhtml">LayerTestResult</a>&lt; float, 4 &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_conv2d_test_impl_8hpp.xhtml#ab1b3e3dfbd3807989911b05b5830f7ea">Convolution2dAsymmetricPaddingLargerThanHalfKernelSizeTest</a> (<a class="el" href="classarmnn_1_1_i_workload_factory.xhtml">armnn::IWorkloadFactory</a> &amp;workloadFactory, const <a class="el" href="classarmnn_1_1_i_backend_internal.xhtml#a693b40e6b94e958836aeb0410ca186bd">armnn::IBackendInternal::IMemoryManagerSharedPtr</a> &amp;memoryManager, const <a class="el" href="classarmnn_1_1_i_tensor_handle_factory.xhtml">armnn::ITensorHandleFactory</a> &amp;tensorHandleFactory, <a class="el" href="namespacearmnn.xhtml#ad1d5cce2d9e9a5d61c243e5c989112e0">armnn::DataLayout</a> layout)</td></tr>
<tr class="separator:ab1b3e3dfbd3807989911b05b5830f7ea"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0431327604bbd8051635e8ebd215e620"><td class="memItemLeft" align="right" valign="top"><a class="el" href="struct_layer_test_result.xhtml">LayerTestResult</a>&lt; float, 4 &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_conv2d_test_impl_8hpp.xhtml#a0431327604bbd8051635e8ebd215e620">Convolution2dAsymmetricPaddingTest</a> (<a class="el" href="classarmnn_1_1_i_workload_factory.xhtml">armnn::IWorkloadFactory</a> &amp;workloadFactory, const <a class="el" href="classarmnn_1_1_i_backend_internal.xhtml#a693b40e6b94e958836aeb0410ca186bd">armnn::IBackendInternal::IMemoryManagerSharedPtr</a> &amp;memoryManager, const <a class="el" href="classarmnn_1_1_i_tensor_handle_factory.xhtml">armnn::ITensorHandleFactory</a> &amp;tensorHandleFactory, <a class="el" href="namespacearmnn.xhtml#ad1d5cce2d9e9a5d61c243e5c989112e0">armnn::DataLayout</a> layout)</td></tr>
<tr class="separator:a0431327604bbd8051635e8ebd215e620"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7fde274ea5d168e2941e90ff6475262b"><td class="memItemLeft" align="right" valign="top"><a class="el" href="struct_layer_test_result.xhtml">LayerTestResult</a>&lt; float, 4 &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_conv2d_test_impl_8hpp.xhtml#a7fde274ea5d168e2941e90ff6475262b">Convolution1dTest</a> (<a class="el" href="classarmnn_1_1_i_workload_factory.xhtml">armnn::IWorkloadFactory</a> &amp;workloadFactory, const <a class="el" href="classarmnn_1_1_i_backend_internal.xhtml#a693b40e6b94e958836aeb0410ca186bd">armnn::IBackendInternal::IMemoryManagerSharedPtr</a> &amp;memoryManager, const <a class="el" href="classarmnn_1_1_i_tensor_handle_factory.xhtml">armnn::ITensorHandleFactory</a> &amp;tensorHandleFactory, bool biasEnabled)</td></tr>
<tr class="separator:a7fde274ea5d168e2941e90ff6475262b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2a6493bf0e6583e7d0535f6d01323bfc"><td class="memItemLeft" align="right" valign="top"><a class="el" href="struct_layer_test_result.xhtml">LayerTestResult</a>&lt; uint8_t, 4 &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_conv2d_test_impl_8hpp.xhtml#a2a6493bf0e6583e7d0535f6d01323bfc">Convolution1dUint8Test</a> (<a class="el" href="classarmnn_1_1_i_workload_factory.xhtml">armnn::IWorkloadFactory</a> &amp;workloadFactory, const <a class="el" href="classarmnn_1_1_i_backend_internal.xhtml#a693b40e6b94e958836aeb0410ca186bd">armnn::IBackendInternal::IMemoryManagerSharedPtr</a> &amp;memoryManager, const <a class="el" href="classarmnn_1_1_i_tensor_handle_factory.xhtml">armnn::ITensorHandleFactory</a> &amp;tensorHandleFactory, bool biasEnabled)</td></tr>
<tr class="separator:a2a6493bf0e6583e7d0535f6d01323bfc"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6a885deaaf7b59c13ca6c94dce9e8b36"><td class="memItemLeft" align="right" valign="top"><a class="el" href="struct_layer_test_result.xhtml">LayerTestResult</a>&lt; float, 4 &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_conv2d_test_impl_8hpp.xhtml#a6a885deaaf7b59c13ca6c94dce9e8b36">CompareConvolution2dTest</a> (<a class="el" href="classarmnn_1_1_i_workload_factory.xhtml">armnn::IWorkloadFactory</a> &amp;workloadFactory, const <a class="el" href="classarmnn_1_1_i_backend_internal.xhtml#a693b40e6b94e958836aeb0410ca186bd">armnn::IBackendInternal::IMemoryManagerSharedPtr</a> &amp;memoryManager, <a class="el" href="classarmnn_1_1_i_workload_factory.xhtml">armnn::IWorkloadFactory</a> &amp;refWorkloadFactory, const <a class="el" href="classarmnn_1_1_i_tensor_handle_factory.xhtml">armnn::ITensorHandleFactory</a> &amp;tensorHandleFactory, const <a class="el" href="classarmnn_1_1_i_tensor_handle_factory.xhtml">armnn::ITensorHandleFactory</a> &amp;refTensorHandleFactory)</td></tr>
<tr class="separator:a6a885deaaf7b59c13ca6c94dce9e8b36"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3db9032b7a4530846a78babe58a1b2dd"><td class="memItemLeft" align="right" valign="top"><a class="el" href="struct_layer_test_result.xhtml">LayerTestResult</a>&lt; uint8_t, 4 &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_conv2d_test_impl_8hpp.xhtml#a3db9032b7a4530846a78babe58a1b2dd">Convolution2dPerAxisQuantTest</a> (<a class="el" href="classarmnn_1_1_i_workload_factory.xhtml">armnn::IWorkloadFactory</a> &amp;workloadFactory, const <a class="el" href="classarmnn_1_1_i_backend_internal.xhtml#a693b40e6b94e958836aeb0410ca186bd">armnn::IBackendInternal::IMemoryManagerSharedPtr</a> &amp;memoryManager, const <a class="el" href="classarmnn_1_1_i_tensor_handle_factory.xhtml">armnn::ITensorHandleFactory</a> &amp;tensorHandleFactory, const <a class="el" href="namespacearmnn.xhtml#ad1d5cce2d9e9a5d61c243e5c989112e0">armnn::DataLayout</a> layout)</td></tr>
<tr class="separator:a3db9032b7a4530846a78babe58a1b2dd"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:afba5868ef96cceb570cc4b8223f3019c"><td class="memItemLeft" align="right" valign="top"><a class="el" href="struct_layer_test_result.xhtml">LayerTestResult</a>&lt; float, 4 &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_conv2d_test_impl_8hpp.xhtml#afba5868ef96cceb570cc4b8223f3019c">Convolution2d3x3Stride2x2BFloat16Test</a> (<a class="el" href="classarmnn_1_1_i_workload_factory.xhtml">armnn::IWorkloadFactory</a> &amp;workloadFactory, const <a class="el" href="classarmnn_1_1_i_backend_internal.xhtml#a693b40e6b94e958836aeb0410ca186bd">armnn::IBackendInternal::IMemoryManagerSharedPtr</a> &amp;memoryManager, const <a class="el" href="classarmnn_1_1_i_tensor_handle_factory.xhtml">armnn::ITensorHandleFactory</a> &amp;tensorHandleFactory, bool biasEnabled, const <a class="el" href="namespacearmnn.xhtml#ad1d5cce2d9e9a5d61c243e5c989112e0">armnn::DataLayout</a> &amp;dataLayout)</td></tr>
<tr class="separator:afba5868ef96cceb570cc4b8223f3019c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9573a516a902021f7b24fc8a8172ea8e"><td class="memItemLeft" align="right" valign="top"><a class="el" href="struct_layer_test_result.xhtml">LayerTestResult</a>&lt; float, 4 &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_conv2d_test_impl_8hpp.xhtml#a9573a516a902021f7b24fc8a8172ea8e">Convolution2d3x3Stride2x2BFloat16SmallValueTest</a> (<a class="el" href="classarmnn_1_1_i_workload_factory.xhtml">armnn::IWorkloadFactory</a> &amp;workloadFactory, const <a class="el" href="classarmnn_1_1_i_backend_internal.xhtml#a693b40e6b94e958836aeb0410ca186bd">armnn::IBackendInternal::IMemoryManagerSharedPtr</a> &amp;memoryManager, const <a class="el" href="classarmnn_1_1_i_tensor_handle_factory.xhtml">armnn::ITensorHandleFactory</a> &amp;tensorHandleFactory, bool biasEnabled, const <a class="el" href="namespacearmnn.xhtml#ad1d5cce2d9e9a5d61c243e5c989112e0">armnn::DataLayout</a> &amp;dataLayout)</td></tr>
<tr class="separator:a9573a516a902021f7b24fc8a8172ea8e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae689ff7f2c5222b1ab4ee153e159cab7"><td class="memTemplParams" colspan="2">template&lt;armnn::DataType ArmnnType, armnn::DataType ArmnnBType, typename T  = armnn::ResolveType&lt;ArmnnType&gt;&gt; </td></tr>
<tr class="memitem:ae689ff7f2c5222b1ab4ee153e159cab7"><td class="memTemplItemLeft" align="right" valign="top"><a class="el" href="struct_layer_test_result.xhtml">LayerTestResult</a>&lt; T, 4 &gt;&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="_conv2d_test_impl_8hpp.xhtml#ae689ff7f2c5222b1ab4ee153e159cab7">DepthwiseConvolution2d3x3Dilation3x3Test</a> (<a class="el" href="classarmnn_1_1_i_workload_factory.xhtml">armnn::IWorkloadFactory</a> &amp;workloadFactory, const <a class="el" href="classarmnn_1_1_i_backend_internal.xhtml#a693b40e6b94e958836aeb0410ca186bd">armnn::IBackendInternal::IMemoryManagerSharedPtr</a> &amp;memoryManager, const <a class="el" href="classarmnn_1_1_i_tensor_handle_factory.xhtml">armnn::ITensorHandleFactory</a> &amp;tensorHandleFactory, bool biasEnabled, const <a class="el" href="namespacearmnn.xhtml#ad1d5cce2d9e9a5d61c243e5c989112e0">armnn::DataLayout</a> layout)</td></tr>
<tr class="separator:ae689ff7f2c5222b1ab4ee153e159cab7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:adb5b1d96ba9807887953dfd1a71ddb14"><td class="memTemplParams" colspan="2">template&lt;armnn::DataType ArmnnType, armnn::DataType ArmnnBType, typename T  = armnn::ResolveType&lt;ArmnnType&gt;&gt; </td></tr>
<tr class="memitem:adb5b1d96ba9807887953dfd1a71ddb14"><td class="memTemplItemLeft" align="right" valign="top"><a class="el" href="struct_layer_test_result.xhtml">LayerTestResult</a>&lt; T, 4 &gt;&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="_conv2d_test_impl_8hpp.xhtml#adb5b1d96ba9807887953dfd1a71ddb14">DepthwiseConvolution2d2x3x3Dilation3x3Test</a> (<a class="el" href="classarmnn_1_1_i_workload_factory.xhtml">armnn::IWorkloadFactory</a> &amp;workloadFactory, const <a class="el" href="classarmnn_1_1_i_backend_internal.xhtml#a693b40e6b94e958836aeb0410ca186bd">armnn::IBackendInternal::IMemoryManagerSharedPtr</a> &amp;memoryManager, const <a class="el" href="classarmnn_1_1_i_tensor_handle_factory.xhtml">armnn::ITensorHandleFactory</a> &amp;tensorHandleFactory, bool biasEnabled, const <a class="el" href="namespacearmnn.xhtml#ad1d5cce2d9e9a5d61c243e5c989112e0">armnn::DataLayout</a> layout)</td></tr>
<tr class="separator:adb5b1d96ba9807887953dfd1a71ddb14"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a347ca1c8d1443563807e98e261a84954"><td class="memTemplParams" colspan="2">template&lt;armnn::DataType ArmnnType, armnn::DataType ArmnnBType, typename T  = armnn::ResolveType&lt;ArmnnType&gt;&gt; </td></tr>
<tr class="memitem:a347ca1c8d1443563807e98e261a84954"><td class="memTemplItemLeft" align="right" valign="top"><a class="el" href="struct_layer_test_result.xhtml">LayerTestResult</a>&lt; T, 4 &gt;&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="_conv2d_test_impl_8hpp.xhtml#a347ca1c8d1443563807e98e261a84954">DepthwiseConvolution2dMult4Test</a> (<a class="el" href="classarmnn_1_1_i_workload_factory.xhtml">armnn::IWorkloadFactory</a> &amp;workloadFactory, const <a class="el" href="classarmnn_1_1_i_backend_internal.xhtml#a693b40e6b94e958836aeb0410ca186bd">armnn::IBackendInternal::IMemoryManagerSharedPtr</a> &amp;memoryManager, const <a class="el" href="classarmnn_1_1_i_tensor_handle_factory.xhtml">armnn::ITensorHandleFactory</a> &amp;tensorHandleFactory, bool biasEnabled, const <a class="el" href="namespacearmnn.xhtml#ad1d5cce2d9e9a5d61c243e5c989112e0">armnn::DataLayout</a> layout)</td></tr>
<tr class="separator:a347ca1c8d1443563807e98e261a84954"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae5aa717dc049d325cb92112049e5e626"><td class="memTemplParams" colspan="2">template&lt;armnn::DataType ArmnnType, armnn::DataType ArmnnBType, typename T  = armnn::ResolveType&lt;ArmnnType&gt;&gt; </td></tr>
<tr class="memitem:ae5aa717dc049d325cb92112049e5e626"><td class="memTemplItemLeft" align="right" valign="top"><a class="el" href="struct_layer_test_result.xhtml">LayerTestResult</a>&lt; T, 4 &gt;&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="_conv2d_test_impl_8hpp.xhtml#ae5aa717dc049d325cb92112049e5e626">DepthwiseConvolution2dMult2Test</a> (<a class="el" href="classarmnn_1_1_i_workload_factory.xhtml">armnn::IWorkloadFactory</a> &amp;workloadFactory, const <a class="el" href="classarmnn_1_1_i_backend_internal.xhtml#a693b40e6b94e958836aeb0410ca186bd">armnn::IBackendInternal::IMemoryManagerSharedPtr</a> &amp;memoryManager, const <a class="el" href="classarmnn_1_1_i_tensor_handle_factory.xhtml">armnn::ITensorHandleFactory</a> &amp;tensorHandleFactory, bool biasEnabled, const <a class="el" href="namespacearmnn.xhtml#ad1d5cce2d9e9a5d61c243e5c989112e0">armnn::DataLayout</a> layout)</td></tr>
<tr class="separator:ae5aa717dc049d325cb92112049e5e626"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a121bc9a1c827575e6025192be0926bff"><td class="memTemplParams" colspan="2">template&lt;typename T &gt; </td></tr>
<tr class="memitem:a121bc9a1c827575e6025192be0926bff"><td class="memTemplItemLeft" align="right" valign="top"><a class="el" href="struct_layer_test_result.xhtml">LayerTestResult</a>&lt; T, 4 &gt;&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="_conv2d_test_impl_8hpp.xhtml#a121bc9a1c827575e6025192be0926bff">CompareDepthwiseConvolution2dTest</a> (<a class="el" href="classarmnn_1_1_i_workload_factory.xhtml">armnn::IWorkloadFactory</a> &amp;workloadFactory, const <a class="el" href="classarmnn_1_1_i_backend_internal.xhtml#a693b40e6b94e958836aeb0410ca186bd">armnn::IBackendInternal::IMemoryManagerSharedPtr</a> &amp;memoryManager, <a class="el" href="classarmnn_1_1_i_workload_factory.xhtml">armnn::IWorkloadFactory</a> &amp;refWorkloadFactory, const <a class="el" href="classarmnn_1_1_i_tensor_handle_factory.xhtml">armnn::ITensorHandleFactory</a> &amp;tensorHandleFactory, const <a class="el" href="classarmnn_1_1_i_tensor_handle_factory.xhtml">armnn::ITensorHandleFactory</a> &amp;refTensorHandleFactory, const <a class="el" href="namespacearmnn.xhtml#ad1d5cce2d9e9a5d61c243e5c989112e0">armnn::DataLayout</a> layout)</td></tr>
<tr class="separator:a121bc9a1c827575e6025192be0926bff"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9ed9dc40170e362160eb6e6e7edda209"><td class="memItemLeft" align="right" valign="top"><a class="el" href="struct_layer_test_result.xhtml">LayerTestResult</a>&lt; float, 4 &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_conv2d_test_impl_8hpp.xhtml#a9ed9dc40170e362160eb6e6e7edda209">DepthwiseConvolution2dTest</a> (<a class="el" href="classarmnn_1_1_i_workload_factory.xhtml">armnn::IWorkloadFactory</a> &amp;workloadFactory, const <a class="el" href="classarmnn_1_1_i_backend_internal.xhtml#a693b40e6b94e958836aeb0410ca186bd">armnn::IBackendInternal::IMemoryManagerSharedPtr</a> &amp;memoryManager, const <a class="el" href="classarmnn_1_1_i_tensor_handle_factory.xhtml">armnn::ITensorHandleFactory</a> &amp;tensorHandleFactory, bool biasEnabled, const <a class="el" href="namespacearmnn.xhtml#ad1d5cce2d9e9a5d61c243e5c989112e0">armnn::DataLayout</a> layout)</td></tr>
<tr class="separator:a9ed9dc40170e362160eb6e6e7edda209"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae9488183b3dc79abe459aaea83524d0a"><td class="memItemLeft" align="right" valign="top"><a class="el" href="struct_layer_test_result.xhtml">LayerTestResult</a>&lt; float, 4 &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_conv2d_test_impl_8hpp.xhtml#ae9488183b3dc79abe459aaea83524d0a">DepthwiseConvolution2dDepthNhwcTest</a> (<a class="el" href="classarmnn_1_1_i_workload_factory.xhtml">armnn::IWorkloadFactory</a> &amp;workloadFactory, const <a class="el" href="classarmnn_1_1_i_backend_internal.xhtml#a693b40e6b94e958836aeb0410ca186bd">armnn::IBackendInternal::IMemoryManagerSharedPtr</a> &amp;memoryManager, const <a class="el" href="classarmnn_1_1_i_tensor_handle_factory.xhtml">armnn::ITensorHandleFactory</a> &amp;tensorHandleFactory, bool biasEnabled)</td></tr>
<tr class="separator:ae9488183b3dc79abe459aaea83524d0a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa1b649cd47b77a98921cc22eb6a451c8"><td class="memItemLeft" align="right" valign="top"><a class="el" href="struct_layer_test_result.xhtml">LayerTestResult</a>&lt; float, 4 &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_conv2d_test_impl_8hpp.xhtml#aa1b649cd47b77a98921cc22eb6a451c8">DepthwiseConvolution2dDepthMul1Test</a> (<a class="el" href="classarmnn_1_1_i_workload_factory.xhtml">armnn::IWorkloadFactory</a> &amp;workloadFactory, const <a class="el" href="classarmnn_1_1_i_backend_internal.xhtml#a693b40e6b94e958836aeb0410ca186bd">armnn::IBackendInternal::IMemoryManagerSharedPtr</a> &amp;memoryManager, const <a class="el" href="classarmnn_1_1_i_tensor_handle_factory.xhtml">armnn::ITensorHandleFactory</a> &amp;tensorHandleFactory, bool biasEnabled, const <a class="el" href="namespacearmnn.xhtml#ad1d5cce2d9e9a5d61c243e5c989112e0">armnn::DataLayout</a> layout)</td></tr>
<tr class="separator:aa1b649cd47b77a98921cc22eb6a451c8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9c68d43c1ebbd68f34b7846046d814d3"><td class="memItemLeft" align="right" valign="top"><a class="el" href="struct_layer_test_result.xhtml">LayerTestResult</a>&lt; float, 4 &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_conv2d_test_impl_8hpp.xhtml#a9c68d43c1ebbd68f34b7846046d814d3">DepthwiseConvolution2dDepthMul64Test</a> (<a class="el" href="classarmnn_1_1_i_workload_factory.xhtml">armnn::IWorkloadFactory</a> &amp;workloadFactory, const <a class="el" href="classarmnn_1_1_i_backend_internal.xhtml#a693b40e6b94e958836aeb0410ca186bd">armnn::IBackendInternal::IMemoryManagerSharedPtr</a> &amp;memoryManager, const <a class="el" href="classarmnn_1_1_i_tensor_handle_factory.xhtml">armnn::ITensorHandleFactory</a> &amp;tensorHandleFactory)</td></tr>
<tr class="separator:a9c68d43c1ebbd68f34b7846046d814d3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:abdbec483f1020dc684741b37e04d2175"><td class="memItemLeft" align="right" valign="top"><a class="el" href="struct_layer_test_result.xhtml">LayerTestResult</a>&lt; float, 4 &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_conv2d_test_impl_8hpp.xhtml#abdbec483f1020dc684741b37e04d2175">DepthwiseConvolution2dAsymmetricTest</a> (<a class="el" href="classarmnn_1_1_i_workload_factory.xhtml">armnn::IWorkloadFactory</a> &amp;workloadFactory, const <a class="el" href="classarmnn_1_1_i_backend_internal.xhtml#a693b40e6b94e958836aeb0410ca186bd">armnn::IBackendInternal::IMemoryManagerSharedPtr</a> &amp;memoryManager, const <a class="el" href="classarmnn_1_1_i_tensor_handle_factory.xhtml">armnn::ITensorHandleFactory</a> &amp;tensorHandleFactory, bool biasEnabled, const <a class="el" href="namespacearmnn.xhtml#ad1d5cce2d9e9a5d61c243e5c989112e0">armnn::DataLayout</a> layout)</td></tr>
<tr class="separator:abdbec483f1020dc684741b37e04d2175"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af089eef6b8fd167fe95899a3af69aa32"><td class="memItemLeft" align="right" valign="top"><a class="el" href="struct_layer_test_result.xhtml">LayerTestResult</a>&lt; float, 4 &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_conv2d_test_impl_8hpp.xhtml#af089eef6b8fd167fe95899a3af69aa32">SimpleDepthwiseConvolution2d3x3Dilation3x3NhwcTest</a> (<a class="el" href="classarmnn_1_1_i_workload_factory.xhtml">armnn::IWorkloadFactory</a> &amp;workloadFactory, const <a class="el" href="classarmnn_1_1_i_backend_internal.xhtml#a693b40e6b94e958836aeb0410ca186bd">armnn::IBackendInternal::IMemoryManagerSharedPtr</a> &amp;memoryManager, const <a class="el" href="classarmnn_1_1_i_tensor_handle_factory.xhtml">armnn::ITensorHandleFactory</a> &amp;tensorHandleFactory)</td></tr>
<tr class="separator:af089eef6b8fd167fe95899a3af69aa32"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae739d5c6193a4b2192f155632a4e2cd6"><td class="memItemLeft" align="right" valign="top"><a class="el" href="struct_layer_test_result.xhtml">LayerTestResult</a>&lt; uint8_t, 4 &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_conv2d_test_impl_8hpp.xhtml#ae739d5c6193a4b2192f155632a4e2cd6">DepthwiseConvolution2dUint8Test</a> (<a class="el" href="classarmnn_1_1_i_workload_factory.xhtml">armnn::IWorkloadFactory</a> &amp;workloadFactory, const <a class="el" href="classarmnn_1_1_i_backend_internal.xhtml#a693b40e6b94e958836aeb0410ca186bd">armnn::IBackendInternal::IMemoryManagerSharedPtr</a> &amp;memoryManager, const <a class="el" href="classarmnn_1_1_i_tensor_handle_factory.xhtml">armnn::ITensorHandleFactory</a> &amp;tensorHandleFactory, bool biasEnabled, const <a class="el" href="namespacearmnn.xhtml#ad1d5cce2d9e9a5d61c243e5c989112e0">armnn::DataLayout</a> layout)</td></tr>
<tr class="separator:ae739d5c6193a4b2192f155632a4e2cd6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0cbaad29854964598fdbd63d9506d31f"><td class="memItemLeft" align="right" valign="top"><a class="el" href="struct_layer_test_result.xhtml">LayerTestResult</a>&lt; uint8_t, 4 &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_conv2d_test_impl_8hpp.xhtml#a0cbaad29854964598fdbd63d9506d31f">DepthwiseConvolution2dDepthMul1Uint8Test</a> (<a class="el" href="classarmnn_1_1_i_workload_factory.xhtml">armnn::IWorkloadFactory</a> &amp;workloadFactory, const <a class="el" href="classarmnn_1_1_i_backend_internal.xhtml#a693b40e6b94e958836aeb0410ca186bd">armnn::IBackendInternal::IMemoryManagerSharedPtr</a> &amp;memoryManager, const <a class="el" href="classarmnn_1_1_i_tensor_handle_factory.xhtml">armnn::ITensorHandleFactory</a> &amp;tensorHandleFactory, bool biasEnabled, const <a class="el" href="namespacearmnn.xhtml#ad1d5cce2d9e9a5d61c243e5c989112e0">armnn::DataLayout</a> layout)</td></tr>
<tr class="separator:a0cbaad29854964598fdbd63d9506d31f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1599b84e270875cb9b008c23cba9229f"><td class="memItemLeft" align="right" valign="top"><a class="el" href="struct_layer_test_result.xhtml">LayerTestResult</a>&lt; int16_t, 4 &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_conv2d_test_impl_8hpp.xhtml#a1599b84e270875cb9b008c23cba9229f">DepthwiseConvolution2dInt16Test</a> (<a class="el" href="classarmnn_1_1_i_workload_factory.xhtml">armnn::IWorkloadFactory</a> &amp;workloadFactory, const <a class="el" href="classarmnn_1_1_i_backend_internal.xhtml#a693b40e6b94e958836aeb0410ca186bd">armnn::IBackendInternal::IMemoryManagerSharedPtr</a> &amp;memoryManager, const <a class="el" href="classarmnn_1_1_i_tensor_handle_factory.xhtml">armnn::ITensorHandleFactory</a> &amp;tensorHandleFactory, bool biasEnabled, const <a class="el" href="namespacearmnn.xhtml#ad1d5cce2d9e9a5d61c243e5c989112e0">armnn::DataLayout</a> layout)</td></tr>
<tr class="separator:a1599b84e270875cb9b008c23cba9229f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1879a2d6ebde509005aef609d663f664"><td class="memItemLeft" align="right" valign="top"><a class="el" href="struct_layer_test_result.xhtml">LayerTestResult</a>&lt; int16_t, 4 &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_conv2d_test_impl_8hpp.xhtml#a1879a2d6ebde509005aef609d663f664">DepthwiseConvolution2dDepthMul1Int16Test</a> (<a class="el" href="classarmnn_1_1_i_workload_factory.xhtml">armnn::IWorkloadFactory</a> &amp;workloadFactory, const <a class="el" href="classarmnn_1_1_i_backend_internal.xhtml#a693b40e6b94e958836aeb0410ca186bd">armnn::IBackendInternal::IMemoryManagerSharedPtr</a> &amp;memoryManager, const <a class="el" href="classarmnn_1_1_i_tensor_handle_factory.xhtml">armnn::ITensorHandleFactory</a> &amp;tensorHandleFactory, bool biasEnabled, const <a class="el" href="namespacearmnn.xhtml#ad1d5cce2d9e9a5d61c243e5c989112e0">armnn::DataLayout</a> layout)</td></tr>
<tr class="separator:a1879a2d6ebde509005aef609d663f664"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aeb6f20ff65cd6c5fa68a70a2f3d27788"><td class="memItemLeft" align="right" valign="top"><a class="el" href="struct_layer_test_result.xhtml">LayerTestResult</a>&lt; uint8_t, 4 &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_conv2d_test_impl_8hpp.xhtml#aeb6f20ff65cd6c5fa68a70a2f3d27788">DepthwiseConvolution2dPerAxisQuantTest</a> (<a class="el" href="classarmnn_1_1_i_workload_factory.xhtml">armnn::IWorkloadFactory</a> &amp;workloadFactory, const <a class="el" href="classarmnn_1_1_i_backend_internal.xhtml#a693b40e6b94e958836aeb0410ca186bd">armnn::IBackendInternal::IMemoryManagerSharedPtr</a> &amp;memoryManager, const <a class="el" href="classarmnn_1_1_i_tensor_handle_factory.xhtml">armnn::ITensorHandleFactory</a> &amp;tensorHandleFactory, const <a class="el" href="namespacearmnn.xhtml#ad1d5cce2d9e9a5d61c243e5c989112e0">armnn::DataLayout</a> layout)</td></tr>
<tr class="separator:aeb6f20ff65cd6c5fa68a70a2f3d27788"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a91334b97ca9cf0a8e006653cd9b7ff16"><td class="memItemLeft" align="right" valign="top"><a class="el" href="struct_layer_test_result.xhtml">LayerTestResult</a>&lt; float, 4 &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_conv2d_test_impl_8hpp.xhtml#a91334b97ca9cf0a8e006653cd9b7ff16">CompareDepthwiseConvolution2dFloatTest</a> (<a class="el" href="classarmnn_1_1_i_workload_factory.xhtml">armnn::IWorkloadFactory</a> &amp;workloadFactory, const <a class="el" href="classarmnn_1_1_i_backend_internal.xhtml#a693b40e6b94e958836aeb0410ca186bd">armnn::IBackendInternal::IMemoryManagerSharedPtr</a> &amp;memoryManager, <a class="el" href="classarmnn_1_1_i_workload_factory.xhtml">armnn::IWorkloadFactory</a> &amp;refWorkloadFactory, const <a class="el" href="classarmnn_1_1_i_tensor_handle_factory.xhtml">armnn::ITensorHandleFactory</a> &amp;tensorHandleFactory, const <a class="el" href="classarmnn_1_1_i_tensor_handle_factory.xhtml">armnn::ITensorHandleFactory</a> &amp;refTensorHandleFactory, const <a class="el" href="namespacearmnn.xhtml#ad1d5cce2d9e9a5d61c243e5c989112e0">armnn::DataLayout</a> layout)</td></tr>
<tr class="separator:a91334b97ca9cf0a8e006653cd9b7ff16"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5d8371b1081cd00d8271524f6cd512f1"><td class="memItemLeft" align="right" valign="top"><a class="el" href="struct_layer_test_result.xhtml">LayerTestResult</a>&lt; uint8_t, 4 &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_conv2d_test_impl_8hpp.xhtml#a5d8371b1081cd00d8271524f6cd512f1">CompareDepthwiseConvolution2dUint8Test</a> (<a class="el" href="classarmnn_1_1_i_workload_factory.xhtml">armnn::IWorkloadFactory</a> &amp;workloadFactory, const <a class="el" href="classarmnn_1_1_i_backend_internal.xhtml#a693b40e6b94e958836aeb0410ca186bd">armnn::IBackendInternal::IMemoryManagerSharedPtr</a> &amp;memoryManager, <a class="el" href="classarmnn_1_1_i_workload_factory.xhtml">armnn::IWorkloadFactory</a> &amp;refWorkloadFactory, const <a class="el" href="classarmnn_1_1_i_tensor_handle_factory.xhtml">armnn::ITensorHandleFactory</a> &amp;tensorHandleFactory, const <a class="el" href="classarmnn_1_1_i_tensor_handle_factory.xhtml">armnn::ITensorHandleFactory</a> &amp;refTensorHandleFactory, const <a class="el" href="namespacearmnn.xhtml#ad1d5cce2d9e9a5d61c243e5c989112e0">armnn::DataLayout</a> layout)</td></tr>
<tr class="separator:a5d8371b1081cd00d8271524f6cd512f1"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<h2 class="groupheader">Function Documentation</h2>
<a id="a6a885deaaf7b59c13ca6c94dce9e8b36"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a6a885deaaf7b59c13ca6c94dce9e8b36">&#9670;&nbsp;</a></span>CompareConvolution2dTest()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="struct_layer_test_result.xhtml">LayerTestResult</a>&lt;float, 4&gt; CompareConvolution2dTest </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classarmnn_1_1_i_workload_factory.xhtml">armnn::IWorkloadFactory</a> &amp;&#160;</td>
          <td class="paramname"><em>workloadFactory</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_i_backend_internal.xhtml#a693b40e6b94e958836aeb0410ca186bd">armnn::IBackendInternal::IMemoryManagerSharedPtr</a> &amp;&#160;</td>
          <td class="paramname"><em>memoryManager</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="classarmnn_1_1_i_workload_factory.xhtml">armnn::IWorkloadFactory</a> &amp;&#160;</td>
          <td class="paramname"><em>refWorkloadFactory</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_i_tensor_handle_factory.xhtml">armnn::ITensorHandleFactory</a> &amp;&#160;</td>
          <td class="paramname"><em>tensorHandleFactory</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_i_tensor_handle_factory.xhtml">armnn::ITensorHandleFactory</a> &amp;&#160;</td>
          <td class="paramname"><em>refTensorHandleFactory</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_conv2d_test_impl_8cpp_source.xhtml#l03747">3747</a> of file <a class="el" href="_conv2d_test_impl_8cpp_source.xhtml">Conv2dTestImpl.cpp</a>.</p>

<p class="reference">Referenced by <a class="el" href="_cl_layer_tests_8cpp_source.xhtml#l00027">TEST_SUITE()</a>.</p>
<div class="fragment"><div class="line"><a name="l03753"></a><span class="lineno"> 3753</span>&#160;{</div><div class="line"><a name="l03754"></a><span class="lineno"> 3754</span>&#160;    <span class="keywordflow">return</span> CompareConvolution2dTestImpl&lt;armnn::DataType::Float32&gt;(</div><div class="line"><a name="l03755"></a><span class="lineno"> 3755</span>&#160;            workloadFactory, memoryManager, refWorkloadFactory, tensorHandleFactory, refTensorHandleFactory);</div><div class="line"><a name="l03756"></a><span class="lineno"> 3756</span>&#160;}</div></div><!-- fragment -->
</div>
</div>
<a id="a91334b97ca9cf0a8e006653cd9b7ff16"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a91334b97ca9cf0a8e006653cd9b7ff16">&#9670;&nbsp;</a></span>CompareDepthwiseConvolution2dFloatTest()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="struct_layer_test_result.xhtml">LayerTestResult</a>&lt;float, 4&gt; CompareDepthwiseConvolution2dFloatTest </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classarmnn_1_1_i_workload_factory.xhtml">armnn::IWorkloadFactory</a> &amp;&#160;</td>
          <td class="paramname"><em>workloadFactory</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_i_backend_internal.xhtml#a693b40e6b94e958836aeb0410ca186bd">armnn::IBackendInternal::IMemoryManagerSharedPtr</a> &amp;&#160;</td>
          <td class="paramname"><em>memoryManager</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="classarmnn_1_1_i_workload_factory.xhtml">armnn::IWorkloadFactory</a> &amp;&#160;</td>
          <td class="paramname"><em>refWorkloadFactory</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_i_tensor_handle_factory.xhtml">armnn::ITensorHandleFactory</a> &amp;&#160;</td>
          <td class="paramname"><em>tensorHandleFactory</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_i_tensor_handle_factory.xhtml">armnn::ITensorHandleFactory</a> &amp;&#160;</td>
          <td class="paramname"><em>refTensorHandleFactory</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="namespacearmnn.xhtml#ad1d5cce2d9e9a5d61c243e5c989112e0">armnn::DataLayout</a>&#160;</td>
          <td class="paramname"><em>layout</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_conv2d_test_impl_8cpp_source.xhtml#l04039">4039</a> of file <a class="el" href="_conv2d_test_impl_8cpp_source.xhtml">Conv2dTestImpl.cpp</a>.</p>

<p class="reference">Referenced by <a class="el" href="_cl_layer_tests_8cpp_source.xhtml#l00027">TEST_SUITE()</a>.</p>
<div class="fragment"><div class="line"><a name="l04046"></a><span class="lineno"> 4046</span>&#160;{</div><div class="line"><a name="l04047"></a><span class="lineno"> 4047</span>&#160;    <span class="keywordflow">return</span> CompareDepthwiseConvolution2dTestImpl&lt;armnn::DataType::Float32&gt;(</div><div class="line"><a name="l04048"></a><span class="lineno"> 4048</span>&#160;        workloadFactory, memoryManager, refWorkloadFactory, tensorHandleFactory, refTensorHandleFactory, layout);</div><div class="line"><a name="l04049"></a><span class="lineno"> 4049</span>&#160;}</div></div><!-- fragment -->
</div>
</div>
<a id="a121bc9a1c827575e6025192be0926bff"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a121bc9a1c827575e6025192be0926bff">&#9670;&nbsp;</a></span>CompareDepthwiseConvolution2dTest()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="struct_layer_test_result.xhtml">LayerTestResult</a>&lt;T, 4&gt; CompareDepthwiseConvolution2dTest </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classarmnn_1_1_i_workload_factory.xhtml">armnn::IWorkloadFactory</a> &amp;&#160;</td>
          <td class="paramname"><em>workloadFactory</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_i_backend_internal.xhtml#a693b40e6b94e958836aeb0410ca186bd">armnn::IBackendInternal::IMemoryManagerSharedPtr</a> &amp;&#160;</td>
          <td class="paramname"><em>memoryManager</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="classarmnn_1_1_i_workload_factory.xhtml">armnn::IWorkloadFactory</a> &amp;&#160;</td>
          <td class="paramname"><em>refWorkloadFactory</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_i_tensor_handle_factory.xhtml">armnn::ITensorHandleFactory</a> &amp;&#160;</td>
          <td class="paramname"><em>tensorHandleFactory</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_i_tensor_handle_factory.xhtml">armnn::ITensorHandleFactory</a> &amp;&#160;</td>
          <td class="paramname"><em>refTensorHandleFactory</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="namespacearmnn.xhtml#ad1d5cce2d9e9a5d61c243e5c989112e0">armnn::DataLayout</a>&#160;</td>
          <td class="paramname"><em>layout</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a5d8371b1081cd00d8271524f6cd512f1"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a5d8371b1081cd00d8271524f6cd512f1">&#9670;&nbsp;</a></span>CompareDepthwiseConvolution2dUint8Test()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="struct_layer_test_result.xhtml">LayerTestResult</a>&lt;uint8_t, 4&gt; CompareDepthwiseConvolution2dUint8Test </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classarmnn_1_1_i_workload_factory.xhtml">armnn::IWorkloadFactory</a> &amp;&#160;</td>
          <td class="paramname"><em>workloadFactory</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_i_backend_internal.xhtml#a693b40e6b94e958836aeb0410ca186bd">armnn::IBackendInternal::IMemoryManagerSharedPtr</a> &amp;&#160;</td>
          <td class="paramname"><em>memoryManager</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="classarmnn_1_1_i_workload_factory.xhtml">armnn::IWorkloadFactory</a> &amp;&#160;</td>
          <td class="paramname"><em>refWorkloadFactory</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_i_tensor_handle_factory.xhtml">armnn::ITensorHandleFactory</a> &amp;&#160;</td>
          <td class="paramname"><em>tensorHandleFactory</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_i_tensor_handle_factory.xhtml">armnn::ITensorHandleFactory</a> &amp;&#160;</td>
          <td class="paramname"><em>refTensorHandleFactory</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="namespacearmnn.xhtml#ad1d5cce2d9e9a5d61c243e5c989112e0">armnn::DataLayout</a>&#160;</td>
          <td class="paramname"><em>layout</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_conv2d_test_impl_8cpp_source.xhtml#l04051">4051</a> of file <a class="el" href="_conv2d_test_impl_8cpp_source.xhtml">Conv2dTestImpl.cpp</a>.</p>

<p class="reference">Referenced by <a class="el" href="_cl_layer_tests_8cpp_source.xhtml#l00027">TEST_SUITE()</a>.</p>
<div class="fragment"><div class="line"><a name="l04058"></a><span class="lineno"> 4058</span>&#160;{</div><div class="line"><a name="l04059"></a><span class="lineno"> 4059</span>&#160;    <span class="keywordflow">return</span> CompareDepthwiseConvolution2dTestImpl&lt;armnn::DataType::QAsymmU8&gt;(</div><div class="line"><a name="l04060"></a><span class="lineno"> 4060</span>&#160;        workloadFactory, memoryManager, refWorkloadFactory, tensorHandleFactory, refTensorHandleFactory, layout);</div><div class="line"><a name="l04061"></a><span class="lineno"> 4061</span>&#160;}</div></div><!-- fragment -->
</div>
</div>
<a id="a7fde274ea5d168e2941e90ff6475262b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a7fde274ea5d168e2941e90ff6475262b">&#9670;&nbsp;</a></span>Convolution1dTest()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="struct_layer_test_result.xhtml">LayerTestResult</a>&lt;float, 4&gt; Convolution1dTest </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classarmnn_1_1_i_workload_factory.xhtml">armnn::IWorkloadFactory</a> &amp;&#160;</td>
          <td class="paramname"><em>workloadFactory</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_i_backend_internal.xhtml#a693b40e6b94e958836aeb0410ca186bd">armnn::IBackendInternal::IMemoryManagerSharedPtr</a> &amp;&#160;</td>
          <td class="paramname"><em>memoryManager</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_i_tensor_handle_factory.xhtml">armnn::ITensorHandleFactory</a> &amp;&#160;</td>
          <td class="paramname"><em>tensorHandleFactory</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>biasEnabled</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_conv2d_test_impl_8cpp_source.xhtml#l03611">3611</a> of file <a class="el" href="_conv2d_test_impl_8cpp_source.xhtml">Conv2dTestImpl.cpp</a>.</p>

<p class="reference">Referenced by <a class="el" href="_cl_layer_tests_8cpp_source.xhtml#l00027">TEST_SUITE()</a>.</p>
<div class="fragment"><div class="line"><a name="l03616"></a><span class="lineno"> 3616</span>&#160;{</div><div class="line"><a name="l03617"></a><span class="lineno"> 3617</span>&#160;    <span class="keywordflow">return</span> Convolution1dTestImpl&lt;armnn::DataType::Float32, armnn::DataType::Float32&gt;(</div><div class="line"><a name="l03618"></a><span class="lineno"> 3618</span>&#160;            workloadFactory, memoryManager, tensorHandleFactory, 0.0f, 0, biasEnabled);</div><div class="line"><a name="l03619"></a><span class="lineno"> 3619</span>&#160;}</div></div><!-- fragment -->
</div>
</div>
<a id="a2a6493bf0e6583e7d0535f6d01323bfc"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a2a6493bf0e6583e7d0535f6d01323bfc">&#9670;&nbsp;</a></span>Convolution1dUint8Test()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="struct_layer_test_result.xhtml">LayerTestResult</a>&lt;uint8_t, 4&gt; Convolution1dUint8Test </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classarmnn_1_1_i_workload_factory.xhtml">armnn::IWorkloadFactory</a> &amp;&#160;</td>
          <td class="paramname"><em>workloadFactory</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_i_backend_internal.xhtml#a693b40e6b94e958836aeb0410ca186bd">armnn::IBackendInternal::IMemoryManagerSharedPtr</a> &amp;&#160;</td>
          <td class="paramname"><em>memoryManager</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_i_tensor_handle_factory.xhtml">armnn::ITensorHandleFactory</a> &amp;&#160;</td>
          <td class="paramname"><em>tensorHandleFactory</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>biasEnabled</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_conv2d_test_impl_8cpp_source.xhtml#l03621">3621</a> of file <a class="el" href="_conv2d_test_impl_8cpp_source.xhtml">Conv2dTestImpl.cpp</a>.</p>

<p class="reference">Referenced by <a class="el" href="_ref_layer_tests_8cpp_source.xhtml#l00014">TEST_SUITE()</a>.</p>
<div class="fragment"><div class="line"><a name="l03626"></a><span class="lineno"> 3626</span>&#160;{</div><div class="line"><a name="l03627"></a><span class="lineno"> 3627</span>&#160;    <span class="keywordflow">return</span> Convolution1dTestImpl&lt;armnn::DataType::QAsymmU8, armnn::DataType::Signed32&gt;(</div><div class="line"><a name="l03628"></a><span class="lineno"> 3628</span>&#160;            workloadFactory, memoryManager, tensorHandleFactory, 0.1f, 128, biasEnabled);</div><div class="line"><a name="l03629"></a><span class="lineno"> 3629</span>&#160;}</div></div><!-- fragment -->
</div>
</div>
<a id="a130df3a88eb9a5bf1aaec61642a702d0"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a130df3a88eb9a5bf1aaec61642a702d0">&#9670;&nbsp;</a></span>Convolution2d2x2Dilation2x2Padding2x2Stride3x3Test()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="struct_layer_test_result.xhtml">LayerTestResult</a>&lt;T, 4&gt; Convolution2d2x2Dilation2x2Padding2x2Stride3x3Test </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classarmnn_1_1_i_workload_factory.xhtml">armnn::IWorkloadFactory</a> &amp;&#160;</td>
          <td class="paramname"><em>workloadFactory</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_i_backend_internal.xhtml#a693b40e6b94e958836aeb0410ca186bd">armnn::IBackendInternal::IMemoryManagerSharedPtr</a> &amp;&#160;</td>
          <td class="paramname"><em>memoryManager</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_i_tensor_handle_factory.xhtml">armnn::ITensorHandleFactory</a> &amp;&#160;</td>
          <td class="paramname"><em>tensorHandleFactory</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>biasEnabled</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="namespacearmnn.xhtml#ad1d5cce2d9e9a5d61c243e5c989112e0">armnn::DataLayout</a>&#160;</td>
          <td class="paramname"><em>layout</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_conv2d_test_impl_8cpp_source.xhtml#l01300">1300</a> of file <a class="el" href="_conv2d_test_impl_8cpp_source.xhtml">Conv2dTestImpl.cpp</a>.</p>

<p class="reference">Referenced by <a class="el" href="_neon_layer_tests_8cpp_source.xhtml#l00019">TEST_SUITE()</a>.</p>
<div class="fragment"><div class="line"><a name="l01306"></a><span class="lineno"> 1306</span>&#160;{</div><div class="line"><a name="l01307"></a><span class="lineno"> 1307</span>&#160;    <a class="code" href="classarmnn_1_1_tensor_info.xhtml">armnn::TensorInfo</a> inputTensorInfo({ 1, 1, 10, 10 }, ArmnnType);</div><div class="line"><a name="l01308"></a><span class="lineno"> 1308</span>&#160;    std::vector&lt;float&gt; inputNoQuantizedValues =</div><div class="line"><a name="l01309"></a><span class="lineno"> 1309</span>&#160;    {</div><div class="line"><a name="l01310"></a><span class="lineno"> 1310</span>&#160;        1, 1, 1, 1, 1, 1, 1, 1, 1, 1,</div><div class="line"><a name="l01311"></a><span class="lineno"> 1311</span>&#160;        1, 1, 1, 1, 1, 1, 1, 1, 1, 1,</div><div class="line"><a name="l01312"></a><span class="lineno"> 1312</span>&#160;        1, 1, 1, 1, 1, 1, 1, 1, 1, 1,</div><div class="line"><a name="l01313"></a><span class="lineno"> 1313</span>&#160;        1, 1, 1, 1, 1, 1, 1, 1, 1, 1,</div><div class="line"><a name="l01314"></a><span class="lineno"> 1314</span>&#160;        1, 1, 1, 1, 1, 1, 1, 1, 1, 1,</div><div class="line"><a name="l01315"></a><span class="lineno"> 1315</span>&#160;        1, 1, 1, 1, 1, 1, 1, 1, 1, 1,</div><div class="line"><a name="l01316"></a><span class="lineno"> 1316</span>&#160;        1, 1, 1, 1, 1, 1, 1, 1, 1, 1,</div><div class="line"><a name="l01317"></a><span class="lineno"> 1317</span>&#160;        1, 1, 1, 1, 1, 1, 1, 1, 1, 1,</div><div class="line"><a name="l01318"></a><span class="lineno"> 1318</span>&#160;        1, 1, 1, 1, 1, 1, 1, 1, 1, 1,</div><div class="line"><a name="l01319"></a><span class="lineno"> 1319</span>&#160;        1, 1, 1, 1, 1, 1, 1, 1, 1, 1</div><div class="line"><a name="l01320"></a><span class="lineno"> 1320</span>&#160;    };</div><div class="line"><a name="l01321"></a><span class="lineno"> 1321</span>&#160;</div><div class="line"><a name="l01322"></a><span class="lineno"> 1322</span>&#160;    <a class="code" href="classarmnn_1_1_tensor_info.xhtml">armnn::TensorInfo</a> kernelTensorInfo({ 1, 1, 2, 2 }, ArmnnType);</div><div class="line"><a name="l01323"></a><span class="lineno"> 1323</span>&#160;    std::vector&lt;float&gt; kernelNoQuantizedValues =</div><div class="line"><a name="l01324"></a><span class="lineno"> 1324</span>&#160;    {</div><div class="line"><a name="l01325"></a><span class="lineno"> 1325</span>&#160;        1, 2,</div><div class="line"><a name="l01326"></a><span class="lineno"> 1326</span>&#160;        3, 4</div><div class="line"><a name="l01327"></a><span class="lineno"> 1327</span>&#160;    };</div><div class="line"><a name="l01328"></a><span class="lineno"> 1328</span>&#160;</div><div class="line"><a name="l01329"></a><span class="lineno"> 1329</span>&#160;    <span class="comment">// Since the dilation rate is 2 this will dilate the kernel to be like 3x3: d(K-1)+1 --&gt; 2 x (2-1) + 1 = 3,</span></div><div class="line"><a name="l01330"></a><span class="lineno"> 1330</span>&#160;    <span class="comment">// therefore the output will be 4x4: (I − K + 2P)/S +1 =&gt; trunc ( (10 - 3 + 2x2 ) / 3 + 1 )</span></div><div class="line"><a name="l01331"></a><span class="lineno"> 1331</span>&#160;    <span class="comment">// where, dilation size = d = 2; kernel size = K = 2; input size = I = 10; padding size = P = 2; stride = S = 3</span></div><div class="line"><a name="l01332"></a><span class="lineno"> 1332</span>&#160;    <a class="code" href="classarmnn_1_1_tensor_info.xhtml">armnn::TensorInfo</a> outputTensorInfo({ 1, 1, 4, 4}, ArmnnType);</div><div class="line"><a name="l01333"></a><span class="lineno"> 1333</span>&#160;    std::vector&lt;float&gt; outputExpectedNoQuantizedValues =</div><div class="line"><a name="l01334"></a><span class="lineno"> 1334</span>&#160;    {</div><div class="line"><a name="l01335"></a><span class="lineno"> 1335</span>&#160;        4,  7,  7, 3,</div><div class="line"><a name="l01336"></a><span class="lineno"> 1336</span>&#160;        6, 10, 10, 4,</div><div class="line"><a name="l01337"></a><span class="lineno"> 1337</span>&#160;        6, 10, 10, 4,</div><div class="line"><a name="l01338"></a><span class="lineno"> 1338</span>&#160;        2,  3,  3, 1</div><div class="line"><a name="l01339"></a><span class="lineno"> 1339</span>&#160;    };</div><div class="line"><a name="l01340"></a><span class="lineno"> 1340</span>&#160;    uint32_t padLeft = 1;</div><div class="line"><a name="l01341"></a><span class="lineno"> 1341</span>&#160;    uint32_t padTop = 1;</div><div class="line"><a name="l01342"></a><span class="lineno"> 1342</span>&#160;    uint32_t padRight = 1;</div><div class="line"><a name="l01343"></a><span class="lineno"> 1343</span>&#160;    uint32_t padBottom = 1;</div><div class="line"><a name="l01344"></a><span class="lineno"> 1344</span>&#160;</div><div class="line"><a name="l01345"></a><span class="lineno"> 1345</span>&#160;    <span class="keywordflow">return</span> Convolution2d3x3DilationTestCommon&lt;ArmnnType, ArmnnBType&gt;(</div><div class="line"><a name="l01346"></a><span class="lineno"> 1346</span>&#160;            workloadFactory,</div><div class="line"><a name="l01347"></a><span class="lineno"> 1347</span>&#160;            memoryManager,</div><div class="line"><a name="l01348"></a><span class="lineno"> 1348</span>&#160;            tensorHandleFactory,</div><div class="line"><a name="l01349"></a><span class="lineno"> 1349</span>&#160;            inputNoQuantizedValues,</div><div class="line"><a name="l01350"></a><span class="lineno"> 1350</span>&#160;            inputTensorInfo,</div><div class="line"><a name="l01351"></a><span class="lineno"> 1351</span>&#160;            kernelNoQuantizedValues,</div><div class="line"><a name="l01352"></a><span class="lineno"> 1352</span>&#160;            kernelTensorInfo,</div><div class="line"><a name="l01353"></a><span class="lineno"> 1353</span>&#160;            outputExpectedNoQuantizedValues,</div><div class="line"><a name="l01354"></a><span class="lineno"> 1354</span>&#160;            outputTensorInfo,</div><div class="line"><a name="l01355"></a><span class="lineno"> 1355</span>&#160;            2,</div><div class="line"><a name="l01356"></a><span class="lineno"> 1356</span>&#160;            2,</div><div class="line"><a name="l01357"></a><span class="lineno"> 1357</span>&#160;            layout,</div><div class="line"><a name="l01358"></a><span class="lineno"> 1358</span>&#160;            padLeft,</div><div class="line"><a name="l01359"></a><span class="lineno"> 1359</span>&#160;            padTop,</div><div class="line"><a name="l01360"></a><span class="lineno"> 1360</span>&#160;            padRight,</div><div class="line"><a name="l01361"></a><span class="lineno"> 1361</span>&#160;            padBottom,</div><div class="line"><a name="l01362"></a><span class="lineno"> 1362</span>&#160;            3,</div><div class="line"><a name="l01363"></a><span class="lineno"> 1363</span>&#160;            3,</div><div class="line"><a name="l01364"></a><span class="lineno"> 1364</span>&#160;            biasEnabled</div><div class="line"><a name="l01365"></a><span class="lineno"> 1365</span>&#160;            );</div><div class="line"><a name="l01366"></a><span class="lineno"> 1366</span>&#160;}</div><div class="ttc" id="classarmnn_1_1_tensor_info_xhtml"><div class="ttname"><a href="classarmnn_1_1_tensor_info.xhtml">armnn::TensorInfo</a></div><div class="ttdef"><b>Definition:</b> <a href="_tensor_8hpp_source.xhtml#l00152">Tensor.hpp:152</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="a24ba5e372ff9e8c7603cd380d3673bff"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a24ba5e372ff9e8c7603cd380d3673bff">&#9670;&nbsp;</a></span>Convolution2d2x3x3Dilation3x3Test()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="struct_layer_test_result.xhtml">LayerTestResult</a>&lt;T, 4&gt; Convolution2d2x3x3Dilation3x3Test </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classarmnn_1_1_i_workload_factory.xhtml">armnn::IWorkloadFactory</a> &amp;&#160;</td>
          <td class="paramname"><em>workloadFactory</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_i_backend_internal.xhtml#a693b40e6b94e958836aeb0410ca186bd">armnn::IBackendInternal::IMemoryManagerSharedPtr</a> &amp;&#160;</td>
          <td class="paramname"><em>memoryManager</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_i_tensor_handle_factory.xhtml">armnn::ITensorHandleFactory</a> &amp;&#160;</td>
          <td class="paramname"><em>tensorHandleFactory</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>biasEnabled</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="namespacearmnn.xhtml#ad1d5cce2d9e9a5d61c243e5c989112e0">armnn::DataLayout</a>&#160;</td>
          <td class="paramname"><em>layout</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_conv2d_test_impl_8cpp_source.xhtml#l01227">1227</a> of file <a class="el" href="_conv2d_test_impl_8cpp_source.xhtml">Conv2dTestImpl.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l01233"></a><span class="lineno"> 1233</span>&#160;{</div><div class="line"><a name="l01234"></a><span class="lineno"> 1234</span>&#160;    <a class="code" href="classarmnn_1_1_tensor_info.xhtml">armnn::TensorInfo</a> inputTensorInfo({ 1, 2, 10, 10 }, ArmnnType);</div><div class="line"><a name="l01235"></a><span class="lineno"> 1235</span>&#160;    std::vector&lt;float&gt; inputNoQuantizedValues =</div><div class="line"><a name="l01236"></a><span class="lineno"> 1236</span>&#160;    {</div><div class="line"><a name="l01237"></a><span class="lineno"> 1237</span>&#160;        0, 0, 0, 0, 0, 0, 0, 0, 0, 0,</div><div class="line"><a name="l01238"></a><span class="lineno"> 1238</span>&#160;        0, 0, 0, 0, 0, 0, 0, 0, 0, 0,</div><div class="line"><a name="l01239"></a><span class="lineno"> 1239</span>&#160;        0, 0, 0, 0, 0, 0, 0, 0, 0, 0,</div><div class="line"><a name="l01240"></a><span class="lineno"> 1240</span>&#160;        0, 0, 0, 0, 1, 1, 1, 0, 0, 0,</div><div class="line"><a name="l01241"></a><span class="lineno"> 1241</span>&#160;        0, 0, 0, 0, 1, 1, 1, 0, 0, 0,</div><div class="line"><a name="l01242"></a><span class="lineno"> 1242</span>&#160;        0, 0, 0, 0, 1, 1, 1, 0, 0, 0,</div><div class="line"><a name="l01243"></a><span class="lineno"> 1243</span>&#160;        0, 0, 0, 0, 0, 0, 0, 0, 0, 0,</div><div class="line"><a name="l01244"></a><span class="lineno"> 1244</span>&#160;        0, 0, 0, 0, 0, 0, 0, 0, 0, 0,</div><div class="line"><a name="l01245"></a><span class="lineno"> 1245</span>&#160;        0, 0, 0, 0, 0, 0, 0, 0, 0, 0,</div><div class="line"><a name="l01246"></a><span class="lineno"> 1246</span>&#160;        0, 0, 0, 0, 0, 0, 0, 0, 0, 0,</div><div class="line"><a name="l01247"></a><span class="lineno"> 1247</span>&#160;</div><div class="line"><a name="l01248"></a><span class="lineno"> 1248</span>&#160;        0, 0, 0, 0, 0, 0, 0, 0, 0, 0,</div><div class="line"><a name="l01249"></a><span class="lineno"> 1249</span>&#160;        0, 0, 0, 0, 0, 0, 0, 0, 0, 0,</div><div class="line"><a name="l01250"></a><span class="lineno"> 1250</span>&#160;        0, 0, 0, 0, 0, 0, 0, 0, 0, 0,</div><div class="line"><a name="l01251"></a><span class="lineno"> 1251</span>&#160;        0, 0, 0, 0, 1, 1, 1, 0, 0, 0,</div><div class="line"><a name="l01252"></a><span class="lineno"> 1252</span>&#160;        0, 0, 0, 0, 1, 1, 1, 0, 0, 0,</div><div class="line"><a name="l01253"></a><span class="lineno"> 1253</span>&#160;        0, 0, 0, 0, 1, 1, 1, 0, 0, 0,</div><div class="line"><a name="l01254"></a><span class="lineno"> 1254</span>&#160;        0, 0, 0, 0, 0, 0, 0, 0, 0, 0,</div><div class="line"><a name="l01255"></a><span class="lineno"> 1255</span>&#160;        0, 0, 0, 0, 0, 0, 0, 0, 0, 0,</div><div class="line"><a name="l01256"></a><span class="lineno"> 1256</span>&#160;        0, 0, 0, 0, 0, 0, 0, 0, 0, 0,</div><div class="line"><a name="l01257"></a><span class="lineno"> 1257</span>&#160;        0, 0, 0, 0, 0, 0, 0, 0, 0, 0</div><div class="line"><a name="l01258"></a><span class="lineno"> 1258</span>&#160;    };</div><div class="line"><a name="l01259"></a><span class="lineno"> 1259</span>&#160;</div><div class="line"><a name="l01260"></a><span class="lineno"> 1260</span>&#160;    <a class="code" href="classarmnn_1_1_tensor_info.xhtml">armnn::TensorInfo</a> kernelTensorInfo({ 1, 2, 3, 3 }, ArmnnType);</div><div class="line"><a name="l01261"></a><span class="lineno"> 1261</span>&#160;    std::vector&lt;float&gt; kernelNoQuantizedValues =</div><div class="line"><a name="l01262"></a><span class="lineno"> 1262</span>&#160;    {</div><div class="line"><a name="l01263"></a><span class="lineno"> 1263</span>&#160;        1, 2, 3,</div><div class="line"><a name="l01264"></a><span class="lineno"> 1264</span>&#160;        4, 5, 6,</div><div class="line"><a name="l01265"></a><span class="lineno"> 1265</span>&#160;        7, 8, 9,</div><div class="line"><a name="l01266"></a><span class="lineno"> 1266</span>&#160;</div><div class="line"><a name="l01267"></a><span class="lineno"> 1267</span>&#160;        1, 2, 3,</div><div class="line"><a name="l01268"></a><span class="lineno"> 1268</span>&#160;        4, 5, 6,</div><div class="line"><a name="l01269"></a><span class="lineno"> 1269</span>&#160;        7, 8, 9</div><div class="line"><a name="l01270"></a><span class="lineno"> 1270</span>&#160;    };</div><div class="line"><a name="l01271"></a><span class="lineno"> 1271</span>&#160;</div><div class="line"><a name="l01272"></a><span class="lineno"> 1272</span>&#160;    <span class="comment">// Since the dilation rate is 3 this will dilate the kernel to be like 7x7,</span></div><div class="line"><a name="l01273"></a><span class="lineno"> 1273</span>&#160;    <span class="comment">// therefore the output will be 4x4: (I−K+2P)/S +1 =&gt; (10-7 +0)/1 +1</span></div><div class="line"><a name="l01274"></a><span class="lineno"> 1274</span>&#160;    <a class="code" href="classarmnn_1_1_tensor_info.xhtml">armnn::TensorInfo</a> outputTensorInfo({ 1, 1, 4, 4 }, ArmnnType);</div><div class="line"><a name="l01275"></a><span class="lineno"> 1275</span>&#160;    std::vector&lt;float&gt; outputExpectedNoQuantizedValues =</div><div class="line"><a name="l01276"></a><span class="lineno"> 1276</span>&#160;    {</div><div class="line"><a name="l01277"></a><span class="lineno"> 1277</span>&#160;        12., 10., 10., 10.,</div><div class="line"><a name="l01278"></a><span class="lineno"> 1278</span>&#160;        12., 10., 10., 10.,</div><div class="line"><a name="l01279"></a><span class="lineno"> 1279</span>&#160;        12., 10., 10., 10.,</div><div class="line"><a name="l01280"></a><span class="lineno"> 1280</span>&#160;         6.,  4.,  4.,  4.</div><div class="line"><a name="l01281"></a><span class="lineno"> 1281</span>&#160;    };</div><div class="line"><a name="l01282"></a><span class="lineno"> 1282</span>&#160;</div><div class="line"><a name="l01283"></a><span class="lineno"> 1283</span>&#160;    <span class="keywordflow">return</span> Convolution2d3x3DilationTestCommon&lt;ArmnnType, ArmnnBType&gt;(</div><div class="line"><a name="l01284"></a><span class="lineno"> 1284</span>&#160;            workloadFactory,</div><div class="line"><a name="l01285"></a><span class="lineno"> 1285</span>&#160;            memoryManager,</div><div class="line"><a name="l01286"></a><span class="lineno"> 1286</span>&#160;            tensorHandleFactory,</div><div class="line"><a name="l01287"></a><span class="lineno"> 1287</span>&#160;            inputNoQuantizedValues,</div><div class="line"><a name="l01288"></a><span class="lineno"> 1288</span>&#160;            inputTensorInfo,</div><div class="line"><a name="l01289"></a><span class="lineno"> 1289</span>&#160;            kernelNoQuantizedValues,</div><div class="line"><a name="l01290"></a><span class="lineno"> 1290</span>&#160;            kernelTensorInfo,</div><div class="line"><a name="l01291"></a><span class="lineno"> 1291</span>&#160;            outputExpectedNoQuantizedValues,</div><div class="line"><a name="l01292"></a><span class="lineno"> 1292</span>&#160;            outputTensorInfo,</div><div class="line"><a name="l01293"></a><span class="lineno"> 1293</span>&#160;            3,</div><div class="line"><a name="l01294"></a><span class="lineno"> 1294</span>&#160;            3,</div><div class="line"><a name="l01295"></a><span class="lineno"> 1295</span>&#160;            layout,</div><div class="line"><a name="l01296"></a><span class="lineno"> 1296</span>&#160;            biasEnabled);</div><div class="line"><a name="l01297"></a><span class="lineno"> 1297</span>&#160;}</div><div class="ttc" id="classarmnn_1_1_tensor_info_xhtml"><div class="ttname"><a href="classarmnn_1_1_tensor_info.xhtml">armnn::TensorInfo</a></div><div class="ttdef"><b>Definition:</b> <a href="_tensor_8hpp_source.xhtml#l00152">Tensor.hpp:152</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="a0192d5e1143e77fb9c07f43cac008aa5"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a0192d5e1143e77fb9c07f43cac008aa5">&#9670;&nbsp;</a></span>Convolution2d3x3Dilation3x3Test()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="struct_layer_test_result.xhtml">LayerTestResult</a>&lt;T, 4&gt; Convolution2d3x3Dilation3x3Test </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classarmnn_1_1_i_workload_factory.xhtml">armnn::IWorkloadFactory</a> &amp;&#160;</td>
          <td class="paramname"><em>workloadFactory</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_i_backend_internal.xhtml#a693b40e6b94e958836aeb0410ca186bd">armnn::IBackendInternal::IMemoryManagerSharedPtr</a> &amp;&#160;</td>
          <td class="paramname"><em>memoryManager</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_i_tensor_handle_factory.xhtml">armnn::ITensorHandleFactory</a> &amp;&#160;</td>
          <td class="paramname"><em>tensorHandleFactory</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>biasEnabled</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="namespacearmnn.xhtml#ad1d5cce2d9e9a5d61c243e5c989112e0">armnn::DataLayout</a>&#160;</td>
          <td class="paramname"><em>layout</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_conv2d_test_impl_8cpp_source.xhtml#l01169">1169</a> of file <a class="el" href="_conv2d_test_impl_8cpp_source.xhtml">Conv2dTestImpl.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l01175"></a><span class="lineno"> 1175</span>&#160;{</div><div class="line"><a name="l01176"></a><span class="lineno"> 1176</span>&#160;    <a class="code" href="classarmnn_1_1_tensor_info.xhtml">armnn::TensorInfo</a> inputTensorInfo({ 1, 1, 10, 10 }, ArmnnType);</div><div class="line"><a name="l01177"></a><span class="lineno"> 1177</span>&#160;    std::vector&lt;float&gt; inputNoQuantizedValues =</div><div class="line"><a name="l01178"></a><span class="lineno"> 1178</span>&#160;    {</div><div class="line"><a name="l01179"></a><span class="lineno"> 1179</span>&#160;        0, 0, 0, 0, 0, 0, 0, 0, 0, 0,</div><div class="line"><a name="l01180"></a><span class="lineno"> 1180</span>&#160;        0, 0, 0, 0, 0, 0, 0, 0, 0, 0,</div><div class="line"><a name="l01181"></a><span class="lineno"> 1181</span>&#160;        0, 0, 0, 0, 0, 0, 0, 0, 0, 0,</div><div class="line"><a name="l01182"></a><span class="lineno"> 1182</span>&#160;        0, 0, 0, 0, 1, 1, 1, 0, 0, 0,</div><div class="line"><a name="l01183"></a><span class="lineno"> 1183</span>&#160;        0, 0, 0, 0, 1, 1, 1, 0, 0, 0,</div><div class="line"><a name="l01184"></a><span class="lineno"> 1184</span>&#160;        0, 0, 0, 0, 1, 1, 1, 0, 0, 0,</div><div class="line"><a name="l01185"></a><span class="lineno"> 1185</span>&#160;        0, 0, 0, 0, 0, 0, 0, 0, 0, 0,</div><div class="line"><a name="l01186"></a><span class="lineno"> 1186</span>&#160;        0, 0, 0, 0, 0, 0, 0, 0, 0, 0,</div><div class="line"><a name="l01187"></a><span class="lineno"> 1187</span>&#160;        0, 0, 0, 0, 0, 0, 0, 0, 0, 0,</div><div class="line"><a name="l01188"></a><span class="lineno"> 1188</span>&#160;        0, 0, 0, 0, 0, 0, 0, 0, 0, 0</div><div class="line"><a name="l01189"></a><span class="lineno"> 1189</span>&#160;    };</div><div class="line"><a name="l01190"></a><span class="lineno"> 1190</span>&#160;</div><div class="line"><a name="l01191"></a><span class="lineno"> 1191</span>&#160;    <a class="code" href="classarmnn_1_1_tensor_info.xhtml">armnn::TensorInfo</a> kernelTensorInfo({ 1, 1, 3, 3}, ArmnnType);</div><div class="line"><a name="l01192"></a><span class="lineno"> 1192</span>&#160;    std::vector&lt;float&gt; kernelNoQuantizedValues =</div><div class="line"><a name="l01193"></a><span class="lineno"> 1193</span>&#160;    {</div><div class="line"><a name="l01194"></a><span class="lineno"> 1194</span>&#160;        1, 2, 3,</div><div class="line"><a name="l01195"></a><span class="lineno"> 1195</span>&#160;        4, 5, 6,</div><div class="line"><a name="l01196"></a><span class="lineno"> 1196</span>&#160;        7, 8, 9</div><div class="line"><a name="l01197"></a><span class="lineno"> 1197</span>&#160;    };</div><div class="line"><a name="l01198"></a><span class="lineno"> 1198</span>&#160;</div><div class="line"><a name="l01199"></a><span class="lineno"> 1199</span>&#160;    <span class="comment">// Since the dilation rate is 3 this will dilate the kernel to be like 7x7,</span></div><div class="line"><a name="l01200"></a><span class="lineno"> 1200</span>&#160;    <span class="comment">// therefore the output will be 4x4: (I−K+2P)/S +1 =&gt; (10-7 +0)/1 +1</span></div><div class="line"><a name="l01201"></a><span class="lineno"> 1201</span>&#160;    <a class="code" href="classarmnn_1_1_tensor_info.xhtml">armnn::TensorInfo</a> outputTensorInfo({ 1, 1, 4, 4}, ArmnnType);</div><div class="line"><a name="l01202"></a><span class="lineno"> 1202</span>&#160;    std::vector&lt;float&gt; outputExpectedNoQuantizedValues =</div><div class="line"><a name="l01203"></a><span class="lineno"> 1203</span>&#160;    {</div><div class="line"><a name="l01204"></a><span class="lineno"> 1204</span>&#160;        6., 5., 5., 5.,</div><div class="line"><a name="l01205"></a><span class="lineno"> 1205</span>&#160;        6., 5., 5., 5.,</div><div class="line"><a name="l01206"></a><span class="lineno"> 1206</span>&#160;        6., 5., 5., 5.,</div><div class="line"><a name="l01207"></a><span class="lineno"> 1207</span>&#160;        3., 2., 2., 2.</div><div class="line"><a name="l01208"></a><span class="lineno"> 1208</span>&#160;    };</div><div class="line"><a name="l01209"></a><span class="lineno"> 1209</span>&#160;</div><div class="line"><a name="l01210"></a><span class="lineno"> 1210</span>&#160;    <span class="keywordflow">return</span> Convolution2d3x3DilationTestCommon&lt;ArmnnType, ArmnnBType&gt;(</div><div class="line"><a name="l01211"></a><span class="lineno"> 1211</span>&#160;            workloadFactory,</div><div class="line"><a name="l01212"></a><span class="lineno"> 1212</span>&#160;            memoryManager,</div><div class="line"><a name="l01213"></a><span class="lineno"> 1213</span>&#160;            tensorHandleFactory,</div><div class="line"><a name="l01214"></a><span class="lineno"> 1214</span>&#160;            inputNoQuantizedValues,</div><div class="line"><a name="l01215"></a><span class="lineno"> 1215</span>&#160;            inputTensorInfo,</div><div class="line"><a name="l01216"></a><span class="lineno"> 1216</span>&#160;            kernelNoQuantizedValues,</div><div class="line"><a name="l01217"></a><span class="lineno"> 1217</span>&#160;            kernelTensorInfo,</div><div class="line"><a name="l01218"></a><span class="lineno"> 1218</span>&#160;            outputExpectedNoQuantizedValues,</div><div class="line"><a name="l01219"></a><span class="lineno"> 1219</span>&#160;            outputTensorInfo,</div><div class="line"><a name="l01220"></a><span class="lineno"> 1220</span>&#160;            3,</div><div class="line"><a name="l01221"></a><span class="lineno"> 1221</span>&#160;            3,</div><div class="line"><a name="l01222"></a><span class="lineno"> 1222</span>&#160;            layout,</div><div class="line"><a name="l01223"></a><span class="lineno"> 1223</span>&#160;            biasEnabled);</div><div class="line"><a name="l01224"></a><span class="lineno"> 1224</span>&#160;}</div><div class="ttc" id="classarmnn_1_1_tensor_info_xhtml"><div class="ttname"><a href="classarmnn_1_1_tensor_info.xhtml">armnn::TensorInfo</a></div><div class="ttdef"><b>Definition:</b> <a href="_tensor_8hpp_source.xhtml#l00152">Tensor.hpp:152</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="a9573a516a902021f7b24fc8a8172ea8e"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a9573a516a902021f7b24fc8a8172ea8e">&#9670;&nbsp;</a></span>Convolution2d3x3Stride2x2BFloat16SmallValueTest()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="struct_layer_test_result.xhtml">LayerTestResult</a>&lt;float, 4&gt; Convolution2d3x3Stride2x2BFloat16SmallValueTest </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classarmnn_1_1_i_workload_factory.xhtml">armnn::IWorkloadFactory</a> &amp;&#160;</td>
          <td class="paramname"><em>workloadFactory</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_i_backend_internal.xhtml#a693b40e6b94e958836aeb0410ca186bd">armnn::IBackendInternal::IMemoryManagerSharedPtr</a> &amp;&#160;</td>
          <td class="paramname"><em>memoryManager</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_i_tensor_handle_factory.xhtml">armnn::ITensorHandleFactory</a> &amp;&#160;</td>
          <td class="paramname"><em>tensorHandleFactory</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>biasEnabled</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="namespacearmnn.xhtml#ad1d5cce2d9e9a5d61c243e5c989112e0">armnn::DataLayout</a> &amp;&#160;</td>
          <td class="paramname"><em>dataLayout</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_conv2d_test_impl_8cpp_source.xhtml#l01602">1602</a> of file <a class="el" href="_conv2d_test_impl_8cpp_source.xhtml">Conv2dTestImpl.cpp</a>.</p>

<p class="reference">References <a class="el" href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6acdb56b2d2f73c26480207524f2dbe0af">armnn::BFloat16</a>, <a class="el" href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a166495adc0d0f53bee6baecc577f5204">armnn::Float32</a>, <a class="el" href="_ignore_unused_8hpp_source.xhtml#l00014">armnn::IgnoreUnused()</a>, and <a class="el" href="_conv2d_test_impl_8cpp_source.xhtml#l00384">SimpleConvolution2dNhwcTestImpl()</a>.</p>

<p class="reference">Referenced by <a class="el" href="_ref_layer_tests_8cpp_source.xhtml#l00014">TEST_SUITE()</a>.</p>
<div class="fragment"><div class="line"><a name="l01608"></a><span class="lineno"> 1608</span>&#160;{</div><div class="line"><a name="l01609"></a><span class="lineno"> 1609</span>&#160;    <span class="comment">// BFloat16 input and weight, Float32 output</span></div><div class="line"><a name="l01610"></a><span class="lineno"> 1610</span>&#160;    <a class="code" href="namespacearmnn.xhtml#a44affeeb090c3c6a3062830562672e84">armnn::IgnoreUnused</a>(biasEnabled);</div><div class="line"><a name="l01611"></a><span class="lineno"> 1611</span>&#160;</div><div class="line"><a name="l01612"></a><span class="lineno"> 1612</span>&#160;    <span class="comment">// Input is a single-batch, 1 channel, 5x5 image.</span></div><div class="line"><a name="l01613"></a><span class="lineno"> 1613</span>&#160;    <a class="code" href="classarmnn_1_1_tensor_info.xhtml">armnn::TensorInfo</a> inputDesc({1, 5, 5, 1}, <a class="code" href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6acdb56b2d2f73c26480207524f2dbe0af">armnn::DataType::BFloat16</a>);</div><div class="line"><a name="l01614"></a><span class="lineno"> 1614</span>&#160;</div><div class="line"><a name="l01615"></a><span class="lineno"> 1615</span>&#160;    std::vector&lt;armnn::BFloat16&gt; inputValues = armnnUtils::QuantizedVector&lt;armnn::BFloat16&gt;(</div><div class="line"><a name="l01616"></a><span class="lineno"> 1616</span>&#160;        {</div><div class="line"><a name="l01617"></a><span class="lineno"> 1617</span>&#160;            0.0367984f,  <span class="comment">// 0.0368652</span></div><div class="line"><a name="l01618"></a><span class="lineno"> 1618</span>&#160;            0.0380895f,  <span class="comment">// 0.0380859</span></div><div class="line"><a name="l01619"></a><span class="lineno"> 1619</span>&#160;            0.0420157f,  <span class="comment">// 0.0419922</span></div><div class="line"><a name="l01620"></a><span class="lineno"> 1620</span>&#160;            0.0675631f,  <span class="comment">// 0.0673828</span></div><div class="line"><a name="l01621"></a><span class="lineno"> 1621</span>&#160;            0.0938920f,  <span class="comment">// 0.09375</span></div><div class="line"><a name="l01622"></a><span class="lineno"> 1622</span>&#160;            0.0476106f,  <span class="comment">// 0.0476074</span></div><div class="line"><a name="l01623"></a><span class="lineno"> 1623</span>&#160;            0.1035490f,  <span class="comment">// 0.103516</span></div><div class="line"><a name="l01624"></a><span class="lineno"> 1624</span>&#160;            0.1260370f,  <span class="comment">// 0.125977</span></div><div class="line"><a name="l01625"></a><span class="lineno"> 1625</span>&#160;            0.0461647f,  <span class="comment">// 0.0461426</span></div><div class="line"><a name="l01626"></a><span class="lineno"> 1626</span>&#160;            0.0883828f,  <span class="comment">// 0.0883789</span></div><div class="line"><a name="l01627"></a><span class="lineno"> 1627</span>&#160;            0.1159540f,  <span class="comment">// 0.115723</span></div><div class="line"><a name="l01628"></a><span class="lineno"> 1628</span>&#160;            0.0498519f,  <span class="comment">// 0.0498047</span></div><div class="line"><a name="l01629"></a><span class="lineno"> 1629</span>&#160;            0.0104630f,  <span class="comment">// 0.010437</span></div><div class="line"><a name="l01630"></a><span class="lineno"> 1630</span>&#160;            0.0154114f,  <span class="comment">// 0.0154419</span></div><div class="line"><a name="l01631"></a><span class="lineno"> 1631</span>&#160;            0.00137681f, <span class="comment">// 0.00137329</span></div><div class="line"><a name="l01632"></a><span class="lineno"> 1632</span>&#160;            0.0344238f,  <span class="comment">// 0.0344616</span></div><div class="line"><a name="l01633"></a><span class="lineno"> 1633</span>&#160;            0.0356445f,  <span class="comment">// 0.0355693</span></div><div class="line"><a name="l01634"></a><span class="lineno"> 1634</span>&#160;            0.0495605f,  <span class="comment">// 0.0495018</span></div><div class="line"><a name="l01635"></a><span class="lineno"> 1635</span>&#160;            0.0683594f,  <span class="comment">// 0.0683308</span></div><div class="line"><a name="l01636"></a><span class="lineno"> 1636</span>&#160;            0.0991211f,  <span class="comment">// 0.0988837</span></div><div class="line"><a name="l01637"></a><span class="lineno"> 1637</span>&#160;            0.0461426f,  <span class="comment">// 0.0461838</span></div><div class="line"><a name="l01638"></a><span class="lineno"> 1638</span>&#160;            0.0996094f,  <span class="comment">// 0.0997546</span></div><div class="line"><a name="l01639"></a><span class="lineno"> 1639</span>&#160;            0.1269530f,  <span class="comment">// 0.127099</span></div><div class="line"><a name="l01640"></a><span class="lineno"> 1640</span>&#160;            0.0393066f,  <span class="comment">// 0.0392791</span></div><div class="line"><a name="l01641"></a><span class="lineno"> 1641</span>&#160;            0.103516f    <span class="comment">// 0.103641</span></div><div class="line"><a name="l01642"></a><span class="lineno"> 1642</span>&#160;       },</div><div class="line"><a name="l01643"></a><span class="lineno"> 1643</span>&#160;        1.0f, 0);</div><div class="line"><a name="l01644"></a><span class="lineno"> 1644</span>&#160;</div><div class="line"><a name="l01645"></a><span class="lineno"> 1645</span>&#160;    <span class="comment">// Use a 3x3 kernel.</span></div><div class="line"><a name="l01646"></a><span class="lineno"> 1646</span>&#160;    <a class="code" href="classarmnn_1_1_tensor_info.xhtml">armnn::TensorInfo</a> kernelDesc({1, 3, 3, 1}, <a class="code" href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6acdb56b2d2f73c26480207524f2dbe0af">armnn::DataType::BFloat16</a>);</div><div class="line"><a name="l01647"></a><span class="lineno"> 1647</span>&#160;</div><div class="line"><a name="l01648"></a><span class="lineno"> 1648</span>&#160;    std::vector&lt;armnn::BFloat16&gt; kernelValues = armnnUtils::QuantizedVector&lt;armnn::BFloat16&gt;(</div><div class="line"><a name="l01649"></a><span class="lineno"> 1649</span>&#160;        {</div><div class="line"><a name="l01650"></a><span class="lineno"> 1650</span>&#160;            -0.126184f, <span class="comment">// -0.125977</span></div><div class="line"><a name="l01651"></a><span class="lineno"> 1651</span>&#160;            -0.150468f, <span class="comment">// -0.150391</span></div><div class="line"><a name="l01652"></a><span class="lineno"> 1652</span>&#160;            -0.101412f, <span class="comment">// -0.101562</span></div><div class="line"><a name="l01653"></a><span class="lineno"> 1653</span>&#160;            -0.0586369f,<span class="comment">// -0.0585938</span></div><div class="line"><a name="l01654"></a><span class="lineno"> 1654</span>&#160;            -0.0865864f,<span class="comment">// -0.0864258</span></div><div class="line"><a name="l01655"></a><span class="lineno"> 1655</span>&#160;            -0.0435089f,<span class="comment">// -0.043457</span></div><div class="line"><a name="l01656"></a><span class="lineno"> 1656</span>&#160;            0.0347555f, <span class="comment">// 0.034668</span></div><div class="line"><a name="l01657"></a><span class="lineno"> 1657</span>&#160;            0.0323111f, <span class="comment">// 0.0322266</span></div><div class="line"><a name="l01658"></a><span class="lineno"> 1658</span>&#160;            0.0385381f  <span class="comment">// 0.0385742</span></div><div class="line"><a name="l01659"></a><span class="lineno"> 1659</span>&#160;         },</div><div class="line"><a name="l01660"></a><span class="lineno"> 1660</span>&#160;        1.0f, 0);</div><div class="line"><a name="l01661"></a><span class="lineno"> 1661</span>&#160;</div><div class="line"><a name="l01662"></a><span class="lineno"> 1662</span>&#160;    <span class="comment">// Expected output is a single-batch, 1 channel, 3x3 image.</span></div><div class="line"><a name="l01663"></a><span class="lineno"> 1663</span>&#160;    <a class="code" href="classarmnn_1_1_tensor_info.xhtml">armnn::TensorInfo</a> outputDesc({1, 3, 3, 1}, <a class="code" href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a166495adc0d0f53bee6baecc577f5204">armnn::DataType::Float32</a>);</div><div class="line"><a name="l01664"></a><span class="lineno"> 1664</span>&#160;</div><div class="line"><a name="l01665"></a><span class="lineno"> 1665</span>&#160;    <span class="comment">// Expected output (with results if calculated as FP32 in the comments)</span></div><div class="line"><a name="l01666"></a><span class="lineno"> 1666</span>&#160;    <span class="keyword">const</span> std::vector&lt;float&gt; outputData =</div><div class="line"><a name="l01667"></a><span class="lineno"> 1667</span>&#160;        {</div><div class="line"><a name="l01668"></a><span class="lineno"> 1668</span>&#160;             0.000686645508f, <span class="comment">// 0.000685</span></div><div class="line"><a name="l01669"></a><span class="lineno"> 1669</span>&#160;             0.000640869141f, <span class="comment">// 0.000639</span></div><div class="line"><a name="l01670"></a><span class="lineno"> 1670</span>&#160;            -0.00759887695f,  <span class="comment">// -0.007631</span></div><div class="line"><a name="l01671"></a><span class="lineno"> 1671</span>&#160;            -0.02734375f,     <span class="comment">// -0.027388</span></div><div class="line"><a name="l01672"></a><span class="lineno"> 1672</span>&#160;            -0.0356445312f,   <span class="comment">// -0.035737</span></div><div class="line"><a name="l01673"></a><span class="lineno"> 1673</span>&#160;            -0.0145874023f,   <span class="comment">// -0.014568</span></div><div class="line"><a name="l01674"></a><span class="lineno"> 1674</span>&#160;            -0.0170898438f,   <span class="comment">// -0.017124</span></div><div class="line"><a name="l01675"></a><span class="lineno"> 1675</span>&#160;            -0.0373535156f,   <span class="comment">// -0.037431</span></div><div class="line"><a name="l01676"></a><span class="lineno"> 1676</span>&#160;            -0.0346679688f    <span class="comment">// -0.034808</span></div><div class="line"><a name="l01677"></a><span class="lineno"> 1677</span>&#160;        };</div><div class="line"><a name="l01678"></a><span class="lineno"> 1678</span>&#160;</div><div class="line"><a name="l01679"></a><span class="lineno"> 1679</span>&#160;    uint32_t padLeft = 1;</div><div class="line"><a name="l01680"></a><span class="lineno"> 1680</span>&#160;    uint32_t padTop = 1;</div><div class="line"><a name="l01681"></a><span class="lineno"> 1681</span>&#160;    uint32_t padRight = 1;</div><div class="line"><a name="l01682"></a><span class="lineno"> 1682</span>&#160;    uint32_t padBottom = 1;</div><div class="line"><a name="l01683"></a><span class="lineno"> 1683</span>&#160;    uint32_t strideX  = 2;</div><div class="line"><a name="l01684"></a><span class="lineno"> 1684</span>&#160;    uint32_t strideY  = 2;</div><div class="line"><a name="l01685"></a><span class="lineno"> 1685</span>&#160;</div><div class="line"><a name="l01686"></a><span class="lineno"> 1686</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="_conv2d_test_impl_8cpp.xhtml#a256398b312900df32814182d5eeb4527">SimpleConvolution2dNhwcTestImpl</a></div><div class="line"><a name="l01687"></a><span class="lineno"> 1687</span>&#160;        &lt;<a class="code" href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6acdb56b2d2f73c26480207524f2dbe0af">armnn::DataType::BFloat16</a>, <a class="code" href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a166495adc0d0f53bee6baecc577f5204">armnn::DataType::Float32</a>, <a class="code" href="classarmnn_1_1_b_float16.xhtml">armnn::BFloat16</a>, float, <a class="code" href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a166495adc0d0f53bee6baecc577f5204">armnn::DataType::Float32</a>, <span class="keywordtype">float</span>&gt;(</div><div class="line"><a name="l01688"></a><span class="lineno"> 1688</span>&#160;        workloadFactory,</div><div class="line"><a name="l01689"></a><span class="lineno"> 1689</span>&#160;        memoryManager,</div><div class="line"><a name="l01690"></a><span class="lineno"> 1690</span>&#160;        tensorHandleFactory,</div><div class="line"><a name="l01691"></a><span class="lineno"> 1691</span>&#160;        inputValues,</div><div class="line"><a name="l01692"></a><span class="lineno"> 1692</span>&#160;        kernelValues,</div><div class="line"><a name="l01693"></a><span class="lineno"> 1693</span>&#160;        std::vector&lt;float&gt;(),</div><div class="line"><a name="l01694"></a><span class="lineno"> 1694</span>&#160;        outputData,</div><div class="line"><a name="l01695"></a><span class="lineno"> 1695</span>&#160;        inputDesc.GetShape(),</div><div class="line"><a name="l01696"></a><span class="lineno"> 1696</span>&#160;        kernelDesc.GetShape(),</div><div class="line"><a name="l01697"></a><span class="lineno"> 1697</span>&#160;        outputDesc.GetShape(),</div><div class="line"><a name="l01698"></a><span class="lineno"> 1698</span>&#160;        dataLayout,</div><div class="line"><a name="l01699"></a><span class="lineno"> 1699</span>&#160;        1.0f,</div><div class="line"><a name="l01700"></a><span class="lineno"> 1700</span>&#160;        0,</div><div class="line"><a name="l01701"></a><span class="lineno"> 1701</span>&#160;        padLeft,</div><div class="line"><a name="l01702"></a><span class="lineno"> 1702</span>&#160;        padTop,</div><div class="line"><a name="l01703"></a><span class="lineno"> 1703</span>&#160;        padRight,</div><div class="line"><a name="l01704"></a><span class="lineno"> 1704</span>&#160;        padBottom,</div><div class="line"><a name="l01705"></a><span class="lineno"> 1705</span>&#160;        strideX,</div><div class="line"><a name="l01706"></a><span class="lineno"> 1706</span>&#160;        strideY);</div><div class="line"><a name="l01707"></a><span class="lineno"> 1707</span>&#160;}</div><div class="ttc" id="_conv2d_test_impl_8cpp_xhtml_a256398b312900df32814182d5eeb4527"><div class="ttname"><a href="_conv2d_test_impl_8cpp.xhtml#a256398b312900df32814182d5eeb4527">SimpleConvolution2dNhwcTestImpl</a></div><div class="ttdeci">LayerTestResult&lt; O, 4 &gt; SimpleConvolution2dNhwcTestImpl(armnn::IWorkloadFactory &amp;workloadFactory, const armnn::IBackendInternal::IMemoryManagerSharedPtr &amp;memoryManager, const armnn::ITensorHandleFactory &amp;tensorHandleFactory, const std::vector&lt; T &gt; &amp;input, const std::vector&lt; T &gt; &amp;kernel, const std::vector&lt; B &gt; &amp;bias, const std::vector&lt; O &gt; &amp;outputExpected, const armnn::TensorShape &amp;inputShape, const armnn::TensorShape &amp;kernelShape, const armnn::TensorShape &amp;outputExpectedShape, const armnn::DataLayout dataLayout, float qScale, int32_t qOffset, uint32_t padLeft=1, uint32_t padTop=1, uint32_t padRight=1, uint32_t padBottom=1, uint32_t strideX=1, uint32_t strideY=1)</div><div class="ttdef"><b>Definition:</b> <a href="_conv2d_test_impl_8cpp_source.xhtml#l00384">Conv2dTestImpl.cpp:384</a></div></div>
<div class="ttc" id="classarmnn_1_1_tensor_info_xhtml"><div class="ttname"><a href="classarmnn_1_1_tensor_info.xhtml">armnn::TensorInfo</a></div><div class="ttdef"><b>Definition:</b> <a href="_tensor_8hpp_source.xhtml#l00152">Tensor.hpp:152</a></div></div>
<div class="ttc" id="classarmnn_1_1_b_float16_xhtml"><div class="ttname"><a href="classarmnn_1_1_b_float16.xhtml">armnn::BFloat16</a></div><div class="ttdef"><b>Definition:</b> <a href="_b_float16_8hpp_source.xhtml#l00015">BFloat16.hpp:15</a></div></div>
<div class="ttc" id="namespacearmnn_xhtml_a44affeeb090c3c6a3062830562672e84"><div class="ttname"><a href="namespacearmnn.xhtml#a44affeeb090c3c6a3062830562672e84">armnn::IgnoreUnused</a></div><div class="ttdeci">void IgnoreUnused(Ts &amp;&amp;...)</div><div class="ttdef"><b>Definition:</b> <a href="_ignore_unused_8hpp_source.xhtml#l00014">IgnoreUnused.hpp:14</a></div></div>
<div class="ttc" id="namespacearmnn_xhtml_ad8ed01ff3ff33333d8e19db4d2818bb6acdb56b2d2f73c26480207524f2dbe0af"><div class="ttname"><a href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6acdb56b2d2f73c26480207524f2dbe0af">armnn::DataType::BFloat16</a></div></div>
<div class="ttc" id="namespacearmnn_xhtml_ad8ed01ff3ff33333d8e19db4d2818bb6a166495adc0d0f53bee6baecc577f5204"><div class="ttname"><a href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a166495adc0d0f53bee6baecc577f5204">armnn::DataType::Float32</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="afba5868ef96cceb570cc4b8223f3019c"></a>
<h2 class="memtitle"><span class="permalink"><a href="#afba5868ef96cceb570cc4b8223f3019c">&#9670;&nbsp;</a></span>Convolution2d3x3Stride2x2BFloat16Test()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="struct_layer_test_result.xhtml">LayerTestResult</a>&lt;float, 4&gt; Convolution2d3x3Stride2x2BFloat16Test </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classarmnn_1_1_i_workload_factory.xhtml">armnn::IWorkloadFactory</a> &amp;&#160;</td>
          <td class="paramname"><em>workloadFactory</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_i_backend_internal.xhtml#a693b40e6b94e958836aeb0410ca186bd">armnn::IBackendInternal::IMemoryManagerSharedPtr</a> &amp;&#160;</td>
          <td class="paramname"><em>memoryManager</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_i_tensor_handle_factory.xhtml">armnn::ITensorHandleFactory</a> &amp;&#160;</td>
          <td class="paramname"><em>tensorHandleFactory</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>biasEnabled</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="namespacearmnn.xhtml#ad1d5cce2d9e9a5d61c243e5c989112e0">armnn::DataLayout</a> &amp;&#160;</td>
          <td class="paramname"><em>dataLayout</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_conv2d_test_impl_8cpp_source.xhtml#l01495">1495</a> of file <a class="el" href="_conv2d_test_impl_8cpp_source.xhtml">Conv2dTestImpl.cpp</a>.</p>

<p class="reference">References <a class="el" href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6acdb56b2d2f73c26480207524f2dbe0af">armnn::BFloat16</a>, <a class="el" href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a166495adc0d0f53bee6baecc577f5204">armnn::Float32</a>, <a class="el" href="_ignore_unused_8hpp_source.xhtml#l00014">armnn::IgnoreUnused()</a>, and <a class="el" href="_conv2d_test_impl_8cpp_source.xhtml#l00384">SimpleConvolution2dNhwcTestImpl()</a>.</p>

<p class="reference">Referenced by <a class="el" href="_ref_layer_tests_8cpp_source.xhtml#l00014">TEST_SUITE()</a>.</p>
<div class="fragment"><div class="line"><a name="l01501"></a><span class="lineno"> 1501</span>&#160;{</div><div class="line"><a name="l01502"></a><span class="lineno"> 1502</span>&#160;    <span class="comment">// BFloat16 input and weight, Float32 output</span></div><div class="line"><a name="l01503"></a><span class="lineno"> 1503</span>&#160;    <a class="code" href="namespacearmnn.xhtml#a44affeeb090c3c6a3062830562672e84">armnn::IgnoreUnused</a>(biasEnabled);</div><div class="line"><a name="l01504"></a><span class="lineno"> 1504</span>&#160;</div><div class="line"><a name="l01505"></a><span class="lineno"> 1505</span>&#160;    <span class="comment">// Input is a single-batch, 1 channel, 5x5 image.</span></div><div class="line"><a name="l01506"></a><span class="lineno"> 1506</span>&#160;    <a class="code" href="classarmnn_1_1_tensor_info.xhtml">armnn::TensorInfo</a> inputDesc({ 1, 5, 5, 1 }, <a class="code" href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6acdb56b2d2f73c26480207524f2dbe0af">armnn::DataType::BFloat16</a>);</div><div class="line"><a name="l01507"></a><span class="lineno"> 1507</span>&#160;</div><div class="line"><a name="l01508"></a><span class="lineno"> 1508</span>&#160;    std::vector&lt;armnn::BFloat16&gt; inputValues = armnnUtils::QuantizedVector&lt;armnn::BFloat16&gt;(</div><div class="line"><a name="l01509"></a><span class="lineno"> 1509</span>&#160;        {</div><div class="line"><a name="l01510"></a><span class="lineno"> 1510</span>&#160;            10.0367984f,  <span class="comment">// 10.0625</span></div><div class="line"><a name="l01511"></a><span class="lineno"> 1511</span>&#160;             2.0380895f,  <span class="comment">// 2.03125</span></div><div class="line"><a name="l01512"></a><span class="lineno"> 1512</span>&#160;            15.0420157f,  <span class="comment">// 15.0625</span></div><div class="line"><a name="l01513"></a><span class="lineno"> 1513</span>&#160;            22.0675631f,  <span class="comment">// 22.125</span></div><div class="line"><a name="l01514"></a><span class="lineno"> 1514</span>&#160;             8.0938920f,  <span class="comment">// 8.125</span></div><div class="line"><a name="l01515"></a><span class="lineno"> 1515</span>&#160;             5.0476106f,  <span class="comment">// 5.0625</span></div><div class="line"><a name="l01516"></a><span class="lineno"> 1516</span>&#160;            80.1035490f,  <span class="comment">// 80</span></div><div class="line"><a name="l01517"></a><span class="lineno"> 1517</span>&#160;           100.1260370f,  <span class="comment">// 100</span></div><div class="line"><a name="l01518"></a><span class="lineno"> 1518</span>&#160;            55.0461647f,  <span class="comment">// 55</span></div><div class="line"><a name="l01519"></a><span class="lineno"> 1519</span>&#160;           120.0883828f,  <span class="comment">// 120</span></div><div class="line"><a name="l01520"></a><span class="lineno"> 1520</span>&#160;             9.1159540f,  <span class="comment">// 9.125</span></div><div class="line"><a name="l01521"></a><span class="lineno"> 1521</span>&#160;            90.0498519f,  <span class="comment">// 90</span></div><div class="line"><a name="l01522"></a><span class="lineno"> 1522</span>&#160;           200.0104630f,  <span class="comment">// 200</span></div><div class="line"><a name="l01523"></a><span class="lineno"> 1523</span>&#160;            30.0154114f,  <span class="comment">// 30</span></div><div class="line"><a name="l01524"></a><span class="lineno"> 1524</span>&#160;            75.00137681f, <span class="comment">// 75</span></div><div class="line"><a name="l01525"></a><span class="lineno"> 1525</span>&#160;            30.0344238f,  <span class="comment">// 30</span></div><div class="line"><a name="l01526"></a><span class="lineno"> 1526</span>&#160;            25.0356445f,  <span class="comment">// 25</span></div><div class="line"><a name="l01527"></a><span class="lineno"> 1527</span>&#160;           130.0495605f,  <span class="comment">// 130</span></div><div class="line"><a name="l01528"></a><span class="lineno"> 1528</span>&#160;            60.0683594f,  <span class="comment">// 60</span></div><div class="line"><a name="l01529"></a><span class="lineno"> 1529</span>&#160;            35.0991211f,  <span class="comment">// 35</span></div><div class="line"><a name="l01530"></a><span class="lineno"> 1530</span>&#160;             8.0461426f,  <span class="comment">// 8.0625</span></div><div class="line"><a name="l01531"></a><span class="lineno"> 1531</span>&#160;            12.0996094f,  <span class="comment">// 12.125</span></div><div class="line"><a name="l01532"></a><span class="lineno"> 1532</span>&#160;            98.1269530f,  <span class="comment">// 98</span></div><div class="line"><a name="l01533"></a><span class="lineno"> 1533</span>&#160;           125.0393066f,  <span class="comment">// 125</span></div><div class="line"><a name="l01534"></a><span class="lineno"> 1534</span>&#160;             5.103516f    <span class="comment">// 5.0937</span></div><div class="line"><a name="l01535"></a><span class="lineno"> 1535</span>&#160;       },</div><div class="line"><a name="l01536"></a><span class="lineno"> 1536</span>&#160;        1.0f, 0);</div><div class="line"><a name="l01537"></a><span class="lineno"> 1537</span>&#160;</div><div class="line"><a name="l01538"></a><span class="lineno"> 1538</span>&#160;    <span class="comment">// Use a 3x3 kernel.</span></div><div class="line"><a name="l01539"></a><span class="lineno"> 1539</span>&#160;    <a class="code" href="classarmnn_1_1_tensor_info.xhtml">armnn::TensorInfo</a> kernelDesc({1, 3, 3, 1}, <a class="code" href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6acdb56b2d2f73c26480207524f2dbe0af">armnn::DataType::BFloat16</a>);</div><div class="line"><a name="l01540"></a><span class="lineno"> 1540</span>&#160;</div><div class="line"><a name="l01541"></a><span class="lineno"> 1541</span>&#160;    std::vector&lt;armnn::BFloat16&gt; kernelValues = armnnUtils::QuantizedVector&lt;armnn::BFloat16&gt;(</div><div class="line"><a name="l01542"></a><span class="lineno"> 1542</span>&#160;        {</div><div class="line"><a name="l01543"></a><span class="lineno"> 1543</span>&#160;            -0.126184f, <span class="comment">// -0.125977</span></div><div class="line"><a name="l01544"></a><span class="lineno"> 1544</span>&#160;            -0.150468f, <span class="comment">// -0.150391</span></div><div class="line"><a name="l01545"></a><span class="lineno"> 1545</span>&#160;            -0.101412f, <span class="comment">// -0.101562</span></div><div class="line"><a name="l01546"></a><span class="lineno"> 1546</span>&#160;            -0.0586369f,<span class="comment">// -0.0585938</span></div><div class="line"><a name="l01547"></a><span class="lineno"> 1547</span>&#160;            -0.0865864f,<span class="comment">// -0.0864258</span></div><div class="line"><a name="l01548"></a><span class="lineno"> 1548</span>&#160;            -0.0435089f,<span class="comment">// -0.043457</span></div><div class="line"><a name="l01549"></a><span class="lineno"> 1549</span>&#160;            0.0347555f, <span class="comment">// 0.034668</span></div><div class="line"><a name="l01550"></a><span class="lineno"> 1550</span>&#160;            0.0323111f, <span class="comment">// 0.0322266</span></div><div class="line"><a name="l01551"></a><span class="lineno"> 1551</span>&#160;            0.0385381f  <span class="comment">// 0.0385742</span></div><div class="line"><a name="l01552"></a><span class="lineno"> 1552</span>&#160;         },</div><div class="line"><a name="l01553"></a><span class="lineno"> 1553</span>&#160;        1.0f, 0);</div><div class="line"><a name="l01554"></a><span class="lineno"> 1554</span>&#160;</div><div class="line"><a name="l01555"></a><span class="lineno"> 1555</span>&#160;    <span class="comment">// Expected output is a single-batch, 1 channel, 3x3 image.</span></div><div class="line"><a name="l01556"></a><span class="lineno"> 1556</span>&#160;    <a class="code" href="classarmnn_1_1_tensor_info.xhtml">armnn::TensorInfo</a> outputDesc({ 1, 3, 3, 1 }, <a class="code" href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a166495adc0d0f53bee6baecc577f5204">armnn::DataType::Float32</a>);</div><div class="line"><a name="l01557"></a><span class="lineno"> 1557</span>&#160;</div><div class="line"><a name="l01558"></a><span class="lineno"> 1558</span>&#160;    <span class="comment">// Expected output (with results if calculated as FP32 in the comments)</span></div><div class="line"><a name="l01559"></a><span class="lineno"> 1559</span>&#160;    <span class="keyword">const</span> std::vector&lt;float&gt; outputData =</div><div class="line"><a name="l01560"></a><span class="lineno"> 1560</span>&#160;        {</div><div class="line"><a name="l01561"></a><span class="lineno"> 1561</span>&#160;            2.296875f, <span class="comment">//  2.29240716</span></div><div class="line"><a name="l01562"></a><span class="lineno"> 1562</span>&#160;            5.75f,     <span class="comment">//  5.75851926</span></div><div class="line"><a name="l01563"></a><span class="lineno"> 1563</span>&#160;            3.78125f,  <span class="comment">//  3.79855026</span></div><div class="line"><a name="l01564"></a><span class="lineno"> 1564</span>&#160;            -11.625f,  <span class="comment">// -11.65498118</span></div><div class="line"><a name="l01565"></a><span class="lineno"> 1565</span>&#160;            -47.25f,   <span class="comment">// -47.27316893</span></div><div class="line"><a name="l01566"></a><span class="lineno"> 1566</span>&#160;            -30.0f,    <span class="comment">// -30.04771684</span></div><div class="line"><a name="l01567"></a><span class="lineno"> 1567</span>&#160;            -8.25f,    <span class="comment">//  -8.28126168</span></div><div class="line"><a name="l01568"></a><span class="lineno"> 1568</span>&#160;            -43.5f,    <span class="comment">// -43.46531337</span></div><div class="line"><a name="l01569"></a><span class="lineno"> 1569</span>&#160;            -20.625f   <span class="comment">// -20.63477281</span></div><div class="line"><a name="l01570"></a><span class="lineno"> 1570</span>&#160;        };</div><div class="line"><a name="l01571"></a><span class="lineno"> 1571</span>&#160;</div><div class="line"><a name="l01572"></a><span class="lineno"> 1572</span>&#160;    uint32_t padLeft = 1;</div><div class="line"><a name="l01573"></a><span class="lineno"> 1573</span>&#160;    uint32_t padTop = 1;</div><div class="line"><a name="l01574"></a><span class="lineno"> 1574</span>&#160;    uint32_t padRight = 1;</div><div class="line"><a name="l01575"></a><span class="lineno"> 1575</span>&#160;    uint32_t padBottom = 1;</div><div class="line"><a name="l01576"></a><span class="lineno"> 1576</span>&#160;    uint32_t strideX  = 2;</div><div class="line"><a name="l01577"></a><span class="lineno"> 1577</span>&#160;    uint32_t strideY  = 2;</div><div class="line"><a name="l01578"></a><span class="lineno"> 1578</span>&#160;</div><div class="line"><a name="l01579"></a><span class="lineno"> 1579</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="_conv2d_test_impl_8cpp.xhtml#a256398b312900df32814182d5eeb4527">SimpleConvolution2dNhwcTestImpl</a></div><div class="line"><a name="l01580"></a><span class="lineno"> 1580</span>&#160;        &lt;<a class="code" href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6acdb56b2d2f73c26480207524f2dbe0af">armnn::DataType::BFloat16</a>, <a class="code" href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a166495adc0d0f53bee6baecc577f5204">armnn::DataType::Float32</a>, <a class="code" href="classarmnn_1_1_b_float16.xhtml">armnn::BFloat16</a>, float, <a class="code" href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a166495adc0d0f53bee6baecc577f5204">armnn::DataType::Float32</a>, <span class="keywordtype">float</span>&gt;(</div><div class="line"><a name="l01581"></a><span class="lineno"> 1581</span>&#160;        workloadFactory,</div><div class="line"><a name="l01582"></a><span class="lineno"> 1582</span>&#160;        memoryManager,</div><div class="line"><a name="l01583"></a><span class="lineno"> 1583</span>&#160;        tensorHandleFactory,</div><div class="line"><a name="l01584"></a><span class="lineno"> 1584</span>&#160;        inputValues,</div><div class="line"><a name="l01585"></a><span class="lineno"> 1585</span>&#160;        kernelValues,</div><div class="line"><a name="l01586"></a><span class="lineno"> 1586</span>&#160;        std::vector&lt;float&gt;(),</div><div class="line"><a name="l01587"></a><span class="lineno"> 1587</span>&#160;        outputData,</div><div class="line"><a name="l01588"></a><span class="lineno"> 1588</span>&#160;        inputDesc.GetShape(),</div><div class="line"><a name="l01589"></a><span class="lineno"> 1589</span>&#160;        kernelDesc.GetShape(),</div><div class="line"><a name="l01590"></a><span class="lineno"> 1590</span>&#160;        outputDesc.GetShape(),</div><div class="line"><a name="l01591"></a><span class="lineno"> 1591</span>&#160;        dataLayout,</div><div class="line"><a name="l01592"></a><span class="lineno"> 1592</span>&#160;        1.0f,</div><div class="line"><a name="l01593"></a><span class="lineno"> 1593</span>&#160;        0,</div><div class="line"><a name="l01594"></a><span class="lineno"> 1594</span>&#160;        padLeft,</div><div class="line"><a name="l01595"></a><span class="lineno"> 1595</span>&#160;        padTop,</div><div class="line"><a name="l01596"></a><span class="lineno"> 1596</span>&#160;        padRight,</div><div class="line"><a name="l01597"></a><span class="lineno"> 1597</span>&#160;        padBottom,</div><div class="line"><a name="l01598"></a><span class="lineno"> 1598</span>&#160;        strideX,</div><div class="line"><a name="l01599"></a><span class="lineno"> 1599</span>&#160;        strideY);</div><div class="line"><a name="l01600"></a><span class="lineno"> 1600</span>&#160;}</div><div class="ttc" id="_conv2d_test_impl_8cpp_xhtml_a256398b312900df32814182d5eeb4527"><div class="ttname"><a href="_conv2d_test_impl_8cpp.xhtml#a256398b312900df32814182d5eeb4527">SimpleConvolution2dNhwcTestImpl</a></div><div class="ttdeci">LayerTestResult&lt; O, 4 &gt; SimpleConvolution2dNhwcTestImpl(armnn::IWorkloadFactory &amp;workloadFactory, const armnn::IBackendInternal::IMemoryManagerSharedPtr &amp;memoryManager, const armnn::ITensorHandleFactory &amp;tensorHandleFactory, const std::vector&lt; T &gt; &amp;input, const std::vector&lt; T &gt; &amp;kernel, const std::vector&lt; B &gt; &amp;bias, const std::vector&lt; O &gt; &amp;outputExpected, const armnn::TensorShape &amp;inputShape, const armnn::TensorShape &amp;kernelShape, const armnn::TensorShape &amp;outputExpectedShape, const armnn::DataLayout dataLayout, float qScale, int32_t qOffset, uint32_t padLeft=1, uint32_t padTop=1, uint32_t padRight=1, uint32_t padBottom=1, uint32_t strideX=1, uint32_t strideY=1)</div><div class="ttdef"><b>Definition:</b> <a href="_conv2d_test_impl_8cpp_source.xhtml#l00384">Conv2dTestImpl.cpp:384</a></div></div>
<div class="ttc" id="classarmnn_1_1_tensor_info_xhtml"><div class="ttname"><a href="classarmnn_1_1_tensor_info.xhtml">armnn::TensorInfo</a></div><div class="ttdef"><b>Definition:</b> <a href="_tensor_8hpp_source.xhtml#l00152">Tensor.hpp:152</a></div></div>
<div class="ttc" id="classarmnn_1_1_b_float16_xhtml"><div class="ttname"><a href="classarmnn_1_1_b_float16.xhtml">armnn::BFloat16</a></div><div class="ttdef"><b>Definition:</b> <a href="_b_float16_8hpp_source.xhtml#l00015">BFloat16.hpp:15</a></div></div>
<div class="ttc" id="namespacearmnn_xhtml_a44affeeb090c3c6a3062830562672e84"><div class="ttname"><a href="namespacearmnn.xhtml#a44affeeb090c3c6a3062830562672e84">armnn::IgnoreUnused</a></div><div class="ttdeci">void IgnoreUnused(Ts &amp;&amp;...)</div><div class="ttdef"><b>Definition:</b> <a href="_ignore_unused_8hpp_source.xhtml#l00014">IgnoreUnused.hpp:14</a></div></div>
<div class="ttc" id="namespacearmnn_xhtml_ad8ed01ff3ff33333d8e19db4d2818bb6acdb56b2d2f73c26480207524f2dbe0af"><div class="ttname"><a href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6acdb56b2d2f73c26480207524f2dbe0af">armnn::DataType::BFloat16</a></div></div>
<div class="ttc" id="namespacearmnn_xhtml_ad8ed01ff3ff33333d8e19db4d2818bb6a166495adc0d0f53bee6baecc577f5204"><div class="ttname"><a href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a166495adc0d0f53bee6baecc577f5204">armnn::DataType::Float32</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="ab1b3e3dfbd3807989911b05b5830f7ea"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ab1b3e3dfbd3807989911b05b5830f7ea">&#9670;&nbsp;</a></span>Convolution2dAsymmetricPaddingLargerThanHalfKernelSizeTest()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="struct_layer_test_result.xhtml">LayerTestResult</a>&lt;float, 4&gt; Convolution2dAsymmetricPaddingLargerThanHalfKernelSizeTest </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classarmnn_1_1_i_workload_factory.xhtml">armnn::IWorkloadFactory</a> &amp;&#160;</td>
          <td class="paramname"><em>workloadFactory</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_i_backend_internal.xhtml#a693b40e6b94e958836aeb0410ca186bd">armnn::IBackendInternal::IMemoryManagerSharedPtr</a> &amp;&#160;</td>
          <td class="paramname"><em>memoryManager</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_i_tensor_handle_factory.xhtml">armnn::ITensorHandleFactory</a> &amp;&#160;</td>
          <td class="paramname"><em>tensorHandleFactory</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="namespacearmnn.xhtml#ad1d5cce2d9e9a5d61c243e5c989112e0">armnn::DataLayout</a>&#160;</td>
          <td class="paramname"><em>layout</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_conv2d_test_impl_8cpp_source.xhtml#l03600">3600</a> of file <a class="el" href="_conv2d_test_impl_8cpp_source.xhtml">Conv2dTestImpl.cpp</a>.</p>

<p class="reference">References <a class="el" href="_conv2d_test_impl_8cpp_source.xhtml#l00944">Convolution2dAsymmetricPaddingLargerThanHalfKernelSizeTestCommon()</a>, and <a class="el" href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a166495adc0d0f53bee6baecc577f5204">armnn::Float32</a>.</p>

<p class="reference">Referenced by <a class="el" href="_ref_layer_tests_8cpp_source.xhtml#l00014">TEST_SUITE()</a>.</p>
<div class="fragment"><div class="line"><a name="l03605"></a><span class="lineno"> 3605</span>&#160;{</div><div class="line"><a name="l03606"></a><span class="lineno"> 3606</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="_conv2d_test_impl_8cpp.xhtml#a71b5e8d33736d32c974e4fff9206f998">Convolution2dAsymmetricPaddingLargerThanHalfKernelSizeTestCommon</a></div><div class="line"><a name="l03607"></a><span class="lineno"> 3607</span>&#160;            &lt;<a class="code" href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a166495adc0d0f53bee6baecc577f5204">armnn::DataType::Float32</a>, armnn::DataType::Float32&gt;(</div><div class="line"><a name="l03608"></a><span class="lineno"> 3608</span>&#160;            workloadFactory, memoryManager, tensorHandleFactory, layout, 0.0f, 0);</div><div class="line"><a name="l03609"></a><span class="lineno"> 3609</span>&#160;}</div><div class="ttc" id="_conv2d_test_impl_8cpp_xhtml_a71b5e8d33736d32c974e4fff9206f998"><div class="ttname"><a href="_conv2d_test_impl_8cpp.xhtml#a71b5e8d33736d32c974e4fff9206f998">Convolution2dAsymmetricPaddingLargerThanHalfKernelSizeTestCommon</a></div><div class="ttdeci">LayerTestResult&lt; T, 4 &gt; Convolution2dAsymmetricPaddingLargerThanHalfKernelSizeTestCommon(armnn::IWorkloadFactory &amp;workloadFactory, const armnn::IBackendInternal::IMemoryManagerSharedPtr &amp;memoryManager, const armnn::ITensorHandleFactory &amp;tensorHandleFactory, const armnn::DataLayout layout, float qScale, int32_t qOffset)</div><div class="ttdef"><b>Definition:</b> <a href="_conv2d_test_impl_8cpp_source.xhtml#l00944">Conv2dTestImpl.cpp:944</a></div></div>
<div class="ttc" id="namespacearmnn_xhtml_ad8ed01ff3ff33333d8e19db4d2818bb6a166495adc0d0f53bee6baecc577f5204"><div class="ttname"><a href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a166495adc0d0f53bee6baecc577f5204">armnn::DataType::Float32</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="a0431327604bbd8051635e8ebd215e620"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a0431327604bbd8051635e8ebd215e620">&#9670;&nbsp;</a></span>Convolution2dAsymmetricPaddingTest()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="struct_layer_test_result.xhtml">LayerTestResult</a>&lt;float, 4&gt; Convolution2dAsymmetricPaddingTest </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classarmnn_1_1_i_workload_factory.xhtml">armnn::IWorkloadFactory</a> &amp;&#160;</td>
          <td class="paramname"><em>workloadFactory</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_i_backend_internal.xhtml#a693b40e6b94e958836aeb0410ca186bd">armnn::IBackendInternal::IMemoryManagerSharedPtr</a> &amp;&#160;</td>
          <td class="paramname"><em>memoryManager</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_i_tensor_handle_factory.xhtml">armnn::ITensorHandleFactory</a> &amp;&#160;</td>
          <td class="paramname"><em>tensorHandleFactory</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="namespacearmnn.xhtml#ad1d5cce2d9e9a5d61c243e5c989112e0">armnn::DataLayout</a>&#160;</td>
          <td class="paramname"><em>layout</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_conv2d_test_impl_8cpp_source.xhtml#l03590">3590</a> of file <a class="el" href="_conv2d_test_impl_8cpp_source.xhtml">Conv2dTestImpl.cpp</a>.</p>

<p class="reference">Referenced by <a class="el" href="_cl_layer_tests_8cpp_source.xhtml#l00027">TEST_SUITE()</a>.</p>
<div class="fragment"><div class="line"><a name="l03595"></a><span class="lineno"> 3595</span>&#160;{</div><div class="line"><a name="l03596"></a><span class="lineno"> 3596</span>&#160;    <span class="keywordflow">return</span> SimpleConvolution2dAsymmetricPaddingTestCommon&lt;armnn::DataType::Float32, armnn::DataType::Float32&gt;(</div><div class="line"><a name="l03597"></a><span class="lineno"> 3597</span>&#160;            workloadFactory, memoryManager, tensorHandleFactory, layout, 0.0f, 0);</div><div class="line"><a name="l03598"></a><span class="lineno"> 3598</span>&#160;}</div></div><!-- fragment -->
</div>
</div>
<a id="a3db9032b7a4530846a78babe58a1b2dd"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a3db9032b7a4530846a78babe58a1b2dd">&#9670;&nbsp;</a></span>Convolution2dPerAxisQuantTest()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="struct_layer_test_result.xhtml">LayerTestResult</a>&lt;uint8_t, 4&gt; Convolution2dPerAxisQuantTest </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classarmnn_1_1_i_workload_factory.xhtml">armnn::IWorkloadFactory</a> &amp;&#160;</td>
          <td class="paramname"><em>workloadFactory</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_i_backend_internal.xhtml#a693b40e6b94e958836aeb0410ca186bd">armnn::IBackendInternal::IMemoryManagerSharedPtr</a> &amp;&#160;</td>
          <td class="paramname"><em>memoryManager</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_i_tensor_handle_factory.xhtml">armnn::ITensorHandleFactory</a> &amp;&#160;</td>
          <td class="paramname"><em>tensorHandleFactory</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="namespacearmnn.xhtml#ad1d5cce2d9e9a5d61c243e5c989112e0">armnn::DataLayout</a>&#160;</td>
          <td class="paramname"><em>layout</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_conv2d_test_impl_8cpp_source.xhtml#l03631">3631</a> of file <a class="el" href="_conv2d_test_impl_8cpp_source.xhtml">Conv2dTestImpl.cpp</a>.</p>

<p class="reference">References <a class="el" href="_tensor_copy_utils_8cpp_source.xhtml#l00019">AllocateAndCopyDataToITensorHandle()</a>, <a class="el" href="namespacearmnn.xhtml#a56943a0946e5f15e5e58054b8e7a04a4adb033d2f81b68f9a17e8f62de69fed4a">armnn::Convolution2d</a>, <a class="el" href="_tensor_copy_utils_8cpp_source.xhtml#l00014">CopyDataFromITensorHandle()</a>, <a class="el" href="_tensor_copy_utils_8cpp_source.xhtml#l00009">CopyDataToITensorHandle()</a>, <a class="el" href="classarmnn_1_1_i_tensor_handle_factory.xhtml#a375f11dd42ff042435e8771cf287b20c">ITensorHandleFactory::CreateTensorHandle()</a>, <a class="el" href="_workload_factory_8cpp_source.xhtml#l01559">IWorkloadFactory::CreateWorkload()</a>, <a class="el" href="include_2armnn_2backends_2_workload_data_8hpp_source.xhtml#l00066">QueueDescriptorWithParameters&lt; LayerDescriptor &gt;::m_Parameters</a>, <a class="el" href="_descriptors_8hpp_source.xhtml#l00539">Convolution2dDescriptor::m_StrideX</a>, <a class="el" href="namespacearmnn.xhtml#ad1d5cce2d9e9a5d61c243e5c989112e0a6b99f356fe3b30a2a850b5ea897c289f">armnn::NCHW</a>, and <a class="el" href="include_2armnn_test_utils_2_data_layout_utils_8hpp_source.xhtml#l00026">PermuteTensorNhwcToNchw()</a>.</p>

<p class="reference">Referenced by <a class="el" href="_cl_layer_tests_8cpp_source.xhtml#l00027">TEST_SUITE()</a>.</p>
<div class="fragment"><div class="line"><a name="l03636"></a><span class="lineno"> 3636</span>&#160;{</div><div class="line"><a name="l03637"></a><span class="lineno"> 3637</span>&#160;    <span class="keyword">using namespace </span><a class="code" href="namespacearmnn.xhtml">armnn</a>;</div><div class="line"><a name="l03638"></a><span class="lineno"> 3638</span>&#160;</div><div class="line"><a name="l03639"></a><span class="lineno"> 3639</span>&#160;    <span class="keyword">const</span> <a class="code" href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6">DataType</a> inputType  = <a class="code" href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a0a3f57c876f5a230244c38e1453a8a6e">DataType::QAsymmU8</a>;</div><div class="line"><a name="l03640"></a><span class="lineno"> 3640</span>&#160;    <span class="keyword">const</span> <a class="code" href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6">DataType</a> kernelType = <a class="code" href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a9945327825b115e93a3b89f4302e76db">DataType::QSymmS8</a>;</div><div class="line"><a name="l03641"></a><span class="lineno"> 3641</span>&#160;    <span class="keyword">const</span> <a class="code" href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6">DataType</a> biasType   = <a class="code" href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6accedffbc6e5308e33d3843e8bdc0dad7">DataType::Signed32</a>;</div><div class="line"><a name="l03642"></a><span class="lineno"> 3642</span>&#160;</div><div class="line"><a name="l03643"></a><span class="lineno"> 3643</span>&#160;    <a class="code" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> inputInfo ({ 1, 3, 1, 2 }, inputType, 0.5f, 128);</div><div class="line"><a name="l03644"></a><span class="lineno"> 3644</span>&#160;    <a class="code" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> outputInfo({ 1, 3, 1, 3 }, inputType, 1.0f, 128);</div><div class="line"><a name="l03645"></a><span class="lineno"> 3645</span>&#160;</div><div class="line"><a name="l03646"></a><span class="lineno"> 3646</span>&#160;    <span class="keyword">const</span> std::vector&lt;float&gt; quantScales{ 0.5f, 0.75f, 1.0f };</div><div class="line"><a name="l03647"></a><span class="lineno"> 3647</span>&#160;    constexpr <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> quantDimension = 0;</div><div class="line"><a name="l03648"></a><span class="lineno"> 3648</span>&#160;</div><div class="line"><a name="l03649"></a><span class="lineno"> 3649</span>&#160;    <a class="code" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> kernelInfo({ 3, 1, 1, 2 }, kernelType, quantScales, quantDimension);</div><div class="line"><a name="l03650"></a><span class="lineno"> 3650</span>&#160;</div><div class="line"><a name="l03651"></a><span class="lineno"> 3651</span>&#160;    <span class="keyword">const</span> std::vector&lt;float&gt; biasQuantScales{ 0.25f, 0.375f, 0.5f };</div><div class="line"><a name="l03652"></a><span class="lineno"> 3652</span>&#160;    <a class="code" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> biasInfo({ 3 }, biasType, biasQuantScales, quantDimension);</div><div class="line"><a name="l03653"></a><span class="lineno"> 3653</span>&#160;</div><div class="line"><a name="l03654"></a><span class="lineno"> 3654</span>&#160;    std::vector&lt;uint8_t&gt; inputData =</div><div class="line"><a name="l03655"></a><span class="lineno"> 3655</span>&#160;    {</div><div class="line"><a name="l03656"></a><span class="lineno"> 3656</span>&#160;        138, 108, 138, 108, 138, 108</div><div class="line"><a name="l03657"></a><span class="lineno"> 3657</span>&#160;    };</div><div class="line"><a name="l03658"></a><span class="lineno"> 3658</span>&#160;</div><div class="line"><a name="l03659"></a><span class="lineno"> 3659</span>&#160;    std::vector&lt;int8_t&gt; kernelData =</div><div class="line"><a name="l03660"></a><span class="lineno"> 3660</span>&#160;    {</div><div class="line"><a name="l03661"></a><span class="lineno"> 3661</span>&#160;        1, 2, 1, 2, 1, 2</div><div class="line"><a name="l03662"></a><span class="lineno"> 3662</span>&#160;    };</div><div class="line"><a name="l03663"></a><span class="lineno"> 3663</span>&#160;</div><div class="line"><a name="l03664"></a><span class="lineno"> 3664</span>&#160;    std::vector&lt;int32_t&gt; biasData =</div><div class="line"><a name="l03665"></a><span class="lineno"> 3665</span>&#160;    {</div><div class="line"><a name="l03666"></a><span class="lineno"> 3666</span>&#160;        4, 4, 4</div><div class="line"><a name="l03667"></a><span class="lineno"> 3667</span>&#160;    };</div><div class="line"><a name="l03668"></a><span class="lineno"> 3668</span>&#160;</div><div class="line"><a name="l03669"></a><span class="lineno"> 3669</span>&#160;    std::vector&lt;uint8_t&gt; expectedOutputData =</div><div class="line"><a name="l03670"></a><span class="lineno"> 3670</span>&#160;    {</div><div class="line"><a name="l03671"></a><span class="lineno"> 3671</span>&#160;        121, 118, 115, 121, 118, 115, 121, 118, 115</div><div class="line"><a name="l03672"></a><span class="lineno"> 3672</span>&#160;    };</div><div class="line"><a name="l03673"></a><span class="lineno"> 3673</span>&#160;</div><div class="line"><a name="l03674"></a><span class="lineno"> 3674</span>&#160;    <span class="keywordflow">if</span> (layout == <a class="code" href="namespacearmnn.xhtml#ad1d5cce2d9e9a5d61c243e5c989112e0a6b99f356fe3b30a2a850b5ea897c289f">DataLayout::NCHW</a>)</div><div class="line"><a name="l03675"></a><span class="lineno"> 3675</span>&#160;    {</div><div class="line"><a name="l03676"></a><span class="lineno"> 3676</span>&#160;        <a class="code" href="include_2armnn_test_utils_2_data_layout_utils_8hpp.xhtml#a1452f049aef30409b3b649af2be7ff82">PermuteTensorNhwcToNchw</a>(inputInfo, inputData);</div><div class="line"><a name="l03677"></a><span class="lineno"> 3677</span>&#160;        <a class="code" href="include_2armnn_test_utils_2_data_layout_utils_8hpp.xhtml#a1452f049aef30409b3b649af2be7ff82">PermuteTensorNhwcToNchw</a>(kernelInfo, kernelData);</div><div class="line"><a name="l03678"></a><span class="lineno"> 3678</span>&#160;        <a class="code" href="include_2armnn_test_utils_2_data_layout_utils_8hpp.xhtml#a1452f049aef30409b3b649af2be7ff82">PermuteTensorNhwcToNchw</a>(outputInfo, expectedOutputData);</div><div class="line"><a name="l03679"></a><span class="lineno"> 3679</span>&#160;    }</div><div class="line"><a name="l03680"></a><span class="lineno"> 3680</span>&#160;</div><div class="line"><a name="l03681"></a><span class="lineno"> 3681</span>&#160;    std::vector&lt;uint8_t&gt; actualOutput(outputInfo.GetNumElements());</div><div class="line"><a name="l03682"></a><span class="lineno"> 3682</span>&#160;</div><div class="line"><a name="l03683"></a><span class="lineno"> 3683</span>&#160;    <a class="code" href="structarmnn_1_1_convolution2d_descriptor.xhtml">Convolution2dDescriptor</a> descriptor;</div><div class="line"><a name="l03684"></a><span class="lineno"> 3684</span>&#160;    descriptor.<a class="code" href="structarmnn_1_1_convolution2d_descriptor.xhtml#afe6a3377c4531315354def9023c8fdda">m_StrideX</a>     = 1;</div><div class="line"><a name="l03685"></a><span class="lineno"> 3685</span>&#160;    descriptor.m_StrideY     = 1;</div><div class="line"><a name="l03686"></a><span class="lineno"> 3686</span>&#160;    descriptor.m_PadLeft     = 0;</div><div class="line"><a name="l03687"></a><span class="lineno"> 3687</span>&#160;    descriptor.m_PadRight    = 0;</div><div class="line"><a name="l03688"></a><span class="lineno"> 3688</span>&#160;    descriptor.m_PadTop      = 0;</div><div class="line"><a name="l03689"></a><span class="lineno"> 3689</span>&#160;    descriptor.m_PadBottom   = 0;</div><div class="line"><a name="l03690"></a><span class="lineno"> 3690</span>&#160;    descriptor.m_BiasEnabled = <span class="keyword">true</span>;</div><div class="line"><a name="l03691"></a><span class="lineno"> 3691</span>&#160;    descriptor.m_DataLayout  = layout;</div><div class="line"><a name="l03692"></a><span class="lineno"> 3692</span>&#160;</div><div class="line"><a name="l03693"></a><span class="lineno"> 3693</span>&#160;    std::unique_ptr&lt;ITensorHandle&gt; inputHandle  = tensorHandleFactory.<a class="code" href="classarmnn_1_1_i_tensor_handle_factory.xhtml#a375f11dd42ff042435e8771cf287b20c">CreateTensorHandle</a>(inputInfo);</div><div class="line"><a name="l03694"></a><span class="lineno"> 3694</span>&#160;    std::unique_ptr&lt;ITensorHandle&gt; outputHandle = tensorHandleFactory.<a class="code" href="classarmnn_1_1_i_tensor_handle_factory.xhtml#a375f11dd42ff042435e8771cf287b20c">CreateTensorHandle</a>(outputInfo);</div><div class="line"><a name="l03695"></a><span class="lineno"> 3695</span>&#160;    std::unique_ptr&lt;armnn::ITensorHandle&gt; weightsHandle = tensorHandleFactory.<a class="code" href="classarmnn_1_1_i_tensor_handle_factory.xhtml#a375f11dd42ff042435e8771cf287b20c">CreateTensorHandle</a>(kernelInfo);</div><div class="line"><a name="l03696"></a><span class="lineno"> 3696</span>&#160;    std::unique_ptr&lt;armnn::ITensorHandle&gt; biasHandle = <span class="keyword">nullptr</span>;</div><div class="line"><a name="l03697"></a><span class="lineno"> 3697</span>&#160;</div><div class="line"><a name="l03698"></a><span class="lineno"> 3698</span>&#160;    <a class="code" href="structarmnn_1_1_workload_info.xhtml">WorkloadInfo</a> workloadInfo;</div><div class="line"><a name="l03699"></a><span class="lineno"> 3699</span>&#160;    <a class="code" href="classarmnn_1_1_scoped_tensor_handle.xhtml">ScopedTensorHandle</a> weightTensor(kernelInfo);</div><div class="line"><a name="l03700"></a><span class="lineno"> 3700</span>&#160;    <a class="code" href="classarmnn_1_1_scoped_tensor_handle.xhtml">ScopedTensorHandle</a> biasTensor(biasInfo);</div><div class="line"><a name="l03701"></a><span class="lineno"> 3701</span>&#160;</div><div class="line"><a name="l03702"></a><span class="lineno"> 3702</span>&#160;    <a class="code" href="include_2armnn_test_utils_2_tensor_copy_utils_8hpp.xhtml#afaaca8c3f3a467d124bba44067d2afa8">AllocateAndCopyDataToITensorHandle</a>(&amp;weightTensor, kernelData.data());</div><div class="line"><a name="l03703"></a><span class="lineno"> 3703</span>&#160;    <a class="code" href="include_2armnn_test_utils_2_tensor_copy_utils_8hpp.xhtml#afaaca8c3f3a467d124bba44067d2afa8">AllocateAndCopyDataToITensorHandle</a>(&amp;biasTensor, biasData.data());</div><div class="line"><a name="l03704"></a><span class="lineno"> 3704</span>&#160;</div><div class="line"><a name="l03705"></a><span class="lineno"> 3705</span>&#160;    <a class="code" href="structarmnn_1_1_convolution2d_queue_descriptor.xhtml">Convolution2dQueueDescriptor</a> queueDescriptor;</div><div class="line"><a name="l03706"></a><span class="lineno"> 3706</span>&#160;    queueDescriptor.<a class="code" href="structarmnn_1_1_queue_descriptor_with_parameters.xhtml#aad91b9bbf7aa365d304febe79a3d1333">m_Parameters</a> = descriptor;</div><div class="line"><a name="l03707"></a><span class="lineno"> 3707</span>&#160;    queueDescriptor.m_Weight     = &amp;weightTensor;</div><div class="line"><a name="l03708"></a><span class="lineno"> 3708</span>&#160;    queueDescriptor.m_Bias       = &amp;biasTensor;</div><div class="line"><a name="l03709"></a><span class="lineno"> 3709</span>&#160;</div><div class="line"><a name="l03710"></a><span class="lineno"> 3710</span>&#160;    AddInputToWorkload(queueDescriptor, workloadInfo, inputInfo, inputHandle.get());</div><div class="line"><a name="l03711"></a><span class="lineno"> 3711</span>&#160;    AddInputToWorkload(queueDescriptor, workloadInfo, kernelInfo, weightsHandle.get());</div><div class="line"><a name="l03712"></a><span class="lineno"> 3712</span>&#160;</div><div class="line"><a name="l03713"></a><span class="lineno"> 3713</span>&#160;    <span class="keywordflow">if</span> (descriptor.m_BiasEnabled)</div><div class="line"><a name="l03714"></a><span class="lineno"> 3714</span>&#160;    {</div><div class="line"><a name="l03715"></a><span class="lineno"> 3715</span>&#160;        biasHandle = tensorHandleFactory.<a class="code" href="classarmnn_1_1_i_tensor_handle_factory.xhtml#a375f11dd42ff042435e8771cf287b20c">CreateTensorHandle</a>(biasInfo);</div><div class="line"><a name="l03716"></a><span class="lineno"> 3716</span>&#160;        AddInputToWorkload(queueDescriptor, workloadInfo, biasInfo, biasHandle.get());</div><div class="line"><a name="l03717"></a><span class="lineno"> 3717</span>&#160;    }</div><div class="line"><a name="l03718"></a><span class="lineno"> 3718</span>&#160;</div><div class="line"><a name="l03719"></a><span class="lineno"> 3719</span>&#160;    AddOutputToWorkload(queueDescriptor, workloadInfo, outputInfo, outputHandle.get());</div><div class="line"><a name="l03720"></a><span class="lineno"> 3720</span>&#160;</div><div class="line"><a name="l03721"></a><span class="lineno"> 3721</span>&#160;    std::unique_ptr&lt;IWorkload&gt; workload= workloadFactory.<a class="code" href="classarmnn_1_1_i_workload_factory.xhtml#a13060ebb89d2c21a7a5d897e99cccf72">CreateWorkload</a>(<a class="code" href="namespacearmnn.xhtml#a56943a0946e5f15e5e58054b8e7a04a4adb033d2f81b68f9a17e8f62de69fed4a">armnn::LayerType::Convolution2d</a>,</div><div class="line"><a name="l03722"></a><span class="lineno"> 3722</span>&#160;                                                                        queueDescriptor,</div><div class="line"><a name="l03723"></a><span class="lineno"> 3723</span>&#160;                                                                        workloadInfo);</div><div class="line"><a name="l03724"></a><span class="lineno"> 3724</span>&#160;    inputHandle-&gt;Allocate();</div><div class="line"><a name="l03725"></a><span class="lineno"> 3725</span>&#160;    outputHandle-&gt;Allocate();</div><div class="line"><a name="l03726"></a><span class="lineno"> 3726</span>&#160;    weightsHandle-&gt;Allocate();</div><div class="line"><a name="l03727"></a><span class="lineno"> 3727</span>&#160;</div><div class="line"><a name="l03728"></a><span class="lineno"> 3728</span>&#160;    <span class="keywordflow">if</span> (descriptor.m_BiasEnabled)</div><div class="line"><a name="l03729"></a><span class="lineno"> 3729</span>&#160;    {</div><div class="line"><a name="l03730"></a><span class="lineno"> 3730</span>&#160;        biasHandle-&gt;Allocate();</div><div class="line"><a name="l03731"></a><span class="lineno"> 3731</span>&#160;        <a class="code" href="include_2armnn_test_utils_2_tensor_copy_utils_8hpp.xhtml#ae15f1a3c55d2db87683577de9fa4437c">CopyDataToITensorHandle</a>(biasHandle.get(), biasData.data());</div><div class="line"><a name="l03732"></a><span class="lineno"> 3732</span>&#160;    }</div><div class="line"><a name="l03733"></a><span class="lineno"> 3733</span>&#160;    <a class="code" href="include_2armnn_test_utils_2_tensor_copy_utils_8hpp.xhtml#ae15f1a3c55d2db87683577de9fa4437c">CopyDataToITensorHandle</a>(inputHandle.get(), inputData.data());</div><div class="line"><a name="l03734"></a><span class="lineno"> 3734</span>&#160;    <a class="code" href="include_2armnn_test_utils_2_tensor_copy_utils_8hpp.xhtml#ae15f1a3c55d2db87683577de9fa4437c">CopyDataToITensorHandle</a>(weightsHandle.get(), kernelData.data());</div><div class="line"><a name="l03735"></a><span class="lineno"> 3735</span>&#160;</div><div class="line"><a name="l03736"></a><span class="lineno"> 3736</span>&#160;</div><div class="line"><a name="l03737"></a><span class="lineno"> 3737</span>&#160;    ExecuteWorkload(*workload, memoryManager);</div><div class="line"><a name="l03738"></a><span class="lineno"> 3738</span>&#160;</div><div class="line"><a name="l03739"></a><span class="lineno"> 3739</span>&#160;    <a class="code" href="include_2armnn_test_utils_2_tensor_copy_utils_8hpp.xhtml#ab5dfed8358e500ed523d78090ec78e88">CopyDataFromITensorHandle</a>(actualOutput.data(), outputHandle.get());</div><div class="line"><a name="l03740"></a><span class="lineno"> 3740</span>&#160;</div><div class="line"><a name="l03741"></a><span class="lineno"> 3741</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="struct_layer_test_result.xhtml">LayerTestResult&lt;uint8_t, 4&gt;</a>(actualOutput,</div><div class="line"><a name="l03742"></a><span class="lineno"> 3742</span>&#160;                                       expectedOutputData,</div><div class="line"><a name="l03743"></a><span class="lineno"> 3743</span>&#160;                                       outputHandle-&gt;GetShape(),</div><div class="line"><a name="l03744"></a><span class="lineno"> 3744</span>&#160;                                       outputInfo.GetShape());</div><div class="line"><a name="l03745"></a><span class="lineno"> 3745</span>&#160;}</div><div class="ttc" id="include_2armnn_test_utils_2_data_layout_utils_8hpp_xhtml_a1452f049aef30409b3b649af2be7ff82"><div class="ttname"><a href="include_2armnn_test_utils_2_data_layout_utils_8hpp.xhtml#a1452f049aef30409b3b649af2be7ff82">PermuteTensorNhwcToNchw</a></div><div class="ttdeci">void PermuteTensorNhwcToNchw(armnn::TensorInfo &amp;tensorInfo, std::vector&lt; T &gt; &amp;tensorData)</div><div class="ttdef"><b>Definition:</b> <a href="include_2armnn_test_utils_2_data_layout_utils_8hpp_source.xhtml#l00026">DataLayoutUtils.hpp:26</a></div></div>
<div class="ttc" id="classarmnn_1_1_tensor_info_xhtml"><div class="ttname"><a href="classarmnn_1_1_tensor_info.xhtml">armnn::TensorInfo</a></div><div class="ttdef"><b>Definition:</b> <a href="_tensor_8hpp_source.xhtml#l00152">Tensor.hpp:152</a></div></div>
<div class="ttc" id="structarmnn_1_1_convolution2d_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_convolution2d_descriptor.xhtml">armnn::Convolution2dDescriptor</a></div><div class="ttdoc">A Convolution2dDescriptor for the Convolution2dLayer. </div><div class="ttdef"><b>Definition:</b> <a href="_descriptors_8hpp_source.xhtml#l00499">Descriptors.hpp:499</a></div></div>
<div class="ttc" id="namespacearmnn_xhtml_ad8ed01ff3ff33333d8e19db4d2818bb6accedffbc6e5308e33d3843e8bdc0dad7"><div class="ttname"><a href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6accedffbc6e5308e33d3843e8bdc0dad7">armnn::DataType::Signed32</a></div></div>
<div class="ttc" id="namespacearmnn_xhtml"><div class="ttname"><a href="namespacearmnn.xhtml">armnn</a></div><div class="ttdoc">Copyright (c) 2021 ARM Limited and Contributors. </div><div class="ttdef"><b>Definition:</b> <a href="01__00__quick__start_8dox_source.xhtml#l00006">01_00_quick_start.dox:6</a></div></div>
<div class="ttc" id="structarmnn_1_1_queue_descriptor_with_parameters_xhtml_aad91b9bbf7aa365d304febe79a3d1333"><div class="ttname"><a href="structarmnn_1_1_queue_descriptor_with_parameters.xhtml#aad91b9bbf7aa365d304febe79a3d1333">armnn::QueueDescriptorWithParameters::m_Parameters</a></div><div class="ttdeci">LayerDescriptor m_Parameters</div><div class="ttdef"><b>Definition:</b> <a href="include_2armnn_2backends_2_workload_data_8hpp_source.xhtml#l00066">WorkloadData.hpp:66</a></div></div>
<div class="ttc" id="include_2armnn_test_utils_2_tensor_copy_utils_8hpp_xhtml_afaaca8c3f3a467d124bba44067d2afa8"><div class="ttname"><a href="include_2armnn_test_utils_2_tensor_copy_utils_8hpp.xhtml#afaaca8c3f3a467d124bba44067d2afa8">AllocateAndCopyDataToITensorHandle</a></div><div class="ttdeci">void AllocateAndCopyDataToITensorHandle(armnn::ITensorHandle *tensorHandle, const void *memory)</div><div class="ttdef"><b>Definition:</b> <a href="_tensor_copy_utils_8cpp_source.xhtml#l00019">TensorCopyUtils.cpp:19</a></div></div>
<div class="ttc" id="structarmnn_1_1_convolution2d_descriptor_xhtml_afe6a3377c4531315354def9023c8fdda"><div class="ttname"><a href="structarmnn_1_1_convolution2d_descriptor.xhtml#afe6a3377c4531315354def9023c8fdda">armnn::Convolution2dDescriptor::m_StrideX</a></div><div class="ttdeci">uint32_t m_StrideX</div><div class="ttdoc">Stride value when proceeding through input for the width dimension. </div><div class="ttdef"><b>Definition:</b> <a href="_descriptors_8hpp_source.xhtml#l00539">Descriptors.hpp:539</a></div></div>
<div class="ttc" id="namespacearmnn_xhtml_ad8ed01ff3ff33333d8e19db4d2818bb6"><div class="ttname"><a href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6">armnn::DataType</a></div><div class="ttdeci">DataType</div><div class="ttdef"><b>Definition:</b> <a href="_types_8hpp_source.xhtml#l00048">Types.hpp:48</a></div></div>
<div class="ttc" id="namespacearmnn_xhtml_ad8ed01ff3ff33333d8e19db4d2818bb6a0a3f57c876f5a230244c38e1453a8a6e"><div class="ttname"><a href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a0a3f57c876f5a230244c38e1453a8a6e">armnn::DataType::QAsymmU8</a></div></div>
<div class="ttc" id="classarmnn_1_1_scoped_tensor_handle_xhtml"><div class="ttname"><a href="classarmnn_1_1_scoped_tensor_handle.xhtml">armnn::ScopedTensorHandle</a></div><div class="ttdef"><b>Definition:</b> <a href="include_2armnn_2backends_2_tensor_handle_8hpp_source.xhtml#l00115">TensorHandle.hpp:115</a></div></div>
<div class="ttc" id="namespacearmnn_xhtml_a56943a0946e5f15e5e58054b8e7a04a4adb033d2f81b68f9a17e8f62de69fed4a"><div class="ttname"><a href="namespacearmnn.xhtml#a56943a0946e5f15e5e58054b8e7a04a4adb033d2f81b68f9a17e8f62de69fed4a">armnn::LayerType::Convolution2d</a></div></div>
<div class="ttc" id="include_2armnn_test_utils_2_tensor_copy_utils_8hpp_xhtml_ab5dfed8358e500ed523d78090ec78e88"><div class="ttname"><a href="include_2armnn_test_utils_2_tensor_copy_utils_8hpp.xhtml#ab5dfed8358e500ed523d78090ec78e88">CopyDataFromITensorHandle</a></div><div class="ttdeci">void CopyDataFromITensorHandle(void *mem, const armnn::ITensorHandle *tensorHandle)</div><div class="ttdef"><b>Definition:</b> <a href="_tensor_copy_utils_8cpp_source.xhtml#l00014">TensorCopyUtils.cpp:14</a></div></div>
<div class="ttc" id="structarmnn_1_1_convolution2d_queue_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_convolution2d_queue_descriptor.xhtml">armnn::Convolution2dQueueDescriptor</a></div><div class="ttdef"><b>Definition:</b> <a href="include_2armnn_2backends_2_workload_data_8hpp_source.xhtml#l00214">WorkloadData.hpp:214</a></div></div>
<div class="ttc" id="include_2armnn_test_utils_2_tensor_copy_utils_8hpp_xhtml_ae15f1a3c55d2db87683577de9fa4437c"><div class="ttname"><a href="include_2armnn_test_utils_2_tensor_copy_utils_8hpp.xhtml#ae15f1a3c55d2db87683577de9fa4437c">CopyDataToITensorHandle</a></div><div class="ttdeci">void CopyDataToITensorHandle(armnn::ITensorHandle *tensorHandle, const void *memory)</div><div class="ttdef"><b>Definition:</b> <a href="_tensor_copy_utils_8cpp_source.xhtml#l00009">TensorCopyUtils.cpp:9</a></div></div>
<div class="ttc" id="structarmnn_1_1_workload_info_xhtml"><div class="ttname"><a href="structarmnn_1_1_workload_info.xhtml">armnn::WorkloadInfo</a></div><div class="ttdoc">Contains information about TensorInfos of a layer. </div><div class="ttdef"><b>Definition:</b> <a href="include_2armnn_2backends_2_workload_info_8hpp_source.xhtml#l00016">WorkloadInfo.hpp:16</a></div></div>
<div class="ttc" id="struct_layer_test_result_xhtml"><div class="ttname"><a href="struct_layer_test_result.xhtml">LayerTestResult</a></div><div class="ttdef"><b>Definition:</b> <a href="include_2armnn_test_utils_2_layer_test_result_8hpp_source.xhtml#l00015">LayerTestResult.hpp:15</a></div></div>
<div class="ttc" id="namespacearmnn_xhtml_ad8ed01ff3ff33333d8e19db4d2818bb6a9945327825b115e93a3b89f4302e76db"><div class="ttname"><a href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a9945327825b115e93a3b89f4302e76db">armnn::DataType::QSymmS8</a></div></div>
<div class="ttc" id="namespacearmnn_xhtml_ad1d5cce2d9e9a5d61c243e5c989112e0a6b99f356fe3b30a2a850b5ea897c289f"><div class="ttname"><a href="namespacearmnn.xhtml#ad1d5cce2d9e9a5d61c243e5c989112e0a6b99f356fe3b30a2a850b5ea897c289f">armnn::DataLayout::NCHW</a></div></div>
<div class="ttc" id="classarmnn_1_1_i_workload_factory_xhtml_a13060ebb89d2c21a7a5d897e99cccf72"><div class="ttname"><a href="classarmnn_1_1_i_workload_factory.xhtml#a13060ebb89d2c21a7a5d897e99cccf72">armnn::IWorkloadFactory::CreateWorkload</a></div><div class="ttdeci">virtual std::unique_ptr&lt; IWorkload &gt; CreateWorkload(LayerType type, const QueueDescriptor &amp;descriptor, const WorkloadInfo &amp;info) const</div><div class="ttdef"><b>Definition:</b> <a href="_workload_factory_8cpp_source.xhtml#l01559">WorkloadFactory.cpp:1559</a></div></div>
<div class="ttc" id="classarmnn_1_1_i_tensor_handle_factory_xhtml_a375f11dd42ff042435e8771cf287b20c"><div class="ttname"><a href="classarmnn_1_1_i_tensor_handle_factory.xhtml#a375f11dd42ff042435e8771cf287b20c">armnn::ITensorHandleFactory::CreateTensorHandle</a></div><div class="ttdeci">virtual std::unique_ptr&lt; ITensorHandle &gt; CreateTensorHandle(const TensorInfo &amp;tensorInfo) const =0</div></div>
</div><!-- fragment -->
</div>
</div>
<a id="adb5b1d96ba9807887953dfd1a71ddb14"></a>
<h2 class="memtitle"><span class="permalink"><a href="#adb5b1d96ba9807887953dfd1a71ddb14">&#9670;&nbsp;</a></span>DepthwiseConvolution2d2x3x3Dilation3x3Test()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="struct_layer_test_result.xhtml">LayerTestResult</a>&lt;T, 4&gt; DepthwiseConvolution2d2x3x3Dilation3x3Test </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classarmnn_1_1_i_workload_factory.xhtml">armnn::IWorkloadFactory</a> &amp;&#160;</td>
          <td class="paramname"><em>workloadFactory</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_i_backend_internal.xhtml#a693b40e6b94e958836aeb0410ca186bd">armnn::IBackendInternal::IMemoryManagerSharedPtr</a> &amp;&#160;</td>
          <td class="paramname"><em>memoryManager</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_i_tensor_handle_factory.xhtml">armnn::ITensorHandleFactory</a> &amp;&#160;</td>
          <td class="paramname"><em>tensorHandleFactory</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>biasEnabled</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="namespacearmnn.xhtml#ad1d5cce2d9e9a5d61c243e5c989112e0">armnn::DataLayout</a>&#160;</td>
          <td class="paramname"><em>layout</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_conv2d_test_impl_8cpp_source.xhtml#l02879">2879</a> of file <a class="el" href="_conv2d_test_impl_8cpp_source.xhtml">Conv2dTestImpl.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l02885"></a><span class="lineno"> 2885</span>&#160;{</div><div class="line"><a name="l02886"></a><span class="lineno"> 2886</span>&#160;    <a class="code" href="classarmnn_1_1_tensor_info.xhtml">armnn::TensorInfo</a> inputTensorInfo({1, 2, 10, 10}, ArmnnType);</div><div class="line"><a name="l02887"></a><span class="lineno"> 2887</span>&#160;    std::vector&lt;float&gt; inputNoQuantizedValues =</div><div class="line"><a name="l02888"></a><span class="lineno"> 2888</span>&#160;            {</div><div class="line"><a name="l02889"></a><span class="lineno"> 2889</span>&#160;                    0, 0, 0, 0, 0, 0, 0, 0, 0, 0,</div><div class="line"><a name="l02890"></a><span class="lineno"> 2890</span>&#160;                    0, 0, 0, 0, 0, 0, 0, 0, 0, 0,</div><div class="line"><a name="l02891"></a><span class="lineno"> 2891</span>&#160;                    0, 0, 0, 0, 0, 0, 0, 0, 0, 0,</div><div class="line"><a name="l02892"></a><span class="lineno"> 2892</span>&#160;                    0, 0, 0, 0, 1, 1, 1, 0, 0, 0,</div><div class="line"><a name="l02893"></a><span class="lineno"> 2893</span>&#160;                    0, 0, 0, 0, 1, 1, 1, 0, 0, 0,</div><div class="line"><a name="l02894"></a><span class="lineno"> 2894</span>&#160;                    0, 0, 0, 0, 1, 1, 1, 0, 0, 0,</div><div class="line"><a name="l02895"></a><span class="lineno"> 2895</span>&#160;                    0, 0, 0, 0, 0, 0, 0, 0, 0, 0,</div><div class="line"><a name="l02896"></a><span class="lineno"> 2896</span>&#160;                    0, 0, 0, 0, 0, 0, 0, 0, 0, 0,</div><div class="line"><a name="l02897"></a><span class="lineno"> 2897</span>&#160;                    0, 0, 0, 0, 0, 0, 0, 0, 0, 0,</div><div class="line"><a name="l02898"></a><span class="lineno"> 2898</span>&#160;                    0, 0, 0, 0, 0, 0, 0, 0, 0, 0,</div><div class="line"><a name="l02899"></a><span class="lineno"> 2899</span>&#160;</div><div class="line"><a name="l02900"></a><span class="lineno"> 2900</span>&#160;                    0, 0, 0, 0, 0, 0, 0, 0, 0, 0,</div><div class="line"><a name="l02901"></a><span class="lineno"> 2901</span>&#160;                    0, 0, 0, 0, 0, 0, 0, 0, 0, 0,</div><div class="line"><a name="l02902"></a><span class="lineno"> 2902</span>&#160;                    0, 0, 0, 0, 0, 0, 0, 0, 0, 0,</div><div class="line"><a name="l02903"></a><span class="lineno"> 2903</span>&#160;                    0, 0, 0, 0, 1, 1, 1, 0, 0, 0,</div><div class="line"><a name="l02904"></a><span class="lineno"> 2904</span>&#160;                    0, 0, 0, 0, 1, 1, 1, 0, 0, 0,</div><div class="line"><a name="l02905"></a><span class="lineno"> 2905</span>&#160;                    0, 0, 0, 0, 1, 1, 1, 0, 0, 0,</div><div class="line"><a name="l02906"></a><span class="lineno"> 2906</span>&#160;                    0, 0, 0, 0, 0, 0, 0, 0, 0, 0,</div><div class="line"><a name="l02907"></a><span class="lineno"> 2907</span>&#160;                    0, 0, 0, 0, 0, 0, 0, 0, 0, 0,</div><div class="line"><a name="l02908"></a><span class="lineno"> 2908</span>&#160;                    0, 0, 0, 0, 0, 0, 0, 0, 0, 0,</div><div class="line"><a name="l02909"></a><span class="lineno"> 2909</span>&#160;                    0, 0, 0, 0, 0, 0, 0, 0, 0, 0</div><div class="line"><a name="l02910"></a><span class="lineno"> 2910</span>&#160;            };</div><div class="line"><a name="l02911"></a><span class="lineno"> 2911</span>&#160;</div><div class="line"><a name="l02912"></a><span class="lineno"> 2912</span>&#160;    <a class="code" href="classarmnn_1_1_tensor_info.xhtml">armnn::TensorInfo</a> kernelTensorInfo({ 1, 3, 3, 2}, ArmnnType);</div><div class="line"><a name="l02913"></a><span class="lineno"> 2913</span>&#160;    std::vector&lt;float&gt; kernelNoQuantizedValues =</div><div class="line"><a name="l02914"></a><span class="lineno"> 2914</span>&#160;            {</div><div class="line"><a name="l02915"></a><span class="lineno"> 2915</span>&#160;                    1, 2, 3,</div><div class="line"><a name="l02916"></a><span class="lineno"> 2916</span>&#160;                    4, 5, 6,</div><div class="line"><a name="l02917"></a><span class="lineno"> 2917</span>&#160;                    7, 8, 9,</div><div class="line"><a name="l02918"></a><span class="lineno"> 2918</span>&#160;</div><div class="line"><a name="l02919"></a><span class="lineno"> 2919</span>&#160;                    1, 2, 3,</div><div class="line"><a name="l02920"></a><span class="lineno"> 2920</span>&#160;                    4, 5, 6,</div><div class="line"><a name="l02921"></a><span class="lineno"> 2921</span>&#160;                    7, 8, 9</div><div class="line"><a name="l02922"></a><span class="lineno"> 2922</span>&#160;            };</div><div class="line"><a name="l02923"></a><span class="lineno"> 2923</span>&#160;</div><div class="line"><a name="l02924"></a><span class="lineno"> 2924</span>&#160;    <span class="comment">// Since the dilation rate is 3 this will dilate the kernel to be like 7x7,</span></div><div class="line"><a name="l02925"></a><span class="lineno"> 2925</span>&#160;    <span class="comment">// therefore the output will be 2x4x4: (I−K+2P)/S +1 =&gt; (10-7 +0)/1 +1</span></div><div class="line"><a name="l02926"></a><span class="lineno"> 2926</span>&#160;    <a class="code" href="classarmnn_1_1_tensor_info.xhtml">armnn::TensorInfo</a> outputTensorInfo({ 1, 2, 4, 4}, ArmnnType);</div><div class="line"><a name="l02927"></a><span class="lineno"> 2927</span>&#160;    std::vector&lt;float&gt; outputExpectedNoQuantizedValues =</div><div class="line"><a name="l02928"></a><span class="lineno"> 2928</span>&#160;            {</div><div class="line"><a name="l02929"></a><span class="lineno"> 2929</span>&#160;                    2, 9, 9, 9, 2, 9, 9, 9, 2, 9, 9, 9, 5, 3, 3, 3, 3,</div><div class="line"><a name="l02930"></a><span class="lineno"> 2930</span>&#160;</div><div class="line"><a name="l02931"></a><span class="lineno"> 2931</span>&#160;                    1, 1, 1, 3, 1, 1, 1, 3, 1, 1, 1, 6, 4, 4, 4</div><div class="line"><a name="l02932"></a><span class="lineno"> 2932</span>&#160;            };</div><div class="line"><a name="l02933"></a><span class="lineno"> 2933</span>&#160;</div><div class="line"><a name="l02934"></a><span class="lineno"> 2934</span>&#160;    <span class="keywordflow">return</span> DepthwiseConvolution2d3x3DilationTestCommon&lt;ArmnnType, ArmnnBType&gt;(</div><div class="line"><a name="l02935"></a><span class="lineno"> 2935</span>&#160;            workloadFactory,</div><div class="line"><a name="l02936"></a><span class="lineno"> 2936</span>&#160;            memoryManager,</div><div class="line"><a name="l02937"></a><span class="lineno"> 2937</span>&#160;            tensorHandleFactory,</div><div class="line"><a name="l02938"></a><span class="lineno"> 2938</span>&#160;            inputNoQuantizedValues,</div><div class="line"><a name="l02939"></a><span class="lineno"> 2939</span>&#160;            inputTensorInfo,</div><div class="line"><a name="l02940"></a><span class="lineno"> 2940</span>&#160;            kernelNoQuantizedValues,</div><div class="line"><a name="l02941"></a><span class="lineno"> 2941</span>&#160;            kernelTensorInfo,</div><div class="line"><a name="l02942"></a><span class="lineno"> 2942</span>&#160;            outputExpectedNoQuantizedValues,</div><div class="line"><a name="l02943"></a><span class="lineno"> 2943</span>&#160;            outputTensorInfo,</div><div class="line"><a name="l02944"></a><span class="lineno"> 2944</span>&#160;            3,</div><div class="line"><a name="l02945"></a><span class="lineno"> 2945</span>&#160;            3,</div><div class="line"><a name="l02946"></a><span class="lineno"> 2946</span>&#160;            layout,</div><div class="line"><a name="l02947"></a><span class="lineno"> 2947</span>&#160;            biasEnabled);</div><div class="line"><a name="l02948"></a><span class="lineno"> 2948</span>&#160;}</div><div class="ttc" id="classarmnn_1_1_tensor_info_xhtml"><div class="ttname"><a href="classarmnn_1_1_tensor_info.xhtml">armnn::TensorInfo</a></div><div class="ttdef"><b>Definition:</b> <a href="_tensor_8hpp_source.xhtml#l00152">Tensor.hpp:152</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="ae689ff7f2c5222b1ab4ee153e159cab7"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ae689ff7f2c5222b1ab4ee153e159cab7">&#9670;&nbsp;</a></span>DepthwiseConvolution2d3x3Dilation3x3Test()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="struct_layer_test_result.xhtml">LayerTestResult</a>&lt;T, 4&gt; DepthwiseConvolution2d3x3Dilation3x3Test </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classarmnn_1_1_i_workload_factory.xhtml">armnn::IWorkloadFactory</a> &amp;&#160;</td>
          <td class="paramname"><em>workloadFactory</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_i_backend_internal.xhtml#a693b40e6b94e958836aeb0410ca186bd">armnn::IBackendInternal::IMemoryManagerSharedPtr</a> &amp;&#160;</td>
          <td class="paramname"><em>memoryManager</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_i_tensor_handle_factory.xhtml">armnn::ITensorHandleFactory</a> &amp;&#160;</td>
          <td class="paramname"><em>tensorHandleFactory</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>biasEnabled</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="namespacearmnn.xhtml#ad1d5cce2d9e9a5d61c243e5c989112e0">armnn::DataLayout</a>&#160;</td>
          <td class="paramname"><em>layout</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_conv2d_test_impl_8cpp_source.xhtml#l02821">2821</a> of file <a class="el" href="_conv2d_test_impl_8cpp_source.xhtml">Conv2dTestImpl.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l02827"></a><span class="lineno"> 2827</span>&#160;{</div><div class="line"><a name="l02828"></a><span class="lineno"> 2828</span>&#160;    <a class="code" href="classarmnn_1_1_tensor_info.xhtml">armnn::TensorInfo</a> inputTensorInfo({1, 1, 10, 10}, ArmnnType);</div><div class="line"><a name="l02829"></a><span class="lineno"> 2829</span>&#160;    std::vector&lt;float&gt; inputNoQuantizedValues =</div><div class="line"><a name="l02830"></a><span class="lineno"> 2830</span>&#160;            {</div><div class="line"><a name="l02831"></a><span class="lineno"> 2831</span>&#160;                    0, 0, 0, 0, 0, 0, 0, 0, 0, 0,</div><div class="line"><a name="l02832"></a><span class="lineno"> 2832</span>&#160;                    0, 0, 0, 0, 0, 0, 0, 0, 0, 0,</div><div class="line"><a name="l02833"></a><span class="lineno"> 2833</span>&#160;                    0, 0, 0, 0, 0, 0, 0, 0, 0, 0,</div><div class="line"><a name="l02834"></a><span class="lineno"> 2834</span>&#160;                    0, 0, 0, 0, 1, 1, 1, 0, 0, 0,</div><div class="line"><a name="l02835"></a><span class="lineno"> 2835</span>&#160;                    0, 0, 0, 0, 1, 1, 1, 0, 0, 0,</div><div class="line"><a name="l02836"></a><span class="lineno"> 2836</span>&#160;                    0, 0, 0, 0, 1, 1, 1, 0, 0, 0,</div><div class="line"><a name="l02837"></a><span class="lineno"> 2837</span>&#160;                    0, 0, 0, 0, 0, 0, 0, 0, 0, 0,</div><div class="line"><a name="l02838"></a><span class="lineno"> 2838</span>&#160;                    0, 0, 0, 0, 0, 0, 0, 0, 0, 0,</div><div class="line"><a name="l02839"></a><span class="lineno"> 2839</span>&#160;                    0, 0, 0, 0, 0, 0, 0, 0, 0, 0,</div><div class="line"><a name="l02840"></a><span class="lineno"> 2840</span>&#160;                    0, 0, 0, 0, 0, 0, 0, 0, 0, 0</div><div class="line"><a name="l02841"></a><span class="lineno"> 2841</span>&#160;            };</div><div class="line"><a name="l02842"></a><span class="lineno"> 2842</span>&#160;</div><div class="line"><a name="l02843"></a><span class="lineno"> 2843</span>&#160;    <a class="code" href="classarmnn_1_1_tensor_info.xhtml">armnn::TensorInfo</a> kernelTensorInfo({ 1, 3, 3, 1}, ArmnnType);</div><div class="line"><a name="l02844"></a><span class="lineno"> 2844</span>&#160;    std::vector&lt;float&gt; kernelNoQuantizedValues =</div><div class="line"><a name="l02845"></a><span class="lineno"> 2845</span>&#160;            {</div><div class="line"><a name="l02846"></a><span class="lineno"> 2846</span>&#160;                    1, 2, 3,</div><div class="line"><a name="l02847"></a><span class="lineno"> 2847</span>&#160;                    4, 5, 6,</div><div class="line"><a name="l02848"></a><span class="lineno"> 2848</span>&#160;                    7, 8, 9</div><div class="line"><a name="l02849"></a><span class="lineno"> 2849</span>&#160;            };</div><div class="line"><a name="l02850"></a><span class="lineno"> 2850</span>&#160;</div><div class="line"><a name="l02851"></a><span class="lineno"> 2851</span>&#160;    <span class="comment">// Since the dilation rate is 3 this will dilate the kernel to be like 7x7,</span></div><div class="line"><a name="l02852"></a><span class="lineno"> 2852</span>&#160;    <span class="comment">// therefore the output will be 4x4: (I−K+2P)/S +1 =&gt; (10-7 +0)/1 +1</span></div><div class="line"><a name="l02853"></a><span class="lineno"> 2853</span>&#160;    <a class="code" href="classarmnn_1_1_tensor_info.xhtml">armnn::TensorInfo</a> outputTensorInfo({ 1, 1, 4, 4}, ArmnnType);</div><div class="line"><a name="l02854"></a><span class="lineno"> 2854</span>&#160;    std::vector&lt;float&gt; outputExpectedNoQuantizedValues =</div><div class="line"><a name="l02855"></a><span class="lineno"> 2855</span>&#160;            {</div><div class="line"><a name="l02856"></a><span class="lineno"> 2856</span>&#160;                    6., 5., 5., 5.,</div><div class="line"><a name="l02857"></a><span class="lineno"> 2857</span>&#160;                    6., 5., 5., 5.,</div><div class="line"><a name="l02858"></a><span class="lineno"> 2858</span>&#160;                    6., 5., 5., 5.,</div><div class="line"><a name="l02859"></a><span class="lineno"> 2859</span>&#160;                    3., 2., 2., 2.</div><div class="line"><a name="l02860"></a><span class="lineno"> 2860</span>&#160;            };</div><div class="line"><a name="l02861"></a><span class="lineno"> 2861</span>&#160;</div><div class="line"><a name="l02862"></a><span class="lineno"> 2862</span>&#160;    <span class="keywordflow">return</span> DepthwiseConvolution2d3x3DilationTestCommon&lt;ArmnnType, ArmnnBType&gt;(</div><div class="line"><a name="l02863"></a><span class="lineno"> 2863</span>&#160;            workloadFactory,</div><div class="line"><a name="l02864"></a><span class="lineno"> 2864</span>&#160;            memoryManager,</div><div class="line"><a name="l02865"></a><span class="lineno"> 2865</span>&#160;            tensorHandleFactory,</div><div class="line"><a name="l02866"></a><span class="lineno"> 2866</span>&#160;            inputNoQuantizedValues,</div><div class="line"><a name="l02867"></a><span class="lineno"> 2867</span>&#160;            inputTensorInfo,</div><div class="line"><a name="l02868"></a><span class="lineno"> 2868</span>&#160;            kernelNoQuantizedValues,</div><div class="line"><a name="l02869"></a><span class="lineno"> 2869</span>&#160;            kernelTensorInfo,</div><div class="line"><a name="l02870"></a><span class="lineno"> 2870</span>&#160;            outputExpectedNoQuantizedValues,</div><div class="line"><a name="l02871"></a><span class="lineno"> 2871</span>&#160;            outputTensorInfo,</div><div class="line"><a name="l02872"></a><span class="lineno"> 2872</span>&#160;            3,</div><div class="line"><a name="l02873"></a><span class="lineno"> 2873</span>&#160;            3,</div><div class="line"><a name="l02874"></a><span class="lineno"> 2874</span>&#160;            layout,</div><div class="line"><a name="l02875"></a><span class="lineno"> 2875</span>&#160;            biasEnabled);</div><div class="line"><a name="l02876"></a><span class="lineno"> 2876</span>&#160;}</div><div class="ttc" id="classarmnn_1_1_tensor_info_xhtml"><div class="ttname"><a href="classarmnn_1_1_tensor_info.xhtml">armnn::TensorInfo</a></div><div class="ttdef"><b>Definition:</b> <a href="_tensor_8hpp_source.xhtml#l00152">Tensor.hpp:152</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="abdbec483f1020dc684741b37e04d2175"></a>
<h2 class="memtitle"><span class="permalink"><a href="#abdbec483f1020dc684741b37e04d2175">&#9670;&nbsp;</a></span>DepthwiseConvolution2dAsymmetricTest()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="struct_layer_test_result.xhtml">LayerTestResult</a>&lt;float, 4&gt; DepthwiseConvolution2dAsymmetricTest </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classarmnn_1_1_i_workload_factory.xhtml">armnn::IWorkloadFactory</a> &amp;&#160;</td>
          <td class="paramname"><em>workloadFactory</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_i_backend_internal.xhtml#a693b40e6b94e958836aeb0410ca186bd">armnn::IBackendInternal::IMemoryManagerSharedPtr</a> &amp;&#160;</td>
          <td class="paramname"><em>memoryManager</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_i_tensor_handle_factory.xhtml">armnn::ITensorHandleFactory</a> &amp;&#160;</td>
          <td class="paramname"><em>tensorHandleFactory</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>biasEnabled</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="namespacearmnn.xhtml#ad1d5cce2d9e9a5d61c243e5c989112e0">armnn::DataLayout</a>&#160;</td>
          <td class="paramname"><em>layout</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_conv2d_test_impl_8cpp_source.xhtml#l03833">3833</a> of file <a class="el" href="_conv2d_test_impl_8cpp_source.xhtml">Conv2dTestImpl.cpp</a>.</p>

<p class="reference">Referenced by <a class="el" href="_cl_layer_tests_8cpp_source.xhtml#l00027">TEST_SUITE()</a>.</p>
<div class="fragment"><div class="line"><a name="l03839"></a><span class="lineno"> 3839</span>&#160;{</div><div class="line"><a name="l03840"></a><span class="lineno"> 3840</span>&#160;    <span class="keywordflow">return</span> DepthwiseConvolution2dAsymmetricTestCommon&lt;armnn::DataType::Float32, armnn::DataType::Float32&gt;(</div><div class="line"><a name="l03841"></a><span class="lineno"> 3841</span>&#160;        workloadFactory, memoryManager, tensorHandleFactory, 0.0f, 0, biasEnabled, layout);</div><div class="line"><a name="l03842"></a><span class="lineno"> 3842</span>&#160;}</div></div><!-- fragment -->
</div>
</div>
<a id="a1879a2d6ebde509005aef609d663f664"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a1879a2d6ebde509005aef609d663f664">&#9670;&nbsp;</a></span>DepthwiseConvolution2dDepthMul1Int16Test()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="struct_layer_test_result.xhtml">LayerTestResult</a>&lt;int16_t, 4&gt; DepthwiseConvolution2dDepthMul1Int16Test </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classarmnn_1_1_i_workload_factory.xhtml">armnn::IWorkloadFactory</a> &amp;&#160;</td>
          <td class="paramname"><em>workloadFactory</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_i_backend_internal.xhtml#a693b40e6b94e958836aeb0410ca186bd">armnn::IBackendInternal::IMemoryManagerSharedPtr</a> &amp;&#160;</td>
          <td class="paramname"><em>memoryManager</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_i_tensor_handle_factory.xhtml">armnn::ITensorHandleFactory</a> &amp;&#160;</td>
          <td class="paramname"><em>tensorHandleFactory</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>biasEnabled</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="namespacearmnn.xhtml#ad1d5cce2d9e9a5d61c243e5c989112e0">armnn::DataLayout</a>&#160;</td>
          <td class="paramname"><em>layout</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_conv2d_test_impl_8cpp_source.xhtml#l03891">3891</a> of file <a class="el" href="_conv2d_test_impl_8cpp_source.xhtml">Conv2dTestImpl.cpp</a>.</p>

<p class="reference">Referenced by <a class="el" href="_ref_layer_tests_8cpp_source.xhtml#l00014">TEST_SUITE()</a>.</p>
<div class="fragment"><div class="line"><a name="l03897"></a><span class="lineno"> 3897</span>&#160;{</div><div class="line"><a name="l03898"></a><span class="lineno"> 3898</span>&#160;    <span class="keywordflow">return</span> DepthwiseConvolution2dDepthMul1TestImpl&lt;armnn::DataType::QSymmS16, armnn::DataType::Signed32&gt;(</div><div class="line"><a name="l03899"></a><span class="lineno"> 3899</span>&#160;        workloadFactory, memoryManager, tensorHandleFactory, 0.5f, 50, biasEnabled, layout);</div><div class="line"><a name="l03900"></a><span class="lineno"> 3900</span>&#160;}</div></div><!-- fragment -->
</div>
</div>
<a id="aa1b649cd47b77a98921cc22eb6a451c8"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aa1b649cd47b77a98921cc22eb6a451c8">&#9670;&nbsp;</a></span>DepthwiseConvolution2dDepthMul1Test()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="struct_layer_test_result.xhtml">LayerTestResult</a>&lt;float, 4&gt; DepthwiseConvolution2dDepthMul1Test </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classarmnn_1_1_i_workload_factory.xhtml">armnn::IWorkloadFactory</a> &amp;&#160;</td>
          <td class="paramname"><em>workloadFactory</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_i_backend_internal.xhtml#a693b40e6b94e958836aeb0410ca186bd">armnn::IBackendInternal::IMemoryManagerSharedPtr</a> &amp;&#160;</td>
          <td class="paramname"><em>memoryManager</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_i_tensor_handle_factory.xhtml">armnn::ITensorHandleFactory</a> &amp;&#160;</td>
          <td class="paramname"><em>tensorHandleFactory</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>biasEnabled</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="namespacearmnn.xhtml#ad1d5cce2d9e9a5d61c243e5c989112e0">armnn::DataLayout</a>&#160;</td>
          <td class="paramname"><em>layout</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_conv2d_test_impl_8cpp_source.xhtml#l03779">3779</a> of file <a class="el" href="_conv2d_test_impl_8cpp_source.xhtml">Conv2dTestImpl.cpp</a>.</p>

<p class="reference">Referenced by <a class="el" href="_cl_layer_tests_8cpp_source.xhtml#l00027">TEST_SUITE()</a>.</p>
<div class="fragment"><div class="line"><a name="l03785"></a><span class="lineno"> 3785</span>&#160;{</div><div class="line"><a name="l03786"></a><span class="lineno"> 3786</span>&#160;    <span class="keywordflow">return</span> DepthwiseConvolution2dDepthMul1TestImpl&lt;armnn::DataType::Float32, armnn::DataType::Float32&gt;(</div><div class="line"><a name="l03787"></a><span class="lineno"> 3787</span>&#160;        workloadFactory, memoryManager, tensorHandleFactory, 0.0f, 0, biasEnabled, layout);</div><div class="line"><a name="l03788"></a><span class="lineno"> 3788</span>&#160;}</div></div><!-- fragment -->
</div>
</div>
<a id="a0cbaad29854964598fdbd63d9506d31f"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a0cbaad29854964598fdbd63d9506d31f">&#9670;&nbsp;</a></span>DepthwiseConvolution2dDepthMul1Uint8Test()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="struct_layer_test_result.xhtml">LayerTestResult</a>&lt;uint8_t, 4&gt; DepthwiseConvolution2dDepthMul1Uint8Test </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classarmnn_1_1_i_workload_factory.xhtml">armnn::IWorkloadFactory</a> &amp;&#160;</td>
          <td class="paramname"><em>workloadFactory</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_i_backend_internal.xhtml#a693b40e6b94e958836aeb0410ca186bd">armnn::IBackendInternal::IMemoryManagerSharedPtr</a> &amp;&#160;</td>
          <td class="paramname"><em>memoryManager</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_i_tensor_handle_factory.xhtml">armnn::ITensorHandleFactory</a> &amp;&#160;</td>
          <td class="paramname"><em>tensorHandleFactory</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>biasEnabled</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="namespacearmnn.xhtml#ad1d5cce2d9e9a5d61c243e5c989112e0">armnn::DataLayout</a>&#160;</td>
          <td class="paramname"><em>layout</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_conv2d_test_impl_8cpp_source.xhtml#l03855">3855</a> of file <a class="el" href="_conv2d_test_impl_8cpp_source.xhtml">Conv2dTestImpl.cpp</a>.</p>

<p class="reference">Referenced by <a class="el" href="_cl_layer_tests_8cpp_source.xhtml#l00027">TEST_SUITE()</a>.</p>
<div class="fragment"><div class="line"><a name="l03861"></a><span class="lineno"> 3861</span>&#160;{</div><div class="line"><a name="l03862"></a><span class="lineno"> 3862</span>&#160;    <span class="keywordflow">return</span> DepthwiseConvolution2dDepthMul1TestImpl&lt;armnn::DataType::QAsymmU8, armnn::DataType::Signed32&gt;(</div><div class="line"><a name="l03863"></a><span class="lineno"> 3863</span>&#160;        workloadFactory, memoryManager, tensorHandleFactory, 0.5f, 50, biasEnabled, layout);</div><div class="line"><a name="l03864"></a><span class="lineno"> 3864</span>&#160;}</div></div><!-- fragment -->
</div>
</div>
<a id="a9c68d43c1ebbd68f34b7846046d814d3"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a9c68d43c1ebbd68f34b7846046d814d3">&#9670;&nbsp;</a></span>DepthwiseConvolution2dDepthMul64Test()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="struct_layer_test_result.xhtml">LayerTestResult</a>&lt;float, 4&gt; DepthwiseConvolution2dDepthMul64Test </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classarmnn_1_1_i_workload_factory.xhtml">armnn::IWorkloadFactory</a> &amp;&#160;</td>
          <td class="paramname"><em>workloadFactory</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_i_backend_internal.xhtml#a693b40e6b94e958836aeb0410ca186bd">armnn::IBackendInternal::IMemoryManagerSharedPtr</a> &amp;&#160;</td>
          <td class="paramname"><em>memoryManager</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_i_tensor_handle_factory.xhtml">armnn::ITensorHandleFactory</a> &amp;&#160;</td>
          <td class="paramname"><em>tensorHandleFactory</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_conv2d_test_impl_8cpp_source.xhtml#l03790">3790</a> of file <a class="el" href="_conv2d_test_impl_8cpp_source.xhtml">Conv2dTestImpl.cpp</a>.</p>

<p class="reference">References <a class="el" href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a166495adc0d0f53bee6baecc577f5204">armnn::Float32</a>, <a class="el" href="_types_utils_8hpp_source.xhtml#l00151">armnn::GetDataTypeSize()</a>, <a class="el" href="namespacearmnn.xhtml#ad1d5cce2d9e9a5d61c243e5c989112e0a6b99f356fe3b30a2a850b5ea897c289f">armnn::NCHW</a>, <a class="el" href="_permute_8cpp_source.xhtml#l00131">armnnUtils::Permute()</a>, and <a class="el" href="_permute_8cpp_source.xhtml#l00098">armnnUtils::Permuted()</a>.</p>

<p class="reference">Referenced by <a class="el" href="_cl_layer_tests_8cpp_source.xhtml#l00027">TEST_SUITE()</a>.</p>
<div class="fragment"><div class="line"><a name="l03794"></a><span class="lineno"> 3794</span>&#160;{</div><div class="line"><a name="l03795"></a><span class="lineno"> 3795</span>&#160;    <a class="code" href="classarmnn_1_1_tensor_info.xhtml">armnn::TensorInfo</a> inputTensorInfo({ 1, 1, 2, 2 }, <a class="code" href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a166495adc0d0f53bee6baecc577f5204">armnn::DataType::Float32</a>);</div><div class="line"><a name="l03796"></a><span class="lineno"> 3796</span>&#160;    std::vector&lt;float&gt; input = { 1.f, 2.f, 3.f, 4.f };</div><div class="line"><a name="l03797"></a><span class="lineno"> 3797</span>&#160;</div><div class="line"><a name="l03798"></a><span class="lineno"> 3798</span>&#160;    std::vector&lt;float&gt; kernelData;</div><div class="line"><a name="l03799"></a><span class="lineno"> 3799</span>&#160;    std::vector&lt;float&gt; singleDepthKernel{ 1.f, -1.f, -1.f, 1.f };</div><div class="line"><a name="l03800"></a><span class="lineno"> 3800</span>&#160;    <span class="keywordflow">for</span> (<span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> i = 0; i &lt; 64; ++i)</div><div class="line"><a name="l03801"></a><span class="lineno"> 3801</span>&#160;    {</div><div class="line"><a name="l03802"></a><span class="lineno"> 3802</span>&#160;        kernelData.insert(kernelData.end(), singleDepthKernel.begin(), singleDepthKernel.end());</div><div class="line"><a name="l03803"></a><span class="lineno"> 3803</span>&#160;    }</div><div class="line"><a name="l03804"></a><span class="lineno"> 3804</span>&#160;    <a class="code" href="classarmnn_1_1_tensor_info.xhtml">armnn::TensorInfo</a> kernelTensorInfo({ 64, 1, 2, 2 }, <a class="code" href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a166495adc0d0f53bee6baecc577f5204">armnn::DataType::Float32</a>);</div><div class="line"><a name="l03805"></a><span class="lineno"> 3805</span>&#160;</div><div class="line"><a name="l03806"></a><span class="lineno"> 3806</span>&#160;    <span class="comment">// permute from [O,1,H,W] --&gt; [1,H,W,O]</span></div><div class="line"><a name="l03807"></a><span class="lineno"> 3807</span>&#160;    <a class="code" href="classarmnn_1_1_permutation_vector.xhtml">armnn::PermutationVector</a> permutationVector {3,0,1,2};</div><div class="line"><a name="l03808"></a><span class="lineno"> 3808</span>&#160;    kernelTensorInfo = <a class="code" href="namespacearmnn_utils.xhtml#abeaf4f6785039866fd075f4569ba8e84">armnnUtils::Permuted</a>(kernelTensorInfo, permutationVector);</div><div class="line"><a name="l03809"></a><span class="lineno"> 3809</span>&#160;    std::vector&lt;float&gt; kernelPermuted(kernelTensorInfo.GetNumElements());</div><div class="line"><a name="l03810"></a><span class="lineno"> 3810</span>&#160;    <a class="code" href="namespacearmnn_utils.xhtml#af3c74017185773dd61d8ca6662d65d43">armnnUtils::Permute</a>(kernelTensorInfo.GetShape(), permutationVector,</div><div class="line"><a name="l03811"></a><span class="lineno"> 3811</span>&#160;                        kernelData.data(), kernelPermuted.data(),</div><div class="line"><a name="l03812"></a><span class="lineno"> 3812</span>&#160;                        <a class="code" href="namespacearmnn.xhtml#aa02b9e06fb20fa3c13da0427e6ee5ab2">GetDataTypeSize</a>(kernelTensorInfo.GetDataType()));</div><div class="line"><a name="l03813"></a><span class="lineno"> 3813</span>&#160;</div><div class="line"><a name="l03814"></a><span class="lineno"> 3814</span>&#160;    std::vector&lt;float&gt; expectedOutputData(64, 0.f);</div><div class="line"><a name="l03815"></a><span class="lineno"> 3815</span>&#160;    <a class="code" href="classarmnn_1_1_tensor_info.xhtml">armnn::TensorInfo</a> outputTensorInfo({ 1, 64, 1, 1 }, <a class="code" href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a166495adc0d0f53bee6baecc577f5204">armnn::DataType::Float32</a>);</div><div class="line"><a name="l03816"></a><span class="lineno"> 3816</span>&#160;</div><div class="line"><a name="l03817"></a><span class="lineno"> 3817</span>&#160;    <span class="keywordflow">return</span> DepthwiseConvolution2dTestImpl&lt;armnn::DataType::Float32, armnn::DataType::Float32&gt;(</div><div class="line"><a name="l03818"></a><span class="lineno"> 3818</span>&#160;            workloadFactory,</div><div class="line"><a name="l03819"></a><span class="lineno"> 3819</span>&#160;            memoryManager,</div><div class="line"><a name="l03820"></a><span class="lineno"> 3820</span>&#160;            tensorHandleFactory,</div><div class="line"><a name="l03821"></a><span class="lineno"> 3821</span>&#160;            input,</div><div class="line"><a name="l03822"></a><span class="lineno"> 3822</span>&#160;            kernelPermuted,</div><div class="line"><a name="l03823"></a><span class="lineno"> 3823</span>&#160;            std::vector&lt;float&gt;(),</div><div class="line"><a name="l03824"></a><span class="lineno"> 3824</span>&#160;            expectedOutputData,</div><div class="line"><a name="l03825"></a><span class="lineno"> 3825</span>&#160;            inputTensorInfo.GetShape(),</div><div class="line"><a name="l03826"></a><span class="lineno"> 3826</span>&#160;            kernelTensorInfo.GetShape(),</div><div class="line"><a name="l03827"></a><span class="lineno"> 3827</span>&#160;            outputTensorInfo.GetShape(),</div><div class="line"><a name="l03828"></a><span class="lineno"> 3828</span>&#160;            0.f,</div><div class="line"><a name="l03829"></a><span class="lineno"> 3829</span>&#160;            0,</div><div class="line"><a name="l03830"></a><span class="lineno"> 3830</span>&#160;            <a class="code" href="namespacearmnn.xhtml#ad1d5cce2d9e9a5d61c243e5c989112e0a6b99f356fe3b30a2a850b5ea897c289f">armnn::DataLayout::NCHW</a>);</div><div class="line"><a name="l03831"></a><span class="lineno"> 3831</span>&#160;}</div><div class="ttc" id="classarmnn_1_1_tensor_info_xhtml"><div class="ttname"><a href="classarmnn_1_1_tensor_info.xhtml">armnn::TensorInfo</a></div><div class="ttdef"><b>Definition:</b> <a href="_tensor_8hpp_source.xhtml#l00152">Tensor.hpp:152</a></div></div>
<div class="ttc" id="namespacearmnn_utils_xhtml_af3c74017185773dd61d8ca6662d65d43"><div class="ttname"><a href="namespacearmnn_utils.xhtml#af3c74017185773dd61d8ca6662d65d43">armnnUtils::Permute</a></div><div class="ttdeci">void Permute(const armnn::TensorShape &amp;dstShape, const armnn::PermutationVector &amp;mappings, const void *src, void *dst, size_t dataTypeSize)</div><div class="ttdef"><b>Definition:</b> <a href="_permute_8cpp_source.xhtml#l00131">Permute.cpp:131</a></div></div>
<div class="ttc" id="classarmnn_1_1_permutation_vector_xhtml"><div class="ttname"><a href="classarmnn_1_1_permutation_vector.xhtml">armnn::PermutationVector</a></div><div class="ttdef"><b>Definition:</b> <a href="_types_8hpp_source.xhtml#l00295">Types.hpp:295</a></div></div>
<div class="ttc" id="namespacearmnn_xhtml_ad8ed01ff3ff33333d8e19db4d2818bb6a166495adc0d0f53bee6baecc577f5204"><div class="ttname"><a href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a166495adc0d0f53bee6baecc577f5204">armnn::DataType::Float32</a></div></div>
<div class="ttc" id="namespacearmnn_xhtml_ad1d5cce2d9e9a5d61c243e5c989112e0a6b99f356fe3b30a2a850b5ea897c289f"><div class="ttname"><a href="namespacearmnn.xhtml#ad1d5cce2d9e9a5d61c243e5c989112e0a6b99f356fe3b30a2a850b5ea897c289f">armnn::DataLayout::NCHW</a></div></div>
<div class="ttc" id="namespacearmnn_utils_xhtml_abeaf4f6785039866fd075f4569ba8e84"><div class="ttname"><a href="namespacearmnn_utils.xhtml#abeaf4f6785039866fd075f4569ba8e84">armnnUtils::Permuted</a></div><div class="ttdeci">armnn::TensorShape Permuted(const armnn::TensorShape &amp;srcShape, const armnn::PermutationVector &amp;mappings)</div><div class="ttdef"><b>Definition:</b> <a href="_permute_8cpp_source.xhtml#l00098">Permute.cpp:98</a></div></div>
<div class="ttc" id="namespacearmnn_xhtml_aa02b9e06fb20fa3c13da0427e6ee5ab2"><div class="ttname"><a href="namespacearmnn.xhtml#aa02b9e06fb20fa3c13da0427e6ee5ab2">armnn::GetDataTypeSize</a></div><div class="ttdeci">constexpr unsigned int GetDataTypeSize(DataType dataType)</div><div class="ttdef"><b>Definition:</b> <a href="_types_utils_8hpp_source.xhtml#l00151">TypesUtils.hpp:151</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="ae9488183b3dc79abe459aaea83524d0a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ae9488183b3dc79abe459aaea83524d0a">&#9670;&nbsp;</a></span>DepthwiseConvolution2dDepthNhwcTest()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="struct_layer_test_result.xhtml">LayerTestResult</a>&lt;float, 4&gt; DepthwiseConvolution2dDepthNhwcTest </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classarmnn_1_1_i_workload_factory.xhtml">armnn::IWorkloadFactory</a> &amp;&#160;</td>
          <td class="paramname"><em>workloadFactory</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_i_backend_internal.xhtml#a693b40e6b94e958836aeb0410ca186bd">armnn::IBackendInternal::IMemoryManagerSharedPtr</a> &amp;&#160;</td>
          <td class="paramname"><em>memoryManager</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_i_tensor_handle_factory.xhtml">armnn::ITensorHandleFactory</a> &amp;&#160;</td>
          <td class="paramname"><em>tensorHandleFactory</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>biasEnabled</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_conv2d_test_impl_8cpp_source.xhtml#l03769">3769</a> of file <a class="el" href="_conv2d_test_impl_8cpp_source.xhtml">Conv2dTestImpl.cpp</a>.</p>

<p class="reference">Referenced by <a class="el" href="_cl_layer_tests_8cpp_source.xhtml#l00027">TEST_SUITE()</a>.</p>
<div class="fragment"><div class="line"><a name="l03774"></a><span class="lineno"> 3774</span>&#160;{</div><div class="line"><a name="l03775"></a><span class="lineno"> 3775</span>&#160;    <span class="keywordflow">return</span> DepthwiseConvolution2dNhwcTestCommon&lt;armnn::DataType::Float32, armnn::DataType::Float32&gt;(</div><div class="line"><a name="l03776"></a><span class="lineno"> 3776</span>&#160;        workloadFactory, memoryManager, tensorHandleFactory, 0.0f, 0, biasEnabled);</div><div class="line"><a name="l03777"></a><span class="lineno"> 3777</span>&#160;}</div></div><!-- fragment -->
</div>
</div>
<a id="a1599b84e270875cb9b008c23cba9229f"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a1599b84e270875cb9b008c23cba9229f">&#9670;&nbsp;</a></span>DepthwiseConvolution2dInt16Test()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="struct_layer_test_result.xhtml">LayerTestResult</a>&lt;int16_t, 4&gt; DepthwiseConvolution2dInt16Test </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classarmnn_1_1_i_workload_factory.xhtml">armnn::IWorkloadFactory</a> &amp;&#160;</td>
          <td class="paramname"><em>workloadFactory</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_i_backend_internal.xhtml#a693b40e6b94e958836aeb0410ca186bd">armnn::IBackendInternal::IMemoryManagerSharedPtr</a> &amp;&#160;</td>
          <td class="paramname"><em>memoryManager</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_i_tensor_handle_factory.xhtml">armnn::ITensorHandleFactory</a> &amp;&#160;</td>
          <td class="paramname"><em>tensorHandleFactory</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>biasEnabled</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="namespacearmnn.xhtml#ad1d5cce2d9e9a5d61c243e5c989112e0">armnn::DataLayout</a>&#160;</td>
          <td class="paramname"><em>layout</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_conv2d_test_impl_8cpp_source.xhtml#l03880">3880</a> of file <a class="el" href="_conv2d_test_impl_8cpp_source.xhtml">Conv2dTestImpl.cpp</a>.</p>

<p class="reference">Referenced by <a class="el" href="_ref_layer_tests_8cpp_source.xhtml#l00014">TEST_SUITE()</a>.</p>
<div class="fragment"><div class="line"><a name="l03886"></a><span class="lineno"> 3886</span>&#160;{</div><div class="line"><a name="l03887"></a><span class="lineno"> 3887</span>&#160;    <span class="keywordflow">return</span> DepthwiseConvolution2dTestImpl&lt;armnn::DataType::QSymmS16, armnn::DataType::Signed32&gt;(</div><div class="line"><a name="l03888"></a><span class="lineno"> 3888</span>&#160;        workloadFactory, memoryManager, tensorHandleFactory, 0.5f, 50, biasEnabled, layout);</div><div class="line"><a name="l03889"></a><span class="lineno"> 3889</span>&#160;}</div></div><!-- fragment -->
</div>
</div>
<a id="ae5aa717dc049d325cb92112049e5e626"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ae5aa717dc049d325cb92112049e5e626">&#9670;&nbsp;</a></span>DepthwiseConvolution2dMult2Test()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="struct_layer_test_result.xhtml">LayerTestResult</a>&lt;T, 4&gt; DepthwiseConvolution2dMult2Test </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classarmnn_1_1_i_workload_factory.xhtml">armnn::IWorkloadFactory</a> &amp;&#160;</td>
          <td class="paramname"><em>workloadFactory</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_i_backend_internal.xhtml#a693b40e6b94e958836aeb0410ca186bd">armnn::IBackendInternal::IMemoryManagerSharedPtr</a> &amp;&#160;</td>
          <td class="paramname"><em>memoryManager</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_i_tensor_handle_factory.xhtml">armnn::ITensorHandleFactory</a> &amp;&#160;</td>
          <td class="paramname"><em>tensorHandleFactory</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>biasEnabled</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="namespacearmnn.xhtml#ad1d5cce2d9e9a5d61c243e5c989112e0">armnn::DataLayout</a>&#160;</td>
          <td class="paramname"><em>layout</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_conv2d_test_impl_8cpp_source.xhtml#l03026">3026</a> of file <a class="el" href="_conv2d_test_impl_8cpp_source.xhtml">Conv2dTestImpl.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l03032"></a><span class="lineno"> 3032</span>&#160;{</div><div class="line"><a name="l03033"></a><span class="lineno"> 3033</span>&#160;    <a class="code" href="classarmnn_1_1_tensor_info.xhtml">armnn::TensorInfo</a> inputTensorInfo({1, 2, 3, 3}, ArmnnType);</div><div class="line"><a name="l03034"></a><span class="lineno"> 3034</span>&#160;    std::vector&lt;float&gt; inputNoQuantizedValues =</div><div class="line"><a name="l03035"></a><span class="lineno"> 3035</span>&#160;            {</div><div class="line"><a name="l03036"></a><span class="lineno"> 3036</span>&#160;                    10.0, 10.0, 10.0,</div><div class="line"><a name="l03037"></a><span class="lineno"> 3037</span>&#160;                    10.0, 10.0, 10.0,</div><div class="line"><a name="l03038"></a><span class="lineno"> 3038</span>&#160;                    10.0, 10.0, 10.0,</div><div class="line"><a name="l03039"></a><span class="lineno"> 3039</span>&#160;</div><div class="line"><a name="l03040"></a><span class="lineno"> 3040</span>&#160;                    21.0, 22.0, 23.0,</div><div class="line"><a name="l03041"></a><span class="lineno"> 3041</span>&#160;                    24.0, 25.0, 26.0,</div><div class="line"><a name="l03042"></a><span class="lineno"> 3042</span>&#160;                    27.0, 28.0, 29.0</div><div class="line"><a name="l03043"></a><span class="lineno"> 3043</span>&#160;            };</div><div class="line"><a name="l03044"></a><span class="lineno"> 3044</span>&#160;</div><div class="line"><a name="l03045"></a><span class="lineno"> 3045</span>&#160;    <a class="code" href="classarmnn_1_1_tensor_info.xhtml">armnn::TensorInfo</a> kernelTensorInfo({ 1, 2, 2, 4}, ArmnnType);</div><div class="line"><a name="l03046"></a><span class="lineno"> 3046</span>&#160;</div><div class="line"><a name="l03047"></a><span class="lineno"> 3047</span>&#160;    std::vector&lt;float&gt; kernelNoQuantizedValues =</div><div class="line"><a name="l03048"></a><span class="lineno"> 3048</span>&#160;            {</div><div class="line"><a name="l03049"></a><span class="lineno"> 3049</span>&#160;                    0.25f, 0.25f,</div><div class="line"><a name="l03050"></a><span class="lineno"> 3050</span>&#160;                    0.25f, 0.25f,</div><div class="line"><a name="l03051"></a><span class="lineno"> 3051</span>&#160;</div><div class="line"><a name="l03052"></a><span class="lineno"> 3052</span>&#160;                    0.2f , 0.0f,</div><div class="line"><a name="l03053"></a><span class="lineno"> 3053</span>&#160;                    0.0f , 0.0f,</div><div class="line"><a name="l03054"></a><span class="lineno"> 3054</span>&#160;</div><div class="line"><a name="l03055"></a><span class="lineno"> 3055</span>&#160;                    0.0f , 0.0f,</div><div class="line"><a name="l03056"></a><span class="lineno"> 3056</span>&#160;                    0.0f , 0.1f,</div><div class="line"><a name="l03057"></a><span class="lineno"> 3057</span>&#160;</div><div class="line"><a name="l03058"></a><span class="lineno"> 3058</span>&#160;                    0.0f , 0.3f,</div><div class="line"><a name="l03059"></a><span class="lineno"> 3059</span>&#160;                    0.0f , 0.0f</div><div class="line"><a name="l03060"></a><span class="lineno"> 3060</span>&#160;</div><div class="line"><a name="l03061"></a><span class="lineno"> 3061</span>&#160;            };</div><div class="line"><a name="l03062"></a><span class="lineno"> 3062</span>&#160;</div><div class="line"><a name="l03063"></a><span class="lineno"> 3063</span>&#160;    <a class="code" href="classarmnn_1_1_tensor_info.xhtml">armnn::TensorInfo</a> outputTensorInfo({ 1, 4, 2, 2}, ArmnnType);</div><div class="line"><a name="l03064"></a><span class="lineno"> 3064</span>&#160;    std::vector&lt;float&gt; outputExpectedNoQuantizedValues =</div><div class="line"><a name="l03065"></a><span class="lineno"> 3065</span>&#160;            {</div><div class="line"><a name="l03066"></a><span class="lineno"> 3066</span>&#160;                     4.5f, 4.5f, 4.5f,  4.5f,</div><div class="line"><a name="l03067"></a><span class="lineno"> 3067</span>&#160;                     5.5f, 5.5f, 5.5f,  5.5f,</div><div class="line"><a name="l03068"></a><span class="lineno"> 3068</span>&#160;                    5.25f, 5.5f, 6.0f, 6.25f,</div><div class="line"><a name="l03069"></a><span class="lineno"> 3069</span>&#160;                    7.65f, 8.0f, 8.7f, 9.05f</div><div class="line"><a name="l03070"></a><span class="lineno"> 3070</span>&#160;            };</div><div class="line"><a name="l03071"></a><span class="lineno"> 3071</span>&#160;</div><div class="line"><a name="l03072"></a><span class="lineno"> 3072</span>&#160;</div><div class="line"><a name="l03073"></a><span class="lineno"> 3073</span>&#160;    <span class="keywordflow">return</span> DepthwiseConvolution2d3x3DilationTestCommon&lt;ArmnnType, ArmnnBType&gt;(</div><div class="line"><a name="l03074"></a><span class="lineno"> 3074</span>&#160;            workloadFactory,</div><div class="line"><a name="l03075"></a><span class="lineno"> 3075</span>&#160;            memoryManager,</div><div class="line"><a name="l03076"></a><span class="lineno"> 3076</span>&#160;            tensorHandleFactory,</div><div class="line"><a name="l03077"></a><span class="lineno"> 3077</span>&#160;            inputNoQuantizedValues,</div><div class="line"><a name="l03078"></a><span class="lineno"> 3078</span>&#160;            inputTensorInfo,</div><div class="line"><a name="l03079"></a><span class="lineno"> 3079</span>&#160;            kernelNoQuantizedValues,</div><div class="line"><a name="l03080"></a><span class="lineno"> 3080</span>&#160;            kernelTensorInfo,</div><div class="line"><a name="l03081"></a><span class="lineno"> 3081</span>&#160;            outputExpectedNoQuantizedValues,</div><div class="line"><a name="l03082"></a><span class="lineno"> 3082</span>&#160;            outputTensorInfo,</div><div class="line"><a name="l03083"></a><span class="lineno"> 3083</span>&#160;            1,</div><div class="line"><a name="l03084"></a><span class="lineno"> 3084</span>&#160;            1,</div><div class="line"><a name="l03085"></a><span class="lineno"> 3085</span>&#160;            layout,</div><div class="line"><a name="l03086"></a><span class="lineno"> 3086</span>&#160;            biasEnabled);</div><div class="line"><a name="l03087"></a><span class="lineno"> 3087</span>&#160;}</div><div class="ttc" id="classarmnn_1_1_tensor_info_xhtml"><div class="ttname"><a href="classarmnn_1_1_tensor_info.xhtml">armnn::TensorInfo</a></div><div class="ttdef"><b>Definition:</b> <a href="_tensor_8hpp_source.xhtml#l00152">Tensor.hpp:152</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="a347ca1c8d1443563807e98e261a84954"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a347ca1c8d1443563807e98e261a84954">&#9670;&nbsp;</a></span>DepthwiseConvolution2dMult4Test()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="struct_layer_test_result.xhtml">LayerTestResult</a>&lt;T, 4&gt; DepthwiseConvolution2dMult4Test </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classarmnn_1_1_i_workload_factory.xhtml">armnn::IWorkloadFactory</a> &amp;&#160;</td>
          <td class="paramname"><em>workloadFactory</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_i_backend_internal.xhtml#a693b40e6b94e958836aeb0410ca186bd">armnn::IBackendInternal::IMemoryManagerSharedPtr</a> &amp;&#160;</td>
          <td class="paramname"><em>memoryManager</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_i_tensor_handle_factory.xhtml">armnn::ITensorHandleFactory</a> &amp;&#160;</td>
          <td class="paramname"><em>tensorHandleFactory</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>biasEnabled</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="namespacearmnn.xhtml#ad1d5cce2d9e9a5d61c243e5c989112e0">armnn::DataLayout</a>&#160;</td>
          <td class="paramname"><em>layout</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_conv2d_test_impl_8cpp_source.xhtml#l02951">2951</a> of file <a class="el" href="_conv2d_test_impl_8cpp_source.xhtml">Conv2dTestImpl.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l02957"></a><span class="lineno"> 2957</span>&#160;{</div><div class="line"><a name="l02958"></a><span class="lineno"> 2958</span>&#160;    <a class="code" href="classarmnn_1_1_tensor_info.xhtml">armnn::TensorInfo</a> inputTensorInfo({1, 2, 3, 3}, ArmnnType);</div><div class="line"><a name="l02959"></a><span class="lineno"> 2959</span>&#160;    std::vector&lt;float&gt; inputNoQuantizedValues =</div><div class="line"><a name="l02960"></a><span class="lineno"> 2960</span>&#160;            {</div><div class="line"><a name="l02961"></a><span class="lineno"> 2961</span>&#160;                    10.0, 10.0, 10.0,</div><div class="line"><a name="l02962"></a><span class="lineno"> 2962</span>&#160;                    10.0, 10.0, 10.0,</div><div class="line"><a name="l02963"></a><span class="lineno"> 2963</span>&#160;                    10.0, 10.0, 10.0,</div><div class="line"><a name="l02964"></a><span class="lineno"> 2964</span>&#160;</div><div class="line"><a name="l02965"></a><span class="lineno"> 2965</span>&#160;                    21.0, 22.0, 23.0,</div><div class="line"><a name="l02966"></a><span class="lineno"> 2966</span>&#160;                    24.0, 25.0, 26.0,</div><div class="line"><a name="l02967"></a><span class="lineno"> 2967</span>&#160;                    27.0, 28.0, 29.0</div><div class="line"><a name="l02968"></a><span class="lineno"> 2968</span>&#160;            };</div><div class="line"><a name="l02969"></a><span class="lineno"> 2969</span>&#160;</div><div class="line"><a name="l02970"></a><span class="lineno"> 2970</span>&#160;    <a class="code" href="classarmnn_1_1_tensor_info.xhtml">armnn::TensorInfo</a> kernelTensorInfo({ 1, 2, 2, 8}, ArmnnType);</div><div class="line"><a name="l02971"></a><span class="lineno"> 2971</span>&#160;</div><div class="line"><a name="l02972"></a><span class="lineno"> 2972</span>&#160;    std::vector&lt;float&gt; kernelNoQuantizedValues =</div><div class="line"><a name="l02973"></a><span class="lineno"> 2973</span>&#160;            {</div><div class="line"><a name="l02974"></a><span class="lineno"> 2974</span>&#160;                    0.25f, 0.25f,</div><div class="line"><a name="l02975"></a><span class="lineno"> 2975</span>&#160;                    0.25f, 0.25f,</div><div class="line"><a name="l02976"></a><span class="lineno"> 2976</span>&#160;</div><div class="line"><a name="l02977"></a><span class="lineno"> 2977</span>&#160;                    0.25f, 0.25f,</div><div class="line"><a name="l02978"></a><span class="lineno"> 2978</span>&#160;                    0.25f, 0.25f,</div><div class="line"><a name="l02979"></a><span class="lineno"> 2979</span>&#160;</div><div class="line"><a name="l02980"></a><span class="lineno"> 2980</span>&#160;                    0.0f , 0.0f,</div><div class="line"><a name="l02981"></a><span class="lineno"> 2981</span>&#160;                    0.0f , 0.1f,</div><div class="line"><a name="l02982"></a><span class="lineno"> 2982</span>&#160;</div><div class="line"><a name="l02983"></a><span class="lineno"> 2983</span>&#160;                    0.0f , 0.0f,</div><div class="line"><a name="l02984"></a><span class="lineno"> 2984</span>&#160;                    0.0f , 0.1f,</div><div class="line"><a name="l02985"></a><span class="lineno"> 2985</span>&#160;</div><div class="line"><a name="l02986"></a><span class="lineno"> 2986</span>&#160;                    0.2f , 0.0f,</div><div class="line"><a name="l02987"></a><span class="lineno"> 2987</span>&#160;                    0.0f , 0.0f,</div><div class="line"><a name="l02988"></a><span class="lineno"> 2988</span>&#160;</div><div class="line"><a name="l02989"></a><span class="lineno"> 2989</span>&#160;                    0.2f , 0.0f,</div><div class="line"><a name="l02990"></a><span class="lineno"> 2990</span>&#160;                    0.0f , 0.0f,</div><div class="line"><a name="l02991"></a><span class="lineno"> 2991</span>&#160;</div><div class="line"><a name="l02992"></a><span class="lineno"> 2992</span>&#160;                    0.0f , 0.3f,</div><div class="line"><a name="l02993"></a><span class="lineno"> 2993</span>&#160;                    0.0f , 0.0f,</div><div class="line"><a name="l02994"></a><span class="lineno"> 2994</span>&#160;</div><div class="line"><a name="l02995"></a><span class="lineno"> 2995</span>&#160;                    0.0f , 0.3f,</div><div class="line"><a name="l02996"></a><span class="lineno"> 2996</span>&#160;                    0.0f , 0.0f</div><div class="line"><a name="l02997"></a><span class="lineno"> 2997</span>&#160;            };</div><div class="line"><a name="l02998"></a><span class="lineno"> 2998</span>&#160;</div><div class="line"><a name="l02999"></a><span class="lineno"> 2999</span>&#160;    <a class="code" href="classarmnn_1_1_tensor_info.xhtml">armnn::TensorInfo</a> outputTensorInfo({ 1, 8, 2, 2}, ArmnnType);</div><div class="line"><a name="l03000"></a><span class="lineno"> 3000</span>&#160;    std::vector&lt;float&gt; outputExpectedNoQuantizedValues =</div><div class="line"><a name="l03001"></a><span class="lineno"> 3001</span>&#160;            {</div><div class="line"><a name="l03002"></a><span class="lineno"> 3002</span>&#160;                      4.5f,  4.5f,  4.5f,   4.5f,   5.5f,  5.5f,  5.5f,   5.5f,</div><div class="line"><a name="l03003"></a><span class="lineno"> 3003</span>&#160;                      2.5f,  2.5f,  2.5f,   2.5f,   3.5f,  3.5f,  3.5f,   3.5f,</div><div class="line"><a name="l03004"></a><span class="lineno"> 3004</span>&#160;                    10.05f, 10.5f, 11.4f, 11.85f, 12.75f, 13.3f, 14.4f, 14.95f,</div><div class="line"><a name="l03005"></a><span class="lineno"> 3005</span>&#160;                     5.25f,  5.5f,  6.0f,  6.25f,  7.45f,  7.8f,  8.5f,  8.85f</div><div class="line"><a name="l03006"></a><span class="lineno"> 3006</span>&#160;            };</div><div class="line"><a name="l03007"></a><span class="lineno"> 3007</span>&#160;</div><div class="line"><a name="l03008"></a><span class="lineno"> 3008</span>&#160;</div><div class="line"><a name="l03009"></a><span class="lineno"> 3009</span>&#160;    <span class="keywordflow">return</span> DepthwiseConvolution2d3x3DilationTestCommon&lt;ArmnnType, ArmnnBType&gt;(</div><div class="line"><a name="l03010"></a><span class="lineno"> 3010</span>&#160;            workloadFactory,</div><div class="line"><a name="l03011"></a><span class="lineno"> 3011</span>&#160;            memoryManager,</div><div class="line"><a name="l03012"></a><span class="lineno"> 3012</span>&#160;            tensorHandleFactory,</div><div class="line"><a name="l03013"></a><span class="lineno"> 3013</span>&#160;            inputNoQuantizedValues,</div><div class="line"><a name="l03014"></a><span class="lineno"> 3014</span>&#160;            inputTensorInfo,</div><div class="line"><a name="l03015"></a><span class="lineno"> 3015</span>&#160;            kernelNoQuantizedValues,</div><div class="line"><a name="l03016"></a><span class="lineno"> 3016</span>&#160;            kernelTensorInfo,</div><div class="line"><a name="l03017"></a><span class="lineno"> 3017</span>&#160;            outputExpectedNoQuantizedValues,</div><div class="line"><a name="l03018"></a><span class="lineno"> 3018</span>&#160;            outputTensorInfo,</div><div class="line"><a name="l03019"></a><span class="lineno"> 3019</span>&#160;            1,</div><div class="line"><a name="l03020"></a><span class="lineno"> 3020</span>&#160;            1,</div><div class="line"><a name="l03021"></a><span class="lineno"> 3021</span>&#160;            layout,</div><div class="line"><a name="l03022"></a><span class="lineno"> 3022</span>&#160;            biasEnabled);</div><div class="line"><a name="l03023"></a><span class="lineno"> 3023</span>&#160;}</div><div class="ttc" id="classarmnn_1_1_tensor_info_xhtml"><div class="ttname"><a href="classarmnn_1_1_tensor_info.xhtml">armnn::TensorInfo</a></div><div class="ttdef"><b>Definition:</b> <a href="_tensor_8hpp_source.xhtml#l00152">Tensor.hpp:152</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="aeb6f20ff65cd6c5fa68a70a2f3d27788"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aeb6f20ff65cd6c5fa68a70a2f3d27788">&#9670;&nbsp;</a></span>DepthwiseConvolution2dPerAxisQuantTest()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="struct_layer_test_result.xhtml">LayerTestResult</a>&lt;uint8_t, 4&gt; DepthwiseConvolution2dPerAxisQuantTest </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classarmnn_1_1_i_workload_factory.xhtml">armnn::IWorkloadFactory</a> &amp;&#160;</td>
          <td class="paramname"><em>workloadFactory</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_i_backend_internal.xhtml#a693b40e6b94e958836aeb0410ca186bd">armnn::IBackendInternal::IMemoryManagerSharedPtr</a> &amp;&#160;</td>
          <td class="paramname"><em>memoryManager</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_i_tensor_handle_factory.xhtml">armnn::ITensorHandleFactory</a> &amp;&#160;</td>
          <td class="paramname"><em>tensorHandleFactory</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="namespacearmnn.xhtml#ad1d5cce2d9e9a5d61c243e5c989112e0">armnn::DataLayout</a>&#160;</td>
          <td class="paramname"><em>layout</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_conv2d_test_impl_8cpp_source.xhtml#l03902">3902</a> of file <a class="el" href="_conv2d_test_impl_8cpp_source.xhtml">Conv2dTestImpl.cpp</a>.</p>

<p class="reference">References <a class="el" href="_tensor_copy_utils_8cpp_source.xhtml#l00019">AllocateAndCopyDataToITensorHandle()</a>, <a class="el" href="_tensor_copy_utils_8cpp_source.xhtml#l00014">CopyDataFromITensorHandle()</a>, <a class="el" href="_tensor_copy_utils_8cpp_source.xhtml#l00009">CopyDataToITensorHandle()</a>, <a class="el" href="classarmnn_1_1_i_tensor_handle_factory.xhtml#a375f11dd42ff042435e8771cf287b20c">ITensorHandleFactory::CreateTensorHandle()</a>, <a class="el" href="_workload_factory_8cpp_source.xhtml#l01559">IWorkloadFactory::CreateWorkload()</a>, <a class="el" href="namespacearmnn.xhtml#a56943a0946e5f15e5e58054b8e7a04a4af97adbfc88b7012a0243215b1076e7e7">armnn::DepthwiseConvolution2d</a>, <a class="el" href="classarmnn_1_1_i_workload_factory.xhtml#a9f7e4296485d2812e7996089149c96d1">IWorkloadFactory::GetBackendId()</a>, <a class="el" href="include_2armnn_2backends_2_workload_data_8hpp_source.xhtml#l00256">DepthwiseConvolution2dQueueDescriptor::m_Bias</a>, <a class="el" href="include_2armnn_2backends_2_workload_data_8hpp_source.xhtml#l00066">QueueDescriptorWithParameters&lt; LayerDescriptor &gt;::m_Parameters</a>, <a class="el" href="_descriptors_8hpp_source.xhtml#l00665">DepthwiseConvolution2dDescriptor::m_StrideX</a>, <a class="el" href="include_2armnn_2backends_2_workload_data_8hpp_source.xhtml#l00255">DepthwiseConvolution2dQueueDescriptor::m_Weight</a>, <a class="el" href="namespacearmnn.xhtml#ad1d5cce2d9e9a5d61c243e5c989112e0a6b99f356fe3b30a2a850b5ea897c289f">armnn::NCHW</a>, <a class="el" href="_permute_8cpp_source.xhtml#l00131">armnnUtils::Permute()</a>, <a class="el" href="_permute_8cpp_source.xhtml#l00098">armnnUtils::Permuted()</a>, <a class="el" href="include_2armnn_test_utils_2_data_layout_utils_8hpp_source.xhtml#l00026">PermuteTensorNhwcToNchw()</a>, and <a class="el" href="_tensor_8hpp_source.xhtml#l00193">TensorInfo::SetShape()</a>.</p>

<p class="reference">Referenced by <a class="el" href="_cl_layer_tests_8cpp_source.xhtml#l00027">TEST_SUITE()</a>.</p>
<div class="fragment"><div class="line"><a name="l03907"></a><span class="lineno"> 3907</span>&#160;{</div><div class="line"><a name="l03908"></a><span class="lineno"> 3908</span>&#160;    <span class="keyword">using namespace </span><a class="code" href="namespacearmnn.xhtml">armnn</a>;</div><div class="line"><a name="l03909"></a><span class="lineno"> 3909</span>&#160;</div><div class="line"><a name="l03910"></a><span class="lineno"> 3910</span>&#160;    <span class="keyword">const</span> <a class="code" href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6">DataType</a> inputType  = <a class="code" href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a0a3f57c876f5a230244c38e1453a8a6e">DataType::QAsymmU8</a>;</div><div class="line"><a name="l03911"></a><span class="lineno"> 3911</span>&#160;    <span class="keyword">const</span> <a class="code" href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6">DataType</a> kernelType = <a class="code" href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a9945327825b115e93a3b89f4302e76db">DataType::QSymmS8</a>;</div><div class="line"><a name="l03912"></a><span class="lineno"> 3912</span>&#160;    <span class="keyword">const</span> <a class="code" href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6">DataType</a> biasType   = <a class="code" href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6accedffbc6e5308e33d3843e8bdc0dad7">DataType::Signed32</a>;</div><div class="line"><a name="l03913"></a><span class="lineno"> 3913</span>&#160;</div><div class="line"><a name="l03914"></a><span class="lineno"> 3914</span>&#160;    <a class="code" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> inputInfo ({ 1, 3, 3, 2 }, inputType, 0.5f, 128); <span class="comment">// N H W C</span></div><div class="line"><a name="l03915"></a><span class="lineno"> 3915</span>&#160;    <a class="code" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> outputInfo({ 1, 2, 2, 4 }, inputType, 1.0f, 128); <span class="comment">// N H W C</span></div><div class="line"><a name="l03916"></a><span class="lineno"> 3916</span>&#160;</div><div class="line"><a name="l03917"></a><span class="lineno"> 3917</span>&#160;    <span class="keyword">const</span> std::vector&lt;float&gt; quantScales{ 1.0f, 0.5f, 1.0f, 0.5f };</div><div class="line"><a name="l03918"></a><span class="lineno"> 3918</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> quantDimension = 3;</div><div class="line"><a name="l03919"></a><span class="lineno"> 3919</span>&#160;    <a class="code" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> kernelInfo({ 1, 2, 2, 4 }, kernelType, quantScales, quantDimension); <span class="comment">// [1, H, W, I*M]</span></div><div class="line"><a name="l03920"></a><span class="lineno"> 3920</span>&#160;</div><div class="line"><a name="l03921"></a><span class="lineno"> 3921</span>&#160;    <span class="keyword">const</span> std::vector&lt;float&gt; biasQuantScales{ 0.5f, 0.25f, 0.5f, 0.25f };</div><div class="line"><a name="l03922"></a><span class="lineno"> 3922</span>&#160;    constexpr <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> biasQuantDimension = 0;</div><div class="line"><a name="l03923"></a><span class="lineno"> 3923</span>&#160;    <a class="code" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> biasInfo({ 4 }, biasType, biasQuantScales, biasQuantDimension);</div><div class="line"><a name="l03924"></a><span class="lineno"> 3924</span>&#160;</div><div class="line"><a name="l03925"></a><span class="lineno"> 3925</span>&#160;    std::vector&lt;uint8_t&gt; inputData =</div><div class="line"><a name="l03926"></a><span class="lineno"> 3926</span>&#160;    {</div><div class="line"><a name="l03927"></a><span class="lineno"> 3927</span>&#160;        129, 130,</div><div class="line"><a name="l03928"></a><span class="lineno"> 3928</span>&#160;        129, 130,</div><div class="line"><a name="l03929"></a><span class="lineno"> 3929</span>&#160;        129, 130,</div><div class="line"><a name="l03930"></a><span class="lineno"> 3930</span>&#160;        129, 130,</div><div class="line"><a name="l03931"></a><span class="lineno"> 3931</span>&#160;        129, 130,</div><div class="line"><a name="l03932"></a><span class="lineno"> 3932</span>&#160;        129, 130,</div><div class="line"><a name="l03933"></a><span class="lineno"> 3933</span>&#160;        129, 130,</div><div class="line"><a name="l03934"></a><span class="lineno"> 3934</span>&#160;        129, 130,</div><div class="line"><a name="l03935"></a><span class="lineno"> 3935</span>&#160;        129, 130</div><div class="line"><a name="l03936"></a><span class="lineno"> 3936</span>&#160;    };</div><div class="line"><a name="l03937"></a><span class="lineno"> 3937</span>&#160;</div><div class="line"><a name="l03938"></a><span class="lineno"> 3938</span>&#160;    std::vector&lt;int8_t&gt; kernelData =</div><div class="line"><a name="l03939"></a><span class="lineno"> 3939</span>&#160;    {</div><div class="line"><a name="l03940"></a><span class="lineno"> 3940</span>&#160;        1, 1, 1, 1,</div><div class="line"><a name="l03941"></a><span class="lineno"> 3941</span>&#160;        1, 1, 1, 1,</div><div class="line"><a name="l03942"></a><span class="lineno"> 3942</span>&#160;        1, 1, 1, 1,</div><div class="line"><a name="l03943"></a><span class="lineno"> 3943</span>&#160;        1, 1, 1, 1</div><div class="line"><a name="l03944"></a><span class="lineno"> 3944</span>&#160;    };</div><div class="line"><a name="l03945"></a><span class="lineno"> 3945</span>&#160;</div><div class="line"><a name="l03946"></a><span class="lineno"> 3946</span>&#160;    <span class="keywordflow">if</span> (workloadFactory.<a class="code" href="classarmnn_1_1_i_workload_factory.xhtml#a9f7e4296485d2812e7996089149c96d1">GetBackendId</a>() == <a class="code" href="classarmnn_1_1_backend_id.xhtml">armnn::BackendId</a>(<span class="stringliteral">&quot;GpuAcc&quot;</span>) ||</div><div class="line"><a name="l03947"></a><span class="lineno"> 3947</span>&#160;        workloadFactory.<a class="code" href="classarmnn_1_1_i_workload_factory.xhtml#a9f7e4296485d2812e7996089149c96d1">GetBackendId</a>() == <a class="code" href="classarmnn_1_1_backend_id.xhtml">armnn::BackendId</a>(<span class="stringliteral">&quot;CpuAcc&quot;</span>))</div><div class="line"><a name="l03948"></a><span class="lineno"> 3948</span>&#160;    {</div><div class="line"><a name="l03949"></a><span class="lineno"> 3949</span>&#160;        <span class="keywordflow">if</span> (layout == <a class="code" href="namespacearmnn.xhtml#ad1d5cce2d9e9a5d61c243e5c989112e0a6b99f356fe3b30a2a850b5ea897c289f">armnn::DataLayout::NCHW</a>)</div><div class="line"><a name="l03950"></a><span class="lineno"> 3950</span>&#160;        {</div><div class="line"><a name="l03951"></a><span class="lineno"> 3951</span>&#160;            std::vector&lt;int8_t&gt; tmp(kernelData.size());</div><div class="line"><a name="l03952"></a><span class="lineno"> 3952</span>&#160;            kernelInfo.<a class="code" href="classarmnn_1_1_tensor_info.xhtml#abe8889e8150beef5fd204b2d87b49298">SetShape</a>(<a class="code" href="namespacearmnn_utils.xhtml#abeaf4f6785039866fd075f4569ba8e84">armnnUtils::Permuted</a>(kernelInfo.GetShape(), {0, 2, 3, 1}));</div><div class="line"><a name="l03953"></a><span class="lineno"> 3953</span>&#160;            <a class="code" href="namespacearmnn.xhtml#a56943a0946e5f15e5e58054b8e7a04a4afa662c6eb71caef475b2b981ce8eccd7">armnnUtils::Permute</a>(kernelInfo.GetShape(), {0, 2, 3, 1}, kernelData.data(), tmp.data(), <span class="keyword">sizeof</span>(int8_t));</div><div class="line"><a name="l03954"></a><span class="lineno"> 3954</span>&#160;            kernelData = tmp;</div><div class="line"><a name="l03955"></a><span class="lineno"> 3955</span>&#160;        }</div><div class="line"><a name="l03956"></a><span class="lineno"> 3956</span>&#160;    }</div><div class="line"><a name="l03957"></a><span class="lineno"> 3957</span>&#160;</div><div class="line"><a name="l03958"></a><span class="lineno"> 3958</span>&#160;    std::vector&lt;int32_t&gt; biasData =</div><div class="line"><a name="l03959"></a><span class="lineno"> 3959</span>&#160;    {</div><div class="line"><a name="l03960"></a><span class="lineno"> 3960</span>&#160;        4, 4, 4, 4</div><div class="line"><a name="l03961"></a><span class="lineno"> 3961</span>&#160;    };</div><div class="line"><a name="l03962"></a><span class="lineno"> 3962</span>&#160;</div><div class="line"><a name="l03963"></a><span class="lineno"> 3963</span>&#160;    std::vector&lt;uint8_t&gt; expectedOutputData =</div><div class="line"><a name="l03964"></a><span class="lineno"> 3964</span>&#160;    {</div><div class="line"><a name="l03965"></a><span class="lineno"> 3965</span>&#160;        132, 130, 134, 131,</div><div class="line"><a name="l03966"></a><span class="lineno"> 3966</span>&#160;        132, 130, 134, 131,</div><div class="line"><a name="l03967"></a><span class="lineno"> 3967</span>&#160;        132, 130, 134, 131,</div><div class="line"><a name="l03968"></a><span class="lineno"> 3968</span>&#160;        132, 130, 134, 131</div><div class="line"><a name="l03969"></a><span class="lineno"> 3969</span>&#160;    };</div><div class="line"><a name="l03970"></a><span class="lineno"> 3970</span>&#160;</div><div class="line"><a name="l03971"></a><span class="lineno"> 3971</span>&#160;    <span class="keywordflow">if</span> (layout == <a class="code" href="namespacearmnn.xhtml#ad1d5cce2d9e9a5d61c243e5c989112e0a6b99f356fe3b30a2a850b5ea897c289f">DataLayout::NCHW</a>)</div><div class="line"><a name="l03972"></a><span class="lineno"> 3972</span>&#160;    {</div><div class="line"><a name="l03973"></a><span class="lineno"> 3973</span>&#160;        <a class="code" href="include_2armnn_test_utils_2_data_layout_utils_8hpp.xhtml#a1452f049aef30409b3b649af2be7ff82">PermuteTensorNhwcToNchw</a>(inputInfo, inputData);</div><div class="line"><a name="l03974"></a><span class="lineno"> 3974</span>&#160;        <a class="code" href="include_2armnn_test_utils_2_data_layout_utils_8hpp.xhtml#a1452f049aef30409b3b649af2be7ff82">PermuteTensorNhwcToNchw</a>(outputInfo, expectedOutputData);</div><div class="line"><a name="l03975"></a><span class="lineno"> 3975</span>&#160;    }</div><div class="line"><a name="l03976"></a><span class="lineno"> 3976</span>&#160;</div><div class="line"><a name="l03977"></a><span class="lineno"> 3977</span>&#160;    std::vector&lt;uint8_t&gt; actualOutput(outputInfo.GetNumElements());</div><div class="line"><a name="l03978"></a><span class="lineno"> 3978</span>&#160;</div><div class="line"><a name="l03979"></a><span class="lineno"> 3979</span>&#160;    <a class="code" href="structarmnn_1_1_depthwise_convolution2d_descriptor.xhtml">DepthwiseConvolution2dDescriptor</a> descriptor;</div><div class="line"><a name="l03980"></a><span class="lineno"> 3980</span>&#160;    descriptor.<a class="code" href="structarmnn_1_1_depthwise_convolution2d_descriptor.xhtml#afe6a3377c4531315354def9023c8fdda">m_StrideX</a>     = 1;</div><div class="line"><a name="l03981"></a><span class="lineno"> 3981</span>&#160;    descriptor.m_StrideY     = 1;</div><div class="line"><a name="l03982"></a><span class="lineno"> 3982</span>&#160;    descriptor.m_PadLeft     = 0;</div><div class="line"><a name="l03983"></a><span class="lineno"> 3983</span>&#160;    descriptor.m_PadRight    = 0;</div><div class="line"><a name="l03984"></a><span class="lineno"> 3984</span>&#160;    descriptor.m_PadTop      = 0;</div><div class="line"><a name="l03985"></a><span class="lineno"> 3985</span>&#160;    descriptor.m_PadBottom   = 0;</div><div class="line"><a name="l03986"></a><span class="lineno"> 3986</span>&#160;    descriptor.m_DilationX   = 1;</div><div class="line"><a name="l03987"></a><span class="lineno"> 3987</span>&#160;    descriptor.m_DilationY   = 1;</div><div class="line"><a name="l03988"></a><span class="lineno"> 3988</span>&#160;    descriptor.m_BiasEnabled = <span class="keyword">true</span>;</div><div class="line"><a name="l03989"></a><span class="lineno"> 3989</span>&#160;    descriptor.m_DataLayout  = layout;</div><div class="line"><a name="l03990"></a><span class="lineno"> 3990</span>&#160;</div><div class="line"><a name="l03991"></a><span class="lineno"> 3991</span>&#160;    std::unique_ptr&lt;ITensorHandle&gt; inputHandle  = tensorHandleFactory.<a class="code" href="classarmnn_1_1_i_tensor_handle_factory.xhtml#a375f11dd42ff042435e8771cf287b20c">CreateTensorHandle</a>(inputInfo);</div><div class="line"><a name="l03992"></a><span class="lineno"> 3992</span>&#160;    std::unique_ptr&lt;ITensorHandle&gt; weightsHandle = tensorHandleFactory.<a class="code" href="classarmnn_1_1_i_tensor_handle_factory.xhtml#a375f11dd42ff042435e8771cf287b20c">CreateTensorHandle</a>(kernelInfo);</div><div class="line"><a name="l03993"></a><span class="lineno"> 3993</span>&#160;    std::unique_ptr&lt;ITensorHandle&gt; biasHandle = tensorHandleFactory.<a class="code" href="classarmnn_1_1_i_tensor_handle_factory.xhtml#a375f11dd42ff042435e8771cf287b20c">CreateTensorHandle</a>(biasInfo);</div><div class="line"><a name="l03994"></a><span class="lineno"> 3994</span>&#160;    std::unique_ptr&lt;ITensorHandle&gt; outputHandle = tensorHandleFactory.<a class="code" href="classarmnn_1_1_i_tensor_handle_factory.xhtml#a375f11dd42ff042435e8771cf287b20c">CreateTensorHandle</a>(outputInfo);</div><div class="line"><a name="l03995"></a><span class="lineno"> 3995</span>&#160;</div><div class="line"><a name="l03996"></a><span class="lineno"> 3996</span>&#160;    <a class="code" href="structarmnn_1_1_depthwise_convolution2d_queue_descriptor.xhtml">DepthwiseConvolution2dQueueDescriptor</a> queueDescriptor;</div><div class="line"><a name="l03997"></a><span class="lineno"> 3997</span>&#160;    <a class="code" href="structarmnn_1_1_workload_info.xhtml">WorkloadInfo</a> workloadInfo;</div><div class="line"><a name="l03998"></a><span class="lineno"> 3998</span>&#160;    <a class="code" href="classarmnn_1_1_scoped_tensor_handle.xhtml">ScopedTensorHandle</a> weightTensor(kernelInfo);</div><div class="line"><a name="l03999"></a><span class="lineno"> 3999</span>&#160;    <a class="code" href="classarmnn_1_1_scoped_tensor_handle.xhtml">ScopedTensorHandle</a> biasTensor(biasInfo);</div><div class="line"><a name="l04000"></a><span class="lineno"> 4000</span>&#160;</div><div class="line"><a name="l04001"></a><span class="lineno"> 4001</span>&#160;    AddInputToWorkload(queueDescriptor, workloadInfo, inputInfo, inputHandle.get());</div><div class="line"><a name="l04002"></a><span class="lineno"> 4002</span>&#160;    AddInputToWorkload(queueDescriptor, workloadInfo, kernelInfo, weightsHandle.get());</div><div class="line"><a name="l04003"></a><span class="lineno"> 4003</span>&#160;    AddOutputToWorkload(queueDescriptor, workloadInfo, outputInfo, outputHandle.get());</div><div class="line"><a name="l04004"></a><span class="lineno"> 4004</span>&#160;    AddInputToWorkload(queueDescriptor, workloadInfo, biasInfo, biasHandle.get());</div><div class="line"><a name="l04005"></a><span class="lineno"> 4005</span>&#160;</div><div class="line"><a name="l04006"></a><span class="lineno"> 4006</span>&#160;    <span class="comment">// AllocateAndCopyDataToITensorHandle() is required twice for the weights AND biases:</span></div><div class="line"><a name="l04007"></a><span class="lineno"> 4007</span>&#160;    <span class="comment">// See comment in DepthwiseConvolution2dAsymmetricTestImpl() for reasons.</span></div><div class="line"><a name="l04008"></a><span class="lineno"> 4008</span>&#160;    <span class="comment">// 1) ScopedTensorHandle (weightsTensor) required for QueueDescriptor (data.m_Weight).</span></div><div class="line"><a name="l04009"></a><span class="lineno"> 4009</span>&#160;    <span class="comment">// 2) ITensorHandle (converts to Backend TensorHandle) required in RefWorkload for GetTensorInfo() method.</span></div><div class="line"><a name="l04010"></a><span class="lineno"> 4010</span>&#160;    <a class="code" href="include_2armnn_test_utils_2_tensor_copy_utils_8hpp.xhtml#afaaca8c3f3a467d124bba44067d2afa8">AllocateAndCopyDataToITensorHandle</a>(weightsHandle.get(), kernelData.data());</div><div class="line"><a name="l04011"></a><span class="lineno"> 4011</span>&#160;    <a class="code" href="include_2armnn_test_utils_2_tensor_copy_utils_8hpp.xhtml#afaaca8c3f3a467d124bba44067d2afa8">AllocateAndCopyDataToITensorHandle</a>(&amp;weightTensor, kernelData.data());</div><div class="line"><a name="l04012"></a><span class="lineno"> 4012</span>&#160;    <a class="code" href="include_2armnn_test_utils_2_tensor_copy_utils_8hpp.xhtml#afaaca8c3f3a467d124bba44067d2afa8">AllocateAndCopyDataToITensorHandle</a>(biasHandle.get(), biasData.data());</div><div class="line"><a name="l04013"></a><span class="lineno"> 4013</span>&#160;    <a class="code" href="include_2armnn_test_utils_2_tensor_copy_utils_8hpp.xhtml#afaaca8c3f3a467d124bba44067d2afa8">AllocateAndCopyDataToITensorHandle</a>(&amp;biasTensor, biasData.data());</div><div class="line"><a name="l04014"></a><span class="lineno"> 4014</span>&#160;</div><div class="line"><a name="l04015"></a><span class="lineno"> 4015</span>&#160;    queueDescriptor.<a class="code" href="structarmnn_1_1_queue_descriptor_with_parameters.xhtml#aad91b9bbf7aa365d304febe79a3d1333">m_Parameters</a> = descriptor;</div><div class="line"><a name="l04016"></a><span class="lineno"> 4016</span>&#160;    queueDescriptor.<a class="code" href="structarmnn_1_1_depthwise_convolution2d_queue_descriptor.xhtml#a9a8a6e0c6074b895eb2ff9a16e5003a5">m_Weight</a>     = &amp;weightTensor;</div><div class="line"><a name="l04017"></a><span class="lineno"> 4017</span>&#160;    queueDescriptor.<a class="code" href="structarmnn_1_1_depthwise_convolution2d_queue_descriptor.xhtml#a1f3f6acdd5436ccf488d5ee3e9e60c02">m_Bias</a>       = &amp;biasTensor;</div><div class="line"><a name="l04018"></a><span class="lineno"> 4018</span>&#160;</div><div class="line"><a name="l04019"></a><span class="lineno"> 4019</span>&#160;    std::unique_ptr&lt;IWorkload&gt; workload = workloadFactory.<a class="code" href="classarmnn_1_1_i_workload_factory.xhtml#a13060ebb89d2c21a7a5d897e99cccf72">CreateWorkload</a>(<a class="code" href="namespacearmnn.xhtml#a56943a0946e5f15e5e58054b8e7a04a4af97adbfc88b7012a0243215b1076e7e7">armnn::LayerType::DepthwiseConvolution2d</a>,</div><div class="line"><a name="l04020"></a><span class="lineno"> 4020</span>&#160;                                                                         queueDescriptor,</div><div class="line"><a name="l04021"></a><span class="lineno"> 4021</span>&#160;                                                                         workloadInfo);</div><div class="line"><a name="l04022"></a><span class="lineno"> 4022</span>&#160;    inputHandle-&gt;Allocate();</div><div class="line"><a name="l04023"></a><span class="lineno"> 4023</span>&#160;    outputHandle-&gt;Allocate();</div><div class="line"><a name="l04024"></a><span class="lineno"> 4024</span>&#160;</div><div class="line"><a name="l04025"></a><span class="lineno"> 4025</span>&#160;    <a class="code" href="include_2armnn_test_utils_2_tensor_copy_utils_8hpp.xhtml#ae15f1a3c55d2db87683577de9fa4437c">CopyDataToITensorHandle</a>(inputHandle.get(), inputData.data());</div><div class="line"><a name="l04026"></a><span class="lineno"> 4026</span>&#160;</div><div class="line"><a name="l04027"></a><span class="lineno"> 4027</span>&#160;    ExecuteWorkload(*workload, memoryManager);</div><div class="line"><a name="l04028"></a><span class="lineno"> 4028</span>&#160;</div><div class="line"><a name="l04029"></a><span class="lineno"> 4029</span>&#160;    <a class="code" href="struct_layer_test_result.xhtml">LayerTestResult&lt;uint8_t, 4&gt;</a> ret(outputInfo);</div><div class="line"><a name="l04030"></a><span class="lineno"> 4030</span>&#160;</div><div class="line"><a name="l04031"></a><span class="lineno"> 4031</span>&#160;    <a class="code" href="include_2armnn_test_utils_2_tensor_copy_utils_8hpp.xhtml#ab5dfed8358e500ed523d78090ec78e88">CopyDataFromITensorHandle</a>(actualOutput.data(), outputHandle.get());</div><div class="line"><a name="l04032"></a><span class="lineno"> 4032</span>&#160;</div><div class="line"><a name="l04033"></a><span class="lineno"> 4033</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="struct_layer_test_result.xhtml">LayerTestResult&lt;uint8_t, 4&gt;</a>(actualOutput,</div><div class="line"><a name="l04034"></a><span class="lineno"> 4034</span>&#160;                                       expectedOutputData,</div><div class="line"><a name="l04035"></a><span class="lineno"> 4035</span>&#160;                                       outputHandle-&gt;GetShape(),</div><div class="line"><a name="l04036"></a><span class="lineno"> 4036</span>&#160;                                       outputInfo.GetShape());</div><div class="line"><a name="l04037"></a><span class="lineno"> 4037</span>&#160;}</div><div class="ttc" id="classarmnn_1_1_i_workload_factory_xhtml_a9f7e4296485d2812e7996089149c96d1"><div class="ttname"><a href="classarmnn_1_1_i_workload_factory.xhtml#a9f7e4296485d2812e7996089149c96d1">armnn::IWorkloadFactory::GetBackendId</a></div><div class="ttdeci">virtual const BackendId &amp; GetBackendId() const =0</div></div>
<div class="ttc" id="include_2armnn_test_utils_2_data_layout_utils_8hpp_xhtml_a1452f049aef30409b3b649af2be7ff82"><div class="ttname"><a href="include_2armnn_test_utils_2_data_layout_utils_8hpp.xhtml#a1452f049aef30409b3b649af2be7ff82">PermuteTensorNhwcToNchw</a></div><div class="ttdeci">void PermuteTensorNhwcToNchw(armnn::TensorInfo &amp;tensorInfo, std::vector&lt; T &gt; &amp;tensorData)</div><div class="ttdef"><b>Definition:</b> <a href="include_2armnn_test_utils_2_data_layout_utils_8hpp_source.xhtml#l00026">DataLayoutUtils.hpp:26</a></div></div>
<div class="ttc" id="classarmnn_1_1_tensor_info_xhtml"><div class="ttname"><a href="classarmnn_1_1_tensor_info.xhtml">armnn::TensorInfo</a></div><div class="ttdef"><b>Definition:</b> <a href="_tensor_8hpp_source.xhtml#l00152">Tensor.hpp:152</a></div></div>
<div class="ttc" id="namespacearmnn_xhtml_ad8ed01ff3ff33333d8e19db4d2818bb6accedffbc6e5308e33d3843e8bdc0dad7"><div class="ttname"><a href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6accedffbc6e5308e33d3843e8bdc0dad7">armnn::DataType::Signed32</a></div></div>
<div class="ttc" id="namespacearmnn_xhtml"><div class="ttname"><a href="namespacearmnn.xhtml">armnn</a></div><div class="ttdoc">Copyright (c) 2021 ARM Limited and Contributors. </div><div class="ttdef"><b>Definition:</b> <a href="01__00__quick__start_8dox_source.xhtml#l00006">01_00_quick_start.dox:6</a></div></div>
<div class="ttc" id="structarmnn_1_1_queue_descriptor_with_parameters_xhtml_aad91b9bbf7aa365d304febe79a3d1333"><div class="ttname"><a href="structarmnn_1_1_queue_descriptor_with_parameters.xhtml#aad91b9bbf7aa365d304febe79a3d1333">armnn::QueueDescriptorWithParameters::m_Parameters</a></div><div class="ttdeci">LayerDescriptor m_Parameters</div><div class="ttdef"><b>Definition:</b> <a href="include_2armnn_2backends_2_workload_data_8hpp_source.xhtml#l00066">WorkloadData.hpp:66</a></div></div>
<div class="ttc" id="include_2armnn_test_utils_2_tensor_copy_utils_8hpp_xhtml_afaaca8c3f3a467d124bba44067d2afa8"><div class="ttname"><a href="include_2armnn_test_utils_2_tensor_copy_utils_8hpp.xhtml#afaaca8c3f3a467d124bba44067d2afa8">AllocateAndCopyDataToITensorHandle</a></div><div class="ttdeci">void AllocateAndCopyDataToITensorHandle(armnn::ITensorHandle *tensorHandle, const void *memory)</div><div class="ttdef"><b>Definition:</b> <a href="_tensor_copy_utils_8cpp_source.xhtml#l00019">TensorCopyUtils.cpp:19</a></div></div>
<div class="ttc" id="classarmnn_1_1_tensor_info_xhtml_abe8889e8150beef5fd204b2d87b49298"><div class="ttname"><a href="classarmnn_1_1_tensor_info.xhtml#abe8889e8150beef5fd204b2d87b49298">armnn::TensorInfo::SetShape</a></div><div class="ttdeci">void SetShape(const TensorShape &amp;newShape)</div><div class="ttdef"><b>Definition:</b> <a href="_tensor_8hpp_source.xhtml#l00193">Tensor.hpp:193</a></div></div>
<div class="ttc" id="structarmnn_1_1_depthwise_convolution2d_descriptor_xhtml_afe6a3377c4531315354def9023c8fdda"><div class="ttname"><a href="structarmnn_1_1_depthwise_convolution2d_descriptor.xhtml#afe6a3377c4531315354def9023c8fdda">armnn::DepthwiseConvolution2dDescriptor::m_StrideX</a></div><div class="ttdeci">uint32_t m_StrideX</div><div class="ttdoc">Stride value when proceeding through input for the width dimension. </div><div class="ttdef"><b>Definition:</b> <a href="_descriptors_8hpp_source.xhtml#l00665">Descriptors.hpp:665</a></div></div>
<div class="ttc" id="namespacearmnn_xhtml_ad8ed01ff3ff33333d8e19db4d2818bb6"><div class="ttname"><a href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6">armnn::DataType</a></div><div class="ttdeci">DataType</div><div class="ttdef"><b>Definition:</b> <a href="_types_8hpp_source.xhtml#l00048">Types.hpp:48</a></div></div>
<div class="ttc" id="namespacearmnn_xhtml_ad8ed01ff3ff33333d8e19db4d2818bb6a0a3f57c876f5a230244c38e1453a8a6e"><div class="ttname"><a href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a0a3f57c876f5a230244c38e1453a8a6e">armnn::DataType::QAsymmU8</a></div></div>
<div class="ttc" id="namespacearmnn_xhtml_a56943a0946e5f15e5e58054b8e7a04a4afa662c6eb71caef475b2b981ce8eccd7"><div class="ttname"><a href="namespacearmnn.xhtml#a56943a0946e5f15e5e58054b8e7a04a4afa662c6eb71caef475b2b981ce8eccd7">armnn::LayerType::Permute</a></div></div>
<div class="ttc" id="classarmnn_1_1_scoped_tensor_handle_xhtml"><div class="ttname"><a href="classarmnn_1_1_scoped_tensor_handle.xhtml">armnn::ScopedTensorHandle</a></div><div class="ttdef"><b>Definition:</b> <a href="include_2armnn_2backends_2_tensor_handle_8hpp_source.xhtml#l00115">TensorHandle.hpp:115</a></div></div>
<div class="ttc" id="structarmnn_1_1_depthwise_convolution2d_queue_descriptor_xhtml_a1f3f6acdd5436ccf488d5ee3e9e60c02"><div class="ttname"><a href="structarmnn_1_1_depthwise_convolution2d_queue_descriptor.xhtml#a1f3f6acdd5436ccf488d5ee3e9e60c02">armnn::DepthwiseConvolution2dQueueDescriptor::m_Bias</a></div><div class="ttdeci">const ConstTensorHandle * m_Bias</div><div class="ttdef"><b>Definition:</b> <a href="include_2armnn_2backends_2_workload_data_8hpp_source.xhtml#l00256">WorkloadData.hpp:256</a></div></div>
<div class="ttc" id="include_2armnn_test_utils_2_tensor_copy_utils_8hpp_xhtml_ab5dfed8358e500ed523d78090ec78e88"><div class="ttname"><a href="include_2armnn_test_utils_2_tensor_copy_utils_8hpp.xhtml#ab5dfed8358e500ed523d78090ec78e88">CopyDataFromITensorHandle</a></div><div class="ttdeci">void CopyDataFromITensorHandle(void *mem, const armnn::ITensorHandle *tensorHandle)</div><div class="ttdef"><b>Definition:</b> <a href="_tensor_copy_utils_8cpp_source.xhtml#l00014">TensorCopyUtils.cpp:14</a></div></div>
<div class="ttc" id="structarmnn_1_1_depthwise_convolution2d_queue_descriptor_xhtml_a9a8a6e0c6074b895eb2ff9a16e5003a5"><div class="ttname"><a href="structarmnn_1_1_depthwise_convolution2d_queue_descriptor.xhtml#a9a8a6e0c6074b895eb2ff9a16e5003a5">armnn::DepthwiseConvolution2dQueueDescriptor::m_Weight</a></div><div class="ttdeci">const ConstTensorHandle * m_Weight</div><div class="ttdef"><b>Definition:</b> <a href="include_2armnn_2backends_2_workload_data_8hpp_source.xhtml#l00255">WorkloadData.hpp:255</a></div></div>
<div class="ttc" id="namespacearmnn_xhtml_a56943a0946e5f15e5e58054b8e7a04a4af97adbfc88b7012a0243215b1076e7e7"><div class="ttname"><a href="namespacearmnn.xhtml#a56943a0946e5f15e5e58054b8e7a04a4af97adbfc88b7012a0243215b1076e7e7">armnn::LayerType::DepthwiseConvolution2d</a></div></div>
<div class="ttc" id="include_2armnn_test_utils_2_tensor_copy_utils_8hpp_xhtml_ae15f1a3c55d2db87683577de9fa4437c"><div class="ttname"><a href="include_2armnn_test_utils_2_tensor_copy_utils_8hpp.xhtml#ae15f1a3c55d2db87683577de9fa4437c">CopyDataToITensorHandle</a></div><div class="ttdeci">void CopyDataToITensorHandle(armnn::ITensorHandle *tensorHandle, const void *memory)</div><div class="ttdef"><b>Definition:</b> <a href="_tensor_copy_utils_8cpp_source.xhtml#l00009">TensorCopyUtils.cpp:9</a></div></div>
<div class="ttc" id="structarmnn_1_1_workload_info_xhtml"><div class="ttname"><a href="structarmnn_1_1_workload_info.xhtml">armnn::WorkloadInfo</a></div><div class="ttdoc">Contains information about TensorInfos of a layer. </div><div class="ttdef"><b>Definition:</b> <a href="include_2armnn_2backends_2_workload_info_8hpp_source.xhtml#l00016">WorkloadInfo.hpp:16</a></div></div>
<div class="ttc" id="struct_layer_test_result_xhtml"><div class="ttname"><a href="struct_layer_test_result.xhtml">LayerTestResult</a></div><div class="ttdef"><b>Definition:</b> <a href="include_2armnn_test_utils_2_layer_test_result_8hpp_source.xhtml#l00015">LayerTestResult.hpp:15</a></div></div>
<div class="ttc" id="namespacearmnn_xhtml_ad8ed01ff3ff33333d8e19db4d2818bb6a9945327825b115e93a3b89f4302e76db"><div class="ttname"><a href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a9945327825b115e93a3b89f4302e76db">armnn::DataType::QSymmS8</a></div></div>
<div class="ttc" id="namespacearmnn_xhtml_ad1d5cce2d9e9a5d61c243e5c989112e0a6b99f356fe3b30a2a850b5ea897c289f"><div class="ttname"><a href="namespacearmnn.xhtml#ad1d5cce2d9e9a5d61c243e5c989112e0a6b99f356fe3b30a2a850b5ea897c289f">armnn::DataLayout::NCHW</a></div></div>
<div class="ttc" id="classarmnn_1_1_i_workload_factory_xhtml_a13060ebb89d2c21a7a5d897e99cccf72"><div class="ttname"><a href="classarmnn_1_1_i_workload_factory.xhtml#a13060ebb89d2c21a7a5d897e99cccf72">armnn::IWorkloadFactory::CreateWorkload</a></div><div class="ttdeci">virtual std::unique_ptr&lt; IWorkload &gt; CreateWorkload(LayerType type, const QueueDescriptor &amp;descriptor, const WorkloadInfo &amp;info) const</div><div class="ttdef"><b>Definition:</b> <a href="_workload_factory_8cpp_source.xhtml#l01559">WorkloadFactory.cpp:1559</a></div></div>
<div class="ttc" id="namespacearmnn_utils_xhtml_abeaf4f6785039866fd075f4569ba8e84"><div class="ttname"><a href="namespacearmnn_utils.xhtml#abeaf4f6785039866fd075f4569ba8e84">armnnUtils::Permuted</a></div><div class="ttdeci">armnn::TensorShape Permuted(const armnn::TensorShape &amp;srcShape, const armnn::PermutationVector &amp;mappings)</div><div class="ttdef"><b>Definition:</b> <a href="_permute_8cpp_source.xhtml#l00098">Permute.cpp:98</a></div></div>
<div class="ttc" id="classarmnn_1_1_i_tensor_handle_factory_xhtml_a375f11dd42ff042435e8771cf287b20c"><div class="ttname"><a href="classarmnn_1_1_i_tensor_handle_factory.xhtml#a375f11dd42ff042435e8771cf287b20c">armnn::ITensorHandleFactory::CreateTensorHandle</a></div><div class="ttdeci">virtual std::unique_ptr&lt; ITensorHandle &gt; CreateTensorHandle(const TensorInfo &amp;tensorInfo) const =0</div></div>
<div class="ttc" id="structarmnn_1_1_depthwise_convolution2d_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_depthwise_convolution2d_descriptor.xhtml">armnn::DepthwiseConvolution2dDescriptor</a></div><div class="ttdoc">A DepthwiseConvolution2dDescriptor for the DepthwiseConvolution2dLayer. </div><div class="ttdef"><b>Definition:</b> <a href="_descriptors_8hpp_source.xhtml#l00624">Descriptors.hpp:624</a></div></div>
<div class="ttc" id="structarmnn_1_1_depthwise_convolution2d_queue_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_depthwise_convolution2d_queue_descriptor.xhtml">armnn::DepthwiseConvolution2dQueueDescriptor</a></div><div class="ttdoc">Depthwise Convolution 2D layer workload data. </div><div class="ttdef"><b>Definition:</b> <a href="include_2armnn_2backends_2_workload_data_8hpp_source.xhtml#l00247">WorkloadData.hpp:247</a></div></div>
<div class="ttc" id="classarmnn_1_1_backend_id_xhtml"><div class="ttname"><a href="classarmnn_1_1_backend_id.xhtml">armnn::BackendId</a></div><div class="ttdef"><b>Definition:</b> <a href="_backend_id_8hpp_source.xhtml#l00075">BackendId.hpp:75</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="a9ed9dc40170e362160eb6e6e7edda209"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a9ed9dc40170e362160eb6e6e7edda209">&#9670;&nbsp;</a></span>DepthwiseConvolution2dTest()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="struct_layer_test_result.xhtml">LayerTestResult</a>&lt;float, 4&gt; DepthwiseConvolution2dTest </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classarmnn_1_1_i_workload_factory.xhtml">armnn::IWorkloadFactory</a> &amp;&#160;</td>
          <td class="paramname"><em>workloadFactory</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_i_backend_internal.xhtml#a693b40e6b94e958836aeb0410ca186bd">armnn::IBackendInternal::IMemoryManagerSharedPtr</a> &amp;&#160;</td>
          <td class="paramname"><em>memoryManager</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_i_tensor_handle_factory.xhtml">armnn::ITensorHandleFactory</a> &amp;&#160;</td>
          <td class="paramname"><em>tensorHandleFactory</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>biasEnabled</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="namespacearmnn.xhtml#ad1d5cce2d9e9a5d61c243e5c989112e0">armnn::DataLayout</a>&#160;</td>
          <td class="paramname"><em>layout</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_conv2d_test_impl_8cpp_source.xhtml#l03758">3758</a> of file <a class="el" href="_conv2d_test_impl_8cpp_source.xhtml">Conv2dTestImpl.cpp</a>.</p>

<p class="reference">Referenced by <a class="el" href="_neon_layer_tests_8cpp_source.xhtml#l00019">TEST_SUITE()</a>.</p>
<div class="fragment"><div class="line"><a name="l03764"></a><span class="lineno"> 3764</span>&#160;{</div><div class="line"><a name="l03765"></a><span class="lineno"> 3765</span>&#160;    <span class="keywordflow">return</span> DepthwiseConvolution2dTestImpl&lt;armnn::DataType::Float32, armnn::DataType::Float32&gt;(</div><div class="line"><a name="l03766"></a><span class="lineno"> 3766</span>&#160;        workloadFactory, memoryManager, tensorHandleFactory, 0.0f, 0, biasEnabled, layout);</div><div class="line"><a name="l03767"></a><span class="lineno"> 3767</span>&#160;}</div></div><!-- fragment -->
</div>
</div>
<a id="ae739d5c6193a4b2192f155632a4e2cd6"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ae739d5c6193a4b2192f155632a4e2cd6">&#9670;&nbsp;</a></span>DepthwiseConvolution2dUint8Test()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="struct_layer_test_result.xhtml">LayerTestResult</a>&lt;uint8_t, 4&gt; DepthwiseConvolution2dUint8Test </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classarmnn_1_1_i_workload_factory.xhtml">armnn::IWorkloadFactory</a> &amp;&#160;</td>
          <td class="paramname"><em>workloadFactory</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_i_backend_internal.xhtml#a693b40e6b94e958836aeb0410ca186bd">armnn::IBackendInternal::IMemoryManagerSharedPtr</a> &amp;&#160;</td>
          <td class="paramname"><em>memoryManager</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_i_tensor_handle_factory.xhtml">armnn::ITensorHandleFactory</a> &amp;&#160;</td>
          <td class="paramname"><em>tensorHandleFactory</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>biasEnabled</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="namespacearmnn.xhtml#ad1d5cce2d9e9a5d61c243e5c989112e0">armnn::DataLayout</a>&#160;</td>
          <td class="paramname"><em>layout</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_conv2d_test_impl_8cpp_source.xhtml#l03844">3844</a> of file <a class="el" href="_conv2d_test_impl_8cpp_source.xhtml">Conv2dTestImpl.cpp</a>.</p>

<p class="reference">Referenced by <a class="el" href="_neon_layer_tests_8cpp_source.xhtml#l00019">TEST_SUITE()</a>.</p>
<div class="fragment"><div class="line"><a name="l03850"></a><span class="lineno"> 3850</span>&#160;{</div><div class="line"><a name="l03851"></a><span class="lineno"> 3851</span>&#160;    <span class="keywordflow">return</span> DepthwiseConvolution2dTestImpl&lt;armnn::DataType::QAsymmU8, armnn::DataType::Signed32&gt;(</div><div class="line"><a name="l03852"></a><span class="lineno"> 3852</span>&#160;        workloadFactory, memoryManager, tensorHandleFactory, 0.5f, 50, biasEnabled, layout);</div><div class="line"><a name="l03853"></a><span class="lineno"> 3853</span>&#160;}</div></div><!-- fragment -->
</div>
</div>
<a id="a4d3ce31fe572451e18fea5add8543bf4"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a4d3ce31fe572451e18fea5add8543bf4">&#9670;&nbsp;</a></span>SimpleConvolution2d3x3NhwcTest()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="struct_layer_test_result.xhtml">LayerTestResult</a>&lt;float, 4&gt; SimpleConvolution2d3x3NhwcTest </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classarmnn_1_1_i_workload_factory.xhtml">armnn::IWorkloadFactory</a> &amp;&#160;</td>
          <td class="paramname"><em>workloadFactory</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_i_backend_internal.xhtml#a693b40e6b94e958836aeb0410ca186bd">armnn::IBackendInternal::IMemoryManagerSharedPtr</a> &amp;&#160;</td>
          <td class="paramname"><em>memoryManager</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_i_tensor_handle_factory.xhtml">armnn::ITensorHandleFactory</a> &amp;&#160;</td>
          <td class="paramname"><em>tensorHandleFactory</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>biasEnabled</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_conv2d_test_impl_8cpp_source.xhtml#l03524">3524</a> of file <a class="el" href="_conv2d_test_impl_8cpp_source.xhtml">Conv2dTestImpl.cpp</a>.</p>

<p class="reference">References <a class="el" href="namespacearmnn.xhtml#ad1d5cce2d9e9a5d61c243e5c989112e0ad066db54b89b0912e7e7c6da51e2da51">armnn::NHWC</a>.</p>

<p class="reference">Referenced by <a class="el" href="_cl_layer_tests_8cpp_source.xhtml#l00027">TEST_SUITE()</a>.</p>
<div class="fragment"><div class="line"><a name="l03529"></a><span class="lineno"> 3529</span>&#160;{</div><div class="line"><a name="l03530"></a><span class="lineno"> 3530</span>&#160;    <span class="keywordflow">return</span> SimpleConvolution2d3x3NhwcTestCommon&lt;armnn::DataType::Float32&gt;(</div><div class="line"><a name="l03531"></a><span class="lineno"> 3531</span>&#160;        workloadFactory,</div><div class="line"><a name="l03532"></a><span class="lineno"> 3532</span>&#160;        memoryManager,</div><div class="line"><a name="l03533"></a><span class="lineno"> 3533</span>&#160;        tensorHandleFactory,</div><div class="line"><a name="l03534"></a><span class="lineno"> 3534</span>&#160;        0.f,</div><div class="line"><a name="l03535"></a><span class="lineno"> 3535</span>&#160;        0,</div><div class="line"><a name="l03536"></a><span class="lineno"> 3536</span>&#160;        biasEnabled,</div><div class="line"><a name="l03537"></a><span class="lineno"> 3537</span>&#160;        <a class="code" href="namespacearmnn.xhtml#ad1d5cce2d9e9a5d61c243e5c989112e0ad066db54b89b0912e7e7c6da51e2da51">armnn::DataLayout::NHWC</a>);</div><div class="line"><a name="l03538"></a><span class="lineno"> 3538</span>&#160;}</div><div class="ttc" id="namespacearmnn_xhtml_ad1d5cce2d9e9a5d61c243e5c989112e0ad066db54b89b0912e7e7c6da51e2da51"><div class="ttname"><a href="namespacearmnn.xhtml#ad1d5cce2d9e9a5d61c243e5c989112e0ad066db54b89b0912e7e7c6da51e2da51">armnn::DataLayout::NHWC</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="aebd160fb0c5f5662a1cbaec5974c13ea"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aebd160fb0c5f5662a1cbaec5974c13ea">&#9670;&nbsp;</a></span>SimpleConvolution2d3x3QSymm16Test()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="struct_layer_test_result.xhtml">LayerTestResult</a>&lt;int16_t, 4&gt; SimpleConvolution2d3x3QSymm16Test </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classarmnn_1_1_i_workload_factory.xhtml">armnn::IWorkloadFactory</a> &amp;&#160;</td>
          <td class="paramname"><em>workloadFactory</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_i_backend_internal.xhtml#a693b40e6b94e958836aeb0410ca186bd">armnn::IBackendInternal::IMemoryManagerSharedPtr</a> &amp;&#160;</td>
          <td class="paramname"><em>memoryManager</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_i_tensor_handle_factory.xhtml">armnn::ITensorHandleFactory</a> &amp;&#160;</td>
          <td class="paramname"><em>tensorHandleFactory</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>biasEnabled</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="namespacearmnn.xhtml#ad1d5cce2d9e9a5d61c243e5c989112e0">armnn::DataLayout</a>&#160;</td>
          <td class="paramname"><em>layout</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_conv2d_test_impl_8cpp_source.xhtml#l03579">3579</a> of file <a class="el" href="_conv2d_test_impl_8cpp_source.xhtml">Conv2dTestImpl.cpp</a>.</p>

<p class="reference">Referenced by <a class="el" href="_ref_layer_tests_8cpp_source.xhtml#l00014">TEST_SUITE()</a>.</p>
<div class="fragment"><div class="line"><a name="l03585"></a><span class="lineno"> 3585</span>&#160;{</div><div class="line"><a name="l03586"></a><span class="lineno"> 3586</span>&#160;    <span class="keywordflow">return</span> SimpleConvolution2d3x3TestCommon&lt;armnn::DataType::QSymmS16, armnn::DataType::Signed32&gt;(</div><div class="line"><a name="l03587"></a><span class="lineno"> 3587</span>&#160;            workloadFactory, memoryManager, tensorHandleFactory, 0.5f, 50, biasEnabled, layout);</div><div class="line"><a name="l03588"></a><span class="lineno"> 3588</span>&#160;}</div></div><!-- fragment -->
</div>
</div>
<a id="ad232d77972b88a751dbf6ecd594b0faa"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ad232d77972b88a751dbf6ecd594b0faa">&#9670;&nbsp;</a></span>SimpleConvolution2d3x3Stride2x2Test()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="struct_layer_test_result.xhtml">LayerTestResult</a>&lt;float, 4&gt; SimpleConvolution2d3x3Stride2x2Test </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classarmnn_1_1_i_workload_factory.xhtml">armnn::IWorkloadFactory</a> &amp;&#160;</td>
          <td class="paramname"><em>workloadFactory</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_i_backend_internal.xhtml#a693b40e6b94e958836aeb0410ca186bd">armnn::IBackendInternal::IMemoryManagerSharedPtr</a> &amp;&#160;</td>
          <td class="paramname"><em>memoryManager</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_i_tensor_handle_factory.xhtml">armnn::ITensorHandleFactory</a> &amp;&#160;</td>
          <td class="paramname"><em>tensorHandleFactory</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>biasEnabled</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="namespacearmnn.xhtml#ad1d5cce2d9e9a5d61c243e5c989112e0">armnn::DataLayout</a>&#160;</td>
          <td class="paramname"><em>layout</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_conv2d_test_impl_8cpp_source.xhtml#l03540">3540</a> of file <a class="el" href="_conv2d_test_impl_8cpp_source.xhtml">Conv2dTestImpl.cpp</a>.</p>

<p class="reference">Referenced by <a class="el" href="_cl_layer_tests_8cpp_source.xhtml#l00027">TEST_SUITE()</a>.</p>
<div class="fragment"><div class="line"><a name="l03546"></a><span class="lineno"> 3546</span>&#160;{</div><div class="line"><a name="l03547"></a><span class="lineno"> 3547</span>&#160;    <span class="keywordflow">return</span> SimpleConvolution2d3x3Stride2x2TestCommon&lt;armnn::DataType::Float32&gt;(</div><div class="line"><a name="l03548"></a><span class="lineno"> 3548</span>&#160;        workloadFactory,</div><div class="line"><a name="l03549"></a><span class="lineno"> 3549</span>&#160;        memoryManager,</div><div class="line"><a name="l03550"></a><span class="lineno"> 3550</span>&#160;        tensorHandleFactory,</div><div class="line"><a name="l03551"></a><span class="lineno"> 3551</span>&#160;        0.f,</div><div class="line"><a name="l03552"></a><span class="lineno"> 3552</span>&#160;        0,</div><div class="line"><a name="l03553"></a><span class="lineno"> 3553</span>&#160;        biasEnabled,</div><div class="line"><a name="l03554"></a><span class="lineno"> 3554</span>&#160;        layout);</div><div class="line"><a name="l03555"></a><span class="lineno"> 3555</span>&#160;}</div></div><!-- fragment -->
</div>
</div>
<a id="a1c22cdfa99117a1cdbc4b25064fd4c25"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a1c22cdfa99117a1cdbc4b25064fd4c25">&#9670;&nbsp;</a></span>SimpleConvolution2d3x3Test()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="struct_layer_test_result.xhtml">LayerTestResult</a>&lt;float, 4&gt; SimpleConvolution2d3x3Test </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classarmnn_1_1_i_workload_factory.xhtml">armnn::IWorkloadFactory</a> &amp;&#160;</td>
          <td class="paramname"><em>workloadFactory</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_i_backend_internal.xhtml#a693b40e6b94e958836aeb0410ca186bd">armnn::IBackendInternal::IMemoryManagerSharedPtr</a> &amp;&#160;</td>
          <td class="paramname"><em>memoryManager</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_i_tensor_handle_factory.xhtml">armnn::ITensorHandleFactory</a> &amp;&#160;</td>
          <td class="paramname"><em>tensorHandleFactory</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>biasEnabled</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="namespacearmnn.xhtml#ad1d5cce2d9e9a5d61c243e5c989112e0">armnn::DataLayout</a>&#160;</td>
          <td class="paramname"><em>layout</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_conv2d_test_impl_8cpp_source.xhtml#l03513">3513</a> of file <a class="el" href="_conv2d_test_impl_8cpp_source.xhtml">Conv2dTestImpl.cpp</a>.</p>

<p class="reference">Referenced by <a class="el" href="_cl_layer_tests_8cpp_source.xhtml#l00027">TEST_SUITE()</a>.</p>
<div class="fragment"><div class="line"><a name="l03519"></a><span class="lineno"> 3519</span>&#160;{</div><div class="line"><a name="l03520"></a><span class="lineno"> 3520</span>&#160;    <span class="keywordflow">return</span> SimpleConvolution2d3x3TestCommon&lt;armnn::DataType::Float32, armnn::DataType::Float32&gt;(</div><div class="line"><a name="l03521"></a><span class="lineno"> 3521</span>&#160;        workloadFactory, memoryManager, tensorHandleFactory, 0.f, 0, biasEnabled, layout);</div><div class="line"><a name="l03522"></a><span class="lineno"> 3522</span>&#160;}</div></div><!-- fragment -->
</div>
</div>
<a id="a9966f7b9070f4eb34deeb8fc3cb3d277"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a9966f7b9070f4eb34deeb8fc3cb3d277">&#9670;&nbsp;</a></span>SimpleConvolution2d3x3Uint8Test()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="struct_layer_test_result.xhtml">LayerTestResult</a>&lt;uint8_t, 4&gt; SimpleConvolution2d3x3Uint8Test </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classarmnn_1_1_i_workload_factory.xhtml">armnn::IWorkloadFactory</a> &amp;&#160;</td>
          <td class="paramname"><em>workloadFactory</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_i_backend_internal.xhtml#a693b40e6b94e958836aeb0410ca186bd">armnn::IBackendInternal::IMemoryManagerSharedPtr</a> &amp;&#160;</td>
          <td class="paramname"><em>memoryManager</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_i_tensor_handle_factory.xhtml">armnn::ITensorHandleFactory</a> &amp;&#160;</td>
          <td class="paramname"><em>tensorHandleFactory</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>biasEnabled</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="namespacearmnn.xhtml#ad1d5cce2d9e9a5d61c243e5c989112e0">armnn::DataLayout</a>&#160;</td>
          <td class="paramname"><em>layout</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_conv2d_test_impl_8cpp_source.xhtml#l03557">3557</a> of file <a class="el" href="_conv2d_test_impl_8cpp_source.xhtml">Conv2dTestImpl.cpp</a>.</p>

<p class="reference">Referenced by <a class="el" href="_cl_layer_tests_8cpp_source.xhtml#l00027">TEST_SUITE()</a>.</p>
<div class="fragment"><div class="line"><a name="l03563"></a><span class="lineno"> 3563</span>&#160;{</div><div class="line"><a name="l03564"></a><span class="lineno"> 3564</span>&#160;    <span class="keywordflow">return</span> SimpleConvolution2d3x3TestCommon&lt;armnn::DataType::QAsymmU8, armnn::DataType::Signed32&gt;(</div><div class="line"><a name="l03565"></a><span class="lineno"> 3565</span>&#160;        workloadFactory, memoryManager, tensorHandleFactory, 0.5f, 50, biasEnabled, layout);</div><div class="line"><a name="l03566"></a><span class="lineno"> 3566</span>&#160;}</div></div><!-- fragment -->
</div>
</div>
<a id="a0f6ba53d8a3801fd33288c8a88a55902"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a0f6ba53d8a3801fd33288c8a88a55902">&#9670;&nbsp;</a></span>SimpleConvolution2d3x5QSymm16Test()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="struct_layer_test_result.xhtml">LayerTestResult</a>&lt;int16_t, 4&gt; SimpleConvolution2d3x5QSymm16Test </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classarmnn_1_1_i_workload_factory.xhtml">armnn::IWorkloadFactory</a> &amp;&#160;</td>
          <td class="paramname"><em>workloadFactory</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_i_backend_internal.xhtml#a693b40e6b94e958836aeb0410ca186bd">armnn::IBackendInternal::IMemoryManagerSharedPtr</a> &amp;&#160;</td>
          <td class="paramname"><em>memoryManager</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_i_tensor_handle_factory.xhtml">armnn::ITensorHandleFactory</a> &amp;&#160;</td>
          <td class="paramname"><em>tensorHandleFactory</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>biasEnabled</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="namespacearmnn.xhtml#ad1d5cce2d9e9a5d61c243e5c989112e0">armnn::DataLayout</a>&#160;</td>
          <td class="paramname"><em>layout</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_conv2d_test_impl_8cpp_source.xhtml#l03568">3568</a> of file <a class="el" href="_conv2d_test_impl_8cpp_source.xhtml">Conv2dTestImpl.cpp</a>.</p>

<p class="reference">Referenced by <a class="el" href="_ref_layer_tests_8cpp_source.xhtml#l00014">TEST_SUITE()</a>.</p>
<div class="fragment"><div class="line"><a name="l03574"></a><span class="lineno"> 3574</span>&#160;{</div><div class="line"><a name="l03575"></a><span class="lineno"> 3575</span>&#160;    <span class="keywordflow">return</span> SimpleConvolution2d3x5TestCommon&lt;armnn::DataType::QSymmS16, armnn::DataType::Signed32&gt;(</div><div class="line"><a name="l03576"></a><span class="lineno"> 3576</span>&#160;        workloadFactory, memoryManager, tensorHandleFactory, 0.5f, 50, biasEnabled, layout);</div><div class="line"><a name="l03577"></a><span class="lineno"> 3577</span>&#160;}</div></div><!-- fragment -->
</div>
</div>
<a id="af541c93dcb094c01b52b99658704c500"></a>
<h2 class="memtitle"><span class="permalink"><a href="#af541c93dcb094c01b52b99658704c500">&#9670;&nbsp;</a></span>SimpleConvolution2d3x5Test()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="struct_layer_test_result.xhtml">LayerTestResult</a>&lt;float, 4&gt; SimpleConvolution2d3x5Test </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classarmnn_1_1_i_workload_factory.xhtml">armnn::IWorkloadFactory</a> &amp;&#160;</td>
          <td class="paramname"><em>workloadFactory</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_i_backend_internal.xhtml#a693b40e6b94e958836aeb0410ca186bd">armnn::IBackendInternal::IMemoryManagerSharedPtr</a> &amp;&#160;</td>
          <td class="paramname"><em>memoryManager</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_i_tensor_handle_factory.xhtml">armnn::ITensorHandleFactory</a> &amp;&#160;</td>
          <td class="paramname"><em>tensorHandleFactory</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>biasEnabled</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="namespacearmnn.xhtml#ad1d5cce2d9e9a5d61c243e5c989112e0">armnn::DataLayout</a>&#160;</td>
          <td class="paramname"><em>layout</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_conv2d_test_impl_8cpp_source.xhtml#l03491">3491</a> of file <a class="el" href="_conv2d_test_impl_8cpp_source.xhtml">Conv2dTestImpl.cpp</a>.</p>

<p class="reference">Referenced by <a class="el" href="_cl_layer_tests_8cpp_source.xhtml#l00027">TEST_SUITE()</a>.</p>
<div class="fragment"><div class="line"><a name="l03497"></a><span class="lineno"> 3497</span>&#160;{</div><div class="line"><a name="l03498"></a><span class="lineno"> 3498</span>&#160;    <span class="keywordflow">return</span> SimpleConvolution2d3x5TestCommon&lt;armnn::DataType::Float32, armnn::DataType::Float32&gt;(</div><div class="line"><a name="l03499"></a><span class="lineno"> 3499</span>&#160;        workloadFactory, memoryManager, tensorHandleFactory, 0.f, 0, biasEnabled, layout);</div><div class="line"><a name="l03500"></a><span class="lineno"> 3500</span>&#160;}</div></div><!-- fragment -->
</div>
</div>
<a id="a10aae8f4c0c56c2c3574ca9ddf61a7af"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a10aae8f4c0c56c2c3574ca9ddf61a7af">&#9670;&nbsp;</a></span>SimpleConvolution2d3x5Uint8Test()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="struct_layer_test_result.xhtml">LayerTestResult</a>&lt;uint8_t, 4&gt; SimpleConvolution2d3x5Uint8Test </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classarmnn_1_1_i_workload_factory.xhtml">armnn::IWorkloadFactory</a> &amp;&#160;</td>
          <td class="paramname"><em>workloadFactory</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_i_backend_internal.xhtml#a693b40e6b94e958836aeb0410ca186bd">armnn::IBackendInternal::IMemoryManagerSharedPtr</a> &amp;&#160;</td>
          <td class="paramname"><em>memoryManager</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_i_tensor_handle_factory.xhtml">armnn::ITensorHandleFactory</a> &amp;&#160;</td>
          <td class="paramname"><em>tensorHandleFactory</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>biasEnabled</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="namespacearmnn.xhtml#ad1d5cce2d9e9a5d61c243e5c989112e0">armnn::DataLayout</a>&#160;</td>
          <td class="paramname"><em>layout</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_conv2d_test_impl_8cpp_source.xhtml#l03502">3502</a> of file <a class="el" href="_conv2d_test_impl_8cpp_source.xhtml">Conv2dTestImpl.cpp</a>.</p>

<p class="reference">Referenced by <a class="el" href="_ref_layer_tests_8cpp_source.xhtml#l00014">TEST_SUITE()</a>.</p>
<div class="fragment"><div class="line"><a name="l03508"></a><span class="lineno"> 3508</span>&#160;{</div><div class="line"><a name="l03509"></a><span class="lineno"> 3509</span>&#160;    <span class="keywordflow">return</span> SimpleConvolution2d3x5TestCommon&lt;armnn::DataType::QAsymmU8, armnn::DataType::Signed32&gt;(</div><div class="line"><a name="l03510"></a><span class="lineno"> 3510</span>&#160;        workloadFactory, memoryManager, tensorHandleFactory, 0.5f, 50, biasEnabled, layout);</div><div class="line"><a name="l03511"></a><span class="lineno"> 3511</span>&#160;}</div></div><!-- fragment -->
</div>
</div>
<a id="af089eef6b8fd167fe95899a3af69aa32"></a>
<h2 class="memtitle"><span class="permalink"><a href="#af089eef6b8fd167fe95899a3af69aa32">&#9670;&nbsp;</a></span>SimpleDepthwiseConvolution2d3x3Dilation3x3NhwcTest()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="struct_layer_test_result.xhtml">LayerTestResult</a>&lt;float, 4&gt; SimpleDepthwiseConvolution2d3x3Dilation3x3NhwcTest </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classarmnn_1_1_i_workload_factory.xhtml">armnn::IWorkloadFactory</a> &amp;&#160;</td>
          <td class="paramname"><em>workloadFactory</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_i_backend_internal.xhtml#a693b40e6b94e958836aeb0410ca186bd">armnn::IBackendInternal::IMemoryManagerSharedPtr</a> &amp;&#160;</td>
          <td class="paramname"><em>memoryManager</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_i_tensor_handle_factory.xhtml">armnn::ITensorHandleFactory</a> &amp;&#160;</td>
          <td class="paramname"><em>tensorHandleFactory</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_conv2d_test_impl_8cpp_source.xhtml#l03866">3866</a> of file <a class="el" href="_conv2d_test_impl_8cpp_source.xhtml">Conv2dTestImpl.cpp</a>.</p>

<p class="reference">Referenced by <a class="el" href="_cl_layer_tests_8cpp_source.xhtml#l00027">TEST_SUITE()</a>.</p>
<div class="fragment"><div class="line"><a name="l03870"></a><span class="lineno"> 3870</span>&#160;{</div><div class="line"><a name="l03871"></a><span class="lineno"> 3871</span>&#160;    <span class="keywordflow">return</span> SimpleDepthwiseConvolution2d3x3Dilation3x3NhwcTestCommon&lt;armnn::DataType::Float32, armnn::DataType::Float32&gt;(</div><div class="line"><a name="l03872"></a><span class="lineno"> 3872</span>&#160;            workloadFactory,</div><div class="line"><a name="l03873"></a><span class="lineno"> 3873</span>&#160;            memoryManager,</div><div class="line"><a name="l03874"></a><span class="lineno"> 3874</span>&#160;            tensorHandleFactory,</div><div class="line"><a name="l03875"></a><span class="lineno"> 3875</span>&#160;            0.f,</div><div class="line"><a name="l03876"></a><span class="lineno"> 3876</span>&#160;            0,</div><div class="line"><a name="l03877"></a><span class="lineno"> 3877</span>&#160;            <span class="keyword">false</span>);</div><div class="line"><a name="l03878"></a><span class="lineno"> 3878</span>&#160;}</div></div><!-- fragment -->
</div>
</div>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="dir_68267d1309a1af8e8297ef4c3efbcdba.xhtml">src</a></li><li class="navelem"><a class="el" href="dir_0f3cdec46afbc61a1ded8e1687c9c9a0.xhtml">backends</a></li><li class="navelem"><a class="el" href="dir_797a213d7d01b98ef12d53b0820ea64e.xhtml">backendsCommon</a></li><li class="navelem"><a class="el" href="dir_28bfe507f7e135bdae07c2a6b7f66696.xhtml">test</a></li><li class="navelem"><a class="el" href="dir_99a30439342d160875b21dac3498ad7f.xhtml">layerTests</a></li><li class="navelem"><a class="el" href="_conv2d_test_impl_8hpp.xhtml">Conv2dTestImpl.hpp</a></li>
    <li class="footer">Generated on Tue May 24 2022 11:27:17 for ArmNN by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.13 </li>
  </ul>
</div>
</body>
</html>
