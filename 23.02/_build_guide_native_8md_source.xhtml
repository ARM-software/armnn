<!-- Copyright (c) 2020 ARM Limited. -->
<!--                                 -->
<!-- SPDX-License-Identifier: MIT    -->
<!--                                 -->
<!-- HTML header for doxygen 1.8.13-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.13"/>
<meta name="robots" content="NOINDEX, NOFOLLOW" />
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>ArmNN: delegate/BuildGuideNative.md Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script><script type="text/javascript" src="http://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="stylesheet.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <img alt="ArmNN" src="Arm_NN_horizontal_blue.png" style="max-width: 10rem; margin-top: .5rem; margin-left 10px"/>
  <td style="padding-left: 0.5em;">
   <div id="projectname">
   &#160;<span id="projectnumber">23.02</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.13 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
$(document).ready(function(){initNavTree('_build_guide_native_8md.xhtml','');});
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="headertitle">
<div class="title">delegate/BuildGuideNative.md</div>  </div>
</div><!--header-->
<div class="contents">
<a href="_build_guide_native_8md.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;# Delegate Build Guide</div><div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;</div><div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;This guide assumes that Arm NN has been built with the Arm NN TF Lite Delegate with the [Arm NN Build Tool](../build-tool/README.md).&lt;br&gt;</div><div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;The Arm NN TF Lite Delegate can also be obtained from downloading the [Pre-Built Binaries on the GitHub homepage](../README.md).</div><div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;</div><div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;**Table of Contents:**</div><div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;- [Running DelegateUnitTests](#running-delegateunittests)</div><div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;- [Run the TF Lite Benchmark Tool](#run-the-tflite-model-benchmark-tool)</div><div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;  - [Download the TFLite Model Benchmark Tool](#download-the-tflite-model-benchmark-tool)</div><div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;  - [Execute the benchmarking tool with the Arm NN TF Lite Delegate](#execute-the-benchmarking-tool-with-the-arm-nn-tf-lite-delegate)</div><div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;- [Integrate the Arm NN TfLite Delegate into your project](#integrate-the-arm-nn-tflite-delegate-into-your-project)</div><div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;</div><div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;</div><div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;## Running DelegateUnitTests</div><div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;</div><div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;To ensure that the build was successful you can run the unit tests for the delegate that can be found in</div><div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;the build directory for the delegate. [Doctest](https://github.com/onqtam/doctest) was used to create those tests. Using test filters you can</div><div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;filter out tests that your build is not configured for. In this case, we run all test suites that have `CpuAcc` in their name.</div><div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;```bash</div><div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;cd &lt;PATH_TO_ARMNN_BUILD_DIRECTORY&gt;/delegate/build</div><div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;./DelegateUnitTests --test-suite=*CpuAcc*</div><div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;```</div><div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;If you have built for Gpu acceleration as well you might want to change your test-suite filter:</div><div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;```bash</div><div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;./DelegateUnitTests --test-suite=*CpuAcc*,*GpuAcc*</div><div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;```</div><div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;</div><div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;## Run the TFLite Model Benchmark Tool</div><div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;</div><div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;The [TFLite Model Benchmark](https://github.com/tensorflow/tensorflow/tree/master/tensorflow/lite/tools/benchmark) Tool has a useful command line interface to test the TF Lite Delegate.</div><div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;We can use this to demonstrate the use of the Arm NN TF Lite Delegate and its options.</div><div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;</div><div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;Some examples of this can be viewed in this [YouTube demonstration](https://www.youtube.com/watch?v=NResQ1kbm-M&amp;t=920s).</div><div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;</div><div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;### Download the TFLite Model Benchmark Tool</div><div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;</div><div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;Binary builds of the benchmarking tool for various platforms are available [here](https://www.tensorflow.org/lite/performance/measurement#native_benchmark_binary). In this example I will target an aarch64 Linux environment. I will also download a sample uint8 tflite model from the [Arm ML Model Zoo](https://github.com/ARM-software/ML-zoo).</div><div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;</div><div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;```bash</div><div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;mkdir $BASEDIR/benchmarking</div><div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;cd $BASEDIR/benchmarking</div><div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;# Get the benchmarking binary.</div><div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;wget https://storage.googleapis.com/tensorflow-nightly-public/prod/tensorflow/release/lite/tools/nightly/latest/linux_aarch64_benchmark_model -O benchmark_model</div><div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;# Make it executable.</div><div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;chmod +x benchmark_model</div><div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;# and a sample model from model zoo.</div><div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;wget https://github.com/ARM-software/ML-zoo/blob/master/models/image_classification/mobilenet_v2_1.0_224/tflite_uint8/mobilenet_v2_1.0_224_quantized_1_default_1.tflite?raw=true -O mobilenet_v2_1.0_224_quantized_1_default_1.tflite</div><div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;```</div><div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;</div><div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;### Execute the benchmarking tool with the Arm NN TF Lite Delegate</div><div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;You are already at $BASEDIR/benchmarking from the previous stage.</div><div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;```bash</div><div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;LD_LIBRARY_PATH=&lt;PATH_TO_ARMNN_BUILD_DIRECTORY&gt; ./benchmark_model --graph=mobilenet_v2_1.0_224_quantized_1_default_1.tflite --external_delegate_path=&quot;&lt;PATH_TO_ARMNN_BUILD_DIRECTORY&gt;/delegate/libarmnnDelegate.so&quot; --external_delegate_options=&quot;backends:CpuAcc;logging-severity:info&quot;</div><div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;```</div><div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;The &quot;external_delegate_options&quot; here are specific to the Arm NN delegate. They are used to specify a target Arm NN backend or to enable/disable various options in Arm NN. A full description can be found in the parameters of function tflite_plugin_create_delegate.</div><div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;</div><div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;## Integrate the Arm NN TfLite Delegate into your project</div><div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;</div><div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;The delegate can be integrated into your c++ project by creating a TfLite Interpreter and</div><div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;instructing it to use the Arm NN delegate for the graph execution. This should look similar</div><div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;to the following code snippet.</div><div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;```objectivec</div><div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;// Create TfLite Interpreter</div><div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;std::unique_ptr&lt;Interpreter&gt; armnnDelegateInterpreter;</div><div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;InterpreterBuilder(tfLiteModel, ::tflite::ops::builtin::BuiltinOpResolver())</div><div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;                  (&amp;armnnDelegateInterpreter)</div><div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;</div><div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;// Create the Arm NN Delegate</div><div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;armnnDelegate::DelegateOptions delegateOptions(backends);</div><div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;std::unique_ptr&lt;TfLiteDelegate, decltype(&amp;armnnDelegate::TfLiteArmnnDelegateDelete)&gt;</div><div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;                    theArmnnDelegate(armnnDelegate::TfLiteArmnnDelegateCreate(delegateOptions),</div><div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;                                     armnnDelegate::TfLiteArmnnDelegateDelete);</div><div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;</div><div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;// Instruct the Interpreter to use the armnnDelegate</div><div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;armnnDelegateInterpreter-&gt;ModifyGraphWithDelegate(theArmnnDelegate.get());</div><div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;```</div><div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;</div><div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;For further information on using TfLite Delegates please visit the [TensorFlow website](https://www.tensorflow.org/lite/guide).</div><div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;</div><div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;For more details of the kind of options you can pass to the Arm NN delegate please check the parameters of function tflite_plugin_create_delegate.</div></div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="_build_guide_native_8md.xhtml">BuildGuideNative.md</a></li>
    <li class="footer">Generated on Fri Feb 24 2023 10:24:24 for ArmNN by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.13 </li>
  </ul>
</div>
</body>
</html>
