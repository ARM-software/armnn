<!-- Copyright (c) 2020 ARM Limited. -->
<!--                                 -->
<!-- SPDX-License-Identifier: MIT    -->
<!--                                 -->
<!-- HTML header for doxygen 1.8.13-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.13"/>
<meta name="robots" content="NOINDEX, NOFOLLOW" />
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>ArmNN: src/armnn/test/TensorHandleStrategyTest.cpp File Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script><script type="text/javascript" src="http://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="stylesheet.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <img alt="ArmNN" src="Arm_NN_horizontal_blue.png" style="max-width: 10rem; margin-top: .5rem; margin-left 10px"/>
  <td style="padding-left: 0.5em;">
   <div id="projectname">
   &#160;<span id="projectnumber">22.05</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.13 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
$(document).ready(function(){initNavTree('_tensor_handle_strategy_test_8cpp.xhtml','');});
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="summary">
<a href="#func-members">Functions</a>  </div>
  <div class="headertitle">
<div class="title">TensorHandleStrategyTest.cpp File Reference</div>  </div>
</div><!--header-->
<div class="contents">
<div class="textblock"><code>#include &lt;doctest/doctest.h&gt;</code><br />
<code>#include &lt;<a class="el" href="_layer_visitor_base_8hpp_source.xhtml">armnn/LayerVisitorBase.hpp</a>&gt;</code><br />
<code>#include &lt;<a class="el" href="include_2armnn_2backends_2_i_backend_context_8hpp_source.xhtml">armnn/backends/IBackendContext.hpp</a>&gt;</code><br />
<code>#include &lt;<a class="el" href="_i_backend_internal_8hpp_source.xhtml">armnn/backends/IBackendInternal.hpp</a>&gt;</code><br />
<code>#include &lt;<a class="el" href="include_2armnn_2backends_2_i_memory_manager_8hpp_source.xhtml">armnn/backends/IMemoryManager.hpp</a>&gt;</code><br />
<code>#include &lt;<a class="el" href="include_2armnn_2backends_2_i_tensor_handle_factory_8hpp_source.xhtml">armnn/backends/ITensorHandleFactory.hpp</a>&gt;</code><br />
<code>#include &lt;<a class="el" href="_tensor_handle_factory_registry_8hpp_source.xhtml">backendsCommon/TensorHandleFactoryRegistry.hpp</a>&gt;</code><br />
<code>#include &lt;<a class="el" href="_optimization_8hpp_source.xhtml">optimizations/Optimization.hpp</a>&gt;</code><br />
<code>#include &lt;<a class="el" href="_network_8hpp_source.xhtml">Network.hpp</a>&gt;</code><br />
<code>#include &lt;<a class="el" href="_ignore_unused_8hpp_source.xhtml">armnn/utility/IgnoreUnused.hpp</a>&gt;</code><br />
<code>#include &lt;vector&gt;</code><br />
<code>#include &lt;string&gt;</code><br />
</div>
<p><a href="_tensor_handle_strategy_test_8cpp_source.xhtml">Go to the source code of this file.</a></p>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="func-members"></a>
Functions</h2></td></tr>
<tr class="memitem:a9349cdca952ea736ee2eda4b87ed9fa0"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_tensor_handle_strategy_test_8cpp.xhtml#a9349cdca952ea736ee2eda4b87ed9fa0">TEST_SUITE</a> (&quot;TensorHandle&quot;)</td></tr>
<tr class="separator:a9349cdca952ea736ee2eda4b87ed9fa0"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<h2 class="groupheader">Function Documentation</h2>
<a id="a9349cdca952ea736ee2eda4b87ed9fa0"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a9349cdca952ea736ee2eda4b87ed9fa0">&#9670;&nbsp;</a></span>TEST_SUITE()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">TEST_SUITE </td>
          <td>(</td>
          <td class="paramtype">&quot;TensorHandle&quot;&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_tensor_handle_strategy_test_8cpp_source.xhtml#l00274">274</a> of file <a class="el" href="_tensor_handle_strategy_test_8cpp_source.xhtml">TensorHandleStrategyTest.cpp</a>.</p>

<p class="reference">References <a class="el" href="_graph_8cpp_source.xhtml#l00303">Graph::AddCompatibilityLayers()</a>, <a class="el" href="_graph_8hpp_source.xhtml#l00425">Graph::AddLayer()</a>, <a class="el" href="_layer_8cpp_source.xhtml#l00112">OutputSlot::Connect()</a>, <a class="el" href="namespacearmnn.xhtml#aff209afc1dc598da399e3e78617ce016ac366da48cc11956ae377a77751936852">armnn::CopyToTarget</a>, <a class="el" href="namespacearmnn.xhtml#aff209afc1dc598da399e3e78617ce016a78d1be0baa31e083ae8da99aaedaf650">armnn::DirectCompatibility</a>, <a class="el" href="namespacearmnn.xhtml#aff209afc1dc598da399e3e78617ce016a46e8b7bfd6fd3c0cb34a100478a39189">armnn::ExportToTarget</a>, <a class="el" href="_graph_8hpp_source.xhtml#l00040">Graph::ForEachLayer()</a>, <a class="el" href="_layer_8cpp_source.xhtml#l00215">OutputSlot::GetEdgeStrategyForConnection()</a>, <a class="el" href="_layer_8hpp_source.xhtml#l00322">Layer::GetInputSlot()</a>, <a class="el" href="_tensor_handle_factory_registry_8cpp_source.xhtml#l00072">TensorHandleFactoryRegistry::GetMatchingImportFactoryId()</a>, <a class="el" href="_layer_8hpp_source.xhtml#l00324">Layer::GetOutputSlot()</a>, <a class="el" href="_layer_8cpp_source.xhtml#l00205">OutputSlot::GetTensorHandleFactoryId()</a>, <a class="el" href="_layer_8hpp_source.xhtml#l00271">Layer::GetType()</a>, <a class="el" href="namespacearmnn.xhtml#a56943a0946e5f15e5e58054b8e7a04a4a4dd48794eb3305a0f5aece88b111a97b">armnn::MemCopy</a>, <a class="el" href="namespacearmnn.xhtml#a56943a0946e5f15e5e58054b8e7a04a4a115bfc5d633eae55c67f9588acdd2bf9">armnn::MemImport</a>, <a class="el" href="_tensor_handle_factory_registry_8cpp_source.xhtml#l00066">TensorHandleFactoryRegistry::RegisterCopyAndImportFactoryPair()</a>, <a class="el" href="_network_8cpp_source.xhtml#l01601">armnn::SelectTensorHandleStrategy()</a>, <a class="el" href="_layer_8hpp_source.xhtml#l00276">Layer::SetBackendId()</a>, and <a class="el" href="_graph_8hpp_source.xhtml#l00184">Graph::TopologicalSort()</a>.</p>
<div class="fragment"><div class="line"><a name="l00275"></a><span class="lineno">  275</span>&#160;{</div><div class="line"><a name="l00276"></a><span class="lineno">  276</span>&#160;TEST_CASE(<span class="stringliteral">&quot;RegisterFactories&quot;</span>)</div><div class="line"><a name="l00277"></a><span class="lineno">  277</span>&#160;{</div><div class="line"><a name="l00278"></a><span class="lineno">  278</span>&#160;    TestBackendA backendA;</div><div class="line"><a name="l00279"></a><span class="lineno">  279</span>&#160;    TestBackendB backendB;</div><div class="line"><a name="l00280"></a><span class="lineno">  280</span>&#160;</div><div class="line"><a name="l00281"></a><span class="lineno">  281</span>&#160;    CHECK(backendA.GetHandleFactoryPreferences()[0] == <span class="stringliteral">&quot;TestHandleFactoryA1&quot;</span>);</div><div class="line"><a name="l00282"></a><span class="lineno">  282</span>&#160;    CHECK(backendA.GetHandleFactoryPreferences()[1] == <span class="stringliteral">&quot;TestHandleFactoryA2&quot;</span>);</div><div class="line"><a name="l00283"></a><span class="lineno">  283</span>&#160;    CHECK(backendA.GetHandleFactoryPreferences()[2] == <span class="stringliteral">&quot;TestHandleFactoryB1&quot;</span>);</div><div class="line"><a name="l00284"></a><span class="lineno">  284</span>&#160;    CHECK(backendA.GetHandleFactoryPreferences()[3] == <span class="stringliteral">&quot;TestHandleFactoryD1&quot;</span>);</div><div class="line"><a name="l00285"></a><span class="lineno">  285</span>&#160;</div><div class="line"><a name="l00286"></a><span class="lineno">  286</span>&#160;    <a class="code" href="classarmnn_1_1_tensor_handle_factory_registry.xhtml">TensorHandleFactoryRegistry</a> registry;</div><div class="line"><a name="l00287"></a><span class="lineno">  287</span>&#160;    backendA.RegisterTensorHandleFactories(registry);</div><div class="line"><a name="l00288"></a><span class="lineno">  288</span>&#160;    backendB.RegisterTensorHandleFactories(registry);</div><div class="line"><a name="l00289"></a><span class="lineno">  289</span>&#160;</div><div class="line"><a name="l00290"></a><span class="lineno">  290</span>&#160;    CHECK((registry.GetFactory(<span class="stringliteral">&quot;Non-existing Backend&quot;</span>) == <span class="keyword">nullptr</span>));</div><div class="line"><a name="l00291"></a><span class="lineno">  291</span>&#160;    CHECK((registry.GetFactory(<span class="stringliteral">&quot;TestHandleFactoryA1&quot;</span>) != <span class="keyword">nullptr</span>));</div><div class="line"><a name="l00292"></a><span class="lineno">  292</span>&#160;    CHECK((registry.GetFactory(<span class="stringliteral">&quot;TestHandleFactoryA2&quot;</span>) != <span class="keyword">nullptr</span>));</div><div class="line"><a name="l00293"></a><span class="lineno">  293</span>&#160;    CHECK((registry.GetFactory(<span class="stringliteral">&quot;TestHandleFactoryB1&quot;</span>) != <span class="keyword">nullptr</span>));</div><div class="line"><a name="l00294"></a><span class="lineno">  294</span>&#160;}</div><div class="line"><a name="l00295"></a><span class="lineno">  295</span>&#160;</div><div class="line"><a name="l00296"></a><span class="lineno">  296</span>&#160;TEST_CASE(<span class="stringliteral">&quot;TensorHandleSelectionStrategy&quot;</span>)</div><div class="line"><a name="l00297"></a><span class="lineno">  297</span>&#160;{</div><div class="line"><a name="l00298"></a><span class="lineno">  298</span>&#160;    <span class="keyword">auto</span> backendA = std::make_unique&lt;TestBackendA&gt;();</div><div class="line"><a name="l00299"></a><span class="lineno">  299</span>&#160;    <span class="keyword">auto</span> backendB = std::make_unique&lt;TestBackendB&gt;();</div><div class="line"><a name="l00300"></a><span class="lineno">  300</span>&#160;    <span class="keyword">auto</span> backendC = std::make_unique&lt;TestBackendC&gt;();</div><div class="line"><a name="l00301"></a><span class="lineno">  301</span>&#160;    <span class="keyword">auto</span> backendD = std::make_unique&lt;TestBackendD&gt;();</div><div class="line"><a name="l00302"></a><span class="lineno">  302</span>&#160;</div><div class="line"><a name="l00303"></a><span class="lineno">  303</span>&#160;    <a class="code" href="classarmnn_1_1_tensor_handle_factory_registry.xhtml">TensorHandleFactoryRegistry</a> registry;</div><div class="line"><a name="l00304"></a><span class="lineno">  304</span>&#160;    backendA-&gt;RegisterTensorHandleFactories(registry);</div><div class="line"><a name="l00305"></a><span class="lineno">  305</span>&#160;    backendB-&gt;RegisterTensorHandleFactories(registry);</div><div class="line"><a name="l00306"></a><span class="lineno">  306</span>&#160;    backendC-&gt;RegisterTensorHandleFactories(registry);</div><div class="line"><a name="l00307"></a><span class="lineno">  307</span>&#160;    backendD-&gt;RegisterTensorHandleFactories(registry);</div><div class="line"><a name="l00308"></a><span class="lineno">  308</span>&#160;</div><div class="line"><a name="l00309"></a><span class="lineno">  309</span>&#160;    <a class="code" href="namespacearmnn.xhtml#a9173495a61a0092b5f38b855f02c3585">BackendsMap</a> backends;</div><div class="line"><a name="l00310"></a><span class="lineno">  310</span>&#160;    backends[<span class="stringliteral">&quot;BackendA&quot;</span>] = std::move(backendA);</div><div class="line"><a name="l00311"></a><span class="lineno">  311</span>&#160;    backends[<span class="stringliteral">&quot;BackendB&quot;</span>] = std::move(backendB);</div><div class="line"><a name="l00312"></a><span class="lineno">  312</span>&#160;    backends[<span class="stringliteral">&quot;BackendC&quot;</span>] = std::move(backendC);</div><div class="line"><a name="l00313"></a><span class="lineno">  313</span>&#160;    backends[<span class="stringliteral">&quot;BackendD&quot;</span>] = std::move(backendD);</div><div class="line"><a name="l00314"></a><span class="lineno">  314</span>&#160;</div><div class="line"><a name="l00315"></a><span class="lineno">  315</span>&#160;    <a class="code" href="classarmnn_1_1_graph.xhtml">armnn::Graph</a> graph;</div><div class="line"><a name="l00316"></a><span class="lineno">  316</span>&#160;</div><div class="line"><a name="l00317"></a><span class="lineno">  317</span>&#160;    <a class="code" href="classarmnn_1_1_input_layer.xhtml">armnn::InputLayer</a>* <span class="keyword">const</span> inputLayer = graph.<a class="code" href="classarmnn_1_1_graph.xhtml#a7563c5b899e7d0ada08fd0fdb202f205">AddLayer</a>&lt;<a class="code" href="classarmnn_1_1_input_layer.xhtml">armnn::InputLayer</a>&gt;(0, <span class="stringliteral">&quot;input&quot;</span>);</div><div class="line"><a name="l00318"></a><span class="lineno">  318</span>&#160;    inputLayer-&gt;<a class="code" href="classarmnn_1_1_layer.xhtml#a3f6ad59212fa8a47c9265162fff8a274">SetBackendId</a>(<span class="stringliteral">&quot;BackendA&quot;</span>);</div><div class="line"><a name="l00319"></a><span class="lineno">  319</span>&#160;</div><div class="line"><a name="l00320"></a><span class="lineno">  320</span>&#160;    <a class="code" href="structarmnn_1_1_softmax_descriptor.xhtml">armnn::SoftmaxDescriptor</a> smDesc;</div><div class="line"><a name="l00321"></a><span class="lineno">  321</span>&#160;    <a class="code" href="classarmnn_1_1_softmax_layer.xhtml">armnn::SoftmaxLayer</a>* <span class="keyword">const</span> softmaxLayer1 = graph.<a class="code" href="classarmnn_1_1_graph.xhtml#a7563c5b899e7d0ada08fd0fdb202f205">AddLayer</a>&lt;<a class="code" href="classarmnn_1_1_softmax_layer.xhtml">armnn::SoftmaxLayer</a>&gt;(smDesc, <span class="stringliteral">&quot;softmax1&quot;</span>);</div><div class="line"><a name="l00322"></a><span class="lineno">  322</span>&#160;    softmaxLayer1-&gt;<a class="code" href="classarmnn_1_1_layer.xhtml#a3f6ad59212fa8a47c9265162fff8a274">SetBackendId</a>(<span class="stringliteral">&quot;BackendA&quot;</span>);</div><div class="line"><a name="l00323"></a><span class="lineno">  323</span>&#160;</div><div class="line"><a name="l00324"></a><span class="lineno">  324</span>&#160;    <a class="code" href="classarmnn_1_1_softmax_layer.xhtml">armnn::SoftmaxLayer</a>* <span class="keyword">const</span> softmaxLayer2 = graph.<a class="code" href="classarmnn_1_1_graph.xhtml#a7563c5b899e7d0ada08fd0fdb202f205">AddLayer</a>&lt;<a class="code" href="classarmnn_1_1_softmax_layer.xhtml">armnn::SoftmaxLayer</a>&gt;(smDesc, <span class="stringliteral">&quot;softmax2&quot;</span>);</div><div class="line"><a name="l00325"></a><span class="lineno">  325</span>&#160;    softmaxLayer2-&gt;<a class="code" href="classarmnn_1_1_layer.xhtml#a3f6ad59212fa8a47c9265162fff8a274">SetBackendId</a>(<span class="stringliteral">&quot;BackendB&quot;</span>);</div><div class="line"><a name="l00326"></a><span class="lineno">  326</span>&#160;</div><div class="line"><a name="l00327"></a><span class="lineno">  327</span>&#160;    <a class="code" href="classarmnn_1_1_softmax_layer.xhtml">armnn::SoftmaxLayer</a>* <span class="keyword">const</span> softmaxLayer3 = graph.<a class="code" href="classarmnn_1_1_graph.xhtml#a7563c5b899e7d0ada08fd0fdb202f205">AddLayer</a>&lt;<a class="code" href="classarmnn_1_1_softmax_layer.xhtml">armnn::SoftmaxLayer</a>&gt;(smDesc, <span class="stringliteral">&quot;softmax3&quot;</span>);</div><div class="line"><a name="l00328"></a><span class="lineno">  328</span>&#160;    softmaxLayer3-&gt;<a class="code" href="classarmnn_1_1_layer.xhtml#a3f6ad59212fa8a47c9265162fff8a274">SetBackendId</a>(<span class="stringliteral">&quot;BackendC&quot;</span>);</div><div class="line"><a name="l00329"></a><span class="lineno">  329</span>&#160;</div><div class="line"><a name="l00330"></a><span class="lineno">  330</span>&#160;    <a class="code" href="classarmnn_1_1_softmax_layer.xhtml">armnn::SoftmaxLayer</a>* <span class="keyword">const</span> softmaxLayer4 = graph.<a class="code" href="classarmnn_1_1_graph.xhtml#a7563c5b899e7d0ada08fd0fdb202f205">AddLayer</a>&lt;<a class="code" href="classarmnn_1_1_softmax_layer.xhtml">armnn::SoftmaxLayer</a>&gt;(smDesc, <span class="stringliteral">&quot;softmax4&quot;</span>);</div><div class="line"><a name="l00331"></a><span class="lineno">  331</span>&#160;    softmaxLayer4-&gt;<a class="code" href="classarmnn_1_1_layer.xhtml#a3f6ad59212fa8a47c9265162fff8a274">SetBackendId</a>(<span class="stringliteral">&quot;BackendD&quot;</span>);</div><div class="line"><a name="l00332"></a><span class="lineno">  332</span>&#160;</div><div class="line"><a name="l00333"></a><span class="lineno">  333</span>&#160;    <a class="code" href="classarmnn_1_1_output_layer.xhtml">armnn::OutputLayer</a>* <span class="keyword">const</span> outputLayer = graph.<a class="code" href="classarmnn_1_1_graph.xhtml#a7563c5b899e7d0ada08fd0fdb202f205">AddLayer</a>&lt;<a class="code" href="classarmnn_1_1_output_layer.xhtml">armnn::OutputLayer</a>&gt;(0, <span class="stringliteral">&quot;output&quot;</span>);</div><div class="line"><a name="l00334"></a><span class="lineno">  334</span>&#160;    outputLayer-&gt;<a class="code" href="classarmnn_1_1_layer.xhtml#a3f6ad59212fa8a47c9265162fff8a274">SetBackendId</a>(<span class="stringliteral">&quot;BackendA&quot;</span>);</div><div class="line"><a name="l00335"></a><span class="lineno">  335</span>&#160;</div><div class="line"><a name="l00336"></a><span class="lineno">  336</span>&#160;    inputLayer-&gt;<a class="code" href="classarmnn_1_1_layer.xhtml#a0e36688a43c35668d8db5257274c68fe">GetOutputSlot</a>(0).<a class="code" href="classarmnn_1_1_output_slot.xhtml#adcfb97035799ea4c043f9ef370714815">Connect</a>(softmaxLayer1-&gt;<a class="code" href="classarmnn_1_1_layer.xhtml#acf8b8e23bf647836592982f97088d375">GetInputSlot</a>(0));</div><div class="line"><a name="l00337"></a><span class="lineno">  337</span>&#160;    softmaxLayer1-&gt;<a class="code" href="classarmnn_1_1_layer.xhtml#a0e36688a43c35668d8db5257274c68fe">GetOutputSlot</a>(0).<a class="code" href="classarmnn_1_1_output_slot.xhtml#adcfb97035799ea4c043f9ef370714815">Connect</a>(softmaxLayer2-&gt;<a class="code" href="classarmnn_1_1_layer.xhtml#acf8b8e23bf647836592982f97088d375">GetInputSlot</a>(0));</div><div class="line"><a name="l00338"></a><span class="lineno">  338</span>&#160;    softmaxLayer2-&gt;<a class="code" href="classarmnn_1_1_layer.xhtml#a0e36688a43c35668d8db5257274c68fe">GetOutputSlot</a>(0).<a class="code" href="classarmnn_1_1_output_slot.xhtml#adcfb97035799ea4c043f9ef370714815">Connect</a>(softmaxLayer3-&gt;<a class="code" href="classarmnn_1_1_layer.xhtml#acf8b8e23bf647836592982f97088d375">GetInputSlot</a>(0));</div><div class="line"><a name="l00339"></a><span class="lineno">  339</span>&#160;    softmaxLayer3-&gt;<a class="code" href="classarmnn_1_1_layer.xhtml#a0e36688a43c35668d8db5257274c68fe">GetOutputSlot</a>(0).<a class="code" href="classarmnn_1_1_output_slot.xhtml#adcfb97035799ea4c043f9ef370714815">Connect</a>(softmaxLayer4-&gt;<a class="code" href="classarmnn_1_1_layer.xhtml#acf8b8e23bf647836592982f97088d375">GetInputSlot</a>(0));</div><div class="line"><a name="l00340"></a><span class="lineno">  340</span>&#160;    softmaxLayer4-&gt;<a class="code" href="classarmnn_1_1_layer.xhtml#a0e36688a43c35668d8db5257274c68fe">GetOutputSlot</a>(0).<a class="code" href="classarmnn_1_1_output_slot.xhtml#adcfb97035799ea4c043f9ef370714815">Connect</a>(outputLayer-&gt;<a class="code" href="classarmnn_1_1_layer.xhtml#acf8b8e23bf647836592982f97088d375">GetInputSlot</a>(0));</div><div class="line"><a name="l00341"></a><span class="lineno">  341</span>&#160;</div><div class="line"><a name="l00342"></a><span class="lineno">  342</span>&#160;    graph.<a class="code" href="classarmnn_1_1_graph.xhtml#a9a7209345edfdb2b066b0ceb66414d7c">TopologicalSort</a>();</div><div class="line"><a name="l00343"></a><span class="lineno">  343</span>&#160;</div><div class="line"><a name="l00344"></a><span class="lineno">  344</span>&#160;    std::vector&lt;std::string&gt; errors;</div><div class="line"><a name="l00345"></a><span class="lineno">  345</span>&#160;    <span class="keyword">auto</span> result = <a class="code" href="namespacearmnn.xhtml#a86541d11fcad5246a78cbc21d637a504">SelectTensorHandleStrategy</a>(graph, backends, registry, <span class="keyword">true</span>, errors);</div><div class="line"><a name="l00346"></a><span class="lineno">  346</span>&#160;</div><div class="line"><a name="l00347"></a><span class="lineno">  347</span>&#160;    CHECK(result.m_Error == <span class="keyword">false</span>);</div><div class="line"><a name="l00348"></a><span class="lineno">  348</span>&#160;    CHECK(result.m_Warning == <span class="keyword">false</span>);</div><div class="line"><a name="l00349"></a><span class="lineno">  349</span>&#160;</div><div class="line"><a name="l00350"></a><span class="lineno">  350</span>&#160;    <a class="code" href="classarmnn_1_1_output_slot.xhtml">OutputSlot</a>&amp; inputLayerOut = inputLayer-&gt;<a class="code" href="classarmnn_1_1_layer.xhtml#a0e36688a43c35668d8db5257274c68fe">GetOutputSlot</a>(0);</div><div class="line"><a name="l00351"></a><span class="lineno">  351</span>&#160;    <a class="code" href="classarmnn_1_1_output_slot.xhtml">OutputSlot</a>&amp; softmaxLayer1Out = softmaxLayer1-&gt;<a class="code" href="classarmnn_1_1_layer.xhtml#a0e36688a43c35668d8db5257274c68fe">GetOutputSlot</a>(0);</div><div class="line"><a name="l00352"></a><span class="lineno">  352</span>&#160;    <a class="code" href="classarmnn_1_1_output_slot.xhtml">OutputSlot</a>&amp; softmaxLayer2Out = softmaxLayer2-&gt;<a class="code" href="classarmnn_1_1_layer.xhtml#a0e36688a43c35668d8db5257274c68fe">GetOutputSlot</a>(0);</div><div class="line"><a name="l00353"></a><span class="lineno">  353</span>&#160;    <a class="code" href="classarmnn_1_1_output_slot.xhtml">OutputSlot</a>&amp; softmaxLayer3Out = softmaxLayer3-&gt;<a class="code" href="classarmnn_1_1_layer.xhtml#a0e36688a43c35668d8db5257274c68fe">GetOutputSlot</a>(0);</div><div class="line"><a name="l00354"></a><span class="lineno">  354</span>&#160;    <a class="code" href="classarmnn_1_1_output_slot.xhtml">OutputSlot</a>&amp; softmaxLayer4Out = softmaxLayer4-&gt;<a class="code" href="classarmnn_1_1_layer.xhtml#a0e36688a43c35668d8db5257274c68fe">GetOutputSlot</a>(0);</div><div class="line"><a name="l00355"></a><span class="lineno">  355</span>&#160;</div><div class="line"><a name="l00356"></a><span class="lineno">  356</span>&#160;    <span class="comment">// Check that the correct factory was selected</span></div><div class="line"><a name="l00357"></a><span class="lineno">  357</span>&#160;    CHECK(inputLayerOut.<a class="code" href="classarmnn_1_1_output_slot.xhtml#af303cf872a3f95e29992e45224e4cf8e">GetTensorHandleFactoryId</a>() == <span class="stringliteral">&quot;TestHandleFactoryD1&quot;</span>);</div><div class="line"><a name="l00358"></a><span class="lineno">  358</span>&#160;    CHECK(softmaxLayer1Out.<a class="code" href="classarmnn_1_1_output_slot.xhtml#af303cf872a3f95e29992e45224e4cf8e">GetTensorHandleFactoryId</a>() == <span class="stringliteral">&quot;TestHandleFactoryB1&quot;</span>);</div><div class="line"><a name="l00359"></a><span class="lineno">  359</span>&#160;    CHECK(softmaxLayer2Out.<a class="code" href="classarmnn_1_1_output_slot.xhtml#af303cf872a3f95e29992e45224e4cf8e">GetTensorHandleFactoryId</a>() == <span class="stringliteral">&quot;TestHandleFactoryB1&quot;</span>);</div><div class="line"><a name="l00360"></a><span class="lineno">  360</span>&#160;    CHECK(softmaxLayer3Out.<a class="code" href="classarmnn_1_1_output_slot.xhtml#af303cf872a3f95e29992e45224e4cf8e">GetTensorHandleFactoryId</a>() == <span class="stringliteral">&quot;TestHandleFactoryC1&quot;</span>);</div><div class="line"><a name="l00361"></a><span class="lineno">  361</span>&#160;    CHECK(softmaxLayer4Out.<a class="code" href="classarmnn_1_1_output_slot.xhtml#af303cf872a3f95e29992e45224e4cf8e">GetTensorHandleFactoryId</a>() == <span class="stringliteral">&quot;TestHandleFactoryD1&quot;</span>);</div><div class="line"><a name="l00362"></a><span class="lineno">  362</span>&#160;</div><div class="line"><a name="l00363"></a><span class="lineno">  363</span>&#160;    <span class="comment">// Check that the correct strategy was selected</span></div><div class="line"><a name="l00364"></a><span class="lineno">  364</span>&#160;    CHECK((inputLayerOut.<a class="code" href="classarmnn_1_1_output_slot.xhtml#a5b481a458c19fd3807b6e04b94b9b174">GetEdgeStrategyForConnection</a>(0) == EdgeStrategy::DirectCompatibility));</div><div class="line"><a name="l00365"></a><span class="lineno">  365</span>&#160;    CHECK((softmaxLayer1Out.<a class="code" href="classarmnn_1_1_output_slot.xhtml#a5b481a458c19fd3807b6e04b94b9b174">GetEdgeStrategyForConnection</a>(0) == EdgeStrategy::DirectCompatibility));</div><div class="line"><a name="l00366"></a><span class="lineno">  366</span>&#160;    CHECK((softmaxLayer2Out.<a class="code" href="classarmnn_1_1_output_slot.xhtml#a5b481a458c19fd3807b6e04b94b9b174">GetEdgeStrategyForConnection</a>(0) == EdgeStrategy::CopyToTarget));</div><div class="line"><a name="l00367"></a><span class="lineno">  367</span>&#160;    CHECK((softmaxLayer3Out.<a class="code" href="classarmnn_1_1_output_slot.xhtml#a5b481a458c19fd3807b6e04b94b9b174">GetEdgeStrategyForConnection</a>(0) == EdgeStrategy::ExportToTarget));</div><div class="line"><a name="l00368"></a><span class="lineno">  368</span>&#160;    CHECK((softmaxLayer4Out.<a class="code" href="classarmnn_1_1_output_slot.xhtml#a5b481a458c19fd3807b6e04b94b9b174">GetEdgeStrategyForConnection</a>(0) == EdgeStrategy::DirectCompatibility));</div><div class="line"><a name="l00369"></a><span class="lineno">  369</span>&#160;</div><div class="line"><a name="l00370"></a><span class="lineno">  370</span>&#160;    graph.<a class="code" href="classarmnn_1_1_graph.xhtml#ad1bbee7bf5f93b792675886f57d3ebe0">AddCompatibilityLayers</a>(backends, registry);</div><div class="line"><a name="l00371"></a><span class="lineno">  371</span>&#160;</div><div class="line"><a name="l00372"></a><span class="lineno">  372</span>&#160;    <span class="comment">// Test for copy layers</span></div><div class="line"><a name="l00373"></a><span class="lineno">  373</span>&#160;    <span class="keywordtype">int</span> copyCount= 0;</div><div class="line"><a name="l00374"></a><span class="lineno">  374</span>&#160;    graph.<a class="code" href="classarmnn_1_1_graph.xhtml#ad6521013ad981519904822f2ada2c4ec">ForEachLayer</a>([&amp;copyCount](<a class="code" href="classarmnn_1_1_layer.xhtml">Layer</a>* layer)</div><div class="line"><a name="l00375"></a><span class="lineno">  375</span>&#160;    {</div><div class="line"><a name="l00376"></a><span class="lineno">  376</span>&#160;        <span class="keywordflow">if</span> (layer-&gt;<a class="code" href="classarmnn_1_1_layer.xhtml#ad8e15c530c929ab823d89ae9fd2d3f11">GetType</a>() == LayerType::MemCopy)</div><div class="line"><a name="l00377"></a><span class="lineno">  377</span>&#160;        {</div><div class="line"><a name="l00378"></a><span class="lineno">  378</span>&#160;            copyCount++;</div><div class="line"><a name="l00379"></a><span class="lineno">  379</span>&#160;        }</div><div class="line"><a name="l00380"></a><span class="lineno">  380</span>&#160;    });</div><div class="line"><a name="l00381"></a><span class="lineno">  381</span>&#160;    CHECK(copyCount == 1);</div><div class="line"><a name="l00382"></a><span class="lineno">  382</span>&#160;</div><div class="line"><a name="l00383"></a><span class="lineno">  383</span>&#160;    <span class="comment">// Test for import layers</span></div><div class="line"><a name="l00384"></a><span class="lineno">  384</span>&#160;    <span class="keywordtype">int</span> importCount= 0;</div><div class="line"><a name="l00385"></a><span class="lineno">  385</span>&#160;    graph.<a class="code" href="classarmnn_1_1_graph.xhtml#ad6521013ad981519904822f2ada2c4ec">ForEachLayer</a>([&amp;importCount](<a class="code" href="classarmnn_1_1_layer.xhtml">Layer</a> *layer)</div><div class="line"><a name="l00386"></a><span class="lineno">  386</span>&#160;    {</div><div class="line"><a name="l00387"></a><span class="lineno">  387</span>&#160;        <span class="keywordflow">if</span> (layer-&gt;<a class="code" href="classarmnn_1_1_layer.xhtml#ad8e15c530c929ab823d89ae9fd2d3f11">GetType</a>() == LayerType::MemImport)</div><div class="line"><a name="l00388"></a><span class="lineno">  388</span>&#160;        {</div><div class="line"><a name="l00389"></a><span class="lineno">  389</span>&#160;            importCount++;</div><div class="line"><a name="l00390"></a><span class="lineno">  390</span>&#160;        }</div><div class="line"><a name="l00391"></a><span class="lineno">  391</span>&#160;    });</div><div class="line"><a name="l00392"></a><span class="lineno">  392</span>&#160;    CHECK(importCount == 1);</div><div class="line"><a name="l00393"></a><span class="lineno">  393</span>&#160;}</div><div class="line"><a name="l00394"></a><span class="lineno">  394</span>&#160;</div><div class="line"><a name="l00395"></a><span class="lineno">  395</span>&#160;TEST_CASE(<span class="stringliteral">&quot;RegisterCopyAndImportFactoryPairTest&quot;</span>)</div><div class="line"><a name="l00396"></a><span class="lineno">  396</span>&#160;{</div><div class="line"><a name="l00397"></a><span class="lineno">  397</span>&#160;    <a class="code" href="classarmnn_1_1_tensor_handle_factory_registry.xhtml">TensorHandleFactoryRegistry</a> registry;</div><div class="line"><a name="l00398"></a><span class="lineno">  398</span>&#160;    <a class="code" href="classarmnn_1_1_i_tensor_handle_factory.xhtml#a32f4aa6a7089d877af08928139c2c277">ITensorHandleFactory::FactoryId</a> copyId = <span class="stringliteral">&quot;CopyFactoryId&quot;</span>;</div><div class="line"><a name="l00399"></a><span class="lineno">  399</span>&#160;    <a class="code" href="classarmnn_1_1_i_tensor_handle_factory.xhtml#a32f4aa6a7089d877af08928139c2c277">ITensorHandleFactory::FactoryId</a> importId = <span class="stringliteral">&quot;ImportFactoryId&quot;</span>;</div><div class="line"><a name="l00400"></a><span class="lineno">  400</span>&#160;    registry.<a class="code" href="classarmnn_1_1_tensor_handle_factory_registry.xhtml#afae069d084e8541c8970d17d26011ac6">RegisterCopyAndImportFactoryPair</a>(copyId, importId);</div><div class="line"><a name="l00401"></a><span class="lineno">  401</span>&#160;</div><div class="line"><a name="l00402"></a><span class="lineno">  402</span>&#160;    <span class="comment">// Get mathing import factory id correctly</span></div><div class="line"><a name="l00403"></a><span class="lineno">  403</span>&#160;    CHECK((registry.<a class="code" href="classarmnn_1_1_tensor_handle_factory_registry.xhtml#aeef3a1178e2dfe2ca2461d89cd47fff6">GetMatchingImportFactoryId</a>(copyId) == importId));</div><div class="line"><a name="l00404"></a><span class="lineno">  404</span>&#160;</div><div class="line"><a name="l00405"></a><span class="lineno">  405</span>&#160;    <span class="comment">// Return empty id when Invalid Id is given</span></div><div class="line"><a name="l00406"></a><span class="lineno">  406</span>&#160;    CHECK((registry.<a class="code" href="classarmnn_1_1_tensor_handle_factory_registry.xhtml#aeef3a1178e2dfe2ca2461d89cd47fff6">GetMatchingImportFactoryId</a>(<span class="stringliteral">&quot;InvalidFactoryId&quot;</span>) == <span class="stringliteral">&quot;&quot;</span>));</div><div class="line"><a name="l00407"></a><span class="lineno">  407</span>&#160;}</div><div class="line"><a name="l00408"></a><span class="lineno">  408</span>&#160;</div><div class="line"><a name="l00409"></a><span class="lineno">  409</span>&#160;}</div><div class="ttc" id="classarmnn_1_1_graph_xhtml_a7563c5b899e7d0ada08fd0fdb202f205"><div class="ttname"><a href="classarmnn_1_1_graph.xhtml#a7563c5b899e7d0ada08fd0fdb202f205">armnn::Graph::AddLayer</a></div><div class="ttdeci">LayerT * AddLayer(Args &amp;&amp;... args)</div><div class="ttdoc">Adds a new layer, of type LayerType, to the graph constructed with the arguments passed. </div><div class="ttdef"><b>Definition:</b> <a href="_graph_8hpp_source.xhtml#l00425">Graph.hpp:425</a></div></div>
<div class="ttc" id="classarmnn_1_1_output_slot_xhtml_adcfb97035799ea4c043f9ef370714815"><div class="ttname"><a href="classarmnn_1_1_output_slot.xhtml#adcfb97035799ea4c043f9ef370714815">armnn::OutputSlot::Connect</a></div><div class="ttdeci">int Connect(InputSlot &amp;destination)</div><div class="ttdef"><b>Definition:</b> <a href="_layer_8cpp_source.xhtml#l00112">Layer.cpp:112</a></div></div>
<div class="ttc" id="classarmnn_1_1_output_slot_xhtml_a5b481a458c19fd3807b6e04b94b9b174"><div class="ttname"><a href="classarmnn_1_1_output_slot.xhtml#a5b481a458c19fd3807b6e04b94b9b174">armnn::OutputSlot::GetEdgeStrategyForConnection</a></div><div class="ttdeci">EdgeStrategy GetEdgeStrategyForConnection(unsigned int connectionIdx) const</div><div class="ttdef"><b>Definition:</b> <a href="_layer_8cpp_source.xhtml#l00215">Layer.cpp:215</a></div></div>
<div class="ttc" id="classarmnn_1_1_layer_xhtml_a3f6ad59212fa8a47c9265162fff8a274"><div class="ttname"><a href="classarmnn_1_1_layer.xhtml#a3f6ad59212fa8a47c9265162fff8a274">armnn::Layer::SetBackendId</a></div><div class="ttdeci">void SetBackendId(const BackendId &amp;id)</div><div class="ttdef"><b>Definition:</b> <a href="_layer_8hpp_source.xhtml#l00276">Layer.hpp:276</a></div></div>
<div class="ttc" id="classarmnn_1_1_tensor_handle_factory_registry_xhtml_afae069d084e8541c8970d17d26011ac6"><div class="ttname"><a href="classarmnn_1_1_tensor_handle_factory_registry.xhtml#afae069d084e8541c8970d17d26011ac6">armnn::TensorHandleFactoryRegistry::RegisterCopyAndImportFactoryPair</a></div><div class="ttdeci">void RegisterCopyAndImportFactoryPair(ITensorHandleFactory::FactoryId copyFactoryId, ITensorHandleFactory::FactoryId importFactoryId)</div><div class="ttdoc">Register a pair of TensorHandleFactory Id for Memory Copy and TensorHandleFactory Id for Memory Impor...</div><div class="ttdef"><b>Definition:</b> <a href="_tensor_handle_factory_registry_8cpp_source.xhtml#l00066">TensorHandleFactoryRegistry.cpp:66</a></div></div>
<div class="ttc" id="classarmnn_1_1_layer_xhtml_acf8b8e23bf647836592982f97088d375"><div class="ttname"><a href="classarmnn_1_1_layer.xhtml#acf8b8e23bf647836592982f97088d375">armnn::Layer::GetInputSlot</a></div><div class="ttdeci">const InputSlot &amp; GetInputSlot(unsigned int index) const override</div><div class="ttdoc">Get a const input slot handle by slot index. </div><div class="ttdef"><b>Definition:</b> <a href="_layer_8hpp_source.xhtml#l00322">Layer.hpp:322</a></div></div>
<div class="ttc" id="classarmnn_1_1_output_layer_xhtml"><div class="ttname"><a href="classarmnn_1_1_output_layer.xhtml">armnn::OutputLayer</a></div><div class="ttdoc">A layer user-provided data can be bound to (e.g. inputs, outputs). </div><div class="ttdef"><b>Definition:</b> <a href="_output_layer_8hpp_source.xhtml#l00013">OutputLayer.hpp:13</a></div></div>
<div class="ttc" id="classarmnn_1_1_graph_xhtml_ad6521013ad981519904822f2ada2c4ec"><div class="ttname"><a href="classarmnn_1_1_graph.xhtml#ad6521013ad981519904822f2ada2c4ec">armnn::Graph::ForEachLayer</a></div><div class="ttdeci">void ForEachLayer(Func func) const</div><div class="ttdef"><b>Definition:</b> <a href="_graph_8hpp_source.xhtml#l00040">Graph.hpp:40</a></div></div>
<div class="ttc" id="classarmnn_1_1_softmax_layer_xhtml"><div class="ttname"><a href="classarmnn_1_1_softmax_layer.xhtml">armnn::SoftmaxLayer</a></div><div class="ttdoc">This layer represents a softmax operation. </div><div class="ttdef"><b>Definition:</b> <a href="_softmax_layer_8hpp_source.xhtml#l00013">SoftmaxLayer.hpp:13</a></div></div>
<div class="ttc" id="classarmnn_1_1_layer_xhtml_ad8e15c530c929ab823d89ae9fd2d3f11"><div class="ttname"><a href="classarmnn_1_1_layer.xhtml#ad8e15c530c929ab823d89ae9fd2d3f11">armnn::Layer::GetType</a></div><div class="ttdeci">LayerType GetType() const override</div><div class="ttdoc">Returns the armnn::LayerType of this layer. </div><div class="ttdef"><b>Definition:</b> <a href="_layer_8hpp_source.xhtml#l00271">Layer.hpp:271</a></div></div>
<div class="ttc" id="classarmnn_1_1_output_slot_xhtml"><div class="ttname"><a href="classarmnn_1_1_output_slot.xhtml">armnn::OutputSlot</a></div><div class="ttdef"><b>Definition:</b> <a href="_layer_8hpp_source.xhtml#l00086">Layer.hpp:86</a></div></div>
<div class="ttc" id="classarmnn_1_1_graph_xhtml"><div class="ttname"><a href="classarmnn_1_1_graph.xhtml">armnn::Graph</a></div><div class="ttdef"><b>Definition:</b> <a href="_graph_8hpp_source.xhtml#l00030">Graph.hpp:30</a></div></div>
<div class="ttc" id="classarmnn_1_1_tensor_handle_factory_registry_xhtml"><div class="ttname"><a href="classarmnn_1_1_tensor_handle_factory_registry.xhtml">armnn::TensorHandleFactoryRegistry</a></div><div class="ttdef"><b>Definition:</b> <a href="_tensor_handle_factory_registry_8hpp_source.xhtml#l00022">TensorHandleFactoryRegistry.hpp:22</a></div></div>
<div class="ttc" id="classarmnn_1_1_tensor_handle_factory_registry_xhtml_aeef3a1178e2dfe2ca2461d89cd47fff6"><div class="ttname"><a href="classarmnn_1_1_tensor_handle_factory_registry.xhtml#aeef3a1178e2dfe2ca2461d89cd47fff6">armnn::TensorHandleFactoryRegistry::GetMatchingImportFactoryId</a></div><div class="ttdeci">ITensorHandleFactory::FactoryId GetMatchingImportFactoryId(ITensorHandleFactory::FactoryId copyFactoryId)</div><div class="ttdoc">Get a matching TensorHandleFatory Id for Memory Import given TensorHandleFactory Id for Memory Copy...</div><div class="ttdef"><b>Definition:</b> <a href="_tensor_handle_factory_registry_8cpp_source.xhtml#l00072">TensorHandleFactoryRegistry.cpp:72</a></div></div>
<div class="ttc" id="classarmnn_1_1_input_layer_xhtml"><div class="ttname"><a href="classarmnn_1_1_input_layer.xhtml">armnn::InputLayer</a></div><div class="ttdoc">A layer user-provided data can be bound to (e.g. inputs, outputs). </div><div class="ttdef"><b>Definition:</b> <a href="_input_layer_8hpp_source.xhtml#l00013">InputLayer.hpp:13</a></div></div>
<div class="ttc" id="classarmnn_1_1_i_tensor_handle_factory_xhtml_a32f4aa6a7089d877af08928139c2c277"><div class="ttname"><a href="classarmnn_1_1_i_tensor_handle_factory.xhtml#a32f4aa6a7089d877af08928139c2c277">armnn::ITensorHandleFactory::FactoryId</a></div><div class="ttdeci">std::string FactoryId</div><div class="ttdef"><b>Definition:</b> <a href="include_2armnn_2backends_2_i_tensor_handle_factory_8hpp_source.xhtml#l00045">ITensorHandleFactory.hpp:45</a></div></div>
<div class="ttc" id="classarmnn_1_1_layer_xhtml_a0e36688a43c35668d8db5257274c68fe"><div class="ttname"><a href="classarmnn_1_1_layer.xhtml#a0e36688a43c35668d8db5257274c68fe">armnn::Layer::GetOutputSlot</a></div><div class="ttdeci">const OutputSlot &amp; GetOutputSlot(unsigned int index=0) const override</div><div class="ttdoc">Get the const output slot handle by slot index. </div><div class="ttdef"><b>Definition:</b> <a href="_layer_8hpp_source.xhtml#l00324">Layer.hpp:324</a></div></div>
<div class="ttc" id="namespacearmnn_xhtml_a86541d11fcad5246a78cbc21d637a504"><div class="ttname"><a href="namespacearmnn.xhtml#a86541d11fcad5246a78cbc21d637a504">armnn::SelectTensorHandleStrategy</a></div><div class="ttdeci">OptimizationResult SelectTensorHandleStrategy(Graph &amp;optGraph, BackendsMap &amp;backends, TensorHandleFactoryRegistry &amp;registry, bool importEnabled, Optional&lt; std::vector&lt; std::string &gt; &amp;&gt; errMessages)</div><div class="ttdef"><b>Definition:</b> <a href="_network_8cpp_source.xhtml#l01601">Network.cpp:1601</a></div></div>
<div class="ttc" id="classarmnn_1_1_output_slot_xhtml_af303cf872a3f95e29992e45224e4cf8e"><div class="ttname"><a href="classarmnn_1_1_output_slot.xhtml#af303cf872a3f95e29992e45224e4cf8e">armnn::OutputSlot::GetTensorHandleFactoryId</a></div><div class="ttdeci">ITensorHandleFactory::FactoryId GetTensorHandleFactoryId() const</div><div class="ttdef"><b>Definition:</b> <a href="_layer_8cpp_source.xhtml#l00205">Layer.cpp:205</a></div></div>
<div class="ttc" id="classarmnn_1_1_graph_xhtml_a9a7209345edfdb2b066b0ceb66414d7c"><div class="ttname"><a href="classarmnn_1_1_graph.xhtml#a9a7209345edfdb2b066b0ceb66414d7c">armnn::Graph::TopologicalSort</a></div><div class="ttdeci">Graph &amp; TopologicalSort()</div><div class="ttdoc">Sorts layers in topological order and return this. </div><div class="ttdef"><b>Definition:</b> <a href="_graph_8hpp_source.xhtml#l00184">Graph.hpp:184</a></div></div>
<div class="ttc" id="structarmnn_1_1_softmax_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_softmax_descriptor.xhtml">armnn::SoftmaxDescriptor</a></div><div class="ttdoc">A SoftmaxDescriptor for the SoftmaxLayer. </div><div class="ttdef"><b>Definition:</b> <a href="_descriptors_8hpp_source.xhtml#l00150">Descriptors.hpp:150</a></div></div>
<div class="ttc" id="classarmnn_1_1_graph_xhtml_ad1bbee7bf5f93b792675886f57d3ebe0"><div class="ttname"><a href="classarmnn_1_1_graph.xhtml#ad1bbee7bf5f93b792675886f57d3ebe0">armnn::Graph::AddCompatibilityLayers</a></div><div class="ttdeci">void AddCompatibilityLayers(std::map&lt; BackendId, std::unique_ptr&lt; class IBackendInternal &gt;&gt; &amp;backends, TensorHandleFactoryRegistry &amp;registry)</div><div class="ttdoc">Modifies the graph in-place, removing edges connecting layers using different compute devices...</div><div class="ttdef"><b>Definition:</b> <a href="_graph_8cpp_source.xhtml#l00303">Graph.cpp:303</a></div></div>
<div class="ttc" id="classarmnn_1_1_layer_xhtml"><div class="ttname"><a href="classarmnn_1_1_layer.xhtml">armnn::Layer</a></div><div class="ttdef"><b>Definition:</b> <a href="_layer_8hpp_source.xhtml#l00215">Layer.hpp:215</a></div></div>
<div class="ttc" id="namespacearmnn_xhtml_a9173495a61a0092b5f38b855f02c3585"><div class="ttname"><a href="namespacearmnn.xhtml#a9173495a61a0092b5f38b855f02c3585">armnn::BackendsMap</a></div><div class="ttdeci">std::map&lt; BackendId, std::unique_ptr&lt; class IBackendInternal &gt; &gt; BackendsMap</div><div class="ttdef"><b>Definition:</b> <a href="_network_8hpp_source.xhtml#l00294">Network.hpp:294</a></div></div>
</div><!-- fragment -->
</div>
</div>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="dir_68267d1309a1af8e8297ef4c3efbcdba.xhtml">src</a></li><li class="navelem"><a class="el" href="dir_e0a84d05c80a2ef4231141dcbbeac5c8.xhtml">armnn</a></li><li class="navelem"><a class="el" href="dir_9d86fd1fbecbedf5bdb69c7e7235fe5f.xhtml">test</a></li><li class="navelem"><a class="el" href="_tensor_handle_strategy_test_8cpp.xhtml">TensorHandleStrategyTest.cpp</a></li>
    <li class="footer">Generated on Tue May 24 2022 11:27:15 for ArmNN by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.13 </li>
  </ul>
</div>
</body>
</html>
