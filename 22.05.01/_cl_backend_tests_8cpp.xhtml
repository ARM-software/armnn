<!-- Copyright (c) 2020 ARM Limited. -->
<!--                                 -->
<!-- SPDX-License-Identifier: MIT    -->
<!--                                 -->
<!-- HTML header for doxygen 1.8.13-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.13"/>
<meta name="robots" content="NOINDEX, NOFOLLOW" />
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>ArmNN: src/backends/cl/test/ClBackendTests.cpp File Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script><script type="text/javascript" src="http://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="stylesheet.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <img alt="ArmNN" src="Arm_NN_horizontal_blue.png" style="max-width: 10rem; margin-top: .5rem; margin-left 10px"/>
  <td style="padding-left: 0.5em;">
   <div id="projectname">
   &#160;<span id="projectnumber">22.05.01</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.13 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
$(document).ready(function(){initNavTree('_cl_backend_tests_8cpp.xhtml','');});
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="summary">
<a href="#func-members">Functions</a>  </div>
  <div class="headertitle">
<div class="title">ClBackendTests.cpp File Reference</div>  </div>
</div><!--header-->
<div class="contents">
<div class="textblock"><code>#include &lt;<a class="el" href="_cl_backend_8hpp_source.xhtml">cl/ClBackend.hpp</a>&gt;</code><br />
<code>#include &lt;<a class="el" href="_cl_tensor_handle_factory_8hpp_source.xhtml">cl/ClTensorHandleFactory.hpp</a>&gt;</code><br />
<code>#include &lt;<a class="el" href="_cl_import_tensor_handle_factory_8hpp_source.xhtml">cl/ClImportTensorHandleFactory.hpp</a>&gt;</code><br />
<code>#include &lt;<a class="el" href="_cl_context_control_fixture_8hpp_source.xhtml">cl/test/ClContextControlFixture.hpp</a>&gt;</code><br />
<code>#include &lt;doctest/doctest.h&gt;</code><br />
</div>
<p><a href="_cl_backend_tests_8cpp_source.xhtml">Go to the source code of this file.</a></p>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="func-members"></a>
Functions</h2></td></tr>
<tr class="memitem:aa921a3ad249c38892409baa0cf6fcf18"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_cl_backend_tests_8cpp.xhtml#aa921a3ad249c38892409baa0cf6fcf18">TEST_SUITE</a> (&quot;ClBackendTests&quot;)</td></tr>
<tr class="separator:aa921a3ad249c38892409baa0cf6fcf18"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<h2 class="groupheader">Function Documentation</h2>
<a id="aa921a3ad249c38892409baa0cf6fcf18"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aa921a3ad249c38892409baa0cf6fcf18">&#9670;&nbsp;</a></span>TEST_SUITE()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">TEST_SUITE </td>
          <td>(</td>
          <td class="paramtype">&quot;ClBackendTests&quot;&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_cl_backend_tests_8cpp_source.xhtml#l00015">15</a> of file <a class="el" href="_cl_backend_tests_8cpp_source.xhtml">ClBackendTests.cpp</a>.</p>

<p class="reference">References <a class="el" href="_cl_tensor_handle_factory_8cpp_source.xhtml#l00093">ClTensorHandleFactory::GetIdStatic()</a>, <a class="el" href="_cl_import_tensor_handle_factory_8cpp_source.xhtml#l00093">ClImportTensorHandleFactory::GetIdStatic()</a>, <a class="el" href="namespacearmnn.xhtml#a14fcd7f88d11cea0a018269dca5f9277a1131a914388fac73e5f07b0ba0aad523">armnn::Malloc</a>, and <a class="el" href="_mem_copy_tests_8cpp_source.xhtml#l00089">TEST_CASE_FIXTURE()</a>.</p>
<div class="fragment"><div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;{</div><div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;TEST_CASE(<span class="stringliteral">&quot;ClRegisterTensorHandleFactoriesMatchingImportFactoryId&quot;</span>)</div><div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;{</div><div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;    <span class="keyword">auto</span> clBackend = std::make_unique&lt;ClBackend&gt;();</div><div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;    <a class="code" href="classarmnn_1_1_tensor_handle_factory_registry.xhtml">TensorHandleFactoryRegistry</a> registry;</div><div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;    clBackend-&gt;RegisterTensorHandleFactories(registry);</div><div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;</div><div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;    <span class="comment">// When calling RegisterTensorHandleFactories, CopyAndImportFactoryPair is registered</span></div><div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;    <span class="comment">// Get ClImportTensorHandleFactory id as the matching import factory id</span></div><div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;    CHECK((registry.GetMatchingImportFactoryId(ClTensorHandleFactory::GetIdStatic()) ==</div><div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;           ClImportTensorHandleFactory::GetIdStatic()));</div><div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;}</div><div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;</div><div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;TEST_CASE(<span class="stringliteral">&quot;ClRegisterTensorHandleFactoriesWithMemorySourceFlagsMatchingImportFactoryId&quot;</span>)</div><div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;{</div><div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;    <span class="keyword">auto</span> clBackend = std::make_unique&lt;ClBackend&gt;();</div><div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;    <a class="code" href="classarmnn_1_1_tensor_handle_factory_registry.xhtml">TensorHandleFactoryRegistry</a> registry;</div><div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;    clBackend-&gt;RegisterTensorHandleFactories(registry,</div><div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;                                             static_cast&lt;MemorySourceFlags&gt;(MemorySource::Malloc),</div><div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;                                             static_cast&lt;MemorySourceFlags&gt;(MemorySource::Malloc));</div><div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;</div><div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;    <span class="comment">// When calling RegisterTensorHandleFactories with MemorySourceFlags, CopyAndImportFactoryPair is registered</span></div><div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;    <span class="comment">// Get ClImportTensorHandleFactory id as the matching import factory id</span></div><div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;    CHECK((registry.GetMatchingImportFactoryId(ClTensorHandleFactory::GetIdStatic()) ==</div><div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;           ClImportTensorHandleFactory::GetIdStatic()));</div><div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;}</div><div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;</div><div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;<a class="code" href="_mem_copy_tests_8cpp.xhtml#a3df1acc0ccc35bce0bd6c027e23e2c45">TEST_CASE_FIXTURE</a>(<a class="code" href="struct_cl_context_control_fixture_base.xhtml">ClContextControlFixture</a>, <span class="stringliteral">&quot;ClCreateWorkloadFactoryMatchingImportFactoryId&quot;</span>)</div><div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;{</div><div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;    <span class="keyword">auto</span> clBackend = std::make_unique&lt;ClBackend&gt;();</div><div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;    <a class="code" href="classarmnn_1_1_tensor_handle_factory_registry.xhtml">TensorHandleFactoryRegistry</a> registry;</div><div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;    clBackend-&gt;CreateWorkloadFactory(registry);</div><div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;</div><div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;    <span class="comment">// When calling CreateWorkloadFactory, CopyAndImportFactoryPair is registered</span></div><div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;    <span class="comment">// Get ClImportTensorHandleFactory id as the matching import factory id</span></div><div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;    CHECK((registry.GetMatchingImportFactoryId(ClTensorHandleFactory::GetIdStatic()) ==</div><div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;           ClImportTensorHandleFactory::GetIdStatic()));</div><div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;}</div><div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;</div><div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;<a class="code" href="_mem_copy_tests_8cpp.xhtml#a3df1acc0ccc35bce0bd6c027e23e2c45">TEST_CASE_FIXTURE</a>(<a class="code" href="struct_cl_context_control_fixture_base.xhtml">ClContextControlFixture</a>, <span class="stringliteral">&quot;ClCreateWorkloadFactoryWithOptionsMatchingImportFactoryId&quot;</span>)</div><div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;{</div><div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;    <span class="keyword">auto</span> clBackend = std::make_unique&lt;ClBackend&gt;();</div><div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;    <a class="code" href="classarmnn_1_1_tensor_handle_factory_registry.xhtml">TensorHandleFactoryRegistry</a> registry;</div><div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;    <a class="code" href="namespacearmnn.xhtml#a5b6893cda5b69359a4244c06054da18f">ModelOptions</a> modelOptions;</div><div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;    clBackend-&gt;CreateWorkloadFactory(registry, modelOptions);</div><div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;</div><div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;    <span class="comment">// When calling CreateWorkloadFactory with ModelOptions, CopyAndImportFactoryPair is registered</span></div><div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;    <span class="comment">// Get ClImportTensorHandleFactory id as the matching import factory id</span></div><div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;    CHECK((registry.GetMatchingImportFactoryId(ClTensorHandleFactory::GetIdStatic()) ==</div><div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;           ClImportTensorHandleFactory::GetIdStatic()));</div><div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;}</div><div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;</div><div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;<a class="code" href="_mem_copy_tests_8cpp.xhtml#a3df1acc0ccc35bce0bd6c027e23e2c45">TEST_CASE_FIXTURE</a>(<a class="code" href="struct_cl_context_control_fixture_base.xhtml">ClContextControlFixture</a>, <span class="stringliteral">&quot;ClCreateWorkloadFactoryWitMemoryFlagsMatchingImportFactoryId&quot;</span>)</div><div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;{</div><div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;    <span class="keyword">auto</span> clBackend = std::make_unique&lt;ClBackend&gt;();</div><div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;    <a class="code" href="classarmnn_1_1_tensor_handle_factory_registry.xhtml">TensorHandleFactoryRegistry</a> registry;</div><div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;    <a class="code" href="namespacearmnn.xhtml#a5b6893cda5b69359a4244c06054da18f">ModelOptions</a> modelOptions;</div><div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;    clBackend-&gt;CreateWorkloadFactory(registry, modelOptions,</div><div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;                                     static_cast&lt;MemorySourceFlags&gt;(MemorySource::Malloc),</div><div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;                                     static_cast&lt;MemorySourceFlags&gt;(MemorySource::Malloc));</div><div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;</div><div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;    <span class="comment">// When calling CreateWorkloadFactory with ModelOptions and MemorySourceFlags,</span></div><div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;    <span class="comment">// CopyAndImportFactoryPair is registered</span></div><div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;    <span class="comment">// Get ClImportTensorHandleFactory id as the matching import factory id</span></div><div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;    CHECK((registry.GetMatchingImportFactoryId(ClTensorHandleFactory::GetIdStatic()) ==</div><div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;           ClImportTensorHandleFactory::GetIdStatic()));</div><div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;}</div><div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;}</div><div class="ttc" id="namespacearmnn_xhtml_a5b6893cda5b69359a4244c06054da18f"><div class="ttname"><a href="namespacearmnn.xhtml#a5b6893cda5b69359a4244c06054da18f">armnn::ModelOptions</a></div><div class="ttdeci">std::vector&lt; BackendOptions &gt; ModelOptions</div><div class="ttdef"><b>Definition:</b> <a href="_backend_options_8hpp_source.xhtml#l00018">BackendOptions.hpp:18</a></div></div>
<div class="ttc" id="_mem_copy_tests_8cpp_xhtml_a3df1acc0ccc35bce0bd6c027e23e2c45"><div class="ttname"><a href="_mem_copy_tests_8cpp.xhtml#a3df1acc0ccc35bce0bd6c027e23e2c45">TEST_CASE_FIXTURE</a></div><div class="ttdeci">TEST_CASE_FIXTURE(ClContextControlFixture, &quot;CopyBetweenNeonAndGpu&quot;)</div><div class="ttdef"><b>Definition:</b> <a href="_mem_copy_tests_8cpp_source.xhtml#l00089">MemCopyTests.cpp:89</a></div></div>
<div class="ttc" id="classarmnn_1_1_tensor_handle_factory_registry_xhtml"><div class="ttname"><a href="classarmnn_1_1_tensor_handle_factory_registry.xhtml">armnn::TensorHandleFactoryRegistry</a></div><div class="ttdef"><b>Definition:</b> <a href="_tensor_handle_factory_registry_8hpp_source.xhtml#l00022">TensorHandleFactoryRegistry.hpp:22</a></div></div>
<div class="ttc" id="struct_cl_context_control_fixture_base_xhtml"><div class="ttname"><a href="struct_cl_context_control_fixture_base.xhtml">ClContextControlFixtureBase</a></div><div class="ttdef"><b>Definition:</b> <a href="_cl_context_control_fixture_8hpp_source.xhtml#l00012">ClContextControlFixture.hpp:12</a></div></div>
</div><!-- fragment -->
</div>
</div>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="dir_68267d1309a1af8e8297ef4c3efbcdba.xhtml">src</a></li><li class="navelem"><a class="el" href="dir_0f3cdec46afbc61a1ded8e1687c9c9a0.xhtml">backends</a></li><li class="navelem"><a class="el" href="dir_1ad86c6d39ab715a831555571b9e98a5.xhtml">cl</a></li><li class="navelem"><a class="el" href="dir_02bab2737bbb2fb3882a0be567244fbf.xhtml">test</a></li><li class="navelem"><a class="el" href="_cl_backend_tests_8cpp.xhtml">ClBackendTests.cpp</a></li>
    <li class="footer">Generated on Fri Jun 17 2022 13:20:27 for ArmNN by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.13 </li>
  </ul>
</div>
</body>
</html>
