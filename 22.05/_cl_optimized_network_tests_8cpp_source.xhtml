<!-- Copyright (c) 2020 ARM Limited. -->
<!--                                 -->
<!-- SPDX-License-Identifier: MIT    -->
<!--                                 -->
<!-- HTML header for doxygen 1.8.13-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.13"/>
<meta name="robots" content="NOINDEX, NOFOLLOW" />
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>ArmNN: src/backends/cl/test/ClOptimizedNetworkTests.cpp Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script><script type="text/javascript" src="http://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="stylesheet.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <img alt="ArmNN" src="Arm_NN_horizontal_blue.png" style="max-width: 10rem; margin-top: .5rem; margin-left 10px"/>
  <td style="padding-left: 0.5em;">
   <div id="projectname">
   &#160;<span id="projectnumber">22.05</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.13 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
$(document).ready(function(){initNavTree('_cl_optimized_network_tests_8cpp_source.xhtml','');});
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="headertitle">
<div class="title">ClOptimizedNetworkTests.cpp</div>  </div>
</div><!--header-->
<div class="contents">
<a href="_cl_optimized_network_tests_8cpp.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="comment">//</span></div><div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="comment">// Copyright Â© 2017 Arm Ltd. All rights reserved.</span></div><div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="comment">// SPDX-License-Identifier: MIT</span></div><div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="comment">//</span></div><div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;</div><div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_cl_workload_factory_helper_8hpp.xhtml">ClWorkloadFactoryHelper.hpp</a>&quot;</span></div><div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;</div><div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="preprocessor">#include &lt;<a class="code" href="_network_8hpp.xhtml">Network.hpp</a>&gt;</span></div><div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;</div><div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="preprocessor">#include &lt;GraphUtils.hpp&gt;</span></div><div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;</div><div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;<span class="preprocessor">#include &lt;<a class="code" href="_cl_workload_factory_8hpp.xhtml">cl/ClWorkloadFactory.hpp</a>&gt;</span></div><div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;<span class="preprocessor">#include &lt;<a class="code" href="_cl_backend_context_8hpp.xhtml">cl/ClBackendContext.hpp</a>&gt;</span></div><div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;</div><div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;<span class="preprocessor">#include &lt;<a class="code" href="_filesystem_8hpp.xhtml">armnnUtils/Filesystem.hpp</a>&gt;</span></div><div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;</div><div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;<span class="preprocessor">#include &lt;doctest/doctest.h&gt;</span></div><div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;</div><div class="line"><a name="l00019"></a><span class="lineno"><a class="line" href="_cl_optimized_network_tests_8cpp.xhtml#a4fec0d6ac33699a90bb0edbfa390c886">   19</a></span>&#160;<a class="code" href="_cl_optimized_network_tests_8cpp.xhtml#a4fec0d6ac33699a90bb0edbfa390c886">TEST_SUITE</a>(<span class="stringliteral">&quot;ClOptimizedNetwork&quot;</span>)</div><div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;{</div><div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;TEST_CASE(<span class="stringliteral">&quot;OptimizeValidateGpuDeviceSupportLayerNoFallback&quot;</span>)</div><div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;{</div><div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;    <span class="comment">// build up the structure of the network</span></div><div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;    <a class="code" href="namespacearmnn.xhtml#ace74f6f9feb95a964a49d79458232703">armnn::INetworkPtr</a> net(<a class="code" href="classarmnn_1_1_i_network.xhtml#a464f0ff87b1aabf71febaa71321dd40b">armnn::INetwork::Create</a>());</div><div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;</div><div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;    <a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml">armnn::IConnectableLayer</a>* input  = net-&gt;AddInputLayer(0);</div><div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;    <a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml">armnn::IConnectableLayer</a>* output = net-&gt;AddOutputLayer(0);</div><div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;</div><div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;    input-&gt;<a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml#a80ac4eda2e7f2757ec9dd96fc96dbd16">GetOutputSlot</a>(0).<a class="code" href="classarmnn_1_1_i_output_slot.xhtml#ac1835f8756a9f03c02fcf9664e3a0fce">Connect</a>(output-&gt;<a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml#a6ec9e0eb66d7d6a01240492a0b18104c">GetInputSlot</a>(0));</div><div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;    input-&gt;<a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml#a80ac4eda2e7f2757ec9dd96fc96dbd16">GetOutputSlot</a>(0).<a class="code" href="classarmnn_1_1_i_output_slot.xhtml#a5ee4a6c9a2481245487b1b1a70d20fd0">SetTensorInfo</a>(<a class="code" href="classarmnn_1_1_tensor_info.xhtml">armnn::TensorInfo</a>({ 1, 1, 4, 4 }, <a class="code" href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a166495adc0d0f53bee6baecc577f5204">armnn::DataType::Float32</a>));</div><div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;</div><div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;    <a class="code" href="structarmnn_1_1_i_runtime_1_1_creation_options.xhtml">armnn::IRuntime::CreationOptions</a> options;</div><div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;    <a class="code" href="namespacearmnn.xhtml#a150468a02bd7b2d2d061c4aaaee939f0">armnn::IRuntimePtr</a> runtime(<a class="code" href="classarmnn_1_1_i_runtime.xhtml#ad44ecd3700748dc30dc4bbe34ba5bde7">armnn::IRuntime::Create</a>(options));</div><div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;</div><div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;    std::vector&lt;armnn::BackendId&gt; backends = { <a class="code" href="namespacearmnn.xhtml#ae2f04a162585c0a5222a537efd5456aeafaa4524e3df19ada32643ce9a222362b">armnn::Compute::GpuAcc</a> };</div><div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;    <a class="code" href="namespacearmnn.xhtml#a674efcf6cbdb9e831d653ff0e821fb38">armnn::IOptimizedNetworkPtr</a> optNet = <a class="code" href="namespacearmnn.xhtml#a82e98ef05fd67036d1195ba17174d685">armnn::Optimize</a>(*net, backends, runtime-&gt;GetDeviceSpec());</div><div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;    CHECK(optNet);</div><div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;    <span class="comment">// validate workloads</span></div><div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;    <a class="code" href="classarmnn_1_1_cl_workload_factory.xhtml">armnn::ClWorkloadFactory</a> fact =</div><div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;        ClWorkloadFactoryHelper::GetFactory(ClWorkloadFactoryHelper::GetMemoryManager());</div><div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;</div><div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;    <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_graph.xhtml">armnn::Graph</a>&amp; theGraph = <a class="code" href="namespacearmnn.xhtml#a6a2659750d6161b693d0e51616791959">GetGraphForTesting</a>(optNet.get());</div><div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;    <span class="keywordflow">for</span> (<span class="keyword">auto</span>&amp;&amp; layer : theGraph)</div><div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;    {</div><div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;        CHECK(layer-&gt;GetBackendId() == <a class="code" href="namespacearmnn.xhtml#ae2f04a162585c0a5222a537efd5456aeafaa4524e3df19ada32643ce9a222362b">armnn::Compute::GpuAcc</a>);</div><div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;        CHECK_NOTHROW(</div><div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;            layer-&gt;CreateWorkload(fact));</div><div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;    }</div><div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;}</div><div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;</div><div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;TEST_CASE(<span class="stringliteral">&quot;FP16TurboModeTestOnGpuAcc&quot;</span>)</div><div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;{</div><div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;    <span class="comment">// Test to check when Fp16 Turbo mode set</span></div><div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;    <span class="comment">// it converts the Fp32 network to Fp16 Network</span></div><div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;    <span class="comment">// add Fp32ToFp16 conversion layer after the InputLayer</span></div><div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;    <span class="comment">// add Fp16ToFp32 conversion layer after the OutputLayer</span></div><div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;    <span class="comment">// checks the other layers if they are supported in Fp16</span></div><div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;    <span class="comment">// if they are not put the conversion layers before and after</span></div><div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;    <span class="comment">// if they are not supported in Fp16 use Fp32 instead</span></div><div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;    <span class="comment">// if there are inverse conversion layers remove them with optimization</span></div><div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;    <span class="comment">// at the moment FloorLayer is not supported in Fp16 so it rolls back to Fp32</span></div><div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;    <span class="comment">// and inverse conversion layers are removed by the optimizer</span></div><div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;    <a class="code" href="namespacearmnn.xhtml#ace74f6f9feb95a964a49d79458232703">armnn::INetworkPtr</a> net(<a class="code" href="classarmnn_1_1_i_network.xhtml#a464f0ff87b1aabf71febaa71321dd40b">armnn::INetwork::Create</a>());</div><div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;</div><div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;    <span class="comment">// Defines layers.</span></div><div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;    <span class="keyword">auto</span> input = net-&gt;AddInputLayer(0, <span class="stringliteral">&quot;input layer&quot;</span>);</div><div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;    <span class="comment">// ReLu1</span></div><div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;    <a class="code" href="structarmnn_1_1_activation_descriptor.xhtml">armnn::ActivationDescriptor</a> activation1Descriptor;</div><div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;    activation1Descriptor.<a class="code" href="structarmnn_1_1_activation_descriptor.xhtml#af10fa7883e3579950f477bee92a64844">m_Function</a> = <a class="code" href="namespacearmnn.xhtml#a56297e0f7b215eea46c818cb7528d9eaabc5a0f0d6e7cf7fca73299dcd46c0f0d">armnn::ActivationFunction::BoundedReLu</a>;</div><div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;    activation1Descriptor.<a class="code" href="structarmnn_1_1_activation_descriptor.xhtml#a017b2990003a014234f13e999dc7c689">m_A</a> = 1.f;</div><div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;    activation1Descriptor.<a class="code" href="structarmnn_1_1_activation_descriptor.xhtml#a28c4c9cb15f6be3499abbc46b356060b">m_B</a> = -1.f;</div><div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;    <span class="keyword">auto</span> activation = net-&gt;AddActivationLayer(activation1Descriptor, <span class="stringliteral">&quot;activation layer&quot;</span>);</div><div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;    <span class="keyword">auto</span> output = net-&gt;AddOutputLayer(0, <span class="stringliteral">&quot;output layer&quot;</span>);</div><div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;</div><div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;    <span class="comment">// Connects layers.</span></div><div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;    input-&gt;GetOutputSlot(0).Connect(activation-&gt;GetInputSlot(0));</div><div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;    activation-&gt;GetOutputSlot(0).Connect(output-&gt;GetInputSlot(0));</div><div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;</div><div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;    <a class="code" href="classarmnn_1_1_tensor_shape.xhtml">armnn::TensorShape</a> shape({4});</div><div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;    <a class="code" href="classarmnn_1_1_tensor_info.xhtml">armnn::TensorInfo</a> info(shape, <a class="code" href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a166495adc0d0f53bee6baecc577f5204">armnn::DataType::Float32</a>);</div><div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;    input-&gt;GetOutputSlot(0).SetTensorInfo(info);</div><div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;    activation-&gt;GetOutputSlot(0).SetTensorInfo(info);</div><div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;</div><div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;    <a class="code" href="structarmnn_1_1_i_runtime_1_1_creation_options.xhtml">armnn::IRuntime::CreationOptions</a> options;</div><div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;    <a class="code" href="namespacearmnn.xhtml#a150468a02bd7b2d2d061c4aaaee939f0">armnn::IRuntimePtr</a> runtime(<a class="code" href="classarmnn_1_1_i_runtime.xhtml#ad44ecd3700748dc30dc4bbe34ba5bde7">armnn::IRuntime::Create</a>(options));</div><div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;</div><div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;    std::vector&lt;armnn::BackendId&gt; backends = {<a class="code" href="namespacearmnn.xhtml#ae2f04a162585c0a5222a537efd5456aeafaa4524e3df19ada32643ce9a222362b">armnn::Compute::GpuAcc</a>};</div><div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;</div><div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;    <a class="code" href="structarmnn_1_1_optimizer_options.xhtml">armnn::OptimizerOptions</a> optimizerOptions;</div><div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;    optimizerOptions.<a class="code" href="structarmnn_1_1_optimizer_options.xhtml#a6e1a42622ca43dafc7ba8e684c016eb4">m_ReduceFp32ToFp16</a> = <span class="keyword">true</span>;</div><div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;</div><div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;    <a class="code" href="namespacearmnn.xhtml#a674efcf6cbdb9e831d653ff0e821fb38">armnn::IOptimizedNetworkPtr</a> optimizedNet = <a class="code" href="namespacearmnn.xhtml#a82e98ef05fd67036d1195ba17174d685">armnn::Optimize</a>(</div><div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;            *net, backends, runtime-&gt;GetDeviceSpec(), optimizerOptions);</div><div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;</div><div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;    <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_graph.xhtml">armnn::Graph</a>&amp; graph = <a class="code" href="namespacearmnn.xhtml#a6a2659750d6161b693d0e51616791959">GetGraphForTesting</a>(optimizedNet.get());</div><div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;</div><div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;    <span class="comment">// Tests that all layers are present in the graph.</span></div><div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;    CHECK(graph.GetNumLayers() == 5);</div><div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;</div><div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;    <span class="comment">// Tests that the vertices exist and have correct names.</span></div><div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;    CHECK(<a class="code" href="_graph_utils_8cpp.xhtml#ac73a43305233b7e5f70debdb2d14a8d3">GraphHasNamedLayer</a>(graph, <span class="stringliteral">&quot;input layer&quot;</span>));</div><div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;    CHECK(<a class="code" href="_graph_utils_8cpp.xhtml#ac73a43305233b7e5f70debdb2d14a8d3">GraphHasNamedLayer</a>(graph, <span class="stringliteral">&quot;convert_fp32_to_fp16-0-input layer&quot;</span>));</div><div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;    CHECK(<a class="code" href="_graph_utils_8cpp.xhtml#ac73a43305233b7e5f70debdb2d14a8d3">GraphHasNamedLayer</a>(graph, <span class="stringliteral">&quot;activation layer&quot;</span>));</div><div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;    CHECK(<a class="code" href="_graph_utils_8cpp.xhtml#ac73a43305233b7e5f70debdb2d14a8d3">GraphHasNamedLayer</a>(graph, <span class="stringliteral">&quot;convert_fp16_to_fp32-0-output layer&quot;</span>));</div><div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;    CHECK(<a class="code" href="_graph_utils_8cpp.xhtml#ac73a43305233b7e5f70debdb2d14a8d3">GraphHasNamedLayer</a>(graph, <span class="stringliteral">&quot;output layer&quot;</span>));</div><div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;}</div><div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;</div><div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;TEST_CASE(<span class="stringliteral">&quot;FastMathEnabledTestOnGpuAcc&quot;</span>)</div><div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;{</div><div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;    <a class="code" href="namespacearmnn.xhtml#ace74f6f9feb95a964a49d79458232703">armnn::INetworkPtr</a> net(<a class="code" href="classarmnn_1_1_i_network.xhtml#a464f0ff87b1aabf71febaa71321dd40b">armnn::INetwork::Create</a>());</div><div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;</div><div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;    <a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml">armnn::IConnectableLayer</a>* input  = net-&gt;AddInputLayer(0);</div><div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;    <a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml">armnn::IConnectableLayer</a>* output = net-&gt;AddOutputLayer(0);</div><div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;</div><div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;    input-&gt;<a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml#a80ac4eda2e7f2757ec9dd96fc96dbd16">GetOutputSlot</a>(0).<a class="code" href="classarmnn_1_1_i_output_slot.xhtml#ac1835f8756a9f03c02fcf9664e3a0fce">Connect</a>(output-&gt;<a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml#a6ec9e0eb66d7d6a01240492a0b18104c">GetInputSlot</a>(0));</div><div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;    input-&gt;<a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml#a80ac4eda2e7f2757ec9dd96fc96dbd16">GetOutputSlot</a>(0).<a class="code" href="classarmnn_1_1_i_output_slot.xhtml#a5ee4a6c9a2481245487b1b1a70d20fd0">SetTensorInfo</a>(<a class="code" href="classarmnn_1_1_tensor_info.xhtml">armnn::TensorInfo</a>({ 1, 1, 4, 4 }, <a class="code" href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a166495adc0d0f53bee6baecc577f5204">armnn::DataType::Float32</a>));</div><div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;</div><div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;    <a class="code" href="structarmnn_1_1_i_runtime_1_1_creation_options.xhtml">armnn::IRuntime::CreationOptions</a> options;</div><div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;    <a class="code" href="namespacearmnn.xhtml#a150468a02bd7b2d2d061c4aaaee939f0">armnn::IRuntimePtr</a> runtime(<a class="code" href="classarmnn_1_1_i_runtime.xhtml#ad44ecd3700748dc30dc4bbe34ba5bde7">armnn::IRuntime::Create</a>(options));</div><div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;</div><div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;    std::vector&lt;armnn::BackendId&gt; backends = {<a class="code" href="namespacearmnn.xhtml#ae2f04a162585c0a5222a537efd5456aeafaa4524e3df19ada32643ce9a222362b">armnn::Compute::GpuAcc</a>};</div><div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;    <a class="code" href="structarmnn_1_1_optimizer_options.xhtml">armnn::OptimizerOptions</a> optimizerOptions;</div><div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;    <a class="code" href="structarmnn_1_1_backend_options.xhtml">armnn::BackendOptions</a> modelOptions(<span class="stringliteral">&quot;GpuAcc&quot;</span>, {{<span class="stringliteral">&quot;FastMathEnabled&quot;</span>, <span class="keyword">true</span>}});</div><div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;    optimizerOptions.<a class="code" href="structarmnn_1_1_optimizer_options.xhtml#a71194277c60153a5f86539f5d39f01db">m_ModelOptions</a>.push_back(modelOptions);</div><div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;</div><div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;    <a class="code" href="namespacearmnn.xhtml#a674efcf6cbdb9e831d653ff0e821fb38">armnn::IOptimizedNetworkPtr</a> optimizedNet = <a class="code" href="namespacearmnn.xhtml#a82e98ef05fd67036d1195ba17174d685">armnn::Optimize</a>(</div><div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;    *net, backends, runtime-&gt;GetDeviceSpec(), optimizerOptions);</div><div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;</div><div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;    CHECK(optimizedNet);</div><div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;</div><div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;    <span class="keyword">auto</span> modelOptionsOut = <a class="code" href="namespacearmnn.xhtml#ac8c5f9574593b4623d4850f5fd26e3cc">GetModelOptionsForTesting</a>(optimizedNet.get());</div><div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;</div><div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;    CHECK(modelOptionsOut.size() == 1);</div><div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;    CHECK(modelOptionsOut[0].GetOption(0).GetName() == <span class="stringliteral">&quot;FastMathEnabled&quot;</span>);</div><div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;    CHECK(modelOptionsOut[0].GetOption(0).GetValue().AsBool() == <span class="keyword">true</span>);</div><div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;}</div><div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;</div><div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;TEST_CASE(<span class="stringliteral">&quot;CheckMLGOTuningFile&quot;</span>)</div><div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;{</div><div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;    <span class="keyword">class </span>ClBackendContextTestClass : <span class="keyword">public</span> <a class="code" href="classarmnn_1_1_cl_backend_context.xhtml">armnn::ClBackendContext</a></div><div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;    {</div><div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;    <span class="keyword">public</span>:</div><div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;        ClBackendContextTestClass(<span class="keyword">const</span> <a class="code" href="structarmnn_1_1_i_runtime_1_1_creation_options.xhtml">armnn::IRuntime::CreationOptions</a> &amp;options) : <a class="code" href="classarmnn_1_1_cl_backend_context.xhtml#a46628231c197cb066ddf3fe676b44038">ClBackendContext</a>(options)</div><div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;        {}</div><div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;</div><div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;        <span class="keywordtype">bool</span> call_reload_from_file()</div><div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;        {</div><div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;            <span class="keywordflow">return</span> m_MLGOTuner.reload_from_file(m_MLGOTuningFile);</div><div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;        }</div><div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;    };</div><div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;</div><div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;    <span class="keyword">const</span> std::string validText{</div><div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;            <span class="stringliteral">&quot;&lt;header&gt;\n&quot;</span></div><div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;            <span class="stringliteral">&quot;gemm-version, [1,2,1]\n&quot;</span></div><div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;            <span class="stringliteral">&quot;ip-type,gpu\n&quot;</span></div><div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;            <span class="stringliteral">&quot;&lt;/header&gt;\n&quot;</span></div><div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160;            <span class="stringliteral">&quot;&lt;heuristics-table&gt;\n&quot;</span></div><div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;            <span class="stringliteral">&quot;0, g71 , 8, f32, best-performance, static, gemm-type, [m,n,k,n]\n&quot;</span></div><div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160;            <span class="stringliteral">&quot;1, g71 , 8, f32, best-performance, static, gemm-config-reshaped-only-rhs, [m,n,k,n]\n&quot;</span></div><div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160;            <span class="stringliteral">&quot;2, g71 , 8, f32, best-performance, static, gemm-config-reshaped, [m,n,k,n]\n&quot;</span></div><div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160;            <span class="stringliteral">&quot;3, g71 , 8, qasymm8, best-performance, static, gemm-type, [m,n,k,n]\n&quot;</span></div><div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160;            <span class="stringliteral">&quot;4, g71 , 8, qasymm8, best-performance, static, gemm-config-reshaped-only-rhs, [m,n,k,n]\n&quot;</span></div><div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160;            <span class="stringliteral">&quot;5, g71 , 8, qasymm8, best-performance, static, gemm-config-native, [m,n,k,n]\n&quot;</span></div><div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;            <span class="stringliteral">&quot;&lt;/heuristics-table&gt;\n&quot;</span></div><div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160;            <span class="stringliteral">&quot;&lt;heuristic, 0&gt;\n&quot;</span></div><div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160;            <span class="stringliteral">&quot;b , 0, var, r_mn, &gt;=, num, 2., 1, 2\n&quot;</span></div><div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160;            <span class="stringliteral">&quot;l , 1, gemm-type, reshaped\n&quot;</span></div><div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160;            <span class="stringliteral">&quot;l , 2, gemm-type, reshaped-only-rhs\n&quot;</span></div><div class="line"><a name="l00169"></a><span class="lineno">  169</span>&#160;            <span class="stringliteral">&quot;&lt;/heuristic&gt;\n&quot;</span></div><div class="line"><a name="l00170"></a><span class="lineno">  170</span>&#160;            <span class="stringliteral">&quot;&lt;heuristic, 1&gt;\n&quot;</span></div><div class="line"><a name="l00171"></a><span class="lineno">  171</span>&#160;            <span class="stringliteral">&quot;l ,0,gemm-config-reshaped-only-rhs, [2, 4,4,4,1,1,0]\n&quot;</span></div><div class="line"><a name="l00172"></a><span class="lineno">  172</span>&#160;            <span class="stringliteral">&quot;&lt;/heuristic&gt;\n&quot;</span></div><div class="line"><a name="l00173"></a><span class="lineno">  173</span>&#160;            <span class="stringliteral">&quot;&lt;heuristic, 2&gt;\n&quot;</span></div><div class="line"><a name="l00174"></a><span class="lineno">  174</span>&#160;            <span class="stringliteral">&quot;l ,0,gemm-config-reshaped,[4,2,8,16,16,1,0,1,0]\n&quot;</span></div><div class="line"><a name="l00175"></a><span class="lineno">  175</span>&#160;            <span class="stringliteral">&quot;&lt;/heuristic&gt;\n&quot;</span></div><div class="line"><a name="l00176"></a><span class="lineno">  176</span>&#160;            <span class="stringliteral">&quot;&lt;heuristic, 3&gt;\n&quot;</span></div><div class="line"><a name="l00177"></a><span class="lineno">  177</span>&#160;            <span class="stringliteral">&quot;l , 0, gemm-type, native\n&quot;</span></div><div class="line"><a name="l00178"></a><span class="lineno">  178</span>&#160;            <span class="stringliteral">&quot;&lt;/heuristic&gt;\n&quot;</span></div><div class="line"><a name="l00179"></a><span class="lineno">  179</span>&#160;            <span class="stringliteral">&quot;&lt;heuristic, 4&gt;\n&quot;</span></div><div class="line"><a name="l00180"></a><span class="lineno">  180</span>&#160;            <span class="stringliteral">&quot;l ,0,gemm-config-reshaped-only-rhs, [2, 4,4,4,1,1,0]\n&quot;</span></div><div class="line"><a name="l00181"></a><span class="lineno">  181</span>&#160;            <span class="stringliteral">&quot;&lt;/heuristic&gt;\n&quot;</span></div><div class="line"><a name="l00182"></a><span class="lineno">  182</span>&#160;            <span class="stringliteral">&quot;&lt;heuristic, 5&gt;\n&quot;</span></div><div class="line"><a name="l00183"></a><span class="lineno">  183</span>&#160;            <span class="stringliteral">&quot;l ,0,gemm-config-native,[4,2,8]\n&quot;</span></div><div class="line"><a name="l00184"></a><span class="lineno">  184</span>&#160;            <span class="stringliteral">&quot;&lt;/heuristic&gt;\n&quot;</span>};</div><div class="line"><a name="l00185"></a><span class="lineno">  185</span>&#160;</div><div class="line"><a name="l00186"></a><span class="lineno">  186</span>&#160;    <span class="keyword">const</span> std::string invalidText{<span class="stringliteral">&quot;Êãâ¢á´¥â¢Êã ï¸µ â»ââ»&quot;</span>};</div><div class="line"><a name="l00187"></a><span class="lineno">  187</span>&#160;</div><div class="line"><a name="l00188"></a><span class="lineno">  188</span>&#160;    fs::path validFile = <a class="code" href="namespacearmnn_utils_1_1_filesystem.xhtml#a606d65835d72a332109c3c9f96a01b8a">armnnUtils::Filesystem::NamedTempFile</a>(<span class="stringliteral">&quot;validFile.mlgo&quot;</span>);</div><div class="line"><a name="l00189"></a><span class="lineno">  189</span>&#160;    fs::path invalidFile = <a class="code" href="namespacearmnn_utils_1_1_filesystem.xhtml#a606d65835d72a332109c3c9f96a01b8a">armnnUtils::Filesystem::NamedTempFile</a>(<span class="stringliteral">&quot;invalidFile.mlgo&quot;</span>);</div><div class="line"><a name="l00190"></a><span class="lineno">  190</span>&#160;</div><div class="line"><a name="l00191"></a><span class="lineno">  191</span>&#160;    <span class="keywordflow">try</span></div><div class="line"><a name="l00192"></a><span class="lineno">  192</span>&#160;    {</div><div class="line"><a name="l00193"></a><span class="lineno">  193</span>&#160;        std::ofstream ofs1{validFile};</div><div class="line"><a name="l00194"></a><span class="lineno">  194</span>&#160;        ofs1 &lt;&lt; validText &lt;&lt; std::endl;</div><div class="line"><a name="l00195"></a><span class="lineno">  195</span>&#160;        ofs1.close();</div><div class="line"><a name="l00196"></a><span class="lineno">  196</span>&#160;</div><div class="line"><a name="l00197"></a><span class="lineno">  197</span>&#160;        std::ofstream ofs2{invalidFile};</div><div class="line"><a name="l00198"></a><span class="lineno">  198</span>&#160;        ofs2 &lt;&lt; invalidText &lt;&lt; std::endl;</div><div class="line"><a name="l00199"></a><span class="lineno">  199</span>&#160;        ofs2.close();</div><div class="line"><a name="l00200"></a><span class="lineno">  200</span>&#160;    }</div><div class="line"><a name="l00201"></a><span class="lineno">  201</span>&#160;    <span class="keywordflow">catch</span> (std::exception &amp;e)</div><div class="line"><a name="l00202"></a><span class="lineno">  202</span>&#160;    {</div><div class="line"><a name="l00203"></a><span class="lineno">  203</span>&#160;        std::cerr &lt;&lt; <span class="stringliteral">&quot;Unable to write to file at location [&quot;</span> &lt;&lt; validFile.c_str() &lt;&lt; <span class="stringliteral">&quot;] : &quot;</span> &lt;&lt; e.what() &lt;&lt; std::endl;</div><div class="line"><a name="l00204"></a><span class="lineno">  204</span>&#160;        CHECK(<span class="keyword">false</span>);</div><div class="line"><a name="l00205"></a><span class="lineno">  205</span>&#160;    }</div><div class="line"><a name="l00206"></a><span class="lineno">  206</span>&#160;</div><div class="line"><a name="l00207"></a><span class="lineno">  207</span>&#160;    <a class="code" href="structarmnn_1_1_i_runtime_1_1_creation_options.xhtml">armnn::IRuntime::CreationOptions</a> creationOptions1;</div><div class="line"><a name="l00208"></a><span class="lineno">  208</span>&#160;    <a class="code" href="structarmnn_1_1_backend_options.xhtml">armnn::BackendOptions</a> validOptions</div><div class="line"><a name="l00209"></a><span class="lineno">  209</span>&#160;            {</div><div class="line"><a name="l00210"></a><span class="lineno">  210</span>&#160;                    <span class="stringliteral">&quot;GpuAcc&quot;</span>,</div><div class="line"><a name="l00211"></a><span class="lineno">  211</span>&#160;                    {</div><div class="line"><a name="l00212"></a><span class="lineno">  212</span>&#160;                            {<span class="stringliteral">&quot;MLGOTuningFilePath&quot;</span>, validFile.c_str()}</div><div class="line"><a name="l00213"></a><span class="lineno">  213</span>&#160;                    }</div><div class="line"><a name="l00214"></a><span class="lineno">  214</span>&#160;            };</div><div class="line"><a name="l00215"></a><span class="lineno">  215</span>&#160;</div><div class="line"><a name="l00216"></a><span class="lineno">  216</span>&#160;    creationOptions1.<a class="code" href="structarmnn_1_1_i_runtime_1_1_creation_options.xhtml#aecebc69597fe0d38a3964031c6eeb0a8">m_BackendOptions</a>.emplace_back(validOptions);</div><div class="line"><a name="l00217"></a><span class="lineno">  217</span>&#160;    ClBackendContextTestClass clBackendContext1(creationOptions1);</div><div class="line"><a name="l00218"></a><span class="lineno">  218</span>&#160;    CHECK(clBackendContext1.call_reload_from_file());</div><div class="line"><a name="l00219"></a><span class="lineno">  219</span>&#160;</div><div class="line"><a name="l00220"></a><span class="lineno">  220</span>&#160;    <a class="code" href="structarmnn_1_1_backend_options.xhtml">armnn::BackendOptions</a> invalidOptions</div><div class="line"><a name="l00221"></a><span class="lineno">  221</span>&#160;            {</div><div class="line"><a name="l00222"></a><span class="lineno">  222</span>&#160;                    <span class="stringliteral">&quot;GpuAcc&quot;</span>,</div><div class="line"><a name="l00223"></a><span class="lineno">  223</span>&#160;                    {</div><div class="line"><a name="l00224"></a><span class="lineno">  224</span>&#160;                            {<span class="stringliteral">&quot;MLGOTuningFilePath&quot;</span>, invalidFile.c_str()}</div><div class="line"><a name="l00225"></a><span class="lineno">  225</span>&#160;                    }</div><div class="line"><a name="l00226"></a><span class="lineno">  226</span>&#160;            };</div><div class="line"><a name="l00227"></a><span class="lineno">  227</span>&#160;</div><div class="line"><a name="l00228"></a><span class="lineno">  228</span>&#160;    <a class="code" href="structarmnn_1_1_i_runtime_1_1_creation_options.xhtml">armnn::IRuntime::CreationOptions</a> creationOptions2;</div><div class="line"><a name="l00229"></a><span class="lineno">  229</span>&#160;    creationOptions2.<a class="code" href="structarmnn_1_1_i_runtime_1_1_creation_options.xhtml#aecebc69597fe0d38a3964031c6eeb0a8">m_BackendOptions</a>.emplace_back(invalidOptions);</div><div class="line"><a name="l00230"></a><span class="lineno">  230</span>&#160;    ClBackendContextTestClass clBackendContext2(creationOptions2);</div><div class="line"><a name="l00231"></a><span class="lineno">  231</span>&#160;    CHECK(clBackendContext2.call_reload_from_file() == <span class="keyword">false</span>);</div><div class="line"><a name="l00232"></a><span class="lineno">  232</span>&#160;</div><div class="line"><a name="l00233"></a><span class="lineno">  233</span>&#160;    <a class="code" href="structarmnn_1_1_backend_options.xhtml">armnn::BackendOptions</a> invalidPathOptions</div><div class="line"><a name="l00234"></a><span class="lineno">  234</span>&#160;            {</div><div class="line"><a name="l00235"></a><span class="lineno">  235</span>&#160;                    <span class="stringliteral">&quot;GpuAcc&quot;</span>,</div><div class="line"><a name="l00236"></a><span class="lineno">  236</span>&#160;                    {</div><div class="line"><a name="l00237"></a><span class="lineno">  237</span>&#160;                            {<span class="stringliteral">&quot;MLGOTuningFilePath&quot;</span>, <span class="stringliteral">&quot;not_a_real_file_path&quot;</span>}</div><div class="line"><a name="l00238"></a><span class="lineno">  238</span>&#160;                    }</div><div class="line"><a name="l00239"></a><span class="lineno">  239</span>&#160;            };</div><div class="line"><a name="l00240"></a><span class="lineno">  240</span>&#160;</div><div class="line"><a name="l00241"></a><span class="lineno">  241</span>&#160;    <a class="code" href="structarmnn_1_1_i_runtime_1_1_creation_options.xhtml">armnn::IRuntime::CreationOptions</a> creationOptions3;</div><div class="line"><a name="l00242"></a><span class="lineno">  242</span>&#160;    creationOptions3.<a class="code" href="structarmnn_1_1_i_runtime_1_1_creation_options.xhtml#aecebc69597fe0d38a3964031c6eeb0a8">m_BackendOptions</a>.emplace_back(invalidPathOptions);</div><div class="line"><a name="l00243"></a><span class="lineno">  243</span>&#160;    ClBackendContextTestClass clBackendContext3(creationOptions3);</div><div class="line"><a name="l00244"></a><span class="lineno">  244</span>&#160;    CHECK(clBackendContext3.call_reload_from_file() == <span class="keyword">false</span>);</div><div class="line"><a name="l00245"></a><span class="lineno">  245</span>&#160;}</div><div class="line"><a name="l00246"></a><span class="lineno">  246</span>&#160;</div><div class="line"><a name="l00247"></a><span class="lineno">  247</span>&#160;}</div><div class="ttc" id="classarmnn_1_1_cl_workload_factory_xhtml"><div class="ttname"><a href="classarmnn_1_1_cl_workload_factory.xhtml">armnn::ClWorkloadFactory</a></div><div class="ttdef"><b>Definition:</b> <a href="_cl_workload_factory_8hpp_source.xhtml#l00021">ClWorkloadFactory.hpp:21</a></div></div>
<div class="ttc" id="structarmnn_1_1_optimizer_options_xhtml_a71194277c60153a5f86539f5d39f01db"><div class="ttname"><a href="structarmnn_1_1_optimizer_options.xhtml#a71194277c60153a5f86539f5d39f01db">armnn::OptimizerOptions::m_ModelOptions</a></div><div class="ttdeci">ModelOptions m_ModelOptions</div><div class="ttdef"><b>Definition:</b> <a href="_i_network_8hpp_source.xhtml#l00233">INetwork.hpp:233</a></div></div>
<div class="ttc" id="classarmnn_1_1_i_runtime_xhtml_ad44ecd3700748dc30dc4bbe34ba5bde7"><div class="ttname"><a href="classarmnn_1_1_i_runtime.xhtml#ad44ecd3700748dc30dc4bbe34ba5bde7">armnn::IRuntime::Create</a></div><div class="ttdeci">static IRuntimePtr Create(const CreationOptions &amp;options)</div><div class="ttdef"><b>Definition:</b> <a href="_runtime_8cpp_source.xhtml#l00049">Runtime.cpp:49</a></div></div>
<div class="ttc" id="classarmnn_1_1_i_connectable_layer_xhtml"><div class="ttname"><a href="classarmnn_1_1_i_connectable_layer.xhtml">armnn::IConnectableLayer</a></div><div class="ttdoc">Interface for a layer that is connectable to other layers via InputSlots and OutputSlots. </div><div class="ttdef"><b>Definition:</b> <a href="_i_network_8hpp_source.xhtml#l00066">INetwork.hpp:66</a></div></div>
<div class="ttc" id="_cl_workload_factory_helper_8hpp_xhtml"><div class="ttname"><a href="_cl_workload_factory_helper_8hpp.xhtml">ClWorkloadFactoryHelper.hpp</a></div></div>
<div class="ttc" id="classarmnn_1_1_tensor_info_xhtml"><div class="ttname"><a href="classarmnn_1_1_tensor_info.xhtml">armnn::TensorInfo</a></div><div class="ttdef"><b>Definition:</b> <a href="_tensor_8hpp_source.xhtml#l00152">Tensor.hpp:152</a></div></div>
<div class="ttc" id="namespacearmnn_xhtml_a150468a02bd7b2d2d061c4aaaee939f0"><div class="ttname"><a href="namespacearmnn.xhtml#a150468a02bd7b2d2d061c4aaaee939f0">armnn::IRuntimePtr</a></div><div class="ttdeci">std::unique_ptr&lt; IRuntime, void(*)(IRuntime *runtime)&gt; IRuntimePtr</div><div class="ttdef"><b>Definition:</b> <a href="_i_runtime_8hpp_source.xhtml#l00033">IRuntime.hpp:33</a></div></div>
<div class="ttc" id="_graph_utils_8cpp_xhtml_ac73a43305233b7e5f70debdb2d14a8d3"><div class="ttname"><a href="_graph_utils_8cpp.xhtml#ac73a43305233b7e5f70debdb2d14a8d3">GraphHasNamedLayer</a></div><div class="ttdeci">bool GraphHasNamedLayer(const armnn::Graph &amp;graph, const std::string &amp;name)</div><div class="ttdef"><b>Definition:</b> <a href="_graph_utils_8cpp_source.xhtml#l00010">GraphUtils.cpp:10</a></div></div>
<div class="ttc" id="_cl_workload_factory_8hpp_xhtml"><div class="ttname"><a href="_cl_workload_factory_8hpp.xhtml">ClWorkloadFactory.hpp</a></div></div>
<div class="ttc" id="classarmnn_1_1_tensor_shape_xhtml"><div class="ttname"><a href="classarmnn_1_1_tensor_shape.xhtml">armnn::TensorShape</a></div><div class="ttdef"><b>Definition:</b> <a href="_tensor_8hpp_source.xhtml#l00020">Tensor.hpp:20</a></div></div>
<div class="ttc" id="_cl_optimized_network_tests_8cpp_xhtml_a4fec0d6ac33699a90bb0edbfa390c886"><div class="ttname"><a href="_cl_optimized_network_tests_8cpp.xhtml#a4fec0d6ac33699a90bb0edbfa390c886">TEST_SUITE</a></div><div class="ttdeci">TEST_SUITE(&quot;ClOptimizedNetwork&quot;)</div><div class="ttdef"><b>Definition:</b> <a href="_cl_optimized_network_tests_8cpp_source.xhtml#l00019">ClOptimizedNetworkTests.cpp:19</a></div></div>
<div class="ttc" id="_filesystem_8hpp_xhtml"><div class="ttname"><a href="_filesystem_8hpp.xhtml">Filesystem.hpp</a></div></div>
<div class="ttc" id="classarmnn_1_1_cl_backend_context_xhtml_a46628231c197cb066ddf3fe676b44038"><div class="ttname"><a href="classarmnn_1_1_cl_backend_context.xhtml#a46628231c197cb066ddf3fe676b44038">armnn::ClBackendContext::ClBackendContext</a></div><div class="ttdeci">ClBackendContext(const IRuntime::CreationOptions &amp;options)</div><div class="ttdef"><b>Definition:</b> <a href="_cl_backend_context_8cpp_source.xhtml#l00140">ClBackendContext.cpp:140</a></div></div>
<div class="ttc" id="classarmnn_1_1_i_output_slot_xhtml_a5ee4a6c9a2481245487b1b1a70d20fd0"><div class="ttname"><a href="classarmnn_1_1_i_output_slot.xhtml#a5ee4a6c9a2481245487b1b1a70d20fd0">armnn::IOutputSlot::SetTensorInfo</a></div><div class="ttdeci">virtual void SetTensorInfo(const TensorInfo &amp;tensorInfo)=0</div></div>
<div class="ttc" id="structarmnn_1_1_optimizer_options_xhtml_a6e1a42622ca43dafc7ba8e684c016eb4"><div class="ttname"><a href="structarmnn_1_1_optimizer_options.xhtml#a6e1a42622ca43dafc7ba8e684c016eb4">armnn::OptimizerOptions::m_ReduceFp32ToFp16</a></div><div class="ttdeci">bool m_ReduceFp32ToFp16</div><div class="ttdoc">Reduces all Fp32 operators in the model to Fp16 for faster processing. </div><div class="ttdef"><b>Definition:</b> <a href="_i_network_8hpp_source.xhtml#l00214">INetwork.hpp:214</a></div></div>
<div class="ttc" id="structarmnn_1_1_i_runtime_1_1_creation_options_xhtml_aecebc69597fe0d38a3964031c6eeb0a8"><div class="ttname"><a href="structarmnn_1_1_i_runtime_1_1_creation_options.xhtml#aecebc69597fe0d38a3964031c6eeb0a8">armnn::IRuntime::CreationOptions::m_BackendOptions</a></div><div class="ttdeci">std::vector&lt; BackendOptions &gt; m_BackendOptions</div><div class="ttdoc">Pass backend specific options. </div><div class="ttdef"><b>Definition:</b> <a href="_i_runtime_8hpp_source.xhtml#l00189">IRuntime.hpp:189</a></div></div>
<div class="ttc" id="namespacearmnn_xhtml_a82e98ef05fd67036d1195ba17174d685"><div class="ttname"><a href="namespacearmnn.xhtml#a82e98ef05fd67036d1195ba17174d685">armnn::Optimize</a></div><div class="ttdeci">IOptimizedNetworkPtr Optimize(const INetwork &amp;network, const std::vector&lt; BackendId &gt; &amp;backendPreferences, const IDeviceSpec &amp;deviceSpec, const OptimizerOptions &amp;options=OptimizerOptions(), Optional&lt; std::vector&lt; std::string &gt; &amp;&gt; messages=EmptyOptional())</div><div class="ttdoc">Create an optimized version of the network. </div><div class="ttdef"><b>Definition:</b> <a href="_network_8cpp_source.xhtml#l01847">Network.cpp:1847</a></div></div>
<div class="ttc" id="namespacearmnn_xhtml_a674efcf6cbdb9e831d653ff0e821fb38"><div class="ttname"><a href="namespacearmnn.xhtml#a674efcf6cbdb9e831d653ff0e821fb38">armnn::IOptimizedNetworkPtr</a></div><div class="ttdeci">std::unique_ptr&lt; IOptimizedNetwork, void(*)(IOptimizedNetwork *network)&gt; IOptimizedNetworkPtr</div><div class="ttdef"><b>Definition:</b> <a href="_i_network_8hpp_source.xhtml#l00242">INetwork.hpp:242</a></div></div>
<div class="ttc" id="namespacearmnn_xhtml_ae2f04a162585c0a5222a537efd5456aeafaa4524e3df19ada32643ce9a222362b"><div class="ttname"><a href="namespacearmnn.xhtml#ae2f04a162585c0a5222a537efd5456aeafaa4524e3df19ada32643ce9a222362b">armnn::Compute::GpuAcc</a></div><div class="ttdoc">GPU Execution: OpenCL: ArmCompute. </div></div>
<div class="ttc" id="structarmnn_1_1_optimizer_options_xhtml"><div class="ttname"><a href="structarmnn_1_1_optimizer_options.xhtml">armnn::OptimizerOptions</a></div><div class="ttdoc">ArmNN performs an optimization on each model/network before it gets loaded for execution. </div><div class="ttdef"><b>Definition:</b> <a href="_i_network_8hpp_source.xhtml#l00137">INetwork.hpp:137</a></div></div>
<div class="ttc" id="structarmnn_1_1_activation_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_activation_descriptor.xhtml">armnn::ActivationDescriptor</a></div><div class="ttdoc">An ActivationDescriptor for the ActivationLayer. </div><div class="ttdef"><b>Definition:</b> <a href="_descriptors_8hpp_source.xhtml#l00036">Descriptors.hpp:36</a></div></div>
<div class="ttc" id="namespacearmnn_xhtml_a56297e0f7b215eea46c818cb7528d9eaabc5a0f0d6e7cf7fca73299dcd46c0f0d"><div class="ttname"><a href="namespacearmnn.xhtml#a56297e0f7b215eea46c818cb7528d9eaabc5a0f0d6e7cf7fca73299dcd46c0f0d">armnn::ActivationFunction::BoundedReLu</a></div><div class="ttdoc">min(a, max(b, input)) ReLu1 &amp; ReLu6. </div></div>
<div class="ttc" id="_cl_backend_context_8hpp_xhtml"><div class="ttname"><a href="_cl_backend_context_8hpp.xhtml">ClBackendContext.hpp</a></div></div>
<div class="ttc" id="classarmnn_1_1_graph_xhtml"><div class="ttname"><a href="classarmnn_1_1_graph.xhtml">armnn::Graph</a></div><div class="ttdef"><b>Definition:</b> <a href="_graph_8hpp_source.xhtml#l00030">Graph.hpp:30</a></div></div>
<div class="ttc" id="structarmnn_1_1_i_runtime_1_1_creation_options_xhtml"><div class="ttname"><a href="structarmnn_1_1_i_runtime_1_1_creation_options.xhtml">armnn::IRuntime::CreationOptions</a></div><div class="ttdef"><b>Definition:</b> <a href="_i_runtime_8hpp_source.xhtml#l00077">IRuntime.hpp:77</a></div></div>
<div class="ttc" id="namespacearmnn_xhtml_a6a2659750d6161b693d0e51616791959"><div class="ttname"><a href="namespacearmnn.xhtml#a6a2659750d6161b693d0e51616791959">armnn::GetGraphForTesting</a></div><div class="ttdeci">Graph &amp; GetGraphForTesting(IOptimizedNetwork *optNet)</div><div class="ttdef"><b>Definition:</b> <a href="_test_utils_8cpp_source.xhtml#l00049">TestUtils.cpp:49</a></div></div>
<div class="ttc" id="structarmnn_1_1_backend_options_xhtml"><div class="ttname"><a href="structarmnn_1_1_backend_options.xhtml">armnn::BackendOptions</a></div><div class="ttdoc">Struct for the users to pass backend specific options. </div><div class="ttdef"><b>Definition:</b> <a href="_backend_options_8hpp_source.xhtml#l00022">BackendOptions.hpp:22</a></div></div>
<div class="ttc" id="structarmnn_1_1_activation_descriptor_xhtml_a017b2990003a014234f13e999dc7c689"><div class="ttname"><a href="structarmnn_1_1_activation_descriptor.xhtml#a017b2990003a014234f13e999dc7c689">armnn::ActivationDescriptor::m_A</a></div><div class="ttdeci">float m_A</div><div class="ttdoc">Alpha upper bound value used by the activation functions. (BoundedReLu, Linear, TanH, Elu). </div><div class="ttdef"><b>Definition:</b> <a href="_descriptors_8hpp_source.xhtml#l00061">Descriptors.hpp:61</a></div></div>
<div class="ttc" id="_network_8hpp_xhtml"><div class="ttname"><a href="_network_8hpp.xhtml">Network.hpp</a></div></div>
<div class="ttc" id="classarmnn_1_1_i_connectable_layer_xhtml_a6ec9e0eb66d7d6a01240492a0b18104c"><div class="ttname"><a href="classarmnn_1_1_i_connectable_layer.xhtml#a6ec9e0eb66d7d6a01240492a0b18104c">armnn::IConnectableLayer::GetInputSlot</a></div><div class="ttdeci">virtual const IInputSlot &amp; GetInputSlot(unsigned int index) const =0</div><div class="ttdoc">Get a const input slot handle by slot index. </div></div>
<div class="ttc" id="classarmnn_1_1_cl_backend_context_xhtml"><div class="ttname"><a href="classarmnn_1_1_cl_backend_context.xhtml">armnn::ClBackendContext</a></div><div class="ttdef"><b>Definition:</b> <a href="_cl_backend_context_8hpp_source.xhtml#l00017">ClBackendContext.hpp:17</a></div></div>
<div class="ttc" id="namespacearmnn_xhtml_ad8ed01ff3ff33333d8e19db4d2818bb6a166495adc0d0f53bee6baecc577f5204"><div class="ttname"><a href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a166495adc0d0f53bee6baecc577f5204">armnn::DataType::Float32</a></div></div>
<div class="ttc" id="namespacearmnn_xhtml_ac8c5f9574593b4623d4850f5fd26e3cc"><div class="ttname"><a href="namespacearmnn.xhtml#ac8c5f9574593b4623d4850f5fd26e3cc">armnn::GetModelOptionsForTesting</a></div><div class="ttdeci">ModelOptions &amp; GetModelOptionsForTesting(IOptimizedNetwork *optNet)</div><div class="ttdef"><b>Definition:</b> <a href="_test_utils_8cpp_source.xhtml#l00054">TestUtils.cpp:54</a></div></div>
<div class="ttc" id="classarmnn_1_1_i_connectable_layer_xhtml_a80ac4eda2e7f2757ec9dd96fc96dbd16"><div class="ttname"><a href="classarmnn_1_1_i_connectable_layer.xhtml#a80ac4eda2e7f2757ec9dd96fc96dbd16">armnn::IConnectableLayer::GetOutputSlot</a></div><div class="ttdeci">virtual const IOutputSlot &amp; GetOutputSlot(unsigned int index) const =0</div><div class="ttdoc">Get the const output slot handle by slot index. </div></div>
<div class="ttc" id="namespacearmnn_utils_1_1_filesystem_xhtml_a606d65835d72a332109c3c9f96a01b8a"><div class="ttname"><a href="namespacearmnn_utils_1_1_filesystem.xhtml#a606d65835d72a332109c3c9f96a01b8a">armnnUtils::Filesystem::NamedTempFile</a></div><div class="ttdeci">fs::path NamedTempFile(const char *fileName)</div><div class="ttdoc">Returns a path to a file in the system temporary folder. If the file existed it will be deleted...</div><div class="ttdef"><b>Definition:</b> <a href="_filesystem_8cpp_source.xhtml#l00024">Filesystem.cpp:24</a></div></div>
<div class="ttc" id="namespacearmnn_xhtml_ace74f6f9feb95a964a49d79458232703"><div class="ttname"><a href="namespacearmnn.xhtml#ace74f6f9feb95a964a49d79458232703">armnn::INetworkPtr</a></div><div class="ttdeci">std::unique_ptr&lt; INetwork, void(*)(INetwork *network)&gt; INetworkPtr</div><div class="ttdef"><b>Definition:</b> <a href="_i_network_8hpp_source.xhtml#l00241">INetwork.hpp:241</a></div></div>
<div class="ttc" id="classarmnn_1_1_i_output_slot_xhtml_ac1835f8756a9f03c02fcf9664e3a0fce"><div class="ttname"><a href="classarmnn_1_1_i_output_slot.xhtml#ac1835f8756a9f03c02fcf9664e3a0fce">armnn::IOutputSlot::Connect</a></div><div class="ttdeci">virtual int Connect(IInputSlot &amp;destination)=0</div></div>
<div class="ttc" id="classarmnn_1_1_i_network_xhtml_a464f0ff87b1aabf71febaa71321dd40b"><div class="ttname"><a href="classarmnn_1_1_i_network.xhtml#a464f0ff87b1aabf71febaa71321dd40b">armnn::INetwork::Create</a></div><div class="ttdeci">static INetworkPtr Create(NetworkOptions networkOptions={})</div><div class="ttdef"><b>Definition:</b> <a href="_network_8cpp_source.xhtml#l00476">Network.cpp:476</a></div></div>
<div class="ttc" id="structarmnn_1_1_activation_descriptor_xhtml_a28c4c9cb15f6be3499abbc46b356060b"><div class="ttname"><a href="structarmnn_1_1_activation_descriptor.xhtml#a28c4c9cb15f6be3499abbc46b356060b">armnn::ActivationDescriptor::m_B</a></div><div class="ttdeci">float m_B</div><div class="ttdoc">Beta lower bound value used by the activation functions. (BoundedReLu, Linear, TanH). </div><div class="ttdef"><b>Definition:</b> <a href="_descriptors_8hpp_source.xhtml#l00063">Descriptors.hpp:63</a></div></div>
<div class="ttc" id="structarmnn_1_1_activation_descriptor_xhtml_af10fa7883e3579950f477bee92a64844"><div class="ttname"><a href="structarmnn_1_1_activation_descriptor.xhtml#af10fa7883e3579950f477bee92a64844">armnn::ActivationDescriptor::m_Function</a></div><div class="ttdeci">ActivationFunction m_Function</div><div class="ttdoc">The activation function to use (Sigmoid, TanH, Linear, ReLu, BoundedReLu, SoftReLu, LeakyReLu, Abs, Sqrt, Square, Elu). </div><div class="ttdef"><b>Definition:</b> <a href="_descriptors_8hpp_source.xhtml#l00059">Descriptors.hpp:59</a></div></div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="dir_68267d1309a1af8e8297ef4c3efbcdba.xhtml">src</a></li><li class="navelem"><a class="el" href="dir_0f3cdec46afbc61a1ded8e1687c9c9a0.xhtml">backends</a></li><li class="navelem"><a class="el" href="dir_1ad86c6d39ab715a831555571b9e98a5.xhtml">cl</a></li><li class="navelem"><a class="el" href="dir_02bab2737bbb2fb3882a0be567244fbf.xhtml">test</a></li><li class="navelem"><a class="el" href="_cl_optimized_network_tests_8cpp.xhtml">ClOptimizedNetworkTests.cpp</a></li>
    <li class="footer">Generated on Tue May 24 2022 11:27:13 for ArmNN by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.13 </li>
  </ul>
</div>
</body>
</html>
