<!-- Copyright (c) 2020 ARM Limited. -->
<!--                                 -->
<!-- SPDX-License-Identifier: MIT    -->
<!--                                 -->
<!-- HTML header for doxygen 1.8.13-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.13"/>
<meta name="robots" content="NOINDEX, NOFOLLOW" />
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>ArmNN: include/armnn/LayerVisitorBase.hpp Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script><script type="text/javascript" src="http://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="stylesheet.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <img alt="ArmNN" src="Arm_NN_horizontal_blue.png" style="max-width: 10rem; margin-top: .5rem; margin-left 10px"/>
  <td style="padding-left: 0.5em;">
   <div id="projectname">
   &#160;<span id="projectnumber">22.05.01</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.13 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
$(document).ready(function(){initNavTree('_layer_visitor_base_8hpp_source.xhtml','');});
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="headertitle">
<div class="title">LayerVisitorBase.hpp</div>  </div>
</div><!--header-->
<div class="contents">
<a href="_layer_visitor_base_8hpp.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="comment">//</span></div><div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="comment">// Copyright Â© 2017 Arm Ltd and Contributors. All rights reserved.</span></div><div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="comment">// SPDX-License-Identifier: MIT</span></div><div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="comment">//</span></div><div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;</div><div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="preprocessor">#pragma once</span></div><div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;</div><div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="preprocessor">#include &lt;<a class="code" href="_i_layer_visitor_8hpp.xhtml">armnn/ILayerVisitor.hpp</a>&gt;</span></div><div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;</div><div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="keyword">namespace </span><a class="code" href="namespacearmnn.xhtml">armnn</a></div><div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;{</div><div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;</div><div class="line"><a name="l00013"></a><span class="lineno"><a class="line" href="structarmnn_1_1_visitor_throwing_policy.xhtml">   13</a></span>&#160;<span class="keyword">struct </span><a class="code" href="structarmnn_1_1_visitor_throwing_policy.xhtml">VisitorThrowingPolicy</a></div><div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;{</div><div class="line"><a name="l00015"></a><span class="lineno"><a class="line" href="structarmnn_1_1_visitor_throwing_policy.xhtml#a7d755e4a31c677af83e4fe3d7f1c3717">   15</a></span>&#160;    <span class="keyword">static</span> <span class="keywordtype">void</span> <a class="code" href="structarmnn_1_1_visitor_throwing_policy.xhtml#a7d755e4a31c677af83e4fe3d7f1c3717">Apply</a>(<span class="keyword">const</span> std::string&amp; errorMessage = <span class="stringliteral">&quot;&quot;</span>) { <span class="keywordflow">throw</span> <a class="code" href="classarmnn_1_1_unimplemented_exception.xhtml">UnimplementedException</a>(errorMessage); }</div><div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;};</div><div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;</div><div class="line"><a name="l00018"></a><span class="lineno"><a class="line" href="structarmnn_1_1_visitor_no_throw_policy.xhtml">   18</a></span>&#160;<span class="keyword">struct </span><a class="code" href="structarmnn_1_1_visitor_no_throw_policy.xhtml">VisitorNoThrowPolicy</a></div><div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;{</div><div class="line"><a name="l00020"></a><span class="lineno"><a class="line" href="structarmnn_1_1_visitor_no_throw_policy.xhtml#a2a867d4cfece2af1ea4942da4cf44e3f">   20</a></span>&#160;    <span class="keyword">static</span> <span class="keywordtype">void</span> <a class="code" href="structarmnn_1_1_visitor_no_throw_policy.xhtml#a2a867d4cfece2af1ea4942da4cf44e3f">Apply</a>(<span class="keyword">const</span> std::string&amp;) {}</div><div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;};</div><div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;<span class="comment">/// Visitor base class with empty implementations.</span></div><div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;<span class="comment"></span><a class="code" href="_deprecated_8hpp.xhtml#ab66a241a0ed3ee89c866e777b035d0ed">ARMNN_NO_DEPRECATE_WARN_BEGIN</a></div><div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;<span class="keyword">template</span>&lt;<span class="keyword">typename</span> DefaultPolicy&gt;</div><div class="line"><a name="l00026"></a><span class="lineno"><a class="line" href="classarmnn_1_1_layer_visitor_base.xhtml">   26</a></span>&#160;<span class="keyword">class </span><a class="code" href="classarmnn_1_1_layer_visitor_base.xhtml">LayerVisitorBase</a> : <span class="keyword">public</span> ILayerVisitor</div><div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;{</div><div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;<span class="keyword">protected</span>:</div><div class="line"><a name="l00029"></a><span class="lineno"><a class="line" href="classarmnn_1_1_layer_visitor_base.xhtml#aec6644c81f84f086262dfd06088acd99">   29</a></span>&#160;    <a class="code" href="classarmnn_1_1_layer_visitor_base.xhtml#aec6644c81f84f086262dfd06088acd99">LayerVisitorBase</a>() {}</div><div class="line"><a name="l00030"></a><span class="lineno"><a class="line" href="classarmnn_1_1_layer_visitor_base.xhtml#ab59e5e8c65aa44857c27db70fc412baa">   30</a></span>&#160;    <span class="keyword">virtual</span> <a class="code" href="classarmnn_1_1_layer_visitor_base.xhtml#ab59e5e8c65aa44857c27db70fc412baa">~LayerVisitorBase</a>() {}</div><div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;</div><div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;<span class="keyword">public</span>:</div><div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;</div><div class="line"><a name="l00034"></a><span class="lineno"><a class="line" href="classarmnn_1_1_layer_visitor_base.xhtml#a30b99e5202fc77b02f92d5c44e5ca86d">   34</a></span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classarmnn_1_1_layer_visitor_base.xhtml#a30b99e5202fc77b02f92d5c44e5ca86d">VisitActivationLayer</a>(<span class="keyword">const</span> <a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml">IConnectableLayer</a>*,</div><div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;                              <span class="keyword">const</span> <a class="code" href="structarmnn_1_1_activation_descriptor.xhtml">ActivationDescriptor</a>&amp;,</div><div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;                              <span class="keyword">const</span> <span class="keywordtype">char</span>*)<span class="keyword"> override </span>{ DefaultPolicy::Apply(__func__); }</div><div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;</div><div class="line"><a name="l00038"></a><span class="lineno"><a class="line" href="classarmnn_1_1_layer_visitor_base.xhtml#a0c9f3396207de48925016a2eee6aa12b">   38</a></span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classarmnn_1_1_layer_visitor_base.xhtml#a0c9f3396207de48925016a2eee6aa12b">VisitAdditionLayer</a>(<span class="keyword">const</span> <a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml">IConnectableLayer</a>*,</div><div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;                            <span class="keyword">const</span> <span class="keywordtype">char</span>*)<span class="keyword"> override </span>{ DefaultPolicy::Apply(__func__); }</div><div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;</div><div class="line"><a name="l00041"></a><span class="lineno"><a class="line" href="classarmnn_1_1_layer_visitor_base.xhtml#a719076848950255b929636c97aaaede4">   41</a></span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classarmnn_1_1_layer_visitor_base.xhtml#a719076848950255b929636c97aaaede4">VisitArgMinMaxLayer</a>(<span class="keyword">const</span> <a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml">IConnectableLayer</a>*,</div><div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;                             <span class="keyword">const</span> <a class="code" href="structarmnn_1_1_arg_min_max_descriptor.xhtml">ArgMinMaxDescriptor</a>&amp;,</div><div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;                             <span class="keyword">const</span> <span class="keywordtype">char</span>*)<span class="keyword"> override </span>{ DefaultPolicy::Apply(__func__); }</div><div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;</div><div class="line"><a name="l00045"></a><span class="lineno"><a class="line" href="classarmnn_1_1_layer_visitor_base.xhtml#ab0ae25ba5f3c494d1fb32f06cd57af10">   45</a></span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classarmnn_1_1_layer_visitor_base.xhtml#ab0ae25ba5f3c494d1fb32f06cd57af10">VisitBatchNormalizationLayer</a>(<span class="keyword">const</span> <a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml">IConnectableLayer</a>*,</div><div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;                                      <span class="keyword">const</span> <a class="code" href="structarmnn_1_1_batch_normalization_descriptor.xhtml">BatchNormalizationDescriptor</a>&amp;,</div><div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;                                      <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_const_tensor.xhtml">ConstTensor</a>&amp;,</div><div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;                                      <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_const_tensor.xhtml">ConstTensor</a>&amp;,</div><div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;                                      <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_const_tensor.xhtml">ConstTensor</a>&amp;,</div><div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;                                      <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_const_tensor.xhtml">ConstTensor</a>&amp;,</div><div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;                                      <span class="keyword">const</span> <span class="keywordtype">char</span>*)<span class="keyword"> override </span>{ DefaultPolicy::Apply(__func__); }</div><div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;</div><div class="line"><a name="l00053"></a><span class="lineno"><a class="line" href="classarmnn_1_1_layer_visitor_base.xhtml#a62aac266e23bd680633e62832f56bc11">   53</a></span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classarmnn_1_1_layer_visitor_base.xhtml#a62aac266e23bd680633e62832f56bc11">VisitBatchToSpaceNdLayer</a>(<span class="keyword">const</span> <a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml">IConnectableLayer</a>*,</div><div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;                                  <span class="keyword">const</span> <a class="code" href="structarmnn_1_1_batch_to_space_nd_descriptor.xhtml">BatchToSpaceNdDescriptor</a>&amp;,</div><div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;                                  <span class="keyword">const</span> <span class="keywordtype">char</span>*)<span class="keyword"> override </span>{ DefaultPolicy::Apply(__func__); }</div><div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;</div><div class="line"><a name="l00057"></a><span class="lineno"><a class="line" href="classarmnn_1_1_layer_visitor_base.xhtml#a95dc828296e6d05c0bf0b691d4dc6a3f">   57</a></span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classarmnn_1_1_layer_visitor_base.xhtml#a95dc828296e6d05c0bf0b691d4dc6a3f">VisitComparisonLayer</a>(<span class="keyword">const</span> <a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml">IConnectableLayer</a>*,</div><div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;                              <span class="keyword">const</span> <a class="code" href="structarmnn_1_1_comparison_descriptor.xhtml">ComparisonDescriptor</a>&amp;,</div><div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;                              <span class="keyword">const</span> <span class="keywordtype">char</span>*)<span class="keyword"> override </span>{ DefaultPolicy::Apply(__func__); }</div><div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;</div><div class="line"><a name="l00061"></a><span class="lineno"><a class="line" href="classarmnn_1_1_layer_visitor_base.xhtml#a2d4f84683c4a00dfb5eecb6b165d41b9">   61</a></span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classarmnn_1_1_layer_visitor_base.xhtml#a2d4f84683c4a00dfb5eecb6b165d41b9">VisitConcatLayer</a>(<span class="keyword">const</span> <a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml">IConnectableLayer</a>*,</div><div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;                          <span class="keyword">const</span> <a class="code" href="structarmnn_1_1_origins_descriptor.xhtml">ConcatDescriptor</a>&amp;,</div><div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;                          <span class="keyword">const</span> <span class="keywordtype">char</span>*)<span class="keyword"> override </span>{ DefaultPolicy::Apply(__func__); }</div><div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;</div><div class="line"><a name="l00065"></a><span class="lineno"><a class="line" href="classarmnn_1_1_layer_visitor_base.xhtml#a90698dba3e90ced6f562cda146bf15e3">   65</a></span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classarmnn_1_1_layer_visitor_base.xhtml#a90698dba3e90ced6f562cda146bf15e3">VisitConstantLayer</a>(<span class="keyword">const</span> <a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml">IConnectableLayer</a>*,</div><div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;                            <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_const_tensor.xhtml">ConstTensor</a>&amp;,</div><div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;                            <span class="keyword">const</span> <span class="keywordtype">char</span>*)<span class="keyword"> override </span>{ DefaultPolicy::Apply(__func__); }</div><div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;</div><div class="line"><a name="l00069"></a><span class="lineno"><a class="line" href="classarmnn_1_1_layer_visitor_base.xhtml#aff3099f516e132f4d8818a54fa1ee767">   69</a></span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classarmnn_1_1_layer_visitor_base.xhtml#aff3099f516e132f4d8818a54fa1ee767">VisitConvolution2dLayer</a>(<span class="keyword">const</span> <a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml">IConnectableLayer</a>*,</div><div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;                                 <span class="keyword">const</span> <a class="code" href="structarmnn_1_1_convolution2d_descriptor.xhtml">Convolution2dDescriptor</a>&amp;,</div><div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;                                 <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_const_tensor.xhtml">ConstTensor</a>&amp;,</div><div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;                                 <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_optional.xhtml">Optional&lt;ConstTensor&gt;</a>&amp;,</div><div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;                                 <span class="keyword">const</span> <span class="keywordtype">char</span>*)<span class="keyword"> override </span>{ DefaultPolicy::Apply(__func__); }</div><div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;</div><div class="line"><a name="l00075"></a><span class="lineno"><a class="line" href="classarmnn_1_1_layer_visitor_base.xhtml#a1f471667b18bdc6f2f57a15976881410">   75</a></span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classarmnn_1_1_layer_visitor_base.xhtml#a1f471667b18bdc6f2f57a15976881410">VisitConvolution2dLayer</a>(<span class="keyword">const</span> <a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml">IConnectableLayer</a>*,</div><div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;                                 <span class="keyword">const</span> <a class="code" href="structarmnn_1_1_convolution2d_descriptor.xhtml">Convolution2dDescriptor</a>&amp;,</div><div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;                                 <span class="keyword">const</span> <span class="keywordtype">char</span>*)<span class="keyword"> override </span>{ DefaultPolicy::Apply(__func__); }</div><div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;</div><div class="line"><a name="l00079"></a><span class="lineno"><a class="line" href="classarmnn_1_1_layer_visitor_base.xhtml#ad3aaff3b6165f8de16522bc4a1ed32a0">   79</a></span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classarmnn_1_1_layer_visitor_base.xhtml#ad3aaff3b6165f8de16522bc4a1ed32a0">VisitDepthToSpaceLayer</a>(<span class="keyword">const</span> <a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml">IConnectableLayer</a>*,</div><div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;                                <span class="keyword">const</span> <a class="code" href="structarmnn_1_1_space_to_depth_descriptor.xhtml">DepthToSpaceDescriptor</a>&amp;,</div><div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;                                <span class="keyword">const</span> <span class="keywordtype">char</span>*)<span class="keyword"> override </span>{ DefaultPolicy::Apply(__func__); }</div><div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;</div><div class="line"><a name="l00083"></a><span class="lineno"><a class="line" href="classarmnn_1_1_layer_visitor_base.xhtml#ab287daf36aee416ebeca06ebf4f71a82">   83</a></span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classarmnn_1_1_layer_visitor_base.xhtml#ab287daf36aee416ebeca06ebf4f71a82">VisitDepthwiseConvolution2dLayer</a>(<span class="keyword">const</span> <a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml">IConnectableLayer</a>*,</div><div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;                                          <span class="keyword">const</span> <a class="code" href="structarmnn_1_1_depthwise_convolution2d_descriptor.xhtml">DepthwiseConvolution2dDescriptor</a>&amp;,</div><div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;                                          <span class="keyword">const</span> <span class="keywordtype">char</span>*)<span class="keyword"> override </span>{ DefaultPolicy::Apply(__func__); }</div><div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;</div><div class="line"><a name="l00087"></a><span class="lineno"><a class="line" href="classarmnn_1_1_layer_visitor_base.xhtml#a70050fc50ee44a439665f914d5fe9684">   87</a></span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classarmnn_1_1_layer_visitor_base.xhtml#a70050fc50ee44a439665f914d5fe9684">VisitDepthwiseConvolution2dLayer</a>(<span class="keyword">const</span> <a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml">IConnectableLayer</a>*,</div><div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;                                          <span class="keyword">const</span> <a class="code" href="structarmnn_1_1_depthwise_convolution2d_descriptor.xhtml">DepthwiseConvolution2dDescriptor</a>&amp;,</div><div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;                                          <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_const_tensor.xhtml">ConstTensor</a>&amp;,</div><div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;                                          <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_optional.xhtml">Optional&lt;ConstTensor&gt;</a>&amp;,</div><div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;                                          <span class="keyword">const</span> <span class="keywordtype">char</span>*)<span class="keyword"> override </span>{ DefaultPolicy::Apply(__func__); }</div><div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;</div><div class="line"><a name="l00093"></a><span class="lineno"><a class="line" href="classarmnn_1_1_layer_visitor_base.xhtml#aa27cc900d32dcc4a92f59e3bab4f4653">   93</a></span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classarmnn_1_1_layer_visitor_base.xhtml#aa27cc900d32dcc4a92f59e3bab4f4653">VisitDequantizeLayer</a>(<span class="keyword">const</span> <a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml">IConnectableLayer</a>*,</div><div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;                              <span class="keyword">const</span> <span class="keywordtype">char</span>*)<span class="keyword"> override </span>{ DefaultPolicy::Apply(__func__); }</div><div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;</div><div class="line"><a name="l00096"></a><span class="lineno"><a class="line" href="classarmnn_1_1_layer_visitor_base.xhtml#a88bad2eef809ccf6f2129f9ed4a6f3a7">   96</a></span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classarmnn_1_1_layer_visitor_base.xhtml#a88bad2eef809ccf6f2129f9ed4a6f3a7">VisitDetectionPostProcessLayer</a>(<span class="keyword">const</span> <a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml">IConnectableLayer</a>*,</div><div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;                                        <span class="keyword">const</span> <a class="code" href="structarmnn_1_1_detection_post_process_descriptor.xhtml">DetectionPostProcessDescriptor</a>&amp;,</div><div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;                                        <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_const_tensor.xhtml">ConstTensor</a>&amp;,</div><div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;                                        <span class="keyword">const</span> <span class="keywordtype">char</span>*)<span class="keyword"> override </span>{ DefaultPolicy::Apply(__func__); }</div><div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;</div><div class="line"><a name="l00101"></a><span class="lineno"><a class="line" href="classarmnn_1_1_layer_visitor_base.xhtml#a7450859464a381eafaedb33adc582f75">  101</a></span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classarmnn_1_1_layer_visitor_base.xhtml#a7450859464a381eafaedb33adc582f75">VisitDivisionLayer</a>(<span class="keyword">const</span> <a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml">IConnectableLayer</a>*,</div><div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;                            <span class="keyword">const</span> <span class="keywordtype">char</span>*)<span class="keyword"> override </span>{ DefaultPolicy::Apply(__func__); }</div><div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;</div><div class="line"><a name="l00104"></a><span class="lineno"><a class="line" href="classarmnn_1_1_layer_visitor_base.xhtml#a9d02f4bfaffcb16e340e9b8c20bc5e35">  104</a></span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classarmnn_1_1_layer_visitor_base.xhtml#a9d02f4bfaffcb16e340e9b8c20bc5e35">VisitElementwiseUnaryLayer</a>(<span class="keyword">const</span> <a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml">IConnectableLayer</a>*,</div><div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;                                    <span class="keyword">const</span> <a class="code" href="structarmnn_1_1_elementwise_unary_descriptor.xhtml">ElementwiseUnaryDescriptor</a>&amp;,</div><div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;                                    <span class="keyword">const</span> <span class="keywordtype">char</span>*)<span class="keyword"> override </span>{ DefaultPolicy::Apply(__func__); }</div><div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;</div><div class="line"><a name="l00108"></a><span class="lineno"><a class="line" href="classarmnn_1_1_layer_visitor_base.xhtml#ae343d79924ac474939c3e38a8b80004e">  108</a></span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classarmnn_1_1_layer_visitor_base.xhtml#ae343d79924ac474939c3e38a8b80004e">VisitFillLayer</a>(<span class="keyword">const</span> <a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml">IConnectableLayer</a>*,</div><div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;                        <span class="keyword">const</span> <a class="code" href="structarmnn_1_1_fill_descriptor.xhtml">FillDescriptor</a>&amp;,</div><div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;                        <span class="keyword">const</span> <span class="keywordtype">char</span>*)<span class="keyword"> override </span>{ DefaultPolicy::Apply(__func__); }</div><div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;</div><div class="line"><a name="l00112"></a><span class="lineno"><a class="line" href="classarmnn_1_1_layer_visitor_base.xhtml#a060c3a3f978fec03212afaff1fe1648d">  112</a></span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classarmnn_1_1_layer_visitor_base.xhtml#a060c3a3f978fec03212afaff1fe1648d">VisitFloorLayer</a>(<span class="keyword">const</span> <a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml">IConnectableLayer</a>*,</div><div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;                         <span class="keyword">const</span> <span class="keywordtype">char</span>*)<span class="keyword"> override </span>{ DefaultPolicy::Apply(__func__); }</div><div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;</div><div class="line"><a name="l00115"></a><span class="lineno"><a class="line" href="classarmnn_1_1_layer_visitor_base.xhtml#a0366c28438bfb9e14d7039e51140e29f">  115</a></span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classarmnn_1_1_layer_visitor_base.xhtml#a0366c28438bfb9e14d7039e51140e29f">VisitFullyConnectedLayer</a>(<span class="keyword">const</span> <a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml">IConnectableLayer</a>*,</div><div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;                                  <span class="keyword">const</span> <a class="code" href="structarmnn_1_1_fully_connected_descriptor.xhtml">FullyConnectedDescriptor</a>&amp;,</div><div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;                                  <span class="keyword">const</span> <span class="keywordtype">char</span>*)<span class="keyword"> override </span>{ DefaultPolicy::Apply(__func__); }</div><div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;</div><div class="line"><a name="l00119"></a><span class="lineno"><a class="line" href="classarmnn_1_1_layer_visitor_base.xhtml#a9049cf6d72d4b67fff93670f21c09da3">  119</a></span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classarmnn_1_1_layer_visitor_base.xhtml#a9049cf6d72d4b67fff93670f21c09da3">VisitFullyConnectedLayer</a>(<span class="keyword">const</span> <a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml">IConnectableLayer</a>*,</div><div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;                                  <span class="keyword">const</span> <a class="code" href="structarmnn_1_1_fully_connected_descriptor.xhtml">FullyConnectedDescriptor</a>&amp;,</div><div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;                                  <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_const_tensor.xhtml">ConstTensor</a>&amp;,</div><div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;                                  <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_optional.xhtml">Optional&lt;ConstTensor&gt;</a>&amp;,</div><div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;                                  <span class="keyword">const</span> <span class="keywordtype">char</span>*)<span class="keyword"> override </span>{ DefaultPolicy::Apply(__func__); }</div><div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;</div><div class="line"><a name="l00125"></a><span class="lineno"><a class="line" href="classarmnn_1_1_layer_visitor_base.xhtml#aea011723381847939ee1773d7c6fac25">  125</a></span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classarmnn_1_1_layer_visitor_base.xhtml#aea011723381847939ee1773d7c6fac25">VisitGatherLayer</a>(<span class="keyword">const</span> <a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml">IConnectableLayer</a>*,</div><div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;                          <span class="keyword">const</span> <a class="code" href="structarmnn_1_1_gather_descriptor.xhtml">GatherDescriptor</a>&amp;,</div><div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;                          <span class="keyword">const</span> <span class="keywordtype">char</span>*)<span class="keyword"> override </span>{ DefaultPolicy::Apply(__func__); }</div><div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;</div><div class="line"><a name="l00129"></a><span class="lineno"><a class="line" href="classarmnn_1_1_layer_visitor_base.xhtml#a6c23f9e9d8427775925d071feee5dbd1">  129</a></span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classarmnn_1_1_layer_visitor_base.xhtml#a6c23f9e9d8427775925d071feee5dbd1">VisitInputLayer</a>(<span class="keyword">const</span> <a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml">IConnectableLayer</a>*,</div><div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;                         <a class="code" href="namespacearmnn.xhtml#ab8cf8f9fb6792e654c2d8d8382f6f01b">LayerBindingId</a>,</div><div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;                         <span class="keyword">const</span> <span class="keywordtype">char</span>*)<span class="keyword"> override </span>{ DefaultPolicy::Apply(__func__); }</div><div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;</div><div class="line"><a name="l00133"></a><span class="lineno"><a class="line" href="classarmnn_1_1_layer_visitor_base.xhtml#a58f90a911e6827702c478cabaeac57fe">  133</a></span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classarmnn_1_1_layer_visitor_base.xhtml#a58f90a911e6827702c478cabaeac57fe">VisitInstanceNormalizationLayer</a>(<span class="keyword">const</span> <a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml">IConnectableLayer</a>*,</div><div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;                                         <span class="keyword">const</span> <a class="code" href="structarmnn_1_1_instance_normalization_descriptor.xhtml">InstanceNormalizationDescriptor</a>&amp;,</div><div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;                                         <span class="keyword">const</span> <span class="keywordtype">char</span>*)<span class="keyword"> override </span>{ DefaultPolicy::Apply(__func__); }</div><div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;</div><div class="line"><a name="l00137"></a><span class="lineno"><a class="line" href="classarmnn_1_1_layer_visitor_base.xhtml#ae68e2b431ea3d2822f19ad4ac806fdaa">  137</a></span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classarmnn_1_1_layer_visitor_base.xhtml#ae68e2b431ea3d2822f19ad4ac806fdaa">VisitL2NormalizationLayer</a>(<span class="keyword">const</span> <a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml">IConnectableLayer</a>*,</div><div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;                                   <span class="keyword">const</span> <a class="code" href="structarmnn_1_1_l2_normalization_descriptor.xhtml">L2NormalizationDescriptor</a>&amp;,</div><div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;                                   <span class="keyword">const</span> <span class="keywordtype">char</span>*)<span class="keyword"> override </span>{ DefaultPolicy::Apply(__func__); }</div><div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;</div><div class="line"><a name="l00141"></a><span class="lineno"><a class="line" href="classarmnn_1_1_layer_visitor_base.xhtml#a8d4d2e5580385ee664830720698d112c">  141</a></span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classarmnn_1_1_layer_visitor_base.xhtml#a8d4d2e5580385ee664830720698d112c">VisitLogSoftmaxLayer</a>(<span class="keyword">const</span> <a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml">IConnectableLayer</a>*,</div><div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;                              <span class="keyword">const</span> <a class="code" href="structarmnn_1_1_softmax_descriptor.xhtml">LogSoftmaxDescriptor</a>&amp;,</div><div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;                              <span class="keyword">const</span> <span class="keywordtype">char</span>*)<span class="keyword"> override </span>{ DefaultPolicy::Apply(__func__); }</div><div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;</div><div class="line"><a name="l00145"></a><span class="lineno"><a class="line" href="classarmnn_1_1_layer_visitor_base.xhtml#aa4f176ed33afb13a9e590b86990eaa3c">  145</a></span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classarmnn_1_1_layer_visitor_base.xhtml#aa4f176ed33afb13a9e590b86990eaa3c">VisitLogicalBinaryLayer</a>(<span class="keyword">const</span> <a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml">IConnectableLayer</a>*,</div><div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;                                 <span class="keyword">const</span> <a class="code" href="structarmnn_1_1_logical_binary_descriptor.xhtml">LogicalBinaryDescriptor</a>&amp;,</div><div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;                                 <span class="keyword">const</span> <span class="keywordtype">char</span>*)<span class="keyword"> override </span>{DefaultPolicy::Apply(__func__); }</div><div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;</div><div class="line"><a name="l00149"></a><span class="lineno"><a class="line" href="classarmnn_1_1_layer_visitor_base.xhtml#aaf1a238ec5b6bb172bc4cd3811f08b28">  149</a></span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classarmnn_1_1_layer_visitor_base.xhtml#aaf1a238ec5b6bb172bc4cd3811f08b28">VisitLstmLayer</a>(<span class="keyword">const</span> <a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml">IConnectableLayer</a>*,</div><div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;                        <span class="keyword">const</span> <a class="code" href="structarmnn_1_1_lstm_descriptor.xhtml">LstmDescriptor</a>&amp;,</div><div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;                        <span class="keyword">const</span> <a class="code" href="structarmnn_1_1_lstm_input_params.xhtml">LstmInputParams</a>&amp;,</div><div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;                        <span class="keyword">const</span> <span class="keywordtype">char</span>*)<span class="keyword"> override </span>{ DefaultPolicy::Apply(__func__); }</div><div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;</div><div class="line"><a name="l00154"></a><span class="lineno"><a class="line" href="classarmnn_1_1_layer_visitor_base.xhtml#a778e1b2219e3eb2d790d6e6e653a9f25">  154</a></span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classarmnn_1_1_layer_visitor_base.xhtml#a778e1b2219e3eb2d790d6e6e653a9f25">VisitMaximumLayer</a>(<span class="keyword">const</span> <a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml">IConnectableLayer</a>*,</div><div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;                           <span class="keyword">const</span> <span class="keywordtype">char</span>*)<span class="keyword"> override </span>{ DefaultPolicy::Apply(__func__); }</div><div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;</div><div class="line"><a name="l00157"></a><span class="lineno"><a class="line" href="classarmnn_1_1_layer_visitor_base.xhtml#a0180a15e542f4ef240fadc09fe4b2e3f">  157</a></span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classarmnn_1_1_layer_visitor_base.xhtml#a0180a15e542f4ef240fadc09fe4b2e3f">VisitMeanLayer</a>(<span class="keyword">const</span> <a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml">IConnectableLayer</a>*,</div><div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;                        <span class="keyword">const</span> <a class="code" href="structarmnn_1_1_mean_descriptor.xhtml">MeanDescriptor</a>&amp;,</div><div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160;                        <span class="keyword">const</span> <span class="keywordtype">char</span>*)<span class="keyword"> override </span>{ DefaultPolicy::Apply(__func__); }</div><div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160;</div><div class="line"><a name="l00161"></a><span class="lineno"><a class="line" href="classarmnn_1_1_layer_visitor_base.xhtml#aafb62c879f0c78bfdc3c4e4f2cb82e68">  161</a></span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classarmnn_1_1_layer_visitor_base.xhtml#aafb62c879f0c78bfdc3c4e4f2cb82e68">VisitMergeLayer</a>(<span class="keyword">const</span> <a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml">IConnectableLayer</a>*,</div><div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160;                         <span class="keyword">const</span> <span class="keywordtype">char</span>*)<span class="keyword"> override </span>{ DefaultPolicy::Apply(__func__); }</div><div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160;</div><div class="line"><a name="l00164"></a><span class="lineno"><a class="line" href="classarmnn_1_1_layer_visitor_base.xhtml#a1e24e9a7bf52efc1699c126435574e95">  164</a></span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classarmnn_1_1_layer_visitor_base.xhtml#a1e24e9a7bf52efc1699c126435574e95">VisitMinimumLayer</a>(<span class="keyword">const</span> <a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml">IConnectableLayer</a>*,</div><div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160;                           <span class="keyword">const</span> <span class="keywordtype">char</span>*)<span class="keyword"> override </span>{ DefaultPolicy::Apply(__func__); }</div><div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160;</div><div class="line"><a name="l00167"></a><span class="lineno"><a class="line" href="classarmnn_1_1_layer_visitor_base.xhtml#ac57d22126a9131108214df9177addade">  167</a></span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classarmnn_1_1_layer_visitor_base.xhtml#ac57d22126a9131108214df9177addade">VisitMultiplicationLayer</a>(<span class="keyword">const</span> <a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml">IConnectableLayer</a>*,</div><div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160;                                  <span class="keyword">const</span> <span class="keywordtype">char</span>*)<span class="keyword"> override </span>{ DefaultPolicy::Apply(__func__); }</div><div class="line"><a name="l00169"></a><span class="lineno">  169</span>&#160;</div><div class="line"><a name="l00170"></a><span class="lineno"><a class="line" href="classarmnn_1_1_layer_visitor_base.xhtml#a3150ff2299a2e193952300b8c9edd1e1">  170</a></span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classarmnn_1_1_layer_visitor_base.xhtml#a3150ff2299a2e193952300b8c9edd1e1">VisitNormalizationLayer</a>(<span class="keyword">const</span> <a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml">IConnectableLayer</a>*,</div><div class="line"><a name="l00171"></a><span class="lineno">  171</span>&#160;                                 <span class="keyword">const</span> <a class="code" href="structarmnn_1_1_normalization_descriptor.xhtml">NormalizationDescriptor</a>&amp;,</div><div class="line"><a name="l00172"></a><span class="lineno">  172</span>&#160;                                 <span class="keyword">const</span> <span class="keywordtype">char</span>*)<span class="keyword"> override </span>{ DefaultPolicy::Apply(__func__); }</div><div class="line"><a name="l00173"></a><span class="lineno">  173</span>&#160;</div><div class="line"><a name="l00174"></a><span class="lineno"><a class="line" href="classarmnn_1_1_layer_visitor_base.xhtml#acc39ddb06acfd91cf3cfb0fcd9337005">  174</a></span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classarmnn_1_1_layer_visitor_base.xhtml#acc39ddb06acfd91cf3cfb0fcd9337005">VisitOutputLayer</a>(<span class="keyword">const</span> <a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml">IConnectableLayer</a>*,</div><div class="line"><a name="l00175"></a><span class="lineno">  175</span>&#160;                          <a class="code" href="namespacearmnn.xhtml#ab8cf8f9fb6792e654c2d8d8382f6f01b">LayerBindingId</a>,</div><div class="line"><a name="l00176"></a><span class="lineno">  176</span>&#160;                          <span class="keyword">const</span> <span class="keywordtype">char</span>*)<span class="keyword"> override </span>{ DefaultPolicy::Apply(__func__); }</div><div class="line"><a name="l00177"></a><span class="lineno">  177</span>&#160;</div><div class="line"><a name="l00178"></a><span class="lineno"><a class="line" href="classarmnn_1_1_layer_visitor_base.xhtml#a8a240e1b725cc204bb468b6b402e1670">  178</a></span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classarmnn_1_1_layer_visitor_base.xhtml#a8a240e1b725cc204bb468b6b402e1670">VisitPadLayer</a>(<span class="keyword">const</span> <a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml">IConnectableLayer</a>*,</div><div class="line"><a name="l00179"></a><span class="lineno">  179</span>&#160;                       <span class="keyword">const</span> <a class="code" href="structarmnn_1_1_pad_descriptor.xhtml">PadDescriptor</a>&amp;,</div><div class="line"><a name="l00180"></a><span class="lineno">  180</span>&#160;                       <span class="keyword">const</span> <span class="keywordtype">char</span>*)<span class="keyword"> override </span>{ DefaultPolicy::Apply(__func__); }</div><div class="line"><a name="l00181"></a><span class="lineno">  181</span>&#160;</div><div class="line"><a name="l00182"></a><span class="lineno"><a class="line" href="classarmnn_1_1_layer_visitor_base.xhtml#a275f4c270ce472abc8701f6475ff7f38">  182</a></span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classarmnn_1_1_layer_visitor_base.xhtml#a275f4c270ce472abc8701f6475ff7f38">VisitPermuteLayer</a>(<span class="keyword">const</span> <a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml">IConnectableLayer</a>*,</div><div class="line"><a name="l00183"></a><span class="lineno">  183</span>&#160;                           <span class="keyword">const</span> <a class="code" href="structarmnn_1_1_permute_descriptor.xhtml">PermuteDescriptor</a>&amp;,</div><div class="line"><a name="l00184"></a><span class="lineno">  184</span>&#160;                           <span class="keyword">const</span> <span class="keywordtype">char</span>*)<span class="keyword"> override </span>{ DefaultPolicy::Apply(__func__); }</div><div class="line"><a name="l00185"></a><span class="lineno">  185</span>&#160;</div><div class="line"><a name="l00186"></a><span class="lineno"><a class="line" href="classarmnn_1_1_layer_visitor_base.xhtml#a5e369658cb00178eeb9136f1c912fd3f">  186</a></span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classarmnn_1_1_layer_visitor_base.xhtml#a5e369658cb00178eeb9136f1c912fd3f">VisitPooling2dLayer</a>(<span class="keyword">const</span> <a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml">IConnectableLayer</a>*,</div><div class="line"><a name="l00187"></a><span class="lineno">  187</span>&#160;                             <span class="keyword">const</span> <a class="code" href="structarmnn_1_1_pooling2d_descriptor.xhtml">Pooling2dDescriptor</a>&amp;,</div><div class="line"><a name="l00188"></a><span class="lineno">  188</span>&#160;                             <span class="keyword">const</span> <span class="keywordtype">char</span>*)<span class="keyword"> override </span>{ DefaultPolicy::Apply(__func__); }</div><div class="line"><a name="l00189"></a><span class="lineno">  189</span>&#160;</div><div class="line"><a name="l00190"></a><span class="lineno"><a class="line" href="classarmnn_1_1_layer_visitor_base.xhtml#a79c933bea6fb9986c3baa171be98da5c">  190</a></span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classarmnn_1_1_layer_visitor_base.xhtml#a79c933bea6fb9986c3baa171be98da5c">VisitPreluLayer</a>(<span class="keyword">const</span> <a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml">IConnectableLayer</a>*,</div><div class="line"><a name="l00191"></a><span class="lineno">  191</span>&#160;                         <span class="keyword">const</span> <span class="keywordtype">char</span>*)<span class="keyword"> override </span>{ DefaultPolicy::Apply(__func__); }</div><div class="line"><a name="l00192"></a><span class="lineno">  192</span>&#160;</div><div class="line"><a name="l00193"></a><span class="lineno"><a class="line" href="classarmnn_1_1_layer_visitor_base.xhtml#a8a6db421f0be147916cb4894ad3885d1">  193</a></span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classarmnn_1_1_layer_visitor_base.xhtml#a8a6db421f0be147916cb4894ad3885d1">VisitQuantizeLayer</a>(<span class="keyword">const</span> <a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml">IConnectableLayer</a>*,</div><div class="line"><a name="l00194"></a><span class="lineno">  194</span>&#160;                            <span class="keyword">const</span> <span class="keywordtype">char</span>*)<span class="keyword"> override </span>{ DefaultPolicy::Apply(__func__); }</div><div class="line"><a name="l00195"></a><span class="lineno">  195</span>&#160;</div><div class="line"><a name="l00196"></a><span class="lineno"><a class="line" href="classarmnn_1_1_layer_visitor_base.xhtml#ab80f8f2c2202a4651c63757b307a21b7">  196</a></span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classarmnn_1_1_layer_visitor_base.xhtml#ab80f8f2c2202a4651c63757b307a21b7">VisitQLstmLayer</a>(<span class="keyword">const</span> <a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml">IConnectableLayer</a>*,</div><div class="line"><a name="l00197"></a><span class="lineno">  197</span>&#160;                         <span class="keyword">const</span> <a class="code" href="structarmnn_1_1_q_lstm_descriptor.xhtml">QLstmDescriptor</a>&amp;,</div><div class="line"><a name="l00198"></a><span class="lineno">  198</span>&#160;                         <span class="keyword">const</span> <a class="code" href="structarmnn_1_1_lstm_input_params.xhtml">LstmInputParams</a>&amp;,</div><div class="line"><a name="l00199"></a><span class="lineno">  199</span>&#160;                         <span class="keyword">const</span> <span class="keywordtype">char</span>*)<span class="keyword"> override </span>{ DefaultPolicy::Apply(__func__); }</div><div class="line"><a name="l00200"></a><span class="lineno">  200</span>&#160;</div><div class="line"><a name="l00201"></a><span class="lineno"><a class="line" href="classarmnn_1_1_layer_visitor_base.xhtml#a2fdb21a22a95af72177b4e909741b5c7">  201</a></span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classarmnn_1_1_layer_visitor_base.xhtml#a2fdb21a22a95af72177b4e909741b5c7">VisitQuantizedLstmLayer</a>(<span class="keyword">const</span> <a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml">IConnectableLayer</a>*,</div><div class="line"><a name="l00202"></a><span class="lineno">  202</span>&#160;                                 <span class="keyword">const</span> <a class="code" href="structarmnn_1_1_quantized_lstm_input_params.xhtml">QuantizedLstmInputParams</a>&amp;,</div><div class="line"><a name="l00203"></a><span class="lineno">  203</span>&#160;                                 <span class="keyword">const</span> <span class="keywordtype">char</span>*)<span class="keyword"> override </span>{ DefaultPolicy::Apply(__func__); }</div><div class="line"><a name="l00204"></a><span class="lineno">  204</span>&#160;</div><div class="line"><a name="l00205"></a><span class="lineno"><a class="line" href="classarmnn_1_1_layer_visitor_base.xhtml#a0e6452322927acf6fe4e38ca9cc6d117">  205</a></span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classarmnn_1_1_layer_visitor_base.xhtml#a0e6452322927acf6fe4e38ca9cc6d117">VisitRankLayer</a>(<span class="keyword">const</span> <a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml">IConnectableLayer</a>*,</div><div class="line"><a name="l00206"></a><span class="lineno">  206</span>&#160;                        <span class="keyword">const</span> <span class="keywordtype">char</span>*)<span class="keyword"> override </span>{ DefaultPolicy::Apply(__func__); }</div><div class="line"><a name="l00207"></a><span class="lineno">  207</span>&#160;</div><div class="line"><a name="l00208"></a><span class="lineno"><a class="line" href="classarmnn_1_1_layer_visitor_base.xhtml#a4aafbeec347992842c3e18eaf735cbfc">  208</a></span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classarmnn_1_1_layer_visitor_base.xhtml#a4aafbeec347992842c3e18eaf735cbfc">VisitReduceLayer</a>(<span class="keyword">const</span> <a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml">IConnectableLayer</a>*,</div><div class="line"><a name="l00209"></a><span class="lineno">  209</span>&#160;                          <span class="keyword">const</span> <a class="code" href="structarmnn_1_1_reduce_descriptor.xhtml">ReduceDescriptor</a>&amp;,</div><div class="line"><a name="l00210"></a><span class="lineno">  210</span>&#160;                          <span class="keyword">const</span> <span class="keywordtype">char</span>*)<span class="keyword"> override </span>{ DefaultPolicy::Apply(__func__); }</div><div class="line"><a name="l00211"></a><span class="lineno">  211</span>&#160;</div><div class="line"><a name="l00212"></a><span class="lineno"><a class="line" href="classarmnn_1_1_layer_visitor_base.xhtml#a9ebd504c48864d63917836e0dc335725">  212</a></span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classarmnn_1_1_layer_visitor_base.xhtml#a9ebd504c48864d63917836e0dc335725">VisitReshapeLayer</a>(<span class="keyword">const</span> <a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml">IConnectableLayer</a>*,</div><div class="line"><a name="l00213"></a><span class="lineno">  213</span>&#160;                           <span class="keyword">const</span> <a class="code" href="structarmnn_1_1_reshape_descriptor.xhtml">ReshapeDescriptor</a>&amp;,</div><div class="line"><a name="l00214"></a><span class="lineno">  214</span>&#160;                           <span class="keyword">const</span> <span class="keywordtype">char</span>*)<span class="keyword"> override </span>{ DefaultPolicy::Apply(__func__); }</div><div class="line"><a name="l00215"></a><span class="lineno">  215</span>&#160;</div><div class="line"><a name="l00216"></a><span class="lineno"><a class="line" href="classarmnn_1_1_layer_visitor_base.xhtml#a49c296c5d0f9efb76f165954cf40c281">  216</a></span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classarmnn_1_1_layer_visitor_base.xhtml#a49c296c5d0f9efb76f165954cf40c281">VisitResizeLayer</a>(<span class="keyword">const</span> <a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml">IConnectableLayer</a>*,</div><div class="line"><a name="l00217"></a><span class="lineno">  217</span>&#160;                          <span class="keyword">const</span> <a class="code" href="structarmnn_1_1_resize_descriptor.xhtml">ResizeDescriptor</a>&amp;,</div><div class="line"><a name="l00218"></a><span class="lineno">  218</span>&#160;                          <span class="keyword">const</span> <span class="keywordtype">char</span>*)<span class="keyword"> override </span>{ DefaultPolicy::Apply(__func__); }</div><div class="line"><a name="l00219"></a><span class="lineno">  219</span>&#160;</div><div class="line"><a name="l00220"></a><span class="lineno"><a class="line" href="classarmnn_1_1_layer_visitor_base.xhtml#a1c023b3170bed9368b65730bc7fff60b">  220</a></span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classarmnn_1_1_layer_visitor_base.xhtml#a1c023b3170bed9368b65730bc7fff60b">VisitSliceLayer</a>(<span class="keyword">const</span> <a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml">IConnectableLayer</a>*,</div><div class="line"><a name="l00221"></a><span class="lineno">  221</span>&#160;                         <span class="keyword">const</span> <a class="code" href="structarmnn_1_1_slice_descriptor.xhtml">SliceDescriptor</a>&amp;,</div><div class="line"><a name="l00222"></a><span class="lineno">  222</span>&#160;                         <span class="keyword">const</span> <span class="keywordtype">char</span>*)<span class="keyword"> override </span>{ DefaultPolicy::Apply(__func__); }</div><div class="line"><a name="l00223"></a><span class="lineno">  223</span>&#160;</div><div class="line"><a name="l00224"></a><span class="lineno"><a class="line" href="classarmnn_1_1_layer_visitor_base.xhtml#abd8b0b2e365bbeabceddc35a1cb52916">  224</a></span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classarmnn_1_1_layer_visitor_base.xhtml#abd8b0b2e365bbeabceddc35a1cb52916">VisitSoftmaxLayer</a>(<span class="keyword">const</span> <a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml">IConnectableLayer</a>*,</div><div class="line"><a name="l00225"></a><span class="lineno">  225</span>&#160;                           <span class="keyword">const</span> <a class="code" href="structarmnn_1_1_softmax_descriptor.xhtml">SoftmaxDescriptor</a>&amp;,</div><div class="line"><a name="l00226"></a><span class="lineno">  226</span>&#160;                           <span class="keyword">const</span> <span class="keywordtype">char</span>*)<span class="keyword"> override </span>{ DefaultPolicy::Apply(__func__); }</div><div class="line"><a name="l00227"></a><span class="lineno">  227</span>&#160;</div><div class="line"><a name="l00228"></a><span class="lineno"><a class="line" href="classarmnn_1_1_layer_visitor_base.xhtml#a9478c4f41840a2e2c12b7f336e725a8a">  228</a></span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classarmnn_1_1_layer_visitor_base.xhtml#a9478c4f41840a2e2c12b7f336e725a8a">VisitSpaceToBatchNdLayer</a>(<span class="keyword">const</span> <a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml">IConnectableLayer</a>*,</div><div class="line"><a name="l00229"></a><span class="lineno">  229</span>&#160;                                  <span class="keyword">const</span> <a class="code" href="structarmnn_1_1_space_to_batch_nd_descriptor.xhtml">SpaceToBatchNdDescriptor</a>&amp;,</div><div class="line"><a name="l00230"></a><span class="lineno">  230</span>&#160;                                  <span class="keyword">const</span> <span class="keywordtype">char</span>*)<span class="keyword"> override </span>{ DefaultPolicy::Apply(__func__); }</div><div class="line"><a name="l00231"></a><span class="lineno">  231</span>&#160;</div><div class="line"><a name="l00232"></a><span class="lineno"><a class="line" href="classarmnn_1_1_layer_visitor_base.xhtml#acdedda623455cc7a0f982d6f4e96d53a">  232</a></span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classarmnn_1_1_layer_visitor_base.xhtml#acdedda623455cc7a0f982d6f4e96d53a">VisitSpaceToDepthLayer</a>(<span class="keyword">const</span> <a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml">IConnectableLayer</a>*,</div><div class="line"><a name="l00233"></a><span class="lineno">  233</span>&#160;                                <span class="keyword">const</span> <a class="code" href="structarmnn_1_1_space_to_depth_descriptor.xhtml">SpaceToDepthDescriptor</a>&amp;,</div><div class="line"><a name="l00234"></a><span class="lineno">  234</span>&#160;                                <span class="keyword">const</span> <span class="keywordtype">char</span>*)<span class="keyword"> override </span>{ DefaultPolicy::Apply(__func__); }</div><div class="line"><a name="l00235"></a><span class="lineno">  235</span>&#160;</div><div class="line"><a name="l00236"></a><span class="lineno"><a class="line" href="classarmnn_1_1_layer_visitor_base.xhtml#a8689a80f8939de6323319aba5806ee9e">  236</a></span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classarmnn_1_1_layer_visitor_base.xhtml#a8689a80f8939de6323319aba5806ee9e">VisitSplitterLayer</a>(<span class="keyword">const</span> <a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml">IConnectableLayer</a>*,</div><div class="line"><a name="l00237"></a><span class="lineno">  237</span>&#160;                            <span class="keyword">const</span> <a class="code" href="structarmnn_1_1_views_descriptor.xhtml">ViewsDescriptor</a>&amp;,</div><div class="line"><a name="l00238"></a><span class="lineno">  238</span>&#160;                            <span class="keyword">const</span> <span class="keywordtype">char</span>*)<span class="keyword"> override </span>{ DefaultPolicy::Apply(__func__); }</div><div class="line"><a name="l00239"></a><span class="lineno">  239</span>&#160;</div><div class="line"><a name="l00240"></a><span class="lineno"><a class="line" href="classarmnn_1_1_layer_visitor_base.xhtml#a8b47d411d147aa420f7a69356d84fb80">  240</a></span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classarmnn_1_1_layer_visitor_base.xhtml#a8b47d411d147aa420f7a69356d84fb80">VisitStackLayer</a>(<span class="keyword">const</span> <a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml">IConnectableLayer</a>*,</div><div class="line"><a name="l00241"></a><span class="lineno">  241</span>&#160;                         <span class="keyword">const</span> <a class="code" href="structarmnn_1_1_stack_descriptor.xhtml">StackDescriptor</a>&amp;,</div><div class="line"><a name="l00242"></a><span class="lineno">  242</span>&#160;                         <span class="keyword">const</span> <span class="keywordtype">char</span>*)<span class="keyword"> override </span>{ DefaultPolicy::Apply(__func__); }</div><div class="line"><a name="l00243"></a><span class="lineno">  243</span>&#160;</div><div class="line"><a name="l00244"></a><span class="lineno"><a class="line" href="classarmnn_1_1_layer_visitor_base.xhtml#a3c15053a7e295099a1a34c4add5a03b8">  244</a></span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classarmnn_1_1_layer_visitor_base.xhtml#a3c15053a7e295099a1a34c4add5a03b8">VisitStandInLayer</a>(<span class="keyword">const</span> <a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml">IConnectableLayer</a>*,</div><div class="line"><a name="l00245"></a><span class="lineno">  245</span>&#160;                           <span class="keyword">const</span> <a class="code" href="structarmnn_1_1_stand_in_descriptor.xhtml">StandInDescriptor</a>&amp;,</div><div class="line"><a name="l00246"></a><span class="lineno">  246</span>&#160;                           <span class="keyword">const</span> <span class="keywordtype">char</span>*)<span class="keyword"> override </span>{ DefaultPolicy::Apply(__func__); }</div><div class="line"><a name="l00247"></a><span class="lineno">  247</span>&#160;</div><div class="line"><a name="l00248"></a><span class="lineno"><a class="line" href="classarmnn_1_1_layer_visitor_base.xhtml#a31862ce4ffaddde96ebe0afcf04f3577">  248</a></span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classarmnn_1_1_layer_visitor_base.xhtml#a31862ce4ffaddde96ebe0afcf04f3577">VisitStridedSliceLayer</a>(<span class="keyword">const</span> <a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml">IConnectableLayer</a>*,</div><div class="line"><a name="l00249"></a><span class="lineno">  249</span>&#160;                                <span class="keyword">const</span> <a class="code" href="structarmnn_1_1_strided_slice_descriptor.xhtml">StridedSliceDescriptor</a>&amp;,</div><div class="line"><a name="l00250"></a><span class="lineno">  250</span>&#160;                                <span class="keyword">const</span> <span class="keywordtype">char</span>*)<span class="keyword"> override </span>{ DefaultPolicy::Apply(__func__); }</div><div class="line"><a name="l00251"></a><span class="lineno">  251</span>&#160;</div><div class="line"><a name="l00252"></a><span class="lineno"><a class="line" href="classarmnn_1_1_layer_visitor_base.xhtml#ac42c3a57a82260c8315d4f0320620934">  252</a></span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classarmnn_1_1_layer_visitor_base.xhtml#ac42c3a57a82260c8315d4f0320620934">VisitSubtractionLayer</a>(<span class="keyword">const</span> <a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml">IConnectableLayer</a>*,</div><div class="line"><a name="l00253"></a><span class="lineno">  253</span>&#160;                               <span class="keyword">const</span> <span class="keywordtype">char</span>*)<span class="keyword"> override </span>{ DefaultPolicy::Apply(__func__); }</div><div class="line"><a name="l00254"></a><span class="lineno">  254</span>&#160;</div><div class="line"><a name="l00255"></a><span class="lineno"><a class="line" href="classarmnn_1_1_layer_visitor_base.xhtml#a877d400155151a5afba9f0b17fbcf8f3">  255</a></span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classarmnn_1_1_layer_visitor_base.xhtml#a877d400155151a5afba9f0b17fbcf8f3">VisitSwitchLayer</a>(<span class="keyword">const</span> <a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml">IConnectableLayer</a>*,</div><div class="line"><a name="l00256"></a><span class="lineno">  256</span>&#160;                          <span class="keyword">const</span> <span class="keywordtype">char</span>*)<span class="keyword"> override </span>{ DefaultPolicy::Apply(__func__); }</div><div class="line"><a name="l00257"></a><span class="lineno">  257</span>&#160;</div><div class="line"><a name="l00258"></a><span class="lineno"><a class="line" href="classarmnn_1_1_layer_visitor_base.xhtml#a4dfb04de9aa0b8b55c70fe96af13e1e1">  258</a></span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classarmnn_1_1_layer_visitor_base.xhtml#a4dfb04de9aa0b8b55c70fe96af13e1e1">VisitTransposeConvolution2dLayer</a>(<span class="keyword">const</span> <a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml">IConnectableLayer</a>*,</div><div class="line"><a name="l00259"></a><span class="lineno">  259</span>&#160;                                          <span class="keyword">const</span> <a class="code" href="structarmnn_1_1_transpose_convolution2d_descriptor.xhtml">TransposeConvolution2dDescriptor</a>&amp;,</div><div class="line"><a name="l00260"></a><span class="lineno">  260</span>&#160;                                          <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_const_tensor.xhtml">ConstTensor</a>&amp;,</div><div class="line"><a name="l00261"></a><span class="lineno">  261</span>&#160;                                          <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_optional.xhtml">Optional&lt;ConstTensor&gt;</a>&amp;,</div><div class="line"><a name="l00262"></a><span class="lineno">  262</span>&#160;                                          <span class="keyword">const</span> <span class="keywordtype">char</span>*)<span class="keyword"> override </span>{ DefaultPolicy::Apply(__func__); }</div><div class="line"><a name="l00263"></a><span class="lineno">  263</span>&#160;</div><div class="line"><a name="l00264"></a><span class="lineno"><a class="line" href="classarmnn_1_1_layer_visitor_base.xhtml#a2cb213b083367f4fe9bed2916206525f">  264</a></span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classarmnn_1_1_layer_visitor_base.xhtml#a2cb213b083367f4fe9bed2916206525f">VisitTransposeLayer</a>(<span class="keyword">const</span> <a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml">IConnectableLayer</a>*,</div><div class="line"><a name="l00265"></a><span class="lineno">  265</span>&#160;                             <span class="keyword">const</span> <a class="code" href="structarmnn_1_1_transpose_descriptor.xhtml">TransposeDescriptor</a>&amp;,</div><div class="line"><a name="l00266"></a><span class="lineno">  266</span>&#160;                             <span class="keyword">const</span> <span class="keywordtype">char</span>*)<span class="keyword"> override </span>{ DefaultPolicy::Apply(__func__); }</div><div class="line"><a name="l00267"></a><span class="lineno">  267</span>&#160;</div><div class="line"><a name="l00268"></a><span class="lineno">  268</span>&#160;};</div><div class="line"><a name="l00269"></a><span class="lineno">  269</span>&#160;<a class="code" href="_deprecated_8hpp.xhtml#ad762b11b48e5c1d1c1743f529485728a">ARMNN_NO_DEPRECATE_WARN_END</a></div><div class="line"><a name="l00270"></a><span class="lineno">  270</span>&#160;</div><div class="line"><a name="l00271"></a><span class="lineno">  271</span>&#160;} <span class="comment">// namespace armnn</span></div><div class="ttc" id="classarmnn_1_1_layer_visitor_base_xhtml_ab59e5e8c65aa44857c27db70fc412baa"><div class="ttname"><a href="classarmnn_1_1_layer_visitor_base.xhtml#ab59e5e8c65aa44857c27db70fc412baa">armnn::LayerVisitorBase::~LayerVisitorBase</a></div><div class="ttdeci">virtual ~LayerVisitorBase()</div><div class="ttdef"><b>Definition:</b> <a href="_layer_visitor_base_8hpp_source.xhtml#l00030">LayerVisitorBase.hpp:30</a></div></div>
<div class="ttc" id="classarmnn_1_1_layer_visitor_base_xhtml_ae68e2b431ea3d2822f19ad4ac806fdaa"><div class="ttname"><a href="classarmnn_1_1_layer_visitor_base.xhtml#ae68e2b431ea3d2822f19ad4ac806fdaa">armnn::LayerVisitorBase::VisitL2NormalizationLayer</a></div><div class="ttdeci">void VisitL2NormalizationLayer(const IConnectableLayer *, const L2NormalizationDescriptor &amp;, const char *) override</div><div class="ttdef"><b>Definition:</b> <a href="_layer_visitor_base_8hpp_source.xhtml#l00137">LayerVisitorBase.hpp:137</a></div></div>
<div class="ttc" id="classarmnn_1_1_layer_visitor_base_xhtml_a5e369658cb00178eeb9136f1c912fd3f"><div class="ttname"><a href="classarmnn_1_1_layer_visitor_base.xhtml#a5e369658cb00178eeb9136f1c912fd3f">armnn::LayerVisitorBase::VisitPooling2dLayer</a></div><div class="ttdeci">void VisitPooling2dLayer(const IConnectableLayer *, const Pooling2dDescriptor &amp;, const char *) override</div><div class="ttdef"><b>Definition:</b> <a href="_layer_visitor_base_8hpp_source.xhtml#l00186">LayerVisitorBase.hpp:186</a></div></div>
<div class="ttc" id="classarmnn_1_1_layer_visitor_base_xhtml_aafb62c879f0c78bfdc3c4e4f2cb82e68"><div class="ttname"><a href="classarmnn_1_1_layer_visitor_base.xhtml#aafb62c879f0c78bfdc3c4e4f2cb82e68">armnn::LayerVisitorBase::VisitMergeLayer</a></div><div class="ttdeci">void VisitMergeLayer(const IConnectableLayer *, const char *) override</div><div class="ttdef"><b>Definition:</b> <a href="_layer_visitor_base_8hpp_source.xhtml#l00161">LayerVisitorBase.hpp:161</a></div></div>
<div class="ttc" id="structarmnn_1_1_views_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_views_descriptor.xhtml">armnn::ViewsDescriptor</a></div><div class="ttdoc">A ViewsDescriptor for the SplitterLayer. </div><div class="ttdef"><b>Definition:</b> <a href="_descriptors_8hpp_source.xhtml#l00217">Descriptors.hpp:217</a></div></div>
<div class="ttc" id="classarmnn_1_1_i_connectable_layer_xhtml"><div class="ttname"><a href="classarmnn_1_1_i_connectable_layer.xhtml">armnn::IConnectableLayer</a></div><div class="ttdoc">Interface for a layer that is connectable to other layers via InputSlots and OutputSlots. </div><div class="ttdef"><b>Definition:</b> <a href="_i_network_8hpp_source.xhtml#l00066">INetwork.hpp:66</a></div></div>
<div class="ttc" id="classarmnn_1_1_layer_visitor_base_xhtml_aa4f176ed33afb13a9e590b86990eaa3c"><div class="ttname"><a href="classarmnn_1_1_layer_visitor_base.xhtml#aa4f176ed33afb13a9e590b86990eaa3c">armnn::LayerVisitorBase::VisitLogicalBinaryLayer</a></div><div class="ttdeci">void VisitLogicalBinaryLayer(const IConnectableLayer *, const LogicalBinaryDescriptor &amp;, const char *) override</div><div class="ttdef"><b>Definition:</b> <a href="_layer_visitor_base_8hpp_source.xhtml#l00145">LayerVisitorBase.hpp:145</a></div></div>
<div class="ttc" id="structarmnn_1_1_visitor_throwing_policy_xhtml_a7d755e4a31c677af83e4fe3d7f1c3717"><div class="ttname"><a href="structarmnn_1_1_visitor_throwing_policy.xhtml#a7d755e4a31c677af83e4fe3d7f1c3717">armnn::VisitorThrowingPolicy::Apply</a></div><div class="ttdeci">static void Apply(const std::string &amp;errorMessage=&quot;&quot;)</div><div class="ttdef"><b>Definition:</b> <a href="_layer_visitor_base_8hpp_source.xhtml#l00015">LayerVisitorBase.hpp:15</a></div></div>
<div class="ttc" id="classarmnn_1_1_layer_visitor_base_xhtml_a6c23f9e9d8427775925d071feee5dbd1"><div class="ttname"><a href="classarmnn_1_1_layer_visitor_base.xhtml#a6c23f9e9d8427775925d071feee5dbd1">armnn::LayerVisitorBase::VisitInputLayer</a></div><div class="ttdeci">void VisitInputLayer(const IConnectableLayer *, LayerBindingId, const char *) override</div><div class="ttdef"><b>Definition:</b> <a href="_layer_visitor_base_8hpp_source.xhtml#l00129">LayerVisitorBase.hpp:129</a></div></div>
<div class="ttc" id="classarmnn_1_1_layer_visitor_base_xhtml_a275f4c270ce472abc8701f6475ff7f38"><div class="ttname"><a href="classarmnn_1_1_layer_visitor_base.xhtml#a275f4c270ce472abc8701f6475ff7f38">armnn::LayerVisitorBase::VisitPermuteLayer</a></div><div class="ttdeci">void VisitPermuteLayer(const IConnectableLayer *, const PermuteDescriptor &amp;, const char *) override</div><div class="ttdef"><b>Definition:</b> <a href="_layer_visitor_base_8hpp_source.xhtml#l00182">LayerVisitorBase.hpp:182</a></div></div>
<div class="ttc" id="classarmnn_1_1_layer_visitor_base_xhtml_a31862ce4ffaddde96ebe0afcf04f3577"><div class="ttname"><a href="classarmnn_1_1_layer_visitor_base.xhtml#a31862ce4ffaddde96ebe0afcf04f3577">armnn::LayerVisitorBase::VisitStridedSliceLayer</a></div><div class="ttdeci">void VisitStridedSliceLayer(const IConnectableLayer *, const StridedSliceDescriptor &amp;, const char *) override</div><div class="ttdef"><b>Definition:</b> <a href="_layer_visitor_base_8hpp_source.xhtml#l00248">LayerVisitorBase.hpp:248</a></div></div>
<div class="ttc" id="structarmnn_1_1_transpose_convolution2d_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_transpose_convolution2d_descriptor.xhtml">armnn::TransposeConvolution2dDescriptor</a></div><div class="ttdoc">A TransposeConvolution2dDescriptor for the TransposeConvolution2dLayer. </div><div class="ttdef"><b>Definition:</b> <a href="_descriptors_8hpp_source.xhtml#l01421">Descriptors.hpp:1421</a></div></div>
<div class="ttc" id="classarmnn_1_1_layer_visitor_base_xhtml_a4dfb04de9aa0b8b55c70fe96af13e1e1"><div class="ttname"><a href="classarmnn_1_1_layer_visitor_base.xhtml#a4dfb04de9aa0b8b55c70fe96af13e1e1">armnn::LayerVisitorBase::VisitTransposeConvolution2dLayer</a></div><div class="ttdeci">void VisitTransposeConvolution2dLayer(const IConnectableLayer *, const TransposeConvolution2dDescriptor &amp;, const ConstTensor &amp;, const Optional&lt; ConstTensor &gt; &amp;, const char *) override</div><div class="ttdef"><b>Definition:</b> <a href="_layer_visitor_base_8hpp_source.xhtml#l00258">LayerVisitorBase.hpp:258</a></div></div>
<div class="ttc" id="classarmnn_1_1_layer_visitor_base_xhtml_a79c933bea6fb9986c3baa171be98da5c"><div class="ttname"><a href="classarmnn_1_1_layer_visitor_base.xhtml#a79c933bea6fb9986c3baa171be98da5c">armnn::LayerVisitorBase::VisitPreluLayer</a></div><div class="ttdeci">void VisitPreluLayer(const IConnectableLayer *, const char *) override</div><div class="ttdef"><b>Definition:</b> <a href="_layer_visitor_base_8hpp_source.xhtml#l00190">LayerVisitorBase.hpp:190</a></div></div>
<div class="ttc" id="classarmnn_1_1_optional_xhtml"><div class="ttname"><a href="classarmnn_1_1_optional.xhtml">armnn::Optional</a></div><div class="ttdef"><b>Definition:</b> <a href="_optional_8hpp_source.xhtml#l00270">Optional.hpp:270</a></div></div>
<div class="ttc" id="classarmnn_1_1_layer_visitor_base_xhtml_a58f90a911e6827702c478cabaeac57fe"><div class="ttname"><a href="classarmnn_1_1_layer_visitor_base.xhtml#a58f90a911e6827702c478cabaeac57fe">armnn::LayerVisitorBase::VisitInstanceNormalizationLayer</a></div><div class="ttdeci">void VisitInstanceNormalizationLayer(const IConnectableLayer *, const InstanceNormalizationDescriptor &amp;, const char *) override</div><div class="ttdef"><b>Definition:</b> <a href="_layer_visitor_base_8hpp_source.xhtml#l00133">LayerVisitorBase.hpp:133</a></div></div>
<div class="ttc" id="structarmnn_1_1_reshape_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_reshape_descriptor.xhtml">armnn::ReshapeDescriptor</a></div><div class="ttdoc">A ReshapeDescriptor for the ReshapeLayer. </div><div class="ttdef"><b>Definition:</b> <a href="_descriptors_8hpp_source.xhtml#l01004">Descriptors.hpp:1004</a></div></div>
<div class="ttc" id="_deprecated_8hpp_xhtml_ab66a241a0ed3ee89c866e777b035d0ed"><div class="ttname"><a href="_deprecated_8hpp.xhtml#ab66a241a0ed3ee89c866e777b035d0ed">ARMNN_NO_DEPRECATE_WARN_BEGIN</a></div><div class="ttdeci">#define ARMNN_NO_DEPRECATE_WARN_BEGIN</div><div class="ttdef"><b>Definition:</b> <a href="_deprecated_8hpp_source.xhtml#l00033">Deprecated.hpp:33</a></div></div>
<div class="ttc" id="classarmnn_1_1_layer_visitor_base_xhtml_a70050fc50ee44a439665f914d5fe9684"><div class="ttname"><a href="classarmnn_1_1_layer_visitor_base.xhtml#a70050fc50ee44a439665f914d5fe9684">armnn::LayerVisitorBase::VisitDepthwiseConvolution2dLayer</a></div><div class="ttdeci">void VisitDepthwiseConvolution2dLayer(const IConnectableLayer *, const DepthwiseConvolution2dDescriptor &amp;, const ConstTensor &amp;, const Optional&lt; ConstTensor &gt; &amp;, const char *) override</div><div class="ttdef"><b>Definition:</b> <a href="_layer_visitor_base_8hpp_source.xhtml#l00087">LayerVisitorBase.hpp:87</a></div></div>
<div class="ttc" id="classarmnn_1_1_layer_visitor_base_xhtml_acdedda623455cc7a0f982d6f4e96d53a"><div class="ttname"><a href="classarmnn_1_1_layer_visitor_base.xhtml#acdedda623455cc7a0f982d6f4e96d53a">armnn::LayerVisitorBase::VisitSpaceToDepthLayer</a></div><div class="ttdeci">void VisitSpaceToDepthLayer(const IConnectableLayer *, const SpaceToDepthDescriptor &amp;, const char *) override</div><div class="ttdef"><b>Definition:</b> <a href="_layer_visitor_base_8hpp_source.xhtml#l00232">LayerVisitorBase.hpp:232</a></div></div>
<div class="ttc" id="structarmnn_1_1_comparison_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_comparison_descriptor.xhtml">armnn::ComparisonDescriptor</a></div><div class="ttdoc">A ComparisonDescriptor for the ComparisonLayer. </div><div class="ttdef"><b>Definition:</b> <a href="_descriptors_8hpp_source.xhtml#l00089">Descriptors.hpp:89</a></div></div>
<div class="ttc" id="classarmnn_1_1_layer_visitor_base_xhtml_a8689a80f8939de6323319aba5806ee9e"><div class="ttname"><a href="classarmnn_1_1_layer_visitor_base.xhtml#a8689a80f8939de6323319aba5806ee9e">armnn::LayerVisitorBase::VisitSplitterLayer</a></div><div class="ttdeci">void VisitSplitterLayer(const IConnectableLayer *, const ViewsDescriptor &amp;, const char *) override</div><div class="ttdef"><b>Definition:</b> <a href="_layer_visitor_base_8hpp_source.xhtml#l00236">LayerVisitorBase.hpp:236</a></div></div>
<div class="ttc" id="structarmnn_1_1_visitor_throwing_policy_xhtml"><div class="ttname"><a href="structarmnn_1_1_visitor_throwing_policy.xhtml">armnn::VisitorThrowingPolicy</a></div><div class="ttdef"><b>Definition:</b> <a href="_layer_visitor_base_8hpp_source.xhtml#l00013">LayerVisitorBase.hpp:13</a></div></div>
<div class="ttc" id="structarmnn_1_1_convolution2d_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_convolution2d_descriptor.xhtml">armnn::Convolution2dDescriptor</a></div><div class="ttdoc">A Convolution2dDescriptor for the Convolution2dLayer. </div><div class="ttdef"><b>Definition:</b> <a href="_descriptors_8hpp_source.xhtml#l00499">Descriptors.hpp:499</a></div></div>
<div class="ttc" id="classarmnn_1_1_layer_visitor_base_xhtml_aa27cc900d32dcc4a92f59e3bab4f4653"><div class="ttname"><a href="classarmnn_1_1_layer_visitor_base.xhtml#aa27cc900d32dcc4a92f59e3bab4f4653">armnn::LayerVisitorBase::VisitDequantizeLayer</a></div><div class="ttdeci">void VisitDequantizeLayer(const IConnectableLayer *, const char *) override</div><div class="ttdef"><b>Definition:</b> <a href="_layer_visitor_base_8hpp_source.xhtml#l00093">LayerVisitorBase.hpp:93</a></div></div>
<div class="ttc" id="classarmnn_1_1_layer_visitor_base_xhtml_a49c296c5d0f9efb76f165954cf40c281"><div class="ttname"><a href="classarmnn_1_1_layer_visitor_base.xhtml#a49c296c5d0f9efb76f165954cf40c281">armnn::LayerVisitorBase::VisitResizeLayer</a></div><div class="ttdeci">void VisitResizeLayer(const IConnectableLayer *, const ResizeDescriptor &amp;, const char *) override</div><div class="ttdef"><b>Definition:</b> <a href="_layer_visitor_base_8hpp_source.xhtml#l00216">LayerVisitorBase.hpp:216</a></div></div>
<div class="ttc" id="classarmnn_1_1_layer_visitor_base_xhtml_a0366c28438bfb9e14d7039e51140e29f"><div class="ttname"><a href="classarmnn_1_1_layer_visitor_base.xhtml#a0366c28438bfb9e14d7039e51140e29f">armnn::LayerVisitorBase::VisitFullyConnectedLayer</a></div><div class="ttdeci">void VisitFullyConnectedLayer(const IConnectableLayer *, const FullyConnectedDescriptor &amp;, const char *) override</div><div class="ttdef"><b>Definition:</b> <a href="_layer_visitor_base_8hpp_source.xhtml#l00115">LayerVisitorBase.hpp:115</a></div></div>
<div class="ttc" id="classarmnn_1_1_layer_visitor_base_xhtml_a2d4f84683c4a00dfb5eecb6b165d41b9"><div class="ttname"><a href="classarmnn_1_1_layer_visitor_base.xhtml#a2d4f84683c4a00dfb5eecb6b165d41b9">armnn::LayerVisitorBase::VisitConcatLayer</a></div><div class="ttdeci">void VisitConcatLayer(const IConnectableLayer *, const ConcatDescriptor &amp;, const char *) override</div><div class="ttdef"><b>Definition:</b> <a href="_layer_visitor_base_8hpp_source.xhtml#l00061">LayerVisitorBase.hpp:61</a></div></div>
<div class="ttc" id="classarmnn_1_1_unimplemented_exception_xhtml"><div class="ttname"><a href="classarmnn_1_1_unimplemented_exception.xhtml">armnn::UnimplementedException</a></div><div class="ttdef"><b>Definition:</b> <a href="_exceptions_8hpp_source.xhtml#l00098">Exceptions.hpp:98</a></div></div>
<div class="ttc" id="classarmnn_1_1_layer_visitor_base_xhtml_ad3aaff3b6165f8de16522bc4a1ed32a0"><div class="ttname"><a href="classarmnn_1_1_layer_visitor_base.xhtml#ad3aaff3b6165f8de16522bc4a1ed32a0">armnn::LayerVisitorBase::VisitDepthToSpaceLayer</a></div><div class="ttdeci">void VisitDepthToSpaceLayer(const IConnectableLayer *, const DepthToSpaceDescriptor &amp;, const char *) override</div><div class="ttdef"><b>Definition:</b> <a href="_layer_visitor_base_8hpp_source.xhtml#l00079">LayerVisitorBase.hpp:79</a></div></div>
<div class="ttc" id="classarmnn_1_1_layer_visitor_base_xhtml_a2fdb21a22a95af72177b4e909741b5c7"><div class="ttname"><a href="classarmnn_1_1_layer_visitor_base.xhtml#a2fdb21a22a95af72177b4e909741b5c7">armnn::LayerVisitorBase::VisitQuantizedLstmLayer</a></div><div class="ttdeci">void VisitQuantizedLstmLayer(const IConnectableLayer *, const QuantizedLstmInputParams &amp;, const char *) override</div><div class="ttdef"><b>Definition:</b> <a href="_layer_visitor_base_8hpp_source.xhtml#l00201">LayerVisitorBase.hpp:201</a></div></div>
<div class="ttc" id="structarmnn_1_1_logical_binary_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_logical_binary_descriptor.xhtml">armnn::LogicalBinaryDescriptor</a></div><div class="ttdoc">A LogicalBinaryDescriptor for the LogicalBinaryLayer. </div><div class="ttdef"><b>Definition:</b> <a href="_descriptors_8hpp_source.xhtml#l01492">Descriptors.hpp:1492</a></div></div>
<div class="ttc" id="classarmnn_1_1_layer_visitor_base_xhtml_a719076848950255b929636c97aaaede4"><div class="ttname"><a href="classarmnn_1_1_layer_visitor_base.xhtml#a719076848950255b929636c97aaaede4">armnn::LayerVisitorBase::VisitArgMinMaxLayer</a></div><div class="ttdeci">void VisitArgMinMaxLayer(const IConnectableLayer *, const ArgMinMaxDescriptor &amp;, const char *) override</div><div class="ttdef"><b>Definition:</b> <a href="_layer_visitor_base_8hpp_source.xhtml#l00041">LayerVisitorBase.hpp:41</a></div></div>
<div class="ttc" id="namespacearmnn_xhtml"><div class="ttname"><a href="namespacearmnn.xhtml">armnn</a></div><div class="ttdoc">Copyright (c) 2021 ARM Limited and Contributors. </div><div class="ttdef"><b>Definition:</b> <a href="01__00__quick__start_8dox_source.xhtml#l00006">01_00_quick_start.dox:6</a></div></div>
<div class="ttc" id="classarmnn_1_1_layer_visitor_base_xhtml_a9049cf6d72d4b67fff93670f21c09da3"><div class="ttname"><a href="classarmnn_1_1_layer_visitor_base.xhtml#a9049cf6d72d4b67fff93670f21c09da3">armnn::LayerVisitorBase::VisitFullyConnectedLayer</a></div><div class="ttdeci">void VisitFullyConnectedLayer(const IConnectableLayer *, const FullyConnectedDescriptor &amp;, const ConstTensor &amp;, const Optional&lt; ConstTensor &gt; &amp;, const char *) override</div><div class="ttdef"><b>Definition:</b> <a href="_layer_visitor_base_8hpp_source.xhtml#l00119">LayerVisitorBase.hpp:119</a></div></div>
<div class="ttc" id="structarmnn_1_1_quantized_lstm_input_params_xhtml"><div class="ttname"><a href="structarmnn_1_1_quantized_lstm_input_params.xhtml">armnn::QuantizedLstmInputParams</a></div><div class="ttdef"><b>Definition:</b> <a href="_quantized_lstm_params_8hpp_source.xhtml#l00013">QuantizedLstmParams.hpp:13</a></div></div>
<div class="ttc" id="classarmnn_1_1_layer_visitor_base_xhtml_aff3099f516e132f4d8818a54fa1ee767"><div class="ttname"><a href="classarmnn_1_1_layer_visitor_base.xhtml#aff3099f516e132f4d8818a54fa1ee767">armnn::LayerVisitorBase::VisitConvolution2dLayer</a></div><div class="ttdeci">void VisitConvolution2dLayer(const IConnectableLayer *, const Convolution2dDescriptor &amp;, const ConstTensor &amp;, const Optional&lt; ConstTensor &gt; &amp;, const char *) override</div><div class="ttdef"><b>Definition:</b> <a href="_layer_visitor_base_8hpp_source.xhtml#l00069">LayerVisitorBase.hpp:69</a></div></div>
<div class="ttc" id="structarmnn_1_1_space_to_depth_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_space_to_depth_descriptor.xhtml">armnn::SpaceToDepthDescriptor</a></div><div class="ttdoc">A SpaceToDepthDescriptor for the SpaceToDepthLayer. </div><div class="ttdef"><b>Definition:</b> <a href="_descriptors_8hpp_source.xhtml#l01056">Descriptors.hpp:1056</a></div></div>
<div class="ttc" id="classarmnn_1_1_layer_visitor_base_xhtml_a8a6db421f0be147916cb4894ad3885d1"><div class="ttname"><a href="classarmnn_1_1_layer_visitor_base.xhtml#a8a6db421f0be147916cb4894ad3885d1">armnn::LayerVisitorBase::VisitQuantizeLayer</a></div><div class="ttdeci">void VisitQuantizeLayer(const IConnectableLayer *, const char *) override</div><div class="ttdef"><b>Definition:</b> <a href="_layer_visitor_base_8hpp_source.xhtml#l00193">LayerVisitorBase.hpp:193</a></div></div>
<div class="ttc" id="structarmnn_1_1_batch_to_space_nd_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_batch_to_space_nd_descriptor.xhtml">armnn::BatchToSpaceNdDescriptor</a></div><div class="ttdoc">A BatchToSpaceNdDescriptor for the BatchToSpaceNdLayer. </div><div class="ttdef"><b>Definition:</b> <a href="_descriptors_8hpp_source.xhtml#l00840">Descriptors.hpp:840</a></div></div>
<div class="ttc" id="namespacearmnn_xhtml_ab8cf8f9fb6792e654c2d8d8382f6f01b"><div class="ttname"><a href="namespacearmnn.xhtml#ab8cf8f9fb6792e654c2d8d8382f6f01b">armnn::LayerBindingId</a></div><div class="ttdeci">int LayerBindingId</div><div class="ttdoc">Type of identifiers for bindable layers (inputs, outputs). </div><div class="ttdef"><b>Definition:</b> <a href="_types_8hpp_source.xhtml#l00290">Types.hpp:290</a></div></div>
<div class="ttc" id="classarmnn_1_1_layer_visitor_base_xhtml_a8a240e1b725cc204bb468b6b402e1670"><div class="ttname"><a href="classarmnn_1_1_layer_visitor_base.xhtml#a8a240e1b725cc204bb468b6b402e1670">armnn::LayerVisitorBase::VisitPadLayer</a></div><div class="ttdeci">void VisitPadLayer(const IConnectableLayer *, const PadDescriptor &amp;, const char *) override</div><div class="ttdef"><b>Definition:</b> <a href="_layer_visitor_base_8hpp_source.xhtml#l00178">LayerVisitorBase.hpp:178</a></div></div>
<div class="ttc" id="classarmnn_1_1_layer_visitor_base_xhtml_ab0ae25ba5f3c494d1fb32f06cd57af10"><div class="ttname"><a href="classarmnn_1_1_layer_visitor_base.xhtml#ab0ae25ba5f3c494d1fb32f06cd57af10">armnn::LayerVisitorBase::VisitBatchNormalizationLayer</a></div><div class="ttdeci">void VisitBatchNormalizationLayer(const IConnectableLayer *, const BatchNormalizationDescriptor &amp;, const ConstTensor &amp;, const ConstTensor &amp;, const ConstTensor &amp;, const ConstTensor &amp;, const char *) override</div><div class="ttdef"><b>Definition:</b> <a href="_layer_visitor_base_8hpp_source.xhtml#l00045">LayerVisitorBase.hpp:45</a></div></div>
<div class="ttc" id="structarmnn_1_1_resize_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_resize_descriptor.xhtml">armnn::ResizeDescriptor</a></div><div class="ttdoc">A ResizeBilinearDescriptor for the ResizeBilinearLayer. </div><div class="ttdef"><b>Definition:</b> <a href="_descriptors_8hpp_source.xhtml#l00966">Descriptors.hpp:966</a></div></div>
<div class="ttc" id="structarmnn_1_1_stack_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_stack_descriptor.xhtml">armnn::StackDescriptor</a></div><div class="ttdoc">A StackDescriptor for the StackLayer. </div><div class="ttdef"><b>Definition:</b> <a href="_descriptors_8hpp_source.xhtml#l01232">Descriptors.hpp:1232</a></div></div>
<div class="ttc" id="structarmnn_1_1_pad_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_pad_descriptor.xhtml">armnn::PadDescriptor</a></div><div class="ttdoc">A PadDescriptor for the PadLayer. </div><div class="ttdef"><b>Definition:</b> <a href="_descriptors_8hpp_source.xhtml#l01177">Descriptors.hpp:1177</a></div></div>
<div class="ttc" id="structarmnn_1_1_visitor_no_throw_policy_xhtml_a2a867d4cfece2af1ea4942da4cf44e3f"><div class="ttname"><a href="structarmnn_1_1_visitor_no_throw_policy.xhtml#a2a867d4cfece2af1ea4942da4cf44e3f">armnn::VisitorNoThrowPolicy::Apply</a></div><div class="ttdeci">static void Apply(const std::string &amp;)</div><div class="ttdef"><b>Definition:</b> <a href="_layer_visitor_base_8hpp_source.xhtml#l00020">LayerVisitorBase.hpp:20</a></div></div>
<div class="ttc" id="classarmnn_1_1_layer_visitor_base_xhtml_a62aac266e23bd680633e62832f56bc11"><div class="ttname"><a href="classarmnn_1_1_layer_visitor_base.xhtml#a62aac266e23bd680633e62832f56bc11">armnn::LayerVisitorBase::VisitBatchToSpaceNdLayer</a></div><div class="ttdeci">void VisitBatchToSpaceNdLayer(const IConnectableLayer *, const BatchToSpaceNdDescriptor &amp;, const char *) override</div><div class="ttdef"><b>Definition:</b> <a href="_layer_visitor_base_8hpp_source.xhtml#l00053">LayerVisitorBase.hpp:53</a></div></div>
<div class="ttc" id="structarmnn_1_1_lstm_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_lstm_descriptor.xhtml">armnn::LstmDescriptor</a></div><div class="ttdoc">An LstmDescriptor for the LstmLayer. </div><div class="ttdef"><b>Definition:</b> <a href="_descriptors_8hpp_source.xhtml#l01083">Descriptors.hpp:1083</a></div></div>
<div class="ttc" id="_deprecated_8hpp_xhtml_ad762b11b48e5c1d1c1743f529485728a"><div class="ttname"><a href="_deprecated_8hpp.xhtml#ad762b11b48e5c1d1c1743f529485728a">ARMNN_NO_DEPRECATE_WARN_END</a></div><div class="ttdeci">#define ARMNN_NO_DEPRECATE_WARN_END</div><div class="ttdef"><b>Definition:</b> <a href="_deprecated_8hpp_source.xhtml#l00034">Deprecated.hpp:34</a></div></div>
<div class="ttc" id="classarmnn_1_1_layer_visitor_base_xhtml_ae343d79924ac474939c3e38a8b80004e"><div class="ttname"><a href="classarmnn_1_1_layer_visitor_base.xhtml#ae343d79924ac474939c3e38a8b80004e">armnn::LayerVisitorBase::VisitFillLayer</a></div><div class="ttdeci">void VisitFillLayer(const IConnectableLayer *, const FillDescriptor &amp;, const char *) override</div><div class="ttdef"><b>Definition:</b> <a href="_layer_visitor_base_8hpp_source.xhtml#l00108">LayerVisitorBase.hpp:108</a></div></div>
<div class="ttc" id="_i_layer_visitor_8hpp_xhtml"><div class="ttname"><a href="_i_layer_visitor_8hpp.xhtml">ILayerVisitor.hpp</a></div></div>
<div class="ttc" id="classarmnn_1_1_layer_visitor_base_xhtml_ab80f8f2c2202a4651c63757b307a21b7"><div class="ttname"><a href="classarmnn_1_1_layer_visitor_base.xhtml#ab80f8f2c2202a4651c63757b307a21b7">armnn::LayerVisitorBase::VisitQLstmLayer</a></div><div class="ttdeci">void VisitQLstmLayer(const IConnectableLayer *, const QLstmDescriptor &amp;, const LstmInputParams &amp;, const char *) override</div><div class="ttdef"><b>Definition:</b> <a href="_layer_visitor_base_8hpp_source.xhtml#l00196">LayerVisitorBase.hpp:196</a></div></div>
<div class="ttc" id="structarmnn_1_1_l2_normalization_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_l2_normalization_descriptor.xhtml">armnn::L2NormalizationDescriptor</a></div><div class="ttdoc">A L2NormalizationDescriptor for the L2NormalizationLayer. </div><div class="ttdef"><b>Definition:</b> <a href="_descriptors_8hpp_source.xhtml#l00774">Descriptors.hpp:774</a></div></div>
<div class="ttc" id="structarmnn_1_1_arg_min_max_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_arg_min_max_descriptor.xhtml">armnn::ArgMinMaxDescriptor</a></div><div class="ttdoc">An ArgMinMaxDescriptor for ArgMinMaxLayer. </div><div class="ttdef"><b>Definition:</b> <a href="_descriptors_8hpp_source.xhtml#l00067">Descriptors.hpp:67</a></div></div>
<div class="ttc" id="structarmnn_1_1_origins_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_origins_descriptor.xhtml">armnn::OriginsDescriptor</a></div><div class="ttdoc">An OriginsDescriptor for the ConcatLayer. </div><div class="ttdef"><b>Definition:</b> <a href="_descriptors_8hpp_source.xhtml#l00174">Descriptors.hpp:174</a></div></div>
<div class="ttc" id="structarmnn_1_1_reduce_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_reduce_descriptor.xhtml">armnn::ReduceDescriptor</a></div><div class="ttdoc">A ReduceDescriptor for the REDUCE operators. </div><div class="ttdef"><b>Definition:</b> <a href="_descriptors_8hpp_source.xhtml#l01512">Descriptors.hpp:1512</a></div></div>
<div class="ttc" id="structarmnn_1_1_fully_connected_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_fully_connected_descriptor.xhtml">armnn::FullyConnectedDescriptor</a></div><div class="ttdoc">A FullyConnectedDescriptor for the FullyConnectedLayer. </div><div class="ttdef"><b>Definition:</b> <a href="_descriptors_8hpp_source.xhtml#l00468">Descriptors.hpp:468</a></div></div>
<div class="ttc" id="classarmnn_1_1_layer_visitor_base_xhtml_ac57d22126a9131108214df9177addade"><div class="ttname"><a href="classarmnn_1_1_layer_visitor_base.xhtml#ac57d22126a9131108214df9177addade">armnn::LayerVisitorBase::VisitMultiplicationLayer</a></div><div class="ttdeci">void VisitMultiplicationLayer(const IConnectableLayer *, const char *) override</div><div class="ttdef"><b>Definition:</b> <a href="_layer_visitor_base_8hpp_source.xhtml#l00167">LayerVisitorBase.hpp:167</a></div></div>
<div class="ttc" id="classarmnn_1_1_layer_visitor_base_xhtml_a2cb213b083367f4fe9bed2916206525f"><div class="ttname"><a href="classarmnn_1_1_layer_visitor_base.xhtml#a2cb213b083367f4fe9bed2916206525f">armnn::LayerVisitorBase::VisitTransposeLayer</a></div><div class="ttdeci">void VisitTransposeLayer(const IConnectableLayer *, const TransposeDescriptor &amp;, const char *) override</div><div class="ttdef"><b>Definition:</b> <a href="_layer_visitor_base_8hpp_source.xhtml#l00264">LayerVisitorBase.hpp:264</a></div></div>
<div class="ttc" id="classarmnn_1_1_layer_visitor_base_xhtml_a90698dba3e90ced6f562cda146bf15e3"><div class="ttname"><a href="classarmnn_1_1_layer_visitor_base.xhtml#a90698dba3e90ced6f562cda146bf15e3">armnn::LayerVisitorBase::VisitConstantLayer</a></div><div class="ttdeci">void VisitConstantLayer(const IConnectableLayer *, const ConstTensor &amp;, const char *) override</div><div class="ttdef"><b>Definition:</b> <a href="_layer_visitor_base_8hpp_source.xhtml#l00065">LayerVisitorBase.hpp:65</a></div></div>
<div class="ttc" id="classarmnn_1_1_const_tensor_xhtml"><div class="ttname"><a href="classarmnn_1_1_const_tensor.xhtml">armnn::ConstTensor</a></div><div class="ttdoc">A tensor defined by a TensorInfo (shape and data type) and an immutable backing store. </div><div class="ttdef"><b>Definition:</b> <a href="_tensor_8hpp_source.xhtml#l00327">Tensor.hpp:327</a></div></div>
<div class="ttc" id="classarmnn_1_1_layer_visitor_base_xhtml_a8b47d411d147aa420f7a69356d84fb80"><div class="ttname"><a href="classarmnn_1_1_layer_visitor_base.xhtml#a8b47d411d147aa420f7a69356d84fb80">armnn::LayerVisitorBase::VisitStackLayer</a></div><div class="ttdeci">void VisitStackLayer(const IConnectableLayer *, const StackDescriptor &amp;, const char *) override</div><div class="ttdef"><b>Definition:</b> <a href="_layer_visitor_base_8hpp_source.xhtml#l00240">LayerVisitorBase.hpp:240</a></div></div>
<div class="ttc" id="classarmnn_1_1_layer_visitor_base_xhtml_ac42c3a57a82260c8315d4f0320620934"><div class="ttname"><a href="classarmnn_1_1_layer_visitor_base.xhtml#ac42c3a57a82260c8315d4f0320620934">armnn::LayerVisitorBase::VisitSubtractionLayer</a></div><div class="ttdeci">void VisitSubtractionLayer(const IConnectableLayer *, const char *) override</div><div class="ttdef"><b>Definition:</b> <a href="_layer_visitor_base_8hpp_source.xhtml#l00252">LayerVisitorBase.hpp:252</a></div></div>
<div class="ttc" id="structarmnn_1_1_lstm_input_params_xhtml"><div class="ttname"><a href="structarmnn_1_1_lstm_input_params.xhtml">armnn::LstmInputParams</a></div><div class="ttdef"><b>Definition:</b> <a href="_lstm_params_8hpp_source.xhtml#l00013">LstmParams.hpp:13</a></div></div>
<div class="ttc" id="structarmnn_1_1_gather_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_gather_descriptor.xhtml">armnn::GatherDescriptor</a></div><div class="ttdoc">A GatherDescriptor for the GatherLayer. </div><div class="ttdef"><b>Definition:</b> <a href="_descriptors_8hpp_source.xhtml#l00909">Descriptors.hpp:909</a></div></div>
<div class="ttc" id="classarmnn_1_1_layer_visitor_base_xhtml_ab287daf36aee416ebeca06ebf4f71a82"><div class="ttname"><a href="classarmnn_1_1_layer_visitor_base.xhtml#ab287daf36aee416ebeca06ebf4f71a82">armnn::LayerVisitorBase::VisitDepthwiseConvolution2dLayer</a></div><div class="ttdeci">void VisitDepthwiseConvolution2dLayer(const IConnectableLayer *, const DepthwiseConvolution2dDescriptor &amp;, const char *) override</div><div class="ttdef"><b>Definition:</b> <a href="_layer_visitor_base_8hpp_source.xhtml#l00083">LayerVisitorBase.hpp:83</a></div></div>
<div class="ttc" id="structarmnn_1_1_stand_in_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_stand_in_descriptor.xhtml">armnn::StandInDescriptor</a></div><div class="ttdoc">A StandInDescriptor for the StandIn layer. </div><div class="ttdef"><b>Definition:</b> <a href="_descriptors_8hpp_source.xhtml#l01262">Descriptors.hpp:1262</a></div></div>
<div class="ttc" id="structarmnn_1_1_q_lstm_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_q_lstm_descriptor.xhtml">armnn::QLstmDescriptor</a></div><div class="ttdoc">A QLstmDescriptor for the QLstmLayer. </div><div class="ttdef"><b>Definition:</b> <a href="_descriptors_8hpp_source.xhtml#l01361">Descriptors.hpp:1361</a></div></div>
<div class="ttc" id="classarmnn_1_1_layer_visitor_base_xhtml_a8d4d2e5580385ee664830720698d112c"><div class="ttname"><a href="classarmnn_1_1_layer_visitor_base.xhtml#a8d4d2e5580385ee664830720698d112c">armnn::LayerVisitorBase::VisitLogSoftmaxLayer</a></div><div class="ttdeci">void VisitLogSoftmaxLayer(const IConnectableLayer *, const LogSoftmaxDescriptor &amp;, const char *) override</div><div class="ttdef"><b>Definition:</b> <a href="_layer_visitor_base_8hpp_source.xhtml#l00141">LayerVisitorBase.hpp:141</a></div></div>
<div class="ttc" id="classarmnn_1_1_layer_visitor_base_xhtml_aaf1a238ec5b6bb172bc4cd3811f08b28"><div class="ttname"><a href="classarmnn_1_1_layer_visitor_base.xhtml#aaf1a238ec5b6bb172bc4cd3811f08b28">armnn::LayerVisitorBase::VisitLstmLayer</a></div><div class="ttdeci">void VisitLstmLayer(const IConnectableLayer *, const LstmDescriptor &amp;, const LstmInputParams &amp;, const char *) override</div><div class="ttdef"><b>Definition:</b> <a href="_layer_visitor_base_8hpp_source.xhtml#l00149">LayerVisitorBase.hpp:149</a></div></div>
<div class="ttc" id="structarmnn_1_1_activation_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_activation_descriptor.xhtml">armnn::ActivationDescriptor</a></div><div class="ttdoc">An ActivationDescriptor for the ActivationLayer. </div><div class="ttdef"><b>Definition:</b> <a href="_descriptors_8hpp_source.xhtml#l00036">Descriptors.hpp:36</a></div></div>
<div class="ttc" id="structarmnn_1_1_slice_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_slice_descriptor.xhtml">armnn::SliceDescriptor</a></div><div class="ttdoc">A SliceDescriptor for the SliceLayer. </div><div class="ttdef"><b>Definition:</b> <a href="_descriptors_8hpp_source.xhtml#l01209">Descriptors.hpp:1209</a></div></div>
<div class="ttc" id="classarmnn_1_1_layer_visitor_base_xhtml"><div class="ttname"><a href="classarmnn_1_1_layer_visitor_base.xhtml">armnn::LayerVisitorBase</a></div><div class="ttdoc">Visitor base class with empty implementations. </div><div class="ttdef"><b>Definition:</b> <a href="_layer_visitor_base_8hpp_source.xhtml#l00026">LayerVisitorBase.hpp:26</a></div></div>
<div class="ttc" id="classarmnn_1_1_layer_visitor_base_xhtml_a7450859464a381eafaedb33adc582f75"><div class="ttname"><a href="classarmnn_1_1_layer_visitor_base.xhtml#a7450859464a381eafaedb33adc582f75">armnn::LayerVisitorBase::VisitDivisionLayer</a></div><div class="ttdeci">void VisitDivisionLayer(const IConnectableLayer *, const char *) override</div><div class="ttdef"><b>Definition:</b> <a href="_layer_visitor_base_8hpp_source.xhtml#l00101">LayerVisitorBase.hpp:101</a></div></div>
<div class="ttc" id="classarmnn_1_1_layer_visitor_base_xhtml_a1c023b3170bed9368b65730bc7fff60b"><div class="ttname"><a href="classarmnn_1_1_layer_visitor_base.xhtml#a1c023b3170bed9368b65730bc7fff60b">armnn::LayerVisitorBase::VisitSliceLayer</a></div><div class="ttdeci">void VisitSliceLayer(const IConnectableLayer *, const SliceDescriptor &amp;, const char *) override</div><div class="ttdef"><b>Definition:</b> <a href="_layer_visitor_base_8hpp_source.xhtml#l00220">LayerVisitorBase.hpp:220</a></div></div>
<div class="ttc" id="classarmnn_1_1_layer_visitor_base_xhtml_a3c15053a7e295099a1a34c4add5a03b8"><div class="ttname"><a href="classarmnn_1_1_layer_visitor_base.xhtml#a3c15053a7e295099a1a34c4add5a03b8">armnn::LayerVisitorBase::VisitStandInLayer</a></div><div class="ttdeci">void VisitStandInLayer(const IConnectableLayer *, const StandInDescriptor &amp;, const char *) override</div><div class="ttdef"><b>Definition:</b> <a href="_layer_visitor_base_8hpp_source.xhtml#l00244">LayerVisitorBase.hpp:244</a></div></div>
<div class="ttc" id="classarmnn_1_1_layer_visitor_base_xhtml_a88bad2eef809ccf6f2129f9ed4a6f3a7"><div class="ttname"><a href="classarmnn_1_1_layer_visitor_base.xhtml#a88bad2eef809ccf6f2129f9ed4a6f3a7">armnn::LayerVisitorBase::VisitDetectionPostProcessLayer</a></div><div class="ttdeci">void VisitDetectionPostProcessLayer(const IConnectableLayer *, const DetectionPostProcessDescriptor &amp;, const ConstTensor &amp;, const char *) override</div><div class="ttdef"><b>Definition:</b> <a href="_layer_visitor_base_8hpp_source.xhtml#l00096">LayerVisitorBase.hpp:96</a></div></div>
<div class="ttc" id="classarmnn_1_1_layer_visitor_base_xhtml_a778e1b2219e3eb2d790d6e6e653a9f25"><div class="ttname"><a href="classarmnn_1_1_layer_visitor_base.xhtml#a778e1b2219e3eb2d790d6e6e653a9f25">armnn::LayerVisitorBase::VisitMaximumLayer</a></div><div class="ttdeci">void VisitMaximumLayer(const IConnectableLayer *, const char *) override</div><div class="ttdef"><b>Definition:</b> <a href="_layer_visitor_base_8hpp_source.xhtml#l00154">LayerVisitorBase.hpp:154</a></div></div>
<div class="ttc" id="classarmnn_1_1_layer_visitor_base_xhtml_a0c9f3396207de48925016a2eee6aa12b"><div class="ttname"><a href="classarmnn_1_1_layer_visitor_base.xhtml#a0c9f3396207de48925016a2eee6aa12b">armnn::LayerVisitorBase::VisitAdditionLayer</a></div><div class="ttdeci">void VisitAdditionLayer(const IConnectableLayer *, const char *) override</div><div class="ttdef"><b>Definition:</b> <a href="_layer_visitor_base_8hpp_source.xhtml#l00038">LayerVisitorBase.hpp:38</a></div></div>
<div class="ttc" id="structarmnn_1_1_space_to_batch_nd_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_space_to_batch_nd_descriptor.xhtml">armnn::SpaceToBatchNdDescriptor</a></div><div class="ttdoc">A SpaceToBatchNdDescriptor for the SpaceToBatchNdLayer. </div><div class="ttdef"><b>Definition:</b> <a href="_descriptors_8hpp_source.xhtml#l01024">Descriptors.hpp:1024</a></div></div>
<div class="ttc" id="classarmnn_1_1_layer_visitor_base_xhtml_a9478c4f41840a2e2c12b7f336e725a8a"><div class="ttname"><a href="classarmnn_1_1_layer_visitor_base.xhtml#a9478c4f41840a2e2c12b7f336e725a8a">armnn::LayerVisitorBase::VisitSpaceToBatchNdLayer</a></div><div class="ttdeci">void VisitSpaceToBatchNdLayer(const IConnectableLayer *, const SpaceToBatchNdDescriptor &amp;, const char *) override</div><div class="ttdef"><b>Definition:</b> <a href="_layer_visitor_base_8hpp_source.xhtml#l00228">LayerVisitorBase.hpp:228</a></div></div>
<div class="ttc" id="classarmnn_1_1_layer_visitor_base_xhtml_a1e24e9a7bf52efc1699c126435574e95"><div class="ttname"><a href="classarmnn_1_1_layer_visitor_base.xhtml#a1e24e9a7bf52efc1699c126435574e95">armnn::LayerVisitorBase::VisitMinimumLayer</a></div><div class="ttdeci">void VisitMinimumLayer(const IConnectableLayer *, const char *) override</div><div class="ttdef"><b>Definition:</b> <a href="_layer_visitor_base_8hpp_source.xhtml#l00164">LayerVisitorBase.hpp:164</a></div></div>
<div class="ttc" id="structarmnn_1_1_elementwise_unary_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_elementwise_unary_descriptor.xhtml">armnn::ElementwiseUnaryDescriptor</a></div><div class="ttdoc">A ElementwiseUnaryDescriptor for the ElementwiseUnaryLayer. </div><div class="ttdef"><b>Definition:</b> <a href="_descriptors_8hpp_source.xhtml#l00109">Descriptors.hpp:109</a></div></div>
<div class="ttc" id="classarmnn_1_1_layer_visitor_base_xhtml_a0180a15e542f4ef240fadc09fe4b2e3f"><div class="ttname"><a href="classarmnn_1_1_layer_visitor_base.xhtml#a0180a15e542f4ef240fadc09fe4b2e3f">armnn::LayerVisitorBase::VisitMeanLayer</a></div><div class="ttdeci">void VisitMeanLayer(const IConnectableLayer *, const MeanDescriptor &amp;, const char *) override</div><div class="ttdef"><b>Definition:</b> <a href="_layer_visitor_base_8hpp_source.xhtml#l00157">LayerVisitorBase.hpp:157</a></div></div>
<div class="ttc" id="classarmnn_1_1_layer_visitor_base_xhtml_a877d400155151a5afba9f0b17fbcf8f3"><div class="ttname"><a href="classarmnn_1_1_layer_visitor_base.xhtml#a877d400155151a5afba9f0b17fbcf8f3">armnn::LayerVisitorBase::VisitSwitchLayer</a></div><div class="ttdeci">void VisitSwitchLayer(const IConnectableLayer *, const char *) override</div><div class="ttdef"><b>Definition:</b> <a href="_layer_visitor_base_8hpp_source.xhtml#l00255">LayerVisitorBase.hpp:255</a></div></div>
<div class="ttc" id="structarmnn_1_1_visitor_no_throw_policy_xhtml"><div class="ttname"><a href="structarmnn_1_1_visitor_no_throw_policy.xhtml">armnn::VisitorNoThrowPolicy</a></div><div class="ttdef"><b>Definition:</b> <a href="_layer_visitor_base_8hpp_source.xhtml#l00018">LayerVisitorBase.hpp:18</a></div></div>
<div class="ttc" id="classarmnn_1_1_layer_visitor_base_xhtml_aec6644c81f84f086262dfd06088acd99"><div class="ttname"><a href="classarmnn_1_1_layer_visitor_base.xhtml#aec6644c81f84f086262dfd06088acd99">armnn::LayerVisitorBase::LayerVisitorBase</a></div><div class="ttdeci">LayerVisitorBase()</div><div class="ttdef"><b>Definition:</b> <a href="_layer_visitor_base_8hpp_source.xhtml#l00029">LayerVisitorBase.hpp:29</a></div></div>
<div class="ttc" id="structarmnn_1_1_mean_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_mean_descriptor.xhtml">armnn::MeanDescriptor</a></div><div class="ttdoc">A MeanDescriptor for the MeanLayer. </div><div class="ttdef"><b>Definition:</b> <a href="_descriptors_8hpp_source.xhtml#l01153">Descriptors.hpp:1153</a></div></div>
<div class="ttc" id="classarmnn_1_1_layer_visitor_base_xhtml_acc39ddb06acfd91cf3cfb0fcd9337005"><div class="ttname"><a href="classarmnn_1_1_layer_visitor_base.xhtml#acc39ddb06acfd91cf3cfb0fcd9337005">armnn::LayerVisitorBase::VisitOutputLayer</a></div><div class="ttdeci">void VisitOutputLayer(const IConnectableLayer *, LayerBindingId, const char *) override</div><div class="ttdef"><b>Definition:</b> <a href="_layer_visitor_base_8hpp_source.xhtml#l00174">LayerVisitorBase.hpp:174</a></div></div>
<div class="ttc" id="structarmnn_1_1_transpose_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_transpose_descriptor.xhtml">armnn::TransposeDescriptor</a></div><div class="ttdoc">A TransposeDescriptor for the TransposeLayer. </div><div class="ttdef"><b>Definition:</b> <a href="_descriptors_8hpp_source.xhtml#l01471">Descriptors.hpp:1471</a></div></div>
<div class="ttc" id="structarmnn_1_1_strided_slice_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_strided_slice_descriptor.xhtml">armnn::StridedSliceDescriptor</a></div><div class="ttdoc">A StridedSliceDescriptor for the StridedSliceLayer. </div><div class="ttdef"><b>Definition:</b> <a href="_descriptors_8hpp_source.xhtml#l01284">Descriptors.hpp:1284</a></div></div>
<div class="ttc" id="classarmnn_1_1_layer_visitor_base_xhtml_a3150ff2299a2e193952300b8c9edd1e1"><div class="ttname"><a href="classarmnn_1_1_layer_visitor_base.xhtml#a3150ff2299a2e193952300b8c9edd1e1">armnn::LayerVisitorBase::VisitNormalizationLayer</a></div><div class="ttdeci">void VisitNormalizationLayer(const IConnectableLayer *, const NormalizationDescriptor &amp;, const char *) override</div><div class="ttdef"><b>Definition:</b> <a href="_layer_visitor_base_8hpp_source.xhtml#l00170">LayerVisitorBase.hpp:170</a></div></div>
<div class="ttc" id="classarmnn_1_1_layer_visitor_base_xhtml_a060c3a3f978fec03212afaff1fe1648d"><div class="ttname"><a href="classarmnn_1_1_layer_visitor_base.xhtml#a060c3a3f978fec03212afaff1fe1648d">armnn::LayerVisitorBase::VisitFloorLayer</a></div><div class="ttdeci">void VisitFloorLayer(const IConnectableLayer *, const char *) override</div><div class="ttdef"><b>Definition:</b> <a href="_layer_visitor_base_8hpp_source.xhtml#l00112">LayerVisitorBase.hpp:112</a></div></div>
<div class="ttc" id="classarmnn_1_1_layer_visitor_base_xhtml_abd8b0b2e365bbeabceddc35a1cb52916"><div class="ttname"><a href="classarmnn_1_1_layer_visitor_base.xhtml#abd8b0b2e365bbeabceddc35a1cb52916">armnn::LayerVisitorBase::VisitSoftmaxLayer</a></div><div class="ttdeci">void VisitSoftmaxLayer(const IConnectableLayer *, const SoftmaxDescriptor &amp;, const char *) override</div><div class="ttdef"><b>Definition:</b> <a href="_layer_visitor_base_8hpp_source.xhtml#l00224">LayerVisitorBase.hpp:224</a></div></div>
<div class="ttc" id="structarmnn_1_1_pooling2d_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_pooling2d_descriptor.xhtml">armnn::Pooling2dDescriptor</a></div><div class="ttdoc">A Pooling2dDescriptor for the Pooling2dLayer. </div><div class="ttdef"><b>Definition:</b> <a href="_descriptors_8hpp_source.xhtml#l00332">Descriptors.hpp:332</a></div></div>
<div class="ttc" id="classarmnn_1_1_layer_visitor_base_xhtml_aea011723381847939ee1773d7c6fac25"><div class="ttname"><a href="classarmnn_1_1_layer_visitor_base.xhtml#aea011723381847939ee1773d7c6fac25">armnn::LayerVisitorBase::VisitGatherLayer</a></div><div class="ttdeci">void VisitGatherLayer(const IConnectableLayer *, const GatherDescriptor &amp;, const char *) override</div><div class="ttdef"><b>Definition:</b> <a href="_layer_visitor_base_8hpp_source.xhtml#l00125">LayerVisitorBase.hpp:125</a></div></div>
<div class="ttc" id="structarmnn_1_1_normalization_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_normalization_descriptor.xhtml">armnn::NormalizationDescriptor</a></div><div class="ttdoc">A NormalizationDescriptor for the NormalizationLayer. </div><div class="ttdef"><b>Definition:</b> <a href="_descriptors_8hpp_source.xhtml#l00734">Descriptors.hpp:734</a></div></div>
<div class="ttc" id="structarmnn_1_1_detection_post_process_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_detection_post_process_descriptor.xhtml">armnn::DetectionPostProcessDescriptor</a></div><div class="ttdef"><b>Definition:</b> <a href="_descriptors_8hpp_source.xhtml#l00678">Descriptors.hpp:678</a></div></div>
<div class="ttc" id="structarmnn_1_1_instance_normalization_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_instance_normalization_descriptor.xhtml">armnn::InstanceNormalizationDescriptor</a></div><div class="ttdoc">An InstanceNormalizationDescriptor for InstanceNormalizationLayer. </div><div class="ttdef"><b>Definition:</b> <a href="_descriptors_8hpp_source.xhtml#l00812">Descriptors.hpp:812</a></div></div>
<div class="ttc" id="classarmnn_1_1_layer_visitor_base_xhtml_a1f471667b18bdc6f2f57a15976881410"><div class="ttname"><a href="classarmnn_1_1_layer_visitor_base.xhtml#a1f471667b18bdc6f2f57a15976881410">armnn::LayerVisitorBase::VisitConvolution2dLayer</a></div><div class="ttdeci">void VisitConvolution2dLayer(const IConnectableLayer *, const Convolution2dDescriptor &amp;, const char *) override</div><div class="ttdef"><b>Definition:</b> <a href="_layer_visitor_base_8hpp_source.xhtml#l00075">LayerVisitorBase.hpp:75</a></div></div>
<div class="ttc" id="structarmnn_1_1_softmax_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_softmax_descriptor.xhtml">armnn::SoftmaxDescriptor</a></div><div class="ttdoc">A SoftmaxDescriptor for the SoftmaxLayer. </div><div class="ttdef"><b>Definition:</b> <a href="_descriptors_8hpp_source.xhtml#l00150">Descriptors.hpp:150</a></div></div>
<div class="ttc" id="classarmnn_1_1_layer_visitor_base_xhtml_a95dc828296e6d05c0bf0b691d4dc6a3f"><div class="ttname"><a href="classarmnn_1_1_layer_visitor_base.xhtml#a95dc828296e6d05c0bf0b691d4dc6a3f">armnn::LayerVisitorBase::VisitComparisonLayer</a></div><div class="ttdeci">void VisitComparisonLayer(const IConnectableLayer *, const ComparisonDescriptor &amp;, const char *) override</div><div class="ttdef"><b>Definition:</b> <a href="_layer_visitor_base_8hpp_source.xhtml#l00057">LayerVisitorBase.hpp:57</a></div></div>
<div class="ttc" id="classarmnn_1_1_layer_visitor_base_xhtml_a0e6452322927acf6fe4e38ca9cc6d117"><div class="ttname"><a href="classarmnn_1_1_layer_visitor_base.xhtml#a0e6452322927acf6fe4e38ca9cc6d117">armnn::LayerVisitorBase::VisitRankLayer</a></div><div class="ttdeci">void VisitRankLayer(const IConnectableLayer *, const char *) override</div><div class="ttdef"><b>Definition:</b> <a href="_layer_visitor_base_8hpp_source.xhtml#l00205">LayerVisitorBase.hpp:205</a></div></div>
<div class="ttc" id="structarmnn_1_1_depthwise_convolution2d_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_depthwise_convolution2d_descriptor.xhtml">armnn::DepthwiseConvolution2dDescriptor</a></div><div class="ttdoc">A DepthwiseConvolution2dDescriptor for the DepthwiseConvolution2dLayer. </div><div class="ttdef"><b>Definition:</b> <a href="_descriptors_8hpp_source.xhtml#l00624">Descriptors.hpp:624</a></div></div>
<div class="ttc" id="structarmnn_1_1_fill_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_fill_descriptor.xhtml">armnn::FillDescriptor</a></div><div class="ttdoc">A FillDescriptor for the FillLayer. </div><div class="ttdef"><b>Definition:</b> <a href="_descriptors_8hpp_source.xhtml#l00890">Descriptors.hpp:890</a></div></div>
<div class="ttc" id="structarmnn_1_1_batch_normalization_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_batch_normalization_descriptor.xhtml">armnn::BatchNormalizationDescriptor</a></div><div class="ttdoc">A BatchNormalizationDescriptor for the BatchNormalizationLayer. </div><div class="ttdef"><b>Definition:</b> <a href="_descriptors_8hpp_source.xhtml#l00793">Descriptors.hpp:793</a></div></div>
<div class="ttc" id="classarmnn_1_1_layer_visitor_base_xhtml_a9d02f4bfaffcb16e340e9b8c20bc5e35"><div class="ttname"><a href="classarmnn_1_1_layer_visitor_base.xhtml#a9d02f4bfaffcb16e340e9b8c20bc5e35">armnn::LayerVisitorBase::VisitElementwiseUnaryLayer</a></div><div class="ttdeci">void VisitElementwiseUnaryLayer(const IConnectableLayer *, const ElementwiseUnaryDescriptor &amp;, const char *) override</div><div class="ttdef"><b>Definition:</b> <a href="_layer_visitor_base_8hpp_source.xhtml#l00104">LayerVisitorBase.hpp:104</a></div></div>
<div class="ttc" id="structarmnn_1_1_permute_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_permute_descriptor.xhtml">armnn::PermuteDescriptor</a></div><div class="ttdoc">A PermuteDescriptor for the PermuteLayer. </div><div class="ttdef"><b>Definition:</b> <a href="_descriptors_8hpp_source.xhtml#l00129">Descriptors.hpp:129</a></div></div>
<div class="ttc" id="classarmnn_1_1_layer_visitor_base_xhtml_a30b99e5202fc77b02f92d5c44e5ca86d"><div class="ttname"><a href="classarmnn_1_1_layer_visitor_base.xhtml#a30b99e5202fc77b02f92d5c44e5ca86d">armnn::LayerVisitorBase::VisitActivationLayer</a></div><div class="ttdeci">void VisitActivationLayer(const IConnectableLayer *, const ActivationDescriptor &amp;, const char *) override</div><div class="ttdef"><b>Definition:</b> <a href="_layer_visitor_base_8hpp_source.xhtml#l00034">LayerVisitorBase.hpp:34</a></div></div>
<div class="ttc" id="classarmnn_1_1_layer_visitor_base_xhtml_a9ebd504c48864d63917836e0dc335725"><div class="ttname"><a href="classarmnn_1_1_layer_visitor_base.xhtml#a9ebd504c48864d63917836e0dc335725">armnn::LayerVisitorBase::VisitReshapeLayer</a></div><div class="ttdeci">void VisitReshapeLayer(const IConnectableLayer *, const ReshapeDescriptor &amp;, const char *) override</div><div class="ttdef"><b>Definition:</b> <a href="_layer_visitor_base_8hpp_source.xhtml#l00212">LayerVisitorBase.hpp:212</a></div></div>
<div class="ttc" id="classarmnn_1_1_layer_visitor_base_xhtml_a4aafbeec347992842c3e18eaf735cbfc"><div class="ttname"><a href="classarmnn_1_1_layer_visitor_base.xhtml#a4aafbeec347992842c3e18eaf735cbfc">armnn::LayerVisitorBase::VisitReduceLayer</a></div><div class="ttdeci">void VisitReduceLayer(const IConnectableLayer *, const ReduceDescriptor &amp;, const char *) override</div><div class="ttdef"><b>Definition:</b> <a href="_layer_visitor_base_8hpp_source.xhtml#l00208">LayerVisitorBase.hpp:208</a></div></div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="dir_d44c64559bbebec7f509842c48db8b23.xhtml">include</a></li><li class="navelem"><a class="el" href="dir_2b72cc348e06937955e62ebdd8a13436.xhtml">armnn</a></li><li class="navelem"><a class="el" href="_layer_visitor_base_8hpp.xhtml">LayerVisitorBase.hpp</a></li>
    <li class="footer">Generated on Fri Jun 17 2022 13:19:41 for ArmNN by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.13 </li>
  </ul>
</div>
</body>
</html>
