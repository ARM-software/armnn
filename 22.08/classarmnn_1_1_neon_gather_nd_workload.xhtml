<!-- Copyright (c) 2020 ARM Limited. -->
<!--                                 -->
<!-- SPDX-License-Identifier: MIT    -->
<!--                                 -->
<!-- HTML header for doxygen 1.8.13-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.13"/>
<meta name="robots" content="NOINDEX, NOFOLLOW" />
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>ArmNN: NeonGatherNdWorkload Class Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script><script type="text/javascript" src="http://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="stylesheet.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <img alt="ArmNN" src="Arm_NN_horizontal_blue.png" style="max-width: 10rem; margin-top: .5rem; margin-left 10px"/>
  <td style="padding-left: 0.5em;">
   <div id="projectname">
   &#160;<span id="projectnumber">22.08</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.13 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
$(document).ready(function(){initNavTree('classarmnn_1_1_neon_gather_nd_workload.xhtml','');});
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="summary">
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="classarmnn_1_1_neon_gather_nd_workload-members.xhtml">List of all members</a>  </div>
  <div class="headertitle">
<div class="title">NeonGatherNdWorkload Class Reference</div>  </div>
</div><!--header-->
<div class="contents">

<p><code>#include &lt;<a class="el" href="_neon_gather_nd_workload_8hpp_source.xhtml">NeonGatherNdWorkload.hpp</a>&gt;</code></p>
<div class="dynheader">
Inheritance diagram for NeonGatherNdWorkload:</div>
<div class="dyncontent">
 <div class="center">
  <img src="classarmnn_1_1_neon_gather_nd_workload.png" usemap="#NeonGatherNdWorkload_map" alt=""/>
  <map id="NeonGatherNdWorkload_map" name="NeonGatherNdWorkload_map">
<area href="classarmnn_1_1_neon_base_workload.xhtml" alt="NeonBaseWorkload&lt; GatherNdQueueDescriptor &gt;" shape="rect" coords="0,112,298,136"/>
<area href="classarmnn_1_1_base_workload.xhtml" alt="BaseWorkload&lt; GatherNdQueueDescriptor &gt;" shape="rect" coords="0,56,298,80"/>
<area href="classarmnn_1_1_i_workload.xhtml" title="Workload interface to enqueue a layer computation. " alt="IWorkload" shape="rect" coords="0,0,298,24"/>
</map>
 </div></div>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:aed7f95d9f00861351b0bd4d7b17e27b2"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_neon_gather_nd_workload.xhtml#aed7f95d9f00861351b0bd4d7b17e27b2">NeonGatherNdWorkload</a> (const <a class="el" href="structarmnn_1_1_gather_nd_queue_descriptor.xhtml">GatherNdQueueDescriptor</a> &amp;descriptor, const <a class="el" href="structarmnn_1_1_workload_info.xhtml">WorkloadInfo</a> &amp;<a class="el" href="namespacearmnn.xhtml#a4dc0adc6737b5944e7671bee71788407acaf9b6b99962bf5c2264824231d7a40c">info</a>)</td></tr>
<tr class="separator:aed7f95d9f00861351b0bd4d7b17e27b2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae071e8822437c78baea75c3aef3a263a"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_neon_gather_nd_workload.xhtml#ae071e8822437c78baea75c3aef3a263a">Execute</a> () const override</td></tr>
<tr class="separator:ae071e8822437c78baea75c3aef3a263a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pub_methods_classarmnn_1_1_neon_base_workload"><td colspan="2" onclick="javascript:toggleInherit('pub_methods_classarmnn_1_1_neon_base_workload')"><img src="closed.png" alt="-"/>&#160;Public Member Functions inherited from <a class="el" href="classarmnn_1_1_neon_base_workload.xhtml">NeonBaseWorkload&lt; GatherNdQueueDescriptor &gt;</a></td></tr>
<tr class="memitem:a446042983b3fa49c4c57f2262ef3a2f0 inherit pub_methods_classarmnn_1_1_neon_base_workload"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_neon_base_workload.xhtml#a446042983b3fa49c4c57f2262ef3a2f0">NeonBaseWorkload</a> (const <a class="el" href="structarmnn_1_1_gather_nd_queue_descriptor.xhtml">GatherNdQueueDescriptor</a> &amp;descriptor, const <a class="el" href="structarmnn_1_1_workload_info.xhtml">WorkloadInfo</a> &amp;info)</td></tr>
<tr class="separator:a446042983b3fa49c4c57f2262ef3a2f0 inherit pub_methods_classarmnn_1_1_neon_base_workload"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab0a67f8179ddb997dda0070a6661f837 inherit pub_methods_classarmnn_1_1_neon_base_workload"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_neon_base_workload.xhtml#ab0a67f8179ddb997dda0070a6661f837">ReplaceInputTensorHandle</a> (<a class="el" href="classarmnn_1_1_i_tensor_handle.xhtml">ITensorHandle</a> *tensorHandle, unsigned int slot) override</td></tr>
<tr class="separator:ab0a67f8179ddb997dda0070a6661f837 inherit pub_methods_classarmnn_1_1_neon_base_workload"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:acc08590544f05c641d21c724aedf26dd inherit pub_methods_classarmnn_1_1_neon_base_workload"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_neon_base_workload.xhtml#acc08590544f05c641d21c724aedf26dd">ReplaceOutputTensorHandle</a> (<a class="el" href="classarmnn_1_1_i_tensor_handle.xhtml">ITensorHandle</a> *tensorHandle, unsigned int slot) override</td></tr>
<tr class="separator:acc08590544f05c641d21c724aedf26dd inherit pub_methods_classarmnn_1_1_neon_base_workload"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pub_methods_classarmnn_1_1_base_workload"><td colspan="2" onclick="javascript:toggleInherit('pub_methods_classarmnn_1_1_base_workload')"><img src="closed.png" alt="-"/>&#160;Public Member Functions inherited from <a class="el" href="classarmnn_1_1_base_workload.xhtml">BaseWorkload&lt; GatherNdQueueDescriptor &gt;</a></td></tr>
<tr class="memitem:af2ef420610280dc5a661cd3d4836d5a2 inherit pub_methods_classarmnn_1_1_base_workload"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_base_workload.xhtml#af2ef420610280dc5a661cd3d4836d5a2">BaseWorkload</a> (const <a class="el" href="structarmnn_1_1_gather_nd_queue_descriptor.xhtml">GatherNdQueueDescriptor</a> &amp;descriptor, const <a class="el" href="structarmnn_1_1_workload_info.xhtml">WorkloadInfo</a> &amp;info)</td></tr>
<tr class="separator:af2ef420610280dc5a661cd3d4836d5a2 inherit pub_methods_classarmnn_1_1_base_workload"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae1c43d025fc90382d7aff7a500937e2c inherit pub_methods_classarmnn_1_1_base_workload"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_base_workload.xhtml#ae1c43d025fc90382d7aff7a500937e2c">ExecuteAsync</a> (<a class="el" href="structarmnn_1_1experimental_1_1_execution_data.xhtml">ExecutionData</a> &amp;executionData) override</td></tr>
<tr class="separator:ae1c43d025fc90382d7aff7a500937e2c inherit pub_methods_classarmnn_1_1_base_workload"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a81627f96ba06d76e147f7d392a8117ed inherit pub_methods_classarmnn_1_1_base_workload"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_base_workload.xhtml#a81627f96ba06d76e147f7d392a8117ed">PostAllocationConfigure</a> () override</td></tr>
<tr class="separator:a81627f96ba06d76e147f7d392a8117ed inherit pub_methods_classarmnn_1_1_base_workload"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a965cf380c7adf547d0f14b3f6d1da249 inherit pub_methods_classarmnn_1_1_base_workload"><td class="memItemLeft" align="right" valign="top">const <a class="el" href="structarmnn_1_1_gather_nd_queue_descriptor.xhtml">GatherNdQueueDescriptor</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_base_workload.xhtml#a965cf380c7adf547d0f14b3f6d1da249">GetData</a> () const</td></tr>
<tr class="separator:a965cf380c7adf547d0f14b3f6d1da249 inherit pub_methods_classarmnn_1_1_base_workload"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aaff95a48875d8fb4a616352906660ca9 inherit pub_methods_classarmnn_1_1_base_workload"><td class="memItemLeft" align="right" valign="top">arm::pipe::ProfilingGuid&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_base_workload.xhtml#aaff95a48875d8fb4a616352906660ca9">GetGuid</a> () const final</td></tr>
<tr class="separator:aaff95a48875d8fb4a616352906660ca9 inherit pub_methods_classarmnn_1_1_base_workload"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0c326c344355d8423217e9431781f2ee inherit pub_methods_classarmnn_1_1_base_workload"><td class="memItemLeft" align="right" valign="top">virtual bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_base_workload.xhtml#a0c326c344355d8423217e9431781f2ee">SupportsTensorHandleReplacement</a> () const override</td></tr>
<tr class="separator:a0c326c344355d8423217e9431781f2ee inherit pub_methods_classarmnn_1_1_base_workload"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pub_methods_classarmnn_1_1_i_workload"><td colspan="2" onclick="javascript:toggleInherit('pub_methods_classarmnn_1_1_i_workload')"><img src="closed.png" alt="-"/>&#160;Public Member Functions inherited from <a class="el" href="classarmnn_1_1_i_workload.xhtml">IWorkload</a></td></tr>
<tr class="memitem:a69c83c02ae8de866bc7a46c49e69c1ba inherit pub_methods_classarmnn_1_1_i_workload"><td class="memItemLeft" align="right" valign="top">virtual&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_i_workload.xhtml#a69c83c02ae8de866bc7a46c49e69c1ba">~IWorkload</a> ()</td></tr>
<tr class="separator:a69c83c02ae8de866bc7a46c49e69c1ba inherit pub_methods_classarmnn_1_1_i_workload"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab81312bd5e64cbae2803de9f243bdb32 inherit pub_methods_classarmnn_1_1_i_workload"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_i_workload.xhtml#ab81312bd5e64cbae2803de9f243bdb32">RegisterDebugCallback</a> (const <a class="el" href="namespacearmnn.xhtml#a15f3ad9b5e4e3d46b0a6dda246a7bc28">DebugCallbackFunction</a> &amp;)</td></tr>
<tr class="separator:ab81312bd5e64cbae2803de9f243bdb32 inherit pub_methods_classarmnn_1_1_i_workload"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2d2834d1029217934f504e3e59579081 inherit pub_methods_classarmnn_1_1_i_workload"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="classarmnn_1_1_optional.xhtml">armnn::Optional</a>&lt; <a class="el" href="structarmnn_1_1_memory_requirements.xhtml">armnn::MemoryRequirements</a> &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_i_workload.xhtml#a2d2834d1029217934f504e3e59579081">GetMemoryRequirements</a> ()</td></tr>
<tr class="separator:a2d2834d1029217934f504e3e59579081 inherit pub_methods_classarmnn_1_1_i_workload"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="inherited"></a>
Additional Inherited Members</h2></td></tr>
<tr class="inherit_header pro_methods_classarmnn_1_1_neon_base_workload"><td colspan="2" onclick="javascript:toggleInherit('pro_methods_classarmnn_1_1_neon_base_workload')"><img src="closed.png" alt="-"/>&#160;Protected Member Functions inherited from <a class="el" href="classarmnn_1_1_neon_base_workload.xhtml">NeonBaseWorkload&lt; GatherNdQueueDescriptor &gt;</a></td></tr>
<tr class="memitem:ac07f175c0e658269e0c824a7450c3345 inherit pro_methods_classarmnn_1_1_neon_base_workload"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_neon_base_workload.xhtml#ac07f175c0e658269e0c824a7450c3345">Reconfigure</a> ()</td></tr>
<tr class="separator:ac07f175c0e658269e0c824a7450c3345 inherit pro_methods_classarmnn_1_1_neon_base_workload"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pro_attribs_classarmnn_1_1_base_workload"><td colspan="2" onclick="javascript:toggleInherit('pro_attribs_classarmnn_1_1_base_workload')"><img src="closed.png" alt="-"/>&#160;Protected Attributes inherited from <a class="el" href="classarmnn_1_1_base_workload.xhtml">BaseWorkload&lt; GatherNdQueueDescriptor &gt;</a></td></tr>
<tr class="memitem:afb8d2c8817c75de9d01a4c0e0d5c160b inherit pro_attribs_classarmnn_1_1_base_workload"><td class="memItemLeft" align="right" valign="top"><a class="el" href="structarmnn_1_1_gather_nd_queue_descriptor.xhtml">GatherNdQueueDescriptor</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_base_workload.xhtml#afb8d2c8817c75de9d01a4c0e0d5c160b">m_Data</a></td></tr>
<tr class="separator:afb8d2c8817c75de9d01a4c0e0d5c160b inherit pro_attribs_classarmnn_1_1_base_workload"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4c2b3ca86eec6c199364671af267cd2c inherit pro_attribs_classarmnn_1_1_base_workload"><td class="memItemLeft" align="right" valign="top">const arm::pipe::ProfilingGuid&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_base_workload.xhtml#a4c2b3ca86eec6c199364671af267cd2c">m_Guid</a></td></tr>
<tr class="separator:a4c2b3ca86eec6c199364671af267cd2c inherit pro_attribs_classarmnn_1_1_base_workload"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock">
<p class="definition">Definition at line <a class="el" href="_neon_gather_nd_workload_8hpp_source.xhtml#l00022">22</a> of file <a class="el" href="_neon_gather_nd_workload_8hpp_source.xhtml">NeonGatherNdWorkload.hpp</a>.</p>
</div><h2 class="groupheader">Constructor &amp; Destructor Documentation</h2>
<a id="aed7f95d9f00861351b0bd4d7b17e27b2"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aed7f95d9f00861351b0bd4d7b17e27b2">&#9670;&nbsp;</a></span>NeonGatherNdWorkload()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarmnn_1_1_neon_gather_nd_workload.xhtml">NeonGatherNdWorkload</a> </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="structarmnn_1_1_gather_nd_queue_descriptor.xhtml">GatherNdQueueDescriptor</a> &amp;&#160;</td>
          <td class="paramname"><em>descriptor</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="structarmnn_1_1_workload_info.xhtml">WorkloadInfo</a> &amp;&#160;</td>
          <td class="paramname"><em>info</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Calculate flattened indices: m_FlattenedIndices = indices * m_FlattenedCoeff. This could be done using MatMul instead of multiplication followed by reduce sum operation, but GeMM does not support s32 at the moment.</p>
<p>Call Gather with adequate shapes </p>

<p class="definition">Definition at line <a class="el" href="_neon_gather_nd_workload_8cpp_source.xhtml#l00097">97</a> of file <a class="el" href="_neon_gather_nd_workload_8cpp_source.xhtml">NeonGatherNdWorkload.cpp</a>.</p>

<p class="reference">References <a class="el" href="_workload_utils_8cpp_source.xhtml#l00300">armnn::CalculateGatherNdKeyIndices()</a>, <a class="el" href="include_2armnn_2backends_2_workload_8hpp_source.xhtml#l00083">BaseWorkload&lt; GatherNdQueueDescriptor &gt;::m_Data</a>, <a class="el" href="include_2armnn_2backends_2_workload_data_8hpp_source.xhtml#l00026">QueueDescriptor::m_Inputs</a>, <a class="el" href="include_2armnn_2backends_2_workload_info_8hpp_source.xhtml#l00018">WorkloadInfo::m_InputTensorInfos</a>, <a class="el" href="include_2armnn_2backends_2_workload_data_8hpp_source.xhtml#l00027">QueueDescriptor::m_Outputs</a>, <a class="el" href="include_2armnn_2backends_2_workload_info_8hpp_source.xhtml#l00019">WorkloadInfo::m_OutputTensorInfos</a>, <a class="el" href="_tensor_8hpp_source.xhtml#l00193">TensorInfo::SetShape()</a>, and <a class="el" href="_workload_data_8cpp_source.xhtml#l00474">QueueDescriptor::ValidateInputsOutputs()</a>.</p>
<div class="fragment"><div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;        : NeonBaseWorkload&lt;GatherNdQueueDescriptor&gt;(descriptor, <a class="code" href="namespacearmnn.xhtml#a4dc0adc6737b5944e7671bee71788407acaf9b6b99962bf5c2264824231d7a40c">info</a>)</div><div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;{</div><div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;    <a class="code" href="classarmnn_1_1_base_workload.xhtml#afb8d2c8817c75de9d01a4c0e0d5c160b">m_Data</a>.<a class="code" href="structarmnn_1_1_queue_descriptor.xhtml#a765d2cee4ccce5b9467e0c2b6d25b84a">ValidateInputsOutputs</a>(<span class="stringliteral">&quot;NeonGatherNdWorkload&quot;</span>, 2, 1);</div><div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;</div><div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;    TensorInfo paramsInfo  = <a class="code" href="namespacearmnn.xhtml#a4dc0adc6737b5944e7671bee71788407acaf9b6b99962bf5c2264824231d7a40c">info</a>.m_InputTensorInfos[0];</div><div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;    TensorInfo indicesInfo = <a class="code" href="namespacearmnn.xhtml#a4dc0adc6737b5944e7671bee71788407acaf9b6b99962bf5c2264824231d7a40c">info</a>.m_InputTensorInfos[1];</div><div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;    TensorInfo outputInfo  = <a class="code" href="namespacearmnn.xhtml#a4dc0adc6737b5944e7671bee71788407acaf9b6b99962bf5c2264824231d7a40c">info</a>.m_OutputTensorInfos[0];</div><div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;</div><div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;    arm_compute::ITensor&amp; input   = PolymorphicDowncast&lt;IAclTensorHandle*&gt;(<a class="code" href="classarmnn_1_1_base_workload.xhtml#afb8d2c8817c75de9d01a4c0e0d5c160b">m_Data</a>.<a class="code" href="structarmnn_1_1_queue_descriptor.xhtml#a4b50e46a6810018f3edecfb68b2a76b3">m_Inputs</a>[0])-&gt;GetTensor();</div><div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;    arm_compute::ITensor&amp; indices = PolymorphicDowncast&lt;IAclTensorHandle*&gt;(<a class="code" href="classarmnn_1_1_base_workload.xhtml#afb8d2c8817c75de9d01a4c0e0d5c160b">m_Data</a>.<a class="code" href="structarmnn_1_1_queue_descriptor.xhtml#a4b50e46a6810018f3edecfb68b2a76b3">m_Inputs</a>[1])-&gt;GetTensor();</div><div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;    arm_compute::ITensor&amp; output  = PolymorphicDowncast&lt;IAclTensorHandle*&gt;(<a class="code" href="classarmnn_1_1_base_workload.xhtml#afb8d2c8817c75de9d01a4c0e0d5c160b">m_Data</a>.<a class="code" href="structarmnn_1_1_queue_descriptor.xhtml#a6abd491bb99ffe88bd472c1ae5a1ed1a">m_Outputs</a>[0])-&gt;GetTensor();</div><div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;</div><div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;    <span class="comment">// Calculate ND, K, W, C.</span></div><div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;    std::map&lt;std::string, unsigned int&gt; keyIndices = <a class="code" href="namespacearmnn.xhtml#ac40d3e4035af5fbe68d9e126a8d6367c">CalculateGatherNdKeyIndices</a>(paramsInfo, indicesInfo);</div><div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;<span class="comment">    /// Calculate flattened indices: m_FlattenedIndices = indices * m_FlattenedCoeff.</span></div><div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;<span class="comment">    /// This could be done using MatMul instead of multiplication followed by reduce sum operation,</span></div><div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;<span class="comment">    /// but GeMM does not support s32 at the moment.</span></div><div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;    <span class="comment">// Prepare the tensor to store the output of the reduce_sum operation</span></div><div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;    <a class="code" href="classarmnn_1_1_tensor_info.xhtml">armnn::TensorInfo</a> flattenedIndices_Info = indicesInfo;</div><div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;    flattenedIndices_Info.<a class="code" href="classarmnn_1_1_tensor_info.xhtml#abe8889e8150beef5fd204b2d87b49298">SetShape</a>({ keyIndices[<span class="stringliteral">&quot;W&quot;</span>] });</div><div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;    BuildArmComputeTensor(m_FlattenedIndices, flattenedIndices_Info);</div><div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;    armcomputetensorutils::InitialiseArmComputeTensorEmpty(m_FlattenedIndices);</div><div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;</div><div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;    <span class="comment">// Reshape indices into { W, ND }</span></div><div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;    indices.info()-&gt;set_tensor_shape(BuildArmComputeTensorShape({ keyIndices[<span class="stringliteral">&quot;W&quot;</span>], keyIndices[<span class="stringliteral">&quot;ND&quot;</span>] }));</div><div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;</div><div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;    <span class="comment">// Calculate the m_FlattenedCoeff</span></div><div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;    TensorShape paramsShape = paramsInfo.GetShape();</div><div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;    std::vector&lt;int32_t&gt; flattenedCoeff(keyIndices[<span class="stringliteral">&quot;ND&quot;</span>], 1);</div><div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;    <span class="keywordflow">for</span> (<span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> i = 1; i &lt; keyIndices[<span class="stringliteral">&quot;ND&quot;</span>]; ++i)</div><div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;    {</div><div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;        flattenedCoeff[i - 1] = <span class="keyword">static_cast&lt;</span>int32_t<span class="keyword">&gt;</span>(paramsShape[i]);</div><div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;    }</div><div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;    <span class="keywordflow">for</span> (<span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> i = keyIndices[<span class="stringliteral">&quot;ND&quot;</span>] - 1; i &gt; 0; --i)</div><div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;    {</div><div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;        flattenedCoeff[i - 1] *= flattenedCoeff[i];</div><div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;    }</div><div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;    <a class="code" href="classarmnn_1_1_tensor_info.xhtml">armnn::TensorInfo</a> flattenedCoeff_Info = indicesInfo;</div><div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;    flattenedCoeff_Info.<a class="code" href="classarmnn_1_1_tensor_info.xhtml#abe8889e8150beef5fd204b2d87b49298">SetShape</a>({ keyIndices[<span class="stringliteral">&quot;ND&quot;</span>] });</div><div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;    BuildArmComputeTensor(m_FlattenedCoeff, flattenedCoeff_Info);</div><div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;    armcomputetensorutils::InitialiseArmComputeTensorEmpty(m_FlattenedCoeff);</div><div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;    <a class="code" href="_assert_8hpp.xhtml#a91c4dfde57907d7698c7531785690a7f">ARMNN_ASSERT_MSG</a>(indicesInfo.GetDataType() == <a class="code" href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6accedffbc6e5308e33d3843e8bdc0dad7">DataType::Signed32</a>,</div><div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;                     <span class="stringliteral">&quot;flattenedCoeff must be same data type as m_FlattenedCoeff&quot;</span>);</div><div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;    CopyArmComputeITensorData&lt;int32_t&gt;(flattenedCoeff.data(), m_FlattenedCoeff);</div><div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;</div><div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;    <span class="comment">// Prepare the tensor to store the output of the multiplication</span></div><div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;    <a class="code" href="classarmnn_1_1_tensor_info.xhtml">armnn::TensorInfo</a> outputMul_Info = indicesInfo;</div><div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;    outputMul_Info.<a class="code" href="classarmnn_1_1_tensor_info.xhtml#abe8889e8150beef5fd204b2d87b49298">SetShape</a>({ keyIndices[<span class="stringliteral">&quot;W&quot;</span>], keyIndices[<span class="stringliteral">&quot;ND&quot;</span>] });</div><div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;    BuildArmComputeTensor(m_OutputMul, outputMul_Info);</div><div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;    armcomputetensorutils::InitialiseArmComputeTensorEmpty(m_OutputMul);</div><div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;</div><div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;    <span class="comment">// Multiply</span></div><div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;    m_MulLayer.configure(&amp;indices,</div><div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;                         &amp;m_FlattenedCoeff,</div><div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;                         &amp;m_OutputMul,</div><div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;                         1.0f,</div><div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160;                         arm_compute::ConvertPolicy::WRAP,</div><div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;                         arm_compute::RoundingPolicy::TO_ZERO,</div><div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160;                         arm_compute::ActivationLayerInfo());</div><div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160;</div><div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160;    <span class="comment">// Reduce Sum</span></div><div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160;    <span class="keyword">const</span> std::vector&lt;unsigned int&gt; armnnReduceAxes(1, 1);</div><div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160;    <a class="code" href="namespacearmnn.xhtml#ac6e86c1def7f674d3c4cb7f577874aa6">arm_compute::Coordinates</a> coords = BuildArmComputeReductionCoordinates(m_OutputMul.info()-&gt;num_dimensions(),</div><div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;                                                                          outputMul_Info.GetNumDimensions(),</div><div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160;                                                                          armnnReduceAxes);</div><div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160;    m_ReduceSumLayer.configure(&amp;m_OutputMul,</div><div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160;                               &amp;m_FlattenedIndices,</div><div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160;                               static_cast&lt;unsigned int&gt;(coords[0]),</div><div class="line"><a name="l00169"></a><span class="lineno">  169</span>&#160;                               arm_compute::ReductionOperation::SUM,</div><div class="line"><a name="l00170"></a><span class="lineno">  170</span>&#160;                               <span class="keyword">false</span>);</div><div class="line"><a name="l00171"></a><span class="lineno">  171</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00172"></a><span class="lineno">  172</span>&#160;<span class="comment">    /// Call Gather with adequate shapes</span></div><div class="line"><a name="l00173"></a><span class="lineno">  173</span>&#160;<span class="comment"></span>    <span class="comment">// Reshape params into { K, C }</span></div><div class="line"><a name="l00174"></a><span class="lineno">  174</span>&#160;    paramsInfo.SetShape({ keyIndices[<span class="stringliteral">&quot;K&quot;</span>], keyIndices[<span class="stringliteral">&quot;C&quot;</span>] });</div><div class="line"><a name="l00175"></a><span class="lineno">  175</span>&#160;    input.info()-&gt;set_tensor_shape(BuildArmComputeTensorShape(paramsInfo.GetShape()));</div><div class="line"><a name="l00176"></a><span class="lineno">  176</span>&#160;</div><div class="line"><a name="l00177"></a><span class="lineno">  177</span>&#160;    <span class="comment">// Reshape output to have the shape given by gather { W, C }</span></div><div class="line"><a name="l00178"></a><span class="lineno">  178</span>&#160;    <span class="comment">// (the original outputInfo has the shape given by gatherNd)</span></div><div class="line"><a name="l00179"></a><span class="lineno">  179</span>&#160;    <a class="code" href="classarmnn_1_1_tensor_info.xhtml">armnn::TensorInfo</a> outputGather_Info = outputInfo;</div><div class="line"><a name="l00180"></a><span class="lineno">  180</span>&#160;    outputGather_Info.<a class="code" href="classarmnn_1_1_tensor_info.xhtml#abe8889e8150beef5fd204b2d87b49298">SetShape</a>({ keyIndices[<span class="stringliteral">&quot;W&quot;</span>], keyIndices[<span class="stringliteral">&quot;C&quot;</span>] });</div><div class="line"><a name="l00181"></a><span class="lineno">  181</span>&#160;    BuildArmComputeTensor(m_OutputGather, outputGather_Info);</div><div class="line"><a name="l00182"></a><span class="lineno">  182</span>&#160;    armcomputetensorutils::InitialiseArmComputeTensorEmpty(m_OutputGather);</div><div class="line"><a name="l00183"></a><span class="lineno">  183</span>&#160;</div><div class="line"><a name="l00184"></a><span class="lineno">  184</span>&#160;    m_GatherLayer.configure(&amp;input, &amp;m_FlattenedIndices, &amp;m_OutputGather, <a class="code" href="namespacearmnn.xhtml#a44a3b98b37a25c995aa9e4dae7d7b456">ComputeAclAxis</a>(0, paramsInfo));</div><div class="line"><a name="l00185"></a><span class="lineno">  185</span>&#160;</div><div class="line"><a name="l00186"></a><span class="lineno">  186</span>&#160;    <span class="comment">// Reshape output to the original output shape</span></div><div class="line"><a name="l00187"></a><span class="lineno">  187</span>&#160;    m_ReshapeLayer.configure(&amp;m_OutputGather, &amp;output);</div><div class="line"><a name="l00188"></a><span class="lineno">  188</span>&#160;}</div><div class="ttc" id="namespacearmnn_xhtml_a44a3b98b37a25c995aa9e4dae7d7b456"><div class="ttname"><a href="namespacearmnn.xhtml#a44a3b98b37a25c995aa9e4dae7d7b456">armnn::ComputeAclAxis</a></div><div class="ttdeci">int ComputeAclAxis(const int &amp;armnnAxis, const armnn::TensorInfo &amp;tensor)</div><div class="ttdoc">Function to convert ArmNN axis (left to right) to ACL axis (right to left) ranging from [-rank...</div><div class="ttdef"><b>Definition:</b> <a href="_arm_compute_utils_8hpp_source.xhtml#l00264">ArmComputeUtils.hpp:264</a></div></div>
<div class="ttc" id="namespacearmnn_xhtml_ac40d3e4035af5fbe68d9e126a8d6367c"><div class="ttname"><a href="namespacearmnn.xhtml#ac40d3e4035af5fbe68d9e126a8d6367c">armnn::CalculateGatherNdKeyIndices</a></div><div class="ttdeci">std::map&lt; std::string, unsigned int &gt; CalculateGatherNdKeyIndices(TensorInfo inputInfo0, TensorInfo inputInfo1)</div><div class="ttdoc">Calculates the key index values needed for GatherNd: N, ND, K, W, C (N is always 1) ...</div><div class="ttdef"><b>Definition:</b> <a href="_workload_utils_8cpp_source.xhtml#l00300">WorkloadUtils.cpp:300</a></div></div>
<div class="ttc" id="classarmnn_1_1_tensor_info_xhtml"><div class="ttname"><a href="classarmnn_1_1_tensor_info.xhtml">armnn::TensorInfo</a></div><div class="ttdef"><b>Definition:</b> <a href="_tensor_8hpp_source.xhtml#l00152">Tensor.hpp:152</a></div></div>
<div class="ttc" id="namespacearmnn_xhtml_ad8ed01ff3ff33333d8e19db4d2818bb6accedffbc6e5308e33d3843e8bdc0dad7"><div class="ttname"><a href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6accedffbc6e5308e33d3843e8bdc0dad7">armnn::DataType::Signed32</a></div></div>
<div class="ttc" id="namespacearmnn_xhtml_ac6e86c1def7f674d3c4cb7f577874aa6"><div class="ttname"><a href="namespacearmnn.xhtml#ac6e86c1def7f674d3c4cb7f577874aa6">armnn::Coordinates</a></div><div class="ttdeci">std::array&lt; unsigned int, MaxNumOfTensorDimensions &gt; Coordinates</div><div class="ttdef"><b>Definition:</b> <a href="_internal_types_8hpp_source.xhtml#l00015">InternalTypes.hpp:15</a></div></div>
<div class="ttc" id="structarmnn_1_1_queue_descriptor_xhtml_a765d2cee4ccce5b9467e0c2b6d25b84a"><div class="ttname"><a href="structarmnn_1_1_queue_descriptor.xhtml#a765d2cee4ccce5b9467e0c2b6d25b84a">armnn::QueueDescriptor::ValidateInputsOutputs</a></div><div class="ttdeci">void ValidateInputsOutputs(const std::string &amp;descName, unsigned int numExpectedIn, unsigned int numExpectedOut) const</div><div class="ttdef"><b>Definition:</b> <a href="_workload_data_8cpp_source.xhtml#l00474">WorkloadData.cpp:474</a></div></div>
<div class="ttc" id="classarmnn_1_1_tensor_info_xhtml_abe8889e8150beef5fd204b2d87b49298"><div class="ttname"><a href="classarmnn_1_1_tensor_info.xhtml#abe8889e8150beef5fd204b2d87b49298">armnn::TensorInfo::SetShape</a></div><div class="ttdeci">void SetShape(const TensorShape &amp;newShape)</div><div class="ttdef"><b>Definition:</b> <a href="_tensor_8hpp_source.xhtml#l00193">Tensor.hpp:193</a></div></div>
<div class="ttc" id="_assert_8hpp_xhtml_a91c4dfde57907d7698c7531785690a7f"><div class="ttname"><a href="_assert_8hpp.xhtml#a91c4dfde57907d7698c7531785690a7f">ARMNN_ASSERT_MSG</a></div><div class="ttdeci">#define ARMNN_ASSERT_MSG(COND, MSG)</div><div class="ttdef"><b>Definition:</b> <a href="_assert_8hpp_source.xhtml#l00015">Assert.hpp:15</a></div></div>
<div class="ttc" id="classarmnn_1_1_base_workload_xhtml_afb8d2c8817c75de9d01a4c0e0d5c160b"><div class="ttname"><a href="classarmnn_1_1_base_workload.xhtml#afb8d2c8817c75de9d01a4c0e0d5c160b">armnn::BaseWorkload&lt; GatherNdQueueDescriptor &gt;::m_Data</a></div><div class="ttdeci">GatherNdQueueDescriptor m_Data</div><div class="ttdef"><b>Definition:</b> <a href="include_2armnn_2backends_2_workload_8hpp_source.xhtml#l00083">Workload.hpp:83</a></div></div>
<div class="ttc" id="structarmnn_1_1_queue_descriptor_xhtml_a6abd491bb99ffe88bd472c1ae5a1ed1a"><div class="ttname"><a href="structarmnn_1_1_queue_descriptor.xhtml#a6abd491bb99ffe88bd472c1ae5a1ed1a">armnn::QueueDescriptor::m_Outputs</a></div><div class="ttdeci">std::vector&lt; ITensorHandle * &gt; m_Outputs</div><div class="ttdef"><b>Definition:</b> <a href="include_2armnn_2backends_2_workload_data_8hpp_source.xhtml#l00027">WorkloadData.hpp:27</a></div></div>
<div class="ttc" id="namespacearmnn_xhtml_a4dc0adc6737b5944e7671bee71788407acaf9b6b99962bf5c2264824231d7a40c"><div class="ttname"><a href="namespacearmnn.xhtml#a4dc0adc6737b5944e7671bee71788407acaf9b6b99962bf5c2264824231d7a40c">armnn::BoostLogSeverityMapping::info</a></div></div>
<div class="ttc" id="structarmnn_1_1_queue_descriptor_xhtml_a4b50e46a6810018f3edecfb68b2a76b3"><div class="ttname"><a href="structarmnn_1_1_queue_descriptor.xhtml#a4b50e46a6810018f3edecfb68b2a76b3">armnn::QueueDescriptor::m_Inputs</a></div><div class="ttdeci">std::vector&lt; ITensorHandle * &gt; m_Inputs</div><div class="ttdef"><b>Definition:</b> <a href="include_2armnn_2backends_2_workload_data_8hpp_source.xhtml#l00026">WorkloadData.hpp:26</a></div></div>
</div><!-- fragment -->
</div>
</div>
<h2 class="groupheader">Member Function Documentation</h2>
<a id="ae071e8822437c78baea75c3aef3a263a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ae071e8822437c78baea75c3aef3a263a">&#9670;&nbsp;</a></span>Execute()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void Execute </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Implements <a class="el" href="classarmnn_1_1_i_workload.xhtml#a72ae00e6604850c8798c5e0d825ee7e4">IWorkload</a>.</p>

<p class="definition">Definition at line <a class="el" href="_neon_gather_nd_workload_8cpp_source.xhtml#l00190">190</a> of file <a class="el" href="_neon_gather_nd_workload_8cpp_source.xhtml">NeonGatherNdWorkload.cpp</a>.</p>

<p class="reference">References <a class="el" href="_neon_workload_utils_8hpp_source.xhtml#l00024">ARMNN_SCOPED_PROFILING_EVENT_NEON_GUID</a>, and <a class="el" href="include_2armnn_2backends_2_workload_8hpp_source.xhtml#l00061">BaseWorkload&lt; GatherNdQueueDescriptor &gt;::GetGuid()</a>.</p>
<div class="fragment"><div class="line"><a name="l00191"></a><span class="lineno">  191</span>&#160;{</div><div class="line"><a name="l00192"></a><span class="lineno">  192</span>&#160;    <a class="code" href="_neon_workload_utils_8hpp.xhtml#a9165e41bcaf1b90f9ff91ef681e88c4f">ARMNN_SCOPED_PROFILING_EVENT_NEON_GUID</a>(<span class="stringliteral">&quot;NeonGatherNdWorkload_Execute&quot;</span>, this-&gt;<a class="code" href="classarmnn_1_1_base_workload.xhtml#aaff95a48875d8fb4a616352906660ca9">GetGuid</a>());</div><div class="line"><a name="l00193"></a><span class="lineno">  193</span>&#160;    m_MulLayer.run();</div><div class="line"><a name="l00194"></a><span class="lineno">  194</span>&#160;    m_ReduceSumLayer.run();</div><div class="line"><a name="l00195"></a><span class="lineno">  195</span>&#160;    m_GatherLayer.run();</div><div class="line"><a name="l00196"></a><span class="lineno">  196</span>&#160;    m_ReshapeLayer.run();</div><div class="line"><a name="l00197"></a><span class="lineno">  197</span>&#160;}</div><div class="ttc" id="classarmnn_1_1_base_workload_xhtml_aaff95a48875d8fb4a616352906660ca9"><div class="ttname"><a href="classarmnn_1_1_base_workload.xhtml#aaff95a48875d8fb4a616352906660ca9">armnn::BaseWorkload&lt; GatherNdQueueDescriptor &gt;::GetGuid</a></div><div class="ttdeci">arm::pipe::ProfilingGuid GetGuid() const final</div><div class="ttdef"><b>Definition:</b> <a href="include_2armnn_2backends_2_workload_8hpp_source.xhtml#l00061">Workload.hpp:61</a></div></div>
<div class="ttc" id="_neon_workload_utils_8hpp_xhtml_a9165e41bcaf1b90f9ff91ef681e88c4f"><div class="ttname"><a href="_neon_workload_utils_8hpp.xhtml#a9165e41bcaf1b90f9ff91ef681e88c4f">ARMNN_SCOPED_PROFILING_EVENT_NEON_GUID</a></div><div class="ttdeci">#define ARMNN_SCOPED_PROFILING_EVENT_NEON_GUID(name, guid)</div><div class="ttdef"><b>Definition:</b> <a href="_neon_workload_utils_8hpp_source.xhtml#l00024">NeonWorkloadUtils.hpp:24</a></div></div>
</div><!-- fragment -->
</div>
</div>
<hr/>The documentation for this class was generated from the following files:<ul>
<li>src/backends/neon/workloads/<a class="el" href="_neon_gather_nd_workload_8hpp_source.xhtml">NeonGatherNdWorkload.hpp</a></li>
<li>src/backends/neon/workloads/<a class="el" href="_neon_gather_nd_workload_8cpp_source.xhtml">NeonGatherNdWorkload.cpp</a></li>
</ul>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="namespacearmnn.xhtml">armnn</a></li><li class="navelem"><a class="el" href="classarmnn_1_1_neon_gather_nd_workload.xhtml">NeonGatherNdWorkload</a></li>
    <li class="footer">Generated on Fri Aug 19 2022 14:38:40 for ArmNN by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.13 </li>
  </ul>
</div>
</body>
</html>
