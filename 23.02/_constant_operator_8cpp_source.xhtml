<!-- Copyright (c) 2020 ARM Limited. -->
<!--                                 -->
<!-- SPDX-License-Identifier: MIT    -->
<!--                                 -->
<!-- HTML header for doxygen 1.8.13-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.13"/>
<meta name="robots" content="NOINDEX, NOFOLLOW" />
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>ArmNN: src/backends/tosaCommon/operatorMappings/ConstantOperator.cpp Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script><script type="text/javascript" src="http://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="stylesheet.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <img alt="ArmNN" src="Arm_NN_horizontal_blue.png" style="max-width: 10rem; margin-top: .5rem; margin-left 10px"/>
  <td style="padding-left: 0.5em;">
   <div id="projectname">
   &#160;<span id="projectnumber">23.02</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.13 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
$(document).ready(function(){initNavTree('_constant_operator_8cpp_source.xhtml','');});
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="headertitle">
<div class="title">ConstantOperator.cpp</div>  </div>
</div><!--header-->
<div class="contents">
<a href="_constant_operator_8cpp.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="comment">//</span></div><div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="comment">// Copyright Â© 2022 Arm Ltd and Contributors. All rights reserved.</span></div><div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="comment">// SPDX-License-Identifier: MIT</span></div><div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="comment">//</span></div><div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;</div><div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_constant_operator_8hpp.xhtml">ConstantOperator.hpp</a>&quot;</span></div><div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;</div><div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="preprocessor">#include &lt;<a class="code" href="_constant_layer_8hpp.xhtml">layers/ConstantLayer.hpp</a>&gt;</span></div><div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;</div><div class="line"><a name="l00010"></a><span class="lineno"><a class="line" href="_constant_operator_8hpp.xhtml#a40935658e630aab11b38425b1e178876">   10</a></span>&#160;TosaSerializationBasicBlock* <a class="code" href="_constant_operator_8cpp.xhtml#a40935658e630aab11b38425b1e178876">ConvertConstantToTosaOperator</a>(<span class="keyword">const</span> <a class="code" href="classarmnn_1_1_layer.xhtml">Layer</a>* layer,</div><div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;                                                           <span class="keyword">const</span> std::vector&lt;const TensorInfo*&gt;&amp; outputs)</div><div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;{</div><div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;    std::string outputName = std::string(<span class="stringliteral">&quot;constant_&quot;</span>);</div><div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;    std::string blockName  = std::string(<span class="stringliteral">&quot;Op_CONST_block_&quot;</span>) + <a class="code" href="_tosa_operator_utils_8hpp.xhtml#aadc5d73bd0cb81999bcfdc62bce020e8">GetUniqueTosaMappingID</a>();</div><div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;</div><div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;    std::vector&lt;uint8_t&gt; uint8Data;</div><div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;</div><div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;    <span class="comment">// If a layer is present then the block will be used for execution, so names need to be unique.</span></div><div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;    <span class="comment">// Also, set constant tensor data.</span></div><div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;    <span class="keywordflow">if</span>(layer != <span class="keyword">nullptr</span>)</div><div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;    {</div><div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;        outputName.append(std::to_string(layer-&gt;<a class="code" href="classarmnn_1_1_layer.xhtml#a8dc12f0ee5b232d397bd18ced1a72a64">GetGuid</a>()));</div><div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;        blockName.append(std::to_string(layer-&gt;<a class="code" href="classarmnn_1_1_layer.xhtml#a8dc12f0ee5b232d397bd18ced1a72a64">GetGuid</a>()));</div><div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;</div><div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;        <span class="keyword">auto</span> constantLayer = PolymorphicDowncast&lt;const armnn::ConstantLayer*&gt;(layer);</div><div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;        <span class="keyword">auto</span> tensorInfo = constantLayer-&gt;GetOutputSlot().GetTensorInfo();</div><div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;</div><div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;        uint8Data = <a class="code" href="_tosa_operator_utils_8hpp.xhtml#ae03fdd5482e75faa3b846bd021678f3b">ConvertConstantTensorDataToBuffer</a>(constantLayer-&gt;m_LayerOutput);</div><div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;    }</div><div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;</div><div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;    <span class="keyword">auto</span>* op = <span class="keyword">new</span> TosaSerializationOperator(Op_CONST, Attribute_NONE, <span class="keyword">nullptr</span>, {}, {outputName});</div><div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;</div><div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;    std::vector&lt;int32_t&gt; outputShape0 = <a class="code" href="_tosa_operator_utils_8hpp.xhtml#a7d97964a65be4eb4a5b4109904f2e7f7">GetTosaTensorShape</a>(outputs[0]-&gt;GetShape());</div><div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;    DType outputDType0 = <a class="code" href="_tosa_operator_utils_8hpp.xhtml#a45d66f17ad6b0469e469f443b3e03226">ArmNNToDType</a>(outputs[0]-&gt;GetDataType());</div><div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;</div><div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;    <span class="comment">// Setup output tensor with constant tensor data if available.</span></div><div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;    <span class="keyword">auto</span>* outputTensor0 = <span class="keyword">new</span> TosaSerializationTensor(outputName, outputShape0, outputDType0, uint8Data);</div><div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;</div><div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;    <span class="keywordflow">return</span> <span class="keyword">new</span> TosaSerializationBasicBlock(blockName,       <span class="comment">// name</span></div><div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;                                           {op},            <span class="comment">// operators</span></div><div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;                                           {outputTensor0}, <span class="comment">// tensors</span></div><div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;                                           {},              <span class="comment">// inputs</span></div><div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;                                           {outputName});   <span class="comment">// outputs</span></div><div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;}</div><div class="ttc" id="_tosa_operator_utils_8hpp_xhtml_a7d97964a65be4eb4a5b4109904f2e7f7"><div class="ttname"><a href="_tosa_operator_utils_8hpp.xhtml#a7d97964a65be4eb4a5b4109904f2e7f7">GetTosaTensorShape</a></div><div class="ttdeci">std::vector&lt; int32_t &gt; GetTosaTensorShape(const TensorShape &amp;shape)</div><div class="ttdef"><b>Definition:</b> <a href="_tosa_operator_utils_8hpp_source.xhtml#l00049">TosaOperatorUtils.hpp:49</a></div></div>
<div class="ttc" id="_tosa_operator_utils_8hpp_xhtml_ae03fdd5482e75faa3b846bd021678f3b"><div class="ttname"><a href="_tosa_operator_utils_8hpp.xhtml#ae03fdd5482e75faa3b846bd021678f3b">ConvertConstantTensorDataToBuffer</a></div><div class="ttdeci">std::vector&lt; uint8_t &gt; ConvertConstantTensorDataToBuffer(const std::shared_ptr&lt; ConstTensorHandle &gt; &amp;tensorHandle)</div><div class="ttdef"><b>Definition:</b> <a href="_tosa_operator_utils_8hpp_source.xhtml#l00280">TosaOperatorUtils.hpp:280</a></div></div>
<div class="ttc" id="_constant_operator_8cpp_xhtml_a40935658e630aab11b38425b1e178876"><div class="ttname"><a href="_constant_operator_8cpp.xhtml#a40935658e630aab11b38425b1e178876">ConvertConstantToTosaOperator</a></div><div class="ttdeci">TosaSerializationBasicBlock * ConvertConstantToTosaOperator(const Layer *layer, const std::vector&lt; const TensorInfo *&gt; &amp;outputs)</div><div class="ttdef"><b>Definition:</b> <a href="_constant_operator_8cpp_source.xhtml#l00010">ConstantOperator.cpp:10</a></div></div>
<div class="ttc" id="_tosa_operator_utils_8hpp_xhtml_a45d66f17ad6b0469e469f443b3e03226"><div class="ttname"><a href="_tosa_operator_utils_8hpp.xhtml#a45d66f17ad6b0469e469f443b3e03226">ArmNNToDType</a></div><div class="ttdeci">DType ArmNNToDType(const DataType &amp;type)</div><div class="ttdef"><b>Definition:</b> <a href="_tosa_operator_utils_8hpp_source.xhtml#l00020">TosaOperatorUtils.hpp:20</a></div></div>
<div class="ttc" id="_tosa_operator_utils_8hpp_xhtml_aadc5d73bd0cb81999bcfdc62bce020e8"><div class="ttname"><a href="_tosa_operator_utils_8hpp.xhtml#aadc5d73bd0cb81999bcfdc62bce020e8">GetUniqueTosaMappingID</a></div><div class="ttdeci">std::string GetUniqueTosaMappingID()</div><div class="ttdef"><b>Definition:</b> <a href="_tosa_operator_utils_8hpp_source.xhtml#l00097">TosaOperatorUtils.hpp:97</a></div></div>
<div class="ttc" id="_constant_layer_8hpp_xhtml"><div class="ttname"><a href="_constant_layer_8hpp.xhtml">ConstantLayer.hpp</a></div></div>
<div class="ttc" id="_constant_operator_8hpp_xhtml"><div class="ttname"><a href="_constant_operator_8hpp.xhtml">ConstantOperator.hpp</a></div></div>
<div class="ttc" id="classarmnn_1_1_layer_xhtml"><div class="ttname"><a href="classarmnn_1_1_layer.xhtml">armnn::Layer</a></div><div class="ttdef"><b>Definition:</b> <a href="_layer_8hpp_source.xhtml#l00217">Layer.hpp:217</a></div></div>
<div class="ttc" id="classarmnn_1_1_layer_xhtml_a8dc12f0ee5b232d397bd18ced1a72a64"><div class="ttname"><a href="classarmnn_1_1_layer.xhtml#a8dc12f0ee5b232d397bd18ced1a72a64">armnn::Layer::GetGuid</a></div><div class="ttdeci">LayerGuid GetGuid() const final</div><div class="ttdoc">Returns the unique id of the layer. </div><div class="ttdef"><b>Definition:</b> <a href="_layer_8hpp_source.xhtml#l00330">Layer.hpp:330</a></div></div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="dir_68267d1309a1af8e8297ef4c3efbcdba.xhtml">src</a></li><li class="navelem"><a class="el" href="dir_0f3cdec46afbc61a1ded8e1687c9c9a0.xhtml">backends</a></li><li class="navelem"><a class="el" href="dir_3eeadfb79f8e6e284b92aba47a7684a1.xhtml">tosaCommon</a></li><li class="navelem"><a class="el" href="dir_44a5c203710327e1068d2575c20cb7c6.xhtml">operatorMappings</a></li><li class="navelem"><a class="el" href="_constant_operator_8cpp.xhtml">ConstantOperator.cpp</a></li>
    <li class="footer">Generated on Fri Feb 24 2023 10:24:27 for ArmNN by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.13 </li>
  </ul>
</div>
</body>
</html>
