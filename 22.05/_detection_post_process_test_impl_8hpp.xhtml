<!-- Copyright (c) 2020 ARM Limited. -->
<!--                                 -->
<!-- SPDX-License-Identifier: MIT    -->
<!--                                 -->
<!-- HTML header for doxygen 1.8.13-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.13"/>
<meta name="robots" content="NOINDEX, NOFOLLOW" />
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>ArmNN: src/backends/backendsCommon/test/layerTests/DetectionPostProcessTestImpl.hpp File Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script><script type="text/javascript" src="http://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="stylesheet.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <img alt="ArmNN" src="Arm_NN_horizontal_blue.png" style="max-width: 10rem; margin-top: .5rem; margin-left 10px"/>
  <td style="padding-left: 0.5em;">
   <div id="projectname">
   &#160;<span id="projectnumber">22.05</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.13 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
$(document).ready(function(){initNavTree('_detection_post_process_test_impl_8hpp.xhtml','');});
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="summary">
<a href="#func-members">Functions</a>  </div>
  <div class="headertitle">
<div class="title">DetectionPostProcessTestImpl.hpp File Reference</div>  </div>
</div><!--header-->
<div class="contents">
<div class="textblock"><code>#include &lt;<a class="el" href="_resolve_type_8hpp_source.xhtml">ResolveType.hpp</a>&gt;</code><br />
<code>#include &lt;<a class="el" href="_types_8hpp_source.xhtml">armnn/Types.hpp</a>&gt;</code><br />
<code>#include &lt;<a class="el" href="include_2armnn_2backends_2_tensor_handle_8hpp_source.xhtml">armnn/backends/TensorHandle.hpp</a>&gt;</code><br />
<code>#include &lt;<a class="el" href="_i_backend_internal_8hpp_source.xhtml">armnn/backends/IBackendInternal.hpp</a>&gt;</code><br />
<code>#include &lt;<a class="el" href="include_2armnn_2backends_2_workload_factory_8hpp_source.xhtml">armnn/backends/WorkloadFactory.hpp</a>&gt;</code><br />
<code>#include &lt;<a class="el" href="include_2armnn_test_utils_2_tensor_copy_utils_8hpp_source.xhtml">armnnTestUtils/TensorCopyUtils.hpp</a>&gt;</code><br />
<code>#include &lt;<a class="el" href="_workload_factory_helper_8hpp_source.xhtml">backendsCommon/test/WorkloadFactoryHelper.hpp</a>&gt;</code><br />
<code>#include &lt;<a class="el" href="include_2armnn_test_utils_2_workload_test_utils_8hpp_source.xhtml">armnnTestUtils/WorkloadTestUtils.hpp</a>&gt;</code><br />
<code>#include &lt;<a class="el" href="include_2armnn_test_utils_2_tensor_helpers_8hpp_source.xhtml">armnnTestUtils/TensorHelpers.hpp</a>&gt;</code><br />
<code>#include &lt;doctest/doctest.h&gt;</code><br />
</div>
<p><a href="_detection_post_process_test_impl_8hpp_source.xhtml">Go to the source code of this file.</a></p>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="func-members"></a>
Functions</h2></td></tr>
<tr class="memitem:abcb5860eb1d6f41eabf48d985b51da3b"><td class="memTemplParams" colspan="2">template&lt;typename FactoryType , armnn::DataType ArmnnType, typename T  = armnn::ResolveType&lt;ArmnnType&gt;&gt; </td></tr>
<tr class="memitem:abcb5860eb1d6f41eabf48d985b51da3b"><td class="memTemplItemLeft" align="right" valign="top">void&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="_detection_post_process_test_impl_8hpp.xhtml#abcb5860eb1d6f41eabf48d985b51da3b">DetectionPostProcessImpl</a> (const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">armnn::TensorInfo</a> &amp;boxEncodingsInfo, const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">armnn::TensorInfo</a> &amp;scoresInfo, const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">armnn::TensorInfo</a> &amp;anchorsInfo, const std::vector&lt; T &gt; &amp;boxEncodingsData, const std::vector&lt; T &gt; &amp;scoresData, const std::vector&lt; T &gt; &amp;anchorsData, const std::vector&lt; float &gt; &amp;expectedDetectionBoxes, const std::vector&lt; float &gt; &amp;expectedDetectionClasses, const std::vector&lt; float &gt; &amp;expectedDetectionScores, const std::vector&lt; float &gt; &amp;expectedNumDetections, bool useRegularNms)</td></tr>
<tr class="separator:abcb5860eb1d6f41eabf48d985b51da3b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae7a0cad618fa649079d11502ecdd7691"><td class="memTemplParams" colspan="2">template&lt;armnn::DataType QuantizedType, typename RawType  = armnn::ResolveType&lt;QuantizedType&gt;&gt; </td></tr>
<tr class="memitem:ae7a0cad618fa649079d11502ecdd7691"><td class="memTemplItemLeft" align="right" valign="top">void&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="_detection_post_process_test_impl_8hpp.xhtml#ae7a0cad618fa649079d11502ecdd7691">QuantizeData</a> (RawType *quant, const float *dequant, const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">armnn::TensorInfo</a> &amp;info)</td></tr>
<tr class="separator:ae7a0cad618fa649079d11502ecdd7691"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a41f47226e626cee4e116cddb477aaffa"><td class="memTemplParams" colspan="2">template&lt;typename FactoryType &gt; </td></tr>
<tr class="memitem:a41f47226e626cee4e116cddb477aaffa"><td class="memTemplItemLeft" align="right" valign="top">void&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="_detection_post_process_test_impl_8hpp.xhtml#a41f47226e626cee4e116cddb477aaffa">DetectionPostProcessRegularNmsFloatTest</a> ()</td></tr>
<tr class="separator:a41f47226e626cee4e116cddb477aaffa"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a529a27be5db241fb01a7ee08286d2e0a"><td class="memTemplParams" colspan="2">template&lt;typename FactoryType , armnn::DataType QuantizedType, typename RawType  = armnn::ResolveType&lt;QuantizedType&gt;&gt; </td></tr>
<tr class="memitem:a529a27be5db241fb01a7ee08286d2e0a"><td class="memTemplItemLeft" align="right" valign="top">void&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="_detection_post_process_test_impl_8hpp.xhtml#a529a27be5db241fb01a7ee08286d2e0a">DetectionPostProcessRegularNmsQuantizedTest</a> ()</td></tr>
<tr class="separator:a529a27be5db241fb01a7ee08286d2e0a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a53950727fa51d571f312789c72db09bc"><td class="memTemplParams" colspan="2">template&lt;typename FactoryType &gt; </td></tr>
<tr class="memitem:a53950727fa51d571f312789c72db09bc"><td class="memTemplItemLeft" align="right" valign="top">void&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="_detection_post_process_test_impl_8hpp.xhtml#a53950727fa51d571f312789c72db09bc">DetectionPostProcessFastNmsFloatTest</a> ()</td></tr>
<tr class="separator:a53950727fa51d571f312789c72db09bc"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a496f3eb2f8ca9b1e688fbc716f77c448"><td class="memTemplParams" colspan="2">template&lt;typename FactoryType , armnn::DataType QuantizedType, typename RawType  = armnn::ResolveType&lt;QuantizedType&gt;&gt; </td></tr>
<tr class="memitem:a496f3eb2f8ca9b1e688fbc716f77c448"><td class="memTemplItemLeft" align="right" valign="top">void&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="_detection_post_process_test_impl_8hpp.xhtml#a496f3eb2f8ca9b1e688fbc716f77c448">DetectionPostProcessFastNmsQuantizedTest</a> ()</td></tr>
<tr class="separator:a496f3eb2f8ca9b1e688fbc716f77c448"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<h2 class="groupheader">Function Documentation</h2>
<a id="a53950727fa51d571f312789c72db09bc"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a53950727fa51d571f312789c72db09bc">&#9670;&nbsp;</a></span>DetectionPostProcessFastNmsFloatTest()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void DetectionPostProcessFastNmsFloatTest </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_detection_post_process_test_impl_8hpp_source.xhtml#l00324">324</a> of file <a class="el" href="_detection_post_process_test_impl_8hpp_source.xhtml">DetectionPostProcessTestImpl.hpp</a>.</p>

<p class="reference">References <a class="el" href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a166495adc0d0f53bee6baecc577f5204">armnn::Float32</a>.</p>
<div class="fragment"><div class="line"><a name="l00325"></a><span class="lineno">  325</span>&#160;{</div><div class="line"><a name="l00326"></a><span class="lineno">  326</span>&#160;    <span class="keywordflow">return</span> DetectionPostProcessImpl&lt;FactoryType, armnn::DataType::Float32&gt;(</div><div class="line"><a name="l00327"></a><span class="lineno">  327</span>&#160;        <a class="code" href="classarmnn_1_1_tensor_info.xhtml">armnn::TensorInfo</a>(TestData::s_BoxEncodingsShape, <a class="code" href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a166495adc0d0f53bee6baecc577f5204">armnn::DataType::Float32</a>),</div><div class="line"><a name="l00328"></a><span class="lineno">  328</span>&#160;        <a class="code" href="classarmnn_1_1_tensor_info.xhtml">armnn::TensorInfo</a>(TestData::s_ScoresShape, <a class="code" href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a166495adc0d0f53bee6baecc577f5204">armnn::DataType::Float32</a>),</div><div class="line"><a name="l00329"></a><span class="lineno">  329</span>&#160;        <a class="code" href="classarmnn_1_1_tensor_info.xhtml">armnn::TensorInfo</a>(TestData::s_AnchorsShape, <a class="code" href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a166495adc0d0f53bee6baecc577f5204">armnn::DataType::Float32</a>),</div><div class="line"><a name="l00330"></a><span class="lineno">  330</span>&#160;        TestData::s_BoxEncodings,</div><div class="line"><a name="l00331"></a><span class="lineno">  331</span>&#160;        TestData::s_Scores,</div><div class="line"><a name="l00332"></a><span class="lineno">  332</span>&#160;        TestData::s_Anchors,</div><div class="line"><a name="l00333"></a><span class="lineno">  333</span>&#160;        FastNmsExpectedResults::s_DetectionBoxes,</div><div class="line"><a name="l00334"></a><span class="lineno">  334</span>&#160;        FastNmsExpectedResults::s_DetectionClasses,</div><div class="line"><a name="l00335"></a><span class="lineno">  335</span>&#160;        FastNmsExpectedResults::s_DetectionScores,</div><div class="line"><a name="l00336"></a><span class="lineno">  336</span>&#160;        FastNmsExpectedResults::s_NumDetections,</div><div class="line"><a name="l00337"></a><span class="lineno">  337</span>&#160;        <span class="keyword">false</span>);</div><div class="line"><a name="l00338"></a><span class="lineno">  338</span>&#160;}</div><div class="ttc" id="classarmnn_1_1_tensor_info_xhtml"><div class="ttname"><a href="classarmnn_1_1_tensor_info.xhtml">armnn::TensorInfo</a></div><div class="ttdef"><b>Definition:</b> <a href="_tensor_8hpp_source.xhtml#l00152">Tensor.hpp:152</a></div></div>
<div class="ttc" id="namespacearmnn_xhtml_ad8ed01ff3ff33333d8e19db4d2818bb6a166495adc0d0f53bee6baecc577f5204"><div class="ttname"><a href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a166495adc0d0f53bee6baecc577f5204">armnn::DataType::Float32</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="a496f3eb2f8ca9b1e688fbc716f77c448"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a496f3eb2f8ca9b1e688fbc716f77c448">&#9670;&nbsp;</a></span>DetectionPostProcessFastNmsQuantizedTest()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void DetectionPostProcessFastNmsQuantizedTest </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_detection_post_process_test_impl_8hpp_source.xhtml#l00343">343</a> of file <a class="el" href="_detection_post_process_test_impl_8hpp_source.xhtml">DetectionPostProcessTestImpl.hpp</a>.</p>

<p class="reference">References <a class="el" href="_tensor_8cpp_source.xhtml#l00489">TensorInfo::SetQuantizationOffset()</a>, and <a class="el" href="_tensor_8cpp_source.xhtml#l00473">TensorInfo::SetQuantizationScale()</a>.</p>
<div class="fragment"><div class="line"><a name="l00344"></a><span class="lineno">  344</span>&#160;{</div><div class="line"><a name="l00345"></a><span class="lineno">  345</span>&#160;    <a class="code" href="classarmnn_1_1_tensor_info.xhtml">armnn::TensorInfo</a> boxEncodingsInfo(TestData::s_BoxEncodingsShape, QuantizedType);</div><div class="line"><a name="l00346"></a><span class="lineno">  346</span>&#160;    <a class="code" href="classarmnn_1_1_tensor_info.xhtml">armnn::TensorInfo</a> scoresInfo(TestData::s_ScoresShape, QuantizedType);</div><div class="line"><a name="l00347"></a><span class="lineno">  347</span>&#160;    <a class="code" href="classarmnn_1_1_tensor_info.xhtml">armnn::TensorInfo</a> anchorsInfo(TestData::s_AnchorsShape, QuantizedType);</div><div class="line"><a name="l00348"></a><span class="lineno">  348</span>&#160;</div><div class="line"><a name="l00349"></a><span class="lineno">  349</span>&#160;    boxEncodingsInfo.SetQuantizationScale(TestData::s_BoxEncodingsQuantData.first);</div><div class="line"><a name="l00350"></a><span class="lineno">  350</span>&#160;    boxEncodingsInfo.SetQuantizationOffset(TestData::s_BoxEncodingsQuantData.second);</div><div class="line"><a name="l00351"></a><span class="lineno">  351</span>&#160;</div><div class="line"><a name="l00352"></a><span class="lineno">  352</span>&#160;    scoresInfo.SetQuantizationScale(TestData::s_ScoresQuantData.first);</div><div class="line"><a name="l00353"></a><span class="lineno">  353</span>&#160;    scoresInfo.SetQuantizationOffset(TestData::s_ScoresQuantData.second);</div><div class="line"><a name="l00354"></a><span class="lineno">  354</span>&#160;</div><div class="line"><a name="l00355"></a><span class="lineno">  355</span>&#160;    anchorsInfo.SetQuantizationScale(TestData::s_AnchorsQuantData.first);</div><div class="line"><a name="l00356"></a><span class="lineno">  356</span>&#160;    anchorsInfo.SetQuantizationOffset(TestData::s_BoxEncodingsQuantData.second);</div><div class="line"><a name="l00357"></a><span class="lineno">  357</span>&#160;</div><div class="line"><a name="l00358"></a><span class="lineno">  358</span>&#160;    std::vector&lt;RawType&gt; boxEncodingsData(TestData::s_BoxEncodingsShape.GetNumElements());</div><div class="line"><a name="l00359"></a><span class="lineno">  359</span>&#160;    QuantizeData&lt;QuantizedType&gt;(boxEncodingsData.data(),</div><div class="line"><a name="l00360"></a><span class="lineno">  360</span>&#160;                                TestData::s_BoxEncodings.data(),</div><div class="line"><a name="l00361"></a><span class="lineno">  361</span>&#160;                                boxEncodingsInfo);</div><div class="line"><a name="l00362"></a><span class="lineno">  362</span>&#160;</div><div class="line"><a name="l00363"></a><span class="lineno">  363</span>&#160;    std::vector&lt;RawType&gt; scoresData(TestData::s_ScoresShape.GetNumElements());</div><div class="line"><a name="l00364"></a><span class="lineno">  364</span>&#160;    QuantizeData&lt;QuantizedType&gt;(scoresData.data(),</div><div class="line"><a name="l00365"></a><span class="lineno">  365</span>&#160;                                TestData::s_Scores.data(),</div><div class="line"><a name="l00366"></a><span class="lineno">  366</span>&#160;                                scoresInfo);</div><div class="line"><a name="l00367"></a><span class="lineno">  367</span>&#160;</div><div class="line"><a name="l00368"></a><span class="lineno">  368</span>&#160;    std::vector&lt;RawType&gt; anchorsData(TestData::s_AnchorsShape.GetNumElements());</div><div class="line"><a name="l00369"></a><span class="lineno">  369</span>&#160;    QuantizeData&lt;QuantizedType&gt;(anchorsData.data(),</div><div class="line"><a name="l00370"></a><span class="lineno">  370</span>&#160;                                TestData::s_Anchors.data(),</div><div class="line"><a name="l00371"></a><span class="lineno">  371</span>&#160;                                anchorsInfo);</div><div class="line"><a name="l00372"></a><span class="lineno">  372</span>&#160;</div><div class="line"><a name="l00373"></a><span class="lineno">  373</span>&#160;    <span class="keywordflow">return</span> DetectionPostProcessImpl&lt;FactoryType, QuantizedType&gt;(</div><div class="line"><a name="l00374"></a><span class="lineno">  374</span>&#160;        boxEncodingsInfo,</div><div class="line"><a name="l00375"></a><span class="lineno">  375</span>&#160;        scoresInfo,</div><div class="line"><a name="l00376"></a><span class="lineno">  376</span>&#160;        anchorsInfo,</div><div class="line"><a name="l00377"></a><span class="lineno">  377</span>&#160;        boxEncodingsData,</div><div class="line"><a name="l00378"></a><span class="lineno">  378</span>&#160;        scoresData,</div><div class="line"><a name="l00379"></a><span class="lineno">  379</span>&#160;        anchorsData,</div><div class="line"><a name="l00380"></a><span class="lineno">  380</span>&#160;        FastNmsExpectedResults::s_DetectionBoxes,</div><div class="line"><a name="l00381"></a><span class="lineno">  381</span>&#160;        FastNmsExpectedResults::s_DetectionClasses,</div><div class="line"><a name="l00382"></a><span class="lineno">  382</span>&#160;        FastNmsExpectedResults::s_DetectionScores,</div><div class="line"><a name="l00383"></a><span class="lineno">  383</span>&#160;        FastNmsExpectedResults::s_NumDetections,</div><div class="line"><a name="l00384"></a><span class="lineno">  384</span>&#160;        <span class="keyword">false</span>);</div><div class="line"><a name="l00385"></a><span class="lineno">  385</span>&#160;}</div><div class="ttc" id="classarmnn_1_1_tensor_info_xhtml"><div class="ttname"><a href="classarmnn_1_1_tensor_info.xhtml">armnn::TensorInfo</a></div><div class="ttdef"><b>Definition:</b> <a href="_tensor_8hpp_source.xhtml#l00152">Tensor.hpp:152</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="abcb5860eb1d6f41eabf48d985b51da3b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#abcb5860eb1d6f41eabf48d985b51da3b">&#9670;&nbsp;</a></span>DetectionPostProcessImpl()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void DetectionPostProcessImpl </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">armnn::TensorInfo</a> &amp;&#160;</td>
          <td class="paramname"><em>boxEncodingsInfo</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">armnn::TensorInfo</a> &amp;&#160;</td>
          <td class="paramname"><em>scoresInfo</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">armnn::TensorInfo</a> &amp;&#160;</td>
          <td class="paramname"><em>anchorsInfo</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const std::vector&lt; T &gt; &amp;&#160;</td>
          <td class="paramname"><em>boxEncodingsData</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const std::vector&lt; T &gt; &amp;&#160;</td>
          <td class="paramname"><em>scoresData</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const std::vector&lt; T &gt; &amp;&#160;</td>
          <td class="paramname"><em>anchorsData</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const std::vector&lt; float &gt; &amp;&#160;</td>
          <td class="paramname"><em>expectedDetectionBoxes</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const std::vector&lt; float &gt; &amp;&#160;</td>
          <td class="paramname"><em>expectedDetectionClasses</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const std::vector&lt; float &gt; &amp;&#160;</td>
          <td class="paramname"><em>expectedDetectionScores</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const std::vector&lt; float &gt; &amp;&#160;</td>
          <td class="paramname"><em>expectedNumDetections</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>useRegularNms</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_detection_post_process_test_impl_8hpp_source.xhtml#l00141">141</a> of file <a class="el" href="_detection_post_process_test_impl_8hpp_source.xhtml">DetectionPostProcessTestImpl.hpp</a>.</p>

<p class="reference">References <a class="el" href="_tensor_copy_utils_8cpp_source.xhtml#l00019">AllocateAndCopyDataToITensorHandle()</a>, <a class="el" href="include_2armnn_test_utils_2_tensor_helpers_8hpp_source.xhtml#l00073">CompareTensors()</a>, <a class="el" href="_tensor_copy_utils_8cpp_source.xhtml#l00014">CopyDataFromITensorHandle()</a>, <a class="el" href="_tensor_copy_utils_8cpp_source.xhtml#l00009">CopyDataToITensorHandle()</a>, <a class="el" href="namespacearmnn.xhtml#a56943a0946e5f15e5e58054b8e7a04a4a1db19222ac424bd7162142ddf929fd2a">armnn::DetectionPostProcess</a>, <a class="el" href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a166495adc0d0f53bee6baecc577f5204">armnn::Float32</a>, <a class="el" href="_profiling_8cpp_source.xhtml#l00572">ProfilerManager::GetInstance()</a>, <a class="el" href="include_2armnn_2backends_2_workload_data_8hpp_source.xhtml#l00066">QueueDescriptorWithParameters&lt; LayerDescriptor &gt;::m_Parameters</a>, <a class="el" href="_descriptors_8hpp_source.xhtml#l00722">DetectionPostProcessDescriptor::m_UseRegularNms</a>, and <a class="el" href="_profiling_8cpp_source.xhtml#l00579">ProfilerManager::RegisterProfiler()</a>.</p>
<div class="fragment"><div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;{</div><div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;    std::unique_ptr&lt;armnn::IProfiler&gt; profiler = std::make_unique&lt;armnn::IProfiler&gt;();</div><div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;    <a class="code" href="classarmnn_1_1_profiler_manager.xhtml#a93857080c2523bf3395e7aa7e6024d5c">armnn::ProfilerManager::GetInstance</a>().<a class="code" href="classarmnn_1_1_profiler_manager.xhtml#a7b1e3e5bf386004541be2b5b22443208">RegisterProfiler</a>(profiler.get());</div><div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;</div><div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;    <span class="keyword">auto</span> memoryManager = WorkloadFactoryHelper&lt;FactoryType&gt;::GetMemoryManager();</div><div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160;    FactoryType workloadFactory = WorkloadFactoryHelper&lt;FactoryType&gt;::GetFactory(memoryManager);</div><div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;    <span class="keyword">auto</span> tensorHandleFactory = WorkloadFactoryHelper&lt;FactoryType&gt;::GetTensorHandleFactory(memoryManager);</div><div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160;</div><div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160;    <a class="code" href="classarmnn_1_1_tensor_info.xhtml">armnn::TensorInfo</a> detectionBoxesInfo({ 1, 3, 4 }, <a class="code" href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a166495adc0d0f53bee6baecc577f5204">armnn::DataType::Float32</a>);</div><div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160;    <a class="code" href="classarmnn_1_1_tensor_info.xhtml">armnn::TensorInfo</a> detectionClassesInfo({ 1, 3 }, <a class="code" href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a166495adc0d0f53bee6baecc577f5204">armnn::DataType::Float32</a>);</div><div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160;    <a class="code" href="classarmnn_1_1_tensor_info.xhtml">armnn::TensorInfo</a> detectionScoresInfo({ 1, 3 }, <a class="code" href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a166495adc0d0f53bee6baecc577f5204">armnn::DataType::Float32</a>);</div><div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160;    <a class="code" href="classarmnn_1_1_tensor_info.xhtml">armnn::TensorInfo</a> numDetectionInfo({ 1 }, <a class="code" href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a166495adc0d0f53bee6baecc577f5204">armnn::DataType::Float32</a>);</div><div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;</div><div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160;    std::vector&lt;float&gt; actualDetectionBoxesOutput(detectionBoxesInfo.GetNumElements());</div><div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160;    std::vector&lt;float&gt; actualDetectionClassesOutput(detectionClassesInfo.GetNumElements());</div><div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160;    std::vector&lt;float&gt; actualDetectionScoresOutput(detectionScoresInfo.GetNumElements());</div><div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160;    std::vector&lt;float&gt; actualNumDetectionOutput(numDetectionInfo.GetNumElements());</div><div class="line"><a name="l00169"></a><span class="lineno">  169</span>&#160;</div><div class="line"><a name="l00170"></a><span class="lineno">  170</span>&#160;    <span class="keyword">auto</span> boxedHandle = tensorHandleFactory.CreateTensorHandle(boxEncodingsInfo);</div><div class="line"><a name="l00171"></a><span class="lineno">  171</span>&#160;    <span class="keyword">auto</span> scoreshandle = tensorHandleFactory.CreateTensorHandle(scoresInfo);</div><div class="line"><a name="l00172"></a><span class="lineno">  172</span>&#160;    <span class="keyword">auto</span> anchorsHandle = tensorHandleFactory.CreateTensorHandle(anchorsInfo);</div><div class="line"><a name="l00173"></a><span class="lineno">  173</span>&#160;    <span class="keyword">auto</span> outputBoxesHandle = tensorHandleFactory.CreateTensorHandle(detectionBoxesInfo);</div><div class="line"><a name="l00174"></a><span class="lineno">  174</span>&#160;    <span class="keyword">auto</span> classesHandle = tensorHandleFactory.CreateTensorHandle(detectionClassesInfo);</div><div class="line"><a name="l00175"></a><span class="lineno">  175</span>&#160;    <span class="keyword">auto</span> outputScoresHandle = tensorHandleFactory.CreateTensorHandle(detectionScoresInfo);</div><div class="line"><a name="l00176"></a><span class="lineno">  176</span>&#160;    <span class="keyword">auto</span> numDetectionHandle = tensorHandleFactory.CreateTensorHandle(numDetectionInfo);</div><div class="line"><a name="l00177"></a><span class="lineno">  177</span>&#160;</div><div class="line"><a name="l00178"></a><span class="lineno">  178</span>&#160;    <a class="code" href="classarmnn_1_1_scoped_tensor_handle.xhtml">armnn::ScopedTensorHandle</a> anchorsTensor(anchorsInfo);</div><div class="line"><a name="l00179"></a><span class="lineno">  179</span>&#160;    <a class="code" href="include_2armnn_test_utils_2_tensor_copy_utils_8hpp.xhtml#afaaca8c3f3a467d124bba44067d2afa8">AllocateAndCopyDataToITensorHandle</a>(&amp;anchorsTensor, anchorsData.data());</div><div class="line"><a name="l00180"></a><span class="lineno">  180</span>&#160;</div><div class="line"><a name="l00181"></a><span class="lineno">  181</span>&#160;    <a class="code" href="structarmnn_1_1_detection_post_process_queue_descriptor.xhtml">armnn::DetectionPostProcessQueueDescriptor</a> data;</div><div class="line"><a name="l00182"></a><span class="lineno">  182</span>&#160;    data.<a class="code" href="structarmnn_1_1_queue_descriptor_with_parameters.xhtml#aad91b9bbf7aa365d304febe79a3d1333">m_Parameters</a>.<a class="code" href="structarmnn_1_1_detection_post_process_descriptor.xhtml#a7ed9bc7c26df67d274d5dd4cd83adf0f">m_UseRegularNms</a> = useRegularNms;</div><div class="line"><a name="l00183"></a><span class="lineno">  183</span>&#160;    data.m_Parameters.m_MaxDetections = 3;</div><div class="line"><a name="l00184"></a><span class="lineno">  184</span>&#160;    data.m_Parameters.m_MaxClassesPerDetection = 1;</div><div class="line"><a name="l00185"></a><span class="lineno">  185</span>&#160;    data.m_Parameters.m_DetectionsPerClass =1;</div><div class="line"><a name="l00186"></a><span class="lineno">  186</span>&#160;    data.m_Parameters.m_NmsScoreThreshold = 0.0;</div><div class="line"><a name="l00187"></a><span class="lineno">  187</span>&#160;    data.m_Parameters.m_NmsIouThreshold = 0.5;</div><div class="line"><a name="l00188"></a><span class="lineno">  188</span>&#160;    data.m_Parameters.m_NumClasses = 2;</div><div class="line"><a name="l00189"></a><span class="lineno">  189</span>&#160;    data.m_Parameters.m_ScaleY = 10.0;</div><div class="line"><a name="l00190"></a><span class="lineno">  190</span>&#160;    data.m_Parameters.m_ScaleX = 10.0;</div><div class="line"><a name="l00191"></a><span class="lineno">  191</span>&#160;    data.m_Parameters.m_ScaleH = 5.0;</div><div class="line"><a name="l00192"></a><span class="lineno">  192</span>&#160;    data.m_Parameters.m_ScaleW = 5.0;</div><div class="line"><a name="l00193"></a><span class="lineno">  193</span>&#160;    data.m_Anchors = &amp;anchorsTensor;</div><div class="line"><a name="l00194"></a><span class="lineno">  194</span>&#160;</div><div class="line"><a name="l00195"></a><span class="lineno">  195</span>&#160;    <a class="code" href="structarmnn_1_1_workload_info.xhtml">armnn::WorkloadInfo</a> <a class="code" href="namespacearmnn.xhtml#a4dc0adc6737b5944e7671bee71788407acaf9b6b99962bf5c2264824231d7a40c">info</a>;</div><div class="line"><a name="l00196"></a><span class="lineno">  196</span>&#160;    AddInputToWorkload(data,  info, boxEncodingsInfo, boxedHandle.get());</div><div class="line"><a name="l00197"></a><span class="lineno">  197</span>&#160;    AddInputToWorkload(data,  info, scoresInfo, scoreshandle.get());</div><div class="line"><a name="l00198"></a><span class="lineno">  198</span>&#160;    AddOutputToWorkload(data, info, detectionBoxesInfo, outputBoxesHandle.get());</div><div class="line"><a name="l00199"></a><span class="lineno">  199</span>&#160;    AddOutputToWorkload(data, info, detectionClassesInfo, classesHandle.get());</div><div class="line"><a name="l00200"></a><span class="lineno">  200</span>&#160;    AddOutputToWorkload(data, info, detectionScoresInfo, outputScoresHandle.get());</div><div class="line"><a name="l00201"></a><span class="lineno">  201</span>&#160;    AddOutputToWorkload(data, info, numDetectionInfo, numDetectionHandle.get());</div><div class="line"><a name="l00202"></a><span class="lineno">  202</span>&#160;</div><div class="line"><a name="l00203"></a><span class="lineno">  203</span>&#160;    std::unique_ptr&lt;armnn::IWorkload&gt; workload = workloadFactory.CreateWorkload(<a class="code" href="namespacearmnn.xhtml#a56943a0946e5f15e5e58054b8e7a04a4a1db19222ac424bd7162142ddf929fd2a">armnn::LayerType::DetectionPostProcess</a>,</div><div class="line"><a name="l00204"></a><span class="lineno">  204</span>&#160;                                                                                data,</div><div class="line"><a name="l00205"></a><span class="lineno">  205</span>&#160;                                                                                info);</div><div class="line"><a name="l00206"></a><span class="lineno">  206</span>&#160;</div><div class="line"><a name="l00207"></a><span class="lineno">  207</span>&#160;    boxedHandle-&gt;Allocate();</div><div class="line"><a name="l00208"></a><span class="lineno">  208</span>&#160;    scoreshandle-&gt;Allocate();</div><div class="line"><a name="l00209"></a><span class="lineno">  209</span>&#160;    outputBoxesHandle-&gt;Allocate();</div><div class="line"><a name="l00210"></a><span class="lineno">  210</span>&#160;    classesHandle-&gt;Allocate();</div><div class="line"><a name="l00211"></a><span class="lineno">  211</span>&#160;    outputScoresHandle-&gt;Allocate();</div><div class="line"><a name="l00212"></a><span class="lineno">  212</span>&#160;    numDetectionHandle-&gt;Allocate();</div><div class="line"><a name="l00213"></a><span class="lineno">  213</span>&#160;</div><div class="line"><a name="l00214"></a><span class="lineno">  214</span>&#160;    <a class="code" href="include_2armnn_test_utils_2_tensor_copy_utils_8hpp.xhtml#ae15f1a3c55d2db87683577de9fa4437c">CopyDataToITensorHandle</a>(boxedHandle.get(), boxEncodingsData.data());</div><div class="line"><a name="l00215"></a><span class="lineno">  215</span>&#160;    <a class="code" href="include_2armnn_test_utils_2_tensor_copy_utils_8hpp.xhtml#ae15f1a3c55d2db87683577de9fa4437c">CopyDataToITensorHandle</a>(scoreshandle.get(), scoresData.data());</div><div class="line"><a name="l00216"></a><span class="lineno">  216</span>&#160;</div><div class="line"><a name="l00217"></a><span class="lineno">  217</span>&#160;    workload-&gt;Execute();</div><div class="line"><a name="l00218"></a><span class="lineno">  218</span>&#160;</div><div class="line"><a name="l00219"></a><span class="lineno">  219</span>&#160;    <a class="code" href="include_2armnn_test_utils_2_tensor_copy_utils_8hpp.xhtml#ab5dfed8358e500ed523d78090ec78e88">CopyDataFromITensorHandle</a>(actualDetectionBoxesOutput.data(), outputBoxesHandle.get());</div><div class="line"><a name="l00220"></a><span class="lineno">  220</span>&#160;    <a class="code" href="include_2armnn_test_utils_2_tensor_copy_utils_8hpp.xhtml#ab5dfed8358e500ed523d78090ec78e88">CopyDataFromITensorHandle</a>(actualDetectionClassesOutput.data(), classesHandle.get());</div><div class="line"><a name="l00221"></a><span class="lineno">  221</span>&#160;    <a class="code" href="include_2armnn_test_utils_2_tensor_copy_utils_8hpp.xhtml#ab5dfed8358e500ed523d78090ec78e88">CopyDataFromITensorHandle</a>(actualDetectionScoresOutput.data(), outputScoresHandle.get());</div><div class="line"><a name="l00222"></a><span class="lineno">  222</span>&#160;    <a class="code" href="include_2armnn_test_utils_2_tensor_copy_utils_8hpp.xhtml#ab5dfed8358e500ed523d78090ec78e88">CopyDataFromITensorHandle</a>(actualNumDetectionOutput.data(), numDetectionHandle.get());</div><div class="line"><a name="l00223"></a><span class="lineno">  223</span>&#160;</div><div class="line"><a name="l00224"></a><span class="lineno">  224</span>&#160;    <span class="keyword">auto</span> result = <a class="code" href="include_2armnn_test_utils_2_tensor_helpers_8hpp.xhtml#a5fea88a1c3398e303fb83b6db155ff2d">CompareTensors</a>(actualDetectionBoxesOutput,</div><div class="line"><a name="l00225"></a><span class="lineno">  225</span>&#160;                                 expectedDetectionBoxes,</div><div class="line"><a name="l00226"></a><span class="lineno">  226</span>&#160;                                 outputBoxesHandle-&gt;GetShape(),</div><div class="line"><a name="l00227"></a><span class="lineno">  227</span>&#160;                                 detectionBoxesInfo.GetShape());</div><div class="line"><a name="l00228"></a><span class="lineno">  228</span>&#160;    CHECK_MESSAGE(result.m_Result, result.m_Message.str());</div><div class="line"><a name="l00229"></a><span class="lineno">  229</span>&#160;</div><div class="line"><a name="l00230"></a><span class="lineno">  230</span>&#160;    result = <a class="code" href="include_2armnn_test_utils_2_tensor_helpers_8hpp.xhtml#a5fea88a1c3398e303fb83b6db155ff2d">CompareTensors</a>(actualDetectionClassesOutput,</div><div class="line"><a name="l00231"></a><span class="lineno">  231</span>&#160;                            expectedDetectionClasses,</div><div class="line"><a name="l00232"></a><span class="lineno">  232</span>&#160;                            classesHandle-&gt;GetShape(),</div><div class="line"><a name="l00233"></a><span class="lineno">  233</span>&#160;                            detectionClassesInfo.GetShape());</div><div class="line"><a name="l00234"></a><span class="lineno">  234</span>&#160;    CHECK_MESSAGE(result.m_Result, result.m_Message.str());</div><div class="line"><a name="l00235"></a><span class="lineno">  235</span>&#160;</div><div class="line"><a name="l00236"></a><span class="lineno">  236</span>&#160;    result = <a class="code" href="include_2armnn_test_utils_2_tensor_helpers_8hpp.xhtml#a5fea88a1c3398e303fb83b6db155ff2d">CompareTensors</a>(actualDetectionScoresOutput,</div><div class="line"><a name="l00237"></a><span class="lineno">  237</span>&#160;                            expectedDetectionScores,</div><div class="line"><a name="l00238"></a><span class="lineno">  238</span>&#160;                            outputScoresHandle-&gt;GetShape(),</div><div class="line"><a name="l00239"></a><span class="lineno">  239</span>&#160;                            detectionScoresInfo.GetShape());</div><div class="line"><a name="l00240"></a><span class="lineno">  240</span>&#160;    CHECK_MESSAGE(result.m_Result, result.m_Message.str());</div><div class="line"><a name="l00241"></a><span class="lineno">  241</span>&#160;</div><div class="line"><a name="l00242"></a><span class="lineno">  242</span>&#160;    result = <a class="code" href="include_2armnn_test_utils_2_tensor_helpers_8hpp.xhtml#a5fea88a1c3398e303fb83b6db155ff2d">CompareTensors</a>(actualNumDetectionOutput,</div><div class="line"><a name="l00243"></a><span class="lineno">  243</span>&#160;                            expectedNumDetections,</div><div class="line"><a name="l00244"></a><span class="lineno">  244</span>&#160;                            numDetectionHandle-&gt;GetShape(),</div><div class="line"><a name="l00245"></a><span class="lineno">  245</span>&#160;                            numDetectionInfo.GetShape());</div><div class="line"><a name="l00246"></a><span class="lineno">  246</span>&#160;    CHECK_MESSAGE(result.m_Result, result.m_Message.str());</div><div class="line"><a name="l00247"></a><span class="lineno">  247</span>&#160;}</div><div class="ttc" id="structarmnn_1_1_detection_post_process_queue_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_detection_post_process_queue_descriptor.xhtml">armnn::DetectionPostProcessQueueDescriptor</a></div><div class="ttdef"><b>Definition:</b> <a href="include_2armnn_2backends_2_workload_data_8hpp_source.xhtml#l00261">WorkloadData.hpp:261</a></div></div>
<div class="ttc" id="classarmnn_1_1_profiler_manager_xhtml_a93857080c2523bf3395e7aa7e6024d5c"><div class="ttname"><a href="classarmnn_1_1_profiler_manager.xhtml#a93857080c2523bf3395e7aa7e6024d5c">armnn::ProfilerManager::GetInstance</a></div><div class="ttdeci">static ProfilerManager &amp; GetInstance()</div><div class="ttdef"><b>Definition:</b> <a href="_profiling_8cpp_source.xhtml#l00572">Profiling.cpp:572</a></div></div>
<div class="ttc" id="classarmnn_1_1_tensor_info_xhtml"><div class="ttname"><a href="classarmnn_1_1_tensor_info.xhtml">armnn::TensorInfo</a></div><div class="ttdef"><b>Definition:</b> <a href="_tensor_8hpp_source.xhtml#l00152">Tensor.hpp:152</a></div></div>
<div class="ttc" id="structarmnn_1_1_queue_descriptor_with_parameters_xhtml_aad91b9bbf7aa365d304febe79a3d1333"><div class="ttname"><a href="structarmnn_1_1_queue_descriptor_with_parameters.xhtml#aad91b9bbf7aa365d304febe79a3d1333">armnn::QueueDescriptorWithParameters::m_Parameters</a></div><div class="ttdeci">LayerDescriptor m_Parameters</div><div class="ttdef"><b>Definition:</b> <a href="include_2armnn_2backends_2_workload_data_8hpp_source.xhtml#l00066">WorkloadData.hpp:66</a></div></div>
<div class="ttc" id="include_2armnn_test_utils_2_tensor_copy_utils_8hpp_xhtml_afaaca8c3f3a467d124bba44067d2afa8"><div class="ttname"><a href="include_2armnn_test_utils_2_tensor_copy_utils_8hpp.xhtml#afaaca8c3f3a467d124bba44067d2afa8">AllocateAndCopyDataToITensorHandle</a></div><div class="ttdeci">void AllocateAndCopyDataToITensorHandle(armnn::ITensorHandle *tensorHandle, const void *memory)</div><div class="ttdef"><b>Definition:</b> <a href="_tensor_copy_utils_8cpp_source.xhtml#l00019">TensorCopyUtils.cpp:19</a></div></div>
<div class="ttc" id="namespacearmnn_xhtml_a56943a0946e5f15e5e58054b8e7a04a4a1db19222ac424bd7162142ddf929fd2a"><div class="ttname"><a href="namespacearmnn.xhtml#a56943a0946e5f15e5e58054b8e7a04a4a1db19222ac424bd7162142ddf929fd2a">armnn::LayerType::DetectionPostProcess</a></div></div>
<div class="ttc" id="classarmnn_1_1_scoped_tensor_handle_xhtml"><div class="ttname"><a href="classarmnn_1_1_scoped_tensor_handle.xhtml">armnn::ScopedTensorHandle</a></div><div class="ttdef"><b>Definition:</b> <a href="include_2armnn_2backends_2_tensor_handle_8hpp_source.xhtml#l00115">TensorHandle.hpp:115</a></div></div>
<div class="ttc" id="include_2armnn_test_utils_2_tensor_copy_utils_8hpp_xhtml_ab5dfed8358e500ed523d78090ec78e88"><div class="ttname"><a href="include_2armnn_test_utils_2_tensor_copy_utils_8hpp.xhtml#ab5dfed8358e500ed523d78090ec78e88">CopyDataFromITensorHandle</a></div><div class="ttdeci">void CopyDataFromITensorHandle(void *mem, const armnn::ITensorHandle *tensorHandle)</div><div class="ttdef"><b>Definition:</b> <a href="_tensor_copy_utils_8cpp_source.xhtml#l00014">TensorCopyUtils.cpp:14</a></div></div>
<div class="ttc" id="structarmnn_1_1_detection_post_process_descriptor_xhtml_a7ed9bc7c26df67d274d5dd4cd83adf0f"><div class="ttname"><a href="structarmnn_1_1_detection_post_process_descriptor.xhtml#a7ed9bc7c26df67d274d5dd4cd83adf0f">armnn::DetectionPostProcessDescriptor::m_UseRegularNms</a></div><div class="ttdeci">bool m_UseRegularNms</div><div class="ttdoc">Use Regular NMS. </div><div class="ttdef"><b>Definition:</b> <a href="_descriptors_8hpp_source.xhtml#l00722">Descriptors.hpp:722</a></div></div>
<div class="ttc" id="include_2armnn_test_utils_2_tensor_helpers_8hpp_xhtml_a5fea88a1c3398e303fb83b6db155ff2d"><div class="ttname"><a href="include_2armnn_test_utils_2_tensor_helpers_8hpp.xhtml#a5fea88a1c3398e303fb83b6db155ff2d">CompareTensors</a></div><div class="ttdeci">armnn::PredicateResult CompareTensors(const std::vector&lt; T &gt; &amp;actualData, const std::vector&lt; T &gt; &amp;expectedData, const armnn::TensorShape &amp;actualShape, const armnn::TensorShape &amp;expectedShape, bool compareBoolean=false, bool isDynamic=false)</div><div class="ttdef"><b>Definition:</b> <a href="include_2armnn_test_utils_2_tensor_helpers_8hpp_source.xhtml#l00073">TensorHelpers.hpp:73</a></div></div>
<div class="ttc" id="classarmnn_1_1_profiler_manager_xhtml_a7b1e3e5bf386004541be2b5b22443208"><div class="ttname"><a href="classarmnn_1_1_profiler_manager.xhtml#a7b1e3e5bf386004541be2b5b22443208">armnn::ProfilerManager::RegisterProfiler</a></div><div class="ttdeci">void RegisterProfiler(IProfiler *profiler)</div><div class="ttdef"><b>Definition:</b> <a href="_profiling_8cpp_source.xhtml#l00579">Profiling.cpp:579</a></div></div>
<div class="ttc" id="namespacearmnn_xhtml_a4dc0adc6737b5944e7671bee71788407acaf9b6b99962bf5c2264824231d7a40c"><div class="ttname"><a href="namespacearmnn.xhtml#a4dc0adc6737b5944e7671bee71788407acaf9b6b99962bf5c2264824231d7a40c">armnn::BoostLogSeverityMapping::info</a></div></div>
<div class="ttc" id="include_2armnn_test_utils_2_tensor_copy_utils_8hpp_xhtml_ae15f1a3c55d2db87683577de9fa4437c"><div class="ttname"><a href="include_2armnn_test_utils_2_tensor_copy_utils_8hpp.xhtml#ae15f1a3c55d2db87683577de9fa4437c">CopyDataToITensorHandle</a></div><div class="ttdeci">void CopyDataToITensorHandle(armnn::ITensorHandle *tensorHandle, const void *memory)</div><div class="ttdef"><b>Definition:</b> <a href="_tensor_copy_utils_8cpp_source.xhtml#l00009">TensorCopyUtils.cpp:9</a></div></div>
<div class="ttc" id="namespacearmnn_xhtml_ad8ed01ff3ff33333d8e19db4d2818bb6a166495adc0d0f53bee6baecc577f5204"><div class="ttname"><a href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a166495adc0d0f53bee6baecc577f5204">armnn::DataType::Float32</a></div></div>
<div class="ttc" id="structarmnn_1_1_workload_info_xhtml"><div class="ttname"><a href="structarmnn_1_1_workload_info.xhtml">armnn::WorkloadInfo</a></div><div class="ttdoc">Contains information about TensorInfos of a layer. </div><div class="ttdef"><b>Definition:</b> <a href="include_2armnn_2backends_2_workload_info_8hpp_source.xhtml#l00016">WorkloadInfo.hpp:16</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="a41f47226e626cee4e116cddb477aaffa"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a41f47226e626cee4e116cddb477aaffa">&#9670;&nbsp;</a></span>DetectionPostProcessRegularNmsFloatTest()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void DetectionPostProcessRegularNmsFloatTest </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_detection_post_process_test_impl_8hpp_source.xhtml#l00260">260</a> of file <a class="el" href="_detection_post_process_test_impl_8hpp_source.xhtml">DetectionPostProcessTestImpl.hpp</a>.</p>

<p class="reference">References <a class="el" href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a166495adc0d0f53bee6baecc577f5204">armnn::Float32</a>.</p>
<div class="fragment"><div class="line"><a name="l00261"></a><span class="lineno">  261</span>&#160;{</div><div class="line"><a name="l00262"></a><span class="lineno">  262</span>&#160;    <span class="keywordflow">return</span> DetectionPostProcessImpl&lt;FactoryType, armnn::DataType::Float32&gt;(</div><div class="line"><a name="l00263"></a><span class="lineno">  263</span>&#160;        <a class="code" href="classarmnn_1_1_tensor_info.xhtml">armnn::TensorInfo</a>(TestData::s_BoxEncodingsShape, <a class="code" href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a166495adc0d0f53bee6baecc577f5204">armnn::DataType::Float32</a>),</div><div class="line"><a name="l00264"></a><span class="lineno">  264</span>&#160;        <a class="code" href="classarmnn_1_1_tensor_info.xhtml">armnn::TensorInfo</a>(TestData::s_ScoresShape, <a class="code" href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a166495adc0d0f53bee6baecc577f5204">armnn::DataType::Float32</a>),</div><div class="line"><a name="l00265"></a><span class="lineno">  265</span>&#160;        <a class="code" href="classarmnn_1_1_tensor_info.xhtml">armnn::TensorInfo</a>(TestData::s_AnchorsShape, <a class="code" href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a166495adc0d0f53bee6baecc577f5204">armnn::DataType::Float32</a>),</div><div class="line"><a name="l00266"></a><span class="lineno">  266</span>&#160;        TestData::s_BoxEncodings,</div><div class="line"><a name="l00267"></a><span class="lineno">  267</span>&#160;        TestData::s_Scores,</div><div class="line"><a name="l00268"></a><span class="lineno">  268</span>&#160;        TestData::s_Anchors,</div><div class="line"><a name="l00269"></a><span class="lineno">  269</span>&#160;        RegularNmsExpectedResults::s_DetectionBoxes,</div><div class="line"><a name="l00270"></a><span class="lineno">  270</span>&#160;        RegularNmsExpectedResults::s_DetectionClasses,</div><div class="line"><a name="l00271"></a><span class="lineno">  271</span>&#160;        RegularNmsExpectedResults::s_DetectionScores,</div><div class="line"><a name="l00272"></a><span class="lineno">  272</span>&#160;        RegularNmsExpectedResults::s_NumDetections,</div><div class="line"><a name="l00273"></a><span class="lineno">  273</span>&#160;        <span class="keyword">true</span>);</div><div class="line"><a name="l00274"></a><span class="lineno">  274</span>&#160;}</div><div class="ttc" id="classarmnn_1_1_tensor_info_xhtml"><div class="ttname"><a href="classarmnn_1_1_tensor_info.xhtml">armnn::TensorInfo</a></div><div class="ttdef"><b>Definition:</b> <a href="_tensor_8hpp_source.xhtml#l00152">Tensor.hpp:152</a></div></div>
<div class="ttc" id="namespacearmnn_xhtml_ad8ed01ff3ff33333d8e19db4d2818bb6a166495adc0d0f53bee6baecc577f5204"><div class="ttname"><a href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a166495adc0d0f53bee6baecc577f5204">armnn::DataType::Float32</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="a529a27be5db241fb01a7ee08286d2e0a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a529a27be5db241fb01a7ee08286d2e0a">&#9670;&nbsp;</a></span>DetectionPostProcessRegularNmsQuantizedTest()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void DetectionPostProcessRegularNmsQuantizedTest </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_detection_post_process_test_impl_8hpp_source.xhtml#l00279">279</a> of file <a class="el" href="_detection_post_process_test_impl_8hpp_source.xhtml">DetectionPostProcessTestImpl.hpp</a>.</p>

<p class="reference">References <a class="el" href="_tensor_8cpp_source.xhtml#l00489">TensorInfo::SetQuantizationOffset()</a>, and <a class="el" href="_tensor_8cpp_source.xhtml#l00473">TensorInfo::SetQuantizationScale()</a>.</p>
<div class="fragment"><div class="line"><a name="l00280"></a><span class="lineno">  280</span>&#160;{</div><div class="line"><a name="l00281"></a><span class="lineno">  281</span>&#160;    <a class="code" href="classarmnn_1_1_tensor_info.xhtml">armnn::TensorInfo</a> boxEncodingsInfo(TestData::s_BoxEncodingsShape, QuantizedType);</div><div class="line"><a name="l00282"></a><span class="lineno">  282</span>&#160;    <a class="code" href="classarmnn_1_1_tensor_info.xhtml">armnn::TensorInfo</a> scoresInfo(TestData::s_ScoresShape, QuantizedType);</div><div class="line"><a name="l00283"></a><span class="lineno">  283</span>&#160;    <a class="code" href="classarmnn_1_1_tensor_info.xhtml">armnn::TensorInfo</a> anchorsInfo(TestData::s_AnchorsShape, QuantizedType);</div><div class="line"><a name="l00284"></a><span class="lineno">  284</span>&#160;</div><div class="line"><a name="l00285"></a><span class="lineno">  285</span>&#160;    boxEncodingsInfo.SetQuantizationScale(TestData::s_BoxEncodingsQuantData.first);</div><div class="line"><a name="l00286"></a><span class="lineno">  286</span>&#160;    boxEncodingsInfo.SetQuantizationOffset(TestData::s_BoxEncodingsQuantData.second);</div><div class="line"><a name="l00287"></a><span class="lineno">  287</span>&#160;</div><div class="line"><a name="l00288"></a><span class="lineno">  288</span>&#160;    scoresInfo.SetQuantizationScale(TestData::s_ScoresQuantData.first);</div><div class="line"><a name="l00289"></a><span class="lineno">  289</span>&#160;    scoresInfo.SetQuantizationOffset(TestData::s_ScoresQuantData.second);</div><div class="line"><a name="l00290"></a><span class="lineno">  290</span>&#160;</div><div class="line"><a name="l00291"></a><span class="lineno">  291</span>&#160;    anchorsInfo.SetQuantizationScale(TestData::s_AnchorsQuantData.first);</div><div class="line"><a name="l00292"></a><span class="lineno">  292</span>&#160;    anchorsInfo.SetQuantizationOffset(TestData::s_BoxEncodingsQuantData.second);</div><div class="line"><a name="l00293"></a><span class="lineno">  293</span>&#160;</div><div class="line"><a name="l00294"></a><span class="lineno">  294</span>&#160;    std::vector&lt;RawType&gt; boxEncodingsData(TestData::s_BoxEncodingsShape.GetNumElements());</div><div class="line"><a name="l00295"></a><span class="lineno">  295</span>&#160;    QuantizeData&lt;QuantizedType&gt;(boxEncodingsData.data(),</div><div class="line"><a name="l00296"></a><span class="lineno">  296</span>&#160;                                TestData::s_BoxEncodings.data(),</div><div class="line"><a name="l00297"></a><span class="lineno">  297</span>&#160;                                boxEncodingsInfo);</div><div class="line"><a name="l00298"></a><span class="lineno">  298</span>&#160;</div><div class="line"><a name="l00299"></a><span class="lineno">  299</span>&#160;    std::vector&lt;RawType&gt; scoresData(TestData::s_ScoresShape.GetNumElements());</div><div class="line"><a name="l00300"></a><span class="lineno">  300</span>&#160;    QuantizeData&lt;QuantizedType&gt;(scoresData.data(),</div><div class="line"><a name="l00301"></a><span class="lineno">  301</span>&#160;                                TestData::s_Scores.data(),</div><div class="line"><a name="l00302"></a><span class="lineno">  302</span>&#160;                                scoresInfo);</div><div class="line"><a name="l00303"></a><span class="lineno">  303</span>&#160;</div><div class="line"><a name="l00304"></a><span class="lineno">  304</span>&#160;    std::vector&lt;RawType&gt; anchorsData(TestData::s_AnchorsShape.GetNumElements());</div><div class="line"><a name="l00305"></a><span class="lineno">  305</span>&#160;    QuantizeData&lt;QuantizedType&gt;(anchorsData.data(),</div><div class="line"><a name="l00306"></a><span class="lineno">  306</span>&#160;                                TestData::s_Anchors.data(),</div><div class="line"><a name="l00307"></a><span class="lineno">  307</span>&#160;                                anchorsInfo);</div><div class="line"><a name="l00308"></a><span class="lineno">  308</span>&#160;</div><div class="line"><a name="l00309"></a><span class="lineno">  309</span>&#160;    <span class="keywordflow">return</span> DetectionPostProcessImpl&lt;FactoryType, QuantizedType&gt;(</div><div class="line"><a name="l00310"></a><span class="lineno">  310</span>&#160;        boxEncodingsInfo,</div><div class="line"><a name="l00311"></a><span class="lineno">  311</span>&#160;        scoresInfo,</div><div class="line"><a name="l00312"></a><span class="lineno">  312</span>&#160;        anchorsInfo,</div><div class="line"><a name="l00313"></a><span class="lineno">  313</span>&#160;        boxEncodingsData,</div><div class="line"><a name="l00314"></a><span class="lineno">  314</span>&#160;        scoresData,</div><div class="line"><a name="l00315"></a><span class="lineno">  315</span>&#160;        anchorsData,</div><div class="line"><a name="l00316"></a><span class="lineno">  316</span>&#160;        RegularNmsExpectedResults::s_DetectionBoxes,</div><div class="line"><a name="l00317"></a><span class="lineno">  317</span>&#160;        RegularNmsExpectedResults::s_DetectionClasses,</div><div class="line"><a name="l00318"></a><span class="lineno">  318</span>&#160;        RegularNmsExpectedResults::s_DetectionScores,</div><div class="line"><a name="l00319"></a><span class="lineno">  319</span>&#160;        RegularNmsExpectedResults::s_NumDetections,</div><div class="line"><a name="l00320"></a><span class="lineno">  320</span>&#160;        <span class="keyword">true</span>);</div><div class="line"><a name="l00321"></a><span class="lineno">  321</span>&#160;}</div><div class="ttc" id="classarmnn_1_1_tensor_info_xhtml"><div class="ttname"><a href="classarmnn_1_1_tensor_info.xhtml">armnn::TensorInfo</a></div><div class="ttdef"><b>Definition:</b> <a href="_tensor_8hpp_source.xhtml#l00152">Tensor.hpp:152</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="ae7a0cad618fa649079d11502ecdd7691"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ae7a0cad618fa649079d11502ecdd7691">&#9670;&nbsp;</a></span>QuantizeData()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void QuantizeData </td>
          <td>(</td>
          <td class="paramtype">RawType *&#160;</td>
          <td class="paramname"><em>quant</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const float *&#160;</td>
          <td class="paramname"><em>dequant</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">armnn::TensorInfo</a> &amp;&#160;</td>
          <td class="paramname"><em>info</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_detection_post_process_test_impl_8hpp_source.xhtml#l00250">250</a> of file <a class="el" href="_detection_post_process_test_impl_8hpp_source.xhtml">DetectionPostProcessTestImpl.hpp</a>.</p>

<p class="reference">References <a class="el" href="_tensor_8hpp_source.xhtml#l00196">TensorInfo::GetNumElements()</a>, <a class="el" href="_tensor_8cpp_source.xhtml#l00478">TensorInfo::GetQuantizationOffset()</a>, and <a class="el" href="_tensor_8cpp_source.xhtml#l00461">TensorInfo::GetQuantizationScale()</a>.</p>

<p class="reference">Referenced by <a class="el" href="_neon_end_to_end_tests_8cpp_source.xhtml#l00027">TEST_SUITE()</a>.</p>
<div class="fragment"><div class="line"><a name="l00251"></a><span class="lineno">  251</span>&#160;{</div><div class="line"><a name="l00252"></a><span class="lineno">  252</span>&#160;    <span class="keywordflow">for</span> (<span class="keywordtype">size_t</span> i = 0; i &lt; info.<a class="code" href="classarmnn_1_1_tensor_info.xhtml#a8846406ac37fbd2204f0be16ee05d5b7">GetNumElements</a>(); i++)</div><div class="line"><a name="l00253"></a><span class="lineno">  253</span>&#160;    {</div><div class="line"><a name="l00254"></a><span class="lineno">  254</span>&#160;        quant[i] = armnn::Quantize&lt;RawType&gt;(</div><div class="line"><a name="l00255"></a><span class="lineno">  255</span>&#160;            dequant[i], info.<a class="code" href="classarmnn_1_1_tensor_info.xhtml#a047ca888c43bd7fb5702853bf72410d0">GetQuantizationScale</a>(), info.<a class="code" href="classarmnn_1_1_tensor_info.xhtml#a770b51078da02f44a819e9f95d8058b5">GetQuantizationOffset</a>());</div><div class="line"><a name="l00256"></a><span class="lineno">  256</span>&#160;    }</div><div class="line"><a name="l00257"></a><span class="lineno">  257</span>&#160;}</div><div class="ttc" id="classarmnn_1_1_tensor_info_xhtml_a770b51078da02f44a819e9f95d8058b5"><div class="ttname"><a href="classarmnn_1_1_tensor_info.xhtml#a770b51078da02f44a819e9f95d8058b5">armnn::TensorInfo::GetQuantizationOffset</a></div><div class="ttdeci">int32_t GetQuantizationOffset() const</div><div class="ttdef"><b>Definition:</b> <a href="_tensor_8cpp_source.xhtml#l00478">Tensor.cpp:478</a></div></div>
<div class="ttc" id="classarmnn_1_1_tensor_info_xhtml_a047ca888c43bd7fb5702853bf72410d0"><div class="ttname"><a href="classarmnn_1_1_tensor_info.xhtml#a047ca888c43bd7fb5702853bf72410d0">armnn::TensorInfo::GetQuantizationScale</a></div><div class="ttdeci">float GetQuantizationScale() const</div><div class="ttdef"><b>Definition:</b> <a href="_tensor_8cpp_source.xhtml#l00461">Tensor.cpp:461</a></div></div>
<div class="ttc" id="classarmnn_1_1_tensor_info_xhtml_a8846406ac37fbd2204f0be16ee05d5b7"><div class="ttname"><a href="classarmnn_1_1_tensor_info.xhtml#a8846406ac37fbd2204f0be16ee05d5b7">armnn::TensorInfo::GetNumElements</a></div><div class="ttdeci">unsigned int GetNumElements() const</div><div class="ttdef"><b>Definition:</b> <a href="_tensor_8hpp_source.xhtml#l00196">Tensor.hpp:196</a></div></div>
</div><!-- fragment -->
</div>
</div>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="dir_68267d1309a1af8e8297ef4c3efbcdba.xhtml">src</a></li><li class="navelem"><a class="el" href="dir_0f3cdec46afbc61a1ded8e1687c9c9a0.xhtml">backends</a></li><li class="navelem"><a class="el" href="dir_797a213d7d01b98ef12d53b0820ea64e.xhtml">backendsCommon</a></li><li class="navelem"><a class="el" href="dir_28bfe507f7e135bdae07c2a6b7f66696.xhtml">test</a></li><li class="navelem"><a class="el" href="dir_99a30439342d160875b21dac3498ad7f.xhtml">layerTests</a></li><li class="navelem"><a class="el" href="_detection_post_process_test_impl_8hpp.xhtml">DetectionPostProcessTestImpl.hpp</a></li>
    <li class="footer">Generated on Tue May 24 2022 11:27:17 for ArmNN by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.13 </li>
  </ul>
</div>
</body>
</html>
