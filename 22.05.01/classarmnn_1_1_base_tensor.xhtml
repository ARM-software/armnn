<!-- Copyright (c) 2020 ARM Limited. -->
<!--                                 -->
<!-- SPDX-License-Identifier: MIT    -->
<!--                                 -->
<!-- HTML header for doxygen 1.8.13-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.13"/>
<meta name="robots" content="NOINDEX, NOFOLLOW" />
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>ArmNN: BaseTensor&lt; MemoryType &gt; Class Template Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script><script type="text/javascript" src="http://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="stylesheet.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <img alt="ArmNN" src="Arm_NN_horizontal_blue.png" style="max-width: 10rem; margin-top: .5rem; margin-left 10px"/>
  <td style="padding-left: 0.5em;">
   <div id="projectname">
   &#160;<span id="projectnumber">22.05.01</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.13 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
$(document).ready(function(){initNavTree('classarmnn_1_1_base_tensor.xhtml','');});
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="summary">
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="#pro-methods">Protected Member Functions</a> &#124;
<a href="#pro-attribs">Protected Attributes</a> &#124;
<a href="classarmnn_1_1_base_tensor-members.xhtml">List of all members</a>  </div>
  <div class="headertitle">
<div class="title">BaseTensor&lt; MemoryType &gt; Class Template Reference</div>  </div>
</div><!--header-->
<div class="contents">

<p><code>#include &lt;<a class="el" href="_tensor_8hpp_source.xhtml">Tensor.hpp</a>&gt;</code></p>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:aca0044508ebeb3b236a777db828910ed"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_base_tensor.xhtml#aca0044508ebeb3b236a777db828910ed">BaseTensor</a> ()</td></tr>
<tr class="memdesc:aca0044508ebeb3b236a777db828910ed"><td class="mdescLeft">&#160;</td><td class="mdescRight">Empty (invalid) constructor.  <a href="#aca0044508ebeb3b236a777db828910ed">More...</a><br /></td></tr>
<tr class="separator:aca0044508ebeb3b236a777db828910ed"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa84008eafa57252bcb4cc4b2d779a6f4"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_base_tensor.xhtml#aa84008eafa57252bcb4cc4b2d779a6f4">BaseTensor</a> (const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;<a class="el" href="namespacearmnn.xhtml#a4dc0adc6737b5944e7671bee71788407acaf9b6b99962bf5c2264824231d7a40c">info</a>, MemoryType memoryArea)</td></tr>
<tr class="memdesc:aa84008eafa57252bcb4cc4b2d779a6f4"><td class="mdescLeft">&#160;</td><td class="mdescRight">Constructor from a raw memory pointer.  <a href="#aa84008eafa57252bcb4cc4b2d779a6f4">More...</a><br /></td></tr>
<tr class="separator:aa84008eafa57252bcb4cc4b2d779a6f4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:afb147b6b672ce7ed642e1d12727e749f"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_base_tensor.xhtml#afb147b6b672ce7ed642e1d12727e749f">BaseTensor</a> (const <a class="el" href="classarmnn_1_1_base_tensor.xhtml">BaseTensor</a> &amp;other)</td></tr>
<tr class="memdesc:afb147b6b672ce7ed642e1d12727e749f"><td class="mdescLeft">&#160;</td><td class="mdescRight">Tensors are copyable.  <a href="#afb147b6b672ce7ed642e1d12727e749f">More...</a><br /></td></tr>
<tr class="separator:afb147b6b672ce7ed642e1d12727e749f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a844fc6ba8f5435b5a200072a3ec163af"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classarmnn_1_1_base_tensor.xhtml">BaseTensor</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_base_tensor.xhtml#a844fc6ba8f5435b5a200072a3ec163af">operator=</a> (const <a class="el" href="classarmnn_1_1_base_tensor.xhtml">BaseTensor</a> &amp;)</td></tr>
<tr class="memdesc:a844fc6ba8f5435b5a200072a3ec163af"><td class="mdescLeft">&#160;</td><td class="mdescRight">Tensors are copyable.  <a href="#a844fc6ba8f5435b5a200072a3ec163af">More...</a><br /></td></tr>
<tr class="separator:a844fc6ba8f5435b5a200072a3ec163af"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8aeddebdcf02e1832b22203c08a6b678"><td class="memItemLeft" align="right" valign="top">const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_base_tensor.xhtml#a8aeddebdcf02e1832b22203c08a6b678">GetInfo</a> () const</td></tr>
<tr class="separator:a8aeddebdcf02e1832b22203c08a6b678"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab2e02564acd2ce6db36de310702a75de"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_base_tensor.xhtml#ab2e02564acd2ce6db36de310702a75de">GetInfo</a> ()</td></tr>
<tr class="separator:ab2e02564acd2ce6db36de310702a75de"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8b5d0f8a24e9d9238f412260a552acf8"><td class="memItemLeft" align="right" valign="top">const <a class="el" href="classarmnn_1_1_tensor_shape.xhtml">TensorShape</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_base_tensor.xhtml#a8b5d0f8a24e9d9238f412260a552acf8">GetShape</a> () const</td></tr>
<tr class="separator:a8b5d0f8a24e9d9238f412260a552acf8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a350bcc7d86f7d9333340a0a04be078f6"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classarmnn_1_1_tensor_shape.xhtml">TensorShape</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_base_tensor.xhtml#a350bcc7d86f7d9333340a0a04be078f6">GetShape</a> ()</td></tr>
<tr class="separator:a350bcc7d86f7d9333340a0a04be078f6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aea909c7327109228ef618d459015def3"><td class="memItemLeft" align="right" valign="top"><a class="el" href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6">DataType</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_base_tensor.xhtml#aea909c7327109228ef618d459015def3">GetDataType</a> () const</td></tr>
<tr class="separator:aea909c7327109228ef618d459015def3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a157e27d41e9f6b21f0d3c025fa47dc24"><td class="memItemLeft" align="right" valign="top">unsigned int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_base_tensor.xhtml#a157e27d41e9f6b21f0d3c025fa47dc24">GetNumDimensions</a> () const</td></tr>
<tr class="separator:a157e27d41e9f6b21f0d3c025fa47dc24"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:abcbdfb544ece4c31d0b37715ad0f3be0"><td class="memItemLeft" align="right" valign="top">unsigned int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_base_tensor.xhtml#abcbdfb544ece4c31d0b37715ad0f3be0">GetNumBytes</a> () const</td></tr>
<tr class="separator:abcbdfb544ece4c31d0b37715ad0f3be0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8846406ac37fbd2204f0be16ee05d5b7"><td class="memItemLeft" align="right" valign="top">unsigned int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_base_tensor.xhtml#a8846406ac37fbd2204f0be16ee05d5b7">GetNumElements</a> () const</td></tr>
<tr class="separator:a8846406ac37fbd2204f0be16ee05d5b7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa81f67ac64f0c249e26499600c45d996"><td class="memItemLeft" align="right" valign="top">MemoryType&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_base_tensor.xhtml#aa81f67ac64f0c249e26499600c45d996">GetMemoryArea</a> () const</td></tr>
<tr class="separator:aa81f67ac64f0c249e26499600c45d996"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pro-methods"></a>
Protected Member Functions</h2></td></tr>
<tr class="memitem:abac025efeffc6e099a365bdb17b5ca3e"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_base_tensor.xhtml#abac025efeffc6e099a365bdb17b5ca3e">~BaseTensor</a> ()</td></tr>
<tr class="memdesc:abac025efeffc6e099a365bdb17b5ca3e"><td class="mdescLeft">&#160;</td><td class="mdescRight">Protected destructor to stop users from making these (could still new one on the heap and then leak it...)  <a href="#abac025efeffc6e099a365bdb17b5ca3e">More...</a><br /></td></tr>
<tr class="separator:abac025efeffc6e099a365bdb17b5ca3e"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pro-attribs"></a>
Protected Attributes</h2></td></tr>
<tr class="memitem:aba26e5decca8be8786d8a5faf2e06a49"><td class="memItemLeft" align="right" valign="top">MemoryType&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_base_tensor.xhtml#aba26e5decca8be8786d8a5faf2e06a49">m_MemoryArea</a></td></tr>
<tr class="separator:aba26e5decca8be8786d8a5faf2e06a49"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><h3>template&lt;typename MemoryType&gt;<br />
class armnn::BaseTensor&lt; MemoryType &gt;</h3>


<p class="definition">Definition at line <a class="el" href="_tensor_8hpp_source.xhtml#l00277">277</a> of file <a class="el" href="_tensor_8hpp_source.xhtml">Tensor.hpp</a>.</p>
</div><h2 class="groupheader">Constructor &amp; Destructor Documentation</h2>
<a id="aca0044508ebeb3b236a777db828910ed"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aca0044508ebeb3b236a777db828910ed">&#9670;&nbsp;</a></span>BaseTensor() <span class="overload">[1/3]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarmnn_1_1_base_tensor.xhtml">BaseTensor</a> </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Empty (invalid) constructor. </p>

<p class="definition">Definition at line <a class="el" href="_tensor_8cpp_source.xhtml#l00524">524</a> of file <a class="el" href="_tensor_8cpp_source.xhtml">Tensor.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00525"></a><span class="lineno">  525</span>&#160; : <a class="code" href="classarmnn_1_1_base_tensor.xhtml#aba26e5decca8be8786d8a5faf2e06a49">m_MemoryArea</a>(<span class="keyword">nullptr</span>)</div><div class="line"><a name="l00526"></a><span class="lineno">  526</span>&#160;{</div><div class="line"><a name="l00527"></a><span class="lineno">  527</span>&#160;}</div><div class="ttc" id="classarmnn_1_1_base_tensor_xhtml_aba26e5decca8be8786d8a5faf2e06a49"><div class="ttname"><a href="classarmnn_1_1_base_tensor.xhtml#aba26e5decca8be8786d8a5faf2e06a49">armnn::BaseTensor::m_MemoryArea</a></div><div class="ttdeci">MemoryType m_MemoryArea</div><div class="ttdef"><b>Definition:</b> <a href="_tensor_8hpp_source.xhtml#l00312">Tensor.hpp:312</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="aa84008eafa57252bcb4cc4b2d779a6f4"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aa84008eafa57252bcb4cc4b2d779a6f4">&#9670;&nbsp;</a></span>BaseTensor() <span class="overload">[2/3]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarmnn_1_1_base_tensor.xhtml">BaseTensor</a> </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;&#160;</td>
          <td class="paramname"><em>info</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">MemoryType&#160;</td>
          <td class="paramname"><em>memoryArea</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Constructor from a raw memory pointer. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">memoryArea</td><td>- Region of CPU-addressable memory where tensor data will be stored. Must be valid while workloads are on the fly. <a class="el" href="classarmnn_1_1_tensor.xhtml" title="A tensor defined by a TensorInfo (shape and data type) and a mutable backing store. ">Tensor</a> instances do not claim ownership of referenced memory regions, that is, no attempt will be made by ArmNN to free these memory regions automatically. </td></tr>
  </table>
  </dd>
</dl>

<p class="definition">Definition at line <a class="el" href="_tensor_8cpp_source.xhtml#l00530">530</a> of file <a class="el" href="_tensor_8cpp_source.xhtml">Tensor.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00531"></a><span class="lineno">  531</span>&#160; : <a class="code" href="classarmnn_1_1_base_tensor.xhtml#aba26e5decca8be8786d8a5faf2e06a49">m_MemoryArea</a>(memoryArea)</div><div class="line"><a name="l00532"></a><span class="lineno">  532</span>&#160; , m_Info(<a class="code" href="namespacearmnn.xhtml#a4dc0adc6737b5944e7671bee71788407acaf9b6b99962bf5c2264824231d7a40c">info</a>)</div><div class="line"><a name="l00533"></a><span class="lineno">  533</span>&#160;{</div><div class="line"><a name="l00534"></a><span class="lineno">  534</span>&#160;}</div><div class="ttc" id="classarmnn_1_1_base_tensor_xhtml_aba26e5decca8be8786d8a5faf2e06a49"><div class="ttname"><a href="classarmnn_1_1_base_tensor.xhtml#aba26e5decca8be8786d8a5faf2e06a49">armnn::BaseTensor::m_MemoryArea</a></div><div class="ttdeci">MemoryType m_MemoryArea</div><div class="ttdef"><b>Definition:</b> <a href="_tensor_8hpp_source.xhtml#l00312">Tensor.hpp:312</a></div></div>
<div class="ttc" id="namespacearmnn_xhtml_a4dc0adc6737b5944e7671bee71788407acaf9b6b99962bf5c2264824231d7a40c"><div class="ttname"><a href="namespacearmnn.xhtml#a4dc0adc6737b5944e7671bee71788407acaf9b6b99962bf5c2264824231d7a40c">armnn::BoostLogSeverityMapping::info</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="afb147b6b672ce7ed642e1d12727e749f"></a>
<h2 class="memtitle"><span class="permalink"><a href="#afb147b6b672ce7ed642e1d12727e749f">&#9670;&nbsp;</a></span>BaseTensor() <span class="overload">[3/3]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarmnn_1_1_base_tensor.xhtml">BaseTensor</a> </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_base_tensor.xhtml">BaseTensor</a>&lt; MemoryType &gt; &amp;&#160;</td>
          <td class="paramname"><em>other</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Tensors are copyable. </p>

</div>
</div>
<a id="abac025efeffc6e099a365bdb17b5ca3e"></a>
<h2 class="memtitle"><span class="permalink"><a href="#abac025efeffc6e099a365bdb17b5ca3e">&#9670;&nbsp;</a></span>~BaseTensor()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">~<a class="el" href="classarmnn_1_1_base_tensor.xhtml">BaseTensor</a> </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Protected destructor to stop users from making these (could still new one on the heap and then leak it...) </p>

<p class="definition">Definition at line <a class="el" href="_tensor_8hpp_source.xhtml#l00310">310</a> of file <a class="el" href="_tensor_8hpp_source.xhtml">Tensor.hpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00310"></a><span class="lineno">  310</span>&#160;{}</div></div><!-- fragment -->
</div>
</div>
<h2 class="groupheader">Member Function Documentation</h2>
<a id="aea909c7327109228ef618d459015def3"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aea909c7327109228ef618d459015def3">&#9670;&nbsp;</a></span>GetDataType()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6">DataType</a> GetDataType </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_tensor_8hpp_source.xhtml#l00300">300</a> of file <a class="el" href="_tensor_8hpp_source.xhtml">Tensor.hpp</a>.</p>

<p class="reference">Referenced by <a class="el" href="_serializer_test_utils_8cpp_source.xhtml#l00122">CompareConstTensor()</a>, and <a class="el" href="_workload_utils_8cpp_source.xhtml#l00230">armnn::ConvertWeightTensorFromArmnnToAcl()</a>.</p>
<div class="fragment"><div class="line"><a name="l00300"></a><span class="lineno">  300</span>&#160;{ <span class="keywordflow">return</span> m_Info.<a class="code" href="classarmnn_1_1_tensor_info.xhtml#aea909c7327109228ef618d459015def3">GetDataType</a>(); }</div><div class="ttc" id="classarmnn_1_1_tensor_info_xhtml_aea909c7327109228ef618d459015def3"><div class="ttname"><a href="classarmnn_1_1_tensor_info.xhtml#aea909c7327109228ef618d459015def3">armnn::TensorInfo::GetDataType</a></div><div class="ttdeci">DataType GetDataType() const</div><div class="ttdef"><b>Definition:</b> <a href="_tensor_8hpp_source.xhtml#l00198">Tensor.hpp:198</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="a8aeddebdcf02e1832b22203c08a6b678"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a8aeddebdcf02e1832b22203c08a6b678">&#9670;&nbsp;</a></span>GetInfo() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a>&amp; GetInfo </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_tensor_8hpp_source.xhtml#l00295">295</a> of file <a class="el" href="_tensor_8hpp_source.xhtml">Tensor.hpp</a>.</p>

<p class="reference">Referenced by <a class="el" href="_tensor_8cpp_source.xhtml#l00530">BaseTensor&lt; const void *&gt;::BaseTensor()</a>, <a class="el" href="_test_layer_visitor_8cpp_source.xhtml#l00034">TestLayerVisitor::CheckConstTensors()</a>, <a class="el" href="_workload_utils_8cpp_source.xhtml#l00230">armnn::ConvertWeightTensorFromArmnnToAcl()</a>, <a class="el" href="_loaded_network_8cpp_source.xhtml#l01294">armnn::CopyToOutputTensor()</a>, <a class="el" href="_loaded_network_8cpp_source.xhtml#l01141">LoadedNetwork::FreeWorkingMemory()</a>, <a class="el" href="_serializer_8cpp_source.xhtml#l00086">armnnSerializer::GetFlatBufferArgMinMaxFunction()</a>, <a class="el" href="_deserializer_8cpp_source.xhtml#l00911">IDeserializer::DeserializerImpl::GetNetworkOutputBindingInfo()</a>, <a class="el" href="_deserializer_8cpp_source.xhtml#l01931">armnnDeserializer::GetOriginsDescriptor()</a>, <a class="el" href="_loaded_network_8cpp_source.xhtml#l01335">LoadedNetwork::ImportInputs()</a>, <a class="el" href="_tf_lite_parser_8cpp_source.xhtml#l02671">TfLiteParserImpl::OutputShapeOfReshape()</a>, <a class="el" href="_workload_utils_8cpp_source.xhtml#l00067">armnn::ReorderWeightChannelsForAcl()</a>, <a class="el" href="_fuse_batch_norm_8hpp_source.xhtml#l00027">FuseBatchNorm&lt; ConvLayer, ArmnnType, T &gt;::Run()</a>, <a class="el" href="_fold_pad_tests_8cpp_source.xhtml#l00013">TEST_SUITE()</a>, and <a class="el" href="_serializer_test_utils_8cpp_source.xhtml#l00078">LayerVerifierBase::VerifyConstTensors()</a>.</p>
<div class="fragment"><div class="line"><a name="l00295"></a><span class="lineno">  295</span>&#160;{ <span class="keywordflow">return</span> m_Info; }</div></div><!-- fragment -->
</div>
</div>
<a id="ab2e02564acd2ce6db36de310702a75de"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ab2e02564acd2ce6db36de310702a75de">&#9670;&nbsp;</a></span>GetInfo() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a>&amp; GetInfo </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_tensor_8hpp_source.xhtml#l00296">296</a> of file <a class="el" href="_tensor_8hpp_source.xhtml">Tensor.hpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00296"></a><span class="lineno">  296</span>&#160;{ <span class="keywordflow">return</span> m_Info; }</div></div><!-- fragment -->
</div>
</div>
<a id="aa81f67ac64f0c249e26499600c45d996"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aa81f67ac64f0c249e26499600c45d996">&#9670;&nbsp;</a></span>GetMemoryArea()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">MemoryType GetMemoryArea </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_tensor_8hpp_source.xhtml#l00305">305</a> of file <a class="el" href="_tensor_8hpp_source.xhtml">Tensor.hpp</a>.</p>

<p class="reference">Referenced by <a class="el" href="_test_layer_visitor_8cpp_source.xhtml#l00034">TestLayerVisitor::CheckConstTensors()</a>, <a class="el" href="_serializer_test_utils_8cpp_source.xhtml#l00122">CompareConstTensor()</a>, <a class="el" href="_loaded_network_8cpp_source.xhtml#l01294">armnn::CopyToOutputTensor()</a>, <a class="el" href="_loaded_network_8cpp_source.xhtml#l01141">LoadedNetwork::FreeWorkingMemory()</a>, <a class="el" href="_serializer_8cpp_source.xhtml#l00086">armnnSerializer::GetFlatBufferArgMinMaxFunction()</a>, <a class="el" href="_deserializer_8cpp_source.xhtml#l00911">IDeserializer::DeserializerImpl::GetNetworkOutputBindingInfo()</a>, <a class="el" href="_loaded_network_8cpp_source.xhtml#l01335">LoadedNetwork::ImportInputs()</a>, <a class="el" href="_loaded_network_8cpp_source.xhtml#l01468">LoadedNetwork::ImportOutputs()</a>, <a class="el" href="_tensor_handle_8cpp_source.xhtml#l00060">ScopedTensorHandle::ScopedTensorHandle()</a>, and <a class="el" href="_serializer_test_utils_8cpp_source.xhtml#l00078">LayerVerifierBase::VerifyConstTensors()</a>.</p>
<div class="fragment"><div class="line"><a name="l00305"></a><span class="lineno">  305</span>&#160;{ <span class="keywordflow">return</span> <a class="code" href="classarmnn_1_1_base_tensor.xhtml#aba26e5decca8be8786d8a5faf2e06a49">m_MemoryArea</a>; }</div><div class="ttc" id="classarmnn_1_1_base_tensor_xhtml_aba26e5decca8be8786d8a5faf2e06a49"><div class="ttname"><a href="classarmnn_1_1_base_tensor.xhtml#aba26e5decca8be8786d8a5faf2e06a49">armnn::BaseTensor::m_MemoryArea</a></div><div class="ttdeci">MemoryType m_MemoryArea</div><div class="ttdef"><b>Definition:</b> <a href="_tensor_8hpp_source.xhtml#l00312">Tensor.hpp:312</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="abcbdfb544ece4c31d0b37715ad0f3be0"></a>
<h2 class="memtitle"><span class="permalink"><a href="#abcbdfb544ece4c31d0b37715ad0f3be0">&#9670;&nbsp;</a></span>GetNumBytes()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">unsigned int GetNumBytes </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_tensor_8hpp_source.xhtml#l00302">302</a> of file <a class="el" href="_tensor_8hpp_source.xhtml">Tensor.hpp</a>.</p>

<p class="reference">Referenced by <a class="el" href="_test_layer_visitor_8cpp_source.xhtml#l00034">TestLayerVisitor::CheckConstTensors()</a>, <a class="el" href="_serializer_8cpp_source.xhtml#l00086">armnnSerializer::GetFlatBufferArgMinMaxFunction()</a>, <a class="el" href="_tensor_handle_8cpp_source.xhtml#l00060">ScopedTensorHandle::ScopedTensorHandle()</a>, and <a class="el" href="_serializer_test_utils_8cpp_source.xhtml#l00078">LayerVerifierBase::VerifyConstTensors()</a>.</p>
<div class="fragment"><div class="line"><a name="l00302"></a><span class="lineno">  302</span>&#160;{ <span class="keywordflow">return</span> m_Info.<a class="code" href="classarmnn_1_1_tensor_info.xhtml#abcbdfb544ece4c31d0b37715ad0f3be0">GetNumBytes</a>(); }</div><div class="ttc" id="classarmnn_1_1_tensor_info_xhtml_abcbdfb544ece4c31d0b37715ad0f3be0"><div class="ttname"><a href="classarmnn_1_1_tensor_info.xhtml#abcbdfb544ece4c31d0b37715ad0f3be0">armnn::TensorInfo::GetNumBytes</a></div><div class="ttdeci">unsigned int GetNumBytes() const</div><div class="ttdef"><b>Definition:</b> <a href="_tensor_8cpp_source.xhtml#l00427">Tensor.cpp:427</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="a157e27d41e9f6b21f0d3c025fa47dc24"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a157e27d41e9f6b21f0d3c025fa47dc24">&#9670;&nbsp;</a></span>GetNumDimensions()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">unsigned int GetNumDimensions </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_tensor_8hpp_source.xhtml#l00301">301</a> of file <a class="el" href="_tensor_8hpp_source.xhtml">Tensor.hpp</a>.</p>

<p class="reference">Referenced by <a class="el" href="_test_layer_visitor_8cpp_source.xhtml#l00034">TestLayerVisitor::CheckConstTensors()</a>.</p>
<div class="fragment"><div class="line"><a name="l00301"></a><span class="lineno">  301</span>&#160;{ <span class="keywordflow">return</span> m_Info.<a class="code" href="classarmnn_1_1_tensor_info.xhtml#a157e27d41e9f6b21f0d3c025fa47dc24">GetNumDimensions</a>(); }</div><div class="ttc" id="classarmnn_1_1_tensor_info_xhtml_a157e27d41e9f6b21f0d3c025fa47dc24"><div class="ttname"><a href="classarmnn_1_1_tensor_info.xhtml#a157e27d41e9f6b21f0d3c025fa47dc24">armnn::TensorInfo::GetNumDimensions</a></div><div class="ttdeci">unsigned int GetNumDimensions() const</div><div class="ttdef"><b>Definition:</b> <a href="_tensor_8hpp_source.xhtml#l00195">Tensor.hpp:195</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="a8846406ac37fbd2204f0be16ee05d5b7"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a8846406ac37fbd2204f0be16ee05d5b7">&#9670;&nbsp;</a></span>GetNumElements()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">unsigned int GetNumElements </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_tensor_8hpp_source.xhtml#l00303">303</a> of file <a class="el" href="_tensor_8hpp_source.xhtml">Tensor.hpp</a>.</p>

<p class="reference">Referenced by <a class="el" href="_test_layer_visitor_8cpp_source.xhtml#l00034">TestLayerVisitor::CheckConstTensors()</a>, <a class="el" href="_serializer_test_utils_8cpp_source.xhtml#l00122">CompareConstTensor()</a>, and <a class="el" href="_fuse_batch_norm_8hpp_source.xhtml#l00027">FuseBatchNorm&lt; ConvLayer, ArmnnType, T &gt;::Run()</a>.</p>
<div class="fragment"><div class="line"><a name="l00303"></a><span class="lineno">  303</span>&#160;{ <span class="keywordflow">return</span> m_Info.<a class="code" href="classarmnn_1_1_tensor_info.xhtml#a8846406ac37fbd2204f0be16ee05d5b7">GetNumElements</a>(); }</div><div class="ttc" id="classarmnn_1_1_tensor_info_xhtml_a8846406ac37fbd2204f0be16ee05d5b7"><div class="ttname"><a href="classarmnn_1_1_tensor_info.xhtml#a8846406ac37fbd2204f0be16ee05d5b7">armnn::TensorInfo::GetNumElements</a></div><div class="ttdeci">unsigned int GetNumElements() const</div><div class="ttdef"><b>Definition:</b> <a href="_tensor_8hpp_source.xhtml#l00196">Tensor.hpp:196</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="a8b5d0f8a24e9d9238f412260a552acf8"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a8b5d0f8a24e9d9238f412260a552acf8">&#9670;&nbsp;</a></span>GetShape() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">const <a class="el" href="classarmnn_1_1_tensor_shape.xhtml">TensorShape</a>&amp; GetShape </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_tensor_8hpp_source.xhtml#l00297">297</a> of file <a class="el" href="_tensor_8hpp_source.xhtml">Tensor.hpp</a>.</p>

<p class="reference">Referenced by <a class="el" href="_serializer_test_utils_8cpp_source.xhtml#l00122">CompareConstTensor()</a>, and <a class="el" href="_workload_utils_8cpp_source.xhtml#l00067">armnn::ReorderWeightChannelsForAcl()</a>.</p>
<div class="fragment"><div class="line"><a name="l00297"></a><span class="lineno">  297</span>&#160;{ <span class="keywordflow">return</span> m_Info.<a class="code" href="classarmnn_1_1_tensor_info.xhtml#a8b5d0f8a24e9d9238f412260a552acf8">GetShape</a>(); }</div><div class="ttc" id="classarmnn_1_1_tensor_info_xhtml_a8b5d0f8a24e9d9238f412260a552acf8"><div class="ttname"><a href="classarmnn_1_1_tensor_info.xhtml#a8b5d0f8a24e9d9238f412260a552acf8">armnn::TensorInfo::GetShape</a></div><div class="ttdeci">const TensorShape &amp; GetShape() const</div><div class="ttdef"><b>Definition:</b> <a href="_tensor_8hpp_source.xhtml#l00191">Tensor.hpp:191</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="a350bcc7d86f7d9333340a0a04be078f6"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a350bcc7d86f7d9333340a0a04be078f6">&#9670;&nbsp;</a></span>GetShape() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarmnn_1_1_tensor_shape.xhtml">TensorShape</a>&amp; GetShape </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_tensor_8hpp_source.xhtml#l00298">298</a> of file <a class="el" href="_tensor_8hpp_source.xhtml">Tensor.hpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00298"></a><span class="lineno">  298</span>&#160;{ <span class="keywordflow">return</span> m_Info.<a class="code" href="classarmnn_1_1_tensor_info.xhtml#a8b5d0f8a24e9d9238f412260a552acf8">GetShape</a>(); }</div><div class="ttc" id="classarmnn_1_1_tensor_info_xhtml_a8b5d0f8a24e9d9238f412260a552acf8"><div class="ttname"><a href="classarmnn_1_1_tensor_info.xhtml#a8b5d0f8a24e9d9238f412260a552acf8">armnn::TensorInfo::GetShape</a></div><div class="ttdeci">const TensorShape &amp; GetShape() const</div><div class="ttdef"><b>Definition:</b> <a href="_tensor_8hpp_source.xhtml#l00191">Tensor.hpp:191</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="a844fc6ba8f5435b5a200072a3ec163af"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a844fc6ba8f5435b5a200072a3ec163af">&#9670;&nbsp;</a></span>operator=()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarmnn_1_1_base_tensor.xhtml">BaseTensor</a>&lt; MemoryType &gt; &amp; operator= </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_base_tensor.xhtml">BaseTensor</a>&lt; MemoryType &gt; &amp;&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Tensors are copyable. </p>

<p class="definition">Definition at line <a class="el" href="_tensor_8cpp_source.xhtml#l00544">544</a> of file <a class="el" href="_tensor_8cpp_source.xhtml">Tensor.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00545"></a><span class="lineno">  545</span>&#160;{</div><div class="line"><a name="l00546"></a><span class="lineno">  546</span>&#160;    m_Info = other.m_Info;</div><div class="line"><a name="l00547"></a><span class="lineno">  547</span>&#160;    <a class="code" href="classarmnn_1_1_base_tensor.xhtml#aba26e5decca8be8786d8a5faf2e06a49">m_MemoryArea</a> = other.m_MemoryArea;</div><div class="line"><a name="l00548"></a><span class="lineno">  548</span>&#160;    <span class="keywordflow">return</span> *<span class="keyword">this</span>;</div><div class="line"><a name="l00549"></a><span class="lineno">  549</span>&#160;}</div><div class="ttc" id="classarmnn_1_1_base_tensor_xhtml_aba26e5decca8be8786d8a5faf2e06a49"><div class="ttname"><a href="classarmnn_1_1_base_tensor.xhtml#aba26e5decca8be8786d8a5faf2e06a49">armnn::BaseTensor::m_MemoryArea</a></div><div class="ttdeci">MemoryType m_MemoryArea</div><div class="ttdef"><b>Definition:</b> <a href="_tensor_8hpp_source.xhtml#l00312">Tensor.hpp:312</a></div></div>
</div><!-- fragment -->
</div>
</div>
<h2 class="groupheader">Member Data Documentation</h2>
<a id="aba26e5decca8be8786d8a5faf2e06a49"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aba26e5decca8be8786d8a5faf2e06a49">&#9670;&nbsp;</a></span>m_MemoryArea</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">MemoryType m_MemoryArea</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_tensor_8hpp_source.xhtml#l00312">312</a> of file <a class="el" href="_tensor_8hpp_source.xhtml">Tensor.hpp</a>.</p>

<p class="reference">Referenced by <a class="el" href="_tensor_8cpp_source.xhtml#l00530">BaseTensor&lt; const void *&gt;::BaseTensor()</a>, and <a class="el" href="_tensor_8cpp_source.xhtml#l00544">BaseTensor&lt; const void *&gt;::operator=()</a>.</p>

</div>
</div>
<hr/>The documentation for this class was generated from the following files:<ul>
<li>include/armnn/<a class="el" href="_tensor_8hpp_source.xhtml">Tensor.hpp</a></li>
<li>src/armnn/<a class="el" href="_tensor_8cpp_source.xhtml">Tensor.cpp</a></li>
</ul>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="namespacearmnn.xhtml">armnn</a></li><li class="navelem"><a class="el" href="classarmnn_1_1_base_tensor.xhtml">BaseTensor</a></li>
    <li class="footer">Generated on Fri Jun 17 2022 13:20:30 for ArmNN by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.13 </li>
  </ul>
</div>
</body>
</html>
