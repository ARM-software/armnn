<!-- Copyright (c) 2020 ARM Limited. -->
<!--                                 -->
<!-- SPDX-License-Identifier: MIT    -->
<!--                                 -->
<!-- HTML header for doxygen 1.8.13-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.13"/>
<meta name="robots" content="NOINDEX, NOFOLLOW" />
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>ArmNN: src/backends/cl/test/ICLTensorProxyTests.cpp File Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script><script type="text/javascript" src="http://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="stylesheet.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <img alt="ArmNN" src="Arm_NN_horizontal_blue.png" style="max-width: 10rem; margin-top: .5rem; margin-left 10px"/>
  <td style="padding-left: 0.5em;">
   <div id="projectname">
   &#160;<span id="projectnumber">22.05</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.13 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
$(document).ready(function(){initNavTree('_i_c_l_tensor_proxy_tests_8cpp.xhtml','');});
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="summary">
<a href="#func-members">Functions</a>  </div>
  <div class="headertitle">
<div class="title">ICLTensorProxyTests.cpp File Reference</div>  </div>
</div><!--header-->
<div class="contents">
<div class="textblock"><code>#include &lt;arm_compute/runtime/CL/functions/CLActivationLayer.h&gt;</code><br />
<code>#include &lt;<a class="el" href="include_2armnn_test_utils_2_tensor_copy_utils_8hpp_source.xhtml">armnnTestUtils/TensorCopyUtils.hpp</a>&gt;</code><br />
<code>#include &lt;<a class="el" href="_cl_import_tensor_handle_8hpp_source.xhtml">cl/ClImportTensorHandle.hpp</a>&gt;</code><br />
<code>#include &lt;<a class="el" href="_cl_import_tensor_handle_factory_8hpp_source.xhtml">cl/ClImportTensorHandleFactory.hpp</a>&gt;</code><br />
<code>#include &lt;<a class="el" href="_cl_tensor_handle_8hpp_source.xhtml">cl/ClTensorHandle.hpp</a>&gt;</code><br />
<code>#include &lt;<a class="el" href="_cl_tensor_handle_factory_8hpp_source.xhtml">cl/ClTensorHandleFactory.hpp</a>&gt;</code><br />
<code>#include &lt;<a class="el" href="_i_c_l_tensor_proxy_8hpp_source.xhtml">cl/ICLTensorProxy.hpp</a>&gt;</code><br />
<code>#include &lt;<a class="el" href="_cl_context_control_fixture_8hpp_source.xhtml">cl/test/ClContextControlFixture.hpp</a>&gt;</code><br />
<code>#include &lt;<a class="el" href="_cl_workload_factory_helper_8hpp_source.xhtml">cl/test/ClWorkloadFactoryHelper.hpp</a>&gt;</code><br />
<code>#include &lt;doctest/doctest.h&gt;</code><br />
</div>
<p><a href="_i_c_l_tensor_proxy_tests_8cpp_source.xhtml">Go to the source code of this file.</a></p>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="func-members"></a>
Functions</h2></td></tr>
<tr class="memitem:a5ce8bab945993369d85e3c87c1b9a8ff"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_i_c_l_tensor_proxy_tests_8cpp.xhtml#a5ce8bab945993369d85e3c87c1b9a8ff">TEST_SUITE</a> (&quot;ICLTensorProxyTests&quot;)</td></tr>
<tr class="separator:a5ce8bab945993369d85e3c87c1b9a8ff"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<h2 class="groupheader">Function Documentation</h2>
<a id="a5ce8bab945993369d85e3c87c1b9a8ff"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a5ce8bab945993369d85e3c87c1b9a8ff">&#9670;&nbsp;</a></span>TEST_SUITE()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">TEST_SUITE </td>
          <td>(</td>
          <td class="paramtype">&quot;ICLTensorProxyTests&quot;&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_i_c_l_tensor_proxy_tests_8cpp_source.xhtml#l00022">22</a> of file <a class="el" href="_i_c_l_tensor_proxy_tests_8cpp_source.xhtml">ICLTensorProxyTests.cpp</a>.</p>

<p class="reference">References <a class="el" href="_i_c_l_tensor_proxy_8hpp_source.xhtml#l00043">ICLTensorProxy::buffer()</a>, <a class="el" href="_i_c_l_tensor_proxy_8hpp_source.xhtml#l00055">ICLTensorProxy::cl_buffer()</a>, <a class="el" href="_tensor_copy_utils_8cpp_source.xhtml#l00014">CopyDataFromITensorHandle()</a>, <a class="el" href="_tensor_copy_utils_8cpp_source.xhtml#l00009">CopyDataToITensorHandle()</a>, <a class="el" href="_cl_tensor_handle_factory_8cpp_source.xhtml#l00057">ClTensorHandleFactory::CreateTensorHandle()</a>, <a class="el" href="_cl_import_tensor_handle_factory_8cpp_source.xhtml#l00056">ClImportTensorHandleFactory::CreateTensorHandle()</a>, <a class="el" href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a166495adc0d0f53bee6baecc577f5204">armnn::Float32</a>, <a class="el" href="_i_c_l_tensor_proxy_8hpp_source.xhtml#l00031">ICLTensorProxy::info()</a>, <a class="el" href="namespacearmnn.xhtml#a4dc0adc6737b5944e7671bee71788407acaf9b6b99962bf5c2264824231d7a40c">armnn::info</a>, <a class="el" href="namespacearmnn.xhtml#a14fcd7f88d11cea0a018269dca5f9277a1131a914388fac73e5f07b0ba0aad523">armnn::Malloc</a>, <a class="el" href="_i_c_l_tensor_proxy_8hpp_source.xhtml#l00049">ICLTensorProxy::quantization()</a>, and <a class="el" href="_mem_copy_tests_8cpp_source.xhtml#l00089">TEST_CASE_FIXTURE()</a>.</p>
<div class="fragment"><div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;{</div><div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;</div><div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;<a class="code" href="_mem_copy_tests_8cpp.xhtml#a3df1acc0ccc35bce0bd6c027e23e2c45">TEST_CASE_FIXTURE</a>(<a class="code" href="struct_cl_context_control_fixture_base.xhtml">ClContextControlFixture</a>, <span class="stringliteral">&quot;ICLTensorProxyTest&quot;</span>)</div><div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;{</div><div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;    <a class="code" href="classarmnn_1_1_cl_tensor_handle_factory.xhtml">ClTensorHandleFactory</a> handleFactory =</div><div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;        ClWorkloadFactoryHelper::GetTensorHandleFactory(ClWorkloadFactoryHelper::GetMemoryManager());</div><div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;</div><div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;    <a class="code" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> <a class="code" href="namespacearmnn.xhtml#a4dc0adc6737b5944e7671bee71788407acaf9b6b99962bf5c2264824231d7a40c">info</a>({ 1, 3, 4, 1 }, DataType::Float32);</div><div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;</div><div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;    <span class="comment">// create TensorHandle for memory import</span></div><div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;    <span class="keyword">auto</span> handle = handleFactory.<a class="code" href="classarmnn_1_1_cl_tensor_handle_factory.xhtml#a36255ab20159b07024f505d5a58644d0">CreateTensorHandle</a>(info, <span class="keyword">true</span>);</div><div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;</div><div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;    std::vector&lt;float&gt; inputData</div><div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;    {</div><div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;        -5, -2, 1, 2,</div><div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;        3, 10, -20, 8,</div><div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;        0, -12, 7, -9</div><div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;    };</div><div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;</div><div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;    handle-&gt;Allocate();</div><div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;</div><div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;    <a class="code" href="include_2armnn_test_utils_2_tensor_copy_utils_8hpp.xhtml#ae15f1a3c55d2db87683577de9fa4437c">CopyDataToITensorHandle</a>(handle.get(), inputData.data());</div><div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;</div><div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;    <span class="comment">// Get CLtensor</span></div><div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;    arm_compute::CLTensor&amp; tensor = PolymorphicDowncast&lt;ClTensorHandle*&gt;(handle.get())-&gt;GetTensor();</div><div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;    <a class="code" href="classarmnn_1_1_i_c_l_tensor_proxy.xhtml">ICLTensorProxy</a> iclTensorProxy(&amp;tensor);</div><div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;</div><div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;    <span class="comment">// Check that the ICLTensorProxy get correct information from the delegate tensor</span></div><div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;    CHECK((iclTensorProxy.info() == tensor.info()));</div><div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;    CHECK((iclTensorProxy.buffer() == tensor.buffer()));</div><div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;    CHECK((iclTensorProxy.cl_buffer() == tensor.cl_buffer()));</div><div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;    CHECK((iclTensorProxy.quantization().scale == tensor.quantization().scale));</div><div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;    CHECK((iclTensorProxy.quantization().offset == tensor.quantization().offset));</div><div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;}</div><div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;</div><div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;<a class="code" href="_mem_copy_tests_8cpp.xhtml#a3df1acc0ccc35bce0bd6c027e23e2c45">TEST_CASE_FIXTURE</a>(<a class="code" href="struct_cl_context_control_fixture_base.xhtml">ClContextControlFixture</a>, <span class="stringliteral">&quot;ChangeICLTensorProxyExecutionTest&quot;</span>)</div><div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;{</div><div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;    <span class="comment">// Start execution with with copied tensor</span></div><div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;    <a class="code" href="classarmnn_1_1_cl_tensor_handle_factory.xhtml">ClTensorHandleFactory</a> handleFactory =</div><div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;        ClWorkloadFactoryHelper::GetTensorHandleFactory(ClWorkloadFactoryHelper::GetMemoryManager());</div><div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;</div><div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;    <a class="code" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> <a class="code" href="namespacearmnn.xhtml#a4dc0adc6737b5944e7671bee71788407acaf9b6b99962bf5c2264824231d7a40c">info</a>({ 1, 3, 4, 1 }, DataType::Float32);</div><div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;    <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> numElements = <a class="code" href="namespacearmnn.xhtml#a4dc0adc6737b5944e7671bee71788407acaf9b6b99962bf5c2264824231d7a40c">info</a>.GetNumElements();</div><div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;</div><div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;    <span class="comment">// create TensorHandle for memory import</span></div><div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;    <span class="keyword">auto</span> handle = handleFactory.<a class="code" href="classarmnn_1_1_cl_tensor_handle_factory.xhtml#a36255ab20159b07024f505d5a58644d0">CreateTensorHandle</a>(info, <span class="keyword">true</span>);</div><div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;</div><div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;    std::vector&lt;float&gt; inputData</div><div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;    {</div><div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;        -5, -2, 1, 2,</div><div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;        3, 10, -20, 8,</div><div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;        0, -12, 7, -9</div><div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;    };</div><div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;</div><div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;    std::vector&lt;float&gt; ExpectedOutput</div><div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;    {</div><div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;        0, 0, 1, 2,</div><div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;        3, 10, 0, 8,</div><div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;        0, 0, 7, 0</div><div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;    };</div><div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;</div><div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;    handle-&gt;Allocate();</div><div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;</div><div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;    <a class="code" href="include_2armnn_test_utils_2_tensor_copy_utils_8hpp.xhtml#ae15f1a3c55d2db87683577de9fa4437c">CopyDataToITensorHandle</a>(handle.get(), inputData.data());</div><div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;</div><div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;    <span class="comment">// Get CLtensor</span></div><div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;    arm_compute::CLTensor&amp; tensor = PolymorphicDowncast&lt;ClTensorHandle*&gt;(handle.get())-&gt;GetTensor();</div><div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;</div><div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;    <span class="comment">// Set a proxy tensor to allocated tensor</span></div><div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;    std::unique_ptr&lt;ICLTensorProxy&gt; iclTensorProxy;</div><div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;    iclTensorProxy = std::make_unique&lt;ICLTensorProxy&gt;(&amp;tensor);</div><div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;</div><div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;    <span class="comment">// Create and configure activation function</span></div><div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;    <span class="keyword">const</span> arm_compute::ActivationLayerInfo act_info(arm_compute::ActivationLayerInfo::ActivationFunction::RELU);</div><div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;    arm_compute::CLActivationLayer act_func;</div><div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;    act_func.configure(iclTensorProxy.get(), <span class="keyword">nullptr</span>, act_info);</div><div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;</div><div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;    act_func.run();</div><div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;    arm_compute::CLScheduler::get().sync();</div><div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;</div><div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;    std::vector&lt;float&gt; actualOutput(<a class="code" href="namespacearmnn.xhtml#a4dc0adc6737b5944e7671bee71788407acaf9b6b99962bf5c2264824231d7a40c">info</a>.GetNumElements());</div><div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;</div><div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;    <a class="code" href="include_2armnn_test_utils_2_tensor_copy_utils_8hpp.xhtml#ab5dfed8358e500ed523d78090ec78e88">CopyDataFromITensorHandle</a>(actualOutput.data(), handle.get());</div><div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;</div><div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;    <span class="comment">// Validate result as expected output</span></div><div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;    <span class="keywordflow">for</span>(<span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> i = 0; i &lt; numElements; ++i)</div><div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;    {</div><div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;        CHECK((actualOutput[i] == ExpectedOutput[i]));</div><div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;    }</div><div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;</div><div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;    <span class="comment">// Change to execute with imported tensor</span></div><div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;    <a class="code" href="classarmnn_1_1_cl_import_tensor_handle_factory.xhtml">ClImportTensorHandleFactory</a> importHandleFactory(static_cast&lt;MemorySourceFlags&gt;(MemorySource::Malloc),</div><div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;                                              static_cast&lt;MemorySourceFlags&gt;(MemorySource::Malloc));</div><div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;    <span class="comment">// create TensorHandle for memory import</span></div><div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;    <span class="keyword">auto</span> importHandle = importHandleFactory.CreateTensorHandle(info);</div><div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;</div><div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;    <span class="comment">// Get CLtensor</span></div><div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;    arm_compute::CLTensor&amp; importTensor = PolymorphicDowncast&lt;ClImportTensorHandle*&gt;(importHandle.get())-&gt;GetTensor();</div><div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;</div><div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;    <span class="comment">// Allocate user memory</span></div><div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">size_t</span> totalBytes = importTensor.info()-&gt;total_size();</div><div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">size_t</span> alignment =</div><div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;        arm_compute::CLKernelLibrary::get().get_device().getInfo&lt;CL_DEVICE_GLOBAL_MEM_CACHELINE_SIZE&gt;();</div><div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;    <span class="keywordtype">size_t</span> space = totalBytes + alignment + alignment;</div><div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;    <span class="keyword">auto</span> testData = std::make_unique&lt;uint8_t[]&gt;(space);</div><div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;    <span class="keywordtype">void</span>* alignedPtr = testData.get();</div><div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;    CHECK(std::align(alignment, totalBytes, alignedPtr, space));</div><div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;</div><div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;    <span class="comment">// Import memory</span></div><div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;    CHECK(importHandle-&gt;Import(alignedPtr, <a class="code" href="namespacearmnn.xhtml#a14fcd7f88d11cea0a018269dca5f9277a1131a914388fac73e5f07b0ba0aad523">armnn::MemorySource::Malloc</a>));</div><div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;</div><div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;    <span class="comment">// Input with negative values</span></div><div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;    <span class="keyword">auto</span>* typedPtr = <span class="keyword">reinterpret_cast&lt;</span><span class="keywordtype">float</span>*<span class="keyword">&gt;</span>(alignedPtr);</div><div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;    std::fill_n(typedPtr, numElements, -5.0f);</div><div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;</div><div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;    <span class="comment">// Set the import Tensor to TensorProxy to change Tensor in the CLActivationLayer without calling configure function</span></div><div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;    iclTensorProxy-&gt;set(&amp;importTensor);</div><div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;</div><div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;    <span class="comment">// Execute function and sync</span></div><div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;    act_func.run();</div><div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;    arm_compute::CLScheduler::get().sync();</div><div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;</div><div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;    <span class="comment">// Validate result by checking that the output has no negative values</span></div><div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;    <span class="keywordflow">for</span>(<span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> i = 0; i &lt; numElements; ++i)</div><div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;    {</div><div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;        CHECK(typedPtr[i] == 0);</div><div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;    }</div><div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;}</div><div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;}</div><div class="ttc" id="classarmnn_1_1_tensor_info_xhtml"><div class="ttname"><a href="classarmnn_1_1_tensor_info.xhtml">armnn::TensorInfo</a></div><div class="ttdef"><b>Definition:</b> <a href="_tensor_8hpp_source.xhtml#l00152">Tensor.hpp:152</a></div></div>
<div class="ttc" id="classarmnn_1_1_cl_tensor_handle_factory_xhtml"><div class="ttname"><a href="classarmnn_1_1_cl_tensor_handle_factory.xhtml">armnn::ClTensorHandleFactory</a></div><div class="ttdef"><b>Definition:</b> <a href="_cl_tensor_handle_factory_8hpp_source.xhtml#l00020">ClTensorHandleFactory.hpp:20</a></div></div>
<div class="ttc" id="classarmnn_1_1_i_c_l_tensor_proxy_xhtml"><div class="ttname"><a href="classarmnn_1_1_i_c_l_tensor_proxy.xhtml">armnn::ICLTensorProxy</a></div><div class="ttdef"><b>Definition:</b> <a href="_i_c_l_tensor_proxy_8hpp_source.xhtml#l00013">ICLTensorProxy.hpp:13</a></div></div>
<div class="ttc" id="_mem_copy_tests_8cpp_xhtml_a3df1acc0ccc35bce0bd6c027e23e2c45"><div class="ttname"><a href="_mem_copy_tests_8cpp.xhtml#a3df1acc0ccc35bce0bd6c027e23e2c45">TEST_CASE_FIXTURE</a></div><div class="ttdeci">TEST_CASE_FIXTURE(ClContextControlFixture, &quot;CopyBetweenNeonAndGpu&quot;)</div><div class="ttdef"><b>Definition:</b> <a href="_mem_copy_tests_8cpp_source.xhtml#l00089">MemCopyTests.cpp:89</a></div></div>
<div class="ttc" id="classarmnn_1_1_cl_tensor_handle_factory_xhtml_a36255ab20159b07024f505d5a58644d0"><div class="ttname"><a href="classarmnn_1_1_cl_tensor_handle_factory.xhtml#a36255ab20159b07024f505d5a58644d0">armnn::ClTensorHandleFactory::CreateTensorHandle</a></div><div class="ttdeci">std::unique_ptr&lt; ITensorHandle &gt; CreateTensorHandle(const TensorInfo &amp;tensorInfo) const override</div><div class="ttdef"><b>Definition:</b> <a href="_cl_tensor_handle_factory_8cpp_source.xhtml#l00057">ClTensorHandleFactory.cpp:57</a></div></div>
<div class="ttc" id="include_2armnn_test_utils_2_tensor_copy_utils_8hpp_xhtml_ab5dfed8358e500ed523d78090ec78e88"><div class="ttname"><a href="include_2armnn_test_utils_2_tensor_copy_utils_8hpp.xhtml#ab5dfed8358e500ed523d78090ec78e88">CopyDataFromITensorHandle</a></div><div class="ttdeci">void CopyDataFromITensorHandle(void *mem, const armnn::ITensorHandle *tensorHandle)</div><div class="ttdef"><b>Definition:</b> <a href="_tensor_copy_utils_8cpp_source.xhtml#l00014">TensorCopyUtils.cpp:14</a></div></div>
<div class="ttc" id="namespacearmnn_xhtml_a14fcd7f88d11cea0a018269dca5f9277a1131a914388fac73e5f07b0ba0aad523"><div class="ttname"><a href="namespacearmnn.xhtml#a14fcd7f88d11cea0a018269dca5f9277a1131a914388fac73e5f07b0ba0aad523">armnn::MemorySource::Malloc</a></div></div>
<div class="ttc" id="classarmnn_1_1_cl_import_tensor_handle_factory_xhtml"><div class="ttname"><a href="classarmnn_1_1_cl_import_tensor_handle_factory.xhtml">armnn::ClImportTensorHandleFactory</a></div><div class="ttdoc">This factory creates ClImportTensorHandles that refer to imported memory tensors. ...</div><div class="ttdef"><b>Definition:</b> <a href="_cl_import_tensor_handle_factory_8hpp_source.xhtml#l00023">ClImportTensorHandleFactory.hpp:23</a></div></div>
<div class="ttc" id="namespacearmnn_xhtml_a4dc0adc6737b5944e7671bee71788407acaf9b6b99962bf5c2264824231d7a40c"><div class="ttname"><a href="namespacearmnn.xhtml#a4dc0adc6737b5944e7671bee71788407acaf9b6b99962bf5c2264824231d7a40c">armnn::BoostLogSeverityMapping::info</a></div></div>
<div class="ttc" id="include_2armnn_test_utils_2_tensor_copy_utils_8hpp_xhtml_ae15f1a3c55d2db87683577de9fa4437c"><div class="ttname"><a href="include_2armnn_test_utils_2_tensor_copy_utils_8hpp.xhtml#ae15f1a3c55d2db87683577de9fa4437c">CopyDataToITensorHandle</a></div><div class="ttdeci">void CopyDataToITensorHandle(armnn::ITensorHandle *tensorHandle, const void *memory)</div><div class="ttdef"><b>Definition:</b> <a href="_tensor_copy_utils_8cpp_source.xhtml#l00009">TensorCopyUtils.cpp:9</a></div></div>
<div class="ttc" id="struct_cl_context_control_fixture_base_xhtml"><div class="ttname"><a href="struct_cl_context_control_fixture_base.xhtml">ClContextControlFixtureBase</a></div><div class="ttdef"><b>Definition:</b> <a href="_cl_context_control_fixture_8hpp_source.xhtml#l00012">ClContextControlFixture.hpp:12</a></div></div>
</div><!-- fragment -->
</div>
</div>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="dir_68267d1309a1af8e8297ef4c3efbcdba.xhtml">src</a></li><li class="navelem"><a class="el" href="dir_0f3cdec46afbc61a1ded8e1687c9c9a0.xhtml">backends</a></li><li class="navelem"><a class="el" href="dir_1ad86c6d39ab715a831555571b9e98a5.xhtml">cl</a></li><li class="navelem"><a class="el" href="dir_02bab2737bbb2fb3882a0be567244fbf.xhtml">test</a></li><li class="navelem"><a class="el" href="_i_c_l_tensor_proxy_tests_8cpp.xhtml">ICLTensorProxyTests.cpp</a></li>
    <li class="footer">Generated on Tue May 24 2022 11:27:18 for ArmNN by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.13 </li>
  </ul>
</div>
</body>
</html>
