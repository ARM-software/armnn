<!-- Copyright (c) 2020 ARM Limited. -->
<!--                                 -->
<!-- SPDX-License-Identifier: MIT    -->
<!--                                 -->
<!-- HTML header for doxygen 1.8.13-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.13"/>
<meta name="robots" content="NOINDEX, NOFOLLOW" />
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>ArmNN: src/profiling/ProfilingUtils.hpp File Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script><script type="text/javascript" src="http://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="stylesheet.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <img alt="ArmNN" src="Arm_NN_horizontal_blue.png" style="max-width: 10rem; margin-top: .5rem; margin-left 10px"/>
  <td style="padding-left: 0.5em;">
   <div id="projectname">
   &#160;<span id="projectnumber">22.02</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.13 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
$(document).ready(function(){initNavTree('_profiling_utils_8hpp.xhtml','');});
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="summary">
<a href="#nested-classes">Classes</a> &#124;
<a href="#namespaces">Namespaces</a> &#124;
<a href="#enum-members">Enumerations</a> &#124;
<a href="#func-members">Functions</a> &#124;
<a href="#var-members">Variables</a>  </div>
  <div class="headertitle">
<div class="title">ProfilingUtils.hpp File Reference</div>  </div>
</div><!--header-->
<div class="contents">
<div class="textblock"><code>#include &lt;<a class="el" href="_exceptions_8hpp_source.xhtml">armnn/Exceptions.hpp</a>&gt;</code><br />
<code>#include &lt;<a class="el" href="_i_send_timeline_packet_8hpp_source.xhtml">armnn/profiling/ISendTimelinePacket.hpp</a>&gt;</code><br />
<code>#include &lt;<a class="el" href="_numeric_cast_8hpp_source.xhtml">armnn/utility/NumericCast.hpp</a>&gt;</code><br />
<code>#include &quot;<a class="el" href="_i_counter_directory_8hpp_source.xhtml">ICounterDirectory.hpp</a>&quot;</code><br />
<code>#include &quot;<a class="el" href="_i_packet_buffer_8hpp_source.xhtml">IPacketBuffer.hpp</a>&quot;</code><br />
<code>#include &lt;common/include/Packet.hpp&gt;</code><br />
<code>#include &lt;algorithm&gt;</code><br />
<code>#include &lt;cstring&gt;</code><br />
<code>#include &lt;memory&gt;</code><br />
<code>#include &lt;string&gt;</code><br />
<code>#include &lt;thread&gt;</code><br />
<code>#include &lt;vector&gt;</code><br />
</div>
<p><a href="_profiling_utils_8hpp_source.xhtml">Go to the source code of this file.</a></p>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="nested-classes"></a>
Classes</h2></td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1profiling_1_1_buffer_exhaustion.xhtml">BufferExhaustion</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="namespaces"></a>
Namespaces</h2></td></tr>
<tr class="memitem:namespacearmnn"><td class="memItemLeft" align="right" valign="top"> &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearmnn.xhtml">armnn</a></td></tr>
<tr class="memdesc:namespacearmnn"><td class="mdescLeft">&#160;</td><td class="mdescRight">Copyright (c) 2021 ARM Limited and Contributors. <br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:namespacearmnn_1_1profiling"><td class="memItemLeft" align="right" valign="top"> &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearmnn_1_1profiling.xhtml">armnn::profiling</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:namespacestd"><td class="memItemLeft" align="right" valign="top"> &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacestd.xhtml">std</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="enum-members"></a>
Enumerations</h2></td></tr>
<tr class="memitem:acdfc0158f71b04526602ef51444da4c0"><td class="memItemLeft" align="right" valign="top">enum &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearmnn_1_1profiling.xhtml#acdfc0158f71b04526602ef51444da4c0">TimelinePacketStatus</a> { <a class="el" href="namespacearmnn_1_1profiling.xhtml#acdfc0158f71b04526602ef51444da4c0aa60852f204ed8028c1c58808b746d115">Ok</a>, 
<a class="el" href="namespacearmnn_1_1profiling.xhtml#acdfc0158f71b04526602ef51444da4c0a902b0d55fddef6f8d651fe1035b7d4bd">Error</a>, 
<a class="el" href="namespacearmnn_1_1profiling.xhtml#acdfc0158f71b04526602ef51444da4c0ad0863d6c0a071cb52079344e64425773">BufferExhaustion</a>
 }</td></tr>
<tr class="separator:acdfc0158f71b04526602ef51444da4c0"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="func-members"></a>
Functions</h2></td></tr>
<tr class="memitem:a982b094fe2faa67a3560cdaf3901d0f8"><td class="memItemLeft" align="right" valign="top">uint16_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearmnn_1_1profiling.xhtml#a982b094fe2faa67a3560cdaf3901d0f8">GetNextUid</a> (bool peekOnly)</td></tr>
<tr class="separator:a982b094fe2faa67a3560cdaf3901d0f8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6605c82bc625fbd40f24d35edee15fe3"><td class="memItemLeft" align="right" valign="top">std::vector&lt; uint16_t &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearmnn_1_1profiling.xhtml#a6605c82bc625fbd40f24d35edee15fe3">GetNextCounterUids</a> (uint16_t firstUid, uint16_t cores)</td></tr>
<tr class="separator:a6605c82bc625fbd40f24d35edee15fe3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7024ffa58173d70426a51899d35266d7"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearmnn_1_1profiling.xhtml#a7024ffa58173d70426a51899d35266d7">WriteBytes</a> (const IPacketBuffer &amp;packetBuffer, unsigned int offset, const void *value, unsigned int valueSize)</td></tr>
<tr class="separator:a7024ffa58173d70426a51899d35266d7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a750935094e7dc62a6ce69be8688ee9fc"><td class="memItemLeft" align="right" valign="top">uint32_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearmnn_1_1profiling.xhtml#a750935094e7dc62a6ce69be8688ee9fc">ConstructHeader</a> (uint32_t packetFamily, uint32_t packetId)</td></tr>
<tr class="separator:a750935094e7dc62a6ce69be8688ee9fc"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a59d5594b6e4e7d3fe9dbde5febd8da81"><td class="memItemLeft" align="right" valign="top">uint32_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearmnn_1_1profiling.xhtml#a59d5594b6e4e7d3fe9dbde5febd8da81">ConstructHeader</a> (uint32_t packetFamily, uint32_t packetClass, uint32_t packetType)</td></tr>
<tr class="separator:a59d5594b6e4e7d3fe9dbde5febd8da81"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3b0223f6d6877fe5852c93c4670e32c6"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearmnn_1_1profiling.xhtml#a3b0223f6d6877fe5852c93c4670e32c6">WriteUint64</a> (const IPacketBufferPtr &amp;packetBuffer, unsigned int offset, uint64_t value)</td></tr>
<tr class="separator:a3b0223f6d6877fe5852c93c4670e32c6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3e638748a39d46e2943dfcef94dcb828"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearmnn_1_1profiling.xhtml#a3e638748a39d46e2943dfcef94dcb828">WriteUint32</a> (const IPacketBufferPtr &amp;packetBuffer, unsigned int offset, uint32_t value)</td></tr>
<tr class="separator:a3e638748a39d46e2943dfcef94dcb828"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae5ace88c65e65ab7cf5572613601a60d"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearmnn_1_1profiling.xhtml#ae5ace88c65e65ab7cf5572613601a60d">WriteUint16</a> (const IPacketBufferPtr &amp;packetBuffer, unsigned int offset, uint16_t value)</td></tr>
<tr class="separator:ae5ace88c65e65ab7cf5572613601a60d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af63b6e5ffc769286c32d55a090b1602a"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearmnn_1_1profiling.xhtml#af63b6e5ffc769286c32d55a090b1602a">WriteUint8</a> (const IPacketBufferPtr &amp;packetBuffer, unsigned int offset, uint8_t value)</td></tr>
<tr class="separator:af63b6e5ffc769286c32d55a090b1602a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1c81dacff6eb2062571f7f4db1cb7617"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearmnn_1_1profiling.xhtml#a1c81dacff6eb2062571f7f4db1cb7617">WriteBytes</a> (unsigned char *buffer, unsigned int offset, const void *value, unsigned int valueSize)</td></tr>
<tr class="separator:a1c81dacff6eb2062571f7f4db1cb7617"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af2bb4db604c56391c1361b32402c65a7"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearmnn_1_1profiling.xhtml#af2bb4db604c56391c1361b32402c65a7">WriteUint64</a> (unsigned char *buffer, unsigned int offset, uint64_t value)</td></tr>
<tr class="separator:af2bb4db604c56391c1361b32402c65a7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa3e447531d9bdaad3da25f23edf18fb4"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearmnn_1_1profiling.xhtml#aa3e447531d9bdaad3da25f23edf18fb4">WriteUint32</a> (unsigned char *buffer, unsigned int offset, uint32_t value)</td></tr>
<tr class="separator:aa3e447531d9bdaad3da25f23edf18fb4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0cf33f59f4e39a415e08497644b0b6f8"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearmnn_1_1profiling.xhtml#a0cf33f59f4e39a415e08497644b0b6f8">WriteUint16</a> (unsigned char *buffer, unsigned int offset, uint16_t value)</td></tr>
<tr class="separator:a0cf33f59f4e39a415e08497644b0b6f8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae00e76f4552e2dad3bdcf1dd72100b4f"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearmnn_1_1profiling.xhtml#ae00e76f4552e2dad3bdcf1dd72100b4f">WriteUint8</a> (unsigned char *buffer, unsigned int offset, uint8_t value)</td></tr>
<tr class="separator:ae00e76f4552e2dad3bdcf1dd72100b4f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a097646e1b460c992b553061a3436fb47"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearmnn_1_1profiling.xhtml#a097646e1b460c992b553061a3436fb47">ReadBytes</a> (const IPacketBufferPtr &amp;packetBuffer, unsigned int offset, unsigned int valueSize, uint8_t outValue[])</td></tr>
<tr class="separator:a097646e1b460c992b553061a3436fb47"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa4de2b511faa41accc2c35cadf051124"><td class="memItemLeft" align="right" valign="top">uint64_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearmnn_1_1profiling.xhtml#aa4de2b511faa41accc2c35cadf051124">ReadUint64</a> (const IPacketBufferPtr &amp;packetBuffer, unsigned int offset)</td></tr>
<tr class="separator:aa4de2b511faa41accc2c35cadf051124"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad56f4c3ea5e88279bb6ef1f31d9dc6df"><td class="memItemLeft" align="right" valign="top">uint32_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearmnn_1_1profiling.xhtml#ad56f4c3ea5e88279bb6ef1f31d9dc6df">ReadUint32</a> (const IPacketBufferPtr &amp;packetBuffer, unsigned int offset)</td></tr>
<tr class="separator:ad56f4c3ea5e88279bb6ef1f31d9dc6df"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0ffb94cb0085a54a92f1c4eeaa6cf772"><td class="memItemLeft" align="right" valign="top">uint16_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearmnn_1_1profiling.xhtml#a0ffb94cb0085a54a92f1c4eeaa6cf772">ReadUint16</a> (const IPacketBufferPtr &amp;packetBuffer, unsigned int offset)</td></tr>
<tr class="separator:a0ffb94cb0085a54a92f1c4eeaa6cf772"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a74b483b652cc32f03151b10a1366d607"><td class="memItemLeft" align="right" valign="top">uint8_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearmnn_1_1profiling.xhtml#a74b483b652cc32f03151b10a1366d607">ReadUint8</a> (const IPacketBufferPtr &amp;packetBuffer, unsigned int offset)</td></tr>
<tr class="separator:a74b483b652cc32f03151b10a1366d607"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aaeaa3d9d5e1f03bc8966f1428e1cb672"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearmnn_1_1profiling.xhtml#aaeaa3d9d5e1f03bc8966f1428e1cb672">ReadBytes</a> (const unsigned char *buffer, unsigned int offset, unsigned int valueSize, uint8_t outValue[])</td></tr>
<tr class="separator:aaeaa3d9d5e1f03bc8966f1428e1cb672"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6226b639a80d73acb1e66c622beed309"><td class="memItemLeft" align="right" valign="top">uint64_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearmnn_1_1profiling.xhtml#a6226b639a80d73acb1e66c622beed309">ReadUint64</a> (const unsigned char *buffer, unsigned int offset)</td></tr>
<tr class="separator:a6226b639a80d73acb1e66c622beed309"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a100e71143e7c9abe8fb6f3ec9a810c63"><td class="memItemLeft" align="right" valign="top">uint32_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearmnn_1_1profiling.xhtml#a100e71143e7c9abe8fb6f3ec9a810c63">ReadUint32</a> (const unsigned char *buffer, unsigned int offset)</td></tr>
<tr class="separator:a100e71143e7c9abe8fb6f3ec9a810c63"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a727b3d8a62d5910f2d2efe321748ee15"><td class="memItemLeft" align="right" valign="top">uint16_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearmnn_1_1profiling.xhtml#a727b3d8a62d5910f2d2efe321748ee15">ReadUint16</a> (const unsigned char *buffer, unsigned int offset)</td></tr>
<tr class="separator:a727b3d8a62d5910f2d2efe321748ee15"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4f91fd7ff84cd6bbfbc8dd065bf493dd"><td class="memItemLeft" align="right" valign="top">uint8_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearmnn_1_1profiling.xhtml#a4f91fd7ff84cd6bbfbc8dd065bf493dd">ReadUint8</a> (const unsigned char *buffer, unsigned int offset)</td></tr>
<tr class="separator:a4f91fd7ff84cd6bbfbc8dd065bf493dd"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aca8b4bad45009e1d42dc8de69a0b7e2c"><td class="memItemLeft" align="right" valign="top">std::pair&lt; uint32_t, uint32_t &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearmnn_1_1profiling.xhtml#aca8b4bad45009e1d42dc8de69a0b7e2c">CreateTimelinePacketHeader</a> (uint32_t packetFamily, uint32_t packetClass, uint32_t packetType, uint32_t streamId, uint32_t sequenceNumbered, uint32_t dataLength)</td></tr>
<tr class="memdesc:aca8b4bad45009e1d42dc8de69a0b7e2c"><td class="mdescLeft">&#160;</td><td class="mdescRight">Creates a timeline packet header.  <a href="namespacearmnn_1_1profiling.xhtml#aca8b4bad45009e1d42dc8de69a0b7e2c">More...</a><br /></td></tr>
<tr class="separator:aca8b4bad45009e1d42dc8de69a0b7e2c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af38e9c5d82c9317255665a6315842166"><td class="memItemLeft" align="right" valign="top">std::string&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearmnn_1_1profiling.xhtml#af38e9c5d82c9317255665a6315842166">GetSoftwareInfo</a> ()</td></tr>
<tr class="separator:af38e9c5d82c9317255665a6315842166"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1a90cae723e311b3b71272a7f5ecccbb"><td class="memItemLeft" align="right" valign="top">std::string&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearmnn_1_1profiling.xhtml#a1a90cae723e311b3b71272a7f5ecccbb">GetSoftwareVersion</a> ()</td></tr>
<tr class="separator:a1a90cae723e311b3b71272a7f5ecccbb"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a66ccd202fa7bf1e52476e61d49a45ee6"><td class="memItemLeft" align="right" valign="top">std::string&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearmnn_1_1profiling.xhtml#a66ccd202fa7bf1e52476e61d49a45ee6">GetHardwareVersion</a> ()</td></tr>
<tr class="separator:a66ccd202fa7bf1e52476e61d49a45ee6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a52fbcd350a9f12a385a7c5562c1efd9a"><td class="memItemLeft" align="right" valign="top">std::string&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearmnn_1_1profiling.xhtml#a52fbcd350a9f12a385a7c5562c1efd9a">GetProcessName</a> ()</td></tr>
<tr class="separator:a52fbcd350a9f12a385a7c5562c1efd9a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3583b5fbfe555acc552a63458e665939"><td class="memItemLeft" align="right" valign="top">TimelinePacketStatus&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearmnn_1_1profiling.xhtml#a3583b5fbfe555acc552a63458e665939">WriteTimelineLabelBinaryPacket</a> (uint64_t profilingGuid, const std::string &amp;label, unsigned char *buffer, unsigned int remainingBufferSize, unsigned int &amp;numberOfBytesWritten)</td></tr>
<tr class="separator:a3583b5fbfe555acc552a63458e665939"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a27d1c992711722739250e2bbd9ce7ede"><td class="memItemLeft" align="right" valign="top">TimelinePacketStatus&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearmnn_1_1profiling.xhtml#a27d1c992711722739250e2bbd9ce7ede">WriteTimelineEntityBinary</a> (uint64_t profilingGuid, unsigned char *buffer, unsigned int remainingBufferSize, unsigned int &amp;numberOfBytesWritten)</td></tr>
<tr class="separator:a27d1c992711722739250e2bbd9ce7ede"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9314a87188b8a4ad89e2e39b57f672c1"><td class="memItemLeft" align="right" valign="top">TimelinePacketStatus&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearmnn_1_1profiling.xhtml#a9314a87188b8a4ad89e2e39b57f672c1">WriteTimelineRelationshipBinary</a> (ProfilingRelationshipType relationshipType, uint64_t relationshipGuid, uint64_t headGuid, uint64_t tailGuid, uint64_t attributeGuid, unsigned char *buffer, unsigned int remainingBufferSize, unsigned int &amp;numberOfBytesWritten)</td></tr>
<tr class="separator:a9314a87188b8a4ad89e2e39b57f672c1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aecc8787efb41f033785074f2d362895a"><td class="memItemLeft" align="right" valign="top">TimelinePacketStatus&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearmnn_1_1profiling.xhtml#aecc8787efb41f033785074f2d362895a">WriteTimelineMessageDirectoryPackage</a> (unsigned char *buffer, unsigned int remainingBufferSize, unsigned int &amp;numberOfBytesWritten)</td></tr>
<tr class="separator:aecc8787efb41f033785074f2d362895a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aaa1dfefc0a6a75d79dad86151fc2ce41"><td class="memItemLeft" align="right" valign="top">TimelinePacketStatus&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearmnn_1_1profiling.xhtml#aaa1dfefc0a6a75d79dad86151fc2ce41">WriteTimelineEventClassBinary</a> (uint64_t profilingGuid, uint64_t nameGuid, unsigned char *buffer, unsigned int remainingBufferSize, unsigned int &amp;numberOfBytesWritten)</td></tr>
<tr class="separator:aaa1dfefc0a6a75d79dad86151fc2ce41"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0211123136217f6dfe15b39f5a58690d"><td class="memItemLeft" align="right" valign="top">TimelinePacketStatus&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearmnn_1_1profiling.xhtml#a0211123136217f6dfe15b39f5a58690d">WriteTimelineEventBinary</a> (uint64_t timestamp, int threadId, uint64_t profilingGuid, unsigned char *buffer, unsigned int remainingBufferSize, unsigned int &amp;numberOfBytesWritten)</td></tr>
<tr class="separator:a0211123136217f6dfe15b39f5a58690d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6c000fcf0c62f7bc417fef72be783129"><td class="memItemLeft" align="right" valign="top">std::string&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearmnn_1_1profiling.xhtml#a6c000fcf0c62f7bc417fef72be783129">CentreAlignFormatting</a> (const std::string &amp;stringToPass, const int spacingWidth)</td></tr>
<tr class="separator:a6c000fcf0c62f7bc417fef72be783129"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a02f98a63d0ef3a10bb359c3ac525f330"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearmnn_1_1profiling.xhtml#a02f98a63d0ef3a10bb359c3ac525f330">PrintCounterDirectory</a> (ICounterDirectory &amp;counterDirectory)</td></tr>
<tr class="separator:a02f98a63d0ef3a10bb359c3ac525f330"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a77a41a7625d3134c0cccdf11d169acb4"><td class="memItemLeft" align="right" valign="top">uint64_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearmnn_1_1profiling.xhtml#a77a41a7625d3134c0cccdf11d169acb4">GetTimestamp</a> ()</td></tr>
<tr class="separator:a77a41a7625d3134c0cccdf11d169acb4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a68dc7d3158eb3d4ed9cade6b8893d7c0"><td class="memItemLeft" align="right" valign="top">arm::pipe::Packet&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearmnn_1_1profiling.xhtml#a68dc7d3158eb3d4ed9cade6b8893d7c0">ReceivePacket</a> (const unsigned char *buffer, uint32_t length)</td></tr>
<tr class="separator:a68dc7d3158eb3d4ed9cade6b8893d7c0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af1429cfb9f824ec191b3ed9307747c58"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacestd.xhtml#af1429cfb9f824ec191b3ed9307747c58">operator==</a> (const std::vector&lt; uint8_t &gt; &amp;left, int right)</td></tr>
<tr class="separator:af1429cfb9f824ec191b3ed9307747c58"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="var-members"></a>
Variables</h2></td></tr>
<tr class="memitem:a6272d5d5e3a8afa0a402e9aafd19aedf"><td class="memItemLeft" align="right" valign="top">constexpr unsigned int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearmnn_1_1profiling.xhtml#a6272d5d5e3a8afa0a402e9aafd19aedf">ThreadIdSize</a> = sizeof(int)</td></tr>
<tr class="separator:a6272d5d5e3a8afa0a402e9aafd19aedf"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="dir_68267d1309a1af8e8297ef4c3efbcdba.xhtml">src</a></li><li class="navelem"><a class="el" href="dir_637c692f14729569dd2eac0c18e2a54a.xhtml">profiling</a></li><li class="navelem"><a class="el" href="_profiling_utils_8hpp.xhtml">ProfilingUtils.hpp</a></li>
    <li class="footer">Generated on Tue Feb 22 2022 11:39:42 for ArmNN by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.13 </li>
  </ul>
</div>
</body>
</html>
