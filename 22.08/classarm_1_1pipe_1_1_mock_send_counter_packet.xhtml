<!-- Copyright (c) 2020 ARM Limited. -->
<!--                                 -->
<!-- SPDX-License-Identifier: MIT    -->
<!--                                 -->
<!-- HTML header for doxygen 1.8.13-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.13"/>
<meta name="robots" content="NOINDEX, NOFOLLOW" />
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>ArmNN: MockSendCounterPacket Class Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script><script type="text/javascript" src="http://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="stylesheet.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <img alt="ArmNN" src="Arm_NN_horizontal_blue.png" style="max-width: 10rem; margin-top: .5rem; margin-left 10px"/>
  <td style="padding-left: 0.5em;">
   <div id="projectname">
   &#160;<span id="projectnumber">22.08</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.13 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
$(document).ready(function(){initNavTree('classarm_1_1pipe_1_1_mock_send_counter_packet.xhtml','');});
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="summary">
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="classarm_1_1pipe_1_1_mock_send_counter_packet-members.xhtml">List of all members</a>  </div>
  <div class="headertitle">
<div class="title">MockSendCounterPacket Class Reference</div>  </div>
</div><!--header-->
<div class="contents">

<p><code>#include &lt;<a class="el" href="_profiling_mocks_8hpp_source.xhtml">ProfilingMocks.hpp</a>&gt;</code></p>
<div class="dynheader">
Inheritance diagram for MockSendCounterPacket:</div>
<div class="dyncontent">
 <div class="center">
  <img src="classarm_1_1pipe_1_1_mock_send_counter_packet.png" usemap="#MockSendCounterPacket_map" alt=""/>
  <map id="MockSendCounterPacket_map" name="MockSendCounterPacket_map">
</map>
 </div></div>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:aff0340dbcc0881b2c7477565034cb956"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm_1_1pipe_1_1_mock_send_counter_packet.xhtml#aff0340dbcc0881b2c7477565034cb956">MockSendCounterPacket</a> (IBufferManager &amp;sendBuffer)</td></tr>
<tr class="separator:aff0340dbcc0881b2c7477565034cb956"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2a2e451c4e4963909b8a6dc7e7653cd1"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm_1_1pipe_1_1_mock_send_counter_packet.xhtml#a2a2e451c4e4963909b8a6dc7e7653cd1">SendStreamMetaDataPacket</a> () override</td></tr>
<tr class="separator:a2a2e451c4e4963909b8a6dc7e7653cd1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3b526a823530443efec886c4305e52de"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm_1_1pipe_1_1_mock_send_counter_packet.xhtml#a3b526a823530443efec886c4305e52de">SendCounterDirectoryPacket</a> (const ICounterDirectory &amp;counterDirectory) override</td></tr>
<tr class="separator:a3b526a823530443efec886c4305e52de"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac9261c6ee7d313090d15cfa22173d80c"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm_1_1pipe_1_1_mock_send_counter_packet.xhtml#ac9261c6ee7d313090d15cfa22173d80c">SendPeriodicCounterCapturePacket</a> (uint64_t timestamp, const std::vector&lt; CounterValue &gt; &amp;values) override</td></tr>
<tr class="separator:ac9261c6ee7d313090d15cfa22173d80c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a47406a4d108beb4f20031d370a155a9d"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm_1_1pipe_1_1_mock_send_counter_packet.xhtml#a47406a4d108beb4f20031d370a155a9d">SendPeriodicCounterSelectionPacket</a> (uint32_t capturePeriod, const std::vector&lt; uint16_t &gt; &amp;selectedCounterIds) override</td></tr>
<tr class="separator:a47406a4d108beb4f20031d370a155a9d"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock">
<p class="definition">Definition at line <a class="el" href="_profiling_mocks_8hpp_source.xhtml#l00394">394</a> of file <a class="el" href="_profiling_mocks_8hpp_source.xhtml">ProfilingMocks.hpp</a>.</p>
</div><h2 class="groupheader">Constructor &amp; Destructor Documentation</h2>
<a id="aff0340dbcc0881b2c7477565034cb956"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aff0340dbcc0881b2c7477565034cb956">&#9670;&nbsp;</a></span>MockSendCounterPacket()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarm_1_1pipe_1_1_mock_send_counter_packet.xhtml">MockSendCounterPacket</a> </td>
          <td>(</td>
          <td class="paramtype">IBufferManager &amp;&#160;</td>
          <td class="paramname"><em>sendBuffer</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_profiling_mocks_8hpp_source.xhtml#l00397">397</a> of file <a class="el" href="_profiling_mocks_8hpp_source.xhtml">ProfilingMocks.hpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00397"></a><span class="lineno">  397</span>&#160;: m_BufferManager(sendBuffer) {}</div></div><!-- fragment -->
</div>
</div>
<h2 class="groupheader">Member Function Documentation</h2>
<a id="a3b526a823530443efec886c4305e52de"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a3b526a823530443efec886c4305e52de">&#9670;&nbsp;</a></span>SendCounterDirectoryPacket()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void SendCounterDirectoryPacket </td>
          <td>(</td>
          <td class="paramtype">const ICounterDirectory &amp;&#160;</td>
          <td class="paramname"><em>counterDirectory</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">override</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_profiling_mocks_8hpp_source.xhtml#l00408">408</a> of file <a class="el" href="_profiling_mocks_8hpp_source.xhtml">ProfilingMocks.hpp</a>.</p>

<p class="reference">References <a class="el" href="_ignore_unused_8hpp_source.xhtml#l00014">armnn::IgnoreUnused()</a>.</p>

<p class="reference">Referenced by <a class="el" href="_send_counter_packet_tests_8cpp_source.xhtml#l00100">TEST_SUITE()</a>.</p>
<div class="fragment"><div class="line"><a name="l00409"></a><span class="lineno">  409</span>&#160;    {</div><div class="line"><a name="l00410"></a><span class="lineno">  410</span>&#160;        <a class="code" href="namespacearmnn.xhtml#a44affeeb090c3c6a3062830562672e84">arm::pipe::IgnoreUnused</a>(counterDirectory);</div><div class="line"><a name="l00411"></a><span class="lineno">  411</span>&#160;</div><div class="line"><a name="l00412"></a><span class="lineno">  412</span>&#160;        std::string message(<span class="stringliteral">&quot;SendCounterDirectoryPacket&quot;</span>);</div><div class="line"><a name="l00413"></a><span class="lineno">  413</span>&#160;        <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> reserved = 0;</div><div class="line"><a name="l00414"></a><span class="lineno">  414</span>&#160;        IPacketBufferPtr buffer = m_BufferManager.Reserve(1024, reserved);</div><div class="line"><a name="l00415"></a><span class="lineno">  415</span>&#160;        memcpy(buffer-&gt;GetWritableData(), message.c_str(), <span class="keyword">static_cast&lt;</span><span class="keywordtype">unsigned</span> <span class="keywordtype">int</span><span class="keyword">&gt;</span>(message.size()) + 1);</div><div class="line"><a name="l00416"></a><span class="lineno">  416</span>&#160;        m_BufferManager.Commit(buffer, reserved);</div><div class="line"><a name="l00417"></a><span class="lineno">  417</span>&#160;    }</div><div class="ttc" id="namespacearmnn_xhtml_a44affeeb090c3c6a3062830562672e84"><div class="ttname"><a href="namespacearmnn.xhtml#a44affeeb090c3c6a3062830562672e84">armnn::IgnoreUnused</a></div><div class="ttdeci">void IgnoreUnused(Ts &amp;&amp;...)</div><div class="ttdef"><b>Definition:</b> <a href="_ignore_unused_8hpp_source.xhtml#l00014">IgnoreUnused.hpp:14</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="ac9261c6ee7d313090d15cfa22173d80c"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ac9261c6ee7d313090d15cfa22173d80c">&#9670;&nbsp;</a></span>SendPeriodicCounterCapturePacket()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void SendPeriodicCounterCapturePacket </td>
          <td>(</td>
          <td class="paramtype">uint64_t&#160;</td>
          <td class="paramname"><em>timestamp</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const std::vector&lt; CounterValue &gt; &amp;&#160;</td>
          <td class="paramname"><em>values</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">override</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_profiling_mocks_8hpp_source.xhtml#l00419">419</a> of file <a class="el" href="_profiling_mocks_8hpp_source.xhtml">ProfilingMocks.hpp</a>.</p>

<p class="reference">References <a class="el" href="_ignore_unused_8hpp_source.xhtml#l00014">armnn::IgnoreUnused()</a>.</p>

<p class="reference">Referenced by <a class="el" href="_send_counter_packet_tests_8cpp_source.xhtml#l00100">TEST_SUITE()</a>.</p>
<div class="fragment"><div class="line"><a name="l00421"></a><span class="lineno">  421</span>&#160;    {</div><div class="line"><a name="l00422"></a><span class="lineno">  422</span>&#160;        <a class="code" href="namespacearmnn.xhtml#a44affeeb090c3c6a3062830562672e84">arm::pipe::IgnoreUnused</a>(timestamp, values);</div><div class="line"><a name="l00423"></a><span class="lineno">  423</span>&#160;</div><div class="line"><a name="l00424"></a><span class="lineno">  424</span>&#160;        std::string message(<span class="stringliteral">&quot;SendPeriodicCounterCapturePacket&quot;</span>);</div><div class="line"><a name="l00425"></a><span class="lineno">  425</span>&#160;        <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> reserved = 0;</div><div class="line"><a name="l00426"></a><span class="lineno">  426</span>&#160;        IPacketBufferPtr buffer = m_BufferManager.Reserve(1024, reserved);</div><div class="line"><a name="l00427"></a><span class="lineno">  427</span>&#160;        memcpy(buffer-&gt;GetWritableData(), message.c_str(), <span class="keyword">static_cast&lt;</span><span class="keywordtype">unsigned</span> <span class="keywordtype">int</span><span class="keyword">&gt;</span>(message.size()) + 1);</div><div class="line"><a name="l00428"></a><span class="lineno">  428</span>&#160;        m_BufferManager.Commit(buffer, reserved);</div><div class="line"><a name="l00429"></a><span class="lineno">  429</span>&#160;    }</div><div class="ttc" id="namespacearmnn_xhtml_a44affeeb090c3c6a3062830562672e84"><div class="ttname"><a href="namespacearmnn.xhtml#a44affeeb090c3c6a3062830562672e84">armnn::IgnoreUnused</a></div><div class="ttdeci">void IgnoreUnused(Ts &amp;&amp;...)</div><div class="ttdef"><b>Definition:</b> <a href="_ignore_unused_8hpp_source.xhtml#l00014">IgnoreUnused.hpp:14</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="a47406a4d108beb4f20031d370a155a9d"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a47406a4d108beb4f20031d370a155a9d">&#9670;&nbsp;</a></span>SendPeriodicCounterSelectionPacket()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void SendPeriodicCounterSelectionPacket </td>
          <td>(</td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>capturePeriod</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const std::vector&lt; uint16_t &gt; &amp;&#160;</td>
          <td class="paramname"><em>selectedCounterIds</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">override</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_profiling_mocks_8hpp_source.xhtml#l00431">431</a> of file <a class="el" href="_profiling_mocks_8hpp_source.xhtml">ProfilingMocks.hpp</a>.</p>

<p class="reference">References <a class="el" href="_ignore_unused_8hpp_source.xhtml#l00014">armnn::IgnoreUnused()</a>.</p>

<p class="reference">Referenced by <a class="el" href="_send_counter_packet_tests_8cpp_source.xhtml#l00100">TEST_SUITE()</a>.</p>
<div class="fragment"><div class="line"><a name="l00433"></a><span class="lineno">  433</span>&#160;    {</div><div class="line"><a name="l00434"></a><span class="lineno">  434</span>&#160;        <a class="code" href="namespacearmnn.xhtml#a44affeeb090c3c6a3062830562672e84">arm::pipe::IgnoreUnused</a>(capturePeriod, selectedCounterIds);</div><div class="line"><a name="l00435"></a><span class="lineno">  435</span>&#160;</div><div class="line"><a name="l00436"></a><span class="lineno">  436</span>&#160;        std::string message(<span class="stringliteral">&quot;SendPeriodicCounterSelectionPacket&quot;</span>);</div><div class="line"><a name="l00437"></a><span class="lineno">  437</span>&#160;        <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> reserved = 0;</div><div class="line"><a name="l00438"></a><span class="lineno">  438</span>&#160;        IPacketBufferPtr buffer = m_BufferManager.Reserve(1024, reserved);</div><div class="line"><a name="l00439"></a><span class="lineno">  439</span>&#160;        memcpy(buffer-&gt;GetWritableData(), message.c_str(), <span class="keyword">static_cast&lt;</span><span class="keywordtype">unsigned</span> <span class="keywordtype">int</span><span class="keyword">&gt;</span>(message.size()) + 1);</div><div class="line"><a name="l00440"></a><span class="lineno">  440</span>&#160;        m_BufferManager.Commit(buffer, reserved);</div><div class="line"><a name="l00441"></a><span class="lineno">  441</span>&#160;    }</div><div class="ttc" id="namespacearmnn_xhtml_a44affeeb090c3c6a3062830562672e84"><div class="ttname"><a href="namespacearmnn.xhtml#a44affeeb090c3c6a3062830562672e84">armnn::IgnoreUnused</a></div><div class="ttdeci">void IgnoreUnused(Ts &amp;&amp;...)</div><div class="ttdef"><b>Definition:</b> <a href="_ignore_unused_8hpp_source.xhtml#l00014">IgnoreUnused.hpp:14</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="a2a2e451c4e4963909b8a6dc7e7653cd1"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a2a2e451c4e4963909b8a6dc7e7653cd1">&#9670;&nbsp;</a></span>SendStreamMetaDataPacket()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void SendStreamMetaDataPacket </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">override</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_profiling_mocks_8hpp_source.xhtml#l00399">399</a> of file <a class="el" href="_profiling_mocks_8hpp_source.xhtml">ProfilingMocks.hpp</a>.</p>

<p class="reference">Referenced by <a class="el" href="_send_counter_packet_tests_8cpp_source.xhtml#l00100">TEST_SUITE()</a>.</p>
<div class="fragment"><div class="line"><a name="l00400"></a><span class="lineno">  400</span>&#160;    {</div><div class="line"><a name="l00401"></a><span class="lineno">  401</span>&#160;        std::string message(<span class="stringliteral">&quot;SendStreamMetaDataPacket&quot;</span>);</div><div class="line"><a name="l00402"></a><span class="lineno">  402</span>&#160;        <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> reserved = 0;</div><div class="line"><a name="l00403"></a><span class="lineno">  403</span>&#160;        IPacketBufferPtr buffer = m_BufferManager.Reserve(1024, reserved);</div><div class="line"><a name="l00404"></a><span class="lineno">  404</span>&#160;        memcpy(buffer-&gt;GetWritableData(), message.c_str(), <span class="keyword">static_cast&lt;</span><span class="keywordtype">unsigned</span> <span class="keywordtype">int</span><span class="keyword">&gt;</span>(message.size()) + 1);</div><div class="line"><a name="l00405"></a><span class="lineno">  405</span>&#160;        m_BufferManager.Commit(buffer, reserved, <span class="keyword">false</span>);</div><div class="line"><a name="l00406"></a><span class="lineno">  406</span>&#160;    }</div></div><!-- fragment -->
</div>
</div>
<hr/>The documentation for this class was generated from the following file:<ul>
<li>src/profiling/test/<a class="el" href="_profiling_mocks_8hpp_source.xhtml">ProfilingMocks.hpp</a></li>
</ul>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="namespacearm.xhtml">arm</a></li><li class="navelem"><a class="el" href="namespacearm_1_1pipe.xhtml">pipe</a></li><li class="navelem"><a class="el" href="classarm_1_1pipe_1_1_mock_send_counter_packet.xhtml">MockSendCounterPacket</a></li>
    <li class="footer">Generated on Fri Aug 19 2022 14:38:36 for ArmNN by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.13 </li>
  </ul>
</div>
</body>
</html>
