<!-- Copyright (c) 2020 ARM Limited. -->
<!--                                 -->
<!-- SPDX-License-Identifier: MIT    -->
<!--                                 -->
<!-- HTML header for doxygen 1.8.13-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.13"/>
<meta name="robots" content="NOINDEX, NOFOLLOW" />
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>ArmNN: src/armnn/layers/TransposeLayer.hpp Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script><script type="text/javascript" src="http://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="stylesheet.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <img alt="ArmNN" src="Arm_NN_horizontal_blue.png" style="max-width: 10rem; margin-top: .5rem; margin-left 10px"/>
  <td style="padding-left: 0.5em;">
   <div id="projectname">
   &#160;<span id="projectnumber">22.05.01</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.13 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
$(document).ready(function(){initNavTree('_transpose_layer_8hpp_source.xhtml','');});
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="headertitle">
<div class="title">TransposeLayer.hpp</div>  </div>
</div><!--header-->
<div class="contents">
<a href="_transpose_layer_8hpp.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="comment">//</span></div><div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="comment">// Copyright Â© 2020 Arm Ltd and Contributors. All rights reserved.</span></div><div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="comment">// SPDX-License-Identifier: MIT</span></div><div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="comment">//</span></div><div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="preprocessor">#pragma once</span></div><div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;</div><div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_layer_with_parameters_8hpp.xhtml">LayerWithParameters.hpp</a>&quot;</span></div><div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;</div><div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="preprocessor">#include &lt;<a class="code" href="_polymorphic_downcast_8hpp.xhtml">armnn/utility/PolymorphicDowncast.hpp</a>&gt;</span></div><div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;</div><div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;<span class="keyword">namespace </span><a class="code" href="namespacearmnn.xhtml">armnn</a></div><div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;{</div><div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;<span class="comment">/// This layer represents a transpose operation.</span></div><div class="line"><a name="l00015"></a><span class="lineno"><a class="line" href="classarmnn_1_1_transpose_layer.xhtml">   15</a></span>&#160;<span class="comment"></span><span class="keyword">class </span><a class="code" href="classarmnn_1_1_transpose_layer.xhtml">TransposeLayer</a> : <span class="keyword">public</span> <a class="code" href="classarmnn_1_1_layer_with_parameters.xhtml">LayerWithParameters</a>&lt;TransposeDescriptor&gt;</div><div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;{</div><div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;<span class="keyword">public</span>:<span class="comment"></span></div><div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;<span class="comment">    /// Makes a workload for the Transpose type.</span></div><div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;<span class="comment">    /// @param [in] factory The workload factory which will create the workload.</span></div><div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;<span class="comment">    /// @return A pointer to the created workload, or nullptr if not created.</span></div><div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;<span class="comment"></span>    <span class="keyword">virtual</span> std::unique_ptr&lt;IWorkload&gt; <a class="code" href="classarmnn_1_1_transpose_layer.xhtml#adfa912d0c4c6c00f1af2cbfa799572b7">CreateWorkload</a>(<span class="keyword">const</span> <a class="code" href="classarmnn_1_1_i_workload_factory.xhtml">IWorkloadFactory</a>&amp; factory) <span class="keyword">const override</span>;</div><div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;<span class="comment">    /// Creates a dynamically-allocated copy of this layer.</span></div><div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;<span class="comment">    /// @param [in] graph The graph into which this layer is being cloned.</span></div><div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;<span class="comment"></span>    <a class="code" href="classarmnn_1_1_transpose_layer.xhtml">TransposeLayer</a>* <a class="code" href="classarmnn_1_1_transpose_layer.xhtml#aeda9204b7b0de5754485ae03b1a7e55f">Clone</a>(<a class="code" href="classarmnn_1_1_graph.xhtml">Graph</a>&amp; graph) <span class="keyword">const override</span>;</div><div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;<span class="comment">    /// Check if the input tensor shape(s)</span></div><div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;<span class="comment">    /// will lead to a valid configuration of @ref TransposeLayer.</span></div><div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;<span class="comment">    /// @param [in] shapeInferenceMethod Indicates if output shape shall be overwritten or just validated.</span></div><div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;<span class="comment"></span>    <span class="keywordtype">void</span> <a class="code" href="classarmnn_1_1_transpose_layer.xhtml#a8c8f543d7e9729362c266d12ec169966">ValidateTensorShapesFromInputs</a>() <span class="keyword">override</span>;</div><div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;<span class="comment">    /// Infers the output shapes from given input shapes and the permutation vector.</span></div><div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;<span class="comment">    /// @param [in] inputShapes The input shapes layer has.</span></div><div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;<span class="comment">    /// @return A vector to the inferred output shape.</span></div><div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;<span class="comment"></span>    std::vector&lt;TensorShape&gt; <a class="code" href="classarmnn_1_1_transpose_layer.xhtml#a65ca562c882ad619684445a1402f415a">InferOutputShapes</a>(<span class="keyword">const</span> std::vector&lt;TensorShape&gt;&amp; inputShapes) <span class="keyword">const override</span>;</div><div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;<span class="comment">    /// @return a permutation vector describing the permutation for the dimensions of the input tensor.</span></div><div class="line"><a name="l00038"></a><span class="lineno"><a class="line" href="classarmnn_1_1_transpose_layer.xhtml#afe072d52231a2b18497797a6537c0f81">   38</a></span>&#160;<span class="comment"></span>    <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_permutation_vector.xhtml">PermutationVector</a>&amp; <a class="code" href="classarmnn_1_1_transpose_layer.xhtml#afe072d52231a2b18497797a6537c0f81">GetPermutation</a>()<span class="keyword"> const</span></div><div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;<span class="keyword">    </span>{</div><div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;        <span class="keywordflow">return</span> <a class="code" href="classarmnn_1_1_layer_with_parameters.xhtml#ad32ac22bc72e28dfd6b466d143c8e262">m_Param</a>.<a class="code" href="structarmnn_1_1_transpose_descriptor.xhtml#a14433af2b223695b40d8c8f8ba2ebb8f">m_DimMappings</a>;</div><div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;    }</div><div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;<span class="comment">    /// Indicates if the other layer received is inverse of this one.</span></div><div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;<span class="comment">    /// @param [in] other The other layer to be compared with.</span></div><div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;<span class="comment">    /// @return true if other layer is inverse of this false otherwise.</span></div><div class="line"><a name="l00046"></a><span class="lineno"><a class="line" href="classarmnn_1_1_transpose_layer.xhtml#a852d2e6e785cec6346f687219bdc48a2">   46</a></span>&#160;<span class="comment"></span>    <span class="keywordtype">bool</span> <a class="code" href="classarmnn_1_1_transpose_layer.xhtml#a852d2e6e785cec6346f687219bdc48a2">IsInverse</a>(<span class="keyword">const</span> <a class="code" href="classarmnn_1_1_layer.xhtml">Layer</a>&amp; other)<span class="keyword"> const</span></div><div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;<span class="keyword">    </span>{</div><div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;        <span class="keywordflow">return</span> (other.<a class="code" href="classarmnn_1_1_layer.xhtml#ad8e15c530c929ab823d89ae9fd2d3f11">GetType</a>() == <a class="code" href="namespacearmnn.xhtml#a56943a0946e5f15e5e58054b8e7a04a4aaf70b1ac863830a4e1ce6268c8399f54">LayerType::Transpose</a>) &amp;&amp;</div><div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;            <a class="code" href="classarmnn_1_1_transpose_layer.xhtml#afe072d52231a2b18497797a6537c0f81">GetPermutation</a>().<a class="code" href="classarmnn_1_1_permutation_vector.xhtml#abca528420d32f4edad0b1425ad90f80e">IsInverse</a>(PolymorphicDowncast&lt;const TransposeLayer*&gt;(&amp;other)-&gt;<a class="code" href="classarmnn_1_1_transpose_layer.xhtml#afe072d52231a2b18497797a6537c0f81">GetPermutation</a>());</div><div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;    }</div><div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;<span class="comment">    /// Indicates if the other layer received is equal to this one.</span></div><div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;<span class="comment">    /// @param [in] other The other layer to be compare with.</span></div><div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;<span class="comment">    /// @return true if other layer is equal to this false otherwise.</span></div><div class="line"><a name="l00055"></a><span class="lineno"><a class="line" href="classarmnn_1_1_transpose_layer.xhtml#a1ce226887de76cabc0c1878e7fec6b11">   55</a></span>&#160;<span class="comment"></span>    <span class="keywordtype">bool</span> <a class="code" href="classarmnn_1_1_transpose_layer.xhtml#a1ce226887de76cabc0c1878e7fec6b11">IsEqual</a>(<span class="keyword">const</span> <a class="code" href="classarmnn_1_1_layer.xhtml">Layer</a>&amp; other)<span class="keyword"> const</span></div><div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;<span class="keyword">    </span>{</div><div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;        <span class="keywordflow">return</span> (other.<a class="code" href="classarmnn_1_1_layer.xhtml#ad8e15c530c929ab823d89ae9fd2d3f11">GetType</a>() == <a class="code" href="namespacearmnn.xhtml#a56943a0946e5f15e5e58054b8e7a04a4aaf70b1ac863830a4e1ce6268c8399f54">LayerType::Transpose</a>) &amp;&amp;</div><div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;               <a class="code" href="classarmnn_1_1_transpose_layer.xhtml#afe072d52231a2b18497797a6537c0f81">GetPermutation</a>().<a class="code" href="classarmnn_1_1_permutation_vector.xhtml#aae44e4154aa80fba7616747450ff69d5">IsEqual</a>(PolymorphicDowncast&lt;const TransposeLayer*&gt;(&amp;other)-&gt;<a class="code" href="classarmnn_1_1_transpose_layer.xhtml#afe072d52231a2b18497797a6537c0f81">GetPermutation</a>());</div><div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;    }</div><div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;</div><div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;    <a class="code" href="_deprecated_8hpp.xhtml#ab66a241a0ed3ee89c866e777b035d0ed">ARMNN_NO_DEPRECATE_WARN_BEGIN</a></div><div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classarmnn_1_1_transpose_layer.xhtml#a5c0289829d87ee65f7bba2a8c3839370">Accept</a>(ILayerVisitor&amp; visitor) <span class="keyword">const override</span>;</div><div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;    <a class="code" href="_deprecated_8hpp.xhtml#ad762b11b48e5c1d1c1743f529485728a">ARMNN_NO_DEPRECATE_WARN_END</a></div><div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;</div><div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;</div><div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;<span class="keyword">protected</span>:<span class="comment"></span></div><div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;<span class="comment">    /// Constructor to create a TransposeLayer.</span></div><div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;<span class="comment">    /// @param [in] param TransposeDescriptor to configure the permute operation.</span></div><div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;<span class="comment">    /// @param [in] name Optional name for the layer.</span></div><div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;<span class="comment"></span>    <a class="code" href="classarmnn_1_1_transpose_layer.xhtml#a4a8dcf6e1cb5b601796272b5a055850c">TransposeLayer</a>(<span class="keyword">const</span> <a class="code" href="structarmnn_1_1_transpose_descriptor.xhtml">TransposeDescriptor</a>&amp; param, <span class="keyword">const</span> <span class="keywordtype">char</span>* name);</div><div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;<span class="comment">    /// Default destructor</span></div><div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;<span class="comment"></span>    <a class="code" href="classarmnn_1_1_transpose_layer.xhtml#a210b932d7d92dba10d91929cefc359a8">~TransposeLayer</a>() = <span class="keywordflow">default</span>;</div><div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;};</div><div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;</div><div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;} <span class="comment">// namespace</span></div><div class="ttc" id="_layer_with_parameters_8hpp_xhtml"><div class="ttname"><a href="_layer_with_parameters_8hpp.xhtml">LayerWithParameters.hpp</a></div></div>
<div class="ttc" id="classarmnn_1_1_transpose_layer_xhtml_a1ce226887de76cabc0c1878e7fec6b11"><div class="ttname"><a href="classarmnn_1_1_transpose_layer.xhtml#a1ce226887de76cabc0c1878e7fec6b11">armnn::TransposeLayer::IsEqual</a></div><div class="ttdeci">bool IsEqual(const Layer &amp;other) const</div><div class="ttdoc">Indicates if the other layer received is equal to this one. </div><div class="ttdef"><b>Definition:</b> <a href="_transpose_layer_8hpp_source.xhtml#l00055">TransposeLayer.hpp:55</a></div></div>
<div class="ttc" id="classarmnn_1_1_layer_with_parameters_xhtml_ad32ac22bc72e28dfd6b466d143c8e262"><div class="ttname"><a href="classarmnn_1_1_layer_with_parameters.xhtml#ad32ac22bc72e28dfd6b466d143c8e262">armnn::LayerWithParameters&lt; TransposeDescriptor &gt;::m_Param</a></div><div class="ttdeci">TransposeDescriptor m_Param</div><div class="ttdoc">The parameters for the layer (not including tensor-valued weights etc.). </div><div class="ttdef"><b>Definition:</b> <a href="_layer_with_parameters_8hpp_source.xhtml#l00051">LayerWithParameters.hpp:51</a></div></div>
<div class="ttc" id="classarmnn_1_1_transpose_layer_xhtml_aeda9204b7b0de5754485ae03b1a7e55f"><div class="ttname"><a href="classarmnn_1_1_transpose_layer.xhtml#aeda9204b7b0de5754485ae03b1a7e55f">armnn::TransposeLayer::Clone</a></div><div class="ttdeci">TransposeLayer * Clone(Graph &amp;graph) const override</div><div class="ttdoc">Creates a dynamically-allocated copy of this layer. </div><div class="ttdef"><b>Definition:</b> <a href="_transpose_layer_8cpp_source.xhtml#l00033">TransposeLayer.cpp:33</a></div></div>
<div class="ttc" id="classarmnn_1_1_transpose_layer_xhtml_a210b932d7d92dba10d91929cefc359a8"><div class="ttname"><a href="classarmnn_1_1_transpose_layer.xhtml#a210b932d7d92dba10d91929cefc359a8">armnn::TransposeLayer::~TransposeLayer</a></div><div class="ttdeci">~TransposeLayer()=default</div><div class="ttdoc">Default destructor. </div></div>
<div class="ttc" id="_deprecated_8hpp_xhtml_ab66a241a0ed3ee89c866e777b035d0ed"><div class="ttname"><a href="_deprecated_8hpp.xhtml#ab66a241a0ed3ee89c866e777b035d0ed">ARMNN_NO_DEPRECATE_WARN_BEGIN</a></div><div class="ttdeci">#define ARMNN_NO_DEPRECATE_WARN_BEGIN</div><div class="ttdef"><b>Definition:</b> <a href="_deprecated_8hpp_source.xhtml#l00033">Deprecated.hpp:33</a></div></div>
<div class="ttc" id="classarmnn_1_1_i_workload_factory_xhtml"><div class="ttname"><a href="classarmnn_1_1_i_workload_factory.xhtml">armnn::IWorkloadFactory</a></div><div class="ttdef"><b>Definition:</b> <a href="include_2armnn_2backends_2_workload_factory_8hpp_source.xhtml#l00022">WorkloadFactory.hpp:22</a></div></div>
<div class="ttc" id="namespacearmnn_xhtml"><div class="ttname"><a href="namespacearmnn.xhtml">armnn</a></div><div class="ttdoc">Copyright (c) 2021 ARM Limited and Contributors. </div><div class="ttdef"><b>Definition:</b> <a href="01__00__quick__start_8dox_source.xhtml#l00006">01_00_quick_start.dox:6</a></div></div>
<div class="ttc" id="classarmnn_1_1_transpose_layer_xhtml_adfa912d0c4c6c00f1af2cbfa799572b7"><div class="ttname"><a href="classarmnn_1_1_transpose_layer.xhtml#adfa912d0c4c6c00f1af2cbfa799572b7">armnn::TransposeLayer::CreateWorkload</a></div><div class="ttdeci">virtual std::unique_ptr&lt; IWorkload &gt; CreateWorkload(const IWorkloadFactory &amp;factory) const override</div><div class="ttdoc">Makes a workload for the Transpose type. </div><div class="ttdef"><b>Definition:</b> <a href="_transpose_layer_8cpp_source.xhtml#l00025">TransposeLayer.cpp:25</a></div></div>
<div class="ttc" id="_polymorphic_downcast_8hpp_xhtml"><div class="ttname"><a href="_polymorphic_downcast_8hpp.xhtml">PolymorphicDowncast.hpp</a></div></div>
<div class="ttc" id="classarmnn_1_1_transpose_layer_xhtml_a5c0289829d87ee65f7bba2a8c3839370"><div class="ttname"><a href="classarmnn_1_1_transpose_layer.xhtml#a5c0289829d87ee65f7bba2a8c3839370">armnn::TransposeLayer::Accept</a></div><div class="ttdeci">ARMNN_NO_DEPRECATE_WARN_BEGIN void Accept(ILayerVisitor &amp;visitor) const override</div><div class="ttdef"><b>Definition:</b> <a href="_transpose_layer_8cpp_source.xhtml#l00061">TransposeLayer.cpp:61</a></div></div>
<div class="ttc" id="_deprecated_8hpp_xhtml_ad762b11b48e5c1d1c1743f529485728a"><div class="ttname"><a href="_deprecated_8hpp.xhtml#ad762b11b48e5c1d1c1743f529485728a">ARMNN_NO_DEPRECATE_WARN_END</a></div><div class="ttdeci">#define ARMNN_NO_DEPRECATE_WARN_END</div><div class="ttdef"><b>Definition:</b> <a href="_deprecated_8hpp_source.xhtml#l00034">Deprecated.hpp:34</a></div></div>
<div class="ttc" id="classarmnn_1_1_layer_xhtml_ad8e15c530c929ab823d89ae9fd2d3f11"><div class="ttname"><a href="classarmnn_1_1_layer.xhtml#ad8e15c530c929ab823d89ae9fd2d3f11">armnn::Layer::GetType</a></div><div class="ttdeci">LayerType GetType() const override</div><div class="ttdoc">Returns the armnn::LayerType of this layer. </div><div class="ttdef"><b>Definition:</b> <a href="_layer_8hpp_source.xhtml#l00271">Layer.hpp:271</a></div></div>
<div class="ttc" id="classarmnn_1_1_transpose_layer_xhtml_a8c8f543d7e9729362c266d12ec169966"><div class="ttname"><a href="classarmnn_1_1_transpose_layer.xhtml#a8c8f543d7e9729362c266d12ec169966">armnn::TransposeLayer::ValidateTensorShapesFromInputs</a></div><div class="ttdeci">void ValidateTensorShapesFromInputs() override</div><div class="ttdoc">Check if the input tensor shape(s) will lead to a valid configuration of TransposeLayer. </div><div class="ttdef"><b>Definition:</b> <a href="_transpose_layer_8cpp_source.xhtml#l00045">TransposeLayer.cpp:45</a></div></div>
<div class="ttc" id="classarmnn_1_1_transpose_layer_xhtml_a4a8dcf6e1cb5b601796272b5a055850c"><div class="ttname"><a href="classarmnn_1_1_transpose_layer.xhtml#a4a8dcf6e1cb5b601796272b5a055850c">armnn::TransposeLayer::TransposeLayer</a></div><div class="ttdeci">TransposeLayer(const TransposeDescriptor &amp;param, const char *name)</div><div class="ttdoc">Constructor to create a TransposeLayer. </div><div class="ttdef"><b>Definition:</b> <a href="_transpose_layer_8cpp_source.xhtml#l00020">TransposeLayer.cpp:20</a></div></div>
<div class="ttc" id="classarmnn_1_1_transpose_layer_xhtml_a852d2e6e785cec6346f687219bdc48a2"><div class="ttname"><a href="classarmnn_1_1_transpose_layer.xhtml#a852d2e6e785cec6346f687219bdc48a2">armnn::TransposeLayer::IsInverse</a></div><div class="ttdeci">bool IsInverse(const Layer &amp;other) const</div><div class="ttdoc">Indicates if the other layer received is inverse of this one. </div><div class="ttdef"><b>Definition:</b> <a href="_transpose_layer_8hpp_source.xhtml#l00046">TransposeLayer.hpp:46</a></div></div>
<div class="ttc" id="classarmnn_1_1_permutation_vector_xhtml"><div class="ttname"><a href="classarmnn_1_1_permutation_vector.xhtml">armnn::PermutationVector</a></div><div class="ttdef"><b>Definition:</b> <a href="_types_8hpp_source.xhtml#l00295">Types.hpp:295</a></div></div>
<div class="ttc" id="classarmnn_1_1_graph_xhtml"><div class="ttname"><a href="classarmnn_1_1_graph.xhtml">armnn::Graph</a></div><div class="ttdef"><b>Definition:</b> <a href="_graph_8hpp_source.xhtml#l00030">Graph.hpp:30</a></div></div>
<div class="ttc" id="classarmnn_1_1_transpose_layer_xhtml"><div class="ttname"><a href="classarmnn_1_1_transpose_layer.xhtml">armnn::TransposeLayer</a></div><div class="ttdoc">This layer represents a transpose operation. </div><div class="ttdef"><b>Definition:</b> <a href="_transpose_layer_8hpp_source.xhtml#l00015">TransposeLayer.hpp:15</a></div></div>
<div class="ttc" id="classarmnn_1_1_permutation_vector_xhtml_aae44e4154aa80fba7616747450ff69d5"><div class="ttname"><a href="classarmnn_1_1_permutation_vector.xhtml#aae44e4154aa80fba7616747450ff69d5">armnn::PermutationVector::IsEqual</a></div><div class="ttdeci">bool IsEqual(const PermutationVector &amp;other) const</div><div class="ttdef"><b>Definition:</b> <a href="_types_8hpp_source.xhtml#l00347">Types.hpp:347</a></div></div>
<div class="ttc" id="classarmnn_1_1_transpose_layer_xhtml_a65ca562c882ad619684445a1402f415a"><div class="ttname"><a href="classarmnn_1_1_transpose_layer.xhtml#a65ca562c882ad619684445a1402f415a">armnn::TransposeLayer::InferOutputShapes</a></div><div class="ttdeci">std::vector&lt; TensorShape &gt; InferOutputShapes(const std::vector&lt; TensorShape &gt; &amp;inputShapes) const override</div><div class="ttdoc">Infers the output shapes from given input shapes and the permutation vector. </div><div class="ttdef"><b>Definition:</b> <a href="_transpose_layer_8cpp_source.xhtml#l00038">TransposeLayer.cpp:38</a></div></div>
<div class="ttc" id="structarmnn_1_1_transpose_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_transpose_descriptor.xhtml">armnn::TransposeDescriptor</a></div><div class="ttdoc">A TransposeDescriptor for the TransposeLayer. </div><div class="ttdef"><b>Definition:</b> <a href="_descriptors_8hpp_source.xhtml#l01471">Descriptors.hpp:1471</a></div></div>
<div class="ttc" id="classarmnn_1_1_layer_with_parameters_xhtml"><div class="ttname"><a href="classarmnn_1_1_layer_with_parameters.xhtml">armnn::LayerWithParameters</a></div><div class="ttdef"><b>Definition:</b> <a href="_layer_with_parameters_8hpp_source.xhtml#l00013">LayerWithParameters.hpp:13</a></div></div>
<div class="ttc" id="classarmnn_1_1_permutation_vector_xhtml_abca528420d32f4edad0b1425ad90f80e"><div class="ttname"><a href="classarmnn_1_1_permutation_vector.xhtml#abca528420d32f4edad0b1425ad90f80e">armnn::PermutationVector::IsInverse</a></div><div class="ttdeci">bool IsInverse(const PermutationVector &amp;other) const</div><div class="ttdef"><b>Definition:</b> <a href="_types_8hpp_source.xhtml#l00357">Types.hpp:357</a></div></div>
<div class="ttc" id="namespacearmnn_xhtml_a56943a0946e5f15e5e58054b8e7a04a4aaf70b1ac863830a4e1ce6268c8399f54"><div class="ttname"><a href="namespacearmnn.xhtml#a56943a0946e5f15e5e58054b8e7a04a4aaf70b1ac863830a4e1ce6268c8399f54">armnn::LayerType::Transpose</a></div></div>
<div class="ttc" id="classarmnn_1_1_transpose_layer_xhtml_afe072d52231a2b18497797a6537c0f81"><div class="ttname"><a href="classarmnn_1_1_transpose_layer.xhtml#afe072d52231a2b18497797a6537c0f81">armnn::TransposeLayer::GetPermutation</a></div><div class="ttdeci">const PermutationVector &amp; GetPermutation() const</div><div class="ttdef"><b>Definition:</b> <a href="_transpose_layer_8hpp_source.xhtml#l00038">TransposeLayer.hpp:38</a></div></div>
<div class="ttc" id="structarmnn_1_1_transpose_descriptor_xhtml_a14433af2b223695b40d8c8f8ba2ebb8f"><div class="ttname"><a href="structarmnn_1_1_transpose_descriptor.xhtml#a14433af2b223695b40d8c8f8ba2ebb8f">armnn::TransposeDescriptor::m_DimMappings</a></div><div class="ttdeci">PermutationVector m_DimMappings</div><div class="ttdoc">Indicates how to translate tensor elements from a given source into the target destination, when source and target potentially have different memory layouts e.g. </div><div class="ttdef"><b>Definition:</b> <a href="_descriptors_8hpp_source.xhtml#l01488">Descriptors.hpp:1488</a></div></div>
<div class="ttc" id="classarmnn_1_1_layer_xhtml"><div class="ttname"><a href="classarmnn_1_1_layer.xhtml">armnn::Layer</a></div><div class="ttdef"><b>Definition:</b> <a href="_layer_8hpp_source.xhtml#l00215">Layer.hpp:215</a></div></div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="dir_68267d1309a1af8e8297ef4c3efbcdba.xhtml">src</a></li><li class="navelem"><a class="el" href="dir_e0a84d05c80a2ef4231141dcbbeac5c8.xhtml">armnn</a></li><li class="navelem"><a class="el" href="dir_9da6642ce0fd5a8c83524f1b621275be.xhtml">layers</a></li><li class="navelem"><a class="el" href="_transpose_layer_8hpp.xhtml">TransposeLayer.hpp</a></li>
    <li class="footer">Generated on Fri Jun 17 2022 13:19:42 for ArmNN by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.13 </li>
  </ul>
</div>
</body>
</html>
