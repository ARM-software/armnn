<!-- Copyright (c) 2020 ARM Limited. -->
<!--                                 -->
<!-- SPDX-License-Identifier: MIT    -->
<!--                                 -->
<!-- HTML header for doxygen 1.8.13-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.13"/>
<meta name="robots" content="NOINDEX, NOFOLLOW" />
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>ArmNN: src/backends/reference/workloads/ElementwiseFunction.hpp Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script><script type="text/javascript" src="http://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="stylesheet.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <img alt="ArmNN" src="Arm_NN_horizontal_blue.png" style="max-width: 10rem; margin-top: .5rem; margin-left 10px"/>
  <td style="padding-left: 0.5em;">
   <div id="projectname">
   &#160;<span id="projectnumber">23.02</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.13 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
$(document).ready(function(){initNavTree('_elementwise_function_8hpp_source.xhtml','');});
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="headertitle">
<div class="title">ElementwiseFunction.hpp</div>  </div>
</div><!--header-->
<div class="contents">
<a href="_elementwise_function_8hpp.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="comment">//</span></div><div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="comment">// Copyright Â© 2017 Arm Ltd. All rights reserved.</span></div><div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="comment">// SPDX-License-Identifier: MIT</span></div><div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="comment">//</span></div><div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;</div><div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="preprocessor">#pragma once</span></div><div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;</div><div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_base_iterator_8hpp.xhtml">BaseIterator.hpp</a>&quot;</span></div><div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="preprocessor">#include &lt;<a class="code" href="_tensor_8hpp.xhtml">armnn/Tensor.hpp</a>&gt;</span></div><div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;</div><div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;<span class="keyword">namespace </span><a class="code" href="namespacearmnn.xhtml">armnn</a></div><div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;{</div><div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;</div><div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> Functor&gt;</div><div class="line"><a name="l00015"></a><span class="lineno"><a class="line" href="structarmnn_1_1_elementwise_binary_function.xhtml">   15</a></span>&#160;<span class="keyword">struct </span><a class="code" href="structarmnn_1_1_elementwise_binary_function.xhtml">ElementwiseBinaryFunction</a></div><div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;{</div><div class="line"><a name="l00017"></a><span class="lineno"><a class="line" href="structarmnn_1_1_elementwise_binary_function.xhtml#a8052a16ed0d9f7009e6fd20b8abc1e83">   17</a></span>&#160;    <span class="keyword">using</span> <a class="code" href="structarmnn_1_1_elementwise_binary_function.xhtml#a8052a16ed0d9f7009e6fd20b8abc1e83">OutType</a> = <span class="keyword">typename</span> Functor::result_type;</div><div class="line"><a name="l00018"></a><span class="lineno"><a class="line" href="structarmnn_1_1_elementwise_binary_function.xhtml#a4ec36b1d00042fa901f92924e2423500">   18</a></span>&#160;    <span class="keyword">using</span> <a class="code" href="structarmnn_1_1_elementwise_binary_function.xhtml#a4ec36b1d00042fa901f92924e2423500">InType</a> = <span class="keyword">typename</span> Functor::first_argument_type;</div><div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;</div><div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;    <a class="code" href="structarmnn_1_1_elementwise_binary_function.xhtml#a12cf00d4ad8e7a82d40b10878fd91507">ElementwiseBinaryFunction</a>(<span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_shape.xhtml">TensorShape</a>&amp; inShape0,</div><div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;                              <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_shape.xhtml">TensorShape</a>&amp; inShape1,</div><div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;                              <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_shape.xhtml">TensorShape</a>&amp; outShape,</div><div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;                              <a class="code" href="classarmnn_1_1_decoder.xhtml">Decoder&lt;InType&gt;</a>&amp; inData0,</div><div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;                              <a class="code" href="classarmnn_1_1_decoder.xhtml">Decoder&lt;InType&gt;</a>&amp; inData1,</div><div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;                              <a class="code" href="classarmnn_1_1_encoder.xhtml">Encoder&lt;OutType&gt;</a>&amp; outData);</div><div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;};</div><div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;</div><div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> Functor&gt;</div><div class="line"><a name="l00029"></a><span class="lineno"><a class="line" href="structarmnn_1_1_elementwise_unary_function.xhtml">   29</a></span>&#160;<span class="keyword">struct </span><a class="code" href="structarmnn_1_1_elementwise_unary_function.xhtml">ElementwiseUnaryFunction</a></div><div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;{</div><div class="line"><a name="l00031"></a><span class="lineno"><a class="line" href="structarmnn_1_1_elementwise_unary_function.xhtml#a8052a16ed0d9f7009e6fd20b8abc1e83">   31</a></span>&#160;    <span class="keyword">using</span> <a class="code" href="structarmnn_1_1_elementwise_unary_function.xhtml#a8052a16ed0d9f7009e6fd20b8abc1e83">OutType</a> = <span class="keyword">typename</span> Functor::result_type;</div><div class="line"><a name="l00032"></a><span class="lineno"><a class="line" href="structarmnn_1_1_elementwise_unary_function.xhtml#a1a362bdd574b01a56e3510002155c29d">   32</a></span>&#160;    <span class="keyword">using</span> <a class="code" href="structarmnn_1_1_elementwise_unary_function.xhtml#a1a362bdd574b01a56e3510002155c29d">InType</a> = <span class="keyword">typename</span> Functor::argument_type;</div><div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;</div><div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;    <a class="code" href="structarmnn_1_1_elementwise_unary_function.xhtml">ElementwiseUnaryFunction</a>(<span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_shape.xhtml">TensorShape</a>&amp; inShape,</div><div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;                             <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_shape.xhtml">TensorShape</a>&amp; outShape,</div><div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;                             <a class="code" href="classarmnn_1_1_decoder.xhtml">Decoder&lt;InType&gt;</a>&amp; inData,</div><div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;                             <a class="code" href="classarmnn_1_1_encoder.xhtml">Encoder&lt;OutType&gt;</a>&amp; outData);</div><div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;};</div><div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;</div><div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> Functor&gt;</div><div class="line"><a name="l00041"></a><span class="lineno"><a class="line" href="structarmnn_1_1_logical_binary_function.xhtml">   41</a></span>&#160;<span class="keyword">struct </span><a class="code" href="structarmnn_1_1_logical_binary_function.xhtml">LogicalBinaryFunction</a></div><div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;{</div><div class="line"><a name="l00043"></a><span class="lineno"><a class="line" href="structarmnn_1_1_logical_binary_function.xhtml#a1925c6964d026112dbab9e9269175cc2">   43</a></span>&#160;    <span class="keyword">using</span> <a class="code" href="structarmnn_1_1_logical_binary_function.xhtml#a1925c6964d026112dbab9e9269175cc2">OutType</a> = bool;</div><div class="line"><a name="l00044"></a><span class="lineno"><a class="line" href="structarmnn_1_1_logical_binary_function.xhtml#a4ab9f2e360be44fa4b4f9c5bd5ce9069">   44</a></span>&#160;    <span class="keyword">using</span> <a class="code" href="structarmnn_1_1_logical_binary_function.xhtml#a4ab9f2e360be44fa4b4f9c5bd5ce9069">InType</a> = bool;</div><div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;</div><div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;    <a class="code" href="structarmnn_1_1_logical_binary_function.xhtml">LogicalBinaryFunction</a>(<span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_shape.xhtml">TensorShape</a>&amp; inShape0,</div><div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;                          <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_shape.xhtml">TensorShape</a>&amp; inShape1,</div><div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;                          <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_shape.xhtml">TensorShape</a>&amp; outShape,</div><div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;                          <a class="code" href="classarmnn_1_1_decoder.xhtml">Decoder&lt;InType&gt;</a>&amp; inData0,</div><div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;                          <a class="code" href="classarmnn_1_1_decoder.xhtml">Decoder&lt;InType&gt;</a>&amp; inData1,</div><div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;                          <a class="code" href="classarmnn_1_1_encoder.xhtml">Encoder&lt;OutType&gt;</a>&amp; outData);</div><div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;};</div><div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;</div><div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> Functor&gt;</div><div class="line"><a name="l00055"></a><span class="lineno"><a class="line" href="structarmnn_1_1_logical_unary_function.xhtml">   55</a></span>&#160;<span class="keyword">struct </span><a class="code" href="structarmnn_1_1_logical_unary_function.xhtml">LogicalUnaryFunction</a></div><div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;{</div><div class="line"><a name="l00057"></a><span class="lineno"><a class="line" href="structarmnn_1_1_logical_unary_function.xhtml#a1925c6964d026112dbab9e9269175cc2">   57</a></span>&#160;    <span class="keyword">using</span> <a class="code" href="structarmnn_1_1_logical_unary_function.xhtml#a1925c6964d026112dbab9e9269175cc2">OutType</a> = bool;</div><div class="line"><a name="l00058"></a><span class="lineno"><a class="line" href="structarmnn_1_1_logical_unary_function.xhtml#a4ab9f2e360be44fa4b4f9c5bd5ce9069">   58</a></span>&#160;    <span class="keyword">using</span> <a class="code" href="structarmnn_1_1_logical_unary_function.xhtml#a4ab9f2e360be44fa4b4f9c5bd5ce9069">InType</a> = bool;</div><div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;</div><div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;    <a class="code" href="structarmnn_1_1_logical_unary_function.xhtml">LogicalUnaryFunction</a>(<span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_shape.xhtml">TensorShape</a>&amp; inShape,</div><div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;                         <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_shape.xhtml">TensorShape</a>&amp; outShape,</div><div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;                         <a class="code" href="classarmnn_1_1_decoder.xhtml">Decoder&lt;InType&gt;</a>&amp; inData,</div><div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;                         <a class="code" href="classarmnn_1_1_encoder.xhtml">Encoder&lt;OutType&gt;</a>&amp; outData);</div><div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;};</div><div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;</div><div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;} <span class="comment">//namespace armnn</span></div><div class="ttc" id="structarmnn_1_1_elementwise_binary_function_xhtml_a4ec36b1d00042fa901f92924e2423500"><div class="ttname"><a href="structarmnn_1_1_elementwise_binary_function.xhtml#a4ec36b1d00042fa901f92924e2423500">armnn::ElementwiseBinaryFunction::InType</a></div><div class="ttdeci">typename Functor::first_argument_type InType</div><div class="ttdef"><b>Definition:</b> <a href="_elementwise_function_8hpp_source.xhtml#l00018">ElementwiseFunction.hpp:18</a></div></div>
<div class="ttc" id="_tensor_8hpp_xhtml"><div class="ttname"><a href="_tensor_8hpp.xhtml">Tensor.hpp</a></div></div>
<div class="ttc" id="structarmnn_1_1_logical_binary_function_xhtml"><div class="ttname"><a href="structarmnn_1_1_logical_binary_function.xhtml">armnn::LogicalBinaryFunction</a></div><div class="ttdef"><b>Definition:</b> <a href="_elementwise_function_8hpp_source.xhtml#l00041">ElementwiseFunction.hpp:41</a></div></div>
<div class="ttc" id="classarmnn_1_1_encoder_xhtml"><div class="ttname"><a href="classarmnn_1_1_encoder.xhtml">armnn::Encoder</a></div><div class="ttdef"><b>Definition:</b> <a href="_base_iterator_8hpp_source.xhtml#l00054">BaseIterator.hpp:54</a></div></div>
<div class="ttc" id="structarmnn_1_1_elementwise_unary_function_xhtml"><div class="ttname"><a href="structarmnn_1_1_elementwise_unary_function.xhtml">armnn::ElementwiseUnaryFunction</a></div><div class="ttdef"><b>Definition:</b> <a href="_elementwise_function_8hpp_source.xhtml#l00029">ElementwiseFunction.hpp:29</a></div></div>
<div class="ttc" id="namespacearmnn_xhtml"><div class="ttname"><a href="namespacearmnn.xhtml">armnn</a></div><div class="ttdoc">Copyright (c) 2021 ARM Limited and Contributors. </div><div class="ttdef"><b>Definition:</b> <a href="01__00__quick__start_8dox_source.xhtml#l00006">01_00_quick_start.dox:6</a></div></div>
<div class="ttc" id="classarmnn_1_1_tensor_shape_xhtml"><div class="ttname"><a href="classarmnn_1_1_tensor_shape.xhtml">armnn::TensorShape</a></div><div class="ttdef"><b>Definition:</b> <a href="_tensor_8hpp_source.xhtml#l00020">Tensor.hpp:20</a></div></div>
<div class="ttc" id="_base_iterator_8hpp_xhtml"><div class="ttname"><a href="_base_iterator_8hpp.xhtml">BaseIterator.hpp</a></div></div>
<div class="ttc" id="structarmnn_1_1_logical_binary_function_xhtml_a4ab9f2e360be44fa4b4f9c5bd5ce9069"><div class="ttname"><a href="structarmnn_1_1_logical_binary_function.xhtml#a4ab9f2e360be44fa4b4f9c5bd5ce9069">armnn::LogicalBinaryFunction::InType</a></div><div class="ttdeci">bool InType</div><div class="ttdef"><b>Definition:</b> <a href="_elementwise_function_8hpp_source.xhtml#l00044">ElementwiseFunction.hpp:44</a></div></div>
<div class="ttc" id="structarmnn_1_1_elementwise_binary_function_xhtml_a12cf00d4ad8e7a82d40b10878fd91507"><div class="ttname"><a href="structarmnn_1_1_elementwise_binary_function.xhtml#a12cf00d4ad8e7a82d40b10878fd91507">armnn::ElementwiseBinaryFunction::ElementwiseBinaryFunction</a></div><div class="ttdeci">ElementwiseBinaryFunction(const TensorShape &amp;inShape0, const TensorShape &amp;inShape1, const TensorShape &amp;outShape, Decoder&lt; InType &gt; &amp;inData0, Decoder&lt; InType &gt; &amp;inData1, Encoder&lt; OutType &gt; &amp;outData)</div><div class="ttdef"><b>Definition:</b> <a href="_elementwise_function_8cpp_source.xhtml#l00023">ElementwiseFunction.cpp:23</a></div></div>
<div class="ttc" id="structarmnn_1_1_elementwise_unary_function_xhtml_a1a362bdd574b01a56e3510002155c29d"><div class="ttname"><a href="structarmnn_1_1_elementwise_unary_function.xhtml#a1a362bdd574b01a56e3510002155c29d">armnn::ElementwiseUnaryFunction::InType</a></div><div class="ttdeci">typename Functor::argument_type InType</div><div class="ttdef"><b>Definition:</b> <a href="_elementwise_function_8hpp_source.xhtml#l00032">ElementwiseFunction.hpp:32</a></div></div>
<div class="ttc" id="structarmnn_1_1_elementwise_unary_function_xhtml_a8052a16ed0d9f7009e6fd20b8abc1e83"><div class="ttname"><a href="structarmnn_1_1_elementwise_unary_function.xhtml#a8052a16ed0d9f7009e6fd20b8abc1e83">armnn::ElementwiseUnaryFunction::OutType</a></div><div class="ttdeci">typename Functor::result_type OutType</div><div class="ttdef"><b>Definition:</b> <a href="_elementwise_function_8hpp_source.xhtml#l00031">ElementwiseFunction.hpp:31</a></div></div>
<div class="ttc" id="structarmnn_1_1_elementwise_binary_function_xhtml_a8052a16ed0d9f7009e6fd20b8abc1e83"><div class="ttname"><a href="structarmnn_1_1_elementwise_binary_function.xhtml#a8052a16ed0d9f7009e6fd20b8abc1e83">armnn::ElementwiseBinaryFunction::OutType</a></div><div class="ttdeci">typename Functor::result_type OutType</div><div class="ttdef"><b>Definition:</b> <a href="_elementwise_function_8hpp_source.xhtml#l00017">ElementwiseFunction.hpp:17</a></div></div>
<div class="ttc" id="structarmnn_1_1_logical_binary_function_xhtml_a1925c6964d026112dbab9e9269175cc2"><div class="ttname"><a href="structarmnn_1_1_logical_binary_function.xhtml#a1925c6964d026112dbab9e9269175cc2">armnn::LogicalBinaryFunction::OutType</a></div><div class="ttdeci">bool OutType</div><div class="ttdef"><b>Definition:</b> <a href="_elementwise_function_8hpp_source.xhtml#l00043">ElementwiseFunction.hpp:43</a></div></div>
<div class="ttc" id="structarmnn_1_1_logical_unary_function_xhtml_a4ab9f2e360be44fa4b4f9c5bd5ce9069"><div class="ttname"><a href="structarmnn_1_1_logical_unary_function.xhtml#a4ab9f2e360be44fa4b4f9c5bd5ce9069">armnn::LogicalUnaryFunction::InType</a></div><div class="ttdeci">bool InType</div><div class="ttdef"><b>Definition:</b> <a href="_elementwise_function_8hpp_source.xhtml#l00058">ElementwiseFunction.hpp:58</a></div></div>
<div class="ttc" id="structarmnn_1_1_elementwise_binary_function_xhtml"><div class="ttname"><a href="structarmnn_1_1_elementwise_binary_function.xhtml">armnn::ElementwiseBinaryFunction</a></div><div class="ttdef"><b>Definition:</b> <a href="_elementwise_function_8hpp_source.xhtml#l00015">ElementwiseFunction.hpp:15</a></div></div>
<div class="ttc" id="structarmnn_1_1_logical_unary_function_xhtml_a1925c6964d026112dbab9e9269175cc2"><div class="ttname"><a href="structarmnn_1_1_logical_unary_function.xhtml#a1925c6964d026112dbab9e9269175cc2">armnn::LogicalUnaryFunction::OutType</a></div><div class="ttdeci">bool OutType</div><div class="ttdef"><b>Definition:</b> <a href="_elementwise_function_8hpp_source.xhtml#l00057">ElementwiseFunction.hpp:57</a></div></div>
<div class="ttc" id="structarmnn_1_1_logical_unary_function_xhtml"><div class="ttname"><a href="structarmnn_1_1_logical_unary_function.xhtml">armnn::LogicalUnaryFunction</a></div><div class="ttdef"><b>Definition:</b> <a href="_elementwise_function_8hpp_source.xhtml#l00055">ElementwiseFunction.hpp:55</a></div></div>
<div class="ttc" id="classarmnn_1_1_decoder_xhtml"><div class="ttname"><a href="classarmnn_1_1_decoder.xhtml">armnn::Decoder</a></div><div class="ttdef"><b>Definition:</b> <a href="_base_iterator_8hpp_source.xhtml#l00037">BaseIterator.hpp:37</a></div></div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="dir_68267d1309a1af8e8297ef4c3efbcdba.xhtml">src</a></li><li class="navelem"><a class="el" href="dir_0f3cdec46afbc61a1ded8e1687c9c9a0.xhtml">backends</a></li><li class="navelem"><a class="el" href="dir_efae4012d0e357ebeaba7d02491d70e5.xhtml">reference</a></li><li class="navelem"><a class="el" href="dir_d2f3b8e2e64df3181ebe92efcc0a3012.xhtml">workloads</a></li><li class="navelem"><a class="el" href="_elementwise_function_8hpp.xhtml">ElementwiseFunction.hpp</a></li>
    <li class="footer">Generated on Fri Feb 24 2023 10:24:27 for ArmNN by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.13 </li>
  </ul>
</div>
</body>
</html>
