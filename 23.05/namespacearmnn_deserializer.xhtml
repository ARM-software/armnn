<!-- Copyright (c) 2020 ARM Limited. -->
<!--                                 -->
<!-- SPDX-License-Identifier: MIT    -->
<!--                                 -->
<!-- HTML header for doxygen 1.8.13-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.17"/>
<meta name="robots" content="NOINDEX, NOFOLLOW" />
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>ArmNN: armnnDeserializer Namespace Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script>
<script type="text/javascript" async="async" src="http://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="stylesheet.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <img alt="ArmNN" src="Arm_NN_horizontal_blue.png" style="max-width: 10rem; margin-top: .5rem; margin-left 10px"/>
  <td style="padding-left: 0.5em;">
   <div id="projectname">
   &#160;<span id="projectnumber">23.05</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.17 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "search",false,'Search');
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(document).ready(function(){initNavTree('namespacearmnn_deserializer.xhtml',''); initResizable(); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="summary">
<a href="#nested-classes">Classes</a> &#124;
<a href="#typedef-members">Typedefs</a> &#124;
<a href="#func-members">Functions</a>  </div>
  <div class="headertitle">
<div class="title">armnnDeserializer Namespace Reference</div>  </div>
</div><!--header-->
<div class="contents">
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="nested-classes"></a>
Classes</h2></td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structarmnn_deserializer_1_1_binding_point_info.xhtml">BindingPointInfo</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_deserializer_1_1_i_deserializer.xhtml">IDeserializer</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="typedef-members"></a>
Typedefs</h2></td></tr>
<tr class="memitem:ad33c6040680106b9af566d7269d8c949"><td class="memItemLeft" align="right" valign="top">using&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearmnn_deserializer.xhtml#ad33c6040680106b9af566d7269d8c949">IDeserializerPtr</a> = std::unique_ptr&lt; <a class="el" href="classarmnn_deserializer_1_1_i_deserializer.xhtml">IDeserializer</a>, void(*)(<a class="el" href="classarmnn_deserializer_1_1_i_deserializer.xhtml">IDeserializer</a> *parser)&gt;</td></tr>
<tr class="separator:ad33c6040680106b9af566d7269d8c949"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a68b76ee033fdd629404369171c3d4f90"><td class="memItemLeft" align="right" valign="top">using&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearmnn_deserializer.xhtml#a68b76ee033fdd629404369171c3d4f90">ConstTensorRawPtr</a> = const armnnSerializer::ConstTensor *</td></tr>
<tr class="separator:a68b76ee033fdd629404369171c3d4f90"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a38c1f8ba8e51364802669c968cf98ff5"><td class="memItemLeft" align="right" valign="top">using&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearmnn_deserializer.xhtml#a38c1f8ba8e51364802669c968cf98ff5">GraphPtr</a> = const armnnSerializer::SerializedGraph *</td></tr>
<tr class="separator:a38c1f8ba8e51364802669c968cf98ff5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a80888061963ddd18e87105807a035d9a"><td class="memItemLeft" align="right" valign="top">using&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearmnn_deserializer.xhtml#a80888061963ddd18e87105807a035d9a">TensorRawPtr</a> = const armnnSerializer::TensorInfo *</td></tr>
<tr class="separator:a80888061963ddd18e87105807a035d9a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7e75f47f676327bce37149932aa4a011"><td class="memItemLeft" align="right" valign="top">using&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearmnn_deserializer.xhtml#a7e75f47f676327bce37149932aa4a011">Pooling2dDescriptor</a> = const armnnSerializer::Pooling2dDescriptor *</td></tr>
<tr class="separator:a7e75f47f676327bce37149932aa4a011"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6713b8a83104db317823b5367b195d2e"><td class="memItemLeft" align="right" valign="top">using&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearmnn_deserializer.xhtml#a6713b8a83104db317823b5367b195d2e">Pooling3dDescriptor</a> = const armnnSerializer::Pooling3dDescriptor *</td></tr>
<tr class="separator:a6713b8a83104db317823b5367b195d2e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2a282cf18fcfe848b47e946327ca1048"><td class="memItemLeft" align="right" valign="top">using&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearmnn_deserializer.xhtml#a2a282cf18fcfe848b47e946327ca1048">NormalizationDescriptorPtr</a> = const armnnSerializer::NormalizationDescriptor *</td></tr>
<tr class="separator:a2a282cf18fcfe848b47e946327ca1048"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a15397ee26bc4b7d3a459b05e457be428"><td class="memItemLeft" align="right" valign="top">using&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearmnn_deserializer.xhtml#a15397ee26bc4b7d3a459b05e457be428">LstmDescriptorPtr</a> = const armnnSerializer::LstmDescriptor *</td></tr>
<tr class="separator:a15397ee26bc4b7d3a459b05e457be428"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a93460fcf78d1b2dcab72dd8378739145"><td class="memItemLeft" align="right" valign="top">using&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearmnn_deserializer.xhtml#a93460fcf78d1b2dcab72dd8378739145">LstmInputParamsPtr</a> = const armnnSerializer::LstmInputParams *</td></tr>
<tr class="separator:a93460fcf78d1b2dcab72dd8378739145"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5cd994198e775b8e919853fd0da5b9c1"><td class="memItemLeft" align="right" valign="top">using&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearmnn_deserializer.xhtml#a5cd994198e775b8e919853fd0da5b9c1">QLstmDescriptorPtr</a> = const armnnSerializer::QLstmDescriptor *</td></tr>
<tr class="separator:a5cd994198e775b8e919853fd0da5b9c1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7acf3a0a92158bf8a2df8ab5467ad6f4"><td class="memItemLeft" align="right" valign="top">using&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearmnn_deserializer.xhtml#a7acf3a0a92158bf8a2df8ab5467ad6f4">QunatizedLstmInputParamsPtr</a> = const armnnSerializer::QuantizedLstmInputParams *</td></tr>
<tr class="separator:a7acf3a0a92158bf8a2df8ab5467ad6f4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:abd8bee7fb9b86485a60bc7ee05114270"><td class="memItemLeft" align="right" valign="top">using&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearmnn_deserializer.xhtml#abd8bee7fb9b86485a60bc7ee05114270">TensorRawPtrVector</a> = std::vector&lt; <a class="el" href="namespacearmnn_deserializer.xhtml#a80888061963ddd18e87105807a035d9a">TensorRawPtr</a> &gt;</td></tr>
<tr class="separator:abd8bee7fb9b86485a60bc7ee05114270"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a39be8e36d57d85162d1d72c320bc22f6"><td class="memItemLeft" align="right" valign="top">using&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearmnn_deserializer.xhtml#a39be8e36d57d85162d1d72c320bc22f6">LayerRawPtr</a> = const armnnSerializer::LayerBase *</td></tr>
<tr class="separator:a39be8e36d57d85162d1d72c320bc22f6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a91ade61b5704e4f2c38c263c2be148ef"><td class="memItemLeft" align="right" valign="top">using&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearmnn_deserializer.xhtml#a91ade61b5704e4f2c38c263c2be148ef">LayerBaseRawPtr</a> = const armnnSerializer::LayerBase *</td></tr>
<tr class="separator:a91ade61b5704e4f2c38c263c2be148ef"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aaabcc180b1c18918e92459fc282848c1"><td class="memItemLeft" align="right" valign="top">using&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearmnn_deserializer.xhtml#aaabcc180b1c18918e92459fc282848c1">LayerBaseRawPtrVector</a> = std::vector&lt; <a class="el" href="namespacearmnn_deserializer.xhtml#a91ade61b5704e4f2c38c263c2be148ef">LayerBaseRawPtr</a> &gt;</td></tr>
<tr class="separator:aaabcc180b1c18918e92459fc282848c1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9eb5db921d6fa5015a57916a5d0c7cd9"><td class="memItemLeft" align="right" valign="top">using&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearmnn_deserializer.xhtml#a9eb5db921d6fa5015a57916a5d0c7cd9">UnidirectionalSequenceLstmDescriptorPtr</a> = const armnnSerializer::UnidirectionalSequenceLstmDescriptor *</td></tr>
<tr class="separator:a9eb5db921d6fa5015a57916a5d0c7cd9"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="func-members"></a>
Functions</h2></td></tr>
<tr class="memitem:a97b50f22cd99f0e09e6e48d20a35f6b2"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearmnn_deserializer.xhtml#a97b50f22cd99f0e09e6e48d20a35f6b2">CheckShape</a> (const <a class="el" href="classarmnn_1_1_tensor_shape.xhtml">armnn::TensorShape</a> &amp;actual, const std::vector&lt; uint32_t &gt; &amp;expected)</td></tr>
<tr class="separator:a97b50f22cd99f0e09e6e48d20a35f6b2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aede2265569640ae0af1c5520c8a66829"><td class="memItemLeft" align="right" valign="top"><a class="el" href="namespacearmnn.xhtml#ad1d5cce2d9e9a5d61c243e5c989112e0">armnn::DataLayout</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearmnn_deserializer.xhtml#aede2265569640ae0af1c5520c8a66829">ToDataLayout</a> (armnnSerializer::DataLayout dataLayout)</td></tr>
<tr class="separator:aede2265569640ae0af1c5520c8a66829"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2ee1264a9803ff8dc1323a26f1f4c986"><td class="memItemLeft" align="right" valign="top"><a class="el" href="namespacearmnn.xhtml#a56297e0f7b215eea46c818cb7528d9ea">armnn::ActivationFunction</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearmnn_deserializer.xhtml#a2ee1264a9803ff8dc1323a26f1f4c986">ToActivationFunction</a> (armnnSerializer::ActivationFunction function)</td></tr>
<tr class="separator:a2ee1264a9803ff8dc1323a26f1f4c986"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8fb47fe218330370a5c9c066ac1571ea"><td class="memItemLeft" align="right" valign="top"><a class="el" href="namespacearmnn.xhtml#ae7e8cbf71db6a490789ca6dcaa8deeae">armnn::ArgMinMaxFunction</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearmnn_deserializer.xhtml#a8fb47fe218330370a5c9c066ac1571ea">ToArgMinMaxFunction</a> (armnnSerializer::ArgMinMaxFunction function)</td></tr>
<tr class="separator:a8fb47fe218330370a5c9c066ac1571ea"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a28f896fb78cdf6607b61c196c98b2570"><td class="memItemLeft" align="right" valign="top"><a class="el" href="namespacearmnn.xhtml#a2d299363c9fc33334c571fa29ca4f58c">armnn::ComparisonOperation</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearmnn_deserializer.xhtml#a28f896fb78cdf6607b61c196c98b2570">ToComparisonOperation</a> (armnnSerializer::ComparisonOperation operation)</td></tr>
<tr class="separator:a28f896fb78cdf6607b61c196c98b2570"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:afa869143574c5885c6ad75f5a6f0333d"><td class="memItemLeft" align="right" valign="top"><a class="el" href="namespacearmnn.xhtml#abc05539fc6e7907f32ef0fb242e3b3b0">armnn::ReduceOperation</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearmnn_deserializer.xhtml#afa869143574c5885c6ad75f5a6f0333d">ToReduceOperation</a> (armnnSerializer::ReduceOperation operation)</td></tr>
<tr class="separator:afa869143574c5885c6ad75f5a6f0333d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2ccbea2c0078ba1d34c2ac48a8bdd342"><td class="memItemLeft" align="right" valign="top"><a class="el" href="namespacearmnn.xhtml#a2da4db0140d1a6dc69c9c82e9ef5379e">armnn::LogicalBinaryOperation</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearmnn_deserializer.xhtml#a2ccbea2c0078ba1d34c2ac48a8bdd342">ToLogicalBinaryOperation</a> (armnnSerializer::LogicalBinaryOperation operation)</td></tr>
<tr class="separator:a2ccbea2c0078ba1d34c2ac48a8bdd342"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3bb16a8c4f68fd2dfde128f1dc623571"><td class="memItemLeft" align="right" valign="top"><a class="el" href="namespacearmnn.xhtml#ac4f8557279754ed7b3f749d55b0e3047">armnn::BinaryOperation</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearmnn_deserializer.xhtml#a3bb16a8c4f68fd2dfde128f1dc623571">ToElementwiseBinaryOperation</a> (armnnSerializer::BinaryOperation operation)</td></tr>
<tr class="separator:a3bb16a8c4f68fd2dfde128f1dc623571"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9c11dfb7a73226061b83ecd995b91582"><td class="memItemLeft" align="right" valign="top"><a class="el" href="namespacearmnn.xhtml#a1cfaa710db2a54673b21d2ea2da757c8">armnn::UnaryOperation</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearmnn_deserializer.xhtml#a9c11dfb7a73226061b83ecd995b91582">ToElementwiseUnaryOperation</a> (armnnSerializer::UnaryOperation operation)</td></tr>
<tr class="separator:a9c11dfb7a73226061b83ecd995b91582"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac33cddeda1d847c4a17d679ea1dab6be"><td class="memItemLeft" align="right" valign="top"><a class="el" href="namespacearmnn.xhtml#a14d24d90ab4ba2956e92e27890ba4c91">armnn::PaddingMode</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearmnn_deserializer.xhtml#ac33cddeda1d847c4a17d679ea1dab6be">ToPaddingMode</a> (armnnSerializer::PaddingMode paddingMode)</td></tr>
<tr class="separator:ac33cddeda1d847c4a17d679ea1dab6be"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8b51e137fab21d758b965c6c6e3b02f3"><td class="memItemLeft" align="right" valign="top"><a class="el" href="namespacearmnn.xhtml#a9a2af2f8c4af4f9efa8e79417d505ac4">armnn::ResizeMethod</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearmnn_deserializer.xhtml#a8b51e137fab21d758b965c6c6e3b02f3">ToResizeMethod</a> (armnnSerializer::ResizeMethod method)</td></tr>
<tr class="separator:a8b51e137fab21d758b965c6c6e3b02f3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a948b8c615ff06defa3b80d2352259ff2"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classarmnn_1_1_tensor_info.xhtml">armnn::TensorInfo</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearmnn_deserializer.xhtml#a948b8c615ff06defa3b80d2352259ff2">ToTensorInfo</a> (<a class="el" href="namespacearmnn_deserializer.xhtml#a80888061963ddd18e87105807a035d9a">TensorRawPtr</a> tensorPtr)</td></tr>
<tr class="separator:a948b8c615ff06defa3b80d2352259ff2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9f1aae5d3ce2b27d619725fb3cee38da"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classarmnn_1_1_const_tensor.xhtml">armnn::ConstTensor</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearmnn_deserializer.xhtml#a9f1aae5d3ce2b27d619725fb3cee38da">ToConstTensor</a> (<a class="el" href="namespacearmnn_deserializer.xhtml#a68b76ee033fdd629404369171c3d4f90">ConstTensorRawPtr</a> constTensorPtr)</td></tr>
<tr class="separator:a9f1aae5d3ce2b27d619725fb3cee38da"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a63d3841a5ebb0a5ce572cfb4cb634376"><td class="memItemLeft" align="right" valign="top">const armnnSerializer::OriginsDescriptor *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearmnn_deserializer.xhtml#a63d3841a5ebb0a5ce572cfb4cb634376">GetOriginsDescriptor</a> (const armnnSerializer::SerializedGraph *graph, unsigned int layerIndex)</td></tr>
<tr class="separator:a63d3841a5ebb0a5ce572cfb4cb634376"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<h2 class="groupheader">Typedef Documentation</h2>
<a id="a68b76ee033fdd629404369171c3d4f90"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a68b76ee033fdd629404369171c3d4f90">&#9670;&nbsp;</a></span>ConstTensorRawPtr</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">using <a class="el" href="namespacearmnn_deserializer.xhtml#a68b76ee033fdd629404369171c3d4f90">ConstTensorRawPtr</a> =  const armnnSerializer::ConstTensor *</td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_deserializer_8hpp_source.xhtml#l00018">18</a> of file <a class="el" href="_deserializer_8hpp_source.xhtml">Deserializer.hpp</a>.</p>

</div>
</div>
<a id="a38c1f8ba8e51364802669c968cf98ff5"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a38c1f8ba8e51364802669c968cf98ff5">&#9670;&nbsp;</a></span>GraphPtr</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">using <a class="el" href="namespacearmnn_deserializer.xhtml#a38c1f8ba8e51364802669c968cf98ff5">GraphPtr</a> =  const armnnSerializer::SerializedGraph *</td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_deserializer_8hpp_source.xhtml#l00019">19</a> of file <a class="el" href="_deserializer_8hpp_source.xhtml">Deserializer.hpp</a>.</p>

</div>
</div>
<a id="ad33c6040680106b9af566d7269d8c949"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ad33c6040680106b9af566d7269d8c949">&#9670;&nbsp;</a></span>IDeserializerPtr</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">using <a class="el" href="namespacearmnn_deserializer.xhtml#ad33c6040680106b9af566d7269d8c949">IDeserializerPtr</a> =  std::unique_ptr&lt;<a class="el" href="classarmnn_deserializer_1_1_i_deserializer.xhtml">IDeserializer</a>, void(*)(<a class="el" href="classarmnn_deserializer_1_1_i_deserializer.xhtml">IDeserializer</a>* parser)&gt;</td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_i_deserializer_8hpp_source.xhtml#l00025">25</a> of file <a class="el" href="_i_deserializer_8hpp_source.xhtml">IDeserializer.hpp</a>.</p>

</div>
</div>
<a id="a91ade61b5704e4f2c38c263c2be148ef"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a91ade61b5704e4f2c38c263c2be148ef">&#9670;&nbsp;</a></span>LayerBaseRawPtr</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">using <a class="el" href="namespacearmnn_deserializer.xhtml#a91ade61b5704e4f2c38c263c2be148ef">LayerBaseRawPtr</a> =  const armnnSerializer::LayerBase *</td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_deserializer_8hpp_source.xhtml#l00030">30</a> of file <a class="el" href="_deserializer_8hpp_source.xhtml">Deserializer.hpp</a>.</p>

</div>
</div>
<a id="aaabcc180b1c18918e92459fc282848c1"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aaabcc180b1c18918e92459fc282848c1">&#9670;&nbsp;</a></span>LayerBaseRawPtrVector</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">using <a class="el" href="namespacearmnn_deserializer.xhtml#aaabcc180b1c18918e92459fc282848c1">LayerBaseRawPtrVector</a> =  std::vector&lt;<a class="el" href="namespacearmnn_deserializer.xhtml#a91ade61b5704e4f2c38c263c2be148ef">LayerBaseRawPtr</a>&gt;</td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_deserializer_8hpp_source.xhtml#l00031">31</a> of file <a class="el" href="_deserializer_8hpp_source.xhtml">Deserializer.hpp</a>.</p>

</div>
</div>
<a id="a39be8e36d57d85162d1d72c320bc22f6"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a39be8e36d57d85162d1d72c320bc22f6">&#9670;&nbsp;</a></span>LayerRawPtr</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">using <a class="el" href="namespacearmnn_deserializer.xhtml#a39be8e36d57d85162d1d72c320bc22f6">LayerRawPtr</a> =  const armnnSerializer::LayerBase *</td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_deserializer_8hpp_source.xhtml#l00029">29</a> of file <a class="el" href="_deserializer_8hpp_source.xhtml">Deserializer.hpp</a>.</p>

</div>
</div>
<a id="a15397ee26bc4b7d3a459b05e457be428"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a15397ee26bc4b7d3a459b05e457be428">&#9670;&nbsp;</a></span>LstmDescriptorPtr</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">using <a class="el" href="namespacearmnn_deserializer.xhtml#a15397ee26bc4b7d3a459b05e457be428">LstmDescriptorPtr</a> =  const armnnSerializer::LstmDescriptor *</td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_deserializer_8hpp_source.xhtml#l00024">24</a> of file <a class="el" href="_deserializer_8hpp_source.xhtml">Deserializer.hpp</a>.</p>

</div>
</div>
<a id="a93460fcf78d1b2dcab72dd8378739145"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a93460fcf78d1b2dcab72dd8378739145">&#9670;&nbsp;</a></span>LstmInputParamsPtr</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">using <a class="el" href="namespacearmnn_deserializer.xhtml#a93460fcf78d1b2dcab72dd8378739145">LstmInputParamsPtr</a> =  const armnnSerializer::LstmInputParams *</td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_deserializer_8hpp_source.xhtml#l00025">25</a> of file <a class="el" href="_deserializer_8hpp_source.xhtml">Deserializer.hpp</a>.</p>

</div>
</div>
<a id="a2a282cf18fcfe848b47e946327ca1048"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a2a282cf18fcfe848b47e946327ca1048">&#9670;&nbsp;</a></span>NormalizationDescriptorPtr</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">using <a class="el" href="namespacearmnn_deserializer.xhtml#a2a282cf18fcfe848b47e946327ca1048">NormalizationDescriptorPtr</a> =  const armnnSerializer::NormalizationDescriptor *</td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_deserializer_8hpp_source.xhtml#l00023">23</a> of file <a class="el" href="_deserializer_8hpp_source.xhtml">Deserializer.hpp</a>.</p>

</div>
</div>
<a id="a7e75f47f676327bce37149932aa4a011"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a7e75f47f676327bce37149932aa4a011">&#9670;&nbsp;</a></span>Pooling2dDescriptor</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">using <a class="el" href="namespacearmnn_deserializer.xhtml#a7e75f47f676327bce37149932aa4a011">Pooling2dDescriptor</a> =  const armnnSerializer::Pooling2dDescriptor *</td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_deserializer_8hpp_source.xhtml#l00021">21</a> of file <a class="el" href="_deserializer_8hpp_source.xhtml">Deserializer.hpp</a>.</p>

</div>
</div>
<a id="a6713b8a83104db317823b5367b195d2e"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a6713b8a83104db317823b5367b195d2e">&#9670;&nbsp;</a></span>Pooling3dDescriptor</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">using <a class="el" href="namespacearmnn_deserializer.xhtml#a6713b8a83104db317823b5367b195d2e">Pooling3dDescriptor</a> =  const armnnSerializer::Pooling3dDescriptor *</td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_deserializer_8hpp_source.xhtml#l00022">22</a> of file <a class="el" href="_deserializer_8hpp_source.xhtml">Deserializer.hpp</a>.</p>

</div>
</div>
<a id="a5cd994198e775b8e919853fd0da5b9c1"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a5cd994198e775b8e919853fd0da5b9c1">&#9670;&nbsp;</a></span>QLstmDescriptorPtr</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">using <a class="el" href="namespacearmnn_deserializer.xhtml#a5cd994198e775b8e919853fd0da5b9c1">QLstmDescriptorPtr</a> =  const armnnSerializer::QLstmDescriptor *</td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_deserializer_8hpp_source.xhtml#l00026">26</a> of file <a class="el" href="_deserializer_8hpp_source.xhtml">Deserializer.hpp</a>.</p>

</div>
</div>
<a id="a7acf3a0a92158bf8a2df8ab5467ad6f4"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a7acf3a0a92158bf8a2df8ab5467ad6f4">&#9670;&nbsp;</a></span>QunatizedLstmInputParamsPtr</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">using <a class="el" href="namespacearmnn_deserializer.xhtml#a7acf3a0a92158bf8a2df8ab5467ad6f4">QunatizedLstmInputParamsPtr</a> =  const armnnSerializer::QuantizedLstmInputParams *</td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_deserializer_8hpp_source.xhtml#l00027">27</a> of file <a class="el" href="_deserializer_8hpp_source.xhtml">Deserializer.hpp</a>.</p>

</div>
</div>
<a id="a80888061963ddd18e87105807a035d9a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a80888061963ddd18e87105807a035d9a">&#9670;&nbsp;</a></span>TensorRawPtr</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">using <a class="el" href="namespacearmnn_deserializer.xhtml#a80888061963ddd18e87105807a035d9a">TensorRawPtr</a> =  const armnnSerializer::TensorInfo *</td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_deserializer_8hpp_source.xhtml#l00020">20</a> of file <a class="el" href="_deserializer_8hpp_source.xhtml">Deserializer.hpp</a>.</p>

</div>
</div>
<a id="abd8bee7fb9b86485a60bc7ee05114270"></a>
<h2 class="memtitle"><span class="permalink"><a href="#abd8bee7fb9b86485a60bc7ee05114270">&#9670;&nbsp;</a></span>TensorRawPtrVector</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">using <a class="el" href="namespacearmnn_deserializer.xhtml#abd8bee7fb9b86485a60bc7ee05114270">TensorRawPtrVector</a> =  std::vector&lt;<a class="el" href="namespacearmnn_deserializer.xhtml#a80888061963ddd18e87105807a035d9a">TensorRawPtr</a>&gt;</td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_deserializer_8hpp_source.xhtml#l00028">28</a> of file <a class="el" href="_deserializer_8hpp_source.xhtml">Deserializer.hpp</a>.</p>

</div>
</div>
<a id="a9eb5db921d6fa5015a57916a5d0c7cd9"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a9eb5db921d6fa5015a57916a5d0c7cd9">&#9670;&nbsp;</a></span>UnidirectionalSequenceLstmDescriptorPtr</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">using <a class="el" href="namespacearmnn_deserializer.xhtml#a9eb5db921d6fa5015a57916a5d0c7cd9">UnidirectionalSequenceLstmDescriptorPtr</a> =  const armnnSerializer::UnidirectionalSequenceLstmDescriptor *</td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_deserializer_8hpp_source.xhtml#l00032">32</a> of file <a class="el" href="_deserializer_8hpp_source.xhtml">Deserializer.hpp</a>.</p>

</div>
</div>
<h2 class="groupheader">Function Documentation</h2>
<a id="a97b50f22cd99f0e09e6e48d20a35f6b2"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a97b50f22cd99f0e09e6e48d20a35f6b2">&#9670;&nbsp;</a></span>CheckShape()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool armnnDeserializer::CheckShape </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_tensor_shape.xhtml">armnn::TensorShape</a> &amp;&#160;</td>
          <td class="paramname"><em>actual</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const std::vector&lt; uint32_t &gt; &amp;&#160;</td>
          <td class="paramname"><em>expected</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_deserializer_8cpp_source.xhtml#l00188">188</a> of file <a class="el" href="_deserializer_8cpp_source.xhtml">Deserializer.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00189"></a><span class="lineno">  189</span>&#160;{</div>
<div class="line"><a name="l00190"></a><span class="lineno">  190</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> actualSize = actual.<a class="code" href="classarmnn_1_1_tensor_shape.xhtml#a157e27d41e9f6b21f0d3c025fa47dc24">GetNumDimensions</a>();</div>
<div class="line"><a name="l00191"></a><span class="lineno">  191</span>&#160;    <span class="keywordflow">if</span> (actualSize != expected.size())</div>
<div class="line"><a name="l00192"></a><span class="lineno">  192</span>&#160;    {</div>
<div class="line"><a name="l00193"></a><span class="lineno">  193</span>&#160;        <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line"><a name="l00194"></a><span class="lineno">  194</span>&#160;    }</div>
<div class="line"><a name="l00195"></a><span class="lineno">  195</span>&#160; </div>
<div class="line"><a name="l00196"></a><span class="lineno">  196</span>&#160;    <span class="keywordflow">for</span> (<span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> i = 0u; i &lt; actualSize; i++)</div>
<div class="line"><a name="l00197"></a><span class="lineno">  197</span>&#160;    {</div>
<div class="line"><a name="l00198"></a><span class="lineno">  198</span>&#160;        <span class="keywordflow">if</span> (actual[i] != <span class="keyword">static_cast&lt;</span><span class="keywordtype">unsigned</span> <span class="keywordtype">int</span><span class="keyword">&gt;</span>(expected[i]))</div>
<div class="line"><a name="l00199"></a><span class="lineno">  199</span>&#160;        {</div>
<div class="line"><a name="l00200"></a><span class="lineno">  200</span>&#160;            <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line"><a name="l00201"></a><span class="lineno">  201</span>&#160;        }</div>
<div class="line"><a name="l00202"></a><span class="lineno">  202</span>&#160;    }</div>
<div class="line"><a name="l00203"></a><span class="lineno">  203</span>&#160; </div>
<div class="line"><a name="l00204"></a><span class="lineno">  204</span>&#160;    <span class="keywordflow">return</span> <span class="keyword">true</span>;</div>
<div class="line"><a name="l00205"></a><span class="lineno">  205</span>&#160;}</div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="_tensor_8cpp_source.xhtml#l00174">TensorShape::GetNumDimensions()</a>.</p>

</div>
</div>
<a id="a63d3841a5ebb0a5ce572cfb4cb634376"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a63d3841a5ebb0a5ce572cfb4cb634376">&#9670;&nbsp;</a></span>GetOriginsDescriptor()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">const armnnSerializer::OriginsDescriptor* armnnDeserializer::GetOriginsDescriptor </td>
          <td>(</td>
          <td class="paramtype">const armnnSerializer::SerializedGraph *&#160;</td>
          <td class="paramname"><em>graph</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">unsigned int&#160;</td>
          <td class="paramname"><em>layerIndex</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_deserializer_8cpp_source.xhtml#l01997">1997</a> of file <a class="el" href="_deserializer_8cpp_source.xhtml">Deserializer.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l01999"></a><span class="lineno"> 1999</span>&#160;{</div>
<div class="line"><a name="l02000"></a><span class="lineno"> 2000</span>&#160;    <span class="keyword">auto</span> layerType = graph-&gt;layers()-&gt;Get(layerIndex)-&gt;layer_type();</div>
<div class="line"><a name="l02001"></a><span class="lineno"> 2001</span>&#160; </div>
<div class="line"><a name="l02002"></a><span class="lineno"> 2002</span>&#160;    <span class="keywordflow">switch</span> (layerType)</div>
<div class="line"><a name="l02003"></a><span class="lineno"> 2003</span>&#160;    {</div>
<div class="line"><a name="l02004"></a><span class="lineno"> 2004</span>&#160;        <span class="keywordflow">case</span> Layer::Layer_ConcatLayer:</div>
<div class="line"><a name="l02005"></a><span class="lineno"> 2005</span>&#160;            <span class="keywordflow">return</span> graph-&gt;layers()-&gt;Get(layerIndex)-&gt;layer_as_ConcatLayer()-&gt;descriptor();</div>
<div class="line"><a name="l02006"></a><span class="lineno"> 2006</span>&#160;        <span class="keywordflow">case</span> Layer::Layer_MergerLayer:</div>
<div class="line"><a name="l02007"></a><span class="lineno"> 2007</span>&#160;            <span class="keywordflow">return</span> graph-&gt;layers()-&gt;Get(layerIndex)-&gt;layer_as_MergerLayer()-&gt;descriptor();</div>
<div class="line"><a name="l02008"></a><span class="lineno"> 2008</span>&#160;        <span class="keywordflow">default</span>:</div>
<div class="line"><a name="l02009"></a><span class="lineno"> 2009</span>&#160;            <span class="keywordflow">throw</span> <a class="code" href="classarmnn_1_1_exception.xhtml">armnn::Exception</a>(<span class="stringliteral">&quot;unknown layer type, should be concat or merger&quot;</span>);</div>
<div class="line"><a name="l02010"></a><span class="lineno"> 2010</span>&#160;    }</div>
<div class="line"><a name="l02011"></a><span class="lineno"> 2011</span>&#160;}</div>
</div><!-- fragment -->
</div>
</div>
<a id="a2ee1264a9803ff8dc1323a26f1f4c986"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a2ee1264a9803ff8dc1323a26f1f4c986">&#9670;&nbsp;</a></span>ToActivationFunction()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="namespacearmnn.xhtml#a56297e0f7b215eea46c818cb7528d9ea">armnn::ActivationFunction</a> armnnDeserializer::ToActivationFunction </td>
          <td>(</td>
          <td class="paramtype">armnnSerializer::ActivationFunction&#160;</td>
          <td class="paramname"><em>function</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_deserializer_8cpp_source.xhtml#l00473">473</a> of file <a class="el" href="_deserializer_8cpp_source.xhtml">Deserializer.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00474"></a><span class="lineno">  474</span>&#160;{</div>
<div class="line"><a name="l00475"></a><span class="lineno">  475</span>&#160;    <span class="keywordflow">switch</span> (<span class="keyword">function</span>)</div>
<div class="line"><a name="l00476"></a><span class="lineno">  476</span>&#160;    {</div>
<div class="line"><a name="l00477"></a><span class="lineno">  477</span>&#160;        <span class="keywordflow">case</span> armnnSerializer::ActivationFunction_Sigmoid:</div>
<div class="line"><a name="l00478"></a><span class="lineno">  478</span>&#160;            <span class="keywordflow">return</span> <a class="code" href="namespacearmnn.xhtml#a56297e0f7b215eea46c818cb7528d9eaa21eebb164e4b8b9bcf64fdb4d8d5dff4">armnn::ActivationFunction::Sigmoid</a>;</div>
<div class="line"><a name="l00479"></a><span class="lineno">  479</span>&#160;        <span class="keywordflow">case</span> armnnSerializer::ActivationFunction_TanH:</div>
<div class="line"><a name="l00480"></a><span class="lineno">  480</span>&#160;            <span class="keywordflow">return</span> <a class="code" href="namespacearmnn.xhtml#a56297e0f7b215eea46c818cb7528d9eaa23b68da1de2b77d74da9da2635722a3e">armnn::ActivationFunction::TanH</a>;</div>
<div class="line"><a name="l00481"></a><span class="lineno">  481</span>&#160;        <span class="keywordflow">case</span> armnnSerializer::ActivationFunction_Linear:</div>
<div class="line"><a name="l00482"></a><span class="lineno">  482</span>&#160;            <span class="keywordflow">return</span> <a class="code" href="namespacearmnn.xhtml#a56297e0f7b215eea46c818cb7528d9eaa32a843da6ea40ab3b17a3421ccdf671b">armnn::ActivationFunction::Linear</a>;</div>
<div class="line"><a name="l00483"></a><span class="lineno">  483</span>&#160;        <span class="keywordflow">case</span> armnnSerializer::ActivationFunction_ReLu:</div>
<div class="line"><a name="l00484"></a><span class="lineno">  484</span>&#160;            <span class="keywordflow">return</span> <a class="code" href="namespacearmnn.xhtml#a56297e0f7b215eea46c818cb7528d9eaa3d90c0a5ab3fcf8e6f6608cb3d3a1559">armnn::ActivationFunction::ReLu</a>;</div>
<div class="line"><a name="l00485"></a><span class="lineno">  485</span>&#160;        <span class="keywordflow">case</span> armnnSerializer::ActivationFunction_BoundedReLu:</div>
<div class="line"><a name="l00486"></a><span class="lineno">  486</span>&#160;            <span class="keywordflow">return</span> <a class="code" href="namespacearmnn.xhtml#a56297e0f7b215eea46c818cb7528d9eaabc5a0f0d6e7cf7fca73299dcd46c0f0d">armnn::ActivationFunction::BoundedReLu</a>;</div>
<div class="line"><a name="l00487"></a><span class="lineno">  487</span>&#160;        <span class="keywordflow">case</span> armnnSerializer::ActivationFunction_LeakyReLu:</div>
<div class="line"><a name="l00488"></a><span class="lineno">  488</span>&#160;            <span class="keywordflow">return</span> <a class="code" href="namespacearmnn.xhtml#a56297e0f7b215eea46c818cb7528d9eaacb7667f5ec2f6e8a5943b781ba6c2735">armnn::ActivationFunction::LeakyReLu</a>;</div>
<div class="line"><a name="l00489"></a><span class="lineno">  489</span>&#160;        <span class="keywordflow">case</span> armnnSerializer::ActivationFunction_Abs:</div>
<div class="line"><a name="l00490"></a><span class="lineno">  490</span>&#160;            <span class="keywordflow">return</span> <a class="code" href="namespacearmnn.xhtml#a56297e0f7b215eea46c818cb7528d9eaa1e34af023adeb7d5f484f8eb4b9826b6">armnn::ActivationFunction::Abs</a>;</div>
<div class="line"><a name="l00491"></a><span class="lineno">  491</span>&#160;        <span class="keywordflow">case</span> armnnSerializer::ActivationFunction_Sqrt:</div>
<div class="line"><a name="l00492"></a><span class="lineno">  492</span>&#160;            <span class="keywordflow">return</span> <a class="code" href="namespacearmnn.xhtml#a56297e0f7b215eea46c818cb7528d9eaaae77f3ad25595e35b327334d89410054">armnn::ActivationFunction::Sqrt</a>;</div>
<div class="line"><a name="l00493"></a><span class="lineno">  493</span>&#160;        <span class="keywordflow">case</span> armnnSerializer::ActivationFunction_Square:</div>
<div class="line"><a name="l00494"></a><span class="lineno">  494</span>&#160;            <span class="keywordflow">return</span> <a class="code" href="namespacearmnn.xhtml#a56297e0f7b215eea46c818cb7528d9eaaceb46ca115d05c51aa5a16a8867c3304">armnn::ActivationFunction::Square</a>;</div>
<div class="line"><a name="l00495"></a><span class="lineno">  495</span>&#160;        <span class="keywordflow">case</span> armnnSerializer::ActivationFunction_Elu:</div>
<div class="line"><a name="l00496"></a><span class="lineno">  496</span>&#160;            <span class="keywordflow">return</span> <a class="code" href="namespacearmnn.xhtml#a56297e0f7b215eea46c818cb7528d9eaaed67cf7d54c570e4c4891800f085f41d">armnn::ActivationFunction::Elu</a>;</div>
<div class="line"><a name="l00497"></a><span class="lineno">  497</span>&#160;        <span class="keywordflow">case</span> armnnSerializer::ActivationFunction_HardSwish:</div>
<div class="line"><a name="l00498"></a><span class="lineno">  498</span>&#160;            <span class="keywordflow">return</span> <a class="code" href="namespacearmnn.xhtml#a56297e0f7b215eea46c818cb7528d9eaa0877e5b3fbe9d7569df6399609ed0186">armnn::ActivationFunction::HardSwish</a>;</div>
<div class="line"><a name="l00499"></a><span class="lineno">  499</span>&#160;        <span class="keywordflow">default</span>:</div>
<div class="line"><a name="l00500"></a><span class="lineno">  500</span>&#160;            <span class="keywordflow">return</span> <a class="code" href="namespacearmnn.xhtml#a56297e0f7b215eea46c818cb7528d9eaa21eebb164e4b8b9bcf64fdb4d8d5dff4">armnn::ActivationFunction::Sigmoid</a>;</div>
<div class="line"><a name="l00501"></a><span class="lineno">  501</span>&#160;    }</div>
<div class="line"><a name="l00502"></a><span class="lineno">  502</span>&#160;}</div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="namespacearmnn.xhtml#a56297e0f7b215eea46c818cb7528d9eaa1e34af023adeb7d5f484f8eb4b9826b6">armnn::Abs</a>, <a class="el" href="namespacearmnn.xhtml#a56297e0f7b215eea46c818cb7528d9eaabc5a0f0d6e7cf7fca73299dcd46c0f0d">armnn::BoundedReLu</a>, <a class="el" href="namespacearmnn.xhtml#a56297e0f7b215eea46c818cb7528d9eaaed67cf7d54c570e4c4891800f085f41d">armnn::Elu</a>, <a class="el" href="namespacearmnn.xhtml#a56297e0f7b215eea46c818cb7528d9eaa0877e5b3fbe9d7569df6399609ed0186">armnn::HardSwish</a>, <a class="el" href="namespacearmnn.xhtml#a56297e0f7b215eea46c818cb7528d9eaacb7667f5ec2f6e8a5943b781ba6c2735">armnn::LeakyReLu</a>, <a class="el" href="namespacearmnn.xhtml#a56297e0f7b215eea46c818cb7528d9eaa32a843da6ea40ab3b17a3421ccdf671b">armnn::Linear</a>, <a class="el" href="namespacearmnn.xhtml#a56297e0f7b215eea46c818cb7528d9eaa3d90c0a5ab3fcf8e6f6608cb3d3a1559">armnn::ReLu</a>, <a class="el" href="namespacearmnn.xhtml#a56297e0f7b215eea46c818cb7528d9eaa21eebb164e4b8b9bcf64fdb4d8d5dff4">armnn::Sigmoid</a>, <a class="el" href="namespacearmnn.xhtml#a56297e0f7b215eea46c818cb7528d9eaaae77f3ad25595e35b327334d89410054">armnn::Sqrt</a>, <a class="el" href="namespacearmnn.xhtml#a56297e0f7b215eea46c818cb7528d9eaaceb46ca115d05c51aa5a16a8867c3304">armnn::Square</a>, and <a class="el" href="namespacearmnn.xhtml#a56297e0f7b215eea46c818cb7528d9eaa23b68da1de2b77d74da9da2635722a3e">armnn::TanH</a>.</p>

</div>
</div>
<a id="a8fb47fe218330370a5c9c066ac1571ea"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a8fb47fe218330370a5c9c066ac1571ea">&#9670;&nbsp;</a></span>ToArgMinMaxFunction()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="namespacearmnn.xhtml#ae7e8cbf71db6a490789ca6dcaa8deeae">armnn::ArgMinMaxFunction</a> armnnDeserializer::ToArgMinMaxFunction </td>
          <td>(</td>
          <td class="paramtype">armnnSerializer::ArgMinMaxFunction&#160;</td>
          <td class="paramname"><em>function</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_deserializer_8cpp_source.xhtml#l00504">504</a> of file <a class="el" href="_deserializer_8cpp_source.xhtml">Deserializer.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00505"></a><span class="lineno">  505</span>&#160;{</div>
<div class="line"><a name="l00506"></a><span class="lineno">  506</span>&#160;    <span class="keywordflow">switch</span> (<span class="keyword">function</span>)</div>
<div class="line"><a name="l00507"></a><span class="lineno">  507</span>&#160;    {</div>
<div class="line"><a name="l00508"></a><span class="lineno">  508</span>&#160;        <span class="keywordflow">case</span> armnnSerializer::ArgMinMaxFunction::ArgMinMaxFunction_Max:</div>
<div class="line"><a name="l00509"></a><span class="lineno">  509</span>&#160;            <span class="keywordflow">return</span> <a class="code" href="namespacearmnn.xhtml#ae7e8cbf71db6a490789ca6dcaa8deeaea6a061313d22e51e0f25b7cd4dc065233">armnn::ArgMinMaxFunction::Max</a>;</div>
<div class="line"><a name="l00510"></a><span class="lineno">  510</span>&#160;        <span class="keywordflow">case</span> armnnSerializer::ArgMinMaxFunction::ArgMinMaxFunction_Min:</div>
<div class="line"><a name="l00511"></a><span class="lineno">  511</span>&#160;        <span class="keywordflow">default</span>:</div>
<div class="line"><a name="l00512"></a><span class="lineno">  512</span>&#160;            <span class="keywordflow">return</span> <a class="code" href="namespacearmnn.xhtml#ae7e8cbf71db6a490789ca6dcaa8deeaea78d811e98514cd165dda532286610fd2">armnn::ArgMinMaxFunction::Min</a>;</div>
<div class="line"><a name="l00513"></a><span class="lineno">  513</span>&#160;    }</div>
<div class="line"><a name="l00514"></a><span class="lineno">  514</span>&#160;}</div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="namespacearmnn.xhtml#ae7e8cbf71db6a490789ca6dcaa8deeaea6a061313d22e51e0f25b7cd4dc065233">armnn::Max</a>, and <a class="el" href="namespacearmnn.xhtml#ae7e8cbf71db6a490789ca6dcaa8deeaea78d811e98514cd165dda532286610fd2">armnn::Min</a>.</p>

</div>
</div>
<a id="a28f896fb78cdf6607b61c196c98b2570"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a28f896fb78cdf6607b61c196c98b2570">&#9670;&nbsp;</a></span>ToComparisonOperation()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="namespacearmnn.xhtml#a2d299363c9fc33334c571fa29ca4f58c">armnn::ComparisonOperation</a> armnnDeserializer::ToComparisonOperation </td>
          <td>(</td>
          <td class="paramtype">armnnSerializer::ComparisonOperation&#160;</td>
          <td class="paramname"><em>operation</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_deserializer_8cpp_source.xhtml#l00516">516</a> of file <a class="el" href="_deserializer_8cpp_source.xhtml">Deserializer.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00517"></a><span class="lineno">  517</span>&#160;{</div>
<div class="line"><a name="l00518"></a><span class="lineno">  518</span>&#160;    <span class="keywordflow">switch</span> (operation)</div>
<div class="line"><a name="l00519"></a><span class="lineno">  519</span>&#160;    {</div>
<div class="line"><a name="l00520"></a><span class="lineno">  520</span>&#160;        <span class="keywordflow">case</span> armnnSerializer::ComparisonOperation::ComparisonOperation_Equal:</div>
<div class="line"><a name="l00521"></a><span class="lineno">  521</span>&#160;            <span class="keywordflow">return</span> <a class="code" href="namespacearmnn.xhtml#a2d299363c9fc33334c571fa29ca4f58caf5f286e73bda105e538310b3190f75c5">armnn::ComparisonOperation::Equal</a>;</div>
<div class="line"><a name="l00522"></a><span class="lineno">  522</span>&#160;        <span class="keywordflow">case</span> armnnSerializer::ComparisonOperation::ComparisonOperation_Greater:</div>
<div class="line"><a name="l00523"></a><span class="lineno">  523</span>&#160;            <span class="keywordflow">return</span> <a class="code" href="namespacearmnn.xhtml#a2d299363c9fc33334c571fa29ca4f58ca8768a6821cd735aea4f5b0df88c1fc6a">armnn::ComparisonOperation::Greater</a>;</div>
<div class="line"><a name="l00524"></a><span class="lineno">  524</span>&#160;        <span class="keywordflow">case</span> armnnSerializer::ComparisonOperation::ComparisonOperation_GreaterOrEqual:</div>
<div class="line"><a name="l00525"></a><span class="lineno">  525</span>&#160;            <span class="keywordflow">return</span> <a class="code" href="namespacearmnn.xhtml#a2d299363c9fc33334c571fa29ca4f58ca6f2f0aefb3d22da0f3839453add5f937">armnn::ComparisonOperation::GreaterOrEqual</a>;</div>
<div class="line"><a name="l00526"></a><span class="lineno">  526</span>&#160;        <span class="keywordflow">case</span> armnnSerializer::ComparisonOperation::ComparisonOperation_Less:</div>
<div class="line"><a name="l00527"></a><span class="lineno">  527</span>&#160;            <span class="keywordflow">return</span> <a class="code" href="namespacearmnn.xhtml#a2d299363c9fc33334c571fa29ca4f58ca1cfdf0e8d0c87a228c1f40d9bee7888b">armnn::ComparisonOperation::Less</a>;</div>
<div class="line"><a name="l00528"></a><span class="lineno">  528</span>&#160;        <span class="keywordflow">case</span> armnnSerializer::ComparisonOperation::ComparisonOperation_LessOrEqual:</div>
<div class="line"><a name="l00529"></a><span class="lineno">  529</span>&#160;            <span class="keywordflow">return</span> <a class="code" href="namespacearmnn.xhtml#a2d299363c9fc33334c571fa29ca4f58caa4cbdbb6070a5abb35fc95ecf1e22c14">armnn::ComparisonOperation::LessOrEqual</a>;</div>
<div class="line"><a name="l00530"></a><span class="lineno">  530</span>&#160;        <span class="keywordflow">case</span> armnnSerializer::ComparisonOperation::ComparisonOperation_NotEqual:</div>
<div class="line"><a name="l00531"></a><span class="lineno">  531</span>&#160;        <span class="keywordflow">default</span>:</div>
<div class="line"><a name="l00532"></a><span class="lineno">  532</span>&#160;            <span class="keywordflow">return</span> <a class="code" href="namespacearmnn.xhtml#a2d299363c9fc33334c571fa29ca4f58ca19bb0af2c3c530538cb41aff7f235b96">armnn::ComparisonOperation::NotEqual</a>;</div>
<div class="line"><a name="l00533"></a><span class="lineno">  533</span>&#160;    }</div>
<div class="line"><a name="l00534"></a><span class="lineno">  534</span>&#160;}</div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="namespacearmnn.xhtml#a2d299363c9fc33334c571fa29ca4f58caf5f286e73bda105e538310b3190f75c5">armnn::Equal</a>, <a class="el" href="namespacearmnn.xhtml#a2d299363c9fc33334c571fa29ca4f58ca8768a6821cd735aea4f5b0df88c1fc6a">armnn::Greater</a>, <a class="el" href="namespacearmnn.xhtml#a2d299363c9fc33334c571fa29ca4f58ca6f2f0aefb3d22da0f3839453add5f937">armnn::GreaterOrEqual</a>, <a class="el" href="namespacearmnn.xhtml#a2d299363c9fc33334c571fa29ca4f58ca1cfdf0e8d0c87a228c1f40d9bee7888b">armnn::Less</a>, <a class="el" href="namespacearmnn.xhtml#a2d299363c9fc33334c571fa29ca4f58caa4cbdbb6070a5abb35fc95ecf1e22c14">armnn::LessOrEqual</a>, and <a class="el" href="namespacearmnn.xhtml#a2d299363c9fc33334c571fa29ca4f58ca19bb0af2c3c530538cb41aff7f235b96">armnn::NotEqual</a>.</p>

</div>
</div>
<a id="a9f1aae5d3ce2b27d619725fb3cee38da"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a9f1aae5d3ce2b27d619725fb3cee38da">&#9670;&nbsp;</a></span>ToConstTensor()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarmnn_1_1_const_tensor.xhtml">armnn::ConstTensor</a> armnnDeserializer::ToConstTensor </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="namespacearmnn_deserializer.xhtml#a68b76ee033fdd629404369171c3d4f90">ConstTensorRawPtr</a>&#160;</td>
          <td class="paramname"><em>constTensorPtr</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_deserializer_8cpp_source.xhtml#l00748">748</a> of file <a class="el" href="_deserializer_8cpp_source.xhtml">Deserializer.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00749"></a><span class="lineno">  749</span>&#160;{</div>
<div class="line"><a name="l00750"></a><span class="lineno">  750</span>&#160;    <a class="code" href="_deserializer_8cpp.xhtml#a637ba180b64a3cd1a4f83d048a030772">CHECK_CONST_TENSOR_PTR</a>(constTensorPtr);</div>
<div class="line"><a name="l00751"></a><span class="lineno">  751</span>&#160;    <a class="code" href="classarmnn_1_1_tensor_info.xhtml">armnn::TensorInfo</a> tensorInfo = <a class="code" href="namespacearmnn_deserializer.xhtml#a948b8c615ff06defa3b80d2352259ff2">ToTensorInfo</a>(constTensorPtr-&gt;info());</div>
<div class="line"><a name="l00752"></a><span class="lineno">  752</span>&#160;    tensorInfo.<a class="code" href="classarmnn_1_1_tensor_info.xhtml#a8ffca1e21bdfa7f945617acd606aac91">SetConstant</a>();</div>
<div class="line"><a name="l00753"></a><span class="lineno">  753</span>&#160; </div>
<div class="line"><a name="l00754"></a><span class="lineno">  754</span>&#160;    <span class="keywordflow">switch</span> (constTensorPtr-&gt;data_type())</div>
<div class="line"><a name="l00755"></a><span class="lineno">  755</span>&#160;    {</div>
<div class="line"><a name="l00756"></a><span class="lineno">  756</span>&#160;        <span class="keywordflow">case</span> ConstTensorData_ByteData:</div>
<div class="line"><a name="l00757"></a><span class="lineno">  757</span>&#160;        {</div>
<div class="line"><a name="l00758"></a><span class="lineno">  758</span>&#160;            <span class="keyword">auto</span> byteData = constTensorPtr-&gt;data_as_ByteData()-&gt;data();</div>
<div class="line"><a name="l00759"></a><span class="lineno">  759</span>&#160;            <a class="code" href="_deserializer_8cpp.xhtml#aa6fd9c6c98bdd08620d75cac3a2e17e6">CHECK_CONST_TENSOR_SIZE</a>(byteData-&gt;size(), tensorInfo.<a class="code" href="classarmnn_1_1_tensor_info.xhtml#a8846406ac37fbd2204f0be16ee05d5b7">GetNumElements</a>());</div>
<div class="line"><a name="l00760"></a><span class="lineno">  760</span>&#160;            <span class="keywordflow">return</span> <a class="code" href="classarmnn_1_1_const_tensor.xhtml">armnn::ConstTensor</a>(tensorInfo, byteData-&gt;data());</div>
<div class="line"><a name="l00761"></a><span class="lineno">  761</span>&#160;        }</div>
<div class="line"><a name="l00762"></a><span class="lineno">  762</span>&#160;        <span class="keywordflow">case</span> ConstTensorData_ShortData:</div>
<div class="line"><a name="l00763"></a><span class="lineno">  763</span>&#160;        {</div>
<div class="line"><a name="l00764"></a><span class="lineno">  764</span>&#160;            <span class="keyword">auto</span> shortData = constTensorPtr-&gt;data_as_ShortData()-&gt;data();</div>
<div class="line"><a name="l00765"></a><span class="lineno">  765</span>&#160;            <a class="code" href="_deserializer_8cpp.xhtml#aa6fd9c6c98bdd08620d75cac3a2e17e6">CHECK_CONST_TENSOR_SIZE</a>(shortData-&gt;size(), tensorInfo.<a class="code" href="classarmnn_1_1_tensor_info.xhtml#a8846406ac37fbd2204f0be16ee05d5b7">GetNumElements</a>());</div>
<div class="line"><a name="l00766"></a><span class="lineno">  766</span>&#160;            <span class="keywordflow">return</span> <a class="code" href="classarmnn_1_1_const_tensor.xhtml">armnn::ConstTensor</a>(tensorInfo, shortData-&gt;data());</div>
<div class="line"><a name="l00767"></a><span class="lineno">  767</span>&#160;        }</div>
<div class="line"><a name="l00768"></a><span class="lineno">  768</span>&#160;        <span class="keywordflow">case</span> ConstTensorData_IntData:</div>
<div class="line"><a name="l00769"></a><span class="lineno">  769</span>&#160;        {</div>
<div class="line"><a name="l00770"></a><span class="lineno">  770</span>&#160;            <span class="keyword">auto</span> intData = constTensorPtr-&gt;data_as_IntData()-&gt;data();</div>
<div class="line"><a name="l00771"></a><span class="lineno">  771</span>&#160;            <a class="code" href="_deserializer_8cpp.xhtml#aa6fd9c6c98bdd08620d75cac3a2e17e6">CHECK_CONST_TENSOR_SIZE</a>(intData-&gt;size(), tensorInfo.<a class="code" href="classarmnn_1_1_tensor_info.xhtml#a8846406ac37fbd2204f0be16ee05d5b7">GetNumElements</a>());</div>
<div class="line"><a name="l00772"></a><span class="lineno">  772</span>&#160;            <span class="keywordflow">return</span> <a class="code" href="classarmnn_1_1_const_tensor.xhtml">armnn::ConstTensor</a>(tensorInfo, intData-&gt;data());</div>
<div class="line"><a name="l00773"></a><span class="lineno">  773</span>&#160;        }</div>
<div class="line"><a name="l00774"></a><span class="lineno">  774</span>&#160;        <span class="keywordflow">case</span> ConstTensorData_LongData:</div>
<div class="line"><a name="l00775"></a><span class="lineno">  775</span>&#160;        {</div>
<div class="line"><a name="l00776"></a><span class="lineno">  776</span>&#160;            <span class="keyword">auto</span> longData = constTensorPtr-&gt;data_as_LongData()-&gt;data();</div>
<div class="line"><a name="l00777"></a><span class="lineno">  777</span>&#160;            <a class="code" href="_deserializer_8cpp.xhtml#aa6fd9c6c98bdd08620d75cac3a2e17e6">CHECK_CONST_TENSOR_SIZE</a>(longData-&gt;size(), tensorInfo.<a class="code" href="classarmnn_1_1_tensor_info.xhtml#a8846406ac37fbd2204f0be16ee05d5b7">GetNumElements</a>());</div>
<div class="line"><a name="l00778"></a><span class="lineno">  778</span>&#160;            <span class="keywordflow">return</span> <a class="code" href="classarmnn_1_1_const_tensor.xhtml">armnn::ConstTensor</a>(tensorInfo, longData-&gt;data());</div>
<div class="line"><a name="l00779"></a><span class="lineno">  779</span>&#160;        }</div>
<div class="line"><a name="l00780"></a><span class="lineno">  780</span>&#160;        <span class="keywordflow">default</span>:</div>
<div class="line"><a name="l00781"></a><span class="lineno">  781</span>&#160;        {</div>
<div class="line"><a name="l00782"></a><span class="lineno">  782</span>&#160;            <a class="code" href="structarmnn_1_1_check_location.xhtml">CheckLocation</a> location = <a class="code" href="_exceptions_8hpp.xhtml#aa3be76aec4ce713822a5ea1ecbb7bc61">CHECK_LOCATION</a>();</div>
<div class="line"><a name="l00783"></a><span class="lineno">  783</span>&#160;            <span class="keywordflow">throw</span> <a class="code" href="classarmnn_1_1_parse_exception.xhtml">ParseException</a>(fmt::format(<span class="stringliteral">&quot;Unsupported data type {0} = {1}. {2}&quot;</span>,</div>
<div class="line"><a name="l00784"></a><span class="lineno">  784</span>&#160;                                             constTensorPtr-&gt;data_type(),</div>
<div class="line"><a name="l00785"></a><span class="lineno">  785</span>&#160;                                             EnumNameConstTensorData(constTensorPtr-&gt;data_type()),</div>
<div class="line"><a name="l00786"></a><span class="lineno">  786</span>&#160;                                             location.<a class="code" href="structarmnn_1_1_check_location.xhtml#a5e3562cda960da001597e7dd5679b140">AsString</a>()));</div>
<div class="line"><a name="l00787"></a><span class="lineno">  787</span>&#160;        }</div>
<div class="line"><a name="l00788"></a><span class="lineno">  788</span>&#160;    }</div>
<div class="line"><a name="l00789"></a><span class="lineno">  789</span>&#160;}</div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="_exceptions_8hpp_source.xhtml#l00029">CheckLocation::AsString()</a>, <a class="el" href="_deserializer_8cpp_source.xhtml#l00178">CHECK_CONST_TENSOR_PTR</a>, <a class="el" href="_deserializer_8cpp_source.xhtml#l00175">CHECK_CONST_TENSOR_SIZE</a>, <a class="el" href="_exceptions_8hpp_source.xhtml#l00203">CHECK_LOCATION</a>, <a class="el" href="_tensor_8hpp_source.xhtml#l00196">TensorInfo::GetNumElements()</a>, <a class="el" href="_tensor_8cpp_source.xhtml#l00514">TensorInfo::SetConstant()</a>, and <a class="el" href="_deserializer_8cpp_source.xhtml#l00642">ToTensorInfo()</a>.</p>

</div>
</div>
<a id="aede2265569640ae0af1c5520c8a66829"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aede2265569640ae0af1c5520c8a66829">&#9670;&nbsp;</a></span>ToDataLayout()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="namespacearmnn.xhtml#ad1d5cce2d9e9a5d61c243e5c989112e0">armnn::DataLayout</a> armnnDeserializer::ToDataLayout </td>
          <td>(</td>
          <td class="paramtype">armnnSerializer::DataLayout&#160;</td>
          <td class="paramname"><em>dataLayout</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_deserializer_8cpp_source.xhtml#l00457">457</a> of file <a class="el" href="_deserializer_8cpp_source.xhtml">Deserializer.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00458"></a><span class="lineno">  458</span>&#160;{</div>
<div class="line"><a name="l00459"></a><span class="lineno">  459</span>&#160;    <span class="keywordflow">switch</span> (dataLayout)</div>
<div class="line"><a name="l00460"></a><span class="lineno">  460</span>&#160;    {</div>
<div class="line"><a name="l00461"></a><span class="lineno">  461</span>&#160;        <span class="keywordflow">case</span> armnnSerializer::DataLayout::DataLayout_NHWC:</div>
<div class="line"><a name="l00462"></a><span class="lineno">  462</span>&#160;            <span class="keywordflow">return</span> <a class="code" href="namespacearmnn.xhtml#ad1d5cce2d9e9a5d61c243e5c989112e0ad066db54b89b0912e7e7c6da51e2da51">armnn::DataLayout::NHWC</a>;</div>
<div class="line"><a name="l00463"></a><span class="lineno">  463</span>&#160;        <span class="keywordflow">case</span> armnnSerializer::DataLayout::DataLayout_NDHWC:</div>
<div class="line"><a name="l00464"></a><span class="lineno">  464</span>&#160;            <span class="keywordflow">return</span> <a class="code" href="namespacearmnn.xhtml#ad1d5cce2d9e9a5d61c243e5c989112e0a4dd0194b114cbf51da5b3a72569863ef">armnn::DataLayout::NDHWC</a>;</div>
<div class="line"><a name="l00465"></a><span class="lineno">  465</span>&#160;        <span class="keywordflow">case</span> armnnSerializer::DataLayout::DataLayout_NCDHW:</div>
<div class="line"><a name="l00466"></a><span class="lineno">  466</span>&#160;            <span class="keywordflow">return</span> <a class="code" href="namespacearmnn.xhtml#ad1d5cce2d9e9a5d61c243e5c989112e0a884e0167ebf9bbe6cfd6ca5ab97ab015">armnn::DataLayout::NCDHW</a>;</div>
<div class="line"><a name="l00467"></a><span class="lineno">  467</span>&#160;        <span class="keywordflow">case</span> armnnSerializer::DataLayout::DataLayout_NCHW:</div>
<div class="line"><a name="l00468"></a><span class="lineno">  468</span>&#160;        <span class="keywordflow">default</span>:</div>
<div class="line"><a name="l00469"></a><span class="lineno">  469</span>&#160;            <span class="keywordflow">return</span> <a class="code" href="namespacearmnn.xhtml#ad1d5cce2d9e9a5d61c243e5c989112e0a6b99f356fe3b30a2a850b5ea897c289f">armnn::DataLayout::NCHW</a>;</div>
<div class="line"><a name="l00470"></a><span class="lineno">  470</span>&#160;    }</div>
<div class="line"><a name="l00471"></a><span class="lineno">  471</span>&#160;}</div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="namespacearmnn.xhtml#ad1d5cce2d9e9a5d61c243e5c989112e0a884e0167ebf9bbe6cfd6ca5ab97ab015">armnn::NCDHW</a>, <a class="el" href="namespacearmnn.xhtml#ad1d5cce2d9e9a5d61c243e5c989112e0a6b99f356fe3b30a2a850b5ea897c289f">armnn::NCHW</a>, <a class="el" href="namespacearmnn.xhtml#ad1d5cce2d9e9a5d61c243e5c989112e0a4dd0194b114cbf51da5b3a72569863ef">armnn::NDHWC</a>, and <a class="el" href="namespacearmnn.xhtml#ad1d5cce2d9e9a5d61c243e5c989112e0ad066db54b89b0912e7e7c6da51e2da51">armnn::NHWC</a>.</p>

</div>
</div>
<a id="a3bb16a8c4f68fd2dfde128f1dc623571"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a3bb16a8c4f68fd2dfde128f1dc623571">&#9670;&nbsp;</a></span>ToElementwiseBinaryOperation()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="namespacearmnn.xhtml#ac4f8557279754ed7b3f749d55b0e3047">armnn::BinaryOperation</a> armnnDeserializer::ToElementwiseBinaryOperation </td>
          <td>(</td>
          <td class="paramtype">armnnSerializer::BinaryOperation&#160;</td>
          <td class="paramname"><em>operation</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_deserializer_8cpp_source.xhtml#l00568">568</a> of file <a class="el" href="_deserializer_8cpp_source.xhtml">Deserializer.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00569"></a><span class="lineno">  569</span>&#160;{</div>
<div class="line"><a name="l00570"></a><span class="lineno">  570</span>&#160;    <span class="keywordflow">switch</span> (operation)</div>
<div class="line"><a name="l00571"></a><span class="lineno">  571</span>&#160;    {</div>
<div class="line"><a name="l00572"></a><span class="lineno">  572</span>&#160;        <span class="keywordflow">case</span> armnnSerializer::BinaryOperation::BinaryOperation_Add:</div>
<div class="line"><a name="l00573"></a><span class="lineno">  573</span>&#160;            <span class="keywordflow">return</span> <a class="code" href="namespacearmnn.xhtml#ac4f8557279754ed7b3f749d55b0e3047aec211f7c20af43e742bf2570c3cb84f9">armnn::BinaryOperation::Add</a>;</div>
<div class="line"><a name="l00574"></a><span class="lineno">  574</span>&#160;        <span class="keywordflow">case</span> armnnSerializer::BinaryOperation::BinaryOperation_Div:</div>
<div class="line"><a name="l00575"></a><span class="lineno">  575</span>&#160;            <span class="keywordflow">return</span> <a class="code" href="namespacearmnn.xhtml#ac4f8557279754ed7b3f749d55b0e3047a43d11850893d2fe84a1e618121c1cc0a">armnn::BinaryOperation::Div</a>;</div>
<div class="line"><a name="l00576"></a><span class="lineno">  576</span>&#160;        <span class="keywordflow">case</span> armnnSerializer::BinaryOperation::BinaryOperation_Maximum:</div>
<div class="line"><a name="l00577"></a><span class="lineno">  577</span>&#160;            <span class="keywordflow">return</span> <a class="code" href="namespacearmnn.xhtml#ac4f8557279754ed7b3f749d55b0e3047a8321e79c278ec510f63675c040594892">armnn::BinaryOperation::Maximum</a>;</div>
<div class="line"><a name="l00578"></a><span class="lineno">  578</span>&#160;        <span class="keywordflow">case</span> armnnSerializer::BinaryOperation::BinaryOperation_Minimum:</div>
<div class="line"><a name="l00579"></a><span class="lineno">  579</span>&#160;            <span class="keywordflow">return</span> <a class="code" href="namespacearmnn.xhtml#ac4f8557279754ed7b3f749d55b0e3047aa1d0ec6d56f8833a078b5a7ac4caf2d4">armnn::BinaryOperation::Minimum</a>;</div>
<div class="line"><a name="l00580"></a><span class="lineno">  580</span>&#160;        <span class="keywordflow">case</span> armnnSerializer::BinaryOperation::BinaryOperation_Mul:</div>
<div class="line"><a name="l00581"></a><span class="lineno">  581</span>&#160;            <span class="keywordflow">return</span> <a class="code" href="namespacearmnn.xhtml#ac4f8557279754ed7b3f749d55b0e3047a62b6d55816cf737bfc6f42e60df1a3f2">armnn::BinaryOperation::Mul</a>;</div>
<div class="line"><a name="l00582"></a><span class="lineno">  582</span>&#160;        <span class="keywordflow">case</span> armnnSerializer::BinaryOperation::BinaryOperation_Sub:</div>
<div class="line"><a name="l00583"></a><span class="lineno">  583</span>&#160;            <span class="keywordflow">return</span> <a class="code" href="namespacearmnn.xhtml#ac4f8557279754ed7b3f749d55b0e3047ae80155eceb940c89e2de63ad05868db2">armnn::BinaryOperation::Sub</a>;</div>
<div class="line"><a name="l00584"></a><span class="lineno">  584</span>&#160;        <span class="keywordflow">default</span>:</div>
<div class="line"><a name="l00585"></a><span class="lineno">  585</span>&#160;            <span class="keywordflow">throw</span> <a class="code" href="classarmnn_1_1_invalid_argument_exception.xhtml">armnn::InvalidArgumentException</a>(<span class="stringliteral">&quot;Binary operation unknown&quot;</span>);</div>
<div class="line"><a name="l00586"></a><span class="lineno">  586</span>&#160;    }</div>
<div class="line"><a name="l00587"></a><span class="lineno">  587</span>&#160;}</div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="namespacearmnn.xhtml#ac4f8557279754ed7b3f749d55b0e3047aec211f7c20af43e742bf2570c3cb84f9">armnn::Add</a>, <a class="el" href="namespacearmnn.xhtml#ac4f8557279754ed7b3f749d55b0e3047a43d11850893d2fe84a1e618121c1cc0a">armnn::Div</a>, <a class="el" href="namespacearmnn.xhtml#ac4f8557279754ed7b3f749d55b0e3047a8321e79c278ec510f63675c040594892">armnn::Maximum</a>, <a class="el" href="namespacearmnn.xhtml#ac4f8557279754ed7b3f749d55b0e3047aa1d0ec6d56f8833a078b5a7ac4caf2d4">armnn::Minimum</a>, <a class="el" href="namespacearmnn.xhtml#ac4f8557279754ed7b3f749d55b0e3047a62b6d55816cf737bfc6f42e60df1a3f2">armnn::Mul</a>, and <a class="el" href="namespacearmnn.xhtml#ac4f8557279754ed7b3f749d55b0e3047ae80155eceb940c89e2de63ad05868db2">armnn::Sub</a>.</p>

</div>
</div>
<a id="a9c11dfb7a73226061b83ecd995b91582"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a9c11dfb7a73226061b83ecd995b91582">&#9670;&nbsp;</a></span>ToElementwiseUnaryOperation()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="namespacearmnn.xhtml#a1cfaa710db2a54673b21d2ea2da757c8">armnn::UnaryOperation</a> armnnDeserializer::ToElementwiseUnaryOperation </td>
          <td>(</td>
          <td class="paramtype">armnnSerializer::UnaryOperation&#160;</td>
          <td class="paramname"><em>operation</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_deserializer_8cpp_source.xhtml#l00589">589</a> of file <a class="el" href="_deserializer_8cpp_source.xhtml">Deserializer.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00590"></a><span class="lineno">  590</span>&#160;{</div>
<div class="line"><a name="l00591"></a><span class="lineno">  591</span>&#160;    <span class="keywordflow">switch</span> (operation)</div>
<div class="line"><a name="l00592"></a><span class="lineno">  592</span>&#160;    {</div>
<div class="line"><a name="l00593"></a><span class="lineno">  593</span>&#160;        <span class="keywordflow">case</span> armnnSerializer::UnaryOperation::UnaryOperation_Abs:</div>
<div class="line"><a name="l00594"></a><span class="lineno">  594</span>&#160;            <span class="keywordflow">return</span> <a class="code" href="namespacearmnn.xhtml#a1cfaa710db2a54673b21d2ea2da757c8a1e34af023adeb7d5f484f8eb4b9826b6">armnn::UnaryOperation::Abs</a>;</div>
<div class="line"><a name="l00595"></a><span class="lineno">  595</span>&#160;        <span class="keywordflow">case</span> armnnSerializer::UnaryOperation::UnaryOperation_Ceil:</div>
<div class="line"><a name="l00596"></a><span class="lineno">  596</span>&#160;            <span class="keywordflow">return</span> <a class="code" href="namespacearmnn.xhtml#a1cfaa710db2a54673b21d2ea2da757c8ab95a01ffffa8fcdd2a9af961937c097c">armnn::UnaryOperation::Ceil</a>;</div>
<div class="line"><a name="l00597"></a><span class="lineno">  597</span>&#160;        <span class="keywordflow">case</span> armnnSerializer::UnaryOperation::UnaryOperation_Rsqrt:</div>
<div class="line"><a name="l00598"></a><span class="lineno">  598</span>&#160;            <span class="keywordflow">return</span> <a class="code" href="namespacearmnn.xhtml#a1cfaa710db2a54673b21d2ea2da757c8a09bb7f6e2118c85a6a55bd4bf2beeca4">armnn::UnaryOperation::Rsqrt</a>;</div>
<div class="line"><a name="l00599"></a><span class="lineno">  599</span>&#160;        <span class="keywordflow">case</span> armnnSerializer::UnaryOperation::UnaryOperation_Sqrt:</div>
<div class="line"><a name="l00600"></a><span class="lineno">  600</span>&#160;            <span class="keywordflow">return</span> <a class="code" href="namespacearmnn.xhtml#a1cfaa710db2a54673b21d2ea2da757c8aae77f3ad25595e35b327334d89410054">armnn::UnaryOperation::Sqrt</a>;</div>
<div class="line"><a name="l00601"></a><span class="lineno">  601</span>&#160;        <span class="keywordflow">case</span> armnnSerializer::UnaryOperation::UnaryOperation_Exp:</div>
<div class="line"><a name="l00602"></a><span class="lineno">  602</span>&#160;            <span class="keywordflow">return</span> <a class="code" href="namespacearmnn.xhtml#a1cfaa710db2a54673b21d2ea2da757c8acad39a154bffb61175f674d6eefaf6d0">armnn::UnaryOperation::Exp</a>;</div>
<div class="line"><a name="l00603"></a><span class="lineno">  603</span>&#160;        <span class="keywordflow">case</span> armnnSerializer::UnaryOperation::UnaryOperation_Neg:</div>
<div class="line"><a name="l00604"></a><span class="lineno">  604</span>&#160;            <span class="keywordflow">return</span> <a class="code" href="namespacearmnn.xhtml#a1cfaa710db2a54673b21d2ea2da757c8afb278fa5defd7e699fcbc930c3e76ccd">armnn::UnaryOperation::Neg</a>;</div>
<div class="line"><a name="l00605"></a><span class="lineno">  605</span>&#160;        <span class="keywordflow">case</span> armnnSerializer::UnaryOperation::UnaryOperation_LogicalNot:</div>
<div class="line"><a name="l00606"></a><span class="lineno">  606</span>&#160;            <span class="keywordflow">return</span> <a class="code" href="namespacearmnn.xhtml#a1cfaa710db2a54673b21d2ea2da757c8a2a25ebd8c909241e3f7818389b804ecc">armnn::UnaryOperation::LogicalNot</a>;</div>
<div class="line"><a name="l00607"></a><span class="lineno">  607</span>&#160;        <span class="keywordflow">case</span> armnnSerializer::UnaryOperation::UnaryOperation_Log:</div>
<div class="line"><a name="l00608"></a><span class="lineno">  608</span>&#160;            <span class="keywordflow">return</span> <a class="code" href="namespacearmnn.xhtml#a1cfaa710db2a54673b21d2ea2da757c8ace0be71e33226e4c1db2bcea5959f16b">armnn::UnaryOperation::Log</a>;</div>
<div class="line"><a name="l00609"></a><span class="lineno">  609</span>&#160;        <span class="keywordflow">case</span> armnnSerializer::UnaryOperation::UnaryOperation_Sin:</div>
<div class="line"><a name="l00610"></a><span class="lineno">  610</span>&#160;            <span class="keywordflow">return</span> <a class="code" href="namespacearmnn.xhtml#a1cfaa710db2a54673b21d2ea2da757c8a0986d137604183312e6d3599578bc6cd">armnn::UnaryOperation::Sin</a>;</div>
<div class="line"><a name="l00611"></a><span class="lineno">  611</span>&#160;        <span class="keywordflow">default</span>:</div>
<div class="line"><a name="l00612"></a><span class="lineno">  612</span>&#160;            <span class="keywordflow">throw</span> <a class="code" href="classarmnn_1_1_invalid_argument_exception.xhtml">armnn::InvalidArgumentException</a>(<span class="stringliteral">&quot;Unary operation unknown&quot;</span>);</div>
<div class="line"><a name="l00613"></a><span class="lineno">  613</span>&#160;    }</div>
<div class="line"><a name="l00614"></a><span class="lineno">  614</span>&#160;}</div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="namespacearmnn.xhtml#a1cfaa710db2a54673b21d2ea2da757c8a1e34af023adeb7d5f484f8eb4b9826b6">armnn::Abs</a>, <a class="el" href="namespacearmnn.xhtml#a1cfaa710db2a54673b21d2ea2da757c8ab95a01ffffa8fcdd2a9af961937c097c">armnn::Ceil</a>, <a class="el" href="namespacearmnn.xhtml#a1cfaa710db2a54673b21d2ea2da757c8acad39a154bffb61175f674d6eefaf6d0">armnn::Exp</a>, <a class="el" href="namespacearmnn.xhtml#a1cfaa710db2a54673b21d2ea2da757c8ace0be71e33226e4c1db2bcea5959f16b">armnn::Log</a>, <a class="el" href="namespacearmnn.xhtml#a1cfaa710db2a54673b21d2ea2da757c8a2a25ebd8c909241e3f7818389b804ecc">armnn::LogicalNot</a>, <a class="el" href="namespacearmnn.xhtml#a1cfaa710db2a54673b21d2ea2da757c8afb278fa5defd7e699fcbc930c3e76ccd">armnn::Neg</a>, <a class="el" href="namespacearmnn.xhtml#a1cfaa710db2a54673b21d2ea2da757c8a09bb7f6e2118c85a6a55bd4bf2beeca4">armnn::Rsqrt</a>, <a class="el" href="namespacearmnn.xhtml#a1cfaa710db2a54673b21d2ea2da757c8a0986d137604183312e6d3599578bc6cd">armnn::Sin</a>, and <a class="el" href="namespacearmnn.xhtml#a1cfaa710db2a54673b21d2ea2da757c8aae77f3ad25595e35b327334d89410054">armnn::Sqrt</a>.</p>

</div>
</div>
<a id="a2ccbea2c0078ba1d34c2ac48a8bdd342"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a2ccbea2c0078ba1d34c2ac48a8bdd342">&#9670;&nbsp;</a></span>ToLogicalBinaryOperation()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="namespacearmnn.xhtml#a2da4db0140d1a6dc69c9c82e9ef5379e">armnn::LogicalBinaryOperation</a> armnnDeserializer::ToLogicalBinaryOperation </td>
          <td>(</td>
          <td class="paramtype">armnnSerializer::LogicalBinaryOperation&#160;</td>
          <td class="paramname"><em>operation</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_deserializer_8cpp_source.xhtml#l00555">555</a> of file <a class="el" href="_deserializer_8cpp_source.xhtml">Deserializer.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00556"></a><span class="lineno">  556</span>&#160;{</div>
<div class="line"><a name="l00557"></a><span class="lineno">  557</span>&#160;    <span class="keywordflow">switch</span> (operation)</div>
<div class="line"><a name="l00558"></a><span class="lineno">  558</span>&#160;    {</div>
<div class="line"><a name="l00559"></a><span class="lineno">  559</span>&#160;        <span class="keywordflow">case</span> armnnSerializer::LogicalBinaryOperation::LogicalBinaryOperation_LogicalAnd:</div>
<div class="line"><a name="l00560"></a><span class="lineno">  560</span>&#160;            <span class="keywordflow">return</span> <a class="code" href="namespacearmnn.xhtml#a2da4db0140d1a6dc69c9c82e9ef5379ea103aa83df42877d5f9baeafdbf620b55">armnn::LogicalBinaryOperation::LogicalAnd</a>;</div>
<div class="line"><a name="l00561"></a><span class="lineno">  561</span>&#160;        <span class="keywordflow">case</span> armnnSerializer::LogicalBinaryOperation::LogicalBinaryOperation_LogicalOr:</div>
<div class="line"><a name="l00562"></a><span class="lineno">  562</span>&#160;            <span class="keywordflow">return</span> <a class="code" href="namespacearmnn.xhtml#a2da4db0140d1a6dc69c9c82e9ef5379ea74ce78827b02c650a20b149765388247">armnn::LogicalBinaryOperation::LogicalOr</a>;</div>
<div class="line"><a name="l00563"></a><span class="lineno">  563</span>&#160;        <span class="keywordflow">default</span>:</div>
<div class="line"><a name="l00564"></a><span class="lineno">  564</span>&#160;            <span class="keywordflow">throw</span> <a class="code" href="classarmnn_1_1_invalid_argument_exception.xhtml">armnn::InvalidArgumentException</a>(<span class="stringliteral">&quot;Logical Binary operation unknown&quot;</span>);</div>
<div class="line"><a name="l00565"></a><span class="lineno">  565</span>&#160;    }</div>
<div class="line"><a name="l00566"></a><span class="lineno">  566</span>&#160;}</div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="namespacearmnn.xhtml#a2da4db0140d1a6dc69c9c82e9ef5379ea103aa83df42877d5f9baeafdbf620b55">armnn::LogicalAnd</a>, and <a class="el" href="namespacearmnn.xhtml#a2da4db0140d1a6dc69c9c82e9ef5379ea74ce78827b02c650a20b149765388247">armnn::LogicalOr</a>.</p>

</div>
</div>
<a id="ac33cddeda1d847c4a17d679ea1dab6be"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ac33cddeda1d847c4a17d679ea1dab6be">&#9670;&nbsp;</a></span>ToPaddingMode()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="namespacearmnn.xhtml#a14d24d90ab4ba2956e92e27890ba4c91">armnn::PaddingMode</a> armnnDeserializer::ToPaddingMode </td>
          <td>(</td>
          <td class="paramtype">armnnSerializer::PaddingMode&#160;</td>
          <td class="paramname"><em>paddingMode</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_deserializer_8cpp_source.xhtml#l00616">616</a> of file <a class="el" href="_deserializer_8cpp_source.xhtml">Deserializer.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00617"></a><span class="lineno">  617</span>&#160;{</div>
<div class="line"><a name="l00618"></a><span class="lineno">  618</span>&#160;    <span class="keywordflow">switch</span> (paddingMode)</div>
<div class="line"><a name="l00619"></a><span class="lineno">  619</span>&#160;    {</div>
<div class="line"><a name="l00620"></a><span class="lineno">  620</span>&#160;        <span class="keywordflow">case</span> armnnSerializer::PaddingMode::PaddingMode_Reflect:</div>
<div class="line"><a name="l00621"></a><span class="lineno">  621</span>&#160;            <span class="keywordflow">return</span> <a class="code" href="namespacearmnn.xhtml#a14d24d90ab4ba2956e92e27890ba4c91a74de3e45e4491e956e8dc18d841d9b00">armnn::PaddingMode::Reflect</a>;</div>
<div class="line"><a name="l00622"></a><span class="lineno">  622</span>&#160;        <span class="keywordflow">case</span> armnnSerializer::PaddingMode::PaddingMode_Symmetric:</div>
<div class="line"><a name="l00623"></a><span class="lineno">  623</span>&#160;            <span class="keywordflow">return</span> <a class="code" href="namespacearmnn.xhtml#a14d24d90ab4ba2956e92e27890ba4c91af334649ef5e5d0ffe200751d07012626">armnn::PaddingMode::Symmetric</a>;</div>
<div class="line"><a name="l00624"></a><span class="lineno">  624</span>&#160;        <span class="keywordflow">default</span>:</div>
<div class="line"><a name="l00625"></a><span class="lineno">  625</span>&#160;            <span class="keywordflow">return</span> <a class="code" href="namespacearmnn.xhtml#a14d24d90ab4ba2956e92e27890ba4c91acb17869fe51048b5a5c4c6106551a255">armnn::PaddingMode::Constant</a>;</div>
<div class="line"><a name="l00626"></a><span class="lineno">  626</span>&#160;    }</div>
<div class="line"><a name="l00627"></a><span class="lineno">  627</span>&#160;}</div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="namespacearmnn.xhtml#a14d24d90ab4ba2956e92e27890ba4c91acb17869fe51048b5a5c4c6106551a255">armnn::Constant</a>, <a class="el" href="namespacearmnn.xhtml#a14d24d90ab4ba2956e92e27890ba4c91a74de3e45e4491e956e8dc18d841d9b00">armnn::Reflect</a>, and <a class="el" href="namespacearmnn.xhtml#a14d24d90ab4ba2956e92e27890ba4c91af334649ef5e5d0ffe200751d07012626">armnn::Symmetric</a>.</p>

</div>
</div>
<a id="afa869143574c5885c6ad75f5a6f0333d"></a>
<h2 class="memtitle"><span class="permalink"><a href="#afa869143574c5885c6ad75f5a6f0333d">&#9670;&nbsp;</a></span>ToReduceOperation()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="namespacearmnn.xhtml#abc05539fc6e7907f32ef0fb242e3b3b0">armnn::ReduceOperation</a> armnnDeserializer::ToReduceOperation </td>
          <td>(</td>
          <td class="paramtype">armnnSerializer::ReduceOperation&#160;</td>
          <td class="paramname"><em>operation</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_deserializer_8cpp_source.xhtml#l00536">536</a> of file <a class="el" href="_deserializer_8cpp_source.xhtml">Deserializer.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00537"></a><span class="lineno">  537</span>&#160;{</div>
<div class="line"><a name="l00538"></a><span class="lineno">  538</span>&#160;    <span class="keywordflow">switch</span> (operation)</div>
<div class="line"><a name="l00539"></a><span class="lineno">  539</span>&#160;    {</div>
<div class="line"><a name="l00540"></a><span class="lineno">  540</span>&#160;        <span class="keywordflow">case</span> armnnSerializer::ReduceOperation::ReduceOperation_Sum:</div>
<div class="line"><a name="l00541"></a><span class="lineno">  541</span>&#160;            <span class="keywordflow">return</span> <a class="code" href="namespacearmnn.xhtml#abc05539fc6e7907f32ef0fb242e3b3b0aa0ec87054b5e5b7847d0d8780a01a3d5">armnn::ReduceOperation::Sum</a>;</div>
<div class="line"><a name="l00542"></a><span class="lineno">  542</span>&#160;        <span class="keywordflow">case</span> armnnSerializer::ReduceOperation::ReduceOperation_Max:</div>
<div class="line"><a name="l00543"></a><span class="lineno">  543</span>&#160;            <span class="keywordflow">return</span> <a class="code" href="namespacearmnn.xhtml#abc05539fc6e7907f32ef0fb242e3b3b0a6a061313d22e51e0f25b7cd4dc065233">armnn::ReduceOperation::Max</a>;</div>
<div class="line"><a name="l00544"></a><span class="lineno">  544</span>&#160;        <span class="keywordflow">case</span> armnnSerializer::ReduceOperation::ReduceOperation_Mean:</div>
<div class="line"><a name="l00545"></a><span class="lineno">  545</span>&#160;            <span class="keywordflow">return</span> <a class="code" href="namespacearmnn.xhtml#abc05539fc6e7907f32ef0fb242e3b3b0a3d6c9ac08ada31c184094bbc67afe00d">armnn::ReduceOperation::Mean</a>;</div>
<div class="line"><a name="l00546"></a><span class="lineno">  546</span>&#160;        <span class="keywordflow">case</span> armnnSerializer::ReduceOperation::ReduceOperation_Min:</div>
<div class="line"><a name="l00547"></a><span class="lineno">  547</span>&#160;            <span class="keywordflow">return</span> <a class="code" href="namespacearmnn.xhtml#abc05539fc6e7907f32ef0fb242e3b3b0a78d811e98514cd165dda532286610fd2">armnn::ReduceOperation::Min</a>;</div>
<div class="line"><a name="l00548"></a><span class="lineno">  548</span>&#160;        <span class="keywordflow">case</span> armnnSerializer::ReduceOperation::ReduceOperation_Prod:</div>
<div class="line"><a name="l00549"></a><span class="lineno">  549</span>&#160;            <span class="keywordflow">return</span> <a class="code" href="namespacearmnn.xhtml#abc05539fc6e7907f32ef0fb242e3b3b0a362a33c23b08e4a32a4ec53fbb82cccd">armnn::ReduceOperation::Prod</a>;</div>
<div class="line"><a name="l00550"></a><span class="lineno">  550</span>&#160;        <span class="keywordflow">default</span>:</div>
<div class="line"><a name="l00551"></a><span class="lineno">  551</span>&#160;            <span class="keywordflow">return</span> <a class="code" href="namespacearmnn.xhtml#abc05539fc6e7907f32ef0fb242e3b3b0aa0ec87054b5e5b7847d0d8780a01a3d5">armnn::ReduceOperation::Sum</a>;</div>
<div class="line"><a name="l00552"></a><span class="lineno">  552</span>&#160;    }</div>
<div class="line"><a name="l00553"></a><span class="lineno">  553</span>&#160;}</div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="namespacearmnn.xhtml#abc05539fc6e7907f32ef0fb242e3b3b0a6a061313d22e51e0f25b7cd4dc065233">armnn::Max</a>, <a class="el" href="namespacearmnn.xhtml#abc05539fc6e7907f32ef0fb242e3b3b0a3d6c9ac08ada31c184094bbc67afe00d">armnn::Mean</a>, <a class="el" href="namespacearmnn.xhtml#abc05539fc6e7907f32ef0fb242e3b3b0a78d811e98514cd165dda532286610fd2">armnn::Min</a>, <a class="el" href="namespacearmnn.xhtml#abc05539fc6e7907f32ef0fb242e3b3b0a362a33c23b08e4a32a4ec53fbb82cccd">armnn::Prod</a>, and <a class="el" href="namespacearmnn.xhtml#abc05539fc6e7907f32ef0fb242e3b3b0aa0ec87054b5e5b7847d0d8780a01a3d5">armnn::Sum</a>.</p>

</div>
</div>
<a id="a8b51e137fab21d758b965c6c6e3b02f3"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a8b51e137fab21d758b965c6c6e3b02f3">&#9670;&nbsp;</a></span>ToResizeMethod()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="namespacearmnn.xhtml#a9a2af2f8c4af4f9efa8e79417d505ac4">armnn::ResizeMethod</a> armnnDeserializer::ToResizeMethod </td>
          <td>(</td>
          <td class="paramtype">armnnSerializer::ResizeMethod&#160;</td>
          <td class="paramname"><em>method</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_deserializer_8cpp_source.xhtml#l00629">629</a> of file <a class="el" href="_deserializer_8cpp_source.xhtml">Deserializer.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00630"></a><span class="lineno">  630</span>&#160;{</div>
<div class="line"><a name="l00631"></a><span class="lineno">  631</span>&#160;    <span class="keywordflow">switch</span> (method)</div>
<div class="line"><a name="l00632"></a><span class="lineno">  632</span>&#160;    {</div>
<div class="line"><a name="l00633"></a><span class="lineno">  633</span>&#160;        <span class="keywordflow">case</span> armnnSerializer::ResizeMethod_NearestNeighbor:</div>
<div class="line"><a name="l00634"></a><span class="lineno">  634</span>&#160;            <span class="keywordflow">return</span> <a class="code" href="namespacearmnn.xhtml#a9a2af2f8c4af4f9efa8e79417d505ac4aaa020331bb30d2fa2ecf7c3a0777823f">armnn::ResizeMethod::NearestNeighbor</a>;</div>
<div class="line"><a name="l00635"></a><span class="lineno">  635</span>&#160;        <span class="keywordflow">case</span> armnnSerializer::ResizeMethod_Bilinear:</div>
<div class="line"><a name="l00636"></a><span class="lineno">  636</span>&#160;            <span class="keywordflow">return</span> <a class="code" href="namespacearmnn.xhtml#a9a2af2f8c4af4f9efa8e79417d505ac4aaf17c98bbd83c27d6426d2ff3fa81d7f">armnn::ResizeMethod::Bilinear</a>;</div>
<div class="line"><a name="l00637"></a><span class="lineno">  637</span>&#160;        <span class="keywordflow">default</span>:</div>
<div class="line"><a name="l00638"></a><span class="lineno">  638</span>&#160;            <span class="keywordflow">return</span> <a class="code" href="namespacearmnn.xhtml#a9a2af2f8c4af4f9efa8e79417d505ac4aaa020331bb30d2fa2ecf7c3a0777823f">armnn::ResizeMethod::NearestNeighbor</a>;</div>
<div class="line"><a name="l00639"></a><span class="lineno">  639</span>&#160;    }</div>
<div class="line"><a name="l00640"></a><span class="lineno">  640</span>&#160;}</div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="namespacearmnn.xhtml#a9a2af2f8c4af4f9efa8e79417d505ac4aaf17c98bbd83c27d6426d2ff3fa81d7f">armnn::Bilinear</a>, and <a class="el" href="namespacearmnn.xhtml#a9a2af2f8c4af4f9efa8e79417d505ac4aaa020331bb30d2fa2ecf7c3a0777823f">armnn::NearestNeighbor</a>.</p>

</div>
</div>
<a id="a948b8c615ff06defa3b80d2352259ff2"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a948b8c615ff06defa3b80d2352259ff2">&#9670;&nbsp;</a></span>ToTensorInfo()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarmnn_1_1_tensor_info.xhtml">armnn::TensorInfo</a> armnnDeserializer::ToTensorInfo </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="namespacearmnn_deserializer.xhtml#a80888061963ddd18e87105807a035d9a">TensorRawPtr</a>&#160;</td>
          <td class="paramname"><em>tensorPtr</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_deserializer_8cpp_source.xhtml#l00642">642</a> of file <a class="el" href="_deserializer_8cpp_source.xhtml">Deserializer.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00643"></a><span class="lineno">  643</span>&#160;{</div>
<div class="line"><a name="l00644"></a><span class="lineno">  644</span>&#160;    <a class="code" href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6">armnn::DataType</a> type;</div>
<div class="line"><a name="l00645"></a><span class="lineno">  645</span>&#160;    <a class="code" href="_deserializer_8cpp.xhtml#ae38d96fe05581ea025713b3e781c5a43">CHECK_TENSOR_PTR</a>(tensorPtr);</div>
<div class="line"><a name="l00646"></a><span class="lineno">  646</span>&#160; </div>
<div class="line"><a name="l00647"></a><span class="lineno">  647</span>&#160;    <span class="keywordflow">switch</span> (tensorPtr-&gt;dataType())</div>
<div class="line"><a name="l00648"></a><span class="lineno">  648</span>&#160;    {</div>
<div class="line"><a name="l00649"></a><span class="lineno">  649</span>&#160;        <span class="keywordflow">case</span> DataType_QAsymmS8:</div>
<div class="line"><a name="l00650"></a><span class="lineno">  650</span>&#160;            type = <a class="code" href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a9d02ea768c081d4bdb2b7cab0b3f510d">armnn::DataType::QAsymmS8</a>;</div>
<div class="line"><a name="l00651"></a><span class="lineno">  651</span>&#160;            <span class="keywordflow">break</span>;</div>
<div class="line"><a name="l00652"></a><span class="lineno">  652</span>&#160;        <span class="keywordflow">case</span> DataType_QSymmS8:</div>
<div class="line"><a name="l00653"></a><span class="lineno">  653</span>&#160;            type = <a class="code" href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a9945327825b115e93a3b89f4302e76db">armnn::DataType::QSymmS8</a>;</div>
<div class="line"><a name="l00654"></a><span class="lineno">  654</span>&#160;            <span class="keywordflow">break</span>;</div>
<div class="line"><a name="l00655"></a><span class="lineno">  655</span>&#160;        <span class="keywordflow">case</span> DataType_QuantisedAsymm8:</div>
<div class="line"><a name="l00656"></a><span class="lineno">  656</span>&#160;        <span class="keywordflow">case</span> DataType_QAsymmU8:</div>
<div class="line"><a name="l00657"></a><span class="lineno">  657</span>&#160;            type = <a class="code" href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a0a3f57c876f5a230244c38e1453a8a6e">armnn::DataType::QAsymmU8</a>;</div>
<div class="line"><a name="l00658"></a><span class="lineno">  658</span>&#160;            <span class="keywordflow">break</span>;</div>
<div class="line"><a name="l00659"></a><span class="lineno">  659</span>&#160;        <span class="keywordflow">case</span> DataType_QSymmS16:</div>
<div class="line"><a name="l00660"></a><span class="lineno">  660</span>&#160;        <span class="keywordflow">case</span> DataType_QuantisedSymm16:</div>
<div class="line"><a name="l00661"></a><span class="lineno">  661</span>&#160;            type = <a class="code" href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a053c769dcf82d66ef326c86980c02ba7">armnn::DataType::QSymmS16</a>;</div>
<div class="line"><a name="l00662"></a><span class="lineno">  662</span>&#160;            <span class="keywordflow">break</span>;</div>
<div class="line"><a name="l00663"></a><span class="lineno">  663</span>&#160;        <span class="keywordflow">case</span> DataType_Signed32:</div>
<div class="line"><a name="l00664"></a><span class="lineno">  664</span>&#160;            type = <a class="code" href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6accedffbc6e5308e33d3843e8bdc0dad7">armnn::DataType::Signed32</a>;</div>
<div class="line"><a name="l00665"></a><span class="lineno">  665</span>&#160;            <span class="keywordflow">break</span>;</div>
<div class="line"><a name="l00666"></a><span class="lineno">  666</span>&#160;        <span class="keywordflow">case</span> DataType_Signed64:</div>
<div class="line"><a name="l00667"></a><span class="lineno">  667</span>&#160;            type = <a class="code" href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6ae1b3c9c6087a93b07c83e0b04f377a8d">armnn::DataType::Signed64</a>;</div>
<div class="line"><a name="l00668"></a><span class="lineno">  668</span>&#160;            <span class="keywordflow">break</span>;</div>
<div class="line"><a name="l00669"></a><span class="lineno">  669</span>&#160;        <span class="keywordflow">case</span> DataType_Float32:</div>
<div class="line"><a name="l00670"></a><span class="lineno">  670</span>&#160;            type = <a class="code" href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a166495adc0d0f53bee6baecc577f5204">armnn::DataType::Float32</a>;</div>
<div class="line"><a name="l00671"></a><span class="lineno">  671</span>&#160;            <span class="keywordflow">break</span>;</div>
<div class="line"><a name="l00672"></a><span class="lineno">  672</span>&#160;        <span class="keywordflow">case</span> DataType_Float16:</div>
<div class="line"><a name="l00673"></a><span class="lineno">  673</span>&#160;            type = <a class="code" href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a26e6ed77470c6f2f830ecf874e6c0d55">armnn::DataType::Float16</a>;</div>
<div class="line"><a name="l00674"></a><span class="lineno">  674</span>&#160;            <span class="keywordflow">break</span>;</div>
<div class="line"><a name="l00675"></a><span class="lineno">  675</span>&#160;        <span class="keywordflow">case</span> DataType_Boolean:</div>
<div class="line"><a name="l00676"></a><span class="lineno">  676</span>&#160;            type = <a class="code" href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a27226c864bac7454a8504f8edb15d95b">armnn::DataType::Boolean</a>;</div>
<div class="line"><a name="l00677"></a><span class="lineno">  677</span>&#160;            <span class="keywordflow">break</span>;</div>
<div class="line"><a name="l00678"></a><span class="lineno">  678</span>&#160;        <span class="keywordflow">default</span>:</div>
<div class="line"><a name="l00679"></a><span class="lineno">  679</span>&#160;        {</div>
<div class="line"><a name="l00680"></a><span class="lineno">  680</span>&#160;            <a class="code" href="structarmnn_1_1_check_location.xhtml">CheckLocation</a> location = <a class="code" href="_exceptions_8hpp.xhtml#aa3be76aec4ce713822a5ea1ecbb7bc61">CHECK_LOCATION</a>();</div>
<div class="line"><a name="l00681"></a><span class="lineno">  681</span>&#160;            <span class="keywordflow">throw</span> <a class="code" href="classarmnn_1_1_parse_exception.xhtml">ParseException</a>(fmt::format(<span class="stringliteral">&quot;Unsupported data type {0} = {1}. {2}&quot;</span>,</div>
<div class="line"><a name="l00682"></a><span class="lineno">  682</span>&#160;                                             tensorPtr-&gt;dataType(),</div>
<div class="line"><a name="l00683"></a><span class="lineno">  683</span>&#160;                                             EnumNameDataType(tensorPtr-&gt;dataType()),</div>
<div class="line"><a name="l00684"></a><span class="lineno">  684</span>&#160;                                             location.<a class="code" href="structarmnn_1_1_check_location.xhtml#a5e3562cda960da001597e7dd5679b140">AsString</a>()));</div>
<div class="line"><a name="l00685"></a><span class="lineno">  685</span>&#160;        }</div>
<div class="line"><a name="l00686"></a><span class="lineno">  686</span>&#160;    }</div>
<div class="line"><a name="l00687"></a><span class="lineno">  687</span>&#160; </div>
<div class="line"><a name="l00688"></a><span class="lineno">  688</span>&#160;    <span class="keywordtype">float</span> quantizationScale = tensorPtr-&gt;quantizationScale();</div>
<div class="line"><a name="l00689"></a><span class="lineno">  689</span>&#160;    int32_t quantizationOffset = tensorPtr-&gt;quantizationOffset();</div>
<div class="line"><a name="l00690"></a><span class="lineno">  690</span>&#160; </div>
<div class="line"><a name="l00691"></a><span class="lineno">  691</span>&#160;    <span class="keywordflow">if</span> (tensorPtr-&gt;dimensionality() == <span class="keyword">static_cast&lt;</span><span class="keywordtype">unsigned</span> <span class="keywordtype">int</span><span class="keyword">&gt;</span>(Dimensionality::Scalar))</div>
<div class="line"><a name="l00692"></a><span class="lineno">  692</span>&#160;    {</div>
<div class="line"><a name="l00693"></a><span class="lineno">  693</span>&#160;        <span class="keywordflow">return</span> <a class="code" href="classarmnn_1_1_tensor_info.xhtml">armnn::TensorInfo</a>(<a class="code" href="classarmnn_1_1_tensor_shape.xhtml">TensorShape</a>{<a class="code" href="namespacearmnn.xhtml#a8e1f31031ad31cd8cc22d7c9daa32681af60357a8d17e45793298323f1b372a74">armnn::Dimensionality::Scalar</a>},</div>
<div class="line"><a name="l00694"></a><span class="lineno">  694</span>&#160;                                 type,</div>
<div class="line"><a name="l00695"></a><span class="lineno">  695</span>&#160;                                 quantizationScale,</div>
<div class="line"><a name="l00696"></a><span class="lineno">  696</span>&#160;                                 quantizationOffset);</div>
<div class="line"><a name="l00697"></a><span class="lineno">  697</span>&#160;    }</div>
<div class="line"><a name="l00698"></a><span class="lineno">  698</span>&#160;    <span class="keywordflow">else</span> <span class="keywordflow">if</span> (tensorPtr-&gt;dimensionality() == <span class="keyword">static_cast&lt;</span><span class="keywordtype">unsigned</span> <span class="keywordtype">int</span><span class="keyword">&gt;</span>(Dimensionality::NotSpecified))</div>
<div class="line"><a name="l00699"></a><span class="lineno">  699</span>&#160;    {</div>
<div class="line"><a name="l00700"></a><span class="lineno">  700</span>&#160;        <a class="code" href="classarmnn_1_1_tensor_info.xhtml">armnn::TensorInfo</a> result(<a class="code" href="classarmnn_1_1_tensor_shape.xhtml">TensorShape</a>{Dimensionality::NotSpecified},</div>
<div class="line"><a name="l00701"></a><span class="lineno">  701</span>&#160;                                 type,</div>
<div class="line"><a name="l00702"></a><span class="lineno">  702</span>&#160;                                 quantizationScale,</div>
<div class="line"><a name="l00703"></a><span class="lineno">  703</span>&#160;                                 quantizationOffset);</div>
<div class="line"><a name="l00704"></a><span class="lineno">  704</span>&#160;        <span class="keywordflow">return</span> result;</div>
<div class="line"><a name="l00705"></a><span class="lineno">  705</span>&#160;    }</div>
<div class="line"><a name="l00706"></a><span class="lineno">  706</span>&#160; </div>
<div class="line"><a name="l00707"></a><span class="lineno">  707</span>&#160;    <span class="keyword">auto</span> dimensions = tensorPtr-&gt;dimensions();</div>
<div class="line"><a name="l00708"></a><span class="lineno">  708</span>&#160;    <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> size = dimensions-&gt;size();</div>
<div class="line"><a name="l00709"></a><span class="lineno">  709</span>&#160;    std::vector&lt;unsigned int&gt; outputDims(dimensions-&gt;begin(), dimensions-&gt;begin() + size);</div>
<div class="line"><a name="l00710"></a><span class="lineno">  710</span>&#160;    <span class="keywordtype">bool</span> dimensionsSpecificity[<a class="code" href="namespacearmnn.xhtml#abdcd184ed3bd648bb31d385040cafd5d">armnn::MaxNumOfTensorDimensions</a>];</div>
<div class="line"><a name="l00711"></a><span class="lineno">  711</span>&#160;    std::fill_n(dimensionsSpecificity, <a class="code" href="namespacearmnn.xhtml#abdcd184ed3bd648bb31d385040cafd5d">armnn::MaxNumOfTensorDimensions</a>, <span class="keyword">true</span>);</div>
<div class="line"><a name="l00712"></a><span class="lineno">  712</span>&#160;    <span class="comment">// For backwards compatibility check if the dimensionSpecificity vector is present first.</span></div>
<div class="line"><a name="l00713"></a><span class="lineno">  713</span>&#160;    <span class="comment">// The default is to have dimensionSpecificity set to all true&#39;s anyway.</span></div>
<div class="line"><a name="l00714"></a><span class="lineno">  714</span>&#160;    <span class="keywordflow">if</span> (tensorPtr-&gt;dimensionSpecificity() != <span class="keyword">nullptr</span>)</div>
<div class="line"><a name="l00715"></a><span class="lineno">  715</span>&#160;    {</div>
<div class="line"><a name="l00716"></a><span class="lineno">  716</span>&#160;        <span class="keyword">auto</span> dimensionSpecificity = tensorPtr-&gt;dimensionSpecificity();</div>
<div class="line"><a name="l00717"></a><span class="lineno">  717</span>&#160;        size = dimensionSpecificity-&gt;size();</div>
<div class="line"><a name="l00718"></a><span class="lineno">  718</span>&#160;        <span class="keywordflow">for</span> (<span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> i = 0; i &lt; size; ++i)</div>
<div class="line"><a name="l00719"></a><span class="lineno">  719</span>&#160;        {</div>
<div class="line"><a name="l00720"></a><span class="lineno">  720</span>&#160;            dimensionsSpecificity[i] = dimensionSpecificity-&gt;Get(i);</div>
<div class="line"><a name="l00721"></a><span class="lineno">  721</span>&#160;        }</div>
<div class="line"><a name="l00722"></a><span class="lineno">  722</span>&#160;    }</div>
<div class="line"><a name="l00723"></a><span class="lineno">  723</span>&#160;    <span class="comment">// Construct a TensorShape</span></div>
<div class="line"><a name="l00724"></a><span class="lineno">  724</span>&#160;    <a class="code" href="classarmnn_1_1_tensor_shape.xhtml">TensorShape</a> shape(size, outputDims.data(), dimensionsSpecificity);</div>
<div class="line"><a name="l00725"></a><span class="lineno">  725</span>&#160; </div>
<div class="line"><a name="l00726"></a><span class="lineno">  726</span>&#160;    <span class="keyword">auto</span> quantizationScales = tensorPtr-&gt;quantizationScales();</div>
<div class="line"><a name="l00727"></a><span class="lineno">  727</span>&#160;    <span class="keywordflow">if</span> (quantizationScales)</div>
<div class="line"><a name="l00728"></a><span class="lineno">  728</span>&#160;    {</div>
<div class="line"><a name="l00729"></a><span class="lineno">  729</span>&#160;        <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> quantizationScalesSize = quantizationScales-&gt;size();</div>
<div class="line"><a name="l00730"></a><span class="lineno">  730</span>&#160;        std::vector&lt;float&gt; scales(quantizationScales-&gt;begin(), quantizationScales-&gt;begin() + quantizationScalesSize);</div>
<div class="line"><a name="l00731"></a><span class="lineno">  731</span>&#160;        <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> quantizationDim = tensorPtr-&gt;quantizationDim();</div>
<div class="line"><a name="l00732"></a><span class="lineno">  732</span>&#160;        <a class="code" href="classarmnn_1_1_tensor_info.xhtml">armnn::TensorInfo</a> result(shape,</div>
<div class="line"><a name="l00733"></a><span class="lineno">  733</span>&#160;                                 type,</div>
<div class="line"><a name="l00734"></a><span class="lineno">  734</span>&#160;                                 scales,</div>
<div class="line"><a name="l00735"></a><span class="lineno">  735</span>&#160;                                 quantizationDim);</div>
<div class="line"><a name="l00736"></a><span class="lineno">  736</span>&#160;        <span class="keywordflow">return</span> result;</div>
<div class="line"><a name="l00737"></a><span class="lineno">  737</span>&#160;    }</div>
<div class="line"><a name="l00738"></a><span class="lineno">  738</span>&#160; </div>
<div class="line"><a name="l00739"></a><span class="lineno">  739</span>&#160;    <span class="comment">// two statements (on purpose) for easier debugging:</span></div>
<div class="line"><a name="l00740"></a><span class="lineno">  740</span>&#160;    <a class="code" href="classarmnn_1_1_tensor_info.xhtml">armnn::TensorInfo</a> result(shape,</div>
<div class="line"><a name="l00741"></a><span class="lineno">  741</span>&#160;                             type,</div>
<div class="line"><a name="l00742"></a><span class="lineno">  742</span>&#160;                             quantizationScale,</div>
<div class="line"><a name="l00743"></a><span class="lineno">  743</span>&#160;                             quantizationOffset);</div>
<div class="line"><a name="l00744"></a><span class="lineno">  744</span>&#160;    </div>
<div class="line"><a name="l00745"></a><span class="lineno">  745</span>&#160;    <span class="keywordflow">return</span> result;</div>
<div class="line"><a name="l00746"></a><span class="lineno">  746</span>&#160;}</div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="_exceptions_8hpp_source.xhtml#l00029">CheckLocation::AsString()</a>, <a class="el" href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a27226c864bac7454a8504f8edb15d95b">armnn::Boolean</a>, <a class="el" href="_exceptions_8hpp_source.xhtml#l00203">CHECK_LOCATION</a>, <a class="el" href="_deserializer_8cpp_source.xhtml#l00172">CHECK_TENSOR_PTR</a>, <a class="el" href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a26e6ed77470c6f2f830ecf874e6c0d55">armnn::Float16</a>, <a class="el" href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a166495adc0d0f53bee6baecc577f5204">armnn::Float32</a>, <a class="el" href="_types_8hpp_source.xhtml#l00031">armnn::MaxNumOfTensorDimensions</a>, <a class="el" href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a9d02ea768c081d4bdb2b7cab0b3f510d">armnn::QAsymmS8</a>, <a class="el" href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a0a3f57c876f5a230244c38e1453a8a6e">armnn::QAsymmU8</a>, <a class="el" href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a053c769dcf82d66ef326c86980c02ba7">armnn::QSymmS16</a>, <a class="el" href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a9945327825b115e93a3b89f4302e76db">armnn::QSymmS8</a>, <a class="el" href="namespacearmnn.xhtml#a8e1f31031ad31cd8cc22d7c9daa32681af60357a8d17e45793298323f1b372a74">armnn::Scalar</a>, <a class="el" href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6accedffbc6e5308e33d3843e8bdc0dad7">armnn::Signed32</a>, and <a class="el" href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6ae1b3c9c6087a93b07c83e0b04f377a8d">armnn::Signed64</a>.</p>

<p class="reference">Referenced by <a class="el" href="_tf_lite_parser_8cpp_source.xhtml#l05314">TfLiteParserImpl::GetNetworkInputBindingInfo()</a>, <a class="el" href="_tf_lite_parser_8cpp_source.xhtml#l05346">TfLiteParserImpl::GetNetworkOutputBindingInfo()</a>, and <a class="el" href="_deserializer_8cpp_source.xhtml#l00748">ToConstTensor()</a>.</p>

</div>
</div>
</div><!-- contents -->
</div><!-- doc-content -->
<div class="ttc" id="anamespacearmnn_xhtml_a56297e0f7b215eea46c818cb7528d9eaa1e34af023adeb7d5f484f8eb4b9826b6"><div class="ttname"><a href="namespacearmnn.xhtml#a56297e0f7b215eea46c818cb7528d9eaa1e34af023adeb7d5f484f8eb4b9826b6">armnn::ActivationFunction::Abs</a></div><div class="ttdeci">@ Abs</div></div>
<div class="ttc" id="anamespacearmnn_xhtml_a56297e0f7b215eea46c818cb7528d9eaaed67cf7d54c570e4c4891800f085f41d"><div class="ttname"><a href="namespacearmnn.xhtml#a56297e0f7b215eea46c818cb7528d9eaaed67cf7d54c570e4c4891800f085f41d">armnn::ActivationFunction::Elu</a></div><div class="ttdeci">@ Elu</div></div>
<div class="ttc" id="anamespacearmnn_xhtml_abc05539fc6e7907f32ef0fb242e3b3b0a3d6c9ac08ada31c184094bbc67afe00d"><div class="ttname"><a href="namespacearmnn.xhtml#abc05539fc6e7907f32ef0fb242e3b3b0a3d6c9ac08ada31c184094bbc67afe00d">armnn::ReduceOperation::Mean</a></div><div class="ttdeci">@ Mean</div></div>
<div class="ttc" id="astructarmnn_1_1_check_location_xhtml"><div class="ttname"><a href="structarmnn_1_1_check_location.xhtml">armnn::CheckLocation</a></div><div class="ttdef"><b>Definition:</b> <a href="_exceptions_8hpp_source.xhtml#l00014">Exceptions.hpp:14</a></div></div>
<div class="ttc" id="anamespacearmnn_xhtml_ad8ed01ff3ff33333d8e19db4d2818bb6a0a3f57c876f5a230244c38e1453a8a6e"><div class="ttname"><a href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a0a3f57c876f5a230244c38e1453a8a6e">armnn::DataType::QAsymmU8</a></div><div class="ttdeci">@ QAsymmU8</div></div>
<div class="ttc" id="anamespacearmnn_xhtml_a2d299363c9fc33334c571fa29ca4f58caf5f286e73bda105e538310b3190f75c5"><div class="ttname"><a href="namespacearmnn.xhtml#a2d299363c9fc33334c571fa29ca4f58caf5f286e73bda105e538310b3190f75c5">armnn::ComparisonOperation::Equal</a></div><div class="ttdeci">@ Equal</div></div>
<div class="ttc" id="anamespacearmnn_xhtml_a56297e0f7b215eea46c818cb7528d9eaa32a843da6ea40ab3b17a3421ccdf671b"><div class="ttname"><a href="namespacearmnn.xhtml#a56297e0f7b215eea46c818cb7528d9eaa32a843da6ea40ab3b17a3421ccdf671b">armnn::ActivationFunction::Linear</a></div><div class="ttdeci">@ Linear</div></div>
<div class="ttc" id="a_deserializer_8cpp_xhtml_ae38d96fe05581ea025713b3e781c5a43"><div class="ttname"><a href="_deserializer_8cpp.xhtml#ae38d96fe05581ea025713b3e781c5a43">CHECK_TENSOR_PTR</a></div><div class="ttdeci">#define CHECK_TENSOR_PTR(TENSOR_PTR)</div><div class="ttdef"><b>Definition:</b> <a href="_deserializer_8cpp_source.xhtml#l00172">Deserializer.cpp:172</a></div></div>
<div class="ttc" id="anamespacearmnn_xhtml_a2da4db0140d1a6dc69c9c82e9ef5379ea103aa83df42877d5f9baeafdbf620b55"><div class="ttname"><a href="namespacearmnn.xhtml#a2da4db0140d1a6dc69c9c82e9ef5379ea103aa83df42877d5f9baeafdbf620b55">armnn::LogicalBinaryOperation::LogicalAnd</a></div><div class="ttdeci">@ LogicalAnd</div></div>
<div class="ttc" id="aclassarmnn_1_1_exception_xhtml"><div class="ttname"><a href="classarmnn_1_1_exception.xhtml">armnn::Exception</a></div><div class="ttdoc">Base class for all ArmNN exceptions so that users can filter to just those.</div><div class="ttdef"><b>Definition:</b> <a href="_exceptions_8hpp_source.xhtml#l00046">Exceptions.hpp:46</a></div></div>
<div class="ttc" id="a_exceptions_8hpp_xhtml_aa3be76aec4ce713822a5ea1ecbb7bc61"><div class="ttname"><a href="_exceptions_8hpp.xhtml#aa3be76aec4ce713822a5ea1ecbb7bc61">CHECK_LOCATION</a></div><div class="ttdeci">#define CHECK_LOCATION()</div><div class="ttdef"><b>Definition:</b> <a href="_exceptions_8hpp_source.xhtml#l00203">Exceptions.hpp:203</a></div></div>
<div class="ttc" id="anamespacearmnn_xhtml_ad8ed01ff3ff33333d8e19db4d2818bb6a26e6ed77470c6f2f830ecf874e6c0d55"><div class="ttname"><a href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a26e6ed77470c6f2f830ecf874e6c0d55">armnn::DataType::Float16</a></div><div class="ttdeci">@ Float16</div></div>
<div class="ttc" id="anamespacearmnn_xhtml_a2d299363c9fc33334c571fa29ca4f58ca19bb0af2c3c530538cb41aff7f235b96"><div class="ttname"><a href="namespacearmnn.xhtml#a2d299363c9fc33334c571fa29ca4f58ca19bb0af2c3c530538cb41aff7f235b96">armnn::ComparisonOperation::NotEqual</a></div><div class="ttdeci">@ NotEqual</div></div>
<div class="ttc" id="aclassarmnn_1_1_parse_exception_xhtml"><div class="ttname"><a href="classarmnn_1_1_parse_exception.xhtml">armnn::ParseException</a></div><div class="ttdef"><b>Definition:</b> <a href="_exceptions_8hpp_source.xhtml#l00092">Exceptions.hpp:92</a></div></div>
<div class="ttc" id="anamespacearmnn_xhtml_a8e1f31031ad31cd8cc22d7c9daa32681af60357a8d17e45793298323f1b372a74"><div class="ttname"><a href="namespacearmnn.xhtml#a8e1f31031ad31cd8cc22d7c9daa32681af60357a8d17e45793298323f1b372a74">armnn::Dimensionality::Scalar</a></div><div class="ttdeci">@ Scalar</div></div>
<div class="ttc" id="aclassarmnn_1_1_const_tensor_xhtml"><div class="ttname"><a href="classarmnn_1_1_const_tensor.xhtml">armnn::ConstTensor</a></div><div class="ttdoc">A tensor defined by a TensorInfo (shape and data type) and an immutable backing store.</div><div class="ttdef"><b>Definition:</b> <a href="_tensor_8hpp_source.xhtml#l00327">Tensor.hpp:327</a></div></div>
<div class="ttc" id="anamespacearmnn_xhtml_a1cfaa710db2a54673b21d2ea2da757c8acad39a154bffb61175f674d6eefaf6d0"><div class="ttname"><a href="namespacearmnn.xhtml#a1cfaa710db2a54673b21d2ea2da757c8acad39a154bffb61175f674d6eefaf6d0">armnn::UnaryOperation::Exp</a></div><div class="ttdeci">@ Exp</div></div>
<div class="ttc" id="anamespacearmnn_xhtml_a1cfaa710db2a54673b21d2ea2da757c8aae77f3ad25595e35b327334d89410054"><div class="ttname"><a href="namespacearmnn.xhtml#a1cfaa710db2a54673b21d2ea2da757c8aae77f3ad25595e35b327334d89410054">armnn::UnaryOperation::Sqrt</a></div><div class="ttdeci">@ Sqrt</div></div>
<div class="ttc" id="anamespacearmnn_xhtml_ad8ed01ff3ff33333d8e19db4d2818bb6accedffbc6e5308e33d3843e8bdc0dad7"><div class="ttname"><a href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6accedffbc6e5308e33d3843e8bdc0dad7">armnn::DataType::Signed32</a></div><div class="ttdeci">@ Signed32</div></div>
<div class="ttc" id="anamespacearmnn_xhtml_a1cfaa710db2a54673b21d2ea2da757c8afb278fa5defd7e699fcbc930c3e76ccd"><div class="ttname"><a href="namespacearmnn.xhtml#a1cfaa710db2a54673b21d2ea2da757c8afb278fa5defd7e699fcbc930c3e76ccd">armnn::UnaryOperation::Neg</a></div><div class="ttdeci">@ Neg</div></div>
<div class="ttc" id="anamespacearmnn_xhtml_a56297e0f7b215eea46c818cb7528d9eaa0877e5b3fbe9d7569df6399609ed0186"><div class="ttname"><a href="namespacearmnn.xhtml#a56297e0f7b215eea46c818cb7528d9eaa0877e5b3fbe9d7569df6399609ed0186">armnn::ActivationFunction::HardSwish</a></div><div class="ttdeci">@ HardSwish</div></div>
<div class="ttc" id="anamespacearmnn_xhtml_a2d299363c9fc33334c571fa29ca4f58caa4cbdbb6070a5abb35fc95ecf1e22c14"><div class="ttname"><a href="namespacearmnn.xhtml#a2d299363c9fc33334c571fa29ca4f58caa4cbdbb6070a5abb35fc95ecf1e22c14">armnn::ComparisonOperation::LessOrEqual</a></div><div class="ttdeci">@ LessOrEqual</div></div>
<div class="ttc" id="anamespacearmnn_xhtml_ad8ed01ff3ff33333d8e19db4d2818bb6a9d02ea768c081d4bdb2b7cab0b3f510d"><div class="ttname"><a href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a9d02ea768c081d4bdb2b7cab0b3f510d">armnn::DataType::QAsymmS8</a></div><div class="ttdeci">@ QAsymmS8</div></div>
<div class="ttc" id="anamespacearmnn_xhtml_a14d24d90ab4ba2956e92e27890ba4c91acb17869fe51048b5a5c4c6106551a255"><div class="ttname"><a href="namespacearmnn.xhtml#a14d24d90ab4ba2956e92e27890ba4c91acb17869fe51048b5a5c4c6106551a255">armnn::PaddingMode::Constant</a></div><div class="ttdeci">@ Constant</div></div>
<div class="ttc" id="aclassarmnn_1_1_tensor_info_xhtml_a8ffca1e21bdfa7f945617acd606aac91"><div class="ttname"><a href="classarmnn_1_1_tensor_info.xhtml#a8ffca1e21bdfa7f945617acd606aac91">armnn::TensorInfo::SetConstant</a></div><div class="ttdeci">void SetConstant(const bool IsConstant=true)</div><div class="ttdoc">Marks the data corresponding to this tensor info as constant.</div><div class="ttdef"><b>Definition:</b> <a href="_tensor_8cpp_source.xhtml#l00514">Tensor.cpp:514</a></div></div>
<div class="ttc" id="a_deserializer_8cpp_xhtml_aa6fd9c6c98bdd08620d75cac3a2e17e6"><div class="ttname"><a href="_deserializer_8cpp.xhtml#aa6fd9c6c98bdd08620d75cac3a2e17e6">CHECK_CONST_TENSOR_SIZE</a></div><div class="ttdeci">#define CHECK_CONST_TENSOR_SIZE(CONST_TENSOR_SIZE, TENSOR_SIZE)</div><div class="ttdef"><b>Definition:</b> <a href="_deserializer_8cpp_source.xhtml#l00175">Deserializer.cpp:175</a></div></div>
<div class="ttc" id="anamespacearmnn_xhtml_abc05539fc6e7907f32ef0fb242e3b3b0a78d811e98514cd165dda532286610fd2"><div class="ttname"><a href="namespacearmnn.xhtml#abc05539fc6e7907f32ef0fb242e3b3b0a78d811e98514cd165dda532286610fd2">armnn::ReduceOperation::Min</a></div><div class="ttdeci">@ Min</div></div>
<div class="ttc" id="astructarmnn_1_1_check_location_xhtml_a5e3562cda960da001597e7dd5679b140"><div class="ttname"><a href="structarmnn_1_1_check_location.xhtml#a5e3562cda960da001597e7dd5679b140">armnn::CheckLocation::AsString</a></div><div class="ttdeci">std::string AsString() const</div><div class="ttdef"><b>Definition:</b> <a href="_exceptions_8hpp_source.xhtml#l00029">Exceptions.hpp:29</a></div></div>
<div class="ttc" id="anamespacearmnn_xhtml_ac4f8557279754ed7b3f749d55b0e3047ae80155eceb940c89e2de63ad05868db2"><div class="ttname"><a href="namespacearmnn.xhtml#ac4f8557279754ed7b3f749d55b0e3047ae80155eceb940c89e2de63ad05868db2">armnn::BinaryOperation::Sub</a></div><div class="ttdeci">@ Sub</div></div>
<div class="ttc" id="anamespacearmnn_xhtml_a9a2af2f8c4af4f9efa8e79417d505ac4aaa020331bb30d2fa2ecf7c3a0777823f"><div class="ttname"><a href="namespacearmnn.xhtml#a9a2af2f8c4af4f9efa8e79417d505ac4aaa020331bb30d2fa2ecf7c3a0777823f">armnn::ResizeMethod::NearestNeighbor</a></div><div class="ttdeci">@ NearestNeighbor</div></div>
<div class="ttc" id="aclassarmnn_1_1_tensor_shape_xhtml"><div class="ttname"><a href="classarmnn_1_1_tensor_shape.xhtml">armnn::TensorShape</a></div><div class="ttdef"><b>Definition:</b> <a href="_tensor_8hpp_source.xhtml#l00020">Tensor.hpp:20</a></div></div>
<div class="ttc" id="anamespacearmnn_xhtml_abc05539fc6e7907f32ef0fb242e3b3b0aa0ec87054b5e5b7847d0d8780a01a3d5"><div class="ttname"><a href="namespacearmnn.xhtml#abc05539fc6e7907f32ef0fb242e3b3b0aa0ec87054b5e5b7847d0d8780a01a3d5">armnn::ReduceOperation::Sum</a></div><div class="ttdeci">@ Sum</div></div>
<div class="ttc" id="anamespacearmnn_xhtml_a2da4db0140d1a6dc69c9c82e9ef5379ea74ce78827b02c650a20b149765388247"><div class="ttname"><a href="namespacearmnn.xhtml#a2da4db0140d1a6dc69c9c82e9ef5379ea74ce78827b02c650a20b149765388247">armnn::LogicalBinaryOperation::LogicalOr</a></div><div class="ttdeci">@ LogicalOr</div></div>
<div class="ttc" id="anamespacearmnn_xhtml_a1cfaa710db2a54673b21d2ea2da757c8ab95a01ffffa8fcdd2a9af961937c097c"><div class="ttname"><a href="namespacearmnn.xhtml#a1cfaa710db2a54673b21d2ea2da757c8ab95a01ffffa8fcdd2a9af961937c097c">armnn::UnaryOperation::Ceil</a></div><div class="ttdeci">@ Ceil</div></div>
<div class="ttc" id="anamespacearmnn_xhtml_ad1d5cce2d9e9a5d61c243e5c989112e0a6b99f356fe3b30a2a850b5ea897c289f"><div class="ttname"><a href="namespacearmnn.xhtml#ad1d5cce2d9e9a5d61c243e5c989112e0a6b99f356fe3b30a2a850b5ea897c289f">armnn::DataLayout::NCHW</a></div><div class="ttdeci">@ NCHW</div></div>
<div class="ttc" id="anamespacearmnn_xhtml_abc05539fc6e7907f32ef0fb242e3b3b0a6a061313d22e51e0f25b7cd4dc065233"><div class="ttname"><a href="namespacearmnn.xhtml#abc05539fc6e7907f32ef0fb242e3b3b0a6a061313d22e51e0f25b7cd4dc065233">armnn::ReduceOperation::Max</a></div><div class="ttdeci">@ Max</div></div>
<div class="ttc" id="anamespacearmnn_xhtml_a56297e0f7b215eea46c818cb7528d9eaa21eebb164e4b8b9bcf64fdb4d8d5dff4"><div class="ttname"><a href="namespacearmnn.xhtml#a56297e0f7b215eea46c818cb7528d9eaa21eebb164e4b8b9bcf64fdb4d8d5dff4">armnn::ActivationFunction::Sigmoid</a></div><div class="ttdeci">@ Sigmoid</div></div>
<div class="ttc" id="anamespacearmnn_xhtml_ac4f8557279754ed7b3f749d55b0e3047a62b6d55816cf737bfc6f42e60df1a3f2"><div class="ttname"><a href="namespacearmnn.xhtml#ac4f8557279754ed7b3f749d55b0e3047a62b6d55816cf737bfc6f42e60df1a3f2">armnn::BinaryOperation::Mul</a></div><div class="ttdeci">@ Mul</div></div>
<div class="ttc" id="anamespacearmnn_xhtml_ad1d5cce2d9e9a5d61c243e5c989112e0a884e0167ebf9bbe6cfd6ca5ab97ab015"><div class="ttname"><a href="namespacearmnn.xhtml#ad1d5cce2d9e9a5d61c243e5c989112e0a884e0167ebf9bbe6cfd6ca5ab97ab015">armnn::DataLayout::NCDHW</a></div><div class="ttdeci">@ NCDHW</div></div>
<div class="ttc" id="anamespacearmnn_xhtml_a2d299363c9fc33334c571fa29ca4f58ca8768a6821cd735aea4f5b0df88c1fc6a"><div class="ttname"><a href="namespacearmnn.xhtml#a2d299363c9fc33334c571fa29ca4f58ca8768a6821cd735aea4f5b0df88c1fc6a">armnn::ComparisonOperation::Greater</a></div><div class="ttdeci">@ Greater</div></div>
<div class="ttc" id="anamespacearmnn_xhtml_a2d299363c9fc33334c571fa29ca4f58ca6f2f0aefb3d22da0f3839453add5f937"><div class="ttname"><a href="namespacearmnn.xhtml#a2d299363c9fc33334c571fa29ca4f58ca6f2f0aefb3d22da0f3839453add5f937">armnn::ComparisonOperation::GreaterOrEqual</a></div><div class="ttdeci">@ GreaterOrEqual</div></div>
<div class="ttc" id="anamespacearmnn_xhtml_ad8ed01ff3ff33333d8e19db4d2818bb6a166495adc0d0f53bee6baecc577f5204"><div class="ttname"><a href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a166495adc0d0f53bee6baecc577f5204">armnn::DataType::Float32</a></div><div class="ttdeci">@ Float32</div></div>
<div class="ttc" id="aclassarmnn_1_1_tensor_info_xhtml_a8846406ac37fbd2204f0be16ee05d5b7"><div class="ttname"><a href="classarmnn_1_1_tensor_info.xhtml#a8846406ac37fbd2204f0be16ee05d5b7">armnn::TensorInfo::GetNumElements</a></div><div class="ttdeci">unsigned int GetNumElements() const</div><div class="ttdef"><b>Definition:</b> <a href="_tensor_8hpp_source.xhtml#l00196">Tensor.hpp:196</a></div></div>
<div class="ttc" id="anamespacearmnn_xhtml_a9a2af2f8c4af4f9efa8e79417d505ac4aaf17c98bbd83c27d6426d2ff3fa81d7f"><div class="ttname"><a href="namespacearmnn.xhtml#a9a2af2f8c4af4f9efa8e79417d505ac4aaf17c98bbd83c27d6426d2ff3fa81d7f">armnn::ResizeMethod::Bilinear</a></div><div class="ttdeci">@ Bilinear</div></div>
<div class="ttc" id="anamespacearmnn_xhtml_ae7e8cbf71db6a490789ca6dcaa8deeaea78d811e98514cd165dda532286610fd2"><div class="ttname"><a href="namespacearmnn.xhtml#ae7e8cbf71db6a490789ca6dcaa8deeaea78d811e98514cd165dda532286610fd2">armnn::ArgMinMaxFunction::Min</a></div><div class="ttdeci">@ Min</div></div>
<div class="ttc" id="aclassarmnn_1_1_tensor_info_xhtml"><div class="ttname"><a href="classarmnn_1_1_tensor_info.xhtml">armnn::TensorInfo</a></div><div class="ttdef"><b>Definition:</b> <a href="_tensor_8hpp_source.xhtml#l00152">Tensor.hpp:152</a></div></div>
<div class="ttc" id="anamespacearmnn_xhtml_ad8ed01ff3ff33333d8e19db4d2818bb6ae1b3c9c6087a93b07c83e0b04f377a8d"><div class="ttname"><a href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6ae1b3c9c6087a93b07c83e0b04f377a8d">armnn::DataType::Signed64</a></div><div class="ttdeci">@ Signed64</div></div>
<div class="ttc" id="anamespacearmnn_xhtml_ae7e8cbf71db6a490789ca6dcaa8deeaea6a061313d22e51e0f25b7cd4dc065233"><div class="ttname"><a href="namespacearmnn.xhtml#ae7e8cbf71db6a490789ca6dcaa8deeaea6a061313d22e51e0f25b7cd4dc065233">armnn::ArgMinMaxFunction::Max</a></div><div class="ttdeci">@ Max</div></div>
<div class="ttc" id="anamespacearmnn_xhtml_ac4f8557279754ed7b3f749d55b0e3047aa1d0ec6d56f8833a078b5a7ac4caf2d4"><div class="ttname"><a href="namespacearmnn.xhtml#ac4f8557279754ed7b3f749d55b0e3047aa1d0ec6d56f8833a078b5a7ac4caf2d4">armnn::BinaryOperation::Minimum</a></div><div class="ttdeci">@ Minimum</div></div>
<div class="ttc" id="anamespacearmnn_xhtml_ad1d5cce2d9e9a5d61c243e5c989112e0ad066db54b89b0912e7e7c6da51e2da51"><div class="ttname"><a href="namespacearmnn.xhtml#ad1d5cce2d9e9a5d61c243e5c989112e0ad066db54b89b0912e7e7c6da51e2da51">armnn::DataLayout::NHWC</a></div><div class="ttdeci">@ NHWC</div></div>
<div class="ttc" id="anamespacearmnn_xhtml_a56297e0f7b215eea46c818cb7528d9eaaceb46ca115d05c51aa5a16a8867c3304"><div class="ttname"><a href="namespacearmnn.xhtml#a56297e0f7b215eea46c818cb7528d9eaaceb46ca115d05c51aa5a16a8867c3304">armnn::ActivationFunction::Square</a></div><div class="ttdeci">@ Square</div></div>
<div class="ttc" id="anamespacearmnn_xhtml_a14d24d90ab4ba2956e92e27890ba4c91a74de3e45e4491e956e8dc18d841d9b00"><div class="ttname"><a href="namespacearmnn.xhtml#a14d24d90ab4ba2956e92e27890ba4c91a74de3e45e4491e956e8dc18d841d9b00">armnn::PaddingMode::Reflect</a></div><div class="ttdeci">@ Reflect</div></div>
<div class="ttc" id="anamespacearmnn_xhtml_ac4f8557279754ed7b3f749d55b0e3047a8321e79c278ec510f63675c040594892"><div class="ttname"><a href="namespacearmnn.xhtml#ac4f8557279754ed7b3f749d55b0e3047a8321e79c278ec510f63675c040594892">armnn::BinaryOperation::Maximum</a></div><div class="ttdeci">@ Maximum</div></div>
<div class="ttc" id="anamespacearmnn_xhtml_a1cfaa710db2a54673b21d2ea2da757c8a1e34af023adeb7d5f484f8eb4b9826b6"><div class="ttname"><a href="namespacearmnn.xhtml#a1cfaa710db2a54673b21d2ea2da757c8a1e34af023adeb7d5f484f8eb4b9826b6">armnn::UnaryOperation::Abs</a></div><div class="ttdeci">@ Abs</div></div>
<div class="ttc" id="anamespacearmnn_xhtml_ac4f8557279754ed7b3f749d55b0e3047aec211f7c20af43e742bf2570c3cb84f9"><div class="ttname"><a href="namespacearmnn.xhtml#ac4f8557279754ed7b3f749d55b0e3047aec211f7c20af43e742bf2570c3cb84f9">armnn::BinaryOperation::Add</a></div><div class="ttdeci">@ Add</div></div>
<div class="ttc" id="aclassarmnn_1_1_tensor_shape_xhtml_a157e27d41e9f6b21f0d3c025fa47dc24"><div class="ttname"><a href="classarmnn_1_1_tensor_shape.xhtml#a157e27d41e9f6b21f0d3c025fa47dc24">armnn::TensorShape::GetNumDimensions</a></div><div class="ttdeci">unsigned int GetNumDimensions() const</div><div class="ttdoc">Function that returns the tensor rank.</div><div class="ttdef"><b>Definition:</b> <a href="_tensor_8cpp_source.xhtml#l00174">Tensor.cpp:174</a></div></div>
<div class="ttc" id="anamespacearmnn_xhtml_ad8ed01ff3ff33333d8e19db4d2818bb6"><div class="ttname"><a href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6">armnn::DataType</a></div><div class="ttdeci">DataType</div><div class="ttdef"><b>Definition:</b> <a href="_types_8hpp_source.xhtml#l00048">Types.hpp:48</a></div></div>
<div class="ttc" id="anamespacearmnn_xhtml_a56297e0f7b215eea46c818cb7528d9eaa23b68da1de2b77d74da9da2635722a3e"><div class="ttname"><a href="namespacearmnn.xhtml#a56297e0f7b215eea46c818cb7528d9eaa23b68da1de2b77d74da9da2635722a3e">armnn::ActivationFunction::TanH</a></div><div class="ttdeci">@ TanH</div></div>
<div class="ttc" id="anamespacearmnn_xhtml_a14d24d90ab4ba2956e92e27890ba4c91af334649ef5e5d0ffe200751d07012626"><div class="ttname"><a href="namespacearmnn.xhtml#a14d24d90ab4ba2956e92e27890ba4c91af334649ef5e5d0ffe200751d07012626">armnn::PaddingMode::Symmetric</a></div><div class="ttdeci">@ Symmetric</div></div>
<div class="ttc" id="anamespacearmnn_deserializer_xhtml_a948b8c615ff06defa3b80d2352259ff2"><div class="ttname"><a href="namespacearmnn_deserializer.xhtml#a948b8c615ff06defa3b80d2352259ff2">armnnDeserializer::ToTensorInfo</a></div><div class="ttdeci">armnn::TensorInfo ToTensorInfo(TensorRawPtr tensorPtr)</div><div class="ttdef"><b>Definition:</b> <a href="_deserializer_8cpp_source.xhtml#l00642">Deserializer.cpp:642</a></div></div>
<div class="ttc" id="anamespacearmnn_xhtml_a1cfaa710db2a54673b21d2ea2da757c8a2a25ebd8c909241e3f7818389b804ecc"><div class="ttname"><a href="namespacearmnn.xhtml#a1cfaa710db2a54673b21d2ea2da757c8a2a25ebd8c909241e3f7818389b804ecc">armnn::UnaryOperation::LogicalNot</a></div><div class="ttdeci">@ LogicalNot</div></div>
<div class="ttc" id="anamespacearmnn_xhtml_a1cfaa710db2a54673b21d2ea2da757c8a0986d137604183312e6d3599578bc6cd"><div class="ttname"><a href="namespacearmnn.xhtml#a1cfaa710db2a54673b21d2ea2da757c8a0986d137604183312e6d3599578bc6cd">armnn::UnaryOperation::Sin</a></div><div class="ttdeci">@ Sin</div></div>
<div class="ttc" id="anamespacearmnn_xhtml_ad8ed01ff3ff33333d8e19db4d2818bb6a9945327825b115e93a3b89f4302e76db"><div class="ttname"><a href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a9945327825b115e93a3b89f4302e76db">armnn::DataType::QSymmS8</a></div><div class="ttdeci">@ QSymmS8</div></div>
<div class="ttc" id="anamespacearmnn_xhtml_a1cfaa710db2a54673b21d2ea2da757c8a09bb7f6e2118c85a6a55bd4bf2beeca4"><div class="ttname"><a href="namespacearmnn.xhtml#a1cfaa710db2a54673b21d2ea2da757c8a09bb7f6e2118c85a6a55bd4bf2beeca4">armnn::UnaryOperation::Rsqrt</a></div><div class="ttdeci">@ Rsqrt</div></div>
<div class="ttc" id="anamespacearmnn_xhtml_ad8ed01ff3ff33333d8e19db4d2818bb6a053c769dcf82d66ef326c86980c02ba7"><div class="ttname"><a href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a053c769dcf82d66ef326c86980c02ba7">armnn::DataType::QSymmS16</a></div><div class="ttdeci">@ QSymmS16</div></div>
<div class="ttc" id="anamespacearmnn_xhtml_abc05539fc6e7907f32ef0fb242e3b3b0a362a33c23b08e4a32a4ec53fbb82cccd"><div class="ttname"><a href="namespacearmnn.xhtml#abc05539fc6e7907f32ef0fb242e3b3b0a362a33c23b08e4a32a4ec53fbb82cccd">armnn::ReduceOperation::Prod</a></div><div class="ttdeci">@ Prod</div></div>
<div class="ttc" id="anamespacearmnn_xhtml_a56297e0f7b215eea46c818cb7528d9eaa3d90c0a5ab3fcf8e6f6608cb3d3a1559"><div class="ttname"><a href="namespacearmnn.xhtml#a56297e0f7b215eea46c818cb7528d9eaa3d90c0a5ab3fcf8e6f6608cb3d3a1559">armnn::ActivationFunction::ReLu</a></div><div class="ttdeci">@ ReLu</div></div>
<div class="ttc" id="anamespacearmnn_xhtml_a56297e0f7b215eea46c818cb7528d9eaaae77f3ad25595e35b327334d89410054"><div class="ttname"><a href="namespacearmnn.xhtml#a56297e0f7b215eea46c818cb7528d9eaaae77f3ad25595e35b327334d89410054">armnn::ActivationFunction::Sqrt</a></div><div class="ttdeci">@ Sqrt</div></div>
<div class="ttc" id="a_deserializer_8cpp_xhtml_a637ba180b64a3cd1a4f83d048a030772"><div class="ttname"><a href="_deserializer_8cpp.xhtml#a637ba180b64a3cd1a4f83d048a030772">CHECK_CONST_TENSOR_PTR</a></div><div class="ttdeci">#define CHECK_CONST_TENSOR_PTR(TENSOR_PTR)</div><div class="ttdef"><b>Definition:</b> <a href="_deserializer_8cpp_source.xhtml#l00178">Deserializer.cpp:178</a></div></div>
<div class="ttc" id="anamespacearmnn_xhtml_ad1d5cce2d9e9a5d61c243e5c989112e0a4dd0194b114cbf51da5b3a72569863ef"><div class="ttname"><a href="namespacearmnn.xhtml#ad1d5cce2d9e9a5d61c243e5c989112e0a4dd0194b114cbf51da5b3a72569863ef">armnn::DataLayout::NDHWC</a></div><div class="ttdeci">@ NDHWC</div></div>
<div class="ttc" id="anamespacearmnn_xhtml_ad8ed01ff3ff33333d8e19db4d2818bb6a27226c864bac7454a8504f8edb15d95b"><div class="ttname"><a href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a27226c864bac7454a8504f8edb15d95b">armnn::DataType::Boolean</a></div><div class="ttdeci">@ Boolean</div></div>
<div class="ttc" id="aclassarmnn_1_1_invalid_argument_exception_xhtml"><div class="ttname"><a href="classarmnn_1_1_invalid_argument_exception.xhtml">armnn::InvalidArgumentException</a></div><div class="ttdef"><b>Definition:</b> <a href="_exceptions_8hpp_source.xhtml#l00080">Exceptions.hpp:80</a></div></div>
<div class="ttc" id="anamespacearmnn_xhtml_ac4f8557279754ed7b3f749d55b0e3047a43d11850893d2fe84a1e618121c1cc0a"><div class="ttname"><a href="namespacearmnn.xhtml#ac4f8557279754ed7b3f749d55b0e3047a43d11850893d2fe84a1e618121c1cc0a">armnn::BinaryOperation::Div</a></div><div class="ttdeci">@ Div</div></div>
<div class="ttc" id="anamespacearmnn_xhtml_a2d299363c9fc33334c571fa29ca4f58ca1cfdf0e8d0c87a228c1f40d9bee7888b"><div class="ttname"><a href="namespacearmnn.xhtml#a2d299363c9fc33334c571fa29ca4f58ca1cfdf0e8d0c87a228c1f40d9bee7888b">armnn::ComparisonOperation::Less</a></div><div class="ttdeci">@ Less</div></div>
<div class="ttc" id="anamespacearmnn_xhtml_a56297e0f7b215eea46c818cb7528d9eaabc5a0f0d6e7cf7fca73299dcd46c0f0d"><div class="ttname"><a href="namespacearmnn.xhtml#a56297e0f7b215eea46c818cb7528d9eaabc5a0f0d6e7cf7fca73299dcd46c0f0d">armnn::ActivationFunction::BoundedReLu</a></div><div class="ttdeci">@ BoundedReLu</div><div class="ttdoc">min(a, max(b, input)) ReLu1 &amp; ReLu6.</div></div>
<div class="ttc" id="anamespacearmnn_xhtml_abdcd184ed3bd648bb31d385040cafd5d"><div class="ttname"><a href="namespacearmnn.xhtml#abdcd184ed3bd648bb31d385040cafd5d">armnn::MaxNumOfTensorDimensions</a></div><div class="ttdeci">constexpr unsigned int MaxNumOfTensorDimensions</div><div class="ttdef"><b>Definition:</b> <a href="_types_8hpp_source.xhtml#l00031">Types.hpp:31</a></div></div>
<div class="ttc" id="anamespacearmnn_xhtml_a1cfaa710db2a54673b21d2ea2da757c8ace0be71e33226e4c1db2bcea5959f16b"><div class="ttname"><a href="namespacearmnn.xhtml#a1cfaa710db2a54673b21d2ea2da757c8ace0be71e33226e4c1db2bcea5959f16b">armnn::UnaryOperation::Log</a></div><div class="ttdeci">@ Log</div></div>
<div class="ttc" id="anamespacearmnn_xhtml_a56297e0f7b215eea46c818cb7528d9eaacb7667f5ec2f6e8a5943b781ba6c2735"><div class="ttname"><a href="namespacearmnn.xhtml#a56297e0f7b215eea46c818cb7528d9eaacb7667f5ec2f6e8a5943b781ba6c2735">armnn::ActivationFunction::LeakyReLu</a></div><div class="ttdeci">@ LeakyReLu</div></div>
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="namespacearmnn_deserializer.xhtml">armnnDeserializer</a></li>
    <li class="footer">Generated on Thu May 18 2023 10:35:51 for ArmNN by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.17 </li>
  </ul>
</div>
</body>
</html>
