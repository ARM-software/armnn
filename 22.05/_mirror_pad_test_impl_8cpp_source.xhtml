<!-- Copyright (c) 2020 ARM Limited. -->
<!--                                 -->
<!-- SPDX-License-Identifier: MIT    -->
<!--                                 -->
<!-- HTML header for doxygen 1.8.13-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.13"/>
<meta name="robots" content="NOINDEX, NOFOLLOW" />
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>ArmNN: src/backends/backendsCommon/test/layerTests/MirrorPadTestImpl.cpp Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script><script type="text/javascript" src="http://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="stylesheet.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <img alt="ArmNN" src="Arm_NN_horizontal_blue.png" style="max-width: 10rem; margin-top: .5rem; margin-left 10px"/>
  <td style="padding-left: 0.5em;">
   <div id="projectname">
   &#160;<span id="projectnumber">22.05</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.13 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
$(document).ready(function(){initNavTree('_mirror_pad_test_impl_8cpp_source.xhtml','');});
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="headertitle">
<div class="title">MirrorPadTestImpl.cpp</div>  </div>
</div><!--header-->
<div class="contents">
<a href="_mirror_pad_test_impl_8cpp.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="comment">//</span></div><div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="comment">// Copyright Â© 2021 Arm Ltd and Contributors. All rights reserved.</span></div><div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="comment">// SPDX-License-Identifier: MIT</span></div><div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="comment">//</span></div><div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;</div><div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_mirror_pad_test_impl_8hpp.xhtml">MirrorPadTestImpl.hpp</a>&quot;</span></div><div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;</div><div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="preprocessor">#include &lt;<a class="code" href="_quantize_helper_8hpp.xhtml">armnnUtils/QuantizeHelper.hpp</a>&gt;</span></div><div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;</div><div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="preprocessor">#include &lt;<a class="code" href="include_2armnn_test_utils_2_tensor_copy_utils_8hpp.xhtml">armnnTestUtils/TensorCopyUtils.hpp</a>&gt;</span></div><div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;<span class="preprocessor">#include &lt;<a class="code" href="include_2armnn_test_utils_2_workload_test_utils_8hpp.xhtml">armnnTestUtils/WorkloadTestUtils.hpp</a>&gt;</span></div><div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;</div><div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;<span class="preprocessor">#include &lt;<a class="code" href="include_2armnn_test_utils_2_tensor_helpers_8hpp.xhtml">armnnTestUtils/TensorHelpers.hpp</a>&gt;</span></div><div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;</div><div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;<span class="comment">//</span></div><div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;<span class="comment">// Implementation templates</span></div><div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;<span class="comment">//</span></div><div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;</div><div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;<span class="keyword">template</span>&lt;<span class="keyword">typename</span> T&gt;</div><div class="line"><a name="l00020"></a><span class="lineno"><a class="line" href="_mirror_pad_test_impl_8cpp.xhtml#a781ccdb03ac1cd7d3d07d531887b3c13">   20</a></span>&#160;<a class="code" href="struct_layer_test_result.xhtml">LayerTestResult&lt;T, 2&gt;</a> <a class="code" href="_mirror_pad_test_impl_8cpp.xhtml#a781ccdb03ac1cd7d3d07d531887b3c13">MirrorPad2dTestCommon</a>(</div><div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;    <a class="code" href="classarmnn_1_1_i_workload_factory.xhtml">armnn::IWorkloadFactory</a>&amp; workloadFactory,</div><div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;    <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_i_backend_internal.xhtml#a693b40e6b94e958836aeb0410ca186bd">armnn::IBackendInternal::IMemoryManagerSharedPtr</a>&amp; memoryManager,</div><div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;    <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_i_tensor_handle_factory.xhtml">armnn::ITensorHandleFactory</a>&amp; tensorHandleFactory,</div><div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;    <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_info.xhtml">armnn::TensorInfo</a>&amp; inputTensorInfo,</div><div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;    <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_info.xhtml">armnn::TensorInfo</a>&amp; outputTensorInfo,</div><div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;    <span class="keyword">const</span> std::vector&lt;T&gt;&amp; inputValues,</div><div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;    <span class="keyword">const</span> std::vector&lt;T&gt;&amp; expectedOutputValues,</div><div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;    <span class="keyword">const</span> std::vector&lt;std::pair&lt;unsigned int, unsigned int&gt;&gt;&amp; padList,</div><div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;    <span class="keyword">const</span> <a class="code" href="namespacearmnn.xhtml#a14d24d90ab4ba2956e92e27890ba4c91">armnn::PaddingMode</a> paddingMode)</div><div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;{</div><div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;    <a class="code" href="namespacearmnn.xhtml#a44affeeb090c3c6a3062830562672e84">IgnoreUnused</a>(memoryManager);</div><div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;    std::vector&lt;T&gt; actualOutput(outputTensorInfo.<a class="code" href="classarmnn_1_1_tensor_info.xhtml#a8846406ac37fbd2204f0be16ee05d5b7">GetNumElements</a>());</div><div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;</div><div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;    std::unique_ptr&lt;armnn::ITensorHandle&gt; inputHandle = tensorHandleFactory.<a class="code" href="classarmnn_1_1_i_tensor_handle_factory.xhtml#a375f11dd42ff042435e8771cf287b20c">CreateTensorHandle</a>(inputTensorInfo);</div><div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;    std::unique_ptr&lt;armnn::ITensorHandle&gt; outputHandle = tensorHandleFactory.<a class="code" href="classarmnn_1_1_i_tensor_handle_factory.xhtml#a375f11dd42ff042435e8771cf287b20c">CreateTensorHandle</a>(outputTensorInfo);</div><div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;</div><div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;    <a class="code" href="structarmnn_1_1_pad_queue_descriptor.xhtml">armnn::PadQueueDescriptor</a> descriptor;</div><div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;</div><div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;    descriptor.<a class="code" href="structarmnn_1_1_queue_descriptor_with_parameters.xhtml#aad91b9bbf7aa365d304febe79a3d1333">m_Parameters</a>.<a class="code" href="structarmnn_1_1_pad_descriptor.xhtml#a85f98c94e11f65a6b73f831735c040f3">m_PadList</a> = padList;</div><div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;    descriptor.<a class="code" href="structarmnn_1_1_queue_descriptor_with_parameters.xhtml#aad91b9bbf7aa365d304febe79a3d1333">m_Parameters</a>.<a class="code" href="structarmnn_1_1_pad_descriptor.xhtml#a66f2c989f51ab6116de4380390250b69">m_PaddingMode</a> = paddingMode;</div><div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;    <a class="code" href="structarmnn_1_1_workload_info.xhtml">armnn::WorkloadInfo</a> info;</div><div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;</div><div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;    AddInputToWorkload(descriptor, info, inputTensorInfo, inputHandle.get());</div><div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;    AddOutputToWorkload(descriptor, info, outputTensorInfo, outputHandle.get());</div><div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;</div><div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;    std::unique_ptr&lt;armnn::IWorkload&gt; workload = workloadFactory.<a class="code" href="classarmnn_1_1_i_workload_factory.xhtml#a13060ebb89d2c21a7a5d897e99cccf72">CreateWorkload</a>(<a class="code" href="namespacearmnn.xhtml#a56943a0946e5f15e5e58054b8e7a04a4ade43468adaf6acb2c38ebc0c1176f82f">armnn::LayerType::Pad</a>,</div><div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;                                                                                descriptor,</div><div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;                                                                                info);</div><div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;</div><div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;    inputHandle-&gt;Allocate();</div><div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;    outputHandle-&gt;Allocate();</div><div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;</div><div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;    <a class="code" href="include_2armnn_test_utils_2_tensor_copy_utils_8hpp.xhtml#ae15f1a3c55d2db87683577de9fa4437c">CopyDataToITensorHandle</a>(inputHandle.get(), inputValues.data());</div><div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;</div><div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;    ExecuteWorkload(*workload, memoryManager);</div><div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;</div><div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;    <a class="code" href="include_2armnn_test_utils_2_tensor_copy_utils_8hpp.xhtml#ab5dfed8358e500ed523d78090ec78e88">CopyDataFromITensorHandle</a>(actualOutput.data(), outputHandle.get());</div><div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;</div><div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="struct_layer_test_result.xhtml">LayerTestResult&lt;T, 2&gt;</a>(actualOutput,</div><div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;                                 expectedOutputValues,</div><div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;                                 outputHandle-&gt;GetShape(),</div><div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;                                 outputTensorInfo.<a class="code" href="classarmnn_1_1_tensor_info.xhtml#a8b5d0f8a24e9d9238f412260a552acf8">GetShape</a>());</div><div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;}</div><div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;</div><div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;<span class="keyword">template</span>&lt;<span class="keyword">typename</span> T&gt;</div><div class="line"><a name="l00066"></a><span class="lineno"><a class="line" href="_mirror_pad_test_impl_8cpp.xhtml#a2aec80b2ed03222e9ea3eaa79c952038">   66</a></span>&#160;<a class="code" href="struct_layer_test_result.xhtml">LayerTestResult&lt;T, 3&gt;</a> <a class="code" href="_mirror_pad_test_impl_8cpp.xhtml#a2aec80b2ed03222e9ea3eaa79c952038">MirrorPad3dTestCommon</a>(</div><div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;        <a class="code" href="classarmnn_1_1_i_workload_factory.xhtml">armnn::IWorkloadFactory</a>&amp; workloadFactory,</div><div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;        <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_i_backend_internal.xhtml#a693b40e6b94e958836aeb0410ca186bd">armnn::IBackendInternal::IMemoryManagerSharedPtr</a>&amp; memoryManager,</div><div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;        <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_i_tensor_handle_factory.xhtml">armnn::ITensorHandleFactory</a>&amp; tensorHandleFactory,</div><div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;        <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_info.xhtml">armnn::TensorInfo</a>&amp; inputTensorInfo,</div><div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;        <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_info.xhtml">armnn::TensorInfo</a>&amp; outputTensorInfo,</div><div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;        <span class="keyword">const</span> std::vector&lt;T&gt;&amp; inputValues,</div><div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;        <span class="keyword">const</span> std::vector&lt;T&gt;&amp; expectedOutputValues,</div><div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;        <span class="keyword">const</span> std::vector&lt;std::pair&lt;unsigned int, unsigned int&gt;&gt;&amp; padList,</div><div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;        <span class="keyword">const</span> <a class="code" href="namespacearmnn.xhtml#a14d24d90ab4ba2956e92e27890ba4c91">armnn::PaddingMode</a> paddingMode)</div><div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;{</div><div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;    <a class="code" href="namespacearmnn.xhtml#a44affeeb090c3c6a3062830562672e84">IgnoreUnused</a>(memoryManager);</div><div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;    std::vector&lt;T&gt; actualOutput(outputTensorInfo.<a class="code" href="classarmnn_1_1_tensor_info.xhtml#a8846406ac37fbd2204f0be16ee05d5b7">GetNumElements</a>());</div><div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;</div><div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;    std::unique_ptr&lt;armnn::ITensorHandle&gt; inputHandle = tensorHandleFactory.<a class="code" href="classarmnn_1_1_i_tensor_handle_factory.xhtml#a375f11dd42ff042435e8771cf287b20c">CreateTensorHandle</a>(inputTensorInfo);</div><div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;    std::unique_ptr&lt;armnn::ITensorHandle&gt; outputHandle = tensorHandleFactory.<a class="code" href="classarmnn_1_1_i_tensor_handle_factory.xhtml#a375f11dd42ff042435e8771cf287b20c">CreateTensorHandle</a>(outputTensorInfo);</div><div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;</div><div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;    <a class="code" href="structarmnn_1_1_pad_queue_descriptor.xhtml">armnn::PadQueueDescriptor</a> descriptor;</div><div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;    descriptor.<a class="code" href="structarmnn_1_1_queue_descriptor_with_parameters.xhtml#aad91b9bbf7aa365d304febe79a3d1333">m_Parameters</a>.<a class="code" href="structarmnn_1_1_pad_descriptor.xhtml#a85f98c94e11f65a6b73f831735c040f3">m_PadList</a> = padList;</div><div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;    descriptor.<a class="code" href="structarmnn_1_1_queue_descriptor_with_parameters.xhtml#aad91b9bbf7aa365d304febe79a3d1333">m_Parameters</a>.<a class="code" href="structarmnn_1_1_pad_descriptor.xhtml#a66f2c989f51ab6116de4380390250b69">m_PaddingMode</a> = paddingMode;</div><div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;</div><div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;    <a class="code" href="structarmnn_1_1_workload_info.xhtml">armnn::WorkloadInfo</a> info;</div><div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;    AddInputToWorkload(descriptor, info, inputTensorInfo, inputHandle.get());</div><div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;    AddOutputToWorkload(descriptor, info, outputTensorInfo, outputHandle.get());</div><div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;</div><div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;    std::unique_ptr&lt;armnn::IWorkload&gt; workload = workloadFactory.<a class="code" href="classarmnn_1_1_i_workload_factory.xhtml#a13060ebb89d2c21a7a5d897e99cccf72">CreateWorkload</a>(<a class="code" href="namespacearmnn.xhtml#a56943a0946e5f15e5e58054b8e7a04a4ade43468adaf6acb2c38ebc0c1176f82f">armnn::LayerType::Pad</a>,</div><div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;                                                                                descriptor,</div><div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;                                                                                info);</div><div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;</div><div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;    inputHandle-&gt;Allocate();</div><div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;    outputHandle-&gt;Allocate();</div><div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;</div><div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;    <a class="code" href="include_2armnn_test_utils_2_tensor_copy_utils_8hpp.xhtml#ae15f1a3c55d2db87683577de9fa4437c">CopyDataToITensorHandle</a>(inputHandle.get(), inputValues.data());</div><div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;</div><div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;    ExecuteWorkload(*workload, memoryManager);</div><div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;</div><div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;    <a class="code" href="include_2armnn_test_utils_2_tensor_copy_utils_8hpp.xhtml#ab5dfed8358e500ed523d78090ec78e88">CopyDataFromITensorHandle</a>(actualOutput.data(), outputHandle.get());</div><div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;</div><div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="struct_layer_test_result.xhtml">LayerTestResult&lt;T, 3&gt;</a>(actualOutput,</div><div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;                                 expectedOutputValues,</div><div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;                                 outputHandle-&gt;GetShape(),</div><div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;                                 outputTensorInfo.<a class="code" href="classarmnn_1_1_tensor_info.xhtml#a8b5d0f8a24e9d9238f412260a552acf8">GetShape</a>());</div><div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;}</div><div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;</div><div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;<span class="keyword">template</span>&lt;<span class="keyword">typename</span> T&gt;</div><div class="line"><a name="l00111"></a><span class="lineno"><a class="line" href="_mirror_pad_test_impl_8cpp.xhtml#ac309b50a32b8a9c39132ad355559c1a0">  111</a></span>&#160;<a class="code" href="struct_layer_test_result.xhtml">LayerTestResult&lt;T, 4&gt;</a> <a class="code" href="_mirror_pad_test_impl_8cpp.xhtml#ac309b50a32b8a9c39132ad355559c1a0">MirrorPad4dTestCommon</a>(</div><div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;        <a class="code" href="classarmnn_1_1_i_workload_factory.xhtml">armnn::IWorkloadFactory</a>&amp; workloadFactory,</div><div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;        <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_i_backend_internal.xhtml#a693b40e6b94e958836aeb0410ca186bd">armnn::IBackendInternal::IMemoryManagerSharedPtr</a>&amp; memoryManager,</div><div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;        <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_i_tensor_handle_factory.xhtml">armnn::ITensorHandleFactory</a>&amp; tensorHandleFactory,</div><div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;        <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_info.xhtml">armnn::TensorInfo</a>&amp; inputTensorInfo,</div><div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;        <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_info.xhtml">armnn::TensorInfo</a>&amp; outputTensorInfo,</div><div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;        <span class="keyword">const</span> std::vector&lt;T&gt;&amp; inputValues,</div><div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;        <span class="keyword">const</span> std::vector&lt;T&gt;&amp; expectedOutputValues,</div><div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;        <span class="keyword">const</span> std::vector&lt;std::pair&lt;unsigned int, unsigned int&gt;&gt;&amp; padList,</div><div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;        <span class="keyword">const</span> <a class="code" href="namespacearmnn.xhtml#a14d24d90ab4ba2956e92e27890ba4c91">armnn::PaddingMode</a> paddingMode)</div><div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;{</div><div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;    <a class="code" href="namespacearmnn.xhtml#a44affeeb090c3c6a3062830562672e84">IgnoreUnused</a>(memoryManager);</div><div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;    std::vector&lt;T&gt; actualOutput(outputTensorInfo.<a class="code" href="classarmnn_1_1_tensor_info.xhtml#a8846406ac37fbd2204f0be16ee05d5b7">GetNumElements</a>());</div><div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;</div><div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;    std::unique_ptr&lt;armnn::ITensorHandle&gt; inputHandle = tensorHandleFactory.<a class="code" href="classarmnn_1_1_i_tensor_handle_factory.xhtml#a375f11dd42ff042435e8771cf287b20c">CreateTensorHandle</a>(inputTensorInfo);</div><div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;    std::unique_ptr&lt;armnn::ITensorHandle&gt; outputHandle = tensorHandleFactory.<a class="code" href="classarmnn_1_1_i_tensor_handle_factory.xhtml#a375f11dd42ff042435e8771cf287b20c">CreateTensorHandle</a>(outputTensorInfo);</div><div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;</div><div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;    <a class="code" href="structarmnn_1_1_pad_queue_descriptor.xhtml">armnn::PadQueueDescriptor</a> descriptor;</div><div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;    descriptor.<a class="code" href="structarmnn_1_1_queue_descriptor_with_parameters.xhtml#aad91b9bbf7aa365d304febe79a3d1333">m_Parameters</a>.<a class="code" href="structarmnn_1_1_pad_descriptor.xhtml#a85f98c94e11f65a6b73f831735c040f3">m_PadList</a> = padList;</div><div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;    descriptor.<a class="code" href="structarmnn_1_1_queue_descriptor_with_parameters.xhtml#aad91b9bbf7aa365d304febe79a3d1333">m_Parameters</a>.<a class="code" href="structarmnn_1_1_pad_descriptor.xhtml#a66f2c989f51ab6116de4380390250b69">m_PaddingMode</a> = paddingMode;</div><div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;</div><div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;    <a class="code" href="structarmnn_1_1_workload_info.xhtml">armnn::WorkloadInfo</a> info;</div><div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;    AddInputToWorkload(descriptor, info, inputTensorInfo, inputHandle.get());</div><div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;    AddOutputToWorkload(descriptor, info, outputTensorInfo, outputHandle.get());</div><div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;</div><div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;    std::unique_ptr&lt;armnn::IWorkload&gt; workload = workloadFactory.<a class="code" href="classarmnn_1_1_i_workload_factory.xhtml#a13060ebb89d2c21a7a5d897e99cccf72">CreateWorkload</a>(<a class="code" href="namespacearmnn.xhtml#a56943a0946e5f15e5e58054b8e7a04a4ade43468adaf6acb2c38ebc0c1176f82f">armnn::LayerType::Pad</a>,</div><div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;                                                                                descriptor,</div><div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;                                                                                info);</div><div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;</div><div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;    inputHandle-&gt;Allocate();</div><div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;    outputHandle-&gt;Allocate();</div><div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;</div><div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;    <a class="code" href="include_2armnn_test_utils_2_tensor_copy_utils_8hpp.xhtml#ae15f1a3c55d2db87683577de9fa4437c">CopyDataToITensorHandle</a>(inputHandle.get(), inputValues.data());</div><div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;</div><div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;    ExecuteWorkload(*workload, memoryManager);</div><div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;</div><div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;    <a class="code" href="include_2armnn_test_utils_2_tensor_copy_utils_8hpp.xhtml#ab5dfed8358e500ed523d78090ec78e88">CopyDataFromITensorHandle</a>(actualOutput.data(), outputHandle.get());</div><div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;</div><div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="struct_layer_test_result.xhtml">LayerTestResult&lt;T, 4&gt;</a>(actualOutput,</div><div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;                                 expectedOutputValues,</div><div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;                                 outputHandle-&gt;GetShape(),</div><div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;                                 outputTensorInfo.<a class="code" href="classarmnn_1_1_tensor_info.xhtml#a8b5d0f8a24e9d9238f412260a552acf8">GetShape</a>());</div><div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;}</div><div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;</div><div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;<span class="keyword">template</span>&lt;<a class="code" href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6">armnn::DataType</a> ArmnnType,</div><div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;        <span class="keyword">typename</span> T = <a class="code" href="namespacearmnn.xhtml#a0743ed5e860c316a20b68ca96301b411">armnn::ResolveType&lt;ArmnnType&gt;</a>&gt;</div><div class="line"><a name="l00157"></a><span class="lineno"><a class="line" href="_mirror_pad_test_impl_8cpp.xhtml#aa1633acd40b4ddde36b836b1ff22b318">  157</a></span>&#160;<a class="code" href="struct_layer_test_result.xhtml">LayerTestResult&lt;T, 2&gt;</a> <a class="code" href="_mirror_pad_test_impl_8cpp.xhtml#aa1633acd40b4ddde36b836b1ff22b318">PadSymmetric2dTest</a>(</div><div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;        <a class="code" href="classarmnn_1_1_i_workload_factory.xhtml">armnn::IWorkloadFactory</a>&amp; workloadFactory,</div><div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160;        <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_i_backend_internal.xhtml#a693b40e6b94e958836aeb0410ca186bd">armnn::IBackendInternal::IMemoryManagerSharedPtr</a>&amp; memoryManager,</div><div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160;        <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_i_tensor_handle_factory.xhtml">armnn::ITensorHandleFactory</a>&amp; tensorHandleFactory,</div><div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160;        <span class="keywordtype">float</span> qScale,</div><div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160;        int32_t qOffset)</div><div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160;{</div><div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;    <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_shape.xhtml">armnn::TensorShape</a> inputShape{ 3, 3 };</div><div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160;    <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_shape.xhtml">armnn::TensorShape</a> outputShape{ 7, 7 };</div><div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160;</div><div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160;    <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_info.xhtml">armnn::TensorInfo</a> inputTensorInfo(inputShape, ArmnnType, qScale, qOffset);</div><div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160;    <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_info.xhtml">armnn::TensorInfo</a> outputTensorInfo(outputShape, ArmnnType, qScale, qOffset);</div><div class="line"><a name="l00169"></a><span class="lineno">  169</span>&#160;</div><div class="line"><a name="l00170"></a><span class="lineno">  170</span>&#160;    std::vector&lt;T&gt; inputValues = armnnUtils::QuantizedVector&lt;T&gt;(</div><div class="line"><a name="l00171"></a><span class="lineno">  171</span>&#160;    {</div><div class="line"><a name="l00172"></a><span class="lineno">  172</span>&#160;        <span class="comment">// Height (3) x Width (3)</span></div><div class="line"><a name="l00173"></a><span class="lineno">  173</span>&#160;        1, 2, 3,</div><div class="line"><a name="l00174"></a><span class="lineno">  174</span>&#160;        4, 5, 6,</div><div class="line"><a name="l00175"></a><span class="lineno">  175</span>&#160;        7, 8, 9</div><div class="line"><a name="l00176"></a><span class="lineno">  176</span>&#160;    },</div><div class="line"><a name="l00177"></a><span class="lineno">  177</span>&#160;    qScale, qOffset);</div><div class="line"><a name="l00178"></a><span class="lineno">  178</span>&#160;</div><div class="line"><a name="l00179"></a><span class="lineno">  179</span>&#160;    std::vector&lt;T&gt; expectedOutputValues = armnnUtils::QuantizedVector&lt;T&gt;(</div><div class="line"><a name="l00180"></a><span class="lineno">  180</span>&#160;    {</div><div class="line"><a name="l00181"></a><span class="lineno">  181</span>&#160;        5, 4, 4, 5, 6, 6, 5,</div><div class="line"><a name="l00182"></a><span class="lineno">  182</span>&#160;        2, 1, 1, 2, 3, 3, 2,</div><div class="line"><a name="l00183"></a><span class="lineno">  183</span>&#160;        2, 1, 1, 2, 3, 3, 2,</div><div class="line"><a name="l00184"></a><span class="lineno">  184</span>&#160;        5, 4, 4, 5, 6, 6, 5,</div><div class="line"><a name="l00185"></a><span class="lineno">  185</span>&#160;        8, 7, 7, 8, 9, 9, 8,</div><div class="line"><a name="l00186"></a><span class="lineno">  186</span>&#160;        8, 7, 7, 8, 9, 9, 8,</div><div class="line"><a name="l00187"></a><span class="lineno">  187</span>&#160;        5, 4, 4, 5, 6, 6, 5</div><div class="line"><a name="l00188"></a><span class="lineno">  188</span>&#160;    },</div><div class="line"><a name="l00189"></a><span class="lineno">  189</span>&#160;    qScale, qOffset);</div><div class="line"><a name="l00190"></a><span class="lineno">  190</span>&#160;</div><div class="line"><a name="l00191"></a><span class="lineno">  191</span>&#160;    std::vector&lt;std::pair&lt;unsigned int, unsigned int&gt;&gt; padList;</div><div class="line"><a name="l00192"></a><span class="lineno">  192</span>&#160;    padList.push_back(std::pair&lt;unsigned int, unsigned int&gt;(2,2));</div><div class="line"><a name="l00193"></a><span class="lineno">  193</span>&#160;    padList.push_back(std::pair&lt;unsigned int, unsigned int&gt;(2,2));</div><div class="line"><a name="l00194"></a><span class="lineno">  194</span>&#160;</div><div class="line"><a name="l00195"></a><span class="lineno">  195</span>&#160;    <span class="keywordflow">return</span> MirrorPad2dTestCommon&lt;T&gt;(workloadFactory,</div><div class="line"><a name="l00196"></a><span class="lineno">  196</span>&#160;                                    memoryManager,</div><div class="line"><a name="l00197"></a><span class="lineno">  197</span>&#160;                                    tensorHandleFactory,</div><div class="line"><a name="l00198"></a><span class="lineno">  198</span>&#160;                                    inputTensorInfo,</div><div class="line"><a name="l00199"></a><span class="lineno">  199</span>&#160;                                    outputTensorInfo,</div><div class="line"><a name="l00200"></a><span class="lineno">  200</span>&#160;                                    inputValues,</div><div class="line"><a name="l00201"></a><span class="lineno">  201</span>&#160;                                    expectedOutputValues,</div><div class="line"><a name="l00202"></a><span class="lineno">  202</span>&#160;                                    padList,</div><div class="line"><a name="l00203"></a><span class="lineno">  203</span>&#160;                                    <a class="code" href="namespacearmnn.xhtml#a14d24d90ab4ba2956e92e27890ba4c91af334649ef5e5d0ffe200751d07012626">armnn::PaddingMode::Symmetric</a>);</div><div class="line"><a name="l00204"></a><span class="lineno">  204</span>&#160;}</div><div class="line"><a name="l00205"></a><span class="lineno">  205</span>&#160;</div><div class="line"><a name="l00206"></a><span class="lineno">  206</span>&#160;<span class="keyword">template</span>&lt;<a class="code" href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6">armnn::DataType</a> ArmnnType,</div><div class="line"><a name="l00207"></a><span class="lineno">  207</span>&#160;        <span class="keyword">typename</span> T = <a class="code" href="namespacearmnn.xhtml#a0743ed5e860c316a20b68ca96301b411">armnn::ResolveType&lt;ArmnnType&gt;</a>&gt;</div><div class="line"><a name="l00208"></a><span class="lineno"><a class="line" href="_mirror_pad_test_impl_8cpp.xhtml#acffd7787175543ff4a3f81bf8aae09a1">  208</a></span>&#160;<a class="code" href="struct_layer_test_result.xhtml">LayerTestResult&lt;T, 2&gt;</a> <a class="code" href="_mirror_pad_test_impl_8cpp.xhtml#acffd7787175543ff4a3f81bf8aae09a1">PadReflect2dTest</a>(</div><div class="line"><a name="l00209"></a><span class="lineno">  209</span>&#160;        <a class="code" href="classarmnn_1_1_i_workload_factory.xhtml">armnn::IWorkloadFactory</a>&amp; workloadFactory,</div><div class="line"><a name="l00210"></a><span class="lineno">  210</span>&#160;        <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_i_backend_internal.xhtml#a693b40e6b94e958836aeb0410ca186bd">armnn::IBackendInternal::IMemoryManagerSharedPtr</a>&amp; memoryManager,</div><div class="line"><a name="l00211"></a><span class="lineno">  211</span>&#160;        <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_i_tensor_handle_factory.xhtml">armnn::ITensorHandleFactory</a>&amp; tensorHandleFactory,</div><div class="line"><a name="l00212"></a><span class="lineno">  212</span>&#160;        <span class="keywordtype">float</span> qScale,</div><div class="line"><a name="l00213"></a><span class="lineno">  213</span>&#160;        int32_t qOffset)</div><div class="line"><a name="l00214"></a><span class="lineno">  214</span>&#160;{</div><div class="line"><a name="l00215"></a><span class="lineno">  215</span>&#160;    <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_shape.xhtml">armnn::TensorShape</a> inputShape{ 3, 3 };</div><div class="line"><a name="l00216"></a><span class="lineno">  216</span>&#160;    <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_shape.xhtml">armnn::TensorShape</a> outputShape{ 7, 7 };</div><div class="line"><a name="l00217"></a><span class="lineno">  217</span>&#160;</div><div class="line"><a name="l00218"></a><span class="lineno">  218</span>&#160;    <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_info.xhtml">armnn::TensorInfo</a> inputTensorInfo(inputShape, ArmnnType, qScale, qOffset);</div><div class="line"><a name="l00219"></a><span class="lineno">  219</span>&#160;    <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_info.xhtml">armnn::TensorInfo</a> outputTensorInfo(outputShape, ArmnnType, qScale, qOffset);</div><div class="line"><a name="l00220"></a><span class="lineno">  220</span>&#160;</div><div class="line"><a name="l00221"></a><span class="lineno">  221</span>&#160;    std::vector&lt;T&gt; inputValues = armnnUtils::QuantizedVector&lt;T&gt;(</div><div class="line"><a name="l00222"></a><span class="lineno">  222</span>&#160;    {</div><div class="line"><a name="l00223"></a><span class="lineno">  223</span>&#160;        <span class="comment">// Height (3) x Width (3)</span></div><div class="line"><a name="l00224"></a><span class="lineno">  224</span>&#160;        1, 2, 3,</div><div class="line"><a name="l00225"></a><span class="lineno">  225</span>&#160;        4, 5, 6,</div><div class="line"><a name="l00226"></a><span class="lineno">  226</span>&#160;        7, 8, 9</div><div class="line"><a name="l00227"></a><span class="lineno">  227</span>&#160;    },</div><div class="line"><a name="l00228"></a><span class="lineno">  228</span>&#160;    qScale, qOffset);</div><div class="line"><a name="l00229"></a><span class="lineno">  229</span>&#160;</div><div class="line"><a name="l00230"></a><span class="lineno">  230</span>&#160;    std::vector&lt;T&gt; expectedOutputValues = armnnUtils::QuantizedVector&lt;T&gt;(</div><div class="line"><a name="l00231"></a><span class="lineno">  231</span>&#160;    {</div><div class="line"><a name="l00232"></a><span class="lineno">  232</span>&#160;        9, 8, 7, 8, 9, 8, 7,</div><div class="line"><a name="l00233"></a><span class="lineno">  233</span>&#160;        6, 5, 4, 5, 6, 5, 4,</div><div class="line"><a name="l00234"></a><span class="lineno">  234</span>&#160;        3, 2, 1, 2, 3, 2, 1,</div><div class="line"><a name="l00235"></a><span class="lineno">  235</span>&#160;        6, 5, 4, 5, 6, 5, 4,</div><div class="line"><a name="l00236"></a><span class="lineno">  236</span>&#160;        9, 8, 7, 8, 9, 8, 7,</div><div class="line"><a name="l00237"></a><span class="lineno">  237</span>&#160;        6, 5, 4, 5, 6, 5, 4,</div><div class="line"><a name="l00238"></a><span class="lineno">  238</span>&#160;        3, 2, 1, 2, 3, 2, 1</div><div class="line"><a name="l00239"></a><span class="lineno">  239</span>&#160;    },</div><div class="line"><a name="l00240"></a><span class="lineno">  240</span>&#160;    qScale, qOffset);</div><div class="line"><a name="l00241"></a><span class="lineno">  241</span>&#160;</div><div class="line"><a name="l00242"></a><span class="lineno">  242</span>&#160;    std::vector&lt;std::pair&lt;unsigned int, unsigned int&gt;&gt; padList;</div><div class="line"><a name="l00243"></a><span class="lineno">  243</span>&#160;    padList.push_back(std::pair&lt;unsigned int, unsigned int&gt;(2,2));</div><div class="line"><a name="l00244"></a><span class="lineno">  244</span>&#160;    padList.push_back(std::pair&lt;unsigned int, unsigned int&gt;(2,2));</div><div class="line"><a name="l00245"></a><span class="lineno">  245</span>&#160;</div><div class="line"><a name="l00246"></a><span class="lineno">  246</span>&#160;    <span class="keywordflow">return</span> MirrorPad2dTestCommon&lt;T&gt;(workloadFactory,</div><div class="line"><a name="l00247"></a><span class="lineno">  247</span>&#160;                                    memoryManager,</div><div class="line"><a name="l00248"></a><span class="lineno">  248</span>&#160;                                    tensorHandleFactory,</div><div class="line"><a name="l00249"></a><span class="lineno">  249</span>&#160;                                    inputTensorInfo,</div><div class="line"><a name="l00250"></a><span class="lineno">  250</span>&#160;                                    outputTensorInfo,</div><div class="line"><a name="l00251"></a><span class="lineno">  251</span>&#160;                                    inputValues,</div><div class="line"><a name="l00252"></a><span class="lineno">  252</span>&#160;                                    expectedOutputValues,</div><div class="line"><a name="l00253"></a><span class="lineno">  253</span>&#160;                                    padList,</div><div class="line"><a name="l00254"></a><span class="lineno">  254</span>&#160;                                    <a class="code" href="namespacearmnn.xhtml#a14d24d90ab4ba2956e92e27890ba4c91a74de3e45e4491e956e8dc18d841d9b00">armnn::PaddingMode::Reflect</a>);</div><div class="line"><a name="l00255"></a><span class="lineno">  255</span>&#160;}</div><div class="line"><a name="l00256"></a><span class="lineno">  256</span>&#160;</div><div class="line"><a name="l00257"></a><span class="lineno">  257</span>&#160;<span class="keyword">template</span>&lt;<a class="code" href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6">armnn::DataType</a> ArmnnType,</div><div class="line"><a name="l00258"></a><span class="lineno">  258</span>&#160;        <span class="keyword">typename</span> T = <a class="code" href="namespacearmnn.xhtml#a0743ed5e860c316a20b68ca96301b411">armnn::ResolveType&lt;ArmnnType&gt;</a>&gt;</div><div class="line"><a name="l00259"></a><span class="lineno"><a class="line" href="_mirror_pad_test_impl_8cpp.xhtml#a26e900c565b9e7aec3a90446924341bf">  259</a></span>&#160;<a class="code" href="struct_layer_test_result.xhtml">LayerTestResult&lt;T, 3&gt;</a> <a class="code" href="_mirror_pad_test_impl_8cpp.xhtml#a26e900c565b9e7aec3a90446924341bf">PadSymmetric3dTest</a>(</div><div class="line"><a name="l00260"></a><span class="lineno">  260</span>&#160;        <a class="code" href="classarmnn_1_1_i_workload_factory.xhtml">armnn::IWorkloadFactory</a>&amp; workloadFactory,</div><div class="line"><a name="l00261"></a><span class="lineno">  261</span>&#160;        <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_i_backend_internal.xhtml#a693b40e6b94e958836aeb0410ca186bd">armnn::IBackendInternal::IMemoryManagerSharedPtr</a>&amp; memoryManager,</div><div class="line"><a name="l00262"></a><span class="lineno">  262</span>&#160;        <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_i_tensor_handle_factory.xhtml">armnn::ITensorHandleFactory</a>&amp; tensorHandleFactory,</div><div class="line"><a name="l00263"></a><span class="lineno">  263</span>&#160;        <span class="keywordtype">float</span> qScale,</div><div class="line"><a name="l00264"></a><span class="lineno">  264</span>&#160;        int32_t qOffset)</div><div class="line"><a name="l00265"></a><span class="lineno">  265</span>&#160;{</div><div class="line"><a name="l00266"></a><span class="lineno">  266</span>&#160;    <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_shape.xhtml">armnn::TensorShape</a> inputShape{ 2, 2, 2 };</div><div class="line"><a name="l00267"></a><span class="lineno">  267</span>&#160;    <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_shape.xhtml">armnn::TensorShape</a> outputShape{ 4, 4, 4 };</div><div class="line"><a name="l00268"></a><span class="lineno">  268</span>&#160;</div><div class="line"><a name="l00269"></a><span class="lineno">  269</span>&#160;    <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_info.xhtml">armnn::TensorInfo</a> inputTensorInfo(inputShape, ArmnnType, qScale, qOffset);</div><div class="line"><a name="l00270"></a><span class="lineno">  270</span>&#160;    <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_info.xhtml">armnn::TensorInfo</a> outputTensorInfo(outputShape, ArmnnType, qScale, qOffset);</div><div class="line"><a name="l00271"></a><span class="lineno">  271</span>&#160;</div><div class="line"><a name="l00272"></a><span class="lineno">  272</span>&#160;    std::vector&lt;T&gt; inputValues = armnnUtils::QuantizedVector&lt;T&gt;(</div><div class="line"><a name="l00273"></a><span class="lineno">  273</span>&#160;    {</div><div class="line"><a name="l00274"></a><span class="lineno">  274</span>&#160;        <span class="comment">// Channel 0, Height (2) x Width (2)</span></div><div class="line"><a name="l00275"></a><span class="lineno">  275</span>&#160;        1, 2,</div><div class="line"><a name="l00276"></a><span class="lineno">  276</span>&#160;        3, 4,</div><div class="line"><a name="l00277"></a><span class="lineno">  277</span>&#160;</div><div class="line"><a name="l00278"></a><span class="lineno">  278</span>&#160;        <span class="comment">// Channel 1, Height (2) x Width (2)</span></div><div class="line"><a name="l00279"></a><span class="lineno">  279</span>&#160;        5, 6,</div><div class="line"><a name="l00280"></a><span class="lineno">  280</span>&#160;        7, 8</div><div class="line"><a name="l00281"></a><span class="lineno">  281</span>&#160;    },</div><div class="line"><a name="l00282"></a><span class="lineno">  282</span>&#160;    qScale, qOffset);</div><div class="line"><a name="l00283"></a><span class="lineno">  283</span>&#160;</div><div class="line"><a name="l00284"></a><span class="lineno">  284</span>&#160;    std::vector&lt;T&gt; expectedOutputValues = armnnUtils::QuantizedVector&lt;T&gt;(</div><div class="line"><a name="l00285"></a><span class="lineno">  285</span>&#160;    {</div><div class="line"><a name="l00286"></a><span class="lineno">  286</span>&#160;        1, 1, 2, 2,</div><div class="line"><a name="l00287"></a><span class="lineno">  287</span>&#160;        1, 1, 2, 2,</div><div class="line"><a name="l00288"></a><span class="lineno">  288</span>&#160;        3, 3, 4, 4,</div><div class="line"><a name="l00289"></a><span class="lineno">  289</span>&#160;        3, 3, 4, 4,</div><div class="line"><a name="l00290"></a><span class="lineno">  290</span>&#160;</div><div class="line"><a name="l00291"></a><span class="lineno">  291</span>&#160;        1, 1, 2, 2,</div><div class="line"><a name="l00292"></a><span class="lineno">  292</span>&#160;        1, 1, 2, 2,</div><div class="line"><a name="l00293"></a><span class="lineno">  293</span>&#160;        3, 3, 4, 4,</div><div class="line"><a name="l00294"></a><span class="lineno">  294</span>&#160;        3, 3, 4, 4,</div><div class="line"><a name="l00295"></a><span class="lineno">  295</span>&#160;</div><div class="line"><a name="l00296"></a><span class="lineno">  296</span>&#160;        5, 5, 6, 6,</div><div class="line"><a name="l00297"></a><span class="lineno">  297</span>&#160;        5, 5, 6, 6,</div><div class="line"><a name="l00298"></a><span class="lineno">  298</span>&#160;        7, 7, 8, 8,</div><div class="line"><a name="l00299"></a><span class="lineno">  299</span>&#160;        7, 7, 8, 8,</div><div class="line"><a name="l00300"></a><span class="lineno">  300</span>&#160;</div><div class="line"><a name="l00301"></a><span class="lineno">  301</span>&#160;        5, 5, 6, 6,</div><div class="line"><a name="l00302"></a><span class="lineno">  302</span>&#160;        5, 5, 6, 6,</div><div class="line"><a name="l00303"></a><span class="lineno">  303</span>&#160;        7, 7, 8, 8,</div><div class="line"><a name="l00304"></a><span class="lineno">  304</span>&#160;        7, 7, 8, 8</div><div class="line"><a name="l00305"></a><span class="lineno">  305</span>&#160;    },</div><div class="line"><a name="l00306"></a><span class="lineno">  306</span>&#160;    qScale, qOffset);</div><div class="line"><a name="l00307"></a><span class="lineno">  307</span>&#160;</div><div class="line"><a name="l00308"></a><span class="lineno">  308</span>&#160;    std::vector&lt;std::pair&lt;unsigned int, unsigned int&gt;&gt; padList;</div><div class="line"><a name="l00309"></a><span class="lineno">  309</span>&#160;    padList.push_back(std::pair&lt;unsigned int, unsigned int&gt;(1,1));</div><div class="line"><a name="l00310"></a><span class="lineno">  310</span>&#160;    padList.push_back(std::pair&lt;unsigned int, unsigned int&gt;(1,1));</div><div class="line"><a name="l00311"></a><span class="lineno">  311</span>&#160;    padList.push_back(std::pair&lt;unsigned int, unsigned int&gt;(1,1));</div><div class="line"><a name="l00312"></a><span class="lineno">  312</span>&#160;</div><div class="line"><a name="l00313"></a><span class="lineno">  313</span>&#160;    <span class="keywordflow">return</span> MirrorPad3dTestCommon&lt;T&gt;(workloadFactory,</div><div class="line"><a name="l00314"></a><span class="lineno">  314</span>&#160;                                    memoryManager,</div><div class="line"><a name="l00315"></a><span class="lineno">  315</span>&#160;                                    tensorHandleFactory,</div><div class="line"><a name="l00316"></a><span class="lineno">  316</span>&#160;                                    inputTensorInfo,</div><div class="line"><a name="l00317"></a><span class="lineno">  317</span>&#160;                                    outputTensorInfo,</div><div class="line"><a name="l00318"></a><span class="lineno">  318</span>&#160;                                    inputValues,</div><div class="line"><a name="l00319"></a><span class="lineno">  319</span>&#160;                                    expectedOutputValues,</div><div class="line"><a name="l00320"></a><span class="lineno">  320</span>&#160;                                    padList,</div><div class="line"><a name="l00321"></a><span class="lineno">  321</span>&#160;                                    <a class="code" href="namespacearmnn.xhtml#a14d24d90ab4ba2956e92e27890ba4c91af334649ef5e5d0ffe200751d07012626">armnn::PaddingMode::Symmetric</a>);</div><div class="line"><a name="l00322"></a><span class="lineno">  322</span>&#160;}</div><div class="line"><a name="l00323"></a><span class="lineno">  323</span>&#160;</div><div class="line"><a name="l00324"></a><span class="lineno">  324</span>&#160;<span class="keyword">template</span>&lt;<a class="code" href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6">armnn::DataType</a> ArmnnType,</div><div class="line"><a name="l00325"></a><span class="lineno">  325</span>&#160;        <span class="keyword">typename</span> T = <a class="code" href="namespacearmnn.xhtml#a0743ed5e860c316a20b68ca96301b411">armnn::ResolveType&lt;ArmnnType&gt;</a>&gt;</div><div class="line"><a name="l00326"></a><span class="lineno"><a class="line" href="_mirror_pad_test_impl_8cpp.xhtml#ad77c120567d91d7792797c47be0adc8f">  326</a></span>&#160;<a class="code" href="struct_layer_test_result.xhtml">LayerTestResult&lt;T, 3&gt;</a> <a class="code" href="_mirror_pad_test_impl_8cpp.xhtml#ad77c120567d91d7792797c47be0adc8f">PadReflect3dTest</a>(</div><div class="line"><a name="l00327"></a><span class="lineno">  327</span>&#160;        <a class="code" href="classarmnn_1_1_i_workload_factory.xhtml">armnn::IWorkloadFactory</a>&amp; workloadFactory,</div><div class="line"><a name="l00328"></a><span class="lineno">  328</span>&#160;        <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_i_backend_internal.xhtml#a693b40e6b94e958836aeb0410ca186bd">armnn::IBackendInternal::IMemoryManagerSharedPtr</a>&amp; memoryManager,</div><div class="line"><a name="l00329"></a><span class="lineno">  329</span>&#160;        <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_i_tensor_handle_factory.xhtml">armnn::ITensorHandleFactory</a>&amp; tensorHandleFactory,</div><div class="line"><a name="l00330"></a><span class="lineno">  330</span>&#160;        <span class="keywordtype">float</span> qScale,</div><div class="line"><a name="l00331"></a><span class="lineno">  331</span>&#160;        int32_t qOffset)</div><div class="line"><a name="l00332"></a><span class="lineno">  332</span>&#160;{</div><div class="line"><a name="l00333"></a><span class="lineno">  333</span>&#160;    <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_shape.xhtml">armnn::TensorShape</a> inputShape{ 2, 2, 2 };</div><div class="line"><a name="l00334"></a><span class="lineno">  334</span>&#160;    <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_shape.xhtml">armnn::TensorShape</a> outputShape{ 4, 4, 4 };</div><div class="line"><a name="l00335"></a><span class="lineno">  335</span>&#160;</div><div class="line"><a name="l00336"></a><span class="lineno">  336</span>&#160;    <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_info.xhtml">armnn::TensorInfo</a> inputTensorInfo(inputShape, ArmnnType, qScale, qOffset);</div><div class="line"><a name="l00337"></a><span class="lineno">  337</span>&#160;    <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_info.xhtml">armnn::TensorInfo</a> outputTensorInfo(outputShape, ArmnnType, qScale, qOffset);</div><div class="line"><a name="l00338"></a><span class="lineno">  338</span>&#160;</div><div class="line"><a name="l00339"></a><span class="lineno">  339</span>&#160;    std::vector&lt;T&gt; inputValues = armnnUtils::QuantizedVector&lt;T&gt;(</div><div class="line"><a name="l00340"></a><span class="lineno">  340</span>&#160;    {</div><div class="line"><a name="l00341"></a><span class="lineno">  341</span>&#160;        <span class="comment">// Channel 0, Height (2) x Width (2)</span></div><div class="line"><a name="l00342"></a><span class="lineno">  342</span>&#160;        1, 2,</div><div class="line"><a name="l00343"></a><span class="lineno">  343</span>&#160;        3, 4,</div><div class="line"><a name="l00344"></a><span class="lineno">  344</span>&#160;</div><div class="line"><a name="l00345"></a><span class="lineno">  345</span>&#160;        <span class="comment">// Channel 1, Height (2) x Width (2)</span></div><div class="line"><a name="l00346"></a><span class="lineno">  346</span>&#160;        5, 6,</div><div class="line"><a name="l00347"></a><span class="lineno">  347</span>&#160;        7, 8</div><div class="line"><a name="l00348"></a><span class="lineno">  348</span>&#160;    },</div><div class="line"><a name="l00349"></a><span class="lineno">  349</span>&#160;    qScale, qOffset);</div><div class="line"><a name="l00350"></a><span class="lineno">  350</span>&#160;</div><div class="line"><a name="l00351"></a><span class="lineno">  351</span>&#160;    std::vector&lt;T&gt; expectedOutputValues = armnnUtils::QuantizedVector&lt;T&gt;(</div><div class="line"><a name="l00352"></a><span class="lineno">  352</span>&#160;    {</div><div class="line"><a name="l00353"></a><span class="lineno">  353</span>&#160;        8, 7, 8, 7,</div><div class="line"><a name="l00354"></a><span class="lineno">  354</span>&#160;        6, 5, 6, 5,</div><div class="line"><a name="l00355"></a><span class="lineno">  355</span>&#160;        8, 7, 8, 7,</div><div class="line"><a name="l00356"></a><span class="lineno">  356</span>&#160;        6, 5, 6, 5,</div><div class="line"><a name="l00357"></a><span class="lineno">  357</span>&#160;</div><div class="line"><a name="l00358"></a><span class="lineno">  358</span>&#160;        4, 3, 4, 3,</div><div class="line"><a name="l00359"></a><span class="lineno">  359</span>&#160;        2, 1, 2, 1,</div><div class="line"><a name="l00360"></a><span class="lineno">  360</span>&#160;        4, 3, 4, 3,</div><div class="line"><a name="l00361"></a><span class="lineno">  361</span>&#160;        2, 1, 2, 1,</div><div class="line"><a name="l00362"></a><span class="lineno">  362</span>&#160;</div><div class="line"><a name="l00363"></a><span class="lineno">  363</span>&#160;        8, 7, 8, 7,</div><div class="line"><a name="l00364"></a><span class="lineno">  364</span>&#160;        6, 5, 6, 5,</div><div class="line"><a name="l00365"></a><span class="lineno">  365</span>&#160;        8, 7, 8, 7,</div><div class="line"><a name="l00366"></a><span class="lineno">  366</span>&#160;        6, 5, 6, 5,</div><div class="line"><a name="l00367"></a><span class="lineno">  367</span>&#160;</div><div class="line"><a name="l00368"></a><span class="lineno">  368</span>&#160;        4, 3, 4, 3,</div><div class="line"><a name="l00369"></a><span class="lineno">  369</span>&#160;        2, 1, 2, 1,</div><div class="line"><a name="l00370"></a><span class="lineno">  370</span>&#160;        4, 3, 4, 3,</div><div class="line"><a name="l00371"></a><span class="lineno">  371</span>&#160;        2, 1, 2, 1</div><div class="line"><a name="l00372"></a><span class="lineno">  372</span>&#160;    },</div><div class="line"><a name="l00373"></a><span class="lineno">  373</span>&#160;    qScale, qOffset);</div><div class="line"><a name="l00374"></a><span class="lineno">  374</span>&#160;</div><div class="line"><a name="l00375"></a><span class="lineno">  375</span>&#160;    std::vector&lt;std::pair&lt;unsigned int, unsigned int&gt;&gt; padList;</div><div class="line"><a name="l00376"></a><span class="lineno">  376</span>&#160;    padList.push_back(std::pair&lt;unsigned int, unsigned int&gt;(1,1));</div><div class="line"><a name="l00377"></a><span class="lineno">  377</span>&#160;    padList.push_back(std::pair&lt;unsigned int, unsigned int&gt;(1,1));</div><div class="line"><a name="l00378"></a><span class="lineno">  378</span>&#160;    padList.push_back(std::pair&lt;unsigned int, unsigned int&gt;(1,1));</div><div class="line"><a name="l00379"></a><span class="lineno">  379</span>&#160;</div><div class="line"><a name="l00380"></a><span class="lineno">  380</span>&#160;    <span class="keywordflow">return</span> MirrorPad3dTestCommon&lt;T&gt;(workloadFactory,</div><div class="line"><a name="l00381"></a><span class="lineno">  381</span>&#160;                                    memoryManager,</div><div class="line"><a name="l00382"></a><span class="lineno">  382</span>&#160;                                    tensorHandleFactory,</div><div class="line"><a name="l00383"></a><span class="lineno">  383</span>&#160;                                    inputTensorInfo,</div><div class="line"><a name="l00384"></a><span class="lineno">  384</span>&#160;                                    outputTensorInfo,</div><div class="line"><a name="l00385"></a><span class="lineno">  385</span>&#160;                                    inputValues,</div><div class="line"><a name="l00386"></a><span class="lineno">  386</span>&#160;                                    expectedOutputValues,</div><div class="line"><a name="l00387"></a><span class="lineno">  387</span>&#160;                                    padList,</div><div class="line"><a name="l00388"></a><span class="lineno">  388</span>&#160;                                    <a class="code" href="namespacearmnn.xhtml#a14d24d90ab4ba2956e92e27890ba4c91a74de3e45e4491e956e8dc18d841d9b00">armnn::PaddingMode::Reflect</a>);</div><div class="line"><a name="l00389"></a><span class="lineno">  389</span>&#160;}</div><div class="line"><a name="l00390"></a><span class="lineno">  390</span>&#160;</div><div class="line"><a name="l00391"></a><span class="lineno">  391</span>&#160;<span class="keyword">template</span>&lt;<a class="code" href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6">armnn::DataType</a> ArmnnType,</div><div class="line"><a name="l00392"></a><span class="lineno">  392</span>&#160;        <span class="keyword">typename</span> T = <a class="code" href="namespacearmnn.xhtml#a0743ed5e860c316a20b68ca96301b411">armnn::ResolveType&lt;ArmnnType&gt;</a>&gt;</div><div class="line"><a name="l00393"></a><span class="lineno"><a class="line" href="_mirror_pad_test_impl_8cpp.xhtml#a6ed87bbc750c92f63b9fa5d63069d163">  393</a></span>&#160;<a class="code" href="struct_layer_test_result.xhtml">LayerTestResult&lt;T, 4&gt;</a> <a class="code" href="_mirror_pad_test_impl_8cpp.xhtml#a6ed87bbc750c92f63b9fa5d63069d163">PadSymmetric4dTest</a>(</div><div class="line"><a name="l00394"></a><span class="lineno">  394</span>&#160;        <a class="code" href="classarmnn_1_1_i_workload_factory.xhtml">armnn::IWorkloadFactory</a>&amp; workloadFactory,</div><div class="line"><a name="l00395"></a><span class="lineno">  395</span>&#160;        <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_i_backend_internal.xhtml#a693b40e6b94e958836aeb0410ca186bd">armnn::IBackendInternal::IMemoryManagerSharedPtr</a>&amp; memoryManager,</div><div class="line"><a name="l00396"></a><span class="lineno">  396</span>&#160;        <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_i_tensor_handle_factory.xhtml">armnn::ITensorHandleFactory</a>&amp; tensorHandleFactory,</div><div class="line"><a name="l00397"></a><span class="lineno">  397</span>&#160;        <span class="keywordtype">float</span> qScale,</div><div class="line"><a name="l00398"></a><span class="lineno">  398</span>&#160;        int32_t qOffset)</div><div class="line"><a name="l00399"></a><span class="lineno">  399</span>&#160;{</div><div class="line"><a name="l00400"></a><span class="lineno">  400</span>&#160;    <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_shape.xhtml">armnn::TensorShape</a> inputShape{ 2, 2, 2, 2 };</div><div class="line"><a name="l00401"></a><span class="lineno">  401</span>&#160;    <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_shape.xhtml">armnn::TensorShape</a> outputShape{ 6, 6, 6, 6 };</div><div class="line"><a name="l00402"></a><span class="lineno">  402</span>&#160;</div><div class="line"><a name="l00403"></a><span class="lineno">  403</span>&#160;    <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_info.xhtml">armnn::TensorInfo</a> inputTensorInfo(inputShape, ArmnnType, qScale, qOffset);</div><div class="line"><a name="l00404"></a><span class="lineno">  404</span>&#160;    <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_info.xhtml">armnn::TensorInfo</a> outputTensorInfo(outputShape, ArmnnType, qScale, qOffset);</div><div class="line"><a name="l00405"></a><span class="lineno">  405</span>&#160;</div><div class="line"><a name="l00406"></a><span class="lineno">  406</span>&#160;    std::vector&lt;T&gt; inputValues = armnnUtils::QuantizedVector&lt;T&gt;(</div><div class="line"><a name="l00407"></a><span class="lineno">  407</span>&#160;    {</div><div class="line"><a name="l00408"></a><span class="lineno">  408</span>&#160;        <span class="comment">// Batch 0, Channel 0, Height (2) x Width (2)</span></div><div class="line"><a name="l00409"></a><span class="lineno">  409</span>&#160;        1, 2,</div><div class="line"><a name="l00410"></a><span class="lineno">  410</span>&#160;        3, 4,</div><div class="line"><a name="l00411"></a><span class="lineno">  411</span>&#160;</div><div class="line"><a name="l00412"></a><span class="lineno">  412</span>&#160;        <span class="comment">// Batch 0, Channel 1, Height (2) x Width (2)</span></div><div class="line"><a name="l00413"></a><span class="lineno">  413</span>&#160;        5, 6,</div><div class="line"><a name="l00414"></a><span class="lineno">  414</span>&#160;        7, 8,</div><div class="line"><a name="l00415"></a><span class="lineno">  415</span>&#160;</div><div class="line"><a name="l00416"></a><span class="lineno">  416</span>&#160;        <span class="comment">// Batch 1, Channel 0, Height (2) x Width (2)</span></div><div class="line"><a name="l00417"></a><span class="lineno">  417</span>&#160;        9, 10,</div><div class="line"><a name="l00418"></a><span class="lineno">  418</span>&#160;        11, 12,</div><div class="line"><a name="l00419"></a><span class="lineno">  419</span>&#160;</div><div class="line"><a name="l00420"></a><span class="lineno">  420</span>&#160;        <span class="comment">// Batch 1, Channel 1, Height (2) x Width (2)</span></div><div class="line"><a name="l00421"></a><span class="lineno">  421</span>&#160;        13, 14,</div><div class="line"><a name="l00422"></a><span class="lineno">  422</span>&#160;        15, 16,</div><div class="line"><a name="l00423"></a><span class="lineno">  423</span>&#160;    },</div><div class="line"><a name="l00424"></a><span class="lineno">  424</span>&#160;    qScale, qOffset);</div><div class="line"><a name="l00425"></a><span class="lineno">  425</span>&#160;</div><div class="line"><a name="l00426"></a><span class="lineno">  426</span>&#160;    std::vector&lt;T&gt; expectedOutputValues = armnnUtils::QuantizedVector&lt;T&gt;(</div><div class="line"><a name="l00427"></a><span class="lineno">  427</span>&#160;    {</div><div class="line"><a name="l00428"></a><span class="lineno">  428</span>&#160;        16, 15, 15, 16, 16, 15,</div><div class="line"><a name="l00429"></a><span class="lineno">  429</span>&#160;        14, 13, 13, 14, 14, 13,</div><div class="line"><a name="l00430"></a><span class="lineno">  430</span>&#160;        14, 13, 13, 14, 14, 13,</div><div class="line"><a name="l00431"></a><span class="lineno">  431</span>&#160;        16, 15, 15, 16, 16, 15,</div><div class="line"><a name="l00432"></a><span class="lineno">  432</span>&#160;        16, 15, 15, 16, 16, 15,</div><div class="line"><a name="l00433"></a><span class="lineno">  433</span>&#160;        14, 13, 13, 14, 14, 13,</div><div class="line"><a name="l00434"></a><span class="lineno">  434</span>&#160;</div><div class="line"><a name="l00435"></a><span class="lineno">  435</span>&#160;        12, 11, 11, 12, 12, 11,</div><div class="line"><a name="l00436"></a><span class="lineno">  436</span>&#160;        10,  9,  9, 10, 10,  9,</div><div class="line"><a name="l00437"></a><span class="lineno">  437</span>&#160;        10,  9,  9, 10, 10,  9,</div><div class="line"><a name="l00438"></a><span class="lineno">  438</span>&#160;        12, 11, 11, 12, 12, 11,</div><div class="line"><a name="l00439"></a><span class="lineno">  439</span>&#160;        12, 11, 11, 12, 12, 11,</div><div class="line"><a name="l00440"></a><span class="lineno">  440</span>&#160;        10,  9,  9, 10, 10,  9,</div><div class="line"><a name="l00441"></a><span class="lineno">  441</span>&#160;</div><div class="line"><a name="l00442"></a><span class="lineno">  442</span>&#160;        12, 11, 11, 12, 12, 11,</div><div class="line"><a name="l00443"></a><span class="lineno">  443</span>&#160;        10,  9,  9, 10, 10,  9,</div><div class="line"><a name="l00444"></a><span class="lineno">  444</span>&#160;        10,  9,  9, 10, 10,  9,</div><div class="line"><a name="l00445"></a><span class="lineno">  445</span>&#160;        12, 11, 11, 12, 12, 11,</div><div class="line"><a name="l00446"></a><span class="lineno">  446</span>&#160;        12, 11, 11, 12, 12, 11,</div><div class="line"><a name="l00447"></a><span class="lineno">  447</span>&#160;        10,  9,  9, 10, 10,  9,</div><div class="line"><a name="l00448"></a><span class="lineno">  448</span>&#160;</div><div class="line"><a name="l00449"></a><span class="lineno">  449</span>&#160;        16, 15, 15, 16, 16, 15,</div><div class="line"><a name="l00450"></a><span class="lineno">  450</span>&#160;        14, 13, 13, 14, 14, 13,</div><div class="line"><a name="l00451"></a><span class="lineno">  451</span>&#160;        14, 13, 13, 14, 14, 13,</div><div class="line"><a name="l00452"></a><span class="lineno">  452</span>&#160;        16, 15, 15, 16, 16, 15,</div><div class="line"><a name="l00453"></a><span class="lineno">  453</span>&#160;        16, 15, 15, 16, 16, 15,</div><div class="line"><a name="l00454"></a><span class="lineno">  454</span>&#160;        14, 13, 13, 14, 14, 13,</div><div class="line"><a name="l00455"></a><span class="lineno">  455</span>&#160;</div><div class="line"><a name="l00456"></a><span class="lineno">  456</span>&#160;        16, 15, 15, 16, 16, 15,</div><div class="line"><a name="l00457"></a><span class="lineno">  457</span>&#160;        14, 13, 13, 14, 14, 13,</div><div class="line"><a name="l00458"></a><span class="lineno">  458</span>&#160;        14, 13, 13, 14, 14, 13,</div><div class="line"><a name="l00459"></a><span class="lineno">  459</span>&#160;        16, 15, 15, 16, 16, 15,</div><div class="line"><a name="l00460"></a><span class="lineno">  460</span>&#160;        16, 15, 15, 16, 16, 15,</div><div class="line"><a name="l00461"></a><span class="lineno">  461</span>&#160;        14, 13, 13, 14, 14, 13,</div><div class="line"><a name="l00462"></a><span class="lineno">  462</span>&#160;</div><div class="line"><a name="l00463"></a><span class="lineno">  463</span>&#160;        12, 11, 11, 12, 12, 11,</div><div class="line"><a name="l00464"></a><span class="lineno">  464</span>&#160;        10,  9,  9, 10, 10,  9,</div><div class="line"><a name="l00465"></a><span class="lineno">  465</span>&#160;        10,  9,  9, 10, 10,  9,</div><div class="line"><a name="l00466"></a><span class="lineno">  466</span>&#160;        12, 11, 11, 12, 12, 11,</div><div class="line"><a name="l00467"></a><span class="lineno">  467</span>&#160;        12, 11, 11, 12, 12, 11,</div><div class="line"><a name="l00468"></a><span class="lineno">  468</span>&#160;        10,  9,  9, 10, 10,  9,</div><div class="line"><a name="l00469"></a><span class="lineno">  469</span>&#160;</div><div class="line"><a name="l00470"></a><span class="lineno">  470</span>&#160;</div><div class="line"><a name="l00471"></a><span class="lineno">  471</span>&#160;        8,  7,  7,  8,  8,  7,</div><div class="line"><a name="l00472"></a><span class="lineno">  472</span>&#160;        6,  5,  5,  6,  6,  5,</div><div class="line"><a name="l00473"></a><span class="lineno">  473</span>&#160;        6,  5,  5,  6,  6,  5,</div><div class="line"><a name="l00474"></a><span class="lineno">  474</span>&#160;        8,  7,  7,  8,  8,  7,</div><div class="line"><a name="l00475"></a><span class="lineno">  475</span>&#160;        8,  7,  7,  8,  8,  7,</div><div class="line"><a name="l00476"></a><span class="lineno">  476</span>&#160;        6,  5,  5,  6,  6,  5,</div><div class="line"><a name="l00477"></a><span class="lineno">  477</span>&#160;</div><div class="line"><a name="l00478"></a><span class="lineno">  478</span>&#160;        4,  3,  3,  4,  4,  3,</div><div class="line"><a name="l00479"></a><span class="lineno">  479</span>&#160;        2,  1,  1,  2,  2,  1,</div><div class="line"><a name="l00480"></a><span class="lineno">  480</span>&#160;        2,  1,  1,  2,  2,  1,</div><div class="line"><a name="l00481"></a><span class="lineno">  481</span>&#160;        4,  3,  3,  4,  4,  3,</div><div class="line"><a name="l00482"></a><span class="lineno">  482</span>&#160;        4,  3,  3,  4,  4,  3,</div><div class="line"><a name="l00483"></a><span class="lineno">  483</span>&#160;        2,  1,  1,  2,  2,  1,</div><div class="line"><a name="l00484"></a><span class="lineno">  484</span>&#160;</div><div class="line"><a name="l00485"></a><span class="lineno">  485</span>&#160;        4,  3,  3,  4,  4,  3,</div><div class="line"><a name="l00486"></a><span class="lineno">  486</span>&#160;        2,  1,  1,  2,  2,  1,</div><div class="line"><a name="l00487"></a><span class="lineno">  487</span>&#160;        2,  1,  1,  2,  2,  1,</div><div class="line"><a name="l00488"></a><span class="lineno">  488</span>&#160;        4,  3,  3,  4,  4,  3,</div><div class="line"><a name="l00489"></a><span class="lineno">  489</span>&#160;        4,  3,  3,  4,  4,  3,</div><div class="line"><a name="l00490"></a><span class="lineno">  490</span>&#160;        2,  1,  1,  2,  2,  1,</div><div class="line"><a name="l00491"></a><span class="lineno">  491</span>&#160;</div><div class="line"><a name="l00492"></a><span class="lineno">  492</span>&#160;        8,  7,  7,  8,  8,  7,</div><div class="line"><a name="l00493"></a><span class="lineno">  493</span>&#160;        6,  5,  5,  6,  6,  5,</div><div class="line"><a name="l00494"></a><span class="lineno">  494</span>&#160;        6,  5,  5,  6,  6,  5,</div><div class="line"><a name="l00495"></a><span class="lineno">  495</span>&#160;        8,  7,  7,  8,  8,  7,</div><div class="line"><a name="l00496"></a><span class="lineno">  496</span>&#160;        8,  7,  7,  8,  8,  7,</div><div class="line"><a name="l00497"></a><span class="lineno">  497</span>&#160;        6,  5,  5,  6,  6,  5,</div><div class="line"><a name="l00498"></a><span class="lineno">  498</span>&#160;</div><div class="line"><a name="l00499"></a><span class="lineno">  499</span>&#160;        8,  7,  7,  8,  8,  7,</div><div class="line"><a name="l00500"></a><span class="lineno">  500</span>&#160;        6,  5,  5,  6,  6,  5,</div><div class="line"><a name="l00501"></a><span class="lineno">  501</span>&#160;        6,  5,  5,  6,  6,  5,</div><div class="line"><a name="l00502"></a><span class="lineno">  502</span>&#160;        8,  7,  7,  8,  8,  7,</div><div class="line"><a name="l00503"></a><span class="lineno">  503</span>&#160;        8,  7,  7,  8,  8,  7,</div><div class="line"><a name="l00504"></a><span class="lineno">  504</span>&#160;        6,  5,  5,  6,  6,  5,</div><div class="line"><a name="l00505"></a><span class="lineno">  505</span>&#160;</div><div class="line"><a name="l00506"></a><span class="lineno">  506</span>&#160;        4,  3,  3,  4,  4,  3,</div><div class="line"><a name="l00507"></a><span class="lineno">  507</span>&#160;        2,  1,  1,  2,  2,  1,</div><div class="line"><a name="l00508"></a><span class="lineno">  508</span>&#160;        2,  1,  1,  2,  2,  1,</div><div class="line"><a name="l00509"></a><span class="lineno">  509</span>&#160;        4,  3,  3,  4,  4,  3,</div><div class="line"><a name="l00510"></a><span class="lineno">  510</span>&#160;        4,  3,  3,  4,  4,  3,</div><div class="line"><a name="l00511"></a><span class="lineno">  511</span>&#160;        2,  1,  1,  2,  2,  1,</div><div class="line"><a name="l00512"></a><span class="lineno">  512</span>&#160;</div><div class="line"><a name="l00513"></a><span class="lineno">  513</span>&#160;</div><div class="line"><a name="l00514"></a><span class="lineno">  514</span>&#160;        8,  7,  7,  8,  8,  7,</div><div class="line"><a name="l00515"></a><span class="lineno">  515</span>&#160;        6,  5,  5,  6,  6,  5,</div><div class="line"><a name="l00516"></a><span class="lineno">  516</span>&#160;        6,  5,  5,  6,  6,  5,</div><div class="line"><a name="l00517"></a><span class="lineno">  517</span>&#160;        8,  7,  7,  8,  8,  7,</div><div class="line"><a name="l00518"></a><span class="lineno">  518</span>&#160;        8,  7,  7,  8,  8,  7,</div><div class="line"><a name="l00519"></a><span class="lineno">  519</span>&#160;        6,  5,  5,  6,  6,  5,</div><div class="line"><a name="l00520"></a><span class="lineno">  520</span>&#160;</div><div class="line"><a name="l00521"></a><span class="lineno">  521</span>&#160;        4,  3,  3,  4,  4,  3,</div><div class="line"><a name="l00522"></a><span class="lineno">  522</span>&#160;        2,  1,  1,  2,  2,  1,</div><div class="line"><a name="l00523"></a><span class="lineno">  523</span>&#160;        2,  1,  1,  2,  2,  1,</div><div class="line"><a name="l00524"></a><span class="lineno">  524</span>&#160;        4,  3,  3,  4,  4,  3,</div><div class="line"><a name="l00525"></a><span class="lineno">  525</span>&#160;        4,  3,  3,  4,  4,  3,</div><div class="line"><a name="l00526"></a><span class="lineno">  526</span>&#160;        2,  1,  1,  2,  2,  1,</div><div class="line"><a name="l00527"></a><span class="lineno">  527</span>&#160;</div><div class="line"><a name="l00528"></a><span class="lineno">  528</span>&#160;        4,  3,  3,  4,  4,  3,</div><div class="line"><a name="l00529"></a><span class="lineno">  529</span>&#160;        2,  1,  1,  2,  2,  1,</div><div class="line"><a name="l00530"></a><span class="lineno">  530</span>&#160;        2,  1,  1,  2,  2,  1,</div><div class="line"><a name="l00531"></a><span class="lineno">  531</span>&#160;        4,  3,  3,  4,  4,  3,</div><div class="line"><a name="l00532"></a><span class="lineno">  532</span>&#160;        4,  3,  3,  4,  4,  3,</div><div class="line"><a name="l00533"></a><span class="lineno">  533</span>&#160;        2,  1,  1,  2,  2,  1,</div><div class="line"><a name="l00534"></a><span class="lineno">  534</span>&#160;</div><div class="line"><a name="l00535"></a><span class="lineno">  535</span>&#160;        8,  7,  7,  8,  8,  7,</div><div class="line"><a name="l00536"></a><span class="lineno">  536</span>&#160;        6,  5,  5,  6,  6,  5,</div><div class="line"><a name="l00537"></a><span class="lineno">  537</span>&#160;        6,  5,  5,  6,  6,  5,</div><div class="line"><a name="l00538"></a><span class="lineno">  538</span>&#160;        8,  7,  7,  8,  8,  7,</div><div class="line"><a name="l00539"></a><span class="lineno">  539</span>&#160;        8,  7,  7,  8,  8,  7,</div><div class="line"><a name="l00540"></a><span class="lineno">  540</span>&#160;        6,  5,  5,  6,  6,  5,</div><div class="line"><a name="l00541"></a><span class="lineno">  541</span>&#160;</div><div class="line"><a name="l00542"></a><span class="lineno">  542</span>&#160;        8,  7,  7,  8,  8,  7,</div><div class="line"><a name="l00543"></a><span class="lineno">  543</span>&#160;        6,  5,  5,  6,  6,  5,</div><div class="line"><a name="l00544"></a><span class="lineno">  544</span>&#160;        6,  5,  5,  6,  6,  5,</div><div class="line"><a name="l00545"></a><span class="lineno">  545</span>&#160;        8,  7,  7,  8,  8,  7,</div><div class="line"><a name="l00546"></a><span class="lineno">  546</span>&#160;        8,  7,  7,  8,  8,  7,</div><div class="line"><a name="l00547"></a><span class="lineno">  547</span>&#160;        6,  5,  5,  6,  6,  5,</div><div class="line"><a name="l00548"></a><span class="lineno">  548</span>&#160;</div><div class="line"><a name="l00549"></a><span class="lineno">  549</span>&#160;        4,  3,  3,  4,  4,  3,</div><div class="line"><a name="l00550"></a><span class="lineno">  550</span>&#160;        2,  1,  1,  2,  2,  1,</div><div class="line"><a name="l00551"></a><span class="lineno">  551</span>&#160;        2,  1,  1,  2,  2,  1,</div><div class="line"><a name="l00552"></a><span class="lineno">  552</span>&#160;        4,  3,  3,  4,  4,  3,</div><div class="line"><a name="l00553"></a><span class="lineno">  553</span>&#160;        4,  3,  3,  4,  4,  3,</div><div class="line"><a name="l00554"></a><span class="lineno">  554</span>&#160;        2,  1,  1,  2,  2,  1,</div><div class="line"><a name="l00555"></a><span class="lineno">  555</span>&#160;</div><div class="line"><a name="l00556"></a><span class="lineno">  556</span>&#160;</div><div class="line"><a name="l00557"></a><span class="lineno">  557</span>&#160;        16, 15, 15, 16, 16, 15,</div><div class="line"><a name="l00558"></a><span class="lineno">  558</span>&#160;        14, 13, 13, 14, 14, 13,</div><div class="line"><a name="l00559"></a><span class="lineno">  559</span>&#160;        14, 13, 13, 14, 14, 13,</div><div class="line"><a name="l00560"></a><span class="lineno">  560</span>&#160;        16, 15, 15, 16, 16, 15,</div><div class="line"><a name="l00561"></a><span class="lineno">  561</span>&#160;        16, 15, 15, 16, 16, 15,</div><div class="line"><a name="l00562"></a><span class="lineno">  562</span>&#160;        14, 13, 13, 14, 14, 13,</div><div class="line"><a name="l00563"></a><span class="lineno">  563</span>&#160;</div><div class="line"><a name="l00564"></a><span class="lineno">  564</span>&#160;        12, 11, 11, 12, 12, 11,</div><div class="line"><a name="l00565"></a><span class="lineno">  565</span>&#160;        10,  9,  9, 10, 10,  9,</div><div class="line"><a name="l00566"></a><span class="lineno">  566</span>&#160;        10,  9,  9, 10, 10,  9,</div><div class="line"><a name="l00567"></a><span class="lineno">  567</span>&#160;        12, 11, 11, 12, 12, 11,</div><div class="line"><a name="l00568"></a><span class="lineno">  568</span>&#160;        12, 11, 11, 12, 12, 11,</div><div class="line"><a name="l00569"></a><span class="lineno">  569</span>&#160;        10,  9,  9, 10, 10,  9,</div><div class="line"><a name="l00570"></a><span class="lineno">  570</span>&#160;</div><div class="line"><a name="l00571"></a><span class="lineno">  571</span>&#160;        12, 11, 11, 12, 12, 11,</div><div class="line"><a name="l00572"></a><span class="lineno">  572</span>&#160;        10,  9,  9, 10, 10,  9,</div><div class="line"><a name="l00573"></a><span class="lineno">  573</span>&#160;        10,  9,  9, 10, 10,  9,</div><div class="line"><a name="l00574"></a><span class="lineno">  574</span>&#160;        12, 11, 11, 12, 12, 11,</div><div class="line"><a name="l00575"></a><span class="lineno">  575</span>&#160;        12, 11, 11, 12, 12, 11,</div><div class="line"><a name="l00576"></a><span class="lineno">  576</span>&#160;        10,  9,  9, 10, 10,  9,</div><div class="line"><a name="l00577"></a><span class="lineno">  577</span>&#160;</div><div class="line"><a name="l00578"></a><span class="lineno">  578</span>&#160;        16, 15, 15, 16, 16, 15,</div><div class="line"><a name="l00579"></a><span class="lineno">  579</span>&#160;        14, 13, 13, 14, 14, 13,</div><div class="line"><a name="l00580"></a><span class="lineno">  580</span>&#160;        14, 13, 13, 14, 14, 13,</div><div class="line"><a name="l00581"></a><span class="lineno">  581</span>&#160;        16, 15, 15, 16, 16, 15,</div><div class="line"><a name="l00582"></a><span class="lineno">  582</span>&#160;        16, 15, 15, 16, 16, 15,</div><div class="line"><a name="l00583"></a><span class="lineno">  583</span>&#160;        14, 13, 13, 14, 14, 13,</div><div class="line"><a name="l00584"></a><span class="lineno">  584</span>&#160;</div><div class="line"><a name="l00585"></a><span class="lineno">  585</span>&#160;        16, 15, 15, 16, 16, 15,</div><div class="line"><a name="l00586"></a><span class="lineno">  586</span>&#160;        14, 13, 13, 14, 14, 13,</div><div class="line"><a name="l00587"></a><span class="lineno">  587</span>&#160;        14, 13, 13, 14, 14, 13,</div><div class="line"><a name="l00588"></a><span class="lineno">  588</span>&#160;        16, 15, 15, 16, 16, 15,</div><div class="line"><a name="l00589"></a><span class="lineno">  589</span>&#160;        16, 15, 15, 16, 16, 15,</div><div class="line"><a name="l00590"></a><span class="lineno">  590</span>&#160;        14, 13, 13, 14, 14, 13,</div><div class="line"><a name="l00591"></a><span class="lineno">  591</span>&#160;</div><div class="line"><a name="l00592"></a><span class="lineno">  592</span>&#160;        12, 11, 11, 12, 12, 11,</div><div class="line"><a name="l00593"></a><span class="lineno">  593</span>&#160;        10,  9,  9, 10, 10,  9,</div><div class="line"><a name="l00594"></a><span class="lineno">  594</span>&#160;        10,  9,  9, 10, 10,  9,</div><div class="line"><a name="l00595"></a><span class="lineno">  595</span>&#160;        12, 11, 11, 12, 12, 11,</div><div class="line"><a name="l00596"></a><span class="lineno">  596</span>&#160;        12, 11, 11, 12, 12, 11,</div><div class="line"><a name="l00597"></a><span class="lineno">  597</span>&#160;        10,  9,  9, 10, 10,  9,</div><div class="line"><a name="l00598"></a><span class="lineno">  598</span>&#160;</div><div class="line"><a name="l00599"></a><span class="lineno">  599</span>&#160;</div><div class="line"><a name="l00600"></a><span class="lineno">  600</span>&#160;        16, 15, 15, 16, 16, 15,</div><div class="line"><a name="l00601"></a><span class="lineno">  601</span>&#160;        14, 13, 13, 14, 14, 13,</div><div class="line"><a name="l00602"></a><span class="lineno">  602</span>&#160;        14, 13, 13, 14, 14, 13,</div><div class="line"><a name="l00603"></a><span class="lineno">  603</span>&#160;        16, 15, 15, 16, 16, 15,</div><div class="line"><a name="l00604"></a><span class="lineno">  604</span>&#160;        16, 15, 15, 16, 16, 15,</div><div class="line"><a name="l00605"></a><span class="lineno">  605</span>&#160;        14, 13, 13, 14, 14, 13,</div><div class="line"><a name="l00606"></a><span class="lineno">  606</span>&#160;</div><div class="line"><a name="l00607"></a><span class="lineno">  607</span>&#160;        12, 11, 11, 12, 12, 11,</div><div class="line"><a name="l00608"></a><span class="lineno">  608</span>&#160;        10,  9,  9, 10, 10,  9,</div><div class="line"><a name="l00609"></a><span class="lineno">  609</span>&#160;        10,  9,  9, 10, 10,  9,</div><div class="line"><a name="l00610"></a><span class="lineno">  610</span>&#160;        12, 11, 11, 12, 12, 11,</div><div class="line"><a name="l00611"></a><span class="lineno">  611</span>&#160;        12, 11, 11, 12, 12, 11,</div><div class="line"><a name="l00612"></a><span class="lineno">  612</span>&#160;        10,  9,  9, 10, 10,  9,</div><div class="line"><a name="l00613"></a><span class="lineno">  613</span>&#160;</div><div class="line"><a name="l00614"></a><span class="lineno">  614</span>&#160;        12, 11, 11, 12, 12, 11,</div><div class="line"><a name="l00615"></a><span class="lineno">  615</span>&#160;        10,  9,  9, 10, 10,  9,</div><div class="line"><a name="l00616"></a><span class="lineno">  616</span>&#160;        10,  9,  9, 10, 10,  9,</div><div class="line"><a name="l00617"></a><span class="lineno">  617</span>&#160;        12, 11, 11, 12, 12, 11,</div><div class="line"><a name="l00618"></a><span class="lineno">  618</span>&#160;        12, 11, 11, 12, 12, 11,</div><div class="line"><a name="l00619"></a><span class="lineno">  619</span>&#160;        10,  9,  9, 10, 10,  9,</div><div class="line"><a name="l00620"></a><span class="lineno">  620</span>&#160;</div><div class="line"><a name="l00621"></a><span class="lineno">  621</span>&#160;        16, 15, 15, 16, 16, 15,</div><div class="line"><a name="l00622"></a><span class="lineno">  622</span>&#160;        14, 13, 13, 14, 14, 13,</div><div class="line"><a name="l00623"></a><span class="lineno">  623</span>&#160;        14, 13, 13, 14, 14, 13,</div><div class="line"><a name="l00624"></a><span class="lineno">  624</span>&#160;        16, 15, 15, 16, 16, 15,</div><div class="line"><a name="l00625"></a><span class="lineno">  625</span>&#160;        16, 15, 15, 16, 16, 15,</div><div class="line"><a name="l00626"></a><span class="lineno">  626</span>&#160;        14, 13, 13, 14, 14, 13,</div><div class="line"><a name="l00627"></a><span class="lineno">  627</span>&#160;</div><div class="line"><a name="l00628"></a><span class="lineno">  628</span>&#160;        16, 15, 15, 16, 16, 15,</div><div class="line"><a name="l00629"></a><span class="lineno">  629</span>&#160;        14, 13, 13, 14, 14, 13,</div><div class="line"><a name="l00630"></a><span class="lineno">  630</span>&#160;        14, 13, 13, 14, 14, 13,</div><div class="line"><a name="l00631"></a><span class="lineno">  631</span>&#160;        16, 15, 15, 16, 16, 15,</div><div class="line"><a name="l00632"></a><span class="lineno">  632</span>&#160;        16, 15, 15, 16, 16, 15,</div><div class="line"><a name="l00633"></a><span class="lineno">  633</span>&#160;        14, 13, 13, 14, 14, 13,</div><div class="line"><a name="l00634"></a><span class="lineno">  634</span>&#160;</div><div class="line"><a name="l00635"></a><span class="lineno">  635</span>&#160;        12, 11, 11, 12, 12, 11,</div><div class="line"><a name="l00636"></a><span class="lineno">  636</span>&#160;        10,  9,  9, 10, 10,  9,</div><div class="line"><a name="l00637"></a><span class="lineno">  637</span>&#160;        10,  9,  9, 10, 10,  9,</div><div class="line"><a name="l00638"></a><span class="lineno">  638</span>&#160;        12, 11, 11, 12, 12, 11,</div><div class="line"><a name="l00639"></a><span class="lineno">  639</span>&#160;        12, 11, 11, 12, 12, 11,</div><div class="line"><a name="l00640"></a><span class="lineno">  640</span>&#160;        10,  9,  9, 10, 10,  9,</div><div class="line"><a name="l00641"></a><span class="lineno">  641</span>&#160;</div><div class="line"><a name="l00642"></a><span class="lineno">  642</span>&#160;</div><div class="line"><a name="l00643"></a><span class="lineno">  643</span>&#160;        8,  7,  7,  8,  8,  7,</div><div class="line"><a name="l00644"></a><span class="lineno">  644</span>&#160;        6,  5,  5,  6,  6,  5,</div><div class="line"><a name="l00645"></a><span class="lineno">  645</span>&#160;        6,  5,  5,  6,  6,  5,</div><div class="line"><a name="l00646"></a><span class="lineno">  646</span>&#160;        8,  7,  7,  8,  8,  7,</div><div class="line"><a name="l00647"></a><span class="lineno">  647</span>&#160;        8,  7,  7,  8,  8,  7,</div><div class="line"><a name="l00648"></a><span class="lineno">  648</span>&#160;        6,  5,  5,  6,  6,  5,</div><div class="line"><a name="l00649"></a><span class="lineno">  649</span>&#160;</div><div class="line"><a name="l00650"></a><span class="lineno">  650</span>&#160;        4,  3,  3,  4,  4,  3,</div><div class="line"><a name="l00651"></a><span class="lineno">  651</span>&#160;        2,  1,  1,  2,  2,  1,</div><div class="line"><a name="l00652"></a><span class="lineno">  652</span>&#160;        2,  1,  1,  2,  2,  1,</div><div class="line"><a name="l00653"></a><span class="lineno">  653</span>&#160;        4,  3,  3,  4,  4,  3,</div><div class="line"><a name="l00654"></a><span class="lineno">  654</span>&#160;        4,  3,  3,  4,  4,  3,</div><div class="line"><a name="l00655"></a><span class="lineno">  655</span>&#160;        2,  1,  1,  2,  2,  1,</div><div class="line"><a name="l00656"></a><span class="lineno">  656</span>&#160;</div><div class="line"><a name="l00657"></a><span class="lineno">  657</span>&#160;        4,  3,  3,  4,  4,  3,</div><div class="line"><a name="l00658"></a><span class="lineno">  658</span>&#160;        2,  1,  1,  2,  2,  1,</div><div class="line"><a name="l00659"></a><span class="lineno">  659</span>&#160;        2,  1,  1,  2,  2,  1,</div><div class="line"><a name="l00660"></a><span class="lineno">  660</span>&#160;        4,  3,  3,  4,  4,  3,</div><div class="line"><a name="l00661"></a><span class="lineno">  661</span>&#160;        4,  3,  3,  4,  4,  3,</div><div class="line"><a name="l00662"></a><span class="lineno">  662</span>&#160;        2,  1,  1,  2,  2,  1,</div><div class="line"><a name="l00663"></a><span class="lineno">  663</span>&#160;</div><div class="line"><a name="l00664"></a><span class="lineno">  664</span>&#160;        8,  7,  7,  8,  8,  7,</div><div class="line"><a name="l00665"></a><span class="lineno">  665</span>&#160;        6,  5,  5,  6,  6,  5,</div><div class="line"><a name="l00666"></a><span class="lineno">  666</span>&#160;        6,  5,  5,  6,  6,  5,</div><div class="line"><a name="l00667"></a><span class="lineno">  667</span>&#160;        8,  7,  7,  8,  8,  7,</div><div class="line"><a name="l00668"></a><span class="lineno">  668</span>&#160;        8,  7,  7,  8,  8,  7,</div><div class="line"><a name="l00669"></a><span class="lineno">  669</span>&#160;        6,  5,  5,  6,  6,  5,</div><div class="line"><a name="l00670"></a><span class="lineno">  670</span>&#160;</div><div class="line"><a name="l00671"></a><span class="lineno">  671</span>&#160;        8,  7,  7,  8,  8,  7,</div><div class="line"><a name="l00672"></a><span class="lineno">  672</span>&#160;        6,  5,  5,  6,  6,  5,</div><div class="line"><a name="l00673"></a><span class="lineno">  673</span>&#160;        6,  5,  5,  6,  6,  5,</div><div class="line"><a name="l00674"></a><span class="lineno">  674</span>&#160;        8,  7,  7,  8,  8,  7,</div><div class="line"><a name="l00675"></a><span class="lineno">  675</span>&#160;        8,  7,  7,  8,  8,  7,</div><div class="line"><a name="l00676"></a><span class="lineno">  676</span>&#160;        6,  5,  5,  6,  6,  5,</div><div class="line"><a name="l00677"></a><span class="lineno">  677</span>&#160;</div><div class="line"><a name="l00678"></a><span class="lineno">  678</span>&#160;        4,  3,  3,  4,  4,  3,</div><div class="line"><a name="l00679"></a><span class="lineno">  679</span>&#160;        2,  1,  1,  2,  2,  1,</div><div class="line"><a name="l00680"></a><span class="lineno">  680</span>&#160;        2,  1,  1,  2,  2,  1,</div><div class="line"><a name="l00681"></a><span class="lineno">  681</span>&#160;        4,  3,  3,  4,  4,  3,</div><div class="line"><a name="l00682"></a><span class="lineno">  682</span>&#160;        4,  3,  3,  4,  4,  3,</div><div class="line"><a name="l00683"></a><span class="lineno">  683</span>&#160;        2,  1,  1,  2,  2,  1</div><div class="line"><a name="l00684"></a><span class="lineno">  684</span>&#160;    },</div><div class="line"><a name="l00685"></a><span class="lineno">  685</span>&#160;    qScale, qOffset);</div><div class="line"><a name="l00686"></a><span class="lineno">  686</span>&#160;</div><div class="line"><a name="l00687"></a><span class="lineno">  687</span>&#160;    std::vector&lt;std::pair&lt;unsigned int, unsigned int&gt;&gt; padList;</div><div class="line"><a name="l00688"></a><span class="lineno">  688</span>&#160;    padList.push_back(std::pair&lt;unsigned int, unsigned int&gt;(2,2));</div><div class="line"><a name="l00689"></a><span class="lineno">  689</span>&#160;    padList.push_back(std::pair&lt;unsigned int, unsigned int&gt;(2,2));</div><div class="line"><a name="l00690"></a><span class="lineno">  690</span>&#160;    padList.push_back(std::pair&lt;unsigned int, unsigned int&gt;(2,2));</div><div class="line"><a name="l00691"></a><span class="lineno">  691</span>&#160;    padList.push_back(std::pair&lt;unsigned int, unsigned int&gt;(2,2));</div><div class="line"><a name="l00692"></a><span class="lineno">  692</span>&#160;</div><div class="line"><a name="l00693"></a><span class="lineno">  693</span>&#160;    <span class="keywordflow">return</span> MirrorPad4dTestCommon&lt;T&gt;(workloadFactory,</div><div class="line"><a name="l00694"></a><span class="lineno">  694</span>&#160;                                    memoryManager,</div><div class="line"><a name="l00695"></a><span class="lineno">  695</span>&#160;                                    tensorHandleFactory,</div><div class="line"><a name="l00696"></a><span class="lineno">  696</span>&#160;                                    inputTensorInfo,</div><div class="line"><a name="l00697"></a><span class="lineno">  697</span>&#160;                                    outputTensorInfo,</div><div class="line"><a name="l00698"></a><span class="lineno">  698</span>&#160;                                    inputValues,</div><div class="line"><a name="l00699"></a><span class="lineno">  699</span>&#160;                                    expectedOutputValues,</div><div class="line"><a name="l00700"></a><span class="lineno">  700</span>&#160;                                    padList,</div><div class="line"><a name="l00701"></a><span class="lineno">  701</span>&#160;                                    <a class="code" href="namespacearmnn.xhtml#a14d24d90ab4ba2956e92e27890ba4c91af334649ef5e5d0ffe200751d07012626">armnn::PaddingMode::Symmetric</a>);</div><div class="line"><a name="l00702"></a><span class="lineno">  702</span>&#160;}</div><div class="line"><a name="l00703"></a><span class="lineno">  703</span>&#160;</div><div class="line"><a name="l00704"></a><span class="lineno">  704</span>&#160;<span class="keyword">template</span>&lt;<a class="code" href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6">armnn::DataType</a> ArmnnType,</div><div class="line"><a name="l00705"></a><span class="lineno">  705</span>&#160;        <span class="keyword">typename</span> T = <a class="code" href="namespacearmnn.xhtml#a0743ed5e860c316a20b68ca96301b411">armnn::ResolveType&lt;ArmnnType&gt;</a>&gt;</div><div class="line"><a name="l00706"></a><span class="lineno"><a class="line" href="_mirror_pad_test_impl_8cpp.xhtml#ab30f837e7f49a4fb4acd652038021e82">  706</a></span>&#160;<a class="code" href="struct_layer_test_result.xhtml">LayerTestResult&lt;T, 4&gt;</a> <a class="code" href="_mirror_pad_test_impl_8cpp.xhtml#ab30f837e7f49a4fb4acd652038021e82">PadReflect4dTest</a>(</div><div class="line"><a name="l00707"></a><span class="lineno">  707</span>&#160;        <a class="code" href="classarmnn_1_1_i_workload_factory.xhtml">armnn::IWorkloadFactory</a>&amp; workloadFactory,</div><div class="line"><a name="l00708"></a><span class="lineno">  708</span>&#160;        <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_i_backend_internal.xhtml#a693b40e6b94e958836aeb0410ca186bd">armnn::IBackendInternal::IMemoryManagerSharedPtr</a>&amp; memoryManager,</div><div class="line"><a name="l00709"></a><span class="lineno">  709</span>&#160;        <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_i_tensor_handle_factory.xhtml">armnn::ITensorHandleFactory</a>&amp; tensorHandleFactory,</div><div class="line"><a name="l00710"></a><span class="lineno">  710</span>&#160;        <span class="keywordtype">float</span> qScale,</div><div class="line"><a name="l00711"></a><span class="lineno">  711</span>&#160;        int32_t qOffset)</div><div class="line"><a name="l00712"></a><span class="lineno">  712</span>&#160;{</div><div class="line"><a name="l00713"></a><span class="lineno">  713</span>&#160;    <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_shape.xhtml">armnn::TensorShape</a> inputShape{ 2, 2, 2, 2 };</div><div class="line"><a name="l00714"></a><span class="lineno">  714</span>&#160;    <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_shape.xhtml">armnn::TensorShape</a> outputShape{ 4, 4, 4, 4 };</div><div class="line"><a name="l00715"></a><span class="lineno">  715</span>&#160;</div><div class="line"><a name="l00716"></a><span class="lineno">  716</span>&#160;    <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_info.xhtml">armnn::TensorInfo</a> inputTensorInfo(inputShape, ArmnnType, qScale, qOffset);</div><div class="line"><a name="l00717"></a><span class="lineno">  717</span>&#160;    <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_info.xhtml">armnn::TensorInfo</a> outputTensorInfo(outputShape, ArmnnType, qScale, qOffset);</div><div class="line"><a name="l00718"></a><span class="lineno">  718</span>&#160;</div><div class="line"><a name="l00719"></a><span class="lineno">  719</span>&#160;    std::vector&lt;T&gt; inputValues = armnnUtils::QuantizedVector&lt;T&gt;(</div><div class="line"><a name="l00720"></a><span class="lineno">  720</span>&#160;    {</div><div class="line"><a name="l00721"></a><span class="lineno">  721</span>&#160;        <span class="comment">// Batch 0, Channel 0, Height (2) x Width (2)</span></div><div class="line"><a name="l00722"></a><span class="lineno">  722</span>&#160;        1, 2,</div><div class="line"><a name="l00723"></a><span class="lineno">  723</span>&#160;        3, 4,</div><div class="line"><a name="l00724"></a><span class="lineno">  724</span>&#160;</div><div class="line"><a name="l00725"></a><span class="lineno">  725</span>&#160;        <span class="comment">// Batch 0, Channel 1, Height (2) x Width (2)</span></div><div class="line"><a name="l00726"></a><span class="lineno">  726</span>&#160;        5, 6,</div><div class="line"><a name="l00727"></a><span class="lineno">  727</span>&#160;        7, 8,</div><div class="line"><a name="l00728"></a><span class="lineno">  728</span>&#160;</div><div class="line"><a name="l00729"></a><span class="lineno">  729</span>&#160;        <span class="comment">// Batch 1, Channel 0, Height (2) x Width (2)</span></div><div class="line"><a name="l00730"></a><span class="lineno">  730</span>&#160;        9, 10,</div><div class="line"><a name="l00731"></a><span class="lineno">  731</span>&#160;        11, 12,</div><div class="line"><a name="l00732"></a><span class="lineno">  732</span>&#160;</div><div class="line"><a name="l00733"></a><span class="lineno">  733</span>&#160;        <span class="comment">// Batch 1, Channel 1, Height (2) x Width (2)</span></div><div class="line"><a name="l00734"></a><span class="lineno">  734</span>&#160;        13, 14,</div><div class="line"><a name="l00735"></a><span class="lineno">  735</span>&#160;        15, 16,</div><div class="line"><a name="l00736"></a><span class="lineno">  736</span>&#160;    },</div><div class="line"><a name="l00737"></a><span class="lineno">  737</span>&#160;    qScale, qOffset);</div><div class="line"><a name="l00738"></a><span class="lineno">  738</span>&#160;</div><div class="line"><a name="l00739"></a><span class="lineno">  739</span>&#160;    std::vector&lt;T&gt; expectedOutputValues = armnnUtils::QuantizedVector&lt;T&gt;(</div><div class="line"><a name="l00740"></a><span class="lineno">  740</span>&#160;    {</div><div class="line"><a name="l00741"></a><span class="lineno">  741</span>&#160;        16, 15, 16, 15,</div><div class="line"><a name="l00742"></a><span class="lineno">  742</span>&#160;        14, 13, 14, 13,</div><div class="line"><a name="l00743"></a><span class="lineno">  743</span>&#160;        16, 15, 16, 15,</div><div class="line"><a name="l00744"></a><span class="lineno">  744</span>&#160;        14, 13, 14, 13,</div><div class="line"><a name="l00745"></a><span class="lineno">  745</span>&#160;</div><div class="line"><a name="l00746"></a><span class="lineno">  746</span>&#160;        12, 11, 12, 11,</div><div class="line"><a name="l00747"></a><span class="lineno">  747</span>&#160;        10,  9, 10,  9,</div><div class="line"><a name="l00748"></a><span class="lineno">  748</span>&#160;        12, 11, 12, 11,</div><div class="line"><a name="l00749"></a><span class="lineno">  749</span>&#160;        10,  9, 10,  9,</div><div class="line"><a name="l00750"></a><span class="lineno">  750</span>&#160;</div><div class="line"><a name="l00751"></a><span class="lineno">  751</span>&#160;        16, 15, 16, 15,</div><div class="line"><a name="l00752"></a><span class="lineno">  752</span>&#160;        14, 13, 14, 13,</div><div class="line"><a name="l00753"></a><span class="lineno">  753</span>&#160;        16, 15, 16, 15,</div><div class="line"><a name="l00754"></a><span class="lineno">  754</span>&#160;        14, 13, 14, 13,</div><div class="line"><a name="l00755"></a><span class="lineno">  755</span>&#160;</div><div class="line"><a name="l00756"></a><span class="lineno">  756</span>&#160;        12, 11, 12, 11,</div><div class="line"><a name="l00757"></a><span class="lineno">  757</span>&#160;        10,  9, 10,  9,</div><div class="line"><a name="l00758"></a><span class="lineno">  758</span>&#160;        12, 11, 12, 11,</div><div class="line"><a name="l00759"></a><span class="lineno">  759</span>&#160;        10,  9, 10,  9,</div><div class="line"><a name="l00760"></a><span class="lineno">  760</span>&#160;</div><div class="line"><a name="l00761"></a><span class="lineno">  761</span>&#160;</div><div class="line"><a name="l00762"></a><span class="lineno">  762</span>&#160;        8,  7,  8,  7,</div><div class="line"><a name="l00763"></a><span class="lineno">  763</span>&#160;        6,  5,  6,  5,</div><div class="line"><a name="l00764"></a><span class="lineno">  764</span>&#160;        8,  7,  8,  7,</div><div class="line"><a name="l00765"></a><span class="lineno">  765</span>&#160;        6,  5,  6,  5,</div><div class="line"><a name="l00766"></a><span class="lineno">  766</span>&#160;</div><div class="line"><a name="l00767"></a><span class="lineno">  767</span>&#160;        4,  3,  4,  3,</div><div class="line"><a name="l00768"></a><span class="lineno">  768</span>&#160;        2,  1,  2,  1,</div><div class="line"><a name="l00769"></a><span class="lineno">  769</span>&#160;        4,  3,  4,  3,</div><div class="line"><a name="l00770"></a><span class="lineno">  770</span>&#160;        2,  1,  2,  1,</div><div class="line"><a name="l00771"></a><span class="lineno">  771</span>&#160;</div><div class="line"><a name="l00772"></a><span class="lineno">  772</span>&#160;        8,  7,  8,  7,</div><div class="line"><a name="l00773"></a><span class="lineno">  773</span>&#160;        6,  5,  6,  5,</div><div class="line"><a name="l00774"></a><span class="lineno">  774</span>&#160;        8,  7,  8,  7,</div><div class="line"><a name="l00775"></a><span class="lineno">  775</span>&#160;        6,  5,  6,  5,</div><div class="line"><a name="l00776"></a><span class="lineno">  776</span>&#160;</div><div class="line"><a name="l00777"></a><span class="lineno">  777</span>&#160;        4,  3,  4,  3,</div><div class="line"><a name="l00778"></a><span class="lineno">  778</span>&#160;        2,  1,  2,  1,</div><div class="line"><a name="l00779"></a><span class="lineno">  779</span>&#160;        4,  3,  4,  3,</div><div class="line"><a name="l00780"></a><span class="lineno">  780</span>&#160;        2,  1,  2,  1,</div><div class="line"><a name="l00781"></a><span class="lineno">  781</span>&#160;</div><div class="line"><a name="l00782"></a><span class="lineno">  782</span>&#160;</div><div class="line"><a name="l00783"></a><span class="lineno">  783</span>&#160;        16, 15, 16, 15,</div><div class="line"><a name="l00784"></a><span class="lineno">  784</span>&#160;        14, 13, 14, 13,</div><div class="line"><a name="l00785"></a><span class="lineno">  785</span>&#160;        16, 15, 16, 15,</div><div class="line"><a name="l00786"></a><span class="lineno">  786</span>&#160;        14, 13, 14, 13,</div><div class="line"><a name="l00787"></a><span class="lineno">  787</span>&#160;</div><div class="line"><a name="l00788"></a><span class="lineno">  788</span>&#160;        12, 11, 12, 11,</div><div class="line"><a name="l00789"></a><span class="lineno">  789</span>&#160;        10,  9, 10,  9,</div><div class="line"><a name="l00790"></a><span class="lineno">  790</span>&#160;        12, 11, 12, 11,</div><div class="line"><a name="l00791"></a><span class="lineno">  791</span>&#160;        10,  9, 10,  9,</div><div class="line"><a name="l00792"></a><span class="lineno">  792</span>&#160;</div><div class="line"><a name="l00793"></a><span class="lineno">  793</span>&#160;        16, 15, 16, 15,</div><div class="line"><a name="l00794"></a><span class="lineno">  794</span>&#160;        14, 13, 14, 13,</div><div class="line"><a name="l00795"></a><span class="lineno">  795</span>&#160;        16, 15, 16, 15,</div><div class="line"><a name="l00796"></a><span class="lineno">  796</span>&#160;        14, 13, 14, 13,</div><div class="line"><a name="l00797"></a><span class="lineno">  797</span>&#160;</div><div class="line"><a name="l00798"></a><span class="lineno">  798</span>&#160;        12, 11, 12, 11,</div><div class="line"><a name="l00799"></a><span class="lineno">  799</span>&#160;        10,  9, 10,  9,</div><div class="line"><a name="l00800"></a><span class="lineno">  800</span>&#160;        12, 11, 12, 11,</div><div class="line"><a name="l00801"></a><span class="lineno">  801</span>&#160;        10,  9, 10,  9,</div><div class="line"><a name="l00802"></a><span class="lineno">  802</span>&#160;</div><div class="line"><a name="l00803"></a><span class="lineno">  803</span>&#160;</div><div class="line"><a name="l00804"></a><span class="lineno">  804</span>&#160;        8,  7,  8,  7,</div><div class="line"><a name="l00805"></a><span class="lineno">  805</span>&#160;        6,  5,  6,  5,</div><div class="line"><a name="l00806"></a><span class="lineno">  806</span>&#160;        8,  7,  8,  7,</div><div class="line"><a name="l00807"></a><span class="lineno">  807</span>&#160;        6,  5,  6,  5,</div><div class="line"><a name="l00808"></a><span class="lineno">  808</span>&#160;</div><div class="line"><a name="l00809"></a><span class="lineno">  809</span>&#160;        4,  3,  4,  3,</div><div class="line"><a name="l00810"></a><span class="lineno">  810</span>&#160;        2,  1,  2,  1,</div><div class="line"><a name="l00811"></a><span class="lineno">  811</span>&#160;        4,  3,  4,  3,</div><div class="line"><a name="l00812"></a><span class="lineno">  812</span>&#160;        2,  1,  2,  1,</div><div class="line"><a name="l00813"></a><span class="lineno">  813</span>&#160;</div><div class="line"><a name="l00814"></a><span class="lineno">  814</span>&#160;        8,  7,  8,  7,</div><div class="line"><a name="l00815"></a><span class="lineno">  815</span>&#160;        6,  5,  6,  5,</div><div class="line"><a name="l00816"></a><span class="lineno">  816</span>&#160;        8,  7,  8,  7,</div><div class="line"><a name="l00817"></a><span class="lineno">  817</span>&#160;        6,  5,  6,  5,</div><div class="line"><a name="l00818"></a><span class="lineno">  818</span>&#160;</div><div class="line"><a name="l00819"></a><span class="lineno">  819</span>&#160;        4,  3,  4,  3,</div><div class="line"><a name="l00820"></a><span class="lineno">  820</span>&#160;        2,  1,  2,  1,</div><div class="line"><a name="l00821"></a><span class="lineno">  821</span>&#160;        4,  3,  4,  3,</div><div class="line"><a name="l00822"></a><span class="lineno">  822</span>&#160;        2,  1,  2,  1</div><div class="line"><a name="l00823"></a><span class="lineno">  823</span>&#160;    },</div><div class="line"><a name="l00824"></a><span class="lineno">  824</span>&#160;    qScale, qOffset);</div><div class="line"><a name="l00825"></a><span class="lineno">  825</span>&#160;</div><div class="line"><a name="l00826"></a><span class="lineno">  826</span>&#160;    std::vector&lt;std::pair&lt;unsigned int, unsigned int&gt;&gt; padList;</div><div class="line"><a name="l00827"></a><span class="lineno">  827</span>&#160;    padList.push_back(std::pair&lt;unsigned int, unsigned int&gt;(1,1));</div><div class="line"><a name="l00828"></a><span class="lineno">  828</span>&#160;    padList.push_back(std::pair&lt;unsigned int, unsigned int&gt;(1,1));</div><div class="line"><a name="l00829"></a><span class="lineno">  829</span>&#160;    padList.push_back(std::pair&lt;unsigned int, unsigned int&gt;(1,1));</div><div class="line"><a name="l00830"></a><span class="lineno">  830</span>&#160;    padList.push_back(std::pair&lt;unsigned int, unsigned int&gt;(1,1));</div><div class="line"><a name="l00831"></a><span class="lineno">  831</span>&#160;</div><div class="line"><a name="l00832"></a><span class="lineno">  832</span>&#160;    <span class="keywordflow">return</span> MirrorPad4dTestCommon&lt;T&gt;(workloadFactory,</div><div class="line"><a name="l00833"></a><span class="lineno">  833</span>&#160;                                    memoryManager,</div><div class="line"><a name="l00834"></a><span class="lineno">  834</span>&#160;                                    tensorHandleFactory,</div><div class="line"><a name="l00835"></a><span class="lineno">  835</span>&#160;                                    inputTensorInfo,</div><div class="line"><a name="l00836"></a><span class="lineno">  836</span>&#160;                                    outputTensorInfo,</div><div class="line"><a name="l00837"></a><span class="lineno">  837</span>&#160;                                    inputValues,</div><div class="line"><a name="l00838"></a><span class="lineno">  838</span>&#160;                                    expectedOutputValues,</div><div class="line"><a name="l00839"></a><span class="lineno">  839</span>&#160;                                    padList,</div><div class="line"><a name="l00840"></a><span class="lineno">  840</span>&#160;                                    <a class="code" href="namespacearmnn.xhtml#a14d24d90ab4ba2956e92e27890ba4c91a74de3e45e4491e956e8dc18d841d9b00">armnn::PaddingMode::Reflect</a>);</div><div class="line"><a name="l00841"></a><span class="lineno">  841</span>&#160;}</div><div class="line"><a name="l00842"></a><span class="lineno">  842</span>&#160;</div><div class="line"><a name="l00843"></a><span class="lineno"><a class="line" href="_mirror_pad_test_impl_8cpp.xhtml#ac2322b4041b962e7f8023d6b711dad41">  843</a></span>&#160;<a class="code" href="struct_layer_test_result.xhtml">LayerTestResult&lt;armnn::Half, 2&gt;</a> <a class="code" href="_mirror_pad_test_impl_8cpp.xhtml#ac2322b4041b962e7f8023d6b711dad41">PadSymmetricFloat16</a>(</div><div class="line"><a name="l00844"></a><span class="lineno">  844</span>&#160;        <a class="code" href="classarmnn_1_1_i_workload_factory.xhtml">armnn::IWorkloadFactory</a>&amp; workloadFactory,</div><div class="line"><a name="l00845"></a><span class="lineno">  845</span>&#160;        <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_i_backend_internal.xhtml#a693b40e6b94e958836aeb0410ca186bd">armnn::IBackendInternal::IMemoryManagerSharedPtr</a>&amp; memoryManager,</div><div class="line"><a name="l00846"></a><span class="lineno">  846</span>&#160;        <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_i_tensor_handle_factory.xhtml">armnn::ITensorHandleFactory</a>&amp; tensorHandleFactory)</div><div class="line"><a name="l00847"></a><span class="lineno">  847</span>&#160;{</div><div class="line"><a name="l00848"></a><span class="lineno">  848</span>&#160;    <span class="keyword">using namespace </span>half_float::literal;</div><div class="line"><a name="l00849"></a><span class="lineno">  849</span>&#160;</div><div class="line"><a name="l00850"></a><span class="lineno">  850</span>&#160;    <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_shape.xhtml">armnn::TensorShape</a> inputShape{ 3, 3 };</div><div class="line"><a name="l00851"></a><span class="lineno">  851</span>&#160;    <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_shape.xhtml">armnn::TensorShape</a> outputShape{ 5, 7 };</div><div class="line"><a name="l00852"></a><span class="lineno">  852</span>&#160;</div><div class="line"><a name="l00853"></a><span class="lineno">  853</span>&#160;    <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_info.xhtml">armnn::TensorInfo</a> inputTensorInfo(inputShape, <a class="code" href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a26e6ed77470c6f2f830ecf874e6c0d55">armnn::DataType::Float16</a>);</div><div class="line"><a name="l00854"></a><span class="lineno">  854</span>&#160;    <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_info.xhtml">armnn::TensorInfo</a> outputTensorInfo(outputShape, <a class="code" href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a26e6ed77470c6f2f830ecf874e6c0d55">armnn::DataType::Float16</a>);</div><div class="line"><a name="l00855"></a><span class="lineno">  855</span>&#160;</div><div class="line"><a name="l00856"></a><span class="lineno">  856</span>&#160;    <span class="keyword">const</span> std::vector&lt;armnn::Half&gt; inputValues =</div><div class="line"><a name="l00857"></a><span class="lineno">  857</span>&#160;    {</div><div class="line"><a name="l00858"></a><span class="lineno">  858</span>&#160;        1._h,  2._h,  3._h,</div><div class="line"><a name="l00859"></a><span class="lineno">  859</span>&#160;        4._h,  5._h,  6._h,</div><div class="line"><a name="l00860"></a><span class="lineno">  860</span>&#160;        7._h,  8._h,  9._h</div><div class="line"><a name="l00861"></a><span class="lineno">  861</span>&#160;    };</div><div class="line"><a name="l00862"></a><span class="lineno">  862</span>&#160;</div><div class="line"><a name="l00863"></a><span class="lineno">  863</span>&#160;    std::vector&lt;armnn::Half&gt; expectedOutputValues =</div><div class="line"><a name="l00864"></a><span class="lineno">  864</span>&#160;    {</div><div class="line"><a name="l00865"></a><span class="lineno">  865</span>&#160;        2._h, 1._h, 1._h, 2._h, 3._h, 3._h, 2._h,</div><div class="line"><a name="l00866"></a><span class="lineno">  866</span>&#160;        2._h, 1._h, 1._h, 2._h, 3._h, 3._h, 2._h,</div><div class="line"><a name="l00867"></a><span class="lineno">  867</span>&#160;        5._h, 4._h, 4._h, 5._h, 6._h, 6._h, 5._h,</div><div class="line"><a name="l00868"></a><span class="lineno">  868</span>&#160;        8._h, 7._h, 7._h, 8._h, 9._h, 9._h, 8._h,</div><div class="line"><a name="l00869"></a><span class="lineno">  869</span>&#160;        8._h, 7._h, 7._h, 8._h, 9._h, 9._h, 8._h,</div><div class="line"><a name="l00870"></a><span class="lineno">  870</span>&#160;    };</div><div class="line"><a name="l00871"></a><span class="lineno">  871</span>&#160;</div><div class="line"><a name="l00872"></a><span class="lineno">  872</span>&#160;    std::vector&lt;std::pair&lt;unsigned int, unsigned int&gt;&gt; padList;</div><div class="line"><a name="l00873"></a><span class="lineno">  873</span>&#160;    padList.push_back(std::pair&lt;unsigned int, unsigned int&gt;(1,1));</div><div class="line"><a name="l00874"></a><span class="lineno">  874</span>&#160;    padList.push_back(std::pair&lt;unsigned int, unsigned int&gt;(2,2));</div><div class="line"><a name="l00875"></a><span class="lineno">  875</span>&#160;</div><div class="line"><a name="l00876"></a><span class="lineno">  876</span>&#160;    <span class="keywordflow">return</span> MirrorPad2dTestCommon&lt;armnn::Half&gt;(workloadFactory,</div><div class="line"><a name="l00877"></a><span class="lineno">  877</span>&#160;                                              memoryManager,</div><div class="line"><a name="l00878"></a><span class="lineno">  878</span>&#160;                                              tensorHandleFactory,</div><div class="line"><a name="l00879"></a><span class="lineno">  879</span>&#160;                                              inputTensorInfo,</div><div class="line"><a name="l00880"></a><span class="lineno">  880</span>&#160;                                              outputTensorInfo,</div><div class="line"><a name="l00881"></a><span class="lineno">  881</span>&#160;                                              inputValues,</div><div class="line"><a name="l00882"></a><span class="lineno">  882</span>&#160;                                              expectedOutputValues,</div><div class="line"><a name="l00883"></a><span class="lineno">  883</span>&#160;                                              padList,</div><div class="line"><a name="l00884"></a><span class="lineno">  884</span>&#160;                                              <a class="code" href="namespacearmnn.xhtml#a14d24d90ab4ba2956e92e27890ba4c91af334649ef5e5d0ffe200751d07012626">armnn::PaddingMode::Symmetric</a>);</div><div class="line"><a name="l00885"></a><span class="lineno">  885</span>&#160;}</div><div class="line"><a name="l00886"></a><span class="lineno">  886</span>&#160;</div><div class="line"><a name="l00887"></a><span class="lineno"><a class="line" href="_mirror_pad_test_impl_8cpp.xhtml#accc387f1eb674e3254618f933bf69da3">  887</a></span>&#160;<a class="code" href="struct_layer_test_result.xhtml">LayerTestResult&lt;armnn::Half, 2&gt;</a> <a class="code" href="_mirror_pad_test_impl_8cpp.xhtml#accc387f1eb674e3254618f933bf69da3">PadReflectFloat16</a>(</div><div class="line"><a name="l00888"></a><span class="lineno">  888</span>&#160;        <a class="code" href="classarmnn_1_1_i_workload_factory.xhtml">armnn::IWorkloadFactory</a>&amp; workloadFactory,</div><div class="line"><a name="l00889"></a><span class="lineno">  889</span>&#160;        <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_i_backend_internal.xhtml#a693b40e6b94e958836aeb0410ca186bd">armnn::IBackendInternal::IMemoryManagerSharedPtr</a>&amp; memoryManager,</div><div class="line"><a name="l00890"></a><span class="lineno">  890</span>&#160;        <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_i_tensor_handle_factory.xhtml">armnn::ITensorHandleFactory</a>&amp; tensorHandleFactory)</div><div class="line"><a name="l00891"></a><span class="lineno">  891</span>&#160;{</div><div class="line"><a name="l00892"></a><span class="lineno">  892</span>&#160;    <span class="keyword">using namespace </span>half_float::literal;</div><div class="line"><a name="l00893"></a><span class="lineno">  893</span>&#160;</div><div class="line"><a name="l00894"></a><span class="lineno">  894</span>&#160;    <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_shape.xhtml">armnn::TensorShape</a> inputShape{ 3, 3 };</div><div class="line"><a name="l00895"></a><span class="lineno">  895</span>&#160;    <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_shape.xhtml">armnn::TensorShape</a> outputShape{ 7, 5 };</div><div class="line"><a name="l00896"></a><span class="lineno">  896</span>&#160;</div><div class="line"><a name="l00897"></a><span class="lineno">  897</span>&#160;    <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_info.xhtml">armnn::TensorInfo</a> inputTensorInfo(inputShape, <a class="code" href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a26e6ed77470c6f2f830ecf874e6c0d55">armnn::DataType::Float16</a>);</div><div class="line"><a name="l00898"></a><span class="lineno">  898</span>&#160;    <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_info.xhtml">armnn::TensorInfo</a> outputTensorInfo(outputShape, <a class="code" href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a26e6ed77470c6f2f830ecf874e6c0d55">armnn::DataType::Float16</a>);</div><div class="line"><a name="l00899"></a><span class="lineno">  899</span>&#160;</div><div class="line"><a name="l00900"></a><span class="lineno">  900</span>&#160;    <span class="keyword">const</span> std::vector&lt;armnn::Half&gt; inputValues =</div><div class="line"><a name="l00901"></a><span class="lineno">  901</span>&#160;    {</div><div class="line"><a name="l00902"></a><span class="lineno">  902</span>&#160;        1._h,  2._h,  3._h,</div><div class="line"><a name="l00903"></a><span class="lineno">  903</span>&#160;        4._h,  5._h,  6._h,</div><div class="line"><a name="l00904"></a><span class="lineno">  904</span>&#160;        7._h,  8._h,  9._h</div><div class="line"><a name="l00905"></a><span class="lineno">  905</span>&#160;    };</div><div class="line"><a name="l00906"></a><span class="lineno">  906</span>&#160;</div><div class="line"><a name="l00907"></a><span class="lineno">  907</span>&#160;    std::vector&lt;armnn::Half&gt; expectedOutputValues =</div><div class="line"><a name="l00908"></a><span class="lineno">  908</span>&#160;    {</div><div class="line"><a name="l00909"></a><span class="lineno">  909</span>&#160;        8._h, 7._h, 8._h, 9._h, 8._h,</div><div class="line"><a name="l00910"></a><span class="lineno">  910</span>&#160;        5._h, 4._h, 5._h, 6._h, 5._h,</div><div class="line"><a name="l00911"></a><span class="lineno">  911</span>&#160;        2._h, 1._h, 2._h, 3._h, 2._h,</div><div class="line"><a name="l00912"></a><span class="lineno">  912</span>&#160;        5._h, 4._h, 5._h, 6._h, 5._h,</div><div class="line"><a name="l00913"></a><span class="lineno">  913</span>&#160;        8._h, 7._h, 8._h, 9._h, 8._h,</div><div class="line"><a name="l00914"></a><span class="lineno">  914</span>&#160;        5._h, 4._h, 5._h, 6._h, 5._h,</div><div class="line"><a name="l00915"></a><span class="lineno">  915</span>&#160;        2._h, 1._h, 2._h, 3._h, 2._h,</div><div class="line"><a name="l00916"></a><span class="lineno">  916</span>&#160;    };</div><div class="line"><a name="l00917"></a><span class="lineno">  917</span>&#160;</div><div class="line"><a name="l00918"></a><span class="lineno">  918</span>&#160;    std::vector&lt;std::pair&lt;unsigned int, unsigned int&gt;&gt; padList;</div><div class="line"><a name="l00919"></a><span class="lineno">  919</span>&#160;    padList.push_back(std::pair&lt;unsigned int, unsigned int&gt;(2,2));</div><div class="line"><a name="l00920"></a><span class="lineno">  920</span>&#160;    padList.push_back(std::pair&lt;unsigned int, unsigned int&gt;(1,1));</div><div class="line"><a name="l00921"></a><span class="lineno">  921</span>&#160;</div><div class="line"><a name="l00922"></a><span class="lineno">  922</span>&#160;    <span class="keywordflow">return</span> MirrorPad2dTestCommon&lt;armnn::Half&gt;(workloadFactory,</div><div class="line"><a name="l00923"></a><span class="lineno">  923</span>&#160;                                              memoryManager,</div><div class="line"><a name="l00924"></a><span class="lineno">  924</span>&#160;                                              tensorHandleFactory,</div><div class="line"><a name="l00925"></a><span class="lineno">  925</span>&#160;                                              inputTensorInfo,</div><div class="line"><a name="l00926"></a><span class="lineno">  926</span>&#160;                                              outputTensorInfo,</div><div class="line"><a name="l00927"></a><span class="lineno">  927</span>&#160;                                              inputValues,</div><div class="line"><a name="l00928"></a><span class="lineno">  928</span>&#160;                                              expectedOutputValues,</div><div class="line"><a name="l00929"></a><span class="lineno">  929</span>&#160;                                              padList,</div><div class="line"><a name="l00930"></a><span class="lineno">  930</span>&#160;                                              <a class="code" href="namespacearmnn.xhtml#a14d24d90ab4ba2956e92e27890ba4c91a74de3e45e4491e956e8dc18d841d9b00">armnn::PaddingMode::Reflect</a>);</div><div class="line"><a name="l00931"></a><span class="lineno">  931</span>&#160;}</div><div class="line"><a name="l00932"></a><span class="lineno">  932</span>&#160;</div><div class="line"><a name="l00933"></a><span class="lineno">  933</span>&#160;<span class="comment">//</span></div><div class="line"><a name="l00934"></a><span class="lineno">  934</span>&#160;<span class="comment">// Implementation functions</span></div><div class="line"><a name="l00935"></a><span class="lineno">  935</span>&#160;<span class="comment">//</span></div><div class="line"><a name="l00936"></a><span class="lineno">  936</span>&#160;</div><div class="line"><a name="l00937"></a><span class="lineno"><a class="line" href="_mirror_pad_test_impl_8hpp.xhtml#aaecd51ba53dc2d056f71bf920ac2dbc0">  937</a></span>&#160;<a class="code" href="struct_layer_test_result.xhtml">LayerTestResult&lt;float, 2&gt;</a> <a class="code" href="_mirror_pad_test_impl_8cpp.xhtml#aaecd51ba53dc2d056f71bf920ac2dbc0">PadSymmetric2dFloat32Test</a>(</div><div class="line"><a name="l00938"></a><span class="lineno">  938</span>&#160;    <a class="code" href="classarmnn_1_1_i_workload_factory.xhtml">armnn::IWorkloadFactory</a>&amp; workloadFactory,</div><div class="line"><a name="l00939"></a><span class="lineno">  939</span>&#160;    <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_i_backend_internal.xhtml#a693b40e6b94e958836aeb0410ca186bd">armnn::IBackendInternal::IMemoryManagerSharedPtr</a>&amp; memoryManager,</div><div class="line"><a name="l00940"></a><span class="lineno">  940</span>&#160;    <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_i_tensor_handle_factory.xhtml">armnn::ITensorHandleFactory</a>&amp; tensorHandleFactory)</div><div class="line"><a name="l00941"></a><span class="lineno">  941</span>&#160;{</div><div class="line"><a name="l00942"></a><span class="lineno">  942</span>&#160;    <span class="keywordflow">return</span> PadSymmetric2dTest&lt;armnn::DataType::Float32&gt;(workloadFactory, memoryManager, tensorHandleFactory, 0.0f, 0);</div><div class="line"><a name="l00943"></a><span class="lineno">  943</span>&#160;}</div><div class="line"><a name="l00944"></a><span class="lineno">  944</span>&#160;</div><div class="line"><a name="l00945"></a><span class="lineno"><a class="line" href="_mirror_pad_test_impl_8hpp.xhtml#af8fb767f5aa216ade8b4cca88c23ceb9">  945</a></span>&#160;<a class="code" href="struct_layer_test_result.xhtml">LayerTestResult&lt;float, 2&gt;</a> <a class="code" href="_mirror_pad_test_impl_8cpp.xhtml#af8fb767f5aa216ade8b4cca88c23ceb9">PadReflect2dFloat32Test</a>(</div><div class="line"><a name="l00946"></a><span class="lineno">  946</span>&#160;    <a class="code" href="classarmnn_1_1_i_workload_factory.xhtml">armnn::IWorkloadFactory</a>&amp; workloadFactory,</div><div class="line"><a name="l00947"></a><span class="lineno">  947</span>&#160;    <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_i_backend_internal.xhtml#a693b40e6b94e958836aeb0410ca186bd">armnn::IBackendInternal::IMemoryManagerSharedPtr</a>&amp; memoryManager,</div><div class="line"><a name="l00948"></a><span class="lineno">  948</span>&#160;    <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_i_tensor_handle_factory.xhtml">armnn::ITensorHandleFactory</a>&amp; tensorHandleFactory)</div><div class="line"><a name="l00949"></a><span class="lineno">  949</span>&#160;{</div><div class="line"><a name="l00950"></a><span class="lineno">  950</span>&#160;    <span class="keywordflow">return</span> PadReflect2dTest&lt;armnn::DataType::Float32&gt;(workloadFactory, memoryManager, tensorHandleFactory, 0.0f, 0);</div><div class="line"><a name="l00951"></a><span class="lineno">  951</span>&#160;}</div><div class="line"><a name="l00952"></a><span class="lineno">  952</span>&#160;</div><div class="line"><a name="l00953"></a><span class="lineno"><a class="line" href="_mirror_pad_test_impl_8hpp.xhtml#a9ba5ef1e017f5cb69281b8cd0a3d8198">  953</a></span>&#160;<a class="code" href="struct_layer_test_result.xhtml">LayerTestResult&lt;float, 3&gt;</a> <a class="code" href="_mirror_pad_test_impl_8cpp.xhtml#a9ba5ef1e017f5cb69281b8cd0a3d8198">PadSymmetric3dFloat32Test</a>(</div><div class="line"><a name="l00954"></a><span class="lineno">  954</span>&#160;    <a class="code" href="classarmnn_1_1_i_workload_factory.xhtml">armnn::IWorkloadFactory</a>&amp; workloadFactory,</div><div class="line"><a name="l00955"></a><span class="lineno">  955</span>&#160;    <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_i_backend_internal.xhtml#a693b40e6b94e958836aeb0410ca186bd">armnn::IBackendInternal::IMemoryManagerSharedPtr</a>&amp; memoryManager,</div><div class="line"><a name="l00956"></a><span class="lineno">  956</span>&#160;    <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_i_tensor_handle_factory.xhtml">armnn::ITensorHandleFactory</a>&amp; tensorHandleFactory)</div><div class="line"><a name="l00957"></a><span class="lineno">  957</span>&#160;{</div><div class="line"><a name="l00958"></a><span class="lineno">  958</span>&#160;    <span class="keywordflow">return</span> PadSymmetric3dTest&lt;armnn::DataType::Float32&gt;(workloadFactory, memoryManager, tensorHandleFactory, 0.0f, 0);</div><div class="line"><a name="l00959"></a><span class="lineno">  959</span>&#160;}</div><div class="line"><a name="l00960"></a><span class="lineno">  960</span>&#160;</div><div class="line"><a name="l00961"></a><span class="lineno"><a class="line" href="_mirror_pad_test_impl_8hpp.xhtml#a03a9c73cb5fc1bde7ecfed8474255cf6">  961</a></span>&#160;<a class="code" href="struct_layer_test_result.xhtml">LayerTestResult&lt;float, 3&gt;</a> <a class="code" href="_mirror_pad_test_impl_8cpp.xhtml#a03a9c73cb5fc1bde7ecfed8474255cf6">PadReflect3dFloat32Test</a>(</div><div class="line"><a name="l00962"></a><span class="lineno">  962</span>&#160;    <a class="code" href="classarmnn_1_1_i_workload_factory.xhtml">armnn::IWorkloadFactory</a>&amp; workloadFactory,</div><div class="line"><a name="l00963"></a><span class="lineno">  963</span>&#160;    <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_i_backend_internal.xhtml#a693b40e6b94e958836aeb0410ca186bd">armnn::IBackendInternal::IMemoryManagerSharedPtr</a>&amp; memoryManager,</div><div class="line"><a name="l00964"></a><span class="lineno">  964</span>&#160;    <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_i_tensor_handle_factory.xhtml">armnn::ITensorHandleFactory</a>&amp; tensorHandleFactory)</div><div class="line"><a name="l00965"></a><span class="lineno">  965</span>&#160;{</div><div class="line"><a name="l00966"></a><span class="lineno">  966</span>&#160;    <span class="keywordflow">return</span> PadReflect3dTest&lt;armnn::DataType::Float32&gt;(workloadFactory, memoryManager, tensorHandleFactory, 0.0f, 0);</div><div class="line"><a name="l00967"></a><span class="lineno">  967</span>&#160;}</div><div class="line"><a name="l00968"></a><span class="lineno">  968</span>&#160;</div><div class="line"><a name="l00969"></a><span class="lineno"><a class="line" href="_mirror_pad_test_impl_8hpp.xhtml#af17d488270e115dbf0740f1eeba4f4ef">  969</a></span>&#160;<a class="code" href="struct_layer_test_result.xhtml">LayerTestResult&lt;uint8_t, 3&gt;</a> <a class="code" href="_mirror_pad_test_impl_8cpp.xhtml#af17d488270e115dbf0740f1eeba4f4ef">PadSymmetric3dUint8Test</a>(</div><div class="line"><a name="l00970"></a><span class="lineno">  970</span>&#160;        <a class="code" href="classarmnn_1_1_i_workload_factory.xhtml">armnn::IWorkloadFactory</a>&amp; workloadFactory,</div><div class="line"><a name="l00971"></a><span class="lineno">  971</span>&#160;        <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_i_backend_internal.xhtml#a693b40e6b94e958836aeb0410ca186bd">armnn::IBackendInternal::IMemoryManagerSharedPtr</a>&amp; memoryManager,</div><div class="line"><a name="l00972"></a><span class="lineno">  972</span>&#160;        <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_i_tensor_handle_factory.xhtml">armnn::ITensorHandleFactory</a>&amp; tensorHandleFactory)</div><div class="line"><a name="l00973"></a><span class="lineno">  973</span>&#160;{</div><div class="line"><a name="l00974"></a><span class="lineno">  974</span>&#160;    <span class="keywordflow">return</span> PadSymmetric3dTest&lt;armnn::DataType::QAsymmU8&gt;(</div><div class="line"><a name="l00975"></a><span class="lineno">  975</span>&#160;            workloadFactory, memoryManager, tensorHandleFactory, 0.1f, 128);</div><div class="line"><a name="l00976"></a><span class="lineno">  976</span>&#160;}</div><div class="line"><a name="l00977"></a><span class="lineno">  977</span>&#160;</div><div class="line"><a name="l00978"></a><span class="lineno"><a class="line" href="_mirror_pad_test_impl_8hpp.xhtml#a8121af7afd3c2813430b51686f8dc276">  978</a></span>&#160;<a class="code" href="struct_layer_test_result.xhtml">LayerTestResult&lt;uint8_t, 3&gt;</a> <a class="code" href="_mirror_pad_test_impl_8cpp.xhtml#a8121af7afd3c2813430b51686f8dc276">PadReflect3dUint8Test</a>(</div><div class="line"><a name="l00979"></a><span class="lineno">  979</span>&#160;        <a class="code" href="classarmnn_1_1_i_workload_factory.xhtml">armnn::IWorkloadFactory</a>&amp; workloadFactory,</div><div class="line"><a name="l00980"></a><span class="lineno">  980</span>&#160;        <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_i_backend_internal.xhtml#a693b40e6b94e958836aeb0410ca186bd">armnn::IBackendInternal::IMemoryManagerSharedPtr</a>&amp; memoryManager,</div><div class="line"><a name="l00981"></a><span class="lineno">  981</span>&#160;        <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_i_tensor_handle_factory.xhtml">armnn::ITensorHandleFactory</a>&amp; tensorHandleFactory)</div><div class="line"><a name="l00982"></a><span class="lineno">  982</span>&#160;{</div><div class="line"><a name="l00983"></a><span class="lineno">  983</span>&#160;    <span class="keywordflow">return</span> PadReflect3dTest&lt;armnn::DataType::QAsymmU8&gt;(workloadFactory, memoryManager, tensorHandleFactory, 0.1f, 128);</div><div class="line"><a name="l00984"></a><span class="lineno">  984</span>&#160;}</div><div class="line"><a name="l00985"></a><span class="lineno">  985</span>&#160;</div><div class="line"><a name="l00986"></a><span class="lineno"><a class="line" href="_mirror_pad_test_impl_8hpp.xhtml#affdbd144557f7c3a46322c73b0d51d9e">  986</a></span>&#160;<a class="code" href="struct_layer_test_result.xhtml">LayerTestResult&lt;int8_t, 3&gt;</a> <a class="code" href="_mirror_pad_test_impl_8cpp.xhtml#affdbd144557f7c3a46322c73b0d51d9e">PadSymmetric3dInt8Test</a>(</div><div class="line"><a name="l00987"></a><span class="lineno">  987</span>&#160;        <a class="code" href="classarmnn_1_1_i_workload_factory.xhtml">armnn::IWorkloadFactory</a>&amp; workloadFactory,</div><div class="line"><a name="l00988"></a><span class="lineno">  988</span>&#160;        <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_i_backend_internal.xhtml#a693b40e6b94e958836aeb0410ca186bd">armnn::IBackendInternal::IMemoryManagerSharedPtr</a>&amp; memoryManager,</div><div class="line"><a name="l00989"></a><span class="lineno">  989</span>&#160;        <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_i_tensor_handle_factory.xhtml">armnn::ITensorHandleFactory</a>&amp; tensorHandleFactory)</div><div class="line"><a name="l00990"></a><span class="lineno">  990</span>&#160;{</div><div class="line"><a name="l00991"></a><span class="lineno">  991</span>&#160;    <span class="keywordflow">return</span> PadSymmetric3dTest&lt;armnn::DataType::QAsymmS8&gt;(workloadFactory, memoryManager, tensorHandleFactory, 0.1f, 64);</div><div class="line"><a name="l00992"></a><span class="lineno">  992</span>&#160;}</div><div class="line"><a name="l00993"></a><span class="lineno">  993</span>&#160;</div><div class="line"><a name="l00994"></a><span class="lineno"><a class="line" href="_mirror_pad_test_impl_8hpp.xhtml#a7817d557360d3c24057d8595f970df9e">  994</a></span>&#160;<a class="code" href="struct_layer_test_result.xhtml">LayerTestResult&lt;int8_t, 3&gt;</a> <a class="code" href="_mirror_pad_test_impl_8cpp.xhtml#a7817d557360d3c24057d8595f970df9e">PadReflect3dInt8Test</a>(</div><div class="line"><a name="l00995"></a><span class="lineno">  995</span>&#160;        <a class="code" href="classarmnn_1_1_i_workload_factory.xhtml">armnn::IWorkloadFactory</a>&amp; workloadFactory,</div><div class="line"><a name="l00996"></a><span class="lineno">  996</span>&#160;        <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_i_backend_internal.xhtml#a693b40e6b94e958836aeb0410ca186bd">armnn::IBackendInternal::IMemoryManagerSharedPtr</a>&amp; memoryManager,</div><div class="line"><a name="l00997"></a><span class="lineno">  997</span>&#160;        <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_i_tensor_handle_factory.xhtml">armnn::ITensorHandleFactory</a>&amp; tensorHandleFactory)</div><div class="line"><a name="l00998"></a><span class="lineno">  998</span>&#160;{</div><div class="line"><a name="l00999"></a><span class="lineno">  999</span>&#160;    <span class="keywordflow">return</span> PadReflect3dTest&lt;armnn::DataType::QAsymmS8&gt;(workloadFactory, memoryManager, tensorHandleFactory, 0.1f, 64);</div><div class="line"><a name="l01000"></a><span class="lineno"> 1000</span>&#160;}</div><div class="line"><a name="l01001"></a><span class="lineno"> 1001</span>&#160;</div><div class="line"><a name="l01002"></a><span class="lineno"><a class="line" href="_mirror_pad_test_impl_8hpp.xhtml#a7f0cee3cad0201f75d03fc3cdb3056cf"> 1002</a></span>&#160;<a class="code" href="struct_layer_test_result.xhtml">LayerTestResult&lt;float, 4&gt;</a> <a class="code" href="_mirror_pad_test_impl_8cpp.xhtml#a7f0cee3cad0201f75d03fc3cdb3056cf">PadSymmetric4dFloat32Test</a>(</div><div class="line"><a name="l01003"></a><span class="lineno"> 1003</span>&#160;    <a class="code" href="classarmnn_1_1_i_workload_factory.xhtml">armnn::IWorkloadFactory</a>&amp; workloadFactory,</div><div class="line"><a name="l01004"></a><span class="lineno"> 1004</span>&#160;    <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_i_backend_internal.xhtml#a693b40e6b94e958836aeb0410ca186bd">armnn::IBackendInternal::IMemoryManagerSharedPtr</a>&amp; memoryManager,</div><div class="line"><a name="l01005"></a><span class="lineno"> 1005</span>&#160;    <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_i_tensor_handle_factory.xhtml">armnn::ITensorHandleFactory</a>&amp; tensorHandleFactory)</div><div class="line"><a name="l01006"></a><span class="lineno"> 1006</span>&#160;{</div><div class="line"><a name="l01007"></a><span class="lineno"> 1007</span>&#160;    <span class="keywordflow">return</span> PadSymmetric4dTest&lt;armnn::DataType::Float32&gt;(workloadFactory, memoryManager, tensorHandleFactory, 0.0f, 0);</div><div class="line"><a name="l01008"></a><span class="lineno"> 1008</span>&#160;}</div><div class="line"><a name="l01009"></a><span class="lineno"> 1009</span>&#160;</div><div class="line"><a name="l01010"></a><span class="lineno"><a class="line" href="_mirror_pad_test_impl_8hpp.xhtml#a11c70ed3e08ff861e2d909fe5af4a6cc"> 1010</a></span>&#160;<a class="code" href="struct_layer_test_result.xhtml">LayerTestResult&lt;float, 4&gt;</a> <a class="code" href="_mirror_pad_test_impl_8cpp.xhtml#a11c70ed3e08ff861e2d909fe5af4a6cc">PadReflect4dFloat32Test</a>(</div><div class="line"><a name="l01011"></a><span class="lineno"> 1011</span>&#160;    <a class="code" href="classarmnn_1_1_i_workload_factory.xhtml">armnn::IWorkloadFactory</a>&amp; workloadFactory,</div><div class="line"><a name="l01012"></a><span class="lineno"> 1012</span>&#160;    <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_i_backend_internal.xhtml#a693b40e6b94e958836aeb0410ca186bd">armnn::IBackendInternal::IMemoryManagerSharedPtr</a>&amp; memoryManager,</div><div class="line"><a name="l01013"></a><span class="lineno"> 1013</span>&#160;    <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_i_tensor_handle_factory.xhtml">armnn::ITensorHandleFactory</a>&amp; tensorHandleFactory)</div><div class="line"><a name="l01014"></a><span class="lineno"> 1014</span>&#160;{</div><div class="line"><a name="l01015"></a><span class="lineno"> 1015</span>&#160;    <span class="keywordflow">return</span> PadReflect4dTest&lt;armnn::DataType::Float32&gt;(workloadFactory, memoryManager, tensorHandleFactory, 0.0f, 0);</div><div class="line"><a name="l01016"></a><span class="lineno"> 1016</span>&#160;}</div><div class="line"><a name="l01017"></a><span class="lineno"> 1017</span>&#160;</div><div class="line"><a name="l01018"></a><span class="lineno"><a class="line" href="_mirror_pad_test_impl_8hpp.xhtml#ac9e2a9934eea3a4adc8f5fe436e9882b"> 1018</a></span>&#160;<a class="code" href="struct_layer_test_result.xhtml">LayerTestResult&lt;armnn::BFloat16, 4&gt;</a> <a class="code" href="_mirror_pad_test_impl_8cpp.xhtml#ac9e2a9934eea3a4adc8f5fe436e9882b">PadSymmetric4dBFloat16Test</a>(</div><div class="line"><a name="l01019"></a><span class="lineno"> 1019</span>&#160;    <a class="code" href="classarmnn_1_1_i_workload_factory.xhtml">armnn::IWorkloadFactory</a>&amp; workloadFactory,</div><div class="line"><a name="l01020"></a><span class="lineno"> 1020</span>&#160;    <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_i_backend_internal.xhtml#a693b40e6b94e958836aeb0410ca186bd">armnn::IBackendInternal::IMemoryManagerSharedPtr</a>&amp; memoryManager,</div><div class="line"><a name="l01021"></a><span class="lineno"> 1021</span>&#160;    <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_i_tensor_handle_factory.xhtml">armnn::ITensorHandleFactory</a>&amp; tensorHandleFactory)</div><div class="line"><a name="l01022"></a><span class="lineno"> 1022</span>&#160;{</div><div class="line"><a name="l01023"></a><span class="lineno"> 1023</span>&#160;    <span class="keywordflow">return</span> PadSymmetric4dTest&lt;armnn::DataType::BFloat16&gt;(workloadFactory, memoryManager, tensorHandleFactory, 0.0f, 0);</div><div class="line"><a name="l01024"></a><span class="lineno"> 1024</span>&#160;}</div><div class="line"><a name="l01025"></a><span class="lineno"> 1025</span>&#160;</div><div class="line"><a name="l01026"></a><span class="lineno"><a class="line" href="_mirror_pad_test_impl_8hpp.xhtml#a91b6685fd6f765e212ccf57e3427849f"> 1026</a></span>&#160;<a class="code" href="struct_layer_test_result.xhtml">LayerTestResult&lt;armnn::BFloat16, 4&gt;</a> <a class="code" href="_mirror_pad_test_impl_8cpp.xhtml#a91b6685fd6f765e212ccf57e3427849f">PadReflect4dBFloat16Test</a>(</div><div class="line"><a name="l01027"></a><span class="lineno"> 1027</span>&#160;    <a class="code" href="classarmnn_1_1_i_workload_factory.xhtml">armnn::IWorkloadFactory</a>&amp; workloadFactory,</div><div class="line"><a name="l01028"></a><span class="lineno"> 1028</span>&#160;    <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_i_backend_internal.xhtml#a693b40e6b94e958836aeb0410ca186bd">armnn::IBackendInternal::IMemoryManagerSharedPtr</a>&amp; memoryManager,</div><div class="line"><a name="l01029"></a><span class="lineno"> 1029</span>&#160;    <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_i_tensor_handle_factory.xhtml">armnn::ITensorHandleFactory</a>&amp; tensorHandleFactory)</div><div class="line"><a name="l01030"></a><span class="lineno"> 1030</span>&#160;{</div><div class="line"><a name="l01031"></a><span class="lineno"> 1031</span>&#160;    <span class="keywordflow">return</span> PadReflect4dTest&lt;armnn::DataType::BFloat16&gt;(workloadFactory, memoryManager, tensorHandleFactory, 0.0f, 0);</div><div class="line"><a name="l01032"></a><span class="lineno"> 1032</span>&#160;}</div><div class="line"><a name="l01033"></a><span class="lineno"> 1033</span>&#160;</div><div class="line"><a name="l01034"></a><span class="lineno"><a class="line" href="_mirror_pad_test_impl_8hpp.xhtml#a492f42e11a542749c96e802ec80109da"> 1034</a></span>&#160;<a class="code" href="struct_layer_test_result.xhtml">LayerTestResult&lt;uint8_t, 4&gt;</a> <a class="code" href="_mirror_pad_test_impl_8cpp.xhtml#a492f42e11a542749c96e802ec80109da">PadSymmetric4dUint8Test</a>(</div><div class="line"><a name="l01035"></a><span class="lineno"> 1035</span>&#160;    <a class="code" href="classarmnn_1_1_i_workload_factory.xhtml">armnn::IWorkloadFactory</a>&amp; workloadFactory,</div><div class="line"><a name="l01036"></a><span class="lineno"> 1036</span>&#160;    <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_i_backend_internal.xhtml#a693b40e6b94e958836aeb0410ca186bd">armnn::IBackendInternal::IMemoryManagerSharedPtr</a>&amp; memoryManager,</div><div class="line"><a name="l01037"></a><span class="lineno"> 1037</span>&#160;    <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_i_tensor_handle_factory.xhtml">armnn::ITensorHandleFactory</a>&amp; tensorHandleFactory)</div><div class="line"><a name="l01038"></a><span class="lineno"> 1038</span>&#160;{</div><div class="line"><a name="l01039"></a><span class="lineno"> 1039</span>&#160;    <span class="keywordflow">return</span> PadSymmetric4dTest&lt;armnn::DataType::QAsymmU8&gt;(</div><div class="line"><a name="l01040"></a><span class="lineno"> 1040</span>&#160;            workloadFactory, memoryManager, tensorHandleFactory, 0.1f, 128);</div><div class="line"><a name="l01041"></a><span class="lineno"> 1041</span>&#160;}</div><div class="line"><a name="l01042"></a><span class="lineno"> 1042</span>&#160;</div><div class="line"><a name="l01043"></a><span class="lineno"><a class="line" href="_mirror_pad_test_impl_8hpp.xhtml#a99cd3e222166bc2c9d0ef8090c71dc34"> 1043</a></span>&#160;<a class="code" href="struct_layer_test_result.xhtml">LayerTestResult&lt;uint8_t, 4&gt;</a> <a class="code" href="_mirror_pad_test_impl_8cpp.xhtml#a99cd3e222166bc2c9d0ef8090c71dc34">PadReflect4dUint8Test</a>(</div><div class="line"><a name="l01044"></a><span class="lineno"> 1044</span>&#160;    <a class="code" href="classarmnn_1_1_i_workload_factory.xhtml">armnn::IWorkloadFactory</a>&amp; workloadFactory,</div><div class="line"><a name="l01045"></a><span class="lineno"> 1045</span>&#160;    <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_i_backend_internal.xhtml#a693b40e6b94e958836aeb0410ca186bd">armnn::IBackendInternal::IMemoryManagerSharedPtr</a>&amp; memoryManager,</div><div class="line"><a name="l01046"></a><span class="lineno"> 1046</span>&#160;    <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_i_tensor_handle_factory.xhtml">armnn::ITensorHandleFactory</a>&amp; tensorHandleFactory)</div><div class="line"><a name="l01047"></a><span class="lineno"> 1047</span>&#160;{</div><div class="line"><a name="l01048"></a><span class="lineno"> 1048</span>&#160;    <span class="keywordflow">return</span> PadReflect4dTest&lt;armnn::DataType::QAsymmU8&gt;(workloadFactory, memoryManager, tensorHandleFactory, 0.1f, 128);</div><div class="line"><a name="l01049"></a><span class="lineno"> 1049</span>&#160;}</div><div class="line"><a name="l01050"></a><span class="lineno"> 1050</span>&#160;</div><div class="line"><a name="l01051"></a><span class="lineno"><a class="line" href="_mirror_pad_test_impl_8hpp.xhtml#ab7ca1db591af7291cabbe150a9d05ac3"> 1051</a></span>&#160;<a class="code" href="struct_layer_test_result.xhtml">LayerTestResult&lt;int8_t, 4&gt;</a> <a class="code" href="_mirror_pad_test_impl_8cpp.xhtml#ab7ca1db591af7291cabbe150a9d05ac3">PadSymmetric4dInt8Test</a>(</div><div class="line"><a name="l01052"></a><span class="lineno"> 1052</span>&#160;    <a class="code" href="classarmnn_1_1_i_workload_factory.xhtml">armnn::IWorkloadFactory</a>&amp; workloadFactory,</div><div class="line"><a name="l01053"></a><span class="lineno"> 1053</span>&#160;    <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_i_backend_internal.xhtml#a693b40e6b94e958836aeb0410ca186bd">armnn::IBackendInternal::IMemoryManagerSharedPtr</a>&amp; memoryManager,</div><div class="line"><a name="l01054"></a><span class="lineno"> 1054</span>&#160;    <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_i_tensor_handle_factory.xhtml">armnn::ITensorHandleFactory</a>&amp; tensorHandleFactory)</div><div class="line"><a name="l01055"></a><span class="lineno"> 1055</span>&#160;{</div><div class="line"><a name="l01056"></a><span class="lineno"> 1056</span>&#160;    <span class="keywordflow">return</span> PadSymmetric4dTest&lt;armnn::DataType::QAsymmS8&gt;(workloadFactory, memoryManager, tensorHandleFactory, 0.1f, 64);</div><div class="line"><a name="l01057"></a><span class="lineno"> 1057</span>&#160;}</div><div class="line"><a name="l01058"></a><span class="lineno"> 1058</span>&#160;</div><div class="line"><a name="l01059"></a><span class="lineno"><a class="line" href="_mirror_pad_test_impl_8hpp.xhtml#aac6a0460e9cf5af4392e9dea1e708287"> 1059</a></span>&#160;<a class="code" href="struct_layer_test_result.xhtml">LayerTestResult&lt;int8_t, 4&gt;</a> <a class="code" href="_mirror_pad_test_impl_8cpp.xhtml#aac6a0460e9cf5af4392e9dea1e708287">PadReflect4dInt8Test</a>(</div><div class="line"><a name="l01060"></a><span class="lineno"> 1060</span>&#160;    <a class="code" href="classarmnn_1_1_i_workload_factory.xhtml">armnn::IWorkloadFactory</a>&amp; workloadFactory,</div><div class="line"><a name="l01061"></a><span class="lineno"> 1061</span>&#160;    <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_i_backend_internal.xhtml#a693b40e6b94e958836aeb0410ca186bd">armnn::IBackendInternal::IMemoryManagerSharedPtr</a>&amp; memoryManager,</div><div class="line"><a name="l01062"></a><span class="lineno"> 1062</span>&#160;    <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_i_tensor_handle_factory.xhtml">armnn::ITensorHandleFactory</a>&amp; tensorHandleFactory)</div><div class="line"><a name="l01063"></a><span class="lineno"> 1063</span>&#160;{</div><div class="line"><a name="l01064"></a><span class="lineno"> 1064</span>&#160;    <span class="keywordflow">return</span> PadReflect4dTest&lt;armnn::DataType::QAsymmS8&gt;(workloadFactory, memoryManager, tensorHandleFactory, 0.1f, 64);</div><div class="line"><a name="l01065"></a><span class="lineno"> 1065</span>&#160;}</div><div class="line"><a name="l01066"></a><span class="lineno"> 1066</span>&#160;</div><div class="line"><a name="l01067"></a><span class="lineno"><a class="line" href="_mirror_pad_test_impl_8hpp.xhtml#a4400962d52cd7131e85897b3d27fe3c6"> 1067</a></span>&#160;<a class="code" href="struct_layer_test_result.xhtml">LayerTestResult&lt;int16_t, 4&gt;</a> <a class="code" href="_mirror_pad_test_impl_8cpp.xhtml#a4400962d52cd7131e85897b3d27fe3c6">PadSymmetric4dInt16Test</a>(</div><div class="line"><a name="l01068"></a><span class="lineno"> 1068</span>&#160;        <a class="code" href="classarmnn_1_1_i_workload_factory.xhtml">armnn::IWorkloadFactory</a>&amp; workloadFactory,</div><div class="line"><a name="l01069"></a><span class="lineno"> 1069</span>&#160;        <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_i_backend_internal.xhtml#a693b40e6b94e958836aeb0410ca186bd">armnn::IBackendInternal::IMemoryManagerSharedPtr</a>&amp; memoryManager,</div><div class="line"><a name="l01070"></a><span class="lineno"> 1070</span>&#160;        <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_i_tensor_handle_factory.xhtml">armnn::ITensorHandleFactory</a>&amp; tensorHandleFactory)</div><div class="line"><a name="l01071"></a><span class="lineno"> 1071</span>&#160;{</div><div class="line"><a name="l01072"></a><span class="lineno"> 1072</span>&#160;    <span class="keywordflow">return</span> PadSymmetric4dTest&lt;armnn::DataType::QSymmS16&gt;(workloadFactory, memoryManager, tensorHandleFactory, 2.0f, 0);</div><div class="line"><a name="l01073"></a><span class="lineno"> 1073</span>&#160;}</div><div class="line"><a name="l01074"></a><span class="lineno"> 1074</span>&#160;</div><div class="line"><a name="l01075"></a><span class="lineno"><a class="line" href="_mirror_pad_test_impl_8hpp.xhtml#afbe2a34ca3853f4d7171c5a9d3d5cd0e"> 1075</a></span>&#160;<a class="code" href="struct_layer_test_result.xhtml">LayerTestResult&lt;int16_t, 4&gt;</a> <a class="code" href="_mirror_pad_test_impl_8cpp.xhtml#afbe2a34ca3853f4d7171c5a9d3d5cd0e">PadReflect4dInt16Test</a>(</div><div class="line"><a name="l01076"></a><span class="lineno"> 1076</span>&#160;        <a class="code" href="classarmnn_1_1_i_workload_factory.xhtml">armnn::IWorkloadFactory</a>&amp; workloadFactory,</div><div class="line"><a name="l01077"></a><span class="lineno"> 1077</span>&#160;        <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_i_backend_internal.xhtml#a693b40e6b94e958836aeb0410ca186bd">armnn::IBackendInternal::IMemoryManagerSharedPtr</a>&amp; memoryManager,</div><div class="line"><a name="l01078"></a><span class="lineno"> 1078</span>&#160;        <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_i_tensor_handle_factory.xhtml">armnn::ITensorHandleFactory</a>&amp; tensorHandleFactory)</div><div class="line"><a name="l01079"></a><span class="lineno"> 1079</span>&#160;{</div><div class="line"><a name="l01080"></a><span class="lineno"> 1080</span>&#160;    <span class="keywordflow">return</span> PadReflect4dTest&lt;armnn::DataType::QSymmS16&gt;(workloadFactory, memoryManager, tensorHandleFactory, 2.0f, 0);</div><div class="line"><a name="l01081"></a><span class="lineno"> 1081</span>&#160;}</div><div class="line"><a name="l01082"></a><span class="lineno"> 1082</span>&#160;</div><div class="line"><a name="l01083"></a><span class="lineno"><a class="line" href="_mirror_pad_test_impl_8hpp.xhtml#a15eb17ed91f7ce1f053574938fc011d1"> 1083</a></span>&#160;<a class="code" href="struct_layer_test_result.xhtml">LayerTestResult&lt;armnn::Half, 2&gt;</a> <a class="code" href="_mirror_pad_test_impl_8cpp.xhtml#a15eb17ed91f7ce1f053574938fc011d1">PadSymmetricFloat16Test</a>(</div><div class="line"><a name="l01084"></a><span class="lineno"> 1084</span>&#160;        <a class="code" href="classarmnn_1_1_i_workload_factory.xhtml">armnn::IWorkloadFactory</a>&amp; workloadFactory,</div><div class="line"><a name="l01085"></a><span class="lineno"> 1085</span>&#160;        <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_i_backend_internal.xhtml#a693b40e6b94e958836aeb0410ca186bd">armnn::IBackendInternal::IMemoryManagerSharedPtr</a>&amp; memoryManager,</div><div class="line"><a name="l01086"></a><span class="lineno"> 1086</span>&#160;        <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_i_tensor_handle_factory.xhtml">armnn::ITensorHandleFactory</a>&amp; tensorHandleFactory)</div><div class="line"><a name="l01087"></a><span class="lineno"> 1087</span>&#160;{</div><div class="line"><a name="l01088"></a><span class="lineno"> 1088</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="_mirror_pad_test_impl_8cpp.xhtml#ac2322b4041b962e7f8023d6b711dad41">PadSymmetricFloat16</a>(workloadFactory, memoryManager, tensorHandleFactory);</div><div class="line"><a name="l01089"></a><span class="lineno"> 1089</span>&#160;}</div><div class="line"><a name="l01090"></a><span class="lineno"> 1090</span>&#160;</div><div class="line"><a name="l01091"></a><span class="lineno"><a class="line" href="_mirror_pad_test_impl_8hpp.xhtml#a0e7cbfcaf1c9b33f857d0ad3d8c43e3c"> 1091</a></span>&#160;<a class="code" href="struct_layer_test_result.xhtml">LayerTestResult&lt;armnn::Half, 2&gt;</a> <a class="code" href="_mirror_pad_test_impl_8cpp.xhtml#a0e7cbfcaf1c9b33f857d0ad3d8c43e3c">PadReflectFloat16Test</a>(</div><div class="line"><a name="l01092"></a><span class="lineno"> 1092</span>&#160;        <a class="code" href="classarmnn_1_1_i_workload_factory.xhtml">armnn::IWorkloadFactory</a>&amp; workloadFactory,</div><div class="line"><a name="l01093"></a><span class="lineno"> 1093</span>&#160;        <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_i_backend_internal.xhtml#a693b40e6b94e958836aeb0410ca186bd">armnn::IBackendInternal::IMemoryManagerSharedPtr</a>&amp; memoryManager,</div><div class="line"><a name="l01094"></a><span class="lineno"> 1094</span>&#160;        <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_i_tensor_handle_factory.xhtml">armnn::ITensorHandleFactory</a>&amp; tensorHandleFactory)</div><div class="line"><a name="l01095"></a><span class="lineno"> 1095</span>&#160;{</div><div class="line"><a name="l01096"></a><span class="lineno"> 1096</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="_mirror_pad_test_impl_8cpp.xhtml#accc387f1eb674e3254618f933bf69da3">PadReflectFloat16</a>(workloadFactory, memoryManager, tensorHandleFactory);</div><div class="line"><a name="l01097"></a><span class="lineno"> 1097</span>&#160;}</div><div class="ttc" id="_mirror_pad_test_impl_8cpp_xhtml_a91b6685fd6f765e212ccf57e3427849f"><div class="ttname"><a href="_mirror_pad_test_impl_8cpp.xhtml#a91b6685fd6f765e212ccf57e3427849f">PadReflect4dBFloat16Test</a></div><div class="ttdeci">LayerTestResult&lt; armnn::BFloat16, 4 &gt; PadReflect4dBFloat16Test(armnn::IWorkloadFactory &amp;workloadFactory, const armnn::IBackendInternal::IMemoryManagerSharedPtr &amp;memoryManager, const armnn::ITensorHandleFactory &amp;tensorHandleFactory)</div><div class="ttdef"><b>Definition:</b> <a href="_mirror_pad_test_impl_8cpp_source.xhtml#l01026">MirrorPadTestImpl.cpp:1026</a></div></div>
<div class="ttc" id="_mirror_pad_test_impl_8cpp_xhtml_ab7ca1db591af7291cabbe150a9d05ac3"><div class="ttname"><a href="_mirror_pad_test_impl_8cpp.xhtml#ab7ca1db591af7291cabbe150a9d05ac3">PadSymmetric4dInt8Test</a></div><div class="ttdeci">LayerTestResult&lt; int8_t, 4 &gt; PadSymmetric4dInt8Test(armnn::IWorkloadFactory &amp;workloadFactory, const armnn::IBackendInternal::IMemoryManagerSharedPtr &amp;memoryManager, const armnn::ITensorHandleFactory &amp;tensorHandleFactory)</div><div class="ttdef"><b>Definition:</b> <a href="_mirror_pad_test_impl_8cpp_source.xhtml#l01051">MirrorPadTestImpl.cpp:1051</a></div></div>
<div class="ttc" id="_mirror_pad_test_impl_8hpp_xhtml"><div class="ttname"><a href="_mirror_pad_test_impl_8hpp.xhtml">MirrorPadTestImpl.hpp</a></div></div>
<div class="ttc" id="classarmnn_1_1_tensor_info_xhtml_a8b5d0f8a24e9d9238f412260a552acf8"><div class="ttname"><a href="classarmnn_1_1_tensor_info.xhtml#a8b5d0f8a24e9d9238f412260a552acf8">armnn::TensorInfo::GetShape</a></div><div class="ttdeci">const TensorShape &amp; GetShape() const</div><div class="ttdef"><b>Definition:</b> <a href="_tensor_8hpp_source.xhtml#l00191">Tensor.hpp:191</a></div></div>
<div class="ttc" id="classarmnn_1_1_tensor_info_xhtml"><div class="ttname"><a href="classarmnn_1_1_tensor_info.xhtml">armnn::TensorInfo</a></div><div class="ttdef"><b>Definition:</b> <a href="_tensor_8hpp_source.xhtml#l00152">Tensor.hpp:152</a></div></div>
<div class="ttc" id="_quantize_helper_8hpp_xhtml"><div class="ttname"><a href="_quantize_helper_8hpp.xhtml">QuantizeHelper.hpp</a></div></div>
<div class="ttc" id="classarmnn_1_1_i_workload_factory_xhtml"><div class="ttname"><a href="classarmnn_1_1_i_workload_factory.xhtml">armnn::IWorkloadFactory</a></div><div class="ttdef"><b>Definition:</b> <a href="include_2armnn_2backends_2_workload_factory_8hpp_source.xhtml#l00022">WorkloadFactory.hpp:22</a></div></div>
<div class="ttc" id="namespacearmnn_xhtml_a14d24d90ab4ba2956e92e27890ba4c91af334649ef5e5d0ffe200751d07012626"><div class="ttname"><a href="namespacearmnn.xhtml#a14d24d90ab4ba2956e92e27890ba4c91af334649ef5e5d0ffe200751d07012626">armnn::PaddingMode::Symmetric</a></div></div>
<div class="ttc" id="_mirror_pad_test_impl_8cpp_xhtml_aac6a0460e9cf5af4392e9dea1e708287"><div class="ttname"><a href="_mirror_pad_test_impl_8cpp.xhtml#aac6a0460e9cf5af4392e9dea1e708287">PadReflect4dInt8Test</a></div><div class="ttdeci">LayerTestResult&lt; int8_t, 4 &gt; PadReflect4dInt8Test(armnn::IWorkloadFactory &amp;workloadFactory, const armnn::IBackendInternal::IMemoryManagerSharedPtr &amp;memoryManager, const armnn::ITensorHandleFactory &amp;tensorHandleFactory)</div><div class="ttdef"><b>Definition:</b> <a href="_mirror_pad_test_impl_8cpp_source.xhtml#l01059">MirrorPadTestImpl.cpp:1059</a></div></div>
<div class="ttc" id="_mirror_pad_test_impl_8cpp_xhtml_ac309b50a32b8a9c39132ad355559c1a0"><div class="ttname"><a href="_mirror_pad_test_impl_8cpp.xhtml#ac309b50a32b8a9c39132ad355559c1a0">MirrorPad4dTestCommon</a></div><div class="ttdeci">LayerTestResult&lt; T, 4 &gt; MirrorPad4dTestCommon(armnn::IWorkloadFactory &amp;workloadFactory, const armnn::IBackendInternal::IMemoryManagerSharedPtr &amp;memoryManager, const armnn::ITensorHandleFactory &amp;tensorHandleFactory, const armnn::TensorInfo &amp;inputTensorInfo, const armnn::TensorInfo &amp;outputTensorInfo, const std::vector&lt; T &gt; &amp;inputValues, const std::vector&lt; T &gt; &amp;expectedOutputValues, const std::vector&lt; std::pair&lt; unsigned int, unsigned int &gt;&gt; &amp;padList, const armnn::PaddingMode paddingMode)</div><div class="ttdef"><b>Definition:</b> <a href="_mirror_pad_test_impl_8cpp_source.xhtml#l00111">MirrorPadTestImpl.cpp:111</a></div></div>
<div class="ttc" id="_mirror_pad_test_impl_8cpp_xhtml_a8121af7afd3c2813430b51686f8dc276"><div class="ttname"><a href="_mirror_pad_test_impl_8cpp.xhtml#a8121af7afd3c2813430b51686f8dc276">PadReflect3dUint8Test</a></div><div class="ttdeci">LayerTestResult&lt; uint8_t, 3 &gt; PadReflect3dUint8Test(armnn::IWorkloadFactory &amp;workloadFactory, const armnn::IBackendInternal::IMemoryManagerSharedPtr &amp;memoryManager, const armnn::ITensorHandleFactory &amp;tensorHandleFactory)</div><div class="ttdef"><b>Definition:</b> <a href="_mirror_pad_test_impl_8cpp_source.xhtml#l00978">MirrorPadTestImpl.cpp:978</a></div></div>
<div class="ttc" id="namespacearmnn_xhtml_a0743ed5e860c316a20b68ca96301b411"><div class="ttname"><a href="namespacearmnn.xhtml#a0743ed5e860c316a20b68ca96301b411">armnn::ResolveType</a></div><div class="ttdeci">typename ResolveTypeImpl&lt; DT &gt;::Type ResolveType</div><div class="ttdef"><b>Definition:</b> <a href="_resolve_type_8hpp_source.xhtml#l00079">ResolveType.hpp:79</a></div></div>
<div class="ttc" id="_mirror_pad_test_impl_8cpp_xhtml_aaecd51ba53dc2d056f71bf920ac2dbc0"><div class="ttname"><a href="_mirror_pad_test_impl_8cpp.xhtml#aaecd51ba53dc2d056f71bf920ac2dbc0">PadSymmetric2dFloat32Test</a></div><div class="ttdeci">LayerTestResult&lt; float, 2 &gt; PadSymmetric2dFloat32Test(armnn::IWorkloadFactory &amp;workloadFactory, const armnn::IBackendInternal::IMemoryManagerSharedPtr &amp;memoryManager, const armnn::ITensorHandleFactory &amp;tensorHandleFactory)</div><div class="ttdef"><b>Definition:</b> <a href="_mirror_pad_test_impl_8cpp_source.xhtml#l00937">MirrorPadTestImpl.cpp:937</a></div></div>
<div class="ttc" id="_mirror_pad_test_impl_8cpp_xhtml_a492f42e11a542749c96e802ec80109da"><div class="ttname"><a href="_mirror_pad_test_impl_8cpp.xhtml#a492f42e11a542749c96e802ec80109da">PadSymmetric4dUint8Test</a></div><div class="ttdeci">LayerTestResult&lt; uint8_t, 4 &gt; PadSymmetric4dUint8Test(armnn::IWorkloadFactory &amp;workloadFactory, const armnn::IBackendInternal::IMemoryManagerSharedPtr &amp;memoryManager, const armnn::ITensorHandleFactory &amp;tensorHandleFactory)</div><div class="ttdef"><b>Definition:</b> <a href="_mirror_pad_test_impl_8cpp_source.xhtml#l01034">MirrorPadTestImpl.cpp:1034</a></div></div>
<div class="ttc" id="structarmnn_1_1_pad_descriptor_xhtml_a85f98c94e11f65a6b73f831735c040f3"><div class="ttname"><a href="structarmnn_1_1_pad_descriptor.xhtml#a85f98c94e11f65a6b73f831735c040f3">armnn::PadDescriptor::m_PadList</a></div><div class="ttdeci">std::vector&lt; std::pair&lt; unsigned int, unsigned int &gt; &gt; m_PadList</div><div class="ttdoc">Specifies the padding for input dimension. </div><div class="ttdef"><b>Definition:</b> <a href="_descriptors_8hpp_source.xhtml#l01199">Descriptors.hpp:1199</a></div></div>
<div class="ttc" id="_mirror_pad_test_impl_8cpp_xhtml_ad77c120567d91d7792797c47be0adc8f"><div class="ttname"><a href="_mirror_pad_test_impl_8cpp.xhtml#ad77c120567d91d7792797c47be0adc8f">PadReflect3dTest</a></div><div class="ttdeci">LayerTestResult&lt; T, 3 &gt; PadReflect3dTest(armnn::IWorkloadFactory &amp;workloadFactory, const armnn::IBackendInternal::IMemoryManagerSharedPtr &amp;memoryManager, const armnn::ITensorHandleFactory &amp;tensorHandleFactory, float qScale, int32_t qOffset)</div><div class="ttdef"><b>Definition:</b> <a href="_mirror_pad_test_impl_8cpp_source.xhtml#l00326">MirrorPadTestImpl.cpp:326</a></div></div>
<div class="ttc" id="namespacearmnn_xhtml_a44affeeb090c3c6a3062830562672e84"><div class="ttname"><a href="namespacearmnn.xhtml#a44affeeb090c3c6a3062830562672e84">armnn::IgnoreUnused</a></div><div class="ttdeci">void IgnoreUnused(Ts &amp;&amp;...)</div><div class="ttdef"><b>Definition:</b> <a href="_ignore_unused_8hpp_source.xhtml#l00014">IgnoreUnused.hpp:14</a></div></div>
<div class="ttc" id="_mirror_pad_test_impl_8cpp_xhtml_ac2322b4041b962e7f8023d6b711dad41"><div class="ttname"><a href="_mirror_pad_test_impl_8cpp.xhtml#ac2322b4041b962e7f8023d6b711dad41">PadSymmetricFloat16</a></div><div class="ttdeci">LayerTestResult&lt; armnn::Half, 2 &gt; PadSymmetricFloat16(armnn::IWorkloadFactory &amp;workloadFactory, const armnn::IBackendInternal::IMemoryManagerSharedPtr &amp;memoryManager, const armnn::ITensorHandleFactory &amp;tensorHandleFactory)</div><div class="ttdef"><b>Definition:</b> <a href="_mirror_pad_test_impl_8cpp_source.xhtml#l00843">MirrorPadTestImpl.cpp:843</a></div></div>
<div class="ttc" id="classarmnn_1_1_tensor_shape_xhtml"><div class="ttname"><a href="classarmnn_1_1_tensor_shape.xhtml">armnn::TensorShape</a></div><div class="ttdef"><b>Definition:</b> <a href="_tensor_8hpp_source.xhtml#l00020">Tensor.hpp:20</a></div></div>
<div class="ttc" id="structarmnn_1_1_queue_descriptor_with_parameters_xhtml_aad91b9bbf7aa365d304febe79a3d1333"><div class="ttname"><a href="structarmnn_1_1_queue_descriptor_with_parameters.xhtml#aad91b9bbf7aa365d304febe79a3d1333">armnn::QueueDescriptorWithParameters::m_Parameters</a></div><div class="ttdeci">LayerDescriptor m_Parameters</div><div class="ttdef"><b>Definition:</b> <a href="include_2armnn_2backends_2_workload_data_8hpp_source.xhtml#l00066">WorkloadData.hpp:66</a></div></div>
<div class="ttc" id="_mirror_pad_test_impl_8cpp_xhtml_a9ba5ef1e017f5cb69281b8cd0a3d8198"><div class="ttname"><a href="_mirror_pad_test_impl_8cpp.xhtml#a9ba5ef1e017f5cb69281b8cd0a3d8198">PadSymmetric3dFloat32Test</a></div><div class="ttdeci">LayerTestResult&lt; float, 3 &gt; PadSymmetric3dFloat32Test(armnn::IWorkloadFactory &amp;workloadFactory, const armnn::IBackendInternal::IMemoryManagerSharedPtr &amp;memoryManager, const armnn::ITensorHandleFactory &amp;tensorHandleFactory)</div><div class="ttdef"><b>Definition:</b> <a href="_mirror_pad_test_impl_8cpp_source.xhtml#l00953">MirrorPadTestImpl.cpp:953</a></div></div>
<div class="ttc" id="_mirror_pad_test_impl_8cpp_xhtml_affdbd144557f7c3a46322c73b0d51d9e"><div class="ttname"><a href="_mirror_pad_test_impl_8cpp.xhtml#affdbd144557f7c3a46322c73b0d51d9e">PadSymmetric3dInt8Test</a></div><div class="ttdeci">LayerTestResult&lt; int8_t, 3 &gt; PadSymmetric3dInt8Test(armnn::IWorkloadFactory &amp;workloadFactory, const armnn::IBackendInternal::IMemoryManagerSharedPtr &amp;memoryManager, const armnn::ITensorHandleFactory &amp;tensorHandleFactory)</div><div class="ttdef"><b>Definition:</b> <a href="_mirror_pad_test_impl_8cpp_source.xhtml#l00986">MirrorPadTestImpl.cpp:986</a></div></div>
<div class="ttc" id="_mirror_pad_test_impl_8cpp_xhtml_a26e900c565b9e7aec3a90446924341bf"><div class="ttname"><a href="_mirror_pad_test_impl_8cpp.xhtml#a26e900c565b9e7aec3a90446924341bf">PadSymmetric3dTest</a></div><div class="ttdeci">LayerTestResult&lt; T, 3 &gt; PadSymmetric3dTest(armnn::IWorkloadFactory &amp;workloadFactory, const armnn::IBackendInternal::IMemoryManagerSharedPtr &amp;memoryManager, const armnn::ITensorHandleFactory &amp;tensorHandleFactory, float qScale, int32_t qOffset)</div><div class="ttdef"><b>Definition:</b> <a href="_mirror_pad_test_impl_8cpp_source.xhtml#l00259">MirrorPadTestImpl.cpp:259</a></div></div>
<div class="ttc" id="structarmnn_1_1_pad_queue_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_pad_queue_descriptor.xhtml">armnn::PadQueueDescriptor</a></div><div class="ttdef"><b>Definition:</b> <a href="include_2armnn_2backends_2_workload_data_8hpp_source.xhtml#l00316">WorkloadData.hpp:316</a></div></div>
<div class="ttc" id="_mirror_pad_test_impl_8cpp_xhtml_acffd7787175543ff4a3f81bf8aae09a1"><div class="ttname"><a href="_mirror_pad_test_impl_8cpp.xhtml#acffd7787175543ff4a3f81bf8aae09a1">PadReflect2dTest</a></div><div class="ttdeci">LayerTestResult&lt; T, 2 &gt; PadReflect2dTest(armnn::IWorkloadFactory &amp;workloadFactory, const armnn::IBackendInternal::IMemoryManagerSharedPtr &amp;memoryManager, const armnn::ITensorHandleFactory &amp;tensorHandleFactory, float qScale, int32_t qOffset)</div><div class="ttdef"><b>Definition:</b> <a href="_mirror_pad_test_impl_8cpp_source.xhtml#l00208">MirrorPadTestImpl.cpp:208</a></div></div>
<div class="ttc" id="_mirror_pad_test_impl_8cpp_xhtml_afbe2a34ca3853f4d7171c5a9d3d5cd0e"><div class="ttname"><a href="_mirror_pad_test_impl_8cpp.xhtml#afbe2a34ca3853f4d7171c5a9d3d5cd0e">PadReflect4dInt16Test</a></div><div class="ttdeci">LayerTestResult&lt; int16_t, 4 &gt; PadReflect4dInt16Test(armnn::IWorkloadFactory &amp;workloadFactory, const armnn::IBackendInternal::IMemoryManagerSharedPtr &amp;memoryManager, const armnn::ITensorHandleFactory &amp;tensorHandleFactory)</div><div class="ttdef"><b>Definition:</b> <a href="_mirror_pad_test_impl_8cpp_source.xhtml#l01075">MirrorPadTestImpl.cpp:1075</a></div></div>
<div class="ttc" id="_mirror_pad_test_impl_8cpp_xhtml_ab30f837e7f49a4fb4acd652038021e82"><div class="ttname"><a href="_mirror_pad_test_impl_8cpp.xhtml#ab30f837e7f49a4fb4acd652038021e82">PadReflect4dTest</a></div><div class="ttdeci">LayerTestResult&lt; T, 4 &gt; PadReflect4dTest(armnn::IWorkloadFactory &amp;workloadFactory, const armnn::IBackendInternal::IMemoryManagerSharedPtr &amp;memoryManager, const armnn::ITensorHandleFactory &amp;tensorHandleFactory, float qScale, int32_t qOffset)</div><div class="ttdef"><b>Definition:</b> <a href="_mirror_pad_test_impl_8cpp_source.xhtml#l00706">MirrorPadTestImpl.cpp:706</a></div></div>
<div class="ttc" id="_mirror_pad_test_impl_8cpp_xhtml_a0e7cbfcaf1c9b33f857d0ad3d8c43e3c"><div class="ttname"><a href="_mirror_pad_test_impl_8cpp.xhtml#a0e7cbfcaf1c9b33f857d0ad3d8c43e3c">PadReflectFloat16Test</a></div><div class="ttdeci">LayerTestResult&lt; armnn::Half, 2 &gt; PadReflectFloat16Test(armnn::IWorkloadFactory &amp;workloadFactory, const armnn::IBackendInternal::IMemoryManagerSharedPtr &amp;memoryManager, const armnn::ITensorHandleFactory &amp;tensorHandleFactory)</div><div class="ttdef"><b>Definition:</b> <a href="_mirror_pad_test_impl_8cpp_source.xhtml#l01091">MirrorPadTestImpl.cpp:1091</a></div></div>
<div class="ttc" id="_mirror_pad_test_impl_8cpp_xhtml_a99cd3e222166bc2c9d0ef8090c71dc34"><div class="ttname"><a href="_mirror_pad_test_impl_8cpp.xhtml#a99cd3e222166bc2c9d0ef8090c71dc34">PadReflect4dUint8Test</a></div><div class="ttdeci">LayerTestResult&lt; uint8_t, 4 &gt; PadReflect4dUint8Test(armnn::IWorkloadFactory &amp;workloadFactory, const armnn::IBackendInternal::IMemoryManagerSharedPtr &amp;memoryManager, const armnn::ITensorHandleFactory &amp;tensorHandleFactory)</div><div class="ttdef"><b>Definition:</b> <a href="_mirror_pad_test_impl_8cpp_source.xhtml#l01043">MirrorPadTestImpl.cpp:1043</a></div></div>
<div class="ttc" id="_mirror_pad_test_impl_8cpp_xhtml_a7817d557360d3c24057d8595f970df9e"><div class="ttname"><a href="_mirror_pad_test_impl_8cpp.xhtml#a7817d557360d3c24057d8595f970df9e">PadReflect3dInt8Test</a></div><div class="ttdeci">LayerTestResult&lt; int8_t, 3 &gt; PadReflect3dInt8Test(armnn::IWorkloadFactory &amp;workloadFactory, const armnn::IBackendInternal::IMemoryManagerSharedPtr &amp;memoryManager, const armnn::ITensorHandleFactory &amp;tensorHandleFactory)</div><div class="ttdef"><b>Definition:</b> <a href="_mirror_pad_test_impl_8cpp_source.xhtml#l00994">MirrorPadTestImpl.cpp:994</a></div></div>
<div class="ttc" id="namespacearmnn_xhtml_ad8ed01ff3ff33333d8e19db4d2818bb6"><div class="ttname"><a href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6">armnn::DataType</a></div><div class="ttdeci">DataType</div><div class="ttdef"><b>Definition:</b> <a href="_types_8hpp_source.xhtml#l00048">Types.hpp:48</a></div></div>
<div class="ttc" id="classarmnn_1_1_i_backend_internal_xhtml_a693b40e6b94e958836aeb0410ca186bd"><div class="ttname"><a href="classarmnn_1_1_i_backend_internal.xhtml#a693b40e6b94e958836aeb0410ca186bd">armnn::IBackendInternal::IMemoryManagerSharedPtr</a></div><div class="ttdeci">std::shared_ptr&lt; IMemoryManager &gt; IMemoryManagerSharedPtr</div><div class="ttdef"><b>Definition:</b> <a href="_i_backend_internal_8hpp_source.xhtml#l00097">IBackendInternal.hpp:97</a></div></div>
<div class="ttc" id="_mirror_pad_test_impl_8cpp_xhtml_aa1633acd40b4ddde36b836b1ff22b318"><div class="ttname"><a href="_mirror_pad_test_impl_8cpp.xhtml#aa1633acd40b4ddde36b836b1ff22b318">PadSymmetric2dTest</a></div><div class="ttdeci">LayerTestResult&lt; T, 2 &gt; PadSymmetric2dTest(armnn::IWorkloadFactory &amp;workloadFactory, const armnn::IBackendInternal::IMemoryManagerSharedPtr &amp;memoryManager, const armnn::ITensorHandleFactory &amp;tensorHandleFactory, float qScale, int32_t qOffset)</div><div class="ttdef"><b>Definition:</b> <a href="_mirror_pad_test_impl_8cpp_source.xhtml#l00157">MirrorPadTestImpl.cpp:157</a></div></div>
<div class="ttc" id="_mirror_pad_test_impl_8cpp_xhtml_a6ed87bbc750c92f63b9fa5d63069d163"><div class="ttname"><a href="_mirror_pad_test_impl_8cpp.xhtml#a6ed87bbc750c92f63b9fa5d63069d163">PadSymmetric4dTest</a></div><div class="ttdeci">LayerTestResult&lt; T, 4 &gt; PadSymmetric4dTest(armnn::IWorkloadFactory &amp;workloadFactory, const armnn::IBackendInternal::IMemoryManagerSharedPtr &amp;memoryManager, const armnn::ITensorHandleFactory &amp;tensorHandleFactory, float qScale, int32_t qOffset)</div><div class="ttdef"><b>Definition:</b> <a href="_mirror_pad_test_impl_8cpp_source.xhtml#l00393">MirrorPadTestImpl.cpp:393</a></div></div>
<div class="ttc" id="_mirror_pad_test_impl_8cpp_xhtml_a11c70ed3e08ff861e2d909fe5af4a6cc"><div class="ttname"><a href="_mirror_pad_test_impl_8cpp.xhtml#a11c70ed3e08ff861e2d909fe5af4a6cc">PadReflect4dFloat32Test</a></div><div class="ttdeci">LayerTestResult&lt; float, 4 &gt; PadReflect4dFloat32Test(armnn::IWorkloadFactory &amp;workloadFactory, const armnn::IBackendInternal::IMemoryManagerSharedPtr &amp;memoryManager, const armnn::ITensorHandleFactory &amp;tensorHandleFactory)</div><div class="ttdef"><b>Definition:</b> <a href="_mirror_pad_test_impl_8cpp_source.xhtml#l01010">MirrorPadTestImpl.cpp:1010</a></div></div>
<div class="ttc" id="namespacearmnn_xhtml_ad8ed01ff3ff33333d8e19db4d2818bb6a26e6ed77470c6f2f830ecf874e6c0d55"><div class="ttname"><a href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a26e6ed77470c6f2f830ecf874e6c0d55">armnn::DataType::Float16</a></div></div>
<div class="ttc" id="namespacearmnn_xhtml_a56943a0946e5f15e5e58054b8e7a04a4ade43468adaf6acb2c38ebc0c1176f82f"><div class="ttname"><a href="namespacearmnn.xhtml#a56943a0946e5f15e5e58054b8e7a04a4ade43468adaf6acb2c38ebc0c1176f82f">armnn::LayerType::Pad</a></div></div>
<div class="ttc" id="include_2armnn_test_utils_2_tensor_copy_utils_8hpp_xhtml_ab5dfed8358e500ed523d78090ec78e88"><div class="ttname"><a href="include_2armnn_test_utils_2_tensor_copy_utils_8hpp.xhtml#ab5dfed8358e500ed523d78090ec78e88">CopyDataFromITensorHandle</a></div><div class="ttdeci">void CopyDataFromITensorHandle(void *mem, const armnn::ITensorHandle *tensorHandle)</div><div class="ttdef"><b>Definition:</b> <a href="_tensor_copy_utils_8cpp_source.xhtml#l00014">TensorCopyUtils.cpp:14</a></div></div>
<div class="ttc" id="_mirror_pad_test_impl_8cpp_xhtml_accc387f1eb674e3254618f933bf69da3"><div class="ttname"><a href="_mirror_pad_test_impl_8cpp.xhtml#accc387f1eb674e3254618f933bf69da3">PadReflectFloat16</a></div><div class="ttdeci">LayerTestResult&lt; armnn::Half, 2 &gt; PadReflectFloat16(armnn::IWorkloadFactory &amp;workloadFactory, const armnn::IBackendInternal::IMemoryManagerSharedPtr &amp;memoryManager, const armnn::ITensorHandleFactory &amp;tensorHandleFactory)</div><div class="ttdef"><b>Definition:</b> <a href="_mirror_pad_test_impl_8cpp_source.xhtml#l00887">MirrorPadTestImpl.cpp:887</a></div></div>
<div class="ttc" id="namespacearmnn_xhtml_a14d24d90ab4ba2956e92e27890ba4c91"><div class="ttname"><a href="namespacearmnn.xhtml#a14d24d90ab4ba2956e92e27890ba4c91">armnn::PaddingMode</a></div><div class="ttdeci">PaddingMode</div><div class="ttdoc">The padding mode controls whether the padding should be filled with constant values (Constant)...</div><div class="ttdef"><b>Definition:</b> <a href="_types_8hpp_source.xhtml#l00186">Types.hpp:186</a></div></div>
<div class="ttc" id="namespacearmnn_xhtml_a14d24d90ab4ba2956e92e27890ba4c91a74de3e45e4491e956e8dc18d841d9b00"><div class="ttname"><a href="namespacearmnn.xhtml#a14d24d90ab4ba2956e92e27890ba4c91a74de3e45e4491e956e8dc18d841d9b00">armnn::PaddingMode::Reflect</a></div></div>
<div class="ttc" id="_mirror_pad_test_impl_8cpp_xhtml_af17d488270e115dbf0740f1eeba4f4ef"><div class="ttname"><a href="_mirror_pad_test_impl_8cpp.xhtml#af17d488270e115dbf0740f1eeba4f4ef">PadSymmetric3dUint8Test</a></div><div class="ttdeci">LayerTestResult&lt; uint8_t, 3 &gt; PadSymmetric3dUint8Test(armnn::IWorkloadFactory &amp;workloadFactory, const armnn::IBackendInternal::IMemoryManagerSharedPtr &amp;memoryManager, const armnn::ITensorHandleFactory &amp;tensorHandleFactory)</div><div class="ttdef"><b>Definition:</b> <a href="_mirror_pad_test_impl_8cpp_source.xhtml#l00969">MirrorPadTestImpl.cpp:969</a></div></div>
<div class="ttc" id="structarmnn_1_1_pad_descriptor_xhtml_a66f2c989f51ab6116de4380390250b69"><div class="ttname"><a href="structarmnn_1_1_pad_descriptor.xhtml#a66f2c989f51ab6116de4380390250b69">armnn::PadDescriptor::m_PaddingMode</a></div><div class="ttdeci">PaddingMode m_PaddingMode</div><div class="ttdoc">Specifies the Padding mode (Constant, Reflect or Symmetric) </div><div class="ttdef"><b>Definition:</b> <a href="_descriptors_8hpp_source.xhtml#l01205">Descriptors.hpp:1205</a></div></div>
<div class="ttc" id="include_2armnn_test_utils_2_tensor_helpers_8hpp_xhtml"><div class="ttname"><a href="include_2armnn_test_utils_2_tensor_helpers_8hpp.xhtml">TensorHelpers.hpp</a></div></div>
<div class="ttc" id="_mirror_pad_test_impl_8cpp_xhtml_ac9e2a9934eea3a4adc8f5fe436e9882b"><div class="ttname"><a href="_mirror_pad_test_impl_8cpp.xhtml#ac9e2a9934eea3a4adc8f5fe436e9882b">PadSymmetric4dBFloat16Test</a></div><div class="ttdeci">LayerTestResult&lt; armnn::BFloat16, 4 &gt; PadSymmetric4dBFloat16Test(armnn::IWorkloadFactory &amp;workloadFactory, const armnn::IBackendInternal::IMemoryManagerSharedPtr &amp;memoryManager, const armnn::ITensorHandleFactory &amp;tensorHandleFactory)</div><div class="ttdef"><b>Definition:</b> <a href="_mirror_pad_test_impl_8cpp_source.xhtml#l01018">MirrorPadTestImpl.cpp:1018</a></div></div>
<div class="ttc" id="_mirror_pad_test_impl_8cpp_xhtml_a7f0cee3cad0201f75d03fc3cdb3056cf"><div class="ttname"><a href="_mirror_pad_test_impl_8cpp.xhtml#a7f0cee3cad0201f75d03fc3cdb3056cf">PadSymmetric4dFloat32Test</a></div><div class="ttdeci">LayerTestResult&lt; float, 4 &gt; PadSymmetric4dFloat32Test(armnn::IWorkloadFactory &amp;workloadFactory, const armnn::IBackendInternal::IMemoryManagerSharedPtr &amp;memoryManager, const armnn::ITensorHandleFactory &amp;tensorHandleFactory)</div><div class="ttdef"><b>Definition:</b> <a href="_mirror_pad_test_impl_8cpp_source.xhtml#l01002">MirrorPadTestImpl.cpp:1002</a></div></div>
<div class="ttc" id="_mirror_pad_test_impl_8cpp_xhtml_af8fb767f5aa216ade8b4cca88c23ceb9"><div class="ttname"><a href="_mirror_pad_test_impl_8cpp.xhtml#af8fb767f5aa216ade8b4cca88c23ceb9">PadReflect2dFloat32Test</a></div><div class="ttdeci">LayerTestResult&lt; float, 2 &gt; PadReflect2dFloat32Test(armnn::IWorkloadFactory &amp;workloadFactory, const armnn::IBackendInternal::IMemoryManagerSharedPtr &amp;memoryManager, const armnn::ITensorHandleFactory &amp;tensorHandleFactory)</div><div class="ttdef"><b>Definition:</b> <a href="_mirror_pad_test_impl_8cpp_source.xhtml#l00945">MirrorPadTestImpl.cpp:945</a></div></div>
<div class="ttc" id="include_2armnn_test_utils_2_tensor_copy_utils_8hpp_xhtml_ae15f1a3c55d2db87683577de9fa4437c"><div class="ttname"><a href="include_2armnn_test_utils_2_tensor_copy_utils_8hpp.xhtml#ae15f1a3c55d2db87683577de9fa4437c">CopyDataToITensorHandle</a></div><div class="ttdeci">void CopyDataToITensorHandle(armnn::ITensorHandle *tensorHandle, const void *memory)</div><div class="ttdef"><b>Definition:</b> <a href="_tensor_copy_utils_8cpp_source.xhtml#l00009">TensorCopyUtils.cpp:9</a></div></div>
<div class="ttc" id="classarmnn_1_1_i_tensor_handle_factory_xhtml"><div class="ttname"><a href="classarmnn_1_1_i_tensor_handle_factory.xhtml">armnn::ITensorHandleFactory</a></div><div class="ttdef"><b>Definition:</b> <a href="include_2armnn_2backends_2_i_tensor_handle_factory_8hpp_source.xhtml#l00042">ITensorHandleFactory.hpp:42</a></div></div>
<div class="ttc" id="_mirror_pad_test_impl_8cpp_xhtml_a15eb17ed91f7ce1f053574938fc011d1"><div class="ttname"><a href="_mirror_pad_test_impl_8cpp.xhtml#a15eb17ed91f7ce1f053574938fc011d1">PadSymmetricFloat16Test</a></div><div class="ttdeci">LayerTestResult&lt; armnn::Half, 2 &gt; PadSymmetricFloat16Test(armnn::IWorkloadFactory &amp;workloadFactory, const armnn::IBackendInternal::IMemoryManagerSharedPtr &amp;memoryManager, const armnn::ITensorHandleFactory &amp;tensorHandleFactory)</div><div class="ttdef"><b>Definition:</b> <a href="_mirror_pad_test_impl_8cpp_source.xhtml#l01083">MirrorPadTestImpl.cpp:1083</a></div></div>
<div class="ttc" id="_mirror_pad_test_impl_8cpp_xhtml_a03a9c73cb5fc1bde7ecfed8474255cf6"><div class="ttname"><a href="_mirror_pad_test_impl_8cpp.xhtml#a03a9c73cb5fc1bde7ecfed8474255cf6">PadReflect3dFloat32Test</a></div><div class="ttdeci">LayerTestResult&lt; float, 3 &gt; PadReflect3dFloat32Test(armnn::IWorkloadFactory &amp;workloadFactory, const armnn::IBackendInternal::IMemoryManagerSharedPtr &amp;memoryManager, const armnn::ITensorHandleFactory &amp;tensorHandleFactory)</div><div class="ttdef"><b>Definition:</b> <a href="_mirror_pad_test_impl_8cpp_source.xhtml#l00961">MirrorPadTestImpl.cpp:961</a></div></div>
<div class="ttc" id="structarmnn_1_1_workload_info_xhtml"><div class="ttname"><a href="structarmnn_1_1_workload_info.xhtml">armnn::WorkloadInfo</a></div><div class="ttdoc">Contains information about TensorInfos of a layer. </div><div class="ttdef"><b>Definition:</b> <a href="include_2armnn_2backends_2_workload_info_8hpp_source.xhtml#l00016">WorkloadInfo.hpp:16</a></div></div>
<div class="ttc" id="struct_layer_test_result_xhtml"><div class="ttname"><a href="struct_layer_test_result.xhtml">LayerTestResult</a></div><div class="ttdef"><b>Definition:</b> <a href="include_2armnn_test_utils_2_layer_test_result_8hpp_source.xhtml#l00015">LayerTestResult.hpp:15</a></div></div>
<div class="ttc" id="_mirror_pad_test_impl_8cpp_xhtml_a781ccdb03ac1cd7d3d07d531887b3c13"><div class="ttname"><a href="_mirror_pad_test_impl_8cpp.xhtml#a781ccdb03ac1cd7d3d07d531887b3c13">MirrorPad2dTestCommon</a></div><div class="ttdeci">LayerTestResult&lt; T, 2 &gt; MirrorPad2dTestCommon(armnn::IWorkloadFactory &amp;workloadFactory, const armnn::IBackendInternal::IMemoryManagerSharedPtr &amp;memoryManager, const armnn::ITensorHandleFactory &amp;tensorHandleFactory, const armnn::TensorInfo &amp;inputTensorInfo, const armnn::TensorInfo &amp;outputTensorInfo, const std::vector&lt; T &gt; &amp;inputValues, const std::vector&lt; T &gt; &amp;expectedOutputValues, const std::vector&lt; std::pair&lt; unsigned int, unsigned int &gt;&gt; &amp;padList, const armnn::PaddingMode paddingMode)</div><div class="ttdef"><b>Definition:</b> <a href="_mirror_pad_test_impl_8cpp_source.xhtml#l00020">MirrorPadTestImpl.cpp:20</a></div></div>
<div class="ttc" id="classarmnn_1_1_i_workload_factory_xhtml_a13060ebb89d2c21a7a5d897e99cccf72"><div class="ttname"><a href="classarmnn_1_1_i_workload_factory.xhtml#a13060ebb89d2c21a7a5d897e99cccf72">armnn::IWorkloadFactory::CreateWorkload</a></div><div class="ttdeci">virtual std::unique_ptr&lt; IWorkload &gt; CreateWorkload(LayerType type, const QueueDescriptor &amp;descriptor, const WorkloadInfo &amp;info) const</div><div class="ttdef"><b>Definition:</b> <a href="_workload_factory_8cpp_source.xhtml#l01559">WorkloadFactory.cpp:1559</a></div></div>
<div class="ttc" id="_mirror_pad_test_impl_8cpp_xhtml_a4400962d52cd7131e85897b3d27fe3c6"><div class="ttname"><a href="_mirror_pad_test_impl_8cpp.xhtml#a4400962d52cd7131e85897b3d27fe3c6">PadSymmetric4dInt16Test</a></div><div class="ttdeci">LayerTestResult&lt; int16_t, 4 &gt; PadSymmetric4dInt16Test(armnn::IWorkloadFactory &amp;workloadFactory, const armnn::IBackendInternal::IMemoryManagerSharedPtr &amp;memoryManager, const armnn::ITensorHandleFactory &amp;tensorHandleFactory)</div><div class="ttdef"><b>Definition:</b> <a href="_mirror_pad_test_impl_8cpp_source.xhtml#l01067">MirrorPadTestImpl.cpp:1067</a></div></div>
<div class="ttc" id="classarmnn_1_1_i_tensor_handle_factory_xhtml_a375f11dd42ff042435e8771cf287b20c"><div class="ttname"><a href="classarmnn_1_1_i_tensor_handle_factory.xhtml#a375f11dd42ff042435e8771cf287b20c">armnn::ITensorHandleFactory::CreateTensorHandle</a></div><div class="ttdeci">virtual std::unique_ptr&lt; ITensorHandle &gt; CreateTensorHandle(const TensorInfo &amp;tensorInfo) const =0</div></div>
<div class="ttc" id="_mirror_pad_test_impl_8cpp_xhtml_a2aec80b2ed03222e9ea3eaa79c952038"><div class="ttname"><a href="_mirror_pad_test_impl_8cpp.xhtml#a2aec80b2ed03222e9ea3eaa79c952038">MirrorPad3dTestCommon</a></div><div class="ttdeci">LayerTestResult&lt; T, 3 &gt; MirrorPad3dTestCommon(armnn::IWorkloadFactory &amp;workloadFactory, const armnn::IBackendInternal::IMemoryManagerSharedPtr &amp;memoryManager, const armnn::ITensorHandleFactory &amp;tensorHandleFactory, const armnn::TensorInfo &amp;inputTensorInfo, const armnn::TensorInfo &amp;outputTensorInfo, const std::vector&lt; T &gt; &amp;inputValues, const std::vector&lt; T &gt; &amp;expectedOutputValues, const std::vector&lt; std::pair&lt; unsigned int, unsigned int &gt;&gt; &amp;padList, const armnn::PaddingMode paddingMode)</div><div class="ttdef"><b>Definition:</b> <a href="_mirror_pad_test_impl_8cpp_source.xhtml#l00066">MirrorPadTestImpl.cpp:66</a></div></div>
<div class="ttc" id="include_2armnn_test_utils_2_tensor_copy_utils_8hpp_xhtml"><div class="ttname"><a href="include_2armnn_test_utils_2_tensor_copy_utils_8hpp.xhtml">TensorCopyUtils.hpp</a></div></div>
<div class="ttc" id="classarmnn_1_1_tensor_info_xhtml_a8846406ac37fbd2204f0be16ee05d5b7"><div class="ttname"><a href="classarmnn_1_1_tensor_info.xhtml#a8846406ac37fbd2204f0be16ee05d5b7">armnn::TensorInfo::GetNumElements</a></div><div class="ttdeci">unsigned int GetNumElements() const</div><div class="ttdef"><b>Definition:</b> <a href="_tensor_8hpp_source.xhtml#l00196">Tensor.hpp:196</a></div></div>
<div class="ttc" id="include_2armnn_test_utils_2_workload_test_utils_8hpp_xhtml"><div class="ttname"><a href="include_2armnn_test_utils_2_workload_test_utils_8hpp.xhtml">WorkloadTestUtils.hpp</a></div></div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="dir_68267d1309a1af8e8297ef4c3efbcdba.xhtml">src</a></li><li class="navelem"><a class="el" href="dir_0f3cdec46afbc61a1ded8e1687c9c9a0.xhtml">backends</a></li><li class="navelem"><a class="el" href="dir_797a213d7d01b98ef12d53b0820ea64e.xhtml">backendsCommon</a></li><li class="navelem"><a class="el" href="dir_28bfe507f7e135bdae07c2a6b7f66696.xhtml">test</a></li><li class="navelem"><a class="el" href="dir_99a30439342d160875b21dac3498ad7f.xhtml">layerTests</a></li><li class="navelem"><a class="el" href="_mirror_pad_test_impl_8cpp.xhtml">MirrorPadTestImpl.cpp</a></li>
    <li class="footer">Generated on Tue May 24 2022 11:27:12 for ArmNN by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.13 </li>
  </ul>
</div>
</body>
</html>
