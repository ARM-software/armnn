<!-- Copyright (c) 2020 ARM Limited. -->
<!--                                 -->
<!-- SPDX-License-Identifier: MIT    -->
<!--                                 -->
<!-- HTML header for doxygen 1.8.13-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.13"/>
<meta name="robots" content="NOINDEX, NOFOLLOW" />
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>ArmNN: ManagedConstTensorHandle Class Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script><script type="text/javascript" src="http://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="stylesheet.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <img alt="ArmNN" src="Arm_NN_horizontal_blue.png" style="max-width: 10rem; margin-top: .5rem; margin-left 10px"/>
  <td style="padding-left: 0.5em;">
   <div id="projectname">
   &#160;<span id="projectnumber">22.11</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.13 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
$(document).ready(function(){initNavTree('classarmnn_1_1_managed_const_tensor_handle.xhtml','');});
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="summary">
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="classarmnn_1_1_managed_const_tensor_handle-members.xhtml">List of all members</a>  </div>
  <div class="headertitle">
<div class="title">ManagedConstTensorHandle Class Reference</div>  </div>
</div><!--header-->
<div class="contents">

<p><code>#include &lt;<a class="el" href="_tensor_handle_8hpp_source.xhtml">TensorHandle.hpp</a>&gt;</code></p>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:a9c4705e243516ab9e98e0916da6cabd0"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_managed_const_tensor_handle.xhtml#a9c4705e243516ab9e98e0916da6cabd0">ManagedConstTensorHandle</a> (std::shared_ptr&lt; <a class="el" href="classarmnn_1_1_const_tensor_handle.xhtml">ConstTensorHandle</a> &gt; ptr)</td></tr>
<tr class="separator:a9c4705e243516ab9e98e0916da6cabd0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a85e02725184184331cc2e3b00642be47"><td class="memItemLeft" align="right" valign="top">const void *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_managed_const_tensor_handle.xhtml#a85e02725184184331cc2e3b00642be47">Map</a> (bool blocking=true)</td></tr>
<tr class="memdesc:a85e02725184184331cc2e3b00642be47"><td class="mdescLeft">&#160;</td><td class="mdescRight">RAII Managed resource Unmaps MemoryArea once out of scope.  <a href="#a85e02725184184331cc2e3b00642be47">More...</a><br /></td></tr>
<tr class="separator:a85e02725184184331cc2e3b00642be47"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4da8d00620b06b3cc6dad3924c86e964"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_managed_const_tensor_handle.xhtml#a4da8d00620b06b3cc6dad3924c86e964">ManagedConstTensorHandle</a> (const <a class="el" href="classarmnn_1_1_const_tensor_handle.xhtml">ConstTensorHandle</a> &amp;other)=delete</td></tr>
<tr class="separator:a4da8d00620b06b3cc6dad3924c86e964"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2849e5017e846906150cc291ffd8feb4"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classarmnn_1_1_managed_const_tensor_handle.xhtml">ManagedConstTensorHandle</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_managed_const_tensor_handle.xhtml#a2849e5017e846906150cc291ffd8feb4">operator=</a> (const <a class="el" href="classarmnn_1_1_managed_const_tensor_handle.xhtml">ManagedConstTensorHandle</a> &amp;other)=delete</td></tr>
<tr class="separator:a2849e5017e846906150cc291ffd8feb4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6bf42502d3ba26083e01a3caf0c7a35e"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classarmnn_1_1_managed_const_tensor_handle.xhtml">ManagedConstTensorHandle</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_managed_const_tensor_handle.xhtml#a6bf42502d3ba26083e01a3caf0c7a35e">operator=</a> (<a class="el" href="classarmnn_1_1_managed_const_tensor_handle.xhtml">ManagedConstTensorHandle</a> &amp;&amp;other) noexcept=delete</td></tr>
<tr class="separator:a6bf42502d3ba26083e01a3caf0c7a35e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a476992c3e111e9555fc6ce243d35a184"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_managed_const_tensor_handle.xhtml#a476992c3e111e9555fc6ce243d35a184">~ManagedConstTensorHandle</a> ()</td></tr>
<tr class="separator:a476992c3e111e9555fc6ce243d35a184"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab2be1412c91842a072ad94759f52033e"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_managed_const_tensor_handle.xhtml#ab2be1412c91842a072ad94759f52033e">Unmap</a> ()</td></tr>
<tr class="separator:ab2be1412c91842a072ad94759f52033e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a66e8f43a5b42b500871ed96e15419567"><td class="memItemLeft" align="right" valign="top">const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_managed_const_tensor_handle.xhtml#a66e8f43a5b42b500871ed96e15419567">GetTensorInfo</a> () const</td></tr>
<tr class="separator:a66e8f43a5b42b500871ed96e15419567"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad5df0715e24ecf2d1bf3ca53212282a0"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_managed_const_tensor_handle.xhtml#ad5df0715e24ecf2d1bf3ca53212282a0">IsMapped</a> () const</td></tr>
<tr class="separator:ad5df0715e24ecf2d1bf3ca53212282a0"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock">
<p class="definition">Definition at line <a class="el" href="_tensor_handle_8hpp_source.xhtml#l00187">187</a> of file <a class="el" href="_tensor_handle_8hpp_source.xhtml">TensorHandle.hpp</a>.</p>
</div><h2 class="groupheader">Constructor &amp; Destructor Documentation</h2>
<a id="a9c4705e243516ab9e98e0916da6cabd0"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a9c4705e243516ab9e98e0916da6cabd0">&#9670;&nbsp;</a></span>ManagedConstTensorHandle() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarmnn_1_1_managed_const_tensor_handle.xhtml">ManagedConstTensorHandle</a> </td>
          <td>(</td>
          <td class="paramtype">std::shared_ptr&lt; <a class="el" href="classarmnn_1_1_const_tensor_handle.xhtml">ConstTensorHandle</a> &gt;&#160;</td>
          <td class="paramname"><em>ptr</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">explicit</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_tensor_handle_8hpp_source.xhtml#l00191">191</a> of file <a class="el" href="_tensor_handle_8hpp_source.xhtml">TensorHandle.hpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00192"></a><span class="lineno">  192</span>&#160;        : m_Mapped(<span class="keyword">false</span>)</div><div class="line"><a name="l00193"></a><span class="lineno">  193</span>&#160;        , m_TensorHandle(std::move(ptr)) {};</div></div><!-- fragment -->
</div>
</div>
<a id="a4da8d00620b06b3cc6dad3924c86e964"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a4da8d00620b06b3cc6dad3924c86e964">&#9670;&nbsp;</a></span>ManagedConstTensorHandle() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarmnn_1_1_managed_const_tensor_handle.xhtml">ManagedConstTensorHandle</a> </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_const_tensor_handle.xhtml">ConstTensorHandle</a> &amp;&#160;</td>
          <td class="paramname"><em>other</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">delete</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a476992c3e111e9555fc6ce243d35a184"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a476992c3e111e9555fc6ce243d35a184">&#9670;&nbsp;</a></span>~ManagedConstTensorHandle()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">~<a class="el" href="classarmnn_1_1_managed_const_tensor_handle.xhtml">ManagedConstTensorHandle</a> </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_tensor_handle_8hpp_source.xhtml#l00220">220</a> of file <a class="el" href="_tensor_handle_8hpp_source.xhtml">TensorHandle.hpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00221"></a><span class="lineno">  221</span>&#160;    {</div><div class="line"><a name="l00222"></a><span class="lineno">  222</span>&#160;        <span class="comment">// Bias tensor handles need to be initialized empty before entering scope of if statement checking if enabled</span></div><div class="line"><a name="l00223"></a><span class="lineno">  223</span>&#160;        <span class="keywordflow">if</span> (m_TensorHandle)</div><div class="line"><a name="l00224"></a><span class="lineno">  224</span>&#160;        {</div><div class="line"><a name="l00225"></a><span class="lineno">  225</span>&#160;            <a class="code" href="classarmnn_1_1_managed_const_tensor_handle.xhtml#ab2be1412c91842a072ad94759f52033e">Unmap</a>();</div><div class="line"><a name="l00226"></a><span class="lineno">  226</span>&#160;        }</div><div class="line"><a name="l00227"></a><span class="lineno">  227</span>&#160;    }</div><div class="ttc" id="classarmnn_1_1_managed_const_tensor_handle_xhtml_ab2be1412c91842a072ad94759f52033e"><div class="ttname"><a href="classarmnn_1_1_managed_const_tensor_handle.xhtml#ab2be1412c91842a072ad94759f52033e">armnn::ManagedConstTensorHandle::Unmap</a></div><div class="ttdeci">void Unmap()</div><div class="ttdef"><b>Definition:</b> <a href="_tensor_handle_8hpp_source.xhtml#l00229">TensorHandle.hpp:229</a></div></div>
</div><!-- fragment -->
</div>
</div>
<h2 class="groupheader">Member Function Documentation</h2>
<a id="a66e8f43a5b42b500871ed96e15419567"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a66e8f43a5b42b500871ed96e15419567">&#9670;&nbsp;</a></span>GetTensorInfo()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a>&amp; GetTensorInfo </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_tensor_handle_8hpp_source.xhtml#l00239">239</a> of file <a class="el" href="_tensor_handle_8hpp_source.xhtml">TensorHandle.hpp</a>.</p>

<p class="reference">Referenced by <a class="el" href="_detection_post_process_layer_8cpp_source.xhtml#l00082">DetectionPostProcessLayer::ExecuteStrategy()</a>, <a class="el" href="_constant_layer_8cpp_source.xhtml#l00065">ConstantLayer::ExecuteStrategy()</a>, <a class="el" href="_batch_normalization_layer_8cpp_source.xhtml#l00074">BatchNormalizationLayer::ExecuteStrategy()</a>, <a class="el" href="_transpose_convolution2d_layer_8cpp_source.xhtml#l00125">TransposeConvolution2dLayer::ExecuteStrategy()</a>, <a class="el" href="_lstm_layer_8cpp_source.xhtml#l00304">LstmLayer::ExecuteStrategy()</a>, <a class="el" href="_unidirectional_sequence_lstm_layer_8cpp_source.xhtml#l00311">UnidirectionalSequenceLstmLayer::ExecuteStrategy()</a>, <a class="el" href="_quantized_lstm_layer_8cpp_source.xhtml#l00173">QuantizedLstmLayer::ExecuteStrategy()</a>, and <a class="el" href="_q_lstm_layer_8cpp_source.xhtml#l00307">QLstmLayer::ExecuteStrategy()</a>.</p>
<div class="fragment"><div class="line"><a name="l00240"></a><span class="lineno">  240</span>&#160;    {</div><div class="line"><a name="l00241"></a><span class="lineno">  241</span>&#160;        <span class="keywordflow">return</span> m_TensorHandle-&gt;GetTensorInfo();</div><div class="line"><a name="l00242"></a><span class="lineno">  242</span>&#160;    }</div></div><!-- fragment -->
</div>
</div>
<a id="ad5df0715e24ecf2d1bf3ca53212282a0"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ad5df0715e24ecf2d1bf3ca53212282a0">&#9670;&nbsp;</a></span>IsMapped()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool IsMapped </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_tensor_handle_8hpp_source.xhtml#l00244">244</a> of file <a class="el" href="_tensor_handle_8hpp_source.xhtml">TensorHandle.hpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00245"></a><span class="lineno">  245</span>&#160;    {</div><div class="line"><a name="l00246"></a><span class="lineno">  246</span>&#160;        <span class="keywordflow">return</span> m_Mapped;</div><div class="line"><a name="l00247"></a><span class="lineno">  247</span>&#160;    }</div></div><!-- fragment -->
</div>
</div>
<a id="a85e02725184184331cc2e3b00642be47"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a85e02725184184331cc2e3b00642be47">&#9670;&nbsp;</a></span>Map()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">const void* Map </td>
          <td>(</td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>blocking</em> = <code>true</code></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>RAII Managed resource Unmaps MemoryArea once out of scope. </p>

<p class="definition">Definition at line <a class="el" href="_tensor_handle_8hpp_source.xhtml#l00196">196</a> of file <a class="el" href="_tensor_handle_8hpp_source.xhtml">TensorHandle.hpp</a>.</p>

<p class="reference">Referenced by <a class="el" href="_detection_post_process_layer_8cpp_source.xhtml#l00082">DetectionPostProcessLayer::ExecuteStrategy()</a>, <a class="el" href="_constant_layer_8cpp_source.xhtml#l00065">ConstantLayer::ExecuteStrategy()</a>, <a class="el" href="_batch_normalization_layer_8cpp_source.xhtml#l00074">BatchNormalizationLayer::ExecuteStrategy()</a>, <a class="el" href="_transpose_convolution2d_layer_8cpp_source.xhtml#l00125">TransposeConvolution2dLayer::ExecuteStrategy()</a>, <a class="el" href="_lstm_layer_8cpp_source.xhtml#l00304">LstmLayer::ExecuteStrategy()</a>, <a class="el" href="_unidirectional_sequence_lstm_layer_8cpp_source.xhtml#l00311">UnidirectionalSequenceLstmLayer::ExecuteStrategy()</a>, <a class="el" href="_quantized_lstm_layer_8cpp_source.xhtml#l00173">QuantizedLstmLayer::ExecuteStrategy()</a>, and <a class="el" href="_q_lstm_layer_8cpp_source.xhtml#l00307">QLstmLayer::ExecuteStrategy()</a>.</p>
<div class="fragment"><div class="line"><a name="l00197"></a><span class="lineno">  197</span>&#160;    {</div><div class="line"><a name="l00198"></a><span class="lineno">  198</span>&#160;        <span class="keywordflow">if</span> (m_TensorHandle)</div><div class="line"><a name="l00199"></a><span class="lineno">  199</span>&#160;        {</div><div class="line"><a name="l00200"></a><span class="lineno">  200</span>&#160;            <span class="keyword">auto</span> pRet = m_TensorHandle-&gt;Map(blocking);</div><div class="line"><a name="l00201"></a><span class="lineno">  201</span>&#160;            m_Mapped = <span class="keyword">true</span>;</div><div class="line"><a name="l00202"></a><span class="lineno">  202</span>&#160;            <span class="keywordflow">return</span> pRet;</div><div class="line"><a name="l00203"></a><span class="lineno">  203</span>&#160;        }</div><div class="line"><a name="l00204"></a><span class="lineno">  204</span>&#160;        <span class="keywordflow">else</span></div><div class="line"><a name="l00205"></a><span class="lineno">  205</span>&#160;        {</div><div class="line"><a name="l00206"></a><span class="lineno">  206</span>&#160;            <span class="keywordflow">throw</span> <a class="code" href="classarmnn_1_1_exception.xhtml">armnn::Exception</a>(<span class="stringliteral">&quot;Attempting to Map null TensorHandle&quot;</span>);</div><div class="line"><a name="l00207"></a><span class="lineno">  207</span>&#160;        }</div><div class="line"><a name="l00208"></a><span class="lineno">  208</span>&#160;</div><div class="line"><a name="l00209"></a><span class="lineno">  209</span>&#160;    }</div><div class="ttc" id="classarmnn_1_1_exception_xhtml"><div class="ttname"><a href="classarmnn_1_1_exception.xhtml">armnn::Exception</a></div><div class="ttdoc">Base class for all ArmNN exceptions so that users can filter to just those. </div><div class="ttdef"><b>Definition:</b> <a href="_exceptions_8hpp_source.xhtml#l00046">Exceptions.hpp:46</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="a2849e5017e846906150cc291ffd8feb4"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a2849e5017e846906150cc291ffd8feb4">&#9670;&nbsp;</a></span>operator=() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarmnn_1_1_managed_const_tensor_handle.xhtml">ManagedConstTensorHandle</a>&amp; operator= </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_managed_const_tensor_handle.xhtml">ManagedConstTensorHandle</a> &amp;&#160;</td>
          <td class="paramname"><em>other</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">delete</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a6bf42502d3ba26083e01a3caf0c7a35e"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a6bf42502d3ba26083e01a3caf0c7a35e">&#9670;&nbsp;</a></span>operator=() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarmnn_1_1_managed_const_tensor_handle.xhtml">ManagedConstTensorHandle</a>&amp; operator= </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classarmnn_1_1_managed_const_tensor_handle.xhtml">ManagedConstTensorHandle</a> &amp;&amp;&#160;</td>
          <td class="paramname"><em>other</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">delete</span><span class="mlabel">noexcept</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="ab2be1412c91842a072ad94759f52033e"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ab2be1412c91842a072ad94759f52033e">&#9670;&nbsp;</a></span>Unmap()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void Unmap </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_tensor_handle_8hpp_source.xhtml#l00229">229</a> of file <a class="el" href="_tensor_handle_8hpp_source.xhtml">TensorHandle.hpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00230"></a><span class="lineno">  230</span>&#160;    {</div><div class="line"><a name="l00231"></a><span class="lineno">  231</span>&#160;        <span class="comment">// Only unmap if mapped and TensorHandle exists.</span></div><div class="line"><a name="l00232"></a><span class="lineno">  232</span>&#160;        <span class="keywordflow">if</span> (m_Mapped &amp;&amp; m_TensorHandle)</div><div class="line"><a name="l00233"></a><span class="lineno">  233</span>&#160;        {</div><div class="line"><a name="l00234"></a><span class="lineno">  234</span>&#160;            m_TensorHandle-&gt;Unmap();</div><div class="line"><a name="l00235"></a><span class="lineno">  235</span>&#160;            m_Mapped = <span class="keyword">false</span>;</div><div class="line"><a name="l00236"></a><span class="lineno">  236</span>&#160;        }</div><div class="line"><a name="l00237"></a><span class="lineno">  237</span>&#160;    }</div></div><!-- fragment -->
</div>
</div>
<hr/>The documentation for this class was generated from the following file:<ul>
<li>include/armnn/backends/<a class="el" href="_tensor_handle_8hpp_source.xhtml">TensorHandle.hpp</a></li>
</ul>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="namespacearmnn.xhtml">armnn</a></li><li class="navelem"><a class="el" href="classarmnn_1_1_managed_const_tensor_handle.xhtml">ManagedConstTensorHandle</a></li>
    <li class="footer">Generated on Wed Nov 23 2022 10:57:41 for ArmNN by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.13 </li>
  </ul>
</div>
</body>
</html>
