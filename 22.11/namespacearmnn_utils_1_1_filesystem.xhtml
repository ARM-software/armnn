<!-- Copyright (c) 2020 ARM Limited. -->
<!--                                 -->
<!-- SPDX-License-Identifier: MIT    -->
<!--                                 -->
<!-- HTML header for doxygen 1.8.13-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.13"/>
<meta name="robots" content="NOINDEX, NOFOLLOW" />
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>ArmNN: armnnUtils::Filesystem Namespace Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script><script type="text/javascript" src="http://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="stylesheet.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <img alt="ArmNN" src="Arm_NN_horizontal_blue.png" style="max-width: 10rem; margin-top: .5rem; margin-left 10px"/>
  <td style="padding-left: 0.5em;">
   <div id="projectname">
   &#160;<span id="projectnumber">22.11</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.13 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
$(document).ready(function(){initNavTree('namespacearmnn_utils_1_1_filesystem.xhtml','');});
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="summary">
<a href="#typedef-members">Typedefs</a> &#124;
<a href="#func-members">Functions</a>  </div>
  <div class="headertitle">
<div class="title">armnnUtils::Filesystem Namespace Reference</div>  </div>
</div><!--header-->
<div class="contents">
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="typedef-members"></a>
Typedefs</h2></td></tr>
<tr class="memitem:ac43ab637ed192811c3b20c71990fd871"><td class="memItemLeft" align="right" valign="top">using&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearmnn_utils_1_1_filesystem.xhtml#ac43ab637ed192811c3b20c71990fd871">FileContents</a> = std::string</td></tr>
<tr class="separator:ac43ab637ed192811c3b20c71990fd871"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="func-members"></a>
Functions</h2></td></tr>
<tr class="memitem:a606d65835d72a332109c3c9f96a01b8a"><td class="memItemLeft" align="right" valign="top">fs::path&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearmnn_utils_1_1_filesystem.xhtml#a606d65835d72a332109c3c9f96a01b8a">NamedTempFile</a> (const char *fileName)</td></tr>
<tr class="memdesc:a606d65835d72a332109c3c9f96a01b8a"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns a path to a file in the system temporary folder. If the file existed it will be deleted.  <a href="#a606d65835d72a332109c3c9f96a01b8a">More...</a><br /></td></tr>
<tr class="separator:a606d65835d72a332109c3c9f96a01b8a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0477efb2c6f5b41fbfe937fef6db312d"><td class="memItemLeft" align="right" valign="top">std::string&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearmnn_utils_1_1_filesystem.xhtml#a0477efb2c6f5b41fbfe937fef6db312d">CreateDirectory</a> (std::string sPath)</td></tr>
<tr class="memdesc:a0477efb2c6f5b41fbfe937fef6db312d"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns full path to temporary folder.  <a href="#a0477efb2c6f5b41fbfe937fef6db312d">More...</a><br /></td></tr>
<tr class="separator:a0477efb2c6f5b41fbfe937fef6db312d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2bd6cbe2f39dd0507fb6ef5798e3bfe7"><td class="memItemLeft" align="right" valign="top"><a class="el" href="namespacearmnn_utils_1_1_filesystem.xhtml#ac43ab637ed192811c3b20c71990fd871">FileContents</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearmnn_utils_1_1_filesystem.xhtml#a2bd6cbe2f39dd0507fb6ef5798e3bfe7">ReadFileContentsIntoString</a> (const std::string path)</td></tr>
<tr class="separator:a2bd6cbe2f39dd0507fb6ef5798e3bfe7"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<h2 class="groupheader">Typedef Documentation</h2>
<a id="ac43ab637ed192811c3b20c71990fd871"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ac43ab637ed192811c3b20c71990fd871">&#9670;&nbsp;</a></span>FileContents</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">using <a class="el" href="namespacearmnn_utils_1_1_filesystem.xhtml#ac43ab637ed192811c3b20c71990fd871">FileContents</a> =  std::string</td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_filesystem_8hpp_source.xhtml#l00022">22</a> of file <a class="el" href="_filesystem_8hpp_source.xhtml">Filesystem.hpp</a>.</p>

</div>
</div>
<h2 class="groupheader">Function Documentation</h2>
<a id="a0477efb2c6f5b41fbfe937fef6db312d"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a0477efb2c6f5b41fbfe937fef6db312d">&#9670;&nbsp;</a></span>CreateDirectory()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">std::string CreateDirectory </td>
          <td>(</td>
          <td class="paramtype">std::string&#160;</td>
          <td class="paramname"><em>path</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Returns full path to temporary folder. </p>
<p>Construct a temporary directory.</p>
<p>Given a specified directory name construct a path in the system temporary directory. If the directory already exists, it is deleted, otherwise create it. This could throw filesystem_error exceptions.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">path</td><td>is the path required in the temporary directory. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>path consisting of system temporary directory. </dd></dl>

<p class="definition">Definition at line <a class="el" href="_filesystem_8cpp_source.xhtml#l00046">46</a> of file <a class="el" href="_filesystem_8cpp_source.xhtml">Filesystem.cpp</a>.</p>

<p class="reference">Referenced by <a class="el" href="_network_8cpp_source.xhtml#l01653">armnn::Optimize()</a>.</p>
<div class="fragment"><div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;{</div><div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;    fs::path tmpDir = fs::temp_directory_path();</div><div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;    mode_t permissions = 0733;</div><div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;    <span class="keywordtype">int</span> result = 0;</div><div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;</div><div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;    std::string full_path = tmpDir.generic_string() + path;</div><div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;    <span class="keywordflow">if</span> (fs::exists(full_path))</div><div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;    {</div><div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;        fs::remove_all(full_path);</div><div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;    }</div><div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;</div><div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;<span class="preprocessor">#if defined(_WIN32)</span></div><div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;    result = _mkdir(full_path.c_str()); <span class="comment">// can be used on Windows</span></div><div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;    armnn::ConditionalThrow&lt;armnn::RuntimeException&gt;((result == 0), <span class="stringliteral">&quot;Was unable to create temporary directory&quot;</span>);</div><div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;<span class="preprocessor">#else</span></div><div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;    result = mkdir(full_path.c_str(), permissions);</div><div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;    armnn::ConditionalThrow&lt;armnn::RuntimeException&gt;((result == 0), <span class="stringliteral">&quot;Was unable to create temporary directory&quot;</span>);</div><div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;<span class="preprocessor">#endif</span></div><div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;</div><div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;    <span class="keywordflow">return</span> full_path + <span class="stringliteral">&quot;/&quot;</span>;</div><div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;}</div></div><!-- fragment -->
</div>
</div>
<a id="a606d65835d72a332109c3c9f96a01b8a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a606d65835d72a332109c3c9f96a01b8a">&#9670;&nbsp;</a></span>NamedTempFile()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">fs::path NamedTempFile </td>
          <td>(</td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>fileName</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Returns a path to a file in the system temporary folder. If the file existed it will be deleted. </p>
<p>Construct a temporary file name.</p>
<p>Given a specified file name construct a path to that file in the system temporary directory. If the file already exists it is deleted. This could throw filesystem_error exceptions.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">fileName</td><td>the file name required in the temporary directory. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>path consisting of system temporary directory and file name. </dd></dl>

<p class="definition">Definition at line <a class="el" href="_filesystem_8cpp_source.xhtml#l00025">25</a> of file <a class="el" href="_filesystem_8cpp_source.xhtml">Filesystem.cpp</a>.</p>

<p class="reference">Referenced by <a class="el" href="_j_s_o_n_timeline_decoder_tests_8cpp_source.xhtml#l00015">TEST_SUITE()</a>.</p>
<div class="fragment"><div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;{</div><div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;    fs::path tmpDir = fs::temp_directory_path();</div><div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;    fs::path namedTempFile{tmpDir / fileName};</div><div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;    <span class="keywordflow">if</span> (fs::exists(namedTempFile))</div><div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;    {</div><div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;        fs::remove(namedTempFile);</div><div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;    }</div><div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;    <span class="keywordflow">return</span> namedTempFile;</div><div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;}</div></div><!-- fragment -->
</div>
</div>
<a id="a2bd6cbe2f39dd0507fb6ef5798e3bfe7"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a2bd6cbe2f39dd0507fb6ef5798e3bfe7">&#9670;&nbsp;</a></span>ReadFileContentsIntoString()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="namespacearmnn_utils_1_1_filesystem.xhtml#ac43ab637ed192811c3b20c71990fd871">FileContents</a> ReadFileContentsIntoString </td>
          <td>(</td>
          <td class="paramtype">const std::string&#160;</td>
          <td class="paramname"><em>path</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_filesystem_8cpp_source.xhtml#l00069">69</a> of file <a class="el" href="_filesystem_8cpp_source.xhtml">Filesystem.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;                                                              {</div><div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;    std::ifstream input_file(path);</div><div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;    armnn::ConditionalThrow&lt;armnn::RuntimeException&gt;((input_file.is_open()), <span class="stringliteral">&quot;Could not read file contents&quot;</span>);</div><div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="namespacearmnn_utils_1_1_filesystem.xhtml#ac43ab637ed192811c3b20c71990fd871">FileContents</a>((std::istreambuf_iterator&lt;char&gt;(input_file)), std::istreambuf_iterator&lt;char&gt;());</div><div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;}</div><div class="ttc" id="namespacearmnn_utils_1_1_filesystem_xhtml_ac43ab637ed192811c3b20c71990fd871"><div class="ttname"><a href="namespacearmnn_utils_1_1_filesystem.xhtml#ac43ab637ed192811c3b20c71990fd871">armnnUtils::Filesystem::FileContents</a></div><div class="ttdeci">std::string FileContents</div><div class="ttdef"><b>Definition:</b> <a href="_filesystem_8hpp_source.xhtml#l00022">Filesystem.hpp:22</a></div></div>
</div><!-- fragment -->
</div>
</div>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="namespacearmnn_utils.xhtml">armnnUtils</a></li><li class="navelem"><a class="el" href="namespacearmnn_utils_1_1_filesystem.xhtml">Filesystem</a></li>
    <li class="footer">Generated on Wed Nov 23 2022 10:57:43 for ArmNN by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.13 </li>
  </ul>
</div>
</body>
</html>
