<!-- Copyright (c) 2020 ARM Limited. -->
<!--                                 -->
<!-- SPDX-License-Identifier: MIT    -->
<!--                                 -->
<!-- HTML header for doxygen 1.8.13-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.13"/>
<meta name="robots" content="NOINDEX, NOFOLLOW" />
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>ArmNN: src/backends/aclCommon/test/MemCopyTests.cpp File Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script><script type="text/javascript" src="http://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="stylesheet.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <img alt="ArmNN" src="Arm_NN_horizontal_blue.png" style="max-width: 10rem; margin-top: .5rem; margin-left 10px"/>
  <td style="padding-left: 0.5em;">
   <div id="projectname">
   &#160;<span id="projectnumber">22.02</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.13 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
$(document).ready(function(){initNavTree('_mem_copy_tests_8cpp.xhtml','');});
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="summary">
<a href="#func-members">Functions</a>  </div>
  <div class="headertitle">
<div class="title">MemCopyTests.cpp File Reference</div>  </div>
</div><!--header-->
<div class="contents">
<div class="textblock"><code>#include &lt;<a class="el" href="_arm_compute_tensor_utils_8hpp_source.xhtml">aclCommon/ArmComputeTensorUtils.hpp</a>&gt;</code><br />
<code>#include &lt;<a class="el" href="include_2armnn_test_utils_2_layer_test_result_8hpp_source.xhtml">armnnTestUtils/LayerTestResult.hpp</a>&gt;</code><br />
<code>#include &lt;<a class="el" href="include_2armnn_test_utils_2_mem_copy_test_impl_8hpp_source.xhtml">armnnTestUtils/MemCopyTestImpl.hpp</a>&gt;</code><br />
<code>#include &lt;<a class="el" href="_cl_workload_factory_8hpp_source.xhtml">cl/ClWorkloadFactory.hpp</a>&gt;</code><br />
<code>#include &lt;<a class="el" href="_cl_context_control_fixture_8hpp_source.xhtml">cl/test/ClContextControlFixture.hpp</a>&gt;</code><br />
<code>#include &lt;<a class="el" href="_cl_workload_factory_helper_8hpp_source.xhtml">cl/test/ClWorkloadFactoryHelper.hpp</a>&gt;</code><br />
<code>#include &lt;<a class="el" href="_neon_workload_factory_8hpp_source.xhtml">neon/NeonWorkloadFactory.hpp</a>&gt;</code><br />
<code>#include &lt;<a class="el" href="_neon_workload_factory_helper_8hpp_source.xhtml">neon/test/NeonWorkloadFactoryHelper.hpp</a>&gt;</code><br />
<code>#include &lt;doctest/doctest.h&gt;</code><br />
</div>
<p><a href="_mem_copy_tests_8cpp_source.xhtml">Go to the source code of this file.</a></p>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="func-members"></a>
Functions</h2></td></tr>
<tr class="memitem:a1f6e124393446411ad61ebe3cb5cc5d5"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_mem_copy_tests_8cpp.xhtml#a1f6e124393446411ad61ebe3cb5cc5d5">TEST_SUITE</a> (&quot;MemCopyCommon&quot;)</td></tr>
<tr class="separator:a1f6e124393446411ad61ebe3cb5cc5d5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3df1acc0ccc35bce0bd6c027e23e2c45"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_mem_copy_tests_8cpp.xhtml#a3df1acc0ccc35bce0bd6c027e23e2c45">TEST_CASE_FIXTURE</a> (<a class="el" href="_cl_context_control_fixture_8hpp.xhtml#ab41dc82879148bd7da5e19a2df965988">ClContextControlFixture</a>, &quot;CopyBetweenNeonAndGpu&quot;)</td></tr>
<tr class="separator:a3df1acc0ccc35bce0bd6c027e23e2c45"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7684297645bd4dec8f023df011488f83"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_mem_copy_tests_8cpp.xhtml#a7684297645bd4dec8f023df011488f83">TEST_CASE_FIXTURE</a> (<a class="el" href="_cl_context_control_fixture_8hpp.xhtml#ab41dc82879148bd7da5e19a2df965988">ClContextControlFixture</a>, &quot;CopyBetweenGpuAndNeon&quot;)</td></tr>
<tr class="separator:a7684297645bd4dec8f023df011488f83"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae0e295107ddc573749371ffde2df6177"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_mem_copy_tests_8cpp.xhtml#ae0e295107ddc573749371ffde2df6177">TEST_CASE_FIXTURE</a> (<a class="el" href="_cl_context_control_fixture_8hpp.xhtml#ab41dc82879148bd7da5e19a2df965988">ClContextControlFixture</a>, &quot;CopyBetweenNeonAndGpuWithSubtensors&quot;)</td></tr>
<tr class="separator:ae0e295107ddc573749371ffde2df6177"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a737d4ca6de9c0aba68ee2a34681a1ca0"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_mem_copy_tests_8cpp.xhtml#a737d4ca6de9c0aba68ee2a34681a1ca0">TEST_CASE_FIXTURE</a> (<a class="el" href="_cl_context_control_fixture_8hpp.xhtml#ab41dc82879148bd7da5e19a2df965988">ClContextControlFixture</a>, &quot;CopyBetweenGpuAndNeonWithSubtensors&quot;)</td></tr>
<tr class="separator:a737d4ca6de9c0aba68ee2a34681a1ca0"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<h2 class="groupheader">Function Documentation</h2>
<a id="a3df1acc0ccc35bce0bd6c027e23e2c45"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a3df1acc0ccc35bce0bd6c027e23e2c45">&#9670;&nbsp;</a></span>TEST_CASE_FIXTURE() <span class="overload">[1/4]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">TEST_CASE_FIXTURE </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="_cl_context_control_fixture_8hpp.xhtml#ab41dc82879148bd7da5e19a2df965988">ClContextControlFixture</a>&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&quot;CopyBetweenNeonAndGpu&quot;&#160;</td>
          <td class="paramname">&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_mem_copy_tests_8cpp_source.xhtml#l00089">89</a> of file <a class="el" href="_mem_copy_tests_8cpp_source.xhtml">MemCopyTests.cpp</a>.</p>

<p class="reference">References <a class="el" href="include_2armnn_test_utils_2_tensor_helpers_8hpp_source.xhtml#l00073">CompareTensors()</a>, <a class="el" href="include_2armnn_test_utils_2_layer_test_result_8hpp_source.xhtml#l00052">LayerTestResult&lt; T, n &gt;::m_ActualData</a>, <a class="el" href="include_2armnn_test_utils_2_layer_test_result_8hpp_source.xhtml#l00054">LayerTestResult&lt; T, n &gt;::m_ActualShape</a>, <a class="el" href="include_2armnn_test_utils_2_layer_test_result_8hpp_source.xhtml#l00053">LayerTestResult&lt; T, n &gt;::m_ExpectedData</a>, and <a class="el" href="include_2armnn_test_utils_2_layer_test_result_8hpp_source.xhtml#l00055">LayerTestResult&lt; T, n &gt;::m_ExpectedShape</a>.</p>

<p class="reference">Referenced by <a class="el" href="_graph_tests_8cpp_source.xhtml#l00022">TEST_SUITE()</a>.</p>
<div class="fragment"><div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;{</div><div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;    <a class="code" href="struct_layer_test_result.xhtml">LayerTestResult&lt;float, 4&gt;</a> result =</div><div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;        MemCopyTest&lt;armnn::NeonWorkloadFactory, armnn::ClWorkloadFactory, armnn::DataType::Float32&gt;(<span class="keyword">false</span>);</div><div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;    <span class="keyword">auto</span> predResult = <a class="code" href="include_2armnn_test_utils_2_tensor_helpers_8hpp.xhtml#a5fea88a1c3398e303fb83b6db155ff2d">CompareTensors</a>(result.<a class="code" href="struct_layer_test_result.xhtml#a744f7791c7f88a945817d375cd754061">m_ActualData</a>, result.<a class="code" href="struct_layer_test_result.xhtml#afe2a527d7250fb113121b70e29c6bed5">m_ExpectedData</a>,</div><div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;                                     result.<a class="code" href="struct_layer_test_result.xhtml#a74a0abe714f3fe5b9ca7023409833fb5">m_ActualShape</a>, result.<a class="code" href="struct_layer_test_result.xhtml#acd2a9d8ba7ceee9a10e3f2826cca22c1">m_ExpectedShape</a>);</div><div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;    CHECK_MESSAGE(predResult.m_Result, predResult.m_Message.str());</div><div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;}</div><div class="ttc" id="struct_layer_test_result_xhtml_acd2a9d8ba7ceee9a10e3f2826cca22c1"><div class="ttname"><a href="struct_layer_test_result.xhtml#acd2a9d8ba7ceee9a10e3f2826cca22c1">LayerTestResult::m_ExpectedShape</a></div><div class="ttdeci">armnn::TensorShape m_ExpectedShape</div><div class="ttdef"><b>Definition:</b> <a href="include_2armnn_test_utils_2_layer_test_result_8hpp_source.xhtml#l00055">LayerTestResult.hpp:55</a></div></div>
<div class="ttc" id="struct_layer_test_result_xhtml_afe2a527d7250fb113121b70e29c6bed5"><div class="ttname"><a href="struct_layer_test_result.xhtml#afe2a527d7250fb113121b70e29c6bed5">LayerTestResult::m_ExpectedData</a></div><div class="ttdeci">std::vector&lt; T &gt; m_ExpectedData</div><div class="ttdef"><b>Definition:</b> <a href="include_2armnn_test_utils_2_layer_test_result_8hpp_source.xhtml#l00053">LayerTestResult.hpp:53</a></div></div>
<div class="ttc" id="include_2armnn_test_utils_2_tensor_helpers_8hpp_xhtml_a5fea88a1c3398e303fb83b6db155ff2d"><div class="ttname"><a href="include_2armnn_test_utils_2_tensor_helpers_8hpp.xhtml#a5fea88a1c3398e303fb83b6db155ff2d">CompareTensors</a></div><div class="ttdeci">armnn::PredicateResult CompareTensors(const std::vector&lt; T &gt; &amp;actualData, const std::vector&lt; T &gt; &amp;expectedData, const armnn::TensorShape &amp;actualShape, const armnn::TensorShape &amp;expectedShape, bool compareBoolean=false, bool isDynamic=false)</div><div class="ttdef"><b>Definition:</b> <a href="include_2armnn_test_utils_2_tensor_helpers_8hpp_source.xhtml#l00073">TensorHelpers.hpp:73</a></div></div>
<div class="ttc" id="struct_layer_test_result_xhtml_a744f7791c7f88a945817d375cd754061"><div class="ttname"><a href="struct_layer_test_result.xhtml#a744f7791c7f88a945817d375cd754061">LayerTestResult::m_ActualData</a></div><div class="ttdeci">std::vector&lt; T &gt; m_ActualData</div><div class="ttdef"><b>Definition:</b> <a href="include_2armnn_test_utils_2_layer_test_result_8hpp_source.xhtml#l00052">LayerTestResult.hpp:52</a></div></div>
<div class="ttc" id="struct_layer_test_result_xhtml_a74a0abe714f3fe5b9ca7023409833fb5"><div class="ttname"><a href="struct_layer_test_result.xhtml#a74a0abe714f3fe5b9ca7023409833fb5">LayerTestResult::m_ActualShape</a></div><div class="ttdeci">armnn::TensorShape m_ActualShape</div><div class="ttdef"><b>Definition:</b> <a href="include_2armnn_test_utils_2_layer_test_result_8hpp_source.xhtml#l00054">LayerTestResult.hpp:54</a></div></div>
<div class="ttc" id="struct_layer_test_result_xhtml"><div class="ttname"><a href="struct_layer_test_result.xhtml">LayerTestResult</a></div><div class="ttdef"><b>Definition:</b> <a href="include_2armnn_test_utils_2_layer_test_result_8hpp_source.xhtml#l00015">LayerTestResult.hpp:15</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="a7684297645bd4dec8f023df011488f83"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a7684297645bd4dec8f023df011488f83">&#9670;&nbsp;</a></span>TEST_CASE_FIXTURE() <span class="overload">[2/4]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">TEST_CASE_FIXTURE </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="_cl_context_control_fixture_8hpp.xhtml#ab41dc82879148bd7da5e19a2df965988">ClContextControlFixture</a>&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&quot;CopyBetweenGpuAndNeon&quot;&#160;</td>
          <td class="paramname">&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_mem_copy_tests_8cpp_source.xhtml#l00098">98</a> of file <a class="el" href="_mem_copy_tests_8cpp_source.xhtml">MemCopyTests.cpp</a>.</p>

<p class="reference">References <a class="el" href="include_2armnn_test_utils_2_tensor_helpers_8hpp_source.xhtml#l00073">CompareTensors()</a>, <a class="el" href="include_2armnn_test_utils_2_layer_test_result_8hpp_source.xhtml#l00052">LayerTestResult&lt; T, n &gt;::m_ActualData</a>, <a class="el" href="include_2armnn_test_utils_2_layer_test_result_8hpp_source.xhtml#l00054">LayerTestResult&lt; T, n &gt;::m_ActualShape</a>, <a class="el" href="include_2armnn_test_utils_2_layer_test_result_8hpp_source.xhtml#l00053">LayerTestResult&lt; T, n &gt;::m_ExpectedData</a>, and <a class="el" href="include_2armnn_test_utils_2_layer_test_result_8hpp_source.xhtml#l00055">LayerTestResult&lt; T, n &gt;::m_ExpectedShape</a>.</p>
<div class="fragment"><div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;{</div><div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;    <a class="code" href="struct_layer_test_result.xhtml">LayerTestResult&lt;float, 4&gt;</a> result =</div><div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;        MemCopyTest&lt;armnn::ClWorkloadFactory, armnn::NeonWorkloadFactory, armnn::DataType::Float32&gt;(<span class="keyword">false</span>);</div><div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;    <span class="keyword">auto</span> predResult = <a class="code" href="include_2armnn_test_utils_2_tensor_helpers_8hpp.xhtml#a5fea88a1c3398e303fb83b6db155ff2d">CompareTensors</a>(result.<a class="code" href="struct_layer_test_result.xhtml#a744f7791c7f88a945817d375cd754061">m_ActualData</a>, result.<a class="code" href="struct_layer_test_result.xhtml#afe2a527d7250fb113121b70e29c6bed5">m_ExpectedData</a>,</div><div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;                                     result.<a class="code" href="struct_layer_test_result.xhtml#a74a0abe714f3fe5b9ca7023409833fb5">m_ActualShape</a>, result.<a class="code" href="struct_layer_test_result.xhtml#acd2a9d8ba7ceee9a10e3f2826cca22c1">m_ExpectedShape</a>);</div><div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;    CHECK_MESSAGE(predResult.m_Result, predResult.m_Message.str());</div><div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;}</div><div class="ttc" id="struct_layer_test_result_xhtml_acd2a9d8ba7ceee9a10e3f2826cca22c1"><div class="ttname"><a href="struct_layer_test_result.xhtml#acd2a9d8ba7ceee9a10e3f2826cca22c1">LayerTestResult::m_ExpectedShape</a></div><div class="ttdeci">armnn::TensorShape m_ExpectedShape</div><div class="ttdef"><b>Definition:</b> <a href="include_2armnn_test_utils_2_layer_test_result_8hpp_source.xhtml#l00055">LayerTestResult.hpp:55</a></div></div>
<div class="ttc" id="struct_layer_test_result_xhtml_afe2a527d7250fb113121b70e29c6bed5"><div class="ttname"><a href="struct_layer_test_result.xhtml#afe2a527d7250fb113121b70e29c6bed5">LayerTestResult::m_ExpectedData</a></div><div class="ttdeci">std::vector&lt; T &gt; m_ExpectedData</div><div class="ttdef"><b>Definition:</b> <a href="include_2armnn_test_utils_2_layer_test_result_8hpp_source.xhtml#l00053">LayerTestResult.hpp:53</a></div></div>
<div class="ttc" id="include_2armnn_test_utils_2_tensor_helpers_8hpp_xhtml_a5fea88a1c3398e303fb83b6db155ff2d"><div class="ttname"><a href="include_2armnn_test_utils_2_tensor_helpers_8hpp.xhtml#a5fea88a1c3398e303fb83b6db155ff2d">CompareTensors</a></div><div class="ttdeci">armnn::PredicateResult CompareTensors(const std::vector&lt; T &gt; &amp;actualData, const std::vector&lt; T &gt; &amp;expectedData, const armnn::TensorShape &amp;actualShape, const armnn::TensorShape &amp;expectedShape, bool compareBoolean=false, bool isDynamic=false)</div><div class="ttdef"><b>Definition:</b> <a href="include_2armnn_test_utils_2_tensor_helpers_8hpp_source.xhtml#l00073">TensorHelpers.hpp:73</a></div></div>
<div class="ttc" id="struct_layer_test_result_xhtml_a744f7791c7f88a945817d375cd754061"><div class="ttname"><a href="struct_layer_test_result.xhtml#a744f7791c7f88a945817d375cd754061">LayerTestResult::m_ActualData</a></div><div class="ttdeci">std::vector&lt; T &gt; m_ActualData</div><div class="ttdef"><b>Definition:</b> <a href="include_2armnn_test_utils_2_layer_test_result_8hpp_source.xhtml#l00052">LayerTestResult.hpp:52</a></div></div>
<div class="ttc" id="struct_layer_test_result_xhtml_a74a0abe714f3fe5b9ca7023409833fb5"><div class="ttname"><a href="struct_layer_test_result.xhtml#a74a0abe714f3fe5b9ca7023409833fb5">LayerTestResult::m_ActualShape</a></div><div class="ttdeci">armnn::TensorShape m_ActualShape</div><div class="ttdef"><b>Definition:</b> <a href="include_2armnn_test_utils_2_layer_test_result_8hpp_source.xhtml#l00054">LayerTestResult.hpp:54</a></div></div>
<div class="ttc" id="struct_layer_test_result_xhtml"><div class="ttname"><a href="struct_layer_test_result.xhtml">LayerTestResult</a></div><div class="ttdef"><b>Definition:</b> <a href="include_2armnn_test_utils_2_layer_test_result_8hpp_source.xhtml#l00015">LayerTestResult.hpp:15</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="ae0e295107ddc573749371ffde2df6177"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ae0e295107ddc573749371ffde2df6177">&#9670;&nbsp;</a></span>TEST_CASE_FIXTURE() <span class="overload">[3/4]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">TEST_CASE_FIXTURE </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="_cl_context_control_fixture_8hpp.xhtml#ab41dc82879148bd7da5e19a2df965988">ClContextControlFixture</a>&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&quot;CopyBetweenNeonAndGpuWithSubtensors&quot;&#160;</td>
          <td class="paramname">&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_mem_copy_tests_8cpp_source.xhtml#l00107">107</a> of file <a class="el" href="_mem_copy_tests_8cpp_source.xhtml">MemCopyTests.cpp</a>.</p>

<p class="reference">References <a class="el" href="include_2armnn_test_utils_2_tensor_helpers_8hpp_source.xhtml#l00073">CompareTensors()</a>, <a class="el" href="include_2armnn_test_utils_2_layer_test_result_8hpp_source.xhtml#l00052">LayerTestResult&lt; T, n &gt;::m_ActualData</a>, <a class="el" href="include_2armnn_test_utils_2_layer_test_result_8hpp_source.xhtml#l00054">LayerTestResult&lt; T, n &gt;::m_ActualShape</a>, <a class="el" href="include_2armnn_test_utils_2_layer_test_result_8hpp_source.xhtml#l00053">LayerTestResult&lt; T, n &gt;::m_ExpectedData</a>, and <a class="el" href="include_2armnn_test_utils_2_layer_test_result_8hpp_source.xhtml#l00055">LayerTestResult&lt; T, n &gt;::m_ExpectedShape</a>.</p>
<div class="fragment"><div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;{</div><div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;    <a class="code" href="struct_layer_test_result.xhtml">LayerTestResult&lt;float, 4&gt;</a> result =</div><div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;        MemCopyTest&lt;armnn::NeonWorkloadFactory, armnn::ClWorkloadFactory, armnn::DataType::Float32&gt;(<span class="keyword">true</span>);</div><div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;    <span class="keyword">auto</span> predResult = <a class="code" href="include_2armnn_test_utils_2_tensor_helpers_8hpp.xhtml#a5fea88a1c3398e303fb83b6db155ff2d">CompareTensors</a>(result.<a class="code" href="struct_layer_test_result.xhtml#a744f7791c7f88a945817d375cd754061">m_ActualData</a>, result.<a class="code" href="struct_layer_test_result.xhtml#afe2a527d7250fb113121b70e29c6bed5">m_ExpectedData</a>,</div><div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;                                     result.<a class="code" href="struct_layer_test_result.xhtml#a74a0abe714f3fe5b9ca7023409833fb5">m_ActualShape</a>, result.<a class="code" href="struct_layer_test_result.xhtml#acd2a9d8ba7ceee9a10e3f2826cca22c1">m_ExpectedShape</a>);</div><div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;    CHECK_MESSAGE(predResult.m_Result, predResult.m_Message.str());</div><div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;}</div><div class="ttc" id="struct_layer_test_result_xhtml_acd2a9d8ba7ceee9a10e3f2826cca22c1"><div class="ttname"><a href="struct_layer_test_result.xhtml#acd2a9d8ba7ceee9a10e3f2826cca22c1">LayerTestResult::m_ExpectedShape</a></div><div class="ttdeci">armnn::TensorShape m_ExpectedShape</div><div class="ttdef"><b>Definition:</b> <a href="include_2armnn_test_utils_2_layer_test_result_8hpp_source.xhtml#l00055">LayerTestResult.hpp:55</a></div></div>
<div class="ttc" id="struct_layer_test_result_xhtml_afe2a527d7250fb113121b70e29c6bed5"><div class="ttname"><a href="struct_layer_test_result.xhtml#afe2a527d7250fb113121b70e29c6bed5">LayerTestResult::m_ExpectedData</a></div><div class="ttdeci">std::vector&lt; T &gt; m_ExpectedData</div><div class="ttdef"><b>Definition:</b> <a href="include_2armnn_test_utils_2_layer_test_result_8hpp_source.xhtml#l00053">LayerTestResult.hpp:53</a></div></div>
<div class="ttc" id="include_2armnn_test_utils_2_tensor_helpers_8hpp_xhtml_a5fea88a1c3398e303fb83b6db155ff2d"><div class="ttname"><a href="include_2armnn_test_utils_2_tensor_helpers_8hpp.xhtml#a5fea88a1c3398e303fb83b6db155ff2d">CompareTensors</a></div><div class="ttdeci">armnn::PredicateResult CompareTensors(const std::vector&lt; T &gt; &amp;actualData, const std::vector&lt; T &gt; &amp;expectedData, const armnn::TensorShape &amp;actualShape, const armnn::TensorShape &amp;expectedShape, bool compareBoolean=false, bool isDynamic=false)</div><div class="ttdef"><b>Definition:</b> <a href="include_2armnn_test_utils_2_tensor_helpers_8hpp_source.xhtml#l00073">TensorHelpers.hpp:73</a></div></div>
<div class="ttc" id="struct_layer_test_result_xhtml_a744f7791c7f88a945817d375cd754061"><div class="ttname"><a href="struct_layer_test_result.xhtml#a744f7791c7f88a945817d375cd754061">LayerTestResult::m_ActualData</a></div><div class="ttdeci">std::vector&lt; T &gt; m_ActualData</div><div class="ttdef"><b>Definition:</b> <a href="include_2armnn_test_utils_2_layer_test_result_8hpp_source.xhtml#l00052">LayerTestResult.hpp:52</a></div></div>
<div class="ttc" id="struct_layer_test_result_xhtml_a74a0abe714f3fe5b9ca7023409833fb5"><div class="ttname"><a href="struct_layer_test_result.xhtml#a74a0abe714f3fe5b9ca7023409833fb5">LayerTestResult::m_ActualShape</a></div><div class="ttdeci">armnn::TensorShape m_ActualShape</div><div class="ttdef"><b>Definition:</b> <a href="include_2armnn_test_utils_2_layer_test_result_8hpp_source.xhtml#l00054">LayerTestResult.hpp:54</a></div></div>
<div class="ttc" id="struct_layer_test_result_xhtml"><div class="ttname"><a href="struct_layer_test_result.xhtml">LayerTestResult</a></div><div class="ttdef"><b>Definition:</b> <a href="include_2armnn_test_utils_2_layer_test_result_8hpp_source.xhtml#l00015">LayerTestResult.hpp:15</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="a737d4ca6de9c0aba68ee2a34681a1ca0"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a737d4ca6de9c0aba68ee2a34681a1ca0">&#9670;&nbsp;</a></span>TEST_CASE_FIXTURE() <span class="overload">[4/4]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">TEST_CASE_FIXTURE </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="_cl_context_control_fixture_8hpp.xhtml#ab41dc82879148bd7da5e19a2df965988">ClContextControlFixture</a>&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&quot;CopyBetweenGpuAndNeonWithSubtensors&quot;&#160;</td>
          <td class="paramname">&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_mem_copy_tests_8cpp_source.xhtml#l00116">116</a> of file <a class="el" href="_mem_copy_tests_8cpp_source.xhtml">MemCopyTests.cpp</a>.</p>

<p class="reference">References <a class="el" href="include_2armnn_test_utils_2_tensor_helpers_8hpp_source.xhtml#l00073">CompareTensors()</a>, <a class="el" href="include_2armnn_test_utils_2_layer_test_result_8hpp_source.xhtml#l00052">LayerTestResult&lt; T, n &gt;::m_ActualData</a>, <a class="el" href="include_2armnn_test_utils_2_layer_test_result_8hpp_source.xhtml#l00054">LayerTestResult&lt; T, n &gt;::m_ActualShape</a>, <a class="el" href="include_2armnn_test_utils_2_layer_test_result_8hpp_source.xhtml#l00053">LayerTestResult&lt; T, n &gt;::m_ExpectedData</a>, and <a class="el" href="include_2armnn_test_utils_2_layer_test_result_8hpp_source.xhtml#l00055">LayerTestResult&lt; T, n &gt;::m_ExpectedShape</a>.</p>
<div class="fragment"><div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;{</div><div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;    <a class="code" href="struct_layer_test_result.xhtml">LayerTestResult&lt;float, 4&gt;</a> result =</div><div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;        MemCopyTest&lt;armnn::ClWorkloadFactory, armnn::NeonWorkloadFactory, armnn::DataType::Float32&gt;(<span class="keyword">true</span>);</div><div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;    <span class="keyword">auto</span> predResult = <a class="code" href="include_2armnn_test_utils_2_tensor_helpers_8hpp.xhtml#a5fea88a1c3398e303fb83b6db155ff2d">CompareTensors</a>(result.<a class="code" href="struct_layer_test_result.xhtml#a744f7791c7f88a945817d375cd754061">m_ActualData</a>, result.<a class="code" href="struct_layer_test_result.xhtml#afe2a527d7250fb113121b70e29c6bed5">m_ExpectedData</a>,</div><div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;                                     result.<a class="code" href="struct_layer_test_result.xhtml#a74a0abe714f3fe5b9ca7023409833fb5">m_ActualShape</a>, result.<a class="code" href="struct_layer_test_result.xhtml#acd2a9d8ba7ceee9a10e3f2826cca22c1">m_ExpectedShape</a>);</div><div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;    CHECK_MESSAGE(predResult.m_Result, predResult.m_Message.str());</div><div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;}</div><div class="ttc" id="struct_layer_test_result_xhtml_acd2a9d8ba7ceee9a10e3f2826cca22c1"><div class="ttname"><a href="struct_layer_test_result.xhtml#acd2a9d8ba7ceee9a10e3f2826cca22c1">LayerTestResult::m_ExpectedShape</a></div><div class="ttdeci">armnn::TensorShape m_ExpectedShape</div><div class="ttdef"><b>Definition:</b> <a href="include_2armnn_test_utils_2_layer_test_result_8hpp_source.xhtml#l00055">LayerTestResult.hpp:55</a></div></div>
<div class="ttc" id="struct_layer_test_result_xhtml_afe2a527d7250fb113121b70e29c6bed5"><div class="ttname"><a href="struct_layer_test_result.xhtml#afe2a527d7250fb113121b70e29c6bed5">LayerTestResult::m_ExpectedData</a></div><div class="ttdeci">std::vector&lt; T &gt; m_ExpectedData</div><div class="ttdef"><b>Definition:</b> <a href="include_2armnn_test_utils_2_layer_test_result_8hpp_source.xhtml#l00053">LayerTestResult.hpp:53</a></div></div>
<div class="ttc" id="include_2armnn_test_utils_2_tensor_helpers_8hpp_xhtml_a5fea88a1c3398e303fb83b6db155ff2d"><div class="ttname"><a href="include_2armnn_test_utils_2_tensor_helpers_8hpp.xhtml#a5fea88a1c3398e303fb83b6db155ff2d">CompareTensors</a></div><div class="ttdeci">armnn::PredicateResult CompareTensors(const std::vector&lt; T &gt; &amp;actualData, const std::vector&lt; T &gt; &amp;expectedData, const armnn::TensorShape &amp;actualShape, const armnn::TensorShape &amp;expectedShape, bool compareBoolean=false, bool isDynamic=false)</div><div class="ttdef"><b>Definition:</b> <a href="include_2armnn_test_utils_2_tensor_helpers_8hpp_source.xhtml#l00073">TensorHelpers.hpp:73</a></div></div>
<div class="ttc" id="struct_layer_test_result_xhtml_a744f7791c7f88a945817d375cd754061"><div class="ttname"><a href="struct_layer_test_result.xhtml#a744f7791c7f88a945817d375cd754061">LayerTestResult::m_ActualData</a></div><div class="ttdeci">std::vector&lt; T &gt; m_ActualData</div><div class="ttdef"><b>Definition:</b> <a href="include_2armnn_test_utils_2_layer_test_result_8hpp_source.xhtml#l00052">LayerTestResult.hpp:52</a></div></div>
<div class="ttc" id="struct_layer_test_result_xhtml_a74a0abe714f3fe5b9ca7023409833fb5"><div class="ttname"><a href="struct_layer_test_result.xhtml#a74a0abe714f3fe5b9ca7023409833fb5">LayerTestResult::m_ActualShape</a></div><div class="ttdeci">armnn::TensorShape m_ActualShape</div><div class="ttdef"><b>Definition:</b> <a href="include_2armnn_test_utils_2_layer_test_result_8hpp_source.xhtml#l00054">LayerTestResult.hpp:54</a></div></div>
<div class="ttc" id="struct_layer_test_result_xhtml"><div class="ttname"><a href="struct_layer_test_result.xhtml">LayerTestResult</a></div><div class="ttdef"><b>Definition:</b> <a href="include_2armnn_test_utils_2_layer_test_result_8hpp_source.xhtml#l00015">LayerTestResult.hpp:15</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="a1f6e124393446411ad61ebe3cb5cc5d5"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a1f6e124393446411ad61ebe3cb5cc5d5">&#9670;&nbsp;</a></span>TEST_SUITE()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">TEST_SUITE </td>
          <td>(</td>
          <td class="paramtype">&quot;MemCopyCommon&quot;&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_mem_copy_tests_8cpp_source.xhtml#l00020">20</a> of file <a class="el" href="_mem_copy_tests_8cpp_source.xhtml">MemCopyTests.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;{</div><div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;TEST_CASE(<span class="stringliteral">&quot;AclTypeConversions&quot;</span>)</div><div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;{</div><div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;    arm_compute::Strides strides(1, 2, 3, 4);</div><div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;    <a class="code" href="classarmnn_1_1_tensor_shape.xhtml">armnn::TensorShape</a> convertedStrides = armnn::armcomputetensorutils::GetStrides(strides);</div><div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;</div><div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;    CHECK(convertedStrides[0] == 4);</div><div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;    CHECK(convertedStrides[1] == 3);</div><div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;    CHECK(convertedStrides[2] == 2);</div><div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;    CHECK(convertedStrides[3] == 1);</div><div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;</div><div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;    arm_compute::TensorShape shape(5, 6, 7, 8);</div><div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;    <a class="code" href="classarmnn_1_1_tensor_shape.xhtml">armnn::TensorShape</a> convertedshape = armnn::armcomputetensorutils::GetShape(shape);</div><div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;</div><div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;    CHECK(convertedshape[0] == 8);</div><div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;    CHECK(convertedshape[1] == 7);</div><div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;    CHECK(convertedshape[2] == 6);</div><div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;    CHECK(convertedshape[3] == 5);</div><div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;}</div><div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;</div><div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;}</div><div class="ttc" id="classarmnn_1_1_tensor_shape_xhtml"><div class="ttname"><a href="classarmnn_1_1_tensor_shape.xhtml">armnn::TensorShape</a></div><div class="ttdef"><b>Definition:</b> <a href="_tensor_8hpp_source.xhtml#l00020">Tensor.hpp:20</a></div></div>
</div><!-- fragment -->
</div>
</div>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="dir_68267d1309a1af8e8297ef4c3efbcdba.xhtml">src</a></li><li class="navelem"><a class="el" href="dir_0f3cdec46afbc61a1ded8e1687c9c9a0.xhtml">backends</a></li><li class="navelem"><a class="el" href="dir_c13beb47b846b3a63741c705c772cf8d.xhtml">aclCommon</a></li><li class="navelem"><a class="el" href="dir_e070e4f851c874525cacd85a9acb1fb4.xhtml">test</a></li><li class="navelem"><a class="el" href="_mem_copy_tests_8cpp.xhtml">MemCopyTests.cpp</a></li>
    <li class="footer">Generated on Tue Feb 22 2022 11:39:38 for ArmNN by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.13 </li>
  </ul>
</div>
</body>
</html>
