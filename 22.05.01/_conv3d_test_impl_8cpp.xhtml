<!-- Copyright (c) 2020 ARM Limited. -->
<!--                                 -->
<!-- SPDX-License-Identifier: MIT    -->
<!--                                 -->
<!-- HTML header for doxygen 1.8.13-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.13"/>
<meta name="robots" content="NOINDEX, NOFOLLOW" />
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>ArmNN: src/backends/backendsCommon/test/layerTests/Conv3dTestImpl.cpp File Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script><script type="text/javascript" src="http://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="stylesheet.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <img alt="ArmNN" src="Arm_NN_horizontal_blue.png" style="max-width: 10rem; margin-top: .5rem; margin-left 10px"/>
  <td style="padding-left: 0.5em;">
   <div id="projectname">
   &#160;<span id="projectnumber">22.05.01</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.13 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
$(document).ready(function(){initNavTree('_conv3d_test_impl_8cpp.xhtml','');});
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="summary">
<a href="#func-members">Functions</a>  </div>
  <div class="headertitle">
<div class="title">Conv3dTestImpl.cpp File Reference</div>  </div>
</div><!--header-->
<div class="contents">
<div class="textblock"><code>#include &quot;<a class="el" href="_conv3d_test_impl_8hpp_source.xhtml">Conv3dTestImpl.hpp</a>&quot;</code><br />
<code>#include &lt;<a class="el" href="_quantize_helper_8hpp_source.xhtml">armnnUtils/QuantizeHelper.hpp</a>&gt;</code><br />
<code>#include &lt;<a class="el" href="_data_layout_indexed_8hpp_source.xhtml">armnnUtils/DataLayoutIndexed.hpp</a>&gt;</code><br />
<code>#include &lt;<a class="el" href="include_2armnn_2backends_2_tensor_handle_8hpp_source.xhtml">armnn/backends/TensorHandle.hpp</a>&gt;</code><br />
<code>#include &lt;<a class="el" href="include_2armnn_test_utils_2_data_layout_utils_8hpp_source.xhtml">armnnTestUtils/DataLayoutUtils.hpp</a>&gt;</code><br />
<code>#include &lt;<a class="el" href="include_2armnn_test_utils_2_tensor_copy_utils_8hpp_source.xhtml">armnnTestUtils/TensorCopyUtils.hpp</a>&gt;</code><br />
<code>#include &lt;<a class="el" href="include_2armnn_test_utils_2_workload_test_utils_8hpp_source.xhtml">armnnTestUtils/WorkloadTestUtils.hpp</a>&gt;</code><br />
<code>#include &lt;<a class="el" href="include_2armnn_test_utils_2_tensor_helpers_8hpp_source.xhtml">armnnTestUtils/TensorHelpers.hpp</a>&gt;</code><br />
</div>
<p><a href="_conv3d_test_impl_8cpp_source.xhtml">Go to the source code of this file.</a></p>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="func-members"></a>
Functions</h2></td></tr>
<tr class="memitem:ac29da01384d6955a5788945352713a21"><td class="memTemplParams" colspan="2">template&lt;armnn::DataType ArmnnType, typename T  = armnn::ResolveType&lt;ArmnnType&gt;&gt; </td></tr>
<tr class="memitem:ac29da01384d6955a5788945352713a21"><td class="memTemplItemLeft" align="right" valign="top">std::vector&lt; T &gt;&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="_conv3d_test_impl_8cpp.xhtml#ac29da01384d6955a5788945352713a21">GetBiasData</a> (bool biasEnabled, float qScale, <a class="el" href="classarmnn_1_1_tensor_info.xhtml">armnn::TensorInfo</a> outputInfo, <a class="el" href="namespacearmnn.xhtml#ad1d5cce2d9e9a5d61c243e5c989112e0">armnn::DataLayout</a> layout)</td></tr>
<tr class="separator:ac29da01384d6955a5788945352713a21"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a41dde9c18d90c8dea2980e477d22a7fe"><td class="memTemplParams" colspan="2">template&lt;typename T , typename B &gt; </td></tr>
<tr class="memitem:a41dde9c18d90c8dea2980e477d22a7fe"><td class="memTemplItemLeft" align="right" valign="top">void&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="_conv3d_test_impl_8cpp.xhtml#a41dde9c18d90c8dea2980e477d22a7fe">ApplyBiasToData</a> (std::vector&lt; T &gt; &amp;v, const std::vector&lt; B &gt; &amp;bias, float vScale, int32_t vOffset, float bScale, int32_t bOffset)</td></tr>
<tr class="separator:a41dde9c18d90c8dea2980e477d22a7fe"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2f8ee10580b676ec08de159a02ff217e"><td class="memTemplParams" colspan="2">template&lt;armnn::DataType ArmnnType&gt; </td></tr>
<tr class="memitem:a2f8ee10580b676ec08de159a02ff217e"><td class="memTemplItemLeft" align="right" valign="top">void&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="_conv3d_test_impl_8cpp.xhtml#a2f8ee10580b676ec08de159a02ff217e">SetScaleOffset</a> (float &amp;qScale, int32_t &amp;qOffset)</td></tr>
<tr class="separator:a2f8ee10580b676ec08de159a02ff217e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9ca270ac2dc3cd87e835716606be9e65"><td class="memTemplParams" colspan="2">template&lt;typename T &gt; </td></tr>
<tr class="memitem:a9ca270ac2dc3cd87e835716606be9e65"><td class="memTemplItemLeft" align="right" valign="top">std::vector&lt; T &gt;&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="_conv3d_test_impl_8cpp.xhtml#a9ca270ac2dc3cd87e835716606be9e65">CreateQuantizedData</a> (int32_t size, float qScale, int32_t qOffset)</td></tr>
<tr class="separator:a9ca270ac2dc3cd87e835716606be9e65"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a94612dea5289f32c0f065f248b412615"><td class="memTemplParams" colspan="2">template&lt;typename T &gt; </td></tr>
<tr class="memitem:a94612dea5289f32c0f065f248b412615"><td class="memTemplItemLeft" align="right" valign="top">std::vector&lt; T &gt;&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="_conv3d_test_impl_8cpp.xhtml#a94612dea5289f32c0f065f248b412615">CreateSmallQuantizedData</a> (int32_t size, float divisor, float qScale, int32_t qOffset)</td></tr>
<tr class="separator:a94612dea5289f32c0f065f248b412615"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa8c767319f74f1b79ca1658b0cd0c8e0"><td class="memTemplParams" colspan="2">template&lt;armnn::DataType ArmnnType, armnn::DataType ArmnnBType, typename T  = armnn::ResolveType&lt;ArmnnType&gt;, typename B  = armnn::ResolveType&lt;ArmnnBType&gt;&gt; </td></tr>
<tr class="memitem:aa8c767319f74f1b79ca1658b0cd0c8e0"><td class="memTemplItemLeft" align="right" valign="top"><a class="el" href="struct_layer_test_result.xhtml">LayerTestResult</a>&lt; T, 5 &gt;&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="_conv3d_test_impl_8cpp.xhtml#aa8c767319f74f1b79ca1658b0cd0c8e0">SimpleConvolution3dTestImpl</a> (<a class="el" href="classarmnn_1_1_i_workload_factory.xhtml">armnn::IWorkloadFactory</a> &amp;workloadFactory, const <a class="el" href="classarmnn_1_1_i_backend_internal.xhtml#a693b40e6b94e958836aeb0410ca186bd">armnn::IBackendInternal::IMemoryManagerSharedPtr</a> &amp;memoryManager, const <a class="el" href="classarmnn_1_1_i_tensor_handle_factory.xhtml">armnn::ITensorHandleFactory</a> &amp;tensorHandleFactory, const std::vector&lt; T &gt; &amp;input, const std::vector&lt; T &gt; &amp;kernel, const std::vector&lt; B &gt; &amp;bias, const std::vector&lt; T &gt; &amp;outputExpected, const <a class="el" href="classarmnn_1_1_tensor_shape.xhtml">armnn::TensorShape</a> &amp;inputShape, const <a class="el" href="classarmnn_1_1_tensor_shape.xhtml">armnn::TensorShape</a> &amp;kernelShape, const <a class="el" href="classarmnn_1_1_tensor_shape.xhtml">armnn::TensorShape</a> &amp;outputExpectedShape, const <a class="el" href="namespacearmnn.xhtml#ad1d5cce2d9e9a5d61c243e5c989112e0">armnn::DataLayout</a> dataLayout, float qScale, int32_t qOffset, uint32_t strideX=1, uint32_t strideY=1, uint32_t strideZ=1, uint32_t dilationX=1, uint32_t dilationY=1, uint32_t dilationZ=1, uint32_t padLeft=0, uint32_t padTop=0, uint32_t padRight=0, uint32_t padBottom=0, uint32_t padFront=0, uint32_t padBack=0)</td></tr>
<tr class="separator:aa8c767319f74f1b79ca1658b0cd0c8e0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7d255a9d48c3070697023d78e624524a"><td class="memTemplParams" colspan="2">template&lt;armnn::DataType ArmnnType, armnn::DataType ArmnnBType, typename T  = armnn::ResolveType&lt;ArmnnType&gt;&gt; </td></tr>
<tr class="memitem:a7d255a9d48c3070697023d78e624524a"><td class="memTemplItemLeft" align="right" valign="top"><a class="el" href="struct_layer_test_result.xhtml">LayerTestResult</a>&lt; T, 5 &gt;&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="_conv3d_test_impl_8cpp.xhtml#a7d255a9d48c3070697023d78e624524a">SimpleConvolution3d3x3x3TestCommon</a> (<a class="el" href="classarmnn_1_1_i_workload_factory.xhtml">armnn::IWorkloadFactory</a> &amp;workloadFactory, const <a class="el" href="classarmnn_1_1_i_backend_internal.xhtml#a693b40e6b94e958836aeb0410ca186bd">armnn::IBackendInternal::IMemoryManagerSharedPtr</a> &amp;memoryManager, const <a class="el" href="classarmnn_1_1_i_tensor_handle_factory.xhtml">armnn::ITensorHandleFactory</a> &amp;tensorHandleFactory, bool biasEnabled, <a class="el" href="namespacearmnn.xhtml#ad1d5cce2d9e9a5d61c243e5c989112e0">armnn::DataLayout</a> dataLayout)</td></tr>
<tr class="separator:a7d255a9d48c3070697023d78e624524a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:afbace158a4ab4aacb4def9b30f4e4d65"><td class="memTemplParams" colspan="2">template&lt;armnn::DataType ArmnnType, armnn::DataType ArmnnBType, typename T  = armnn::ResolveType&lt;ArmnnType&gt;&gt; </td></tr>
<tr class="memitem:afbace158a4ab4aacb4def9b30f4e4d65"><td class="memTemplItemLeft" align="right" valign="top"><a class="el" href="struct_layer_test_result.xhtml">LayerTestResult</a>&lt; T, 5 &gt;&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="_conv3d_test_impl_8cpp.xhtml#afbace158a4ab4aacb4def9b30f4e4d65">Convolution3d2x2x2Strides3x5x5TestCommon</a> (<a class="el" href="classarmnn_1_1_i_workload_factory.xhtml">armnn::IWorkloadFactory</a> &amp;workloadFactory, const <a class="el" href="classarmnn_1_1_i_backend_internal.xhtml#a693b40e6b94e958836aeb0410ca186bd">armnn::IBackendInternal::IMemoryManagerSharedPtr</a> &amp;memoryManager, const <a class="el" href="classarmnn_1_1_i_tensor_handle_factory.xhtml">armnn::ITensorHandleFactory</a> &amp;tensorHandleFactory, bool biasEnabled, <a class="el" href="namespacearmnn.xhtml#ad1d5cce2d9e9a5d61c243e5c989112e0">armnn::DataLayout</a> dataLayout)</td></tr>
<tr class="separator:afbace158a4ab4aacb4def9b30f4e4d65"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0878ba921d9497706bc243ba202f7016"><td class="memTemplParams" colspan="2">template&lt;armnn::DataType ArmnnType, armnn::DataType ArmnnBType, typename T  = armnn::ResolveType&lt;ArmnnType&gt;&gt; </td></tr>
<tr class="memitem:a0878ba921d9497706bc243ba202f7016"><td class="memTemplItemLeft" align="right" valign="top"><a class="el" href="struct_layer_test_result.xhtml">LayerTestResult</a>&lt; T, 5 &gt;&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="_conv3d_test_impl_8cpp.xhtml#a0878ba921d9497706bc243ba202f7016">Convolution3d2x2x2Dilation2x2x2TestCommon</a> (<a class="el" href="classarmnn_1_1_i_workload_factory.xhtml">armnn::IWorkloadFactory</a> &amp;workloadFactory, const <a class="el" href="classarmnn_1_1_i_backend_internal.xhtml#a693b40e6b94e958836aeb0410ca186bd">armnn::IBackendInternal::IMemoryManagerSharedPtr</a> &amp;memoryManager, const <a class="el" href="classarmnn_1_1_i_tensor_handle_factory.xhtml">armnn::ITensorHandleFactory</a> &amp;tensorHandleFactory, bool biasEnabled, <a class="el" href="namespacearmnn.xhtml#ad1d5cce2d9e9a5d61c243e5c989112e0">armnn::DataLayout</a> dataLayout)</td></tr>
<tr class="separator:a0878ba921d9497706bc243ba202f7016"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1736a9bf1b2b7f77069e129ff67e03d1"><td class="memTemplParams" colspan="2">template&lt;armnn::DataType ArmnnType, armnn::DataType ArmnnBType, typename T  = armnn::ResolveType&lt;ArmnnType&gt;&gt; </td></tr>
<tr class="memitem:a1736a9bf1b2b7f77069e129ff67e03d1"><td class="memTemplItemLeft" align="right" valign="top"><a class="el" href="struct_layer_test_result.xhtml">LayerTestResult</a>&lt; T, 5 &gt;&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="_conv3d_test_impl_8cpp.xhtml#a1736a9bf1b2b7f77069e129ff67e03d1">Convolution3dPaddingSame3x3x3TestCommon</a> (<a class="el" href="classarmnn_1_1_i_workload_factory.xhtml">armnn::IWorkloadFactory</a> &amp;workloadFactory, const <a class="el" href="classarmnn_1_1_i_backend_internal.xhtml#a693b40e6b94e958836aeb0410ca186bd">armnn::IBackendInternal::IMemoryManagerSharedPtr</a> &amp;memoryManager, const <a class="el" href="classarmnn_1_1_i_tensor_handle_factory.xhtml">armnn::ITensorHandleFactory</a> &amp;tensorHandleFactory, bool biasEnabled, <a class="el" href="namespacearmnn.xhtml#ad1d5cce2d9e9a5d61c243e5c989112e0">armnn::DataLayout</a> dataLayout)</td></tr>
<tr class="separator:a1736a9bf1b2b7f77069e129ff67e03d1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:acbbf738deb20cb22c554d0d1f12f0ab6"><td class="memItemLeft" align="right" valign="top"><a class="el" href="struct_layer_test_result.xhtml">LayerTestResult</a>&lt; float, 5 &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_conv3d_test_impl_8cpp.xhtml#acbbf738deb20cb22c554d0d1f12f0ab6">Convolution3dStrideDilationPadding3x3x3TestCommonFloat32</a> (<a class="el" href="classarmnn_1_1_i_workload_factory.xhtml">armnn::IWorkloadFactory</a> &amp;workloadFactory, const <a class="el" href="classarmnn_1_1_i_backend_internal.xhtml#a693b40e6b94e958836aeb0410ca186bd">armnn::IBackendInternal::IMemoryManagerSharedPtr</a> &amp;memoryManager, const <a class="el" href="classarmnn_1_1_i_tensor_handle_factory.xhtml">armnn::ITensorHandleFactory</a> &amp;tensorHandleFactory, bool biasEnabled, <a class="el" href="namespacearmnn.xhtml#ad1d5cce2d9e9a5d61c243e5c989112e0">armnn::DataLayout</a> dataLayout)</td></tr>
<tr class="separator:acbbf738deb20cb22c554d0d1f12f0ab6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4668f0282ba880fed2768558243ccf00"><td class="memItemLeft" align="right" valign="top"><a class="el" href="struct_layer_test_result.xhtml">LayerTestResult</a>&lt; float, 5 &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_conv3d_test_impl_8cpp.xhtml#a4668f0282ba880fed2768558243ccf00">Convolution3d2x2x2Stride3x3x3SmallTestCommonFloat32</a> (<a class="el" href="classarmnn_1_1_i_workload_factory.xhtml">armnn::IWorkloadFactory</a> &amp;workloadFactory, const <a class="el" href="classarmnn_1_1_i_backend_internal.xhtml#a693b40e6b94e958836aeb0410ca186bd">armnn::IBackendInternal::IMemoryManagerSharedPtr</a> &amp;memoryManager, const <a class="el" href="classarmnn_1_1_i_tensor_handle_factory.xhtml">armnn::ITensorHandleFactory</a> &amp;tensorHandleFactory, bool biasEnabled, <a class="el" href="namespacearmnn.xhtml#ad1d5cce2d9e9a5d61c243e5c989112e0">armnn::DataLayout</a> dataLayout)</td></tr>
<tr class="separator:a4668f0282ba880fed2768558243ccf00"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:abd444942e3547d0dce1c48f8455f071f"><td class="memItemLeft" align="right" valign="top"><a class="el" href="struct_layer_test_result.xhtml">LayerTestResult</a>&lt; <a class="el" href="namespacearmnn.xhtml#a0f38fa92b2468d5378258a2b074c1a31">armnn::Half</a>, 5 &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_conv3d_test_impl_8cpp.xhtml#abd444942e3547d0dce1c48f8455f071f">Convolution3d2x3x3TestCommonFloat16</a> (<a class="el" href="classarmnn_1_1_i_workload_factory.xhtml">armnn::IWorkloadFactory</a> &amp;workloadFactory, const <a class="el" href="classarmnn_1_1_i_backend_internal.xhtml#a693b40e6b94e958836aeb0410ca186bd">armnn::IBackendInternal::IMemoryManagerSharedPtr</a> &amp;memoryManager, const <a class="el" href="classarmnn_1_1_i_tensor_handle_factory.xhtml">armnn::ITensorHandleFactory</a> &amp;tensorHandleFactory, bool biasEnabled, <a class="el" href="namespacearmnn.xhtml#ad1d5cce2d9e9a5d61c243e5c989112e0">armnn::DataLayout</a> dataLayout)</td></tr>
<tr class="separator:abd444942e3547d0dce1c48f8455f071f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6a5b0b2846112d6280e58a36f826635c"><td class="memItemLeft" align="right" valign="top"><a class="el" href="struct_layer_test_result.xhtml">LayerTestResult</a>&lt; <a class="el" href="namespacearmnn.xhtml#a0f38fa92b2468d5378258a2b074c1a31">armnn::Half</a>, 5 &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_conv3d_test_impl_8cpp.xhtml#a6a5b0b2846112d6280e58a36f826635c">Convolution3d2x2x2SmallTestCommonFloat16</a> (<a class="el" href="classarmnn_1_1_i_workload_factory.xhtml">armnn::IWorkloadFactory</a> &amp;workloadFactory, const <a class="el" href="classarmnn_1_1_i_backend_internal.xhtml#a693b40e6b94e958836aeb0410ca186bd">armnn::IBackendInternal::IMemoryManagerSharedPtr</a> &amp;memoryManager, const <a class="el" href="classarmnn_1_1_i_tensor_handle_factory.xhtml">armnn::ITensorHandleFactory</a> &amp;tensorHandleFactory, bool biasEnabled, <a class="el" href="namespacearmnn.xhtml#ad1d5cce2d9e9a5d61c243e5c989112e0">armnn::DataLayout</a> dataLayout)</td></tr>
<tr class="separator:a6a5b0b2846112d6280e58a36f826635c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a97f335101f2aeb09994ab41d32c09904"><td class="memItemLeft" align="right" valign="top"><a class="el" href="struct_layer_test_result.xhtml">LayerTestResult</a>&lt; float, 5 &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_conv3d_test_impl_8cpp.xhtml#a97f335101f2aeb09994ab41d32c09904">SimpleConvolution3d3x3x3Float32Test</a> (<a class="el" href="classarmnn_1_1_i_workload_factory.xhtml">armnn::IWorkloadFactory</a> &amp;workloadFactory, const <a class="el" href="classarmnn_1_1_i_backend_internal.xhtml#a693b40e6b94e958836aeb0410ca186bd">armnn::IBackendInternal::IMemoryManagerSharedPtr</a> &amp;memoryManager, const <a class="el" href="classarmnn_1_1_i_tensor_handle_factory.xhtml">armnn::ITensorHandleFactory</a> &amp;tensorHandleFactory, bool biasEnabled, <a class="el" href="namespacearmnn.xhtml#ad1d5cce2d9e9a5d61c243e5c989112e0">armnn::DataLayout</a> dataLayout)</td></tr>
<tr class="separator:a97f335101f2aeb09994ab41d32c09904"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a547970283584b6cec80bf753eca14cd8"><td class="memItemLeft" align="right" valign="top"><a class="el" href="struct_layer_test_result.xhtml">LayerTestResult</a>&lt; int8_t, 5 &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_conv3d_test_impl_8cpp.xhtml#a547970283584b6cec80bf753eca14cd8">SimpleConvolution3d3x3x3Int8Test</a> (<a class="el" href="classarmnn_1_1_i_workload_factory.xhtml">armnn::IWorkloadFactory</a> &amp;workloadFactory, const <a class="el" href="classarmnn_1_1_i_backend_internal.xhtml#a693b40e6b94e958836aeb0410ca186bd">armnn::IBackendInternal::IMemoryManagerSharedPtr</a> &amp;memoryManager, const <a class="el" href="classarmnn_1_1_i_tensor_handle_factory.xhtml">armnn::ITensorHandleFactory</a> &amp;tensorHandleFactory, bool biasEnabled, <a class="el" href="namespacearmnn.xhtml#ad1d5cce2d9e9a5d61c243e5c989112e0">armnn::DataLayout</a> dataLayout)</td></tr>
<tr class="separator:a547970283584b6cec80bf753eca14cd8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4c578ed3b0e74f84354fad1cc40a1d9d"><td class="memItemLeft" align="right" valign="top"><a class="el" href="struct_layer_test_result.xhtml">LayerTestResult</a>&lt; uint8_t, 5 &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_conv3d_test_impl_8cpp.xhtml#a4c578ed3b0e74f84354fad1cc40a1d9d">SimpleConvolution3d3x3x3Uint8Test</a> (<a class="el" href="classarmnn_1_1_i_workload_factory.xhtml">armnn::IWorkloadFactory</a> &amp;workloadFactory, const <a class="el" href="classarmnn_1_1_i_backend_internal.xhtml#a693b40e6b94e958836aeb0410ca186bd">armnn::IBackendInternal::IMemoryManagerSharedPtr</a> &amp;memoryManager, const <a class="el" href="classarmnn_1_1_i_tensor_handle_factory.xhtml">armnn::ITensorHandleFactory</a> &amp;tensorHandleFactory, bool biasEnabled, <a class="el" href="namespacearmnn.xhtml#ad1d5cce2d9e9a5d61c243e5c989112e0">armnn::DataLayout</a> dataLayout)</td></tr>
<tr class="separator:a4c578ed3b0e74f84354fad1cc40a1d9d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a383e402b8f57b092bd6fc6fda8387f11"><td class="memItemLeft" align="right" valign="top"><a class="el" href="struct_layer_test_result.xhtml">LayerTestResult</a>&lt; int16_t, 5 &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_conv3d_test_impl_8cpp.xhtml#a383e402b8f57b092bd6fc6fda8387f11">SimpleConvolution3d3x3x3Int16Test</a> (<a class="el" href="classarmnn_1_1_i_workload_factory.xhtml">armnn::IWorkloadFactory</a> &amp;workloadFactory, const <a class="el" href="classarmnn_1_1_i_backend_internal.xhtml#a693b40e6b94e958836aeb0410ca186bd">armnn::IBackendInternal::IMemoryManagerSharedPtr</a> &amp;memoryManager, const <a class="el" href="classarmnn_1_1_i_tensor_handle_factory.xhtml">armnn::ITensorHandleFactory</a> &amp;tensorHandleFactory, bool biasEnabled, <a class="el" href="namespacearmnn.xhtml#ad1d5cce2d9e9a5d61c243e5c989112e0">armnn::DataLayout</a> dataLayout)</td></tr>
<tr class="separator:a383e402b8f57b092bd6fc6fda8387f11"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7e32be2b43d18a12bfd8e47ad4cd0b46"><td class="memItemLeft" align="right" valign="top"><a class="el" href="struct_layer_test_result.xhtml">LayerTestResult</a>&lt; float, 5 &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_conv3d_test_impl_8cpp.xhtml#a7e32be2b43d18a12bfd8e47ad4cd0b46">Convolution3d2x2x2Strides3x5x5Float32Test</a> (<a class="el" href="classarmnn_1_1_i_workload_factory.xhtml">armnn::IWorkloadFactory</a> &amp;workloadFactory, const <a class="el" href="classarmnn_1_1_i_backend_internal.xhtml#a693b40e6b94e958836aeb0410ca186bd">armnn::IBackendInternal::IMemoryManagerSharedPtr</a> &amp;memoryManager, const <a class="el" href="classarmnn_1_1_i_tensor_handle_factory.xhtml">armnn::ITensorHandleFactory</a> &amp;tensorHandleFactory, bool biasEnabled, <a class="el" href="namespacearmnn.xhtml#ad1d5cce2d9e9a5d61c243e5c989112e0">armnn::DataLayout</a> dataLayout)</td></tr>
<tr class="separator:a7e32be2b43d18a12bfd8e47ad4cd0b46"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3be73c19cbb7ea724b7e5e777d3acf62"><td class="memItemLeft" align="right" valign="top"><a class="el" href="struct_layer_test_result.xhtml">LayerTestResult</a>&lt; int8_t, 5 &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_conv3d_test_impl_8cpp.xhtml#a3be73c19cbb7ea724b7e5e777d3acf62">Convolution3d2x2x2Strides3x5x5Int8Test</a> (<a class="el" href="classarmnn_1_1_i_workload_factory.xhtml">armnn::IWorkloadFactory</a> &amp;workloadFactory, const <a class="el" href="classarmnn_1_1_i_backend_internal.xhtml#a693b40e6b94e958836aeb0410ca186bd">armnn::IBackendInternal::IMemoryManagerSharedPtr</a> &amp;memoryManager, const <a class="el" href="classarmnn_1_1_i_tensor_handle_factory.xhtml">armnn::ITensorHandleFactory</a> &amp;tensorHandleFactory, bool biasEnabled, <a class="el" href="namespacearmnn.xhtml#ad1d5cce2d9e9a5d61c243e5c989112e0">armnn::DataLayout</a> dataLayout)</td></tr>
<tr class="separator:a3be73c19cbb7ea724b7e5e777d3acf62"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aeb54439f726cc853209509e730e876e6"><td class="memItemLeft" align="right" valign="top"><a class="el" href="struct_layer_test_result.xhtml">LayerTestResult</a>&lt; uint8_t, 5 &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_conv3d_test_impl_8cpp.xhtml#aeb54439f726cc853209509e730e876e6">Convolution3d2x2x2Strides3x5x5Uint8Test</a> (<a class="el" href="classarmnn_1_1_i_workload_factory.xhtml">armnn::IWorkloadFactory</a> &amp;workloadFactory, const <a class="el" href="classarmnn_1_1_i_backend_internal.xhtml#a693b40e6b94e958836aeb0410ca186bd">armnn::IBackendInternal::IMemoryManagerSharedPtr</a> &amp;memoryManager, const <a class="el" href="classarmnn_1_1_i_tensor_handle_factory.xhtml">armnn::ITensorHandleFactory</a> &amp;tensorHandleFactory, bool biasEnabled, <a class="el" href="namespacearmnn.xhtml#ad1d5cce2d9e9a5d61c243e5c989112e0">armnn::DataLayout</a> dataLayout)</td></tr>
<tr class="separator:aeb54439f726cc853209509e730e876e6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a58289ea01aec699a91f8184db7bbda20"><td class="memItemLeft" align="right" valign="top"><a class="el" href="struct_layer_test_result.xhtml">LayerTestResult</a>&lt; int16_t, 5 &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_conv3d_test_impl_8cpp.xhtml#a58289ea01aec699a91f8184db7bbda20">Convolution3d2x2x2Strides3x5x5Int16Test</a> (<a class="el" href="classarmnn_1_1_i_workload_factory.xhtml">armnn::IWorkloadFactory</a> &amp;workloadFactory, const <a class="el" href="classarmnn_1_1_i_backend_internal.xhtml#a693b40e6b94e958836aeb0410ca186bd">armnn::IBackendInternal::IMemoryManagerSharedPtr</a> &amp;memoryManager, const <a class="el" href="classarmnn_1_1_i_tensor_handle_factory.xhtml">armnn::ITensorHandleFactory</a> &amp;tensorHandleFactory, bool biasEnabled, <a class="el" href="namespacearmnn.xhtml#ad1d5cce2d9e9a5d61c243e5c989112e0">armnn::DataLayout</a> dataLayout)</td></tr>
<tr class="separator:a58289ea01aec699a91f8184db7bbda20"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aff7f671b6c142a9a27f6de42163c31bc"><td class="memItemLeft" align="right" valign="top"><a class="el" href="struct_layer_test_result.xhtml">LayerTestResult</a>&lt; float, 5 &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_conv3d_test_impl_8cpp.xhtml#aff7f671b6c142a9a27f6de42163c31bc">Convolution3d2x2x2Dilation2x2x2Float32Test</a> (<a class="el" href="classarmnn_1_1_i_workload_factory.xhtml">armnn::IWorkloadFactory</a> &amp;workloadFactory, const <a class="el" href="classarmnn_1_1_i_backend_internal.xhtml#a693b40e6b94e958836aeb0410ca186bd">armnn::IBackendInternal::IMemoryManagerSharedPtr</a> &amp;memoryManager, const <a class="el" href="classarmnn_1_1_i_tensor_handle_factory.xhtml">armnn::ITensorHandleFactory</a> &amp;tensorHandleFactory, bool biasEnabled, <a class="el" href="namespacearmnn.xhtml#ad1d5cce2d9e9a5d61c243e5c989112e0">armnn::DataLayout</a> dataLayout)</td></tr>
<tr class="separator:aff7f671b6c142a9a27f6de42163c31bc"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac951dbcec6aa92bad6ca12bca60303cb"><td class="memItemLeft" align="right" valign="top"><a class="el" href="struct_layer_test_result.xhtml">LayerTestResult</a>&lt; int8_t, 5 &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_conv3d_test_impl_8cpp.xhtml#ac951dbcec6aa92bad6ca12bca60303cb">Convolution3d2x2x2Dilation2x2x2Int8Test</a> (<a class="el" href="classarmnn_1_1_i_workload_factory.xhtml">armnn::IWorkloadFactory</a> &amp;workloadFactory, const <a class="el" href="classarmnn_1_1_i_backend_internal.xhtml#a693b40e6b94e958836aeb0410ca186bd">armnn::IBackendInternal::IMemoryManagerSharedPtr</a> &amp;memoryManager, const <a class="el" href="classarmnn_1_1_i_tensor_handle_factory.xhtml">armnn::ITensorHandleFactory</a> &amp;tensorHandleFactory, bool biasEnabled, <a class="el" href="namespacearmnn.xhtml#ad1d5cce2d9e9a5d61c243e5c989112e0">armnn::DataLayout</a> dataLayout)</td></tr>
<tr class="separator:ac951dbcec6aa92bad6ca12bca60303cb"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a753f5422f1714c31b62f0b8af0ade5fc"><td class="memItemLeft" align="right" valign="top"><a class="el" href="struct_layer_test_result.xhtml">LayerTestResult</a>&lt; uint8_t, 5 &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_conv3d_test_impl_8cpp.xhtml#a753f5422f1714c31b62f0b8af0ade5fc">Convolution3d2x2x2Dilation2x2x2Uint8Test</a> (<a class="el" href="classarmnn_1_1_i_workload_factory.xhtml">armnn::IWorkloadFactory</a> &amp;workloadFactory, const <a class="el" href="classarmnn_1_1_i_backend_internal.xhtml#a693b40e6b94e958836aeb0410ca186bd">armnn::IBackendInternal::IMemoryManagerSharedPtr</a> &amp;memoryManager, const <a class="el" href="classarmnn_1_1_i_tensor_handle_factory.xhtml">armnn::ITensorHandleFactory</a> &amp;tensorHandleFactory, bool biasEnabled, <a class="el" href="namespacearmnn.xhtml#ad1d5cce2d9e9a5d61c243e5c989112e0">armnn::DataLayout</a> dataLayout)</td></tr>
<tr class="separator:a753f5422f1714c31b62f0b8af0ade5fc"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac176698dda319e6958ec8fdc658f3771"><td class="memItemLeft" align="right" valign="top"><a class="el" href="struct_layer_test_result.xhtml">LayerTestResult</a>&lt; int16_t, 5 &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_conv3d_test_impl_8cpp.xhtml#ac176698dda319e6958ec8fdc658f3771">Convolution3d2x2x2Dilation2x2x2Int16Test</a> (<a class="el" href="classarmnn_1_1_i_workload_factory.xhtml">armnn::IWorkloadFactory</a> &amp;workloadFactory, const <a class="el" href="classarmnn_1_1_i_backend_internal.xhtml#a693b40e6b94e958836aeb0410ca186bd">armnn::IBackendInternal::IMemoryManagerSharedPtr</a> &amp;memoryManager, const <a class="el" href="classarmnn_1_1_i_tensor_handle_factory.xhtml">armnn::ITensorHandleFactory</a> &amp;tensorHandleFactory, bool biasEnabled, <a class="el" href="namespacearmnn.xhtml#ad1d5cce2d9e9a5d61c243e5c989112e0">armnn::DataLayout</a> dataLayout)</td></tr>
<tr class="separator:ac176698dda319e6958ec8fdc658f3771"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7306e3c4bbf3369f431d02c511549cb4"><td class="memItemLeft" align="right" valign="top"><a class="el" href="struct_layer_test_result.xhtml">LayerTestResult</a>&lt; float, 5 &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_conv3d_test_impl_8cpp.xhtml#a7306e3c4bbf3369f431d02c511549cb4">Convolution3dPaddingSame3x3x3Float32Test</a> (<a class="el" href="classarmnn_1_1_i_workload_factory.xhtml">armnn::IWorkloadFactory</a> &amp;workloadFactory, const <a class="el" href="classarmnn_1_1_i_backend_internal.xhtml#a693b40e6b94e958836aeb0410ca186bd">armnn::IBackendInternal::IMemoryManagerSharedPtr</a> &amp;memoryManager, const <a class="el" href="classarmnn_1_1_i_tensor_handle_factory.xhtml">armnn::ITensorHandleFactory</a> &amp;tensorHandleFactory, bool biasEnabled, <a class="el" href="namespacearmnn.xhtml#ad1d5cce2d9e9a5d61c243e5c989112e0">armnn::DataLayout</a> dataLayout)</td></tr>
<tr class="separator:a7306e3c4bbf3369f431d02c511549cb4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a494edc54ecf36a98b35437e8c2fe1a9e"><td class="memItemLeft" align="right" valign="top"><a class="el" href="struct_layer_test_result.xhtml">LayerTestResult</a>&lt; int8_t, 5 &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_conv3d_test_impl_8cpp.xhtml#a494edc54ecf36a98b35437e8c2fe1a9e">Convolution3dPaddingSame3x3x3Int8Test</a> (<a class="el" href="classarmnn_1_1_i_workload_factory.xhtml">armnn::IWorkloadFactory</a> &amp;workloadFactory, const <a class="el" href="classarmnn_1_1_i_backend_internal.xhtml#a693b40e6b94e958836aeb0410ca186bd">armnn::IBackendInternal::IMemoryManagerSharedPtr</a> &amp;memoryManager, const <a class="el" href="classarmnn_1_1_i_tensor_handle_factory.xhtml">armnn::ITensorHandleFactory</a> &amp;tensorHandleFactory, bool biasEnabled, <a class="el" href="namespacearmnn.xhtml#ad1d5cce2d9e9a5d61c243e5c989112e0">armnn::DataLayout</a> dataLayout)</td></tr>
<tr class="separator:a494edc54ecf36a98b35437e8c2fe1a9e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7e91c39f11c5399ad8aaf8d61250aa75"><td class="memItemLeft" align="right" valign="top"><a class="el" href="struct_layer_test_result.xhtml">LayerTestResult</a>&lt; uint8_t, 5 &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_conv3d_test_impl_8cpp.xhtml#a7e91c39f11c5399ad8aaf8d61250aa75">Convolution3dPaddingSame3x3x3Uint8Test</a> (<a class="el" href="classarmnn_1_1_i_workload_factory.xhtml">armnn::IWorkloadFactory</a> &amp;workloadFactory, const <a class="el" href="classarmnn_1_1_i_backend_internal.xhtml#a693b40e6b94e958836aeb0410ca186bd">armnn::IBackendInternal::IMemoryManagerSharedPtr</a> &amp;memoryManager, const <a class="el" href="classarmnn_1_1_i_tensor_handle_factory.xhtml">armnn::ITensorHandleFactory</a> &amp;tensorHandleFactory, bool biasEnabled, <a class="el" href="namespacearmnn.xhtml#ad1d5cce2d9e9a5d61c243e5c989112e0">armnn::DataLayout</a> dataLayout)</td></tr>
<tr class="separator:a7e91c39f11c5399ad8aaf8d61250aa75"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7decbecf820e4ffcd48246ce9411f13e"><td class="memItemLeft" align="right" valign="top"><a class="el" href="struct_layer_test_result.xhtml">LayerTestResult</a>&lt; int16_t, 5 &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_conv3d_test_impl_8cpp.xhtml#a7decbecf820e4ffcd48246ce9411f13e">Convolution3dPaddingSame3x3x3Int16Test</a> (<a class="el" href="classarmnn_1_1_i_workload_factory.xhtml">armnn::IWorkloadFactory</a> &amp;workloadFactory, const <a class="el" href="classarmnn_1_1_i_backend_internal.xhtml#a693b40e6b94e958836aeb0410ca186bd">armnn::IBackendInternal::IMemoryManagerSharedPtr</a> &amp;memoryManager, const <a class="el" href="classarmnn_1_1_i_tensor_handle_factory.xhtml">armnn::ITensorHandleFactory</a> &amp;tensorHandleFactory, bool biasEnabled, <a class="el" href="namespacearmnn.xhtml#ad1d5cce2d9e9a5d61c243e5c989112e0">armnn::DataLayout</a> dataLayout)</td></tr>
<tr class="separator:a7decbecf820e4ffcd48246ce9411f13e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab92354f039394a1f144d266a2d919c63"><td class="memItemLeft" align="right" valign="top"><a class="el" href="struct_layer_test_result.xhtml">LayerTestResult</a>&lt; float, 5 &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_conv3d_test_impl_8cpp.xhtml#ab92354f039394a1f144d266a2d919c63">Convolution3dStrideDilationPadding3x3x3Float32Test</a> (<a class="el" href="classarmnn_1_1_i_workload_factory.xhtml">armnn::IWorkloadFactory</a> &amp;workloadFactory, const <a class="el" href="classarmnn_1_1_i_backend_internal.xhtml#a693b40e6b94e958836aeb0410ca186bd">armnn::IBackendInternal::IMemoryManagerSharedPtr</a> &amp;memoryManager, const <a class="el" href="classarmnn_1_1_i_tensor_handle_factory.xhtml">armnn::ITensorHandleFactory</a> &amp;tensorHandleFactory, bool biasEnabled, <a class="el" href="namespacearmnn.xhtml#ad1d5cce2d9e9a5d61c243e5c989112e0">armnn::DataLayout</a> dataLayout)</td></tr>
<tr class="separator:ab92354f039394a1f144d266a2d919c63"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a10b4c0d6aa10d1077210f105bc56a242"><td class="memItemLeft" align="right" valign="top"><a class="el" href="struct_layer_test_result.xhtml">LayerTestResult</a>&lt; float, 5 &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_conv3d_test_impl_8cpp.xhtml#a10b4c0d6aa10d1077210f105bc56a242">Convolution3d2x2x2Stride3x3x3SmallFloat32Test</a> (<a class="el" href="classarmnn_1_1_i_workload_factory.xhtml">armnn::IWorkloadFactory</a> &amp;workloadFactory, const <a class="el" href="classarmnn_1_1_i_backend_internal.xhtml#a693b40e6b94e958836aeb0410ca186bd">armnn::IBackendInternal::IMemoryManagerSharedPtr</a> &amp;memoryManager, const <a class="el" href="classarmnn_1_1_i_tensor_handle_factory.xhtml">armnn::ITensorHandleFactory</a> &amp;tensorHandleFactory, bool biasEnabled, <a class="el" href="namespacearmnn.xhtml#ad1d5cce2d9e9a5d61c243e5c989112e0">armnn::DataLayout</a> dataLayout)</td></tr>
<tr class="separator:a10b4c0d6aa10d1077210f105bc56a242"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3cdd0ad48e8cd5bd948d659b9a56a0b4"><td class="memItemLeft" align="right" valign="top"><a class="el" href="struct_layer_test_result.xhtml">LayerTestResult</a>&lt; <a class="el" href="namespacearmnn.xhtml#a0f38fa92b2468d5378258a2b074c1a31">armnn::Half</a>, 5 &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_conv3d_test_impl_8cpp.xhtml#a3cdd0ad48e8cd5bd948d659b9a56a0b4">Convolution3d2x3x3Float16Test</a> (<a class="el" href="classarmnn_1_1_i_workload_factory.xhtml">armnn::IWorkloadFactory</a> &amp;workloadFactory, const <a class="el" href="classarmnn_1_1_i_backend_internal.xhtml#a693b40e6b94e958836aeb0410ca186bd">armnn::IBackendInternal::IMemoryManagerSharedPtr</a> &amp;memoryManager, const <a class="el" href="classarmnn_1_1_i_tensor_handle_factory.xhtml">armnn::ITensorHandleFactory</a> &amp;tensorHandleFactory, bool biasEnabled, <a class="el" href="namespacearmnn.xhtml#ad1d5cce2d9e9a5d61c243e5c989112e0">armnn::DataLayout</a> dataLayout)</td></tr>
<tr class="separator:a3cdd0ad48e8cd5bd948d659b9a56a0b4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8e7d066dae8be968b1b1e649f9019bbc"><td class="memItemLeft" align="right" valign="top"><a class="el" href="struct_layer_test_result.xhtml">LayerTestResult</a>&lt; <a class="el" href="namespacearmnn.xhtml#a0f38fa92b2468d5378258a2b074c1a31">armnn::Half</a>, 5 &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_conv3d_test_impl_8cpp.xhtml#a8e7d066dae8be968b1b1e649f9019bbc">Convolution3d2x2x2SmallFloat16Test</a> (<a class="el" href="classarmnn_1_1_i_workload_factory.xhtml">armnn::IWorkloadFactory</a> &amp;workloadFactory, const <a class="el" href="classarmnn_1_1_i_backend_internal.xhtml#a693b40e6b94e958836aeb0410ca186bd">armnn::IBackendInternal::IMemoryManagerSharedPtr</a> &amp;memoryManager, const <a class="el" href="classarmnn_1_1_i_tensor_handle_factory.xhtml">armnn::ITensorHandleFactory</a> &amp;tensorHandleFactory, bool biasEnabled, <a class="el" href="namespacearmnn.xhtml#ad1d5cce2d9e9a5d61c243e5c989112e0">armnn::DataLayout</a> dataLayout)</td></tr>
<tr class="separator:a8e7d066dae8be968b1b1e649f9019bbc"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<h2 class="groupheader">Function Documentation</h2>
<a id="a41dde9c18d90c8dea2980e477d22a7fe"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a41dde9c18d90c8dea2980e477d22a7fe">&#9670;&nbsp;</a></span>ApplyBiasToData()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void ApplyBiasToData </td>
          <td>(</td>
          <td class="paramtype">std::vector&lt; T &gt; &amp;&#160;</td>
          <td class="paramname"><em>v</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const std::vector&lt; B &gt; &amp;&#160;</td>
          <td class="paramname"><em>bias</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>vScale</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int32_t&#160;</td>
          <td class="paramname"><em>vOffset</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>bScale</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int32_t&#160;</td>
          <td class="paramname"><em>bOffset</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_conv3d_test_impl_8cpp_source.xhtml#l00056">56</a> of file <a class="el" href="_conv3d_test_impl_8cpp_source.xhtml">Conv3dTestImpl.cpp</a>.</p>

<p class="reference">References <a class="el" href="_assert_8hpp_source.xhtml#l00015">ARMNN_ASSERT_MSG</a>, and <a class="el" href="_quantize_helper_8hpp_source.xhtml#l00091">armnnUtils::SelectiveDequantize()</a>.</p>

<p class="reference">Referenced by <a class="el" href="_conv3d_test_impl_8cpp_source.xhtml#l00150">SimpleConvolution3dTestImpl()</a>.</p>
<div class="fragment"><div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;{</div><div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;    <a class="code" href="_assert_8hpp.xhtml#a91c4dfde57907d7698c7531785690a7f">ARMNN_ASSERT_MSG</a>((armnn::IsQuantizedType&lt;T&gt;() &amp;&amp; vScale != 0.0f) || (!armnn::IsQuantizedType&lt;T&gt;()),</div><div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;                     <span class="stringliteral">&quot;Invalid type and parameter combination.&quot;</span>);</div><div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;    <a class="code" href="_assert_8hpp.xhtml#a91c4dfde57907d7698c7531785690a7f">ARMNN_ASSERT_MSG</a>((armnn::IsQuantizedType&lt;B&gt;() &amp;&amp; bScale != 0.0f) || (!armnn::IsQuantizedType&lt;B&gt;()),</div><div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;                     <span class="stringliteral">&quot;Invalid type and parameter combination.&quot;</span>);</div><div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;</div><div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;    <span class="keywordflow">for</span> (uint32_t i = 0; i &lt; bias.size(); ++i)</div><div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;    {</div><div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;        <span class="keywordflow">for</span> (<span class="keywordtype">size_t</span> j = i; j &lt; v.size(); j+=bias.size())</div><div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;        {</div><div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;            <span class="comment">// Note we need to dequantize and re-quantize the image value and the bias.</span></div><div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;            <span class="keywordtype">float</span> dBias = <a class="code" href="namespacearmnn_utils.xhtml#a5135dc1ce7a8aeb97623c1a92c5a3543">SelectiveDequantize</a>(bias[i], bScale, bOffset);</div><div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;</div><div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;            T&amp; outRef = v[j];</div><div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;            <span class="keywordtype">float</span> dOutput = <a class="code" href="namespacearmnn_utils.xhtml#a5135dc1ce7a8aeb97623c1a92c5a3543">SelectiveDequantize</a>(outRef, vScale, vOffset);</div><div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;            outRef = SelectiveQuantize&lt;T&gt;(dOutput + dBias, vScale, vOffset);</div><div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;        }</div><div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;    }</div><div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;}</div><div class="ttc" id="_assert_8hpp_xhtml_a91c4dfde57907d7698c7531785690a7f"><div class="ttname"><a href="_assert_8hpp.xhtml#a91c4dfde57907d7698c7531785690a7f">ARMNN_ASSERT_MSG</a></div><div class="ttdeci">#define ARMNN_ASSERT_MSG(COND, MSG)</div><div class="ttdef"><b>Definition:</b> <a href="_assert_8hpp_source.xhtml#l00015">Assert.hpp:15</a></div></div>
<div class="ttc" id="namespacearmnn_utils_xhtml_a5135dc1ce7a8aeb97623c1a92c5a3543"><div class="ttname"><a href="namespacearmnn_utils.xhtml#a5135dc1ce7a8aeb97623c1a92c5a3543">armnnUtils::SelectiveDequantize</a></div><div class="ttdeci">float SelectiveDequantize(T value, float scale, int32_t offset)</div><div class="ttdef"><b>Definition:</b> <a href="_quantize_helper_8hpp_source.xhtml#l00091">QuantizeHelper.hpp:91</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="aff7f671b6c142a9a27f6de42163c31bc"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aff7f671b6c142a9a27f6de42163c31bc">&#9670;&nbsp;</a></span>Convolution3d2x2x2Dilation2x2x2Float32Test()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="struct_layer_test_result.xhtml">LayerTestResult</a>&lt;float, 5&gt; Convolution3d2x2x2Dilation2x2x2Float32Test </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classarmnn_1_1_i_workload_factory.xhtml">armnn::IWorkloadFactory</a> &amp;&#160;</td>
          <td class="paramname"><em>workloadFactory</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_i_backend_internal.xhtml#a693b40e6b94e958836aeb0410ca186bd">armnn::IBackendInternal::IMemoryManagerSharedPtr</a> &amp;&#160;</td>
          <td class="paramname"><em>memoryManager</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_i_tensor_handle_factory.xhtml">armnn::ITensorHandleFactory</a> &amp;&#160;</td>
          <td class="paramname"><em>tensorHandleFactory</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>biasEnabled</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="namespacearmnn.xhtml#ad1d5cce2d9e9a5d61c243e5c989112e0">armnn::DataLayout</a>&#160;</td>
          <td class="paramname"><em>dataLayout</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_conv3d_test_impl_8cpp_source.xhtml#l00948">948</a> of file <a class="el" href="_conv3d_test_impl_8cpp_source.xhtml">Conv3dTestImpl.cpp</a>.</p>

<p class="reference">Referenced by <a class="el" href="_ref_layer_tests_8cpp_source.xhtml#l00014">TEST_SUITE()</a>.</p>
<div class="fragment"><div class="line"><a name="l00954"></a><span class="lineno">  954</span>&#160;{</div><div class="line"><a name="l00955"></a><span class="lineno">  955</span>&#160;    <span class="keywordflow">return</span> Convolution3d2x2x2Dilation2x2x2TestCommon&lt;armnn::DataType::Float32, armnn::DataType::Float32&gt;(</div><div class="line"><a name="l00956"></a><span class="lineno">  956</span>&#160;            workloadFactory, memoryManager, tensorHandleFactory, biasEnabled, dataLayout);</div><div class="line"><a name="l00957"></a><span class="lineno">  957</span>&#160;}</div></div><!-- fragment -->
</div>
</div>
<a id="ac176698dda319e6958ec8fdc658f3771"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ac176698dda319e6958ec8fdc658f3771">&#9670;&nbsp;</a></span>Convolution3d2x2x2Dilation2x2x2Int16Test()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="struct_layer_test_result.xhtml">LayerTestResult</a>&lt;int16_t, 5&gt; Convolution3d2x2x2Dilation2x2x2Int16Test </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classarmnn_1_1_i_workload_factory.xhtml">armnn::IWorkloadFactory</a> &amp;&#160;</td>
          <td class="paramname"><em>workloadFactory</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_i_backend_internal.xhtml#a693b40e6b94e958836aeb0410ca186bd">armnn::IBackendInternal::IMemoryManagerSharedPtr</a> &amp;&#160;</td>
          <td class="paramname"><em>memoryManager</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_i_tensor_handle_factory.xhtml">armnn::ITensorHandleFactory</a> &amp;&#160;</td>
          <td class="paramname"><em>tensorHandleFactory</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>biasEnabled</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="namespacearmnn.xhtml#ad1d5cce2d9e9a5d61c243e5c989112e0">armnn::DataLayout</a>&#160;</td>
          <td class="paramname"><em>dataLayout</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_conv3d_test_impl_8cpp_source.xhtml#l00981">981</a> of file <a class="el" href="_conv3d_test_impl_8cpp_source.xhtml">Conv3dTestImpl.cpp</a>.</p>

<p class="reference">Referenced by <a class="el" href="_ref_layer_tests_8cpp_source.xhtml#l00014">TEST_SUITE()</a>.</p>
<div class="fragment"><div class="line"><a name="l00987"></a><span class="lineno">  987</span>&#160;{</div><div class="line"><a name="l00988"></a><span class="lineno">  988</span>&#160;    <span class="keywordflow">return</span> Convolution3d2x2x2Dilation2x2x2TestCommon&lt;armnn::DataType::QSymmS16, armnn::DataType::Signed32&gt;(</div><div class="line"><a name="l00989"></a><span class="lineno">  989</span>&#160;            workloadFactory, memoryManager, tensorHandleFactory, biasEnabled, dataLayout);</div><div class="line"><a name="l00990"></a><span class="lineno">  990</span>&#160;}</div></div><!-- fragment -->
</div>
</div>
<a id="ac951dbcec6aa92bad6ca12bca60303cb"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ac951dbcec6aa92bad6ca12bca60303cb">&#9670;&nbsp;</a></span>Convolution3d2x2x2Dilation2x2x2Int8Test()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="struct_layer_test_result.xhtml">LayerTestResult</a>&lt;int8_t, 5&gt; Convolution3d2x2x2Dilation2x2x2Int8Test </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classarmnn_1_1_i_workload_factory.xhtml">armnn::IWorkloadFactory</a> &amp;&#160;</td>
          <td class="paramname"><em>workloadFactory</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_i_backend_internal.xhtml#a693b40e6b94e958836aeb0410ca186bd">armnn::IBackendInternal::IMemoryManagerSharedPtr</a> &amp;&#160;</td>
          <td class="paramname"><em>memoryManager</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_i_tensor_handle_factory.xhtml">armnn::ITensorHandleFactory</a> &amp;&#160;</td>
          <td class="paramname"><em>tensorHandleFactory</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>biasEnabled</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="namespacearmnn.xhtml#ad1d5cce2d9e9a5d61c243e5c989112e0">armnn::DataLayout</a>&#160;</td>
          <td class="paramname"><em>dataLayout</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_conv3d_test_impl_8cpp_source.xhtml#l00959">959</a> of file <a class="el" href="_conv3d_test_impl_8cpp_source.xhtml">Conv3dTestImpl.cpp</a>.</p>

<p class="reference">Referenced by <a class="el" href="_ref_layer_tests_8cpp_source.xhtml#l00014">TEST_SUITE()</a>.</p>
<div class="fragment"><div class="line"><a name="l00965"></a><span class="lineno">  965</span>&#160;{</div><div class="line"><a name="l00966"></a><span class="lineno">  966</span>&#160;    <span class="keywordflow">return</span> Convolution3d2x2x2Dilation2x2x2TestCommon&lt;armnn::DataType::QAsymmS8, armnn::DataType::Signed32&gt;(</div><div class="line"><a name="l00967"></a><span class="lineno">  967</span>&#160;            workloadFactory, memoryManager, tensorHandleFactory, biasEnabled, dataLayout);</div><div class="line"><a name="l00968"></a><span class="lineno">  968</span>&#160;}</div></div><!-- fragment -->
</div>
</div>
<a id="a0878ba921d9497706bc243ba202f7016"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a0878ba921d9497706bc243ba202f7016">&#9670;&nbsp;</a></span>Convolution3d2x2x2Dilation2x2x2TestCommon()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="struct_layer_test_result.xhtml">LayerTestResult</a>&lt;T, 5&gt; Convolution3d2x2x2Dilation2x2x2TestCommon </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classarmnn_1_1_i_workload_factory.xhtml">armnn::IWorkloadFactory</a> &amp;&#160;</td>
          <td class="paramname"><em>workloadFactory</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_i_backend_internal.xhtml#a693b40e6b94e958836aeb0410ca186bd">armnn::IBackendInternal::IMemoryManagerSharedPtr</a> &amp;&#160;</td>
          <td class="paramname"><em>memoryManager</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_i_tensor_handle_factory.xhtml">armnn::ITensorHandleFactory</a> &amp;&#160;</td>
          <td class="paramname"><em>tensorHandleFactory</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>biasEnabled</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="namespacearmnn.xhtml#ad1d5cce2d9e9a5d61c243e5c989112e0">armnn::DataLayout</a>&#160;</td>
          <td class="paramname"><em>dataLayout</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_conv3d_test_impl_8cpp_source.xhtml#l00445">445</a> of file <a class="el" href="_conv3d_test_impl_8cpp_source.xhtml">Conv3dTestImpl.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00451"></a><span class="lineno">  451</span>&#160;{</div><div class="line"><a name="l00452"></a><span class="lineno">  452</span>&#160;    <span class="keywordtype">float</span> qScale;</div><div class="line"><a name="l00453"></a><span class="lineno">  453</span>&#160;    int32_t qOffset;</div><div class="line"><a name="l00454"></a><span class="lineno">  454</span>&#160;    SetScaleOffset&lt;ArmnnType&gt;(qScale, qOffset);</div><div class="line"><a name="l00455"></a><span class="lineno">  455</span>&#160;</div><div class="line"><a name="l00456"></a><span class="lineno">  456</span>&#160;    <a class="code" href="classarmnn_1_1_tensor_info.xhtml">armnn::TensorInfo</a> inputDesc({ 1, 5, 5, 5, 2 }, ArmnnType);</div><div class="line"><a name="l00457"></a><span class="lineno">  457</span>&#160;    std::vector&lt;T&gt; input = CreateQuantizedData&lt;T&gt;(250, qScale, qOffset);</div><div class="line"><a name="l00458"></a><span class="lineno">  458</span>&#160;</div><div class="line"><a name="l00459"></a><span class="lineno">  459</span>&#160;    <a class="code" href="classarmnn_1_1_tensor_info.xhtml">armnn::TensorInfo</a> kernelDesc({ 2, 2, 2, 2, 2 }, ArmnnType);</div><div class="line"><a name="l00460"></a><span class="lineno">  460</span>&#160;    std::vector&lt;T&gt; kernel = QuantizedVector&lt;T&gt;(</div><div class="line"><a name="l00461"></a><span class="lineno">  461</span>&#160;    {</div><div class="line"><a name="l00462"></a><span class="lineno">  462</span>&#160;        -1, -1,  -1, -1,  -1, -1,  -1, -1,  -1, -1,  -1,  1,   1,  1,  -1, -1,</div><div class="line"><a name="l00463"></a><span class="lineno">  463</span>&#160;         1,  1,  -1,  1,  -1,  1,  -1,  1,  -1, -1,  -1,  1,  -1,  1,  -1,  1,</div><div class="line"><a name="l00464"></a><span class="lineno">  464</span>&#160;    },</div><div class="line"><a name="l00465"></a><span class="lineno">  465</span>&#160;    qScale, qOffset);</div><div class="line"><a name="l00466"></a><span class="lineno">  466</span>&#160;</div><div class="line"><a name="l00467"></a><span class="lineno">  467</span>&#160;    <span class="comment">// Since the dilation rate is 3 this will dilate the kernel to be 4x4,</span></div><div class="line"><a name="l00468"></a><span class="lineno">  468</span>&#160;    <span class="comment">// therefore the output will be 2x2</span></div><div class="line"><a name="l00469"></a><span class="lineno">  469</span>&#160;    <a class="code" href="classarmnn_1_1_tensor_info.xhtml">armnn::TensorInfo</a> outputDesc({ 1, 2, 2, 2, 2 }, ArmnnType);</div><div class="line"><a name="l00470"></a><span class="lineno">  470</span>&#160;    std::vector&lt;T&gt; outputData = QuantizedVector&lt;T&gt;(</div><div class="line"><a name="l00471"></a><span class="lineno">  471</span>&#160;    {</div><div class="line"><a name="l00472"></a><span class="lineno">  472</span>&#160;        -1124, 974,</div><div class="line"><a name="l00473"></a><span class="lineno">  473</span>&#160;        -1148, 978,</div><div class="line"><a name="l00474"></a><span class="lineno">  474</span>&#160;</div><div class="line"><a name="l00475"></a><span class="lineno">  475</span>&#160;        -1244, 994,</div><div class="line"><a name="l00476"></a><span class="lineno">  476</span>&#160;        -1268, 998,</div><div class="line"><a name="l00477"></a><span class="lineno">  477</span>&#160;</div><div class="line"><a name="l00478"></a><span class="lineno">  478</span>&#160;        -1724, 1074,</div><div class="line"><a name="l00479"></a><span class="lineno">  479</span>&#160;        -1748, 1078,</div><div class="line"><a name="l00480"></a><span class="lineno">  480</span>&#160;</div><div class="line"><a name="l00481"></a><span class="lineno">  481</span>&#160;        -1844, 1094,</div><div class="line"><a name="l00482"></a><span class="lineno">  482</span>&#160;        -1868, 1098</div><div class="line"><a name="l00483"></a><span class="lineno">  483</span>&#160;    },</div><div class="line"><a name="l00484"></a><span class="lineno">  484</span>&#160;    qScale, qOffset);</div><div class="line"><a name="l00485"></a><span class="lineno">  485</span>&#160;</div><div class="line"><a name="l00486"></a><span class="lineno">  486</span>&#160;    <span class="keywordflow">return</span> SimpleConvolution3dTestImpl&lt;ArmnnType, ArmnnBType&gt;(</div><div class="line"><a name="l00487"></a><span class="lineno">  487</span>&#160;            workloadFactory,</div><div class="line"><a name="l00488"></a><span class="lineno">  488</span>&#160;            memoryManager,</div><div class="line"><a name="l00489"></a><span class="lineno">  489</span>&#160;            tensorHandleFactory,</div><div class="line"><a name="l00490"></a><span class="lineno">  490</span>&#160;            input,</div><div class="line"><a name="l00491"></a><span class="lineno">  491</span>&#160;            kernel,</div><div class="line"><a name="l00492"></a><span class="lineno">  492</span>&#160;            GetBiasData&lt;ArmnnBType&gt;(biasEnabled, qScale * qScale, outputDesc, dataLayout),</div><div class="line"><a name="l00493"></a><span class="lineno">  493</span>&#160;            outputData,</div><div class="line"><a name="l00494"></a><span class="lineno">  494</span>&#160;            inputDesc.GetShape(),</div><div class="line"><a name="l00495"></a><span class="lineno">  495</span>&#160;            kernelDesc.GetShape(),</div><div class="line"><a name="l00496"></a><span class="lineno">  496</span>&#160;            outputDesc.GetShape(),</div><div class="line"><a name="l00497"></a><span class="lineno">  497</span>&#160;            dataLayout,</div><div class="line"><a name="l00498"></a><span class="lineno">  498</span>&#160;            qScale,</div><div class="line"><a name="l00499"></a><span class="lineno">  499</span>&#160;            qOffset,</div><div class="line"><a name="l00500"></a><span class="lineno">  500</span>&#160;            1, <span class="comment">// strideX</span></div><div class="line"><a name="l00501"></a><span class="lineno">  501</span>&#160;            1, <span class="comment">// strideY</span></div><div class="line"><a name="l00502"></a><span class="lineno">  502</span>&#160;            1, <span class="comment">// strideZ</span></div><div class="line"><a name="l00503"></a><span class="lineno">  503</span>&#160;            3, <span class="comment">// dilationX</span></div><div class="line"><a name="l00504"></a><span class="lineno">  504</span>&#160;            3, <span class="comment">// dilationY</span></div><div class="line"><a name="l00505"></a><span class="lineno">  505</span>&#160;            3 <span class="comment">// dilationZ</span></div><div class="line"><a name="l00506"></a><span class="lineno">  506</span>&#160;    );</div><div class="line"><a name="l00507"></a><span class="lineno">  507</span>&#160;}</div><div class="ttc" id="classarmnn_1_1_tensor_info_xhtml"><div class="ttname"><a href="classarmnn_1_1_tensor_info.xhtml">armnn::TensorInfo</a></div><div class="ttdef"><b>Definition:</b> <a href="_tensor_8hpp_source.xhtml#l00152">Tensor.hpp:152</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="a753f5422f1714c31b62f0b8af0ade5fc"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a753f5422f1714c31b62f0b8af0ade5fc">&#9670;&nbsp;</a></span>Convolution3d2x2x2Dilation2x2x2Uint8Test()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="struct_layer_test_result.xhtml">LayerTestResult</a>&lt;uint8_t, 5&gt; Convolution3d2x2x2Dilation2x2x2Uint8Test </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classarmnn_1_1_i_workload_factory.xhtml">armnn::IWorkloadFactory</a> &amp;&#160;</td>
          <td class="paramname"><em>workloadFactory</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_i_backend_internal.xhtml#a693b40e6b94e958836aeb0410ca186bd">armnn::IBackendInternal::IMemoryManagerSharedPtr</a> &amp;&#160;</td>
          <td class="paramname"><em>memoryManager</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_i_tensor_handle_factory.xhtml">armnn::ITensorHandleFactory</a> &amp;&#160;</td>
          <td class="paramname"><em>tensorHandleFactory</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>biasEnabled</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="namespacearmnn.xhtml#ad1d5cce2d9e9a5d61c243e5c989112e0">armnn::DataLayout</a>&#160;</td>
          <td class="paramname"><em>dataLayout</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_conv3d_test_impl_8cpp_source.xhtml#l00970">970</a> of file <a class="el" href="_conv3d_test_impl_8cpp_source.xhtml">Conv3dTestImpl.cpp</a>.</p>

<p class="reference">Referenced by <a class="el" href="_ref_layer_tests_8cpp_source.xhtml#l00014">TEST_SUITE()</a>.</p>
<div class="fragment"><div class="line"><a name="l00976"></a><span class="lineno">  976</span>&#160;{</div><div class="line"><a name="l00977"></a><span class="lineno">  977</span>&#160;    <span class="keywordflow">return</span> Convolution3d2x2x2Dilation2x2x2TestCommon&lt;armnn::DataType::QAsymmU8, armnn::DataType::Signed32&gt;(</div><div class="line"><a name="l00978"></a><span class="lineno">  978</span>&#160;            workloadFactory, memoryManager, tensorHandleFactory, biasEnabled, dataLayout);</div><div class="line"><a name="l00979"></a><span class="lineno">  979</span>&#160;}</div></div><!-- fragment -->
</div>
</div>
<a id="a8e7d066dae8be968b1b1e649f9019bbc"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a8e7d066dae8be968b1b1e649f9019bbc">&#9670;&nbsp;</a></span>Convolution3d2x2x2SmallFloat16Test()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="struct_layer_test_result.xhtml">LayerTestResult</a>&lt;<a class="el" href="namespacearmnn.xhtml#a0f38fa92b2468d5378258a2b074c1a31">armnn::Half</a>, 5&gt; Convolution3d2x2x2SmallFloat16Test </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classarmnn_1_1_i_workload_factory.xhtml">armnn::IWorkloadFactory</a> &amp;&#160;</td>
          <td class="paramname"><em>workloadFactory</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_i_backend_internal.xhtml#a693b40e6b94e958836aeb0410ca186bd">armnn::IBackendInternal::IMemoryManagerSharedPtr</a> &amp;&#160;</td>
          <td class="paramname"><em>memoryManager</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_i_tensor_handle_factory.xhtml">armnn::ITensorHandleFactory</a> &amp;&#160;</td>
          <td class="paramname"><em>tensorHandleFactory</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>biasEnabled</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="namespacearmnn.xhtml#ad1d5cce2d9e9a5d61c243e5c989112e0">armnn::DataLayout</a>&#160;</td>
          <td class="paramname"><em>dataLayout</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_conv3d_test_impl_8cpp_source.xhtml#l01069">1069</a> of file <a class="el" href="_conv3d_test_impl_8cpp_source.xhtml">Conv3dTestImpl.cpp</a>.</p>

<p class="reference">References <a class="el" href="_conv3d_test_impl_8cpp_source.xhtml#l00796">Convolution3d2x2x2SmallTestCommonFloat16()</a>.</p>

<p class="reference">Referenced by <a class="el" href="_cl_layer_tests_8cpp_source.xhtml#l00027">TEST_SUITE()</a>.</p>
<div class="fragment"><div class="line"><a name="l01075"></a><span class="lineno"> 1075</span>&#160;{</div><div class="line"><a name="l01076"></a><span class="lineno"> 1076</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="_conv3d_test_impl_8cpp.xhtml#a6a5b0b2846112d6280e58a36f826635c">Convolution3d2x2x2SmallTestCommonFloat16</a>(</div><div class="line"><a name="l01077"></a><span class="lineno"> 1077</span>&#160;            workloadFactory, memoryManager, tensorHandleFactory, biasEnabled, dataLayout);</div><div class="line"><a name="l01078"></a><span class="lineno"> 1078</span>&#160;}</div><div class="ttc" id="_conv3d_test_impl_8cpp_xhtml_a6a5b0b2846112d6280e58a36f826635c"><div class="ttname"><a href="_conv3d_test_impl_8cpp.xhtml#a6a5b0b2846112d6280e58a36f826635c">Convolution3d2x2x2SmallTestCommonFloat16</a></div><div class="ttdeci">LayerTestResult&lt; armnn::Half, 5 &gt; Convolution3d2x2x2SmallTestCommonFloat16(armnn::IWorkloadFactory &amp;workloadFactory, const armnn::IBackendInternal::IMemoryManagerSharedPtr &amp;memoryManager, const armnn::ITensorHandleFactory &amp;tensorHandleFactory, bool biasEnabled, armnn::DataLayout dataLayout)</div><div class="ttdef"><b>Definition:</b> <a href="_conv3d_test_impl_8cpp_source.xhtml#l00796">Conv3dTestImpl.cpp:796</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="a6a5b0b2846112d6280e58a36f826635c"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a6a5b0b2846112d6280e58a36f826635c">&#9670;&nbsp;</a></span>Convolution3d2x2x2SmallTestCommonFloat16()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="struct_layer_test_result.xhtml">LayerTestResult</a>&lt;<a class="el" href="namespacearmnn.xhtml#a0f38fa92b2468d5378258a2b074c1a31">armnn::Half</a>, 5&gt; Convolution3d2x2x2SmallTestCommonFloat16 </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classarmnn_1_1_i_workload_factory.xhtml">armnn::IWorkloadFactory</a> &amp;&#160;</td>
          <td class="paramname"><em>workloadFactory</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_i_backend_internal.xhtml#a693b40e6b94e958836aeb0410ca186bd">armnn::IBackendInternal::IMemoryManagerSharedPtr</a> &amp;&#160;</td>
          <td class="paramname"><em>memoryManager</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_i_tensor_handle_factory.xhtml">armnn::ITensorHandleFactory</a> &amp;&#160;</td>
          <td class="paramname"><em>tensorHandleFactory</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>biasEnabled</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="namespacearmnn.xhtml#ad1d5cce2d9e9a5d61c243e5c989112e0">armnn::DataLayout</a>&#160;</td>
          <td class="paramname"><em>dataLayout</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_conv3d_test_impl_8cpp_source.xhtml#l00796">796</a> of file <a class="el" href="_conv3d_test_impl_8cpp_source.xhtml">Conv3dTestImpl.cpp</a>.</p>

<p class="reference">References <a class="el" href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a26e6ed77470c6f2f830ecf874e6c0d55">armnn::Float16</a>.</p>

<p class="reference">Referenced by <a class="el" href="_conv3d_test_impl_8cpp_source.xhtml#l01069">Convolution3d2x2x2SmallFloat16Test()</a>.</p>
<div class="fragment"><div class="line"><a name="l00802"></a><span class="lineno">  802</span>&#160;{</div><div class="line"><a name="l00803"></a><span class="lineno">  803</span>&#160;    <span class="keyword">using namespace </span>half_float::literal;</div><div class="line"><a name="l00804"></a><span class="lineno">  804</span>&#160;</div><div class="line"><a name="l00805"></a><span class="lineno">  805</span>&#160;    <span class="keywordtype">float</span> qScale = 0.f;</div><div class="line"><a name="l00806"></a><span class="lineno">  806</span>&#160;    int32_t qOffset = 0;</div><div class="line"><a name="l00807"></a><span class="lineno">  807</span>&#160;</div><div class="line"><a name="l00808"></a><span class="lineno">  808</span>&#160;    <a class="code" href="classarmnn_1_1_tensor_info.xhtml">armnn::TensorInfo</a> inputDesc({ 1, 2, 4, 4, 1 }, <a class="code" href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a26e6ed77470c6f2f830ecf874e6c0d55">armnn::DataType::Float16</a>);</div><div class="line"><a name="l00809"></a><span class="lineno">  809</span>&#160;    <span class="keyword">const</span> std::vector&lt;armnn::Half&gt; input =</div><div class="line"><a name="l00810"></a><span class="lineno">  810</span>&#160;    {</div><div class="line"><a name="l00811"></a><span class="lineno">  811</span>&#160;        0.0367984_h, 0.0380895_h, 0.0420157_h,  0.0675631_h,</div><div class="line"><a name="l00812"></a><span class="lineno">  812</span>&#160;        0.0938920_h, 0.0476106_h, 0.1035490_h,  0.1260370_h,</div><div class="line"><a name="l00813"></a><span class="lineno">  813</span>&#160;        0.0461647_h, 0.0883828_h, 0.1159540_h,  0.0498519_h,</div><div class="line"><a name="l00814"></a><span class="lineno">  814</span>&#160;        0.0104630_h, 0.0154114_h, 0.00137681_h, 0.0344238_h,</div><div class="line"><a name="l00815"></a><span class="lineno">  815</span>&#160;</div><div class="line"><a name="l00816"></a><span class="lineno">  816</span>&#160;        0.0356445_h, 0.0495605_h, 0.0683594_h,  0.0991211_h,</div><div class="line"><a name="l00817"></a><span class="lineno">  817</span>&#160;        0.0461426_h, 0.0996094_h, 0.1269530_h,  0.0393066_h,</div><div class="line"><a name="l00818"></a><span class="lineno">  818</span>&#160;        0.103516_h,  0.032544_h,  0.124334_h,   0.0564566_h,</div><div class="line"><a name="l00819"></a><span class="lineno">  819</span>&#160;        0.0123544_h, 0.0461647_h, 0.0883828_h,  0.1159540_h,</div><div class="line"><a name="l00820"></a><span class="lineno">  820</span>&#160;    };</div><div class="line"><a name="l00821"></a><span class="lineno">  821</span>&#160;</div><div class="line"><a name="l00822"></a><span class="lineno">  822</span>&#160;    <a class="code" href="classarmnn_1_1_tensor_info.xhtml">armnn::TensorInfo</a> kernelDesc({ 2, 2, 2, 1, 1 }, <a class="code" href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a26e6ed77470c6f2f830ecf874e6c0d55">armnn::DataType::Float16</a>);</div><div class="line"><a name="l00823"></a><span class="lineno">  823</span>&#160;    std::vector&lt;armnn::Half&gt; kernel =</div><div class="line"><a name="l00824"></a><span class="lineno">  824</span>&#160;    {</div><div class="line"><a name="l00825"></a><span class="lineno">  825</span>&#160;        -0.126184_h, -0.150468_h,</div><div class="line"><a name="l00826"></a><span class="lineno">  826</span>&#160;        -0.101412_h, -0.0586369_h,</div><div class="line"><a name="l00827"></a><span class="lineno">  827</span>&#160;</div><div class="line"><a name="l00828"></a><span class="lineno">  828</span>&#160;        -0.0435089_h, 0.0347555_h,</div><div class="line"><a name="l00829"></a><span class="lineno">  829</span>&#160;         0.0323111_h, 0.0385381_h</div><div class="line"><a name="l00830"></a><span class="lineno">  830</span>&#160;    };</div><div class="line"><a name="l00831"></a><span class="lineno">  831</span>&#160;</div><div class="line"><a name="l00832"></a><span class="lineno">  832</span>&#160;    <a class="code" href="classarmnn_1_1_tensor_info.xhtml">armnn::TensorInfo</a> outputDesc({ 1, 1, 3, 3, 1 }, <a class="code" href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a26e6ed77470c6f2f830ecf874e6c0d55">armnn::DataType::Float16</a>);</div><div class="line"><a name="l00833"></a><span class="lineno">  833</span>&#160;    std::vector&lt;armnn::Half&gt; outputData =</div><div class="line"><a name="l00834"></a><span class="lineno">  834</span>&#160;    {</div><div class="line"><a name="l00835"></a><span class="lineno">  835</span>&#160;        -0.01718917_h, -0.01370182_h, -0.02727737_h,</div><div class="line"><a name="l00836"></a><span class="lineno">  836</span>&#160;</div><div class="line"><a name="l00837"></a><span class="lineno">  837</span>&#160;        -0.02282543_h, -0.03144084_h, -0.04468598_h,</div><div class="line"><a name="l00838"></a><span class="lineno">  838</span>&#160;</div><div class="line"><a name="l00839"></a><span class="lineno">  839</span>&#160;        -0.02228982_h, -0.02244923_h, -0.02042268_h</div><div class="line"><a name="l00840"></a><span class="lineno">  840</span>&#160;    };</div><div class="line"><a name="l00841"></a><span class="lineno">  841</span>&#160;</div><div class="line"><a name="l00842"></a><span class="lineno">  842</span>&#160;    <span class="keywordflow">return</span> SimpleConvolution3dTestImpl&lt;armnn::DataType::Float16, armnn::DataType::Float16&gt;(</div><div class="line"><a name="l00843"></a><span class="lineno">  843</span>&#160;            workloadFactory,</div><div class="line"><a name="l00844"></a><span class="lineno">  844</span>&#160;            memoryManager,</div><div class="line"><a name="l00845"></a><span class="lineno">  845</span>&#160;            tensorHandleFactory,</div><div class="line"><a name="l00846"></a><span class="lineno">  846</span>&#160;            input,</div><div class="line"><a name="l00847"></a><span class="lineno">  847</span>&#160;            kernel,</div><div class="line"><a name="l00848"></a><span class="lineno">  848</span>&#160;            GetBiasData&lt;armnn::DataType::Float16&gt;(biasEnabled, qScale * qScale, outputDesc, dataLayout),</div><div class="line"><a name="l00849"></a><span class="lineno">  849</span>&#160;            outputData,</div><div class="line"><a name="l00850"></a><span class="lineno">  850</span>&#160;            inputDesc.GetShape(),</div><div class="line"><a name="l00851"></a><span class="lineno">  851</span>&#160;            kernelDesc.GetShape(),</div><div class="line"><a name="l00852"></a><span class="lineno">  852</span>&#160;            outputDesc.GetShape(),</div><div class="line"><a name="l00853"></a><span class="lineno">  853</span>&#160;            dataLayout,</div><div class="line"><a name="l00854"></a><span class="lineno">  854</span>&#160;            qScale,</div><div class="line"><a name="l00855"></a><span class="lineno">  855</span>&#160;            qOffset</div><div class="line"><a name="l00856"></a><span class="lineno">  856</span>&#160;    );</div><div class="line"><a name="l00857"></a><span class="lineno">  857</span>&#160;}</div><div class="ttc" id="classarmnn_1_1_tensor_info_xhtml"><div class="ttname"><a href="classarmnn_1_1_tensor_info.xhtml">armnn::TensorInfo</a></div><div class="ttdef"><b>Definition:</b> <a href="_tensor_8hpp_source.xhtml#l00152">Tensor.hpp:152</a></div></div>
<div class="ttc" id="namespacearmnn_xhtml_ad8ed01ff3ff33333d8e19db4d2818bb6a26e6ed77470c6f2f830ecf874e6c0d55"><div class="ttname"><a href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a26e6ed77470c6f2f830ecf874e6c0d55">armnn::DataType::Float16</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="a10b4c0d6aa10d1077210f105bc56a242"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a10b4c0d6aa10d1077210f105bc56a242">&#9670;&nbsp;</a></span>Convolution3d2x2x2Stride3x3x3SmallFloat32Test()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="struct_layer_test_result.xhtml">LayerTestResult</a>&lt;float, 5&gt; Convolution3d2x2x2Stride3x3x3SmallFloat32Test </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classarmnn_1_1_i_workload_factory.xhtml">armnn::IWorkloadFactory</a> &amp;&#160;</td>
          <td class="paramname"><em>workloadFactory</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_i_backend_internal.xhtml#a693b40e6b94e958836aeb0410ca186bd">armnn::IBackendInternal::IMemoryManagerSharedPtr</a> &amp;&#160;</td>
          <td class="paramname"><em>memoryManager</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_i_tensor_handle_factory.xhtml">armnn::ITensorHandleFactory</a> &amp;&#160;</td>
          <td class="paramname"><em>tensorHandleFactory</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>biasEnabled</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="namespacearmnn.xhtml#ad1d5cce2d9e9a5d61c243e5c989112e0">armnn::DataLayout</a>&#160;</td>
          <td class="paramname"><em>dataLayout</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_conv3d_test_impl_8cpp_source.xhtml#l01047">1047</a> of file <a class="el" href="_conv3d_test_impl_8cpp_source.xhtml">Conv3dTestImpl.cpp</a>.</p>

<p class="reference">References <a class="el" href="_conv3d_test_impl_8cpp_source.xhtml#l00668">Convolution3d2x2x2Stride3x3x3SmallTestCommonFloat32()</a>.</p>

<p class="reference">Referenced by <a class="el" href="_cl_layer_tests_8cpp_source.xhtml#l00027">TEST_SUITE()</a>.</p>
<div class="fragment"><div class="line"><a name="l01053"></a><span class="lineno"> 1053</span>&#160;{</div><div class="line"><a name="l01054"></a><span class="lineno"> 1054</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="_conv3d_test_impl_8cpp.xhtml#a4668f0282ba880fed2768558243ccf00">Convolution3d2x2x2Stride3x3x3SmallTestCommonFloat32</a>(</div><div class="line"><a name="l01055"></a><span class="lineno"> 1055</span>&#160;            workloadFactory, memoryManager, tensorHandleFactory, biasEnabled, dataLayout);</div><div class="line"><a name="l01056"></a><span class="lineno"> 1056</span>&#160;}</div><div class="ttc" id="_conv3d_test_impl_8cpp_xhtml_a4668f0282ba880fed2768558243ccf00"><div class="ttname"><a href="_conv3d_test_impl_8cpp.xhtml#a4668f0282ba880fed2768558243ccf00">Convolution3d2x2x2Stride3x3x3SmallTestCommonFloat32</a></div><div class="ttdeci">LayerTestResult&lt; float, 5 &gt; Convolution3d2x2x2Stride3x3x3SmallTestCommonFloat32(armnn::IWorkloadFactory &amp;workloadFactory, const armnn::IBackendInternal::IMemoryManagerSharedPtr &amp;memoryManager, const armnn::ITensorHandleFactory &amp;tensorHandleFactory, bool biasEnabled, armnn::DataLayout dataLayout)</div><div class="ttdef"><b>Definition:</b> <a href="_conv3d_test_impl_8cpp_source.xhtml#l00668">Conv3dTestImpl.cpp:668</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="a4668f0282ba880fed2768558243ccf00"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a4668f0282ba880fed2768558243ccf00">&#9670;&nbsp;</a></span>Convolution3d2x2x2Stride3x3x3SmallTestCommonFloat32()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="struct_layer_test_result.xhtml">LayerTestResult</a>&lt;float, 5&gt; Convolution3d2x2x2Stride3x3x3SmallTestCommonFloat32 </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classarmnn_1_1_i_workload_factory.xhtml">armnn::IWorkloadFactory</a> &amp;&#160;</td>
          <td class="paramname"><em>workloadFactory</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_i_backend_internal.xhtml#a693b40e6b94e958836aeb0410ca186bd">armnn::IBackendInternal::IMemoryManagerSharedPtr</a> &amp;&#160;</td>
          <td class="paramname"><em>memoryManager</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_i_tensor_handle_factory.xhtml">armnn::ITensorHandleFactory</a> &amp;&#160;</td>
          <td class="paramname"><em>tensorHandleFactory</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>biasEnabled</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="namespacearmnn.xhtml#ad1d5cce2d9e9a5d61c243e5c989112e0">armnn::DataLayout</a>&#160;</td>
          <td class="paramname"><em>dataLayout</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_conv3d_test_impl_8cpp_source.xhtml#l00668">668</a> of file <a class="el" href="_conv3d_test_impl_8cpp_source.xhtml">Conv3dTestImpl.cpp</a>.</p>

<p class="reference">References <a class="el" href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a166495adc0d0f53bee6baecc577f5204">armnn::Float32</a>.</p>

<p class="reference">Referenced by <a class="el" href="_conv3d_test_impl_8cpp_source.xhtml#l01047">Convolution3d2x2x2Stride3x3x3SmallFloat32Test()</a>.</p>
<div class="fragment"><div class="line"><a name="l00674"></a><span class="lineno">  674</span>&#160;{</div><div class="line"><a name="l00675"></a><span class="lineno">  675</span>&#160;    <span class="keywordtype">float</span> qScale = 0.f;</div><div class="line"><a name="l00676"></a><span class="lineno">  676</span>&#160;    int32_t qOffset = 0;</div><div class="line"><a name="l00677"></a><span class="lineno">  677</span>&#160;</div><div class="line"><a name="l00678"></a><span class="lineno">  678</span>&#160;    <a class="code" href="classarmnn_1_1_tensor_info.xhtml">armnn::TensorInfo</a> inputDesc({ 1, 3, 10, 10, 1 }, <a class="code" href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a166495adc0d0f53bee6baecc577f5204">armnn::DataType::Float32</a>);</div><div class="line"><a name="l00679"></a><span class="lineno">  679</span>&#160;    std::vector&lt;float&gt; input = CreateSmallQuantizedData&lt;float&gt;(300, 100.0f, qScale, qOffset);</div><div class="line"><a name="l00680"></a><span class="lineno">  680</span>&#160;</div><div class="line"><a name="l00681"></a><span class="lineno">  681</span>&#160;    <a class="code" href="classarmnn_1_1_tensor_info.xhtml">armnn::TensorInfo</a> kernelDesc({ 3, 3, 3, 1, 1 }, <a class="code" href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a166495adc0d0f53bee6baecc577f5204">armnn::DataType::Float32</a>);</div><div class="line"><a name="l00682"></a><span class="lineno">  682</span>&#160;    std::vector&lt;float&gt; kernel =</div><div class="line"><a name="l00683"></a><span class="lineno">  683</span>&#160;    {</div><div class="line"><a name="l00684"></a><span class="lineno">  684</span>&#160;         0.125977f,  0.150391f,  0.101562f,</div><div class="line"><a name="l00685"></a><span class="lineno">  685</span>&#160;         0.0585938f, 0.0864258f, 0.043457f,</div><div class="line"><a name="l00686"></a><span class="lineno">  686</span>&#160;         0.034668f,  0.0322266f, 0.0385742f,</div><div class="line"><a name="l00687"></a><span class="lineno">  687</span>&#160;</div><div class="line"><a name="l00688"></a><span class="lineno">  688</span>&#160;         0.125977f,  0.150391f, -0.101562f,</div><div class="line"><a name="l00689"></a><span class="lineno">  689</span>&#160;        -0.0585938f,-0.0864258f,-0.043457f,</div><div class="line"><a name="l00690"></a><span class="lineno">  690</span>&#160;        -0.0104630f, 0.0154114f, 0.0013768f,</div><div class="line"><a name="l00691"></a><span class="lineno">  691</span>&#160;</div><div class="line"><a name="l00692"></a><span class="lineno">  692</span>&#160;         0.0344238f, 0.035644f,  0.0495605f,</div><div class="line"><a name="l00693"></a><span class="lineno">  693</span>&#160;         0.0683594f, 0.099121f, -0.0461426f,</div><div class="line"><a name="l00694"></a><span class="lineno">  694</span>&#160;        -0.0996094f,-0.126953f, -0.043457f,</div><div class="line"><a name="l00695"></a><span class="lineno">  695</span>&#160;    };</div><div class="line"><a name="l00696"></a><span class="lineno">  696</span>&#160;</div><div class="line"><a name="l00697"></a><span class="lineno">  697</span>&#160;    <a class="code" href="classarmnn_1_1_tensor_info.xhtml">armnn::TensorInfo</a> outputDesc({ 1, 1, 4, 4, 1 }, <a class="code" href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a166495adc0d0f53bee6baecc577f5204">armnn::DataType::Float32</a>);</div><div class="line"><a name="l00698"></a><span class="lineno">  698</span>&#160;    std::vector&lt;float&gt; outputData =</div><div class="line"><a name="l00699"></a><span class="lineno">  699</span>&#160;    {</div><div class="line"><a name="l00700"></a><span class="lineno">  700</span>&#160;        -0.08156067f, -0.06891209f, -0.05589598f, -0.04310101f,</div><div class="line"><a name="l00701"></a><span class="lineno">  701</span>&#160;        0.04584253f,   0.05855697f,  0.07129729f,  0.08325434f,</div><div class="line"><a name="l00702"></a><span class="lineno">  702</span>&#160;        0.17304349f,   0.18521416f,  0.19818866f,  0.21096253f,</div><div class="line"><a name="l00703"></a><span class="lineno">  703</span>&#160;        0.29965734f,   0.312698f,    0.32547557f,  0.33818722f</div><div class="line"><a name="l00704"></a><span class="lineno">  704</span>&#160;    };</div><div class="line"><a name="l00705"></a><span class="lineno">  705</span>&#160;</div><div class="line"><a name="l00706"></a><span class="lineno">  706</span>&#160;    <span class="keywordflow">return</span> SimpleConvolution3dTestImpl&lt;armnn::DataType::Float32, armnn::DataType::Float32&gt;(</div><div class="line"><a name="l00707"></a><span class="lineno">  707</span>&#160;            workloadFactory,</div><div class="line"><a name="l00708"></a><span class="lineno">  708</span>&#160;            memoryManager,</div><div class="line"><a name="l00709"></a><span class="lineno">  709</span>&#160;            tensorHandleFactory,</div><div class="line"><a name="l00710"></a><span class="lineno">  710</span>&#160;            input,</div><div class="line"><a name="l00711"></a><span class="lineno">  711</span>&#160;            kernel,</div><div class="line"><a name="l00712"></a><span class="lineno">  712</span>&#160;            GetBiasData&lt;armnn::DataType::Float32&gt;(biasEnabled, qScale * qScale, outputDesc, dataLayout),</div><div class="line"><a name="l00713"></a><span class="lineno">  713</span>&#160;            outputData,</div><div class="line"><a name="l00714"></a><span class="lineno">  714</span>&#160;            inputDesc.GetShape(),</div><div class="line"><a name="l00715"></a><span class="lineno">  715</span>&#160;            kernelDesc.GetShape(),</div><div class="line"><a name="l00716"></a><span class="lineno">  716</span>&#160;            outputDesc.GetShape(),</div><div class="line"><a name="l00717"></a><span class="lineno">  717</span>&#160;            dataLayout,</div><div class="line"><a name="l00718"></a><span class="lineno">  718</span>&#160;            qScale,</div><div class="line"><a name="l00719"></a><span class="lineno">  719</span>&#160;            qOffset,</div><div class="line"><a name="l00720"></a><span class="lineno">  720</span>&#160;            2, <span class="comment">// strideX</span></div><div class="line"><a name="l00721"></a><span class="lineno">  721</span>&#160;            2, <span class="comment">// strideY</span></div><div class="line"><a name="l00722"></a><span class="lineno">  722</span>&#160;            2  <span class="comment">// strideZ</span></div><div class="line"><a name="l00723"></a><span class="lineno">  723</span>&#160;    );</div><div class="line"><a name="l00724"></a><span class="lineno">  724</span>&#160;}</div><div class="ttc" id="classarmnn_1_1_tensor_info_xhtml"><div class="ttname"><a href="classarmnn_1_1_tensor_info.xhtml">armnn::TensorInfo</a></div><div class="ttdef"><b>Definition:</b> <a href="_tensor_8hpp_source.xhtml#l00152">Tensor.hpp:152</a></div></div>
<div class="ttc" id="namespacearmnn_xhtml_ad8ed01ff3ff33333d8e19db4d2818bb6a166495adc0d0f53bee6baecc577f5204"><div class="ttname"><a href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a166495adc0d0f53bee6baecc577f5204">armnn::DataType::Float32</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="a7e32be2b43d18a12bfd8e47ad4cd0b46"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a7e32be2b43d18a12bfd8e47ad4cd0b46">&#9670;&nbsp;</a></span>Convolution3d2x2x2Strides3x5x5Float32Test()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="struct_layer_test_result.xhtml">LayerTestResult</a>&lt;float, 5&gt; Convolution3d2x2x2Strides3x5x5Float32Test </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classarmnn_1_1_i_workload_factory.xhtml">armnn::IWorkloadFactory</a> &amp;&#160;</td>
          <td class="paramname"><em>workloadFactory</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_i_backend_internal.xhtml#a693b40e6b94e958836aeb0410ca186bd">armnn::IBackendInternal::IMemoryManagerSharedPtr</a> &amp;&#160;</td>
          <td class="paramname"><em>memoryManager</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_i_tensor_handle_factory.xhtml">armnn::ITensorHandleFactory</a> &amp;&#160;</td>
          <td class="paramname"><em>tensorHandleFactory</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>biasEnabled</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="namespacearmnn.xhtml#ad1d5cce2d9e9a5d61c243e5c989112e0">armnn::DataLayout</a>&#160;</td>
          <td class="paramname"><em>dataLayout</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_conv3d_test_impl_8cpp_source.xhtml#l00904">904</a> of file <a class="el" href="_conv3d_test_impl_8cpp_source.xhtml">Conv3dTestImpl.cpp</a>.</p>

<p class="reference">Referenced by <a class="el" href="_cl_layer_tests_8cpp_source.xhtml#l00027">TEST_SUITE()</a>.</p>
<div class="fragment"><div class="line"><a name="l00910"></a><span class="lineno">  910</span>&#160;{</div><div class="line"><a name="l00911"></a><span class="lineno">  911</span>&#160;    <span class="keywordflow">return</span> Convolution3d2x2x2Strides3x5x5TestCommon&lt;armnn::DataType::Float32, armnn::DataType::Float32&gt;(</div><div class="line"><a name="l00912"></a><span class="lineno">  912</span>&#160;            workloadFactory, memoryManager, tensorHandleFactory, biasEnabled, dataLayout);</div><div class="line"><a name="l00913"></a><span class="lineno">  913</span>&#160;}</div></div><!-- fragment -->
</div>
</div>
<a id="a58289ea01aec699a91f8184db7bbda20"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a58289ea01aec699a91f8184db7bbda20">&#9670;&nbsp;</a></span>Convolution3d2x2x2Strides3x5x5Int16Test()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="struct_layer_test_result.xhtml">LayerTestResult</a>&lt;int16_t, 5&gt; Convolution3d2x2x2Strides3x5x5Int16Test </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classarmnn_1_1_i_workload_factory.xhtml">armnn::IWorkloadFactory</a> &amp;&#160;</td>
          <td class="paramname"><em>workloadFactory</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_i_backend_internal.xhtml#a693b40e6b94e958836aeb0410ca186bd">armnn::IBackendInternal::IMemoryManagerSharedPtr</a> &amp;&#160;</td>
          <td class="paramname"><em>memoryManager</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_i_tensor_handle_factory.xhtml">armnn::ITensorHandleFactory</a> &amp;&#160;</td>
          <td class="paramname"><em>tensorHandleFactory</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>biasEnabled</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="namespacearmnn.xhtml#ad1d5cce2d9e9a5d61c243e5c989112e0">armnn::DataLayout</a>&#160;</td>
          <td class="paramname"><em>dataLayout</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_conv3d_test_impl_8cpp_source.xhtml#l00937">937</a> of file <a class="el" href="_conv3d_test_impl_8cpp_source.xhtml">Conv3dTestImpl.cpp</a>.</p>

<p class="reference">Referenced by <a class="el" href="_ref_layer_tests_8cpp_source.xhtml#l00014">TEST_SUITE()</a>.</p>
<div class="fragment"><div class="line"><a name="l00943"></a><span class="lineno">  943</span>&#160;{</div><div class="line"><a name="l00944"></a><span class="lineno">  944</span>&#160;    <span class="keywordflow">return</span> Convolution3d2x2x2Strides3x5x5TestCommon&lt;armnn::DataType::QSymmS16, armnn::DataType::Signed32&gt;(</div><div class="line"><a name="l00945"></a><span class="lineno">  945</span>&#160;            workloadFactory, memoryManager, tensorHandleFactory, biasEnabled, dataLayout);</div><div class="line"><a name="l00946"></a><span class="lineno">  946</span>&#160;}</div></div><!-- fragment -->
</div>
</div>
<a id="a3be73c19cbb7ea724b7e5e777d3acf62"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a3be73c19cbb7ea724b7e5e777d3acf62">&#9670;&nbsp;</a></span>Convolution3d2x2x2Strides3x5x5Int8Test()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="struct_layer_test_result.xhtml">LayerTestResult</a>&lt;int8_t, 5&gt; Convolution3d2x2x2Strides3x5x5Int8Test </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classarmnn_1_1_i_workload_factory.xhtml">armnn::IWorkloadFactory</a> &amp;&#160;</td>
          <td class="paramname"><em>workloadFactory</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_i_backend_internal.xhtml#a693b40e6b94e958836aeb0410ca186bd">armnn::IBackendInternal::IMemoryManagerSharedPtr</a> &amp;&#160;</td>
          <td class="paramname"><em>memoryManager</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_i_tensor_handle_factory.xhtml">armnn::ITensorHandleFactory</a> &amp;&#160;</td>
          <td class="paramname"><em>tensorHandleFactory</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>biasEnabled</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="namespacearmnn.xhtml#ad1d5cce2d9e9a5d61c243e5c989112e0">armnn::DataLayout</a>&#160;</td>
          <td class="paramname"><em>dataLayout</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_conv3d_test_impl_8cpp_source.xhtml#l00915">915</a> of file <a class="el" href="_conv3d_test_impl_8cpp_source.xhtml">Conv3dTestImpl.cpp</a>.</p>

<p class="reference">Referenced by <a class="el" href="_cl_layer_tests_8cpp_source.xhtml#l00027">TEST_SUITE()</a>.</p>
<div class="fragment"><div class="line"><a name="l00921"></a><span class="lineno">  921</span>&#160;{</div><div class="line"><a name="l00922"></a><span class="lineno">  922</span>&#160;    <span class="keywordflow">return</span> Convolution3d2x2x2Strides3x5x5TestCommon&lt;armnn::DataType::QAsymmS8, armnn::DataType::Signed32&gt;(</div><div class="line"><a name="l00923"></a><span class="lineno">  923</span>&#160;            workloadFactory, memoryManager, tensorHandleFactory, biasEnabled, dataLayout);</div><div class="line"><a name="l00924"></a><span class="lineno">  924</span>&#160;}</div></div><!-- fragment -->
</div>
</div>
<a id="afbace158a4ab4aacb4def9b30f4e4d65"></a>
<h2 class="memtitle"><span class="permalink"><a href="#afbace158a4ab4aacb4def9b30f4e4d65">&#9670;&nbsp;</a></span>Convolution3d2x2x2Strides3x5x5TestCommon()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="struct_layer_test_result.xhtml">LayerTestResult</a>&lt;T, 5&gt; Convolution3d2x2x2Strides3x5x5TestCommon </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classarmnn_1_1_i_workload_factory.xhtml">armnn::IWorkloadFactory</a> &amp;&#160;</td>
          <td class="paramname"><em>workloadFactory</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_i_backend_internal.xhtml#a693b40e6b94e958836aeb0410ca186bd">armnn::IBackendInternal::IMemoryManagerSharedPtr</a> &amp;&#160;</td>
          <td class="paramname"><em>memoryManager</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_i_tensor_handle_factory.xhtml">armnn::ITensorHandleFactory</a> &amp;&#160;</td>
          <td class="paramname"><em>tensorHandleFactory</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>biasEnabled</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="namespacearmnn.xhtml#ad1d5cce2d9e9a5d61c243e5c989112e0">armnn::DataLayout</a>&#160;</td>
          <td class="paramname"><em>dataLayout</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_conv3d_test_impl_8cpp_source.xhtml#l00374">374</a> of file <a class="el" href="_conv3d_test_impl_8cpp_source.xhtml">Conv3dTestImpl.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00380"></a><span class="lineno">  380</span>&#160;{</div><div class="line"><a name="l00381"></a><span class="lineno">  381</span>&#160;    <span class="keywordtype">float</span> qScale;</div><div class="line"><a name="l00382"></a><span class="lineno">  382</span>&#160;    int32_t qOffset;</div><div class="line"><a name="l00383"></a><span class="lineno">  383</span>&#160;    SetScaleOffset&lt;ArmnnType&gt;(qScale, qOffset);</div><div class="line"><a name="l00384"></a><span class="lineno">  384</span>&#160;</div><div class="line"><a name="l00385"></a><span class="lineno">  385</span>&#160;    <a class="code" href="classarmnn_1_1_tensor_info.xhtml">armnn::TensorInfo</a> inputDesc({ 1, 3, 10, 10, 1 }, ArmnnType);</div><div class="line"><a name="l00386"></a><span class="lineno">  386</span>&#160;    std::vector&lt;T&gt; input = CreateQuantizedData&lt;T&gt;(300, qScale, qOffset);</div><div class="line"><a name="l00387"></a><span class="lineno">  387</span>&#160;</div><div class="line"><a name="l00388"></a><span class="lineno">  388</span>&#160;    <a class="code" href="classarmnn_1_1_tensor_info.xhtml">armnn::TensorInfo</a> kernelDesc({ 3, 5, 5, 1, 1 }, ArmnnType);</div><div class="line"><a name="l00389"></a><span class="lineno">  389</span>&#160;    std::vector&lt;T&gt; kernel = QuantizedVector&lt;T&gt;(</div><div class="line"><a name="l00390"></a><span class="lineno">  390</span>&#160;    {</div><div class="line"><a name="l00391"></a><span class="lineno">  391</span>&#160;        1, 1, 1, 1, 1,</div><div class="line"><a name="l00392"></a><span class="lineno">  392</span>&#160;        1, 1, 1, 1, 1,</div><div class="line"><a name="l00393"></a><span class="lineno">  393</span>&#160;        1, 1, 1, 1, 1,</div><div class="line"><a name="l00394"></a><span class="lineno">  394</span>&#160;        1, 1, 1, 1, 1,</div><div class="line"><a name="l00395"></a><span class="lineno">  395</span>&#160;        1, 1, 1, 1, 1,</div><div class="line"><a name="l00396"></a><span class="lineno">  396</span>&#160;</div><div class="line"><a name="l00397"></a><span class="lineno">  397</span>&#160;        0, 0, 0, 0, 0,</div><div class="line"><a name="l00398"></a><span class="lineno">  398</span>&#160;        0, 0, 0, 0, 0,</div><div class="line"><a name="l00399"></a><span class="lineno">  399</span>&#160;        0, 0, 0, 0, 0,</div><div class="line"><a name="l00400"></a><span class="lineno">  400</span>&#160;        0, 0, 0, 0, 0,</div><div class="line"><a name="l00401"></a><span class="lineno">  401</span>&#160;        0, 0, 0, 0, 0,</div><div class="line"><a name="l00402"></a><span class="lineno">  402</span>&#160;</div><div class="line"><a name="l00403"></a><span class="lineno">  403</span>&#160;        2, 2, 2, 2, 2,</div><div class="line"><a name="l00404"></a><span class="lineno">  404</span>&#160;        2, 2, 2, 2, 2,</div><div class="line"><a name="l00405"></a><span class="lineno">  405</span>&#160;        2, 2, 2, 2, 2,</div><div class="line"><a name="l00406"></a><span class="lineno">  406</span>&#160;        2, 2, 2, 2, 2,</div><div class="line"><a name="l00407"></a><span class="lineno">  407</span>&#160;        2, 2, 2, 2, 2,</div><div class="line"><a name="l00408"></a><span class="lineno">  408</span>&#160;    },</div><div class="line"><a name="l00409"></a><span class="lineno">  409</span>&#160;    qScale, qOffset);</div><div class="line"><a name="l00410"></a><span class="lineno">  410</span>&#160;</div><div class="line"><a name="l00411"></a><span class="lineno">  411</span>&#160;    <a class="code" href="classarmnn_1_1_tensor_info.xhtml">armnn::TensorInfo</a> outputDesc({ 1, 1, 3, 3, 1 }, ArmnnType);</div><div class="line"><a name="l00412"></a><span class="lineno">  412</span>&#160;    std::vector&lt;T&gt; outputData = QuantizedVector&lt;T&gt;(</div><div class="line"><a name="l00413"></a><span class="lineno">  413</span>&#160;    {</div><div class="line"><a name="l00414"></a><span class="lineno">  414</span>&#160;        11650, 11800, 11950,</div><div class="line"><a name="l00415"></a><span class="lineno">  415</span>&#160;</div><div class="line"><a name="l00416"></a><span class="lineno">  416</span>&#160;        13150, 13300, 13450,</div><div class="line"><a name="l00417"></a><span class="lineno">  417</span>&#160;</div><div class="line"><a name="l00418"></a><span class="lineno">  418</span>&#160;        14650, 14800, 14950</div><div class="line"><a name="l00419"></a><span class="lineno">  419</span>&#160;    },</div><div class="line"><a name="l00420"></a><span class="lineno">  420</span>&#160;    qScale, qOffset);</div><div class="line"><a name="l00421"></a><span class="lineno">  421</span>&#160;</div><div class="line"><a name="l00422"></a><span class="lineno">  422</span>&#160;    <span class="keywordflow">return</span> SimpleConvolution3dTestImpl&lt;ArmnnType, ArmnnBType&gt;(</div><div class="line"><a name="l00423"></a><span class="lineno">  423</span>&#160;            workloadFactory,</div><div class="line"><a name="l00424"></a><span class="lineno">  424</span>&#160;            memoryManager,</div><div class="line"><a name="l00425"></a><span class="lineno">  425</span>&#160;            tensorHandleFactory,</div><div class="line"><a name="l00426"></a><span class="lineno">  426</span>&#160;            input,</div><div class="line"><a name="l00427"></a><span class="lineno">  427</span>&#160;            kernel,</div><div class="line"><a name="l00428"></a><span class="lineno">  428</span>&#160;            GetBiasData&lt;ArmnnBType&gt;(biasEnabled, qScale * qScale, outputDesc, dataLayout),</div><div class="line"><a name="l00429"></a><span class="lineno">  429</span>&#160;            outputData,</div><div class="line"><a name="l00430"></a><span class="lineno">  430</span>&#160;            inputDesc.GetShape(),</div><div class="line"><a name="l00431"></a><span class="lineno">  431</span>&#160;            kernelDesc.GetShape(),</div><div class="line"><a name="l00432"></a><span class="lineno">  432</span>&#160;            outputDesc.GetShape(),</div><div class="line"><a name="l00433"></a><span class="lineno">  433</span>&#160;            dataLayout,</div><div class="line"><a name="l00434"></a><span class="lineno">  434</span>&#160;            qScale,</div><div class="line"><a name="l00435"></a><span class="lineno">  435</span>&#160;            qOffset,</div><div class="line"><a name="l00436"></a><span class="lineno">  436</span>&#160;            2, <span class="comment">// strideX</span></div><div class="line"><a name="l00437"></a><span class="lineno">  437</span>&#160;            2, <span class="comment">// strideY</span></div><div class="line"><a name="l00438"></a><span class="lineno">  438</span>&#160;            2  <span class="comment">// strideZ</span></div><div class="line"><a name="l00439"></a><span class="lineno">  439</span>&#160;    );</div><div class="line"><a name="l00440"></a><span class="lineno">  440</span>&#160;}</div><div class="ttc" id="classarmnn_1_1_tensor_info_xhtml"><div class="ttname"><a href="classarmnn_1_1_tensor_info.xhtml">armnn::TensorInfo</a></div><div class="ttdef"><b>Definition:</b> <a href="_tensor_8hpp_source.xhtml#l00152">Tensor.hpp:152</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="aeb54439f726cc853209509e730e876e6"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aeb54439f726cc853209509e730e876e6">&#9670;&nbsp;</a></span>Convolution3d2x2x2Strides3x5x5Uint8Test()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="struct_layer_test_result.xhtml">LayerTestResult</a>&lt;uint8_t, 5&gt; Convolution3d2x2x2Strides3x5x5Uint8Test </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classarmnn_1_1_i_workload_factory.xhtml">armnn::IWorkloadFactory</a> &amp;&#160;</td>
          <td class="paramname"><em>workloadFactory</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_i_backend_internal.xhtml#a693b40e6b94e958836aeb0410ca186bd">armnn::IBackendInternal::IMemoryManagerSharedPtr</a> &amp;&#160;</td>
          <td class="paramname"><em>memoryManager</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_i_tensor_handle_factory.xhtml">armnn::ITensorHandleFactory</a> &amp;&#160;</td>
          <td class="paramname"><em>tensorHandleFactory</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>biasEnabled</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="namespacearmnn.xhtml#ad1d5cce2d9e9a5d61c243e5c989112e0">armnn::DataLayout</a>&#160;</td>
          <td class="paramname"><em>dataLayout</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_conv3d_test_impl_8cpp_source.xhtml#l00926">926</a> of file <a class="el" href="_conv3d_test_impl_8cpp_source.xhtml">Conv3dTestImpl.cpp</a>.</p>

<p class="reference">Referenced by <a class="el" href="_cl_layer_tests_8cpp_source.xhtml#l00027">TEST_SUITE()</a>.</p>
<div class="fragment"><div class="line"><a name="l00932"></a><span class="lineno">  932</span>&#160;{</div><div class="line"><a name="l00933"></a><span class="lineno">  933</span>&#160;    <span class="keywordflow">return</span> Convolution3d2x2x2Strides3x5x5TestCommon&lt;armnn::DataType::QAsymmU8, armnn::DataType::Signed32&gt;(</div><div class="line"><a name="l00934"></a><span class="lineno">  934</span>&#160;            workloadFactory, memoryManager, tensorHandleFactory, biasEnabled, dataLayout);</div><div class="line"><a name="l00935"></a><span class="lineno">  935</span>&#160;}</div></div><!-- fragment -->
</div>
</div>
<a id="a3cdd0ad48e8cd5bd948d659b9a56a0b4"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a3cdd0ad48e8cd5bd948d659b9a56a0b4">&#9670;&nbsp;</a></span>Convolution3d2x3x3Float16Test()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="struct_layer_test_result.xhtml">LayerTestResult</a>&lt;<a class="el" href="namespacearmnn.xhtml#a0f38fa92b2468d5378258a2b074c1a31">armnn::Half</a>, 5&gt; Convolution3d2x3x3Float16Test </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classarmnn_1_1_i_workload_factory.xhtml">armnn::IWorkloadFactory</a> &amp;&#160;</td>
          <td class="paramname"><em>workloadFactory</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_i_backend_internal.xhtml#a693b40e6b94e958836aeb0410ca186bd">armnn::IBackendInternal::IMemoryManagerSharedPtr</a> &amp;&#160;</td>
          <td class="paramname"><em>memoryManager</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_i_tensor_handle_factory.xhtml">armnn::ITensorHandleFactory</a> &amp;&#160;</td>
          <td class="paramname"><em>tensorHandleFactory</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>biasEnabled</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="namespacearmnn.xhtml#ad1d5cce2d9e9a5d61c243e5c989112e0">armnn::DataLayout</a>&#160;</td>
          <td class="paramname"><em>dataLayout</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_conv3d_test_impl_8cpp_source.xhtml#l01058">1058</a> of file <a class="el" href="_conv3d_test_impl_8cpp_source.xhtml">Conv3dTestImpl.cpp</a>.</p>

<p class="reference">References <a class="el" href="_conv3d_test_impl_8cpp_source.xhtml#l00726">Convolution3d2x3x3TestCommonFloat16()</a>.</p>

<p class="reference">Referenced by <a class="el" href="_cl_layer_tests_8cpp_source.xhtml#l00027">TEST_SUITE()</a>.</p>
<div class="fragment"><div class="line"><a name="l01064"></a><span class="lineno"> 1064</span>&#160;{</div><div class="line"><a name="l01065"></a><span class="lineno"> 1065</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="_conv3d_test_impl_8cpp.xhtml#abd444942e3547d0dce1c48f8455f071f">Convolution3d2x3x3TestCommonFloat16</a>(</div><div class="line"><a name="l01066"></a><span class="lineno"> 1066</span>&#160;            workloadFactory, memoryManager, tensorHandleFactory, biasEnabled, dataLayout);</div><div class="line"><a name="l01067"></a><span class="lineno"> 1067</span>&#160;}</div><div class="ttc" id="_conv3d_test_impl_8cpp_xhtml_abd444942e3547d0dce1c48f8455f071f"><div class="ttname"><a href="_conv3d_test_impl_8cpp.xhtml#abd444942e3547d0dce1c48f8455f071f">Convolution3d2x3x3TestCommonFloat16</a></div><div class="ttdeci">LayerTestResult&lt; armnn::Half, 5 &gt; Convolution3d2x3x3TestCommonFloat16(armnn::IWorkloadFactory &amp;workloadFactory, const armnn::IBackendInternal::IMemoryManagerSharedPtr &amp;memoryManager, const armnn::ITensorHandleFactory &amp;tensorHandleFactory, bool biasEnabled, armnn::DataLayout dataLayout)</div><div class="ttdef"><b>Definition:</b> <a href="_conv3d_test_impl_8cpp_source.xhtml#l00726">Conv3dTestImpl.cpp:726</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="abd444942e3547d0dce1c48f8455f071f"></a>
<h2 class="memtitle"><span class="permalink"><a href="#abd444942e3547d0dce1c48f8455f071f">&#9670;&nbsp;</a></span>Convolution3d2x3x3TestCommonFloat16()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="struct_layer_test_result.xhtml">LayerTestResult</a>&lt;<a class="el" href="namespacearmnn.xhtml#a0f38fa92b2468d5378258a2b074c1a31">armnn::Half</a>, 5&gt; Convolution3d2x3x3TestCommonFloat16 </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classarmnn_1_1_i_workload_factory.xhtml">armnn::IWorkloadFactory</a> &amp;&#160;</td>
          <td class="paramname"><em>workloadFactory</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_i_backend_internal.xhtml#a693b40e6b94e958836aeb0410ca186bd">armnn::IBackendInternal::IMemoryManagerSharedPtr</a> &amp;&#160;</td>
          <td class="paramname"><em>memoryManager</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_i_tensor_handle_factory.xhtml">armnn::ITensorHandleFactory</a> &amp;&#160;</td>
          <td class="paramname"><em>tensorHandleFactory</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>biasEnabled</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="namespacearmnn.xhtml#ad1d5cce2d9e9a5d61c243e5c989112e0">armnn::DataLayout</a>&#160;</td>
          <td class="paramname"><em>dataLayout</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_conv3d_test_impl_8cpp_source.xhtml#l00726">726</a> of file <a class="el" href="_conv3d_test_impl_8cpp_source.xhtml">Conv3dTestImpl.cpp</a>.</p>

<p class="reference">References <a class="el" href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a26e6ed77470c6f2f830ecf874e6c0d55">armnn::Float16</a>.</p>

<p class="reference">Referenced by <a class="el" href="_conv3d_test_impl_8cpp_source.xhtml#l01058">Convolution3d2x3x3Float16Test()</a>.</p>
<div class="fragment"><div class="line"><a name="l00732"></a><span class="lineno">  732</span>&#160;{</div><div class="line"><a name="l00733"></a><span class="lineno">  733</span>&#160;    <span class="keyword">using namespace </span>half_float::literal;</div><div class="line"><a name="l00734"></a><span class="lineno">  734</span>&#160;</div><div class="line"><a name="l00735"></a><span class="lineno">  735</span>&#160;    <span class="keywordtype">float</span> qScale = 0.f;</div><div class="line"><a name="l00736"></a><span class="lineno">  736</span>&#160;    int32_t qOffset = 0;</div><div class="line"><a name="l00737"></a><span class="lineno">  737</span>&#160;</div><div class="line"><a name="l00738"></a><span class="lineno">  738</span>&#160;    <a class="code" href="classarmnn_1_1_tensor_info.xhtml">armnn::TensorInfo</a> inputDesc({ 1, 2, 3, 3, 2 }, <a class="code" href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a26e6ed77470c6f2f830ecf874e6c0d55">armnn::DataType::Float16</a>);</div><div class="line"><a name="l00739"></a><span class="lineno">  739</span>&#160;    <span class="keyword">const</span> std::vector&lt;armnn::Half&gt; input =</div><div class="line"><a name="l00740"></a><span class="lineno">  740</span>&#160;    {</div><div class="line"><a name="l00741"></a><span class="lineno">  741</span>&#160;        1._h,  2._h,  3._h,</div><div class="line"><a name="l00742"></a><span class="lineno">  742</span>&#160;        4._h,  5._h,  6._h,</div><div class="line"><a name="l00743"></a><span class="lineno">  743</span>&#160;</div><div class="line"><a name="l00744"></a><span class="lineno">  744</span>&#160;        7._h,  8._h,  9._h,</div><div class="line"><a name="l00745"></a><span class="lineno">  745</span>&#160;        10._h, 11._h, 12._h,</div><div class="line"><a name="l00746"></a><span class="lineno">  746</span>&#160;</div><div class="line"><a name="l00747"></a><span class="lineno">  747</span>&#160;        13._h, 14._h, 15._h,</div><div class="line"><a name="l00748"></a><span class="lineno">  748</span>&#160;        16._h, 17._h, 18._h,</div><div class="line"><a name="l00749"></a><span class="lineno">  749</span>&#160;</div><div class="line"><a name="l00750"></a><span class="lineno">  750</span>&#160;        19._h, 20._h, 21._h,</div><div class="line"><a name="l00751"></a><span class="lineno">  751</span>&#160;        22._h, 23._h, 24._h,</div><div class="line"><a name="l00752"></a><span class="lineno">  752</span>&#160;</div><div class="line"><a name="l00753"></a><span class="lineno">  753</span>&#160;        25._h, 26._h, 27._h,</div><div class="line"><a name="l00754"></a><span class="lineno">  754</span>&#160;        28._h, 29._h, 30._h,</div><div class="line"><a name="l00755"></a><span class="lineno">  755</span>&#160;</div><div class="line"><a name="l00756"></a><span class="lineno">  756</span>&#160;        31._h, 32._h, 33._h,</div><div class="line"><a name="l00757"></a><span class="lineno">  757</span>&#160;        34._h, 35._h, 36._h</div><div class="line"><a name="l00758"></a><span class="lineno">  758</span>&#160;    };</div><div class="line"><a name="l00759"></a><span class="lineno">  759</span>&#160;</div><div class="line"><a name="l00760"></a><span class="lineno">  760</span>&#160;    <a class="code" href="classarmnn_1_1_tensor_info.xhtml">armnn::TensorInfo</a> kernelDesc({ 2, 2, 2, 2, 2 }, <a class="code" href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a26e6ed77470c6f2f830ecf874e6c0d55">armnn::DataType::Float16</a>);</div><div class="line"><a name="l00761"></a><span class="lineno">  761</span>&#160;    std::vector&lt;armnn::Half&gt; kernel =</div><div class="line"><a name="l00762"></a><span class="lineno">  762</span>&#160;    {</div><div class="line"><a name="l00763"></a><span class="lineno">  763</span>&#160;        -1._h, -1._h,  -1._h, -1._h,  -1._h, -1._h,  -1._h, -1._h,</div><div class="line"><a name="l00764"></a><span class="lineno">  764</span>&#160;        -1._h, -1._h,  -1._h,  1._h,   1._h,  1._h,  -1._h, -1._h,</div><div class="line"><a name="l00765"></a><span class="lineno">  765</span>&#160;         1._h,  1._h,  -1._h,  1._h,  -1._h,  1._h,  -1._h,  1._h,</div><div class="line"><a name="l00766"></a><span class="lineno">  766</span>&#160;        -1._h, -1._h,  -1._h,  1._h,  -1._h,  1._h,  -1._h,  1._h,</div><div class="line"><a name="l00767"></a><span class="lineno">  767</span>&#160;    };</div><div class="line"><a name="l00768"></a><span class="lineno">  768</span>&#160;</div><div class="line"><a name="l00769"></a><span class="lineno">  769</span>&#160;    <a class="code" href="classarmnn_1_1_tensor_info.xhtml">armnn::TensorInfo</a> outputDesc({ 1, 1, 2, 2, 2 }, <a class="code" href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a26e6ed77470c6f2f830ecf874e6c0d55">armnn::DataType::Float16</a>);</div><div class="line"><a name="l00770"></a><span class="lineno">  770</span>&#160;    std::vector&lt;armnn::Half&gt; outputData =</div><div class="line"><a name="l00771"></a><span class="lineno">  771</span>&#160;    {</div><div class="line"><a name="l00772"></a><span class="lineno">  772</span>&#160;        -176._h,  128._h,</div><div class="line"><a name="l00773"></a><span class="lineno">  773</span>&#160;        -200._h,  132._h,</div><div class="line"><a name="l00774"></a><span class="lineno">  774</span>&#160;</div><div class="line"><a name="l00775"></a><span class="lineno">  775</span>&#160;        -248._h,  140._h,</div><div class="line"><a name="l00776"></a><span class="lineno">  776</span>&#160;        -272._h,  144._h</div><div class="line"><a name="l00777"></a><span class="lineno">  777</span>&#160;    };</div><div class="line"><a name="l00778"></a><span class="lineno">  778</span>&#160;</div><div class="line"><a name="l00779"></a><span class="lineno">  779</span>&#160;    <span class="keywordflow">return</span> SimpleConvolution3dTestImpl&lt;armnn::DataType::Float16, armnn::DataType::Float16&gt;(</div><div class="line"><a name="l00780"></a><span class="lineno">  780</span>&#160;            workloadFactory,</div><div class="line"><a name="l00781"></a><span class="lineno">  781</span>&#160;            memoryManager,</div><div class="line"><a name="l00782"></a><span class="lineno">  782</span>&#160;            tensorHandleFactory,</div><div class="line"><a name="l00783"></a><span class="lineno">  783</span>&#160;            input,</div><div class="line"><a name="l00784"></a><span class="lineno">  784</span>&#160;            kernel,</div><div class="line"><a name="l00785"></a><span class="lineno">  785</span>&#160;            GetBiasData&lt;armnn::DataType::Float16&gt;(biasEnabled, qScale * qScale, outputDesc, dataLayout),</div><div class="line"><a name="l00786"></a><span class="lineno">  786</span>&#160;            outputData,</div><div class="line"><a name="l00787"></a><span class="lineno">  787</span>&#160;            inputDesc.GetShape(),</div><div class="line"><a name="l00788"></a><span class="lineno">  788</span>&#160;            kernelDesc.GetShape(),</div><div class="line"><a name="l00789"></a><span class="lineno">  789</span>&#160;            outputDesc.GetShape(),</div><div class="line"><a name="l00790"></a><span class="lineno">  790</span>&#160;            dataLayout,</div><div class="line"><a name="l00791"></a><span class="lineno">  791</span>&#160;            qScale,</div><div class="line"><a name="l00792"></a><span class="lineno">  792</span>&#160;            qOffset</div><div class="line"><a name="l00793"></a><span class="lineno">  793</span>&#160;    );</div><div class="line"><a name="l00794"></a><span class="lineno">  794</span>&#160;}</div><div class="ttc" id="classarmnn_1_1_tensor_info_xhtml"><div class="ttname"><a href="classarmnn_1_1_tensor_info.xhtml">armnn::TensorInfo</a></div><div class="ttdef"><b>Definition:</b> <a href="_tensor_8hpp_source.xhtml#l00152">Tensor.hpp:152</a></div></div>
<div class="ttc" id="namespacearmnn_xhtml_ad8ed01ff3ff33333d8e19db4d2818bb6a26e6ed77470c6f2f830ecf874e6c0d55"><div class="ttname"><a href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a26e6ed77470c6f2f830ecf874e6c0d55">armnn::DataType::Float16</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="a7306e3c4bbf3369f431d02c511549cb4"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a7306e3c4bbf3369f431d02c511549cb4">&#9670;&nbsp;</a></span>Convolution3dPaddingSame3x3x3Float32Test()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="struct_layer_test_result.xhtml">LayerTestResult</a>&lt;float, 5&gt; Convolution3dPaddingSame3x3x3Float32Test </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classarmnn_1_1_i_workload_factory.xhtml">armnn::IWorkloadFactory</a> &amp;&#160;</td>
          <td class="paramname"><em>workloadFactory</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_i_backend_internal.xhtml#a693b40e6b94e958836aeb0410ca186bd">armnn::IBackendInternal::IMemoryManagerSharedPtr</a> &amp;&#160;</td>
          <td class="paramname"><em>memoryManager</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_i_tensor_handle_factory.xhtml">armnn::ITensorHandleFactory</a> &amp;&#160;</td>
          <td class="paramname"><em>tensorHandleFactory</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>biasEnabled</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="namespacearmnn.xhtml#ad1d5cce2d9e9a5d61c243e5c989112e0">armnn::DataLayout</a>&#160;</td>
          <td class="paramname"><em>dataLayout</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_conv3d_test_impl_8cpp_source.xhtml#l00992">992</a> of file <a class="el" href="_conv3d_test_impl_8cpp_source.xhtml">Conv3dTestImpl.cpp</a>.</p>

<p class="reference">Referenced by <a class="el" href="_cl_layer_tests_8cpp_source.xhtml#l00027">TEST_SUITE()</a>.</p>
<div class="fragment"><div class="line"><a name="l00998"></a><span class="lineno">  998</span>&#160;{</div><div class="line"><a name="l00999"></a><span class="lineno">  999</span>&#160;    <span class="keywordflow">return</span> Convolution3dPaddingSame3x3x3TestCommon&lt;armnn::DataType::Float32, armnn::DataType::Float32&gt;(</div><div class="line"><a name="l01000"></a><span class="lineno"> 1000</span>&#160;            workloadFactory, memoryManager, tensorHandleFactory, biasEnabled, dataLayout);</div><div class="line"><a name="l01001"></a><span class="lineno"> 1001</span>&#160;}</div></div><!-- fragment -->
</div>
</div>
<a id="a7decbecf820e4ffcd48246ce9411f13e"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a7decbecf820e4ffcd48246ce9411f13e">&#9670;&nbsp;</a></span>Convolution3dPaddingSame3x3x3Int16Test()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="struct_layer_test_result.xhtml">LayerTestResult</a>&lt;int16_t, 5&gt; Convolution3dPaddingSame3x3x3Int16Test </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classarmnn_1_1_i_workload_factory.xhtml">armnn::IWorkloadFactory</a> &amp;&#160;</td>
          <td class="paramname"><em>workloadFactory</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_i_backend_internal.xhtml#a693b40e6b94e958836aeb0410ca186bd">armnn::IBackendInternal::IMemoryManagerSharedPtr</a> &amp;&#160;</td>
          <td class="paramname"><em>memoryManager</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_i_tensor_handle_factory.xhtml">armnn::ITensorHandleFactory</a> &amp;&#160;</td>
          <td class="paramname"><em>tensorHandleFactory</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>biasEnabled</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="namespacearmnn.xhtml#ad1d5cce2d9e9a5d61c243e5c989112e0">armnn::DataLayout</a>&#160;</td>
          <td class="paramname"><em>dataLayout</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_conv3d_test_impl_8cpp_source.xhtml#l01025">1025</a> of file <a class="el" href="_conv3d_test_impl_8cpp_source.xhtml">Conv3dTestImpl.cpp</a>.</p>

<p class="reference">Referenced by <a class="el" href="_ref_layer_tests_8cpp_source.xhtml#l00014">TEST_SUITE()</a>.</p>
<div class="fragment"><div class="line"><a name="l01031"></a><span class="lineno"> 1031</span>&#160;{</div><div class="line"><a name="l01032"></a><span class="lineno"> 1032</span>&#160;    <span class="keywordflow">return</span> Convolution3dPaddingSame3x3x3TestCommon&lt;armnn::DataType::QSymmS16, armnn::DataType::Signed32&gt;(</div><div class="line"><a name="l01033"></a><span class="lineno"> 1033</span>&#160;            workloadFactory, memoryManager, tensorHandleFactory, biasEnabled, dataLayout);</div><div class="line"><a name="l01034"></a><span class="lineno"> 1034</span>&#160;}</div></div><!-- fragment -->
</div>
</div>
<a id="a494edc54ecf36a98b35437e8c2fe1a9e"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a494edc54ecf36a98b35437e8c2fe1a9e">&#9670;&nbsp;</a></span>Convolution3dPaddingSame3x3x3Int8Test()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="struct_layer_test_result.xhtml">LayerTestResult</a>&lt;int8_t, 5&gt; Convolution3dPaddingSame3x3x3Int8Test </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classarmnn_1_1_i_workload_factory.xhtml">armnn::IWorkloadFactory</a> &amp;&#160;</td>
          <td class="paramname"><em>workloadFactory</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_i_backend_internal.xhtml#a693b40e6b94e958836aeb0410ca186bd">armnn::IBackendInternal::IMemoryManagerSharedPtr</a> &amp;&#160;</td>
          <td class="paramname"><em>memoryManager</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_i_tensor_handle_factory.xhtml">armnn::ITensorHandleFactory</a> &amp;&#160;</td>
          <td class="paramname"><em>tensorHandleFactory</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>biasEnabled</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="namespacearmnn.xhtml#ad1d5cce2d9e9a5d61c243e5c989112e0">armnn::DataLayout</a>&#160;</td>
          <td class="paramname"><em>dataLayout</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_conv3d_test_impl_8cpp_source.xhtml#l01003">1003</a> of file <a class="el" href="_conv3d_test_impl_8cpp_source.xhtml">Conv3dTestImpl.cpp</a>.</p>

<p class="reference">Referenced by <a class="el" href="_cl_layer_tests_8cpp_source.xhtml#l00027">TEST_SUITE()</a>.</p>
<div class="fragment"><div class="line"><a name="l01009"></a><span class="lineno"> 1009</span>&#160;{</div><div class="line"><a name="l01010"></a><span class="lineno"> 1010</span>&#160;    <span class="keywordflow">return</span> Convolution3dPaddingSame3x3x3TestCommon&lt;armnn::DataType::QAsymmS8, armnn::DataType::Signed32&gt;(</div><div class="line"><a name="l01011"></a><span class="lineno"> 1011</span>&#160;            workloadFactory, memoryManager, tensorHandleFactory, biasEnabled, dataLayout);</div><div class="line"><a name="l01012"></a><span class="lineno"> 1012</span>&#160;}</div></div><!-- fragment -->
</div>
</div>
<a id="a1736a9bf1b2b7f77069e129ff67e03d1"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a1736a9bf1b2b7f77069e129ff67e03d1">&#9670;&nbsp;</a></span>Convolution3dPaddingSame3x3x3TestCommon()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="struct_layer_test_result.xhtml">LayerTestResult</a>&lt;T, 5&gt; Convolution3dPaddingSame3x3x3TestCommon </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classarmnn_1_1_i_workload_factory.xhtml">armnn::IWorkloadFactory</a> &amp;&#160;</td>
          <td class="paramname"><em>workloadFactory</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_i_backend_internal.xhtml#a693b40e6b94e958836aeb0410ca186bd">armnn::IBackendInternal::IMemoryManagerSharedPtr</a> &amp;&#160;</td>
          <td class="paramname"><em>memoryManager</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_i_tensor_handle_factory.xhtml">armnn::ITensorHandleFactory</a> &amp;&#160;</td>
          <td class="paramname"><em>tensorHandleFactory</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>biasEnabled</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="namespacearmnn.xhtml#ad1d5cce2d9e9a5d61c243e5c989112e0">armnn::DataLayout</a>&#160;</td>
          <td class="paramname"><em>dataLayout</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_conv3d_test_impl_8cpp_source.xhtml#l00512">512</a> of file <a class="el" href="_conv3d_test_impl_8cpp_source.xhtml">Conv3dTestImpl.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00518"></a><span class="lineno">  518</span>&#160;{</div><div class="line"><a name="l00519"></a><span class="lineno">  519</span>&#160;    <span class="keywordtype">float</span> qScale;</div><div class="line"><a name="l00520"></a><span class="lineno">  520</span>&#160;    int32_t qOffset;</div><div class="line"><a name="l00521"></a><span class="lineno">  521</span>&#160;    SetScaleOffset&lt;ArmnnType&gt;(qScale, qOffset);</div><div class="line"><a name="l00522"></a><span class="lineno">  522</span>&#160;</div><div class="line"><a name="l00523"></a><span class="lineno">  523</span>&#160;    <a class="code" href="classarmnn_1_1_tensor_info.xhtml">armnn::TensorInfo</a> inputDesc({ 1, 5, 5, 5, 1 }, ArmnnType);</div><div class="line"><a name="l00524"></a><span class="lineno">  524</span>&#160;    std::vector&lt;T&gt; input = CreateQuantizedData&lt;T&gt;(125, qScale, qOffset);</div><div class="line"><a name="l00525"></a><span class="lineno">  525</span>&#160;</div><div class="line"><a name="l00526"></a><span class="lineno">  526</span>&#160;    <a class="code" href="classarmnn_1_1_tensor_info.xhtml">armnn::TensorInfo</a> kernelDesc({ 3, 3, 3, 1, 1 }, ArmnnType);</div><div class="line"><a name="l00527"></a><span class="lineno">  527</span>&#160;    std::vector&lt;T&gt; kernel = QuantizedVector&lt;T&gt;(</div><div class="line"><a name="l00528"></a><span class="lineno">  528</span>&#160;    {</div><div class="line"><a name="l00529"></a><span class="lineno">  529</span>&#160;        1, 1, 1,</div><div class="line"><a name="l00530"></a><span class="lineno">  530</span>&#160;        1, 1, 1,</div><div class="line"><a name="l00531"></a><span class="lineno">  531</span>&#160;        1, 1, 1,</div><div class="line"><a name="l00532"></a><span class="lineno">  532</span>&#160;</div><div class="line"><a name="l00533"></a><span class="lineno">  533</span>&#160;        0, 0, 0,</div><div class="line"><a name="l00534"></a><span class="lineno">  534</span>&#160;        0, 0, 0,</div><div class="line"><a name="l00535"></a><span class="lineno">  535</span>&#160;        0, 0, 0,</div><div class="line"><a name="l00536"></a><span class="lineno">  536</span>&#160;</div><div class="line"><a name="l00537"></a><span class="lineno">  537</span>&#160;        1, 1, 1,</div><div class="line"><a name="l00538"></a><span class="lineno">  538</span>&#160;        1, 1, 1,</div><div class="line"><a name="l00539"></a><span class="lineno">  539</span>&#160;        1, 1, 1,</div><div class="line"><a name="l00540"></a><span class="lineno">  540</span>&#160;    },</div><div class="line"><a name="l00541"></a><span class="lineno">  541</span>&#160;    qScale, qOffset);</div><div class="line"><a name="l00542"></a><span class="lineno">  542</span>&#160;</div><div class="line"><a name="l00543"></a><span class="lineno">  543</span>&#160;    <a class="code" href="classarmnn_1_1_tensor_info.xhtml">armnn::TensorInfo</a> outputDesc({ 1, 5, 5, 5, 1 }, ArmnnType);</div><div class="line"><a name="l00544"></a><span class="lineno">  544</span>&#160;    std::vector&lt;T&gt; outputData = QuantizedVector&lt;T&gt;(</div><div class="line"><a name="l00545"></a><span class="lineno">  545</span>&#160;    {</div><div class="line"><a name="l00546"></a><span class="lineno">  546</span>&#160;        112, 171, 177, 183, 124,</div><div class="line"><a name="l00547"></a><span class="lineno">  547</span>&#160;        183, 279, 288, 297, 201,</div><div class="line"><a name="l00548"></a><span class="lineno">  548</span>&#160;        213, 324, 333, 342, 231,</div><div class="line"><a name="l00549"></a><span class="lineno">  549</span>&#160;        243, 369, 378, 387, 261,</div><div class="line"><a name="l00550"></a><span class="lineno">  550</span>&#160;        172, 261, 267, 273, 184,</div><div class="line"><a name="l00551"></a><span class="lineno">  551</span>&#160;</div><div class="line"><a name="l00552"></a><span class="lineno">  552</span>&#160;        224, 342, 354, 366, 248,</div><div class="line"><a name="l00553"></a><span class="lineno">  553</span>&#160;        366, 558, 576, 594, 402,</div><div class="line"><a name="l00554"></a><span class="lineno">  554</span>&#160;        426, 648, 666, 684, 462,</div><div class="line"><a name="l00555"></a><span class="lineno">  555</span>&#160;        486, 738, 756, 774, 522,</div><div class="line"><a name="l00556"></a><span class="lineno">  556</span>&#160;        344, 522, 534, 546, 368,</div><div class="line"><a name="l00557"></a><span class="lineno">  557</span>&#160;</div><div class="line"><a name="l00558"></a><span class="lineno">  558</span>&#160;        424, 642,  654,  666,  448,</div><div class="line"><a name="l00559"></a><span class="lineno">  559</span>&#160;        666, 1008, 1026, 1044, 702,</div><div class="line"><a name="l00560"></a><span class="lineno">  560</span>&#160;        726, 1098, 1116, 1134, 762,</div><div class="line"><a name="l00561"></a><span class="lineno">  561</span>&#160;        786, 1188, 1206, 1224, 822,</div><div class="line"><a name="l00562"></a><span class="lineno">  562</span>&#160;        544, 822,  834,  846,  568,</div><div class="line"><a name="l00563"></a><span class="lineno">  563</span>&#160;        624, 942,  954,  966,  648,</div><div class="line"><a name="l00564"></a><span class="lineno">  564</span>&#160;</div><div class="line"><a name="l00565"></a><span class="lineno">  565</span>&#160;        966,  1458, 1476, 1494, 1002,</div><div class="line"><a name="l00566"></a><span class="lineno">  566</span>&#160;        1026, 1548, 1566, 1584, 1062,</div><div class="line"><a name="l00567"></a><span class="lineno">  567</span>&#160;        1086, 1638, 1656, 1674, 1122,</div><div class="line"><a name="l00568"></a><span class="lineno">  568</span>&#160;        744,  1122, 1134, 1146, 768,</div><div class="line"><a name="l00569"></a><span class="lineno">  569</span>&#160;        312,  471,  477,  483,  324,</div><div class="line"><a name="l00570"></a><span class="lineno">  570</span>&#160;        483,  729,  738,  747,  501,</div><div class="line"><a name="l00571"></a><span class="lineno">  571</span>&#160;        513,  774,  783,  792,  531,</div><div class="line"><a name="l00572"></a><span class="lineno">  572</span>&#160;        543,  819,  828,  837,  561,</div><div class="line"><a name="l00573"></a><span class="lineno">  573</span>&#160;        372,  561,  567,  573,  384</div><div class="line"><a name="l00574"></a><span class="lineno">  574</span>&#160;    },</div><div class="line"><a name="l00575"></a><span class="lineno">  575</span>&#160;    qScale, qOffset);</div><div class="line"><a name="l00576"></a><span class="lineno">  576</span>&#160;</div><div class="line"><a name="l00577"></a><span class="lineno">  577</span>&#160;    <span class="keywordflow">return</span> SimpleConvolution3dTestImpl&lt;ArmnnType, ArmnnBType&gt;(</div><div class="line"><a name="l00578"></a><span class="lineno">  578</span>&#160;            workloadFactory,</div><div class="line"><a name="l00579"></a><span class="lineno">  579</span>&#160;            memoryManager,</div><div class="line"><a name="l00580"></a><span class="lineno">  580</span>&#160;            tensorHandleFactory,</div><div class="line"><a name="l00581"></a><span class="lineno">  581</span>&#160;            input,</div><div class="line"><a name="l00582"></a><span class="lineno">  582</span>&#160;            kernel,</div><div class="line"><a name="l00583"></a><span class="lineno">  583</span>&#160;            GetBiasData&lt;ArmnnBType&gt;(biasEnabled, qScale * qScale, outputDesc, dataLayout),</div><div class="line"><a name="l00584"></a><span class="lineno">  584</span>&#160;            outputData,</div><div class="line"><a name="l00585"></a><span class="lineno">  585</span>&#160;            inputDesc.GetShape(),</div><div class="line"><a name="l00586"></a><span class="lineno">  586</span>&#160;            kernelDesc.GetShape(),</div><div class="line"><a name="l00587"></a><span class="lineno">  587</span>&#160;            outputDesc.GetShape(),</div><div class="line"><a name="l00588"></a><span class="lineno">  588</span>&#160;            dataLayout,</div><div class="line"><a name="l00589"></a><span class="lineno">  589</span>&#160;            qScale,</div><div class="line"><a name="l00590"></a><span class="lineno">  590</span>&#160;            qOffset,</div><div class="line"><a name="l00591"></a><span class="lineno">  591</span>&#160;            1, <span class="comment">// strideX</span></div><div class="line"><a name="l00592"></a><span class="lineno">  592</span>&#160;            1, <span class="comment">// strideY</span></div><div class="line"><a name="l00593"></a><span class="lineno">  593</span>&#160;            1, <span class="comment">// strideZ</span></div><div class="line"><a name="l00594"></a><span class="lineno">  594</span>&#160;            1, <span class="comment">// dilationX</span></div><div class="line"><a name="l00595"></a><span class="lineno">  595</span>&#160;            1, <span class="comment">// dilationY</span></div><div class="line"><a name="l00596"></a><span class="lineno">  596</span>&#160;            1, <span class="comment">// dilationZ</span></div><div class="line"><a name="l00597"></a><span class="lineno">  597</span>&#160;            1, <span class="comment">// padLeft</span></div><div class="line"><a name="l00598"></a><span class="lineno">  598</span>&#160;            1, <span class="comment">// padTop</span></div><div class="line"><a name="l00599"></a><span class="lineno">  599</span>&#160;            1, <span class="comment">// padRight</span></div><div class="line"><a name="l00600"></a><span class="lineno">  600</span>&#160;            1, <span class="comment">// padBottom</span></div><div class="line"><a name="l00601"></a><span class="lineno">  601</span>&#160;            1, <span class="comment">// padFront</span></div><div class="line"><a name="l00602"></a><span class="lineno">  602</span>&#160;            1 <span class="comment">// padBack</span></div><div class="line"><a name="l00603"></a><span class="lineno">  603</span>&#160;    );</div><div class="line"><a name="l00604"></a><span class="lineno">  604</span>&#160;}</div><div class="ttc" id="classarmnn_1_1_tensor_info_xhtml"><div class="ttname"><a href="classarmnn_1_1_tensor_info.xhtml">armnn::TensorInfo</a></div><div class="ttdef"><b>Definition:</b> <a href="_tensor_8hpp_source.xhtml#l00152">Tensor.hpp:152</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="a7e91c39f11c5399ad8aaf8d61250aa75"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a7e91c39f11c5399ad8aaf8d61250aa75">&#9670;&nbsp;</a></span>Convolution3dPaddingSame3x3x3Uint8Test()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="struct_layer_test_result.xhtml">LayerTestResult</a>&lt;uint8_t, 5&gt; Convolution3dPaddingSame3x3x3Uint8Test </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classarmnn_1_1_i_workload_factory.xhtml">armnn::IWorkloadFactory</a> &amp;&#160;</td>
          <td class="paramname"><em>workloadFactory</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_i_backend_internal.xhtml#a693b40e6b94e958836aeb0410ca186bd">armnn::IBackendInternal::IMemoryManagerSharedPtr</a> &amp;&#160;</td>
          <td class="paramname"><em>memoryManager</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_i_tensor_handle_factory.xhtml">armnn::ITensorHandleFactory</a> &amp;&#160;</td>
          <td class="paramname"><em>tensorHandleFactory</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>biasEnabled</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="namespacearmnn.xhtml#ad1d5cce2d9e9a5d61c243e5c989112e0">armnn::DataLayout</a>&#160;</td>
          <td class="paramname"><em>dataLayout</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_conv3d_test_impl_8cpp_source.xhtml#l01014">1014</a> of file <a class="el" href="_conv3d_test_impl_8cpp_source.xhtml">Conv3dTestImpl.cpp</a>.</p>

<p class="reference">Referenced by <a class="el" href="_cl_layer_tests_8cpp_source.xhtml#l00027">TEST_SUITE()</a>.</p>
<div class="fragment"><div class="line"><a name="l01020"></a><span class="lineno"> 1020</span>&#160;{</div><div class="line"><a name="l01021"></a><span class="lineno"> 1021</span>&#160;    <span class="keywordflow">return</span> Convolution3dPaddingSame3x3x3TestCommon&lt;armnn::DataType::QAsymmU8, armnn::DataType::Signed32&gt;(</div><div class="line"><a name="l01022"></a><span class="lineno"> 1022</span>&#160;            workloadFactory, memoryManager, tensorHandleFactory, biasEnabled, dataLayout);</div><div class="line"><a name="l01023"></a><span class="lineno"> 1023</span>&#160;}</div></div><!-- fragment -->
</div>
</div>
<a id="ab92354f039394a1f144d266a2d919c63"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ab92354f039394a1f144d266a2d919c63">&#9670;&nbsp;</a></span>Convolution3dStrideDilationPadding3x3x3Float32Test()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="struct_layer_test_result.xhtml">LayerTestResult</a>&lt;float, 5&gt; Convolution3dStrideDilationPadding3x3x3Float32Test </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classarmnn_1_1_i_workload_factory.xhtml">armnn::IWorkloadFactory</a> &amp;&#160;</td>
          <td class="paramname"><em>workloadFactory</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_i_backend_internal.xhtml#a693b40e6b94e958836aeb0410ca186bd">armnn::IBackendInternal::IMemoryManagerSharedPtr</a> &amp;&#160;</td>
          <td class="paramname"><em>memoryManager</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_i_tensor_handle_factory.xhtml">armnn::ITensorHandleFactory</a> &amp;&#160;</td>
          <td class="paramname"><em>tensorHandleFactory</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>biasEnabled</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="namespacearmnn.xhtml#ad1d5cce2d9e9a5d61c243e5c989112e0">armnn::DataLayout</a>&#160;</td>
          <td class="paramname"><em>dataLayout</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_conv3d_test_impl_8cpp_source.xhtml#l01036">1036</a> of file <a class="el" href="_conv3d_test_impl_8cpp_source.xhtml">Conv3dTestImpl.cpp</a>.</p>

<p class="reference">References <a class="el" href="_conv3d_test_impl_8cpp_source.xhtml#l00606">Convolution3dStrideDilationPadding3x3x3TestCommonFloat32()</a>.</p>

<p class="reference">Referenced by <a class="el" href="_ref_layer_tests_8cpp_source.xhtml#l00014">TEST_SUITE()</a>.</p>
<div class="fragment"><div class="line"><a name="l01042"></a><span class="lineno"> 1042</span>&#160;{</div><div class="line"><a name="l01043"></a><span class="lineno"> 1043</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="_conv3d_test_impl_8cpp.xhtml#acbbf738deb20cb22c554d0d1f12f0ab6">Convolution3dStrideDilationPadding3x3x3TestCommonFloat32</a>(</div><div class="line"><a name="l01044"></a><span class="lineno"> 1044</span>&#160;            workloadFactory, memoryManager, tensorHandleFactory, biasEnabled, dataLayout);</div><div class="line"><a name="l01045"></a><span class="lineno"> 1045</span>&#160;}</div><div class="ttc" id="_conv3d_test_impl_8cpp_xhtml_acbbf738deb20cb22c554d0d1f12f0ab6"><div class="ttname"><a href="_conv3d_test_impl_8cpp.xhtml#acbbf738deb20cb22c554d0d1f12f0ab6">Convolution3dStrideDilationPadding3x3x3TestCommonFloat32</a></div><div class="ttdeci">LayerTestResult&lt; float, 5 &gt; Convolution3dStrideDilationPadding3x3x3TestCommonFloat32(armnn::IWorkloadFactory &amp;workloadFactory, const armnn::IBackendInternal::IMemoryManagerSharedPtr &amp;memoryManager, const armnn::ITensorHandleFactory &amp;tensorHandleFactory, bool biasEnabled, armnn::DataLayout dataLayout)</div><div class="ttdef"><b>Definition:</b> <a href="_conv3d_test_impl_8cpp_source.xhtml#l00606">Conv3dTestImpl.cpp:606</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="acbbf738deb20cb22c554d0d1f12f0ab6"></a>
<h2 class="memtitle"><span class="permalink"><a href="#acbbf738deb20cb22c554d0d1f12f0ab6">&#9670;&nbsp;</a></span>Convolution3dStrideDilationPadding3x3x3TestCommonFloat32()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="struct_layer_test_result.xhtml">LayerTestResult</a>&lt;float, 5&gt; Convolution3dStrideDilationPadding3x3x3TestCommonFloat32 </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classarmnn_1_1_i_workload_factory.xhtml">armnn::IWorkloadFactory</a> &amp;&#160;</td>
          <td class="paramname"><em>workloadFactory</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_i_backend_internal.xhtml#a693b40e6b94e958836aeb0410ca186bd">armnn::IBackendInternal::IMemoryManagerSharedPtr</a> &amp;&#160;</td>
          <td class="paramname"><em>memoryManager</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_i_tensor_handle_factory.xhtml">armnn::ITensorHandleFactory</a> &amp;&#160;</td>
          <td class="paramname"><em>tensorHandleFactory</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>biasEnabled</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="namespacearmnn.xhtml#ad1d5cce2d9e9a5d61c243e5c989112e0">armnn::DataLayout</a>&#160;</td>
          <td class="paramname"><em>dataLayout</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_conv3d_test_impl_8cpp_source.xhtml#l00606">606</a> of file <a class="el" href="_conv3d_test_impl_8cpp_source.xhtml">Conv3dTestImpl.cpp</a>.</p>

<p class="reference">References <a class="el" href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a166495adc0d0f53bee6baecc577f5204">armnn::Float32</a>.</p>

<p class="reference">Referenced by <a class="el" href="_conv3d_test_impl_8cpp_source.xhtml#l01036">Convolution3dStrideDilationPadding3x3x3Float32Test()</a>.</p>
<div class="fragment"><div class="line"><a name="l00612"></a><span class="lineno">  612</span>&#160;{</div><div class="line"><a name="l00613"></a><span class="lineno">  613</span>&#160;    <span class="keywordtype">float</span> qScale = 0.f;</div><div class="line"><a name="l00614"></a><span class="lineno">  614</span>&#160;    int32_t qOffset = 0;</div><div class="line"><a name="l00615"></a><span class="lineno">  615</span>&#160;</div><div class="line"><a name="l00616"></a><span class="lineno">  616</span>&#160;    <a class="code" href="classarmnn_1_1_tensor_info.xhtml">armnn::TensorInfo</a> inputDesc({ 1, 3, 10, 10, 2 }, <a class="code" href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a166495adc0d0f53bee6baecc577f5204">armnn::DataType::Float32</a>);</div><div class="line"><a name="l00617"></a><span class="lineno">  617</span>&#160;    std::vector&lt;float&gt; input = CreateSmallQuantizedData&lt;float&gt;(600, 100.0f, qScale, qOffset);</div><div class="line"><a name="l00618"></a><span class="lineno">  618</span>&#160;</div><div class="line"><a name="l00619"></a><span class="lineno">  619</span>&#160;    <a class="code" href="classarmnn_1_1_tensor_info.xhtml">armnn::TensorInfo</a> kernelDesc({ 3, 3, 3, 2, 2 }, <a class="code" href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a166495adc0d0f53bee6baecc577f5204">armnn::DataType::Float32</a>);</div><div class="line"><a name="l00620"></a><span class="lineno">  620</span>&#160;    std::vector&lt;float&gt; kernel = CreateSmallQuantizedData&lt;float&gt;(108, 100.0f, qScale, qOffset);</div><div class="line"><a name="l00621"></a><span class="lineno">  621</span>&#160;</div><div class="line"><a name="l00622"></a><span class="lineno">  622</span>&#160;    <span class="comment">// Since the dilation rate is 2 this will dilate the kernel to be 5x5: d(K-1)+1 --&gt; 2 x (3-1) + 1 = 5,</span></div><div class="line"><a name="l00623"></a><span class="lineno">  623</span>&#160;    <span class="comment">// therefore the output will be 1x4x4: (I − K + 2P)/S +1 =&gt; trunc((10 - 3 + 2x2 )/3 + 1))</span></div><div class="line"><a name="l00624"></a><span class="lineno">  624</span>&#160;    <span class="comment">// where, dilation size = d = 2; kernel size = K = 3; input size = I = 10; padding size = P = 2; stride = S = 3</span></div><div class="line"><a name="l00625"></a><span class="lineno">  625</span>&#160;    <a class="code" href="classarmnn_1_1_tensor_info.xhtml">armnn::TensorInfo</a> outputDesc({ 1, 1, 4, 4, 2 }, <a class="code" href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a166495adc0d0f53bee6baecc577f5204">armnn::DataType::Float32</a>);</div><div class="line"><a name="l00626"></a><span class="lineno">  626</span>&#160;    std::vector&lt;float&gt; outputData =</div><div class="line"><a name="l00627"></a><span class="lineno">  627</span>&#160;    {</div><div class="line"><a name="l00628"></a><span class="lineno">  628</span>&#160;        12.0312f, 12.2268f, 17.7512f, 18.0494f,</div><div class="line"><a name="l00629"></a><span class="lineno">  629</span>&#160;        18.176f,  18.4814f, 5.6912f,  5.7938f,</div><div class="line"><a name="l00630"></a><span class="lineno">  630</span>&#160;        19.1664f, 19.5078f, 28.119f,  28.6383f,</div><div class="line"><a name="l00631"></a><span class="lineno">  631</span>&#160;        28.6914f, 29.2215f, 8.9094f,  9.0873f,</div><div class="line"><a name="l00632"></a><span class="lineno">  632</span>&#160;</div><div class="line"><a name="l00633"></a><span class="lineno">  633</span>&#160;        23.1264f, 23.5398f, 33.843f,  34.4703f,</div><div class="line"><a name="l00634"></a><span class="lineno">  634</span>&#160;        34.4154f, 35.0535f, 10.6734f, 10.8873f,</div><div class="line"><a name="l00635"></a><span class="lineno">  635</span>&#160;        6.2712f,  6.417f,   9.0718f,  9.2929f,</div><div class="line"><a name="l00636"></a><span class="lineno">  636</span>&#160;        9.2194f,  9.4441f,  2.7862f,  2.8615f</div><div class="line"><a name="l00637"></a><span class="lineno">  637</span>&#160;    };</div><div class="line"><a name="l00638"></a><span class="lineno">  638</span>&#160;</div><div class="line"><a name="l00639"></a><span class="lineno">  639</span>&#160;    <span class="keywordflow">return</span> SimpleConvolution3dTestImpl&lt;armnn::DataType::Float32, armnn::DataType::Float32&gt;(</div><div class="line"><a name="l00640"></a><span class="lineno">  640</span>&#160;            workloadFactory,</div><div class="line"><a name="l00641"></a><span class="lineno">  641</span>&#160;            memoryManager,</div><div class="line"><a name="l00642"></a><span class="lineno">  642</span>&#160;            tensorHandleFactory,</div><div class="line"><a name="l00643"></a><span class="lineno">  643</span>&#160;            input,</div><div class="line"><a name="l00644"></a><span class="lineno">  644</span>&#160;            kernel,</div><div class="line"><a name="l00645"></a><span class="lineno">  645</span>&#160;            GetBiasData&lt;armnn::DataType::Float32&gt;(biasEnabled, qScale * qScale, outputDesc, dataLayout),</div><div class="line"><a name="l00646"></a><span class="lineno">  646</span>&#160;            outputData,</div><div class="line"><a name="l00647"></a><span class="lineno">  647</span>&#160;            inputDesc.GetShape(),</div><div class="line"><a name="l00648"></a><span class="lineno">  648</span>&#160;            kernelDesc.GetShape(),</div><div class="line"><a name="l00649"></a><span class="lineno">  649</span>&#160;            outputDesc.GetShape(),</div><div class="line"><a name="l00650"></a><span class="lineno">  650</span>&#160;            dataLayout,</div><div class="line"><a name="l00651"></a><span class="lineno">  651</span>&#160;            qScale,</div><div class="line"><a name="l00652"></a><span class="lineno">  652</span>&#160;            qOffset,</div><div class="line"><a name="l00653"></a><span class="lineno">  653</span>&#160;            3, <span class="comment">// strideX</span></div><div class="line"><a name="l00654"></a><span class="lineno">  654</span>&#160;            3, <span class="comment">// strideY</span></div><div class="line"><a name="l00655"></a><span class="lineno">  655</span>&#160;            3, <span class="comment">// strideZ</span></div><div class="line"><a name="l00656"></a><span class="lineno">  656</span>&#160;            2, <span class="comment">// dilationX</span></div><div class="line"><a name="l00657"></a><span class="lineno">  657</span>&#160;            2, <span class="comment">// dilationY</span></div><div class="line"><a name="l00658"></a><span class="lineno">  658</span>&#160;            2, <span class="comment">// dilationZ</span></div><div class="line"><a name="l00659"></a><span class="lineno">  659</span>&#160;            1, <span class="comment">// padLeft</span></div><div class="line"><a name="l00660"></a><span class="lineno">  660</span>&#160;            1, <span class="comment">// padTop</span></div><div class="line"><a name="l00661"></a><span class="lineno">  661</span>&#160;            1, <span class="comment">// padRight</span></div><div class="line"><a name="l00662"></a><span class="lineno">  662</span>&#160;            1, <span class="comment">// padBottom</span></div><div class="line"><a name="l00663"></a><span class="lineno">  663</span>&#160;            1, <span class="comment">// padFront</span></div><div class="line"><a name="l00664"></a><span class="lineno">  664</span>&#160;            1 <span class="comment">// padBack</span></div><div class="line"><a name="l00665"></a><span class="lineno">  665</span>&#160;    );</div><div class="line"><a name="l00666"></a><span class="lineno">  666</span>&#160;}</div><div class="ttc" id="classarmnn_1_1_tensor_info_xhtml"><div class="ttname"><a href="classarmnn_1_1_tensor_info.xhtml">armnn::TensorInfo</a></div><div class="ttdef"><b>Definition:</b> <a href="_tensor_8hpp_source.xhtml#l00152">Tensor.hpp:152</a></div></div>
<div class="ttc" id="namespacearmnn_xhtml_ad8ed01ff3ff33333d8e19db4d2818bb6a166495adc0d0f53bee6baecc577f5204"><div class="ttname"><a href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a166495adc0d0f53bee6baecc577f5204">armnn::DataType::Float32</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="a9ca270ac2dc3cd87e835716606be9e65"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a9ca270ac2dc3cd87e835716606be9e65">&#9670;&nbsp;</a></span>CreateQuantizedData()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">std::vector&lt;T&gt; CreateQuantizedData </td>
          <td>(</td>
          <td class="paramtype">int32_t&#160;</td>
          <td class="paramname"><em>size</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>qScale</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int32_t&#160;</td>
          <td class="paramname"><em>qOffset</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_conv3d_test_impl_8cpp_source.xhtml#l00117">117</a> of file <a class="el" href="_conv3d_test_impl_8cpp_source.xhtml">Conv3dTestImpl.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;{</div><div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;    std::vector&lt;float&gt; data;</div><div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;    <span class="keywordflow">for</span> (int32_t i = 0; i &lt; size; ++i)</div><div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;    {</div><div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;        data.push_back(static_cast&lt;float&gt;(i));</div><div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;    }</div><div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;</div><div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;    <span class="keywordflow">return</span> QuantizedVector&lt;T&gt;(data, qScale, qOffset);</div><div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;}</div></div><!-- fragment -->
</div>
</div>
<a id="a94612dea5289f32c0f065f248b412615"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a94612dea5289f32c0f065f248b412615">&#9670;&nbsp;</a></span>CreateSmallQuantizedData()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">std::vector&lt;T&gt; CreateSmallQuantizedData </td>
          <td>(</td>
          <td class="paramtype">int32_t&#160;</td>
          <td class="paramname"><em>size</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>divisor</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>qScale</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int32_t&#160;</td>
          <td class="paramname"><em>qOffset</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_conv3d_test_impl_8cpp_source.xhtml#l00130">130</a> of file <a class="el" href="_conv3d_test_impl_8cpp_source.xhtml">Conv3dTestImpl.cpp</a>.</p>

<p class="reference">References <a class="el" href="_inference_test_image_8hpp.xhtml#a65983f8cb907d873f2328bb8307c296aa9d5ed678fe57bcca610140957afab571">B</a>.</p>
<div class="fragment"><div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;{</div><div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;    std::vector&lt;float&gt; data;</div><div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;    <span class="keywordflow">for</span> (int32_t i = 0; i &lt; size; ++i)</div><div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;    {</div><div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;        <span class="keywordtype">float</span> value = <span class="keyword">static_cast&lt;</span><span class="keywordtype">float</span><span class="keyword">&gt;</span>(i);</div><div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;        data.push_back(value/divisor);</div><div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;    }</div><div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;</div><div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;    <span class="keywordflow">return</span> QuantizedVector&lt;T&gt;(data, qScale, qOffset);;</div><div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;}</div></div><!-- fragment -->
</div>
</div>
<a id="ac29da01384d6955a5788945352713a21"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ac29da01384d6955a5788945352713a21">&#9670;&nbsp;</a></span>GetBiasData()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">std::vector&lt;T&gt; GetBiasData </td>
          <td>(</td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>biasEnabled</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>qScale</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="classarmnn_1_1_tensor_info.xhtml">armnn::TensorInfo</a>&#160;</td>
          <td class="paramname"><em>outputInfo</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="namespacearmnn.xhtml#ad1d5cce2d9e9a5d61c243e5c989112e0">armnn::DataLayout</a>&#160;</td>
          <td class="paramname"><em>layout</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_conv3d_test_impl_8cpp_source.xhtml#l00028">28</a> of file <a class="el" href="_conv3d_test_impl_8cpp_source.xhtml">Conv3dTestImpl.cpp</a>.</p>

<p class="reference">References <a class="el" href="_data_layout_indexed_8hpp_source.xhtml#l00023">DataLayoutIndexed::GetChannelsIndex()</a>, and <a class="el" href="_tensor_8hpp_source.xhtml#l00191">TensorInfo::GetShape()</a>.</p>
<div class="fragment"><div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;{</div><div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;    <span class="keywordflow">if</span>(!biasEnabled)</div><div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;    {</div><div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;        <span class="keywordflow">return</span> std::vector&lt;T&gt;();</div><div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;    }</div><div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;    <span class="keywordflow">else</span></div><div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;    {</div><div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;        <span class="keyword">const</span> <a class="code" href="classarmnn_utils_1_1_data_layout_indexed.xhtml">armnnUtils::DataLayoutIndexed</a> dataLayoutIndexed(layout);</div><div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;        <span class="keyword">const</span> <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> outputChannels = outputInfo.<a class="code" href="classarmnn_1_1_tensor_info.xhtml#a8b5d0f8a24e9d9238f412260a552acf8">GetShape</a>()[dataLayoutIndexed.GetChannelsIndex()];</div><div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;</div><div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;        <span class="keywordflow">switch</span> (outputChannels)</div><div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;        {</div><div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;            <span class="keywordflow">case</span> 1:</div><div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;            {</div><div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;                <span class="keywordflow">return</span> QuantizedVector&lt;T&gt;({2}, qScale, 0);</div><div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;            }</div><div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;            <span class="keywordflow">case</span> 2:</div><div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;            <span class="keywordflow">default</span>:</div><div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;            {</div><div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;                <span class="keywordflow">return</span> QuantizedVector&lt;T&gt;({0, 2}, qScale, 0);</div><div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;            }</div><div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;        }</div><div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;    }</div><div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;}</div><div class="ttc" id="classarmnn_1_1_tensor_info_xhtml_a8b5d0f8a24e9d9238f412260a552acf8"><div class="ttname"><a href="classarmnn_1_1_tensor_info.xhtml#a8b5d0f8a24e9d9238f412260a552acf8">armnn::TensorInfo::GetShape</a></div><div class="ttdeci">const TensorShape &amp; GetShape() const</div><div class="ttdef"><b>Definition:</b> <a href="_tensor_8hpp_source.xhtml#l00191">Tensor.hpp:191</a></div></div>
<div class="ttc" id="classarmnn_utils_1_1_data_layout_indexed_xhtml"><div class="ttname"><a href="classarmnn_utils_1_1_data_layout_indexed.xhtml">armnnUtils::DataLayoutIndexed</a></div><div class="ttdoc">Provides access to the appropriate indexes for Channels, Height and Width based on DataLayout...</div><div class="ttdef"><b>Definition:</b> <a href="_data_layout_indexed_8hpp_source.xhtml#l00017">DataLayoutIndexed.hpp:17</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="a2f8ee10580b676ec08de159a02ff217e"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a2f8ee10580b676ec08de159a02ff217e">&#9670;&nbsp;</a></span>SetScaleOffset()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void SetScaleOffset </td>
          <td>(</td>
          <td class="paramtype">float &amp;&#160;</td>
          <td class="paramname"><em>qScale</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int32_t &amp;&#160;</td>
          <td class="paramname"><em>qOffset</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_conv3d_test_impl_8cpp_source.xhtml#l00081">81</a> of file <a class="el" href="_conv3d_test_impl_8cpp_source.xhtml">Conv3dTestImpl.cpp</a>.</p>

<p class="reference">References <a class="el" href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6acdb56b2d2f73c26480207524f2dbe0af">armnn::BFloat16</a>, <a class="el" href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a26e6ed77470c6f2f830ecf874e6c0d55">armnn::Float16</a>, <a class="el" href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a166495adc0d0f53bee6baecc577f5204">armnn::Float32</a>, <a class="el" href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a9d02ea768c081d4bdb2b7cab0b3f510d">armnn::QAsymmS8</a>, <a class="el" href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a0a3f57c876f5a230244c38e1453a8a6e">armnn::QAsymmU8</a>, and <a class="el" href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a053c769dcf82d66ef326c86980c02ba7">armnn::QSymmS16</a>.</p>
<div class="fragment"><div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;{</div><div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;    <span class="keywordflow">switch</span> (ArmnnType)</div><div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;    {</div><div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;        <span class="keywordflow">case</span> <a class="code" href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a0a3f57c876f5a230244c38e1453a8a6e">armnn::DataType::QAsymmU8</a>:</div><div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;        {</div><div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;            qScale = 0.1f;</div><div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;            qOffset = 128;</div><div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;            <span class="keywordflow">break</span>;</div><div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;        }</div><div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;        <span class="keywordflow">case</span> <a class="code" href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a9d02ea768c081d4bdb2b7cab0b3f510d">armnn::DataType::QAsymmS8</a>:</div><div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;        {</div><div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;            qScale = 0.1f;</div><div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;            qOffset = 64;</div><div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;            <span class="keywordflow">break</span>;</div><div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;        }</div><div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;        <span class="keywordflow">case</span> <a class="code" href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a053c769dcf82d66ef326c86980c02ba7">armnn::DataType::QSymmS16</a>:</div><div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;        {</div><div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;            qScale = 0.1f;</div><div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;            qOffset = 0;</div><div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;            <span class="keywordflow">break</span>;</div><div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;        }</div><div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;        <span class="keywordflow">case</span> <a class="code" href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6acdb56b2d2f73c26480207524f2dbe0af">armnn::DataType::BFloat16</a>:</div><div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;        <span class="keywordflow">case</span> <a class="code" href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a26e6ed77470c6f2f830ecf874e6c0d55">armnn::DataType::Float16</a>:</div><div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;        <span class="keywordflow">case</span> <a class="code" href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a166495adc0d0f53bee6baecc577f5204">armnn::DataType::Float32</a>:</div><div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;        <span class="keywordflow">default</span>:</div><div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;        {</div><div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;            qScale = 1.f;</div><div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;            qOffset = 0;</div><div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;            <span class="keywordflow">break</span>;</div><div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;        }</div><div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;    }</div><div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;}</div><div class="ttc" id="namespacearmnn_xhtml_ad8ed01ff3ff33333d8e19db4d2818bb6a9d02ea768c081d4bdb2b7cab0b3f510d"><div class="ttname"><a href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a9d02ea768c081d4bdb2b7cab0b3f510d">armnn::DataType::QAsymmS8</a></div></div>
<div class="ttc" id="namespacearmnn_xhtml_ad8ed01ff3ff33333d8e19db4d2818bb6a053c769dcf82d66ef326c86980c02ba7"><div class="ttname"><a href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a053c769dcf82d66ef326c86980c02ba7">armnn::DataType::QSymmS16</a></div></div>
<div class="ttc" id="namespacearmnn_xhtml_ad8ed01ff3ff33333d8e19db4d2818bb6a0a3f57c876f5a230244c38e1453a8a6e"><div class="ttname"><a href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a0a3f57c876f5a230244c38e1453a8a6e">armnn::DataType::QAsymmU8</a></div></div>
<div class="ttc" id="namespacearmnn_xhtml_ad8ed01ff3ff33333d8e19db4d2818bb6a26e6ed77470c6f2f830ecf874e6c0d55"><div class="ttname"><a href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a26e6ed77470c6f2f830ecf874e6c0d55">armnn::DataType::Float16</a></div></div>
<div class="ttc" id="namespacearmnn_xhtml_ad8ed01ff3ff33333d8e19db4d2818bb6acdb56b2d2f73c26480207524f2dbe0af"><div class="ttname"><a href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6acdb56b2d2f73c26480207524f2dbe0af">armnn::DataType::BFloat16</a></div></div>
<div class="ttc" id="namespacearmnn_xhtml_ad8ed01ff3ff33333d8e19db4d2818bb6a166495adc0d0f53bee6baecc577f5204"><div class="ttname"><a href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a166495adc0d0f53bee6baecc577f5204">armnn::DataType::Float32</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="a97f335101f2aeb09994ab41d32c09904"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a97f335101f2aeb09994ab41d32c09904">&#9670;&nbsp;</a></span>SimpleConvolution3d3x3x3Float32Test()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="struct_layer_test_result.xhtml">LayerTestResult</a>&lt;float, 5&gt; SimpleConvolution3d3x3x3Float32Test </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classarmnn_1_1_i_workload_factory.xhtml">armnn::IWorkloadFactory</a> &amp;&#160;</td>
          <td class="paramname"><em>workloadFactory</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_i_backend_internal.xhtml#a693b40e6b94e958836aeb0410ca186bd">armnn::IBackendInternal::IMemoryManagerSharedPtr</a> &amp;&#160;</td>
          <td class="paramname"><em>memoryManager</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_i_tensor_handle_factory.xhtml">armnn::ITensorHandleFactory</a> &amp;&#160;</td>
          <td class="paramname"><em>tensorHandleFactory</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>biasEnabled</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="namespacearmnn.xhtml#ad1d5cce2d9e9a5d61c243e5c989112e0">armnn::DataLayout</a>&#160;</td>
          <td class="paramname"><em>dataLayout</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_conv3d_test_impl_8cpp_source.xhtml#l00859">859</a> of file <a class="el" href="_conv3d_test_impl_8cpp_source.xhtml">Conv3dTestImpl.cpp</a>.</p>

<p class="reference">Referenced by <a class="el" href="_cl_layer_tests_8cpp_source.xhtml#l00027">TEST_SUITE()</a>.</p>
<div class="fragment"><div class="line"><a name="l00865"></a><span class="lineno">  865</span>&#160;{</div><div class="line"><a name="l00866"></a><span class="lineno">  866</span>&#160;    <span class="keywordflow">return</span> SimpleConvolution3d3x3x3TestCommon&lt;armnn::DataType::Float32, armnn::DataType::Float32&gt;(</div><div class="line"><a name="l00867"></a><span class="lineno">  867</span>&#160;            workloadFactory, memoryManager, tensorHandleFactory, biasEnabled, dataLayout);</div><div class="line"><a name="l00868"></a><span class="lineno">  868</span>&#160;}</div></div><!-- fragment -->
</div>
</div>
<a id="a383e402b8f57b092bd6fc6fda8387f11"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a383e402b8f57b092bd6fc6fda8387f11">&#9670;&nbsp;</a></span>SimpleConvolution3d3x3x3Int16Test()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="struct_layer_test_result.xhtml">LayerTestResult</a>&lt;int16_t, 5&gt; SimpleConvolution3d3x3x3Int16Test </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classarmnn_1_1_i_workload_factory.xhtml">armnn::IWorkloadFactory</a> &amp;&#160;</td>
          <td class="paramname"><em>workloadFactory</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_i_backend_internal.xhtml#a693b40e6b94e958836aeb0410ca186bd">armnn::IBackendInternal::IMemoryManagerSharedPtr</a> &amp;&#160;</td>
          <td class="paramname"><em>memoryManager</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_i_tensor_handle_factory.xhtml">armnn::ITensorHandleFactory</a> &amp;&#160;</td>
          <td class="paramname"><em>tensorHandleFactory</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>biasEnabled</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="namespacearmnn.xhtml#ad1d5cce2d9e9a5d61c243e5c989112e0">armnn::DataLayout</a>&#160;</td>
          <td class="paramname"><em>dataLayout</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_conv3d_test_impl_8cpp_source.xhtml#l00892">892</a> of file <a class="el" href="_conv3d_test_impl_8cpp_source.xhtml">Conv3dTestImpl.cpp</a>.</p>

<p class="reference">Referenced by <a class="el" href="_ref_layer_tests_8cpp_source.xhtml#l00014">TEST_SUITE()</a>.</p>
<div class="fragment"><div class="line"><a name="l00898"></a><span class="lineno">  898</span>&#160;{</div><div class="line"><a name="l00899"></a><span class="lineno">  899</span>&#160;    <span class="keywordflow">return</span> SimpleConvolution3d3x3x3TestCommon&lt;armnn::DataType::QSymmS16, armnn::DataType::Signed32&gt;(</div><div class="line"><a name="l00900"></a><span class="lineno">  900</span>&#160;            workloadFactory, memoryManager, tensorHandleFactory, biasEnabled, dataLayout);</div><div class="line"><a name="l00901"></a><span class="lineno">  901</span>&#160;}</div></div><!-- fragment -->
</div>
</div>
<a id="a547970283584b6cec80bf753eca14cd8"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a547970283584b6cec80bf753eca14cd8">&#9670;&nbsp;</a></span>SimpleConvolution3d3x3x3Int8Test()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="struct_layer_test_result.xhtml">LayerTestResult</a>&lt;int8_t, 5&gt; SimpleConvolution3d3x3x3Int8Test </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classarmnn_1_1_i_workload_factory.xhtml">armnn::IWorkloadFactory</a> &amp;&#160;</td>
          <td class="paramname"><em>workloadFactory</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_i_backend_internal.xhtml#a693b40e6b94e958836aeb0410ca186bd">armnn::IBackendInternal::IMemoryManagerSharedPtr</a> &amp;&#160;</td>
          <td class="paramname"><em>memoryManager</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_i_tensor_handle_factory.xhtml">armnn::ITensorHandleFactory</a> &amp;&#160;</td>
          <td class="paramname"><em>tensorHandleFactory</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>biasEnabled</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="namespacearmnn.xhtml#ad1d5cce2d9e9a5d61c243e5c989112e0">armnn::DataLayout</a>&#160;</td>
          <td class="paramname"><em>dataLayout</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_conv3d_test_impl_8cpp_source.xhtml#l00870">870</a> of file <a class="el" href="_conv3d_test_impl_8cpp_source.xhtml">Conv3dTestImpl.cpp</a>.</p>

<p class="reference">Referenced by <a class="el" href="_cl_layer_tests_8cpp_source.xhtml#l00027">TEST_SUITE()</a>.</p>
<div class="fragment"><div class="line"><a name="l00876"></a><span class="lineno">  876</span>&#160;{</div><div class="line"><a name="l00877"></a><span class="lineno">  877</span>&#160;    <span class="keywordflow">return</span> SimpleConvolution3d3x3x3TestCommon&lt;armnn::DataType::QAsymmS8, armnn::DataType::Signed32&gt;(</div><div class="line"><a name="l00878"></a><span class="lineno">  878</span>&#160;            workloadFactory, memoryManager, tensorHandleFactory, biasEnabled, dataLayout);</div><div class="line"><a name="l00879"></a><span class="lineno">  879</span>&#160;}</div></div><!-- fragment -->
</div>
</div>
<a id="a7d255a9d48c3070697023d78e624524a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a7d255a9d48c3070697023d78e624524a">&#9670;&nbsp;</a></span>SimpleConvolution3d3x3x3TestCommon()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="struct_layer_test_result.xhtml">LayerTestResult</a>&lt;T, 5&gt; SimpleConvolution3d3x3x3TestCommon </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classarmnn_1_1_i_workload_factory.xhtml">armnn::IWorkloadFactory</a> &amp;&#160;</td>
          <td class="paramname"><em>workloadFactory</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_i_backend_internal.xhtml#a693b40e6b94e958836aeb0410ca186bd">armnn::IBackendInternal::IMemoryManagerSharedPtr</a> &amp;&#160;</td>
          <td class="paramname"><em>memoryManager</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_i_tensor_handle_factory.xhtml">armnn::ITensorHandleFactory</a> &amp;&#160;</td>
          <td class="paramname"><em>tensorHandleFactory</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>biasEnabled</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="namespacearmnn.xhtml#ad1d5cce2d9e9a5d61c243e5c989112e0">armnn::DataLayout</a>&#160;</td>
          <td class="paramname"><em>dataLayout</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_conv3d_test_impl_8cpp_source.xhtml#l00306">306</a> of file <a class="el" href="_conv3d_test_impl_8cpp_source.xhtml">Conv3dTestImpl.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00312"></a><span class="lineno">  312</span>&#160;{</div><div class="line"><a name="l00313"></a><span class="lineno">  313</span>&#160;    <span class="keywordtype">float</span> qScale;</div><div class="line"><a name="l00314"></a><span class="lineno">  314</span>&#160;    int32_t qOffset;</div><div class="line"><a name="l00315"></a><span class="lineno">  315</span>&#160;    SetScaleOffset&lt;ArmnnType&gt;(qScale, qOffset);</div><div class="line"><a name="l00316"></a><span class="lineno">  316</span>&#160;</div><div class="line"><a name="l00317"></a><span class="lineno">  317</span>&#160;    <a class="code" href="classarmnn_1_1_tensor_info.xhtml">armnn::TensorInfo</a> inputDesc({ 1, 5, 5, 5, 1 }, ArmnnType);</div><div class="line"><a name="l00318"></a><span class="lineno">  318</span>&#160;    std::vector&lt;T&gt; input = CreateQuantizedData&lt;T&gt;(125, qScale, qOffset);</div><div class="line"><a name="l00319"></a><span class="lineno">  319</span>&#160;</div><div class="line"><a name="l00320"></a><span class="lineno">  320</span>&#160;    <a class="code" href="classarmnn_1_1_tensor_info.xhtml">armnn::TensorInfo</a> kernelDesc({ 3, 3, 3, 1, 1 }, ArmnnType);</div><div class="line"><a name="l00321"></a><span class="lineno">  321</span>&#160;    std::vector&lt;T&gt; kernel = QuantizedVector&lt;T&gt;(</div><div class="line"><a name="l00322"></a><span class="lineno">  322</span>&#160;    {</div><div class="line"><a name="l00323"></a><span class="lineno">  323</span>&#160;        1, 1, 1,</div><div class="line"><a name="l00324"></a><span class="lineno">  324</span>&#160;        1, 1, 1,</div><div class="line"><a name="l00325"></a><span class="lineno">  325</span>&#160;        1, 1, 1,</div><div class="line"><a name="l00326"></a><span class="lineno">  326</span>&#160;</div><div class="line"><a name="l00327"></a><span class="lineno">  327</span>&#160;        0, 0, 0,</div><div class="line"><a name="l00328"></a><span class="lineno">  328</span>&#160;        0, 1, 0,</div><div class="line"><a name="l00329"></a><span class="lineno">  329</span>&#160;        0, 0, 0,</div><div class="line"><a name="l00330"></a><span class="lineno">  330</span>&#160;</div><div class="line"><a name="l00331"></a><span class="lineno">  331</span>&#160;        1, 1, 1,</div><div class="line"><a name="l00332"></a><span class="lineno">  332</span>&#160;        1, 1, 1,</div><div class="line"><a name="l00333"></a><span class="lineno">  333</span>&#160;        1, 1, 1,</div><div class="line"><a name="l00334"></a><span class="lineno">  334</span>&#160;    },</div><div class="line"><a name="l00335"></a><span class="lineno">  335</span>&#160;    qScale, qOffset);</div><div class="line"><a name="l00336"></a><span class="lineno">  336</span>&#160;</div><div class="line"><a name="l00337"></a><span class="lineno">  337</span>&#160;    <a class="code" href="classarmnn_1_1_tensor_info.xhtml">armnn::TensorInfo</a> outputDesc({ 1, 3, 3, 3, 1 }, ArmnnType);</div><div class="line"><a name="l00338"></a><span class="lineno">  338</span>&#160;    std::vector&lt;T&gt; outputData = QuantizedVector&lt;T&gt;(</div><div class="line"><a name="l00339"></a><span class="lineno">  339</span>&#160;    {</div><div class="line"><a name="l00340"></a><span class="lineno">  340</span>&#160;        589, 608, 627,</div><div class="line"><a name="l00341"></a><span class="lineno">  341</span>&#160;        684, 703, 722,</div><div class="line"><a name="l00342"></a><span class="lineno">  342</span>&#160;        779, 798, 817,</div><div class="line"><a name="l00343"></a><span class="lineno">  343</span>&#160;</div><div class="line"><a name="l00344"></a><span class="lineno">  344</span>&#160;        1064, 1083, 1102,</div><div class="line"><a name="l00345"></a><span class="lineno">  345</span>&#160;        1159, 1178, 1197,</div><div class="line"><a name="l00346"></a><span class="lineno">  346</span>&#160;        1254, 1273, 1292,</div><div class="line"><a name="l00347"></a><span class="lineno">  347</span>&#160;</div><div class="line"><a name="l00348"></a><span class="lineno">  348</span>&#160;        1539, 1558, 1577,</div><div class="line"><a name="l00349"></a><span class="lineno">  349</span>&#160;        1634, 1653, 1672,</div><div class="line"><a name="l00350"></a><span class="lineno">  350</span>&#160;        1729, 1748, 1767</div><div class="line"><a name="l00351"></a><span class="lineno">  351</span>&#160;    },</div><div class="line"><a name="l00352"></a><span class="lineno">  352</span>&#160;    qScale, qOffset);</div><div class="line"><a name="l00353"></a><span class="lineno">  353</span>&#160;</div><div class="line"><a name="l00354"></a><span class="lineno">  354</span>&#160;    <span class="keywordflow">return</span> SimpleConvolution3dTestImpl&lt;ArmnnType, ArmnnBType&gt;(</div><div class="line"><a name="l00355"></a><span class="lineno">  355</span>&#160;            workloadFactory,</div><div class="line"><a name="l00356"></a><span class="lineno">  356</span>&#160;            memoryManager,</div><div class="line"><a name="l00357"></a><span class="lineno">  357</span>&#160;            tensorHandleFactory,</div><div class="line"><a name="l00358"></a><span class="lineno">  358</span>&#160;            input,</div><div class="line"><a name="l00359"></a><span class="lineno">  359</span>&#160;            kernel,</div><div class="line"><a name="l00360"></a><span class="lineno">  360</span>&#160;            GetBiasData&lt;ArmnnBType&gt;(biasEnabled, qScale * qScale, outputDesc, dataLayout),</div><div class="line"><a name="l00361"></a><span class="lineno">  361</span>&#160;            outputData,</div><div class="line"><a name="l00362"></a><span class="lineno">  362</span>&#160;            inputDesc.GetShape(),</div><div class="line"><a name="l00363"></a><span class="lineno">  363</span>&#160;            kernelDesc.GetShape(),</div><div class="line"><a name="l00364"></a><span class="lineno">  364</span>&#160;            outputDesc.GetShape(),</div><div class="line"><a name="l00365"></a><span class="lineno">  365</span>&#160;            dataLayout,</div><div class="line"><a name="l00366"></a><span class="lineno">  366</span>&#160;            qScale,</div><div class="line"><a name="l00367"></a><span class="lineno">  367</span>&#160;            qOffset</div><div class="line"><a name="l00368"></a><span class="lineno">  368</span>&#160;    );</div><div class="line"><a name="l00369"></a><span class="lineno">  369</span>&#160;}</div><div class="ttc" id="classarmnn_1_1_tensor_info_xhtml"><div class="ttname"><a href="classarmnn_1_1_tensor_info.xhtml">armnn::TensorInfo</a></div><div class="ttdef"><b>Definition:</b> <a href="_tensor_8hpp_source.xhtml#l00152">Tensor.hpp:152</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="a4c578ed3b0e74f84354fad1cc40a1d9d"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a4c578ed3b0e74f84354fad1cc40a1d9d">&#9670;&nbsp;</a></span>SimpleConvolution3d3x3x3Uint8Test()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="struct_layer_test_result.xhtml">LayerTestResult</a>&lt;uint8_t, 5&gt; SimpleConvolution3d3x3x3Uint8Test </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classarmnn_1_1_i_workload_factory.xhtml">armnn::IWorkloadFactory</a> &amp;&#160;</td>
          <td class="paramname"><em>workloadFactory</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_i_backend_internal.xhtml#a693b40e6b94e958836aeb0410ca186bd">armnn::IBackendInternal::IMemoryManagerSharedPtr</a> &amp;&#160;</td>
          <td class="paramname"><em>memoryManager</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_i_tensor_handle_factory.xhtml">armnn::ITensorHandleFactory</a> &amp;&#160;</td>
          <td class="paramname"><em>tensorHandleFactory</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>biasEnabled</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="namespacearmnn.xhtml#ad1d5cce2d9e9a5d61c243e5c989112e0">armnn::DataLayout</a>&#160;</td>
          <td class="paramname"><em>dataLayout</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_conv3d_test_impl_8cpp_source.xhtml#l00881">881</a> of file <a class="el" href="_conv3d_test_impl_8cpp_source.xhtml">Conv3dTestImpl.cpp</a>.</p>

<p class="reference">Referenced by <a class="el" href="_cl_layer_tests_8cpp_source.xhtml#l00027">TEST_SUITE()</a>.</p>
<div class="fragment"><div class="line"><a name="l00887"></a><span class="lineno">  887</span>&#160;{</div><div class="line"><a name="l00888"></a><span class="lineno">  888</span>&#160;    <span class="keywordflow">return</span> SimpleConvolution3d3x3x3TestCommon&lt;armnn::DataType::QAsymmU8, armnn::DataType::Signed32&gt;(</div><div class="line"><a name="l00889"></a><span class="lineno">  889</span>&#160;            workloadFactory, memoryManager, tensorHandleFactory, biasEnabled, dataLayout);</div><div class="line"><a name="l00890"></a><span class="lineno">  890</span>&#160;}</div></div><!-- fragment -->
</div>
</div>
<a id="aa8c767319f74f1b79ca1658b0cd0c8e0"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aa8c767319f74f1b79ca1658b0cd0c8e0">&#9670;&nbsp;</a></span>SimpleConvolution3dTestImpl()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="struct_layer_test_result.xhtml">LayerTestResult</a>&lt;T, 5&gt; SimpleConvolution3dTestImpl </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classarmnn_1_1_i_workload_factory.xhtml">armnn::IWorkloadFactory</a> &amp;&#160;</td>
          <td class="paramname"><em>workloadFactory</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_i_backend_internal.xhtml#a693b40e6b94e958836aeb0410ca186bd">armnn::IBackendInternal::IMemoryManagerSharedPtr</a> &amp;&#160;</td>
          <td class="paramname"><em>memoryManager</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_i_tensor_handle_factory.xhtml">armnn::ITensorHandleFactory</a> &amp;&#160;</td>
          <td class="paramname"><em>tensorHandleFactory</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const std::vector&lt; T &gt; &amp;&#160;</td>
          <td class="paramname"><em>input</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const std::vector&lt; T &gt; &amp;&#160;</td>
          <td class="paramname"><em>kernel</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const std::vector&lt; B &gt; &amp;&#160;</td>
          <td class="paramname"><em>bias</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const std::vector&lt; T &gt; &amp;&#160;</td>
          <td class="paramname"><em>outputExpected</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_tensor_shape.xhtml">armnn::TensorShape</a> &amp;&#160;</td>
          <td class="paramname"><em>inputShape</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_tensor_shape.xhtml">armnn::TensorShape</a> &amp;&#160;</td>
          <td class="paramname"><em>kernelShape</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_tensor_shape.xhtml">armnn::TensorShape</a> &amp;&#160;</td>
          <td class="paramname"><em>outputExpectedShape</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="namespacearmnn.xhtml#ad1d5cce2d9e9a5d61c243e5c989112e0">armnn::DataLayout</a>&#160;</td>
          <td class="paramname"><em>dataLayout</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>qScale</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int32_t&#160;</td>
          <td class="paramname"><em>qOffset</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>strideX</em> = <code>1</code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>strideY</em> = <code>1</code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>strideZ</em> = <code>1</code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>dilationX</em> = <code>1</code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>dilationY</em> = <code>1</code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>dilationZ</em> = <code>1</code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>padLeft</em> = <code>0</code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>padTop</em> = <code>0</code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>padRight</em> = <code>0</code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>padBottom</em> = <code>0</code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>padFront</em> = <code>0</code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>padBack</em> = <code>0</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_conv3d_test_impl_8cpp_source.xhtml#l00150">150</a> of file <a class="el" href="_conv3d_test_impl_8cpp_source.xhtml">Conv3dTestImpl.cpp</a>.</p>

<p class="reference">References <a class="el" href="_conv3d_test_impl_8cpp_source.xhtml#l00056">ApplyBiasToData()</a>, <a class="el" href="_assert_8hpp_source.xhtml#l00014">ARMNN_ASSERT</a>, <a class="el" href="namespacearmnn.xhtml#a56943a0946e5f15e5e58054b8e7a04a4a583550d0f265fd3756f7de0e42c51953">armnn::Convolution3d</a>, <a class="el" href="_tensor_copy_utils_8cpp_source.xhtml#l00014">CopyDataFromITensorHandle()</a>, <a class="el" href="_tensor_copy_utils_8cpp_source.xhtml#l00009">CopyDataToITensorHandle()</a>, <a class="el" href="classarmnn_1_1_i_tensor_handle_factory.xhtml#a375f11dd42ff042435e8771cf287b20c">ITensorHandleFactory::CreateTensorHandle()</a>, <a class="el" href="_workload_factory_8cpp_source.xhtml#l01559">IWorkloadFactory::CreateWorkload()</a>, <a class="el" href="namespacearmnn.xhtml#a4dc0adc6737b5944e7671bee71788407acaf9b6b99962bf5c2264824231d7a40c">armnn::info</a>, <a class="el" href="_descriptors_8hpp_source.xhtml#l00618">Convolution3dDescriptor::m_BiasEnabled</a>, <a class="el" href="_descriptors_8hpp_source.xhtml#l00620">Convolution3dDescriptor::m_DataLayout</a>, <a class="el" href="_descriptors_8hpp_source.xhtml#l00612">Convolution3dDescriptor::m_DilationX</a>, <a class="el" href="_descriptors_8hpp_source.xhtml#l00614">Convolution3dDescriptor::m_DilationY</a>, <a class="el" href="_descriptors_8hpp_source.xhtml#l00616">Convolution3dDescriptor::m_DilationZ</a>, <a class="el" href="_descriptors_8hpp_source.xhtml#l00604">Convolution3dDescriptor::m_PadBack</a>, <a class="el" href="_descriptors_8hpp_source.xhtml#l00600">Convolution3dDescriptor::m_PadBottom</a>, <a class="el" href="_descriptors_8hpp_source.xhtml#l00602">Convolution3dDescriptor::m_PadFront</a>, <a class="el" href="_descriptors_8hpp_source.xhtml#l00594">Convolution3dDescriptor::m_PadLeft</a>, <a class="el" href="_descriptors_8hpp_source.xhtml#l00596">Convolution3dDescriptor::m_PadRight</a>, <a class="el" href="_descriptors_8hpp_source.xhtml#l00598">Convolution3dDescriptor::m_PadTop</a>, <a class="el" href="include_2armnn_2backends_2_workload_data_8hpp_source.xhtml#l00066">QueueDescriptorWithParameters&lt; LayerDescriptor &gt;::m_Parameters</a>, <a class="el" href="_descriptors_8hpp_source.xhtml#l00606">Convolution3dDescriptor::m_StrideX</a>, <a class="el" href="_descriptors_8hpp_source.xhtml#l00608">Convolution3dDescriptor::m_StrideY</a>, <a class="el" href="_descriptors_8hpp_source.xhtml#l00610">Convolution3dDescriptor::m_StrideZ</a>, <a class="el" href="namespacearmnn.xhtml#ad1d5cce2d9e9a5d61c243e5c989112e0a884e0167ebf9bbe6cfd6ca5ab97ab015">armnn::NCDHW</a>, <a class="el" href="_numeric_cast_8hpp_source.xhtml#l00035">armnn::numeric_cast()</a>, and <a class="el" href="include_2armnn_test_utils_2_data_layout_utils_8hpp_source.xhtml#l00039">PermuteTensorNdhwcToNcdhw()</a>.</p>
<div class="fragment"><div class="line"><a name="l00176"></a><span class="lineno">  176</span>&#160;{</div><div class="line"><a name="l00177"></a><span class="lineno">  177</span>&#160;    <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> inputNum       = <a class="code" href="namespacearmnn.xhtml#a375ca3cff9f1b005d1412dc5f3cf5b6e">armnn::numeric_cast</a>&lt;<span class="keywordtype">unsigned</span> <span class="keywordtype">int</span>&gt;(inputShape[0]);</div><div class="line"><a name="l00178"></a><span class="lineno">  178</span>&#160;    <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> inputDepth     = <a class="code" href="namespacearmnn.xhtml#a375ca3cff9f1b005d1412dc5f3cf5b6e">armnn::numeric_cast</a>&lt;<span class="keywordtype">unsigned</span> <span class="keywordtype">int</span>&gt;(inputShape[1]);</div><div class="line"><a name="l00179"></a><span class="lineno">  179</span>&#160;    <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> inputHeight    = <a class="code" href="namespacearmnn.xhtml#a375ca3cff9f1b005d1412dc5f3cf5b6e">armnn::numeric_cast</a>&lt;<span class="keywordtype">unsigned</span> <span class="keywordtype">int</span>&gt;(inputShape[2]);</div><div class="line"><a name="l00180"></a><span class="lineno">  180</span>&#160;    <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> inputWidth     = <a class="code" href="namespacearmnn.xhtml#a375ca3cff9f1b005d1412dc5f3cf5b6e">armnn::numeric_cast</a>&lt;<span class="keywordtype">unsigned</span> <span class="keywordtype">int</span>&gt;(inputShape[3]);</div><div class="line"><a name="l00181"></a><span class="lineno">  181</span>&#160;    <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> inputChannels  = <a class="code" href="namespacearmnn.xhtml#a375ca3cff9f1b005d1412dc5f3cf5b6e">armnn::numeric_cast</a>&lt;<span class="keywordtype">unsigned</span> <span class="keywordtype">int</span>&gt;(inputShape[4]);</div><div class="line"><a name="l00182"></a><span class="lineno">  182</span>&#160;</div><div class="line"><a name="l00183"></a><span class="lineno">  183</span>&#160;    <span class="comment">// Conv3d weights/kernel layout: [D,H,W,I,O]</span></div><div class="line"><a name="l00184"></a><span class="lineno">  184</span>&#160;    <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> kernelDepth        = <a class="code" href="namespacearmnn.xhtml#a375ca3cff9f1b005d1412dc5f3cf5b6e">armnn::numeric_cast</a>&lt;<span class="keywordtype">unsigned</span> <span class="keywordtype">int</span>&gt;(kernelShape[0]);</div><div class="line"><a name="l00185"></a><span class="lineno">  185</span>&#160;    <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> kernelHeight       = <a class="code" href="namespacearmnn.xhtml#a375ca3cff9f1b005d1412dc5f3cf5b6e">armnn::numeric_cast</a>&lt;<span class="keywordtype">unsigned</span> <span class="keywordtype">int</span>&gt;(kernelShape[1]);</div><div class="line"><a name="l00186"></a><span class="lineno">  186</span>&#160;    <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> kernelWidth        = <a class="code" href="namespacearmnn.xhtml#a375ca3cff9f1b005d1412dc5f3cf5b6e">armnn::numeric_cast</a>&lt;<span class="keywordtype">unsigned</span> <span class="keywordtype">int</span>&gt;(kernelShape[2]);</div><div class="line"><a name="l00187"></a><span class="lineno">  187</span>&#160;    <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> kernelInChannels   = <a class="code" href="namespacearmnn.xhtml#a375ca3cff9f1b005d1412dc5f3cf5b6e">armnn::numeric_cast</a>&lt;<span class="keywordtype">unsigned</span> <span class="keywordtype">int</span>&gt;(kernelShape[3]);</div><div class="line"><a name="l00188"></a><span class="lineno">  188</span>&#160;    <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> kernelOutChannels  = <a class="code" href="namespacearmnn.xhtml#a375ca3cff9f1b005d1412dc5f3cf5b6e">armnn::numeric_cast</a>&lt;<span class="keywordtype">unsigned</span> <span class="keywordtype">int</span>&gt;(kernelShape[4]);</div><div class="line"><a name="l00189"></a><span class="lineno">  189</span>&#160;</div><div class="line"><a name="l00190"></a><span class="lineno">  190</span>&#160;    <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> outputNum      = <a class="code" href="namespacearmnn.xhtml#a375ca3cff9f1b005d1412dc5f3cf5b6e">armnn::numeric_cast</a>&lt;<span class="keywordtype">unsigned</span> <span class="keywordtype">int</span>&gt;(outputExpectedShape[0]);</div><div class="line"><a name="l00191"></a><span class="lineno">  191</span>&#160;    <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> outputDepth    = <a class="code" href="namespacearmnn.xhtml#a375ca3cff9f1b005d1412dc5f3cf5b6e">armnn::numeric_cast</a>&lt;<span class="keywordtype">unsigned</span> <span class="keywordtype">int</span>&gt;(outputExpectedShape[1]);</div><div class="line"><a name="l00192"></a><span class="lineno">  192</span>&#160;    <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> outputHeight   = <a class="code" href="namespacearmnn.xhtml#a375ca3cff9f1b005d1412dc5f3cf5b6e">armnn::numeric_cast</a>&lt;<span class="keywordtype">unsigned</span> <span class="keywordtype">int</span>&gt;(outputExpectedShape[2]);</div><div class="line"><a name="l00193"></a><span class="lineno">  193</span>&#160;    <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> outputWidth    = <a class="code" href="namespacearmnn.xhtml#a375ca3cff9f1b005d1412dc5f3cf5b6e">armnn::numeric_cast</a>&lt;<span class="keywordtype">unsigned</span> <span class="keywordtype">int</span>&gt;(outputExpectedShape[3]);</div><div class="line"><a name="l00194"></a><span class="lineno">  194</span>&#160;    <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> outputChannels = <a class="code" href="namespacearmnn.xhtml#a375ca3cff9f1b005d1412dc5f3cf5b6e">armnn::numeric_cast</a>&lt;<span class="keywordtype">unsigned</span> <span class="keywordtype">int</span>&gt;(outputExpectedShape[4]);</div><div class="line"><a name="l00195"></a><span class="lineno">  195</span>&#160;</div><div class="line"><a name="l00196"></a><span class="lineno">  196</span>&#160;    <span class="keywordtype">bool</span> biasEnabled = bias.size() &gt; 0;</div><div class="line"><a name="l00197"></a><span class="lineno">  197</span>&#160;</div><div class="line"><a name="l00198"></a><span class="lineno">  198</span>&#160;    <span class="comment">// If a bias is used, its size must equal the number of output channels.</span></div><div class="line"><a name="l00199"></a><span class="lineno">  199</span>&#160;    <a class="code" href="_assert_8hpp.xhtml#a5698be69cbd5dfe6c28fcd9867e8cbed">ARMNN_ASSERT</a>(!biasEnabled || bias.size() == outputChannels);</div><div class="line"><a name="l00200"></a><span class="lineno">  200</span>&#160;</div><div class="line"><a name="l00201"></a><span class="lineno">  201</span>&#160;    <span class="comment">// Creates the tensors.</span></div><div class="line"><a name="l00202"></a><span class="lineno">  202</span>&#160;    <a class="code" href="classarmnn_1_1_tensor_info.xhtml">armnn::TensorInfo</a> inputTensorInfo({inputNum, inputDepth, inputHeight, inputWidth, inputChannels}, ArmnnType);</div><div class="line"><a name="l00203"></a><span class="lineno">  203</span>&#160;    <a class="code" href="classarmnn_1_1_tensor_info.xhtml">armnn::TensorInfo</a> outputTensorInfo({outputNum, outputDepth, outputHeight, outputWidth, outputChannels}, ArmnnType);</div><div class="line"><a name="l00204"></a><span class="lineno">  204</span>&#160;    <a class="code" href="classarmnn_1_1_tensor_info.xhtml">armnn::TensorInfo</a> kernelDesc({kernelDepth, kernelHeight, kernelWidth, kernelInChannels, kernelOutChannels},</div><div class="line"><a name="l00205"></a><span class="lineno">  205</span>&#160;                                 ArmnnType);</div><div class="line"><a name="l00206"></a><span class="lineno">  206</span>&#160;    <a class="code" href="classarmnn_1_1_tensor_info.xhtml">armnn::TensorInfo</a> biasDesc({<span class="keyword">static_cast&lt;</span><span class="keywordtype">unsigned</span> <span class="keywordtype">int</span><span class="keyword">&gt;</span>(bias.size())}, ArmnnBType);</div><div class="line"><a name="l00207"></a><span class="lineno">  207</span>&#160;</div><div class="line"><a name="l00208"></a><span class="lineno">  208</span>&#160;    <span class="comment">// Set quantization parameters if the requested type is a quantized type.</span></div><div class="line"><a name="l00209"></a><span class="lineno">  209</span>&#160;    <span class="keywordflow">if</span>(armnn::IsQuantizedType&lt;T&gt;())</div><div class="line"><a name="l00210"></a><span class="lineno">  210</span>&#160;    {</div><div class="line"><a name="l00211"></a><span class="lineno">  211</span>&#160;        inputTensorInfo.SetQuantizationScale(qScale);</div><div class="line"><a name="l00212"></a><span class="lineno">  212</span>&#160;        inputTensorInfo.SetQuantizationOffset(qOffset);</div><div class="line"><a name="l00213"></a><span class="lineno">  213</span>&#160;        outputTensorInfo.SetQuantizationScale(qScale);</div><div class="line"><a name="l00214"></a><span class="lineno">  214</span>&#160;        outputTensorInfo.SetQuantizationOffset(qOffset);</div><div class="line"><a name="l00215"></a><span class="lineno">  215</span>&#160;        kernelDesc.SetQuantizationScale(qScale);</div><div class="line"><a name="l00216"></a><span class="lineno">  216</span>&#160;        kernelDesc.SetQuantizationOffset(qOffset);</div><div class="line"><a name="l00217"></a><span class="lineno">  217</span>&#160;        biasDesc.SetQuantizationScale(qScale*qScale);</div><div class="line"><a name="l00218"></a><span class="lineno">  218</span>&#160;        biasDesc.SetQuantizationOffset(0);</div><div class="line"><a name="l00219"></a><span class="lineno">  219</span>&#160;    }</div><div class="line"><a name="l00220"></a><span class="lineno">  220</span>&#160;</div><div class="line"><a name="l00221"></a><span class="lineno">  221</span>&#160;    <span class="comment">// Construct the input data.</span></div><div class="line"><a name="l00222"></a><span class="lineno">  222</span>&#160;    std::vector&lt;T&gt; inputData;</div><div class="line"><a name="l00223"></a><span class="lineno">  223</span>&#160;    inputData.assign(input.data(), input.data() + inputNum*inputDepth*inputHeight*inputWidth*inputChannels);</div><div class="line"><a name="l00224"></a><span class="lineno">  224</span>&#160;</div><div class="line"><a name="l00225"></a><span class="lineno">  225</span>&#160;    <span class="comment">// Construct the output data and apply bias if needed.</span></div><div class="line"><a name="l00226"></a><span class="lineno">  226</span>&#160;    std::vector&lt;T&gt; outputData;</div><div class="line"><a name="l00227"></a><span class="lineno">  227</span>&#160;    outputData.assign(outputExpected.data(), outputExpected.data() +</div><div class="line"><a name="l00228"></a><span class="lineno">  228</span>&#160;        outputNum*outputDepth*outputHeight*outputWidth*outputChannels);</div><div class="line"><a name="l00229"></a><span class="lineno">  229</span>&#160;</div><div class="line"><a name="l00230"></a><span class="lineno">  230</span>&#160;    <span class="keywordflow">if</span> (biasEnabled)</div><div class="line"><a name="l00231"></a><span class="lineno">  231</span>&#160;    {</div><div class="line"><a name="l00232"></a><span class="lineno">  232</span>&#160;        <a class="code" href="_conv3d_test_impl_8cpp.xhtml#a41dde9c18d90c8dea2980e477d22a7fe">ApplyBiasToData</a>(outputData, bias,</div><div class="line"><a name="l00233"></a><span class="lineno">  233</span>&#160;                        outputTensorInfo.GetQuantizationScale(), outputTensorInfo.GetQuantizationOffset(),</div><div class="line"><a name="l00234"></a><span class="lineno">  234</span>&#160;                        biasDesc.GetQuantizationScale(), biasDesc.GetQuantizationOffset());</div><div class="line"><a name="l00235"></a><span class="lineno">  235</span>&#160;    }</div><div class="line"><a name="l00236"></a><span class="lineno">  236</span>&#160;</div><div class="line"><a name="l00237"></a><span class="lineno">  237</span>&#160;    <span class="comment">// Permute input and output if data layout is NCDHW.</span></div><div class="line"><a name="l00238"></a><span class="lineno">  238</span>&#160;    <span class="keywordflow">if</span> (dataLayout == <a class="code" href="namespacearmnn.xhtml#ad1d5cce2d9e9a5d61c243e5c989112e0a884e0167ebf9bbe6cfd6ca5ab97ab015">armnn::DataLayout::NCDHW</a>)</div><div class="line"><a name="l00239"></a><span class="lineno">  239</span>&#160;    {</div><div class="line"><a name="l00240"></a><span class="lineno">  240</span>&#160;        <a class="code" href="include_2armnn_test_utils_2_data_layout_utils_8hpp.xhtml#a024bab832cdcb51248891b1bc3aaf678">PermuteTensorNdhwcToNcdhw</a>(inputTensorInfo, inputData);</div><div class="line"><a name="l00241"></a><span class="lineno">  241</span>&#160;        <a class="code" href="include_2armnn_test_utils_2_data_layout_utils_8hpp.xhtml#a024bab832cdcb51248891b1bc3aaf678">PermuteTensorNdhwcToNcdhw</a>(outputTensorInfo, outputData);</div><div class="line"><a name="l00242"></a><span class="lineno">  242</span>&#160;    }</div><div class="line"><a name="l00243"></a><span class="lineno">  243</span>&#160;</div><div class="line"><a name="l00244"></a><span class="lineno">  244</span>&#160;    std::vector&lt;T&gt; actualOutput(outputTensorInfo.GetNumElements());</div><div class="line"><a name="l00245"></a><span class="lineno">  245</span>&#160;</div><div class="line"><a name="l00246"></a><span class="lineno">  246</span>&#160;    std::unique_ptr&lt;armnn::ITensorHandle&gt; input0Handle = tensorHandleFactory.<a class="code" href="classarmnn_1_1_i_tensor_handle_factory.xhtml#a375f11dd42ff042435e8771cf287b20c">CreateTensorHandle</a>(inputTensorInfo);</div><div class="line"><a name="l00247"></a><span class="lineno">  247</span>&#160;    std::unique_ptr&lt;armnn::ITensorHandle&gt; input1Handle = tensorHandleFactory.<a class="code" href="classarmnn_1_1_i_tensor_handle_factory.xhtml#a375f11dd42ff042435e8771cf287b20c">CreateTensorHandle</a>(kernelDesc);</div><div class="line"><a name="l00248"></a><span class="lineno">  248</span>&#160;    std::unique_ptr&lt;armnn::ITensorHandle&gt; outputHandle = tensorHandleFactory.<a class="code" href="classarmnn_1_1_i_tensor_handle_factory.xhtml#a375f11dd42ff042435e8771cf287b20c">CreateTensorHandle</a>(outputTensorInfo);</div><div class="line"><a name="l00249"></a><span class="lineno">  249</span>&#160;</div><div class="line"><a name="l00250"></a><span class="lineno">  250</span>&#160;    <a class="code" href="structarmnn_1_1_convolution3d_queue_descriptor.xhtml">armnn::Convolution3dQueueDescriptor</a> data;</div><div class="line"><a name="l00251"></a><span class="lineno">  251</span>&#160;    data.<a class="code" href="structarmnn_1_1_queue_descriptor_with_parameters.xhtml#aad91b9bbf7aa365d304febe79a3d1333">m_Parameters</a>.<a class="code" href="structarmnn_1_1_convolution3d_descriptor.xhtml#afe6a3377c4531315354def9023c8fdda">m_StrideX</a> = strideX;</div><div class="line"><a name="l00252"></a><span class="lineno">  252</span>&#160;    data.<a class="code" href="structarmnn_1_1_queue_descriptor_with_parameters.xhtml#aad91b9bbf7aa365d304febe79a3d1333">m_Parameters</a>.<a class="code" href="structarmnn_1_1_convolution3d_descriptor.xhtml#ac1fe174bbadfb39a2b636940c2e647c8">m_StrideY</a> = strideY;</div><div class="line"><a name="l00253"></a><span class="lineno">  253</span>&#160;    data.<a class="code" href="structarmnn_1_1_queue_descriptor_with_parameters.xhtml#aad91b9bbf7aa365d304febe79a3d1333">m_Parameters</a>.<a class="code" href="structarmnn_1_1_convolution3d_descriptor.xhtml#a5164336f6a1b15be0d434a6bbf7289da">m_StrideZ</a> = strideZ;</div><div class="line"><a name="l00254"></a><span class="lineno">  254</span>&#160;    data.<a class="code" href="structarmnn_1_1_queue_descriptor_with_parameters.xhtml#aad91b9bbf7aa365d304febe79a3d1333">m_Parameters</a>.<a class="code" href="structarmnn_1_1_convolution3d_descriptor.xhtml#ac18546ebbebbb32fe0a03baa9bf2c600">m_PadLeft</a> = padLeft;</div><div class="line"><a name="l00255"></a><span class="lineno">  255</span>&#160;    data.<a class="code" href="structarmnn_1_1_queue_descriptor_with_parameters.xhtml#aad91b9bbf7aa365d304febe79a3d1333">m_Parameters</a>.<a class="code" href="structarmnn_1_1_convolution3d_descriptor.xhtml#a002bc30e590d78cbb4f4d12171055ca7">m_PadRight</a> = padRight;</div><div class="line"><a name="l00256"></a><span class="lineno">  256</span>&#160;    data.<a class="code" href="structarmnn_1_1_queue_descriptor_with_parameters.xhtml#aad91b9bbf7aa365d304febe79a3d1333">m_Parameters</a>.<a class="code" href="structarmnn_1_1_convolution3d_descriptor.xhtml#a56b51f56cef50cdfa554258eecdab046">m_PadTop</a> = padTop;</div><div class="line"><a name="l00257"></a><span class="lineno">  257</span>&#160;    data.<a class="code" href="structarmnn_1_1_queue_descriptor_with_parameters.xhtml#aad91b9bbf7aa365d304febe79a3d1333">m_Parameters</a>.<a class="code" href="structarmnn_1_1_convolution3d_descriptor.xhtml#aa9e49717ebdb741e8c767741647fc618">m_PadBottom</a> = padBottom;</div><div class="line"><a name="l00258"></a><span class="lineno">  258</span>&#160;    data.<a class="code" href="structarmnn_1_1_queue_descriptor_with_parameters.xhtml#aad91b9bbf7aa365d304febe79a3d1333">m_Parameters</a>.<a class="code" href="structarmnn_1_1_convolution3d_descriptor.xhtml#a83ca447892f460dabaa2f87d3dc3db61">m_PadFront</a> = padFront;</div><div class="line"><a name="l00259"></a><span class="lineno">  259</span>&#160;    data.<a class="code" href="structarmnn_1_1_queue_descriptor_with_parameters.xhtml#aad91b9bbf7aa365d304febe79a3d1333">m_Parameters</a>.<a class="code" href="structarmnn_1_1_convolution3d_descriptor.xhtml#a11d5c25face9b54e90f79ee8bdc1d0fb">m_PadBack</a> = padBack;</div><div class="line"><a name="l00260"></a><span class="lineno">  260</span>&#160;    data.<a class="code" href="structarmnn_1_1_queue_descriptor_with_parameters.xhtml#aad91b9bbf7aa365d304febe79a3d1333">m_Parameters</a>.<a class="code" href="structarmnn_1_1_convolution3d_descriptor.xhtml#aa3c6a77a963a98ccb8ea7b8fd008a8c1">m_DilationX</a> = dilationX;</div><div class="line"><a name="l00261"></a><span class="lineno">  261</span>&#160;    data.<a class="code" href="structarmnn_1_1_queue_descriptor_with_parameters.xhtml#aad91b9bbf7aa365d304febe79a3d1333">m_Parameters</a>.<a class="code" href="structarmnn_1_1_convolution3d_descriptor.xhtml#a302b688d88dd73cde0fb1faef6679907">m_DilationY</a> = dilationY;</div><div class="line"><a name="l00262"></a><span class="lineno">  262</span>&#160;    data.<a class="code" href="structarmnn_1_1_queue_descriptor_with_parameters.xhtml#aad91b9bbf7aa365d304febe79a3d1333">m_Parameters</a>.<a class="code" href="structarmnn_1_1_convolution3d_descriptor.xhtml#a16543bce17aa2e4d6e81c88f74227192">m_DilationZ</a> = dilationZ;</div><div class="line"><a name="l00263"></a><span class="lineno">  263</span>&#160;    data.<a class="code" href="structarmnn_1_1_queue_descriptor_with_parameters.xhtml#aad91b9bbf7aa365d304febe79a3d1333">m_Parameters</a>.<a class="code" href="structarmnn_1_1_convolution3d_descriptor.xhtml#a6089e1ca91914015777ea780a513131a">m_DataLayout</a> = dataLayout;</div><div class="line"><a name="l00264"></a><span class="lineno">  264</span>&#160;    data.<a class="code" href="structarmnn_1_1_queue_descriptor_with_parameters.xhtml#aad91b9bbf7aa365d304febe79a3d1333">m_Parameters</a>.<a class="code" href="structarmnn_1_1_convolution3d_descriptor.xhtml#aea202e14d8874cefd9a0f778022b7e25">m_BiasEnabled</a> = biasEnabled;</div><div class="line"><a name="l00265"></a><span class="lineno">  265</span>&#160;</div><div class="line"><a name="l00266"></a><span class="lineno">  266</span>&#160;    <a class="code" href="structarmnn_1_1_workload_info.xhtml">armnn::WorkloadInfo</a> <a class="code" href="namespacearmnn.xhtml#a4dc0adc6737b5944e7671bee71788407acaf9b6b99962bf5c2264824231d7a40c">info</a>;</div><div class="line"><a name="l00267"></a><span class="lineno">  267</span>&#160;    AddInputToWorkload(data, info, inputTensorInfo, input0Handle.get());</div><div class="line"><a name="l00268"></a><span class="lineno">  268</span>&#160;    AddInputToWorkload(data, info, kernelDesc, input1Handle.get());</div><div class="line"><a name="l00269"></a><span class="lineno">  269</span>&#160;    AddOutputToWorkload(data, info, outputTensorInfo, outputHandle.get());</div><div class="line"><a name="l00270"></a><span class="lineno">  270</span>&#160;</div><div class="line"><a name="l00271"></a><span class="lineno">  271</span>&#160;    std::unique_ptr&lt;armnn::ITensorHandle&gt; input2Handle = <span class="keyword">nullptr</span>;</div><div class="line"><a name="l00272"></a><span class="lineno">  272</span>&#160;    <span class="keywordflow">if</span> (biasEnabled)</div><div class="line"><a name="l00273"></a><span class="lineno">  273</span>&#160;    {</div><div class="line"><a name="l00274"></a><span class="lineno">  274</span>&#160;        input2Handle = tensorHandleFactory.<a class="code" href="classarmnn_1_1_i_tensor_handle_factory.xhtml#a375f11dd42ff042435e8771cf287b20c">CreateTensorHandle</a>(biasDesc);</div><div class="line"><a name="l00275"></a><span class="lineno">  275</span>&#160;        AddInputToWorkload(data, info, biasDesc, input2Handle.get());</div><div class="line"><a name="l00276"></a><span class="lineno">  276</span>&#160;    }</div><div class="line"><a name="l00277"></a><span class="lineno">  277</span>&#160;</div><div class="line"><a name="l00278"></a><span class="lineno">  278</span>&#160;    std::unique_ptr&lt;armnn::IWorkload&gt; workload = workloadFactory.<a class="code" href="classarmnn_1_1_i_workload_factory.xhtml#a13060ebb89d2c21a7a5d897e99cccf72">CreateWorkload</a>(<a class="code" href="namespacearmnn.xhtml#a56943a0946e5f15e5e58054b8e7a04a4a583550d0f265fd3756f7de0e42c51953">armnn::LayerType::Convolution3d</a>,</div><div class="line"><a name="l00279"></a><span class="lineno">  279</span>&#160;                                                                                data,</div><div class="line"><a name="l00280"></a><span class="lineno">  280</span>&#160;                                                                                info);</div><div class="line"><a name="l00281"></a><span class="lineno">  281</span>&#160;    input0Handle-&gt;Allocate();</div><div class="line"><a name="l00282"></a><span class="lineno">  282</span>&#160;    input1Handle-&gt;Allocate();</div><div class="line"><a name="l00283"></a><span class="lineno">  283</span>&#160;    outputHandle-&gt;Allocate();</div><div class="line"><a name="l00284"></a><span class="lineno">  284</span>&#160;</div><div class="line"><a name="l00285"></a><span class="lineno">  285</span>&#160;    <a class="code" href="include_2armnn_test_utils_2_tensor_copy_utils_8hpp.xhtml#ae15f1a3c55d2db87683577de9fa4437c">CopyDataToITensorHandle</a>(input0Handle.get(), inputData.data());</div><div class="line"><a name="l00286"></a><span class="lineno">  286</span>&#160;    <a class="code" href="include_2armnn_test_utils_2_tensor_copy_utils_8hpp.xhtml#ae15f1a3c55d2db87683577de9fa4437c">CopyDataToITensorHandle</a>(input1Handle.get(), kernel.data());</div><div class="line"><a name="l00287"></a><span class="lineno">  287</span>&#160;    <span class="keywordflow">if</span> (biasEnabled)</div><div class="line"><a name="l00288"></a><span class="lineno">  288</span>&#160;    {</div><div class="line"><a name="l00289"></a><span class="lineno">  289</span>&#160;        input2Handle-&gt;Allocate();</div><div class="line"><a name="l00290"></a><span class="lineno">  290</span>&#160;        <a class="code" href="include_2armnn_test_utils_2_tensor_copy_utils_8hpp.xhtml#ae15f1a3c55d2db87683577de9fa4437c">CopyDataToITensorHandle</a>(input2Handle.get(), bias.data());</div><div class="line"><a name="l00291"></a><span class="lineno">  291</span>&#160;    }</div><div class="line"><a name="l00292"></a><span class="lineno">  292</span>&#160;</div><div class="line"><a name="l00293"></a><span class="lineno">  293</span>&#160;    ExecuteWorkload(*workload, memoryManager);</div><div class="line"><a name="l00294"></a><span class="lineno">  294</span>&#160;</div><div class="line"><a name="l00295"></a><span class="lineno">  295</span>&#160;    <a class="code" href="include_2armnn_test_utils_2_tensor_copy_utils_8hpp.xhtml#ab5dfed8358e500ed523d78090ec78e88">CopyDataFromITensorHandle</a>(actualOutput.data(), outputHandle.get());</div><div class="line"><a name="l00296"></a><span class="lineno">  296</span>&#160;</div><div class="line"><a name="l00297"></a><span class="lineno">  297</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="struct_layer_test_result.xhtml">LayerTestResult&lt;T, 5&gt;</a>(actualOutput,</div><div class="line"><a name="l00298"></a><span class="lineno">  298</span>&#160;                                 outputData,</div><div class="line"><a name="l00299"></a><span class="lineno">  299</span>&#160;                                 outputHandle-&gt;GetShape(),</div><div class="line"><a name="l00300"></a><span class="lineno">  300</span>&#160;                                 outputTensorInfo.GetShape());</div><div class="line"><a name="l00301"></a><span class="lineno">  301</span>&#160;}</div><div class="ttc" id="namespacearmnn_xhtml_a56943a0946e5f15e5e58054b8e7a04a4a583550d0f265fd3756f7de0e42c51953"><div class="ttname"><a href="namespacearmnn.xhtml#a56943a0946e5f15e5e58054b8e7a04a4a583550d0f265fd3756f7de0e42c51953">armnn::LayerType::Convolution3d</a></div></div>
<div class="ttc" id="structarmnn_1_1_convolution3d_descriptor_xhtml_a11d5c25face9b54e90f79ee8bdc1d0fb"><div class="ttname"><a href="structarmnn_1_1_convolution3d_descriptor.xhtml#a11d5c25face9b54e90f79ee8bdc1d0fb">armnn::Convolution3dDescriptor::m_PadBack</a></div><div class="ttdeci">uint32_t m_PadBack</div><div class="ttdoc">Padding back value in the depth dimension. </div><div class="ttdef"><b>Definition:</b> <a href="_descriptors_8hpp_source.xhtml#l00604">Descriptors.hpp:604</a></div></div>
<div class="ttc" id="include_2armnn_test_utils_2_data_layout_utils_8hpp_xhtml_a024bab832cdcb51248891b1bc3aaf678"><div class="ttname"><a href="include_2armnn_test_utils_2_data_layout_utils_8hpp.xhtml#a024bab832cdcb51248891b1bc3aaf678">PermuteTensorNdhwcToNcdhw</a></div><div class="ttdeci">void PermuteTensorNdhwcToNcdhw(armnn::TensorInfo &amp;tensorInfo, std::vector&lt; T &gt; &amp;tensorData)</div><div class="ttdef"><b>Definition:</b> <a href="include_2armnn_test_utils_2_data_layout_utils_8hpp_source.xhtml#l00039">DataLayoutUtils.hpp:39</a></div></div>
<div class="ttc" id="classarmnn_1_1_tensor_info_xhtml"><div class="ttname"><a href="classarmnn_1_1_tensor_info.xhtml">armnn::TensorInfo</a></div><div class="ttdef"><b>Definition:</b> <a href="_tensor_8hpp_source.xhtml#l00152">Tensor.hpp:152</a></div></div>
<div class="ttc" id="structarmnn_1_1_convolution3d_descriptor_xhtml_afe6a3377c4531315354def9023c8fdda"><div class="ttname"><a href="structarmnn_1_1_convolution3d_descriptor.xhtml#afe6a3377c4531315354def9023c8fdda">armnn::Convolution3dDescriptor::m_StrideX</a></div><div class="ttdeci">uint32_t m_StrideX</div><div class="ttdoc">Stride value when proceeding through input for the width dimension. </div><div class="ttdef"><b>Definition:</b> <a href="_descriptors_8hpp_source.xhtml#l00606">Descriptors.hpp:606</a></div></div>
<div class="ttc" id="structarmnn_1_1_convolution3d_queue_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_convolution3d_queue_descriptor.xhtml">armnn::Convolution3dQueueDescriptor</a></div><div class="ttdef"><b>Definition:</b> <a href="include_2armnn_2backends_2_workload_data_8hpp_source.xhtml#l00229">WorkloadData.hpp:229</a></div></div>
<div class="ttc" id="structarmnn_1_1_convolution3d_descriptor_xhtml_aa9e49717ebdb741e8c767741647fc618"><div class="ttname"><a href="structarmnn_1_1_convolution3d_descriptor.xhtml#aa9e49717ebdb741e8c767741647fc618">armnn::Convolution3dDescriptor::m_PadBottom</a></div><div class="ttdeci">uint32_t m_PadBottom</div><div class="ttdoc">Padding bottom value in the height dimension. </div><div class="ttdef"><b>Definition:</b> <a href="_descriptors_8hpp_source.xhtml#l00600">Descriptors.hpp:600</a></div></div>
<div class="ttc" id="structarmnn_1_1_convolution3d_descriptor_xhtml_aea202e14d8874cefd9a0f778022b7e25"><div class="ttname"><a href="structarmnn_1_1_convolution3d_descriptor.xhtml#aea202e14d8874cefd9a0f778022b7e25">armnn::Convolution3dDescriptor::m_BiasEnabled</a></div><div class="ttdeci">bool m_BiasEnabled</div><div class="ttdoc">Enable/disable bias. </div><div class="ttdef"><b>Definition:</b> <a href="_descriptors_8hpp_source.xhtml#l00618">Descriptors.hpp:618</a></div></div>
<div class="ttc" id="structarmnn_1_1_queue_descriptor_with_parameters_xhtml_aad91b9bbf7aa365d304febe79a3d1333"><div class="ttname"><a href="structarmnn_1_1_queue_descriptor_with_parameters.xhtml#aad91b9bbf7aa365d304febe79a3d1333">armnn::QueueDescriptorWithParameters::m_Parameters</a></div><div class="ttdeci">LayerDescriptor m_Parameters</div><div class="ttdef"><b>Definition:</b> <a href="include_2armnn_2backends_2_workload_data_8hpp_source.xhtml#l00066">WorkloadData.hpp:66</a></div></div>
<div class="ttc" id="structarmnn_1_1_convolution3d_descriptor_xhtml_aa3c6a77a963a98ccb8ea7b8fd008a8c1"><div class="ttname"><a href="structarmnn_1_1_convolution3d_descriptor.xhtml#aa3c6a77a963a98ccb8ea7b8fd008a8c1">armnn::Convolution3dDescriptor::m_DilationX</a></div><div class="ttdeci">uint32_t m_DilationX</div><div class="ttdoc">Dilation along x axis. </div><div class="ttdef"><b>Definition:</b> <a href="_descriptors_8hpp_source.xhtml#l00612">Descriptors.hpp:612</a></div></div>
<div class="ttc" id="structarmnn_1_1_convolution3d_descriptor_xhtml_ac1fe174bbadfb39a2b636940c2e647c8"><div class="ttname"><a href="structarmnn_1_1_convolution3d_descriptor.xhtml#ac1fe174bbadfb39a2b636940c2e647c8">armnn::Convolution3dDescriptor::m_StrideY</a></div><div class="ttdeci">uint32_t m_StrideY</div><div class="ttdoc">Stride value when proceeding through input for the height dimension. </div><div class="ttdef"><b>Definition:</b> <a href="_descriptors_8hpp_source.xhtml#l00608">Descriptors.hpp:608</a></div></div>
<div class="ttc" id="namespacearmnn_xhtml_ad1d5cce2d9e9a5d61c243e5c989112e0a884e0167ebf9bbe6cfd6ca5ab97ab015"><div class="ttname"><a href="namespacearmnn.xhtml#ad1d5cce2d9e9a5d61c243e5c989112e0a884e0167ebf9bbe6cfd6ca5ab97ab015">armnn::DataLayout::NCDHW</a></div></div>
<div class="ttc" id="include_2armnn_test_utils_2_tensor_copy_utils_8hpp_xhtml_ab5dfed8358e500ed523d78090ec78e88"><div class="ttname"><a href="include_2armnn_test_utils_2_tensor_copy_utils_8hpp.xhtml#ab5dfed8358e500ed523d78090ec78e88">CopyDataFromITensorHandle</a></div><div class="ttdeci">void CopyDataFromITensorHandle(void *mem, const armnn::ITensorHandle *tensorHandle)</div><div class="ttdef"><b>Definition:</b> <a href="_tensor_copy_utils_8cpp_source.xhtml#l00014">TensorCopyUtils.cpp:14</a></div></div>
<div class="ttc" id="_conv3d_test_impl_8cpp_xhtml_a41dde9c18d90c8dea2980e477d22a7fe"><div class="ttname"><a href="_conv3d_test_impl_8cpp.xhtml#a41dde9c18d90c8dea2980e477d22a7fe">ApplyBiasToData</a></div><div class="ttdeci">void ApplyBiasToData(std::vector&lt; T &gt; &amp;v, const std::vector&lt; B &gt; &amp;bias, float vScale, int32_t vOffset, float bScale, int32_t bOffset)</div><div class="ttdef"><b>Definition:</b> <a href="_conv3d_test_impl_8cpp_source.xhtml#l00056">Conv3dTestImpl.cpp:56</a></div></div>
<div class="ttc" id="_assert_8hpp_xhtml_a5698be69cbd5dfe6c28fcd9867e8cbed"><div class="ttname"><a href="_assert_8hpp.xhtml#a5698be69cbd5dfe6c28fcd9867e8cbed">ARMNN_ASSERT</a></div><div class="ttdeci">#define ARMNN_ASSERT(COND)</div><div class="ttdef"><b>Definition:</b> <a href="_assert_8hpp_source.xhtml#l00014">Assert.hpp:14</a></div></div>
<div class="ttc" id="structarmnn_1_1_convolution3d_descriptor_xhtml_a83ca447892f460dabaa2f87d3dc3db61"><div class="ttname"><a href="structarmnn_1_1_convolution3d_descriptor.xhtml#a83ca447892f460dabaa2f87d3dc3db61">armnn::Convolution3dDescriptor::m_PadFront</a></div><div class="ttdeci">uint32_t m_PadFront</div><div class="ttdoc">Padding front value in the depth dimension. </div><div class="ttdef"><b>Definition:</b> <a href="_descriptors_8hpp_source.xhtml#l00602">Descriptors.hpp:602</a></div></div>
<div class="ttc" id="structarmnn_1_1_convolution3d_descriptor_xhtml_ac18546ebbebbb32fe0a03baa9bf2c600"><div class="ttname"><a href="structarmnn_1_1_convolution3d_descriptor.xhtml#ac18546ebbebbb32fe0a03baa9bf2c600">armnn::Convolution3dDescriptor::m_PadLeft</a></div><div class="ttdeci">uint32_t m_PadLeft</div><div class="ttdoc">Padding left value in the width dimension. </div><div class="ttdef"><b>Definition:</b> <a href="_descriptors_8hpp_source.xhtml#l00594">Descriptors.hpp:594</a></div></div>
<div class="ttc" id="structarmnn_1_1_convolution3d_descriptor_xhtml_a002bc30e590d78cbb4f4d12171055ca7"><div class="ttname"><a href="structarmnn_1_1_convolution3d_descriptor.xhtml#a002bc30e590d78cbb4f4d12171055ca7">armnn::Convolution3dDescriptor::m_PadRight</a></div><div class="ttdeci">uint32_t m_PadRight</div><div class="ttdoc">Padding right value in the width dimension. </div><div class="ttdef"><b>Definition:</b> <a href="_descriptors_8hpp_source.xhtml#l00596">Descriptors.hpp:596</a></div></div>
<div class="ttc" id="structarmnn_1_1_convolution3d_descriptor_xhtml_a6089e1ca91914015777ea780a513131a"><div class="ttname"><a href="structarmnn_1_1_convolution3d_descriptor.xhtml#a6089e1ca91914015777ea780a513131a">armnn::Convolution3dDescriptor::m_DataLayout</a></div><div class="ttdeci">DataLayout m_DataLayout</div><div class="ttdoc">The data layout to be used (NDHWC, NCDHW). </div><div class="ttdef"><b>Definition:</b> <a href="_descriptors_8hpp_source.xhtml#l00620">Descriptors.hpp:620</a></div></div>
<div class="ttc" id="namespacearmnn_xhtml_a4dc0adc6737b5944e7671bee71788407acaf9b6b99962bf5c2264824231d7a40c"><div class="ttname"><a href="namespacearmnn.xhtml#a4dc0adc6737b5944e7671bee71788407acaf9b6b99962bf5c2264824231d7a40c">armnn::BoostLogSeverityMapping::info</a></div></div>
<div class="ttc" id="include_2armnn_test_utils_2_tensor_copy_utils_8hpp_xhtml_ae15f1a3c55d2db87683577de9fa4437c"><div class="ttname"><a href="include_2armnn_test_utils_2_tensor_copy_utils_8hpp.xhtml#ae15f1a3c55d2db87683577de9fa4437c">CopyDataToITensorHandle</a></div><div class="ttdeci">void CopyDataToITensorHandle(armnn::ITensorHandle *tensorHandle, const void *memory)</div><div class="ttdef"><b>Definition:</b> <a href="_tensor_copy_utils_8cpp_source.xhtml#l00009">TensorCopyUtils.cpp:9</a></div></div>
<div class="ttc" id="structarmnn_1_1_convolution3d_descriptor_xhtml_a56b51f56cef50cdfa554258eecdab046"><div class="ttname"><a href="structarmnn_1_1_convolution3d_descriptor.xhtml#a56b51f56cef50cdfa554258eecdab046">armnn::Convolution3dDescriptor::m_PadTop</a></div><div class="ttdeci">uint32_t m_PadTop</div><div class="ttdoc">Padding top value in the height dimension. </div><div class="ttdef"><b>Definition:</b> <a href="_descriptors_8hpp_source.xhtml#l00598">Descriptors.hpp:598</a></div></div>
<div class="ttc" id="namespacearmnn_xhtml_a375ca3cff9f1b005d1412dc5f3cf5b6e"><div class="ttname"><a href="namespacearmnn.xhtml#a375ca3cff9f1b005d1412dc5f3cf5b6e">armnn::numeric_cast</a></div><div class="ttdeci">std::enable_if_t&lt; std::is_unsigned&lt; Source &gt;::value &amp;&amp;std::is_unsigned&lt; Dest &gt;::value, Dest &gt; numeric_cast(Source source)</div><div class="ttdef"><b>Definition:</b> <a href="_numeric_cast_8hpp_source.xhtml#l00035">NumericCast.hpp:35</a></div></div>
<div class="ttc" id="structarmnn_1_1_workload_info_xhtml"><div class="ttname"><a href="structarmnn_1_1_workload_info.xhtml">armnn::WorkloadInfo</a></div><div class="ttdoc">Contains information about TensorInfos of a layer. </div><div class="ttdef"><b>Definition:</b> <a href="include_2armnn_2backends_2_workload_info_8hpp_source.xhtml#l00016">WorkloadInfo.hpp:16</a></div></div>
<div class="ttc" id="struct_layer_test_result_xhtml"><div class="ttname"><a href="struct_layer_test_result.xhtml">LayerTestResult</a></div><div class="ttdef"><b>Definition:</b> <a href="include_2armnn_test_utils_2_layer_test_result_8hpp_source.xhtml#l00015">LayerTestResult.hpp:15</a></div></div>
<div class="ttc" id="classarmnn_1_1_i_workload_factory_xhtml_a13060ebb89d2c21a7a5d897e99cccf72"><div class="ttname"><a href="classarmnn_1_1_i_workload_factory.xhtml#a13060ebb89d2c21a7a5d897e99cccf72">armnn::IWorkloadFactory::CreateWorkload</a></div><div class="ttdeci">virtual std::unique_ptr&lt; IWorkload &gt; CreateWorkload(LayerType type, const QueueDescriptor &amp;descriptor, const WorkloadInfo &amp;info) const</div><div class="ttdef"><b>Definition:</b> <a href="_workload_factory_8cpp_source.xhtml#l01559">WorkloadFactory.cpp:1559</a></div></div>
<div class="ttc" id="structarmnn_1_1_convolution3d_descriptor_xhtml_a16543bce17aa2e4d6e81c88f74227192"><div class="ttname"><a href="structarmnn_1_1_convolution3d_descriptor.xhtml#a16543bce17aa2e4d6e81c88f74227192">armnn::Convolution3dDescriptor::m_DilationZ</a></div><div class="ttdeci">uint32_t m_DilationZ</div><div class="ttdoc">Dilation along z axis. </div><div class="ttdef"><b>Definition:</b> <a href="_descriptors_8hpp_source.xhtml#l00616">Descriptors.hpp:616</a></div></div>
<div class="ttc" id="classarmnn_1_1_i_tensor_handle_factory_xhtml_a375f11dd42ff042435e8771cf287b20c"><div class="ttname"><a href="classarmnn_1_1_i_tensor_handle_factory.xhtml#a375f11dd42ff042435e8771cf287b20c">armnn::ITensorHandleFactory::CreateTensorHandle</a></div><div class="ttdeci">virtual std::unique_ptr&lt; ITensorHandle &gt; CreateTensorHandle(const TensorInfo &amp;tensorInfo) const =0</div></div>
<div class="ttc" id="structarmnn_1_1_convolution3d_descriptor_xhtml_a5164336f6a1b15be0d434a6bbf7289da"><div class="ttname"><a href="structarmnn_1_1_convolution3d_descriptor.xhtml#a5164336f6a1b15be0d434a6bbf7289da">armnn::Convolution3dDescriptor::m_StrideZ</a></div><div class="ttdeci">uint32_t m_StrideZ</div><div class="ttdoc">Stride value when proceeding through input for the depth dimension. </div><div class="ttdef"><b>Definition:</b> <a href="_descriptors_8hpp_source.xhtml#l00610">Descriptors.hpp:610</a></div></div>
<div class="ttc" id="structarmnn_1_1_convolution3d_descriptor_xhtml_a302b688d88dd73cde0fb1faef6679907"><div class="ttname"><a href="structarmnn_1_1_convolution3d_descriptor.xhtml#a302b688d88dd73cde0fb1faef6679907">armnn::Convolution3dDescriptor::m_DilationY</a></div><div class="ttdeci">uint32_t m_DilationY</div><div class="ttdoc">Dilation along y axis. </div><div class="ttdef"><b>Definition:</b> <a href="_descriptors_8hpp_source.xhtml#l00614">Descriptors.hpp:614</a></div></div>
</div><!-- fragment -->
</div>
</div>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="dir_68267d1309a1af8e8297ef4c3efbcdba.xhtml">src</a></li><li class="navelem"><a class="el" href="dir_0f3cdec46afbc61a1ded8e1687c9c9a0.xhtml">backends</a></li><li class="navelem"><a class="el" href="dir_797a213d7d01b98ef12d53b0820ea64e.xhtml">backendsCommon</a></li><li class="navelem"><a class="el" href="dir_28bfe507f7e135bdae07c2a6b7f66696.xhtml">test</a></li><li class="navelem"><a class="el" href="dir_99a30439342d160875b21dac3498ad7f.xhtml">layerTests</a></li><li class="navelem"><a class="el" href="_conv3d_test_impl_8cpp.xhtml">Conv3dTestImpl.cpp</a></li>
    <li class="footer">Generated on Fri Jun 17 2022 13:20:26 for ArmNN by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.13 </li>
  </ul>
</div>
</body>
</html>
