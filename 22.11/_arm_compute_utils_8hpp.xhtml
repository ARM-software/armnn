<!-- Copyright (c) 2020 ARM Limited. -->
<!--                                 -->
<!-- SPDX-License-Identifier: MIT    -->
<!--                                 -->
<!-- HTML header for doxygen 1.8.13-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.13"/>
<meta name="robots" content="NOINDEX, NOFOLLOW" />
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>ArmNN: src/backends/aclCommon/ArmComputeUtils.hpp File Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script><script type="text/javascript" src="http://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="stylesheet.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <img alt="ArmNN" src="Arm_NN_horizontal_blue.png" style="max-width: 10rem; margin-top: .5rem; margin-left 10px"/>
  <td style="padding-left: 0.5em;">
   <div id="projectname">
   &#160;<span id="projectnumber">22.11</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.13 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
$(document).ready(function(){initNavTree('_arm_compute_utils_8hpp.xhtml','');});
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="summary">
<a href="#namespaces">Namespaces</a> &#124;
<a href="#define-members">Macros</a> &#124;
<a href="#func-members">Functions</a>  </div>
  <div class="headertitle">
<div class="title">ArmComputeUtils.hpp File Reference</div>  </div>
</div><!--header-->
<div class="contents">
<div class="textblock"><code>#include &lt;<a class="el" href="_descriptors_8hpp_source.xhtml">armnn/Descriptors.hpp</a>&gt;</code><br />
<code>#include &lt;<a class="el" href="_tensor_8hpp_source.xhtml">armnn/Tensor.hpp</a>&gt;</code><br />
<code>#include &lt;<a class="el" href="_assert_8hpp_source.xhtml">armnn/utility/Assert.hpp</a>&gt;</code><br />
<code>#include &lt;<a class="el" href="_numeric_cast_8hpp_source.xhtml">armnn/utility/NumericCast.hpp</a>&gt;</code><br />
<code>#include &lt;<a class="el" href="_workload_data_8hpp_source.xhtml">armnn/backends/WorkloadData.hpp</a>&gt;</code><br />
<code>#include &lt;arm_compute/core/Types.h&gt;</code><br />
<code>#include &lt;arm_compute/runtime/FunctionDescriptors.h&gt;</code><br />
<code>#include &quot;<a class="el" href="_neon_reduce_workload_8hpp_source.xhtml">neon/workloads/NeonReduceWorkload.hpp</a>&quot;</code><br />
<code>#include &quot;<a class="el" href="_cl_reduce_workload_8hpp_source.xhtml">cl/workloads/ClReduceWorkload.hpp</a>&quot;</code><br />
</div>
<p><a href="_arm_compute_utils_8hpp_source.xhtml">Go to the source code of this file.</a></p>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="namespaces"></a>
Namespaces</h2></td></tr>
<tr class="memitem:namespacearmnn"><td class="memItemLeft" align="right" valign="top"> &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearmnn.xhtml">armnn</a></td></tr>
<tr class="memdesc:namespacearmnn"><td class="mdescLeft">&#160;</td><td class="mdescRight">Copyright (c) 2021 ARM Limited and Contributors. <br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="define-members"></a>
Macros</h2></td></tr>
<tr class="memitem:a97d67174b2c48969547ba4bac79e5ea2"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_arm_compute_utils_8hpp.xhtml#a97d67174b2c48969547ba4bac79e5ea2">IS_MULTI_AXES_REDUCE_SUPPORTED</a>(func,  input,  desc,  status)</td></tr>
<tr class="memdesc:a97d67174b2c48969547ba4bac79e5ea2"><td class="mdescLeft">&#160;</td><td class="mdescRight">Macro function check if layer with multiple axes is supported on each backend.  <a href="#a97d67174b2c48969547ba4bac79e5ea2">More...</a><br /></td></tr>
<tr class="separator:a97d67174b2c48969547ba4bac79e5ea2"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="func-members"></a>
Functions</h2></td></tr>
<tr class="memitem:a5e783a951642781b9e7b55db06a514b7"><td class="memItemLeft" align="right" valign="top">arm_compute::NormalizationLayerInfo&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearmnn.xhtml#a5e783a951642781b9e7b55db06a514b7">CreateAclNormalizationLayerInfoForL2Normalization</a> (const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">armnn::TensorInfo</a> &amp;tensorInfo, <a class="el" href="namespacearmnn.xhtml#ad1d5cce2d9e9a5d61c243e5c989112e0">armnn::DataLayout</a> dataLayout)</td></tr>
<tr class="separator:a5e783a951642781b9e7b55db06a514b7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:afdba36f125621d775d471f0daf613df2"><td class="memItemLeft" align="right" valign="top">arm_compute::ActivationLayerInfo::ActivationFunction&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearmnn.xhtml#afdba36f125621d775d471f0daf613df2">ConvertActivationFunctionToAclActivationFunction</a> (ActivationFunction armnnFunction)</td></tr>
<tr class="separator:afdba36f125621d775d471f0daf613df2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad701d0d29baa4266ab4d33b090aa661c"><td class="memItemLeft" align="right" valign="top">arm_compute::ActivationLayerInfo&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearmnn.xhtml#ad701d0d29baa4266ab4d33b090aa661c">ConvertActivationDescriptorToAclActivationLayerInfo</a> (const ActivationDescriptor &amp;actDesc)</td></tr>
<tr class="separator:ad701d0d29baa4266ab4d33b090aa661c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af6d517245110f6b1ca702da0cbbf4518"><td class="memItemLeft" align="right" valign="top">arm_compute::ActivationLayerInfo&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearmnn.xhtml#af6d517245110f6b1ca702da0cbbf4518">ConvertActivationDescriptorToAclActivationLayerInfo</a> (const ActivationDescriptor *activationDescPtr)</td></tr>
<tr class="separator:af6d517245110f6b1ca702da0cbbf4518"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:abfb0841058a8190d30851f07eca3991f"><td class="memItemLeft" align="right" valign="top">arm_compute::ActivationLayerInfo&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearmnn.xhtml#abfb0841058a8190d30851f07eca3991f">ConvertAdditionalInfoToAclActivationLayerInfo</a> (const QueueDescriptor &amp;queueDescriptor)</td></tr>
<tr class="separator:abfb0841058a8190d30851f07eca3991f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa1e93ef5f9ee3dbb5e7faa9578f180ae"><td class="memItemLeft" align="right" valign="top">arm_compute::ActivationLayerInfo&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearmnn.xhtml#aa1e93ef5f9ee3dbb5e7faa9578f180ae">ConvertLstmActivationFuncToAclLayerInfo</a> (uint32_t activationFunction)</td></tr>
<tr class="separator:aa1e93ef5f9ee3dbb5e7faa9578f180ae"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac1438a97bbc2aee5cd8470d9d2a3aebc"><td class="memItemLeft" align="right" valign="top">arm_compute::ComparisonOperation&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearmnn.xhtml#ac1438a97bbc2aee5cd8470d9d2a3aebc">ConvertComparisonOperationToAcl</a> (const ComparisonDescriptor &amp;descriptor)</td></tr>
<tr class="separator:ac1438a97bbc2aee5cd8470d9d2a3aebc"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad256fcf8c7f4d5a240fa47f0b56d50af"><td class="memItemLeft" align="right" valign="top">arm_compute::PoolingType&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearmnn.xhtml#ad256fcf8c7f4d5a240fa47f0b56d50af">ConvertPoolingAlgorithmToAclPoolingType</a> (PoolingAlgorithm poolingAlgorithm)</td></tr>
<tr class="separator:ad256fcf8c7f4d5a240fa47f0b56d50af"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8f3bfacadfd6d2146d6ccd299dabc7aa"><td class="memItemLeft" align="right" valign="top">arm_compute::DimensionRoundingType&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearmnn.xhtml#a8f3bfacadfd6d2146d6ccd299dabc7aa">ConvertOutputShapeRoundingToAclDimensionRoundingType</a> (OutputShapeRounding rounding)</td></tr>
<tr class="separator:a8f3bfacadfd6d2146d6ccd299dabc7aa"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa5baabb8e3a4aa6cbdcab419d743e747"><td class="memItemLeft" align="right" valign="top">arm_compute::NormType&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearmnn.xhtml#aa5baabb8e3a4aa6cbdcab419d743e747">ConvertNormalizationAlgorithmChannelToAclNormType</a> (NormalizationAlgorithmChannel channelType)</td></tr>
<tr class="separator:aa5baabb8e3a4aa6cbdcab419d743e747"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae2e0c1d8160fadce44d479379790718e"><td class="memItemLeft" align="right" valign="top">arm_compute::FullyConnectedLayerInfo&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearmnn.xhtml#ae2e0c1d8160fadce44d479379790718e">ConvertFullyConnectedDescriptorToAclFullyConnectedLayerInfo</a> (const FullyConnectedDescriptor &amp;fullyConnectedDesc, const ActivationDescriptor *activationDesc)</td></tr>
<tr class="separator:ae2e0c1d8160fadce44d479379790718e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2f12c1f572fb15978e51cf646d42d4dc"><td class="memItemLeft" align="right" valign="top">arm_compute::FullyConnectedLayerInfo&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearmnn.xhtml#a2f12c1f572fb15978e51cf646d42d4dc">ConvertFullyConnectedDescriptorToAclFullyConnectedLayerInfo</a> (const FullyConnectedDescriptor &amp;fullyConnectedDesc, arm_compute::ActivationLayerInfo activationLayerInfo)</td></tr>
<tr class="separator:a2f12c1f572fb15978e51cf646d42d4dc"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae9bdcb8ac91731109dc423d6ed476204"><td class="memItemLeft" align="right" valign="top">arm_compute::InterpolationPolicy&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearmnn.xhtml#ae9bdcb8ac91731109dc423d6ed476204">ConvertResizeMethodToAclInterpolationPolicy</a> (ResizeMethod resizeMethod)</td></tr>
<tr class="separator:ae9bdcb8ac91731109dc423d6ed476204"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae33fcc729c3eeda77a443a11f13da7ba"><td class="memTemplParams" colspan="2">template&lt;typename T &gt; </td></tr>
<tr class="memitem:ae33fcc729c3eeda77a443a11f13da7ba"><td class="memTemplItemLeft" align="right" valign="top">T&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="namespacearmnn.xhtml#ae33fcc729c3eeda77a443a11f13da7ba">ComputeSoftmaxAclAxis</a> (const SoftmaxDescriptor &amp;softmaxDesc, const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">armnn::TensorInfo</a> &amp;tensor)</td></tr>
<tr class="separator:ae33fcc729c3eeda77a443a11f13da7ba"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8cbabc875597b3bed0ccdc0adb289fde"><td class="memItemLeft" align="right" valign="top">std::set&lt; unsigned int &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearmnn.xhtml#a8cbabc875597b3bed0ccdc0adb289fde">ComputeSplitAxis</a> (const <a class="el" href="namespacearmnn.xhtml#a60291543fe872b795e71e05bcd835fd1">armnn::SplitterDescriptor</a> &amp;desc, const TensorShape &amp;input)</td></tr>
<tr class="separator:a8cbabc875597b3bed0ccdc0adb289fde"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a44a3b98b37a25c995aa9e4dae7d7b456"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearmnn.xhtml#a44a3b98b37a25c995aa9e4dae7d7b456">ComputeAclAxis</a> (const int &amp;armnnAxis, const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">armnn::TensorInfo</a> &amp;tensor)</td></tr>
<tr class="memdesc:a44a3b98b37a25c995aa9e4dae7d7b456"><td class="mdescLeft">&#160;</td><td class="mdescRight">Function to convert ArmNN axis (left to right) to ACL axis (right to left) ranging from [-rank, rank)  <a href="namespacearmnn.xhtml#a44a3b98b37a25c995aa9e4dae7d7b456">More...</a><br /></td></tr>
<tr class="separator:a44a3b98b37a25c995aa9e4dae7d7b456"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa1e65a4dea8c65b76423e121b880d059"><td class="memItemLeft" align="right" valign="top">unsigned int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearmnn.xhtml#aa1e65a4dea8c65b76423e121b880d059">ComputePositiveAxis</a> (const int &amp;axis, const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">armnn::TensorInfo</a> &amp;tensor)</td></tr>
<tr class="memdesc:aa1e65a4dea8c65b76423e121b880d059"><td class="mdescLeft">&#160;</td><td class="mdescRight">Function to convert axis to its positive equivalent value.  <a href="namespacearmnn.xhtml#aa1e65a4dea8c65b76423e121b880d059">More...</a><br /></td></tr>
<tr class="separator:aa1e65a4dea8c65b76423e121b880d059"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a855760e957668804d33c0691a802496e"><td class="memItemLeft" align="right" valign="top">arm_compute::Conv3dInfo&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearmnn.xhtml#a855760e957668804d33c0691a802496e">ComputeConv3DInfo</a> (const <a class="el" href="structarmnn_1_1_convolution3d_descriptor.xhtml">armnn::Convolution3dDescriptor</a> descriptor, bool isFastMathEnabled, const ActivationDescriptor *activationDescriptor)</td></tr>
<tr class="memdesc:a855760e957668804d33c0691a802496e"><td class="mdescLeft">&#160;</td><td class="mdescRight">Utility function used to setup an arm_compute::Conv3dInfo object from convolution3d descriptor.  <a href="namespacearmnn.xhtml#a855760e957668804d33c0691a802496e">More...</a><br /></td></tr>
<tr class="separator:a855760e957668804d33c0691a802496e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3f2c9ea2505a2cac1d05e17e989aff2b"><td class="memItemLeft" align="right" valign="top">arm_compute::Conv3dInfo&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearmnn.xhtml#a3f2c9ea2505a2cac1d05e17e989aff2b">ComputeConv3DInfo</a> (const <a class="el" href="structarmnn_1_1_convolution3d_queue_descriptor.xhtml">armnn::Convolution3dQueueDescriptor</a> queueDescriptor, bool isFastMathEnabled)</td></tr>
<tr class="separator:a3f2c9ea2505a2cac1d05e17e989aff2b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:adf5a024ace0dbe2af2d5b1a1b9623771"><td class="memItemLeft" align="right" valign="top">arm_compute::PaddingMode&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearmnn.xhtml#adf5a024ace0dbe2af2d5b1a1b9623771">ConvertPaddingModeToAcl</a> (const PaddingMode &amp;paddingMode)</td></tr>
<tr class="separator:adf5a024ace0dbe2af2d5b1a1b9623771"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a03ab984d93d0f240f31274499b72e6b0"><td class="memItemLeft" align="right" valign="top">arm_compute::ReductionOperation&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearmnn.xhtml#a03ab984d93d0f240f31274499b72e6b0">ConvertReductionOperationToAcl</a> (const ReduceDescriptor &amp;descriptor)</td></tr>
<tr class="separator:a03ab984d93d0f240f31274499b72e6b0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9d43aa01b882d8776ab9403eea3cf779"><td class="memItemLeft" align="right" valign="top">const TensorInfo&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearmnn.xhtml#a9d43aa01b882d8776ab9403eea3cf779">ComputeReductionTensorShape</a> (const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">armnn::TensorInfo</a> &amp;input, const std::vector&lt; uint32_t &gt; &amp;vAxis, const bool keepDims)</td></tr>
<tr class="memdesc:a9d43aa01b882d8776ab9403eea3cf779"><td class="mdescLeft">&#160;</td><td class="mdescRight">Function to compute the output tensor shape based on the axes and if keepDims is set.  <a href="namespacearmnn.xhtml#a9d43aa01b882d8776ab9403eea3cf779">More...</a><br /></td></tr>
<tr class="separator:a9d43aa01b882d8776ab9403eea3cf779"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<h2 class="groupheader">Macro Definition Documentation</h2>
<a id="a97d67174b2c48969547ba4bac79e5ea2"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a97d67174b2c48969547ba4bac79e5ea2">&#9670;&nbsp;</a></span>IS_MULTI_AXES_REDUCE_SUPPORTED</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define IS_MULTI_AXES_REDUCE_SUPPORTED</td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">func, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">input, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">desc, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">status&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<b>Value:</b><div class="fragment"><div class="line"><a class="code" href="classarmnn_1_1_tensor_info.xhtml">armnn::TensorInfo</a> inputTensorInfo = input;                                    \</div><div class="line">    unsigned <span class="keywordtype">int</span> recalulatedAxis = 0;                                             \</div><div class="line">    std::vector&lt;uint32_t&gt; axes;                                                   \</div><div class="line">                                                                                  \</div><div class="line">    for (<span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> i = 0; i != desc.m_vAxis.size(); ++i)                       \</div><div class="line">    {                                                                             \</div><div class="line">        axes.emplace_back(desc.m_vAxis[i]);                                       \</div><div class="line">                                                                                  \</div><div class="line">        const <a class="code" href="classarmnn_1_1_tensor_info.xhtml">armnn::TensorInfo</a>&amp; reducedTensorInfo =                              \</div><div class="line">            ComputeReductionTensorShape(input, axes, desc.m_KeepDims);            \</div><div class="line">                                                                                  \</div><div class="line">        std::vector&lt;uint32_t&gt; singleAxis(1, desc.m_vAxis[i] - recalulatedAxis);   \</div><div class="line">                                                                                  \</div><div class="line">        armnn::ReduceDescriptor newReduceDescriptor = desc;                       \</div><div class="line">        newReduceDescriptor.m_vAxis.assign(singleAxis.begin(), singleAxis.end()); \</div><div class="line">                                                                                  \</div><div class="line">        status = func(inputTensorInfo, reducedTensorInfo, newReduceDescriptor);   \</div><div class="line">        if (!status)                                                              \</div><div class="line">        {                                                                         \</div><div class="line">            break;                                                                \</div><div class="line">        }                                                                         \</div><div class="line">                                                                                  \</div><div class="line">        if (!desc.m_KeepDims)                                                     \</div><div class="line">        {                                                                         \</div><div class="line">            recalulatedAxis++;                                                    \</div><div class="line">        }                                                                         \</div><div class="line">                                                                                  \</div><div class="line">        inputTensorInfo = reducedTensorInfo;                                      \</div><div class="line">    }</div><div class="ttc" id="classarmnn_1_1_tensor_info_xhtml"><div class="ttname"><a href="classarmnn_1_1_tensor_info.xhtml">armnn::TensorInfo</a></div><div class="ttdef"><b>Definition:</b> <a href="_tensor_8hpp_source.xhtml#l00152">Tensor.hpp:152</a></div></div>
</div><!-- fragment -->
<p>Macro function check if layer with multiple axes is supported on each backend. </p>

<p class="definition">Definition at line <a class="el" href="_arm_compute_utils_8hpp_source.xhtml#l00405">405</a> of file <a class="el" href="_arm_compute_utils_8hpp_source.xhtml">ArmComputeUtils.hpp</a>.</p>

</div>
</div>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="dir_68267d1309a1af8e8297ef4c3efbcdba.xhtml">src</a></li><li class="navelem"><a class="el" href="dir_0f3cdec46afbc61a1ded8e1687c9c9a0.xhtml">backends</a></li><li class="navelem"><a class="el" href="dir_c13beb47b846b3a63741c705c772cf8d.xhtml">aclCommon</a></li><li class="navelem"><a class="el" href="_arm_compute_utils_8hpp.xhtml">ArmComputeUtils.hpp</a></li>
    <li class="footer">Generated on Wed Nov 23 2022 10:57:38 for ArmNN by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.13 </li>
  </ul>
</div>
</body>
</html>
