<!-- Copyright (c) 2020 ARM Limited. -->
<!--                                 -->
<!-- SPDX-License-Identifier: MIT    -->
<!--                                 -->
<!-- HTML header for doxygen 1.8.13-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.13"/>
<meta name="robots" content="NOINDEX, NOFOLLOW" />
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>ArmNN: include/armnn/Exceptions.hpp Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script><script type="text/javascript" src="http://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="stylesheet.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <img alt="ArmNN" src="Arm_NN_horizontal_blue.png" style="max-width: 10rem; margin-top: .5rem; margin-left 10px"/>
  <td style="padding-left: 0.5em;">
   <div id="projectname">
   &#160;<span id="projectnumber">22.02</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.13 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
$(document).ready(function(){initNavTree('_exceptions_8hpp_source.xhtml','');});
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="headertitle">
<div class="title">Exceptions.hpp</div>  </div>
</div><!--header-->
<div class="contents">
<a href="_exceptions_8hpp.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="comment">//</span></div><div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="comment">// Copyright Â© 2017 Arm Ltd. All rights reserved.</span></div><div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="comment">// SPDX-License-Identifier: MIT</span></div><div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="comment">//</span></div><div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="preprocessor">#pragma once</span></div><div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;</div><div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="preprocessor">#include &lt;sstream&gt;</span></div><div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="preprocessor">#include &lt;stdexcept&gt;</span></div><div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="preprocessor">#include &lt;string&gt;</span></div><div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;</div><div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;<span class="keyword">namespace </span><a class="code" href="namespacearmnn.xhtml">armnn</a></div><div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;{</div><div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;</div><div class="line"><a name="l00014"></a><span class="lineno"><a class="line" href="structarmnn_1_1_check_location.xhtml">   14</a></span>&#160;<span class="keyword">struct </span><a class="code" href="structarmnn_1_1_check_location.xhtml">CheckLocation</a></div><div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;{</div><div class="line"><a name="l00016"></a><span class="lineno"><a class="line" href="structarmnn_1_1_check_location.xhtml#a46e3b4b140e2c550342337b5fcceb9c6">   16</a></span>&#160;    <span class="keyword">const</span> <span class="keywordtype">char</span>* <a class="code" href="structarmnn_1_1_check_location.xhtml#a46e3b4b140e2c550342337b5fcceb9c6">m_Function</a>;</div><div class="line"><a name="l00017"></a><span class="lineno"><a class="line" href="structarmnn_1_1_check_location.xhtml#a97b4339c57e59efc136e6304bd23b3c8">   17</a></span>&#160;    <span class="keyword">const</span> <span class="keywordtype">char</span>* <a class="code" href="structarmnn_1_1_check_location.xhtml#a97b4339c57e59efc136e6304bd23b3c8">m_File</a>;</div><div class="line"><a name="l00018"></a><span class="lineno"><a class="line" href="structarmnn_1_1_check_location.xhtml#acd649cad8a9b65a4a2730de8b13a1ff5">   18</a></span>&#160;    <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> <a class="code" href="structarmnn_1_1_check_location.xhtml#acd649cad8a9b65a4a2730de8b13a1ff5">m_Line</a>;</div><div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;</div><div class="line"><a name="l00020"></a><span class="lineno"><a class="line" href="structarmnn_1_1_check_location.xhtml#a684d9d10a6bd3fe0d4e821363bab4de9">   20</a></span>&#160;    <a class="code" href="structarmnn_1_1_check_location.xhtml#a684d9d10a6bd3fe0d4e821363bab4de9">CheckLocation</a>(<span class="keyword">const</span> <span class="keywordtype">char</span>* func,</div><div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;                  <span class="keyword">const</span> <span class="keywordtype">char</span>* file,</div><div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;                  <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> line)</div><div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;    : m_Function{func}</div><div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;    , m_File{file}</div><div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;    , m_Line{line}</div><div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;    {</div><div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;    }</div><div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;</div><div class="line"><a name="l00029"></a><span class="lineno"><a class="line" href="structarmnn_1_1_check_location.xhtml#a5e3562cda960da001597e7dd5679b140">   29</a></span>&#160;    std::string <a class="code" href="structarmnn_1_1_check_location.xhtml#a5e3562cda960da001597e7dd5679b140">AsString</a>()<span class="keyword"> const</span></div><div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;<span class="keyword">    </span>{</div><div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;        std::stringstream ss;</div><div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;        ss &lt;&lt; <span class="stringliteral">&quot; at function &quot;</span> &lt;&lt; m_Function</div><div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;           &lt;&lt; <span class="stringliteral">&quot; [&quot;</span> &lt;&lt; m_File &lt;&lt; <span class="charliteral">&#39;:&#39;</span> &lt;&lt; m_Line &lt;&lt; <span class="stringliteral">&quot;]&quot;</span>;</div><div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;        <span class="keywordflow">return</span> ss.str();</div><div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;    }</div><div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;</div><div class="line"><a name="l00037"></a><span class="lineno"><a class="line" href="structarmnn_1_1_check_location.xhtml#ac1184445a1323e07e0da084a54aec535">   37</a></span>&#160;    std::string <a class="code" href="structarmnn_1_1_check_location.xhtml#ac1184445a1323e07e0da084a54aec535">FileLine</a>()<span class="keyword"> const</span></div><div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;<span class="keyword">    </span>{</div><div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;        std::stringstream ss;</div><div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;        ss &lt;&lt; <span class="stringliteral">&quot; [&quot;</span> &lt;&lt; m_File &lt;&lt; <span class="charliteral">&#39;:&#39;</span> &lt;&lt; m_Line &lt;&lt; <span class="stringliteral">&quot;]&quot;</span>;</div><div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;        <span class="keywordflow">return</span> ss.str();</div><div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;    }</div><div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;};</div><div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;<span class="comment">/// Base class for all ArmNN exceptions so that users can filter to just those.</span></div><div class="line"><a name="l00046"></a><span class="lineno"><a class="line" href="classarmnn_1_1_exception.xhtml">   46</a></span>&#160;<span class="comment"></span><span class="keyword">class </span><a class="code" href="classarmnn_1_1_exception.xhtml">Exception</a> : <span class="keyword">public</span> std::exception</div><div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;{</div><div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;<span class="keyword">public</span>:</div><div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;    <span class="keyword">explicit</span> <a class="code" href="classarmnn_1_1_exception.xhtml">Exception</a>(<span class="keyword">const</span> std::string&amp; message);</div><div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;<span class="comment">    /// exception with context</span></div><div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;<span class="comment"></span>    <span class="keyword">explicit</span> <a class="code" href="classarmnn_1_1_exception.xhtml">Exception</a>(<span class="keyword">const</span> std::string&amp; message,</div><div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;                       <span class="keyword">const</span> <a class="code" href="structarmnn_1_1_check_location.xhtml">CheckLocation</a>&amp; location);</div><div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;<span class="comment">    /// preserving previous exception context</span></div><div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;<span class="comment">    /// and adding local context information</span></div><div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;<span class="comment"></span>    <span class="keyword">explicit</span> <a class="code" href="classarmnn_1_1_exception.xhtml">Exception</a>(<span class="keyword">const</span> <a class="code" href="classarmnn_1_1_exception.xhtml">Exception</a>&amp; other,</div><div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;                       <span class="keyword">const</span> std::string&amp; message,</div><div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;                       <span class="keyword">const</span> <a class="code" href="structarmnn_1_1_check_location.xhtml">CheckLocation</a>&amp; location);</div><div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;</div><div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;    <span class="keyword">virtual</span> <span class="keyword">const</span> <span class="keywordtype">char</span>* what() <span class="keyword">const</span> noexcept <span class="keyword">override</span>;</div><div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;</div><div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;<span class="keyword">private</span>:</div><div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;    std::string m_Message;</div><div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;};</div><div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;<span class="comment">/// Class for non-fatal exceptions raised while initialising a backend</span></div><div class="line"><a name="l00068"></a><span class="lineno"><a class="line" href="classarmnn_1_1_backend_unavailable_exception.xhtml">   68</a></span>&#160;<span class="comment"></span><span class="keyword">class </span><a class="code" href="classarmnn_1_1_backend_unavailable_exception.xhtml">BackendUnavailableException</a> : <span class="keyword">public</span> <a class="code" href="classarmnn_1_1_exception.xhtml">Exception</a></div><div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;{</div><div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;<span class="keyword">public</span>:</div><div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;    <span class="keyword">using</span> <a class="code" href="classarmnn_1_1_exception.xhtml#ad56b7b14f59554e891ad88b26cbf8ac3">Exception::Exception</a>;</div><div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;};</div><div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;</div><div class="line"><a name="l00074"></a><span class="lineno"><a class="line" href="classarmnn_1_1_cl_runtime_unavailable_exception.xhtml">   74</a></span>&#160;<span class="keyword">class </span><a class="code" href="classarmnn_1_1_cl_runtime_unavailable_exception.xhtml">ClRuntimeUnavailableException</a> : <span class="keyword">public</span> <a class="code" href="classarmnn_1_1_backend_unavailable_exception.xhtml">BackendUnavailableException</a></div><div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;{</div><div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;<span class="keyword">public</span>:</div><div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;    <span class="keyword">using</span> BackendUnavailableException::BackendUnavailableException;</div><div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;};</div><div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;</div><div class="line"><a name="l00080"></a><span class="lineno"><a class="line" href="classarmnn_1_1_invalid_argument_exception.xhtml">   80</a></span>&#160;<span class="keyword">class </span><a class="code" href="classarmnn_1_1_invalid_argument_exception.xhtml">InvalidArgumentException</a> : <span class="keyword">public</span> <a class="code" href="classarmnn_1_1_exception.xhtml">Exception</a></div><div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;{</div><div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;<span class="keyword">public</span>:</div><div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;    <span class="keyword">using</span> <a class="code" href="classarmnn_1_1_exception.xhtml#ad56b7b14f59554e891ad88b26cbf8ac3">Exception::Exception</a>;</div><div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;};</div><div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;</div><div class="line"><a name="l00086"></a><span class="lineno"><a class="line" href="classarmnn_1_1_file_not_found_exception.xhtml">   86</a></span>&#160;<span class="keyword">class </span><a class="code" href="classarmnn_1_1_file_not_found_exception.xhtml">FileNotFoundException</a> : <span class="keyword">public</span> <a class="code" href="classarmnn_1_1_exception.xhtml">Exception</a></div><div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;{</div><div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;<span class="keyword">public</span>:</div><div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;    <span class="keyword">using</span> <a class="code" href="classarmnn_1_1_exception.xhtml#ad56b7b14f59554e891ad88b26cbf8ac3">Exception::Exception</a>;</div><div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;};</div><div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;</div><div class="line"><a name="l00092"></a><span class="lineno"><a class="line" href="classarmnn_1_1_parse_exception.xhtml">   92</a></span>&#160;<span class="keyword">class </span><a class="code" href="classarmnn_1_1_parse_exception.xhtml">ParseException</a> : <span class="keyword">public</span> <a class="code" href="classarmnn_1_1_exception.xhtml">Exception</a></div><div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;{</div><div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;<span class="keyword">public</span>:</div><div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;    <span class="keyword">using</span> <a class="code" href="classarmnn_1_1_exception.xhtml#ad56b7b14f59554e891ad88b26cbf8ac3">Exception::Exception</a>;</div><div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;};</div><div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;</div><div class="line"><a name="l00098"></a><span class="lineno"><a class="line" href="classarmnn_1_1_unimplemented_exception.xhtml">   98</a></span>&#160;<span class="keyword">class </span><a class="code" href="classarmnn_1_1_unimplemented_exception.xhtml">UnimplementedException</a> : <span class="keyword">public</span> <a class="code" href="classarmnn_1_1_exception.xhtml">Exception</a></div><div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;{</div><div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;<span class="keyword">public</span>:</div><div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;    <span class="keyword">using</span> <a class="code" href="classarmnn_1_1_exception.xhtml#ad56b7b14f59554e891ad88b26cbf8ac3">Exception::Exception</a>;</div><div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;    <a class="code" href="classarmnn_1_1_unimplemented_exception.xhtml">UnimplementedException</a>();</div><div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;};</div><div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;</div><div class="line"><a name="l00105"></a><span class="lineno"><a class="line" href="classarmnn_1_1_layer_validation_exception.xhtml">  105</a></span>&#160;<span class="keyword">class </span><a class="code" href="classarmnn_1_1_layer_validation_exception.xhtml">LayerValidationException</a> : <span class="keyword">public</span> <a class="code" href="classarmnn_1_1_exception.xhtml">Exception</a></div><div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;{</div><div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;    <span class="keyword">using</span> <a class="code" href="classarmnn_1_1_exception.xhtml#ad56b7b14f59554e891ad88b26cbf8ac3">Exception::Exception</a>;</div><div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;};</div><div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;</div><div class="line"><a name="l00110"></a><span class="lineno"><a class="line" href="classarmnn_1_1_graph_validation_exception.xhtml">  110</a></span>&#160;<span class="keyword">class </span><a class="code" href="classarmnn_1_1_graph_validation_exception.xhtml">GraphValidationException</a> : <span class="keyword">public</span> <a class="code" href="classarmnn_1_1_exception.xhtml">Exception</a></div><div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;{</div><div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;    <span class="keyword">using</span> <a class="code" href="classarmnn_1_1_exception.xhtml#ad56b7b14f59554e891ad88b26cbf8ac3">Exception::Exception</a>;</div><div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;};</div><div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;</div><div class="line"><a name="l00115"></a><span class="lineno"><a class="line" href="classarmnn_1_1_bad_optional_access_exception.xhtml">  115</a></span>&#160;<span class="keyword">class </span><a class="code" href="classarmnn_1_1_bad_optional_access_exception.xhtml">BadOptionalAccessException</a> : <span class="keyword">public</span> <a class="code" href="classarmnn_1_1_exception.xhtml">Exception</a></div><div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;{</div><div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;    <span class="keyword">using</span> <a class="code" href="classarmnn_1_1_exception.xhtml#ad56b7b14f59554e891ad88b26cbf8ac3">Exception::Exception</a>;</div><div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;};</div><div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;</div><div class="line"><a name="l00120"></a><span class="lineno"><a class="line" href="classarmnn_1_1_runtime_exception.xhtml">  120</a></span>&#160;<span class="keyword">class </span><a class="code" href="classarmnn_1_1_runtime_exception.xhtml">RuntimeException</a> : <span class="keyword">public</span> <a class="code" href="classarmnn_1_1_exception.xhtml">Exception</a></div><div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;{</div><div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;    <span class="keyword">using</span> <a class="code" href="classarmnn_1_1_exception.xhtml#ad56b7b14f59554e891ad88b26cbf8ac3">Exception::Exception</a>;</div><div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;};</div><div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;</div><div class="line"><a name="l00125"></a><span class="lineno"><a class="line" href="classarmnn_1_1_memory_import_exception.xhtml">  125</a></span>&#160;<span class="keyword">class </span><a class="code" href="classarmnn_1_1_memory_import_exception.xhtml">MemoryImportException</a> : <span class="keyword">public</span> <a class="code" href="classarmnn_1_1_exception.xhtml">Exception</a></div><div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;{</div><div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;    <span class="keyword">using</span> <a class="code" href="classarmnn_1_1_exception.xhtml#ad56b7b14f59554e891ad88b26cbf8ac3">Exception::Exception</a>;</div><div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;};</div><div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;</div><div class="line"><a name="l00130"></a><span class="lineno"><a class="line" href="classarmnn_1_1_memory_export_exception.xhtml">  130</a></span>&#160;<span class="keyword">class </span><a class="code" href="classarmnn_1_1_memory_export_exception.xhtml">MemoryExportException</a> : <span class="keyword">public</span> <a class="code" href="classarmnn_1_1_exception.xhtml">Exception</a></div><div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;{</div><div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;    <span class="keyword">using</span> <a class="code" href="classarmnn_1_1_exception.xhtml#ad56b7b14f59554e891ad88b26cbf8ac3">Exception::Exception</a>;</div><div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;};</div><div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;</div><div class="line"><a name="l00135"></a><span class="lineno"><a class="line" href="classarmnn_1_1_timeout_exception.xhtml">  135</a></span>&#160;<span class="keyword">class </span><a class="code" href="classarmnn_1_1_timeout_exception.xhtml">TimeoutException</a> : <span class="keyword">public</span> <a class="code" href="classarmnn_1_1_exception.xhtml">Exception</a></div><div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;{</div><div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;    <span class="keyword">using</span> <a class="code" href="classarmnn_1_1_exception.xhtml#ad56b7b14f59554e891ad88b26cbf8ac3">Exception::Exception</a>;</div><div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;};</div><div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;</div><div class="line"><a name="l00140"></a><span class="lineno"><a class="line" href="classarmnn_1_1_backend_profiling_exception.xhtml">  140</a></span>&#160;<span class="keyword">class </span><a class="code" href="classarmnn_1_1_backend_profiling_exception.xhtml">BackendProfilingException</a> : <span class="keyword">public</span> <a class="code" href="classarmnn_1_1_exception.xhtml">Exception</a></div><div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;{</div><div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;<span class="keyword">public</span>:</div><div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;    <span class="keyword">using</span> <a class="code" href="classarmnn_1_1_exception.xhtml#ad56b7b14f59554e891ad88b26cbf8ac3">Exception::Exception</a>;</div><div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;};</div><div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;</div><div class="line"><a name="l00146"></a><span class="lineno"><a class="line" href="classarmnn_1_1_polymorphic_downcast_exception.xhtml">  146</a></span>&#160;<span class="keyword">class </span><a class="code" href="classarmnn_1_1_polymorphic_downcast_exception.xhtml">PolymorphicDowncastException</a> : <span class="keyword">public</span> <a class="code" href="classarmnn_1_1_exception.xhtml">Exception</a></div><div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;{</div><div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;<span class="keyword">public</span>:</div><div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;    <span class="keyword">using</span> <a class="code" href="classarmnn_1_1_exception.xhtml#ad56b7b14f59554e891ad88b26cbf8ac3">Exception::Exception</a>;</div><div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;};</div><div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;</div><div class="line"><a name="l00152"></a><span class="lineno"><a class="line" href="classarmnn_1_1_null_pointer_exception.xhtml">  152</a></span>&#160;<span class="keyword">class </span><a class="code" href="classarmnn_1_1_null_pointer_exception.xhtml">NullPointerException</a> : <span class="keyword">public</span> <a class="code" href="classarmnn_1_1_exception.xhtml">Exception</a></div><div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;{</div><div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;<span class="keyword">public</span>:</div><div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;    <span class="keyword">using</span> <a class="code" href="classarmnn_1_1_exception.xhtml#ad56b7b14f59554e891ad88b26cbf8ac3">Exception::Exception</a>;</div><div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;};</div><div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160;</div><div class="line"><a name="l00158"></a><span class="lineno"><a class="line" href="classarmnn_1_1_backend_capability_exception.xhtml">  158</a></span>&#160;<span class="keyword">class </span><a class="code" href="classarmnn_1_1_backend_capability_exception.xhtml">BackendCapabilityException</a> : <span class="keyword">public</span> <a class="code" href="classarmnn_1_1_exception.xhtml">Exception</a></div><div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160;{</div><div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160;<span class="keyword">public</span>:</div><div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160;    <span class="keyword">using</span> <a class="code" href="classarmnn_1_1_exception.xhtml#ad56b7b14f59554e891ad88b26cbf8ac3">Exception::Exception</a>;</div><div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160;};</div><div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160;</div><div class="line"><a name="l00164"></a><span class="lineno"><a class="line" href="classarmnn_1_1_memory_validation_exception.xhtml">  164</a></span>&#160;<span class="keyword">class </span><a class="code" href="classarmnn_1_1_memory_validation_exception.xhtml">MemoryValidationException</a> : <span class="keyword">public</span> <a class="code" href="classarmnn_1_1_exception.xhtml">Exception</a></div><div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160;{</div><div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160;<span class="keyword">public</span>:</div><div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160;    <span class="keyword">using</span> <a class="code" href="classarmnn_1_1_exception.xhtml#ad56b7b14f59554e891ad88b26cbf8ac3">Exception::Exception</a>;</div><div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160;};</div><div class="line"><a name="l00169"></a><span class="lineno">  169</span>&#160;</div><div class="line"><a name="l00170"></a><span class="lineno">  170</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> ExceptionType&gt;</div><div class="line"><a name="l00171"></a><span class="lineno"><a class="line" href="namespacearmnn.xhtml#ae4ab3bf0697ad13316a6bcba0a8fade5">  171</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="namespacearmnn.xhtml#ae4ab3bf0697ad13316a6bcba0a8fade5">ConditionalThrow</a>(<span class="keywordtype">bool</span> condition, <span class="keyword">const</span> std::string&amp; message)</div><div class="line"><a name="l00172"></a><span class="lineno">  172</span>&#160;{</div><div class="line"><a name="l00173"></a><span class="lineno">  173</span>&#160;    <span class="keywordflow">if</span> (!condition)</div><div class="line"><a name="l00174"></a><span class="lineno">  174</span>&#160;    {</div><div class="line"><a name="l00175"></a><span class="lineno">  175</span>&#160;        <span class="keywordflow">throw</span> ExceptionType(message);</div><div class="line"><a name="l00176"></a><span class="lineno">  176</span>&#160;    }</div><div class="line"><a name="l00177"></a><span class="lineno">  177</span>&#160;}</div><div class="line"><a name="l00178"></a><span class="lineno">  178</span>&#160;</div><div class="line"><a name="l00179"></a><span class="lineno">  179</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> ExceptionType&gt;</div><div class="line"><a name="l00180"></a><span class="lineno"><a class="line" href="namespacearmnn.xhtml#a6ed414c05eb6d4c89e0e4a475a0479c0">  180</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="namespacearmnn.xhtml#ae4ab3bf0697ad13316a6bcba0a8fade5">ConditionalThrow</a>(<span class="keywordtype">bool</span> condition)</div><div class="line"><a name="l00181"></a><span class="lineno">  181</span>&#160;{</div><div class="line"><a name="l00182"></a><span class="lineno">  182</span>&#160;    <span class="keywordflow">if</span> (!condition)</div><div class="line"><a name="l00183"></a><span class="lineno">  183</span>&#160;    {</div><div class="line"><a name="l00184"></a><span class="lineno">  184</span>&#160;        <span class="keywordflow">throw</span> ExceptionType();</div><div class="line"><a name="l00185"></a><span class="lineno">  185</span>&#160;    }</div><div class="line"><a name="l00186"></a><span class="lineno">  186</span>&#160;}</div><div class="line"><a name="l00187"></a><span class="lineno">  187</span>&#160;</div><div class="line"><a name="l00188"></a><span class="lineno">  188</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00189"></a><span class="lineno">  189</span>&#160;<span class="comment">///</span></div><div class="line"><a name="l00190"></a><span class="lineno">  190</span>&#160;<span class="comment">/// ComparedType must support:</span></div><div class="line"><a name="l00191"></a><span class="lineno">  191</span>&#160;<span class="comment">///   operator==(const ComparedType&amp;)</span></div><div class="line"><a name="l00192"></a><span class="lineno">  192</span>&#160;<span class="comment">///   operator&lt;&lt;(ostream&amp;, const ComparedType&amp;)</span></div><div class="line"><a name="l00193"></a><span class="lineno">  193</span>&#160;<span class="comment">///</span></div><div class="line"><a name="l00194"></a><span class="lineno">  194</span>&#160;<span class="comment"></span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> ExceptionType, <span class="keyword">typename</span> ComparedType&gt;</div><div class="line"><a name="l00195"></a><span class="lineno"><a class="line" href="namespacearmnn.xhtml#ae57b7f9e2cb7080bf10b28d1f72b558e">  195</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="namespacearmnn.xhtml#ae57b7f9e2cb7080bf10b28d1f72b558e">ConditionalThrowIfNotEqual</a>(<span class="keyword">const</span> std::string&amp; message,</div><div class="line"><a name="l00196"></a><span class="lineno">  196</span>&#160;                                <span class="keyword">const</span> ComparedType&amp; leftHandSide,</div><div class="line"><a name="l00197"></a><span class="lineno">  197</span>&#160;                                <span class="keyword">const</span> ComparedType&amp; rightHandSide)</div><div class="line"><a name="l00198"></a><span class="lineno">  198</span>&#160;{</div><div class="line"><a name="l00199"></a><span class="lineno">  199</span>&#160;    <span class="keywordflow">if</span> (!(leftHandSide == rightHandSide))</div><div class="line"><a name="l00200"></a><span class="lineno">  200</span>&#160;    {</div><div class="line"><a name="l00201"></a><span class="lineno">  201</span>&#160;        std::stringstream ss;</div><div class="line"><a name="l00202"></a><span class="lineno">  202</span>&#160;        ss &lt;&lt; message &lt;&lt; <span class="stringliteral">&quot; : &quot;</span> &lt;&lt; leftHandSide &lt;&lt; <span class="stringliteral">&quot; != &quot;</span> &lt;&lt; rightHandSide;</div><div class="line"><a name="l00203"></a><span class="lineno">  203</span>&#160;        <span class="keywordflow">throw</span> ExceptionType(ss.str());</div><div class="line"><a name="l00204"></a><span class="lineno">  204</span>&#160;    }</div><div class="line"><a name="l00205"></a><span class="lineno">  205</span>&#160;}</div><div class="line"><a name="l00206"></a><span class="lineno">  206</span>&#160;</div><div class="line"><a name="l00207"></a><span class="lineno">  207</span>&#160;} <span class="comment">// namespace armnn</span></div><div class="line"><a name="l00208"></a><span class="lineno">  208</span>&#160;</div><div class="line"><a name="l00209"></a><span class="lineno"><a class="line" href="_exceptions_8hpp.xhtml#aa3be76aec4ce713822a5ea1ecbb7bc61">  209</a></span>&#160;<span class="preprocessor">#define CHECK_LOCATION() armnn::CheckLocation(__func__, __FILE__, __LINE__)</span></div><div class="ttc" id="namespacearmnn_xhtml_ae57b7f9e2cb7080bf10b28d1f72b558e"><div class="ttname"><a href="namespacearmnn.xhtml#ae57b7f9e2cb7080bf10b28d1f72b558e">armnn::ConditionalThrowIfNotEqual</a></div><div class="ttdeci">void ConditionalThrowIfNotEqual(const std::string &amp;message, const ComparedType &amp;leftHandSide, const ComparedType &amp;rightHandSide)</div><div class="ttdoc">ComparedType must support: operator==(const ComparedType&amp;) operator&lt;&lt;(ostream&amp;, const ComparedType&amp;) ...</div><div class="ttdef"><b>Definition:</b> <a href="_exceptions_8hpp_source.xhtml#l00195">Exceptions.hpp:195</a></div></div>
<div class="ttc" id="structarmnn_1_1_check_location_xhtml_a5e3562cda960da001597e7dd5679b140"><div class="ttname"><a href="structarmnn_1_1_check_location.xhtml#a5e3562cda960da001597e7dd5679b140">armnn::CheckLocation::AsString</a></div><div class="ttdeci">std::string AsString() const</div><div class="ttdef"><b>Definition:</b> <a href="_exceptions_8hpp_source.xhtml#l00029">Exceptions.hpp:29</a></div></div>
<div class="ttc" id="classarmnn_1_1_backend_capability_exception_xhtml"><div class="ttname"><a href="classarmnn_1_1_backend_capability_exception.xhtml">armnn::BackendCapabilityException</a></div><div class="ttdef"><b>Definition:</b> <a href="_exceptions_8hpp_source.xhtml#l00158">Exceptions.hpp:158</a></div></div>
<div class="ttc" id="classarmnn_1_1_unimplemented_exception_xhtml"><div class="ttname"><a href="classarmnn_1_1_unimplemented_exception.xhtml">armnn::UnimplementedException</a></div><div class="ttdef"><b>Definition:</b> <a href="_exceptions_8hpp_source.xhtml#l00098">Exceptions.hpp:98</a></div></div>
<div class="ttc" id="classarmnn_1_1_exception_xhtml_ad56b7b14f59554e891ad88b26cbf8ac3"><div class="ttname"><a href="classarmnn_1_1_exception.xhtml#ad56b7b14f59554e891ad88b26cbf8ac3">armnn::Exception::Exception</a></div><div class="ttdeci">Exception(const std::string &amp;message)</div><div class="ttdef"><b>Definition:</b> <a href="_exceptions_8cpp_source.xhtml#l00012">Exceptions.cpp:12</a></div></div>
<div class="ttc" id="classarmnn_1_1_file_not_found_exception_xhtml"><div class="ttname"><a href="classarmnn_1_1_file_not_found_exception.xhtml">armnn::FileNotFoundException</a></div><div class="ttdef"><b>Definition:</b> <a href="_exceptions_8hpp_source.xhtml#l00086">Exceptions.hpp:86</a></div></div>
<div class="ttc" id="namespacearmnn_xhtml"><div class="ttname"><a href="namespacearmnn.xhtml">armnn</a></div><div class="ttdoc">Copyright (c) 2021 ARM Limited and Contributors. </div><div class="ttdef"><b>Definition:</b> <a href="01__00__quick__start_8dox_source.xhtml#l00006">01_00_quick_start.dox:6</a></div></div>
<div class="ttc" id="classarmnn_1_1_bad_optional_access_exception_xhtml"><div class="ttname"><a href="classarmnn_1_1_bad_optional_access_exception.xhtml">armnn::BadOptionalAccessException</a></div><div class="ttdef"><b>Definition:</b> <a href="_exceptions_8hpp_source.xhtml#l00115">Exceptions.hpp:115</a></div></div>
<div class="ttc" id="structarmnn_1_1_check_location_xhtml_acd649cad8a9b65a4a2730de8b13a1ff5"><div class="ttname"><a href="structarmnn_1_1_check_location.xhtml#acd649cad8a9b65a4a2730de8b13a1ff5">armnn::CheckLocation::m_Line</a></div><div class="ttdeci">unsigned int m_Line</div><div class="ttdef"><b>Definition:</b> <a href="_exceptions_8hpp_source.xhtml#l00018">Exceptions.hpp:18</a></div></div>
<div class="ttc" id="namespacearmnn_xhtml_ae4ab3bf0697ad13316a6bcba0a8fade5"><div class="ttname"><a href="namespacearmnn.xhtml#ae4ab3bf0697ad13316a6bcba0a8fade5">armnn::ConditionalThrow</a></div><div class="ttdeci">void ConditionalThrow(bool condition, const std::string &amp;message)</div><div class="ttdef"><b>Definition:</b> <a href="_exceptions_8hpp_source.xhtml#l00171">Exceptions.hpp:171</a></div></div>
<div class="ttc" id="classarmnn_1_1_timeout_exception_xhtml"><div class="ttname"><a href="classarmnn_1_1_timeout_exception.xhtml">armnn::TimeoutException</a></div><div class="ttdef"><b>Definition:</b> <a href="_exceptions_8hpp_source.xhtml#l00135">Exceptions.hpp:135</a></div></div>
<div class="ttc" id="structarmnn_1_1_check_location_xhtml_ac1184445a1323e07e0da084a54aec535"><div class="ttname"><a href="structarmnn_1_1_check_location.xhtml#ac1184445a1323e07e0da084a54aec535">armnn::CheckLocation::FileLine</a></div><div class="ttdeci">std::string FileLine() const</div><div class="ttdef"><b>Definition:</b> <a href="_exceptions_8hpp_source.xhtml#l00037">Exceptions.hpp:37</a></div></div>
<div class="ttc" id="classarmnn_1_1_layer_validation_exception_xhtml"><div class="ttname"><a href="classarmnn_1_1_layer_validation_exception.xhtml">armnn::LayerValidationException</a></div><div class="ttdef"><b>Definition:</b> <a href="_exceptions_8hpp_source.xhtml#l00105">Exceptions.hpp:105</a></div></div>
<div class="ttc" id="classarmnn_1_1_null_pointer_exception_xhtml"><div class="ttname"><a href="classarmnn_1_1_null_pointer_exception.xhtml">armnn::NullPointerException</a></div><div class="ttdef"><b>Definition:</b> <a href="_exceptions_8hpp_source.xhtml#l00152">Exceptions.hpp:152</a></div></div>
<div class="ttc" id="structarmnn_1_1_check_location_xhtml"><div class="ttname"><a href="structarmnn_1_1_check_location.xhtml">armnn::CheckLocation</a></div><div class="ttdef"><b>Definition:</b> <a href="_exceptions_8hpp_source.xhtml#l00014">Exceptions.hpp:14</a></div></div>
<div class="ttc" id="structarmnn_1_1_check_location_xhtml_a97b4339c57e59efc136e6304bd23b3c8"><div class="ttname"><a href="structarmnn_1_1_check_location.xhtml#a97b4339c57e59efc136e6304bd23b3c8">armnn::CheckLocation::m_File</a></div><div class="ttdeci">const char * m_File</div><div class="ttdef"><b>Definition:</b> <a href="_exceptions_8hpp_source.xhtml#l00017">Exceptions.hpp:17</a></div></div>
<div class="ttc" id="classarmnn_1_1_runtime_exception_xhtml"><div class="ttname"><a href="classarmnn_1_1_runtime_exception.xhtml">armnn::RuntimeException</a></div><div class="ttdef"><b>Definition:</b> <a href="_exceptions_8hpp_source.xhtml#l00120">Exceptions.hpp:120</a></div></div>
<div class="ttc" id="classarmnn_1_1_invalid_argument_exception_xhtml"><div class="ttname"><a href="classarmnn_1_1_invalid_argument_exception.xhtml">armnn::InvalidArgumentException</a></div><div class="ttdef"><b>Definition:</b> <a href="_exceptions_8hpp_source.xhtml#l00080">Exceptions.hpp:80</a></div></div>
<div class="ttc" id="classarmnn_1_1_graph_validation_exception_xhtml"><div class="ttname"><a href="classarmnn_1_1_graph_validation_exception.xhtml">armnn::GraphValidationException</a></div><div class="ttdef"><b>Definition:</b> <a href="_exceptions_8hpp_source.xhtml#l00110">Exceptions.hpp:110</a></div></div>
<div class="ttc" id="classarmnn_1_1_parse_exception_xhtml"><div class="ttname"><a href="classarmnn_1_1_parse_exception.xhtml">armnn::ParseException</a></div><div class="ttdef"><b>Definition:</b> <a href="_exceptions_8hpp_source.xhtml#l00092">Exceptions.hpp:92</a></div></div>
<div class="ttc" id="structarmnn_1_1_check_location_xhtml_a684d9d10a6bd3fe0d4e821363bab4de9"><div class="ttname"><a href="structarmnn_1_1_check_location.xhtml#a684d9d10a6bd3fe0d4e821363bab4de9">armnn::CheckLocation::CheckLocation</a></div><div class="ttdeci">CheckLocation(const char *func, const char *file, unsigned int line)</div><div class="ttdef"><b>Definition:</b> <a href="_exceptions_8hpp_source.xhtml#l00020">Exceptions.hpp:20</a></div></div>
<div class="ttc" id="classarmnn_1_1_memory_validation_exception_xhtml"><div class="ttname"><a href="classarmnn_1_1_memory_validation_exception.xhtml">armnn::MemoryValidationException</a></div><div class="ttdef"><b>Definition:</b> <a href="_exceptions_8hpp_source.xhtml#l00164">Exceptions.hpp:164</a></div></div>
<div class="ttc" id="classarmnn_1_1_exception_xhtml"><div class="ttname"><a href="classarmnn_1_1_exception.xhtml">armnn::Exception</a></div><div class="ttdoc">Base class for all ArmNN exceptions so that users can filter to just those. </div><div class="ttdef"><b>Definition:</b> <a href="_exceptions_8hpp_source.xhtml#l00046">Exceptions.hpp:46</a></div></div>
<div class="ttc" id="classarmnn_1_1_memory_import_exception_xhtml"><div class="ttname"><a href="classarmnn_1_1_memory_import_exception.xhtml">armnn::MemoryImportException</a></div><div class="ttdef"><b>Definition:</b> <a href="_exceptions_8hpp_source.xhtml#l00125">Exceptions.hpp:125</a></div></div>
<div class="ttc" id="classarmnn_1_1_backend_profiling_exception_xhtml"><div class="ttname"><a href="classarmnn_1_1_backend_profiling_exception.xhtml">armnn::BackendProfilingException</a></div><div class="ttdef"><b>Definition:</b> <a href="_exceptions_8hpp_source.xhtml#l00140">Exceptions.hpp:140</a></div></div>
<div class="ttc" id="classarmnn_1_1_memory_export_exception_xhtml"><div class="ttname"><a href="classarmnn_1_1_memory_export_exception.xhtml">armnn::MemoryExportException</a></div><div class="ttdef"><b>Definition:</b> <a href="_exceptions_8hpp_source.xhtml#l00130">Exceptions.hpp:130</a></div></div>
<div class="ttc" id="structarmnn_1_1_check_location_xhtml_a46e3b4b140e2c550342337b5fcceb9c6"><div class="ttname"><a href="structarmnn_1_1_check_location.xhtml#a46e3b4b140e2c550342337b5fcceb9c6">armnn::CheckLocation::m_Function</a></div><div class="ttdeci">const char * m_Function</div><div class="ttdef"><b>Definition:</b> <a href="_exceptions_8hpp_source.xhtml#l00016">Exceptions.hpp:16</a></div></div>
<div class="ttc" id="classarmnn_1_1_cl_runtime_unavailable_exception_xhtml"><div class="ttname"><a href="classarmnn_1_1_cl_runtime_unavailable_exception.xhtml">armnn::ClRuntimeUnavailableException</a></div><div class="ttdef"><b>Definition:</b> <a href="_exceptions_8hpp_source.xhtml#l00074">Exceptions.hpp:74</a></div></div>
<div class="ttc" id="classarmnn_1_1_polymorphic_downcast_exception_xhtml"><div class="ttname"><a href="classarmnn_1_1_polymorphic_downcast_exception.xhtml">armnn::PolymorphicDowncastException</a></div><div class="ttdef"><b>Definition:</b> <a href="_exceptions_8hpp_source.xhtml#l00146">Exceptions.hpp:146</a></div></div>
<div class="ttc" id="classarmnn_1_1_backend_unavailable_exception_xhtml"><div class="ttname"><a href="classarmnn_1_1_backend_unavailable_exception.xhtml">armnn::BackendUnavailableException</a></div><div class="ttdoc">Class for non-fatal exceptions raised while initialising a backend. </div><div class="ttdef"><b>Definition:</b> <a href="_exceptions_8hpp_source.xhtml#l00068">Exceptions.hpp:68</a></div></div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="dir_d44c64559bbebec7f509842c48db8b23.xhtml">include</a></li><li class="navelem"><a class="el" href="dir_2b72cc348e06937955e62ebdd8a13436.xhtml">armnn</a></li><li class="navelem"><a class="el" href="_exceptions_8hpp.xhtml">Exceptions.hpp</a></li>
    <li class="footer">Generated on Wed Mar 9 2022 12:00:05 for ArmNN by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.13 </li>
  </ul>
</div>
</body>
</html>
