<!-- Copyright (c) 2020 ARM Limited. -->
<!--                                 -->
<!-- SPDX-License-Identifier: MIT    -->
<!--                                 -->
<!-- HTML header for doxygen 1.8.13-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.13"/>
<meta name="robots" content="NOINDEX, NOFOLLOW" />
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>ArmNN: SubgraphView Class Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script><script type="text/javascript" src="http://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="stylesheet.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <img alt="ArmNN" src="Arm_NN_horizontal_blue.png" style="max-width: 10rem; margin-top: .5rem; margin-left 10px"/>
  <td style="padding-left: 0.5em;">
   <div id="projectname">
   &#160;<span id="projectnumber">22.02</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.13 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
$(document).ready(function(){initNavTree('classarmnn_1_1_subgraph_view.xhtml','');});
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="summary">
<a href="#pub-types">Public Types</a> &#124;
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="#pub-attribs">Public Attributes</a> &#124;
<a href="classarmnn_1_1_subgraph_view-members.xhtml">List of all members</a>  </div>
  <div class="headertitle">
<div class="title">SubgraphView Class Reference<span class="mlabels"><span class="mlabel">final</span></span></div>  </div>
</div><!--header-->
<div class="contents">

<p>The <a class="el" href="classarmnn_1_1_subgraph_view.xhtml" title="The SubgraphView class represents a subgraph of a Graph. ">SubgraphView</a> class represents a subgraph of a <a class="el" href="classarmnn_1_1_graph.xhtml">Graph</a>.  
 <a href="classarmnn_1_1_subgraph_view.xhtml#details">More...</a></p>

<p><code>#include &lt;<a class="el" href="include_2armnn_2backends_2_subgraph_view_8hpp_source.xhtml">SubgraphView.hpp</a>&gt;</code></p>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-types"></a>
Public Types</h2></td></tr>
<tr class="memitem:a4684a457c7786484375f06e9ab2d2265"><td class="memItemLeft" align="right" valign="top">using&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_subgraph_view.xhtml#a4684a457c7786484375f06e9ab2d2265">SubgraphViewPtr</a> = std::unique_ptr&lt; <a class="el" href="classarmnn_1_1_subgraph_view.xhtml">SubgraphView</a> &gt;</td></tr>
<tr class="separator:a4684a457c7786484375f06e9ab2d2265"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5cc65e15002dbc33a5c8a7d6680e9a9d"><td class="memItemLeft" align="right" valign="top">using&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_subgraph_view.xhtml#a5cc65e15002dbc33a5c8a7d6680e9a9d">InputSlots</a> = std::vector&lt; <a class="el" href="classarmnn_1_1_input_slot.xhtml">InputSlot</a> * &gt;</td></tr>
<tr class="separator:a5cc65e15002dbc33a5c8a7d6680e9a9d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4ad949634fd697549da161eb09d8b7fd"><td class="memItemLeft" align="right" valign="top">using&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_subgraph_view.xhtml#a4ad949634fd697549da161eb09d8b7fd">IInputSlots</a> = std::vector&lt; <a class="el" href="classarmnn_1_1_i_input_slot.xhtml">IInputSlot</a> * &gt;</td></tr>
<tr class="separator:a4ad949634fd697549da161eb09d8b7fd"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a78293334750ec5279eb9c96d56deaf08"><td class="memItemLeft" align="right" valign="top">using&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_subgraph_view.xhtml#a78293334750ec5279eb9c96d56deaf08">OutputSlots</a> = std::vector&lt; <a class="el" href="classarmnn_1_1_output_slot.xhtml">OutputSlot</a> * &gt;</td></tr>
<tr class="separator:a78293334750ec5279eb9c96d56deaf08"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3f717693851810942d3ae0180a97fb4c"><td class="memItemLeft" align="right" valign="top">using&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_subgraph_view.xhtml#a3f717693851810942d3ae0180a97fb4c">IOutputSlots</a> = std::vector&lt; <a class="el" href="classarmnn_1_1_i_output_slot.xhtml">IOutputSlot</a> * &gt;</td></tr>
<tr class="separator:a3f717693851810942d3ae0180a97fb4c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a74798938fdaeae75c8adfa4a7439e7f9"><td class="memItemLeft" align="right" valign="top">using&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_subgraph_view.xhtml#a74798938fdaeae75c8adfa4a7439e7f9">Layers</a> = std::list&lt; <a class="el" href="classarmnn_1_1_layer.xhtml">Layer</a> * &gt;</td></tr>
<tr class="separator:a74798938fdaeae75c8adfa4a7439e7f9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad7c7687cd3542e5cbb45e56f9a9456e7"><td class="memItemLeft" align="right" valign="top">using&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_subgraph_view.xhtml#ad7c7687cd3542e5cbb45e56f9a9456e7">IConnectableLayers</a> = std::list&lt; <a class="el" href="classarmnn_1_1_i_connectable_layer.xhtml">IConnectableLayer</a> * &gt;</td></tr>
<tr class="separator:ad7c7687cd3542e5cbb45e56f9a9456e7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af323e5b54c189191060bce191ce0f233"><td class="memItemLeft" align="right" valign="top">using&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_subgraph_view.xhtml#af323e5b54c189191060bce191ce0f233">Iterator</a> = Layers::iterator</td></tr>
<tr class="separator:af323e5b54c189191060bce191ce0f233"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a308b86dbdd0a745cef76904674c9850f"><td class="memItemLeft" align="right" valign="top">using&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_subgraph_view.xhtml#a308b86dbdd0a745cef76904674c9850f">IConnectableLayerIterator</a> = IConnectableLayers::iterator</td></tr>
<tr class="separator:a308b86dbdd0a745cef76904674c9850f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a39524c3cad3af48ba3e2bba2e8bf9fbe"><td class="memItemLeft" align="right" valign="top">using&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_subgraph_view.xhtml#a39524c3cad3af48ba3e2bba2e8bf9fbe">ConstIterator</a> = Layers::const_iterator</td></tr>
<tr class="separator:a39524c3cad3af48ba3e2bba2e8bf9fbe"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a32cc53af9dcaa8888da9e019625ede7b"><td class="memItemLeft" align="right" valign="top">using&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_subgraph_view.xhtml#a32cc53af9dcaa8888da9e019625ede7b">ConstIConnectableIterator</a> = IConnectableLayers::const_iterator</td></tr>
<tr class="separator:a32cc53af9dcaa8888da9e019625ede7b"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:ad6521013ad981519904822f2ada2c4ec"><td class="memTemplParams" colspan="2">template&lt;typename Func &gt; </td></tr>
<tr class="memitem:ad6521013ad981519904822f2ada2c4ec"><td class="memTemplItemLeft" align="right" valign="top">void&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_subgraph_view.xhtml#ad6521013ad981519904822f2ada2c4ec">ForEachLayer</a> (Func func) const</td></tr>
<tr class="separator:ad6521013ad981519904822f2ada2c4ec"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a89db17358856d60f03966a0e2e8cb25c"><td class="memTemplParams" colspan="2">template&lt;typename Func &gt; </td></tr>
<tr class="memitem:a89db17358856d60f03966a0e2e8cb25c"><td class="memTemplItemLeft" align="right" valign="top">void&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_subgraph_view.xhtml#a89db17358856d60f03966a0e2e8cb25c">ForEachIConnectableLayer</a> (Func func) const</td></tr>
<tr class="separator:a89db17358856d60f03966a0e2e8cb25c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a40bb9799fd918fa31f983cc5aa156828"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_subgraph_view.xhtml#a40bb9799fd918fa31f983cc5aa156828">SubgraphView</a> (<a class="el" href="classarmnn_1_1_graph.xhtml">Graph</a> &amp;graph)</td></tr>
<tr class="memdesc:a40bb9799fd918fa31f983cc5aa156828"><td class="mdescLeft">&#160;</td><td class="mdescRight">Constructs a sub-graph from the entire given graph.  <a href="#a40bb9799fd918fa31f983cc5aa156828">More...</a><br /></td></tr>
<tr class="separator:a40bb9799fd918fa31f983cc5aa156828"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5567554fc14d603ad4e5f48d88de666c"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_subgraph_view.xhtml#a5567554fc14d603ad4e5f48d88de666c">ARMNN_DEPRECATED_MSG_REMOVAL_DATE</a> (&quot;This function has been deprecated, please use constructor with arguments: &quot; &quot;<a class="el" href="classarmnn_1_1_subgraph_view.xhtml#ad7c7687cd3542e5cbb45e56f9a9456e7">IConnectableLayers</a>, <a class="el" href="classarmnn_1_1_subgraph_view.xhtml#a4ad949634fd697549da161eb09d8b7fd">IInputSlots</a> and <a class="el" href="classarmnn_1_1_subgraph_view.xhtml#a3f717693851810942d3ae0180a97fb4c">IOutputSlots</a>&quot;, &quot;22.11&quot;) SubgraphView(<a class="el" href="classarmnn_1_1_subgraph_view.xhtml#a5cc65e15002dbc33a5c8a7d6680e9a9d">InputSlots</a> &amp;&amp;inputs</td></tr>
<tr class="memdesc:a5567554fc14d603ad4e5f48d88de666c"><td class="mdescLeft">&#160;</td><td class="mdescRight">Constructs a sub-graph with the given arguments.  <a href="#a5567554fc14d603ad4e5f48d88de666c">More...</a><br /></td></tr>
<tr class="separator:a5567554fc14d603ad4e5f48d88de666c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a17b2269ca4f6e5ec3d5f00d32dc8b1e6"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_subgraph_view.xhtml#a17b2269ca4f6e5ec3d5f00d32dc8b1e6">SubgraphView</a> (<a class="el" href="classarmnn_1_1_subgraph_view.xhtml#ad7c7687cd3542e5cbb45e56f9a9456e7">IConnectableLayers</a> &amp;&amp;<a class="el" href="classarmnn_1_1_subgraph_view.xhtml#a5aeb684bf895052593e5239f133094ee">layers</a>, <a class="el" href="classarmnn_1_1_subgraph_view.xhtml#a4ad949634fd697549da161eb09d8b7fd">IInputSlots</a> &amp;&amp;inputs, <a class="el" href="classarmnn_1_1_subgraph_view.xhtml#a3f717693851810942d3ae0180a97fb4c">IOutputSlots</a> &amp;&amp;<a class="el" href="classarmnn_1_1_subgraph_view.xhtml#a342a59ed341e5f2e94dfaa34136573ef">outputs</a>)</td></tr>
<tr class="memdesc:a17b2269ca4f6e5ec3d5f00d32dc8b1e6"><td class="mdescLeft">&#160;</td><td class="mdescRight">Constructs a sub-graph with the given arguments.  <a href="#a17b2269ca4f6e5ec3d5f00d32dc8b1e6">More...</a><br /></td></tr>
<tr class="separator:a17b2269ca4f6e5ec3d5f00d32dc8b1e6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a40ec3404f963da3c5ea3665a3b50c5ca"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_subgraph_view.xhtml#a40ec3404f963da3c5ea3665a3b50c5ca">SubgraphView</a> (const <a class="el" href="classarmnn_1_1_subgraph_view.xhtml">SubgraphView</a> &amp;subgraph)</td></tr>
<tr class="memdesc:a40ec3404f963da3c5ea3665a3b50c5ca"><td class="mdescLeft">&#160;</td><td class="mdescRight">Copy-constructor.  <a href="#a40ec3404f963da3c5ea3665a3b50c5ca">More...</a><br /></td></tr>
<tr class="separator:a40ec3404f963da3c5ea3665a3b50c5ca"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae192e05beaadbd1d231676d9c37d1317"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_subgraph_view.xhtml#ae192e05beaadbd1d231676d9c37d1317">SubgraphView</a> (<a class="el" href="classarmnn_1_1_subgraph_view.xhtml">SubgraphView</a> &amp;&amp;subgraph)</td></tr>
<tr class="memdesc:ae192e05beaadbd1d231676d9c37d1317"><td class="mdescLeft">&#160;</td><td class="mdescRight">Move-constructor.  <a href="#ae192e05beaadbd1d231676d9c37d1317">More...</a><br /></td></tr>
<tr class="separator:ae192e05beaadbd1d231676d9c37d1317"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8e22424d6e8e40cbf9884a08c42a0199"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_subgraph_view.xhtml#a8e22424d6e8e40cbf9884a08c42a0199">SubgraphView</a> (<a class="el" href="classarmnn_1_1_i_connectable_layer.xhtml">IConnectableLayer</a> *layer)</td></tr>
<tr class="memdesc:a8e22424d6e8e40cbf9884a08c42a0199"><td class="mdescLeft">&#160;</td><td class="mdescRight">Constructs a sub-graph with only the given layer.  <a href="#a8e22424d6e8e40cbf9884a08c42a0199">More...</a><br /></td></tr>
<tr class="separator:a8e22424d6e8e40cbf9884a08c42a0199"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aae84cdbe05d87942f8ce0a2576c8a7c8"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classarmnn_1_1_subgraph_view.xhtml">SubgraphView</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_subgraph_view.xhtml#aae84cdbe05d87942f8ce0a2576c8a7c8">operator=</a> (<a class="el" href="classarmnn_1_1_subgraph_view.xhtml">SubgraphView</a> &amp;&amp;other)</td></tr>
<tr class="memdesc:aae84cdbe05d87942f8ce0a2576c8a7c8"><td class="mdescLeft">&#160;</td><td class="mdescRight">Move-assignment operator.  <a href="#aae84cdbe05d87942f8ce0a2576c8a7c8">More...</a><br /></td></tr>
<tr class="separator:aae84cdbe05d87942f8ce0a2576c8a7c8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a302e600b7c5ce47b83e51b5bd6f0718c"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_subgraph_view.xhtml#a302e600b7c5ce47b83e51b5bd6f0718c">ARMNN_DEPRECATED_MSG_REMOVAL_DATE</a> (&quot;This function has been deprecated, please use <a class="el" href="classarmnn_1_1_subgraph_view.xhtml#ada17adb05f8061fffa3e193544795fd5">GetIInputSlots</a>() returning&quot; &quot; public <a class="el" href="classarmnn_1_1_subgraph_view.xhtml#a4ad949634fd697549da161eb09d8b7fd">IInputSlots</a>&quot;, &quot;22.11&quot;) const <a class="el" href="classarmnn_1_1_subgraph_view.xhtml#a5cc65e15002dbc33a5c8a7d6680e9a9d">InputSlots</a> &amp;GetInputSlots() const</td></tr>
<tr class="separator:a302e600b7c5ce47b83e51b5bd6f0718c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ada17adb05f8061fffa3e193544795fd5"><td class="memItemLeft" align="right" valign="top">const <a class="el" href="classarmnn_1_1_subgraph_view.xhtml#a4ad949634fd697549da161eb09d8b7fd">IInputSlots</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_subgraph_view.xhtml#ada17adb05f8061fffa3e193544795fd5">GetIInputSlots</a> () const</td></tr>
<tr class="separator:ada17adb05f8061fffa3e193544795fd5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a00be3a0099d8e69a827feec95ea7a984"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_subgraph_view.xhtml#a00be3a0099d8e69a827feec95ea7a984">ARMNN_DEPRECATED_MSG_REMOVAL_DATE</a> (&quot;This function has been deprecated, please use <a class="el" href="classarmnn_1_1_subgraph_view.xhtml#adc4e3f28ec3906680f1a25a7b1a3e8f9">GetIOutputSlots</a>() returning&quot; &quot; public <a class="el" href="classarmnn_1_1_subgraph_view.xhtml#a3f717693851810942d3ae0180a97fb4c">IOutputSlots</a>&quot;, &quot;22.11&quot;) const <a class="el" href="classarmnn_1_1_subgraph_view.xhtml#a78293334750ec5279eb9c96d56deaf08">OutputSlots</a> &amp;GetOutputSlots() const</td></tr>
<tr class="separator:a00be3a0099d8e69a827feec95ea7a984"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:adc4e3f28ec3906680f1a25a7b1a3e8f9"><td class="memItemLeft" align="right" valign="top">const <a class="el" href="classarmnn_1_1_subgraph_view.xhtml#a3f717693851810942d3ae0180a97fb4c">IOutputSlots</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_subgraph_view.xhtml#adc4e3f28ec3906680f1a25a7b1a3e8f9">GetIOutputSlots</a> () const</td></tr>
<tr class="separator:adc4e3f28ec3906680f1a25a7b1a3e8f9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab127180fe6721d34083cc2e6b0743b2d"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_subgraph_view.xhtml#ab127180fe6721d34083cc2e6b0743b2d">ARMNN_DEPRECATED_MSG_REMOVAL_DATE</a> (&quot;This function has been deprecated, please use <a class="el" href="classarmnn_1_1_subgraph_view.xhtml#a8055e06b4f21d51fd8b4fc22ead2bdf0">GetIConnectableLayers</a>() &quot; &quot;returning public <a class="el" href="classarmnn_1_1_subgraph_view.xhtml#ad7c7687cd3542e5cbb45e56f9a9456e7">IConnectableLayers</a>&quot;, &quot;22.11&quot;) const <a class="el" href="classarmnn_1_1_subgraph_view.xhtml#a74798938fdaeae75c8adfa4a7439e7f9">Layers</a> &amp;GetLayers() const</td></tr>
<tr class="separator:ab127180fe6721d34083cc2e6b0743b2d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8055e06b4f21d51fd8b4fc22ead2bdf0"><td class="memItemLeft" align="right" valign="top">const <a class="el" href="classarmnn_1_1_subgraph_view.xhtml#ad7c7687cd3542e5cbb45e56f9a9456e7">IConnectableLayers</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_subgraph_view.xhtml#a8055e06b4f21d51fd8b4fc22ead2bdf0">GetIConnectableLayers</a> () const</td></tr>
<tr class="separator:a8055e06b4f21d51fd8b4fc22ead2bdf0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a684af78587d68a522c87d458be6a3696"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_subgraph_view.xhtml#a684af78587d68a522c87d458be6a3696">ARMNN_DEPRECATED_MSG_REMOVAL_DATE</a> (&quot;This function has been deprecated, please use <a class="el" href="classarmnn_1_1_subgraph_view.xhtml#a78a84ff740b2ec683d9da229a25c4140">GetIInputSlot</a>() returning public &quot; &quot;<a class="el" href="classarmnn_1_1_i_input_slot.xhtml">IInputSlot</a>&quot;, &quot;22.11&quot;) const <a class="el" href="classarmnn_1_1_input_slot.xhtml">InputSlot</a> *GetInputSlot(unsigned int index) const</td></tr>
<tr class="separator:a684af78587d68a522c87d458be6a3696"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a78a84ff740b2ec683d9da229a25c4140"><td class="memItemLeft" align="right" valign="top">const <a class="el" href="classarmnn_1_1_i_input_slot.xhtml">IInputSlot</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_subgraph_view.xhtml#a78a84ff740b2ec683d9da229a25c4140">GetIInputSlot</a> (unsigned int index) const</td></tr>
<tr class="separator:a78a84ff740b2ec683d9da229a25c4140"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab598f42ec66e23d2aa2f8579faabcd06"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_subgraph_view.xhtml#ab598f42ec66e23d2aa2f8579faabcd06">ARMNN_DEPRECATED_MSG_REMOVAL_DATE</a> (&quot;This function has been deprecated, please use <a class="el" href="classarmnn_1_1_subgraph_view.xhtml#a78a84ff740b2ec683d9da229a25c4140">GetIInputSlot</a>() returning public &quot; &quot;<a class="el" href="classarmnn_1_1_i_input_slot.xhtml">IInputSlot</a>&quot;, &quot;22.11&quot;) InputSlot *GetInputSlot(unsigned int index)</td></tr>
<tr class="separator:ab598f42ec66e23d2aa2f8579faabcd06"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af8c62982d6b14bc6d38722a31d37281b"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classarmnn_1_1_i_input_slot.xhtml">IInputSlot</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_subgraph_view.xhtml#af8c62982d6b14bc6d38722a31d37281b">GetIInputSlot</a> (unsigned int index)</td></tr>
<tr class="separator:af8c62982d6b14bc6d38722a31d37281b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a31b84d9c5d53d11f090350f3c17aa3c7"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_subgraph_view.xhtml#a31b84d9c5d53d11f090350f3c17aa3c7">ARMNN_DEPRECATED_MSG_REMOVAL_DATE</a> (&quot;This function has been deprecated, please use <a class="el" href="classarmnn_1_1_subgraph_view.xhtml#a92f32e6689a8fe52aa043ba5395c7b57">GetIOutputSlot</a>() returning&quot; &quot; public <a class="el" href="classarmnn_1_1_i_output_slot.xhtml">IOutputSlot</a>&quot;, &quot;22.11&quot;) const <a class="el" href="classarmnn_1_1_output_slot.xhtml">OutputSlot</a> *GetOutputSlot(unsigned int index) const</td></tr>
<tr class="separator:a31b84d9c5d53d11f090350f3c17aa3c7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a92f32e6689a8fe52aa043ba5395c7b57"><td class="memItemLeft" align="right" valign="top">const <a class="el" href="classarmnn_1_1_i_output_slot.xhtml">IOutputSlot</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_subgraph_view.xhtml#a92f32e6689a8fe52aa043ba5395c7b57">GetIOutputSlot</a> (unsigned int index) const</td></tr>
<tr class="separator:a92f32e6689a8fe52aa043ba5395c7b57"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a56d7fe58fe9cf59d0a4f8c49e650c43e"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_subgraph_view.xhtml#a56d7fe58fe9cf59d0a4f8c49e650c43e">ARMNN_DEPRECATED_MSG_REMOVAL_DATE</a> (&quot;This function has been deprecated, please use <a class="el" href="classarmnn_1_1_subgraph_view.xhtml#a92f32e6689a8fe52aa043ba5395c7b57">GetIOutputSlot</a>() returning&quot; &quot; public <a class="el" href="classarmnn_1_1_i_output_slot.xhtml">IOutputSlot</a>&quot;, &quot;22.11&quot;) OutputSlot *GetOutputSlot(unsigned int index)</td></tr>
<tr class="separator:a56d7fe58fe9cf59d0a4f8c49e650c43e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab48f73bad75377de628634fd9e807879"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classarmnn_1_1_i_output_slot.xhtml">IOutputSlot</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_subgraph_view.xhtml#ab48f73bad75377de628634fd9e807879">GetIOutputSlot</a> (unsigned int index)</td></tr>
<tr class="separator:ab48f73bad75377de628634fd9e807879"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6cbf14f4d57ef2de2cfed9a903db1643"><td class="memItemLeft" align="right" valign="top">unsigned int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_subgraph_view.xhtml#a6cbf14f4d57ef2de2cfed9a903db1643">GetNumInputSlots</a> () const</td></tr>
<tr class="separator:a6cbf14f4d57ef2de2cfed9a903db1643"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a59a4100374e80a3504f4bb4d13695d0b"><td class="memItemLeft" align="right" valign="top">unsigned int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_subgraph_view.xhtml#a59a4100374e80a3504f4bb4d13695d0b">GetNumOutputSlots</a> () const</td></tr>
<tr class="separator:a59a4100374e80a3504f4bb4d13695d0b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae92edffc457229d66ca07b79a1bab58f"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_subgraph_view.xhtml#ae92edffc457229d66ca07b79a1bab58f">ARMNN_DEPRECATED_MSG_CHANGE_DATE</a> (&quot;This function is deprecated and will be changed to return an &quot; &quot;<a class="el" href="classarmnn_1_1_subgraph_view.xhtml#a308b86dbdd0a745cef76904674c9850f">IConnectableLayerIterator</a>, until that occurs in 23.02; please use &quot; &quot;<a class="el" href="classarmnn_1_1_subgraph_view.xhtml#a7943f1cb889477bb4f1b83f98ce0f497">beginIConnectable</a>() returning public <a class="el" href="classarmnn_1_1_subgraph_view.xhtml#a308b86dbdd0a745cef76904674c9850f">IConnectableLayerIterator</a>&quot;, &quot;23.02&quot;) Iterator begin()</td></tr>
<tr class="separator:ae92edffc457229d66ca07b79a1bab58f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7943f1cb889477bb4f1b83f98ce0f497"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classarmnn_1_1_subgraph_view.xhtml#a308b86dbdd0a745cef76904674c9850f">IConnectableLayerIterator</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_subgraph_view.xhtml#a7943f1cb889477bb4f1b83f98ce0f497">beginIConnectable</a> ()</td></tr>
<tr class="separator:a7943f1cb889477bb4f1b83f98ce0f497"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a55f6d2a4aba1c80986ea9f49f7efe8be"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_subgraph_view.xhtml#a55f6d2a4aba1c80986ea9f49f7efe8be">ARMNN_DEPRECATED_MSG_CHANGE_DATE</a> (&quot;This function is deprecated and will be changed to return an &quot; &quot;<a class="el" href="classarmnn_1_1_subgraph_view.xhtml#a308b86dbdd0a745cef76904674c9850f">IConnectableLayerIterator</a>, until that occurs in 23.02; please use &quot; &quot;<a class="el" href="classarmnn_1_1_subgraph_view.xhtml#a33e737213a358ab404090446b1405467">endIConnectable</a>() returning public <a class="el" href="classarmnn_1_1_subgraph_view.xhtml#a308b86dbdd0a745cef76904674c9850f">IConnectableLayerIterator</a>&quot;, &quot;23.02&quot;) Iterator end()</td></tr>
<tr class="separator:a55f6d2a4aba1c80986ea9f49f7efe8be"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a33e737213a358ab404090446b1405467"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classarmnn_1_1_subgraph_view.xhtml#a308b86dbdd0a745cef76904674c9850f">IConnectableLayerIterator</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_subgraph_view.xhtml#a33e737213a358ab404090446b1405467">endIConnectable</a> ()</td></tr>
<tr class="separator:a33e737213a358ab404090446b1405467"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9ff0de787571573db644a482bbe66c76"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_subgraph_view.xhtml#a9ff0de787571573db644a482bbe66c76">ARMNN_DEPRECATED_MSG_CHANGE_DATE</a> (&quot;This function is deprecated and will be changed to return an &quot; &quot;<a class="el" href="classarmnn_1_1_subgraph_view.xhtml#a32cc53af9dcaa8888da9e019625ede7b">ConstIConnectableIterator</a>, until that occurs in 23.02; please use &quot; &quot;<a class="el" href="classarmnn_1_1_subgraph_view.xhtml#a7943f1cb889477bb4f1b83f98ce0f497">beginIConnectable</a>() returning public <a class="el" href="classarmnn_1_1_subgraph_view.xhtml#a32cc53af9dcaa8888da9e019625ede7b">ConstIConnectableIterator</a>&quot;, &quot;23.02&quot;) ConstIterator begin() const</td></tr>
<tr class="separator:a9ff0de787571573db644a482bbe66c76"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a80e571da50a06978f89168282a212acc"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classarmnn_1_1_subgraph_view.xhtml#a32cc53af9dcaa8888da9e019625ede7b">ConstIConnectableIterator</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_subgraph_view.xhtml#a80e571da50a06978f89168282a212acc">beginIConnectable</a> () const</td></tr>
<tr class="separator:a80e571da50a06978f89168282a212acc"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7b44c3cac81cfe63850b97d1ebde0168"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_subgraph_view.xhtml#a7b44c3cac81cfe63850b97d1ebde0168">ARMNN_DEPRECATED_MSG_CHANGE_DATE</a> (&quot;This function is deprecated and will be changed to return an &quot; &quot;<a class="el" href="classarmnn_1_1_subgraph_view.xhtml#a32cc53af9dcaa8888da9e019625ede7b">ConstIConnectableIterator</a>, until that occurs in 23.02; please use &quot; &quot;<a class="el" href="classarmnn_1_1_subgraph_view.xhtml#a33e737213a358ab404090446b1405467">endIConnectable</a>() returning public <a class="el" href="classarmnn_1_1_subgraph_view.xhtml#a32cc53af9dcaa8888da9e019625ede7b">ConstIConnectableIterator</a>&quot;, &quot;23.02&quot;) ConstIterator end() const</td></tr>
<tr class="separator:a7b44c3cac81cfe63850b97d1ebde0168"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a22b73c3107c1804a9005a1e1f0f5293f"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classarmnn_1_1_subgraph_view.xhtml#a32cc53af9dcaa8888da9e019625ede7b">ConstIConnectableIterator</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_subgraph_view.xhtml#a22b73c3107c1804a9005a1e1f0f5293f">endIConnectable</a> () const</td></tr>
<tr class="separator:a22b73c3107c1804a9005a1e1f0f5293f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9e56377fd69d72c12b393afc6668847e"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_subgraph_view.xhtml#a9e56377fd69d72c12b393afc6668847e">ARMNN_DEPRECATED_MSG_CHANGE_DATE</a> (&quot;This function is deprecated and will be changed to return an &quot; &quot;<a class="el" href="classarmnn_1_1_subgraph_view.xhtml#a32cc53af9dcaa8888da9e019625ede7b">ConstIConnectableIterator</a>, until that occurs in 23.02; please use &quot; &quot;<a class="el" href="classarmnn_1_1_subgraph_view.xhtml#aa7b8edacaa1ad39b42d33748f3a9d6ae">cbeginIConnectable</a>() returning public <a class="el" href="classarmnn_1_1_subgraph_view.xhtml#a32cc53af9dcaa8888da9e019625ede7b">ConstIConnectableIterator</a>&quot;, &quot;23.02&quot;) ConstIterator cbegin() const</td></tr>
<tr class="separator:a9e56377fd69d72c12b393afc6668847e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa7b8edacaa1ad39b42d33748f3a9d6ae"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classarmnn_1_1_subgraph_view.xhtml#a32cc53af9dcaa8888da9e019625ede7b">ConstIConnectableIterator</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_subgraph_view.xhtml#aa7b8edacaa1ad39b42d33748f3a9d6ae">cbeginIConnectable</a> () const</td></tr>
<tr class="separator:aa7b8edacaa1ad39b42d33748f3a9d6ae"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a07d0261c0457ceb2f7fdff19ec3443a6"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_subgraph_view.xhtml#a07d0261c0457ceb2f7fdff19ec3443a6">ARMNN_DEPRECATED_MSG_CHANGE_DATE</a> (&quot;This function is deprecated and will be changed to return an &quot; &quot;<a class="el" href="classarmnn_1_1_subgraph_view.xhtml#a32cc53af9dcaa8888da9e019625ede7b">ConstIConnectableIterator</a>, until that occurs in 23.02; please use &quot; &quot;<a class="el" href="classarmnn_1_1_subgraph_view.xhtml#a8f03c9af4e3aea7d0b4f0b76010dfb2a">cendIConnectable</a>() returning public <a class="el" href="classarmnn_1_1_subgraph_view.xhtml#a32cc53af9dcaa8888da9e019625ede7b">ConstIConnectableIterator</a>&quot;, &quot;23.02&quot;) ConstIterator cend() const</td></tr>
<tr class="separator:a07d0261c0457ceb2f7fdff19ec3443a6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8f03c9af4e3aea7d0b4f0b76010dfb2a"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classarmnn_1_1_subgraph_view.xhtml#a32cc53af9dcaa8888da9e019625ede7b">ConstIConnectableIterator</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_subgraph_view.xhtml#a8f03c9af4e3aea7d0b4f0b76010dfb2a">cendIConnectable</a> () const</td></tr>
<tr class="separator:a8f03c9af4e3aea7d0b4f0b76010dfb2a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa71d36872f416feaa853788a7a7a7ef8"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_subgraph_view.xhtml#aa71d36872f416feaa853788a7a7a7ef8">Clear</a> ()</td></tr>
<tr class="separator:aa71d36872f416feaa853788a7a7a7ef8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:acb857f550caed75701ee92cbd9a2898c"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classarmnn_1_1_subgraph_view.xhtml">SubgraphView</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_subgraph_view.xhtml#acb857f550caed75701ee92cbd9a2898c">GetWorkingCopy</a> ()</td></tr>
<tr class="memdesc:acb857f550caed75701ee92cbd9a2898c"><td class="mdescLeft">&#160;</td><td class="mdescRight">This method returns a copy of the original <a class="el" href="classarmnn_1_1_subgraph_view.xhtml" title="The SubgraphView class represents a subgraph of a Graph. ">SubgraphView</a> provided by OptimizeSubgraphView with a separate underlying graph from the main ArmNN graph.  <a href="#acb857f550caed75701ee92cbd9a2898c">More...</a><br /></td></tr>
<tr class="separator:acb857f550caed75701ee92cbd9a2898c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae9da449c038607237135b6b543890a15"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_subgraph_view.xhtml#ae9da449c038607237135b6b543890a15">SubstituteSubgraph</a> (<a class="el" href="classarmnn_1_1_subgraph_view.xhtml">SubgraphView</a> &amp;, <a class="el" href="classarmnn_1_1_i_connectable_layer.xhtml">IConnectableLayer</a> *)</td></tr>
<tr class="memdesc:ae9da449c038607237135b6b543890a15"><td class="mdescLeft">&#160;</td><td class="mdescRight">These methods should be called on a working copy subgraph created from GetWorkingCopy.  <a href="#ae9da449c038607237135b6b543890a15">More...</a><br /></td></tr>
<tr class="separator:ae9da449c038607237135b6b543890a15"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a28472b80e6cb7415f58c18c60c158c24"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_subgraph_view.xhtml#a28472b80e6cb7415f58c18c60c158c24">SubstituteSubgraph</a> (<a class="el" href="classarmnn_1_1_subgraph_view.xhtml">SubgraphView</a> &amp;, const <a class="el" href="classarmnn_1_1_subgraph_view.xhtml">SubgraphView</a> &amp;)</td></tr>
<tr class="separator:a28472b80e6cb7415f58c18c60c158c24"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-attribs"></a>
Public Attributes</h2></td></tr>
<tr class="memitem:a342a59ed341e5f2e94dfaa34136573ef"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classarmnn_1_1_subgraph_view.xhtml#a78293334750ec5279eb9c96d56deaf08">OutputSlots</a> &amp;&amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_subgraph_view.xhtml#a342a59ed341e5f2e94dfaa34136573ef">outputs</a></td></tr>
<tr class="separator:a342a59ed341e5f2e94dfaa34136573ef"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5aeb684bf895052593e5239f133094ee"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classarmnn_1_1_subgraph_view.xhtml#a78293334750ec5279eb9c96d56deaf08">OutputSlots</a> <a class="el" href="classarmnn_1_1_subgraph_view.xhtml#a74798938fdaeae75c8adfa4a7439e7f9">Layers</a> &amp;&amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_subgraph_view.xhtml#a5aeb684bf895052593e5239f133094ee">layers</a></td></tr>
<tr class="separator:a5aeb684bf895052593e5239f133094ee"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><p>The <a class="el" href="classarmnn_1_1_subgraph_view.xhtml" title="The SubgraphView class represents a subgraph of a Graph. ">SubgraphView</a> class represents a subgraph of a <a class="el" href="classarmnn_1_1_graph.xhtml">Graph</a>. </p>
<p>The data it holds, points to data held by layers of the <a class="el" href="classarmnn_1_1_graph.xhtml">Graph</a>, so the the contents of the <a class="el" href="classarmnn_1_1_subgraph_view.xhtml" title="The SubgraphView class represents a subgraph of a Graph. ">SubgraphView</a> become invalid when the Layers are destroyed or changed. </p>

<p class="definition">Definition at line <a class="el" href="include_2armnn_2backends_2_subgraph_view_8hpp_source.xhtml#l00023">23</a> of file <a class="el" href="include_2armnn_2backends_2_subgraph_view_8hpp_source.xhtml">SubgraphView.hpp</a>.</p>
</div><h2 class="groupheader">Member Typedef Documentation</h2>
<a id="a32cc53af9dcaa8888da9e019625ede7b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a32cc53af9dcaa8888da9e019625ede7b">&#9670;&nbsp;</a></span>ConstIConnectableIterator</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">using <a class="el" href="classarmnn_1_1_subgraph_view.xhtml#a32cc53af9dcaa8888da9e019625ede7b">ConstIConnectableIterator</a> =  IConnectableLayers::const_iterator</td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="include_2armnn_2backends_2_subgraph_view_8hpp_source.xhtml#l00058">58</a> of file <a class="el" href="include_2armnn_2backends_2_subgraph_view_8hpp_source.xhtml">SubgraphView.hpp</a>.</p>

</div>
</div>
<a id="a39524c3cad3af48ba3e2bba2e8bf9fbe"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a39524c3cad3af48ba3e2bba2e8bf9fbe">&#9670;&nbsp;</a></span>ConstIterator</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">using <a class="el" href="classarmnn_1_1_subgraph_view.xhtml#a39524c3cad3af48ba3e2bba2e8bf9fbe">ConstIterator</a> =  Layers::const_iterator</td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="include_2armnn_2backends_2_subgraph_view_8hpp_source.xhtml#l00057">57</a> of file <a class="el" href="include_2armnn_2backends_2_subgraph_view_8hpp_source.xhtml">SubgraphView.hpp</a>.</p>

</div>
</div>
<a id="a308b86dbdd0a745cef76904674c9850f"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a308b86dbdd0a745cef76904674c9850f">&#9670;&nbsp;</a></span>IConnectableLayerIterator</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">using <a class="el" href="classarmnn_1_1_subgraph_view.xhtml#a308b86dbdd0a745cef76904674c9850f">IConnectableLayerIterator</a> =  IConnectableLayers::iterator</td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="include_2armnn_2backends_2_subgraph_view_8hpp_source.xhtml#l00056">56</a> of file <a class="el" href="include_2armnn_2backends_2_subgraph_view_8hpp_source.xhtml">SubgraphView.hpp</a>.</p>

</div>
</div>
<a id="ad7c7687cd3542e5cbb45e56f9a9456e7"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ad7c7687cd3542e5cbb45e56f9a9456e7">&#9670;&nbsp;</a></span>IConnectableLayers</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">using <a class="el" href="classarmnn_1_1_subgraph_view.xhtml#ad7c7687cd3542e5cbb45e56f9a9456e7">IConnectableLayers</a> =  std::list&lt;<a class="el" href="classarmnn_1_1_i_connectable_layer.xhtml">IConnectableLayer</a>*&gt;</td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="include_2armnn_2backends_2_subgraph_view_8hpp_source.xhtml#l00054">54</a> of file <a class="el" href="include_2armnn_2backends_2_subgraph_view_8hpp_source.xhtml">SubgraphView.hpp</a>.</p>

</div>
</div>
<a id="a4ad949634fd697549da161eb09d8b7fd"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a4ad949634fd697549da161eb09d8b7fd">&#9670;&nbsp;</a></span>IInputSlots</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">using <a class="el" href="classarmnn_1_1_subgraph_view.xhtml#a4ad949634fd697549da161eb09d8b7fd">IInputSlots</a> =  std::vector&lt;<a class="el" href="classarmnn_1_1_i_input_slot.xhtml">IInputSlot</a>*&gt;</td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="include_2armnn_2backends_2_subgraph_view_8hpp_source.xhtml#l00050">50</a> of file <a class="el" href="include_2armnn_2backends_2_subgraph_view_8hpp_source.xhtml">SubgraphView.hpp</a>.</p>

</div>
</div>
<a id="a5cc65e15002dbc33a5c8a7d6680e9a9d"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a5cc65e15002dbc33a5c8a7d6680e9a9d">&#9670;&nbsp;</a></span>InputSlots</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">using <a class="el" href="classarmnn_1_1_subgraph_view.xhtml#a5cc65e15002dbc33a5c8a7d6680e9a9d">InputSlots</a> =  std::vector&lt;<a class="el" href="classarmnn_1_1_input_slot.xhtml">InputSlot</a>*&gt;</td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="include_2armnn_2backends_2_subgraph_view_8hpp_source.xhtml#l00049">49</a> of file <a class="el" href="include_2armnn_2backends_2_subgraph_view_8hpp_source.xhtml">SubgraphView.hpp</a>.</p>

</div>
</div>
<a id="a3f717693851810942d3ae0180a97fb4c"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a3f717693851810942d3ae0180a97fb4c">&#9670;&nbsp;</a></span>IOutputSlots</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">using <a class="el" href="classarmnn_1_1_subgraph_view.xhtml#a3f717693851810942d3ae0180a97fb4c">IOutputSlots</a> =  std::vector&lt;<a class="el" href="classarmnn_1_1_i_output_slot.xhtml">IOutputSlot</a>*&gt;</td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="include_2armnn_2backends_2_subgraph_view_8hpp_source.xhtml#l00052">52</a> of file <a class="el" href="include_2armnn_2backends_2_subgraph_view_8hpp_source.xhtml">SubgraphView.hpp</a>.</p>

</div>
</div>
<a id="af323e5b54c189191060bce191ce0f233"></a>
<h2 class="memtitle"><span class="permalink"><a href="#af323e5b54c189191060bce191ce0f233">&#9670;&nbsp;</a></span>Iterator</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">using <a class="el" href="classarmnn_1_1_subgraph_view.xhtml#af323e5b54c189191060bce191ce0f233">Iterator</a> =  Layers::iterator</td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="include_2armnn_2backends_2_subgraph_view_8hpp_source.xhtml#l00055">55</a> of file <a class="el" href="include_2armnn_2backends_2_subgraph_view_8hpp_source.xhtml">SubgraphView.hpp</a>.</p>

</div>
</div>
<a id="a74798938fdaeae75c8adfa4a7439e7f9"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a74798938fdaeae75c8adfa4a7439e7f9">&#9670;&nbsp;</a></span>Layers</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">using <a class="el" href="classarmnn_1_1_subgraph_view.xhtml#a74798938fdaeae75c8adfa4a7439e7f9">Layers</a> =  std::list&lt;<a class="el" href="classarmnn_1_1_layer.xhtml">Layer</a>*&gt;</td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="include_2armnn_2backends_2_subgraph_view_8hpp_source.xhtml#l00053">53</a> of file <a class="el" href="include_2armnn_2backends_2_subgraph_view_8hpp_source.xhtml">SubgraphView.hpp</a>.</p>

</div>
</div>
<a id="a78293334750ec5279eb9c96d56deaf08"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a78293334750ec5279eb9c96d56deaf08">&#9670;&nbsp;</a></span>OutputSlots</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">using <a class="el" href="classarmnn_1_1_subgraph_view.xhtml#a78293334750ec5279eb9c96d56deaf08">OutputSlots</a> =  std::vector&lt;<a class="el" href="classarmnn_1_1_output_slot.xhtml">OutputSlot</a>*&gt;</td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="include_2armnn_2backends_2_subgraph_view_8hpp_source.xhtml#l00051">51</a> of file <a class="el" href="include_2armnn_2backends_2_subgraph_view_8hpp_source.xhtml">SubgraphView.hpp</a>.</p>

</div>
</div>
<a id="a4684a457c7786484375f06e9ab2d2265"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a4684a457c7786484375f06e9ab2d2265">&#9670;&nbsp;</a></span>SubgraphViewPtr</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">using <a class="el" href="classarmnn_1_1_subgraph_view.xhtml#a4684a457c7786484375f06e9ab2d2265">SubgraphViewPtr</a> =  std::unique_ptr&lt;<a class="el" href="classarmnn_1_1_subgraph_view.xhtml">SubgraphView</a>&gt;</td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="include_2armnn_2backends_2_subgraph_view_8hpp_source.xhtml#l00048">48</a> of file <a class="el" href="include_2armnn_2backends_2_subgraph_view_8hpp_source.xhtml">SubgraphView.hpp</a>.</p>

</div>
</div>
<h2 class="groupheader">Constructor &amp; Destructor Documentation</h2>
<a id="a40bb9799fd918fa31f983cc5aa156828"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a40bb9799fd918fa31f983cc5aa156828">&#9670;&nbsp;</a></span>SubgraphView() <span class="overload">[1/5]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarmnn_1_1_subgraph_view.xhtml">SubgraphView</a> </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classarmnn_1_1_graph.xhtml">Graph</a> &amp;&#160;</td>
          <td class="paramname"><em>graph</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">explicit</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Constructs a sub-graph from the entire given graph. </p>

<p class="definition">Definition at line <a class="el" href="_subgraph_view_8cpp_source.xhtml#l00044">44</a> of file <a class="el" href="_subgraph_view_8cpp_source.xhtml">SubgraphView.cpp</a>.</p>

<p class="reference">References <a class="el" href="include_2armnn_2backends_2_subgraph_view_8hpp_source.xhtml#l00066">SubgraphView::layers</a>, and <a class="el" href="include_2armnn_2backends_2_subgraph_view_8hpp_source.xhtml#l00066">SubgraphView::outputs</a>.</p>

<p class="reference">Referenced by <a class="el" href="_subgraph_view_8cpp_source.xhtml#l00068">SubgraphView::SubgraphView()</a>.</p>
<div class="fragment"><div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;    : m_InputSlots{}</div><div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;    , m_OutputSlots{}</div><div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;    , m_Layers(graph.begin(), graph.end())</div><div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;    , m_IConnectableLayers(graph.begin(), graph.end())</div><div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;{</div><div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;    ArrangeBySortOrder();</div><div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;    CheckSubgraph();</div><div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;}</div></div><!-- fragment -->
</div>
</div>
<a id="a17b2269ca4f6e5ec3d5f00d32dc8b1e6"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a17b2269ca4f6e5ec3d5f00d32dc8b1e6">&#9670;&nbsp;</a></span>SubgraphView() <span class="overload">[2/5]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarmnn_1_1_subgraph_view.xhtml">SubgraphView</a> </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classarmnn_1_1_subgraph_view.xhtml#ad7c7687cd3542e5cbb45e56f9a9456e7">SubgraphView::IConnectableLayers</a> &amp;&amp;&#160;</td>
          <td class="paramname"><em>layers</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="classarmnn_1_1_subgraph_view.xhtml#a4ad949634fd697549da161eb09d8b7fd">SubgraphView::IInputSlots</a> &amp;&amp;&#160;</td>
          <td class="paramname"><em>inputs</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="classarmnn_1_1_subgraph_view.xhtml#a3f717693851810942d3ae0180a97fb4c">SubgraphView::IOutputSlots</a> &amp;&amp;&#160;</td>
          <td class="paramname"><em>outputs</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Constructs a sub-graph with the given arguments. </p>
<p>IConnectable Duplication to maintain backwards compatibility. </p>

<p class="definition">Definition at line <a class="el" href="_subgraph_view_8cpp_source.xhtml#l00068">68</a> of file <a class="el" href="_subgraph_view_8cpp_source.xhtml">SubgraphView.cpp</a>.</p>

<p class="reference">References <a class="el" href="include_2armnn_2backends_2_subgraph_view_8hpp_source.xhtml#l00066">SubgraphView::layers</a>, <a class="el" href="include_2armnn_2backends_2_subgraph_view_8hpp_source.xhtml#l00066">SubgraphView::outputs</a>, and <a class="el" href="_subgraph_view_8cpp_source.xhtml#l00044">SubgraphView::SubgraphView()</a>.</p>
<div class="fragment"><div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;        : m_IInputSlots{inputs}</div><div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;        , m_IOutputSlots{<a class="code" href="classarmnn_1_1_subgraph_view.xhtml#a342a59ed341e5f2e94dfaa34136573ef">outputs</a>}</div><div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;        , m_IConnectableLayers(<a class="code" href="classarmnn_1_1_subgraph_view.xhtml#ad7c7687cd3542e5cbb45e56f9a9456e7">IConnectableLayers</a>{<a class="code" href="classarmnn_1_1_subgraph_view.xhtml#a5aeb684bf895052593e5239f133094ee">layers</a>.begin(), <a class="code" href="classarmnn_1_1_subgraph_view.xhtml#a5aeb684bf895052593e5239f133094ee">layers</a>.end()})</div><div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;{</div><div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;    <span class="comment">// Cast from IConnectableLayer to Layer for backward compatibility</span></div><div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;    <span class="keyword">auto</span> f = [](IConnectableLayer* value)</div><div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;    {</div><div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;        <span class="keywordflow">return</span> PolymorphicDowncast&lt;Layer*&gt;(value);</div><div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;    };</div><div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;    std::transform(<a class="code" href="classarmnn_1_1_subgraph_view.xhtml#a5aeb684bf895052593e5239f133094ee">layers</a>.begin(), <a class="code" href="classarmnn_1_1_subgraph_view.xhtml#a5aeb684bf895052593e5239f133094ee">layers</a>.end(), std::back_inserter(m_Layers), f);</div><div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;</div><div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;    m_InputSlots.resize(inputs.size());</div><div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;    m_IInputSlots.resize(inputs.size());</div><div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;    <span class="keywordflow">for</span> (<span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> i = 0; i &lt; inputs.size(); i++)</div><div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;    {</div><div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;        m_InputSlots.at(i) = PolymorphicDowncast&lt;InputSlot*&gt;(inputs[i]);</div><div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;        m_IInputSlots.at(i) = inputs[i];</div><div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;    }</div><div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;</div><div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;    m_OutputSlots.resize(<a class="code" href="classarmnn_1_1_subgraph_view.xhtml#a342a59ed341e5f2e94dfaa34136573ef">outputs</a>.size());</div><div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;    m_IOutputSlots.resize(<a class="code" href="classarmnn_1_1_subgraph_view.xhtml#a342a59ed341e5f2e94dfaa34136573ef">outputs</a>.size());</div><div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;    <span class="keywordflow">for</span> (<span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> i = 0; i &lt; <a class="code" href="classarmnn_1_1_subgraph_view.xhtml#a342a59ed341e5f2e94dfaa34136573ef">outputs</a>.size(); i++)</div><div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;    {</div><div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;        m_OutputSlots.at(i) = PolymorphicDowncast&lt;OutputSlot*&gt;(<a class="code" href="classarmnn_1_1_subgraph_view.xhtml#a342a59ed341e5f2e94dfaa34136573ef">outputs</a>[i]);</div><div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;        m_IOutputSlots.at(i) = <a class="code" href="classarmnn_1_1_subgraph_view.xhtml#a342a59ed341e5f2e94dfaa34136573ef">outputs</a>[i];</div><div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;    }</div><div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;</div><div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;    ArrangeBySortOrder();</div><div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;    CheckSubgraph();</div><div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;}</div><div class="ttc" id="classarmnn_1_1_subgraph_view_xhtml_a342a59ed341e5f2e94dfaa34136573ef"><div class="ttname"><a href="classarmnn_1_1_subgraph_view.xhtml#a342a59ed341e5f2e94dfaa34136573ef">armnn::SubgraphView::outputs</a></div><div class="ttdeci">OutputSlots &amp;&amp; outputs</div><div class="ttdef"><b>Definition:</b> <a href="include_2armnn_2backends_2_subgraph_view_8hpp_source.xhtml#l00066">SubgraphView.hpp:66</a></div></div>
<div class="ttc" id="classarmnn_1_1_subgraph_view_xhtml_a5aeb684bf895052593e5239f133094ee"><div class="ttname"><a href="classarmnn_1_1_subgraph_view.xhtml#a5aeb684bf895052593e5239f133094ee">armnn::SubgraphView::layers</a></div><div class="ttdeci">OutputSlots Layers &amp;&amp; layers</div><div class="ttdef"><b>Definition:</b> <a href="include_2armnn_2backends_2_subgraph_view_8hpp_source.xhtml#l00066">SubgraphView.hpp:66</a></div></div>
<div class="ttc" id="classarmnn_1_1_subgraph_view_xhtml_ad7c7687cd3542e5cbb45e56f9a9456e7"><div class="ttname"><a href="classarmnn_1_1_subgraph_view.xhtml#ad7c7687cd3542e5cbb45e56f9a9456e7">armnn::SubgraphView::IConnectableLayers</a></div><div class="ttdeci">std::list&lt; IConnectableLayer * &gt; IConnectableLayers</div><div class="ttdef"><b>Definition:</b> <a href="include_2armnn_2backends_2_subgraph_view_8hpp_source.xhtml#l00054">SubgraphView.hpp:54</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="a40ec3404f963da3c5ea3665a3b50c5ca"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a40ec3404f963da3c5ea3665a3b50c5ca">&#9670;&nbsp;</a></span>SubgraphView() <span class="overload">[3/5]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarmnn_1_1_subgraph_view.xhtml">SubgraphView</a> </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_subgraph_view.xhtml">SubgraphView</a> &amp;&#160;</td>
          <td class="paramname"><em>subgraph</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Copy-constructor. </p>

<p class="definition">Definition at line <a class="el" href="_subgraph_view_8cpp_source.xhtml#l00139">139</a> of file <a class="el" href="_subgraph_view_8cpp_source.xhtml">SubgraphView.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;    : m_InputSlots(subgraph.m_InputSlots.begin(), subgraph.m_InputSlots.end())</div><div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;    , m_IInputSlots(subgraph.m_IInputSlots.begin(), subgraph.m_IInputSlots.end())</div><div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;    , m_OutputSlots(subgraph.m_OutputSlots.begin(), subgraph.m_OutputSlots.end())</div><div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;    , m_IOutputSlots(subgraph.m_IOutputSlots.begin(), subgraph.m_IOutputSlots.end())</div><div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;    , m_Layers(subgraph.m_Layers.begin(), subgraph.m_Layers.end())</div><div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;    , m_IConnectableLayers(<a class="code" href="classarmnn_1_1_subgraph_view.xhtml#ad7c7687cd3542e5cbb45e56f9a9456e7">IConnectableLayers</a>{subgraph.m_IConnectableLayers.begin(),</div><div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;                                              subgraph.m_IConnectableLayers.end()})</div><div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;{</div><div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;    ArrangeBySortOrder();</div><div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;    CheckSubgraph();</div><div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;}</div><div class="ttc" id="classarmnn_1_1_subgraph_view_xhtml_ad7c7687cd3542e5cbb45e56f9a9456e7"><div class="ttname"><a href="classarmnn_1_1_subgraph_view.xhtml#ad7c7687cd3542e5cbb45e56f9a9456e7">armnn::SubgraphView::IConnectableLayers</a></div><div class="ttdeci">std::list&lt; IConnectableLayer * &gt; IConnectableLayers</div><div class="ttdef"><b>Definition:</b> <a href="include_2armnn_2backends_2_subgraph_view_8hpp_source.xhtml#l00054">SubgraphView.hpp:54</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="ae192e05beaadbd1d231676d9c37d1317"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ae192e05beaadbd1d231676d9c37d1317">&#9670;&nbsp;</a></span>SubgraphView() <span class="overload">[4/5]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarmnn_1_1_subgraph_view.xhtml">SubgraphView</a> </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classarmnn_1_1_subgraph_view.xhtml">SubgraphView</a> &amp;&amp;&#160;</td>
          <td class="paramname"><em>subgraph</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Move-constructor. </p>

<p class="definition">Definition at line <a class="el" href="_subgraph_view_8cpp_source.xhtml#l00152">152</a> of file <a class="el" href="_subgraph_view_8cpp_source.xhtml">SubgraphView.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;    : m_InputSlots(std::move(subgraph.m_InputSlots))</div><div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;    , m_IInputSlots(std::move(subgraph.m_IInputSlots))</div><div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;    , m_OutputSlots(std::move(subgraph.m_OutputSlots))</div><div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;    , m_IOutputSlots(std::move(subgraph.m_IOutputSlots))</div><div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160;    , m_Layers(std::move(subgraph.m_Layers))</div><div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;    , m_IConnectableLayers(std::move(subgraph.m_IConnectableLayers))</div><div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160;{</div><div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160;    ArrangeBySortOrder();</div><div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160;    CheckSubgraph();</div><div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160;}</div></div><!-- fragment -->
</div>
</div>
<a id="a8e22424d6e8e40cbf9884a08c42a0199"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a8e22424d6e8e40cbf9884a08c42a0199">&#9670;&nbsp;</a></span>SubgraphView() <span class="overload">[5/5]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarmnn_1_1_subgraph_view.xhtml">SubgraphView</a> </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classarmnn_1_1_i_connectable_layer.xhtml">IConnectableLayer</a> *&#160;</td>
          <td class="paramname"><em>layer</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Constructs a sub-graph with only the given layer. </p>

<p class="definition">Definition at line <a class="el" href="_subgraph_view_8cpp_source.xhtml#l00164">164</a> of file <a class="el" href="_subgraph_view_8cpp_source.xhtml">SubgraphView.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160;    : m_Layers{PolymorphicDowncast&lt;Layer*&gt;(layer)}</div><div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160;    , m_IConnectableLayers{layer}</div><div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160;{</div><div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160;    <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> numInputSlots = layer-&gt;GetNumInputSlots();</div><div class="line"><a name="l00169"></a><span class="lineno">  169</span>&#160;    m_InputSlots.resize(numInputSlots);</div><div class="line"><a name="l00170"></a><span class="lineno">  170</span>&#160;    m_IInputSlots.resize(numInputSlots);</div><div class="line"><a name="l00171"></a><span class="lineno">  171</span>&#160;    <span class="keywordflow">for</span> (<span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> i = 0; i &lt; numInputSlots; i++)</div><div class="line"><a name="l00172"></a><span class="lineno">  172</span>&#160;    {</div><div class="line"><a name="l00173"></a><span class="lineno">  173</span>&#160;        m_InputSlots.at(i) = PolymorphicDowncast&lt;InputSlot*&gt;(&amp;(layer-&gt;GetInputSlot(i)));</div><div class="line"><a name="l00174"></a><span class="lineno">  174</span>&#160;        m_IInputSlots.at(i) = &amp;(layer-&gt;GetInputSlot(i));</div><div class="line"><a name="l00175"></a><span class="lineno">  175</span>&#160;    }</div><div class="line"><a name="l00176"></a><span class="lineno">  176</span>&#160;</div><div class="line"><a name="l00177"></a><span class="lineno">  177</span>&#160;    <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> numOutputSlots = layer-&gt;GetNumOutputSlots();</div><div class="line"><a name="l00178"></a><span class="lineno">  178</span>&#160;    m_OutputSlots.resize(numOutputSlots);</div><div class="line"><a name="l00179"></a><span class="lineno">  179</span>&#160;    m_IOutputSlots.resize(numOutputSlots);</div><div class="line"><a name="l00180"></a><span class="lineno">  180</span>&#160;    <span class="keywordflow">for</span> (<span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> i = 0; i &lt; numOutputSlots; i++)</div><div class="line"><a name="l00181"></a><span class="lineno">  181</span>&#160;    {</div><div class="line"><a name="l00182"></a><span class="lineno">  182</span>&#160;        m_OutputSlots.at(i) = PolymorphicDowncast&lt;OutputSlot*&gt;(&amp;(layer-&gt;GetOutputSlot(i)));</div><div class="line"><a name="l00183"></a><span class="lineno">  183</span>&#160;        m_IOutputSlots.at(i) = &amp;(layer-&gt;GetOutputSlot(i));</div><div class="line"><a name="l00184"></a><span class="lineno">  184</span>&#160;    }</div><div class="line"><a name="l00185"></a><span class="lineno">  185</span>&#160;</div><div class="line"><a name="l00186"></a><span class="lineno">  186</span>&#160;    CheckSubgraph();</div><div class="line"><a name="l00187"></a><span class="lineno">  187</span>&#160;}</div></div><!-- fragment -->
</div>
</div>
<h2 class="groupheader">Member Function Documentation</h2>
<a id="ae92edffc457229d66ca07b79a1bab58f"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ae92edffc457229d66ca07b79a1bab58f">&#9670;&nbsp;</a></span>ARMNN_DEPRECATED_MSG_CHANGE_DATE() <span class="overload">[1/6]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">ARMNN_DEPRECATED_MSG_CHANGE_DATE </td>
          <td>(</td>
          <td class="paramtype">&quot;This function is deprecated and will be changed to return an &quot; &quot;&#160;</td>
          <td class="paramname"><em>IConnectableLayerIterator</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">until that occurs in 23.02;please use &quot; &quot;<a class="el" href="classarmnn_1_1_subgraph_view.xhtml#a7943f1cb889477bb4f1b83f98ce0f497">beginIConnectable</a>() returning public <a class="el" href="classarmnn_1_1_subgraph_view.xhtml#a308b86dbdd0a745cef76904674c9850f">IConnectableLayerIterator</a>&quot;&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&quot;23.02&quot;&#160;</td>
          <td class="paramname">&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a55f6d2a4aba1c80986ea9f49f7efe8be"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a55f6d2a4aba1c80986ea9f49f7efe8be">&#9670;&nbsp;</a></span>ARMNN_DEPRECATED_MSG_CHANGE_DATE() <span class="overload">[2/6]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">ARMNN_DEPRECATED_MSG_CHANGE_DATE </td>
          <td>(</td>
          <td class="paramtype">&quot;This function is deprecated and will be changed to return an &quot; &quot;&#160;</td>
          <td class="paramname"><em>IConnectableLayerIterator</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">until that occurs in 23.02;please use &quot; &quot;<a class="el" href="classarmnn_1_1_subgraph_view.xhtml#a33e737213a358ab404090446b1405467">endIConnectable</a>() returning public <a class="el" href="classarmnn_1_1_subgraph_view.xhtml#a308b86dbdd0a745cef76904674c9850f">IConnectableLayerIterator</a>&quot;&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&quot;23.02&quot;&#160;</td>
          <td class="paramname">&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a9ff0de787571573db644a482bbe66c76"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a9ff0de787571573db644a482bbe66c76">&#9670;&nbsp;</a></span>ARMNN_DEPRECATED_MSG_CHANGE_DATE() <span class="overload">[3/6]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">ARMNN_DEPRECATED_MSG_CHANGE_DATE </td>
          <td>(</td>
          <td class="paramtype">&quot;This function is deprecated and will be changed to return an &quot; &quot;&#160;</td>
          <td class="paramname"><em>ConstIConnectableIterator</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">until that occurs in 23.02;please use &quot; &quot;<a class="el" href="classarmnn_1_1_subgraph_view.xhtml#a7943f1cb889477bb4f1b83f98ce0f497">beginIConnectable</a>() returning public <a class="el" href="classarmnn_1_1_subgraph_view.xhtml#a32cc53af9dcaa8888da9e019625ede7b">ConstIConnectableIterator</a>&quot;&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&quot;23.02&quot;&#160;</td>
          <td class="paramname">&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a7b44c3cac81cfe63850b97d1ebde0168"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a7b44c3cac81cfe63850b97d1ebde0168">&#9670;&nbsp;</a></span>ARMNN_DEPRECATED_MSG_CHANGE_DATE() <span class="overload">[4/6]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">ARMNN_DEPRECATED_MSG_CHANGE_DATE </td>
          <td>(</td>
          <td class="paramtype">&quot;This function is deprecated and will be changed to return an &quot; &quot;&#160;</td>
          <td class="paramname"><em>ConstIConnectableIterator</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">until that occurs in 23.02;please use &quot; &quot;<a class="el" href="classarmnn_1_1_subgraph_view.xhtml#a33e737213a358ab404090446b1405467">endIConnectable</a>() returning public <a class="el" href="classarmnn_1_1_subgraph_view.xhtml#a32cc53af9dcaa8888da9e019625ede7b">ConstIConnectableIterator</a>&quot;&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&quot;23.02&quot;&#160;</td>
          <td class="paramname">&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a9e56377fd69d72c12b393afc6668847e"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a9e56377fd69d72c12b393afc6668847e">&#9670;&nbsp;</a></span>ARMNN_DEPRECATED_MSG_CHANGE_DATE() <span class="overload">[5/6]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">ARMNN_DEPRECATED_MSG_CHANGE_DATE </td>
          <td>(</td>
          <td class="paramtype">&quot;This function is deprecated and will be changed to return an &quot; &quot;&#160;</td>
          <td class="paramname"><em>ConstIConnectableIterator</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">until that occurs in 23.02;please use &quot; &quot;<a class="el" href="classarmnn_1_1_subgraph_view.xhtml#aa7b8edacaa1ad39b42d33748f3a9d6ae">cbeginIConnectable</a>() returning public <a class="el" href="classarmnn_1_1_subgraph_view.xhtml#a32cc53af9dcaa8888da9e019625ede7b">ConstIConnectableIterator</a>&quot;&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&quot;23.02&quot;&#160;</td>
          <td class="paramname">&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a07d0261c0457ceb2f7fdff19ec3443a6"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a07d0261c0457ceb2f7fdff19ec3443a6">&#9670;&nbsp;</a></span>ARMNN_DEPRECATED_MSG_CHANGE_DATE() <span class="overload">[6/6]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">ARMNN_DEPRECATED_MSG_CHANGE_DATE </td>
          <td>(</td>
          <td class="paramtype">&quot;This function is deprecated and will be changed to return an &quot; &quot;&#160;</td>
          <td class="paramname"><em>ConstIConnectableIterator</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">until that occurs in 23.02;please use &quot; &quot;<a class="el" href="classarmnn_1_1_subgraph_view.xhtml#a8f03c9af4e3aea7d0b4f0b76010dfb2a">cendIConnectable</a>() returning public <a class="el" href="classarmnn_1_1_subgraph_view.xhtml#a32cc53af9dcaa8888da9e019625ede7b">ConstIConnectableIterator</a>&quot;&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&quot;23.02&quot;&#160;</td>
          <td class="paramname">&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a5567554fc14d603ad4e5f48d88de666c"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a5567554fc14d603ad4e5f48d88de666c">&#9670;&nbsp;</a></span>ARMNN_DEPRECATED_MSG_REMOVAL_DATE() <span class="overload">[1/8]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">ARMNN_DEPRECATED_MSG_REMOVAL_DATE </td>
          <td>(</td>
          <td class="paramtype">&quot;This function has been&#160;</td>
          <td class="paramname"><em>deprecated</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">please use constructor with arguments:&quot; &quot;&#160;</td>
          <td class="paramname"><em>IConnectableLayers</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="classarmnn_1_1_subgraph_view.xhtml#a4ad949634fd697549da161eb09d8b7fd">IInputSlots</a> and <a class="el" href="classarmnn_1_1_subgraph_view.xhtml#a3f717693851810942d3ae0180a97fb4c">IOutputSlots</a>&quot;&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&quot;22.11&quot;&#160;</td>
          <td class="paramname">&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td> &amp;&amp;</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Constructs a sub-graph with the given arguments. </p>

</div>
</div>
<a id="a302e600b7c5ce47b83e51b5bd6f0718c"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a302e600b7c5ce47b83e51b5bd6f0718c">&#9670;&nbsp;</a></span>ARMNN_DEPRECATED_MSG_REMOVAL_DATE() <span class="overload">[2/8]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">ARMNN_DEPRECATED_MSG_REMOVAL_DATE </td>
          <td>(</td>
          <td class="paramtype">&quot;This function has been&#160;</td>
          <td class="paramname"><em>deprecated</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">please use <a class="el" href="classarmnn_1_1_subgraph_view.xhtml#ada17adb05f8061fffa3e193544795fd5">GetIInputSlots</a>() returning&quot; &quot; public <a class="el" href="classarmnn_1_1_subgraph_view.xhtml#a4ad949634fd697549da161eb09d8b7fd">IInputSlots</a>&quot;&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&quot;22.11&quot;&#160;</td>
          <td class="paramname">&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td> const &amp;</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a00be3a0099d8e69a827feec95ea7a984"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a00be3a0099d8e69a827feec95ea7a984">&#9670;&nbsp;</a></span>ARMNN_DEPRECATED_MSG_REMOVAL_DATE() <span class="overload">[3/8]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">ARMNN_DEPRECATED_MSG_REMOVAL_DATE </td>
          <td>(</td>
          <td class="paramtype">&quot;This function has been&#160;</td>
          <td class="paramname"><em>deprecated</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">please use <a class="el" href="classarmnn_1_1_subgraph_view.xhtml#adc4e3f28ec3906680f1a25a7b1a3e8f9">GetIOutputSlots</a>() returning&quot; &quot; public <a class="el" href="classarmnn_1_1_subgraph_view.xhtml#a3f717693851810942d3ae0180a97fb4c">IOutputSlots</a>&quot;&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&quot;22.11&quot;&#160;</td>
          <td class="paramname">&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td> const &amp;</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="ab127180fe6721d34083cc2e6b0743b2d"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ab127180fe6721d34083cc2e6b0743b2d">&#9670;&nbsp;</a></span>ARMNN_DEPRECATED_MSG_REMOVAL_DATE() <span class="overload">[4/8]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">ARMNN_DEPRECATED_MSG_REMOVAL_DATE </td>
          <td>(</td>
          <td class="paramtype">&quot;This function has been&#160;</td>
          <td class="paramname"><em>deprecated</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">please use <a class="el" href="classarmnn_1_1_subgraph_view.xhtml#a8055e06b4f21d51fd8b4fc22ead2bdf0">GetIConnectableLayers</a>() &quot; &quot;returning public <a class="el" href="classarmnn_1_1_subgraph_view.xhtml#ad7c7687cd3542e5cbb45e56f9a9456e7">IConnectableLayers</a>&quot;&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&quot;22.11&quot;&#160;</td>
          <td class="paramname">&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td> const &amp;</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a684af78587d68a522c87d458be6a3696"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a684af78587d68a522c87d458be6a3696">&#9670;&nbsp;</a></span>ARMNN_DEPRECATED_MSG_REMOVAL_DATE() <span class="overload">[5/8]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">ARMNN_DEPRECATED_MSG_REMOVAL_DATE </td>
          <td>(</td>
          <td class="paramtype">&quot;This function has been&#160;</td>
          <td class="paramname"><em>deprecated</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">please use <a class="el" href="classarmnn_1_1_subgraph_view.xhtml#a78a84ff740b2ec683d9da229a25c4140">GetIInputSlot</a>() returning public &quot; &quot;<a class="el" href="classarmnn_1_1_i_input_slot.xhtml">IInputSlot</a>&quot;&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&quot;22.11&quot;&#160;</td>
          <td class="paramname">&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="ab598f42ec66e23d2aa2f8579faabcd06"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ab598f42ec66e23d2aa2f8579faabcd06">&#9670;&nbsp;</a></span>ARMNN_DEPRECATED_MSG_REMOVAL_DATE() <span class="overload">[6/8]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">ARMNN_DEPRECATED_MSG_REMOVAL_DATE </td>
          <td>(</td>
          <td class="paramtype">&quot;This function has been&#160;</td>
          <td class="paramname"><em>deprecated</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">please use <a class="el" href="classarmnn_1_1_subgraph_view.xhtml#a78a84ff740b2ec683d9da229a25c4140">GetIInputSlot</a>() returning public &quot; &quot;<a class="el" href="classarmnn_1_1_i_input_slot.xhtml">IInputSlot</a>&quot;&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&quot;22.11&quot;&#160;</td>
          <td class="paramname">&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a31b84d9c5d53d11f090350f3c17aa3c7"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a31b84d9c5d53d11f090350f3c17aa3c7">&#9670;&nbsp;</a></span>ARMNN_DEPRECATED_MSG_REMOVAL_DATE() <span class="overload">[7/8]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">ARMNN_DEPRECATED_MSG_REMOVAL_DATE </td>
          <td>(</td>
          <td class="paramtype">&quot;This function has been&#160;</td>
          <td class="paramname"><em>deprecated</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">please use <a class="el" href="classarmnn_1_1_subgraph_view.xhtml#a92f32e6689a8fe52aa043ba5395c7b57">GetIOutputSlot</a>() returning&quot; &quot; public <a class="el" href="classarmnn_1_1_i_output_slot.xhtml">IOutputSlot</a>&quot;&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&quot;22.11&quot;&#160;</td>
          <td class="paramname">&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a56d7fe58fe9cf59d0a4f8c49e650c43e"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a56d7fe58fe9cf59d0a4f8c49e650c43e">&#9670;&nbsp;</a></span>ARMNN_DEPRECATED_MSG_REMOVAL_DATE() <span class="overload">[8/8]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">ARMNN_DEPRECATED_MSG_REMOVAL_DATE </td>
          <td>(</td>
          <td class="paramtype">&quot;This function has been&#160;</td>
          <td class="paramname"><em>deprecated</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">please use <a class="el" href="classarmnn_1_1_subgraph_view.xhtml#a92f32e6689a8fe52aa043ba5395c7b57">GetIOutputSlot</a>() returning&quot; &quot; public <a class="el" href="classarmnn_1_1_i_output_slot.xhtml">IOutputSlot</a>&quot;&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&quot;22.11&quot;&#160;</td>
          <td class="paramname">&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a7943f1cb889477bb4f1b83f98ce0f497"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a7943f1cb889477bb4f1b83f98ce0f497">&#9670;&nbsp;</a></span>beginIConnectable() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarmnn_1_1_subgraph_view.xhtml#a308b86dbdd0a745cef76904674c9850f">SubgraphView::IConnectableLayerIterator</a> beginIConnectable </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_subgraph_view_8cpp_source.xhtml#l00316">316</a> of file <a class="el" href="_subgraph_view_8cpp_source.xhtml">SubgraphView.cpp</a>.</p>

<p class="reference">Referenced by <a class="el" href="_network_8cpp_source.xhtml#l01122">armnn::AssignBackends()</a>, <a class="el" href="_subgraph_view_8cpp_source.xhtml#l00364">SubgraphView::cbeginIConnectable()</a>, <a class="el" href="_neon_backend_8cpp_source.xhtml#l00142">NeonBackend::OptimizeSubgraphView()</a>, and <a class="el" href="_cl_backend_8cpp_source.xhtml#l00276">ClBackend::OptimizeSubgraphView()</a>.</p>
<div class="fragment"><div class="line"><a name="l00317"></a><span class="lineno">  317</span>&#160;{</div><div class="line"><a name="l00318"></a><span class="lineno">  318</span>&#160;    <span class="keywordflow">return</span> m_IConnectableLayers.begin();</div><div class="line"><a name="l00319"></a><span class="lineno">  319</span>&#160;}</div></div><!-- fragment -->
</div>
</div>
<a id="a80e571da50a06978f89168282a212acc"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a80e571da50a06978f89168282a212acc">&#9670;&nbsp;</a></span>beginIConnectable() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarmnn_1_1_subgraph_view.xhtml#a32cc53af9dcaa8888da9e019625ede7b">SubgraphView::ConstIConnectableIterator</a> beginIConnectable </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_subgraph_view_8cpp_source.xhtml#l00337">337</a> of file <a class="el" href="_subgraph_view_8cpp_source.xhtml">SubgraphView.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00338"></a><span class="lineno">  338</span>&#160;{</div><div class="line"><a name="l00339"></a><span class="lineno">  339</span>&#160;    <span class="keywordflow">return</span> m_IConnectableLayers.begin();</div><div class="line"><a name="l00340"></a><span class="lineno">  340</span>&#160;}</div></div><!-- fragment -->
</div>
</div>
<a id="aa7b8edacaa1ad39b42d33748f3a9d6ae"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aa7b8edacaa1ad39b42d33748f3a9d6ae">&#9670;&nbsp;</a></span>cbeginIConnectable()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarmnn_1_1_subgraph_view.xhtml#a32cc53af9dcaa8888da9e019625ede7b">SubgraphView::ConstIConnectableIterator</a> cbeginIConnectable </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_subgraph_view_8cpp_source.xhtml#l00364">364</a> of file <a class="el" href="_subgraph_view_8cpp_source.xhtml">SubgraphView.cpp</a>.</p>

<p class="reference">References <a class="el" href="_subgraph_view_8cpp_source.xhtml#l00316">SubgraphView::beginIConnectable()</a>.</p>
<div class="fragment"><div class="line"><a name="l00365"></a><span class="lineno">  365</span>&#160;{</div><div class="line"><a name="l00366"></a><span class="lineno">  366</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="classarmnn_1_1_subgraph_view.xhtml#a7943f1cb889477bb4f1b83f98ce0f497">beginIConnectable</a>();</div><div class="line"><a name="l00367"></a><span class="lineno">  367</span>&#160;}</div><div class="ttc" id="classarmnn_1_1_subgraph_view_xhtml_a7943f1cb889477bb4f1b83f98ce0f497"><div class="ttname"><a href="classarmnn_1_1_subgraph_view.xhtml#a7943f1cb889477bb4f1b83f98ce0f497">armnn::SubgraphView::beginIConnectable</a></div><div class="ttdeci">IConnectableLayerIterator beginIConnectable()</div><div class="ttdef"><b>Definition:</b> <a href="_subgraph_view_8cpp_source.xhtml#l00316">SubgraphView.cpp:316</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="a8f03c9af4e3aea7d0b4f0b76010dfb2a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a8f03c9af4e3aea7d0b4f0b76010dfb2a">&#9670;&nbsp;</a></span>cendIConnectable()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarmnn_1_1_subgraph_view.xhtml#a32cc53af9dcaa8888da9e019625ede7b">SubgraphView::ConstIConnectableIterator</a> cendIConnectable </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_subgraph_view_8cpp_source.xhtml#l00369">369</a> of file <a class="el" href="_subgraph_view_8cpp_source.xhtml">SubgraphView.cpp</a>.</p>

<p class="reference">References <a class="el" href="_subgraph_view_8cpp_source.xhtml#l00321">SubgraphView::endIConnectable()</a>.</p>
<div class="fragment"><div class="line"><a name="l00370"></a><span class="lineno">  370</span>&#160;{</div><div class="line"><a name="l00371"></a><span class="lineno">  371</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="classarmnn_1_1_subgraph_view.xhtml#a33e737213a358ab404090446b1405467">endIConnectable</a>();</div><div class="line"><a name="l00372"></a><span class="lineno">  372</span>&#160;}</div><div class="ttc" id="classarmnn_1_1_subgraph_view_xhtml_a33e737213a358ab404090446b1405467"><div class="ttname"><a href="classarmnn_1_1_subgraph_view.xhtml#a33e737213a358ab404090446b1405467">armnn::SubgraphView::endIConnectable</a></div><div class="ttdeci">IConnectableLayerIterator endIConnectable()</div><div class="ttdef"><b>Definition:</b> <a href="_subgraph_view_8cpp_source.xhtml#l00321">SubgraphView.cpp:321</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="aa71d36872f416feaa853788a7a7a7ef8"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aa71d36872f416feaa853788a7a7a7ef8">&#9670;&nbsp;</a></span>Clear()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void Clear </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_subgraph_view_8cpp_source.xhtml#l00374">374</a> of file <a class="el" href="_subgraph_view_8cpp_source.xhtml">SubgraphView.cpp</a>.</p>

<p class="reference">Referenced by <a class="el" href="_graph_8cpp_source.xhtml#l00444">Graph::SubstituteSubgraph()</a>.</p>
<div class="fragment"><div class="line"><a name="l00375"></a><span class="lineno">  375</span>&#160;{</div><div class="line"><a name="l00376"></a><span class="lineno">  376</span>&#160;    m_InputSlots.clear();</div><div class="line"><a name="l00377"></a><span class="lineno">  377</span>&#160;    m_OutputSlots.clear();</div><div class="line"><a name="l00378"></a><span class="lineno">  378</span>&#160;    m_Layers.clear();</div><div class="line"><a name="l00379"></a><span class="lineno">  379</span>&#160;</div><div class="line"><a name="l00380"></a><span class="lineno">  380</span>&#160;    m_IInputSlots.clear();</div><div class="line"><a name="l00381"></a><span class="lineno">  381</span>&#160;    m_IOutputSlots.clear();</div><div class="line"><a name="l00382"></a><span class="lineno">  382</span>&#160;    m_IConnectableLayers.clear();</div><div class="line"><a name="l00383"></a><span class="lineno">  383</span>&#160;}</div></div><!-- fragment -->
</div>
</div>
<a id="a33e737213a358ab404090446b1405467"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a33e737213a358ab404090446b1405467">&#9670;&nbsp;</a></span>endIConnectable() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarmnn_1_1_subgraph_view.xhtml#a308b86dbdd0a745cef76904674c9850f">SubgraphView::IConnectableLayerIterator</a> endIConnectable </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_subgraph_view_8cpp_source.xhtml#l00321">321</a> of file <a class="el" href="_subgraph_view_8cpp_source.xhtml">SubgraphView.cpp</a>.</p>

<p class="reference">Referenced by <a class="el" href="_network_8cpp_source.xhtml#l01122">armnn::AssignBackends()</a>, <a class="el" href="_subgraph_view_8cpp_source.xhtml#l00369">SubgraphView::cendIConnectable()</a>, <a class="el" href="_neon_backend_8cpp_source.xhtml#l00142">NeonBackend::OptimizeSubgraphView()</a>, and <a class="el" href="_cl_backend_8cpp_source.xhtml#l00276">ClBackend::OptimizeSubgraphView()</a>.</p>
<div class="fragment"><div class="line"><a name="l00322"></a><span class="lineno">  322</span>&#160;{</div><div class="line"><a name="l00323"></a><span class="lineno">  323</span>&#160;    <span class="keywordflow">return</span> m_IConnectableLayers.end();</div><div class="line"><a name="l00324"></a><span class="lineno">  324</span>&#160;}</div></div><!-- fragment -->
</div>
</div>
<a id="a22b73c3107c1804a9005a1e1f0f5293f"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a22b73c3107c1804a9005a1e1f0f5293f">&#9670;&nbsp;</a></span>endIConnectable() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarmnn_1_1_subgraph_view.xhtml#a32cc53af9dcaa8888da9e019625ede7b">SubgraphView::ConstIConnectableIterator</a> endIConnectable </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_subgraph_view_8cpp_source.xhtml#l00342">342</a> of file <a class="el" href="_subgraph_view_8cpp_source.xhtml">SubgraphView.cpp</a>.</p>

<p class="reference">References <a class="el" href="_deprecated_8hpp_source.xhtml#l00033">ARMNN_NO_DEPRECATE_WARN_BEGIN</a>, and <a class="el" href="_deprecated_8hpp_source.xhtml#l00034">ARMNN_NO_DEPRECATE_WARN_END</a>.</p>
<div class="fragment"><div class="line"><a name="l00343"></a><span class="lineno">  343</span>&#160;{</div><div class="line"><a name="l00344"></a><span class="lineno">  344</span>&#160;    <span class="keywordflow">return</span> m_IConnectableLayers.end();</div><div class="line"><a name="l00345"></a><span class="lineno">  345</span>&#160;}</div></div><!-- fragment -->
</div>
</div>
<a id="a89db17358856d60f03966a0e2e8cb25c"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a89db17358856d60f03966a0e2e8cb25c">&#9670;&nbsp;</a></span>ForEachIConnectableLayer()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void ForEachIConnectableLayer </td>
          <td>(</td>
          <td class="paramtype">Func&#160;</td>
          <td class="paramname"><em>func</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="include_2armnn_2backends_2_subgraph_view_8hpp_source.xhtml#l00038">38</a> of file <a class="el" href="include_2armnn_2backends_2_subgraph_view_8hpp_source.xhtml">SubgraphView.hpp</a>.</p>

<p class="reference">Referenced by <a class="el" href="_subgraph_view_8cpp_source.xhtml#l00551">SubgraphView::SubstituteSubgraph()</a>, <a class="el" href="_graph_8cpp_source.xhtml#l00444">Graph::SubstituteSubgraph()</a>, and <a class="el" href="_subgraph_view_tests_8cpp_source.xhtml#l01620">TEST_SUITE()</a>.</p>
<div class="fragment"><div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;    {</div><div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;        <span class="keywordflow">for</span> (<span class="keyword">auto</span> it = m_IConnectableLayers.begin(); it != m_IConnectableLayers.end(); )</div><div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;        {</div><div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;             <span class="keyword">auto</span> next = std::next(it);</div><div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;             func(*it);</div><div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;             it = next;</div><div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;        }</div><div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;    }</div></div><!-- fragment -->
</div>
</div>
<a id="ad6521013ad981519904822f2ada2c4ec"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ad6521013ad981519904822f2ada2c4ec">&#9670;&nbsp;</a></span>ForEachLayer()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void ForEachLayer </td>
          <td>(</td>
          <td class="paramtype">Func&#160;</td>
          <td class="paramname"><em>func</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="include_2armnn_2backends_2_subgraph_view_8hpp_source.xhtml#l00027">27</a> of file <a class="el" href="include_2armnn_2backends_2_subgraph_view_8hpp_source.xhtml">SubgraphView.hpp</a>.</p>

<p class="reference">Referenced by <a class="el" href="_subgraph_view_tests_8cpp_source.xhtml#l01620">TEST_SUITE()</a>.</p>
<div class="fragment"><div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;    {</div><div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;        <span class="keywordflow">for</span> (<span class="keyword">auto</span> it = m_Layers.begin(); it != m_Layers.end(); )</div><div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;        {</div><div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;             <span class="keyword">auto</span> next = std::next(it);</div><div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;             func(*it);</div><div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;             it = next;</div><div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;        }</div><div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;    }</div></div><!-- fragment -->
</div>
</div>
<a id="a8055e06b4f21d51fd8b4fc22ead2bdf0"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a8055e06b4f21d51fd8b4fc22ead2bdf0">&#9670;&nbsp;</a></span>GetIConnectableLayers()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">const <a class="el" href="classarmnn_1_1_subgraph_view.xhtml#ad7c7687cd3542e5cbb45e56f9a9456e7">SubgraphView::IConnectableLayers</a> &amp; GetIConnectableLayers </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_subgraph_view_8cpp_source.xhtml#l00300">300</a> of file <a class="el" href="_subgraph_view_8cpp_source.xhtml">SubgraphView.cpp</a>.</p>

<p class="reference">Referenced by <a class="el" href="_network_8cpp_source.xhtml#l01155">armnn::ApplyBackendOptimizations()</a>, <a class="el" href="_subgraph_view_8cpp_source.xhtml#l00419">SubgraphView::GetWorkingCopy()</a>, <a class="el" href="backends_2backends_common_2test_2_mock_backend_8cpp_source.xhtml#l00127">MockBackend::OptimizeSubgraphView()</a>, <a class="el" href="_subgraph_view_selector_8cpp_source.xhtml#l00389">SubgraphViewSelector::SelectSubgraphs()</a>, <a class="el" href="_graph_8cpp_source.xhtml#l00444">Graph::SubstituteSubgraph()</a>, <a class="el" href="_subgraph_view_tests_8cpp_source.xhtml#l00693">TEST_SUITE()</a>, and <a class="el" href="_optimization_views_8cpp_source.xhtml#l00011">OptimizationViews::Validate()</a>.</p>
<div class="fragment"><div class="line"><a name="l00301"></a><span class="lineno">  301</span>&#160;{</div><div class="line"><a name="l00302"></a><span class="lineno">  302</span>&#160;    <span class="keywordflow">return</span> m_IConnectableLayers;</div><div class="line"><a name="l00303"></a><span class="lineno">  303</span>&#160;}</div></div><!-- fragment -->
</div>
</div>
<a id="a78a84ff740b2ec683d9da229a25c4140"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a78a84ff740b2ec683d9da229a25c4140">&#9670;&nbsp;</a></span>GetIInputSlot() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">const <a class="el" href="classarmnn_1_1_i_input_slot.xhtml">IInputSlot</a> * GetIInputSlot </td>
          <td>(</td>
          <td class="paramtype">unsigned int&#160;</td>
          <td class="paramname"><em>index</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_subgraph_view_8cpp_source.xhtml#l00250">250</a> of file <a class="el" href="_subgraph_view_8cpp_source.xhtml">SubgraphView.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00251"></a><span class="lineno">  251</span>&#160;{</div><div class="line"><a name="l00252"></a><span class="lineno">  252</span>&#160;    <span class="keywordflow">return</span> m_IInputSlots.at(index);</div><div class="line"><a name="l00253"></a><span class="lineno">  253</span>&#160;}</div></div><!-- fragment -->
</div>
</div>
<a id="af8c62982d6b14bc6d38722a31d37281b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#af8c62982d6b14bc6d38722a31d37281b">&#9670;&nbsp;</a></span>GetIInputSlot() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarmnn_1_1_i_input_slot.xhtml">IInputSlot</a> * GetIInputSlot </td>
          <td>(</td>
          <td class="paramtype">unsigned int&#160;</td>
          <td class="paramname"><em>index</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_subgraph_view_8cpp_source.xhtml#l00260">260</a> of file <a class="el" href="_subgraph_view_8cpp_source.xhtml">SubgraphView.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00261"></a><span class="lineno">  261</span>&#160;{</div><div class="line"><a name="l00262"></a><span class="lineno">  262</span>&#160;    <span class="keywordflow">return</span> m_IInputSlots.at(index);</div><div class="line"><a name="l00263"></a><span class="lineno">  263</span>&#160;}</div></div><!-- fragment -->
</div>
</div>
<a id="ada17adb05f8061fffa3e193544795fd5"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ada17adb05f8061fffa3e193544795fd5">&#9670;&nbsp;</a></span>GetIInputSlots()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">const <a class="el" href="classarmnn_1_1_subgraph_view.xhtml#a4ad949634fd697549da161eb09d8b7fd">SubgraphView::IInputSlots</a> &amp; GetIInputSlots </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_subgraph_view_8cpp_source.xhtml#l00230">230</a> of file <a class="el" href="_subgraph_view_8cpp_source.xhtml">SubgraphView.cpp</a>.</p>

<p class="reference">Referenced by <a class="el" href="_subgraph_view_8cpp_source.xhtml#l00419">SubgraphView::GetWorkingCopy()</a>, <a class="el" href="_subgraph_view_selector_8cpp_source.xhtml#l00389">SubgraphViewSelector::SelectSubgraphs()</a>, <a class="el" href="_graph_8cpp_source.xhtml#l00444">Graph::SubstituteSubgraph()</a>, <a class="el" href="_subgraph_view_tests_8cpp_source.xhtml#l00693">TEST_SUITE()</a>, and <a class="el" href="_optimization_views_8cpp_source.xhtml#l00011">OptimizationViews::Validate()</a>.</p>
<div class="fragment"><div class="line"><a name="l00231"></a><span class="lineno">  231</span>&#160;{</div><div class="line"><a name="l00232"></a><span class="lineno">  232</span>&#160;    <span class="keywordflow">return</span> m_IInputSlots;</div><div class="line"><a name="l00233"></a><span class="lineno">  233</span>&#160;}</div></div><!-- fragment -->
</div>
</div>
<a id="a92f32e6689a8fe52aa043ba5395c7b57"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a92f32e6689a8fe52aa043ba5395c7b57">&#9670;&nbsp;</a></span>GetIOutputSlot() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">const <a class="el" href="classarmnn_1_1_i_output_slot.xhtml">IOutputSlot</a> * GetIOutputSlot </td>
          <td>(</td>
          <td class="paramtype">unsigned int&#160;</td>
          <td class="paramname"><em>index</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_subgraph_view_8cpp_source.xhtml#l00270">270</a> of file <a class="el" href="_subgraph_view_8cpp_source.xhtml">SubgraphView.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00271"></a><span class="lineno">  271</span>&#160;{</div><div class="line"><a name="l00272"></a><span class="lineno">  272</span>&#160;    <span class="keywordflow">return</span> m_IOutputSlots.at(index);</div><div class="line"><a name="l00273"></a><span class="lineno">  273</span>&#160;}</div></div><!-- fragment -->
</div>
</div>
<a id="ab48f73bad75377de628634fd9e807879"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ab48f73bad75377de628634fd9e807879">&#9670;&nbsp;</a></span>GetIOutputSlot() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarmnn_1_1_i_output_slot.xhtml">IOutputSlot</a> * GetIOutputSlot </td>
          <td>(</td>
          <td class="paramtype">unsigned int&#160;</td>
          <td class="paramname"><em>index</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_subgraph_view_8cpp_source.xhtml#l00280">280</a> of file <a class="el" href="_subgraph_view_8cpp_source.xhtml">SubgraphView.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00281"></a><span class="lineno">  281</span>&#160;{</div><div class="line"><a name="l00282"></a><span class="lineno">  282</span>&#160;    <span class="keywordflow">return</span> m_IOutputSlots.at(index);</div><div class="line"><a name="l00283"></a><span class="lineno">  283</span>&#160;}</div></div><!-- fragment -->
</div>
</div>
<a id="adc4e3f28ec3906680f1a25a7b1a3e8f9"></a>
<h2 class="memtitle"><span class="permalink"><a href="#adc4e3f28ec3906680f1a25a7b1a3e8f9">&#9670;&nbsp;</a></span>GetIOutputSlots()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">const <a class="el" href="classarmnn_1_1_subgraph_view.xhtml#a3f717693851810942d3ae0180a97fb4c">SubgraphView::IOutputSlots</a> &amp; GetIOutputSlots </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_subgraph_view_8cpp_source.xhtml#l00240">240</a> of file <a class="el" href="_subgraph_view_8cpp_source.xhtml">SubgraphView.cpp</a>.</p>

<p class="reference">Referenced by <a class="el" href="_subgraph_view_8cpp_source.xhtml#l00419">SubgraphView::GetWorkingCopy()</a>, <a class="el" href="_graph_8cpp_source.xhtml#l00444">Graph::SubstituteSubgraph()</a>, <a class="el" href="_subgraph_view_tests_8cpp_source.xhtml#l00693">TEST_SUITE()</a>, and <a class="el" href="_optimization_views_8cpp_source.xhtml#l00011">OptimizationViews::Validate()</a>.</p>
<div class="fragment"><div class="line"><a name="l00241"></a><span class="lineno">  241</span>&#160;{</div><div class="line"><a name="l00242"></a><span class="lineno">  242</span>&#160;    <span class="keywordflow">return</span> m_IOutputSlots;</div><div class="line"><a name="l00243"></a><span class="lineno">  243</span>&#160;}</div></div><!-- fragment -->
</div>
</div>
<a id="a6cbf14f4d57ef2de2cfed9a903db1643"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a6cbf14f4d57ef2de2cfed9a903db1643">&#9670;&nbsp;</a></span>GetNumInputSlots()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">unsigned int GetNumInputSlots </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_subgraph_view_8cpp_source.xhtml#l00285">285</a> of file <a class="el" href="_subgraph_view_8cpp_source.xhtml">SubgraphView.cpp</a>.</p>

<p class="reference">References <a class="el" href="_numeric_cast_8hpp_source.xhtml#l00035">armnn::numeric_cast()</a>.</p>
<div class="fragment"><div class="line"><a name="l00286"></a><span class="lineno">  286</span>&#160;{</div><div class="line"><a name="l00287"></a><span class="lineno">  287</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="namespacearmnn.xhtml#a375ca3cff9f1b005d1412dc5f3cf5b6e">armnn::numeric_cast</a>&lt;<span class="keywordtype">unsigned</span> <span class="keywordtype">int</span>&gt;(m_IInputSlots.size());</div><div class="line"><a name="l00288"></a><span class="lineno">  288</span>&#160;}</div><div class="ttc" id="namespacearmnn_xhtml_a375ca3cff9f1b005d1412dc5f3cf5b6e"><div class="ttname"><a href="namespacearmnn.xhtml#a375ca3cff9f1b005d1412dc5f3cf5b6e">armnn::numeric_cast</a></div><div class="ttdeci">std::enable_if_t&lt; std::is_unsigned&lt; Source &gt;::value &amp;&amp;std::is_unsigned&lt; Dest &gt;::value, Dest &gt; numeric_cast(Source source)</div><div class="ttdef"><b>Definition:</b> <a href="_numeric_cast_8hpp_source.xhtml#l00035">NumericCast.hpp:35</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="a59a4100374e80a3504f4bb4d13695d0b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a59a4100374e80a3504f4bb4d13695d0b">&#9670;&nbsp;</a></span>GetNumOutputSlots()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">unsigned int GetNumOutputSlots </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_subgraph_view_8cpp_source.xhtml#l00290">290</a> of file <a class="el" href="_subgraph_view_8cpp_source.xhtml">SubgraphView.cpp</a>.</p>

<p class="reference">References <a class="el" href="_numeric_cast_8hpp_source.xhtml#l00035">armnn::numeric_cast()</a>.</p>
<div class="fragment"><div class="line"><a name="l00291"></a><span class="lineno">  291</span>&#160;{</div><div class="line"><a name="l00292"></a><span class="lineno">  292</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="namespacearmnn.xhtml#a375ca3cff9f1b005d1412dc5f3cf5b6e">armnn::numeric_cast</a>&lt;<span class="keywordtype">unsigned</span> <span class="keywordtype">int</span>&gt;(m_IOutputSlots.size());</div><div class="line"><a name="l00293"></a><span class="lineno">  293</span>&#160;}</div><div class="ttc" id="namespacearmnn_xhtml_a375ca3cff9f1b005d1412dc5f3cf5b6e"><div class="ttname"><a href="namespacearmnn.xhtml#a375ca3cff9f1b005d1412dc5f3cf5b6e">armnn::numeric_cast</a></div><div class="ttdeci">std::enable_if_t&lt; std::is_unsigned&lt; Source &gt;::value &amp;&amp;std::is_unsigned&lt; Dest &gt;::value, Dest &gt; numeric_cast(Source source)</div><div class="ttdef"><b>Definition:</b> <a href="_numeric_cast_8hpp_source.xhtml#l00035">NumericCast.hpp:35</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="acb857f550caed75701ee92cbd9a2898c"></a>
<h2 class="memtitle"><span class="permalink"><a href="#acb857f550caed75701ee92cbd9a2898c">&#9670;&nbsp;</a></span>GetWorkingCopy()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarmnn_1_1_subgraph_view.xhtml">SubgraphView</a> GetWorkingCopy </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>This method returns a copy of the original <a class="el" href="classarmnn_1_1_subgraph_view.xhtml" title="The SubgraphView class represents a subgraph of a Graph. ">SubgraphView</a> provided by OptimizeSubgraphView with a separate underlying graph from the main ArmNN graph. </p>
<p>Backend users should edit this working copy and then add it as a SubstitutionPair, along with original <a class="el" href="classarmnn_1_1_subgraph_view.xhtml" title="The SubgraphView class represents a subgraph of a Graph. ">SubgraphView</a>, to the <a class="el" href="classarmnn_1_1_optimization_views.xhtml">OptimizationViews</a> returned by OptimizeSubgraphView. ArmNN will then decide on whether or not to carry out Substitution of the two SubgraphViews. </p>

<p class="definition">Definition at line <a class="el" href="_subgraph_view_8cpp_source.xhtml#l00419">419</a> of file <a class="el" href="_subgraph_view_8cpp_source.xhtml">SubgraphView.cpp</a>.</p>

<p class="reference">References <a class="el" href="_subgraph_view_8cpp_source.xhtml#l00300">SubgraphView::GetIConnectableLayers()</a>, <a class="el" href="_subgraph_view_8cpp_source.xhtml#l00230">SubgraphView::GetIInputSlots()</a>, <a class="el" href="classarmnn_1_1_i_connectable_layer.xhtml#a6ec9e0eb66d7d6a01240492a0b18104c">IConnectableLayer::GetInputSlot()</a>, <a class="el" href="_subgraph_view_8cpp_source.xhtml#l00240">SubgraphView::GetIOutputSlots()</a>, <a class="el" href="classarmnn_1_1_i_connectable_layer.xhtml#a9c2cba04b6d7ace4fc2a2436b82a5a63">IConnectableLayer::GetNumInputSlots()</a>, <a class="el" href="classarmnn_1_1_i_connectable_layer.xhtml#ac2dac3b61c94de52093616be4ab17f8d">IConnectableLayer::GetNumOutputSlots()</a>, <a class="el" href="classarmnn_1_1_i_connectable_layer.xhtml#a80ac4eda2e7f2757ec9dd96fc96dbd16">IConnectableLayer::GetOutputSlot()</a>, <a class="el" href="classarmnn_1_1_i_connectable_layer.xhtml#adceb04ae84c524e4d01881e3754a4d59">IConnectableLayer::GetType()</a>, and <a class="el" href="namespacearmnn.xhtml#a56943a0946e5f15e5e58054b8e7a04a4a29c2c02a361c9d7028472e5d92cd4a54">armnn::Output</a>.</p>

<p class="reference">Referenced by <a class="el" href="_subgraph_view_tests_8cpp_source.xhtml#l01620">TEST_SUITE()</a>.</p>
<div class="fragment"><div class="line"><a name="l00420"></a><span class="lineno">  420</span>&#160;{</div><div class="line"><a name="l00421"></a><span class="lineno">  421</span>&#160;    <span class="keywordflow">if</span> (p_WorkingCopyImpl)</div><div class="line"><a name="l00422"></a><span class="lineno">  422</span>&#160;    {</div><div class="line"><a name="l00423"></a><span class="lineno">  423</span>&#160;        <span class="keywordflow">throw</span> Exception(<span class="stringliteral">&quot;The SubgraphView calling GetWorkingCopy() is already a working copy. This function &quot;</span></div><div class="line"><a name="l00424"></a><span class="lineno">  424</span>&#160;                        <span class="stringliteral">&quot;should be called on original SubgraphView obtained from OptimizeSubgraphView()&quot;</span>);</div><div class="line"><a name="l00425"></a><span class="lineno">  425</span>&#160;    }</div><div class="line"><a name="l00426"></a><span class="lineno">  426</span>&#160;</div><div class="line"><a name="l00427"></a><span class="lineno">  427</span>&#160;    <span class="comment">// Create a cut down SubgraphView with underlying graph containing only the relevant layers.</span></div><div class="line"><a name="l00428"></a><span class="lineno">  428</span>&#160;    <span class="comment">// It needs its own underlying layers so that they can be replaced safely.</span></div><div class="line"><a name="l00429"></a><span class="lineno">  429</span>&#160;    Graph newGraph = Graph();</div><div class="line"><a name="l00430"></a><span class="lineno">  430</span>&#160;    std::unordered_map&lt;const IConnectableLayer*, IConnectableLayer*&gt; originalToClonedLayerMap;</div><div class="line"><a name="l00431"></a><span class="lineno">  431</span>&#160;    std::list&lt;armnn::IConnectableLayer*&gt; originalSubgraphLayers = <a class="code" href="classarmnn_1_1_subgraph_view.xhtml#a8055e06b4f21d51fd8b4fc22ead2bdf0">GetIConnectableLayers</a>();</div><div class="line"><a name="l00432"></a><span class="lineno">  432</span>&#160;</div><div class="line"><a name="l00433"></a><span class="lineno">  433</span>&#160;    <span class="keyword">auto</span> ptr = std::make_shared&lt;SubgraphViewWorkingCopy&gt;(std::move(newGraph));</div><div class="line"><a name="l00434"></a><span class="lineno">  434</span>&#160;    <a class="code" href="classarmnn_1_1_subgraph_view.xhtml#a4ad949634fd697549da161eb09d8b7fd">SubgraphView::IInputSlots</a> workingCopyInputs;</div><div class="line"><a name="l00435"></a><span class="lineno">  435</span>&#160;</div><div class="line"><a name="l00436"></a><span class="lineno">  436</span>&#160;    <span class="keywordflow">for</span> (<span class="keyword">auto</span>&amp;&amp; originalLayer : originalSubgraphLayers)</div><div class="line"><a name="l00437"></a><span class="lineno">  437</span>&#160;    {</div><div class="line"><a name="l00438"></a><span class="lineno">  438</span>&#160;        <a class="code" href="namespacearmnn_serializer.xhtml#a9a8118be7780e95363d631cbca7e7800">Layer</a>* <span class="keyword">const</span> layer = PolymorphicDowncast&lt;const Layer*&gt;(originalLayer)-&gt;Clone(ptr-&gt;m_Graph);</div><div class="line"><a name="l00439"></a><span class="lineno">  439</span>&#160;        originalToClonedLayerMap.emplace(originalLayer, layer);</div><div class="line"><a name="l00440"></a><span class="lineno">  440</span>&#160;    }</div><div class="line"><a name="l00441"></a><span class="lineno">  441</span>&#160;</div><div class="line"><a name="l00442"></a><span class="lineno">  442</span>&#160;    <span class="comment">// Add IInputSlots to workingCopy</span></div><div class="line"><a name="l00443"></a><span class="lineno">  443</span>&#160;    std::vector&lt;const IConnectableLayer*&gt; processed;</div><div class="line"><a name="l00444"></a><span class="lineno">  444</span>&#160;    <span class="keywordflow">for</span> (<span class="keyword">auto</span> originalSubgraphInputSlot : <a class="code" href="classarmnn_1_1_subgraph_view.xhtml#ada17adb05f8061fffa3e193544795fd5">GetIInputSlots</a>())</div><div class="line"><a name="l00445"></a><span class="lineno">  445</span>&#160;    {</div><div class="line"><a name="l00446"></a><span class="lineno">  446</span>&#160;        <span class="keyword">const</span> IConnectableLayer&amp; originalSubgraphLayer =</div><div class="line"><a name="l00447"></a><span class="lineno">  447</span>&#160;                PolymorphicDowncast&lt;InputSlot*&gt;(originalSubgraphInputSlot)-&gt;GetOwningLayer();</div><div class="line"><a name="l00448"></a><span class="lineno">  448</span>&#160;</div><div class="line"><a name="l00449"></a><span class="lineno">  449</span>&#160;        <span class="comment">// Only need process Slots of layer once</span></div><div class="line"><a name="l00450"></a><span class="lineno">  450</span>&#160;        <span class="keywordflow">if</span> (std::find(processed.begin(), processed.end(), &amp;originalSubgraphLayer) == processed.end())</div><div class="line"><a name="l00451"></a><span class="lineno">  451</span>&#160;        {</div><div class="line"><a name="l00452"></a><span class="lineno">  452</span>&#160;            IConnectableLayer* clonedLayer = originalToClonedLayerMap[&amp;originalSubgraphLayer];</div><div class="line"><a name="l00453"></a><span class="lineno">  453</span>&#160;</div><div class="line"><a name="l00454"></a><span class="lineno">  454</span>&#160;            <span class="comment">// Add the InputSlot to WorkingCopy InputSlots</span></div><div class="line"><a name="l00455"></a><span class="lineno">  455</span>&#160;            <span class="keywordflow">for</span> (<span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> i = 0; i &lt; clonedLayer-&gt;GetNumInputSlots(); i++)</div><div class="line"><a name="l00456"></a><span class="lineno">  456</span>&#160;            {</div><div class="line"><a name="l00457"></a><span class="lineno">  457</span>&#160;                workingCopyInputs.push_back(&amp;clonedLayer-&gt;GetInputSlot(i));</div><div class="line"><a name="l00458"></a><span class="lineno">  458</span>&#160;            }</div><div class="line"><a name="l00459"></a><span class="lineno">  459</span>&#160;            processed.push_back(&amp;originalSubgraphLayer);</div><div class="line"><a name="l00460"></a><span class="lineno">  460</span>&#160;        }</div><div class="line"><a name="l00461"></a><span class="lineno">  461</span>&#160;    }</div><div class="line"><a name="l00462"></a><span class="lineno">  462</span>&#160;    <span class="comment">// Empty processed</span></div><div class="line"><a name="l00463"></a><span class="lineno">  463</span>&#160;    processed.clear();</div><div class="line"><a name="l00464"></a><span class="lineno">  464</span>&#160;</div><div class="line"><a name="l00465"></a><span class="lineno">  465</span>&#160;    <span class="keywordflow">for</span> (<span class="keyword">auto</span> originalSubgraphLayer : originalSubgraphLayers)</div><div class="line"><a name="l00466"></a><span class="lineno">  466</span>&#160;    {</div><div class="line"><a name="l00467"></a><span class="lineno">  467</span>&#160;        IConnectableLayer* <span class="keyword">const</span> clonedLayer = originalToClonedLayerMap[originalSubgraphLayer];</div><div class="line"><a name="l00468"></a><span class="lineno">  468</span>&#160;</div><div class="line"><a name="l00469"></a><span class="lineno">  469</span>&#160;        <span class="comment">// connect all cloned layers as per original subgraph</span></div><div class="line"><a name="l00470"></a><span class="lineno">  470</span>&#160;        <span class="keywordflow">for</span> (<span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> i = 0; i &lt; clonedLayer-&gt;GetNumOutputSlots(); i++)</div><div class="line"><a name="l00471"></a><span class="lineno">  471</span>&#160;        {</div><div class="line"><a name="l00472"></a><span class="lineno">  472</span>&#160;            <span class="comment">// OutputLayers have no OutputSlots to be connected</span></div><div class="line"><a name="l00473"></a><span class="lineno">  473</span>&#160;            <span class="keywordflow">if</span> (clonedLayer-&gt;GetType() != <a class="code" href="namespacearmnn.xhtml#a56943a0946e5f15e5e58054b8e7a04a4a29c2c02a361c9d7028472e5d92cd4a54">LayerType::Output</a>)</div><div class="line"><a name="l00474"></a><span class="lineno">  474</span>&#160;            {</div><div class="line"><a name="l00475"></a><span class="lineno">  475</span>&#160;                <span class="keyword">auto</span>&amp; outputSlot = clonedLayer-&gt;GetOutputSlot(i);</div><div class="line"><a name="l00476"></a><span class="lineno">  476</span>&#160;                <span class="keywordflow">for</span> (<span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> k = 0; k &lt; originalSubgraphLayer-&gt;GetNumOutputSlots(); k++)</div><div class="line"><a name="l00477"></a><span class="lineno">  477</span>&#160;                {</div><div class="line"><a name="l00478"></a><span class="lineno">  478</span>&#160;                    <span class="keyword">auto</span>&amp; originalOutputSlot = originalSubgraphLayer-&gt;GetOutputSlot(k);</div><div class="line"><a name="l00479"></a><span class="lineno">  479</span>&#160;                    <span class="keywordflow">for</span> (<span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> j = 0; j &lt; originalOutputSlot.GetNumConnections(); j++)</div><div class="line"><a name="l00480"></a><span class="lineno">  480</span>&#160;                    {</div><div class="line"><a name="l00481"></a><span class="lineno">  481</span>&#160;                        <span class="comment">// nextLayer is the layer with IInputSlot connected to IOutputSlot we are working on</span></div><div class="line"><a name="l00482"></a><span class="lineno">  482</span>&#160;                        <span class="keyword">const</span> IConnectableLayer&amp; nextLayer =</div><div class="line"><a name="l00483"></a><span class="lineno">  483</span>&#160;                                originalOutputSlot.GetConnection(j)-&gt;GetOwningIConnectableLayer();</div><div class="line"><a name="l00484"></a><span class="lineno">  484</span>&#160;</div><div class="line"><a name="l00485"></a><span class="lineno">  485</span>&#160;                        <span class="comment">// Check the layer is in our map and so has a clonedLayer</span></div><div class="line"><a name="l00486"></a><span class="lineno">  486</span>&#160;                        <span class="keywordflow">if</span> (originalToClonedLayerMap.find(&amp;nextLayer) != originalToClonedLayerMap.end())</div><div class="line"><a name="l00487"></a><span class="lineno">  487</span>&#160;                        {</div><div class="line"><a name="l00488"></a><span class="lineno">  488</span>&#160;                            IConnectableLayer* newGraphTargetLayer = originalToClonedLayerMap[&amp;nextLayer];</div><div class="line"><a name="l00489"></a><span class="lineno">  489</span>&#160;</div><div class="line"><a name="l00490"></a><span class="lineno">  490</span>&#160;                            IInputSlot&amp; inputSlot =</div><div class="line"><a name="l00491"></a><span class="lineno">  491</span>&#160;                                    newGraphTargetLayer-&gt;GetInputSlot(</div><div class="line"><a name="l00492"></a><span class="lineno">  492</span>&#160;                                            PolymorphicDowncast&lt;OutputSlot*&gt;(</div><div class="line"><a name="l00493"></a><span class="lineno">  493</span>&#160;                                                    &amp;originalOutputSlot)-&gt;GetConnection(j)-&gt;GetSlotIndex());</div><div class="line"><a name="l00494"></a><span class="lineno">  494</span>&#160;</div><div class="line"><a name="l00495"></a><span class="lineno">  495</span>&#160;                            <span class="comment">// Then make the connection</span></div><div class="line"><a name="l00496"></a><span class="lineno">  496</span>&#160;                            outputSlot.Connect(inputSlot);</div><div class="line"><a name="l00497"></a><span class="lineno">  497</span>&#160;                        }</div><div class="line"><a name="l00498"></a><span class="lineno">  498</span>&#160;                    }</div><div class="line"><a name="l00499"></a><span class="lineno">  499</span>&#160;                    <span class="comment">// Copy the tensorInfo to the clonedOutputSlot</span></div><div class="line"><a name="l00500"></a><span class="lineno">  500</span>&#160;                    outputSlot.SetTensorInfo(originalOutputSlot.GetTensorInfo());</div><div class="line"><a name="l00501"></a><span class="lineno">  501</span>&#160;                }</div><div class="line"><a name="l00502"></a><span class="lineno">  502</span>&#160;            }</div><div class="line"><a name="l00503"></a><span class="lineno">  503</span>&#160;        }</div><div class="line"><a name="l00504"></a><span class="lineno">  504</span>&#160;    }</div><div class="line"><a name="l00505"></a><span class="lineno">  505</span>&#160;</div><div class="line"><a name="l00506"></a><span class="lineno">  506</span>&#160;    <a class="code" href="classarmnn_1_1_subgraph_view.xhtml#a3f717693851810942d3ae0180a97fb4c">SubgraphView::IOutputSlots</a> workingCopyOutputs;</div><div class="line"><a name="l00507"></a><span class="lineno">  507</span>&#160;</div><div class="line"><a name="l00508"></a><span class="lineno">  508</span>&#160;    <span class="comment">// Add IOutputSlots to workingCopy</span></div><div class="line"><a name="l00509"></a><span class="lineno">  509</span>&#160;    <span class="keywordflow">for</span> (<span class="keyword">auto</span> outputSlot : <a class="code" href="classarmnn_1_1_subgraph_view.xhtml#adc4e3f28ec3906680f1a25a7b1a3e8f9">GetIOutputSlots</a>())</div><div class="line"><a name="l00510"></a><span class="lineno">  510</span>&#160;    {</div><div class="line"><a name="l00511"></a><span class="lineno">  511</span>&#160;</div><div class="line"><a name="l00512"></a><span class="lineno">  512</span>&#160;        <span class="keyword">const</span> IConnectableLayer&amp; originalSubgraphLayer = outputSlot-&gt;GetOwningIConnectableLayer();</div><div class="line"><a name="l00513"></a><span class="lineno">  513</span>&#160;</div><div class="line"><a name="l00514"></a><span class="lineno">  514</span>&#160;        <span class="comment">// OutputLayers have no OutputSlots to be connected</span></div><div class="line"><a name="l00515"></a><span class="lineno">  515</span>&#160;        <span class="comment">// Only need process Slots of layer once</span></div><div class="line"><a name="l00516"></a><span class="lineno">  516</span>&#160;        <span class="keywordflow">if</span> (originalSubgraphLayer.GetType() != <a class="code" href="namespacearmnn.xhtml#a56943a0946e5f15e5e58054b8e7a04a4a29c2c02a361c9d7028472e5d92cd4a54">LayerType::Output</a> &amp;&amp;</div><div class="line"><a name="l00517"></a><span class="lineno">  517</span>&#160;            std::find(processed.begin(), processed.end(), &amp;originalSubgraphLayer) == processed.end())</div><div class="line"><a name="l00518"></a><span class="lineno">  518</span>&#160;        {</div><div class="line"><a name="l00519"></a><span class="lineno">  519</span>&#160;            IConnectableLayer* clonedLayer = originalToClonedLayerMap[&amp;originalSubgraphLayer];</div><div class="line"><a name="l00520"></a><span class="lineno">  520</span>&#160;</div><div class="line"><a name="l00521"></a><span class="lineno">  521</span>&#160;            <span class="comment">// Add the OutputSlot to WorkingCopy InputSlots</span></div><div class="line"><a name="l00522"></a><span class="lineno">  522</span>&#160;            <span class="keywordflow">for</span> (<span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> i = 0; i &lt; clonedLayer-&gt;GetNumOutputSlots(); i++)</div><div class="line"><a name="l00523"></a><span class="lineno">  523</span>&#160;            {</div><div class="line"><a name="l00524"></a><span class="lineno">  524</span>&#160;                workingCopyOutputs.push_back(&amp;clonedLayer-&gt;GetOutputSlot(i));</div><div class="line"><a name="l00525"></a><span class="lineno">  525</span>&#160;            }</div><div class="line"><a name="l00526"></a><span class="lineno">  526</span>&#160;            processed.push_back(&amp;originalSubgraphLayer);</div><div class="line"><a name="l00527"></a><span class="lineno">  527</span>&#160;        }</div><div class="line"><a name="l00528"></a><span class="lineno">  528</span>&#160;    }</div><div class="line"><a name="l00529"></a><span class="lineno">  529</span>&#160;    processed.clear();</div><div class="line"><a name="l00530"></a><span class="lineno">  530</span>&#160;</div><div class="line"><a name="l00531"></a><span class="lineno">  531</span>&#160;    <a class="code" href="classarmnn_1_1_subgraph_view.xhtml#ad7c7687cd3542e5cbb45e56f9a9456e7">SubgraphView::IConnectableLayers</a> workingCopyLayers;</div><div class="line"><a name="l00532"></a><span class="lineno">  532</span>&#160;    <span class="keywordflow">for</span> (<span class="keyword">auto</span>&amp; pair : originalToClonedLayerMap)</div><div class="line"><a name="l00533"></a><span class="lineno">  533</span>&#160;    {</div><div class="line"><a name="l00534"></a><span class="lineno">  534</span>&#160;        workingCopyLayers.push_back(pair.second);</div><div class="line"><a name="l00535"></a><span class="lineno">  535</span>&#160;    }</div><div class="line"><a name="l00536"></a><span class="lineno">  536</span>&#160;</div><div class="line"><a name="l00537"></a><span class="lineno">  537</span>&#160;    <span class="keywordflow">return</span> {std::move(workingCopyLayers),</div><div class="line"><a name="l00538"></a><span class="lineno">  538</span>&#160;            std::move(workingCopyInputs),</div><div class="line"><a name="l00539"></a><span class="lineno">  539</span>&#160;            std::move(workingCopyOutputs),</div><div class="line"><a name="l00540"></a><span class="lineno">  540</span>&#160;            ptr};</div><div class="line"><a name="l00541"></a><span class="lineno">  541</span>&#160;}</div><div class="ttc" id="classarmnn_1_1_subgraph_view_xhtml_adc4e3f28ec3906680f1a25a7b1a3e8f9"><div class="ttname"><a href="classarmnn_1_1_subgraph_view.xhtml#adc4e3f28ec3906680f1a25a7b1a3e8f9">armnn::SubgraphView::GetIOutputSlots</a></div><div class="ttdeci">const IOutputSlots &amp; GetIOutputSlots() const</div><div class="ttdef"><b>Definition:</b> <a href="_subgraph_view_8cpp_source.xhtml#l00240">SubgraphView.cpp:240</a></div></div>
<div class="ttc" id="classarmnn_1_1_subgraph_view_xhtml_a8055e06b4f21d51fd8b4fc22ead2bdf0"><div class="ttname"><a href="classarmnn_1_1_subgraph_view.xhtml#a8055e06b4f21d51fd8b4fc22ead2bdf0">armnn::SubgraphView::GetIConnectableLayers</a></div><div class="ttdeci">const IConnectableLayers &amp; GetIConnectableLayers() const</div><div class="ttdef"><b>Definition:</b> <a href="_subgraph_view_8cpp_source.xhtml#l00300">SubgraphView.cpp:300</a></div></div>
<div class="ttc" id="classarmnn_1_1_subgraph_view_xhtml_ada17adb05f8061fffa3e193544795fd5"><div class="ttname"><a href="classarmnn_1_1_subgraph_view.xhtml#ada17adb05f8061fffa3e193544795fd5">armnn::SubgraphView::GetIInputSlots</a></div><div class="ttdeci">const IInputSlots &amp; GetIInputSlots() const</div><div class="ttdef"><b>Definition:</b> <a href="_subgraph_view_8cpp_source.xhtml#l00230">SubgraphView.cpp:230</a></div></div>
<div class="ttc" id="namespacearmnn_serializer_xhtml_a9a8118be7780e95363d631cbca7e7800"><div class="ttname"><a href="namespacearmnn_serializer.xhtml#a9a8118be7780e95363d631cbca7e7800">armnnSerializer::Layer</a></div><div class="ttdeci">Layer</div><div class="ttdef"><b>Definition:</b> <a href="_armnn_schema__generated_8h_source.xhtml#l01243">ArmnnSchema_generated.h:1243</a></div></div>
<div class="ttc" id="namespacearmnn_xhtml_a56943a0946e5f15e5e58054b8e7a04a4a29c2c02a361c9d7028472e5d92cd4a54"><div class="ttname"><a href="namespacearmnn.xhtml#a56943a0946e5f15e5e58054b8e7a04a4a29c2c02a361c9d7028472e5d92cd4a54">armnn::LayerType::Output</a></div></div>
<div class="ttc" id="classarmnn_1_1_subgraph_view_xhtml_ad7c7687cd3542e5cbb45e56f9a9456e7"><div class="ttname"><a href="classarmnn_1_1_subgraph_view.xhtml#ad7c7687cd3542e5cbb45e56f9a9456e7">armnn::SubgraphView::IConnectableLayers</a></div><div class="ttdeci">std::list&lt; IConnectableLayer * &gt; IConnectableLayers</div><div class="ttdef"><b>Definition:</b> <a href="include_2armnn_2backends_2_subgraph_view_8hpp_source.xhtml#l00054">SubgraphView.hpp:54</a></div></div>
<div class="ttc" id="classarmnn_1_1_subgraph_view_xhtml_a3f717693851810942d3ae0180a97fb4c"><div class="ttname"><a href="classarmnn_1_1_subgraph_view.xhtml#a3f717693851810942d3ae0180a97fb4c">armnn::SubgraphView::IOutputSlots</a></div><div class="ttdeci">std::vector&lt; IOutputSlot * &gt; IOutputSlots</div><div class="ttdef"><b>Definition:</b> <a href="include_2armnn_2backends_2_subgraph_view_8hpp_source.xhtml#l00052">SubgraphView.hpp:52</a></div></div>
<div class="ttc" id="classarmnn_1_1_subgraph_view_xhtml_a4ad949634fd697549da161eb09d8b7fd"><div class="ttname"><a href="classarmnn_1_1_subgraph_view.xhtml#a4ad949634fd697549da161eb09d8b7fd">armnn::SubgraphView::IInputSlots</a></div><div class="ttdeci">std::vector&lt; IInputSlot * &gt; IInputSlots</div><div class="ttdef"><b>Definition:</b> <a href="include_2armnn_2backends_2_subgraph_view_8hpp_source.xhtml#l00050">SubgraphView.hpp:50</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="aae84cdbe05d87942f8ce0a2576c8a7c8"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aae84cdbe05d87942f8ce0a2576c8a7c8">&#9670;&nbsp;</a></span>operator=()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarmnn_1_1_subgraph_view.xhtml">SubgraphView</a> &amp; operator= </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classarmnn_1_1_subgraph_view.xhtml">SubgraphView</a> &amp;&amp;&#160;</td>
          <td class="paramname"><em>other</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Move-assignment operator. </p>

<p class="definition">Definition at line <a class="el" href="_subgraph_view_8cpp_source.xhtml#l00189">189</a> of file <a class="el" href="_subgraph_view_8cpp_source.xhtml">SubgraphView.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00190"></a><span class="lineno">  190</span>&#160;{</div><div class="line"><a name="l00191"></a><span class="lineno">  191</span>&#160;    m_InputSlots = std::move(other.m_InputSlots);</div><div class="line"><a name="l00192"></a><span class="lineno">  192</span>&#160;    m_IInputSlots = std::move(other.m_IInputSlots);</div><div class="line"><a name="l00193"></a><span class="lineno">  193</span>&#160;    m_OutputSlots = std::move(other.m_OutputSlots);</div><div class="line"><a name="l00194"></a><span class="lineno">  194</span>&#160;    m_IOutputSlots = std::move(other.m_IOutputSlots);</div><div class="line"><a name="l00195"></a><span class="lineno">  195</span>&#160;    m_Layers = std::move(other.m_Layers);</div><div class="line"><a name="l00196"></a><span class="lineno">  196</span>&#160;    m_IConnectableLayers = std::move(other.m_IConnectableLayers);</div><div class="line"><a name="l00197"></a><span class="lineno">  197</span>&#160;</div><div class="line"><a name="l00198"></a><span class="lineno">  198</span>&#160;    CheckSubgraph();</div><div class="line"><a name="l00199"></a><span class="lineno">  199</span>&#160;</div><div class="line"><a name="l00200"></a><span class="lineno">  200</span>&#160;    <span class="keywordflow">return</span> *<span class="keyword">this</span>;</div><div class="line"><a name="l00201"></a><span class="lineno">  201</span>&#160;}</div></div><!-- fragment -->
</div>
</div>
<a id="ae9da449c038607237135b6b543890a15"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ae9da449c038607237135b6b543890a15">&#9670;&nbsp;</a></span>SubstituteSubgraph() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void SubstituteSubgraph </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classarmnn_1_1_subgraph_view.xhtml">SubgraphView</a> &amp;&#160;</td>
          <td class="paramname"><em>subgraph</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="classarmnn_1_1_i_connectable_layer.xhtml">IConnectableLayer</a> *&#160;</td>
          <td class="paramname"><em>substituteLayer</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>These methods should be called on a working copy subgraph created from GetWorkingCopy. </p>
<p>They take a <a class="el" href="classarmnn_1_1_subgraph_view.xhtml" title="The SubgraphView class represents a subgraph of a Graph. ">SubgraphView</a> pattern to replace and the substitute layer or subgraphView to substitute in. </p>

<p class="definition">Definition at line <a class="el" href="_subgraph_view_8cpp_source.xhtml#l00543">543</a> of file <a class="el" href="_subgraph_view_8cpp_source.xhtml">SubgraphView.cpp</a>.</p>

<p class="reference">References <a class="el" href="_assert_8hpp_source.xhtml#l00014">ARMNN_ASSERT</a>.</p>

<p class="reference">Referenced by <a class="el" href="_subgraph_view_tests_8cpp_source.xhtml#l01620">TEST_SUITE()</a>.</p>
<div class="fragment"><div class="line"><a name="l00544"></a><span class="lineno">  544</span>&#160;{</div><div class="line"><a name="l00545"></a><span class="lineno">  545</span>&#160;    <a class="code" href="_assert_8hpp.xhtml#a5698be69cbd5dfe6c28fcd9867e8cbed">ARMNN_ASSERT</a>(substituteLayer != <span class="keyword">nullptr</span>);</div><div class="line"><a name="l00546"></a><span class="lineno">  546</span>&#160;    <a class="code" href="classarmnn_1_1_subgraph_view.xhtml#a40bb9799fd918fa31f983cc5aa156828">SubgraphView</a> substituteSubgraph(substituteLayer);</div><div class="line"><a name="l00547"></a><span class="lineno">  547</span>&#160;</div><div class="line"><a name="l00548"></a><span class="lineno">  548</span>&#160;    <a class="code" href="classarmnn_1_1_subgraph_view.xhtml#ae9da449c038607237135b6b543890a15">SubstituteSubgraph</a>(subgraph, substituteSubgraph);</div><div class="line"><a name="l00549"></a><span class="lineno">  549</span>&#160;}</div><div class="ttc" id="classarmnn_1_1_subgraph_view_xhtml_ae9da449c038607237135b6b543890a15"><div class="ttname"><a href="classarmnn_1_1_subgraph_view.xhtml#ae9da449c038607237135b6b543890a15">armnn::SubgraphView::SubstituteSubgraph</a></div><div class="ttdeci">void SubstituteSubgraph(SubgraphView &amp;, IConnectableLayer *)</div><div class="ttdoc">These methods should be called on a working copy subgraph created from GetWorkingCopy. </div><div class="ttdef"><b>Definition:</b> <a href="_subgraph_view_8cpp_source.xhtml#l00543">SubgraphView.cpp:543</a></div></div>
<div class="ttc" id="_assert_8hpp_xhtml_a5698be69cbd5dfe6c28fcd9867e8cbed"><div class="ttname"><a href="_assert_8hpp.xhtml#a5698be69cbd5dfe6c28fcd9867e8cbed">ARMNN_ASSERT</a></div><div class="ttdeci">#define ARMNN_ASSERT(COND)</div><div class="ttdef"><b>Definition:</b> <a href="_assert_8hpp_source.xhtml#l00014">Assert.hpp:14</a></div></div>
<div class="ttc" id="classarmnn_1_1_subgraph_view_xhtml_a40bb9799fd918fa31f983cc5aa156828"><div class="ttname"><a href="classarmnn_1_1_subgraph_view.xhtml#a40bb9799fd918fa31f983cc5aa156828">armnn::SubgraphView::SubgraphView</a></div><div class="ttdeci">SubgraphView(Graph &amp;graph)</div><div class="ttdoc">Constructs a sub-graph from the entire given graph. </div><div class="ttdef"><b>Definition:</b> <a href="_subgraph_view_8cpp_source.xhtml#l00044">SubgraphView.cpp:44</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="a28472b80e6cb7415f58c18c60c158c24"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a28472b80e6cb7415f58c18c60c158c24">&#9670;&nbsp;</a></span>SubstituteSubgraph() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void SubstituteSubgraph </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classarmnn_1_1_subgraph_view.xhtml">SubgraphView</a> &amp;&#160;</td>
          <td class="paramname"><em>patternSubgraph</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_subgraph_view.xhtml">SubgraphView</a> &amp;&#160;</td>
          <td class="paramname"><em>substituteSubgraph</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_subgraph_view_8cpp_source.xhtml#l00551">551</a> of file <a class="el" href="_subgraph_view_8cpp_source.xhtml">SubgraphView.cpp</a>.</p>

<p class="reference">References <a class="el" href="include_2armnn_2backends_2_subgraph_view_8hpp_source.xhtml#l00038">SubgraphView::ForEachIConnectableLayer()</a>.</p>
<div class="fragment"><div class="line"><a name="l00552"></a><span class="lineno">  552</span>&#160;{</div><div class="line"><a name="l00553"></a><span class="lineno">  553</span>&#160;    <span class="keywordflow">if</span> (!p_WorkingCopyImpl)</div><div class="line"><a name="l00554"></a><span class="lineno">  554</span>&#160;    {</div><div class="line"><a name="l00555"></a><span class="lineno">  555</span>&#160;        <span class="keywordflow">throw</span> NullPointerException(<span class="stringliteral">&quot;The SubgraphView calling SubstituteSubgraphView is not a working copy. &quot;</span></div><div class="line"><a name="l00556"></a><span class="lineno">  556</span>&#160;                                   <span class="stringliteral">&quot;Call this function on SubgraphView returned from SubgraphView::GetWorkingCopy()&quot;</span>);</div><div class="line"><a name="l00557"></a><span class="lineno">  557</span>&#160;    }</div><div class="line"><a name="l00558"></a><span class="lineno">  558</span>&#160;</div><div class="line"><a name="l00559"></a><span class="lineno">  559</span>&#160;    <span class="comment">// Add substitute layer to the Main graph i.e. graph in p_WorkingCopyImpl</span></div><div class="line"><a name="l00560"></a><span class="lineno">  560</span>&#160;    <span class="keyword">auto</span> workingCopyGraph = &amp;p_WorkingCopyImpl-&gt;m_Graph;</div><div class="line"><a name="l00561"></a><span class="lineno">  561</span>&#160;    substituteSubgraph.ForEachIConnectableLayer([workingCopyGraph](IConnectableLayer* iConnectableLayer)</div><div class="line"><a name="l00562"></a><span class="lineno">  562</span>&#160;                                                {</div><div class="line"><a name="l00563"></a><span class="lineno">  563</span>&#160;                                                    <span class="comment">// Search WorkingCopy Graph for substituteLayer and add if missing</span></div><div class="line"><a name="l00564"></a><span class="lineno">  564</span>&#160;                                                    <span class="keywordflow">if</span> (std::find(std::begin(workingCopyGraph-&gt;m_Layers),</div><div class="line"><a name="l00565"></a><span class="lineno">  565</span>&#160;                                                                  std::end(workingCopyGraph-&gt;m_Layers),</div><div class="line"><a name="l00566"></a><span class="lineno">  566</span>&#160;                                                                  iConnectableLayer) ==</div><div class="line"><a name="l00567"></a><span class="lineno">  567</span>&#160;                                                        std::end(workingCopyGraph-&gt;m_Layers))</div><div class="line"><a name="l00568"></a><span class="lineno">  568</span>&#160;                                                    {</div><div class="line"><a name="l00569"></a><span class="lineno">  569</span>&#160;                                                        auto layer = PolymorphicDowncast&lt;Layer*&gt;(iConnectableLayer);</div><div class="line"><a name="l00570"></a><span class="lineno">  570</span>&#160;</div><div class="line"><a name="l00571"></a><span class="lineno">  571</span>&#160;                                                        layer-&gt;Reparent(*workingCopyGraph,</div><div class="line"><a name="l00572"></a><span class="lineno">  572</span>&#160;                                                                        (workingCopyGraph-&gt;m_Layers).end());</div><div class="line"><a name="l00573"></a><span class="lineno">  573</span>&#160;</div><div class="line"><a name="l00574"></a><span class="lineno">  574</span>&#160;                                                        workingCopyGraph-&gt;m_LayersInOrder = false;</div><div class="line"><a name="l00575"></a><span class="lineno">  575</span>&#160;                                                    }</div><div class="line"><a name="l00576"></a><span class="lineno">  576</span>&#160;                                                });</div><div class="line"><a name="l00577"></a><span class="lineno">  577</span>&#160;</div><div class="line"><a name="l00578"></a><span class="lineno">  578</span>&#160;    <span class="comment">// Replace the old connections with connections to new layer</span></div><div class="line"><a name="l00579"></a><span class="lineno">  579</span>&#160;    workingCopyGraph-&gt;ReplaceSubgraphConnections(patternSubgraph, substituteSubgraph);</div><div class="line"><a name="l00580"></a><span class="lineno">  580</span>&#160;</div><div class="line"><a name="l00581"></a><span class="lineno">  581</span>&#160;    <span class="comment">// Update input/outputSlot pointers</span></div><div class="line"><a name="l00582"></a><span class="lineno">  582</span>&#160;    m_IInputSlots = std::move(substituteSubgraph.m_IInputSlots);</div><div class="line"><a name="l00583"></a><span class="lineno">  583</span>&#160;    m_IOutputSlots = std::move(substituteSubgraph.m_IOutputSlots);</div><div class="line"><a name="l00584"></a><span class="lineno">  584</span>&#160;</div><div class="line"><a name="l00585"></a><span class="lineno">  585</span>&#160;    <span class="comment">// Delete the old layers.</span></div><div class="line"><a name="l00586"></a><span class="lineno">  586</span>&#160;    workingCopyGraph-&gt;EraseSubgraphLayers(patternSubgraph);</div><div class="line"><a name="l00587"></a><span class="lineno">  587</span>&#160;</div><div class="line"><a name="l00588"></a><span class="lineno">  588</span>&#160;    <span class="comment">// Sort</span></div><div class="line"><a name="l00589"></a><span class="lineno">  589</span>&#160;    workingCopyGraph-&gt;TopologicalSort();</div><div class="line"><a name="l00590"></a><span class="lineno">  590</span>&#160;</div><div class="line"><a name="l00591"></a><span class="lineno">  591</span>&#160;    <span class="comment">// Update SubgraphView layer pointers to match those of the internal WorkingCopy layer pointers</span></div><div class="line"><a name="l00592"></a><span class="lineno">  592</span>&#160;    m_IConnectableLayers = <a class="code" href="classarmnn_1_1_subgraph_view.xhtml#ad7c7687cd3542e5cbb45e56f9a9456e7">IConnectableLayers</a>{ workingCopyGraph-&gt;m_Layers.begin(),</div><div class="line"><a name="l00593"></a><span class="lineno">  593</span>&#160;                                               workingCopyGraph-&gt;m_Layers.end() };</div><div class="line"><a name="l00594"></a><span class="lineno">  594</span>&#160;}</div><div class="ttc" id="classarmnn_1_1_subgraph_view_xhtml_ad7c7687cd3542e5cbb45e56f9a9456e7"><div class="ttname"><a href="classarmnn_1_1_subgraph_view.xhtml#ad7c7687cd3542e5cbb45e56f9a9456e7">armnn::SubgraphView::IConnectableLayers</a></div><div class="ttdeci">std::list&lt; IConnectableLayer * &gt; IConnectableLayers</div><div class="ttdef"><b>Definition:</b> <a href="include_2armnn_2backends_2_subgraph_view_8hpp_source.xhtml#l00054">SubgraphView.hpp:54</a></div></div>
</div><!-- fragment -->
</div>
</div>
<h2 class="groupheader">Member Data Documentation</h2>
<a id="a5aeb684bf895052593e5239f133094ee"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a5aeb684bf895052593e5239f133094ee">&#9670;&nbsp;</a></span>layers</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarmnn_1_1_subgraph_view.xhtml#a78293334750ec5279eb9c96d56deaf08">OutputSlots</a> <a class="el" href="classarmnn_1_1_subgraph_view.xhtml#a74798938fdaeae75c8adfa4a7439e7f9">Layers</a>&amp;&amp; layers</td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="include_2armnn_2backends_2_subgraph_view_8hpp_source.xhtml#l00066">66</a> of file <a class="el" href="include_2armnn_2backends_2_subgraph_view_8hpp_source.xhtml">SubgraphView.hpp</a>.</p>

<p class="reference">Referenced by <a class="el" href="_subgraph_view_8cpp_source.xhtml#l00044">SubgraphView::SubgraphView()</a>.</p>

</div>
</div>
<a id="a342a59ed341e5f2e94dfaa34136573ef"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a342a59ed341e5f2e94dfaa34136573ef">&#9670;&nbsp;</a></span>outputs</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarmnn_1_1_subgraph_view.xhtml#a78293334750ec5279eb9c96d56deaf08">OutputSlots</a>&amp;&amp; outputs</td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="include_2armnn_2backends_2_subgraph_view_8hpp_source.xhtml#l00066">66</a> of file <a class="el" href="include_2armnn_2backends_2_subgraph_view_8hpp_source.xhtml">SubgraphView.hpp</a>.</p>

<p class="reference">Referenced by <a class="el" href="_subgraph_view_8cpp_source.xhtml#l00044">SubgraphView::SubgraphView()</a>.</p>

</div>
</div>
<hr/>The documentation for this class was generated from the following files:<ul>
<li>include/armnn/backends/<a class="el" href="include_2armnn_2backends_2_subgraph_view_8hpp_source.xhtml">SubgraphView.hpp</a></li>
<li>src/armnn/<a class="el" href="_subgraph_view_8cpp_source.xhtml">SubgraphView.cpp</a></li>
</ul>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="namespacearmnn.xhtml">armnn</a></li><li class="navelem"><a class="el" href="classarmnn_1_1_subgraph_view.xhtml">SubgraphView</a></li>
    <li class="footer">Generated on Wed Mar 9 2022 12:01:23 for ArmNN by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.13 </li>
  </ul>
</div>
</body>
</html>
