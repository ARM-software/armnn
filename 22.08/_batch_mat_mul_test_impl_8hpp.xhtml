<!-- Copyright (c) 2020 ARM Limited. -->
<!--                                 -->
<!-- SPDX-License-Identifier: MIT    -->
<!--                                 -->
<!-- HTML header for doxygen 1.8.13-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.13"/>
<meta name="robots" content="NOINDEX, NOFOLLOW" />
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>ArmNN: src/backends/backendsCommon/test/layerTests/BatchMatMulTestImpl.hpp File Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script><script type="text/javascript" src="http://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="stylesheet.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <img alt="ArmNN" src="Arm_NN_horizontal_blue.png" style="max-width: 10rem; margin-top: .5rem; margin-left 10px"/>
  <td style="padding-left: 0.5em;">
   <div id="projectname">
   &#160;<span id="projectnumber">22.08</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.13 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
$(document).ready(function(){initNavTree('_batch_mat_mul_test_impl_8hpp.xhtml','');});
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="summary">
<a href="#func-members">Functions</a>  </div>
  <div class="headertitle">
<div class="title">BatchMatMulTestImpl.hpp File Reference</div>  </div>
</div><!--header-->
<div class="contents">
<div class="textblock"><code>#include &lt;<a class="el" href="include_2armnn_test_utils_2_layer_test_result_8hpp_source.xhtml">armnnTestUtils/LayerTestResult.hpp</a>&gt;</code><br />
<code>#include &lt;<a class="el" href="_resolve_type_8hpp_source.xhtml">ResolveType.hpp</a>&gt;</code><br />
<code>#include &lt;<a class="el" href="_i_backend_internal_8hpp_source.xhtml">armnn/backends/IBackendInternal.hpp</a>&gt;</code><br />
</div>
<p><a href="_batch_mat_mul_test_impl_8hpp_source.xhtml">Go to the source code of this file.</a></p>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="func-members"></a>
Functions</h2></td></tr>
<tr class="memitem:a96b36cc9c55ba2f295119280d5d37378"><td class="memTemplParams" colspan="2">template&lt;armnn::DataType ArmnnType, typename T  = armnn::ResolveType&lt;ArmnnType&gt;, std::size_t NumDims&gt; </td></tr>
<tr class="memitem:a96b36cc9c55ba2f295119280d5d37378"><td class="memTemplItemLeft" align="right" valign="top"><a class="el" href="struct_layer_test_result.xhtml">LayerTestResult</a>&lt; T, NumDims &gt;&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="_batch_mat_mul_test_impl_8hpp.xhtml#a96b36cc9c55ba2f295119280d5d37378">BatchMatMulTestImpl</a> (<a class="el" href="classarmnn_1_1_i_workload_factory.xhtml">armnn::IWorkloadFactory</a> &amp;workloadFactory, const <a class="el" href="classarmnn_1_1_i_backend_internal.xhtml#a693b40e6b94e958836aeb0410ca186bd">armnn::IBackendInternal::IMemoryManagerSharedPtr</a> &amp;memoryManager, const <a class="el" href="classarmnn_1_1_i_tensor_handle_factory.xhtml">armnn::ITensorHandleFactory</a> &amp;tensorHandleFactory, <a class="el" href="structarmnn_1_1_batch_mat_mul_descriptor.xhtml">armnn::BatchMatMulDescriptor</a> descriptor, const std::vector&lt; T &gt; &amp;inputX, const std::vector&lt; T &gt; &amp;inputY, const std::vector&lt; T &gt; &amp;outputExpected, const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">armnn::TensorInfo</a> &amp;inputXInfo, const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">armnn::TensorInfo</a> &amp;inputYInfo, const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">armnn::TensorInfo</a> &amp;outputInfo)</td></tr>
<tr class="separator:a96b36cc9c55ba2f295119280d5d37378"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac541d5a0e6bedcfb78afa424019a3fff"><td class="memTemplParams" colspan="2">template&lt;armnn::DataType ArmnnType, typename T  = armnn::ResolveType&lt;ArmnnType&gt;&gt; </td></tr>
<tr class="memitem:ac541d5a0e6bedcfb78afa424019a3fff"><td class="memTemplItemLeft" align="right" valign="top"><a class="el" href="struct_layer_test_result.xhtml">LayerTestResult</a>&lt; T, 2 &gt;&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="_batch_mat_mul_test_impl_8hpp.xhtml#ac541d5a0e6bedcfb78afa424019a3fff">BatchMatMul2DSimpleTest</a> (<a class="el" href="classarmnn_1_1_i_workload_factory.xhtml">armnn::IWorkloadFactory</a> &amp;workloadFactory, const <a class="el" href="classarmnn_1_1_i_backend_internal.xhtml#a693b40e6b94e958836aeb0410ca186bd">armnn::IBackendInternal::IMemoryManagerSharedPtr</a> &amp;memoryManager, const <a class="el" href="classarmnn_1_1_i_tensor_handle_factory.xhtml">armnn::ITensorHandleFactory</a> &amp;tensorHandleFactory)</td></tr>
<tr class="separator:ac541d5a0e6bedcfb78afa424019a3fff"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1c63ad9e2eb15027434c126aa7713db7"><td class="memTemplParams" colspan="2">template&lt;armnn::DataType ArmnnType, typename T  = armnn::ResolveType&lt;ArmnnType&gt;&gt; </td></tr>
<tr class="memitem:a1c63ad9e2eb15027434c126aa7713db7"><td class="memTemplItemLeft" align="right" valign="top"><a class="el" href="struct_layer_test_result.xhtml">LayerTestResult</a>&lt; T, 3 &gt;&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="_batch_mat_mul_test_impl_8hpp.xhtml#a1c63ad9e2eb15027434c126aa7713db7">BatchMatMul3DSimpleTest</a> (<a class="el" href="classarmnn_1_1_i_workload_factory.xhtml">armnn::IWorkloadFactory</a> &amp;workloadFactory, const <a class="el" href="classarmnn_1_1_i_backend_internal.xhtml#a693b40e6b94e958836aeb0410ca186bd">armnn::IBackendInternal::IMemoryManagerSharedPtr</a> &amp;memoryManager, const <a class="el" href="classarmnn_1_1_i_tensor_handle_factory.xhtml">armnn::ITensorHandleFactory</a> &amp;tensorHandleFactory)</td></tr>
<tr class="separator:a1c63ad9e2eb15027434c126aa7713db7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a673a64837b30d9687d7208de6bbde3ac"><td class="memTemplParams" colspan="2">template&lt;armnn::DataType ArmnnType, typename T  = armnn::ResolveType&lt;ArmnnType&gt;&gt; </td></tr>
<tr class="memitem:a673a64837b30d9687d7208de6bbde3ac"><td class="memTemplItemLeft" align="right" valign="top"><a class="el" href="struct_layer_test_result.xhtml">LayerTestResult</a>&lt; T, 4 &gt;&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="_batch_mat_mul_test_impl_8hpp.xhtml#a673a64837b30d9687d7208de6bbde3ac">BatchMatMulNCHWSimpleTest</a> (<a class="el" href="classarmnn_1_1_i_workload_factory.xhtml">armnn::IWorkloadFactory</a> &amp;workloadFactory, const <a class="el" href="classarmnn_1_1_i_backend_internal.xhtml#a693b40e6b94e958836aeb0410ca186bd">armnn::IBackendInternal::IMemoryManagerSharedPtr</a> &amp;memoryManager, const <a class="el" href="classarmnn_1_1_i_tensor_handle_factory.xhtml">armnn::ITensorHandleFactory</a> &amp;tensorHandleFactory)</td></tr>
<tr class="separator:a673a64837b30d9687d7208de6bbde3ac"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af8b1fb1b21389a3af74692f7a75ba596"><td class="memTemplParams" colspan="2">template&lt;armnn::DataType ArmnnType, typename T  = armnn::ResolveType&lt;ArmnnType&gt;&gt; </td></tr>
<tr class="memitem:af8b1fb1b21389a3af74692f7a75ba596"><td class="memTemplItemLeft" align="right" valign="top"><a class="el" href="struct_layer_test_result.xhtml">LayerTestResult</a>&lt; T, 4 &gt;&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="_batch_mat_mul_test_impl_8hpp.xhtml#af8b1fb1b21389a3af74692f7a75ba596">BatchMatMulNHWCSimpleTest</a> (<a class="el" href="classarmnn_1_1_i_workload_factory.xhtml">armnn::IWorkloadFactory</a> &amp;workloadFactory, const <a class="el" href="classarmnn_1_1_i_backend_internal.xhtml#a693b40e6b94e958836aeb0410ca186bd">armnn::IBackendInternal::IMemoryManagerSharedPtr</a> &amp;memoryManager, const <a class="el" href="classarmnn_1_1_i_tensor_handle_factory.xhtml">armnn::ITensorHandleFactory</a> &amp;tensorHandleFactory)</td></tr>
<tr class="separator:af8b1fb1b21389a3af74692f7a75ba596"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab8beff22c50eca05a16fc7541332fed6"><td class="memTemplParams" colspan="2">template&lt;armnn::DataType ArmnnType, typename T  = armnn::ResolveType&lt;ArmnnType&gt;&gt; </td></tr>
<tr class="memitem:ab8beff22c50eca05a16fc7541332fed6"><td class="memTemplItemLeft" align="right" valign="top"><a class="el" href="struct_layer_test_result.xhtml">LayerTestResult</a>&lt; T, 3 &gt;&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="_batch_mat_mul_test_impl_8hpp.xhtml#ab8beff22c50eca05a16fc7541332fed6">BatchMatMul3DBatchTest</a> (<a class="el" href="classarmnn_1_1_i_workload_factory.xhtml">armnn::IWorkloadFactory</a> &amp;workloadFactory, const <a class="el" href="classarmnn_1_1_i_backend_internal.xhtml#a693b40e6b94e958836aeb0410ca186bd">armnn::IBackendInternal::IMemoryManagerSharedPtr</a> &amp;memoryManager, const <a class="el" href="classarmnn_1_1_i_tensor_handle_factory.xhtml">armnn::ITensorHandleFactory</a> &amp;tensorHandleFactory)</td></tr>
<tr class="separator:ab8beff22c50eca05a16fc7541332fed6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a57945c7f6c1346b92c0419e2a1cc8341"><td class="memTemplParams" colspan="2">template&lt;armnn::DataType ArmnnType, typename T  = armnn::ResolveType&lt;ArmnnType&gt;&gt; </td></tr>
<tr class="memitem:a57945c7f6c1346b92c0419e2a1cc8341"><td class="memTemplItemLeft" align="right" valign="top"><a class="el" href="struct_layer_test_result.xhtml">LayerTestResult</a>&lt; T, 3 &gt;&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="_batch_mat_mul_test_impl_8hpp.xhtml#a57945c7f6c1346b92c0419e2a1cc8341">BatchMatMul3DBroadcastTest</a> (<a class="el" href="classarmnn_1_1_i_workload_factory.xhtml">armnn::IWorkloadFactory</a> &amp;workloadFactory, const <a class="el" href="classarmnn_1_1_i_backend_internal.xhtml#a693b40e6b94e958836aeb0410ca186bd">armnn::IBackendInternal::IMemoryManagerSharedPtr</a> &amp;memoryManager, const <a class="el" href="classarmnn_1_1_i_tensor_handle_factory.xhtml">armnn::ITensorHandleFactory</a> &amp;tensorHandleFactory)</td></tr>
<tr class="separator:a57945c7f6c1346b92c0419e2a1cc8341"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9ab9739499c1072967e974b59a3097ee"><td class="memTemplParams" colspan="2">template&lt;armnn::DataType ArmnnType, typename T  = armnn::ResolveType&lt;ArmnnType&gt;&gt; </td></tr>
<tr class="memitem:a9ab9739499c1072967e974b59a3097ee"><td class="memTemplItemLeft" align="right" valign="top"><a class="el" href="struct_layer_test_result.xhtml">LayerTestResult</a>&lt; T, 3 &gt;&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="_batch_mat_mul_test_impl_8hpp.xhtml#a9ab9739499c1072967e974b59a3097ee">BatchMatMul3D2DBroadcastTest</a> (<a class="el" href="classarmnn_1_1_i_workload_factory.xhtml">armnn::IWorkloadFactory</a> &amp;workloadFactory, const <a class="el" href="classarmnn_1_1_i_backend_internal.xhtml#a693b40e6b94e958836aeb0410ca186bd">armnn::IBackendInternal::IMemoryManagerSharedPtr</a> &amp;memoryManager, const <a class="el" href="classarmnn_1_1_i_tensor_handle_factory.xhtml">armnn::ITensorHandleFactory</a> &amp;tensorHandleFactory)</td></tr>
<tr class="separator:a9ab9739499c1072967e974b59a3097ee"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7c059f34ba2b38ca71163c125c62b3fe"><td class="memTemplParams" colspan="2">template&lt;armnn::DataType ArmnnType, typename T  = armnn::ResolveType&lt;ArmnnType&gt;&gt; </td></tr>
<tr class="memitem:a7c059f34ba2b38ca71163c125c62b3fe"><td class="memTemplItemLeft" align="right" valign="top"><a class="el" href="struct_layer_test_result.xhtml">LayerTestResult</a>&lt; T, 5 &gt;&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="_batch_mat_mul_test_impl_8hpp.xhtml#a7c059f34ba2b38ca71163c125c62b3fe">BatchMatMulNDHWCNHWCTest</a> (<a class="el" href="classarmnn_1_1_i_workload_factory.xhtml">armnn::IWorkloadFactory</a> &amp;workloadFactory, const <a class="el" href="classarmnn_1_1_i_backend_internal.xhtml#a693b40e6b94e958836aeb0410ca186bd">armnn::IBackendInternal::IMemoryManagerSharedPtr</a> &amp;memoryManager, const <a class="el" href="classarmnn_1_1_i_tensor_handle_factory.xhtml">armnn::ITensorHandleFactory</a> &amp;tensorHandleFactory)</td></tr>
<tr class="separator:a7c059f34ba2b38ca71163c125c62b3fe"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a58f89edf401027632a20839a95c7c148"><td class="memTemplParams" colspan="2">template&lt;armnn::DataType ArmnnType, typename T  = armnn::ResolveType&lt;ArmnnType&gt;&gt; </td></tr>
<tr class="memitem:a58f89edf401027632a20839a95c7c148"><td class="memTemplItemLeft" align="right" valign="top"><a class="el" href="struct_layer_test_result.xhtml">LayerTestResult</a>&lt; T, 2 &gt;&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="_batch_mat_mul_test_impl_8hpp.xhtml#a58f89edf401027632a20839a95c7c148">BatchMatMul2DTinyTest</a> (<a class="el" href="classarmnn_1_1_i_workload_factory.xhtml">armnn::IWorkloadFactory</a> &amp;workloadFactory, const <a class="el" href="classarmnn_1_1_i_backend_internal.xhtml#a693b40e6b94e958836aeb0410ca186bd">armnn::IBackendInternal::IMemoryManagerSharedPtr</a> &amp;memoryManager, const <a class="el" href="classarmnn_1_1_i_tensor_handle_factory.xhtml">armnn::ITensorHandleFactory</a> &amp;tensorHandleFactory)</td></tr>
<tr class="separator:a58f89edf401027632a20839a95c7c148"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:afb755eee7624b3d112fbb714284e86d9"><td class="memTemplParams" colspan="2">template&lt;armnn::DataType ArmnnType, typename T  = armnn::ResolveType&lt;ArmnnType&gt;&gt; </td></tr>
<tr class="memitem:afb755eee7624b3d112fbb714284e86d9"><td class="memTemplItemLeft" align="right" valign="top"><a class="el" href="struct_layer_test_result.xhtml">LayerTestResult</a>&lt; T, 3 &gt;&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="_batch_mat_mul_test_impl_8hpp.xhtml#afb755eee7624b3d112fbb714284e86d9">BatchMatMul3DNonSquareTest</a> (<a class="el" href="classarmnn_1_1_i_workload_factory.xhtml">armnn::IWorkloadFactory</a> &amp;workloadFactory, const <a class="el" href="classarmnn_1_1_i_backend_internal.xhtml#a693b40e6b94e958836aeb0410ca186bd">armnn::IBackendInternal::IMemoryManagerSharedPtr</a> &amp;memoryManager, const <a class="el" href="classarmnn_1_1_i_tensor_handle_factory.xhtml">armnn::ITensorHandleFactory</a> &amp;tensorHandleFactory)</td></tr>
<tr class="separator:afb755eee7624b3d112fbb714284e86d9"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<h2 class="groupheader">Function Documentation</h2>
<a id="ac541d5a0e6bedcfb78afa424019a3fff"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ac541d5a0e6bedcfb78afa424019a3fff">&#9670;&nbsp;</a></span>BatchMatMul2DSimpleTest()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="struct_layer_test_result.xhtml">LayerTestResult</a>&lt;T, 2&gt; BatchMatMul2DSimpleTest </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classarmnn_1_1_i_workload_factory.xhtml">armnn::IWorkloadFactory</a> &amp;&#160;</td>
          <td class="paramname"><em>workloadFactory</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_i_backend_internal.xhtml#a693b40e6b94e958836aeb0410ca186bd">armnn::IBackendInternal::IMemoryManagerSharedPtr</a> &amp;&#160;</td>
          <td class="paramname"><em>memoryManager</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_i_tensor_handle_factory.xhtml">armnn::ITensorHandleFactory</a> &amp;&#160;</td>
          <td class="paramname"><em>tensorHandleFactory</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_batch_mat_mul_test_impl_8cpp_source.xhtml#l00067">67</a> of file <a class="el" href="_batch_mat_mul_test_impl_8cpp_source.xhtml">BatchMatMulTestImpl.cpp</a>.</p>

<p class="reference">References <a class="el" href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a9d02ea768c081d4bdb2b7cab0b3f510d">armnn::QAsymmS8</a>, <a class="el" href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a0a3f57c876f5a230244c38e1453a8a6e">armnn::QAsymmU8</a>, and <a class="el" href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a053c769dcf82d66ef326c86980c02ba7">armnn::QSymmS16</a>.</p>
<div class="fragment"><div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;{</div><div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;    <span class="keyword">auto</span> descriptor = <a class="code" href="structarmnn_1_1_batch_mat_mul_descriptor.xhtml">armnn::BatchMatMulDescriptor</a>(); <span class="comment">// Arbitrary layout with no transpose/adjointing</span></div><div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;</div><div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;    <span class="keywordtype">float</span> qScale = 0.0f;</div><div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;    int32_t qOffset = 0;</div><div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;</div><div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;    <span class="keywordflow">switch</span>(ArmnnType)</div><div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;    {</div><div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;        <span class="keywordflow">case</span> <a class="code" href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a9d02ea768c081d4bdb2b7cab0b3f510d">armnn::DataType::QAsymmS8</a>:</div><div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;        <span class="keywordflow">case</span> <a class="code" href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a0a3f57c876f5a230244c38e1453a8a6e">armnn::DataType::QAsymmU8</a>:</div><div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;        <span class="keywordflow">case</span> <a class="code" href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a053c769dcf82d66ef326c86980c02ba7">armnn::DataType::QSymmS16</a>:</div><div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;            qScale = 1.0f;</div><div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;            <span class="keywordflow">break</span>;</div><div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;        <span class="keywordflow">default</span>:</div><div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;            <span class="keywordflow">break</span>;</div><div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;    }</div><div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;</div><div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;    <a class="code" href="classarmnn_1_1_tensor_info.xhtml">armnn::TensorInfo</a> inputXInfo({2,2}, ArmnnType, qScale, qOffset);</div><div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;    <a class="code" href="classarmnn_1_1_tensor_info.xhtml">armnn::TensorInfo</a> inputYInfo({2,2}, ArmnnType, qScale, qOffset);</div><div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;    <a class="code" href="classarmnn_1_1_tensor_info.xhtml">armnn::TensorInfo</a> outputInfo({2,2}, ArmnnType, qScale, qOffset);</div><div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;</div><div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;    std::vector&lt;T&gt; inputX = armnnUtils::QuantizedVector&lt;T&gt;({</div><div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;       1, 2,</div><div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;       3, 4</div><div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;    }, qScale, qOffset);</div><div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;</div><div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;    std::vector&lt;T&gt; inputY = armnnUtils::QuantizedVector&lt;T&gt;({</div><div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;        5, 6,</div><div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;        7, 8</div><div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;    }, qScale, qOffset);</div><div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;</div><div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;    std::vector&lt;T&gt; outputExpected = armnnUtils::QuantizedVector&lt;T&gt;({</div><div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;        19, 22,</div><div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;        43, 50</div><div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;    }, qScale, qOffset);</div><div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;</div><div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;    <span class="keywordflow">return</span> BatchMatMulTestImpl&lt;ArmnnType, T, 2&gt;(workloadFactory,</div><div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;                                             memoryManager,</div><div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;                                             tensorHandleFactory,</div><div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;                                             descriptor,</div><div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;                                             inputX,</div><div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;                                             inputY,</div><div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;                                             outputExpected,</div><div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;                                             inputXInfo,</div><div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;                                             inputYInfo,</div><div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;                                             outputInfo);</div><div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;}</div><div class="ttc" id="classarmnn_1_1_tensor_info_xhtml"><div class="ttname"><a href="classarmnn_1_1_tensor_info.xhtml">armnn::TensorInfo</a></div><div class="ttdef"><b>Definition:</b> <a href="_tensor_8hpp_source.xhtml#l00152">Tensor.hpp:152</a></div></div>
<div class="ttc" id="namespacearmnn_xhtml_ad8ed01ff3ff33333d8e19db4d2818bb6a9d02ea768c081d4bdb2b7cab0b3f510d"><div class="ttname"><a href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a9d02ea768c081d4bdb2b7cab0b3f510d">armnn::DataType::QAsymmS8</a></div></div>
<div class="ttc" id="namespacearmnn_xhtml_ad8ed01ff3ff33333d8e19db4d2818bb6a053c769dcf82d66ef326c86980c02ba7"><div class="ttname"><a href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a053c769dcf82d66ef326c86980c02ba7">armnn::DataType::QSymmS16</a></div></div>
<div class="ttc" id="namespacearmnn_xhtml_ad8ed01ff3ff33333d8e19db4d2818bb6a0a3f57c876f5a230244c38e1453a8a6e"><div class="ttname"><a href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a0a3f57c876f5a230244c38e1453a8a6e">armnn::DataType::QAsymmU8</a></div></div>
<div class="ttc" id="structarmnn_1_1_batch_mat_mul_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_batch_mat_mul_descriptor.xhtml">armnn::BatchMatMulDescriptor</a></div><div class="ttdoc">A BatchMatMulDescriptor for the BatchMatMul operator. </div><div class="ttdef"><b>Definition:</b> <a href="_descriptors_8hpp_source.xhtml#l01554">Descriptors.hpp:1554</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="a58f89edf401027632a20839a95c7c148"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a58f89edf401027632a20839a95c7c148">&#9670;&nbsp;</a></span>BatchMatMul2DTinyTest()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="struct_layer_test_result.xhtml">LayerTestResult</a>&lt;T, 2&gt; BatchMatMul2DTinyTest </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classarmnn_1_1_i_workload_factory.xhtml">armnn::IWorkloadFactory</a> &amp;&#160;</td>
          <td class="paramname"><em>workloadFactory</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_i_backend_internal.xhtml#a693b40e6b94e958836aeb0410ca186bd">armnn::IBackendInternal::IMemoryManagerSharedPtr</a> &amp;&#160;</td>
          <td class="paramname"><em>memoryManager</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_i_tensor_handle_factory.xhtml">armnn::ITensorHandleFactory</a> &amp;&#160;</td>
          <td class="paramname"><em>tensorHandleFactory</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_batch_mat_mul_test_impl_8cpp_source.xhtml#l00815">815</a> of file <a class="el" href="_batch_mat_mul_test_impl_8cpp_source.xhtml">BatchMatMulTestImpl.cpp</a>.</p>

<p class="reference">References <a class="el" href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a9d02ea768c081d4bdb2b7cab0b3f510d">armnn::QAsymmS8</a>, <a class="el" href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a0a3f57c876f5a230244c38e1453a8a6e">armnn::QAsymmU8</a>, and <a class="el" href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a053c769dcf82d66ef326c86980c02ba7">armnn::QSymmS16</a>.</p>
<div class="fragment"><div class="line"><a name="l00819"></a><span class="lineno">  819</span>&#160;{</div><div class="line"><a name="l00820"></a><span class="lineno">  820</span>&#160;    <span class="keyword">auto</span> descriptor = <a class="code" href="structarmnn_1_1_batch_mat_mul_descriptor.xhtml">armnn::BatchMatMulDescriptor</a>(); <span class="comment">// Arbitrary layout with no transpose/adjointing</span></div><div class="line"><a name="l00821"></a><span class="lineno">  821</span>&#160;</div><div class="line"><a name="l00822"></a><span class="lineno">  822</span>&#160;    <span class="keywordtype">float</span> qScale = 0.0f;</div><div class="line"><a name="l00823"></a><span class="lineno">  823</span>&#160;    int32_t qOffset = 0;</div><div class="line"><a name="l00824"></a><span class="lineno">  824</span>&#160;</div><div class="line"><a name="l00825"></a><span class="lineno">  825</span>&#160;    <span class="keywordflow">switch</span>(ArmnnType)</div><div class="line"><a name="l00826"></a><span class="lineno">  826</span>&#160;    {</div><div class="line"><a name="l00827"></a><span class="lineno">  827</span>&#160;        <span class="keywordflow">case</span> <a class="code" href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a9d02ea768c081d4bdb2b7cab0b3f510d">armnn::DataType::QAsymmS8</a>:</div><div class="line"><a name="l00828"></a><span class="lineno">  828</span>&#160;        <span class="keywordflow">case</span> <a class="code" href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a0a3f57c876f5a230244c38e1453a8a6e">armnn::DataType::QAsymmU8</a>:</div><div class="line"><a name="l00829"></a><span class="lineno">  829</span>&#160;        <span class="keywordflow">case</span> <a class="code" href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a053c769dcf82d66ef326c86980c02ba7">armnn::DataType::QSymmS16</a>:</div><div class="line"><a name="l00830"></a><span class="lineno">  830</span>&#160;            qScale = 1.0f;</div><div class="line"><a name="l00831"></a><span class="lineno">  831</span>&#160;            <span class="keywordflow">break</span>;</div><div class="line"><a name="l00832"></a><span class="lineno">  832</span>&#160;        <span class="keywordflow">default</span>:</div><div class="line"><a name="l00833"></a><span class="lineno">  833</span>&#160;            <span class="keywordflow">break</span>;</div><div class="line"><a name="l00834"></a><span class="lineno">  834</span>&#160;    }</div><div class="line"><a name="l00835"></a><span class="lineno">  835</span>&#160;</div><div class="line"><a name="l00836"></a><span class="lineno">  836</span>&#160;    <a class="code" href="classarmnn_1_1_tensor_info.xhtml">armnn::TensorInfo</a> inputXInfo({1,1}, ArmnnType, qScale, qOffset);</div><div class="line"><a name="l00837"></a><span class="lineno">  837</span>&#160;    <a class="code" href="classarmnn_1_1_tensor_info.xhtml">armnn::TensorInfo</a> inputYInfo({1,1}, ArmnnType, qScale, qOffset);</div><div class="line"><a name="l00838"></a><span class="lineno">  838</span>&#160;    <a class="code" href="classarmnn_1_1_tensor_info.xhtml">armnn::TensorInfo</a> outputInfo({1,1}, ArmnnType, qScale, qOffset);</div><div class="line"><a name="l00839"></a><span class="lineno">  839</span>&#160;</div><div class="line"><a name="l00840"></a><span class="lineno">  840</span>&#160;    std::vector&lt;T&gt; inputX = armnnUtils::QuantizedVector&lt;T&gt;({</div><div class="line"><a name="l00841"></a><span class="lineno">  841</span>&#160;       3</div><div class="line"><a name="l00842"></a><span class="lineno">  842</span>&#160;    }, qScale, qOffset);</div><div class="line"><a name="l00843"></a><span class="lineno">  843</span>&#160;</div><div class="line"><a name="l00844"></a><span class="lineno">  844</span>&#160;    std::vector&lt;T&gt; inputY = armnnUtils::QuantizedVector&lt;T&gt;({</div><div class="line"><a name="l00845"></a><span class="lineno">  845</span>&#160;        5</div><div class="line"><a name="l00846"></a><span class="lineno">  846</span>&#160;    }, qScale, qOffset);</div><div class="line"><a name="l00847"></a><span class="lineno">  847</span>&#160;</div><div class="line"><a name="l00848"></a><span class="lineno">  848</span>&#160;    std::vector&lt;T&gt; outputExpected = armnnUtils::QuantizedVector&lt;T&gt;({</div><div class="line"><a name="l00849"></a><span class="lineno">  849</span>&#160;        15</div><div class="line"><a name="l00850"></a><span class="lineno">  850</span>&#160;    }, qScale, qOffset);</div><div class="line"><a name="l00851"></a><span class="lineno">  851</span>&#160;</div><div class="line"><a name="l00852"></a><span class="lineno">  852</span>&#160;    <span class="keywordflow">return</span> BatchMatMulTestImpl&lt;ArmnnType, T, 2&gt;(workloadFactory,</div><div class="line"><a name="l00853"></a><span class="lineno">  853</span>&#160;                                             memoryManager,</div><div class="line"><a name="l00854"></a><span class="lineno">  854</span>&#160;                                             tensorHandleFactory,</div><div class="line"><a name="l00855"></a><span class="lineno">  855</span>&#160;                                             descriptor,</div><div class="line"><a name="l00856"></a><span class="lineno">  856</span>&#160;                                             inputX,</div><div class="line"><a name="l00857"></a><span class="lineno">  857</span>&#160;                                             inputY,</div><div class="line"><a name="l00858"></a><span class="lineno">  858</span>&#160;                                             outputExpected,</div><div class="line"><a name="l00859"></a><span class="lineno">  859</span>&#160;                                             inputXInfo,</div><div class="line"><a name="l00860"></a><span class="lineno">  860</span>&#160;                                             inputYInfo,</div><div class="line"><a name="l00861"></a><span class="lineno">  861</span>&#160;                                             outputInfo);</div><div class="line"><a name="l00862"></a><span class="lineno">  862</span>&#160;}</div><div class="ttc" id="classarmnn_1_1_tensor_info_xhtml"><div class="ttname"><a href="classarmnn_1_1_tensor_info.xhtml">armnn::TensorInfo</a></div><div class="ttdef"><b>Definition:</b> <a href="_tensor_8hpp_source.xhtml#l00152">Tensor.hpp:152</a></div></div>
<div class="ttc" id="namespacearmnn_xhtml_ad8ed01ff3ff33333d8e19db4d2818bb6a9d02ea768c081d4bdb2b7cab0b3f510d"><div class="ttname"><a href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a9d02ea768c081d4bdb2b7cab0b3f510d">armnn::DataType::QAsymmS8</a></div></div>
<div class="ttc" id="namespacearmnn_xhtml_ad8ed01ff3ff33333d8e19db4d2818bb6a053c769dcf82d66ef326c86980c02ba7"><div class="ttname"><a href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a053c769dcf82d66ef326c86980c02ba7">armnn::DataType::QSymmS16</a></div></div>
<div class="ttc" id="namespacearmnn_xhtml_ad8ed01ff3ff33333d8e19db4d2818bb6a0a3f57c876f5a230244c38e1453a8a6e"><div class="ttname"><a href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a0a3f57c876f5a230244c38e1453a8a6e">armnn::DataType::QAsymmU8</a></div></div>
<div class="ttc" id="structarmnn_1_1_batch_mat_mul_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_batch_mat_mul_descriptor.xhtml">armnn::BatchMatMulDescriptor</a></div><div class="ttdoc">A BatchMatMulDescriptor for the BatchMatMul operator. </div><div class="ttdef"><b>Definition:</b> <a href="_descriptors_8hpp_source.xhtml#l01554">Descriptors.hpp:1554</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="a9ab9739499c1072967e974b59a3097ee"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a9ab9739499c1072967e974b59a3097ee">&#9670;&nbsp;</a></span>BatchMatMul3D2DBroadcastTest()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="struct_layer_test_result.xhtml">LayerTestResult</a>&lt;T, 3&gt; BatchMatMul3D2DBroadcastTest </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classarmnn_1_1_i_workload_factory.xhtml">armnn::IWorkloadFactory</a> &amp;&#160;</td>
          <td class="paramname"><em>workloadFactory</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_i_backend_internal.xhtml#a693b40e6b94e958836aeb0410ca186bd">armnn::IBackendInternal::IMemoryManagerSharedPtr</a> &amp;&#160;</td>
          <td class="paramname"><em>memoryManager</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_i_tensor_handle_factory.xhtml">armnn::ITensorHandleFactory</a> &amp;&#160;</td>
          <td class="paramname"><em>tensorHandleFactory</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_batch_mat_mul_test_impl_8cpp_source.xhtml#l00620">620</a> of file <a class="el" href="_batch_mat_mul_test_impl_8cpp_source.xhtml">BatchMatMulTestImpl.cpp</a>.</p>

<p class="reference">References <a class="el" href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a9d02ea768c081d4bdb2b7cab0b3f510d">armnn::QAsymmS8</a>, <a class="el" href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a0a3f57c876f5a230244c38e1453a8a6e">armnn::QAsymmU8</a>, and <a class="el" href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a053c769dcf82d66ef326c86980c02ba7">armnn::QSymmS16</a>.</p>
<div class="fragment"><div class="line"><a name="l00624"></a><span class="lineno">  624</span>&#160;{</div><div class="line"><a name="l00625"></a><span class="lineno">  625</span>&#160;    <span class="keyword">auto</span> descriptor = <a class="code" href="structarmnn_1_1_batch_mat_mul_descriptor.xhtml">armnn::BatchMatMulDescriptor</a>(); <span class="comment">// Arbitrary layout with no transpose/adjointing</span></div><div class="line"><a name="l00626"></a><span class="lineno">  626</span>&#160;</div><div class="line"><a name="l00627"></a><span class="lineno">  627</span>&#160;    <span class="keywordtype">float</span> qScale = 0.0f;</div><div class="line"><a name="l00628"></a><span class="lineno">  628</span>&#160;    int32_t qOffset = 0;</div><div class="line"><a name="l00629"></a><span class="lineno">  629</span>&#160;</div><div class="line"><a name="l00630"></a><span class="lineno">  630</span>&#160;    <span class="keywordflow">switch</span>(ArmnnType)</div><div class="line"><a name="l00631"></a><span class="lineno">  631</span>&#160;    {</div><div class="line"><a name="l00632"></a><span class="lineno">  632</span>&#160;        <span class="keywordflow">case</span> <a class="code" href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a9d02ea768c081d4bdb2b7cab0b3f510d">armnn::DataType::QAsymmS8</a>:</div><div class="line"><a name="l00633"></a><span class="lineno">  633</span>&#160;        <span class="keywordflow">case</span> <a class="code" href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a0a3f57c876f5a230244c38e1453a8a6e">armnn::DataType::QAsymmU8</a>:</div><div class="line"><a name="l00634"></a><span class="lineno">  634</span>&#160;        <span class="keywordflow">case</span> <a class="code" href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a053c769dcf82d66ef326c86980c02ba7">armnn::DataType::QSymmS16</a>:</div><div class="line"><a name="l00635"></a><span class="lineno">  635</span>&#160;            qScale = 1.0f;</div><div class="line"><a name="l00636"></a><span class="lineno">  636</span>&#160;            <span class="keywordflow">break</span>;</div><div class="line"><a name="l00637"></a><span class="lineno">  637</span>&#160;        <span class="keywordflow">default</span>:</div><div class="line"><a name="l00638"></a><span class="lineno">  638</span>&#160;            <span class="keywordflow">break</span>;</div><div class="line"><a name="l00639"></a><span class="lineno">  639</span>&#160;    }</div><div class="line"><a name="l00640"></a><span class="lineno">  640</span>&#160;</div><div class="line"><a name="l00641"></a><span class="lineno">  641</span>&#160;    <a class="code" href="classarmnn_1_1_tensor_info.xhtml">armnn::TensorInfo</a> inputXInfo({2,2,2}, ArmnnType, qScale, qOffset);</div><div class="line"><a name="l00642"></a><span class="lineno">  642</span>&#160;    <a class="code" href="classarmnn_1_1_tensor_info.xhtml">armnn::TensorInfo</a> inputYInfo({2,2}, ArmnnType, qScale, qOffset);</div><div class="line"><a name="l00643"></a><span class="lineno">  643</span>&#160;    <a class="code" href="classarmnn_1_1_tensor_info.xhtml">armnn::TensorInfo</a> outputInfo({2,2,2}, ArmnnType, qScale, qOffset);</div><div class="line"><a name="l00644"></a><span class="lineno">  644</span>&#160;</div><div class="line"><a name="l00645"></a><span class="lineno">  645</span>&#160;    std::vector&lt;T&gt; inputX = armnnUtils::QuantizedVector&lt;T&gt;({</div><div class="line"><a name="l00646"></a><span class="lineno">  646</span>&#160;       1, 2,</div><div class="line"><a name="l00647"></a><span class="lineno">  647</span>&#160;       3, 4,</div><div class="line"><a name="l00648"></a><span class="lineno">  648</span>&#160;</div><div class="line"><a name="l00649"></a><span class="lineno">  649</span>&#160;       9, 10,</div><div class="line"><a name="l00650"></a><span class="lineno">  650</span>&#160;       11, 12</div><div class="line"><a name="l00651"></a><span class="lineno">  651</span>&#160;    }, qScale, qOffset);</div><div class="line"><a name="l00652"></a><span class="lineno">  652</span>&#160;</div><div class="line"><a name="l00653"></a><span class="lineno">  653</span>&#160;    std::vector&lt;T&gt; inputY = armnnUtils::QuantizedVector&lt;T&gt;({</div><div class="line"><a name="l00654"></a><span class="lineno">  654</span>&#160;        13, 14,</div><div class="line"><a name="l00655"></a><span class="lineno">  655</span>&#160;        15, 16</div><div class="line"><a name="l00656"></a><span class="lineno">  656</span>&#160;    }, qScale, qOffset);</div><div class="line"><a name="l00657"></a><span class="lineno">  657</span>&#160;</div><div class="line"><a name="l00658"></a><span class="lineno">  658</span>&#160;    std::vector&lt;T&gt; outputExpected = armnnUtils::QuantizedVector&lt;T&gt;({</div><div class="line"><a name="l00659"></a><span class="lineno">  659</span>&#160;        43, 46,</div><div class="line"><a name="l00660"></a><span class="lineno">  660</span>&#160;        99, 106,</div><div class="line"><a name="l00661"></a><span class="lineno">  661</span>&#160;</div><div class="line"><a name="l00662"></a><span class="lineno">  662</span>&#160;        267, 286,</div><div class="line"><a name="l00663"></a><span class="lineno">  663</span>&#160;        323, 346</div><div class="line"><a name="l00664"></a><span class="lineno">  664</span>&#160;    },qScale, qOffset);</div><div class="line"><a name="l00665"></a><span class="lineno">  665</span>&#160;</div><div class="line"><a name="l00666"></a><span class="lineno">  666</span>&#160;    <span class="keywordflow">return</span> BatchMatMulTestImpl&lt;ArmnnType, T, 3&gt;(workloadFactory,</div><div class="line"><a name="l00667"></a><span class="lineno">  667</span>&#160;                                                memoryManager,</div><div class="line"><a name="l00668"></a><span class="lineno">  668</span>&#160;                                                tensorHandleFactory,</div><div class="line"><a name="l00669"></a><span class="lineno">  669</span>&#160;                                                descriptor,</div><div class="line"><a name="l00670"></a><span class="lineno">  670</span>&#160;                                                inputX,</div><div class="line"><a name="l00671"></a><span class="lineno">  671</span>&#160;                                                inputY,</div><div class="line"><a name="l00672"></a><span class="lineno">  672</span>&#160;                                                outputExpected,</div><div class="line"><a name="l00673"></a><span class="lineno">  673</span>&#160;                                                inputXInfo,</div><div class="line"><a name="l00674"></a><span class="lineno">  674</span>&#160;                                                inputYInfo,</div><div class="line"><a name="l00675"></a><span class="lineno">  675</span>&#160;                                                outputInfo);</div><div class="line"><a name="l00676"></a><span class="lineno">  676</span>&#160;}</div><div class="ttc" id="classarmnn_1_1_tensor_info_xhtml"><div class="ttname"><a href="classarmnn_1_1_tensor_info.xhtml">armnn::TensorInfo</a></div><div class="ttdef"><b>Definition:</b> <a href="_tensor_8hpp_source.xhtml#l00152">Tensor.hpp:152</a></div></div>
<div class="ttc" id="namespacearmnn_xhtml_ad8ed01ff3ff33333d8e19db4d2818bb6a9d02ea768c081d4bdb2b7cab0b3f510d"><div class="ttname"><a href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a9d02ea768c081d4bdb2b7cab0b3f510d">armnn::DataType::QAsymmS8</a></div></div>
<div class="ttc" id="namespacearmnn_xhtml_ad8ed01ff3ff33333d8e19db4d2818bb6a053c769dcf82d66ef326c86980c02ba7"><div class="ttname"><a href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a053c769dcf82d66ef326c86980c02ba7">armnn::DataType::QSymmS16</a></div></div>
<div class="ttc" id="namespacearmnn_xhtml_ad8ed01ff3ff33333d8e19db4d2818bb6a0a3f57c876f5a230244c38e1453a8a6e"><div class="ttname"><a href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a0a3f57c876f5a230244c38e1453a8a6e">armnn::DataType::QAsymmU8</a></div></div>
<div class="ttc" id="structarmnn_1_1_batch_mat_mul_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_batch_mat_mul_descriptor.xhtml">armnn::BatchMatMulDescriptor</a></div><div class="ttdoc">A BatchMatMulDescriptor for the BatchMatMul operator. </div><div class="ttdef"><b>Definition:</b> <a href="_descriptors_8hpp_source.xhtml#l01554">Descriptors.hpp:1554</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="ab8beff22c50eca05a16fc7541332fed6"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ab8beff22c50eca05a16fc7541332fed6">&#9670;&nbsp;</a></span>BatchMatMul3DBatchTest()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="struct_layer_test_result.xhtml">LayerTestResult</a>&lt;T, 3&gt; BatchMatMul3DBatchTest </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classarmnn_1_1_i_workload_factory.xhtml">armnn::IWorkloadFactory</a> &amp;&#160;</td>
          <td class="paramname"><em>workloadFactory</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_i_backend_internal.xhtml#a693b40e6b94e958836aeb0410ca186bd">armnn::IBackendInternal::IMemoryManagerSharedPtr</a> &amp;&#160;</td>
          <td class="paramname"><em>memoryManager</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_i_tensor_handle_factory.xhtml">armnn::ITensorHandleFactory</a> &amp;&#160;</td>
          <td class="paramname"><em>tensorHandleFactory</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_batch_mat_mul_test_impl_8cpp_source.xhtml#l00427">427</a> of file <a class="el" href="_batch_mat_mul_test_impl_8cpp_source.xhtml">BatchMatMulTestImpl.cpp</a>.</p>

<p class="reference">References <a class="el" href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a9d02ea768c081d4bdb2b7cab0b3f510d">armnn::QAsymmS8</a>, <a class="el" href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a0a3f57c876f5a230244c38e1453a8a6e">armnn::QAsymmU8</a>, and <a class="el" href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a053c769dcf82d66ef326c86980c02ba7">armnn::QSymmS16</a>.</p>
<div class="fragment"><div class="line"><a name="l00431"></a><span class="lineno">  431</span>&#160;{</div><div class="line"><a name="l00432"></a><span class="lineno">  432</span>&#160;    <span class="keyword">auto</span> descriptor = <a class="code" href="structarmnn_1_1_batch_mat_mul_descriptor.xhtml">armnn::BatchMatMulDescriptor</a>(); <span class="comment">// Arbitrary layout with no transpose/adjointing</span></div><div class="line"><a name="l00433"></a><span class="lineno">  433</span>&#160;</div><div class="line"><a name="l00434"></a><span class="lineno">  434</span>&#160;    <span class="keywordtype">float</span> qScale = 0.0f;</div><div class="line"><a name="l00435"></a><span class="lineno">  435</span>&#160;    int32_t qOffset = 0;</div><div class="line"><a name="l00436"></a><span class="lineno">  436</span>&#160;</div><div class="line"><a name="l00437"></a><span class="lineno">  437</span>&#160;    <span class="keywordflow">switch</span>(ArmnnType)</div><div class="line"><a name="l00438"></a><span class="lineno">  438</span>&#160;    {</div><div class="line"><a name="l00439"></a><span class="lineno">  439</span>&#160;        <span class="keywordflow">case</span> <a class="code" href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a9d02ea768c081d4bdb2b7cab0b3f510d">armnn::DataType::QAsymmS8</a>:</div><div class="line"><a name="l00440"></a><span class="lineno">  440</span>&#160;        <span class="keywordflow">case</span> <a class="code" href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a0a3f57c876f5a230244c38e1453a8a6e">armnn::DataType::QAsymmU8</a>:</div><div class="line"><a name="l00441"></a><span class="lineno">  441</span>&#160;        <span class="keywordflow">case</span> <a class="code" href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a053c769dcf82d66ef326c86980c02ba7">armnn::DataType::QSymmS16</a>:</div><div class="line"><a name="l00442"></a><span class="lineno">  442</span>&#160;            qScale = 1.0f;</div><div class="line"><a name="l00443"></a><span class="lineno">  443</span>&#160;            <span class="keywordflow">break</span>;</div><div class="line"><a name="l00444"></a><span class="lineno">  444</span>&#160;        <span class="keywordflow">default</span>:</div><div class="line"><a name="l00445"></a><span class="lineno">  445</span>&#160;            <span class="keywordflow">break</span>;</div><div class="line"><a name="l00446"></a><span class="lineno">  446</span>&#160;    }</div><div class="line"><a name="l00447"></a><span class="lineno">  447</span>&#160;</div><div class="line"><a name="l00448"></a><span class="lineno">  448</span>&#160;    <a class="code" href="classarmnn_1_1_tensor_info.xhtml">armnn::TensorInfo</a> inputXInfo({2,2,2}, ArmnnType, qScale, qOffset);</div><div class="line"><a name="l00449"></a><span class="lineno">  449</span>&#160;    <a class="code" href="classarmnn_1_1_tensor_info.xhtml">armnn::TensorInfo</a> inputYInfo({2,2,2}, ArmnnType, qScale, qOffset);</div><div class="line"><a name="l00450"></a><span class="lineno">  450</span>&#160;    <a class="code" href="classarmnn_1_1_tensor_info.xhtml">armnn::TensorInfo</a> outputInfo({2,2,2}, ArmnnType, qScale, qOffset);</div><div class="line"><a name="l00451"></a><span class="lineno">  451</span>&#160;</div><div class="line"><a name="l00452"></a><span class="lineno">  452</span>&#160;    std::vector&lt;T&gt; inputX = armnnUtils::QuantizedVector&lt;T&gt;({</div><div class="line"><a name="l00453"></a><span class="lineno">  453</span>&#160;       1, 2,</div><div class="line"><a name="l00454"></a><span class="lineno">  454</span>&#160;       3, 4,</div><div class="line"><a name="l00455"></a><span class="lineno">  455</span>&#160;</div><div class="line"><a name="l00456"></a><span class="lineno">  456</span>&#160;       9, 10,</div><div class="line"><a name="l00457"></a><span class="lineno">  457</span>&#160;       11, 12</div><div class="line"><a name="l00458"></a><span class="lineno">  458</span>&#160;    }, qScale, qOffset);</div><div class="line"><a name="l00459"></a><span class="lineno">  459</span>&#160;</div><div class="line"><a name="l00460"></a><span class="lineno">  460</span>&#160;    std::vector&lt;T&gt; inputY = armnnUtils::QuantizedVector&lt;T&gt;({</div><div class="line"><a name="l00461"></a><span class="lineno">  461</span>&#160;        5, 6,</div><div class="line"><a name="l00462"></a><span class="lineno">  462</span>&#160;        7, 8,</div><div class="line"><a name="l00463"></a><span class="lineno">  463</span>&#160;</div><div class="line"><a name="l00464"></a><span class="lineno">  464</span>&#160;        13, 14,</div><div class="line"><a name="l00465"></a><span class="lineno">  465</span>&#160;        15, 16</div><div class="line"><a name="l00466"></a><span class="lineno">  466</span>&#160;    }, qScale, qOffset);</div><div class="line"><a name="l00467"></a><span class="lineno">  467</span>&#160;</div><div class="line"><a name="l00468"></a><span class="lineno">  468</span>&#160;    std::vector&lt;T&gt; outputExpected = armnnUtils::QuantizedVector&lt;T&gt;({</div><div class="line"><a name="l00469"></a><span class="lineno">  469</span>&#160;        19, 22,</div><div class="line"><a name="l00470"></a><span class="lineno">  470</span>&#160;        43, 50,</div><div class="line"><a name="l00471"></a><span class="lineno">  471</span>&#160;</div><div class="line"><a name="l00472"></a><span class="lineno">  472</span>&#160;        267, 286,</div><div class="line"><a name="l00473"></a><span class="lineno">  473</span>&#160;        323, 346</div><div class="line"><a name="l00474"></a><span class="lineno">  474</span>&#160;    },qScale, qOffset);</div><div class="line"><a name="l00475"></a><span class="lineno">  475</span>&#160;</div><div class="line"><a name="l00476"></a><span class="lineno">  476</span>&#160;    <span class="keywordflow">return</span> BatchMatMulTestImpl&lt;ArmnnType, T, 3&gt;(workloadFactory,</div><div class="line"><a name="l00477"></a><span class="lineno">  477</span>&#160;                                                memoryManager,</div><div class="line"><a name="l00478"></a><span class="lineno">  478</span>&#160;                                                tensorHandleFactory,</div><div class="line"><a name="l00479"></a><span class="lineno">  479</span>&#160;                                                descriptor,</div><div class="line"><a name="l00480"></a><span class="lineno">  480</span>&#160;                                                inputX,</div><div class="line"><a name="l00481"></a><span class="lineno">  481</span>&#160;                                                inputY,</div><div class="line"><a name="l00482"></a><span class="lineno">  482</span>&#160;                                                outputExpected,</div><div class="line"><a name="l00483"></a><span class="lineno">  483</span>&#160;                                                inputXInfo,</div><div class="line"><a name="l00484"></a><span class="lineno">  484</span>&#160;                                                inputYInfo,</div><div class="line"><a name="l00485"></a><span class="lineno">  485</span>&#160;                                                outputInfo);</div><div class="line"><a name="l00486"></a><span class="lineno">  486</span>&#160;}</div><div class="ttc" id="classarmnn_1_1_tensor_info_xhtml"><div class="ttname"><a href="classarmnn_1_1_tensor_info.xhtml">armnn::TensorInfo</a></div><div class="ttdef"><b>Definition:</b> <a href="_tensor_8hpp_source.xhtml#l00152">Tensor.hpp:152</a></div></div>
<div class="ttc" id="namespacearmnn_xhtml_ad8ed01ff3ff33333d8e19db4d2818bb6a9d02ea768c081d4bdb2b7cab0b3f510d"><div class="ttname"><a href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a9d02ea768c081d4bdb2b7cab0b3f510d">armnn::DataType::QAsymmS8</a></div></div>
<div class="ttc" id="namespacearmnn_xhtml_ad8ed01ff3ff33333d8e19db4d2818bb6a053c769dcf82d66ef326c86980c02ba7"><div class="ttname"><a href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a053c769dcf82d66ef326c86980c02ba7">armnn::DataType::QSymmS16</a></div></div>
<div class="ttc" id="namespacearmnn_xhtml_ad8ed01ff3ff33333d8e19db4d2818bb6a0a3f57c876f5a230244c38e1453a8a6e"><div class="ttname"><a href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a0a3f57c876f5a230244c38e1453a8a6e">armnn::DataType::QAsymmU8</a></div></div>
<div class="ttc" id="structarmnn_1_1_batch_mat_mul_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_batch_mat_mul_descriptor.xhtml">armnn::BatchMatMulDescriptor</a></div><div class="ttdoc">A BatchMatMulDescriptor for the BatchMatMul operator. </div><div class="ttdef"><b>Definition:</b> <a href="_descriptors_8hpp_source.xhtml#l01554">Descriptors.hpp:1554</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="a57945c7f6c1346b92c0419e2a1cc8341"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a57945c7f6c1346b92c0419e2a1cc8341">&#9670;&nbsp;</a></span>BatchMatMul3DBroadcastTest()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="struct_layer_test_result.xhtml">LayerTestResult</a>&lt;T, 3&gt; BatchMatMul3DBroadcastTest </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classarmnn_1_1_i_workload_factory.xhtml">armnn::IWorkloadFactory</a> &amp;&#160;</td>
          <td class="paramname"><em>workloadFactory</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_i_backend_internal.xhtml#a693b40e6b94e958836aeb0410ca186bd">armnn::IBackendInternal::IMemoryManagerSharedPtr</a> &amp;&#160;</td>
          <td class="paramname"><em>memoryManager</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_i_tensor_handle_factory.xhtml">armnn::ITensorHandleFactory</a> &amp;&#160;</td>
          <td class="paramname"><em>tensorHandleFactory</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_batch_mat_mul_test_impl_8cpp_source.xhtml#l00525">525</a> of file <a class="el" href="_batch_mat_mul_test_impl_8cpp_source.xhtml">BatchMatMulTestImpl.cpp</a>.</p>

<p class="reference">References <a class="el" href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a9d02ea768c081d4bdb2b7cab0b3f510d">armnn::QAsymmS8</a>, <a class="el" href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a0a3f57c876f5a230244c38e1453a8a6e">armnn::QAsymmU8</a>, and <a class="el" href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a053c769dcf82d66ef326c86980c02ba7">armnn::QSymmS16</a>.</p>
<div class="fragment"><div class="line"><a name="l00529"></a><span class="lineno">  529</span>&#160;{</div><div class="line"><a name="l00530"></a><span class="lineno">  530</span>&#160;    <span class="keyword">auto</span> descriptor = <a class="code" href="structarmnn_1_1_batch_mat_mul_descriptor.xhtml">armnn::BatchMatMulDescriptor</a>(); <span class="comment">// Arbitrary layout with no transpose/adjointing</span></div><div class="line"><a name="l00531"></a><span class="lineno">  531</span>&#160;</div><div class="line"><a name="l00532"></a><span class="lineno">  532</span>&#160;    <span class="keywordtype">float</span> qScale = 0.0f;</div><div class="line"><a name="l00533"></a><span class="lineno">  533</span>&#160;    int32_t qOffset = 0;</div><div class="line"><a name="l00534"></a><span class="lineno">  534</span>&#160;</div><div class="line"><a name="l00535"></a><span class="lineno">  535</span>&#160;    <span class="keywordflow">switch</span>(ArmnnType)</div><div class="line"><a name="l00536"></a><span class="lineno">  536</span>&#160;    {</div><div class="line"><a name="l00537"></a><span class="lineno">  537</span>&#160;        <span class="keywordflow">case</span> <a class="code" href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a9d02ea768c081d4bdb2b7cab0b3f510d">armnn::DataType::QAsymmS8</a>:</div><div class="line"><a name="l00538"></a><span class="lineno">  538</span>&#160;        <span class="keywordflow">case</span> <a class="code" href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a0a3f57c876f5a230244c38e1453a8a6e">armnn::DataType::QAsymmU8</a>:</div><div class="line"><a name="l00539"></a><span class="lineno">  539</span>&#160;        <span class="keywordflow">case</span> <a class="code" href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a053c769dcf82d66ef326c86980c02ba7">armnn::DataType::QSymmS16</a>:</div><div class="line"><a name="l00540"></a><span class="lineno">  540</span>&#160;            qScale = 1.0f;</div><div class="line"><a name="l00541"></a><span class="lineno">  541</span>&#160;            <span class="keywordflow">break</span>;</div><div class="line"><a name="l00542"></a><span class="lineno">  542</span>&#160;        <span class="keywordflow">default</span>:</div><div class="line"><a name="l00543"></a><span class="lineno">  543</span>&#160;            <span class="keywordflow">break</span>;</div><div class="line"><a name="l00544"></a><span class="lineno">  544</span>&#160;    }</div><div class="line"><a name="l00545"></a><span class="lineno">  545</span>&#160;</div><div class="line"><a name="l00546"></a><span class="lineno">  546</span>&#160;    <a class="code" href="classarmnn_1_1_tensor_info.xhtml">armnn::TensorInfo</a> inputXInfo({2,2,2}, ArmnnType, qScale, qOffset);</div><div class="line"><a name="l00547"></a><span class="lineno">  547</span>&#160;    <a class="code" href="classarmnn_1_1_tensor_info.xhtml">armnn::TensorInfo</a> inputYInfo({1,2,2}, ArmnnType, qScale, qOffset);</div><div class="line"><a name="l00548"></a><span class="lineno">  548</span>&#160;    <a class="code" href="classarmnn_1_1_tensor_info.xhtml">armnn::TensorInfo</a> outputInfo({2,2,2}, ArmnnType, qScale, qOffset);</div><div class="line"><a name="l00549"></a><span class="lineno">  549</span>&#160;</div><div class="line"><a name="l00550"></a><span class="lineno">  550</span>&#160;    std::vector&lt;T&gt; inputX = armnnUtils::QuantizedVector&lt;T&gt;({</div><div class="line"><a name="l00551"></a><span class="lineno">  551</span>&#160;       1, 2,</div><div class="line"><a name="l00552"></a><span class="lineno">  552</span>&#160;       3, 4,</div><div class="line"><a name="l00553"></a><span class="lineno">  553</span>&#160;</div><div class="line"><a name="l00554"></a><span class="lineno">  554</span>&#160;       9, 10,</div><div class="line"><a name="l00555"></a><span class="lineno">  555</span>&#160;       11, 12</div><div class="line"><a name="l00556"></a><span class="lineno">  556</span>&#160;    }, qScale, qOffset);</div><div class="line"><a name="l00557"></a><span class="lineno">  557</span>&#160;</div><div class="line"><a name="l00558"></a><span class="lineno">  558</span>&#160;    std::vector&lt;T&gt; inputY = armnnUtils::QuantizedVector&lt;T&gt;({</div><div class="line"><a name="l00559"></a><span class="lineno">  559</span>&#160;        13, 14,</div><div class="line"><a name="l00560"></a><span class="lineno">  560</span>&#160;        15, 16</div><div class="line"><a name="l00561"></a><span class="lineno">  561</span>&#160;    }, qScale, qOffset);</div><div class="line"><a name="l00562"></a><span class="lineno">  562</span>&#160;</div><div class="line"><a name="l00563"></a><span class="lineno">  563</span>&#160;    std::vector&lt;T&gt; outputExpected = armnnUtils::QuantizedVector&lt;T&gt;({</div><div class="line"><a name="l00564"></a><span class="lineno">  564</span>&#160;        43, 46,</div><div class="line"><a name="l00565"></a><span class="lineno">  565</span>&#160;        99, 106,</div><div class="line"><a name="l00566"></a><span class="lineno">  566</span>&#160;</div><div class="line"><a name="l00567"></a><span class="lineno">  567</span>&#160;        267, 286,</div><div class="line"><a name="l00568"></a><span class="lineno">  568</span>&#160;        323, 346</div><div class="line"><a name="l00569"></a><span class="lineno">  569</span>&#160;    },qScale, qOffset);</div><div class="line"><a name="l00570"></a><span class="lineno">  570</span>&#160;</div><div class="line"><a name="l00571"></a><span class="lineno">  571</span>&#160;    <span class="keywordflow">return</span> BatchMatMulTestImpl&lt;ArmnnType, T, 3&gt;(workloadFactory,</div><div class="line"><a name="l00572"></a><span class="lineno">  572</span>&#160;                                                memoryManager,</div><div class="line"><a name="l00573"></a><span class="lineno">  573</span>&#160;                                                tensorHandleFactory,</div><div class="line"><a name="l00574"></a><span class="lineno">  574</span>&#160;                                                descriptor,</div><div class="line"><a name="l00575"></a><span class="lineno">  575</span>&#160;                                                inputX,</div><div class="line"><a name="l00576"></a><span class="lineno">  576</span>&#160;                                                inputY,</div><div class="line"><a name="l00577"></a><span class="lineno">  577</span>&#160;                                                outputExpected,</div><div class="line"><a name="l00578"></a><span class="lineno">  578</span>&#160;                                                inputXInfo,</div><div class="line"><a name="l00579"></a><span class="lineno">  579</span>&#160;                                                inputYInfo,</div><div class="line"><a name="l00580"></a><span class="lineno">  580</span>&#160;                                                outputInfo);</div><div class="line"><a name="l00581"></a><span class="lineno">  581</span>&#160;}</div><div class="ttc" id="classarmnn_1_1_tensor_info_xhtml"><div class="ttname"><a href="classarmnn_1_1_tensor_info.xhtml">armnn::TensorInfo</a></div><div class="ttdef"><b>Definition:</b> <a href="_tensor_8hpp_source.xhtml#l00152">Tensor.hpp:152</a></div></div>
<div class="ttc" id="namespacearmnn_xhtml_ad8ed01ff3ff33333d8e19db4d2818bb6a9d02ea768c081d4bdb2b7cab0b3f510d"><div class="ttname"><a href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a9d02ea768c081d4bdb2b7cab0b3f510d">armnn::DataType::QAsymmS8</a></div></div>
<div class="ttc" id="namespacearmnn_xhtml_ad8ed01ff3ff33333d8e19db4d2818bb6a053c769dcf82d66ef326c86980c02ba7"><div class="ttname"><a href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a053c769dcf82d66ef326c86980c02ba7">armnn::DataType::QSymmS16</a></div></div>
<div class="ttc" id="namespacearmnn_xhtml_ad8ed01ff3ff33333d8e19db4d2818bb6a0a3f57c876f5a230244c38e1453a8a6e"><div class="ttname"><a href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a0a3f57c876f5a230244c38e1453a8a6e">armnn::DataType::QAsymmU8</a></div></div>
<div class="ttc" id="structarmnn_1_1_batch_mat_mul_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_batch_mat_mul_descriptor.xhtml">armnn::BatchMatMulDescriptor</a></div><div class="ttdoc">A BatchMatMulDescriptor for the BatchMatMul operator. </div><div class="ttdef"><b>Definition:</b> <a href="_descriptors_8hpp_source.xhtml#l01554">Descriptors.hpp:1554</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="afb755eee7624b3d112fbb714284e86d9"></a>
<h2 class="memtitle"><span class="permalink"><a href="#afb755eee7624b3d112fbb714284e86d9">&#9670;&nbsp;</a></span>BatchMatMul3DNonSquareTest()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="struct_layer_test_result.xhtml">LayerTestResult</a>&lt;T, 3&gt; BatchMatMul3DNonSquareTest </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classarmnn_1_1_i_workload_factory.xhtml">armnn::IWorkloadFactory</a> &amp;&#160;</td>
          <td class="paramname"><em>workloadFactory</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_i_backend_internal.xhtml#a693b40e6b94e958836aeb0410ca186bd">armnn::IBackendInternal::IMemoryManagerSharedPtr</a> &amp;&#160;</td>
          <td class="paramname"><em>memoryManager</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_i_tensor_handle_factory.xhtml">armnn::ITensorHandleFactory</a> &amp;&#160;</td>
          <td class="paramname"><em>tensorHandleFactory</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_batch_mat_mul_test_impl_8cpp_source.xhtml#l00901">901</a> of file <a class="el" href="_batch_mat_mul_test_impl_8cpp_source.xhtml">BatchMatMulTestImpl.cpp</a>.</p>

<p class="reference">References <a class="el" href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a9d02ea768c081d4bdb2b7cab0b3f510d">armnn::QAsymmS8</a>, <a class="el" href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a0a3f57c876f5a230244c38e1453a8a6e">armnn::QAsymmU8</a>, and <a class="el" href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a053c769dcf82d66ef326c86980c02ba7">armnn::QSymmS16</a>.</p>
<div class="fragment"><div class="line"><a name="l00905"></a><span class="lineno">  905</span>&#160;{</div><div class="line"><a name="l00906"></a><span class="lineno">  906</span>&#160;    <span class="keyword">auto</span> descriptor = <a class="code" href="structarmnn_1_1_batch_mat_mul_descriptor.xhtml">armnn::BatchMatMulDescriptor</a>(); <span class="comment">// Arbitrary layout with no transpose/adjointing</span></div><div class="line"><a name="l00907"></a><span class="lineno">  907</span>&#160;</div><div class="line"><a name="l00908"></a><span class="lineno">  908</span>&#160;    <span class="keywordtype">float</span> qScale = 0.0f;</div><div class="line"><a name="l00909"></a><span class="lineno">  909</span>&#160;    int32_t qOffset = 0;</div><div class="line"><a name="l00910"></a><span class="lineno">  910</span>&#160;</div><div class="line"><a name="l00911"></a><span class="lineno">  911</span>&#160;    <span class="keywordflow">switch</span>(ArmnnType)</div><div class="line"><a name="l00912"></a><span class="lineno">  912</span>&#160;    {</div><div class="line"><a name="l00913"></a><span class="lineno">  913</span>&#160;        <span class="keywordflow">case</span> <a class="code" href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a9d02ea768c081d4bdb2b7cab0b3f510d">armnn::DataType::QAsymmS8</a>:</div><div class="line"><a name="l00914"></a><span class="lineno">  914</span>&#160;        <span class="keywordflow">case</span> <a class="code" href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a0a3f57c876f5a230244c38e1453a8a6e">armnn::DataType::QAsymmU8</a>:</div><div class="line"><a name="l00915"></a><span class="lineno">  915</span>&#160;        <span class="keywordflow">case</span> <a class="code" href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a053c769dcf82d66ef326c86980c02ba7">armnn::DataType::QSymmS16</a>:</div><div class="line"><a name="l00916"></a><span class="lineno">  916</span>&#160;            qScale = 1.0f;</div><div class="line"><a name="l00917"></a><span class="lineno">  917</span>&#160;            <span class="keywordflow">break</span>;</div><div class="line"><a name="l00918"></a><span class="lineno">  918</span>&#160;        <span class="keywordflow">default</span>:</div><div class="line"><a name="l00919"></a><span class="lineno">  919</span>&#160;            <span class="keywordflow">break</span>;</div><div class="line"><a name="l00920"></a><span class="lineno">  920</span>&#160;    }</div><div class="line"><a name="l00921"></a><span class="lineno">  921</span>&#160;</div><div class="line"><a name="l00922"></a><span class="lineno">  922</span>&#160;    <a class="code" href="classarmnn_1_1_tensor_info.xhtml">armnn::TensorInfo</a> inputXInfo({2,5,3}, ArmnnType, qScale, qOffset);</div><div class="line"><a name="l00923"></a><span class="lineno">  923</span>&#160;    <a class="code" href="classarmnn_1_1_tensor_info.xhtml">armnn::TensorInfo</a> inputYInfo({2,3,4}, ArmnnType, qScale, qOffset);</div><div class="line"><a name="l00924"></a><span class="lineno">  924</span>&#160;    <a class="code" href="classarmnn_1_1_tensor_info.xhtml">armnn::TensorInfo</a> outputInfo({2,5,4}, ArmnnType, qScale, qOffset);</div><div class="line"><a name="l00925"></a><span class="lineno">  925</span>&#160;</div><div class="line"><a name="l00926"></a><span class="lineno">  926</span>&#160;    std::vector&lt;T&gt; inputX = armnnUtils::QuantizedVector&lt;T&gt;({</div><div class="line"><a name="l00927"></a><span class="lineno">  927</span>&#160;       8, 8, 4,</div><div class="line"><a name="l00928"></a><span class="lineno">  928</span>&#160;       6, 1, 3,</div><div class="line"><a name="l00929"></a><span class="lineno">  929</span>&#160;       8, 8, 3,</div><div class="line"><a name="l00930"></a><span class="lineno">  930</span>&#160;       8, 9, 8,</div><div class="line"><a name="l00931"></a><span class="lineno">  931</span>&#160;       5, 4, 4,</div><div class="line"><a name="l00932"></a><span class="lineno">  932</span>&#160;</div><div class="line"><a name="l00933"></a><span class="lineno">  933</span>&#160;       1, 8, 5,</div><div class="line"><a name="l00934"></a><span class="lineno">  934</span>&#160;       7, 1, 1,</div><div class="line"><a name="l00935"></a><span class="lineno">  935</span>&#160;       8, 7, 9,</div><div class="line"><a name="l00936"></a><span class="lineno">  936</span>&#160;       3, 2, 7,</div><div class="line"><a name="l00937"></a><span class="lineno">  937</span>&#160;       8, 5, 3</div><div class="line"><a name="l00938"></a><span class="lineno">  938</span>&#160;    }, qScale, qOffset);</div><div class="line"><a name="l00939"></a><span class="lineno">  939</span>&#160;</div><div class="line"><a name="l00940"></a><span class="lineno">  940</span>&#160;    std::vector&lt;T&gt; inputY = armnnUtils::QuantizedVector&lt;T&gt;({</div><div class="line"><a name="l00941"></a><span class="lineno">  941</span>&#160;        6, 2, 3, 2,</div><div class="line"><a name="l00942"></a><span class="lineno">  942</span>&#160;        6, 2, 2, 8,</div><div class="line"><a name="l00943"></a><span class="lineno">  943</span>&#160;        3, 7, 8, 1,</div><div class="line"><a name="l00944"></a><span class="lineno">  944</span>&#160;</div><div class="line"><a name="l00945"></a><span class="lineno">  945</span>&#160;        7, 2, 9, 5,</div><div class="line"><a name="l00946"></a><span class="lineno">  946</span>&#160;        2, 3, 1, 3,</div><div class="line"><a name="l00947"></a><span class="lineno">  947</span>&#160;        2, 7, 7, 5</div><div class="line"><a name="l00948"></a><span class="lineno">  948</span>&#160;    }, qScale, qOffset);</div><div class="line"><a name="l00949"></a><span class="lineno">  949</span>&#160;</div><div class="line"><a name="l00950"></a><span class="lineno">  950</span>&#160;    std::vector&lt;T&gt; outputExpected = armnnUtils::QuantizedVector&lt;T&gt;({</div><div class="line"><a name="l00951"></a><span class="lineno">  951</span>&#160;        108, 60, 72, 84,</div><div class="line"><a name="l00952"></a><span class="lineno">  952</span>&#160;        51, 35, 44, 23,</div><div class="line"><a name="l00953"></a><span class="lineno">  953</span>&#160;        105, 53, 64, 83,</div><div class="line"><a name="l00954"></a><span class="lineno">  954</span>&#160;        126, 90, 106, 96,</div><div class="line"><a name="l00955"></a><span class="lineno">  955</span>&#160;        66, 46, 55, 46,</div><div class="line"><a name="l00956"></a><span class="lineno">  956</span>&#160;</div><div class="line"><a name="l00957"></a><span class="lineno">  957</span>&#160;        33, 61, 52, 54,</div><div class="line"><a name="l00958"></a><span class="lineno">  958</span>&#160;        53, 24, 71, 43,</div><div class="line"><a name="l00959"></a><span class="lineno">  959</span>&#160;        88, 100, 142, 106,</div><div class="line"><a name="l00960"></a><span class="lineno">  960</span>&#160;        39, 61, 78, 56,</div><div class="line"><a name="l00961"></a><span class="lineno">  961</span>&#160;        72, 52, 98, 70</div><div class="line"><a name="l00962"></a><span class="lineno">  962</span>&#160;    },qScale, qOffset);</div><div class="line"><a name="l00963"></a><span class="lineno">  963</span>&#160;</div><div class="line"><a name="l00964"></a><span class="lineno">  964</span>&#160;    <span class="keywordflow">return</span> BatchMatMulTestImpl&lt;ArmnnType, T, 3&gt;(workloadFactory,</div><div class="line"><a name="l00965"></a><span class="lineno">  965</span>&#160;                                                memoryManager,</div><div class="line"><a name="l00966"></a><span class="lineno">  966</span>&#160;                                                tensorHandleFactory,</div><div class="line"><a name="l00967"></a><span class="lineno">  967</span>&#160;                                                descriptor,</div><div class="line"><a name="l00968"></a><span class="lineno">  968</span>&#160;                                                inputX,</div><div class="line"><a name="l00969"></a><span class="lineno">  969</span>&#160;                                                inputY,</div><div class="line"><a name="l00970"></a><span class="lineno">  970</span>&#160;                                                outputExpected,</div><div class="line"><a name="l00971"></a><span class="lineno">  971</span>&#160;                                                inputXInfo,</div><div class="line"><a name="l00972"></a><span class="lineno">  972</span>&#160;                                                inputYInfo,</div><div class="line"><a name="l00973"></a><span class="lineno">  973</span>&#160;                                                outputInfo);</div><div class="line"><a name="l00974"></a><span class="lineno">  974</span>&#160;}</div><div class="ttc" id="classarmnn_1_1_tensor_info_xhtml"><div class="ttname"><a href="classarmnn_1_1_tensor_info.xhtml">armnn::TensorInfo</a></div><div class="ttdef"><b>Definition:</b> <a href="_tensor_8hpp_source.xhtml#l00152">Tensor.hpp:152</a></div></div>
<div class="ttc" id="namespacearmnn_xhtml_ad8ed01ff3ff33333d8e19db4d2818bb6a9d02ea768c081d4bdb2b7cab0b3f510d"><div class="ttname"><a href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a9d02ea768c081d4bdb2b7cab0b3f510d">armnn::DataType::QAsymmS8</a></div></div>
<div class="ttc" id="namespacearmnn_xhtml_ad8ed01ff3ff33333d8e19db4d2818bb6a053c769dcf82d66ef326c86980c02ba7"><div class="ttname"><a href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a053c769dcf82d66ef326c86980c02ba7">armnn::DataType::QSymmS16</a></div></div>
<div class="ttc" id="namespacearmnn_xhtml_ad8ed01ff3ff33333d8e19db4d2818bb6a0a3f57c876f5a230244c38e1453a8a6e"><div class="ttname"><a href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a0a3f57c876f5a230244c38e1453a8a6e">armnn::DataType::QAsymmU8</a></div></div>
<div class="ttc" id="structarmnn_1_1_batch_mat_mul_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_batch_mat_mul_descriptor.xhtml">armnn::BatchMatMulDescriptor</a></div><div class="ttdoc">A BatchMatMulDescriptor for the BatchMatMul operator. </div><div class="ttdef"><b>Definition:</b> <a href="_descriptors_8hpp_source.xhtml#l01554">Descriptors.hpp:1554</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="a1c63ad9e2eb15027434c126aa7713db7"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a1c63ad9e2eb15027434c126aa7713db7">&#9670;&nbsp;</a></span>BatchMatMul3DSimpleTest()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="struct_layer_test_result.xhtml">LayerTestResult</a>&lt;T, 3&gt; BatchMatMul3DSimpleTest </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classarmnn_1_1_i_workload_factory.xhtml">armnn::IWorkloadFactory</a> &amp;&#160;</td>
          <td class="paramname"><em>workloadFactory</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_i_backend_internal.xhtml#a693b40e6b94e958836aeb0410ca186bd">armnn::IBackendInternal::IMemoryManagerSharedPtr</a> &amp;&#160;</td>
          <td class="paramname"><em>memoryManager</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_i_tensor_handle_factory.xhtml">armnn::ITensorHandleFactory</a> &amp;&#160;</td>
          <td class="paramname"><em>tensorHandleFactory</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_batch_mat_mul_test_impl_8cpp_source.xhtml#l00156">156</a> of file <a class="el" href="_batch_mat_mul_test_impl_8cpp_source.xhtml">BatchMatMulTestImpl.cpp</a>.</p>

<p class="reference">References <a class="el" href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a9d02ea768c081d4bdb2b7cab0b3f510d">armnn::QAsymmS8</a>, <a class="el" href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a0a3f57c876f5a230244c38e1453a8a6e">armnn::QAsymmU8</a>, and <a class="el" href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a053c769dcf82d66ef326c86980c02ba7">armnn::QSymmS16</a>.</p>
<div class="fragment"><div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160;{</div><div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160;    <span class="keyword">auto</span> descriptor = <a class="code" href="structarmnn_1_1_batch_mat_mul_descriptor.xhtml">armnn::BatchMatMulDescriptor</a>(); <span class="comment">// Arbitrary layout with no transpose/adjointing</span></div><div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160;</div><div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160;    <span class="keywordtype">float</span> qScale = 0.0f;</div><div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;    int32_t qOffset = 0;</div><div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160;</div><div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160;    <span class="keywordflow">switch</span>(ArmnnType)</div><div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160;    {</div><div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160;        <span class="keywordflow">case</span> <a class="code" href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a9d02ea768c081d4bdb2b7cab0b3f510d">armnn::DataType::QAsymmS8</a>:</div><div class="line"><a name="l00169"></a><span class="lineno">  169</span>&#160;        <span class="keywordflow">case</span> <a class="code" href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a0a3f57c876f5a230244c38e1453a8a6e">armnn::DataType::QAsymmU8</a>:</div><div class="line"><a name="l00170"></a><span class="lineno">  170</span>&#160;        <span class="keywordflow">case</span> <a class="code" href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a053c769dcf82d66ef326c86980c02ba7">armnn::DataType::QSymmS16</a>:</div><div class="line"><a name="l00171"></a><span class="lineno">  171</span>&#160;            qScale = 1.0f;</div><div class="line"><a name="l00172"></a><span class="lineno">  172</span>&#160;            <span class="keywordflow">break</span>;</div><div class="line"><a name="l00173"></a><span class="lineno">  173</span>&#160;        <span class="keywordflow">default</span>:</div><div class="line"><a name="l00174"></a><span class="lineno">  174</span>&#160;            <span class="keywordflow">break</span>;</div><div class="line"><a name="l00175"></a><span class="lineno">  175</span>&#160;    }</div><div class="line"><a name="l00176"></a><span class="lineno">  176</span>&#160;</div><div class="line"><a name="l00177"></a><span class="lineno">  177</span>&#160;    <a class="code" href="classarmnn_1_1_tensor_info.xhtml">armnn::TensorInfo</a> inputXInfo({1,2,2}, ArmnnType, qScale, qOffset);</div><div class="line"><a name="l00178"></a><span class="lineno">  178</span>&#160;    <a class="code" href="classarmnn_1_1_tensor_info.xhtml">armnn::TensorInfo</a> inputYInfo({1,2,2}, ArmnnType, qScale, qOffset);</div><div class="line"><a name="l00179"></a><span class="lineno">  179</span>&#160;    <a class="code" href="classarmnn_1_1_tensor_info.xhtml">armnn::TensorInfo</a> outputInfo({1,2,2}, ArmnnType, qScale, qOffset);</div><div class="line"><a name="l00180"></a><span class="lineno">  180</span>&#160;</div><div class="line"><a name="l00181"></a><span class="lineno">  181</span>&#160;    std::vector&lt;T&gt; inputX = armnnUtils::QuantizedVector&lt;T&gt;({</div><div class="line"><a name="l00182"></a><span class="lineno">  182</span>&#160;       1, 2,</div><div class="line"><a name="l00183"></a><span class="lineno">  183</span>&#160;       3, 4</div><div class="line"><a name="l00184"></a><span class="lineno">  184</span>&#160;    }, qScale, qOffset);</div><div class="line"><a name="l00185"></a><span class="lineno">  185</span>&#160;</div><div class="line"><a name="l00186"></a><span class="lineno">  186</span>&#160;    std::vector&lt;T&gt; inputY = armnnUtils::QuantizedVector&lt;T&gt;({</div><div class="line"><a name="l00187"></a><span class="lineno">  187</span>&#160;        5, 6,</div><div class="line"><a name="l00188"></a><span class="lineno">  188</span>&#160;        7, 8</div><div class="line"><a name="l00189"></a><span class="lineno">  189</span>&#160;    }, qScale, qOffset);</div><div class="line"><a name="l00190"></a><span class="lineno">  190</span>&#160;</div><div class="line"><a name="l00191"></a><span class="lineno">  191</span>&#160;    std::vector&lt;T&gt; outputExpected = armnnUtils::QuantizedVector&lt;T&gt;({</div><div class="line"><a name="l00192"></a><span class="lineno">  192</span>&#160;        19, 22,</div><div class="line"><a name="l00193"></a><span class="lineno">  193</span>&#160;        43, 50</div><div class="line"><a name="l00194"></a><span class="lineno">  194</span>&#160;    },qScale, qOffset);</div><div class="line"><a name="l00195"></a><span class="lineno">  195</span>&#160;</div><div class="line"><a name="l00196"></a><span class="lineno">  196</span>&#160;    <span class="keywordflow">return</span> BatchMatMulTestImpl&lt;ArmnnType, T, 3&gt;(workloadFactory,</div><div class="line"><a name="l00197"></a><span class="lineno">  197</span>&#160;                                                memoryManager,</div><div class="line"><a name="l00198"></a><span class="lineno">  198</span>&#160;                                                tensorHandleFactory,</div><div class="line"><a name="l00199"></a><span class="lineno">  199</span>&#160;                                                descriptor,</div><div class="line"><a name="l00200"></a><span class="lineno">  200</span>&#160;                                                inputX,</div><div class="line"><a name="l00201"></a><span class="lineno">  201</span>&#160;                                                inputY,</div><div class="line"><a name="l00202"></a><span class="lineno">  202</span>&#160;                                                outputExpected,</div><div class="line"><a name="l00203"></a><span class="lineno">  203</span>&#160;                                                inputXInfo,</div><div class="line"><a name="l00204"></a><span class="lineno">  204</span>&#160;                                                inputYInfo,</div><div class="line"><a name="l00205"></a><span class="lineno">  205</span>&#160;                                                outputInfo);</div><div class="line"><a name="l00206"></a><span class="lineno">  206</span>&#160;}</div><div class="ttc" id="classarmnn_1_1_tensor_info_xhtml"><div class="ttname"><a href="classarmnn_1_1_tensor_info.xhtml">armnn::TensorInfo</a></div><div class="ttdef"><b>Definition:</b> <a href="_tensor_8hpp_source.xhtml#l00152">Tensor.hpp:152</a></div></div>
<div class="ttc" id="namespacearmnn_xhtml_ad8ed01ff3ff33333d8e19db4d2818bb6a9d02ea768c081d4bdb2b7cab0b3f510d"><div class="ttname"><a href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a9d02ea768c081d4bdb2b7cab0b3f510d">armnn::DataType::QAsymmS8</a></div></div>
<div class="ttc" id="namespacearmnn_xhtml_ad8ed01ff3ff33333d8e19db4d2818bb6a053c769dcf82d66ef326c86980c02ba7"><div class="ttname"><a href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a053c769dcf82d66ef326c86980c02ba7">armnn::DataType::QSymmS16</a></div></div>
<div class="ttc" id="namespacearmnn_xhtml_ad8ed01ff3ff33333d8e19db4d2818bb6a0a3f57c876f5a230244c38e1453a8a6e"><div class="ttname"><a href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a0a3f57c876f5a230244c38e1453a8a6e">armnn::DataType::QAsymmU8</a></div></div>
<div class="ttc" id="structarmnn_1_1_batch_mat_mul_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_batch_mat_mul_descriptor.xhtml">armnn::BatchMatMulDescriptor</a></div><div class="ttdoc">A BatchMatMulDescriptor for the BatchMatMul operator. </div><div class="ttdef"><b>Definition:</b> <a href="_descriptors_8hpp_source.xhtml#l01554">Descriptors.hpp:1554</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="a673a64837b30d9687d7208de6bbde3ac"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a673a64837b30d9687d7208de6bbde3ac">&#9670;&nbsp;</a></span>BatchMatMulNCHWSimpleTest()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="struct_layer_test_result.xhtml">LayerTestResult</a>&lt;T, 4&gt; BatchMatMulNCHWSimpleTest </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classarmnn_1_1_i_workload_factory.xhtml">armnn::IWorkloadFactory</a> &amp;&#160;</td>
          <td class="paramname"><em>workloadFactory</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_i_backend_internal.xhtml#a693b40e6b94e958836aeb0410ca186bd">armnn::IBackendInternal::IMemoryManagerSharedPtr</a> &amp;&#160;</td>
          <td class="paramname"><em>memoryManager</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_i_tensor_handle_factory.xhtml">armnn::ITensorHandleFactory</a> &amp;&#160;</td>
          <td class="paramname"><em>tensorHandleFactory</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_batch_mat_mul_test_impl_8cpp_source.xhtml#l00245">245</a> of file <a class="el" href="_batch_mat_mul_test_impl_8cpp_source.xhtml">BatchMatMulTestImpl.cpp</a>.</p>

<p class="reference">References <a class="el" href="namespacearmnn.xhtml#ad1d5cce2d9e9a5d61c243e5c989112e0a6b99f356fe3b30a2a850b5ea897c289f">armnn::NCHW</a>, <a class="el" href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a9d02ea768c081d4bdb2b7cab0b3f510d">armnn::QAsymmS8</a>, <a class="el" href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a0a3f57c876f5a230244c38e1453a8a6e">armnn::QAsymmU8</a>, and <a class="el" href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a053c769dcf82d66ef326c86980c02ba7">armnn::QSymmS16</a>.</p>
<div class="fragment"><div class="line"><a name="l00249"></a><span class="lineno">  249</span>&#160;{</div><div class="line"><a name="l00250"></a><span class="lineno">  250</span>&#160;    <span class="keyword">auto</span> descriptor = <a class="code" href="structarmnn_1_1_batch_mat_mul_descriptor.xhtml">armnn::BatchMatMulDescriptor</a>(</div><div class="line"><a name="l00251"></a><span class="lineno">  251</span>&#160;        <a class="code" href="classarmnn_1_1_optional.xhtml">armnn::Optional&lt;armnn::DataLayout&gt;</a>(<a class="code" href="namespacearmnn.xhtml#ad1d5cce2d9e9a5d61c243e5c989112e0a6b99f356fe3b30a2a850b5ea897c289f">armnn::DataLayout::NCHW</a>),</div><div class="line"><a name="l00252"></a><span class="lineno">  252</span>&#160;        <a class="code" href="classarmnn_1_1_optional.xhtml">armnn::Optional&lt;armnn::DataLayout&gt;</a>(<a class="code" href="namespacearmnn.xhtml#ad1d5cce2d9e9a5d61c243e5c989112e0a6b99f356fe3b30a2a850b5ea897c289f">armnn::DataLayout::NCHW</a>));</div><div class="line"><a name="l00253"></a><span class="lineno">  253</span>&#160;</div><div class="line"><a name="l00254"></a><span class="lineno">  254</span>&#160;    <span class="keywordtype">float</span> qScale = 0.0f;</div><div class="line"><a name="l00255"></a><span class="lineno">  255</span>&#160;    int32_t qOffset = 0;</div><div class="line"><a name="l00256"></a><span class="lineno">  256</span>&#160;</div><div class="line"><a name="l00257"></a><span class="lineno">  257</span>&#160;    <span class="keywordflow">switch</span>(ArmnnType)</div><div class="line"><a name="l00258"></a><span class="lineno">  258</span>&#160;    {</div><div class="line"><a name="l00259"></a><span class="lineno">  259</span>&#160;        <span class="keywordflow">case</span> <a class="code" href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a9d02ea768c081d4bdb2b7cab0b3f510d">armnn::DataType::QAsymmS8</a>:</div><div class="line"><a name="l00260"></a><span class="lineno">  260</span>&#160;        <span class="keywordflow">case</span> <a class="code" href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a0a3f57c876f5a230244c38e1453a8a6e">armnn::DataType::QAsymmU8</a>:</div><div class="line"><a name="l00261"></a><span class="lineno">  261</span>&#160;        <span class="keywordflow">case</span> <a class="code" href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a053c769dcf82d66ef326c86980c02ba7">armnn::DataType::QSymmS16</a>:</div><div class="line"><a name="l00262"></a><span class="lineno">  262</span>&#160;            qScale = 1.0f;</div><div class="line"><a name="l00263"></a><span class="lineno">  263</span>&#160;            <span class="keywordflow">break</span>;</div><div class="line"><a name="l00264"></a><span class="lineno">  264</span>&#160;        <span class="keywordflow">default</span>:</div><div class="line"><a name="l00265"></a><span class="lineno">  265</span>&#160;            <span class="keywordflow">break</span>;</div><div class="line"><a name="l00266"></a><span class="lineno">  266</span>&#160;    }</div><div class="line"><a name="l00267"></a><span class="lineno">  267</span>&#160;</div><div class="line"><a name="l00268"></a><span class="lineno">  268</span>&#160;    <a class="code" href="classarmnn_1_1_tensor_info.xhtml">armnn::TensorInfo</a> inputXInfo({1,1,2,2}, ArmnnType, qScale, qOffset);</div><div class="line"><a name="l00269"></a><span class="lineno">  269</span>&#160;    <a class="code" href="classarmnn_1_1_tensor_info.xhtml">armnn::TensorInfo</a> inputYInfo({1,1,2,2}, ArmnnType, qScale, qOffset);</div><div class="line"><a name="l00270"></a><span class="lineno">  270</span>&#160;    <a class="code" href="classarmnn_1_1_tensor_info.xhtml">armnn::TensorInfo</a> outputInfo({1,1,2,2}, ArmnnType, qScale, qOffset);</div><div class="line"><a name="l00271"></a><span class="lineno">  271</span>&#160;</div><div class="line"><a name="l00272"></a><span class="lineno">  272</span>&#160;    std::vector&lt;T&gt; inputX = armnnUtils::QuantizedVector&lt;T&gt;({</div><div class="line"><a name="l00273"></a><span class="lineno">  273</span>&#160;       1, 2,</div><div class="line"><a name="l00274"></a><span class="lineno">  274</span>&#160;       3, 4</div><div class="line"><a name="l00275"></a><span class="lineno">  275</span>&#160;    }, qScale, qOffset);</div><div class="line"><a name="l00276"></a><span class="lineno">  276</span>&#160;</div><div class="line"><a name="l00277"></a><span class="lineno">  277</span>&#160;    std::vector&lt;T&gt; inputY = armnnUtils::QuantizedVector&lt;T&gt;({</div><div class="line"><a name="l00278"></a><span class="lineno">  278</span>&#160;        5, 6,</div><div class="line"><a name="l00279"></a><span class="lineno">  279</span>&#160;        7, 8</div><div class="line"><a name="l00280"></a><span class="lineno">  280</span>&#160;    }, qScale, qOffset);</div><div class="line"><a name="l00281"></a><span class="lineno">  281</span>&#160;</div><div class="line"><a name="l00282"></a><span class="lineno">  282</span>&#160;    std::vector&lt;T&gt; outputExpected = armnnUtils::QuantizedVector&lt;T&gt;({</div><div class="line"><a name="l00283"></a><span class="lineno">  283</span>&#160;        19, 22,</div><div class="line"><a name="l00284"></a><span class="lineno">  284</span>&#160;        43, 50</div><div class="line"><a name="l00285"></a><span class="lineno">  285</span>&#160;    },qScale, qOffset);</div><div class="line"><a name="l00286"></a><span class="lineno">  286</span>&#160;</div><div class="line"><a name="l00287"></a><span class="lineno">  287</span>&#160;    <span class="keywordflow">return</span> BatchMatMulTestImpl&lt;ArmnnType, T, 4&gt;(workloadFactory,</div><div class="line"><a name="l00288"></a><span class="lineno">  288</span>&#160;                                                memoryManager,</div><div class="line"><a name="l00289"></a><span class="lineno">  289</span>&#160;                                                tensorHandleFactory,</div><div class="line"><a name="l00290"></a><span class="lineno">  290</span>&#160;                                                descriptor,</div><div class="line"><a name="l00291"></a><span class="lineno">  291</span>&#160;                                                inputX,</div><div class="line"><a name="l00292"></a><span class="lineno">  292</span>&#160;                                                inputY,</div><div class="line"><a name="l00293"></a><span class="lineno">  293</span>&#160;                                                outputExpected,</div><div class="line"><a name="l00294"></a><span class="lineno">  294</span>&#160;                                                inputXInfo,</div><div class="line"><a name="l00295"></a><span class="lineno">  295</span>&#160;                                                inputYInfo,</div><div class="line"><a name="l00296"></a><span class="lineno">  296</span>&#160;                                                outputInfo);</div><div class="line"><a name="l00297"></a><span class="lineno">  297</span>&#160;}</div><div class="ttc" id="classarmnn_1_1_optional_xhtml"><div class="ttname"><a href="classarmnn_1_1_optional.xhtml">armnn::Optional</a></div><div class="ttdef"><b>Definition:</b> <a href="_optional_8hpp_source.xhtml#l00270">Optional.hpp:270</a></div></div>
<div class="ttc" id="classarmnn_1_1_tensor_info_xhtml"><div class="ttname"><a href="classarmnn_1_1_tensor_info.xhtml">armnn::TensorInfo</a></div><div class="ttdef"><b>Definition:</b> <a href="_tensor_8hpp_source.xhtml#l00152">Tensor.hpp:152</a></div></div>
<div class="ttc" id="namespacearmnn_xhtml_ad8ed01ff3ff33333d8e19db4d2818bb6a9d02ea768c081d4bdb2b7cab0b3f510d"><div class="ttname"><a href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a9d02ea768c081d4bdb2b7cab0b3f510d">armnn::DataType::QAsymmS8</a></div></div>
<div class="ttc" id="namespacearmnn_xhtml_ad8ed01ff3ff33333d8e19db4d2818bb6a053c769dcf82d66ef326c86980c02ba7"><div class="ttname"><a href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a053c769dcf82d66ef326c86980c02ba7">armnn::DataType::QSymmS16</a></div></div>
<div class="ttc" id="namespacearmnn_xhtml_ad8ed01ff3ff33333d8e19db4d2818bb6a0a3f57c876f5a230244c38e1453a8a6e"><div class="ttname"><a href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a0a3f57c876f5a230244c38e1453a8a6e">armnn::DataType::QAsymmU8</a></div></div>
<div class="ttc" id="structarmnn_1_1_batch_mat_mul_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_batch_mat_mul_descriptor.xhtml">armnn::BatchMatMulDescriptor</a></div><div class="ttdoc">A BatchMatMulDescriptor for the BatchMatMul operator. </div><div class="ttdef"><b>Definition:</b> <a href="_descriptors_8hpp_source.xhtml#l01554">Descriptors.hpp:1554</a></div></div>
<div class="ttc" id="namespacearmnn_xhtml_ad1d5cce2d9e9a5d61c243e5c989112e0a6b99f356fe3b30a2a850b5ea897c289f"><div class="ttname"><a href="namespacearmnn.xhtml#ad1d5cce2d9e9a5d61c243e5c989112e0a6b99f356fe3b30a2a850b5ea897c289f">armnn::DataLayout::NCHW</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="a7c059f34ba2b38ca71163c125c62b3fe"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a7c059f34ba2b38ca71163c125c62b3fe">&#9670;&nbsp;</a></span>BatchMatMulNDHWCNHWCTest()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="struct_layer_test_result.xhtml">LayerTestResult</a>&lt;T, 5&gt; BatchMatMulNDHWCNHWCTest </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classarmnn_1_1_i_workload_factory.xhtml">armnn::IWorkloadFactory</a> &amp;&#160;</td>
          <td class="paramname"><em>workloadFactory</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_i_backend_internal.xhtml#a693b40e6b94e958836aeb0410ca186bd">armnn::IBackendInternal::IMemoryManagerSharedPtr</a> &amp;&#160;</td>
          <td class="paramname"><em>memoryManager</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_i_tensor_handle_factory.xhtml">armnn::ITensorHandleFactory</a> &amp;&#160;</td>
          <td class="paramname"><em>tensorHandleFactory</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_batch_mat_mul_test_impl_8cpp_source.xhtml#l00715">715</a> of file <a class="el" href="_batch_mat_mul_test_impl_8cpp_source.xhtml">BatchMatMulTestImpl.cpp</a>.</p>

<p class="reference">References <a class="el" href="namespacearmnn.xhtml#ad1d5cce2d9e9a5d61c243e5c989112e0a4dd0194b114cbf51da5b3a72569863ef">armnn::NDHWC</a>, <a class="el" href="namespacearmnn.xhtml#ad1d5cce2d9e9a5d61c243e5c989112e0ad066db54b89b0912e7e7c6da51e2da51">armnn::NHWC</a>, <a class="el" href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a9d02ea768c081d4bdb2b7cab0b3f510d">armnn::QAsymmS8</a>, <a class="el" href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a0a3f57c876f5a230244c38e1453a8a6e">armnn::QAsymmU8</a>, and <a class="el" href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a053c769dcf82d66ef326c86980c02ba7">armnn::QSymmS16</a>.</p>
<div class="fragment"><div class="line"><a name="l00719"></a><span class="lineno">  719</span>&#160;{</div><div class="line"><a name="l00720"></a><span class="lineno">  720</span>&#160;    <span class="keyword">auto</span> descriptor = <a class="code" href="structarmnn_1_1_batch_mat_mul_descriptor.xhtml">armnn::BatchMatMulDescriptor</a>(</div><div class="line"><a name="l00721"></a><span class="lineno">  721</span>&#160;        <a class="code" href="classarmnn_1_1_optional.xhtml">armnn::Optional&lt;armnn::DataLayout&gt;</a>(<a class="code" href="namespacearmnn.xhtml#ad1d5cce2d9e9a5d61c243e5c989112e0a4dd0194b114cbf51da5b3a72569863ef">armnn::DataLayout::NDHWC</a>),</div><div class="line"><a name="l00722"></a><span class="lineno">  722</span>&#160;        <a class="code" href="classarmnn_1_1_optional.xhtml">armnn::Optional&lt;armnn::DataLayout&gt;</a>(<a class="code" href="namespacearmnn.xhtml#ad1d5cce2d9e9a5d61c243e5c989112e0ad066db54b89b0912e7e7c6da51e2da51">armnn::DataLayout::NHWC</a>));</div><div class="line"><a name="l00723"></a><span class="lineno">  723</span>&#160;</div><div class="line"><a name="l00724"></a><span class="lineno">  724</span>&#160;    <span class="keywordtype">float</span> qScale = 0.0f;</div><div class="line"><a name="l00725"></a><span class="lineno">  725</span>&#160;    int32_t qOffset = 0;</div><div class="line"><a name="l00726"></a><span class="lineno">  726</span>&#160;</div><div class="line"><a name="l00727"></a><span class="lineno">  727</span>&#160;    <span class="keywordflow">switch</span>(ArmnnType)</div><div class="line"><a name="l00728"></a><span class="lineno">  728</span>&#160;    {</div><div class="line"><a name="l00729"></a><span class="lineno">  729</span>&#160;        <span class="keywordflow">case</span> <a class="code" href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a9d02ea768c081d4bdb2b7cab0b3f510d">armnn::DataType::QAsymmS8</a>:</div><div class="line"><a name="l00730"></a><span class="lineno">  730</span>&#160;        <span class="keywordflow">case</span> <a class="code" href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a0a3f57c876f5a230244c38e1453a8a6e">armnn::DataType::QAsymmU8</a>:</div><div class="line"><a name="l00731"></a><span class="lineno">  731</span>&#160;        <span class="keywordflow">case</span> <a class="code" href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a053c769dcf82d66ef326c86980c02ba7">armnn::DataType::QSymmS16</a>:</div><div class="line"><a name="l00732"></a><span class="lineno">  732</span>&#160;            qScale = 1.0f;</div><div class="line"><a name="l00733"></a><span class="lineno">  733</span>&#160;            <span class="keywordflow">break</span>;</div><div class="line"><a name="l00734"></a><span class="lineno">  734</span>&#160;        <span class="keywordflow">default</span>:</div><div class="line"><a name="l00735"></a><span class="lineno">  735</span>&#160;            <span class="keywordflow">break</span>;</div><div class="line"><a name="l00736"></a><span class="lineno">  736</span>&#160;    }</div><div class="line"><a name="l00737"></a><span class="lineno">  737</span>&#160;</div><div class="line"><a name="l00738"></a><span class="lineno">  738</span>&#160;    <a class="code" href="classarmnn_1_1_tensor_info.xhtml">armnn::TensorInfo</a> inputXInfo({1,1,2,2,2}, ArmnnType, qScale, qOffset);</div><div class="line"><a name="l00739"></a><span class="lineno">  739</span>&#160;    <a class="code" href="classarmnn_1_1_tensor_info.xhtml">armnn::TensorInfo</a> inputYInfo({1,2,2,2}, ArmnnType, qScale, qOffset);</div><div class="line"><a name="l00740"></a><span class="lineno">  740</span>&#160;    <a class="code" href="classarmnn_1_1_tensor_info.xhtml">armnn::TensorInfo</a> outputInfo({1,1,2,2,2}, ArmnnType, qScale, qOffset);</div><div class="line"><a name="l00741"></a><span class="lineno">  741</span>&#160;</div><div class="line"><a name="l00742"></a><span class="lineno">  742</span>&#160;    std::vector&lt;T&gt; inputX = armnnUtils::QuantizedVector&lt;T&gt;({</div><div class="line"><a name="l00743"></a><span class="lineno">  743</span>&#160;        1, 20,</div><div class="line"><a name="l00744"></a><span class="lineno">  744</span>&#160;        3, 22,</div><div class="line"><a name="l00745"></a><span class="lineno">  745</span>&#160;</div><div class="line"><a name="l00746"></a><span class="lineno">  746</span>&#160;        2, 21,</div><div class="line"><a name="l00747"></a><span class="lineno">  747</span>&#160;        4, 23</div><div class="line"><a name="l00748"></a><span class="lineno">  748</span>&#160;    }, qScale, qOffset);</div><div class="line"><a name="l00749"></a><span class="lineno">  749</span>&#160;</div><div class="line"><a name="l00750"></a><span class="lineno">  750</span>&#160;    std::vector&lt;T&gt; inputY = armnnUtils::QuantizedVector&lt;T&gt;({</div><div class="line"><a name="l00751"></a><span class="lineno">  751</span>&#160;        5, 24,</div><div class="line"><a name="l00752"></a><span class="lineno">  752</span>&#160;        7, 26,</div><div class="line"><a name="l00753"></a><span class="lineno">  753</span>&#160;</div><div class="line"><a name="l00754"></a><span class="lineno">  754</span>&#160;        6, 25,</div><div class="line"><a name="l00755"></a><span class="lineno">  755</span>&#160;        8, 27</div><div class="line"><a name="l00756"></a><span class="lineno">  756</span>&#160;    }, qScale, qOffset);</div><div class="line"><a name="l00757"></a><span class="lineno">  757</span>&#160;</div><div class="line"><a name="l00758"></a><span class="lineno">  758</span>&#160;    std::vector&lt;T&gt; outputExpected = armnnUtils::QuantizedVector&lt;T&gt;({</div><div class="line"><a name="l00759"></a><span class="lineno">  759</span>&#160;       23, 1030,</div><div class="line"><a name="l00760"></a><span class="lineno">  760</span>&#160;       31, 1114,</div><div class="line"><a name="l00761"></a><span class="lineno">  761</span>&#160;</div><div class="line"><a name="l00762"></a><span class="lineno">  762</span>&#160;       34, 1079,</div><div class="line"><a name="l00763"></a><span class="lineno">  763</span>&#160;       46, 1167</div><div class="line"><a name="l00764"></a><span class="lineno">  764</span>&#160;    },qScale, qOffset);</div><div class="line"><a name="l00765"></a><span class="lineno">  765</span>&#160;</div><div class="line"><a name="l00766"></a><span class="lineno">  766</span>&#160;    <span class="keywordflow">return</span> BatchMatMulTestImpl&lt;ArmnnType, T, 5&gt;(workloadFactory,</div><div class="line"><a name="l00767"></a><span class="lineno">  767</span>&#160;                                                memoryManager,</div><div class="line"><a name="l00768"></a><span class="lineno">  768</span>&#160;                                                tensorHandleFactory,</div><div class="line"><a name="l00769"></a><span class="lineno">  769</span>&#160;                                                descriptor,</div><div class="line"><a name="l00770"></a><span class="lineno">  770</span>&#160;                                                inputX,</div><div class="line"><a name="l00771"></a><span class="lineno">  771</span>&#160;                                                inputY,</div><div class="line"><a name="l00772"></a><span class="lineno">  772</span>&#160;                                                outputExpected,</div><div class="line"><a name="l00773"></a><span class="lineno">  773</span>&#160;                                                inputXInfo,</div><div class="line"><a name="l00774"></a><span class="lineno">  774</span>&#160;                                                inputYInfo,</div><div class="line"><a name="l00775"></a><span class="lineno">  775</span>&#160;                                                outputInfo);</div><div class="line"><a name="l00776"></a><span class="lineno">  776</span>&#160;}</div><div class="ttc" id="classarmnn_1_1_optional_xhtml"><div class="ttname"><a href="classarmnn_1_1_optional.xhtml">armnn::Optional</a></div><div class="ttdef"><b>Definition:</b> <a href="_optional_8hpp_source.xhtml#l00270">Optional.hpp:270</a></div></div>
<div class="ttc" id="classarmnn_1_1_tensor_info_xhtml"><div class="ttname"><a href="classarmnn_1_1_tensor_info.xhtml">armnn::TensorInfo</a></div><div class="ttdef"><b>Definition:</b> <a href="_tensor_8hpp_source.xhtml#l00152">Tensor.hpp:152</a></div></div>
<div class="ttc" id="namespacearmnn_xhtml_ad8ed01ff3ff33333d8e19db4d2818bb6a9d02ea768c081d4bdb2b7cab0b3f510d"><div class="ttname"><a href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a9d02ea768c081d4bdb2b7cab0b3f510d">armnn::DataType::QAsymmS8</a></div></div>
<div class="ttc" id="namespacearmnn_xhtml_ad8ed01ff3ff33333d8e19db4d2818bb6a053c769dcf82d66ef326c86980c02ba7"><div class="ttname"><a href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a053c769dcf82d66ef326c86980c02ba7">armnn::DataType::QSymmS16</a></div></div>
<div class="ttc" id="namespacearmnn_xhtml_ad8ed01ff3ff33333d8e19db4d2818bb6a0a3f57c876f5a230244c38e1453a8a6e"><div class="ttname"><a href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a0a3f57c876f5a230244c38e1453a8a6e">armnn::DataType::QAsymmU8</a></div></div>
<div class="ttc" id="structarmnn_1_1_batch_mat_mul_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_batch_mat_mul_descriptor.xhtml">armnn::BatchMatMulDescriptor</a></div><div class="ttdoc">A BatchMatMulDescriptor for the BatchMatMul operator. </div><div class="ttdef"><b>Definition:</b> <a href="_descriptors_8hpp_source.xhtml#l01554">Descriptors.hpp:1554</a></div></div>
<div class="ttc" id="namespacearmnn_xhtml_ad1d5cce2d9e9a5d61c243e5c989112e0a4dd0194b114cbf51da5b3a72569863ef"><div class="ttname"><a href="namespacearmnn.xhtml#ad1d5cce2d9e9a5d61c243e5c989112e0a4dd0194b114cbf51da5b3a72569863ef">armnn::DataLayout::NDHWC</a></div></div>
<div class="ttc" id="namespacearmnn_xhtml_ad1d5cce2d9e9a5d61c243e5c989112e0ad066db54b89b0912e7e7c6da51e2da51"><div class="ttname"><a href="namespacearmnn.xhtml#ad1d5cce2d9e9a5d61c243e5c989112e0ad066db54b89b0912e7e7c6da51e2da51">armnn::DataLayout::NHWC</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="af8b1fb1b21389a3af74692f7a75ba596"></a>
<h2 class="memtitle"><span class="permalink"><a href="#af8b1fb1b21389a3af74692f7a75ba596">&#9670;&nbsp;</a></span>BatchMatMulNHWCSimpleTest()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="struct_layer_test_result.xhtml">LayerTestResult</a>&lt;T, 4&gt; BatchMatMulNHWCSimpleTest </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classarmnn_1_1_i_workload_factory.xhtml">armnn::IWorkloadFactory</a> &amp;&#160;</td>
          <td class="paramname"><em>workloadFactory</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_i_backend_internal.xhtml#a693b40e6b94e958836aeb0410ca186bd">armnn::IBackendInternal::IMemoryManagerSharedPtr</a> &amp;&#160;</td>
          <td class="paramname"><em>memoryManager</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_i_tensor_handle_factory.xhtml">armnn::ITensorHandleFactory</a> &amp;&#160;</td>
          <td class="paramname"><em>tensorHandleFactory</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_batch_mat_mul_test_impl_8cpp_source.xhtml#l00336">336</a> of file <a class="el" href="_batch_mat_mul_test_impl_8cpp_source.xhtml">BatchMatMulTestImpl.cpp</a>.</p>

<p class="reference">References <a class="el" href="namespacearmnn.xhtml#ad1d5cce2d9e9a5d61c243e5c989112e0ad066db54b89b0912e7e7c6da51e2da51">armnn::NHWC</a>, <a class="el" href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a9d02ea768c081d4bdb2b7cab0b3f510d">armnn::QAsymmS8</a>, <a class="el" href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a0a3f57c876f5a230244c38e1453a8a6e">armnn::QAsymmU8</a>, and <a class="el" href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a053c769dcf82d66ef326c86980c02ba7">armnn::QSymmS16</a>.</p>
<div class="fragment"><div class="line"><a name="l00340"></a><span class="lineno">  340</span>&#160;{</div><div class="line"><a name="l00341"></a><span class="lineno">  341</span>&#160;    <span class="keyword">auto</span> descriptor = <a class="code" href="structarmnn_1_1_batch_mat_mul_descriptor.xhtml">armnn::BatchMatMulDescriptor</a>(</div><div class="line"><a name="l00342"></a><span class="lineno">  342</span>&#160;        <a class="code" href="classarmnn_1_1_optional.xhtml">armnn::Optional&lt;armnn::DataLayout&gt;</a>(<a class="code" href="namespacearmnn.xhtml#ad1d5cce2d9e9a5d61c243e5c989112e0ad066db54b89b0912e7e7c6da51e2da51">armnn::DataLayout::NHWC</a>),</div><div class="line"><a name="l00343"></a><span class="lineno">  343</span>&#160;        <a class="code" href="classarmnn_1_1_optional.xhtml">armnn::Optional&lt;armnn::DataLayout&gt;</a>(<a class="code" href="namespacearmnn.xhtml#ad1d5cce2d9e9a5d61c243e5c989112e0ad066db54b89b0912e7e7c6da51e2da51">armnn::DataLayout::NHWC</a>));</div><div class="line"><a name="l00344"></a><span class="lineno">  344</span>&#160;</div><div class="line"><a name="l00345"></a><span class="lineno">  345</span>&#160;    <span class="keywordtype">float</span> qScale = 0.0f;</div><div class="line"><a name="l00346"></a><span class="lineno">  346</span>&#160;    int32_t qOffset = 0;</div><div class="line"><a name="l00347"></a><span class="lineno">  347</span>&#160;</div><div class="line"><a name="l00348"></a><span class="lineno">  348</span>&#160;    <span class="keywordflow">switch</span>(ArmnnType)</div><div class="line"><a name="l00349"></a><span class="lineno">  349</span>&#160;    {</div><div class="line"><a name="l00350"></a><span class="lineno">  350</span>&#160;        <span class="keywordflow">case</span> <a class="code" href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a9d02ea768c081d4bdb2b7cab0b3f510d">armnn::DataType::QAsymmS8</a>:</div><div class="line"><a name="l00351"></a><span class="lineno">  351</span>&#160;        <span class="keywordflow">case</span> <a class="code" href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a0a3f57c876f5a230244c38e1453a8a6e">armnn::DataType::QAsymmU8</a>:</div><div class="line"><a name="l00352"></a><span class="lineno">  352</span>&#160;        <span class="keywordflow">case</span> <a class="code" href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a053c769dcf82d66ef326c86980c02ba7">armnn::DataType::QSymmS16</a>:</div><div class="line"><a name="l00353"></a><span class="lineno">  353</span>&#160;            qScale = 1.0f;</div><div class="line"><a name="l00354"></a><span class="lineno">  354</span>&#160;            <span class="keywordflow">break</span>;</div><div class="line"><a name="l00355"></a><span class="lineno">  355</span>&#160;        <span class="keywordflow">default</span>:</div><div class="line"><a name="l00356"></a><span class="lineno">  356</span>&#160;            <span class="keywordflow">break</span>;</div><div class="line"><a name="l00357"></a><span class="lineno">  357</span>&#160;    }</div><div class="line"><a name="l00358"></a><span class="lineno">  358</span>&#160;</div><div class="line"><a name="l00359"></a><span class="lineno">  359</span>&#160;    <a class="code" href="classarmnn_1_1_tensor_info.xhtml">armnn::TensorInfo</a> inputXInfo({1,2,2,1}, ArmnnType, qScale, qOffset);</div><div class="line"><a name="l00360"></a><span class="lineno">  360</span>&#160;    <a class="code" href="classarmnn_1_1_tensor_info.xhtml">armnn::TensorInfo</a> inputYInfo({1,2,2,1}, ArmnnType, qScale, qOffset);</div><div class="line"><a name="l00361"></a><span class="lineno">  361</span>&#160;    <a class="code" href="classarmnn_1_1_tensor_info.xhtml">armnn::TensorInfo</a> outputInfo({1,2,2,1}, ArmnnType, qScale, qOffset);</div><div class="line"><a name="l00362"></a><span class="lineno">  362</span>&#160;</div><div class="line"><a name="l00363"></a><span class="lineno">  363</span>&#160;    std::vector&lt;T&gt; inputX = armnnUtils::QuantizedVector&lt;T&gt;({</div><div class="line"><a name="l00364"></a><span class="lineno">  364</span>&#160;       1, 2,</div><div class="line"><a name="l00365"></a><span class="lineno">  365</span>&#160;       3, 4</div><div class="line"><a name="l00366"></a><span class="lineno">  366</span>&#160;    }, qScale, qOffset);</div><div class="line"><a name="l00367"></a><span class="lineno">  367</span>&#160;</div><div class="line"><a name="l00368"></a><span class="lineno">  368</span>&#160;    std::vector&lt;T&gt; inputY = armnnUtils::QuantizedVector&lt;T&gt;({</div><div class="line"><a name="l00369"></a><span class="lineno">  369</span>&#160;        5, 6,</div><div class="line"><a name="l00370"></a><span class="lineno">  370</span>&#160;        7, 8</div><div class="line"><a name="l00371"></a><span class="lineno">  371</span>&#160;    }, qScale, qOffset);</div><div class="line"><a name="l00372"></a><span class="lineno">  372</span>&#160;</div><div class="line"><a name="l00373"></a><span class="lineno">  373</span>&#160;    std::vector&lt;T&gt; outputExpected = armnnUtils::QuantizedVector&lt;T&gt;({</div><div class="line"><a name="l00374"></a><span class="lineno">  374</span>&#160;        19, 22,</div><div class="line"><a name="l00375"></a><span class="lineno">  375</span>&#160;        43, 50</div><div class="line"><a name="l00376"></a><span class="lineno">  376</span>&#160;    },qScale, qOffset);</div><div class="line"><a name="l00377"></a><span class="lineno">  377</span>&#160;</div><div class="line"><a name="l00378"></a><span class="lineno">  378</span>&#160;    <span class="keywordflow">return</span> BatchMatMulTestImpl&lt;ArmnnType, T, 4&gt;(workloadFactory,</div><div class="line"><a name="l00379"></a><span class="lineno">  379</span>&#160;                                                memoryManager,</div><div class="line"><a name="l00380"></a><span class="lineno">  380</span>&#160;                                                tensorHandleFactory,</div><div class="line"><a name="l00381"></a><span class="lineno">  381</span>&#160;                                                descriptor,</div><div class="line"><a name="l00382"></a><span class="lineno">  382</span>&#160;                                                inputX,</div><div class="line"><a name="l00383"></a><span class="lineno">  383</span>&#160;                                                inputY,</div><div class="line"><a name="l00384"></a><span class="lineno">  384</span>&#160;                                                outputExpected,</div><div class="line"><a name="l00385"></a><span class="lineno">  385</span>&#160;                                                inputXInfo,</div><div class="line"><a name="l00386"></a><span class="lineno">  386</span>&#160;                                                inputYInfo,</div><div class="line"><a name="l00387"></a><span class="lineno">  387</span>&#160;                                                outputInfo);</div><div class="line"><a name="l00388"></a><span class="lineno">  388</span>&#160;}</div><div class="ttc" id="classarmnn_1_1_optional_xhtml"><div class="ttname"><a href="classarmnn_1_1_optional.xhtml">armnn::Optional</a></div><div class="ttdef"><b>Definition:</b> <a href="_optional_8hpp_source.xhtml#l00270">Optional.hpp:270</a></div></div>
<div class="ttc" id="classarmnn_1_1_tensor_info_xhtml"><div class="ttname"><a href="classarmnn_1_1_tensor_info.xhtml">armnn::TensorInfo</a></div><div class="ttdef"><b>Definition:</b> <a href="_tensor_8hpp_source.xhtml#l00152">Tensor.hpp:152</a></div></div>
<div class="ttc" id="namespacearmnn_xhtml_ad8ed01ff3ff33333d8e19db4d2818bb6a9d02ea768c081d4bdb2b7cab0b3f510d"><div class="ttname"><a href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a9d02ea768c081d4bdb2b7cab0b3f510d">armnn::DataType::QAsymmS8</a></div></div>
<div class="ttc" id="namespacearmnn_xhtml_ad8ed01ff3ff33333d8e19db4d2818bb6a053c769dcf82d66ef326c86980c02ba7"><div class="ttname"><a href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a053c769dcf82d66ef326c86980c02ba7">armnn::DataType::QSymmS16</a></div></div>
<div class="ttc" id="namespacearmnn_xhtml_ad8ed01ff3ff33333d8e19db4d2818bb6a0a3f57c876f5a230244c38e1453a8a6e"><div class="ttname"><a href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a0a3f57c876f5a230244c38e1453a8a6e">armnn::DataType::QAsymmU8</a></div></div>
<div class="ttc" id="structarmnn_1_1_batch_mat_mul_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_batch_mat_mul_descriptor.xhtml">armnn::BatchMatMulDescriptor</a></div><div class="ttdoc">A BatchMatMulDescriptor for the BatchMatMul operator. </div><div class="ttdef"><b>Definition:</b> <a href="_descriptors_8hpp_source.xhtml#l01554">Descriptors.hpp:1554</a></div></div>
<div class="ttc" id="namespacearmnn_xhtml_ad1d5cce2d9e9a5d61c243e5c989112e0ad066db54b89b0912e7e7c6da51e2da51"><div class="ttname"><a href="namespacearmnn.xhtml#ad1d5cce2d9e9a5d61c243e5c989112e0ad066db54b89b0912e7e7c6da51e2da51">armnn::DataLayout::NHWC</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="a96b36cc9c55ba2f295119280d5d37378"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a96b36cc9c55ba2f295119280d5d37378">&#9670;&nbsp;</a></span>BatchMatMulTestImpl()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="struct_layer_test_result.xhtml">LayerTestResult</a>&lt;T, NumDims&gt; BatchMatMulTestImpl </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classarmnn_1_1_i_workload_factory.xhtml">armnn::IWorkloadFactory</a> &amp;&#160;</td>
          <td class="paramname"><em>workloadFactory</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_i_backend_internal.xhtml#a693b40e6b94e958836aeb0410ca186bd">armnn::IBackendInternal::IMemoryManagerSharedPtr</a> &amp;&#160;</td>
          <td class="paramname"><em>memoryManager</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_i_tensor_handle_factory.xhtml">armnn::ITensorHandleFactory</a> &amp;&#160;</td>
          <td class="paramname"><em>tensorHandleFactory</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="structarmnn_1_1_batch_mat_mul_descriptor.xhtml">armnn::BatchMatMulDescriptor</a>&#160;</td>
          <td class="paramname"><em>descriptor</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const std::vector&lt; T &gt; &amp;&#160;</td>
          <td class="paramname"><em>inputX</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const std::vector&lt; T &gt; &amp;&#160;</td>
          <td class="paramname"><em>inputY</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const std::vector&lt; T &gt; &amp;&#160;</td>
          <td class="paramname"><em>outputExpected</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">armnn::TensorInfo</a> &amp;&#160;</td>
          <td class="paramname"><em>inputXInfo</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">armnn::TensorInfo</a> &amp;&#160;</td>
          <td class="paramname"><em>inputYInfo</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">armnn::TensorInfo</a> &amp;&#160;</td>
          <td class="paramname"><em>outputInfo</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_batch_mat_mul_test_impl_8cpp_source.xhtml#l00020">20</a> of file <a class="el" href="_batch_mat_mul_test_impl_8cpp_source.xhtml">BatchMatMulTestImpl.cpp</a>.</p>

<p class="reference">References <a class="el" href="namespacearmnn.xhtml#a56943a0946e5f15e5e58054b8e7a04a4a9882ff3cfed27d6161c20a305e7a3484">armnn::BatchMatMul</a>, <a class="el" href="_tensor_copy_utils_8cpp_source.xhtml#l00014">CopyDataFromITensorHandle()</a>, <a class="el" href="_tensor_copy_utils_8cpp_source.xhtml#l00009">CopyDataToITensorHandle()</a>, <a class="el" href="classarmnn_1_1_i_tensor_handle_factory.xhtml#a375f11dd42ff042435e8771cf287b20c">ITensorHandleFactory::CreateTensorHandle()</a>, <a class="el" href="_workload_factory_8cpp_source.xhtml#l01575">IWorkloadFactory::CreateWorkload()</a>, <a class="el" href="_tensor_8hpp_source.xhtml#l00196">TensorInfo::GetNumElements()</a>, <a class="el" href="_tensor_8hpp_source.xhtml#l00191">TensorInfo::GetShape()</a>, and <a class="el" href="include_2armnn_2backends_2_workload_data_8hpp_source.xhtml#l00066">QueueDescriptorWithParameters&lt; LayerDescriptor &gt;::m_Parameters</a>.</p>
<div class="fragment"><div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;{</div><div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;    std::vector&lt;T&gt; outputActual(outputInfo.<a class="code" href="classarmnn_1_1_tensor_info.xhtml#a8846406ac37fbd2204f0be16ee05d5b7">GetNumElements</a>());</div><div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;</div><div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;    std::unique_ptr&lt;armnn::ITensorHandle&gt; inputXHandle = tensorHandleFactory.<a class="code" href="classarmnn_1_1_i_tensor_handle_factory.xhtml#a375f11dd42ff042435e8771cf287b20c">CreateTensorHandle</a>(inputXInfo);</div><div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;    std::unique_ptr&lt;armnn::ITensorHandle&gt; inputYHandle = tensorHandleFactory.<a class="code" href="classarmnn_1_1_i_tensor_handle_factory.xhtml#a375f11dd42ff042435e8771cf287b20c">CreateTensorHandle</a>(inputYInfo);</div><div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;    std::unique_ptr&lt;armnn::ITensorHandle&gt; outputHandle = tensorHandleFactory.<a class="code" href="classarmnn_1_1_i_tensor_handle_factory.xhtml#a375f11dd42ff042435e8771cf287b20c">CreateTensorHandle</a>(outputInfo);</div><div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;</div><div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;    <a class="code" href="structarmnn_1_1_batch_mat_mul_queue_descriptor.xhtml">armnn::BatchMatMulQueueDescriptor</a> queueDescriptor;</div><div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;    queueDescriptor.<a class="code" href="structarmnn_1_1_queue_descriptor_with_parameters.xhtml#aad91b9bbf7aa365d304febe79a3d1333">m_Parameters</a> = descriptor;</div><div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;    <a class="code" href="structarmnn_1_1_workload_info.xhtml">armnn::WorkloadInfo</a> workloadInfo;</div><div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;</div><div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;    AddInputToWorkload(queueDescriptor, workloadInfo, inputXInfo, inputXHandle.get());</div><div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;    AddInputToWorkload(queueDescriptor, workloadInfo, inputYInfo, inputYHandle.get());</div><div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;    AddOutputToWorkload(queueDescriptor, workloadInfo, outputInfo, outputHandle.get());</div><div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;</div><div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;    <span class="keyword">auto</span> workload = workloadFactory.<a class="code" href="classarmnn_1_1_i_workload_factory.xhtml#a13060ebb89d2c21a7a5d897e99cccf72">CreateWorkload</a>(<a class="code" href="namespacearmnn.xhtml#a56943a0946e5f15e5e58054b8e7a04a4a9882ff3cfed27d6161c20a305e7a3484">armnn::LayerType::BatchMatMul</a>, queueDescriptor, workloadInfo);</div><div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;</div><div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;    inputXHandle-&gt;Allocate();</div><div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;    inputYHandle-&gt;Allocate();</div><div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;    outputHandle-&gt;Allocate();</div><div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;</div><div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;    <a class="code" href="include_2armnn_test_utils_2_tensor_copy_utils_8hpp.xhtml#ae15f1a3c55d2db87683577de9fa4437c">CopyDataToITensorHandle</a>(inputXHandle.get(), inputX.data());</div><div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;    <a class="code" href="include_2armnn_test_utils_2_tensor_copy_utils_8hpp.xhtml#ae15f1a3c55d2db87683577de9fa4437c">CopyDataToITensorHandle</a>(inputYHandle.get(), inputY.data());</div><div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;</div><div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;    workload-&gt;PostAllocationConfigure();</div><div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;    ExecuteWorkload(*workload, memoryManager);</div><div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;</div><div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;    <a class="code" href="include_2armnn_test_utils_2_tensor_copy_utils_8hpp.xhtml#ab5dfed8358e500ed523d78090ec78e88">CopyDataFromITensorHandle</a>(outputActual.data(), outputHandle.get());</div><div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;</div><div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="struct_layer_test_result.xhtml">LayerTestResult&lt;T, NumDims&gt;</a>(outputActual,</div><div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;                                       outputExpected,</div><div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;                                       outputHandle-&gt;GetShape(),</div><div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;                                       outputInfo.<a class="code" href="classarmnn_1_1_tensor_info.xhtml#a8b5d0f8a24e9d9238f412260a552acf8">GetShape</a>());</div><div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;}</div><div class="ttc" id="classarmnn_1_1_tensor_info_xhtml_a8b5d0f8a24e9d9238f412260a552acf8"><div class="ttname"><a href="classarmnn_1_1_tensor_info.xhtml#a8b5d0f8a24e9d9238f412260a552acf8">armnn::TensorInfo::GetShape</a></div><div class="ttdeci">const TensorShape &amp; GetShape() const</div><div class="ttdef"><b>Definition:</b> <a href="_tensor_8hpp_source.xhtml#l00191">Tensor.hpp:191</a></div></div>
<div class="ttc" id="structarmnn_1_1_queue_descriptor_with_parameters_xhtml_aad91b9bbf7aa365d304febe79a3d1333"><div class="ttname"><a href="structarmnn_1_1_queue_descriptor_with_parameters.xhtml#aad91b9bbf7aa365d304febe79a3d1333">armnn::QueueDescriptorWithParameters::m_Parameters</a></div><div class="ttdeci">LayerDescriptor m_Parameters</div><div class="ttdef"><b>Definition:</b> <a href="include_2armnn_2backends_2_workload_data_8hpp_source.xhtml#l00066">WorkloadData.hpp:66</a></div></div>
<div class="ttc" id="include_2armnn_test_utils_2_tensor_copy_utils_8hpp_xhtml_ab5dfed8358e500ed523d78090ec78e88"><div class="ttname"><a href="include_2armnn_test_utils_2_tensor_copy_utils_8hpp.xhtml#ab5dfed8358e500ed523d78090ec78e88">CopyDataFromITensorHandle</a></div><div class="ttdeci">void CopyDataFromITensorHandle(void *mem, const armnn::ITensorHandle *tensorHandle)</div><div class="ttdef"><b>Definition:</b> <a href="_tensor_copy_utils_8cpp_source.xhtml#l00014">TensorCopyUtils.cpp:14</a></div></div>
<div class="ttc" id="namespacearmnn_xhtml_a56943a0946e5f15e5e58054b8e7a04a4a9882ff3cfed27d6161c20a305e7a3484"><div class="ttname"><a href="namespacearmnn.xhtml#a56943a0946e5f15e5e58054b8e7a04a4a9882ff3cfed27d6161c20a305e7a3484">armnn::LayerType::BatchMatMul</a></div></div>
<div class="ttc" id="include_2armnn_test_utils_2_tensor_copy_utils_8hpp_xhtml_ae15f1a3c55d2db87683577de9fa4437c"><div class="ttname"><a href="include_2armnn_test_utils_2_tensor_copy_utils_8hpp.xhtml#ae15f1a3c55d2db87683577de9fa4437c">CopyDataToITensorHandle</a></div><div class="ttdeci">void CopyDataToITensorHandle(armnn::ITensorHandle *tensorHandle, const void *memory)</div><div class="ttdef"><b>Definition:</b> <a href="_tensor_copy_utils_8cpp_source.xhtml#l00009">TensorCopyUtils.cpp:9</a></div></div>
<div class="ttc" id="structarmnn_1_1_batch_mat_mul_queue_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_batch_mat_mul_queue_descriptor.xhtml">armnn::BatchMatMulQueueDescriptor</a></div><div class="ttdef"><b>Definition:</b> <a href="include_2armnn_2backends_2_workload_data_8hpp_source.xhtml#l00788">WorkloadData.hpp:788</a></div></div>
<div class="ttc" id="structarmnn_1_1_workload_info_xhtml"><div class="ttname"><a href="structarmnn_1_1_workload_info.xhtml">armnn::WorkloadInfo</a></div><div class="ttdoc">Contains information about TensorInfos of a layer. </div><div class="ttdef"><b>Definition:</b> <a href="include_2armnn_2backends_2_workload_info_8hpp_source.xhtml#l00016">WorkloadInfo.hpp:16</a></div></div>
<div class="ttc" id="struct_layer_test_result_xhtml"><div class="ttname"><a href="struct_layer_test_result.xhtml">LayerTestResult</a></div><div class="ttdef"><b>Definition:</b> <a href="include_2armnn_test_utils_2_layer_test_result_8hpp_source.xhtml#l00015">LayerTestResult.hpp:15</a></div></div>
<div class="ttc" id="classarmnn_1_1_i_workload_factory_xhtml_a13060ebb89d2c21a7a5d897e99cccf72"><div class="ttname"><a href="classarmnn_1_1_i_workload_factory.xhtml#a13060ebb89d2c21a7a5d897e99cccf72">armnn::IWorkloadFactory::CreateWorkload</a></div><div class="ttdeci">virtual std::unique_ptr&lt; IWorkload &gt; CreateWorkload(LayerType type, const QueueDescriptor &amp;descriptor, const WorkloadInfo &amp;info) const</div><div class="ttdef"><b>Definition:</b> <a href="_workload_factory_8cpp_source.xhtml#l01575">WorkloadFactory.cpp:1575</a></div></div>
<div class="ttc" id="classarmnn_1_1_i_tensor_handle_factory_xhtml_a375f11dd42ff042435e8771cf287b20c"><div class="ttname"><a href="classarmnn_1_1_i_tensor_handle_factory.xhtml#a375f11dd42ff042435e8771cf287b20c">armnn::ITensorHandleFactory::CreateTensorHandle</a></div><div class="ttdeci">virtual std::unique_ptr&lt; ITensorHandle &gt; CreateTensorHandle(const TensorInfo &amp;tensorInfo) const =0</div></div>
<div class="ttc" id="classarmnn_1_1_tensor_info_xhtml_a8846406ac37fbd2204f0be16ee05d5b7"><div class="ttname"><a href="classarmnn_1_1_tensor_info.xhtml#a8846406ac37fbd2204f0be16ee05d5b7">armnn::TensorInfo::GetNumElements</a></div><div class="ttdeci">unsigned int GetNumElements() const</div><div class="ttdef"><b>Definition:</b> <a href="_tensor_8hpp_source.xhtml#l00196">Tensor.hpp:196</a></div></div>
</div><!-- fragment -->
</div>
</div>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="dir_68267d1309a1af8e8297ef4c3efbcdba.xhtml">src</a></li><li class="navelem"><a class="el" href="dir_0f3cdec46afbc61a1ded8e1687c9c9a0.xhtml">backends</a></li><li class="navelem"><a class="el" href="dir_797a213d7d01b98ef12d53b0820ea64e.xhtml">backendsCommon</a></li><li class="navelem"><a class="el" href="dir_28bfe507f7e135bdae07c2a6b7f66696.xhtml">test</a></li><li class="navelem"><a class="el" href="dir_99a30439342d160875b21dac3498ad7f.xhtml">layerTests</a></li><li class="navelem"><a class="el" href="_batch_mat_mul_test_impl_8hpp.xhtml">BatchMatMulTestImpl.hpp</a></li>
    <li class="footer">Generated on Fri Aug 19 2022 14:38:32 for ArmNN by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.13 </li>
  </ul>
</div>
</body>
</html>
