<!-- Copyright (c) 2020 ARM Limited. -->
<!--                                 -->
<!-- SPDX-License-Identifier: MIT    -->
<!--                                 -->
<!-- HTML header for doxygen 1.8.13-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.13"/>
<meta name="robots" content="NOINDEX, NOFOLLOW" />
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>ArmNN: include/armnnTestUtils/TensorCopyUtils.hpp File Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script><script type="text/javascript" src="http://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="stylesheet.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <img alt="ArmNN" src="Arm_NN_horizontal_blue.png" style="max-width: 10rem; margin-top: .5rem; margin-left 10px"/>
  <td style="padding-left: 0.5em;">
   <div id="projectname">
   &#160;<span id="projectnumber">22.08</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.13 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
$(document).ready(function(){initNavTree('include_2armnn_test_utils_2_tensor_copy_utils_8hpp.xhtml','');});
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="summary">
<a href="#func-members">Functions</a>  </div>
  <div class="headertitle">
<div class="title">TensorCopyUtils.hpp File Reference</div>  </div>
</div><!--header-->
<div class="contents">
<div class="textblock"><code>#include &lt;<a class="el" href="_tensor_8hpp_source.xhtml">armnn/Tensor.hpp</a>&gt;</code><br />
<code>#include &lt;<a class="el" href="include_2armnn_2backends_2_i_tensor_handle_8hpp_source.xhtml">armnn/backends/ITensorHandle.hpp</a>&gt;</code><br />
</div>
<p><a href="include_2armnn_test_utils_2_tensor_copy_utils_8hpp_source.xhtml">Go to the source code of this file.</a></p>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="func-members"></a>
Functions</h2></td></tr>
<tr class="memitem:ae15f1a3c55d2db87683577de9fa4437c"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="include_2armnn_test_utils_2_tensor_copy_utils_8hpp.xhtml#ae15f1a3c55d2db87683577de9fa4437c">CopyDataToITensorHandle</a> (<a class="el" href="classarmnn_1_1_i_tensor_handle.xhtml">armnn::ITensorHandle</a> *tensorHandle, const void *memory)</td></tr>
<tr class="separator:ae15f1a3c55d2db87683577de9fa4437c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab5dfed8358e500ed523d78090ec78e88"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="include_2armnn_test_utils_2_tensor_copy_utils_8hpp.xhtml#ab5dfed8358e500ed523d78090ec78e88">CopyDataFromITensorHandle</a> (void *mem, const <a class="el" href="classarmnn_1_1_i_tensor_handle.xhtml">armnn::ITensorHandle</a> *tensorHandle)</td></tr>
<tr class="separator:ab5dfed8358e500ed523d78090ec78e88"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:afaaca8c3f3a467d124bba44067d2afa8"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="include_2armnn_test_utils_2_tensor_copy_utils_8hpp.xhtml#afaaca8c3f3a467d124bba44067d2afa8">AllocateAndCopyDataToITensorHandle</a> (<a class="el" href="classarmnn_1_1_i_tensor_handle.xhtml">armnn::ITensorHandle</a> *tensorHandle, const void *memory)</td></tr>
<tr class="separator:afaaca8c3f3a467d124bba44067d2afa8"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<h2 class="groupheader">Function Documentation</h2>
<a id="afaaca8c3f3a467d124bba44067d2afa8"></a>
<h2 class="memtitle"><span class="permalink"><a href="#afaaca8c3f3a467d124bba44067d2afa8">&#9670;&nbsp;</a></span>AllocateAndCopyDataToITensorHandle()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void AllocateAndCopyDataToITensorHandle </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classarmnn_1_1_i_tensor_handle.xhtml">armnn::ITensorHandle</a> *&#160;</td>
          <td class="paramname"><em>tensorHandle</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const void *&#160;</td>
          <td class="paramname"><em>memory</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_tensor_copy_utils_8cpp_source.xhtml#l00019">19</a> of file <a class="el" href="_tensor_copy_utils_8cpp_source.xhtml">TensorCopyUtils.cpp</a>.</p>

<p class="reference">References <a class="el" href="classarmnn_1_1_i_tensor_handle.xhtml#a5cceed8b707a09bf27eb61f17acf8a88">ITensorHandle::Allocate()</a>, and <a class="el" href="_tensor_copy_utils_8cpp_source.xhtml#l00009">CopyDataToITensorHandle()</a>.</p>

<p class="reference">Referenced by <a class="el" href="_batch_normalization_test_impl_8cpp_source.xhtml#l00612">CompareBatchNormTest()</a>, <a class="el" href="_conv2d_test_impl_8cpp_source.xhtml#l01369">CompareConvolution2dTestImpl()</a>, <a class="el" href="_conv2d_test_impl_8cpp_source.xhtml#l03090">CompareDepthwiseConvolution2dTestImpl()</a>, <a class="el" href="_conv2d_test_impl_8cpp_source.xhtml#l00501">Convolution1dTestImpl()</a>, <a class="el" href="_conv2d_test_impl_8cpp_source.xhtml#l03631">Convolution2dPerAxisQuantTest()</a>, <a class="el" href="_conv2d_test_impl_8cpp_source.xhtml#l01715">DepthwiseConvolution2dAsymmetricTestImpl()</a>, <a class="el" href="_conv2d_test_impl_8cpp_source.xhtml#l01885">DepthwiseConvolution2dDepthMul1TestImpl()</a>, <a class="el" href="_conv2d_test_impl_8cpp_source.xhtml#l03902">DepthwiseConvolution2dPerAxisQuantTest()</a>, <a class="el" href="_conv2d_test_impl_8cpp_source.xhtml#l02064">DepthwiseConvolution2dTestImpl()</a>, <a class="el" href="_detection_post_process_test_impl_8hpp_source.xhtml#l00141">DetectionPostProcessImpl()</a>, <a class="el" href="_conv2d_test_impl_8cpp_source.xhtml#l00384">SimpleConvolution2dNhwcTestImpl()</a>, <a class="el" href="_conv2d_test_impl_8cpp_source.xhtml#l00194">SimpleConvolution2dTestImpl()</a>, <a class="el" href="_fully_connected_test_impl_8cpp_source.xhtml#l00024">SimpleFullyConnectedTestImpl()</a>, <a class="el" href="_cl_create_workload_tests_8cpp_source.xhtml#l00035">TEST_SUITE()</a>, <a class="el" href="_transpose_convolution2d_test_impl_8cpp_source.xhtml#l00571">TransposeConvolution2dPerAxisQuantTest()</a>, <a class="el" href="_unidirectional_sequence_lstm_test_impl_8cpp_source.xhtml#l02034">UnidirectionalSequenceLstmInt8WithCifgWithPeepholeNoProjectionTest()</a>, <a class="el" href="_unidirectional_sequence_lstm_test_impl_8cpp_source.xhtml#l01647">UnidirectionalSequenceLstmLayerInt8NoCifgWithPeepholeWithProjectionTest()</a>, <a class="el" href="_unidirectional_sequence_lstm_test_impl_8cpp_source.xhtml#l01827">UnidirectionalSequenceLstmLayerInt8NoCifgWithPeepholeWithProjectionWithLayerNormTest()</a>, <a class="el" href="_unidirectional_sequence_lstm_test_impl_8cpp_source.xhtml#l01339">UnidirectionalSequenceLstmLayerInt8Test()</a>, <a class="el" href="_unidirectional_sequence_lstm_test_impl_8cpp_source.xhtml#l01493">UnidirectionalSequenceLstmLayerInt8TimeMajorTest()</a>, <a class="el" href="_unidirectional_sequence_lstm_test_impl_8cpp_source.xhtml#l00671">UnidirectionalSequenceLstmLayerNoCifgWithPeepholeWithProjectionTest()</a>, <a class="el" href="_unidirectional_sequence_lstm_test_impl_8cpp_source.xhtml#l00924">UnidirectionalSequenceLstmLayerNoCifgWithPeepholeWithProjectionWithLayerNormTest()</a>, and <a class="el" href="_unidirectional_sequence_lstm_test_impl_8cpp_source.xhtml#l01164">UnidirectionalSequenceLstmWithCifgWithPeepholeNoProjectionTest()</a>.</p>
<div class="fragment"><div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;{</div><div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;    tensorHandle-&gt;<a class="code" href="classarmnn_1_1_i_tensor_handle.xhtml#a5cceed8b707a09bf27eb61f17acf8a88">Allocate</a>();</div><div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;    <a class="code" href="_tensor_copy_utils_8cpp.xhtml#ae15f1a3c55d2db87683577de9fa4437c">CopyDataToITensorHandle</a>(tensorHandle, memory);</div><div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;}</div><div class="ttc" id="classarmnn_1_1_i_tensor_handle_xhtml_a5cceed8b707a09bf27eb61f17acf8a88"><div class="ttname"><a href="classarmnn_1_1_i_tensor_handle.xhtml#a5cceed8b707a09bf27eb61f17acf8a88">armnn::ITensorHandle::Allocate</a></div><div class="ttdeci">virtual void Allocate()=0</div><div class="ttdoc">Indicate to the memory manager that this resource is no longer active. </div></div>
<div class="ttc" id="_tensor_copy_utils_8cpp_xhtml_ae15f1a3c55d2db87683577de9fa4437c"><div class="ttname"><a href="_tensor_copy_utils_8cpp.xhtml#ae15f1a3c55d2db87683577de9fa4437c">CopyDataToITensorHandle</a></div><div class="ttdeci">void CopyDataToITensorHandle(armnn::ITensorHandle *tensorHandle, const void *memory)</div><div class="ttdef"><b>Definition:</b> <a href="_tensor_copy_utils_8cpp_source.xhtml#l00009">TensorCopyUtils.cpp:9</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="ab5dfed8358e500ed523d78090ec78e88"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ab5dfed8358e500ed523d78090ec78e88">&#9670;&nbsp;</a></span>CopyDataFromITensorHandle()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void CopyDataFromITensorHandle </td>
          <td>(</td>
          <td class="paramtype">void *&#160;</td>
          <td class="paramname"><em>mem</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_i_tensor_handle.xhtml">armnn::ITensorHandle</a> *&#160;</td>
          <td class="paramname"><em>tensorHandle</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_tensor_copy_utils_8cpp_source.xhtml#l00014">14</a> of file <a class="el" href="_tensor_copy_utils_8cpp_source.xhtml">TensorCopyUtils.cpp</a>.</p>

<p class="reference">References <a class="el" href="classarmnn_1_1_i_tensor_handle.xhtml#a4ec32790513ea4af4c5746f1ee48fbfe">ITensorHandle::CopyOutTo()</a>.</p>

<p class="reference">Referenced by <a class="el" href="_addition_test_impl_8cpp_source.xhtml#l00543">AdditionAfterMaxPoolTest()</a>, <a class="el" href="_addition_test_impl_8cpp_source.xhtml#l00256">AdditionBroadcast1ElementTestImpl()</a>, <a class="el" href="_addition_test_impl_8cpp_source.xhtml#l00167">AdditionBroadcastTestImpl()</a>, <a class="el" href="_batch_mat_mul_test_impl_8cpp_source.xhtml#l00020">BatchMatMulTestImpl()</a>, <a class="el" href="_activation_test_impl_8cpp_source.xhtml#l00023">BoundedReLuTestCommon()</a>, <a class="el" href="_activation_test_impl_8cpp_source.xhtml#l00188">BoundedReLuUint8UpperAndLowerBoundTest()</a>, <a class="el" href="_cast_test_impl_8cpp_source.xhtml#l00011">CastTest()</a>, <a class="el" href="_activation_test_impl_8cpp_source.xhtml#l01221">CompareActivationTestImpl()</a>, <a class="el" href="_addition_test_impl_8cpp_source.xhtml#l00645">CompareAdditionTest()</a>, <a class="el" href="_batch_normalization_test_impl_8cpp_source.xhtml#l00612">CompareBatchNormTest()</a>, <a class="el" href="_conv2d_test_impl_8cpp_source.xhtml#l01369">CompareConvolution2dTestImpl()</a>, <a class="el" href="_conv2d_test_impl_8cpp_source.xhtml#l03090">CompareDepthwiseConvolution2dTestImpl()</a>, <a class="el" href="_multiplication_test_impl_8cpp_source.xhtml#l00525">CompareMultiplicationTest()</a>, <a class="el" href="_concat_test_impl_8cpp_source.xhtml#l02082">ConcatDifferentInputOutputQParamTest()</a>, <a class="el" href="_concat_test_impl_8cpp_source.xhtml#l00278">Concatenate()</a>, <a class="el" href="_concat_test_impl_8cpp_source.xhtml#l00424">ConcatTestImpl()</a>, <a class="el" href="_concat_test_impl_8cpp_source.xhtml#l02730">ConcatUint16Test()</a>, <a class="el" href="_concat_test_impl_8cpp_source.xhtml#l02446">ConcatUint8DifferentQParamsTest()</a>, <a class="el" href="_concat_test_impl_8cpp_source.xhtml#l02592">ConcatUint8Test()</a>, <a class="el" href="_activation_test_impl_8cpp_source.xhtml#l00315">ConstantLinearActivationTestCommon()</a>, <a class="el" href="_convert_bf16_to_fp32_test_impl_8cpp_source.xhtml#l00013">ConvertBf16ToFp32Test()</a>, <a class="el" href="_convert_fp32_to_bf16_test_impl_8cpp_source.xhtml#l00013">ConvertFp32ToBf16Test()</a>, <a class="el" href="_conv2d_test_impl_8cpp_source.xhtml#l00501">Convolution1dTestImpl()</a>, <a class="el" href="_conv2d_test_impl_8cpp_source.xhtml#l03631">Convolution2dPerAxisQuantTest()</a>, <a class="el" href="_conv2d_test_impl_8cpp_source.xhtml#l01715">DepthwiseConvolution2dAsymmetricTestImpl()</a>, <a class="el" href="_conv2d_test_impl_8cpp_source.xhtml#l01885">DepthwiseConvolution2dDepthMul1TestImpl()</a>, <a class="el" href="_conv2d_test_impl_8cpp_source.xhtml#l03902">DepthwiseConvolution2dPerAxisQuantTest()</a>, <a class="el" href="_conv2d_test_impl_8cpp_source.xhtml#l02064">DepthwiseConvolution2dTestImpl()</a>, <a class="el" href="_detection_post_process_test_impl_8hpp_source.xhtml#l00141">DetectionPostProcessImpl()</a>, <a class="el" href="_elementwise_test_impl_8hpp_source.xhtml#l00040">ElementwiseTestHelper()</a>, <a class="el" href="_elementwise_unary_test_impl_8hpp_source.xhtml#l00035">ElementwiseUnaryTestHelper()</a>, <a class="el" href="_fake_quantization_test_impl_8cpp_source.xhtml#l00016">FakeQuantizationTest()</a>, <a class="el" href="_l2_normalization_test_impl_8cpp_source.xhtml#l00703">L2Normalization2dShapeTest()</a>, <a class="el" href="_mirror_pad_test_impl_8cpp_source.xhtml#l00020">MirrorPad2dTestCommon()</a>, <a class="el" href="_mirror_pad_test_impl_8cpp_source.xhtml#l00066">MirrorPad3dTestCommon()</a>, <a class="el" href="_mirror_pad_test_impl_8cpp_source.xhtml#l00111">MirrorPad4dTestCommon()</a>, <a class="el" href="_pad_test_impl_8cpp_source.xhtml#l00020">Pad2dTestCommon()</a>, <a class="el" href="_pad_test_impl_8cpp_source.xhtml#l00096">Pad3dTestCommon()</a>, <a class="el" href="_pad_test_impl_8cpp_source.xhtml#l00183">Pad4dTestCommon()</a>, <a class="el" href="_pad_test_impl_8cpp_source.xhtml#l00425">PadQAsymmTestCommon()</a>, <a class="el" href="_concat_test_impl_8cpp_source.xhtml#l00243">PermuteOutputForConcat()</a>, <a class="el" href="_concat_test_impl_8cpp_source.xhtml#l00121">PermuteTensorData()</a>, <a class="el" href="_prelu_test_impl_8hpp_source.xhtml#l00024">PreluTest()</a>, <a class="el" href="_rank_test_impl_8cpp_source.xhtml#l00015">RankTest()</a>, <a class="el" href="_shape_test_impl_8cpp_source.xhtml#l00015">ShapeTest()</a>, <a class="el" href="_activation_test_impl_8cpp_source.xhtml#l00408">SimpleActivationTest()</a>, <a class="el" href="_convert_fp16_to_fp32_test_impl_8cpp_source.xhtml#l00016">SimpleConvertFp16ToFp32Test()</a>, <a class="el" href="_convert_fp32_to_fp16_test_impl_8cpp_source.xhtml#l00014">SimpleConvertFp32ToFp16Test()</a>, <a class="el" href="_conv2d_test_impl_8cpp_source.xhtml#l00384">SimpleConvolution2dNhwcTestImpl()</a>, <a class="el" href="_conv2d_test_impl_8cpp_source.xhtml#l00194">SimpleConvolution2dTestImpl()</a>, <a class="el" href="_conv3d_test_impl_8cpp_source.xhtml#l00150">SimpleConvolution3dTestImpl()</a>, <a class="el" href="_fill_test_impl_8cpp_source.xhtml#l00015">SimpleFillTest()</a>, <a class="el" href="_floor_test_impl_8cpp_source.xhtml#l00015">SimpleFloorTest()</a>, <a class="el" href="_fully_connected_test_impl_8cpp_source.xhtml#l00024">SimpleFullyConnectedTestImpl()</a>, <a class="el" href="_permute_test_impl_8hpp_source.xhtml#l00019">SimplePermuteTestImpl()</a>, <a class="el" href="_transpose_test_impl_8hpp_source.xhtml#l00020">SimpleTransposeTestImpl()</a>, <a class="el" href="_activation_test_impl_8cpp_source.xhtml#l00844">SqrtNNTest()</a>, <a class="el" href="_i_c_l_tensor_proxy_tests_8cpp_source.xhtml#l00022">TEST_SUITE()</a>, <a class="el" href="_transpose_convolution2d_test_impl_8cpp_source.xhtml#l00571">TransposeConvolution2dPerAxisQuantTest()</a>, <a class="el" href="_unidirectional_sequence_lstm_test_impl_8cpp_source.xhtml#l02034">UnidirectionalSequenceLstmInt8WithCifgWithPeepholeNoProjectionTest()</a>, <a class="el" href="_unidirectional_sequence_lstm_test_impl_8cpp_source.xhtml#l01647">UnidirectionalSequenceLstmLayerInt8NoCifgWithPeepholeWithProjectionTest()</a>, <a class="el" href="_unidirectional_sequence_lstm_test_impl_8cpp_source.xhtml#l01827">UnidirectionalSequenceLstmLayerInt8NoCifgWithPeepholeWithProjectionWithLayerNormTest()</a>, <a class="el" href="_unidirectional_sequence_lstm_test_impl_8cpp_source.xhtml#l01339">UnidirectionalSequenceLstmLayerInt8Test()</a>, <a class="el" href="_unidirectional_sequence_lstm_test_impl_8cpp_source.xhtml#l01493">UnidirectionalSequenceLstmLayerInt8TimeMajorTest()</a>, <a class="el" href="_unidirectional_sequence_lstm_test_impl_8cpp_source.xhtml#l00671">UnidirectionalSequenceLstmLayerNoCifgWithPeepholeWithProjectionTest()</a>, <a class="el" href="_unidirectional_sequence_lstm_test_impl_8cpp_source.xhtml#l00924">UnidirectionalSequenceLstmLayerNoCifgWithPeepholeWithProjectionWithLayerNormTest()</a>, and <a class="el" href="_unidirectional_sequence_lstm_test_impl_8cpp_source.xhtml#l01164">UnidirectionalSequenceLstmWithCifgWithPeepholeNoProjectionTest()</a>.</p>
<div class="fragment"><div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;{</div><div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;    tensorHandle-&gt;<a class="code" href="classarmnn_1_1_i_tensor_handle.xhtml#a4ec32790513ea4af4c5746f1ee48fbfe">CopyOutTo</a>(memory);</div><div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;}</div><div class="ttc" id="classarmnn_1_1_i_tensor_handle_xhtml_a4ec32790513ea4af4c5746f1ee48fbfe"><div class="ttname"><a href="classarmnn_1_1_i_tensor_handle.xhtml#a4ec32790513ea4af4c5746f1ee48fbfe">armnn::ITensorHandle::CopyOutTo</a></div><div class="ttdeci">virtual void CopyOutTo(void *memory) const =0</div><div class="ttdoc">Testing support to be able to verify and set tensor data content. </div></div>
</div><!-- fragment -->
</div>
</div>
<a id="ae15f1a3c55d2db87683577de9fa4437c"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ae15f1a3c55d2db87683577de9fa4437c">&#9670;&nbsp;</a></span>CopyDataToITensorHandle()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void CopyDataToITensorHandle </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classarmnn_1_1_i_tensor_handle.xhtml">armnn::ITensorHandle</a> *&#160;</td>
          <td class="paramname"><em>tensorHandle</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const void *&#160;</td>
          <td class="paramname"><em>memory</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_tensor_copy_utils_8cpp_source.xhtml#l00009">9</a> of file <a class="el" href="_tensor_copy_utils_8cpp_source.xhtml">TensorCopyUtils.cpp</a>.</p>

<p class="reference">References <a class="el" href="classarmnn_1_1_i_tensor_handle.xhtml#ad495ac6d9fd9e1ba5bb7a02c731a2d83">ITensorHandle::CopyInFrom()</a>.</p>

<p class="reference">Referenced by <a class="el" href="_addition_test_impl_8cpp_source.xhtml#l00543">AdditionAfterMaxPoolTest()</a>, <a class="el" href="_addition_test_impl_8cpp_source.xhtml#l00256">AdditionBroadcast1ElementTestImpl()</a>, <a class="el" href="_addition_test_impl_8cpp_source.xhtml#l00167">AdditionBroadcastTestImpl()</a>, <a class="el" href="_tensor_copy_utils_8cpp_source.xhtml#l00019">AllocateAndCopyDataToITensorHandle()</a>, <a class="el" href="_batch_mat_mul_test_impl_8cpp_source.xhtml#l00020">BatchMatMulTestImpl()</a>, <a class="el" href="_activation_test_impl_8cpp_source.xhtml#l00023">BoundedReLuTestCommon()</a>, <a class="el" href="_activation_test_impl_8cpp_source.xhtml#l00188">BoundedReLuUint8UpperAndLowerBoundTest()</a>, <a class="el" href="_cast_test_impl_8cpp_source.xhtml#l00011">CastTest()</a>, <a class="el" href="_activation_test_impl_8cpp_source.xhtml#l01221">CompareActivationTestImpl()</a>, <a class="el" href="_addition_test_impl_8cpp_source.xhtml#l00645">CompareAdditionTest()</a>, <a class="el" href="_batch_normalization_test_impl_8cpp_source.xhtml#l00612">CompareBatchNormTest()</a>, <a class="el" href="_conv2d_test_impl_8cpp_source.xhtml#l01369">CompareConvolution2dTestImpl()</a>, <a class="el" href="_conv2d_test_impl_8cpp_source.xhtml#l03090">CompareDepthwiseConvolution2dTestImpl()</a>, <a class="el" href="_multiplication_test_impl_8cpp_source.xhtml#l00525">CompareMultiplicationTest()</a>, <a class="el" href="_concat_test_impl_8cpp_source.xhtml#l02082">ConcatDifferentInputOutputQParamTest()</a>, <a class="el" href="_concat_test_impl_8cpp_source.xhtml#l00278">Concatenate()</a>, <a class="el" href="_concat_test_impl_8cpp_source.xhtml#l00424">ConcatTestImpl()</a>, <a class="el" href="_concat_test_impl_8cpp_source.xhtml#l02730">ConcatUint16Test()</a>, <a class="el" href="_concat_test_impl_8cpp_source.xhtml#l02446">ConcatUint8DifferentQParamsTest()</a>, <a class="el" href="_concat_test_impl_8cpp_source.xhtml#l02592">ConcatUint8Test()</a>, <a class="el" href="_activation_test_impl_8cpp_source.xhtml#l00315">ConstantLinearActivationTestCommon()</a>, <a class="el" href="_convert_bf16_to_fp32_test_impl_8cpp_source.xhtml#l00013">ConvertBf16ToFp32Test()</a>, <a class="el" href="_convert_fp32_to_bf16_test_impl_8cpp_source.xhtml#l00013">ConvertFp32ToBf16Test()</a>, <a class="el" href="_conv2d_test_impl_8cpp_source.xhtml#l00501">Convolution1dTestImpl()</a>, <a class="el" href="_conv2d_test_impl_8cpp_source.xhtml#l03631">Convolution2dPerAxisQuantTest()</a>, <a class="el" href="_conv2d_test_impl_8cpp_source.xhtml#l01715">DepthwiseConvolution2dAsymmetricTestImpl()</a>, <a class="el" href="_conv2d_test_impl_8cpp_source.xhtml#l01885">DepthwiseConvolution2dDepthMul1TestImpl()</a>, <a class="el" href="_conv2d_test_impl_8cpp_source.xhtml#l03902">DepthwiseConvolution2dPerAxisQuantTest()</a>, <a class="el" href="_conv2d_test_impl_8cpp_source.xhtml#l02064">DepthwiseConvolution2dTestImpl()</a>, <a class="el" href="_detection_post_process_test_impl_8hpp_source.xhtml#l00141">DetectionPostProcessImpl()</a>, <a class="el" href="_elementwise_test_impl_8hpp_source.xhtml#l00040">ElementwiseTestHelper()</a>, <a class="el" href="_elementwise_unary_test_impl_8hpp_source.xhtml#l00035">ElementwiseUnaryTestHelper()</a>, <a class="el" href="_fake_quantization_test_impl_8cpp_source.xhtml#l00016">FakeQuantizationTest()</a>, <a class="el" href="_l2_normalization_test_impl_8cpp_source.xhtml#l00703">L2Normalization2dShapeTest()</a>, <a class="el" href="_mirror_pad_test_impl_8cpp_source.xhtml#l00020">MirrorPad2dTestCommon()</a>, <a class="el" href="_mirror_pad_test_impl_8cpp_source.xhtml#l00066">MirrorPad3dTestCommon()</a>, <a class="el" href="_mirror_pad_test_impl_8cpp_source.xhtml#l00111">MirrorPad4dTestCommon()</a>, <a class="el" href="_pad_test_impl_8cpp_source.xhtml#l00020">Pad2dTestCommon()</a>, <a class="el" href="_pad_test_impl_8cpp_source.xhtml#l00096">Pad3dTestCommon()</a>, <a class="el" href="_pad_test_impl_8cpp_source.xhtml#l00183">Pad4dTestCommon()</a>, <a class="el" href="_pad_test_impl_8cpp_source.xhtml#l00425">PadQAsymmTestCommon()</a>, <a class="el" href="_concat_test_impl_8cpp_source.xhtml#l00121">PermuteTensorData()</a>, <a class="el" href="_prelu_test_impl_8hpp_source.xhtml#l00024">PreluTest()</a>, <a class="el" href="_rank_test_impl_8cpp_source.xhtml#l00015">RankTest()</a>, <a class="el" href="_shape_test_impl_8cpp_source.xhtml#l00015">ShapeTest()</a>, <a class="el" href="_activation_test_impl_8cpp_source.xhtml#l00408">SimpleActivationTest()</a>, <a class="el" href="_convert_fp16_to_fp32_test_impl_8cpp_source.xhtml#l00016">SimpleConvertFp16ToFp32Test()</a>, <a class="el" href="_convert_fp32_to_fp16_test_impl_8cpp_source.xhtml#l00014">SimpleConvertFp32ToFp16Test()</a>, <a class="el" href="_conv2d_test_impl_8cpp_source.xhtml#l00384">SimpleConvolution2dNhwcTestImpl()</a>, <a class="el" href="_conv2d_test_impl_8cpp_source.xhtml#l00194">SimpleConvolution2dTestImpl()</a>, <a class="el" href="_conv3d_test_impl_8cpp_source.xhtml#l00150">SimpleConvolution3dTestImpl()</a>, <a class="el" href="_fill_test_impl_8cpp_source.xhtml#l00015">SimpleFillTest()</a>, <a class="el" href="_floor_test_impl_8cpp_source.xhtml#l00015">SimpleFloorTest()</a>, <a class="el" href="_fully_connected_test_impl_8cpp_source.xhtml#l00024">SimpleFullyConnectedTestImpl()</a>, <a class="el" href="_permute_test_impl_8hpp_source.xhtml#l00019">SimplePermuteTestImpl()</a>, <a class="el" href="_transpose_test_impl_8hpp_source.xhtml#l00020">SimpleTransposeTestImpl()</a>, <a class="el" href="_activation_test_impl_8cpp_source.xhtml#l00844">SqrtNNTest()</a>, <a class="el" href="_i_c_l_tensor_proxy_tests_8cpp_source.xhtml#l00022">TEST_SUITE()</a>, <a class="el" href="_transpose_convolution2d_test_impl_8cpp_source.xhtml#l00571">TransposeConvolution2dPerAxisQuantTest()</a>, <a class="el" href="_unidirectional_sequence_lstm_test_impl_8cpp_source.xhtml#l02034">UnidirectionalSequenceLstmInt8WithCifgWithPeepholeNoProjectionTest()</a>, <a class="el" href="_unidirectional_sequence_lstm_test_impl_8cpp_source.xhtml#l01647">UnidirectionalSequenceLstmLayerInt8NoCifgWithPeepholeWithProjectionTest()</a>, <a class="el" href="_unidirectional_sequence_lstm_test_impl_8cpp_source.xhtml#l01827">UnidirectionalSequenceLstmLayerInt8NoCifgWithPeepholeWithProjectionWithLayerNormTest()</a>, <a class="el" href="_unidirectional_sequence_lstm_test_impl_8cpp_source.xhtml#l01339">UnidirectionalSequenceLstmLayerInt8Test()</a>, <a class="el" href="_unidirectional_sequence_lstm_test_impl_8cpp_source.xhtml#l01493">UnidirectionalSequenceLstmLayerInt8TimeMajorTest()</a>, <a class="el" href="_unidirectional_sequence_lstm_test_impl_8cpp_source.xhtml#l00671">UnidirectionalSequenceLstmLayerNoCifgWithPeepholeWithProjectionTest()</a>, <a class="el" href="_unidirectional_sequence_lstm_test_impl_8cpp_source.xhtml#l00924">UnidirectionalSequenceLstmLayerNoCifgWithPeepholeWithProjectionWithLayerNormTest()</a>, and <a class="el" href="_unidirectional_sequence_lstm_test_impl_8cpp_source.xhtml#l01164">UnidirectionalSequenceLstmWithCifgWithPeepholeNoProjectionTest()</a>.</p>
<div class="fragment"><div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;{</div><div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;    tensorHandle-&gt;<a class="code" href="classarmnn_1_1_i_tensor_handle.xhtml#ad495ac6d9fd9e1ba5bb7a02c731a2d83">CopyInFrom</a>(memory);</div><div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;}</div><div class="ttc" id="classarmnn_1_1_i_tensor_handle_xhtml_ad495ac6d9fd9e1ba5bb7a02c731a2d83"><div class="ttname"><a href="classarmnn_1_1_i_tensor_handle.xhtml#ad495ac6d9fd9e1ba5bb7a02c731a2d83">armnn::ITensorHandle::CopyInFrom</a></div><div class="ttdeci">virtual void CopyInFrom(const void *memory)=0</div></div>
</div><!-- fragment -->
</div>
</div>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="dir_d44c64559bbebec7f509842c48db8b23.xhtml">include</a></li><li class="navelem"><a class="el" href="dir_63bab6e14293bb0757c6313c233a04b6.xhtml">armnnTestUtils</a></li><li class="navelem"><a class="el" href="include_2armnn_test_utils_2_tensor_copy_utils_8hpp.xhtml">TensorCopyUtils.hpp</a></li>
    <li class="footer">Generated on Fri Aug 19 2022 14:38:31 for ArmNN by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.13 </li>
  </ul>
</div>
</body>
</html>
