<!-- Copyright (c) 2020 ARM Limited. -->
<!--                                 -->
<!-- SPDX-License-Identifier: MIT    -->
<!--                                 -->
<!-- HTML header for doxygen 1.8.13-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.13"/>
<meta name="robots" content="NOINDEX, NOFOLLOW" />
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>ArmNN: src/armnn/test/ObservableTest.cpp Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script><script type="text/javascript" src="http://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="stylesheet.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <img alt="ArmNN" src="Arm_NN_horizontal_blue.png" style="max-width: 10rem; margin-top: .5rem; margin-left 10px"/>
  <td style="padding-left: 0.5em;">
   <div id="projectname">
   &#160;<span id="projectnumber">22.08</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.13 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
$(document).ready(function(){initNavTree('_observable_test_8cpp_source.xhtml','');});
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="headertitle">
<div class="title">ObservableTest.cpp</div>  </div>
</div><!--header-->
<div class="contents">
<a href="_observable_test_8cpp.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="comment">//</span></div><div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="comment">// Copyright Â© 2017 Arm Ltd. All rights reserved.</span></div><div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="comment">// SPDX-License-Identifier: MIT</span></div><div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="comment">//</span></div><div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;</div><div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="preprocessor">#include &lt;doctest/doctest.h&gt;</span></div><div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;</div><div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_graph_8hpp.xhtml">Graph.hpp</a>&quot;</span></div><div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_observable_8hpp.xhtml">Observable.hpp</a>&quot;</span></div><div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;</div><div class="line"><a name="l00011"></a><span class="lineno"><a class="line" href="_observable_test_8cpp.xhtml#af4ba63841748a0a1919d8eeab74e0ba9">   11</a></span>&#160;<a class="code" href="_observable_test_8cpp.xhtml#af4ba63841748a0a1919d8eeab74e0ba9">TEST_SUITE</a>(<span class="stringliteral">&quot;Observable&quot;</span>)</div><div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;{</div><div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;TEST_CASE(<span class="stringliteral">&quot;AddedLayerObservableTest&quot;</span>)</div><div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;{</div><div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;    <a class="code" href="classarmnn_1_1_graph.xhtml">armnn::Graph</a> graph;</div><div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;</div><div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;    <span class="comment">// Create a graph observable</span></div><div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;    <a class="code" href="classarmnn_1_1_added_layer_observable.xhtml">armnn::AddedLayerObservable</a> layerObservable(graph);</div><div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;</div><div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;    <span class="comment">// Add a few layers</span></div><div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;    <span class="keyword">auto</span> output = graph.<a class="code" href="classarmnn_1_1_graph.xhtml#a7563c5b899e7d0ada08fd0fdb202f205">AddLayer</a>&lt;<a class="code" href="classarmnn_1_1_output_layer.xhtml">armnn::OutputLayer</a>&gt;(0, <span class="stringliteral">&quot;output&quot;</span>);</div><div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;    <span class="keyword">auto</span> input = graph.<a class="code" href="classarmnn_1_1_graph.xhtml#a3ff30c6669fdc69de1f5be1f89bacc3f">InsertNewLayer</a>&lt;<a class="code" href="classarmnn_1_1_input_layer.xhtml">armnn::InputLayer</a>&gt;(output-&gt;GetInputSlot(0), 0, <span class="stringliteral">&quot;input&quot;</span>);</div><div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;</div><div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;    <span class="comment">// Check the observable has observed the changes</span></div><div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;    std::list&lt;armnn::Layer*&gt; testLayers({ output, input });</div><div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;</div><div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;    CHECK(std::equal(layerObservable.<a class="code" href="classarmnn_1_1_graph_observable.xhtml#a2387033802383edbdc95f9bbb12a707e">begin</a>(), layerObservable.<a class="code" href="classarmnn_1_1_graph_observable.xhtml#ab45dae688fc5d8983727abffa4389003">end</a>(),</div><div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;                                  testLayers.begin(), testLayers.end()));</div><div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;}</div><div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;</div><div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;TEST_CASE(<span class="stringliteral">&quot;ClearAddedLayerObservableTest&quot;</span>)</div><div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;{</div><div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;    <a class="code" href="classarmnn_1_1_graph.xhtml">armnn::Graph</a> graph;</div><div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;</div><div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;    <span class="comment">// Create a graph observable</span></div><div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;    <a class="code" href="classarmnn_1_1_added_layer_observable.xhtml">armnn::AddedLayerObservable</a> addedLayerObservable(graph);</div><div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;</div><div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;    <span class="comment">// Add a few layers</span></div><div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;    <span class="keyword">auto</span> output = graph.<a class="code" href="classarmnn_1_1_graph.xhtml#a7563c5b899e7d0ada08fd0fdb202f205">AddLayer</a>&lt;<a class="code" href="classarmnn_1_1_output_layer.xhtml">armnn::OutputLayer</a>&gt;(0, <span class="stringliteral">&quot;output&quot;</span>);</div><div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;    graph.<a class="code" href="classarmnn_1_1_graph.xhtml#a3ff30c6669fdc69de1f5be1f89bacc3f">InsertNewLayer</a>&lt;<a class="code" href="classarmnn_1_1_input_layer.xhtml">armnn::InputLayer</a>&gt;(output-&gt;GetInputSlot(0), 0, <span class="stringliteral">&quot;input&quot;</span>);</div><div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;</div><div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;    addedLayerObservable.<a class="code" href="classarmnn_1_1_graph_observable.xhtml#aa71d36872f416feaa853788a7a7a7ef8">Clear</a>();</div><div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;</div><div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;    <span class="comment">// Check the observable has observed the changes</span></div><div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;    std::list&lt;armnn::Layer*&gt; emptyList({});</div><div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;</div><div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;    CHECK(std::equal(addedLayerObservable.<a class="code" href="classarmnn_1_1_graph_observable.xhtml#a2387033802383edbdc95f9bbb12a707e">begin</a>(), addedLayerObservable.<a class="code" href="classarmnn_1_1_graph_observable.xhtml#ab45dae688fc5d8983727abffa4389003">end</a>(),</div><div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;                                  emptyList.begin(), emptyList.end()));</div><div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;}</div><div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;</div><div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;TEST_CASE(<span class="stringliteral">&quot;ErasedLayerNamesObservableTest&quot;</span>)</div><div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;{</div><div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;    <a class="code" href="classarmnn_1_1_graph.xhtml">armnn::Graph</a> graph;</div><div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;</div><div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;    <span class="comment">// Create a graph observable</span></div><div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;    <a class="code" href="classarmnn_1_1_erased_layer_names_observable.xhtml">armnn::ErasedLayerNamesObservable</a> erasedLayerNamesObservable(graph);</div><div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;</div><div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;    <span class="comment">// Add a few layers</span></div><div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;    <span class="keyword">auto</span> output = graph.<a class="code" href="classarmnn_1_1_graph.xhtml#a7563c5b899e7d0ada08fd0fdb202f205">AddLayer</a>&lt;<a class="code" href="classarmnn_1_1_output_layer.xhtml">armnn::OutputLayer</a>&gt;(0, <span class="stringliteral">&quot;output&quot;</span>);</div><div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;    graph.<a class="code" href="classarmnn_1_1_graph.xhtml#a3ff30c6669fdc69de1f5be1f89bacc3f">InsertNewLayer</a>&lt;<a class="code" href="classarmnn_1_1_input_layer.xhtml">armnn::InputLayer</a>&gt;(output-&gt;GetInputSlot(0), 0, <span class="stringliteral">&quot;input&quot;</span>);</div><div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;</div><div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;    graph.<a class="code" href="classarmnn_1_1_graph.xhtml#a96d76fd10af39fbfabfd0caf0d1439fa">EraseLayer</a>(output);</div><div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;</div><div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;    <span class="comment">// Check the observable has observed the changes</span></div><div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;    std::list&lt;std::string&gt; testList({<span class="stringliteral">&quot;output&quot;</span>});</div><div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;</div><div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;    CHECK(std::equal(erasedLayerNamesObservable.<a class="code" href="classarmnn_1_1_graph_observable.xhtml#a2387033802383edbdc95f9bbb12a707e">begin</a>(), erasedLayerNamesObservable.<a class="code" href="classarmnn_1_1_graph_observable.xhtml#ab45dae688fc5d8983727abffa4389003">end</a>(),</div><div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;                                  testList.begin(), testList.end()));</div><div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;}</div><div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;</div><div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;TEST_CASE(<span class="stringliteral">&quot;ClearErasedLayerNamesObservableTest&quot;</span>)</div><div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;{</div><div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;    <a class="code" href="classarmnn_1_1_graph.xhtml">armnn::Graph</a> graph;</div><div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;</div><div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;    <span class="comment">// Create a graph observable</span></div><div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;    <a class="code" href="classarmnn_1_1_erased_layer_names_observable.xhtml">armnn::ErasedLayerNamesObservable</a> erasedLayerNamesObservable(graph);</div><div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;</div><div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;    <span class="comment">// Add a few layers</span></div><div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;    <span class="keyword">auto</span> output = graph.<a class="code" href="classarmnn_1_1_graph.xhtml#a7563c5b899e7d0ada08fd0fdb202f205">AddLayer</a>&lt;<a class="code" href="classarmnn_1_1_output_layer.xhtml">armnn::OutputLayer</a>&gt;(0, <span class="stringliteral">&quot;output&quot;</span>);</div><div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;    graph.<a class="code" href="classarmnn_1_1_graph.xhtml#a3ff30c6669fdc69de1f5be1f89bacc3f">InsertNewLayer</a>&lt;<a class="code" href="classarmnn_1_1_input_layer.xhtml">armnn::InputLayer</a>&gt;(output-&gt;GetInputSlot(0), 0, <span class="stringliteral">&quot;input&quot;</span>);</div><div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;</div><div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;    graph.<a class="code" href="classarmnn_1_1_graph.xhtml#a96d76fd10af39fbfabfd0caf0d1439fa">EraseLayer</a>(output);</div><div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;</div><div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;    erasedLayerNamesObservable.<a class="code" href="classarmnn_1_1_graph_observable.xhtml#aa71d36872f416feaa853788a7a7a7ef8">Clear</a>();</div><div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;</div><div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;    <span class="comment">// Check the observable has observed the changes</span></div><div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;    std::list&lt;std::string&gt; emptyList({});</div><div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;</div><div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;    CHECK(std::equal(erasedLayerNamesObservable.<a class="code" href="classarmnn_1_1_graph_observable.xhtml#a2387033802383edbdc95f9bbb12a707e">begin</a>(), erasedLayerNamesObservable.<a class="code" href="classarmnn_1_1_graph_observable.xhtml#ab45dae688fc5d8983727abffa4389003">end</a>(),</div><div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;                                  emptyList.begin(), emptyList.end()));</div><div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;}</div><div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;</div><div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;}</div><div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;</div><div class="ttc" id="classarmnn_1_1_graph_observable_xhtml_a2387033802383edbdc95f9bbb12a707e"><div class="ttname"><a href="classarmnn_1_1_graph_observable.xhtml#a2387033802383edbdc95f9bbb12a707e">armnn::GraphObservable::begin</a></div><div class="ttdeci">Iterator begin()</div><div class="ttdef"><b>Definition:</b> <a href="_observable_8hpp_source.xhtml#l00028">Observable.hpp:28</a></div></div>
<div class="ttc" id="classarmnn_1_1_graph_xhtml_a7563c5b899e7d0ada08fd0fdb202f205"><div class="ttname"><a href="classarmnn_1_1_graph.xhtml#a7563c5b899e7d0ada08fd0fdb202f205">armnn::Graph::AddLayer</a></div><div class="ttdeci">LayerT * AddLayer(Args &amp;&amp;... args)</div><div class="ttdoc">Adds a new layer, of type LayerType, to the graph constructed with the arguments passed. </div><div class="ttdef"><b>Definition:</b> <a href="_graph_8hpp_source.xhtml#l00456">Graph.hpp:456</a></div></div>
<div class="ttc" id="classarmnn_1_1_graph_xhtml_a96d76fd10af39fbfabfd0caf0d1439fa"><div class="ttname"><a href="classarmnn_1_1_graph.xhtml#a96d76fd10af39fbfabfd0caf0d1439fa">armnn::Graph::EraseLayer</a></div><div class="ttdeci">void EraseLayer(Iterator pos)</div><div class="ttdoc">Deletes the layer at the specified position. </div><div class="ttdef"><b>Definition:</b> <a href="_graph_8hpp_source.xhtml#l00504">Graph.hpp:504</a></div></div>
<div class="ttc" id="classarmnn_1_1_added_layer_observable_xhtml"><div class="ttname"><a href="classarmnn_1_1_added_layer_observable.xhtml">armnn::AddedLayerObservable</a></div><div class="ttdef"><b>Definition:</b> <a href="_observable_8hpp_source.xhtml#l00046">Observable.hpp:46</a></div></div>
<div class="ttc" id="_observable_test_8cpp_xhtml_af4ba63841748a0a1919d8eeab74e0ba9"><div class="ttname"><a href="_observable_test_8cpp.xhtml#af4ba63841748a0a1919d8eeab74e0ba9">TEST_SUITE</a></div><div class="ttdeci">TEST_SUITE(&quot;Observable&quot;)</div><div class="ttdef"><b>Definition:</b> <a href="_observable_test_8cpp_source.xhtml#l00011">ObservableTest.cpp:11</a></div></div>
<div class="ttc" id="_observable_8hpp_xhtml"><div class="ttname"><a href="_observable_8hpp.xhtml">Observable.hpp</a></div></div>
<div class="ttc" id="classarmnn_1_1_output_layer_xhtml"><div class="ttname"><a href="classarmnn_1_1_output_layer.xhtml">armnn::OutputLayer</a></div><div class="ttdoc">A layer user-provided data can be bound to (e.g. inputs, outputs). </div><div class="ttdef"><b>Definition:</b> <a href="_output_layer_8hpp_source.xhtml#l00013">OutputLayer.hpp:13</a></div></div>
<div class="ttc" id="classarmnn_1_1_graph_observable_xhtml_aa71d36872f416feaa853788a7a7a7ef8"><div class="ttname"><a href="classarmnn_1_1_graph_observable.xhtml#aa71d36872f416feaa853788a7a7a7ef8">armnn::GraphObservable::Clear</a></div><div class="ttdeci">void Clear()</div><div class="ttdef"><b>Definition:</b> <a href="_observable_8hpp_source.xhtml#l00026">Observable.hpp:26</a></div></div>
<div class="ttc" id="_graph_8hpp_xhtml"><div class="ttname"><a href="_graph_8hpp.xhtml">Graph.hpp</a></div></div>
<div class="ttc" id="classarmnn_1_1_graph_xhtml"><div class="ttname"><a href="classarmnn_1_1_graph.xhtml">armnn::Graph</a></div><div class="ttdef"><b>Definition:</b> <a href="_graph_8hpp_source.xhtml#l00030">Graph.hpp:30</a></div></div>
<div class="ttc" id="classarmnn_1_1_input_layer_xhtml"><div class="ttname"><a href="classarmnn_1_1_input_layer.xhtml">armnn::InputLayer</a></div><div class="ttdoc">A layer user-provided data can be bound to (e.g. inputs, outputs). </div><div class="ttdef"><b>Definition:</b> <a href="_input_layer_8hpp_source.xhtml#l00013">InputLayer.hpp:13</a></div></div>
<div class="ttc" id="classarmnn_1_1_graph_observable_xhtml_ab45dae688fc5d8983727abffa4389003"><div class="ttname"><a href="classarmnn_1_1_graph_observable.xhtml#ab45dae688fc5d8983727abffa4389003">armnn::GraphObservable::end</a></div><div class="ttdeci">Iterator end()</div><div class="ttdef"><b>Definition:</b> <a href="_observable_8hpp_source.xhtml#l00030">Observable.hpp:30</a></div></div>
<div class="ttc" id="classarmnn_1_1_erased_layer_names_observable_xhtml"><div class="ttname"><a href="classarmnn_1_1_erased_layer_names_observable.xhtml">armnn::ErasedLayerNamesObservable</a></div><div class="ttdef"><b>Definition:</b> <a href="_observable_8hpp_source.xhtml#l00056">Observable.hpp:56</a></div></div>
<div class="ttc" id="classarmnn_1_1_graph_xhtml_a3ff30c6669fdc69de1f5be1f89bacc3f"><div class="ttname"><a href="classarmnn_1_1_graph.xhtml#a3ff30c6669fdc69de1f5be1f89bacc3f">armnn::Graph::InsertNewLayer</a></div><div class="ttdeci">LayerT * InsertNewLayer(InputSlot &amp;insertBefore, Args &amp;&amp;... args)</div><div class="ttdoc">Inserts a new layer between the output slot currently connected to insertBefore and insertBefore itse...</div><div class="ttdef"><b>Definition:</b> <a href="_graph_8hpp_source.xhtml#l00471">Graph.hpp:471</a></div></div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="dir_68267d1309a1af8e8297ef4c3efbcdba.xhtml">src</a></li><li class="navelem"><a class="el" href="dir_e0a84d05c80a2ef4231141dcbbeac5c8.xhtml">armnn</a></li><li class="navelem"><a class="el" href="dir_9d86fd1fbecbedf5bdb69c7e7235fe5f.xhtml">test</a></li><li class="navelem"><a class="el" href="_observable_test_8cpp.xhtml">ObservableTest.cpp</a></li>
    <li class="footer">Generated on Fri Aug 19 2022 14:38:27 for ArmNN by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.13 </li>
  </ul>
</div>
</body>
</html>
