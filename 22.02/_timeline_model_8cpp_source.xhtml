<!-- Copyright (c) 2020 ARM Limited. -->
<!--                                 -->
<!-- SPDX-License-Identifier: MIT    -->
<!--                                 -->
<!-- HTML header for doxygen 1.8.13-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.13"/>
<meta name="robots" content="NOINDEX, NOFOLLOW" />
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>ArmNN: src/profiling/test/TimelineModel.cpp Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script><script type="text/javascript" src="http://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="stylesheet.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <img alt="ArmNN" src="Arm_NN_horizontal_blue.png" style="max-width: 10rem; margin-top: .5rem; margin-left 10px"/>
  <td style="padding-left: 0.5em;">
   <div id="projectname">
   &#160;<span id="projectnumber">22.02</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.13 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
$(document).ready(function(){initNavTree('_timeline_model_8cpp_source.xhtml','');});
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="headertitle">
<div class="title">TimelineModel.cpp</div>  </div>
</div><!--header-->
<div class="contents">
<a href="_timeline_model_8cpp.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="comment">//</span></div><div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="comment">// Copyright Â© 2020 Arm Ltd and Contributors. All rights reserved.</span></div><div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="comment">// SPDX-License-Identifier: MIT</span></div><div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="comment">//</span></div><div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;</div><div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_timeline_model_8hpp.xhtml">TimelineModel.hpp</a>&quot;</span></div><div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;</div><div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="preprocessor">#include &lt;common/include/LabelsAndEventClasses.hpp&gt;</span></div><div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;</div><div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="preprocessor">#include &lt;algorithm&gt;</span></div><div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;</div><div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;<span class="keyword">namespace </span><a class="code" href="namespacearmnn.xhtml">armnn</a></div><div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;{</div><div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;</div><div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;<span class="keyword">namespace </span>profiling</div><div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;{</div><div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;</div><div class="line"><a name="l00018"></a><span class="lineno"><a class="line" href="classarmnn_1_1profiling_1_1_timeline_model.xhtml#a640daf6408f35fdeae6411ed2968403f">   18</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="classarmnn_1_1profiling_1_1_timeline_model.xhtml#a640daf6408f35fdeae6411ed2968403f">TimelineModel::AddLabel</a>(<span class="keyword">const</span> arm::pipe::ITimelineDecoder::Label&amp; label)</div><div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;{</div><div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;    m_LabelMap.emplace(label.m_Guid, label);</div><div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;}</div><div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;</div><div class="line"><a name="l00023"></a><span class="lineno"><a class="line" href="classarmnn_1_1profiling_1_1_timeline_model.xhtml#a02d9fcd9023fa584e880528d1d3b10d3">   23</a></span>&#160;std::string* <a class="code" href="classarmnn_1_1profiling_1_1_timeline_model.xhtml#a02d9fcd9023fa584e880528d1d3b10d3">TimelineModel::FindLabel</a>(uint64_t guid)</div><div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;{</div><div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;    <span class="keyword">auto</span> iter = m_LabelMap.find(guid);</div><div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;    <span class="keywordflow">if</span> (iter != m_LabelMap.end())</div><div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;    {</div><div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;        <span class="keywordflow">return</span> &amp;iter-&gt;second.m_Name;</div><div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;    }</div><div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;    <span class="keywordflow">else</span></div><div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;    {</div><div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;        <span class="keywordflow">return</span> <span class="keyword">nullptr</span>;</div><div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;    }</div><div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;}</div><div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;</div><div class="line"><a name="l00036"></a><span class="lineno"><a class="line" href="classarmnn_1_1profiling_1_1_timeline_model.xhtml#acf92758924263e61fea775a36ae49d21">   36</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="classarmnn_1_1profiling_1_1_timeline_model.xhtml#acf92758924263e61fea775a36ae49d21">TimelineModel::AddEntity</a>(uint64_t guid)</div><div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;{</div><div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;    m_Entities.emplace(guid, guid);</div><div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;}</div><div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;</div><div class="line"><a name="l00041"></a><span class="lineno"><a class="line" href="classarmnn_1_1profiling_1_1_timeline_model.xhtml#afb45017b2b2e4bf0605a5935b4c83299">   41</a></span>&#160;<a class="code" href="classarmnn_1_1profiling_1_1_entity.xhtml">Entity</a>* <a class="code" href="classarmnn_1_1profiling_1_1_timeline_model.xhtml#afb45017b2b2e4bf0605a5935b4c83299">TimelineModel::FindEntity</a>(uint64_t <span class="keywordtype">id</span>)</div><div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;{</div><div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;    <span class="keyword">auto</span> iter = m_Entities.find(<span class="keywordtype">id</span>);</div><div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;    <span class="keywordflow">if</span> (iter != m_Entities.end())</div><div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;    {</div><div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;        <span class="keywordflow">return</span> &amp;(iter-&gt;second);</div><div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;    }</div><div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;    <span class="keywordflow">else</span></div><div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;    {</div><div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;        <span class="keywordflow">return</span> <span class="keyword">nullptr</span>;</div><div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;    }</div><div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;}</div><div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;</div><div class="line"><a name="l00054"></a><span class="lineno"><a class="line" href="classarmnn_1_1profiling_1_1_timeline_model.xhtml#a322803572d603532fb433c693f1ee530">   54</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="classarmnn_1_1profiling_1_1_timeline_model.xhtml#a322803572d603532fb433c693f1ee530">TimelineModel::AddRelationship</a>(<span class="keyword">const</span> arm::pipe::ITimelineDecoder::Relationship&amp; relationship)</div><div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;{</div><div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;    m_Relationships.emplace(relationship.m_Guid, relationship);</div><div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;    <span class="keywordflow">if</span> (relationship.m_RelationshipType == arm::pipe::ITimelineDecoder::RelationshipType::LabelLink)</div><div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;    {</div><div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;        HandleLabelLink(relationship);</div><div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;    }</div><div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;    <span class="keywordflow">else</span> <span class="keywordflow">if</span> (relationship.m_RelationshipType == arm::pipe::ITimelineDecoder::RelationshipType::RetentionLink)</div><div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;    {</div><div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;        <span class="comment">// Take care of the special case of a connection between layers in ArmNN</span></div><div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;        <span class="comment">// modelled by a retention link between two layer entities with an attribute GUID</span></div><div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;        <span class="comment">// of connection</span></div><div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;        <span class="keywordflow">if</span> (relationship.m_AttributeGuid == armnn::profiling::LabelsAndEventClasses::CONNECTION_GUID)</div><div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;        {</div><div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;            HandleConnection(relationship);</div><div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;        }</div><div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;        <span class="keywordflow">else</span> <span class="keywordflow">if</span> (relationship.m_AttributeGuid == armnn::profiling::LabelsAndEventClasses::CHILD_GUID)</div><div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;        {</div><div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;            HandleChild(relationship);</div><div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;        }</div><div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;        <span class="keywordflow">else</span> <span class="keywordflow">if</span> (relationship.m_AttributeGuid == armnn::profiling::LabelsAndEventClasses::EXECUTION_OF_GUID)</div><div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;        {</div><div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;            HandleExecutionOf(relationship);</div><div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;        }</div><div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;        <span class="keywordflow">else</span></div><div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;        {</div><div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;            <span class="comment">// report unknown relationship type</span></div><div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;            std::stringstream ss;</div><div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;            ss &lt;&lt; <span class="stringliteral">&quot;Encountered a RetentionLink of unknown type [&quot;</span> &lt;&lt; relationship.m_AttributeGuid &lt;&lt; <span class="stringliteral">&quot;]&quot;</span>;</div><div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;            m_Errors.push_back(arm::pipe::ProfilingException(ss.str()));</div><div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;        }</div><div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;    }</div><div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;    <span class="keywordflow">else</span> <span class="keywordflow">if</span> (relationship.m_RelationshipType == arm::pipe::ITimelineDecoder::RelationshipType::ExecutionLink)</div><div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;    {</div><div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;        HandleExecutionLink(relationship);</div><div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;    }</div><div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;}</div><div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;</div><div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;<span class="keywordtype">void</span> TimelineModel::HandleLabelLink(<span class="keyword">const</span> arm::pipe::ITimelineDecoder::Relationship&amp; relationship)</div><div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;{</div><div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;    <a class="code" href="classarmnn_1_1profiling_1_1_entity.xhtml">Entity</a>* entity = <a class="code" href="classarmnn_1_1profiling_1_1_timeline_model.xhtml#afb45017b2b2e4bf0605a5935b4c83299">FindEntity</a>(relationship.m_HeadGuid);</div><div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;    <span class="comment">// we have a label attribute of an entity</span></div><div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;    std::string* value = <span class="keyword">nullptr</span>;</div><div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;    std::string* attribute = <span class="keyword">nullptr</span>;</div><div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;    value = <a class="code" href="classarmnn_1_1profiling_1_1_timeline_model.xhtml#a02d9fcd9023fa584e880528d1d3b10d3">FindLabel</a>(relationship.m_TailGuid);</div><div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;    <span class="keywordflow">if</span> (value == <span class="keyword">nullptr</span>)</div><div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;    {</div><div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;        <span class="comment">//report an error</span></div><div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;        std::stringstream ss;</div><div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;        ss &lt;&lt; <span class="stringliteral">&quot;could not find label link [&quot;</span> &lt;&lt; relationship.m_Guid &lt;&lt;</div><div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;           <span class="stringliteral">&quot;] value [&quot;</span> &lt;&lt; relationship.m_TailGuid &lt;&lt; <span class="stringliteral">&quot;]&quot;</span>;</div><div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;        m_Errors.push_back(arm::pipe::ProfilingException(ss.str()));</div><div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;    }</div><div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;    <span class="keywordflow">if</span> (relationship.m_AttributeGuid != 0)</div><div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;    {</div><div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;        attribute = <a class="code" href="classarmnn_1_1profiling_1_1_timeline_model.xhtml#a02d9fcd9023fa584e880528d1d3b10d3">FindLabel</a>(relationship.m_AttributeGuid);</div><div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;        <span class="keywordflow">if</span> (attribute == <span class="keyword">nullptr</span>)</div><div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;        {</div><div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;            <span class="comment">//report an error</span></div><div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;            std::stringstream ss;</div><div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;            ss &lt;&lt; <span class="stringliteral">&quot;could not find label link [&quot;</span> &lt;&lt; relationship.m_Guid &lt;&lt;</div><div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;               <span class="stringliteral">&quot;] attribute [&quot;</span> &lt;&lt; relationship.m_AttributeGuid &lt;&lt; <span class="stringliteral">&quot;]&quot;</span>;</div><div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;            m_Errors.push_back(arm::pipe::ProfilingException(ss.str()));</div><div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;        }</div><div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;    }</div><div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;    <span class="keywordflow">else</span></div><div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;    {</div><div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;        <span class="comment">//report an error</span></div><div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;        std::stringstream ss;</div><div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;        ss &lt;&lt; <span class="stringliteral">&quot;label link [&quot;</span> &lt;&lt; relationship.m_Guid &lt;&lt; <span class="stringliteral">&quot;] has a zero attribute guid&quot;</span>;</div><div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;        m_Errors.push_back(arm::pipe::ProfilingException(ss.str()));</div><div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;    }</div><div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;    <span class="keywordflow">if</span> (entity != <span class="keyword">nullptr</span> &amp;&amp; attribute != <span class="keyword">nullptr</span> &amp;&amp; value != <span class="keyword">nullptr</span>)</div><div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;    {</div><div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;        entity-&gt;<a class="code" href="classarmnn_1_1profiling_1_1_entity.xhtml#adc352aa561865b932f5c8f637ce0fdad">AddAttribute</a>(*attribute, *value);</div><div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;        <span class="comment">// if the attribute is &#39;type&#39; and the value is &#39;inference&#39;</span></div><div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;        <span class="comment">// we need to cache the entity guid as an inference</span></div><div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;        <span class="keywordflow">if</span> (armnn::profiling::LabelsAndEventClasses::TYPE_LABEL.compare(*attribute) == 0 &amp;&amp;</div><div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;            armnn::profiling::LabelsAndEventClasses::INFERENCE.compare(*value) == 0)</div><div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;        {</div><div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;            m_InferenceGuids.push_back(relationship.m_HeadGuid);</div><div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;        }</div><div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;    }</div><div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;</div><div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;    <span class="keywordflow">if</span> (entity == <span class="keyword">nullptr</span>)</div><div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;    {</div><div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;        <span class="comment">//report an error</span></div><div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;        std::stringstream ss;</div><div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;        ss &lt;&lt; <span class="stringliteral">&quot;could not find label link [&quot;</span> &lt;&lt; relationship.m_Guid &lt;&lt;</div><div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;           <span class="stringliteral">&quot;] entity [&quot;</span> &lt;&lt; relationship.m_HeadGuid &lt;&lt; <span class="stringliteral">&quot;] &quot;</span>;</div><div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;        <span class="keywordflow">if</span> (value != <span class="keyword">nullptr</span>)</div><div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;        {</div><div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;            ss &lt;&lt; <span class="stringliteral">&quot;value [&quot;</span> &lt;&lt; *value &lt;&lt; <span class="stringliteral">&quot;] &quot;</span>;</div><div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;        }</div><div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;        <span class="keywordflow">if</span> (attribute != <span class="keyword">nullptr</span>)</div><div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;        {</div><div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;            ss &lt;&lt; <span class="stringliteral">&quot;attribute [&quot;</span> &lt;&lt; *attribute &lt;&lt; <span class="stringliteral">&quot;] &quot;</span>;</div><div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;        }</div><div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;        m_Errors.push_back(arm::pipe::ProfilingException(ss.str()));</div><div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;    }</div><div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;}</div><div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;</div><div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;<span class="keywordtype">void</span> TimelineModel::HandleConnection(<span class="keyword">const</span> arm::pipe::ITimelineDecoder::Relationship&amp; relationship)</div><div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160;{</div><div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;    <a class="code" href="classarmnn_1_1profiling_1_1_entity.xhtml">Entity</a>* outputLayer = <a class="code" href="classarmnn_1_1profiling_1_1_timeline_model.xhtml#afb45017b2b2e4bf0605a5935b4c83299">FindEntity</a>(relationship.m_HeadGuid);</div><div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160;    <span class="keywordflow">if</span> (outputLayer == <span class="keyword">nullptr</span>)</div><div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160;    {</div><div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160;        std::stringstream ss;</div><div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160;        ss &lt;&lt; <span class="stringliteral">&quot;could not find output entity [&quot;</span> &lt;&lt; relationship.m_HeadGuid &lt;&lt; <span class="stringliteral">&quot;]&quot;</span>;</div><div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160;        ss &lt;&lt; <span class="stringliteral">&quot; of connection [&quot;</span> &lt;&lt; relationship.m_Guid &lt;&lt; <span class="stringliteral">&quot;]&quot;</span>;</div><div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;        m_Errors.push_back(arm::pipe::ProfilingException(ss.str()));</div><div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160;        <span class="keywordflow">return</span>;</div><div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160;    }</div><div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160;    <a class="code" href="classarmnn_1_1profiling_1_1_entity.xhtml">Entity</a>* inputLayer = <a class="code" href="classarmnn_1_1profiling_1_1_timeline_model.xhtml#afb45017b2b2e4bf0605a5935b4c83299">FindEntity</a>(relationship.m_TailGuid);</div><div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160;    <span class="keywordflow">if</span> (inputLayer == <span class="keyword">nullptr</span>)</div><div class="line"><a name="l00169"></a><span class="lineno">  169</span>&#160;    {</div><div class="line"><a name="l00170"></a><span class="lineno">  170</span>&#160;        std::stringstream ss;</div><div class="line"><a name="l00171"></a><span class="lineno">  171</span>&#160;        ss &lt;&lt; <span class="stringliteral">&quot;could not find input entity [&quot;</span> &lt;&lt; relationship.m_TailGuid &lt;&lt; <span class="stringliteral">&quot;]&quot;</span>;</div><div class="line"><a name="l00172"></a><span class="lineno">  172</span>&#160;        ss &lt;&lt; <span class="stringliteral">&quot; of connection [&quot;</span> &lt;&lt; relationship.m_Guid &lt;&lt; <span class="stringliteral">&quot;]&quot;</span>;</div><div class="line"><a name="l00173"></a><span class="lineno">  173</span>&#160;        m_Errors.push_back(arm::pipe::ProfilingException(ss.str()));</div><div class="line"><a name="l00174"></a><span class="lineno">  174</span>&#160;        <span class="keywordflow">return</span>;</div><div class="line"><a name="l00175"></a><span class="lineno">  175</span>&#160;    }</div><div class="line"><a name="l00176"></a><span class="lineno">  176</span>&#160;    <a class="code" href="classarmnn_1_1profiling_1_1_connection.xhtml">Connection</a> connection(relationship.m_Guid, outputLayer, inputLayer);</div><div class="line"><a name="l00177"></a><span class="lineno">  177</span>&#160;    outputLayer-&gt;<a class="code" href="classarmnn_1_1profiling_1_1_entity.xhtml#aedd7cbc5d000b50b9cd8d682008af93c">AddConnection</a>(connection);</div><div class="line"><a name="l00178"></a><span class="lineno">  178</span>&#160;}</div><div class="line"><a name="l00179"></a><span class="lineno">  179</span>&#160;</div><div class="line"><a name="l00180"></a><span class="lineno">  180</span>&#160;<span class="keywordtype">void</span> TimelineModel::HandleChild(<span class="keyword">const</span> arm::pipe::ITimelineDecoder::Relationship&amp; relationship)</div><div class="line"><a name="l00181"></a><span class="lineno">  181</span>&#160;{</div><div class="line"><a name="l00182"></a><span class="lineno">  182</span>&#160;    <a class="code" href="classarmnn_1_1profiling_1_1_entity.xhtml">Entity</a>* parentEntity = <a class="code" href="classarmnn_1_1profiling_1_1_timeline_model.xhtml#afb45017b2b2e4bf0605a5935b4c83299">FindEntity</a>(relationship.m_HeadGuid);</div><div class="line"><a name="l00183"></a><span class="lineno">  183</span>&#160;    <span class="keywordflow">if</span> (parentEntity == <span class="keyword">nullptr</span>)</div><div class="line"><a name="l00184"></a><span class="lineno">  184</span>&#160;    {</div><div class="line"><a name="l00185"></a><span class="lineno">  185</span>&#160;        std::stringstream ss;</div><div class="line"><a name="l00186"></a><span class="lineno">  186</span>&#160;        ss &lt;&lt; <span class="stringliteral">&quot;could not find parent entity [&quot;</span> &lt;&lt; relationship.m_HeadGuid &lt;&lt; <span class="stringliteral">&quot;]&quot;</span>;</div><div class="line"><a name="l00187"></a><span class="lineno">  187</span>&#160;        ss &lt;&lt; <span class="stringliteral">&quot; of child relationship [&quot;</span> &lt;&lt; relationship.m_Guid &lt;&lt; <span class="stringliteral">&quot;]&quot;</span>;</div><div class="line"><a name="l00188"></a><span class="lineno">  188</span>&#160;        m_Errors.push_back(arm::pipe::ProfilingException(ss.str()));</div><div class="line"><a name="l00189"></a><span class="lineno">  189</span>&#160;        <span class="keywordflow">return</span>;</div><div class="line"><a name="l00190"></a><span class="lineno">  190</span>&#160;    }</div><div class="line"><a name="l00191"></a><span class="lineno">  191</span>&#160;    <a class="code" href="classarmnn_1_1profiling_1_1_entity.xhtml">Entity</a>* childEntity = <a class="code" href="classarmnn_1_1profiling_1_1_timeline_model.xhtml#afb45017b2b2e4bf0605a5935b4c83299">FindEntity</a>(relationship.m_TailGuid);</div><div class="line"><a name="l00192"></a><span class="lineno">  192</span>&#160;    <span class="keywordflow">if</span> (childEntity == <span class="keyword">nullptr</span>)</div><div class="line"><a name="l00193"></a><span class="lineno">  193</span>&#160;    {</div><div class="line"><a name="l00194"></a><span class="lineno">  194</span>&#160;        std::stringstream ss;</div><div class="line"><a name="l00195"></a><span class="lineno">  195</span>&#160;        ss &lt;&lt; <span class="stringliteral">&quot;could not find child entity [&quot;</span> &lt;&lt; relationship.m_TailGuid &lt;&lt; <span class="stringliteral">&quot;]&quot;</span>;</div><div class="line"><a name="l00196"></a><span class="lineno">  196</span>&#160;        ss &lt;&lt; <span class="stringliteral">&quot; of child relationship [&quot;</span> &lt;&lt; relationship.m_Guid &lt;&lt; <span class="stringliteral">&quot;]&quot;</span>;</div><div class="line"><a name="l00197"></a><span class="lineno">  197</span>&#160;        m_Errors.push_back(arm::pipe::ProfilingException(ss.str()));</div><div class="line"><a name="l00198"></a><span class="lineno">  198</span>&#160;        <span class="keywordflow">return</span>;</div><div class="line"><a name="l00199"></a><span class="lineno">  199</span>&#160;    }</div><div class="line"><a name="l00200"></a><span class="lineno">  200</span>&#160;    parentEntity-&gt;<a class="code" href="classarmnn_1_1profiling_1_1_entity.xhtml#a1c24a3c042c21213c6f922632e7541ef">AddChild</a>(childEntity);</div><div class="line"><a name="l00201"></a><span class="lineno">  201</span>&#160;}</div><div class="line"><a name="l00202"></a><span class="lineno">  202</span>&#160;</div><div class="line"><a name="l00203"></a><span class="lineno">  203</span>&#160;<span class="keywordtype">void</span> TimelineModel::HandleExecutionOf(<span class="keyword">const</span> arm::pipe::ITimelineDecoder::Relationship&amp; relationship)</div><div class="line"><a name="l00204"></a><span class="lineno">  204</span>&#160;{</div><div class="line"><a name="l00205"></a><span class="lineno">  205</span>&#160;    <a class="code" href="classarmnn_1_1profiling_1_1_entity.xhtml">Entity</a>* parentEntity = <a class="code" href="classarmnn_1_1profiling_1_1_timeline_model.xhtml#afb45017b2b2e4bf0605a5935b4c83299">FindEntity</a>(relationship.m_HeadGuid);</div><div class="line"><a name="l00206"></a><span class="lineno">  206</span>&#160;    <span class="keywordflow">if</span> (parentEntity == <span class="keyword">nullptr</span>)</div><div class="line"><a name="l00207"></a><span class="lineno">  207</span>&#160;    {</div><div class="line"><a name="l00208"></a><span class="lineno">  208</span>&#160;        std::stringstream ss;</div><div class="line"><a name="l00209"></a><span class="lineno">  209</span>&#160;        ss &lt;&lt; <span class="stringliteral">&quot;could not find parent entity [&quot;</span> &lt;&lt; relationship.m_HeadGuid &lt;&lt; <span class="stringliteral">&quot;]&quot;</span>;</div><div class="line"><a name="l00210"></a><span class="lineno">  210</span>&#160;        ss &lt;&lt; <span class="stringliteral">&quot; of execution relationship [&quot;</span> &lt;&lt; relationship.m_Guid &lt;&lt; <span class="stringliteral">&quot;]&quot;</span>;</div><div class="line"><a name="l00211"></a><span class="lineno">  211</span>&#160;        m_Errors.push_back(arm::pipe::ProfilingException(ss.str()));</div><div class="line"><a name="l00212"></a><span class="lineno">  212</span>&#160;        <span class="keywordflow">return</span>;</div><div class="line"><a name="l00213"></a><span class="lineno">  213</span>&#160;    }</div><div class="line"><a name="l00214"></a><span class="lineno">  214</span>&#160;    <a class="code" href="classarmnn_1_1profiling_1_1_entity.xhtml">Entity</a>* executedEntity = <a class="code" href="classarmnn_1_1profiling_1_1_timeline_model.xhtml#afb45017b2b2e4bf0605a5935b4c83299">FindEntity</a>(relationship.m_TailGuid);</div><div class="line"><a name="l00215"></a><span class="lineno">  215</span>&#160;    <span class="keywordflow">if</span> (executedEntity == <span class="keyword">nullptr</span>)</div><div class="line"><a name="l00216"></a><span class="lineno">  216</span>&#160;    {</div><div class="line"><a name="l00217"></a><span class="lineno">  217</span>&#160;        std::stringstream ss;</div><div class="line"><a name="l00218"></a><span class="lineno">  218</span>&#160;        ss &lt;&lt; <span class="stringliteral">&quot;could not find executed entity [&quot;</span> &lt;&lt; relationship.m_TailGuid &lt;&lt; <span class="stringliteral">&quot;]&quot;</span>;</div><div class="line"><a name="l00219"></a><span class="lineno">  219</span>&#160;        ss &lt;&lt; <span class="stringliteral">&quot; of execution relationship [&quot;</span> &lt;&lt; relationship.m_Guid &lt;&lt; <span class="stringliteral">&quot;]&quot;</span>;</div><div class="line"><a name="l00220"></a><span class="lineno">  220</span>&#160;        m_Errors.push_back(arm::pipe::ProfilingException(ss.str()));</div><div class="line"><a name="l00221"></a><span class="lineno">  221</span>&#160;        <span class="keywordflow">return</span>;</div><div class="line"><a name="l00222"></a><span class="lineno">  222</span>&#160;    }</div><div class="line"><a name="l00223"></a><span class="lineno">  223</span>&#160;    parentEntity-&gt;<a class="code" href="classarmnn_1_1profiling_1_1_entity.xhtml#ad4ca11700f18cb5ebfc352ec65668986">AddExecution</a>(executedEntity);</div><div class="line"><a name="l00224"></a><span class="lineno">  224</span>&#160;}</div><div class="line"><a name="l00225"></a><span class="lineno">  225</span>&#160;</div><div class="line"><a name="l00226"></a><span class="lineno">  226</span>&#160;<span class="keywordtype">void</span> TimelineModel::HandleExecutionLink(<span class="keyword">const</span> arm::pipe::ITimelineDecoder::Relationship&amp; relationship)</div><div class="line"><a name="l00227"></a><span class="lineno">  227</span>&#160;{</div><div class="line"><a name="l00228"></a><span class="lineno">  228</span>&#160;    <span class="comment">// entityGuid,</span></div><div class="line"><a name="l00229"></a><span class="lineno">  229</span>&#160;    <a class="code" href="classarmnn_1_1profiling_1_1_entity.xhtml">Entity</a>* parentEntity = <a class="code" href="classarmnn_1_1profiling_1_1_timeline_model.xhtml#afb45017b2b2e4bf0605a5935b4c83299">FindEntity</a>(relationship.m_HeadGuid);</div><div class="line"><a name="l00230"></a><span class="lineno">  230</span>&#160;    <span class="keywordflow">if</span> (parentEntity == <span class="keyword">nullptr</span>)</div><div class="line"><a name="l00231"></a><span class="lineno">  231</span>&#160;    {</div><div class="line"><a name="l00232"></a><span class="lineno">  232</span>&#160;        std::stringstream ss;</div><div class="line"><a name="l00233"></a><span class="lineno">  233</span>&#160;        ss &lt;&lt; <span class="stringliteral">&quot;could not find entity [&quot;</span> &lt;&lt; relationship.m_HeadGuid &lt;&lt; <span class="stringliteral">&quot;]&quot;</span>;</div><div class="line"><a name="l00234"></a><span class="lineno">  234</span>&#160;        ss &lt;&lt; <span class="stringliteral">&quot; of ExecutionLink [&quot;</span> &lt;&lt; relationship.m_Guid &lt;&lt; <span class="stringliteral">&quot;]&quot;</span>;</div><div class="line"><a name="l00235"></a><span class="lineno">  235</span>&#160;        m_Errors.push_back(arm::pipe::ProfilingException(ss.str()));</div><div class="line"><a name="l00236"></a><span class="lineno">  236</span>&#160;        <span class="keywordflow">return</span>;</div><div class="line"><a name="l00237"></a><span class="lineno">  237</span>&#160;    }</div><div class="line"><a name="l00238"></a><span class="lineno">  238</span>&#160;    <span class="comment">// eventGuid,</span></div><div class="line"><a name="l00239"></a><span class="lineno">  239</span>&#160;    <a class="code" href="classarmnn_1_1profiling_1_1_event_obj.xhtml">EventObj</a>* eventObj = <a class="code" href="classarmnn_1_1profiling_1_1_timeline_model.xhtml#ac7843c8b3cb5d46a3dde2ae00c94d578">FindEvent</a>(relationship.m_TailGuid);</div><div class="line"><a name="l00240"></a><span class="lineno">  240</span>&#160;    <span class="keywordflow">if</span> (eventObj == <span class="keyword">nullptr</span>)</div><div class="line"><a name="l00241"></a><span class="lineno">  241</span>&#160;    {</div><div class="line"><a name="l00242"></a><span class="lineno">  242</span>&#160;        std::stringstream ss;</div><div class="line"><a name="l00243"></a><span class="lineno">  243</span>&#160;        ss &lt;&lt; <span class="stringliteral">&quot;could not find event [&quot;</span> &lt;&lt; relationship.m_TailGuid &lt;&lt; <span class="stringliteral">&quot;]&quot;</span>;</div><div class="line"><a name="l00244"></a><span class="lineno">  244</span>&#160;        ss &lt;&lt; <span class="stringliteral">&quot; of ExecutionLink [&quot;</span> &lt;&lt; relationship.m_Guid &lt;&lt; <span class="stringliteral">&quot;]&quot;</span>;</div><div class="line"><a name="l00245"></a><span class="lineno">  245</span>&#160;        m_Errors.push_back(arm::pipe::ProfilingException(ss.str()));</div><div class="line"><a name="l00246"></a><span class="lineno">  246</span>&#160;        <span class="keywordflow">return</span>;</div><div class="line"><a name="l00247"></a><span class="lineno">  247</span>&#160;    }</div><div class="line"><a name="l00248"></a><span class="lineno">  248</span>&#160;    <span class="comment">// eventClassGuid</span></div><div class="line"><a name="l00249"></a><span class="lineno">  249</span>&#160;    <a class="code" href="classarmnn_1_1profiling_1_1_event_class_obj.xhtml">EventClassObj</a>* eventClassObj = <a class="code" href="classarmnn_1_1profiling_1_1_timeline_model.xhtml#a6febad968ab4a270f2e1b4af83bcb08e">FindEventClass</a>(relationship.m_AttributeGuid);</div><div class="line"><a name="l00250"></a><span class="lineno">  250</span>&#160;    <span class="keywordflow">if</span> (eventClassObj == <span class="keyword">nullptr</span>)</div><div class="line"><a name="l00251"></a><span class="lineno">  251</span>&#160;    {</div><div class="line"><a name="l00252"></a><span class="lineno">  252</span>&#160;        std::stringstream ss;</div><div class="line"><a name="l00253"></a><span class="lineno">  253</span>&#160;        ss &lt;&lt; <span class="stringliteral">&quot;could not find event class [&quot;</span> &lt;&lt; relationship.m_TailGuid &lt;&lt; <span class="stringliteral">&quot;]&quot;</span>;</div><div class="line"><a name="l00254"></a><span class="lineno">  254</span>&#160;        ss &lt;&lt; <span class="stringliteral">&quot; of ExecutionLink [&quot;</span> &lt;&lt; relationship.m_Guid &lt;&lt; <span class="stringliteral">&quot;]&quot;</span>;</div><div class="line"><a name="l00255"></a><span class="lineno">  255</span>&#160;        m_Errors.push_back(arm::pipe::ProfilingException(ss.str()));</div><div class="line"><a name="l00256"></a><span class="lineno">  256</span>&#160;        <span class="keywordflow">return</span>;</div><div class="line"><a name="l00257"></a><span class="lineno">  257</span>&#160;    }</div><div class="line"><a name="l00258"></a><span class="lineno">  258</span>&#160;    eventObj-&gt;<a class="code" href="classarmnn_1_1profiling_1_1_event_obj.xhtml#a3800b3ca2970a4cc3410f4f42a1bc025">SetEventClass</a>(eventClassObj);</div><div class="line"><a name="l00259"></a><span class="lineno">  259</span>&#160;    parentEntity-&gt;<a class="code" href="classarmnn_1_1profiling_1_1_entity.xhtml#a4bdbcbcbc4903670a6acbe5c7d7230fd">AddEvent</a>(eventObj);</div><div class="line"><a name="l00260"></a><span class="lineno">  260</span>&#160;}</div><div class="line"><a name="l00261"></a><span class="lineno">  261</span>&#160;</div><div class="line"><a name="l00262"></a><span class="lineno"><a class="line" href="classarmnn_1_1profiling_1_1_timeline_model.xhtml#a90c0862735de47ab3157e93a28696a43">  262</a></span>&#160;<a class="code" href="structarmnn_1_1profiling_1_1_model_relationship.xhtml">ModelRelationship</a>* <a class="code" href="classarmnn_1_1profiling_1_1_timeline_model.xhtml#a90c0862735de47ab3157e93a28696a43">TimelineModel::FindRelationship</a>(uint64_t <span class="keywordtype">id</span>)</div><div class="line"><a name="l00263"></a><span class="lineno">  263</span>&#160;{</div><div class="line"><a name="l00264"></a><span class="lineno">  264</span>&#160;    <span class="keyword">auto</span> iter = m_Relationships.find(<span class="keywordtype">id</span>);</div><div class="line"><a name="l00265"></a><span class="lineno">  265</span>&#160;    <span class="keywordflow">if</span> (iter != m_Relationships.end())</div><div class="line"><a name="l00266"></a><span class="lineno">  266</span>&#160;    {</div><div class="line"><a name="l00267"></a><span class="lineno">  267</span>&#160;        <span class="keywordflow">return</span> &amp;(iter-&gt;second);</div><div class="line"><a name="l00268"></a><span class="lineno">  268</span>&#160;    }</div><div class="line"><a name="l00269"></a><span class="lineno">  269</span>&#160;    <span class="keywordflow">else</span></div><div class="line"><a name="l00270"></a><span class="lineno">  270</span>&#160;    {</div><div class="line"><a name="l00271"></a><span class="lineno">  271</span>&#160;        <span class="keywordflow">return</span> <span class="keyword">nullptr</span>;</div><div class="line"><a name="l00272"></a><span class="lineno">  272</span>&#160;    }</div><div class="line"><a name="l00273"></a><span class="lineno">  273</span>&#160;}</div><div class="line"><a name="l00274"></a><span class="lineno">  274</span>&#160;</div><div class="line"><a name="l00275"></a><span class="lineno"><a class="line" href="classarmnn_1_1profiling_1_1_timeline_model.xhtml#a3d29586c1c4cc83b2c453ea36aaa28e6">  275</a></span>&#160;<span class="keywordtype">bool</span> <a class="code" href="classarmnn_1_1profiling_1_1_timeline_model.xhtml#a3d29586c1c4cc83b2c453ea36aaa28e6">TimelineModel::IsInferenceGuid</a>(uint64_t guid)<span class="keyword"> const</span></div><div class="line"><a name="l00276"></a><span class="lineno">  276</span>&#160;<span class="keyword"></span>{</div><div class="line"><a name="l00277"></a><span class="lineno">  277</span>&#160;    <span class="keyword">auto</span> it = std::find(m_InferenceGuids.begin(), m_InferenceGuids.end(), guid);</div><div class="line"><a name="l00278"></a><span class="lineno">  278</span>&#160;    <span class="keywordflow">return</span> it != m_InferenceGuids.end();</div><div class="line"><a name="l00279"></a><span class="lineno">  279</span>&#160;}</div><div class="line"><a name="l00280"></a><span class="lineno">  280</span>&#160;</div><div class="line"><a name="l00281"></a><span class="lineno"><a class="line" href="classarmnn_1_1profiling_1_1_timeline_model.xhtml#abd430fb31002773ab751304a59b56a37">  281</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="classarmnn_1_1profiling_1_1_timeline_model.xhtml#abd430fb31002773ab751304a59b56a37">TimelineModel::AddEventClass</a>(<span class="keyword">const</span> arm::pipe::ITimelineDecoder::EventClass&amp; eventClass)</div><div class="line"><a name="l00282"></a><span class="lineno">  282</span>&#160;{</div><div class="line"><a name="l00283"></a><span class="lineno">  283</span>&#160;    std::string* eventClassName = <a class="code" href="classarmnn_1_1profiling_1_1_timeline_model.xhtml#a02d9fcd9023fa584e880528d1d3b10d3">FindLabel</a>(eventClass.m_NameGuid);</div><div class="line"><a name="l00284"></a><span class="lineno">  284</span>&#160;    <span class="keywordflow">if</span> (eventClassName != <span class="keyword">nullptr</span>)</div><div class="line"><a name="l00285"></a><span class="lineno">  285</span>&#160;    {</div><div class="line"><a name="l00286"></a><span class="lineno">  286</span>&#160;        <a class="code" href="classarmnn_1_1profiling_1_1_event_class_obj.xhtml">EventClassObj</a> eventClassObj(eventClass.m_Guid, *eventClassName);</div><div class="line"><a name="l00287"></a><span class="lineno">  287</span>&#160;        m_EventClasses.emplace(eventClassObj.<a class="code" href="classarmnn_1_1profiling_1_1_event_class_obj.xhtml#a1f13df7f1aaa03369c46ab37b055e8d3">GetGuid</a>(), eventClassObj);</div><div class="line"><a name="l00288"></a><span class="lineno">  288</span>&#160;    }</div><div class="line"><a name="l00289"></a><span class="lineno">  289</span>&#160;    <span class="keywordflow">else</span></div><div class="line"><a name="l00290"></a><span class="lineno">  290</span>&#160;    {</div><div class="line"><a name="l00291"></a><span class="lineno">  291</span>&#160;        std::stringstream ss;</div><div class="line"><a name="l00292"></a><span class="lineno">  292</span>&#160;        ss &lt;&lt; <span class="stringliteral">&quot;could not find name [&quot;</span> &lt;&lt; eventClass.m_NameGuid &lt;&lt; <span class="stringliteral">&quot;]&quot;</span>;</div><div class="line"><a name="l00293"></a><span class="lineno">  293</span>&#160;        ss &lt;&lt; <span class="stringliteral">&quot; of of event class  [&quot;</span> &lt;&lt; eventClass.m_Guid &lt;&lt; <span class="stringliteral">&quot;]&quot;</span>;</div><div class="line"><a name="l00294"></a><span class="lineno">  294</span>&#160;        m_Errors.push_back(arm::pipe::ProfilingException(ss.str()));</div><div class="line"><a name="l00295"></a><span class="lineno">  295</span>&#160;    }</div><div class="line"><a name="l00296"></a><span class="lineno">  296</span>&#160;}</div><div class="line"><a name="l00297"></a><span class="lineno">  297</span>&#160;</div><div class="line"><a name="l00298"></a><span class="lineno"><a class="line" href="classarmnn_1_1profiling_1_1_timeline_model.xhtml#a6febad968ab4a270f2e1b4af83bcb08e">  298</a></span>&#160;<a class="code" href="classarmnn_1_1profiling_1_1_event_class_obj.xhtml">EventClassObj</a>* <a class="code" href="classarmnn_1_1profiling_1_1_timeline_model.xhtml#a6febad968ab4a270f2e1b4af83bcb08e">TimelineModel::FindEventClass</a>(uint64_t <span class="keywordtype">id</span>)</div><div class="line"><a name="l00299"></a><span class="lineno">  299</span>&#160;{</div><div class="line"><a name="l00300"></a><span class="lineno">  300</span>&#160;    <span class="keyword">auto</span> iter = m_EventClasses.find(<span class="keywordtype">id</span>);</div><div class="line"><a name="l00301"></a><span class="lineno">  301</span>&#160;    <span class="keywordflow">if</span> (iter != m_EventClasses.end())</div><div class="line"><a name="l00302"></a><span class="lineno">  302</span>&#160;    {</div><div class="line"><a name="l00303"></a><span class="lineno">  303</span>&#160;        <span class="keywordflow">return</span> &amp;(iter-&gt;second);</div><div class="line"><a name="l00304"></a><span class="lineno">  304</span>&#160;    }</div><div class="line"><a name="l00305"></a><span class="lineno">  305</span>&#160;    <span class="keywordflow">else</span></div><div class="line"><a name="l00306"></a><span class="lineno">  306</span>&#160;    {</div><div class="line"><a name="l00307"></a><span class="lineno">  307</span>&#160;        <span class="keywordflow">return</span> <span class="keyword">nullptr</span>;</div><div class="line"><a name="l00308"></a><span class="lineno">  308</span>&#160;    }</div><div class="line"><a name="l00309"></a><span class="lineno">  309</span>&#160;}</div><div class="line"><a name="l00310"></a><span class="lineno">  310</span>&#160;</div><div class="line"><a name="l00311"></a><span class="lineno"><a class="line" href="classarmnn_1_1profiling_1_1_timeline_model.xhtml#a3191fd510f0111bd8741258c4a5c6351">  311</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="classarmnn_1_1profiling_1_1_timeline_model.xhtml#a3191fd510f0111bd8741258c4a5c6351">TimelineModel::AddEvent</a>(<span class="keyword">const</span> arm::pipe::ITimelineDecoder::Event&amp; event)</div><div class="line"><a name="l00312"></a><span class="lineno">  312</span>&#160;{</div><div class="line"><a name="l00313"></a><span class="lineno">  313</span>&#160;    <a class="code" href="classarmnn_1_1profiling_1_1_event_obj.xhtml">EventObj</a> evt(event.m_Guid, event.m_TimeStamp, event.m_ThreadId);</div><div class="line"><a name="l00314"></a><span class="lineno">  314</span>&#160;    m_Events.emplace(event.m_Guid, evt);</div><div class="line"><a name="l00315"></a><span class="lineno">  315</span>&#160;}</div><div class="line"><a name="l00316"></a><span class="lineno">  316</span>&#160;</div><div class="line"><a name="l00317"></a><span class="lineno"><a class="line" href="classarmnn_1_1profiling_1_1_timeline_model.xhtml#ac7843c8b3cb5d46a3dde2ae00c94d578">  317</a></span>&#160;<a class="code" href="classarmnn_1_1profiling_1_1_event_obj.xhtml">EventObj</a>* <a class="code" href="classarmnn_1_1profiling_1_1_timeline_model.xhtml#ac7843c8b3cb5d46a3dde2ae00c94d578">TimelineModel::FindEvent</a>(uint64_t <span class="keywordtype">id</span>)</div><div class="line"><a name="l00318"></a><span class="lineno">  318</span>&#160;{</div><div class="line"><a name="l00319"></a><span class="lineno">  319</span>&#160;    <span class="keyword">auto</span> iter = m_Events.find(<span class="keywordtype">id</span>);</div><div class="line"><a name="l00320"></a><span class="lineno">  320</span>&#160;    <span class="keywordflow">if</span> (iter != m_Events.end())</div><div class="line"><a name="l00321"></a><span class="lineno">  321</span>&#160;    {</div><div class="line"><a name="l00322"></a><span class="lineno">  322</span>&#160;        <span class="keywordflow">return</span> &amp;(iter-&gt;second);</div><div class="line"><a name="l00323"></a><span class="lineno">  323</span>&#160;    }</div><div class="line"><a name="l00324"></a><span class="lineno">  324</span>&#160;    <span class="keywordflow">else</span></div><div class="line"><a name="l00325"></a><span class="lineno">  325</span>&#160;    {</div><div class="line"><a name="l00326"></a><span class="lineno">  326</span>&#160;        <span class="keywordflow">return</span> <span class="keyword">nullptr</span>;</div><div class="line"><a name="l00327"></a><span class="lineno">  327</span>&#160;    }</div><div class="line"><a name="l00328"></a><span class="lineno">  328</span>&#160;}</div><div class="line"><a name="l00329"></a><span class="lineno">  329</span>&#160;</div><div class="line"><a name="l00330"></a><span class="lineno"><a class="line" href="namespacearmnn_1_1profiling.xhtml#a8e8f20742c192fae6c3854e324f10195">  330</a></span>&#160;std::vector&lt;std::string&gt; <a class="code" href="namespacearmnn_1_1profiling.xhtml#a8e8f20742c192fae6c3854e324f10195">GetModelDescription</a>(<span class="keyword">const</span> <a class="code" href="classarmnn_1_1profiling_1_1_timeline_model.xhtml">TimelineModel</a>&amp; model)</div><div class="line"><a name="l00331"></a><span class="lineno">  331</span>&#160;{</div><div class="line"><a name="l00332"></a><span class="lineno">  332</span>&#160;    std::vector&lt;std::string&gt; desc;</div><div class="line"><a name="l00333"></a><span class="lineno">  333</span>&#160;    <span class="keywordflow">for</span> (<span class="keyword">auto</span>&amp; entry : model.<a class="code" href="classarmnn_1_1profiling_1_1_timeline_model.xhtml#a973d9336fed9123e64fef84162a9b9c0">GetEntities</a>())</div><div class="line"><a name="l00334"></a><span class="lineno">  334</span>&#160;    {</div><div class="line"><a name="l00335"></a><span class="lineno">  335</span>&#160;        <span class="keyword">auto</span>&amp; entity = entry.second;</div><div class="line"><a name="l00336"></a><span class="lineno">  336</span>&#160;        desc.push_back(<a class="code" href="namespacearmnn_1_1profiling.xhtml#abd2235042ff2d3481ee7e61ae36a73d5">GetEntityDescription</a>(entity));</div><div class="line"><a name="l00337"></a><span class="lineno">  337</span>&#160;        <span class="keywordflow">for</span> (<span class="keyword">auto</span>&amp; connection : entity.GetConnections())</div><div class="line"><a name="l00338"></a><span class="lineno">  338</span>&#160;        {</div><div class="line"><a name="l00339"></a><span class="lineno">  339</span>&#160;            desc.push_back(<a class="code" href="namespacearmnn_1_1profiling.xhtml#a99aa45cbec5babd03bb9985f3ac24fee">GetConnectionDescription</a>(connection));</div><div class="line"><a name="l00340"></a><span class="lineno">  340</span>&#160;        }</div><div class="line"><a name="l00341"></a><span class="lineno">  341</span>&#160;        <span class="keywordflow">for</span> (<span class="keyword">auto</span> child : entity.GetChildren())</div><div class="line"><a name="l00342"></a><span class="lineno">  342</span>&#160;        {</div><div class="line"><a name="l00343"></a><span class="lineno">  343</span>&#160;            desc.push_back(<a class="code" href="namespacearmnn_1_1profiling.xhtml#a9e20472de8eb0d6ba6047fcacf2d9328">GetChildDescription</a>(child));</div><div class="line"><a name="l00344"></a><span class="lineno">  344</span>&#160;        }</div><div class="line"><a name="l00345"></a><span class="lineno">  345</span>&#160;        <span class="keywordflow">for</span> (<span class="keyword">auto</span> execution : entity.GetExecutions())</div><div class="line"><a name="l00346"></a><span class="lineno">  346</span>&#160;        {</div><div class="line"><a name="l00347"></a><span class="lineno">  347</span>&#160;            desc.push_back(<a class="code" href="namespacearmnn_1_1profiling.xhtml#a951417907ff95b56477d239ff044b868">GetExecutionDescription</a>(execution));</div><div class="line"><a name="l00348"></a><span class="lineno">  348</span>&#160;        }</div><div class="line"><a name="l00349"></a><span class="lineno">  349</span>&#160;        <span class="keywordflow">for</span> (<span class="keyword">auto</span> event : entity.GetEvents())</div><div class="line"><a name="l00350"></a><span class="lineno">  350</span>&#160;        {</div><div class="line"><a name="l00351"></a><span class="lineno">  351</span>&#160;            desc.push_back(<a class="code" href="namespacearmnn_1_1profiling.xhtml#adc90b2a2e1307470a714e672beddc156">GetEventDescription</a>(event));</div><div class="line"><a name="l00352"></a><span class="lineno">  352</span>&#160;        }</div><div class="line"><a name="l00353"></a><span class="lineno">  353</span>&#160;    }</div><div class="line"><a name="l00354"></a><span class="lineno">  354</span>&#160;    <span class="keywordflow">return</span> desc;</div><div class="line"><a name="l00355"></a><span class="lineno">  355</span>&#160;}</div><div class="line"><a name="l00356"></a><span class="lineno">  356</span>&#160;</div><div class="line"><a name="l00357"></a><span class="lineno"><a class="line" href="namespacearmnn_1_1profiling.xhtml#abd2235042ff2d3481ee7e61ae36a73d5">  357</a></span>&#160;std::string <a class="code" href="namespacearmnn_1_1profiling.xhtml#abd2235042ff2d3481ee7e61ae36a73d5">GetEntityDescription</a>(<span class="keyword">const</span> <a class="code" href="classarmnn_1_1profiling_1_1_entity.xhtml">Entity</a>&amp; entity)</div><div class="line"><a name="l00358"></a><span class="lineno">  358</span>&#160;{</div><div class="line"><a name="l00359"></a><span class="lineno">  359</span>&#160;    std::stringstream ss;</div><div class="line"><a name="l00360"></a><span class="lineno">  360</span>&#160;    ss &lt;&lt; <span class="stringliteral">&quot;Entity [&quot;</span> &lt;&lt; entity.<a class="code" href="classarmnn_1_1profiling_1_1_entity.xhtml#a1f13df7f1aaa03369c46ab37b055e8d3">GetGuid</a>() &lt;&lt; <span class="stringliteral">&quot;]&quot;</span>;</div><div class="line"><a name="l00361"></a><span class="lineno">  361</span>&#160;    <span class="keywordflow">for</span> (<span class="keyword">auto</span>&amp; attributeEntry : entity.<a class="code" href="classarmnn_1_1profiling_1_1_entity.xhtml#afbf87da618557922cc087388b794a79b">GetAttributes</a>())</div><div class="line"><a name="l00362"></a><span class="lineno">  362</span>&#160;    {</div><div class="line"><a name="l00363"></a><span class="lineno">  363</span>&#160;        <span class="keywordflow">if</span> (profiling::LabelsAndEventClasses::PROCESS_ID_LABEL == attributeEntry.second.first)</div><div class="line"><a name="l00364"></a><span class="lineno">  364</span>&#160;        {</div><div class="line"><a name="l00365"></a><span class="lineno">  365</span>&#160;            ss &lt;&lt; <span class="stringliteral">&quot; &quot;</span> &lt;&lt; attributeEntry.second.first &lt;&lt; <span class="stringliteral">&quot; = [processId]&quot;</span>;</div><div class="line"><a name="l00366"></a><span class="lineno">  366</span>&#160;        }</div><div class="line"><a name="l00367"></a><span class="lineno">  367</span>&#160;        <span class="keywordflow">else</span> {</div><div class="line"><a name="l00368"></a><span class="lineno">  368</span>&#160;            ss &lt;&lt; <span class="stringliteral">&quot; &quot;</span> &lt;&lt; attributeEntry.second.first &lt;&lt; <span class="stringliteral">&quot; = &quot;</span> &lt;&lt; attributeEntry.second.second;</div><div class="line"><a name="l00369"></a><span class="lineno">  369</span>&#160;        }</div><div class="line"><a name="l00370"></a><span class="lineno">  370</span>&#160;    }</div><div class="line"><a name="l00371"></a><span class="lineno">  371</span>&#160;    <span class="keywordflow">return</span> ss.str();</div><div class="line"><a name="l00372"></a><span class="lineno">  372</span>&#160;}</div><div class="line"><a name="l00373"></a><span class="lineno">  373</span>&#160;</div><div class="line"><a name="l00374"></a><span class="lineno"><a class="line" href="namespacearmnn_1_1profiling.xhtml#a9e20472de8eb0d6ba6047fcacf2d9328">  374</a></span>&#160;std::string <a class="code" href="namespacearmnn_1_1profiling.xhtml#a9e20472de8eb0d6ba6047fcacf2d9328">GetChildDescription</a>(<a class="code" href="classarmnn_1_1profiling_1_1_entity.xhtml">Entity</a>* entity)</div><div class="line"><a name="l00375"></a><span class="lineno">  375</span>&#160;{</div><div class="line"><a name="l00376"></a><span class="lineno">  376</span>&#160;    std::stringstream ss;</div><div class="line"><a name="l00377"></a><span class="lineno">  377</span>&#160;    ss &lt;&lt; <span class="stringliteral">&quot;   child: &quot;</span> &lt;&lt; <a class="code" href="namespacearmnn_1_1profiling.xhtml#abd2235042ff2d3481ee7e61ae36a73d5">GetEntityDescription</a>(*entity);</div><div class="line"><a name="l00378"></a><span class="lineno">  378</span>&#160;    <span class="keywordflow">return</span> ss.str();</div><div class="line"><a name="l00379"></a><span class="lineno">  379</span>&#160;}</div><div class="line"><a name="l00380"></a><span class="lineno">  380</span>&#160;</div><div class="line"><a name="l00381"></a><span class="lineno"><a class="line" href="namespacearmnn_1_1profiling.xhtml#a99aa45cbec5babd03bb9985f3ac24fee">  381</a></span>&#160;std::string <a class="code" href="namespacearmnn_1_1profiling.xhtml#a99aa45cbec5babd03bb9985f3ac24fee">GetConnectionDescription</a>(<span class="keyword">const</span> <a class="code" href="classarmnn_1_1profiling_1_1_connection.xhtml">Connection</a>&amp; connection)</div><div class="line"><a name="l00382"></a><span class="lineno">  382</span>&#160;{</div><div class="line"><a name="l00383"></a><span class="lineno">  383</span>&#160;    std::stringstream ss;</div><div class="line"><a name="l00384"></a><span class="lineno">  384</span>&#160;    ss &lt;&lt; <span class="stringliteral">&quot;   connection [&quot;</span> &lt;&lt; connection.<a class="code" href="classarmnn_1_1profiling_1_1_connection.xhtml#a1f13df7f1aaa03369c46ab37b055e8d3">GetGuid</a>() &lt;&lt; <span class="stringliteral">&quot;] from entity [&quot;</span>;</div><div class="line"><a name="l00385"></a><span class="lineno">  385</span>&#160;    ss &lt;&lt; connection.<a class="code" href="classarmnn_1_1profiling_1_1_connection.xhtml#a6701d3ffc96bafe38e18a85ba7fc4bf7">GetHead</a>()-&gt;<a class="code" href="classarmnn_1_1profiling_1_1_entity.xhtml#a1f13df7f1aaa03369c46ab37b055e8d3">GetGuid</a>() &lt;&lt; <span class="stringliteral">&quot;] to entity [&quot;</span> &lt;&lt; connection.<a class="code" href="classarmnn_1_1profiling_1_1_connection.xhtml#aed3bd92b869d1566f705d456348f6229">GetTail</a>()-&gt;<a class="code" href="classarmnn_1_1profiling_1_1_entity.xhtml#a1f13df7f1aaa03369c46ab37b055e8d3">GetGuid</a>() &lt;&lt; <span class="stringliteral">&quot;]&quot;</span>;</div><div class="line"><a name="l00386"></a><span class="lineno">  386</span>&#160;    <span class="keywordflow">return</span> ss.str();</div><div class="line"><a name="l00387"></a><span class="lineno">  387</span>&#160;}</div><div class="line"><a name="l00388"></a><span class="lineno">  388</span>&#160;</div><div class="line"><a name="l00389"></a><span class="lineno"><a class="line" href="namespacearmnn_1_1profiling.xhtml#a951417907ff95b56477d239ff044b868">  389</a></span>&#160;std::string <a class="code" href="namespacearmnn_1_1profiling.xhtml#a951417907ff95b56477d239ff044b868">GetExecutionDescription</a>(<a class="code" href="classarmnn_1_1profiling_1_1_entity.xhtml">Entity</a>* execution)</div><div class="line"><a name="l00390"></a><span class="lineno">  390</span>&#160;{</div><div class="line"><a name="l00391"></a><span class="lineno">  391</span>&#160;    std::stringstream ss;</div><div class="line"><a name="l00392"></a><span class="lineno">  392</span>&#160;    ss &lt;&lt; <span class="stringliteral">&quot;   execution: &quot;</span> &lt;&lt; <a class="code" href="namespacearmnn_1_1profiling.xhtml#abd2235042ff2d3481ee7e61ae36a73d5">GetEntityDescription</a>(*execution);</div><div class="line"><a name="l00393"></a><span class="lineno">  393</span>&#160;    <span class="keywordflow">return</span> ss.str();</div><div class="line"><a name="l00394"></a><span class="lineno">  394</span>&#160;}</div><div class="line"><a name="l00395"></a><span class="lineno">  395</span>&#160;</div><div class="line"><a name="l00396"></a><span class="lineno"><a class="line" href="namespacearmnn_1_1profiling.xhtml#adc90b2a2e1307470a714e672beddc156">  396</a></span>&#160;std::string <a class="code" href="namespacearmnn_1_1profiling.xhtml#adc90b2a2e1307470a714e672beddc156">GetEventDescription</a>(<a class="code" href="classarmnn_1_1profiling_1_1_event_obj.xhtml">EventObj</a>* event)</div><div class="line"><a name="l00397"></a><span class="lineno">  397</span>&#160;{</div><div class="line"><a name="l00398"></a><span class="lineno">  398</span>&#160;    std::stringstream ss;</div><div class="line"><a name="l00399"></a><span class="lineno">  399</span>&#160;    ss &lt;&lt; <span class="stringliteral">&quot;   event: [&quot;</span> &lt;&lt; <span class="keyword">event</span>-&gt;GetGuid() &lt;&lt; <span class="stringliteral">&quot;] class [&quot;</span> &lt;&lt; <span class="keyword">event</span>-&gt;GetEventClass() &lt;&lt; <span class="stringliteral">&quot;]&quot;</span>;</div><div class="line"><a name="l00400"></a><span class="lineno">  400</span>&#160;    <span class="keywordflow">return</span> ss.str();</div><div class="line"><a name="l00401"></a><span class="lineno">  401</span>&#160;}</div><div class="line"><a name="l00402"></a><span class="lineno">  402</span>&#160;</div><div class="line"><a name="l00403"></a><span class="lineno">  403</span>&#160;} <span class="comment">// namespace profiling</span></div><div class="line"><a name="l00404"></a><span class="lineno">  404</span>&#160;</div><div class="line"><a name="l00405"></a><span class="lineno">  405</span>&#160;} <span class="comment">// namespace armnn</span></div><div class="ttc" id="classarmnn_1_1profiling_1_1_entity_xhtml_a1f13df7f1aaa03369c46ab37b055e8d3"><div class="ttname"><a href="classarmnn_1_1profiling_1_1_entity.xhtml#a1f13df7f1aaa03369c46ab37b055e8d3">armnn::profiling::Entity::GetGuid</a></div><div class="ttdeci">uint64_t GetGuid() const</div><div class="ttdef"><b>Definition:</b> <a href="_timeline_model_8hpp_source.xhtml#l00092">TimelineModel.hpp:92</a></div></div>
<div class="ttc" id="classarmnn_1_1profiling_1_1_entity_xhtml_a4bdbcbcbc4903670a6acbe5c7d7230fd"><div class="ttname"><a href="classarmnn_1_1profiling_1_1_entity.xhtml#a4bdbcbcbc4903670a6acbe5c7d7230fd">armnn::profiling::Entity::AddEvent</a></div><div class="ttdeci">void AddEvent(EventObj *event)</div><div class="ttdef"><b>Definition:</b> <a href="_timeline_model_8hpp_source.xhtml#l00116">TimelineModel.hpp:116</a></div></div>
<div class="ttc" id="namespacearmnn_1_1profiling_xhtml_a99aa45cbec5babd03bb9985f3ac24fee"><div class="ttname"><a href="namespacearmnn_1_1profiling.xhtml#a99aa45cbec5babd03bb9985f3ac24fee">armnn::profiling::GetConnectionDescription</a></div><div class="ttdeci">std::string GetConnectionDescription(const Connection &amp;connection)</div><div class="ttdef"><b>Definition:</b> <a href="_timeline_model_8cpp_source.xhtml#l00381">TimelineModel.cpp:381</a></div></div>
<div class="ttc" id="classarmnn_1_1profiling_1_1_timeline_model_xhtml_ac7843c8b3cb5d46a3dde2ae00c94d578"><div class="ttname"><a href="classarmnn_1_1profiling_1_1_timeline_model.xhtml#ac7843c8b3cb5d46a3dde2ae00c94d578">armnn::profiling::TimelineModel::FindEvent</a></div><div class="ttdeci">EventObj * FindEvent(uint64_t id)</div><div class="ttdef"><b>Definition:</b> <a href="_timeline_model_8cpp_source.xhtml#l00317">TimelineModel.cpp:317</a></div></div>
<div class="ttc" id="classarmnn_1_1profiling_1_1_timeline_model_xhtml_a640daf6408f35fdeae6411ed2968403f"><div class="ttname"><a href="classarmnn_1_1profiling_1_1_timeline_model.xhtml#a640daf6408f35fdeae6411ed2968403f">armnn::profiling::TimelineModel::AddLabel</a></div><div class="ttdeci">void AddLabel(const arm::pipe::ITimelineDecoder::Label &amp;label)</div><div class="ttdef"><b>Definition:</b> <a href="_timeline_model_8cpp_source.xhtml#l00018">TimelineModel.cpp:18</a></div></div>
<div class="ttc" id="classarmnn_1_1profiling_1_1_entity_xhtml_afbf87da618557922cc087388b794a79b"><div class="ttname"><a href="classarmnn_1_1profiling_1_1_entity.xhtml#afbf87da618557922cc087388b794a79b">armnn::profiling::Entity::GetAttributes</a></div><div class="ttdeci">const Attributes &amp; GetAttributes() const</div><div class="ttdef"><b>Definition:</b> <a href="_timeline_model_8hpp_source.xhtml#l00123">TimelineModel.hpp:123</a></div></div>
<div class="ttc" id="classarmnn_1_1profiling_1_1_timeline_model_xhtml_a90c0862735de47ab3157e93a28696a43"><div class="ttname"><a href="classarmnn_1_1profiling_1_1_timeline_model.xhtml#a90c0862735de47ab3157e93a28696a43">armnn::profiling::TimelineModel::FindRelationship</a></div><div class="ttdeci">ModelRelationship * FindRelationship(uint64_t id)</div><div class="ttdef"><b>Definition:</b> <a href="_timeline_model_8cpp_source.xhtml#l00262">TimelineModel.cpp:262</a></div></div>
<div class="ttc" id="classarmnn_1_1profiling_1_1_timeline_model_xhtml_afb45017b2b2e4bf0605a5935b4c83299"><div class="ttname"><a href="classarmnn_1_1profiling_1_1_timeline_model.xhtml#afb45017b2b2e4bf0605a5935b4c83299">armnn::profiling::TimelineModel::FindEntity</a></div><div class="ttdeci">Entity * FindEntity(uint64_t id)</div><div class="ttdef"><b>Definition:</b> <a href="_timeline_model_8cpp_source.xhtml#l00041">TimelineModel.cpp:41</a></div></div>
<div class="ttc" id="classarmnn_1_1profiling_1_1_entity_xhtml"><div class="ttname"><a href="classarmnn_1_1profiling_1_1_entity.xhtml">armnn::profiling::Entity</a></div><div class="ttdef"><b>Definition:</b> <a href="_timeline_model_8hpp_source.xhtml#l00088">TimelineModel.hpp:88</a></div></div>
<div class="ttc" id="classarmnn_1_1profiling_1_1_timeline_model_xhtml_a02d9fcd9023fa584e880528d1d3b10d3"><div class="ttname"><a href="classarmnn_1_1profiling_1_1_timeline_model.xhtml#a02d9fcd9023fa584e880528d1d3b10d3">armnn::profiling::TimelineModel::FindLabel</a></div><div class="ttdeci">std::string * FindLabel(uint64_t guid)</div><div class="ttdef"><b>Definition:</b> <a href="_timeline_model_8cpp_source.xhtml#l00023">TimelineModel.cpp:23</a></div></div>
<div class="ttc" id="classarmnn_1_1profiling_1_1_timeline_model_xhtml_a3d29586c1c4cc83b2c453ea36aaa28e6"><div class="ttname"><a href="classarmnn_1_1profiling_1_1_timeline_model.xhtml#a3d29586c1c4cc83b2c453ea36aaa28e6">armnn::profiling::TimelineModel::IsInferenceGuid</a></div><div class="ttdeci">bool IsInferenceGuid(uint64_t guid) const</div><div class="ttdef"><b>Definition:</b> <a href="_timeline_model_8cpp_source.xhtml#l00275">TimelineModel.cpp:275</a></div></div>
<div class="ttc" id="namespacearmnn_xhtml"><div class="ttname"><a href="namespacearmnn.xhtml">armnn</a></div><div class="ttdoc">Copyright (c) 2021 ARM Limited and Contributors. </div><div class="ttdef"><b>Definition:</b> <a href="01__00__quick__start_8dox_source.xhtml#l00006">01_00_quick_start.dox:6</a></div></div>
<div class="ttc" id="classarmnn_1_1profiling_1_1_timeline_model_xhtml_a6febad968ab4a270f2e1b4af83bcb08e"><div class="ttname"><a href="classarmnn_1_1profiling_1_1_timeline_model.xhtml#a6febad968ab4a270f2e1b4af83bcb08e">armnn::profiling::TimelineModel::FindEventClass</a></div><div class="ttdeci">EventClassObj * FindEventClass(uint64_t id)</div><div class="ttdef"><b>Definition:</b> <a href="_timeline_model_8cpp_source.xhtml#l00298">TimelineModel.cpp:298</a></div></div>
<div class="ttc" id="classarmnn_1_1profiling_1_1_connection_xhtml"><div class="ttname"><a href="classarmnn_1_1profiling_1_1_connection.xhtml">armnn::profiling::Connection</a></div><div class="ttdef"><b>Definition:</b> <a href="_timeline_model_8hpp_source.xhtml#l00024">TimelineModel.hpp:24</a></div></div>
<div class="ttc" id="classarmnn_1_1profiling_1_1_timeline_model_xhtml_a973d9336fed9123e64fef84162a9b9c0"><div class="ttname"><a href="classarmnn_1_1profiling_1_1_timeline_model.xhtml#a973d9336fed9123e64fef84162a9b9c0">armnn::profiling::TimelineModel::GetEntities</a></div><div class="ttdeci">const Entities &amp; GetEntities() const</div><div class="ttdef"><b>Definition:</b> <a href="_timeline_model_8hpp_source.xhtml#l00156">TimelineModel.hpp:156</a></div></div>
<div class="ttc" id="classarmnn_1_1profiling_1_1_entity_xhtml_a1c24a3c042c21213c6f922632e7541ef"><div class="ttname"><a href="classarmnn_1_1profiling_1_1_entity.xhtml#a1c24a3c042c21213c6f922632e7541ef">armnn::profiling::Entity::AddChild</a></div><div class="ttdeci">void AddChild(Entity *child)</div><div class="ttdef"><b>Definition:</b> <a href="_timeline_model_8hpp_source.xhtml#l00093">TimelineModel.hpp:93</a></div></div>
<div class="ttc" id="classarmnn_1_1profiling_1_1_event_class_obj_xhtml"><div class="ttname"><a href="classarmnn_1_1profiling_1_1_event_class_obj.xhtml">armnn::profiling::EventClassObj</a></div><div class="ttdef"><b>Definition:</b> <a href="_timeline_model_8hpp_source.xhtml#l00052">TimelineModel.hpp:52</a></div></div>
<div class="ttc" id="structarmnn_1_1profiling_1_1_model_relationship_xhtml"><div class="ttname"><a href="structarmnn_1_1profiling_1_1_model_relationship.xhtml">armnn::profiling::ModelRelationship</a></div><div class="ttdef"><b>Definition:</b> <a href="_timeline_model_8hpp_source.xhtml#l00137">TimelineModel.hpp:137</a></div></div>
<div class="ttc" id="classarmnn_1_1profiling_1_1_timeline_model_xhtml_abd430fb31002773ab751304a59b56a37"><div class="ttname"><a href="classarmnn_1_1profiling_1_1_timeline_model.xhtml#abd430fb31002773ab751304a59b56a37">armnn::profiling::TimelineModel::AddEventClass</a></div><div class="ttdeci">void AddEventClass(const arm::pipe::ITimelineDecoder::EventClass &amp;eventClass)</div><div class="ttdef"><b>Definition:</b> <a href="_timeline_model_8cpp_source.xhtml#l00281">TimelineModel.cpp:281</a></div></div>
<div class="ttc" id="classarmnn_1_1profiling_1_1_event_obj_xhtml"><div class="ttname"><a href="classarmnn_1_1profiling_1_1_event_obj.xhtml">armnn::profiling::EventObj</a></div><div class="ttdef"><b>Definition:</b> <a href="_timeline_model_8hpp_source.xhtml#l00062">TimelineModel.hpp:62</a></div></div>
<div class="ttc" id="_timeline_model_8hpp_xhtml"><div class="ttname"><a href="_timeline_model_8hpp.xhtml">TimelineModel.hpp</a></div></div>
<div class="ttc" id="classarmnn_1_1profiling_1_1_timeline_model_xhtml_a3191fd510f0111bd8741258c4a5c6351"><div class="ttname"><a href="classarmnn_1_1profiling_1_1_timeline_model.xhtml#a3191fd510f0111bd8741258c4a5c6351">armnn::profiling::TimelineModel::AddEvent</a></div><div class="ttdeci">void AddEvent(const arm::pipe::ITimelineDecoder::Event &amp;event)</div><div class="ttdef"><b>Definition:</b> <a href="_timeline_model_8cpp_source.xhtml#l00311">TimelineModel.cpp:311</a></div></div>
<div class="ttc" id="classarmnn_1_1profiling_1_1_timeline_model_xhtml_acf92758924263e61fea775a36ae49d21"><div class="ttname"><a href="classarmnn_1_1profiling_1_1_timeline_model.xhtml#acf92758924263e61fea775a36ae49d21">armnn::profiling::TimelineModel::AddEntity</a></div><div class="ttdeci">void AddEntity(uint64_t guid)</div><div class="ttdef"><b>Definition:</b> <a href="_timeline_model_8cpp_source.xhtml#l00036">TimelineModel.cpp:36</a></div></div>
<div class="ttc" id="classarmnn_1_1profiling_1_1_entity_xhtml_aedd7cbc5d000b50b9cd8d682008af93c"><div class="ttname"><a href="classarmnn_1_1profiling_1_1_entity.xhtml#aedd7cbc5d000b50b9cd8d682008af93c">armnn::profiling::Entity::AddConnection</a></div><div class="ttdeci">void AddConnection(const Connection &amp;connection)</div><div class="ttdef"><b>Definition:</b> <a href="_timeline_model_8hpp_source.xhtml#l00105">TimelineModel.hpp:105</a></div></div>
<div class="ttc" id="classarmnn_1_1profiling_1_1_entity_xhtml_adc352aa561865b932f5c8f637ce0fdad"><div class="ttname"><a href="classarmnn_1_1profiling_1_1_entity.xhtml#adc352aa561865b932f5c8f637ce0fdad">armnn::profiling::Entity::AddAttribute</a></div><div class="ttdeci">void AddAttribute(const std::string &amp;type, const std::string &amp;value)</div><div class="ttdef"><b>Definition:</b> <a href="_timeline_model_8hpp_source.xhtml#l00100">TimelineModel.hpp:100</a></div></div>
<div class="ttc" id="classarmnn_1_1profiling_1_1_connection_xhtml_aed3bd92b869d1566f705d456348f6229"><div class="ttname"><a href="classarmnn_1_1profiling_1_1_connection.xhtml#aed3bd92b869d1566f705d456348f6229">armnn::profiling::Connection::GetTail</a></div><div class="ttdeci">const Entity * GetTail() const</div><div class="ttdef"><b>Definition:</b> <a href="_timeline_model_8hpp_source.xhtml#l00046">TimelineModel.hpp:46</a></div></div>
<div class="ttc" id="classarmnn_1_1profiling_1_1_timeline_model_xhtml"><div class="ttname"><a href="classarmnn_1_1profiling_1_1_timeline_model.xhtml">armnn::profiling::TimelineModel</a></div><div class="ttdef"><b>Definition:</b> <a href="_timeline_model_8hpp_source.xhtml#l00146">TimelineModel.hpp:146</a></div></div>
<div class="ttc" id="classarmnn_1_1profiling_1_1_event_class_obj_xhtml_a1f13df7f1aaa03369c46ab37b055e8d3"><div class="ttname"><a href="classarmnn_1_1profiling_1_1_event_class_obj.xhtml#a1f13df7f1aaa03369c46ab37b055e8d3">armnn::profiling::EventClassObj::GetGuid</a></div><div class="ttdeci">uint64_t GetGuid() const</div><div class="ttdef"><b>Definition:</b> <a href="_timeline_model_8hpp_source.xhtml#l00056">TimelineModel.hpp:56</a></div></div>
<div class="ttc" id="namespacearmnn_1_1profiling_xhtml_a951417907ff95b56477d239ff044b868"><div class="ttname"><a href="namespacearmnn_1_1profiling.xhtml#a951417907ff95b56477d239ff044b868">armnn::profiling::GetExecutionDescription</a></div><div class="ttdeci">std::string GetExecutionDescription(Entity *execution)</div><div class="ttdef"><b>Definition:</b> <a href="_timeline_model_8cpp_source.xhtml#l00389">TimelineModel.cpp:389</a></div></div>
<div class="ttc" id="namespacearmnn_1_1profiling_xhtml_a8e8f20742c192fae6c3854e324f10195"><div class="ttname"><a href="namespacearmnn_1_1profiling.xhtml#a8e8f20742c192fae6c3854e324f10195">armnn::profiling::GetModelDescription</a></div><div class="ttdeci">std::vector&lt; std::string &gt; GetModelDescription(const TimelineModel &amp;model)</div><div class="ttdef"><b>Definition:</b> <a href="_timeline_model_8cpp_source.xhtml#l00330">TimelineModel.cpp:330</a></div></div>
<div class="ttc" id="classarmnn_1_1profiling_1_1_connection_xhtml_a1f13df7f1aaa03369c46ab37b055e8d3"><div class="ttname"><a href="classarmnn_1_1profiling_1_1_connection.xhtml#a1f13df7f1aaa03369c46ab37b055e8d3">armnn::profiling::Connection::GetGuid</a></div><div class="ttdeci">uint64_t GetGuid() const</div><div class="ttdef"><b>Definition:</b> <a href="_timeline_model_8hpp_source.xhtml#l00044">TimelineModel.hpp:44</a></div></div>
<div class="ttc" id="classarmnn_1_1profiling_1_1_event_obj_xhtml_a3800b3ca2970a4cc3410f4f42a1bc025"><div class="ttname"><a href="classarmnn_1_1profiling_1_1_event_obj.xhtml#a3800b3ca2970a4cc3410f4f42a1bc025">armnn::profiling::EventObj::SetEventClass</a></div><div class="ttdeci">void SetEventClass(EventClassObj *evtClass)</div><div class="ttdef"><b>Definition:</b> <a href="_timeline_model_8hpp_source.xhtml#l00070">TimelineModel.hpp:70</a></div></div>
<div class="ttc" id="namespacearmnn_1_1profiling_xhtml_abd2235042ff2d3481ee7e61ae36a73d5"><div class="ttname"><a href="namespacearmnn_1_1profiling.xhtml#abd2235042ff2d3481ee7e61ae36a73d5">armnn::profiling::GetEntityDescription</a></div><div class="ttdeci">std::string GetEntityDescription(const Entity &amp;entity)</div><div class="ttdef"><b>Definition:</b> <a href="_timeline_model_8cpp_source.xhtml#l00357">TimelineModel.cpp:357</a></div></div>
<div class="ttc" id="namespacearmnn_1_1profiling_xhtml_adc90b2a2e1307470a714e672beddc156"><div class="ttname"><a href="namespacearmnn_1_1profiling.xhtml#adc90b2a2e1307470a714e672beddc156">armnn::profiling::GetEventDescription</a></div><div class="ttdeci">std::string GetEventDescription(EventObj *event)</div><div class="ttdef"><b>Definition:</b> <a href="_timeline_model_8cpp_source.xhtml#l00396">TimelineModel.cpp:396</a></div></div>
<div class="ttc" id="classarmnn_1_1profiling_1_1_entity_xhtml_ad4ca11700f18cb5ebfc352ec65668986"><div class="ttname"><a href="classarmnn_1_1profiling_1_1_entity.xhtml#ad4ca11700f18cb5ebfc352ec65668986">armnn::profiling::Entity::AddExecution</a></div><div class="ttdeci">void AddExecution(Entity *execution)</div><div class="ttdef"><b>Definition:</b> <a href="_timeline_model_8hpp_source.xhtml#l00109">TimelineModel.hpp:109</a></div></div>
<div class="ttc" id="classarmnn_1_1profiling_1_1_connection_xhtml_a6701d3ffc96bafe38e18a85ba7fc4bf7"><div class="ttname"><a href="classarmnn_1_1profiling_1_1_connection.xhtml#a6701d3ffc96bafe38e18a85ba7fc4bf7">armnn::profiling::Connection::GetHead</a></div><div class="ttdeci">const Entity * GetHead() const</div><div class="ttdef"><b>Definition:</b> <a href="_timeline_model_8hpp_source.xhtml#l00045">TimelineModel.hpp:45</a></div></div>
<div class="ttc" id="classarmnn_1_1profiling_1_1_timeline_model_xhtml_a322803572d603532fb433c693f1ee530"><div class="ttname"><a href="classarmnn_1_1profiling_1_1_timeline_model.xhtml#a322803572d603532fb433c693f1ee530">armnn::profiling::TimelineModel::AddRelationship</a></div><div class="ttdeci">void AddRelationship(const arm::pipe::ITimelineDecoder::Relationship &amp;relationship)</div><div class="ttdef"><b>Definition:</b> <a href="_timeline_model_8cpp_source.xhtml#l00054">TimelineModel.cpp:54</a></div></div>
<div class="ttc" id="namespacearmnn_1_1profiling_xhtml_a9e20472de8eb0d6ba6047fcacf2d9328"><div class="ttname"><a href="namespacearmnn_1_1profiling.xhtml#a9e20472de8eb0d6ba6047fcacf2d9328">armnn::profiling::GetChildDescription</a></div><div class="ttdeci">std::string GetChildDescription(Entity *entity)</div><div class="ttdef"><b>Definition:</b> <a href="_timeline_model_8cpp_source.xhtml#l00374">TimelineModel.cpp:374</a></div></div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="dir_68267d1309a1af8e8297ef4c3efbcdba.xhtml">src</a></li><li class="navelem"><a class="el" href="dir_637c692f14729569dd2eac0c18e2a54a.xhtml">profiling</a></li><li class="navelem"><a class="el" href="dir_6b1198f6e738611120ec65b09506d2f8.xhtml">test</a></li><li class="navelem"><a class="el" href="_timeline_model_8cpp.xhtml">TimelineModel.cpp</a></li>
    <li class="footer">Generated on Wed Mar 9 2022 12:01:00 for ArmNN by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.13 </li>
  </ul>
</div>
</body>
</html>
