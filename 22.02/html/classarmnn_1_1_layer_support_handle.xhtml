<!-- Copyright (c) 2020 ARM Limited. -->
<!--                                 -->
<!-- SPDX-License-Identifier: MIT    -->
<!--                                 -->
<!-- HTML header for doxygen 1.8.13-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.13"/>
<meta name="robots" content="NOINDEX, NOFOLLOW" />
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>ArmNN: LayerSupportHandle Class Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script><script type="text/javascript" src="http://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="stylesheet.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <img alt="ArmNN" src="Arm_NN_horizontal_blue.png" style="max-width: 10rem; margin-top: .5rem; margin-left 10px"/>
  <td style="padding-left: 0.5em;">
   <div id="projectname">
   &#160;<span id="projectnumber">22.02</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.13 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
$(document).ready(function(){initNavTree('classarmnn_1_1_layer_support_handle.xhtml','');});
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="summary">
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="classarmnn_1_1_layer_support_handle-members.xhtml">List of all members</a>  </div>
  <div class="headertitle">
<div class="title">LayerSupportHandle Class Reference</div>  </div>
</div><!--header-->
<div class="contents">

<p><code>#include &lt;<a class="el" href="_backend_helper_8hpp_source.xhtml">BackendHelper.hpp</a>&gt;</code></p>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:a2bc87ea547a3ef1dacbe40e09515ce22"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_layer_support_handle.xhtml#a2bc87ea547a3ef1dacbe40e09515ce22">LayerSupportHandle</a> (std::shared_ptr&lt; <a class="el" href="classarmnn_1_1_i_layer_support.xhtml">ILayerSupport</a> &gt; layerSupport)</td></tr>
<tr class="separator:a2bc87ea547a3ef1dacbe40e09515ce22"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a53fa2eaca1d868977aeb9d05f86977d7"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_layer_support_handle.xhtml#a53fa2eaca1d868977aeb9d05f86977d7">LayerSupportHandle</a> (std::shared_ptr&lt; <a class="el" href="classarmnn_1_1_i_layer_support.xhtml">ILayerSupport</a> &gt; layerSupport, const <a class="el" href="classarmnn_1_1_backend_id.xhtml">BackendId</a> &amp;backendId)</td></tr>
<tr class="separator:a53fa2eaca1d868977aeb9d05f86977d7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1ba0862636ccfea01078005c4e6ba6de"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_layer_support_handle.xhtml#a1ba0862636ccfea01078005c4e6ba6de">IsBackendRegistered</a> () const</td></tr>
<tr class="separator:a1ba0862636ccfea01078005c4e6ba6de"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a75f01d8e1dbb7a9386bbb6a7a3d41920"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_layer_support_handle.xhtml#a75f01d8e1dbb7a9386bbb6a7a3d41920">IsActivationSupported</a> (const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;input, const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;output, const <a class="el" href="structarmnn_1_1_activation_descriptor.xhtml">ActivationDescriptor</a> &amp;descriptor, <a class="el" href="classarmnn_1_1_optional.xhtml">Optional</a>&lt; std::string &amp;&gt; reasonIfUnsupported=<a class="el" href="structarmnn_1_1_empty_optional.xhtml">EmptyOptional</a>())</td></tr>
<tr class="separator:a75f01d8e1dbb7a9386bbb6a7a3d41920"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:abe0d9e04a1b5e6f2344adcd74d3b3dfe"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_layer_support_handle.xhtml#abe0d9e04a1b5e6f2344adcd74d3b3dfe">IsAdditionSupported</a> (const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;input0, const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;input1, const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;output, <a class="el" href="classarmnn_1_1_optional.xhtml">Optional</a>&lt; std::string &amp;&gt; reasonIfUnsupported=<a class="el" href="structarmnn_1_1_empty_optional.xhtml">EmptyOptional</a>())</td></tr>
<tr class="separator:abe0d9e04a1b5e6f2344adcd74d3b3dfe"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a97527514268db4c4a510f49020ca648e"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_layer_support_handle.xhtml#a97527514268db4c4a510f49020ca648e">IsArgMinMaxSupported</a> (const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;input, const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;output, const <a class="el" href="structarmnn_1_1_arg_min_max_descriptor.xhtml">ArgMinMaxDescriptor</a> &amp;descriptor, <a class="el" href="classarmnn_1_1_optional.xhtml">Optional</a>&lt; std::string &amp;&gt; reasonIfUnsupported=<a class="el" href="structarmnn_1_1_empty_optional.xhtml">EmptyOptional</a>())</td></tr>
<tr class="separator:a97527514268db4c4a510f49020ca648e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a37f9d9263c5509e75a6aebf77cfaf242"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_layer_support_handle.xhtml#a37f9d9263c5509e75a6aebf77cfaf242">IsBatchNormalizationSupported</a> (const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;input, const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;output, const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;mean, const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;var, const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;beta, const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;gamma, const <a class="el" href="structarmnn_1_1_batch_normalization_descriptor.xhtml">BatchNormalizationDescriptor</a> &amp;descriptor, <a class="el" href="classarmnn_1_1_optional.xhtml">Optional</a>&lt; std::string &amp;&gt; reasonIfUnsupported=<a class="el" href="structarmnn_1_1_empty_optional.xhtml">EmptyOptional</a>())</td></tr>
<tr class="separator:a37f9d9263c5509e75a6aebf77cfaf242"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:afd6279019c78c1cebacf24c71a7a1f9b"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_layer_support_handle.xhtml#afd6279019c78c1cebacf24c71a7a1f9b">IsBatchToSpaceNdSupported</a> (const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;input, const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;output, const <a class="el" href="structarmnn_1_1_batch_to_space_nd_descriptor.xhtml">BatchToSpaceNdDescriptor</a> &amp;descriptor, <a class="el" href="classarmnn_1_1_optional.xhtml">Optional</a>&lt; std::string &amp;&gt; reasonIfUnsupported=<a class="el" href="structarmnn_1_1_empty_optional.xhtml">EmptyOptional</a>())</td></tr>
<tr class="separator:afd6279019c78c1cebacf24c71a7a1f9b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0feadd628ca39d143be392f13e0a6b1b"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_layer_support_handle.xhtml#a0feadd628ca39d143be392f13e0a6b1b">IsCastSupported</a> (const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;input, const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;output, <a class="el" href="classarmnn_1_1_optional.xhtml">Optional</a>&lt; std::string &amp;&gt; reasonIfUnsupported=<a class="el" href="structarmnn_1_1_empty_optional.xhtml">EmptyOptional</a>())</td></tr>
<tr class="separator:a0feadd628ca39d143be392f13e0a6b1b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a894e9e9e3b008959080b0e0d2d54156e"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_layer_support_handle.xhtml#a894e9e9e3b008959080b0e0d2d54156e">IsChannelShuffleSupported</a> (const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;input, const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;output, const <a class="el" href="structarmnn_1_1_channel_shuffle_descriptor.xhtml">ChannelShuffleDescriptor</a> &amp;descriptor, <a class="el" href="classarmnn_1_1_optional.xhtml">Optional</a>&lt; std::string &amp;&gt; reasonIfUnsupported=<a class="el" href="structarmnn_1_1_empty_optional.xhtml">EmptyOptional</a>())</td></tr>
<tr class="separator:a894e9e9e3b008959080b0e0d2d54156e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a413082dc2ac940ec31793ef15cb733bf"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_layer_support_handle.xhtml#a413082dc2ac940ec31793ef15cb733bf">IsComparisonSupported</a> (const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;input0, const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;input1, const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;output, const <a class="el" href="structarmnn_1_1_comparison_descriptor.xhtml">ComparisonDescriptor</a> &amp;descriptor, <a class="el" href="classarmnn_1_1_optional.xhtml">Optional</a>&lt; std::string &amp;&gt; reasonIfUnsupported=<a class="el" href="structarmnn_1_1_empty_optional.xhtml">EmptyOptional</a>())</td></tr>
<tr class="separator:a413082dc2ac940ec31793ef15cb733bf"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a02bd9a06e7d87799e42e68c67e0cb95c"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_layer_support_handle.xhtml#a02bd9a06e7d87799e42e68c67e0cb95c">IsConcatSupported</a> (const std::vector&lt; const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> *&gt; inputs, const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;output, const <a class="el" href="structarmnn_1_1_origins_descriptor.xhtml">OriginsDescriptor</a> &amp;descriptor, <a class="el" href="classarmnn_1_1_optional.xhtml">Optional</a>&lt; std::string &amp;&gt; reasonIfUnsupported=<a class="el" href="structarmnn_1_1_empty_optional.xhtml">EmptyOptional</a>())</td></tr>
<tr class="separator:a02bd9a06e7d87799e42e68c67e0cb95c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a45378a497174e038f360f380a481e475"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_layer_support_handle.xhtml#a45378a497174e038f360f380a481e475">IsConstantSupported</a> (const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;output, <a class="el" href="classarmnn_1_1_optional.xhtml">Optional</a>&lt; std::string &amp;&gt; reasonIfUnsupported=<a class="el" href="structarmnn_1_1_empty_optional.xhtml">EmptyOptional</a>())</td></tr>
<tr class="separator:a45378a497174e038f360f380a481e475"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6647f0061e4574c429b2492f32b8e307"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_layer_support_handle.xhtml#a6647f0061e4574c429b2492f32b8e307">IsConvertBf16ToFp32Supported</a> (const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;input, const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;output, <a class="el" href="classarmnn_1_1_optional.xhtml">Optional</a>&lt; std::string &amp;&gt; reasonIfUnsupported=<a class="el" href="structarmnn_1_1_empty_optional.xhtml">EmptyOptional</a>())</td></tr>
<tr class="separator:a6647f0061e4574c429b2492f32b8e307"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5c54d70bd6aec5469b79a91bf64c793b"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_layer_support_handle.xhtml#a5c54d70bd6aec5469b79a91bf64c793b">IsConvertFp32ToBf16Supported</a> (const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;input, const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;output, <a class="el" href="classarmnn_1_1_optional.xhtml">Optional</a>&lt; std::string &amp;&gt; reasonIfUnsupported=<a class="el" href="structarmnn_1_1_empty_optional.xhtml">EmptyOptional</a>())</td></tr>
<tr class="separator:a5c54d70bd6aec5469b79a91bf64c793b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae81870a573fcb46b73cf13591307c4ec"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_layer_support_handle.xhtml#ae81870a573fcb46b73cf13591307c4ec">IsConvertFp16ToFp32Supported</a> (const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;input, const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;output, <a class="el" href="classarmnn_1_1_optional.xhtml">Optional</a>&lt; std::string &amp;&gt; reasonIfUnsupported=<a class="el" href="structarmnn_1_1_empty_optional.xhtml">EmptyOptional</a>())</td></tr>
<tr class="separator:ae81870a573fcb46b73cf13591307c4ec"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1a9ffd82ed12f3d249c48ba9ebd24558"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_layer_support_handle.xhtml#a1a9ffd82ed12f3d249c48ba9ebd24558">IsConvertFp32ToFp16Supported</a> (const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;input, const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;output, <a class="el" href="classarmnn_1_1_optional.xhtml">Optional</a>&lt; std::string &amp;&gt; reasonIfUnsupported=<a class="el" href="structarmnn_1_1_empty_optional.xhtml">EmptyOptional</a>())</td></tr>
<tr class="separator:a1a9ffd82ed12f3d249c48ba9ebd24558"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:abd99d21d1a25806cbad2ad9d88da5feb"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_layer_support_handle.xhtml#abd99d21d1a25806cbad2ad9d88da5feb">IsConvolution2dSupported</a> (const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;input, const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;output, const <a class="el" href="structarmnn_1_1_convolution2d_descriptor.xhtml">Convolution2dDescriptor</a> &amp;descriptor, const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;weights, const <a class="el" href="classarmnn_1_1_optional.xhtml">Optional</a>&lt; <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &gt; &amp;biases, <a class="el" href="classarmnn_1_1_optional.xhtml">Optional</a>&lt; std::string &amp;&gt; reasonIfUnsupported=<a class="el" href="structarmnn_1_1_empty_optional.xhtml">EmptyOptional</a>())</td></tr>
<tr class="separator:abd99d21d1a25806cbad2ad9d88da5feb"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9cf88faa84096a14936640e54b090f84"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_layer_support_handle.xhtml#a9cf88faa84096a14936640e54b090f84">IsConvolution3dSupported</a> (const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;input, const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;output, const <a class="el" href="structarmnn_1_1_convolution3d_descriptor.xhtml">Convolution3dDescriptor</a> &amp;descriptor, const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;weights, const <a class="el" href="classarmnn_1_1_optional.xhtml">Optional</a>&lt; <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &gt; &amp;biases, <a class="el" href="classarmnn_1_1_optional.xhtml">Optional</a>&lt; std::string &amp;&gt; reasonIfUnsupported=<a class="el" href="structarmnn_1_1_empty_optional.xhtml">EmptyOptional</a>())</td></tr>
<tr class="separator:a9cf88faa84096a14936640e54b090f84"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0b52e6ce3d1e93e05f90d960cab0078f"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_layer_support_handle.xhtml#a0b52e6ce3d1e93e05f90d960cab0078f">IsDebugSupported</a> (const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;input, const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;output, <a class="el" href="classarmnn_1_1_optional.xhtml">Optional</a>&lt; std::string &amp;&gt; reasonIfUnsupported=<a class="el" href="structarmnn_1_1_empty_optional.xhtml">EmptyOptional</a>())</td></tr>
<tr class="separator:a0b52e6ce3d1e93e05f90d960cab0078f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:adc976b556bb527809f0ea9d8fec9845e"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_layer_support_handle.xhtml#adc976b556bb527809f0ea9d8fec9845e">IsDepthToSpaceSupported</a> (const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;input, const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;output, const <a class="el" href="namespacearmnn.xhtml#a3647f60510bc8ddaced01c51b0ee8714">DepthToSpaceDescriptor</a> &amp;descriptor, <a class="el" href="classarmnn_1_1_optional.xhtml">Optional</a>&lt; std::string &amp;&gt; reasonIfUnsupported=<a class="el" href="structarmnn_1_1_empty_optional.xhtml">EmptyOptional</a>())</td></tr>
<tr class="separator:adc976b556bb527809f0ea9d8fec9845e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a06519f6650222164f2f382c61b96fc15"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_layer_support_handle.xhtml#a06519f6650222164f2f382c61b96fc15">IsDepthwiseConvolutionSupported</a> (const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;input, const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;output, const <a class="el" href="structarmnn_1_1_depthwise_convolution2d_descriptor.xhtml">DepthwiseConvolution2dDescriptor</a> &amp;descriptor, const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;weights, const <a class="el" href="classarmnn_1_1_optional.xhtml">Optional</a>&lt; <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &gt; &amp;biases, <a class="el" href="classarmnn_1_1_optional.xhtml">Optional</a>&lt; std::string &amp;&gt; reasonIfUnsupported=<a class="el" href="structarmnn_1_1_empty_optional.xhtml">EmptyOptional</a>())</td></tr>
<tr class="separator:a06519f6650222164f2f382c61b96fc15"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:acf38f18a6c7c7658b560e1ba331b4bbb"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_layer_support_handle.xhtml#acf38f18a6c7c7658b560e1ba331b4bbb">IsDequantizeSupported</a> (const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;input, const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;output, <a class="el" href="classarmnn_1_1_optional.xhtml">Optional</a>&lt; std::string &amp;&gt; reasonIfUnsupported=<a class="el" href="structarmnn_1_1_empty_optional.xhtml">EmptyOptional</a>())</td></tr>
<tr class="separator:acf38f18a6c7c7658b560e1ba331b4bbb"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a571012cfd098c2866003b644729b3ec6"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_layer_support_handle.xhtml#a571012cfd098c2866003b644729b3ec6">IsDetectionPostProcessSupported</a> (const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;boxEncodings, const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;scores, const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;anchors, const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;detectionBoxes, const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;detectionClasses, const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;detectionScores, const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;numDetections, const <a class="el" href="structarmnn_1_1_detection_post_process_descriptor.xhtml">DetectionPostProcessDescriptor</a> &amp;descriptor, <a class="el" href="classarmnn_1_1_optional.xhtml">Optional</a>&lt; std::string &amp;&gt; reasonIfUnsupported=<a class="el" href="structarmnn_1_1_empty_optional.xhtml">EmptyOptional</a>())</td></tr>
<tr class="separator:a571012cfd098c2866003b644729b3ec6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3f44c42301c6aacea1de7c1ec457394d"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_layer_support_handle.xhtml#a3f44c42301c6aacea1de7c1ec457394d">IsDilatedDepthwiseConvolutionSupported</a> (const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;input, const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;output, const <a class="el" href="structarmnn_1_1_depthwise_convolution2d_descriptor.xhtml">DepthwiseConvolution2dDescriptor</a> &amp;descriptor, const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;weights, const <a class="el" href="classarmnn_1_1_optional.xhtml">Optional</a>&lt; <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &gt; &amp;biases, <a class="el" href="classarmnn_1_1_optional.xhtml">Optional</a>&lt; std::string &amp;&gt; reasonIfUnsupported=<a class="el" href="structarmnn_1_1_empty_optional.xhtml">EmptyOptional</a>())</td></tr>
<tr class="separator:a3f44c42301c6aacea1de7c1ec457394d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a26846c9dc8e65a30fbdfca7e2d80fd7b"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_layer_support_handle.xhtml#a26846c9dc8e65a30fbdfca7e2d80fd7b">IsDivisionSupported</a> (const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;input0, const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;input1, const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;output, <a class="el" href="classarmnn_1_1_optional.xhtml">Optional</a>&lt; std::string &amp;&gt; reasonIfUnsupported=<a class="el" href="structarmnn_1_1_empty_optional.xhtml">EmptyOptional</a>())</td></tr>
<tr class="separator:a26846c9dc8e65a30fbdfca7e2d80fd7b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a514a023732c3440542f92bfbd4e4352a"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_layer_support_handle.xhtml#a514a023732c3440542f92bfbd4e4352a">IsElementwiseUnarySupported</a> (const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;input, const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;output, const <a class="el" href="structarmnn_1_1_elementwise_unary_descriptor.xhtml">ElementwiseUnaryDescriptor</a> &amp;descriptor, <a class="el" href="classarmnn_1_1_optional.xhtml">Optional</a>&lt; std::string &amp;&gt; reasonIfUnsupported=<a class="el" href="structarmnn_1_1_empty_optional.xhtml">EmptyOptional</a>())</td></tr>
<tr class="separator:a514a023732c3440542f92bfbd4e4352a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a178bff959f365309313508686b17a256"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_layer_support_handle.xhtml#a178bff959f365309313508686b17a256">IsFakeQuantizationSupported</a> (const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;input, const <a class="el" href="structarmnn_1_1_fake_quantization_descriptor.xhtml">FakeQuantizationDescriptor</a> &amp;descriptor, <a class="el" href="classarmnn_1_1_optional.xhtml">Optional</a>&lt; std::string &amp;&gt; reasonIfUnsupported=<a class="el" href="structarmnn_1_1_empty_optional.xhtml">EmptyOptional</a>())</td></tr>
<tr class="separator:a178bff959f365309313508686b17a256"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8328387b617cf76c71bc18661a71b037"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_layer_support_handle.xhtml#a8328387b617cf76c71bc18661a71b037">IsFillSupported</a> (const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;input, const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;output, const <a class="el" href="structarmnn_1_1_fill_descriptor.xhtml">FillDescriptor</a> &amp;descriptor, <a class="el" href="classarmnn_1_1_optional.xhtml">Optional</a>&lt; std::string &amp;&gt; reasonIfUnsupported=<a class="el" href="structarmnn_1_1_empty_optional.xhtml">EmptyOptional</a>())</td></tr>
<tr class="separator:a8328387b617cf76c71bc18661a71b037"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae5c5762e3c571a5553941509a3367efe"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_layer_support_handle.xhtml#ae5c5762e3c571a5553941509a3367efe">IsFloorSupported</a> (const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;input, const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;output, <a class="el" href="classarmnn_1_1_optional.xhtml">Optional</a>&lt; std::string &amp;&gt; reasonIfUnsupported=<a class="el" href="structarmnn_1_1_empty_optional.xhtml">EmptyOptional</a>())</td></tr>
<tr class="separator:ae5c5762e3c571a5553941509a3367efe"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4e7e84ee718a87059ff71d0e803072e4"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_layer_support_handle.xhtml#a4e7e84ee718a87059ff71d0e803072e4">IsFullyConnectedSupported</a> (const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;input, const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;output, const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;weights, const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;biases, const <a class="el" href="structarmnn_1_1_fully_connected_descriptor.xhtml">FullyConnectedDescriptor</a> &amp;descriptor, <a class="el" href="classarmnn_1_1_optional.xhtml">Optional</a>&lt; std::string &amp;&gt; reasonIfUnsupported=<a class="el" href="structarmnn_1_1_empty_optional.xhtml">EmptyOptional</a>())</td></tr>
<tr class="separator:a4e7e84ee718a87059ff71d0e803072e4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8e6274b23fb9a773e42fc04ebc501edc"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_layer_support_handle.xhtml#a8e6274b23fb9a773e42fc04ebc501edc">IsGatherSupported</a> (const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;input0, const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;input1, const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;output, const <a class="el" href="structarmnn_1_1_gather_descriptor.xhtml">GatherDescriptor</a> &amp;descriptor, <a class="el" href="classarmnn_1_1_optional.xhtml">Optional</a>&lt; std::string &amp;&gt; reasonIfUnsupported=<a class="el" href="structarmnn_1_1_empty_optional.xhtml">EmptyOptional</a>())</td></tr>
<tr class="separator:a8e6274b23fb9a773e42fc04ebc501edc"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aae2be97dbd7ad6847949ad0e193ca17f"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_layer_support_handle.xhtml#aae2be97dbd7ad6847949ad0e193ca17f">IsInputSupported</a> (const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;input, <a class="el" href="classarmnn_1_1_optional.xhtml">Optional</a>&lt; std::string &amp;&gt; reasonIfUnsupported=<a class="el" href="structarmnn_1_1_empty_optional.xhtml">EmptyOptional</a>())</td></tr>
<tr class="separator:aae2be97dbd7ad6847949ad0e193ca17f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a600fd20ad10051fec52f2f6d80f0e456"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_layer_support_handle.xhtml#a600fd20ad10051fec52f2f6d80f0e456">IsInstanceNormalizationSupported</a> (const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;input, const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;output, const <a class="el" href="structarmnn_1_1_instance_normalization_descriptor.xhtml">InstanceNormalizationDescriptor</a> &amp;descriptor, <a class="el" href="classarmnn_1_1_optional.xhtml">Optional</a>&lt; std::string &amp;&gt; reasonIfUnsupported=<a class="el" href="structarmnn_1_1_empty_optional.xhtml">EmptyOptional</a>())</td></tr>
<tr class="separator:a600fd20ad10051fec52f2f6d80f0e456"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa794c8d3acce8b0428ccca43ea010cef"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_layer_support_handle.xhtml#aa794c8d3acce8b0428ccca43ea010cef">IsL2NormalizationSupported</a> (const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;input, const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;output, const <a class="el" href="structarmnn_1_1_l2_normalization_descriptor.xhtml">L2NormalizationDescriptor</a> &amp;descriptor, <a class="el" href="classarmnn_1_1_optional.xhtml">Optional</a>&lt; std::string &amp;&gt; reasonIfUnsupported=<a class="el" href="structarmnn_1_1_empty_optional.xhtml">EmptyOptional</a>())</td></tr>
<tr class="separator:aa794c8d3acce8b0428ccca43ea010cef"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0dc7c3cc5ba1b1c2e09630eea6f3e6ad"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_layer_support_handle.xhtml#a0dc7c3cc5ba1b1c2e09630eea6f3e6ad">IsLogicalBinarySupported</a> (const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;input0, const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;input1, const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;output, const <a class="el" href="structarmnn_1_1_logical_binary_descriptor.xhtml">LogicalBinaryDescriptor</a> &amp;descriptor, <a class="el" href="classarmnn_1_1_optional.xhtml">Optional</a>&lt; std::string &amp;&gt; reasonIfUnsupported=<a class="el" href="structarmnn_1_1_empty_optional.xhtml">EmptyOptional</a>())</td></tr>
<tr class="separator:a0dc7c3cc5ba1b1c2e09630eea6f3e6ad"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7626486dd961efa5d3a59aa5a57d3cda"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_layer_support_handle.xhtml#a7626486dd961efa5d3a59aa5a57d3cda">IsLogicalUnarySupported</a> (const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;input, const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;output, const <a class="el" href="structarmnn_1_1_elementwise_unary_descriptor.xhtml">ElementwiseUnaryDescriptor</a> &amp;descriptor, <a class="el" href="classarmnn_1_1_optional.xhtml">Optional</a>&lt; std::string &amp;&gt; reasonIfUnsupported=<a class="el" href="structarmnn_1_1_empty_optional.xhtml">EmptyOptional</a>())</td></tr>
<tr class="separator:a7626486dd961efa5d3a59aa5a57d3cda"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae0c5654d5791afa7ae3b0e9d08b1cf11"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_layer_support_handle.xhtml#ae0c5654d5791afa7ae3b0e9d08b1cf11">IsLogSoftmaxSupported</a> (const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;input, const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;output, const <a class="el" href="namespacearmnn.xhtml#ac14705405cbcdd580df613de6766fe65">LogSoftmaxDescriptor</a> &amp;descriptor, <a class="el" href="classarmnn_1_1_optional.xhtml">Optional</a>&lt; std::string &amp;&gt; reasonIfUnsupported=<a class="el" href="structarmnn_1_1_empty_optional.xhtml">EmptyOptional</a>())</td></tr>
<tr class="separator:ae0c5654d5791afa7ae3b0e9d08b1cf11"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5777f9daef547c3390a61a90218950f0"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_layer_support_handle.xhtml#a5777f9daef547c3390a61a90218950f0">IsLstmSupported</a> (const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;input, const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;outputStateIn, const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;cellStateIn, const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;scratchBuffer, const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;outputStateOut, const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;cellStateOut, const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;output, const <a class="el" href="structarmnn_1_1_lstm_descriptor.xhtml">LstmDescriptor</a> &amp;descriptor, const <a class="el" href="structarmnn_1_1_lstm_input_params_info.xhtml">LstmInputParamsInfo</a> &amp;paramsInfo, <a class="el" href="classarmnn_1_1_optional.xhtml">Optional</a>&lt; std::string &amp;&gt; reasonIfUnsupported=<a class="el" href="structarmnn_1_1_empty_optional.xhtml">EmptyOptional</a>())</td></tr>
<tr class="separator:a5777f9daef547c3390a61a90218950f0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0963ad50672ab5f883568b1cdde31de0"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_layer_support_handle.xhtml#a0963ad50672ab5f883568b1cdde31de0">IsMaximumSupported</a> (const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;input0, const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;input1, const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;output, <a class="el" href="classarmnn_1_1_optional.xhtml">Optional</a>&lt; std::string &amp;&gt; reasonIfUnsupported=<a class="el" href="structarmnn_1_1_empty_optional.xhtml">EmptyOptional</a>())</td></tr>
<tr class="separator:a0963ad50672ab5f883568b1cdde31de0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3fe3fbc49b88d59f4cd57b55ada2ceb8"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_layer_support_handle.xhtml#a3fe3fbc49b88d59f4cd57b55ada2ceb8">IsMeanSupported</a> (const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;input, const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;output, const <a class="el" href="structarmnn_1_1_mean_descriptor.xhtml">MeanDescriptor</a> &amp;descriptor, <a class="el" href="classarmnn_1_1_optional.xhtml">Optional</a>&lt; std::string &amp;&gt; reasonIfUnsupported=<a class="el" href="structarmnn_1_1_empty_optional.xhtml">EmptyOptional</a>())</td></tr>
<tr class="separator:a3fe3fbc49b88d59f4cd57b55ada2ceb8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a278c4eda4ee20810d1f38b9341b9304f"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_layer_support_handle.xhtml#a278c4eda4ee20810d1f38b9341b9304f">IsMemCopySupported</a> (const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;input, const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;output, <a class="el" href="classarmnn_1_1_optional.xhtml">Optional</a>&lt; std::string &amp;&gt; reasonIfUnsupported=<a class="el" href="structarmnn_1_1_empty_optional.xhtml">EmptyOptional</a>())</td></tr>
<tr class="separator:a278c4eda4ee20810d1f38b9341b9304f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3cd3b7667091df2efa67c398c155a9a2"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_layer_support_handle.xhtml#a3cd3b7667091df2efa67c398c155a9a2">IsMemImportSupported</a> (const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;input, const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;output, <a class="el" href="classarmnn_1_1_optional.xhtml">Optional</a>&lt; std::string &amp;&gt; reasonIfUnsupported=<a class="el" href="structarmnn_1_1_empty_optional.xhtml">EmptyOptional</a>())</td></tr>
<tr class="separator:a3cd3b7667091df2efa67c398c155a9a2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a776512d6109f9458f78844ae0bcf3e72"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_layer_support_handle.xhtml#a776512d6109f9458f78844ae0bcf3e72">IsMergeSupported</a> (const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;input0, const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;input1, const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;output, <a class="el" href="classarmnn_1_1_optional.xhtml">Optional</a>&lt; std::string &amp;&gt; reasonIfUnsupported=<a class="el" href="structarmnn_1_1_empty_optional.xhtml">EmptyOptional</a>())</td></tr>
<tr class="separator:a776512d6109f9458f78844ae0bcf3e72"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0ab9aec3ae42288e3020207d1e961661"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_layer_support_handle.xhtml#a0ab9aec3ae42288e3020207d1e961661">IsMinimumSupported</a> (const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;input0, const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;input1, const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;output, <a class="el" href="classarmnn_1_1_optional.xhtml">Optional</a>&lt; std::string &amp;&gt; reasonIfUnsupported=<a class="el" href="structarmnn_1_1_empty_optional.xhtml">EmptyOptional</a>())</td></tr>
<tr class="separator:a0ab9aec3ae42288e3020207d1e961661"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8176ea491b94f887e088d9bbf92489ae"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_layer_support_handle.xhtml#a8176ea491b94f887e088d9bbf92489ae">IsMultiplicationSupported</a> (const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;input0, const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;input1, const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;output, <a class="el" href="classarmnn_1_1_optional.xhtml">Optional</a>&lt; std::string &amp;&gt; reasonIfUnsupported=<a class="el" href="structarmnn_1_1_empty_optional.xhtml">EmptyOptional</a>())</td></tr>
<tr class="separator:a8176ea491b94f887e088d9bbf92489ae"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6980df6695cb00d4a2478ebde2a35345"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_layer_support_handle.xhtml#a6980df6695cb00d4a2478ebde2a35345">IsNormalizationSupported</a> (const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;input, const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;output, const <a class="el" href="structarmnn_1_1_normalization_descriptor.xhtml">NormalizationDescriptor</a> &amp;descriptor, <a class="el" href="classarmnn_1_1_optional.xhtml">Optional</a>&lt; std::string &amp;&gt; reasonIfUnsupported=<a class="el" href="structarmnn_1_1_empty_optional.xhtml">EmptyOptional</a>())</td></tr>
<tr class="separator:a6980df6695cb00d4a2478ebde2a35345"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6d36cfb27f84220879e78efaacec5ed3"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_layer_support_handle.xhtml#a6d36cfb27f84220879e78efaacec5ed3">IsOutputSupported</a> (const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;output, <a class="el" href="classarmnn_1_1_optional.xhtml">Optional</a>&lt; std::string &amp;&gt; reasonIfUnsupported=<a class="el" href="structarmnn_1_1_empty_optional.xhtml">EmptyOptional</a>())</td></tr>
<tr class="separator:a6d36cfb27f84220879e78efaacec5ed3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:abdb247c7edc76f8d61179ecf082a01de"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_layer_support_handle.xhtml#abdb247c7edc76f8d61179ecf082a01de">IsPadSupported</a> (const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;input, const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;output, const <a class="el" href="structarmnn_1_1_pad_descriptor.xhtml">PadDescriptor</a> &amp;descriptor, <a class="el" href="classarmnn_1_1_optional.xhtml">Optional</a>&lt; std::string &amp;&gt; reasonIfUnsupported=<a class="el" href="structarmnn_1_1_empty_optional.xhtml">EmptyOptional</a>())</td></tr>
<tr class="separator:abdb247c7edc76f8d61179ecf082a01de"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3f6316e3e083fee8e5cb356a530e775f"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_layer_support_handle.xhtml#a3f6316e3e083fee8e5cb356a530e775f">IsPermuteSupported</a> (const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;input, const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;output, const <a class="el" href="structarmnn_1_1_permute_descriptor.xhtml">PermuteDescriptor</a> &amp;descriptor, <a class="el" href="classarmnn_1_1_optional.xhtml">Optional</a>&lt; std::string &amp;&gt; reasonIfUnsupported=<a class="el" href="structarmnn_1_1_empty_optional.xhtml">EmptyOptional</a>())</td></tr>
<tr class="separator:a3f6316e3e083fee8e5cb356a530e775f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aec217515cd3dfb6d75562eccead88246"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_layer_support_handle.xhtml#aec217515cd3dfb6d75562eccead88246">IsPooling2dSupported</a> (const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;input, const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;output, const <a class="el" href="structarmnn_1_1_pooling2d_descriptor.xhtml">Pooling2dDescriptor</a> &amp;descriptor, <a class="el" href="classarmnn_1_1_optional.xhtml">Optional</a>&lt; std::string &amp;&gt; reasonIfUnsupported=<a class="el" href="structarmnn_1_1_empty_optional.xhtml">EmptyOptional</a>())</td></tr>
<tr class="separator:aec217515cd3dfb6d75562eccead88246"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ada2164a21874acb3647cc9224b31a80a"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_layer_support_handle.xhtml#ada2164a21874acb3647cc9224b31a80a">IsPooling3dSupported</a> (const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;input, const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;output, const <a class="el" href="structarmnn_1_1_pooling3d_descriptor.xhtml">Pooling3dDescriptor</a> &amp;descriptor, <a class="el" href="classarmnn_1_1_optional.xhtml">Optional</a>&lt; std::string &amp;&gt; reasonIfUnsupported=<a class="el" href="structarmnn_1_1_empty_optional.xhtml">EmptyOptional</a>())</td></tr>
<tr class="separator:ada2164a21874acb3647cc9224b31a80a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a41c5f5cc4e157499a13862125806802d"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_layer_support_handle.xhtml#a41c5f5cc4e157499a13862125806802d">IsPreCompiledSupported</a> (const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;input, const <a class="el" href="structarmnn_1_1_pre_compiled_descriptor.xhtml">PreCompiledDescriptor</a> &amp;descriptor, <a class="el" href="classarmnn_1_1_optional.xhtml">Optional</a>&lt; std::string &amp;&gt; reasonIfUnsupported=<a class="el" href="structarmnn_1_1_empty_optional.xhtml">EmptyOptional</a>())</td></tr>
<tr class="separator:a41c5f5cc4e157499a13862125806802d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac935a4773196263a3dbbcb936f06b763"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_layer_support_handle.xhtml#ac935a4773196263a3dbbcb936f06b763">IsPreluSupported</a> (const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;input, const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;alpha, const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;output, <a class="el" href="classarmnn_1_1_optional.xhtml">Optional</a>&lt; std::string &amp;&gt; reasonIfUnsupported=<a class="el" href="structarmnn_1_1_empty_optional.xhtml">EmptyOptional</a>())</td></tr>
<tr class="separator:ac935a4773196263a3dbbcb936f06b763"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae6eccff32da02f489e295908ebb2651a"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_layer_support_handle.xhtml#ae6eccff32da02f489e295908ebb2651a">IsQuantizeSupported</a> (const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;input, const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;output, <a class="el" href="classarmnn_1_1_optional.xhtml">Optional</a>&lt; std::string &amp;&gt; reasonIfUnsupported=<a class="el" href="structarmnn_1_1_empty_optional.xhtml">EmptyOptional</a>())</td></tr>
<tr class="separator:ae6eccff32da02f489e295908ebb2651a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:adc716767c268552145348f1247b47006"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_layer_support_handle.xhtml#adc716767c268552145348f1247b47006">IsQLstmSupported</a> (const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;input, const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;previousOutputIn, const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;previousCellStateIn, const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;outputStateOut, const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;cellStateOut, const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;output, const <a class="el" href="structarmnn_1_1_q_lstm_descriptor.xhtml">QLstmDescriptor</a> &amp;descriptor, const <a class="el" href="structarmnn_1_1_lstm_input_params_info.xhtml">LstmInputParamsInfo</a> &amp;paramsInfo, <a class="el" href="classarmnn_1_1_optional.xhtml">Optional</a>&lt; std::string &amp;&gt; reasonIfUnsupported=<a class="el" href="structarmnn_1_1_empty_optional.xhtml">EmptyOptional</a>())</td></tr>
<tr class="separator:adc716767c268552145348f1247b47006"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a169d56334714f8838d6483ac5becfa78"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_layer_support_handle.xhtml#a169d56334714f8838d6483ac5becfa78">IsQuantizedLstmSupported</a> (const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;input, const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;previousCellStateIn, const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;previousOutputIn, const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;cellStateOut, const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;output, const <a class="el" href="structarmnn_1_1_quantized_lstm_input_params_info.xhtml">QuantizedLstmInputParamsInfo</a> &amp;paramsInfo, <a class="el" href="classarmnn_1_1_optional.xhtml">Optional</a>&lt; std::string &amp;&gt; reasonIfUnsupported=<a class="el" href="structarmnn_1_1_empty_optional.xhtml">EmptyOptional</a>())</td></tr>
<tr class="separator:a169d56334714f8838d6483ac5becfa78"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a84e1baf46bd5fbf1c945c3eff8639f26"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_layer_support_handle.xhtml#a84e1baf46bd5fbf1c945c3eff8639f26">IsRankSupported</a> (const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;input, const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;output, <a class="el" href="classarmnn_1_1_optional.xhtml">Optional</a>&lt; std::string &amp;&gt; reasonIfUnsupported=<a class="el" href="structarmnn_1_1_empty_optional.xhtml">EmptyOptional</a>())</td></tr>
<tr class="separator:a84e1baf46bd5fbf1c945c3eff8639f26"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3cfc812d1149871d268ee8f22a8d560f"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_layer_support_handle.xhtml#a3cfc812d1149871d268ee8f22a8d560f">IsReduceSupported</a> (const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;input, const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;output, const <a class="el" href="structarmnn_1_1_reduce_descriptor.xhtml">ReduceDescriptor</a> &amp;descriptor, <a class="el" href="classarmnn_1_1_optional.xhtml">Optional</a>&lt; std::string &amp;&gt; reasonIfUnsupported=<a class="el" href="structarmnn_1_1_empty_optional.xhtml">EmptyOptional</a>())</td></tr>
<tr class="separator:a3cfc812d1149871d268ee8f22a8d560f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab87665654c1814f2cca7b47144b7b10c"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_layer_support_handle.xhtml#ab87665654c1814f2cca7b47144b7b10c">IsReshapeSupported</a> (const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;input, const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;output, const <a class="el" href="structarmnn_1_1_reshape_descriptor.xhtml">ReshapeDescriptor</a> &amp;descriptor, <a class="el" href="classarmnn_1_1_optional.xhtml">Optional</a>&lt; std::string &amp;&gt; reasonIfUnsupported=<a class="el" href="structarmnn_1_1_empty_optional.xhtml">EmptyOptional</a>())</td></tr>
<tr class="separator:ab87665654c1814f2cca7b47144b7b10c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a17f237a80f496614d150b727e8d007c3"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_layer_support_handle.xhtml#a17f237a80f496614d150b727e8d007c3">IsResizeSupported</a> (const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;input, const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;output, const <a class="el" href="structarmnn_1_1_resize_descriptor.xhtml">ResizeDescriptor</a> &amp;descriptor, <a class="el" href="classarmnn_1_1_optional.xhtml">Optional</a>&lt; std::string &amp;&gt; reasonIfUnsupported=<a class="el" href="structarmnn_1_1_empty_optional.xhtml">EmptyOptional</a>())</td></tr>
<tr class="separator:a17f237a80f496614d150b727e8d007c3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3de367077cfc29d43575b5a7501b0c9c"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_layer_support_handle.xhtml#a3de367077cfc29d43575b5a7501b0c9c">IsShapeSupported</a> (const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;input, const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;output, <a class="el" href="classarmnn_1_1_optional.xhtml">Optional</a>&lt; std::string &amp;&gt; reasonIfUnsupported=<a class="el" href="structarmnn_1_1_empty_optional.xhtml">EmptyOptional</a>())</td></tr>
<tr class="separator:a3de367077cfc29d43575b5a7501b0c9c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a87aa9bc25667670215e5f6c5b774abee"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_layer_support_handle.xhtml#a87aa9bc25667670215e5f6c5b774abee">IsSliceSupported</a> (const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;input, const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;output, const <a class="el" href="structarmnn_1_1_slice_descriptor.xhtml">SliceDescriptor</a> &amp;descriptor, <a class="el" href="classarmnn_1_1_optional.xhtml">Optional</a>&lt; std::string &amp;&gt; reasonIfUnsupported=<a class="el" href="structarmnn_1_1_empty_optional.xhtml">EmptyOptional</a>())</td></tr>
<tr class="separator:a87aa9bc25667670215e5f6c5b774abee"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a86c61459dbddc1dce1c386a4d8b04694"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_layer_support_handle.xhtml#a86c61459dbddc1dce1c386a4d8b04694">IsSoftmaxSupported</a> (const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;input, const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;output, const <a class="el" href="structarmnn_1_1_softmax_descriptor.xhtml">SoftmaxDescriptor</a> &amp;descriptor, <a class="el" href="classarmnn_1_1_optional.xhtml">Optional</a>&lt; std::string &amp;&gt; reasonIfUnsupported=<a class="el" href="structarmnn_1_1_empty_optional.xhtml">EmptyOptional</a>())</td></tr>
<tr class="separator:a86c61459dbddc1dce1c386a4d8b04694"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:acb38e46aaba6f0296b7915ab5019abb0"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_layer_support_handle.xhtml#acb38e46aaba6f0296b7915ab5019abb0">IsSpaceToBatchNdSupported</a> (const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;input, const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;output, const <a class="el" href="structarmnn_1_1_space_to_batch_nd_descriptor.xhtml">SpaceToBatchNdDescriptor</a> &amp;descriptor, <a class="el" href="classarmnn_1_1_optional.xhtml">Optional</a>&lt; std::string &amp;&gt; reasonIfUnsupported=<a class="el" href="structarmnn_1_1_empty_optional.xhtml">EmptyOptional</a>())</td></tr>
<tr class="separator:acb38e46aaba6f0296b7915ab5019abb0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab5a9e690f184d1ab36cd20f20771e361"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_layer_support_handle.xhtml#ab5a9e690f184d1ab36cd20f20771e361">IsSpaceToDepthSupported</a> (const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;input, const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;output, const <a class="el" href="structarmnn_1_1_space_to_depth_descriptor.xhtml">SpaceToDepthDescriptor</a> &amp;descriptor, <a class="el" href="classarmnn_1_1_optional.xhtml">Optional</a>&lt; std::string &amp;&gt; reasonIfUnsupported=<a class="el" href="structarmnn_1_1_empty_optional.xhtml">EmptyOptional</a>())</td></tr>
<tr class="separator:ab5a9e690f184d1ab36cd20f20771e361"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a11e30be6ad772860d59fbaa1d34bc415"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_layer_support_handle.xhtml#a11e30be6ad772860d59fbaa1d34bc415">IsSplitterSupported</a> (const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;input, const std::vector&lt; std::reference_wrapper&lt; <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &gt;&gt; &amp;outputs, const <a class="el" href="structarmnn_1_1_views_descriptor.xhtml">ViewsDescriptor</a> &amp;descriptor, <a class="el" href="classarmnn_1_1_optional.xhtml">Optional</a>&lt; std::string &amp;&gt; reasonIfUnsupported=<a class="el" href="structarmnn_1_1_empty_optional.xhtml">EmptyOptional</a>())</td></tr>
<tr class="separator:a11e30be6ad772860d59fbaa1d34bc415"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4836fa8a1dcb24dc82fce4fa320287d2"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_layer_support_handle.xhtml#a4836fa8a1dcb24dc82fce4fa320287d2">IsStackSupported</a> (const std::vector&lt; const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> *&gt; &amp;inputs, const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;output, const <a class="el" href="structarmnn_1_1_stack_descriptor.xhtml">StackDescriptor</a> &amp;descriptor, <a class="el" href="classarmnn_1_1_optional.xhtml">Optional</a>&lt; std::string &amp;&gt; reasonIfUnsupported=<a class="el" href="structarmnn_1_1_empty_optional.xhtml">EmptyOptional</a>())</td></tr>
<tr class="separator:a4836fa8a1dcb24dc82fce4fa320287d2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a17de49aa96a88e439b29d009ca703116"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_layer_support_handle.xhtml#a17de49aa96a88e439b29d009ca703116">IsStandInSupported</a> (const std::vector&lt; const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> *&gt; &amp;inputs, const std::vector&lt; const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> *&gt; &amp;outputs, const <a class="el" href="structarmnn_1_1_stand_in_descriptor.xhtml">StandInDescriptor</a> &amp;descriptor, <a class="el" href="classarmnn_1_1_optional.xhtml">Optional</a>&lt; std::string &amp;&gt; reasonIfUnsupported=<a class="el" href="structarmnn_1_1_empty_optional.xhtml">EmptyOptional</a>())</td></tr>
<tr class="separator:a17de49aa96a88e439b29d009ca703116"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aeb96849346b28e6b91b457a54277f831"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_layer_support_handle.xhtml#aeb96849346b28e6b91b457a54277f831">IsStridedSliceSupported</a> (const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;input, const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;output, const <a class="el" href="structarmnn_1_1_strided_slice_descriptor.xhtml">StridedSliceDescriptor</a> &amp;descriptor, <a class="el" href="classarmnn_1_1_optional.xhtml">Optional</a>&lt; std::string &amp;&gt; reasonIfUnsupported=<a class="el" href="structarmnn_1_1_empty_optional.xhtml">EmptyOptional</a>())</td></tr>
<tr class="separator:aeb96849346b28e6b91b457a54277f831"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:abb82febf90b89d04bb38d2f7bf25d438"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_layer_support_handle.xhtml#abb82febf90b89d04bb38d2f7bf25d438">IsSubtractionSupported</a> (const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;input0, const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;input1, const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;output, <a class="el" href="classarmnn_1_1_optional.xhtml">Optional</a>&lt; std::string &amp;&gt; reasonIfUnsupported=<a class="el" href="structarmnn_1_1_empty_optional.xhtml">EmptyOptional</a>())</td></tr>
<tr class="separator:abb82febf90b89d04bb38d2f7bf25d438"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa49b47cfa52cd39dfb0559a2cace6c25"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_layer_support_handle.xhtml#aa49b47cfa52cd39dfb0559a2cace6c25">IsSwitchSupported</a> (const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;input0, const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;input1, const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;output0, const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;output1, <a class="el" href="classarmnn_1_1_optional.xhtml">Optional</a>&lt; std::string &amp;&gt; reasonIfUnsupported=<a class="el" href="structarmnn_1_1_empty_optional.xhtml">EmptyOptional</a>())</td></tr>
<tr class="separator:aa49b47cfa52cd39dfb0559a2cace6c25"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a92b92441a54daa3e5b139a251114547d"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_layer_support_handle.xhtml#a92b92441a54daa3e5b139a251114547d">IsTransposeConvolution2dSupported</a> (const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;input, const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;output, const <a class="el" href="structarmnn_1_1_transpose_convolution2d_descriptor.xhtml">TransposeConvolution2dDescriptor</a> &amp;descriptor, const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;weights, const <a class="el" href="classarmnn_1_1_optional.xhtml">Optional</a>&lt; <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &gt; &amp;biases, <a class="el" href="classarmnn_1_1_optional.xhtml">Optional</a>&lt; std::string &amp;&gt; reasonIfUnsupported=<a class="el" href="structarmnn_1_1_empty_optional.xhtml">EmptyOptional</a>())</td></tr>
<tr class="separator:a92b92441a54daa3e5b139a251114547d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a141df11a09d4ec73c8bd6ed4cef58b96"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_layer_support_handle.xhtml#a141df11a09d4ec73c8bd6ed4cef58b96">IsTransposeSupported</a> (const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;input, const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;output, const <a class="el" href="structarmnn_1_1_transpose_descriptor.xhtml">TransposeDescriptor</a> &amp;descriptor, <a class="el" href="classarmnn_1_1_optional.xhtml">Optional</a>&lt; std::string &amp;&gt; reasonIfUnsupported=<a class="el" href="structarmnn_1_1_empty_optional.xhtml">EmptyOptional</a>())</td></tr>
<tr class="separator:a141df11a09d4ec73c8bd6ed4cef58b96"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a394e66cb93956fc094fb398904da0f3b"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_layer_support_handle.xhtml#a394e66cb93956fc094fb398904da0f3b">IsUnidirectionalSequenceLstmSupported</a> (const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;input, const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;outputStateIn, const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;cellStateIn, const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;output, const <a class="el" href="classarmnn_1_1_optional.xhtml">Optional</a>&lt; <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &gt; &amp;hiddenStateOutput, const <a class="el" href="classarmnn_1_1_optional.xhtml">Optional</a>&lt; <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &gt; &amp;cellStateOutput, const <a class="el" href="structarmnn_1_1_lstm_descriptor.xhtml">LstmDescriptor</a> &amp;descriptor, const <a class="el" href="structarmnn_1_1_lstm_input_params_info.xhtml">LstmInputParamsInfo</a> &amp;paramsInfo, <a class="el" href="classarmnn_1_1_optional.xhtml">Optional</a>&lt; std::string &amp;&gt; reasonIfUnsupported=<a class="el" href="structarmnn_1_1_empty_optional.xhtml">EmptyOptional</a>())</td></tr>
<tr class="separator:a394e66cb93956fc094fb398904da0f3b"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock">
<p class="definition">Definition at line <a class="el" href="_backend_helper_8hpp_source.xhtml#l00020">20</a> of file <a class="el" href="_backend_helper_8hpp_source.xhtml">BackendHelper.hpp</a>.</p>
</div><h2 class="groupheader">Constructor &amp; Destructor Documentation</h2>
<a id="a2bc87ea547a3ef1dacbe40e09515ce22"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a2bc87ea547a3ef1dacbe40e09515ce22">&#9670;&nbsp;</a></span>LayerSupportHandle() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarmnn_1_1_layer_support_handle.xhtml">LayerSupportHandle</a> </td>
          <td>(</td>
          <td class="paramtype">std::shared_ptr&lt; <a class="el" href="classarmnn_1_1_i_layer_support.xhtml">ILayerSupport</a> &gt;&#160;</td>
          <td class="paramname"><em>layerSupport</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">explicit</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_backend_helper_8hpp_source.xhtml#l00023">23</a> of file <a class="el" href="_backend_helper_8hpp_source.xhtml">BackendHelper.hpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;        : m_LayerSupport(std::move(layerSupport)), m_BackendId(<a class="code" href="namespacearmnn.xhtml#ae2f04a162585c0a5222a537efd5456aeaec0fc0100c4fc1ce4eea230c3dc10360">Compute::Undefined</a>) {};</div><div class="ttc" id="namespacearmnn_xhtml_ae2f04a162585c0a5222a537efd5456aeaec0fc0100c4fc1ce4eea230c3dc10360"><div class="ttname"><a href="namespacearmnn.xhtml#ae2f04a162585c0a5222a537efd5456aeaec0fc0100c4fc1ce4eea230c3dc10360">armnn::Compute::Undefined</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="a53fa2eaca1d868977aeb9d05f86977d7"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a53fa2eaca1d868977aeb9d05f86977d7">&#9670;&nbsp;</a></span>LayerSupportHandle() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarmnn_1_1_layer_support_handle.xhtml">LayerSupportHandle</a> </td>
          <td>(</td>
          <td class="paramtype">std::shared_ptr&lt; <a class="el" href="classarmnn_1_1_i_layer_support.xhtml">ILayerSupport</a> &gt;&#160;</td>
          <td class="paramname"><em>layerSupport</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_backend_id.xhtml">BackendId</a> &amp;&#160;</td>
          <td class="paramname"><em>backendId</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">explicit</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_backend_helper_8hpp_source.xhtml#l00026">26</a> of file <a class="el" href="_backend_helper_8hpp_source.xhtml">BackendHelper.hpp</a>.</p>

<p class="reference">References <a class="el" href="include_2armnn_2backends_2_workload_data_8hpp_source.xhtml#l00346">armnn::ARMNN_DEPRECATED_MSG_REMOVAL_DATE()</a>, <a class="el" href="_backend_helper_8cpp_source.xhtml#l00030">armnn::GetCapability()</a>, <a class="el" href="_backend_helper_8cpp_source.xhtml#l00016">armnn::GetILayerSupportByBackendId()</a>, <a class="el" href="_backend_helper_8cpp_source.xhtml#l00129">armnn::GetNumberOfCacheFiles()</a>, <a class="el" href="_backend_helper_8cpp_source.xhtml#l00058">armnn::HasCapability()</a>, <a class="el" href="_backend_helper_8cpp_source.xhtml#l00153">LayerSupportHandle::IsActivationSupported()</a>, <a class="el" href="_backend_helper_8cpp_source.xhtml#l00168">LayerSupportHandle::IsAdditionSupported()</a>, <a class="el" href="_backend_helper_8cpp_source.xhtml#l00183">LayerSupportHandle::IsArgMinMaxSupported()</a>, <a class="el" href="_backend_helper_8cpp_source.xhtml#l00141">LayerSupportHandle::IsBackendRegistered()</a>, <a class="el" href="_backend_helper_8cpp_source.xhtml#l00198">LayerSupportHandle::IsBatchNormalizationSupported()</a>, <a class="el" href="_backend_helper_8cpp_source.xhtml#l00217">LayerSupportHandle::IsBatchToSpaceNdSupported()</a>, <a class="el" href="_backend_helper_8cpp_source.xhtml#l00114">armnn::IsCapabilitySupported()</a>, <a class="el" href="_backend_helper_8cpp_source.xhtml#l00232">LayerSupportHandle::IsCastSupported()</a>, <a class="el" href="_backend_helper_8cpp_source.xhtml#l00246">LayerSupportHandle::IsChannelShuffleSupported()</a>, <a class="el" href="_backend_helper_8cpp_source.xhtml#l00261">LayerSupportHandle::IsComparisonSupported()</a>, <a class="el" href="_backend_helper_8cpp_source.xhtml#l00277">LayerSupportHandle::IsConcatSupported()</a>, <a class="el" href="_backend_helper_8cpp_source.xhtml#l00297">LayerSupportHandle::IsConstantSupported()</a>, <a class="el" href="_backend_helper_8cpp_source.xhtml#l00310">LayerSupportHandle::IsConvertBf16ToFp32Supported()</a>, <a class="el" href="_backend_helper_8cpp_source.xhtml#l00338">LayerSupportHandle::IsConvertFp16ToFp32Supported()</a>, <a class="el" href="_backend_helper_8cpp_source.xhtml#l00324">LayerSupportHandle::IsConvertFp32ToBf16Supported()</a>, <a class="el" href="_backend_helper_8cpp_source.xhtml#l00352">LayerSupportHandle::IsConvertFp32ToFp16Supported()</a>, <a class="el" href="_backend_helper_8cpp_source.xhtml#l00366">LayerSupportHandle::IsConvolution2dSupported()</a>, <a class="el" href="_backend_helper_8cpp_source.xhtml#l00384">LayerSupportHandle::IsConvolution3dSupported()</a>, <a class="el" href="_backend_helper_8cpp_source.xhtml#l00402">LayerSupportHandle::IsDebugSupported()</a>, <a class="el" href="_backend_helper_8cpp_source.xhtml#l00416">LayerSupportHandle::IsDepthToSpaceSupported()</a>, <a class="el" href="_backend_helper_8cpp_source.xhtml#l00431">LayerSupportHandle::IsDepthwiseConvolutionSupported()</a>, <a class="el" href="_backend_helper_8cpp_source.xhtml#l00450">LayerSupportHandle::IsDequantizeSupported()</a>, <a class="el" href="_backend_helper_8cpp_source.xhtml#l00464">LayerSupportHandle::IsDetectionPostProcessSupported()</a>, <a class="el" href="_backend_helper_8cpp_source.xhtml#l00484">LayerSupportHandle::IsDilatedDepthwiseConvolutionSupported()</a>, <a class="el" href="_backend_helper_8cpp_source.xhtml#l00503">LayerSupportHandle::IsDivisionSupported()</a>, <a class="el" href="_backend_helper_8cpp_source.xhtml#l00518">LayerSupportHandle::IsElementwiseUnarySupported()</a>, <a class="el" href="_backend_helper_8cpp_source.xhtml#l00533">LayerSupportHandle::IsFakeQuantizationSupported()</a>, <a class="el" href="_backend_helper_8cpp_source.xhtml#l00547">LayerSupportHandle::IsFillSupported()</a>, <a class="el" href="_backend_helper_8cpp_source.xhtml#l00562">LayerSupportHandle::IsFloorSupported()</a>, <a class="el" href="_backend_helper_8cpp_source.xhtml#l00576">LayerSupportHandle::IsFullyConnectedSupported()</a>, <a class="el" href="_backend_helper_8cpp_source.xhtml#l00642">LayerSupportHandle::IsGatherSupported()</a>, <a class="el" href="_backend_helper_8cpp_source.xhtml#l00658">LayerSupportHandle::IsInputSupported()</a>, <a class="el" href="_backend_helper_8cpp_source.xhtml#l00671">LayerSupportHandle::IsInstanceNormalizationSupported()</a>, <a class="el" href="_backend_helper_8cpp_source.xhtml#l00687">LayerSupportHandle::IsL2NormalizationSupported()</a>, <a class="el" href="_backend_helper_8cpp_source.xhtml#l00702">LayerSupportHandle::IsLogicalBinarySupported()</a>, <a class="el" href="_backend_helper_8cpp_source.xhtml#l00718">LayerSupportHandle::IsLogicalUnarySupported()</a>, <a class="el" href="_backend_helper_8cpp_source.xhtml#l00733">LayerSupportHandle::IsLogSoftmaxSupported()</a>, <a class="el" href="_backend_helper_8cpp_source.xhtml#l00748">LayerSupportHandle::IsLstmSupported()</a>, <a class="el" href="_backend_helper_8cpp_source.xhtml#l00769">LayerSupportHandle::IsMaximumSupported()</a>, <a class="el" href="_backend_helper_8cpp_source.xhtml#l00784">LayerSupportHandle::IsMeanSupported()</a>, <a class="el" href="_backend_helper_8cpp_source.xhtml#l00799">LayerSupportHandle::IsMemCopySupported()</a>, <a class="el" href="_backend_helper_8cpp_source.xhtml#l00813">LayerSupportHandle::IsMemImportSupported()</a>, <a class="el" href="_backend_helper_8cpp_source.xhtml#l00827">LayerSupportHandle::IsMergeSupported()</a>, <a class="el" href="_backend_helper_8cpp_source.xhtml#l00842">LayerSupportHandle::IsMinimumSupported()</a>, <a class="el" href="_backend_helper_8cpp_source.xhtml#l00857">LayerSupportHandle::IsMultiplicationSupported()</a>, <a class="el" href="_backend_helper_8cpp_source.xhtml#l00872">LayerSupportHandle::IsNormalizationSupported()</a>, <a class="el" href="_backend_helper_8cpp_source.xhtml#l00887">LayerSupportHandle::IsOutputSupported()</a>, <a class="el" href="_backend_helper_8cpp_source.xhtml#l00900">LayerSupportHandle::IsPadSupported()</a>, <a class="el" href="_backend_helper_8cpp_source.xhtml#l00915">LayerSupportHandle::IsPermuteSupported()</a>, <a class="el" href="_backend_helper_8cpp_source.xhtml#l00930">LayerSupportHandle::IsPooling2dSupported()</a>, <a class="el" href="_backend_helper_8cpp_source.xhtml#l00945">LayerSupportHandle::IsPooling3dSupported()</a>, <a class="el" href="_backend_helper_8cpp_source.xhtml#l00960">LayerSupportHandle::IsPreCompiledSupported()</a>, <a class="el" href="_backend_helper_8cpp_source.xhtml#l00974">LayerSupportHandle::IsPreluSupported()</a>, <a class="el" href="_backend_helper_8cpp_source.xhtml#l01003">LayerSupportHandle::IsQLstmSupported()</a>, <a class="el" href="_backend_helper_8cpp_source.xhtml#l01023">LayerSupportHandle::IsQuantizedLstmSupported()</a>, <a class="el" href="_backend_helper_8cpp_source.xhtml#l00989">LayerSupportHandle::IsQuantizeSupported()</a>, <a class="el" href="_backend_helper_8cpp_source.xhtml#l01041">LayerSupportHandle::IsRankSupported()</a>, <a class="el" href="_backend_helper_8cpp_source.xhtml#l01055">LayerSupportHandle::IsReduceSupported()</a>, <a class="el" href="_backend_helper_8cpp_source.xhtml#l01070">LayerSupportHandle::IsReshapeSupported()</a>, <a class="el" href="_backend_helper_8cpp_source.xhtml#l01085">LayerSupportHandle::IsResizeSupported()</a>, <a class="el" href="_backend_helper_8cpp_source.xhtml#l01100">LayerSupportHandle::IsShapeSupported()</a>, <a class="el" href="_backend_helper_8cpp_source.xhtml#l01114">LayerSupportHandle::IsSliceSupported()</a>, <a class="el" href="_backend_helper_8cpp_source.xhtml#l01129">LayerSupportHandle::IsSoftmaxSupported()</a>, <a class="el" href="_backend_helper_8cpp_source.xhtml#l01144">LayerSupportHandle::IsSpaceToBatchNdSupported()</a>, <a class="el" href="_backend_helper_8cpp_source.xhtml#l01159">LayerSupportHandle::IsSpaceToDepthSupported()</a>, <a class="el" href="_backend_helper_8cpp_source.xhtml#l01174">LayerSupportHandle::IsSplitterSupported()</a>, <a class="el" href="_backend_helper_8cpp_source.xhtml#l01193">LayerSupportHandle::IsStackSupported()</a>, <a class="el" href="_backend_helper_8cpp_source.xhtml#l01213">LayerSupportHandle::IsStandInSupported()</a>, <a class="el" href="_backend_helper_8cpp_source.xhtml#l01237">LayerSupportHandle::IsStridedSliceSupported()</a>, <a class="el" href="_backend_helper_8cpp_source.xhtml#l01252">LayerSupportHandle::IsSubtractionSupported()</a>, <a class="el" href="_backend_helper_8cpp_source.xhtml#l01267">LayerSupportHandle::IsSwitchSupported()</a>, <a class="el" href="_backend_helper_8cpp_source.xhtml#l01283">LayerSupportHandle::IsTransposeConvolution2dSupported()</a>, <a class="el" href="_backend_helper_8cpp_source.xhtml#l01302">LayerSupportHandle::IsTransposeSupported()</a>, and <a class="el" href="_backend_helper_8cpp_source.xhtml#l01317">LayerSupportHandle::IsUnidirectionalSequenceLstmSupported()</a>.</p>
<div class="fragment"><div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;        : m_LayerSupport(std::move(layerSupport)), m_BackendId(backendId) {};</div></div><!-- fragment -->
</div>
</div>
<h2 class="groupheader">Member Function Documentation</h2>
<a id="a75f01d8e1dbb7a9386bbb6a7a3d41920"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a75f01d8e1dbb7a9386bbb6a7a3d41920">&#9670;&nbsp;</a></span>IsActivationSupported()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool IsActivationSupported </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;&#160;</td>
          <td class="paramname"><em>input</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;&#160;</td>
          <td class="paramname"><em>output</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="structarmnn_1_1_activation_descriptor.xhtml">ActivationDescriptor</a> &amp;&#160;</td>
          <td class="paramname"><em>descriptor</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="classarmnn_1_1_optional.xhtml">Optional</a>&lt; std::string &amp;&gt;&#160;</td>
          <td class="paramname"><em>reasonIfUnsupported</em> = <code><a class="el" href="structarmnn_1_1_empty_optional.xhtml">EmptyOptional</a>()</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_backend_helper_8cpp_source.xhtml#l00153">153</a> of file <a class="el" href="_backend_helper_8cpp_source.xhtml">BackendHelper.cpp</a>.</p>

<p class="reference">References <a class="el" href="namespacearmnn.xhtml#a56943a0946e5f15e5e58054b8e7a04a4aa9a62e70841c4d06dd16306a85700d36">armnn::Activation</a>.</p>

<p class="reference">Referenced by <a class="el" href="_backend_helper_8hpp_source.xhtml#l00026">LayerSupportHandle::LayerSupportHandle()</a>.</p>
<div class="fragment"><div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160;{</div><div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;    <a class="code" href="namespacearmnn.xhtml#a14275495042ea02d0348dd70eeaf3d68">TensorInfos</a> infos{input, output};</div><div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160;</div><div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160;    <span class="keywordflow">return</span> m_LayerSupport-&gt;IsLayerSupported(<a class="code" href="namespacearmnn.xhtml#a56943a0946e5f15e5e58054b8e7a04a4aa9a62e70841c4d06dd16306a85700d36">LayerType::Activation</a>,</div><div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160;                                            infos,</div><div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160;                                            descriptor,</div><div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160;                                            EmptyOptional(),</div><div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;                                            EmptyOptional(),</div><div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160;                                            reasonIfUnsupported);</div><div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160;}</div><div class="ttc" id="namespacearmnn_xhtml_a56943a0946e5f15e5e58054b8e7a04a4aa9a62e70841c4d06dd16306a85700d36"><div class="ttname"><a href="namespacearmnn.xhtml#a56943a0946e5f15e5e58054b8e7a04a4aa9a62e70841c4d06dd16306a85700d36">armnn::LayerType::Activation</a></div></div>
<div class="ttc" id="namespacearmnn_xhtml_a14275495042ea02d0348dd70eeaf3d68"><div class="ttname"><a href="namespacearmnn.xhtml#a14275495042ea02d0348dd70eeaf3d68">armnn::TensorInfos</a></div><div class="ttdeci">std::vector&lt; TensorInfo &gt; TensorInfos</div><div class="ttdef"><b>Definition:</b> <a href="_backend_helper_8cpp_source.xhtml#l00151">BackendHelper.cpp:151</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="abe0d9e04a1b5e6f2344adcd74d3b3dfe"></a>
<h2 class="memtitle"><span class="permalink"><a href="#abe0d9e04a1b5e6f2344adcd74d3b3dfe">&#9670;&nbsp;</a></span>IsAdditionSupported()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool IsAdditionSupported </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;&#160;</td>
          <td class="paramname"><em>input0</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;&#160;</td>
          <td class="paramname"><em>input1</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;&#160;</td>
          <td class="paramname"><em>output</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="classarmnn_1_1_optional.xhtml">Optional</a>&lt; std::string &amp;&gt;&#160;</td>
          <td class="paramname"><em>reasonIfUnsupported</em> = <code><a class="el" href="structarmnn_1_1_empty_optional.xhtml">EmptyOptional</a>()</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_backend_helper_8cpp_source.xhtml#l00168">168</a> of file <a class="el" href="_backend_helper_8cpp_source.xhtml">BackendHelper.cpp</a>.</p>

<p class="reference">References <a class="el" href="namespacearmnn.xhtml#a56943a0946e5f15e5e58054b8e7a04a4a7c5531bbefed0945814f874baf9e0e0f">armnn::Addition</a>.</p>

<p class="reference">Referenced by <a class="el" href="_backend_helper_8hpp_source.xhtml#l00026">LayerSupportHandle::LayerSupportHandle()</a>.</p>
<div class="fragment"><div class="line"><a name="l00172"></a><span class="lineno">  172</span>&#160;{</div><div class="line"><a name="l00173"></a><span class="lineno">  173</span>&#160;    <a class="code" href="namespacearmnn.xhtml#a14275495042ea02d0348dd70eeaf3d68">TensorInfos</a> infos{input0, input1, output};</div><div class="line"><a name="l00174"></a><span class="lineno">  174</span>&#160;</div><div class="line"><a name="l00175"></a><span class="lineno">  175</span>&#160;    <span class="keywordflow">return</span> m_LayerSupport-&gt;IsLayerSupported(<a class="code" href="namespacearmnn.xhtml#a56943a0946e5f15e5e58054b8e7a04a4a7c5531bbefed0945814f874baf9e0e0f">LayerType::Addition</a>,</div><div class="line"><a name="l00176"></a><span class="lineno">  176</span>&#160;                                            infos,</div><div class="line"><a name="l00177"></a><span class="lineno">  177</span>&#160;                                            BaseDescriptor(),</div><div class="line"><a name="l00178"></a><span class="lineno">  178</span>&#160;                                            EmptyOptional(),</div><div class="line"><a name="l00179"></a><span class="lineno">  179</span>&#160;                                            EmptyOptional(),</div><div class="line"><a name="l00180"></a><span class="lineno">  180</span>&#160;                                            reasonIfUnsupported);</div><div class="line"><a name="l00181"></a><span class="lineno">  181</span>&#160;}</div><div class="ttc" id="namespacearmnn_xhtml_a56943a0946e5f15e5e58054b8e7a04a4a7c5531bbefed0945814f874baf9e0e0f"><div class="ttname"><a href="namespacearmnn.xhtml#a56943a0946e5f15e5e58054b8e7a04a4a7c5531bbefed0945814f874baf9e0e0f">armnn::LayerType::Addition</a></div></div>
<div class="ttc" id="namespacearmnn_xhtml_a14275495042ea02d0348dd70eeaf3d68"><div class="ttname"><a href="namespacearmnn.xhtml#a14275495042ea02d0348dd70eeaf3d68">armnn::TensorInfos</a></div><div class="ttdeci">std::vector&lt; TensorInfo &gt; TensorInfos</div><div class="ttdef"><b>Definition:</b> <a href="_backend_helper_8cpp_source.xhtml#l00151">BackendHelper.cpp:151</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="a97527514268db4c4a510f49020ca648e"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a97527514268db4c4a510f49020ca648e">&#9670;&nbsp;</a></span>IsArgMinMaxSupported()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool IsArgMinMaxSupported </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;&#160;</td>
          <td class="paramname"><em>input</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;&#160;</td>
          <td class="paramname"><em>output</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="structarmnn_1_1_arg_min_max_descriptor.xhtml">ArgMinMaxDescriptor</a> &amp;&#160;</td>
          <td class="paramname"><em>descriptor</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="classarmnn_1_1_optional.xhtml">Optional</a>&lt; std::string &amp;&gt;&#160;</td>
          <td class="paramname"><em>reasonIfUnsupported</em> = <code><a class="el" href="structarmnn_1_1_empty_optional.xhtml">EmptyOptional</a>()</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_backend_helper_8cpp_source.xhtml#l00183">183</a> of file <a class="el" href="_backend_helper_8cpp_source.xhtml">BackendHelper.cpp</a>.</p>

<p class="reference">References <a class="el" href="namespacearmnn.xhtml#a56943a0946e5f15e5e58054b8e7a04a4a2139684546b147c106b329f41547640c">armnn::ArgMinMax</a>.</p>

<p class="reference">Referenced by <a class="el" href="_backend_helper_8hpp_source.xhtml#l00026">LayerSupportHandle::LayerSupportHandle()</a>.</p>
<div class="fragment"><div class="line"><a name="l00187"></a><span class="lineno">  187</span>&#160;{</div><div class="line"><a name="l00188"></a><span class="lineno">  188</span>&#160;    <a class="code" href="namespacearmnn.xhtml#a14275495042ea02d0348dd70eeaf3d68">TensorInfos</a> infos{input, output};</div><div class="line"><a name="l00189"></a><span class="lineno">  189</span>&#160;</div><div class="line"><a name="l00190"></a><span class="lineno">  190</span>&#160;    <span class="keywordflow">return</span> m_LayerSupport-&gt;IsLayerSupported(<a class="code" href="namespacearmnn.xhtml#a56943a0946e5f15e5e58054b8e7a04a4a2139684546b147c106b329f41547640c">LayerType::ArgMinMax</a>,</div><div class="line"><a name="l00191"></a><span class="lineno">  191</span>&#160;                                            infos,</div><div class="line"><a name="l00192"></a><span class="lineno">  192</span>&#160;                                            descriptor,</div><div class="line"><a name="l00193"></a><span class="lineno">  193</span>&#160;                                            EmptyOptional(),</div><div class="line"><a name="l00194"></a><span class="lineno">  194</span>&#160;                                            EmptyOptional(),</div><div class="line"><a name="l00195"></a><span class="lineno">  195</span>&#160;                                            reasonIfUnsupported);</div><div class="line"><a name="l00196"></a><span class="lineno">  196</span>&#160;}</div><div class="ttc" id="namespacearmnn_xhtml_a56943a0946e5f15e5e58054b8e7a04a4a2139684546b147c106b329f41547640c"><div class="ttname"><a href="namespacearmnn.xhtml#a56943a0946e5f15e5e58054b8e7a04a4a2139684546b147c106b329f41547640c">armnn::LayerType::ArgMinMax</a></div></div>
<div class="ttc" id="namespacearmnn_xhtml_a14275495042ea02d0348dd70eeaf3d68"><div class="ttname"><a href="namespacearmnn.xhtml#a14275495042ea02d0348dd70eeaf3d68">armnn::TensorInfos</a></div><div class="ttdeci">std::vector&lt; TensorInfo &gt; TensorInfos</div><div class="ttdef"><b>Definition:</b> <a href="_backend_helper_8cpp_source.xhtml#l00151">BackendHelper.cpp:151</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="a1ba0862636ccfea01078005c4e6ba6de"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a1ba0862636ccfea01078005c4e6ba6de">&#9670;&nbsp;</a></span>IsBackendRegistered()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool IsBackendRegistered </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_backend_helper_8cpp_source.xhtml#l00141">141</a> of file <a class="el" href="_backend_helper_8cpp_source.xhtml">BackendHelper.cpp</a>.</p>

<p class="reference">Referenced by <a class="el" href="_backend_helper_8hpp_source.xhtml#l00026">LayerSupportHandle::LayerSupportHandle()</a>.</p>
<div class="fragment"><div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;{</div><div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;    <span class="keywordflow">if</span> (m_LayerSupport)</div><div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;    {</div><div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;        <span class="keywordflow">return</span> <span class="keyword">true</span>;</div><div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;    }</div><div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;</div><div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;    <span class="keywordflow">return</span> <span class="keyword">false</span>;</div><div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;}</div></div><!-- fragment -->
</div>
</div>
<a id="a37f9d9263c5509e75a6aebf77cfaf242"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a37f9d9263c5509e75a6aebf77cfaf242">&#9670;&nbsp;</a></span>IsBatchNormalizationSupported()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool IsBatchNormalizationSupported </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;&#160;</td>
          <td class="paramname"><em>input</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;&#160;</td>
          <td class="paramname"><em>output</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;&#160;</td>
          <td class="paramname"><em>mean</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;&#160;</td>
          <td class="paramname"><em>var</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;&#160;</td>
          <td class="paramname"><em>beta</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;&#160;</td>
          <td class="paramname"><em>gamma</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="structarmnn_1_1_batch_normalization_descriptor.xhtml">BatchNormalizationDescriptor</a> &amp;&#160;</td>
          <td class="paramname"><em>descriptor</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="classarmnn_1_1_optional.xhtml">Optional</a>&lt; std::string &amp;&gt;&#160;</td>
          <td class="paramname"><em>reasonIfUnsupported</em> = <code><a class="el" href="structarmnn_1_1_empty_optional.xhtml">EmptyOptional</a>()</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_backend_helper_8cpp_source.xhtml#l00198">198</a> of file <a class="el" href="_backend_helper_8cpp_source.xhtml">BackendHelper.cpp</a>.</p>

<p class="reference">References <a class="el" href="namespacearmnn.xhtml#a56943a0946e5f15e5e58054b8e7a04a4ae4743c3ec15d1d84169b17264634692e">armnn::BatchNormalization</a>.</p>

<p class="reference">Referenced by <a class="el" href="_backend_helper_8hpp_source.xhtml#l00026">LayerSupportHandle::LayerSupportHandle()</a>.</p>
<div class="fragment"><div class="line"><a name="l00206"></a><span class="lineno">  206</span>&#160;{</div><div class="line"><a name="l00207"></a><span class="lineno">  207</span>&#160;    <a class="code" href="namespacearmnn.xhtml#a14275495042ea02d0348dd70eeaf3d68">TensorInfos</a> infos{input, output, mean, var, beta, gamma};</div><div class="line"><a name="l00208"></a><span class="lineno">  208</span>&#160;</div><div class="line"><a name="l00209"></a><span class="lineno">  209</span>&#160;    <span class="keywordflow">return</span> m_LayerSupport-&gt;IsLayerSupported(<a class="code" href="namespacearmnn.xhtml#a56943a0946e5f15e5e58054b8e7a04a4ae4743c3ec15d1d84169b17264634692e">LayerType::BatchNormalization</a>,</div><div class="line"><a name="l00210"></a><span class="lineno">  210</span>&#160;                                            infos,</div><div class="line"><a name="l00211"></a><span class="lineno">  211</span>&#160;                                            descriptor,</div><div class="line"><a name="l00212"></a><span class="lineno">  212</span>&#160;                                            EmptyOptional(),</div><div class="line"><a name="l00213"></a><span class="lineno">  213</span>&#160;                                            EmptyOptional(),</div><div class="line"><a name="l00214"></a><span class="lineno">  214</span>&#160;                                            reasonIfUnsupported);</div><div class="line"><a name="l00215"></a><span class="lineno">  215</span>&#160;}</div><div class="ttc" id="namespacearmnn_xhtml_a56943a0946e5f15e5e58054b8e7a04a4ae4743c3ec15d1d84169b17264634692e"><div class="ttname"><a href="namespacearmnn.xhtml#a56943a0946e5f15e5e58054b8e7a04a4ae4743c3ec15d1d84169b17264634692e">armnn::LayerType::BatchNormalization</a></div></div>
<div class="ttc" id="namespacearmnn_xhtml_a14275495042ea02d0348dd70eeaf3d68"><div class="ttname"><a href="namespacearmnn.xhtml#a14275495042ea02d0348dd70eeaf3d68">armnn::TensorInfos</a></div><div class="ttdeci">std::vector&lt; TensorInfo &gt; TensorInfos</div><div class="ttdef"><b>Definition:</b> <a href="_backend_helper_8cpp_source.xhtml#l00151">BackendHelper.cpp:151</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="afd6279019c78c1cebacf24c71a7a1f9b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#afd6279019c78c1cebacf24c71a7a1f9b">&#9670;&nbsp;</a></span>IsBatchToSpaceNdSupported()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool IsBatchToSpaceNdSupported </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;&#160;</td>
          <td class="paramname"><em>input</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;&#160;</td>
          <td class="paramname"><em>output</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="structarmnn_1_1_batch_to_space_nd_descriptor.xhtml">BatchToSpaceNdDescriptor</a> &amp;&#160;</td>
          <td class="paramname"><em>descriptor</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="classarmnn_1_1_optional.xhtml">Optional</a>&lt; std::string &amp;&gt;&#160;</td>
          <td class="paramname"><em>reasonIfUnsupported</em> = <code><a class="el" href="structarmnn_1_1_empty_optional.xhtml">EmptyOptional</a>()</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_backend_helper_8cpp_source.xhtml#l00217">217</a> of file <a class="el" href="_backend_helper_8cpp_source.xhtml">BackendHelper.cpp</a>.</p>

<p class="reference">References <a class="el" href="namespacearmnn.xhtml#a56943a0946e5f15e5e58054b8e7a04a4a6ee06c6045d0c5b6565a247955ef0fc2">armnn::BatchToSpaceNd</a>.</p>

<p class="reference">Referenced by <a class="el" href="_backend_helper_8hpp_source.xhtml#l00026">LayerSupportHandle::LayerSupportHandle()</a>.</p>
<div class="fragment"><div class="line"><a name="l00221"></a><span class="lineno">  221</span>&#160;{</div><div class="line"><a name="l00222"></a><span class="lineno">  222</span>&#160;    <a class="code" href="namespacearmnn.xhtml#a14275495042ea02d0348dd70eeaf3d68">TensorInfos</a> infos{input, output};</div><div class="line"><a name="l00223"></a><span class="lineno">  223</span>&#160;</div><div class="line"><a name="l00224"></a><span class="lineno">  224</span>&#160;    <span class="keywordflow">return</span> m_LayerSupport-&gt;IsLayerSupported(<a class="code" href="namespacearmnn.xhtml#a56943a0946e5f15e5e58054b8e7a04a4a6ee06c6045d0c5b6565a247955ef0fc2">LayerType::BatchToSpaceNd</a>,</div><div class="line"><a name="l00225"></a><span class="lineno">  225</span>&#160;                                            infos,</div><div class="line"><a name="l00226"></a><span class="lineno">  226</span>&#160;                                            descriptor,</div><div class="line"><a name="l00227"></a><span class="lineno">  227</span>&#160;                                            EmptyOptional(),</div><div class="line"><a name="l00228"></a><span class="lineno">  228</span>&#160;                                            EmptyOptional(),</div><div class="line"><a name="l00229"></a><span class="lineno">  229</span>&#160;                                            reasonIfUnsupported);</div><div class="line"><a name="l00230"></a><span class="lineno">  230</span>&#160;}</div><div class="ttc" id="namespacearmnn_xhtml_a56943a0946e5f15e5e58054b8e7a04a4a6ee06c6045d0c5b6565a247955ef0fc2"><div class="ttname"><a href="namespacearmnn.xhtml#a56943a0946e5f15e5e58054b8e7a04a4a6ee06c6045d0c5b6565a247955ef0fc2">armnn::LayerType::BatchToSpaceNd</a></div></div>
<div class="ttc" id="namespacearmnn_xhtml_a14275495042ea02d0348dd70eeaf3d68"><div class="ttname"><a href="namespacearmnn.xhtml#a14275495042ea02d0348dd70eeaf3d68">armnn::TensorInfos</a></div><div class="ttdeci">std::vector&lt; TensorInfo &gt; TensorInfos</div><div class="ttdef"><b>Definition:</b> <a href="_backend_helper_8cpp_source.xhtml#l00151">BackendHelper.cpp:151</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="a0feadd628ca39d143be392f13e0a6b1b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a0feadd628ca39d143be392f13e0a6b1b">&#9670;&nbsp;</a></span>IsCastSupported()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool IsCastSupported </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;&#160;</td>
          <td class="paramname"><em>input</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;&#160;</td>
          <td class="paramname"><em>output</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="classarmnn_1_1_optional.xhtml">Optional</a>&lt; std::string &amp;&gt;&#160;</td>
          <td class="paramname"><em>reasonIfUnsupported</em> = <code><a class="el" href="structarmnn_1_1_empty_optional.xhtml">EmptyOptional</a>()</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_backend_helper_8cpp_source.xhtml#l00232">232</a> of file <a class="el" href="_backend_helper_8cpp_source.xhtml">BackendHelper.cpp</a>.</p>

<p class="reference">References <a class="el" href="namespacearmnn.xhtml#a56943a0946e5f15e5e58054b8e7a04a4a4cd9f3996d60790cd11c04f842ebc43c">armnn::Cast</a>.</p>

<p class="reference">Referenced by <a class="el" href="_backend_helper_8hpp_source.xhtml#l00026">LayerSupportHandle::LayerSupportHandle()</a>.</p>
<div class="fragment"><div class="line"><a name="l00235"></a><span class="lineno">  235</span>&#160;{</div><div class="line"><a name="l00236"></a><span class="lineno">  236</span>&#160;    <a class="code" href="namespacearmnn.xhtml#a14275495042ea02d0348dd70eeaf3d68">TensorInfos</a> infos{input, output};</div><div class="line"><a name="l00237"></a><span class="lineno">  237</span>&#160;</div><div class="line"><a name="l00238"></a><span class="lineno">  238</span>&#160;    <span class="keywordflow">return</span> m_LayerSupport-&gt;IsLayerSupported(<a class="code" href="namespacearmnn.xhtml#a56943a0946e5f15e5e58054b8e7a04a4a4cd9f3996d60790cd11c04f842ebc43c">LayerType::Cast</a>,</div><div class="line"><a name="l00239"></a><span class="lineno">  239</span>&#160;                                            infos,</div><div class="line"><a name="l00240"></a><span class="lineno">  240</span>&#160;                                            BaseDescriptor(),</div><div class="line"><a name="l00241"></a><span class="lineno">  241</span>&#160;                                            EmptyOptional(),</div><div class="line"><a name="l00242"></a><span class="lineno">  242</span>&#160;                                            EmptyOptional(),</div><div class="line"><a name="l00243"></a><span class="lineno">  243</span>&#160;                                            reasonIfUnsupported);</div><div class="line"><a name="l00244"></a><span class="lineno">  244</span>&#160;}</div><div class="ttc" id="namespacearmnn_xhtml_a56943a0946e5f15e5e58054b8e7a04a4a4cd9f3996d60790cd11c04f842ebc43c"><div class="ttname"><a href="namespacearmnn.xhtml#a56943a0946e5f15e5e58054b8e7a04a4a4cd9f3996d60790cd11c04f842ebc43c">armnn::LayerType::Cast</a></div></div>
<div class="ttc" id="namespacearmnn_xhtml_a14275495042ea02d0348dd70eeaf3d68"><div class="ttname"><a href="namespacearmnn.xhtml#a14275495042ea02d0348dd70eeaf3d68">armnn::TensorInfos</a></div><div class="ttdeci">std::vector&lt; TensorInfo &gt; TensorInfos</div><div class="ttdef"><b>Definition:</b> <a href="_backend_helper_8cpp_source.xhtml#l00151">BackendHelper.cpp:151</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="a894e9e9e3b008959080b0e0d2d54156e"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a894e9e9e3b008959080b0e0d2d54156e">&#9670;&nbsp;</a></span>IsChannelShuffleSupported()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool IsChannelShuffleSupported </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;&#160;</td>
          <td class="paramname"><em>input</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;&#160;</td>
          <td class="paramname"><em>output</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="structarmnn_1_1_channel_shuffle_descriptor.xhtml">ChannelShuffleDescriptor</a> &amp;&#160;</td>
          <td class="paramname"><em>descriptor</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="classarmnn_1_1_optional.xhtml">Optional</a>&lt; std::string &amp;&gt;&#160;</td>
          <td class="paramname"><em>reasonIfUnsupported</em> = <code><a class="el" href="structarmnn_1_1_empty_optional.xhtml">EmptyOptional</a>()</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_backend_helper_8cpp_source.xhtml#l00246">246</a> of file <a class="el" href="_backend_helper_8cpp_source.xhtml">BackendHelper.cpp</a>.</p>

<p class="reference">References <a class="el" href="namespacearmnn.xhtml#a56943a0946e5f15e5e58054b8e7a04a4a0ca5f33c1d35fd4105d3a26a2823f9dd">armnn::ChannelShuffle</a>.</p>

<p class="reference">Referenced by <a class="el" href="_backend_helper_8hpp_source.xhtml#l00026">LayerSupportHandle::LayerSupportHandle()</a>.</p>
<div class="fragment"><div class="line"><a name="l00250"></a><span class="lineno">  250</span>&#160;{</div><div class="line"><a name="l00251"></a><span class="lineno">  251</span>&#160;    <a class="code" href="namespacearmnn.xhtml#a14275495042ea02d0348dd70eeaf3d68">TensorInfos</a> infos{input, output};</div><div class="line"><a name="l00252"></a><span class="lineno">  252</span>&#160;</div><div class="line"><a name="l00253"></a><span class="lineno">  253</span>&#160;    <span class="keywordflow">return</span> m_LayerSupport-&gt;IsLayerSupported(<a class="code" href="namespacearmnn.xhtml#a56943a0946e5f15e5e58054b8e7a04a4a0ca5f33c1d35fd4105d3a26a2823f9dd">LayerType::ChannelShuffle</a>,</div><div class="line"><a name="l00254"></a><span class="lineno">  254</span>&#160;                                            infos,</div><div class="line"><a name="l00255"></a><span class="lineno">  255</span>&#160;                                            descriptor,</div><div class="line"><a name="l00256"></a><span class="lineno">  256</span>&#160;                                            EmptyOptional(),</div><div class="line"><a name="l00257"></a><span class="lineno">  257</span>&#160;                                            EmptyOptional(),</div><div class="line"><a name="l00258"></a><span class="lineno">  258</span>&#160;                                            reasonIfUnsupported);</div><div class="line"><a name="l00259"></a><span class="lineno">  259</span>&#160;}</div><div class="ttc" id="namespacearmnn_xhtml_a56943a0946e5f15e5e58054b8e7a04a4a0ca5f33c1d35fd4105d3a26a2823f9dd"><div class="ttname"><a href="namespacearmnn.xhtml#a56943a0946e5f15e5e58054b8e7a04a4a0ca5f33c1d35fd4105d3a26a2823f9dd">armnn::LayerType::ChannelShuffle</a></div></div>
<div class="ttc" id="namespacearmnn_xhtml_a14275495042ea02d0348dd70eeaf3d68"><div class="ttname"><a href="namespacearmnn.xhtml#a14275495042ea02d0348dd70eeaf3d68">armnn::TensorInfos</a></div><div class="ttdeci">std::vector&lt; TensorInfo &gt; TensorInfos</div><div class="ttdef"><b>Definition:</b> <a href="_backend_helper_8cpp_source.xhtml#l00151">BackendHelper.cpp:151</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="a413082dc2ac940ec31793ef15cb733bf"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a413082dc2ac940ec31793ef15cb733bf">&#9670;&nbsp;</a></span>IsComparisonSupported()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool IsComparisonSupported </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;&#160;</td>
          <td class="paramname"><em>input0</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;&#160;</td>
          <td class="paramname"><em>input1</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;&#160;</td>
          <td class="paramname"><em>output</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="structarmnn_1_1_comparison_descriptor.xhtml">ComparisonDescriptor</a> &amp;&#160;</td>
          <td class="paramname"><em>descriptor</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="classarmnn_1_1_optional.xhtml">Optional</a>&lt; std::string &amp;&gt;&#160;</td>
          <td class="paramname"><em>reasonIfUnsupported</em> = <code><a class="el" href="structarmnn_1_1_empty_optional.xhtml">EmptyOptional</a>()</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_backend_helper_8cpp_source.xhtml#l00261">261</a> of file <a class="el" href="_backend_helper_8cpp_source.xhtml">BackendHelper.cpp</a>.</p>

<p class="reference">References <a class="el" href="namespacearmnn.xhtml#a56943a0946e5f15e5e58054b8e7a04a4af6c0e3a1c3cfabd32ae8d3ae741fcf0a">armnn::Comparison</a>.</p>

<p class="reference">Referenced by <a class="el" href="_backend_helper_8hpp_source.xhtml#l00026">LayerSupportHandle::LayerSupportHandle()</a>.</p>
<div class="fragment"><div class="line"><a name="l00266"></a><span class="lineno">  266</span>&#160;{</div><div class="line"><a name="l00267"></a><span class="lineno">  267</span>&#160;    <a class="code" href="namespacearmnn.xhtml#a14275495042ea02d0348dd70eeaf3d68">TensorInfos</a> infos{input0, input1, output};</div><div class="line"><a name="l00268"></a><span class="lineno">  268</span>&#160;</div><div class="line"><a name="l00269"></a><span class="lineno">  269</span>&#160;    <span class="keywordflow">return</span> m_LayerSupport-&gt;IsLayerSupported(<a class="code" href="namespacearmnn.xhtml#a56943a0946e5f15e5e58054b8e7a04a4af6c0e3a1c3cfabd32ae8d3ae741fcf0a">LayerType::Comparison</a>,</div><div class="line"><a name="l00270"></a><span class="lineno">  270</span>&#160;                                            infos,</div><div class="line"><a name="l00271"></a><span class="lineno">  271</span>&#160;                                            descriptor,</div><div class="line"><a name="l00272"></a><span class="lineno">  272</span>&#160;                                            EmptyOptional(),</div><div class="line"><a name="l00273"></a><span class="lineno">  273</span>&#160;                                            EmptyOptional(),</div><div class="line"><a name="l00274"></a><span class="lineno">  274</span>&#160;                                            reasonIfUnsupported);</div><div class="line"><a name="l00275"></a><span class="lineno">  275</span>&#160;}</div><div class="ttc" id="namespacearmnn_xhtml_a56943a0946e5f15e5e58054b8e7a04a4af6c0e3a1c3cfabd32ae8d3ae741fcf0a"><div class="ttname"><a href="namespacearmnn.xhtml#a56943a0946e5f15e5e58054b8e7a04a4af6c0e3a1c3cfabd32ae8d3ae741fcf0a">armnn::LayerType::Comparison</a></div></div>
<div class="ttc" id="namespacearmnn_xhtml_a14275495042ea02d0348dd70eeaf3d68"><div class="ttname"><a href="namespacearmnn.xhtml#a14275495042ea02d0348dd70eeaf3d68">armnn::TensorInfos</a></div><div class="ttdeci">std::vector&lt; TensorInfo &gt; TensorInfos</div><div class="ttdef"><b>Definition:</b> <a href="_backend_helper_8cpp_source.xhtml#l00151">BackendHelper.cpp:151</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="a02bd9a06e7d87799e42e68c67e0cb95c"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a02bd9a06e7d87799e42e68c67e0cb95c">&#9670;&nbsp;</a></span>IsConcatSupported()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool IsConcatSupported </td>
          <td>(</td>
          <td class="paramtype">const std::vector&lt; const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> *&gt;&#160;</td>
          <td class="paramname"><em>inputs</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;&#160;</td>
          <td class="paramname"><em>output</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="structarmnn_1_1_origins_descriptor.xhtml">OriginsDescriptor</a> &amp;&#160;</td>
          <td class="paramname"><em>descriptor</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="classarmnn_1_1_optional.xhtml">Optional</a>&lt; std::string &amp;&gt;&#160;</td>
          <td class="paramname"><em>reasonIfUnsupported</em> = <code><a class="el" href="structarmnn_1_1_empty_optional.xhtml">EmptyOptional</a>()</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_backend_helper_8cpp_source.xhtml#l00277">277</a> of file <a class="el" href="_backend_helper_8cpp_source.xhtml">BackendHelper.cpp</a>.</p>

<p class="reference">References <a class="el" href="namespacearmnn.xhtml#a56943a0946e5f15e5e58054b8e7a04a4ae20f0f2826a6549809f050b86274567f">armnn::Concat</a>.</p>

<p class="reference">Referenced by <a class="el" href="_backend_helper_8hpp_source.xhtml#l00026">LayerSupportHandle::LayerSupportHandle()</a>.</p>
<div class="fragment"><div class="line"><a name="l00281"></a><span class="lineno">  281</span>&#160;{</div><div class="line"><a name="l00282"></a><span class="lineno">  282</span>&#160;    <a class="code" href="namespacearmnn.xhtml#a14275495042ea02d0348dd70eeaf3d68">TensorInfos</a> infos;</div><div class="line"><a name="l00283"></a><span class="lineno">  283</span>&#160;    <span class="keywordflow">for</span> (<span class="keyword">const</span> TensorInfo* inputInfo : inputs)</div><div class="line"><a name="l00284"></a><span class="lineno">  284</span>&#160;    {</div><div class="line"><a name="l00285"></a><span class="lineno">  285</span>&#160;        infos.push_back(*inputInfo);</div><div class="line"><a name="l00286"></a><span class="lineno">  286</span>&#160;    }</div><div class="line"><a name="l00287"></a><span class="lineno">  287</span>&#160;    infos.push_back(output);</div><div class="line"><a name="l00288"></a><span class="lineno">  288</span>&#160;</div><div class="line"><a name="l00289"></a><span class="lineno">  289</span>&#160;    <span class="keywordflow">return</span> m_LayerSupport-&gt;IsLayerSupported(<a class="code" href="namespacearmnn.xhtml#a56943a0946e5f15e5e58054b8e7a04a4ae20f0f2826a6549809f050b86274567f">LayerType::Concat</a>,</div><div class="line"><a name="l00290"></a><span class="lineno">  290</span>&#160;                                            infos,</div><div class="line"><a name="l00291"></a><span class="lineno">  291</span>&#160;                                            descriptor,</div><div class="line"><a name="l00292"></a><span class="lineno">  292</span>&#160;                                            EmptyOptional(),</div><div class="line"><a name="l00293"></a><span class="lineno">  293</span>&#160;                                            EmptyOptional(),</div><div class="line"><a name="l00294"></a><span class="lineno">  294</span>&#160;                                            reasonIfUnsupported);</div><div class="line"><a name="l00295"></a><span class="lineno">  295</span>&#160;}</div><div class="ttc" id="namespacearmnn_xhtml_a56943a0946e5f15e5e58054b8e7a04a4ae20f0f2826a6549809f050b86274567f"><div class="ttname"><a href="namespacearmnn.xhtml#a56943a0946e5f15e5e58054b8e7a04a4ae20f0f2826a6549809f050b86274567f">armnn::LayerType::Concat</a></div></div>
<div class="ttc" id="namespacearmnn_xhtml_a14275495042ea02d0348dd70eeaf3d68"><div class="ttname"><a href="namespacearmnn.xhtml#a14275495042ea02d0348dd70eeaf3d68">armnn::TensorInfos</a></div><div class="ttdeci">std::vector&lt; TensorInfo &gt; TensorInfos</div><div class="ttdef"><b>Definition:</b> <a href="_backend_helper_8cpp_source.xhtml#l00151">BackendHelper.cpp:151</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="a45378a497174e038f360f380a481e475"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a45378a497174e038f360f380a481e475">&#9670;&nbsp;</a></span>IsConstantSupported()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool IsConstantSupported </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;&#160;</td>
          <td class="paramname"><em>output</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="classarmnn_1_1_optional.xhtml">Optional</a>&lt; std::string &amp;&gt;&#160;</td>
          <td class="paramname"><em>reasonIfUnsupported</em> = <code><a class="el" href="structarmnn_1_1_empty_optional.xhtml">EmptyOptional</a>()</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_backend_helper_8cpp_source.xhtml#l00297">297</a> of file <a class="el" href="_backend_helper_8cpp_source.xhtml">BackendHelper.cpp</a>.</p>

<p class="reference">References <a class="el" href="namespacearmnn.xhtml#a14d24d90ab4ba2956e92e27890ba4c91acb17869fe51048b5a5c4c6106551a255">armnn::Constant</a>.</p>

<p class="reference">Referenced by <a class="el" href="_backend_helper_8hpp_source.xhtml#l00026">LayerSupportHandle::LayerSupportHandle()</a>.</p>
<div class="fragment"><div class="line"><a name="l00299"></a><span class="lineno">  299</span>&#160;{</div><div class="line"><a name="l00300"></a><span class="lineno">  300</span>&#160;    <a class="code" href="namespacearmnn.xhtml#a14275495042ea02d0348dd70eeaf3d68">TensorInfos</a> infos{output};</div><div class="line"><a name="l00301"></a><span class="lineno">  301</span>&#160;</div><div class="line"><a name="l00302"></a><span class="lineno">  302</span>&#160;    <span class="keywordflow">return</span> m_LayerSupport-&gt;IsLayerSupported(<a class="code" href="namespacearmnn.xhtml#a14d24d90ab4ba2956e92e27890ba4c91acb17869fe51048b5a5c4c6106551a255">LayerType::Constant</a>,</div><div class="line"><a name="l00303"></a><span class="lineno">  303</span>&#160;                                            infos,</div><div class="line"><a name="l00304"></a><span class="lineno">  304</span>&#160;                                            BaseDescriptor(),</div><div class="line"><a name="l00305"></a><span class="lineno">  305</span>&#160;                                            EmptyOptional(),</div><div class="line"><a name="l00306"></a><span class="lineno">  306</span>&#160;                                            EmptyOptional(),</div><div class="line"><a name="l00307"></a><span class="lineno">  307</span>&#160;                                            reasonIfUnsupported);</div><div class="line"><a name="l00308"></a><span class="lineno">  308</span>&#160;}</div><div class="ttc" id="namespacearmnn_xhtml_a14275495042ea02d0348dd70eeaf3d68"><div class="ttname"><a href="namespacearmnn.xhtml#a14275495042ea02d0348dd70eeaf3d68">armnn::TensorInfos</a></div><div class="ttdeci">std::vector&lt; TensorInfo &gt; TensorInfos</div><div class="ttdef"><b>Definition:</b> <a href="_backend_helper_8cpp_source.xhtml#l00151">BackendHelper.cpp:151</a></div></div>
<div class="ttc" id="namespacearmnn_xhtml_a14d24d90ab4ba2956e92e27890ba4c91acb17869fe51048b5a5c4c6106551a255"><div class="ttname"><a href="namespacearmnn.xhtml#a14d24d90ab4ba2956e92e27890ba4c91acb17869fe51048b5a5c4c6106551a255">armnn::PaddingMode::Constant</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="a6647f0061e4574c429b2492f32b8e307"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a6647f0061e4574c429b2492f32b8e307">&#9670;&nbsp;</a></span>IsConvertBf16ToFp32Supported()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool IsConvertBf16ToFp32Supported </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;&#160;</td>
          <td class="paramname"><em>input</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;&#160;</td>
          <td class="paramname"><em>output</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="classarmnn_1_1_optional.xhtml">Optional</a>&lt; std::string &amp;&gt;&#160;</td>
          <td class="paramname"><em>reasonIfUnsupported</em> = <code><a class="el" href="structarmnn_1_1_empty_optional.xhtml">EmptyOptional</a>()</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_backend_helper_8cpp_source.xhtml#l00310">310</a> of file <a class="el" href="_backend_helper_8cpp_source.xhtml">BackendHelper.cpp</a>.</p>

<p class="reference">References <a class="el" href="namespacearmnn.xhtml#a56943a0946e5f15e5e58054b8e7a04a4a2ba4c46787312a2467153f40c542851a">armnn::ConvertBf16ToFp32</a>.</p>

<p class="reference">Referenced by <a class="el" href="_backend_helper_8hpp_source.xhtml#l00026">LayerSupportHandle::LayerSupportHandle()</a>.</p>
<div class="fragment"><div class="line"><a name="l00313"></a><span class="lineno">  313</span>&#160;{</div><div class="line"><a name="l00314"></a><span class="lineno">  314</span>&#160;    <a class="code" href="namespacearmnn.xhtml#a14275495042ea02d0348dd70eeaf3d68">TensorInfos</a> infos{input, output};</div><div class="line"><a name="l00315"></a><span class="lineno">  315</span>&#160;</div><div class="line"><a name="l00316"></a><span class="lineno">  316</span>&#160;    <span class="keywordflow">return</span> m_LayerSupport-&gt;IsLayerSupported(<a class="code" href="namespacearmnn.xhtml#a56943a0946e5f15e5e58054b8e7a04a4a2ba4c46787312a2467153f40c542851a">LayerType::ConvertBf16ToFp32</a>,</div><div class="line"><a name="l00317"></a><span class="lineno">  317</span>&#160;                                            infos,</div><div class="line"><a name="l00318"></a><span class="lineno">  318</span>&#160;                                            BaseDescriptor(),</div><div class="line"><a name="l00319"></a><span class="lineno">  319</span>&#160;                                            EmptyOptional(),</div><div class="line"><a name="l00320"></a><span class="lineno">  320</span>&#160;                                            EmptyOptional(),</div><div class="line"><a name="l00321"></a><span class="lineno">  321</span>&#160;                                            reasonIfUnsupported);</div><div class="line"><a name="l00322"></a><span class="lineno">  322</span>&#160;}</div><div class="ttc" id="namespacearmnn_xhtml_a14275495042ea02d0348dd70eeaf3d68"><div class="ttname"><a href="namespacearmnn.xhtml#a14275495042ea02d0348dd70eeaf3d68">armnn::TensorInfos</a></div><div class="ttdeci">std::vector&lt; TensorInfo &gt; TensorInfos</div><div class="ttdef"><b>Definition:</b> <a href="_backend_helper_8cpp_source.xhtml#l00151">BackendHelper.cpp:151</a></div></div>
<div class="ttc" id="namespacearmnn_xhtml_a56943a0946e5f15e5e58054b8e7a04a4a2ba4c46787312a2467153f40c542851a"><div class="ttname"><a href="namespacearmnn.xhtml#a56943a0946e5f15e5e58054b8e7a04a4a2ba4c46787312a2467153f40c542851a">armnn::LayerType::ConvertBf16ToFp32</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="ae81870a573fcb46b73cf13591307c4ec"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ae81870a573fcb46b73cf13591307c4ec">&#9670;&nbsp;</a></span>IsConvertFp16ToFp32Supported()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool IsConvertFp16ToFp32Supported </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;&#160;</td>
          <td class="paramname"><em>input</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;&#160;</td>
          <td class="paramname"><em>output</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="classarmnn_1_1_optional.xhtml">Optional</a>&lt; std::string &amp;&gt;&#160;</td>
          <td class="paramname"><em>reasonIfUnsupported</em> = <code><a class="el" href="structarmnn_1_1_empty_optional.xhtml">EmptyOptional</a>()</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_backend_helper_8cpp_source.xhtml#l00338">338</a> of file <a class="el" href="_backend_helper_8cpp_source.xhtml">BackendHelper.cpp</a>.</p>

<p class="reference">References <a class="el" href="namespacearmnn.xhtml#a56943a0946e5f15e5e58054b8e7a04a4a912a4b4d73726c282e3f79aa2c390d6c">armnn::ConvertFp16ToFp32</a>.</p>

<p class="reference">Referenced by <a class="el" href="_backend_helper_8hpp_source.xhtml#l00026">LayerSupportHandle::LayerSupportHandle()</a>.</p>
<div class="fragment"><div class="line"><a name="l00341"></a><span class="lineno">  341</span>&#160;{</div><div class="line"><a name="l00342"></a><span class="lineno">  342</span>&#160;    <a class="code" href="namespacearmnn.xhtml#a14275495042ea02d0348dd70eeaf3d68">TensorInfos</a> infos{input, output};</div><div class="line"><a name="l00343"></a><span class="lineno">  343</span>&#160;</div><div class="line"><a name="l00344"></a><span class="lineno">  344</span>&#160;    <span class="keywordflow">return</span> m_LayerSupport-&gt;IsLayerSupported(<a class="code" href="namespacearmnn.xhtml#a56943a0946e5f15e5e58054b8e7a04a4a912a4b4d73726c282e3f79aa2c390d6c">LayerType::ConvertFp16ToFp32</a>,</div><div class="line"><a name="l00345"></a><span class="lineno">  345</span>&#160;                                            infos,</div><div class="line"><a name="l00346"></a><span class="lineno">  346</span>&#160;                                            BaseDescriptor(),</div><div class="line"><a name="l00347"></a><span class="lineno">  347</span>&#160;                                            EmptyOptional(),</div><div class="line"><a name="l00348"></a><span class="lineno">  348</span>&#160;                                            EmptyOptional(),</div><div class="line"><a name="l00349"></a><span class="lineno">  349</span>&#160;                                            reasonIfUnsupported);</div><div class="line"><a name="l00350"></a><span class="lineno">  350</span>&#160;}</div><div class="ttc" id="namespacearmnn_xhtml_a56943a0946e5f15e5e58054b8e7a04a4a912a4b4d73726c282e3f79aa2c390d6c"><div class="ttname"><a href="namespacearmnn.xhtml#a56943a0946e5f15e5e58054b8e7a04a4a912a4b4d73726c282e3f79aa2c390d6c">armnn::LayerType::ConvertFp16ToFp32</a></div></div>
<div class="ttc" id="namespacearmnn_xhtml_a14275495042ea02d0348dd70eeaf3d68"><div class="ttname"><a href="namespacearmnn.xhtml#a14275495042ea02d0348dd70eeaf3d68">armnn::TensorInfos</a></div><div class="ttdeci">std::vector&lt; TensorInfo &gt; TensorInfos</div><div class="ttdef"><b>Definition:</b> <a href="_backend_helper_8cpp_source.xhtml#l00151">BackendHelper.cpp:151</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="a5c54d70bd6aec5469b79a91bf64c793b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a5c54d70bd6aec5469b79a91bf64c793b">&#9670;&nbsp;</a></span>IsConvertFp32ToBf16Supported()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool IsConvertFp32ToBf16Supported </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;&#160;</td>
          <td class="paramname"><em>input</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;&#160;</td>
          <td class="paramname"><em>output</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="classarmnn_1_1_optional.xhtml">Optional</a>&lt; std::string &amp;&gt;&#160;</td>
          <td class="paramname"><em>reasonIfUnsupported</em> = <code><a class="el" href="structarmnn_1_1_empty_optional.xhtml">EmptyOptional</a>()</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_backend_helper_8cpp_source.xhtml#l00324">324</a> of file <a class="el" href="_backend_helper_8cpp_source.xhtml">BackendHelper.cpp</a>.</p>

<p class="reference">References <a class="el" href="namespacearmnn.xhtml#a56943a0946e5f15e5e58054b8e7a04a4a6512859957de2cf2a5fe4dccb07bd9da">armnn::ConvertFp32ToBf16</a>.</p>

<p class="reference">Referenced by <a class="el" href="_backend_helper_8hpp_source.xhtml#l00026">LayerSupportHandle::LayerSupportHandle()</a>.</p>
<div class="fragment"><div class="line"><a name="l00327"></a><span class="lineno">  327</span>&#160;{</div><div class="line"><a name="l00328"></a><span class="lineno">  328</span>&#160;    <a class="code" href="namespacearmnn.xhtml#a14275495042ea02d0348dd70eeaf3d68">TensorInfos</a> infos{input, output};</div><div class="line"><a name="l00329"></a><span class="lineno">  329</span>&#160;</div><div class="line"><a name="l00330"></a><span class="lineno">  330</span>&#160;    <span class="keywordflow">return</span> m_LayerSupport-&gt;IsLayerSupported(<a class="code" href="namespacearmnn.xhtml#a56943a0946e5f15e5e58054b8e7a04a4a6512859957de2cf2a5fe4dccb07bd9da">LayerType::ConvertFp32ToBf16</a>,</div><div class="line"><a name="l00331"></a><span class="lineno">  331</span>&#160;                                            infos,</div><div class="line"><a name="l00332"></a><span class="lineno">  332</span>&#160;                                            BaseDescriptor(),</div><div class="line"><a name="l00333"></a><span class="lineno">  333</span>&#160;                                            EmptyOptional(),</div><div class="line"><a name="l00334"></a><span class="lineno">  334</span>&#160;                                            EmptyOptional(),</div><div class="line"><a name="l00335"></a><span class="lineno">  335</span>&#160;                                            reasonIfUnsupported);</div><div class="line"><a name="l00336"></a><span class="lineno">  336</span>&#160;}</div><div class="ttc" id="namespacearmnn_xhtml_a56943a0946e5f15e5e58054b8e7a04a4a6512859957de2cf2a5fe4dccb07bd9da"><div class="ttname"><a href="namespacearmnn.xhtml#a56943a0946e5f15e5e58054b8e7a04a4a6512859957de2cf2a5fe4dccb07bd9da">armnn::LayerType::ConvertFp32ToBf16</a></div></div>
<div class="ttc" id="namespacearmnn_xhtml_a14275495042ea02d0348dd70eeaf3d68"><div class="ttname"><a href="namespacearmnn.xhtml#a14275495042ea02d0348dd70eeaf3d68">armnn::TensorInfos</a></div><div class="ttdeci">std::vector&lt; TensorInfo &gt; TensorInfos</div><div class="ttdef"><b>Definition:</b> <a href="_backend_helper_8cpp_source.xhtml#l00151">BackendHelper.cpp:151</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="a1a9ffd82ed12f3d249c48ba9ebd24558"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a1a9ffd82ed12f3d249c48ba9ebd24558">&#9670;&nbsp;</a></span>IsConvertFp32ToFp16Supported()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool IsConvertFp32ToFp16Supported </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;&#160;</td>
          <td class="paramname"><em>input</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;&#160;</td>
          <td class="paramname"><em>output</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="classarmnn_1_1_optional.xhtml">Optional</a>&lt; std::string &amp;&gt;&#160;</td>
          <td class="paramname"><em>reasonIfUnsupported</em> = <code><a class="el" href="structarmnn_1_1_empty_optional.xhtml">EmptyOptional</a>()</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_backend_helper_8cpp_source.xhtml#l00352">352</a> of file <a class="el" href="_backend_helper_8cpp_source.xhtml">BackendHelper.cpp</a>.</p>

<p class="reference">References <a class="el" href="namespacearmnn.xhtml#a56943a0946e5f15e5e58054b8e7a04a4addf4f83b056acd5549949fc0350e9aad">armnn::ConvertFp32ToFp16</a>.</p>

<p class="reference">Referenced by <a class="el" href="_backend_helper_8hpp_source.xhtml#l00026">LayerSupportHandle::LayerSupportHandle()</a>.</p>
<div class="fragment"><div class="line"><a name="l00355"></a><span class="lineno">  355</span>&#160;{</div><div class="line"><a name="l00356"></a><span class="lineno">  356</span>&#160;    <a class="code" href="namespacearmnn.xhtml#a14275495042ea02d0348dd70eeaf3d68">TensorInfos</a> infos{input, output};</div><div class="line"><a name="l00357"></a><span class="lineno">  357</span>&#160;</div><div class="line"><a name="l00358"></a><span class="lineno">  358</span>&#160;    <span class="keywordflow">return</span> m_LayerSupport-&gt;IsLayerSupported(<a class="code" href="namespacearmnn.xhtml#a56943a0946e5f15e5e58054b8e7a04a4addf4f83b056acd5549949fc0350e9aad">LayerType::ConvertFp32ToFp16</a>,</div><div class="line"><a name="l00359"></a><span class="lineno">  359</span>&#160;                                            infos,</div><div class="line"><a name="l00360"></a><span class="lineno">  360</span>&#160;                                            BaseDescriptor(),</div><div class="line"><a name="l00361"></a><span class="lineno">  361</span>&#160;                                            EmptyOptional(),</div><div class="line"><a name="l00362"></a><span class="lineno">  362</span>&#160;                                            EmptyOptional(),</div><div class="line"><a name="l00363"></a><span class="lineno">  363</span>&#160;                                            reasonIfUnsupported);</div><div class="line"><a name="l00364"></a><span class="lineno">  364</span>&#160;}</div><div class="ttc" id="namespacearmnn_xhtml_a56943a0946e5f15e5e58054b8e7a04a4addf4f83b056acd5549949fc0350e9aad"><div class="ttname"><a href="namespacearmnn.xhtml#a56943a0946e5f15e5e58054b8e7a04a4addf4f83b056acd5549949fc0350e9aad">armnn::LayerType::ConvertFp32ToFp16</a></div></div>
<div class="ttc" id="namespacearmnn_xhtml_a14275495042ea02d0348dd70eeaf3d68"><div class="ttname"><a href="namespacearmnn.xhtml#a14275495042ea02d0348dd70eeaf3d68">armnn::TensorInfos</a></div><div class="ttdeci">std::vector&lt; TensorInfo &gt; TensorInfos</div><div class="ttdef"><b>Definition:</b> <a href="_backend_helper_8cpp_source.xhtml#l00151">BackendHelper.cpp:151</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="abd99d21d1a25806cbad2ad9d88da5feb"></a>
<h2 class="memtitle"><span class="permalink"><a href="#abd99d21d1a25806cbad2ad9d88da5feb">&#9670;&nbsp;</a></span>IsConvolution2dSupported()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool IsConvolution2dSupported </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;&#160;</td>
          <td class="paramname"><em>input</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;&#160;</td>
          <td class="paramname"><em>output</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="structarmnn_1_1_convolution2d_descriptor.xhtml">Convolution2dDescriptor</a> &amp;&#160;</td>
          <td class="paramname"><em>descriptor</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;&#160;</td>
          <td class="paramname"><em>weights</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_optional.xhtml">Optional</a>&lt; <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &gt; &amp;&#160;</td>
          <td class="paramname"><em>biases</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="classarmnn_1_1_optional.xhtml">Optional</a>&lt; std::string &amp;&gt;&#160;</td>
          <td class="paramname"><em>reasonIfUnsupported</em> = <code><a class="el" href="structarmnn_1_1_empty_optional.xhtml">EmptyOptional</a>()</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_backend_helper_8cpp_source.xhtml#l00366">366</a> of file <a class="el" href="_backend_helper_8cpp_source.xhtml">BackendHelper.cpp</a>.</p>

<p class="reference">References <a class="el" href="namespacearmnn.xhtml#a56943a0946e5f15e5e58054b8e7a04a4adb033d2f81b68f9a17e8f62de69fed4a">armnn::Convolution2d</a>, <a class="el" href="_optional_8hpp_source.xhtml#l00053">OptionalBase::has_value()</a>, and <a class="el" href="_optional_8hpp_source.xhtml#l00146">OptionalReferenceSwitch&lt; std::is_reference&lt; T &gt;::value, T &gt;::value()</a>.</p>

<p class="reference">Referenced by <a class="el" href="_backend_helper_8hpp_source.xhtml#l00026">LayerSupportHandle::LayerSupportHandle()</a>.</p>
<div class="fragment"><div class="line"><a name="l00372"></a><span class="lineno">  372</span>&#160;{</div><div class="line"><a name="l00373"></a><span class="lineno">  373</span>&#160;    TensorInfo biasesVal =  biases.has_value() ? biases.value() : TensorInfo();</div><div class="line"><a name="l00374"></a><span class="lineno">  374</span>&#160;    <a class="code" href="namespacearmnn.xhtml#a14275495042ea02d0348dd70eeaf3d68">TensorInfos</a> infos{input, output, weights, biasesVal};</div><div class="line"><a name="l00375"></a><span class="lineno">  375</span>&#160;</div><div class="line"><a name="l00376"></a><span class="lineno">  376</span>&#160;    <span class="keywordflow">return</span> m_LayerSupport-&gt;IsLayerSupported(<a class="code" href="namespacearmnn.xhtml#a56943a0946e5f15e5e58054b8e7a04a4adb033d2f81b68f9a17e8f62de69fed4a">LayerType::Convolution2d</a>,</div><div class="line"><a name="l00377"></a><span class="lineno">  377</span>&#160;                                            infos,</div><div class="line"><a name="l00378"></a><span class="lineno">  378</span>&#160;                                            descriptor,</div><div class="line"><a name="l00379"></a><span class="lineno">  379</span>&#160;                                            EmptyOptional(),</div><div class="line"><a name="l00380"></a><span class="lineno">  380</span>&#160;                                            EmptyOptional(),</div><div class="line"><a name="l00381"></a><span class="lineno">  381</span>&#160;                                            reasonIfUnsupported);</div><div class="line"><a name="l00382"></a><span class="lineno">  382</span>&#160;}</div><div class="ttc" id="namespacearmnn_xhtml_a56943a0946e5f15e5e58054b8e7a04a4adb033d2f81b68f9a17e8f62de69fed4a"><div class="ttname"><a href="namespacearmnn.xhtml#a56943a0946e5f15e5e58054b8e7a04a4adb033d2f81b68f9a17e8f62de69fed4a">armnn::LayerType::Convolution2d</a></div></div>
<div class="ttc" id="namespacearmnn_xhtml_a14275495042ea02d0348dd70eeaf3d68"><div class="ttname"><a href="namespacearmnn.xhtml#a14275495042ea02d0348dd70eeaf3d68">armnn::TensorInfos</a></div><div class="ttdeci">std::vector&lt; TensorInfo &gt; TensorInfos</div><div class="ttdef"><b>Definition:</b> <a href="_backend_helper_8cpp_source.xhtml#l00151">BackendHelper.cpp:151</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="a9cf88faa84096a14936640e54b090f84"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a9cf88faa84096a14936640e54b090f84">&#9670;&nbsp;</a></span>IsConvolution3dSupported()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool IsConvolution3dSupported </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;&#160;</td>
          <td class="paramname"><em>input</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;&#160;</td>
          <td class="paramname"><em>output</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="structarmnn_1_1_convolution3d_descriptor.xhtml">Convolution3dDescriptor</a> &amp;&#160;</td>
          <td class="paramname"><em>descriptor</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;&#160;</td>
          <td class="paramname"><em>weights</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_optional.xhtml">Optional</a>&lt; <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &gt; &amp;&#160;</td>
          <td class="paramname"><em>biases</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="classarmnn_1_1_optional.xhtml">Optional</a>&lt; std::string &amp;&gt;&#160;</td>
          <td class="paramname"><em>reasonIfUnsupported</em> = <code><a class="el" href="structarmnn_1_1_empty_optional.xhtml">EmptyOptional</a>()</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_backend_helper_8cpp_source.xhtml#l00384">384</a> of file <a class="el" href="_backend_helper_8cpp_source.xhtml">BackendHelper.cpp</a>.</p>

<p class="reference">References <a class="el" href="namespacearmnn.xhtml#a56943a0946e5f15e5e58054b8e7a04a4a583550d0f265fd3756f7de0e42c51953">armnn::Convolution3d</a>, <a class="el" href="_optional_8hpp_source.xhtml#l00053">OptionalBase::has_value()</a>, and <a class="el" href="_optional_8hpp_source.xhtml#l00146">OptionalReferenceSwitch&lt; std::is_reference&lt; T &gt;::value, T &gt;::value()</a>.</p>

<p class="reference">Referenced by <a class="el" href="_backend_helper_8hpp_source.xhtml#l00026">LayerSupportHandle::LayerSupportHandle()</a>.</p>
<div class="fragment"><div class="line"><a name="l00390"></a><span class="lineno">  390</span>&#160;{</div><div class="line"><a name="l00391"></a><span class="lineno">  391</span>&#160;    TensorInfo biasesVal =  biases.has_value() ? biases.value() : TensorInfo();</div><div class="line"><a name="l00392"></a><span class="lineno">  392</span>&#160;    <a class="code" href="namespacearmnn.xhtml#a14275495042ea02d0348dd70eeaf3d68">TensorInfos</a> infos{input, output, weights, biasesVal};</div><div class="line"><a name="l00393"></a><span class="lineno">  393</span>&#160;</div><div class="line"><a name="l00394"></a><span class="lineno">  394</span>&#160;    <span class="keywordflow">return</span> m_LayerSupport-&gt;IsLayerSupported(<a class="code" href="namespacearmnn.xhtml#a56943a0946e5f15e5e58054b8e7a04a4a583550d0f265fd3756f7de0e42c51953">LayerType::Convolution3d</a>,</div><div class="line"><a name="l00395"></a><span class="lineno">  395</span>&#160;                                            infos,</div><div class="line"><a name="l00396"></a><span class="lineno">  396</span>&#160;                                            descriptor,</div><div class="line"><a name="l00397"></a><span class="lineno">  397</span>&#160;                                            EmptyOptional(),</div><div class="line"><a name="l00398"></a><span class="lineno">  398</span>&#160;                                            EmptyOptional(),</div><div class="line"><a name="l00399"></a><span class="lineno">  399</span>&#160;                                            reasonIfUnsupported);</div><div class="line"><a name="l00400"></a><span class="lineno">  400</span>&#160;}</div><div class="ttc" id="namespacearmnn_xhtml_a56943a0946e5f15e5e58054b8e7a04a4a583550d0f265fd3756f7de0e42c51953"><div class="ttname"><a href="namespacearmnn.xhtml#a56943a0946e5f15e5e58054b8e7a04a4a583550d0f265fd3756f7de0e42c51953">armnn::LayerType::Convolution3d</a></div></div>
<div class="ttc" id="namespacearmnn_xhtml_a14275495042ea02d0348dd70eeaf3d68"><div class="ttname"><a href="namespacearmnn.xhtml#a14275495042ea02d0348dd70eeaf3d68">armnn::TensorInfos</a></div><div class="ttdeci">std::vector&lt; TensorInfo &gt; TensorInfos</div><div class="ttdef"><b>Definition:</b> <a href="_backend_helper_8cpp_source.xhtml#l00151">BackendHelper.cpp:151</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="a0b52e6ce3d1e93e05f90d960cab0078f"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a0b52e6ce3d1e93e05f90d960cab0078f">&#9670;&nbsp;</a></span>IsDebugSupported()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool IsDebugSupported </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;&#160;</td>
          <td class="paramname"><em>input</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;&#160;</td>
          <td class="paramname"><em>output</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="classarmnn_1_1_optional.xhtml">Optional</a>&lt; std::string &amp;&gt;&#160;</td>
          <td class="paramname"><em>reasonIfUnsupported</em> = <code><a class="el" href="structarmnn_1_1_empty_optional.xhtml">EmptyOptional</a>()</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_backend_helper_8cpp_source.xhtml#l00402">402</a> of file <a class="el" href="_backend_helper_8cpp_source.xhtml">BackendHelper.cpp</a>.</p>

<p class="reference">References <a class="el" href="namespacearmnn.xhtml#a56943a0946e5f15e5e58054b8e7a04a4aa603905470e2a5b8c13e96b579ef0dba">armnn::Debug</a>.</p>

<p class="reference">Referenced by <a class="el" href="_backend_helper_8hpp_source.xhtml#l00026">LayerSupportHandle::LayerSupportHandle()</a>.</p>
<div class="fragment"><div class="line"><a name="l00405"></a><span class="lineno">  405</span>&#160;{</div><div class="line"><a name="l00406"></a><span class="lineno">  406</span>&#160;    <a class="code" href="namespacearmnn.xhtml#a14275495042ea02d0348dd70eeaf3d68">TensorInfos</a> infos{input, output};</div><div class="line"><a name="l00407"></a><span class="lineno">  407</span>&#160;</div><div class="line"><a name="l00408"></a><span class="lineno">  408</span>&#160;    <span class="keywordflow">return</span> m_LayerSupport-&gt;IsLayerSupported(<a class="code" href="namespacearmnn.xhtml#a56943a0946e5f15e5e58054b8e7a04a4aa603905470e2a5b8c13e96b579ef0dba">LayerType::Debug</a>,</div><div class="line"><a name="l00409"></a><span class="lineno">  409</span>&#160;                                            infos,</div><div class="line"><a name="l00410"></a><span class="lineno">  410</span>&#160;                                            BaseDescriptor(),</div><div class="line"><a name="l00411"></a><span class="lineno">  411</span>&#160;                                            EmptyOptional(),</div><div class="line"><a name="l00412"></a><span class="lineno">  412</span>&#160;                                            EmptyOptional(),</div><div class="line"><a name="l00413"></a><span class="lineno">  413</span>&#160;                                            reasonIfUnsupported);</div><div class="line"><a name="l00414"></a><span class="lineno">  414</span>&#160;}</div><div class="ttc" id="namespacearmnn_xhtml_a14275495042ea02d0348dd70eeaf3d68"><div class="ttname"><a href="namespacearmnn.xhtml#a14275495042ea02d0348dd70eeaf3d68">armnn::TensorInfos</a></div><div class="ttdeci">std::vector&lt; TensorInfo &gt; TensorInfos</div><div class="ttdef"><b>Definition:</b> <a href="_backend_helper_8cpp_source.xhtml#l00151">BackendHelper.cpp:151</a></div></div>
<div class="ttc" id="namespacearmnn_xhtml_a56943a0946e5f15e5e58054b8e7a04a4aa603905470e2a5b8c13e96b579ef0dba"><div class="ttname"><a href="namespacearmnn.xhtml#a56943a0946e5f15e5e58054b8e7a04a4aa603905470e2a5b8c13e96b579ef0dba">armnn::LayerType::Debug</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="adc976b556bb527809f0ea9d8fec9845e"></a>
<h2 class="memtitle"><span class="permalink"><a href="#adc976b556bb527809f0ea9d8fec9845e">&#9670;&nbsp;</a></span>IsDepthToSpaceSupported()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool IsDepthToSpaceSupported </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;&#160;</td>
          <td class="paramname"><em>input</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;&#160;</td>
          <td class="paramname"><em>output</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="namespacearmnn.xhtml#a3647f60510bc8ddaced01c51b0ee8714">DepthToSpaceDescriptor</a> &amp;&#160;</td>
          <td class="paramname"><em>descriptor</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="classarmnn_1_1_optional.xhtml">Optional</a>&lt; std::string &amp;&gt;&#160;</td>
          <td class="paramname"><em>reasonIfUnsupported</em> = <code><a class="el" href="structarmnn_1_1_empty_optional.xhtml">EmptyOptional</a>()</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_backend_helper_8cpp_source.xhtml#l00416">416</a> of file <a class="el" href="_backend_helper_8cpp_source.xhtml">BackendHelper.cpp</a>.</p>

<p class="reference">References <a class="el" href="namespacearmnn.xhtml#a56943a0946e5f15e5e58054b8e7a04a4a731729ad1b2c0eb9399b62c770b3482d">armnn::DepthToSpace</a>.</p>

<p class="reference">Referenced by <a class="el" href="_backend_helper_8hpp_source.xhtml#l00026">LayerSupportHandle::LayerSupportHandle()</a>.</p>
<div class="fragment"><div class="line"><a name="l00420"></a><span class="lineno">  420</span>&#160;{</div><div class="line"><a name="l00421"></a><span class="lineno">  421</span>&#160;    <a class="code" href="namespacearmnn.xhtml#a14275495042ea02d0348dd70eeaf3d68">TensorInfos</a> infos{input, output};</div><div class="line"><a name="l00422"></a><span class="lineno">  422</span>&#160;</div><div class="line"><a name="l00423"></a><span class="lineno">  423</span>&#160;    <span class="keywordflow">return</span> m_LayerSupport-&gt;IsLayerSupported(<a class="code" href="namespacearmnn.xhtml#a56943a0946e5f15e5e58054b8e7a04a4a731729ad1b2c0eb9399b62c770b3482d">LayerType::DepthToSpace</a>,</div><div class="line"><a name="l00424"></a><span class="lineno">  424</span>&#160;                                            infos,</div><div class="line"><a name="l00425"></a><span class="lineno">  425</span>&#160;                                            descriptor,</div><div class="line"><a name="l00426"></a><span class="lineno">  426</span>&#160;                                            EmptyOptional(),</div><div class="line"><a name="l00427"></a><span class="lineno">  427</span>&#160;                                            EmptyOptional(),</div><div class="line"><a name="l00428"></a><span class="lineno">  428</span>&#160;                                            reasonIfUnsupported);</div><div class="line"><a name="l00429"></a><span class="lineno">  429</span>&#160;}</div><div class="ttc" id="namespacearmnn_xhtml_a56943a0946e5f15e5e58054b8e7a04a4a731729ad1b2c0eb9399b62c770b3482d"><div class="ttname"><a href="namespacearmnn.xhtml#a56943a0946e5f15e5e58054b8e7a04a4a731729ad1b2c0eb9399b62c770b3482d">armnn::LayerType::DepthToSpace</a></div></div>
<div class="ttc" id="namespacearmnn_xhtml_a14275495042ea02d0348dd70eeaf3d68"><div class="ttname"><a href="namespacearmnn.xhtml#a14275495042ea02d0348dd70eeaf3d68">armnn::TensorInfos</a></div><div class="ttdeci">std::vector&lt; TensorInfo &gt; TensorInfos</div><div class="ttdef"><b>Definition:</b> <a href="_backend_helper_8cpp_source.xhtml#l00151">BackendHelper.cpp:151</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="a06519f6650222164f2f382c61b96fc15"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a06519f6650222164f2f382c61b96fc15">&#9670;&nbsp;</a></span>IsDepthwiseConvolutionSupported()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool IsDepthwiseConvolutionSupported </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;&#160;</td>
          <td class="paramname"><em>input</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;&#160;</td>
          <td class="paramname"><em>output</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="structarmnn_1_1_depthwise_convolution2d_descriptor.xhtml">DepthwiseConvolution2dDescriptor</a> &amp;&#160;</td>
          <td class="paramname"><em>descriptor</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;&#160;</td>
          <td class="paramname"><em>weights</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_optional.xhtml">Optional</a>&lt; <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &gt; &amp;&#160;</td>
          <td class="paramname"><em>biases</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="classarmnn_1_1_optional.xhtml">Optional</a>&lt; std::string &amp;&gt;&#160;</td>
          <td class="paramname"><em>reasonIfUnsupported</em> = <code><a class="el" href="structarmnn_1_1_empty_optional.xhtml">EmptyOptional</a>()</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_backend_helper_8cpp_source.xhtml#l00431">431</a> of file <a class="el" href="_backend_helper_8cpp_source.xhtml">BackendHelper.cpp</a>.</p>

<p class="reference">References <a class="el" href="namespacearmnn.xhtml#a56943a0946e5f15e5e58054b8e7a04a4af97adbfc88b7012a0243215b1076e7e7">armnn::DepthwiseConvolution2d</a>, <a class="el" href="_optional_8hpp_source.xhtml#l00053">OptionalBase::has_value()</a>, and <a class="el" href="_optional_8hpp_source.xhtml#l00146">OptionalReferenceSwitch&lt; std::is_reference&lt; T &gt;::value, T &gt;::value()</a>.</p>

<p class="reference">Referenced by <a class="el" href="_backend_helper_8hpp_source.xhtml#l00026">LayerSupportHandle::LayerSupportHandle()</a>.</p>
<div class="fragment"><div class="line"><a name="l00438"></a><span class="lineno">  438</span>&#160;{</div><div class="line"><a name="l00439"></a><span class="lineno">  439</span>&#160;    TensorInfo biasesVal =  biases.has_value() ? biases.value() : TensorInfo();</div><div class="line"><a name="l00440"></a><span class="lineno">  440</span>&#160;    <a class="code" href="namespacearmnn.xhtml#a14275495042ea02d0348dd70eeaf3d68">TensorInfos</a> infos{input, output, weights, biasesVal};</div><div class="line"><a name="l00441"></a><span class="lineno">  441</span>&#160;</div><div class="line"><a name="l00442"></a><span class="lineno">  442</span>&#160;    <span class="keywordflow">return</span> m_LayerSupport-&gt;IsLayerSupported(<a class="code" href="namespacearmnn.xhtml#a56943a0946e5f15e5e58054b8e7a04a4af97adbfc88b7012a0243215b1076e7e7">LayerType::DepthwiseConvolution2d</a>,</div><div class="line"><a name="l00443"></a><span class="lineno">  443</span>&#160;                                            infos,</div><div class="line"><a name="l00444"></a><span class="lineno">  444</span>&#160;                                            descriptor,</div><div class="line"><a name="l00445"></a><span class="lineno">  445</span>&#160;                                            EmptyOptional(),</div><div class="line"><a name="l00446"></a><span class="lineno">  446</span>&#160;                                            EmptyOptional(),</div><div class="line"><a name="l00447"></a><span class="lineno">  447</span>&#160;                                            reasonIfUnsupported);</div><div class="line"><a name="l00448"></a><span class="lineno">  448</span>&#160;}</div><div class="ttc" id="namespacearmnn_xhtml_a56943a0946e5f15e5e58054b8e7a04a4af97adbfc88b7012a0243215b1076e7e7"><div class="ttname"><a href="namespacearmnn.xhtml#a56943a0946e5f15e5e58054b8e7a04a4af97adbfc88b7012a0243215b1076e7e7">armnn::LayerType::DepthwiseConvolution2d</a></div></div>
<div class="ttc" id="namespacearmnn_xhtml_a14275495042ea02d0348dd70eeaf3d68"><div class="ttname"><a href="namespacearmnn.xhtml#a14275495042ea02d0348dd70eeaf3d68">armnn::TensorInfos</a></div><div class="ttdeci">std::vector&lt; TensorInfo &gt; TensorInfos</div><div class="ttdef"><b>Definition:</b> <a href="_backend_helper_8cpp_source.xhtml#l00151">BackendHelper.cpp:151</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="acf38f18a6c7c7658b560e1ba331b4bbb"></a>
<h2 class="memtitle"><span class="permalink"><a href="#acf38f18a6c7c7658b560e1ba331b4bbb">&#9670;&nbsp;</a></span>IsDequantizeSupported()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool IsDequantizeSupported </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;&#160;</td>
          <td class="paramname"><em>input</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;&#160;</td>
          <td class="paramname"><em>output</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="classarmnn_1_1_optional.xhtml">Optional</a>&lt; std::string &amp;&gt;&#160;</td>
          <td class="paramname"><em>reasonIfUnsupported</em> = <code><a class="el" href="structarmnn_1_1_empty_optional.xhtml">EmptyOptional</a>()</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_backend_helper_8cpp_source.xhtml#l00450">450</a> of file <a class="el" href="_backend_helper_8cpp_source.xhtml">BackendHelper.cpp</a>.</p>

<p class="reference">References <a class="el" href="namespacearmnn.xhtml#a56943a0946e5f15e5e58054b8e7a04a4a9bc35e069257a508e14ed82965a8661d">armnn::Dequantize</a>.</p>

<p class="reference">Referenced by <a class="el" href="_backend_helper_8hpp_source.xhtml#l00026">LayerSupportHandle::LayerSupportHandle()</a>.</p>
<div class="fragment"><div class="line"><a name="l00453"></a><span class="lineno">  453</span>&#160;{</div><div class="line"><a name="l00454"></a><span class="lineno">  454</span>&#160;    <a class="code" href="namespacearmnn.xhtml#a14275495042ea02d0348dd70eeaf3d68">TensorInfos</a> infos{input, output};</div><div class="line"><a name="l00455"></a><span class="lineno">  455</span>&#160;</div><div class="line"><a name="l00456"></a><span class="lineno">  456</span>&#160;    <span class="keywordflow">return</span> m_LayerSupport-&gt;IsLayerSupported(<a class="code" href="namespacearmnn.xhtml#a56943a0946e5f15e5e58054b8e7a04a4a9bc35e069257a508e14ed82965a8661d">LayerType::Dequantize</a>,</div><div class="line"><a name="l00457"></a><span class="lineno">  457</span>&#160;                                            infos,</div><div class="line"><a name="l00458"></a><span class="lineno">  458</span>&#160;                                            BaseDescriptor(),</div><div class="line"><a name="l00459"></a><span class="lineno">  459</span>&#160;                                            EmptyOptional(),</div><div class="line"><a name="l00460"></a><span class="lineno">  460</span>&#160;                                            EmptyOptional(),</div><div class="line"><a name="l00461"></a><span class="lineno">  461</span>&#160;                                            reasonIfUnsupported);</div><div class="line"><a name="l00462"></a><span class="lineno">  462</span>&#160;}</div><div class="ttc" id="namespacearmnn_xhtml_a56943a0946e5f15e5e58054b8e7a04a4a9bc35e069257a508e14ed82965a8661d"><div class="ttname"><a href="namespacearmnn.xhtml#a56943a0946e5f15e5e58054b8e7a04a4a9bc35e069257a508e14ed82965a8661d">armnn::LayerType::Dequantize</a></div></div>
<div class="ttc" id="namespacearmnn_xhtml_a14275495042ea02d0348dd70eeaf3d68"><div class="ttname"><a href="namespacearmnn.xhtml#a14275495042ea02d0348dd70eeaf3d68">armnn::TensorInfos</a></div><div class="ttdeci">std::vector&lt; TensorInfo &gt; TensorInfos</div><div class="ttdef"><b>Definition:</b> <a href="_backend_helper_8cpp_source.xhtml#l00151">BackendHelper.cpp:151</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="a571012cfd098c2866003b644729b3ec6"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a571012cfd098c2866003b644729b3ec6">&#9670;&nbsp;</a></span>IsDetectionPostProcessSupported()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool IsDetectionPostProcessSupported </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;&#160;</td>
          <td class="paramname"><em>boxEncodings</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;&#160;</td>
          <td class="paramname"><em>scores</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;&#160;</td>
          <td class="paramname"><em>anchors</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;&#160;</td>
          <td class="paramname"><em>detectionBoxes</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;&#160;</td>
          <td class="paramname"><em>detectionClasses</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;&#160;</td>
          <td class="paramname"><em>detectionScores</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;&#160;</td>
          <td class="paramname"><em>numDetections</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="structarmnn_1_1_detection_post_process_descriptor.xhtml">DetectionPostProcessDescriptor</a> &amp;&#160;</td>
          <td class="paramname"><em>descriptor</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="classarmnn_1_1_optional.xhtml">Optional</a>&lt; std::string &amp;&gt;&#160;</td>
          <td class="paramname"><em>reasonIfUnsupported</em> = <code><a class="el" href="structarmnn_1_1_empty_optional.xhtml">EmptyOptional</a>()</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_backend_helper_8cpp_source.xhtml#l00464">464</a> of file <a class="el" href="_backend_helper_8cpp_source.xhtml">BackendHelper.cpp</a>.</p>

<p class="reference">References <a class="el" href="namespacearmnn.xhtml#a56943a0946e5f15e5e58054b8e7a04a4a1db19222ac424bd7162142ddf929fd2a">armnn::DetectionPostProcess</a>.</p>

<p class="reference">Referenced by <a class="el" href="_backend_helper_8hpp_source.xhtml#l00026">LayerSupportHandle::LayerSupportHandle()</a>.</p>
<div class="fragment"><div class="line"><a name="l00473"></a><span class="lineno">  473</span>&#160;{</div><div class="line"><a name="l00474"></a><span class="lineno">  474</span>&#160;    <a class="code" href="namespacearmnn.xhtml#a14275495042ea02d0348dd70eeaf3d68">TensorInfos</a> infos{boxEncodings, scores, anchors, detectionBoxes, detectionClasses, detectionScores, numDetections};</div><div class="line"><a name="l00475"></a><span class="lineno">  475</span>&#160;</div><div class="line"><a name="l00476"></a><span class="lineno">  476</span>&#160;    <span class="keywordflow">return</span> m_LayerSupport-&gt;IsLayerSupported(<a class="code" href="namespacearmnn.xhtml#a56943a0946e5f15e5e58054b8e7a04a4a1db19222ac424bd7162142ddf929fd2a">LayerType::DetectionPostProcess</a>,</div><div class="line"><a name="l00477"></a><span class="lineno">  477</span>&#160;                                            infos,</div><div class="line"><a name="l00478"></a><span class="lineno">  478</span>&#160;                                            descriptor,</div><div class="line"><a name="l00479"></a><span class="lineno">  479</span>&#160;                                            EmptyOptional(),</div><div class="line"><a name="l00480"></a><span class="lineno">  480</span>&#160;                                            EmptyOptional(),</div><div class="line"><a name="l00481"></a><span class="lineno">  481</span>&#160;                                            reasonIfUnsupported);</div><div class="line"><a name="l00482"></a><span class="lineno">  482</span>&#160;}</div><div class="ttc" id="namespacearmnn_xhtml_a56943a0946e5f15e5e58054b8e7a04a4a1db19222ac424bd7162142ddf929fd2a"><div class="ttname"><a href="namespacearmnn.xhtml#a56943a0946e5f15e5e58054b8e7a04a4a1db19222ac424bd7162142ddf929fd2a">armnn::LayerType::DetectionPostProcess</a></div></div>
<div class="ttc" id="namespacearmnn_xhtml_a14275495042ea02d0348dd70eeaf3d68"><div class="ttname"><a href="namespacearmnn.xhtml#a14275495042ea02d0348dd70eeaf3d68">armnn::TensorInfos</a></div><div class="ttdeci">std::vector&lt; TensorInfo &gt; TensorInfos</div><div class="ttdef"><b>Definition:</b> <a href="_backend_helper_8cpp_source.xhtml#l00151">BackendHelper.cpp:151</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="a3f44c42301c6aacea1de7c1ec457394d"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a3f44c42301c6aacea1de7c1ec457394d">&#9670;&nbsp;</a></span>IsDilatedDepthwiseConvolutionSupported()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool IsDilatedDepthwiseConvolutionSupported </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;&#160;</td>
          <td class="paramname"><em>input</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;&#160;</td>
          <td class="paramname"><em>output</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="structarmnn_1_1_depthwise_convolution2d_descriptor.xhtml">DepthwiseConvolution2dDescriptor</a> &amp;&#160;</td>
          <td class="paramname"><em>descriptor</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;&#160;</td>
          <td class="paramname"><em>weights</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_optional.xhtml">Optional</a>&lt; <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &gt; &amp;&#160;</td>
          <td class="paramname"><em>biases</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="classarmnn_1_1_optional.xhtml">Optional</a>&lt; std::string &amp;&gt;&#160;</td>
          <td class="paramname"><em>reasonIfUnsupported</em> = <code><a class="el" href="structarmnn_1_1_empty_optional.xhtml">EmptyOptional</a>()</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_backend_helper_8cpp_source.xhtml#l00484">484</a> of file <a class="el" href="_backend_helper_8cpp_source.xhtml">BackendHelper.cpp</a>.</p>

<p class="reference">References <a class="el" href="namespacearmnn.xhtml#a56943a0946e5f15e5e58054b8e7a04a4af97adbfc88b7012a0243215b1076e7e7">armnn::DepthwiseConvolution2d</a>, <a class="el" href="_optional_8hpp_source.xhtml#l00053">OptionalBase::has_value()</a>, and <a class="el" href="_optional_8hpp_source.xhtml#l00146">OptionalReferenceSwitch&lt; std::is_reference&lt; T &gt;::value, T &gt;::value()</a>.</p>

<p class="reference">Referenced by <a class="el" href="_backend_helper_8hpp_source.xhtml#l00026">LayerSupportHandle::LayerSupportHandle()</a>.</p>
<div class="fragment"><div class="line"><a name="l00491"></a><span class="lineno">  491</span>&#160;{</div><div class="line"><a name="l00492"></a><span class="lineno">  492</span>&#160;    TensorInfo biasesVal =  biases.has_value() ? biases.value() : TensorInfo();</div><div class="line"><a name="l00493"></a><span class="lineno">  493</span>&#160;    <a class="code" href="namespacearmnn.xhtml#a14275495042ea02d0348dd70eeaf3d68">TensorInfos</a> infos{input, output, weights, biasesVal};</div><div class="line"><a name="l00494"></a><span class="lineno">  494</span>&#160;</div><div class="line"><a name="l00495"></a><span class="lineno">  495</span>&#160;    <span class="keywordflow">return</span> m_LayerSupport-&gt;IsLayerSupported(<a class="code" href="namespacearmnn.xhtml#a56943a0946e5f15e5e58054b8e7a04a4af97adbfc88b7012a0243215b1076e7e7">LayerType::DepthwiseConvolution2d</a>,</div><div class="line"><a name="l00496"></a><span class="lineno">  496</span>&#160;                                            infos,</div><div class="line"><a name="l00497"></a><span class="lineno">  497</span>&#160;                                            descriptor,</div><div class="line"><a name="l00498"></a><span class="lineno">  498</span>&#160;                                            EmptyOptional(),</div><div class="line"><a name="l00499"></a><span class="lineno">  499</span>&#160;                                            EmptyOptional(),</div><div class="line"><a name="l00500"></a><span class="lineno">  500</span>&#160;                                            reasonIfUnsupported);</div><div class="line"><a name="l00501"></a><span class="lineno">  501</span>&#160;}</div><div class="ttc" id="namespacearmnn_xhtml_a56943a0946e5f15e5e58054b8e7a04a4af97adbfc88b7012a0243215b1076e7e7"><div class="ttname"><a href="namespacearmnn.xhtml#a56943a0946e5f15e5e58054b8e7a04a4af97adbfc88b7012a0243215b1076e7e7">armnn::LayerType::DepthwiseConvolution2d</a></div></div>
<div class="ttc" id="namespacearmnn_xhtml_a14275495042ea02d0348dd70eeaf3d68"><div class="ttname"><a href="namespacearmnn.xhtml#a14275495042ea02d0348dd70eeaf3d68">armnn::TensorInfos</a></div><div class="ttdeci">std::vector&lt; TensorInfo &gt; TensorInfos</div><div class="ttdef"><b>Definition:</b> <a href="_backend_helper_8cpp_source.xhtml#l00151">BackendHelper.cpp:151</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="a26846c9dc8e65a30fbdfca7e2d80fd7b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a26846c9dc8e65a30fbdfca7e2d80fd7b">&#9670;&nbsp;</a></span>IsDivisionSupported()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool IsDivisionSupported </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;&#160;</td>
          <td class="paramname"><em>input0</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;&#160;</td>
          <td class="paramname"><em>input1</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;&#160;</td>
          <td class="paramname"><em>output</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="classarmnn_1_1_optional.xhtml">Optional</a>&lt; std::string &amp;&gt;&#160;</td>
          <td class="paramname"><em>reasonIfUnsupported</em> = <code><a class="el" href="structarmnn_1_1_empty_optional.xhtml">EmptyOptional</a>()</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_backend_helper_8cpp_source.xhtml#l00503">503</a> of file <a class="el" href="_backend_helper_8cpp_source.xhtml">BackendHelper.cpp</a>.</p>

<p class="reference">References <a class="el" href="namespacearmnn.xhtml#a56943a0946e5f15e5e58054b8e7a04a4a3025cdaab2deb0bb2cd642449e570833">armnn::Division</a>.</p>

<p class="reference">Referenced by <a class="el" href="_backend_helper_8hpp_source.xhtml#l00026">LayerSupportHandle::LayerSupportHandle()</a>.</p>
<div class="fragment"><div class="line"><a name="l00507"></a><span class="lineno">  507</span>&#160;{</div><div class="line"><a name="l00508"></a><span class="lineno">  508</span>&#160;    <a class="code" href="namespacearmnn.xhtml#a14275495042ea02d0348dd70eeaf3d68">TensorInfos</a> infos{input0, input1, output};</div><div class="line"><a name="l00509"></a><span class="lineno">  509</span>&#160;</div><div class="line"><a name="l00510"></a><span class="lineno">  510</span>&#160;    <span class="keywordflow">return</span> m_LayerSupport-&gt;IsLayerSupported(<a class="code" href="namespacearmnn.xhtml#a56943a0946e5f15e5e58054b8e7a04a4a3025cdaab2deb0bb2cd642449e570833">LayerType::Division</a>,</div><div class="line"><a name="l00511"></a><span class="lineno">  511</span>&#160;                                            infos,</div><div class="line"><a name="l00512"></a><span class="lineno">  512</span>&#160;                                            BaseDescriptor(),</div><div class="line"><a name="l00513"></a><span class="lineno">  513</span>&#160;                                            EmptyOptional(),</div><div class="line"><a name="l00514"></a><span class="lineno">  514</span>&#160;                                            EmptyOptional(),</div><div class="line"><a name="l00515"></a><span class="lineno">  515</span>&#160;                                            reasonIfUnsupported);</div><div class="line"><a name="l00516"></a><span class="lineno">  516</span>&#160;}</div><div class="ttc" id="namespacearmnn_xhtml_a14275495042ea02d0348dd70eeaf3d68"><div class="ttname"><a href="namespacearmnn.xhtml#a14275495042ea02d0348dd70eeaf3d68">armnn::TensorInfos</a></div><div class="ttdeci">std::vector&lt; TensorInfo &gt; TensorInfos</div><div class="ttdef"><b>Definition:</b> <a href="_backend_helper_8cpp_source.xhtml#l00151">BackendHelper.cpp:151</a></div></div>
<div class="ttc" id="namespacearmnn_xhtml_a56943a0946e5f15e5e58054b8e7a04a4a3025cdaab2deb0bb2cd642449e570833"><div class="ttname"><a href="namespacearmnn.xhtml#a56943a0946e5f15e5e58054b8e7a04a4a3025cdaab2deb0bb2cd642449e570833">armnn::LayerType::Division</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="a514a023732c3440542f92bfbd4e4352a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a514a023732c3440542f92bfbd4e4352a">&#9670;&nbsp;</a></span>IsElementwiseUnarySupported()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool IsElementwiseUnarySupported </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;&#160;</td>
          <td class="paramname"><em>input</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;&#160;</td>
          <td class="paramname"><em>output</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="structarmnn_1_1_elementwise_unary_descriptor.xhtml">ElementwiseUnaryDescriptor</a> &amp;&#160;</td>
          <td class="paramname"><em>descriptor</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="classarmnn_1_1_optional.xhtml">Optional</a>&lt; std::string &amp;&gt;&#160;</td>
          <td class="paramname"><em>reasonIfUnsupported</em> = <code><a class="el" href="structarmnn_1_1_empty_optional.xhtml">EmptyOptional</a>()</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_backend_helper_8cpp_source.xhtml#l00518">518</a> of file <a class="el" href="_backend_helper_8cpp_source.xhtml">BackendHelper.cpp</a>.</p>

<p class="reference">References <a class="el" href="namespacearmnn.xhtml#a56943a0946e5f15e5e58054b8e7a04a4abcd30d7ea97ad20c2cddc0f47e6b70c7">armnn::ElementwiseUnary</a>.</p>

<p class="reference">Referenced by <a class="el" href="_backend_helper_8hpp_source.xhtml#l00026">LayerSupportHandle::LayerSupportHandle()</a>.</p>
<div class="fragment"><div class="line"><a name="l00522"></a><span class="lineno">  522</span>&#160;{</div><div class="line"><a name="l00523"></a><span class="lineno">  523</span>&#160;    <a class="code" href="namespacearmnn.xhtml#a14275495042ea02d0348dd70eeaf3d68">TensorInfos</a> infos{input, output};</div><div class="line"><a name="l00524"></a><span class="lineno">  524</span>&#160;</div><div class="line"><a name="l00525"></a><span class="lineno">  525</span>&#160;    <span class="keywordflow">return</span> m_LayerSupport-&gt;IsLayerSupported(<a class="code" href="namespacearmnn.xhtml#a56943a0946e5f15e5e58054b8e7a04a4abcd30d7ea97ad20c2cddc0f47e6b70c7">LayerType::ElementwiseUnary</a>,</div><div class="line"><a name="l00526"></a><span class="lineno">  526</span>&#160;                                            infos,</div><div class="line"><a name="l00527"></a><span class="lineno">  527</span>&#160;                                            descriptor,</div><div class="line"><a name="l00528"></a><span class="lineno">  528</span>&#160;                                            EmptyOptional(),</div><div class="line"><a name="l00529"></a><span class="lineno">  529</span>&#160;                                            EmptyOptional(),</div><div class="line"><a name="l00530"></a><span class="lineno">  530</span>&#160;                                            reasonIfUnsupported);</div><div class="line"><a name="l00531"></a><span class="lineno">  531</span>&#160;}</div><div class="ttc" id="namespacearmnn_xhtml_a56943a0946e5f15e5e58054b8e7a04a4abcd30d7ea97ad20c2cddc0f47e6b70c7"><div class="ttname"><a href="namespacearmnn.xhtml#a56943a0946e5f15e5e58054b8e7a04a4abcd30d7ea97ad20c2cddc0f47e6b70c7">armnn::LayerType::ElementwiseUnary</a></div></div>
<div class="ttc" id="namespacearmnn_xhtml_a14275495042ea02d0348dd70eeaf3d68"><div class="ttname"><a href="namespacearmnn.xhtml#a14275495042ea02d0348dd70eeaf3d68">armnn::TensorInfos</a></div><div class="ttdeci">std::vector&lt; TensorInfo &gt; TensorInfos</div><div class="ttdef"><b>Definition:</b> <a href="_backend_helper_8cpp_source.xhtml#l00151">BackendHelper.cpp:151</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="a178bff959f365309313508686b17a256"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a178bff959f365309313508686b17a256">&#9670;&nbsp;</a></span>IsFakeQuantizationSupported()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool IsFakeQuantizationSupported </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;&#160;</td>
          <td class="paramname"><em>input</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="structarmnn_1_1_fake_quantization_descriptor.xhtml">FakeQuantizationDescriptor</a> &amp;&#160;</td>
          <td class="paramname"><em>descriptor</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="classarmnn_1_1_optional.xhtml">Optional</a>&lt; std::string &amp;&gt;&#160;</td>
          <td class="paramname"><em>reasonIfUnsupported</em> = <code><a class="el" href="structarmnn_1_1_empty_optional.xhtml">EmptyOptional</a>()</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_backend_helper_8cpp_source.xhtml#l00533">533</a> of file <a class="el" href="_backend_helper_8cpp_source.xhtml">BackendHelper.cpp</a>.</p>

<p class="reference">References <a class="el" href="namespacearmnn.xhtml#a56943a0946e5f15e5e58054b8e7a04a4a3489c7b05e180496cb2ce8ac73887f48">armnn::FakeQuantization</a>.</p>

<p class="reference">Referenced by <a class="el" href="_backend_helper_8hpp_source.xhtml#l00026">LayerSupportHandle::LayerSupportHandle()</a>.</p>
<div class="fragment"><div class="line"><a name="l00536"></a><span class="lineno">  536</span>&#160;{</div><div class="line"><a name="l00537"></a><span class="lineno">  537</span>&#160;    <a class="code" href="namespacearmnn.xhtml#a14275495042ea02d0348dd70eeaf3d68">TensorInfos</a> infos{input};</div><div class="line"><a name="l00538"></a><span class="lineno">  538</span>&#160;</div><div class="line"><a name="l00539"></a><span class="lineno">  539</span>&#160;    <span class="keywordflow">return</span> m_LayerSupport-&gt;IsLayerSupported(<a class="code" href="namespacearmnn.xhtml#a56943a0946e5f15e5e58054b8e7a04a4a3489c7b05e180496cb2ce8ac73887f48">LayerType::FakeQuantization</a>,</div><div class="line"><a name="l00540"></a><span class="lineno">  540</span>&#160;                                            infos,</div><div class="line"><a name="l00541"></a><span class="lineno">  541</span>&#160;                                            descriptor,</div><div class="line"><a name="l00542"></a><span class="lineno">  542</span>&#160;                                            EmptyOptional(),</div><div class="line"><a name="l00543"></a><span class="lineno">  543</span>&#160;                                            EmptyOptional(),</div><div class="line"><a name="l00544"></a><span class="lineno">  544</span>&#160;                                            reasonIfUnsupported);</div><div class="line"><a name="l00545"></a><span class="lineno">  545</span>&#160;}</div><div class="ttc" id="namespacearmnn_xhtml_a56943a0946e5f15e5e58054b8e7a04a4a3489c7b05e180496cb2ce8ac73887f48"><div class="ttname"><a href="namespacearmnn.xhtml#a56943a0946e5f15e5e58054b8e7a04a4a3489c7b05e180496cb2ce8ac73887f48">armnn::LayerType::FakeQuantization</a></div></div>
<div class="ttc" id="namespacearmnn_xhtml_a14275495042ea02d0348dd70eeaf3d68"><div class="ttname"><a href="namespacearmnn.xhtml#a14275495042ea02d0348dd70eeaf3d68">armnn::TensorInfos</a></div><div class="ttdeci">std::vector&lt; TensorInfo &gt; TensorInfos</div><div class="ttdef"><b>Definition:</b> <a href="_backend_helper_8cpp_source.xhtml#l00151">BackendHelper.cpp:151</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="a8328387b617cf76c71bc18661a71b037"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a8328387b617cf76c71bc18661a71b037">&#9670;&nbsp;</a></span>IsFillSupported()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool IsFillSupported </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;&#160;</td>
          <td class="paramname"><em>input</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;&#160;</td>
          <td class="paramname"><em>output</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="structarmnn_1_1_fill_descriptor.xhtml">FillDescriptor</a> &amp;&#160;</td>
          <td class="paramname"><em>descriptor</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="classarmnn_1_1_optional.xhtml">Optional</a>&lt; std::string &amp;&gt;&#160;</td>
          <td class="paramname"><em>reasonIfUnsupported</em> = <code><a class="el" href="structarmnn_1_1_empty_optional.xhtml">EmptyOptional</a>()</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_backend_helper_8cpp_source.xhtml#l00547">547</a> of file <a class="el" href="_backend_helper_8cpp_source.xhtml">BackendHelper.cpp</a>.</p>

<p class="reference">References <a class="el" href="namespacearmnn.xhtml#a56943a0946e5f15e5e58054b8e7a04a4adb3e3f51c9107e26c9bccf9a188ce2ed">armnn::Fill</a>.</p>

<p class="reference">Referenced by <a class="el" href="_backend_helper_8hpp_source.xhtml#l00026">LayerSupportHandle::LayerSupportHandle()</a>.</p>
<div class="fragment"><div class="line"><a name="l00551"></a><span class="lineno">  551</span>&#160;{</div><div class="line"><a name="l00552"></a><span class="lineno">  552</span>&#160;    <a class="code" href="namespacearmnn.xhtml#a14275495042ea02d0348dd70eeaf3d68">TensorInfos</a> infos{input, output};</div><div class="line"><a name="l00553"></a><span class="lineno">  553</span>&#160;</div><div class="line"><a name="l00554"></a><span class="lineno">  554</span>&#160;    <span class="keywordflow">return</span> m_LayerSupport-&gt;IsLayerSupported(<a class="code" href="namespacearmnn.xhtml#a56943a0946e5f15e5e58054b8e7a04a4adb3e3f51c9107e26c9bccf9a188ce2ed">LayerType::Fill</a>,</div><div class="line"><a name="l00555"></a><span class="lineno">  555</span>&#160;                                            infos,</div><div class="line"><a name="l00556"></a><span class="lineno">  556</span>&#160;                                            descriptor,</div><div class="line"><a name="l00557"></a><span class="lineno">  557</span>&#160;                                            EmptyOptional(),</div><div class="line"><a name="l00558"></a><span class="lineno">  558</span>&#160;                                            EmptyOptional(),</div><div class="line"><a name="l00559"></a><span class="lineno">  559</span>&#160;                                            reasonIfUnsupported);</div><div class="line"><a name="l00560"></a><span class="lineno">  560</span>&#160;}</div><div class="ttc" id="namespacearmnn_xhtml_a56943a0946e5f15e5e58054b8e7a04a4adb3e3f51c9107e26c9bccf9a188ce2ed"><div class="ttname"><a href="namespacearmnn.xhtml#a56943a0946e5f15e5e58054b8e7a04a4adb3e3f51c9107e26c9bccf9a188ce2ed">armnn::LayerType::Fill</a></div></div>
<div class="ttc" id="namespacearmnn_xhtml_a14275495042ea02d0348dd70eeaf3d68"><div class="ttname"><a href="namespacearmnn.xhtml#a14275495042ea02d0348dd70eeaf3d68">armnn::TensorInfos</a></div><div class="ttdeci">std::vector&lt; TensorInfo &gt; TensorInfos</div><div class="ttdef"><b>Definition:</b> <a href="_backend_helper_8cpp_source.xhtml#l00151">BackendHelper.cpp:151</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="ae5c5762e3c571a5553941509a3367efe"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ae5c5762e3c571a5553941509a3367efe">&#9670;&nbsp;</a></span>IsFloorSupported()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool IsFloorSupported </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;&#160;</td>
          <td class="paramname"><em>input</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;&#160;</td>
          <td class="paramname"><em>output</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="classarmnn_1_1_optional.xhtml">Optional</a>&lt; std::string &amp;&gt;&#160;</td>
          <td class="paramname"><em>reasonIfUnsupported</em> = <code><a class="el" href="structarmnn_1_1_empty_optional.xhtml">EmptyOptional</a>()</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_backend_helper_8cpp_source.xhtml#l00562">562</a> of file <a class="el" href="_backend_helper_8cpp_source.xhtml">BackendHelper.cpp</a>.</p>

<p class="reference">References <a class="el" href="namespacearmnn.xhtml#adf2e5515c4c36a3e7e46bb8b83c6754eaf3f6d0343d56ce88ce7958170ed05cb3">armnn::Floor</a>.</p>

<p class="reference">Referenced by <a class="el" href="_backend_helper_8hpp_source.xhtml#l00026">LayerSupportHandle::LayerSupportHandle()</a>.</p>
<div class="fragment"><div class="line"><a name="l00565"></a><span class="lineno">  565</span>&#160;{</div><div class="line"><a name="l00566"></a><span class="lineno">  566</span>&#160;    <a class="code" href="namespacearmnn.xhtml#a14275495042ea02d0348dd70eeaf3d68">TensorInfos</a> infos{input, output};</div><div class="line"><a name="l00567"></a><span class="lineno">  567</span>&#160;</div><div class="line"><a name="l00568"></a><span class="lineno">  568</span>&#160;    <span class="keywordflow">return</span> m_LayerSupport-&gt;IsLayerSupported(<a class="code" href="namespacearmnn.xhtml#adf2e5515c4c36a3e7e46bb8b83c6754eaf3f6d0343d56ce88ce7958170ed05cb3">LayerType::Floor</a>,</div><div class="line"><a name="l00569"></a><span class="lineno">  569</span>&#160;                                            infos,</div><div class="line"><a name="l00570"></a><span class="lineno">  570</span>&#160;                                            BaseDescriptor(),</div><div class="line"><a name="l00571"></a><span class="lineno">  571</span>&#160;                                            EmptyOptional(),</div><div class="line"><a name="l00572"></a><span class="lineno">  572</span>&#160;                                            EmptyOptional(),</div><div class="line"><a name="l00573"></a><span class="lineno">  573</span>&#160;                                            reasonIfUnsupported);</div><div class="line"><a name="l00574"></a><span class="lineno">  574</span>&#160;}</div><div class="ttc" id="namespacearmnn_xhtml_adf2e5515c4c36a3e7e46bb8b83c6754eaf3f6d0343d56ce88ce7958170ed05cb3"><div class="ttname"><a href="namespacearmnn.xhtml#adf2e5515c4c36a3e7e46bb8b83c6754eaf3f6d0343d56ce88ce7958170ed05cb3">armnn::OutputShapeRounding::Floor</a></div></div>
<div class="ttc" id="namespacearmnn_xhtml_a14275495042ea02d0348dd70eeaf3d68"><div class="ttname"><a href="namespacearmnn.xhtml#a14275495042ea02d0348dd70eeaf3d68">armnn::TensorInfos</a></div><div class="ttdeci">std::vector&lt; TensorInfo &gt; TensorInfos</div><div class="ttdef"><b>Definition:</b> <a href="_backend_helper_8cpp_source.xhtml#l00151">BackendHelper.cpp:151</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="a4e7e84ee718a87059ff71d0e803072e4"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a4e7e84ee718a87059ff71d0e803072e4">&#9670;&nbsp;</a></span>IsFullyConnectedSupported()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool IsFullyConnectedSupported </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;&#160;</td>
          <td class="paramname"><em>input</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;&#160;</td>
          <td class="paramname"><em>output</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;&#160;</td>
          <td class="paramname"><em>weights</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;&#160;</td>
          <td class="paramname"><em>biases</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="structarmnn_1_1_fully_connected_descriptor.xhtml">FullyConnectedDescriptor</a> &amp;&#160;</td>
          <td class="paramname"><em>descriptor</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="classarmnn_1_1_optional.xhtml">Optional</a>&lt; std::string &amp;&gt;&#160;</td>
          <td class="paramname"><em>reasonIfUnsupported</em> = <code><a class="el" href="structarmnn_1_1_empty_optional.xhtml">EmptyOptional</a>()</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_backend_helper_8cpp_source.xhtml#l00576">576</a> of file <a class="el" href="_backend_helper_8cpp_source.xhtml">BackendHelper.cpp</a>.</p>

<p class="reference">References <a class="el" href="_logging_8hpp_source.xhtml#l00205">ARMNN_LOG</a>, <a class="el" href="namespacearmnn.xhtml#a56943a0946e5f15e5e58054b8e7a04a4acab78faff25393e9defd1911cb58133e">armnn::FullyConnected</a>, <a class="el" href="_backend_helper_8cpp_source.xhtml#l00030">armnn::GetCapability()</a>, <a class="el" href="_optional_8hpp_source.xhtml#l00053">OptionalBase::has_value()</a>, <a class="el" href="_tensor_8cpp_source.xhtml#l00511">TensorInfo::IsConstant()</a>, <a class="el" href="_backend_id_8hpp_source.xhtml#l00141">BackendId::IsUndefined()</a>, <a class="el" href="_descriptors_8hpp_source.xhtml#l00491">FullyConnectedDescriptor::m_BiasEnabled</a>, <a class="el" href="_descriptors_8hpp_source.xhtml#l00495">FullyConnectedDescriptor::m_ConstantWeights</a>, <a class="el" href="_optional_8hpp_source.xhtml#l00146">OptionalReferenceSwitch&lt; std::is_reference&lt; T &gt;::value, T &gt;::value()</a>, and <a class="el" href="namespacearmnn.xhtml#a4dc0adc6737b5944e7671bee71788407a7b83d3f08fa392b79e3f553b585971cd">armnn::warning</a>.</p>

<p class="reference">Referenced by <a class="el" href="_backend_helper_8hpp_source.xhtml#l00026">LayerSupportHandle::LayerSupportHandle()</a>.</p>
<div class="fragment"><div class="line"><a name="l00582"></a><span class="lineno">  582</span>&#160;{</div><div class="line"><a name="l00583"></a><span class="lineno">  583</span>&#160;    <span class="keywordflow">if</span>(!m_BackendId.<a class="code" href="classarmnn_1_1_backend_id.xhtml#ae36f5197d26d2e429d9c5fc100c2d500">IsUndefined</a>())</div><div class="line"><a name="l00584"></a><span class="lineno">  584</span>&#160;    {</div><div class="line"><a name="l00585"></a><span class="lineno">  585</span>&#160;        <span class="keyword">auto</span> capability = <a class="code" href="namespacearmnn.xhtml#a71c3bdadfe1c69aba2cbf054bff47744">GetCapability</a>(<span class="stringliteral">&quot;ConstantTensorsAsInputs&quot;</span>, m_BackendId);</div><div class="line"><a name="l00586"></a><span class="lineno">  586</span>&#160;        <span class="keywordflow">if</span>(!capability.has_value() || capability.value().GetValue().AsBool() == <span class="keyword">false</span>)</div><div class="line"><a name="l00587"></a><span class="lineno">  587</span>&#160;        {</div><div class="line"><a name="l00588"></a><span class="lineno">  588</span>&#160;            <span class="keywordflow">if</span>(!weights.IsConstant())</div><div class="line"><a name="l00589"></a><span class="lineno">  589</span>&#160;            {</div><div class="line"><a name="l00590"></a><span class="lineno">  590</span>&#160;                <span class="keywordflow">if</span> (reasonIfUnsupported.has_value())</div><div class="line"><a name="l00591"></a><span class="lineno">  591</span>&#160;                {</div><div class="line"><a name="l00592"></a><span class="lineno">  592</span>&#160;                    reasonIfUnsupported.value() =</div><div class="line"><a name="l00593"></a><span class="lineno">  593</span>&#160;                            <span class="stringliteral">&quot;This backend might not support non constant weights. &quot;</span></div><div class="line"><a name="l00594"></a><span class="lineno">  594</span>&#160;                            <span class="stringliteral">&quot;If weights are constant make sure to set IsConstant when creating TensorInfo&quot;</span>;</div><div class="line"><a name="l00595"></a><span class="lineno">  595</span>&#160;                }</div><div class="line"><a name="l00596"></a><span class="lineno">  596</span>&#160;</div><div class="line"><a name="l00597"></a><span class="lineno">  597</span>&#160;                <span class="keywordflow">return</span> <span class="keyword">false</span>;</div><div class="line"><a name="l00598"></a><span class="lineno">  598</span>&#160;            }</div><div class="line"><a name="l00599"></a><span class="lineno">  599</span>&#160;            <span class="keywordflow">if</span>(descriptor.m_BiasEnabled)</div><div class="line"><a name="l00600"></a><span class="lineno">  600</span>&#160;            {</div><div class="line"><a name="l00601"></a><span class="lineno">  601</span>&#160;                <span class="keywordflow">if</span>(!biases.IsConstant())</div><div class="line"><a name="l00602"></a><span class="lineno">  602</span>&#160;                {</div><div class="line"><a name="l00603"></a><span class="lineno">  603</span>&#160;                    <span class="keywordflow">if</span> (reasonIfUnsupported.has_value())</div><div class="line"><a name="l00604"></a><span class="lineno">  604</span>&#160;                    {</div><div class="line"><a name="l00605"></a><span class="lineno">  605</span>&#160;                        reasonIfUnsupported.value() =</div><div class="line"><a name="l00606"></a><span class="lineno">  606</span>&#160;                                <span class="stringliteral">&quot;This backend might not support non constant weights. &quot;</span></div><div class="line"><a name="l00607"></a><span class="lineno">  607</span>&#160;                                <span class="stringliteral">&quot;If weights are constant make sure to set IsConstant when creating TensorInfo&quot;</span>;</div><div class="line"><a name="l00608"></a><span class="lineno">  608</span>&#160;                    }</div><div class="line"><a name="l00609"></a><span class="lineno">  609</span>&#160;                    <span class="keywordflow">return</span> <span class="keyword">false</span>;</div><div class="line"><a name="l00610"></a><span class="lineno">  610</span>&#160;                }</div><div class="line"><a name="l00611"></a><span class="lineno">  611</span>&#160;            }</div><div class="line"><a name="l00612"></a><span class="lineno">  612</span>&#160;</div><div class="line"><a name="l00613"></a><span class="lineno">  613</span>&#160;            <span class="comment">// At the first stage we will only print a warning. this is to give</span></div><div class="line"><a name="l00614"></a><span class="lineno">  614</span>&#160;            <span class="comment">// backend developers a chance to adopt and read weights from input slots.</span></div><div class="line"><a name="l00615"></a><span class="lineno">  615</span>&#160;            <a class="code" href="_logging_8hpp.xhtml#a7b6ad073975f437ec38ca7d20154727f">ARMNN_LOG</a>(<a class="code" href="namespacearmnn.xhtml#a4dc0adc6737b5944e7671bee71788407a7b83d3f08fa392b79e3f553b585971cd">warning</a>) &lt;&lt; <span class="stringliteral">&quot;The backend makes use of a deprecated interface to read constant tensors. &quot;</span></div><div class="line"><a name="l00616"></a><span class="lineno">  616</span>&#160;                                  <span class="stringliteral">&quot;If you are a backend developer please find more information in our &quot;</span></div><div class="line"><a name="l00617"></a><span class="lineno">  617</span>&#160;                                  <span class="stringliteral">&quot;doxygen documentation on github https://github.com/ARM-software/armnn &quot;</span></div><div class="line"><a name="l00618"></a><span class="lineno">  618</span>&#160;                                  <span class="stringliteral">&quot;under the keyword &#39;ConstTensorsAsInputs&#39;.&quot;</span>;</div><div class="line"><a name="l00619"></a><span class="lineno">  619</span>&#160;        }</div><div class="line"><a name="l00620"></a><span class="lineno">  620</span>&#160;</div><div class="line"><a name="l00621"></a><span class="lineno">  621</span>&#160;        <span class="keywordflow">if</span>(!descriptor.m_ConstantWeights)</div><div class="line"><a name="l00622"></a><span class="lineno">  622</span>&#160;        {</div><div class="line"><a name="l00623"></a><span class="lineno">  623</span>&#160;            capability = <a class="code" href="namespacearmnn.xhtml#a71c3bdadfe1c69aba2cbf054bff47744">GetCapability</a>(<span class="stringliteral">&quot;NonConstWeights&quot;</span>, m_BackendId);</div><div class="line"><a name="l00624"></a><span class="lineno">  624</span>&#160;            <span class="keywordflow">if</span> (capability.has_value() &amp;&amp; capability.value().GetValue().AsBool() == <span class="keyword">true</span>)</div><div class="line"><a name="l00625"></a><span class="lineno">  625</span>&#160;            {</div><div class="line"><a name="l00626"></a><span class="lineno">  626</span>&#160;                <span class="keywordflow">return</span> <span class="keyword">true</span>;</div><div class="line"><a name="l00627"></a><span class="lineno">  627</span>&#160;            }</div><div class="line"><a name="l00628"></a><span class="lineno">  628</span>&#160;            <span class="keywordflow">return</span> <span class="keyword">false</span>;</div><div class="line"><a name="l00629"></a><span class="lineno">  629</span>&#160;        }</div><div class="line"><a name="l00630"></a><span class="lineno">  630</span>&#160;    }</div><div class="line"><a name="l00631"></a><span class="lineno">  631</span>&#160;</div><div class="line"><a name="l00632"></a><span class="lineno">  632</span>&#160;    <a class="code" href="namespacearmnn.xhtml#a14275495042ea02d0348dd70eeaf3d68">TensorInfos</a> infos{input, output, weights, biases};</div><div class="line"><a name="l00633"></a><span class="lineno">  633</span>&#160;</div><div class="line"><a name="l00634"></a><span class="lineno">  634</span>&#160;    <span class="keywordflow">return</span> m_LayerSupport-&gt;IsLayerSupported(<a class="code" href="namespacearmnn.xhtml#a56943a0946e5f15e5e58054b8e7a04a4acab78faff25393e9defd1911cb58133e">LayerType::FullyConnected</a>,</div><div class="line"><a name="l00635"></a><span class="lineno">  635</span>&#160;                                            infos,</div><div class="line"><a name="l00636"></a><span class="lineno">  636</span>&#160;                                            descriptor,</div><div class="line"><a name="l00637"></a><span class="lineno">  637</span>&#160;                                            EmptyOptional(),</div><div class="line"><a name="l00638"></a><span class="lineno">  638</span>&#160;                                            EmptyOptional(),</div><div class="line"><a name="l00639"></a><span class="lineno">  639</span>&#160;                                            reasonIfUnsupported);</div><div class="line"><a name="l00640"></a><span class="lineno">  640</span>&#160;}</div><div class="ttc" id="namespacearmnn_xhtml_a71c3bdadfe1c69aba2cbf054bff47744"><div class="ttname"><a href="namespacearmnn.xhtml#a71c3bdadfe1c69aba2cbf054bff47744">armnn::GetCapability</a></div><div class="ttdeci">Optional&lt; const BackendOptions::BackendOption &gt; GetCapability(const std::string &amp;backendCapabilityName, const BackendCapabilities &amp;capabilities)</div><div class="ttdoc">Returns a BackendCapability if the backend lists the capability The BackendCapability must then be in...</div><div class="ttdef"><b>Definition:</b> <a href="_backend_helper_8cpp_source.xhtml#l00030">BackendHelper.cpp:30</a></div></div>
<div class="ttc" id="_logging_8hpp_xhtml_a7b6ad073975f437ec38ca7d20154727f"><div class="ttname"><a href="_logging_8hpp.xhtml#a7b6ad073975f437ec38ca7d20154727f">ARMNN_LOG</a></div><div class="ttdeci">#define ARMNN_LOG(severity)</div><div class="ttdef"><b>Definition:</b> <a href="_logging_8hpp_source.xhtml#l00205">Logging.hpp:205</a></div></div>
<div class="ttc" id="namespacearmnn_xhtml_a56943a0946e5f15e5e58054b8e7a04a4acab78faff25393e9defd1911cb58133e"><div class="ttname"><a href="namespacearmnn.xhtml#a56943a0946e5f15e5e58054b8e7a04a4acab78faff25393e9defd1911cb58133e">armnn::LayerType::FullyConnected</a></div></div>
<div class="ttc" id="namespacearmnn_xhtml_a4dc0adc6737b5944e7671bee71788407a7b83d3f08fa392b79e3f553b585971cd"><div class="ttname"><a href="namespacearmnn.xhtml#a4dc0adc6737b5944e7671bee71788407a7b83d3f08fa392b79e3f553b585971cd">armnn::BoostLogSeverityMapping::warning</a></div></div>
<div class="ttc" id="namespacearmnn_xhtml_a14275495042ea02d0348dd70eeaf3d68"><div class="ttname"><a href="namespacearmnn.xhtml#a14275495042ea02d0348dd70eeaf3d68">armnn::TensorInfos</a></div><div class="ttdeci">std::vector&lt; TensorInfo &gt; TensorInfos</div><div class="ttdef"><b>Definition:</b> <a href="_backend_helper_8cpp_source.xhtml#l00151">BackendHelper.cpp:151</a></div></div>
<div class="ttc" id="classarmnn_1_1_backend_id_xhtml_ae36f5197d26d2e429d9c5fc100c2d500"><div class="ttname"><a href="classarmnn_1_1_backend_id.xhtml#ae36f5197d26d2e429d9c5fc100c2d500">armnn::BackendId::IsUndefined</a></div><div class="ttdeci">bool IsUndefined() const</div><div class="ttdef"><b>Definition:</b> <a href="_backend_id_8hpp_source.xhtml#l00141">BackendId.hpp:141</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="a8e6274b23fb9a773e42fc04ebc501edc"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a8e6274b23fb9a773e42fc04ebc501edc">&#9670;&nbsp;</a></span>IsGatherSupported()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool IsGatherSupported </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;&#160;</td>
          <td class="paramname"><em>input0</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;&#160;</td>
          <td class="paramname"><em>input1</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;&#160;</td>
          <td class="paramname"><em>output</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="structarmnn_1_1_gather_descriptor.xhtml">GatherDescriptor</a> &amp;&#160;</td>
          <td class="paramname"><em>descriptor</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="classarmnn_1_1_optional.xhtml">Optional</a>&lt; std::string &amp;&gt;&#160;</td>
          <td class="paramname"><em>reasonIfUnsupported</em> = <code><a class="el" href="structarmnn_1_1_empty_optional.xhtml">EmptyOptional</a>()</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_backend_helper_8cpp_source.xhtml#l00642">642</a> of file <a class="el" href="_backend_helper_8cpp_source.xhtml">BackendHelper.cpp</a>.</p>

<p class="reference">References <a class="el" href="namespacearmnn.xhtml#a56943a0946e5f15e5e58054b8e7a04a4aad22c799930d644e8468fe44c0312d53">armnn::Gather</a>.</p>

<p class="reference">Referenced by <a class="el" href="_backend_helper_8hpp_source.xhtml#l00026">LayerSupportHandle::LayerSupportHandle()</a>.</p>
<div class="fragment"><div class="line"><a name="l00647"></a><span class="lineno">  647</span>&#160;{</div><div class="line"><a name="l00648"></a><span class="lineno">  648</span>&#160;    <a class="code" href="namespacearmnn.xhtml#a14275495042ea02d0348dd70eeaf3d68">TensorInfos</a> infos{input0, input1, output};</div><div class="line"><a name="l00649"></a><span class="lineno">  649</span>&#160;</div><div class="line"><a name="l00650"></a><span class="lineno">  650</span>&#160;    <span class="keywordflow">return</span> m_LayerSupport-&gt;IsLayerSupported(<a class="code" href="namespacearmnn.xhtml#a56943a0946e5f15e5e58054b8e7a04a4aad22c799930d644e8468fe44c0312d53">LayerType::Gather</a>,</div><div class="line"><a name="l00651"></a><span class="lineno">  651</span>&#160;                                            infos,</div><div class="line"><a name="l00652"></a><span class="lineno">  652</span>&#160;                                            descriptor,</div><div class="line"><a name="l00653"></a><span class="lineno">  653</span>&#160;                                            EmptyOptional(),</div><div class="line"><a name="l00654"></a><span class="lineno">  654</span>&#160;                                            EmptyOptional(),</div><div class="line"><a name="l00655"></a><span class="lineno">  655</span>&#160;                                            reasonIfUnsupported);</div><div class="line"><a name="l00656"></a><span class="lineno">  656</span>&#160;}</div><div class="ttc" id="namespacearmnn_xhtml_a56943a0946e5f15e5e58054b8e7a04a4aad22c799930d644e8468fe44c0312d53"><div class="ttname"><a href="namespacearmnn.xhtml#a56943a0946e5f15e5e58054b8e7a04a4aad22c799930d644e8468fe44c0312d53">armnn::LayerType::Gather</a></div></div>
<div class="ttc" id="namespacearmnn_xhtml_a14275495042ea02d0348dd70eeaf3d68"><div class="ttname"><a href="namespacearmnn.xhtml#a14275495042ea02d0348dd70eeaf3d68">armnn::TensorInfos</a></div><div class="ttdeci">std::vector&lt; TensorInfo &gt; TensorInfos</div><div class="ttdef"><b>Definition:</b> <a href="_backend_helper_8cpp_source.xhtml#l00151">BackendHelper.cpp:151</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="aae2be97dbd7ad6847949ad0e193ca17f"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aae2be97dbd7ad6847949ad0e193ca17f">&#9670;&nbsp;</a></span>IsInputSupported()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool IsInputSupported </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;&#160;</td>
          <td class="paramname"><em>input</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="classarmnn_1_1_optional.xhtml">Optional</a>&lt; std::string &amp;&gt;&#160;</td>
          <td class="paramname"><em>reasonIfUnsupported</em> = <code><a class="el" href="structarmnn_1_1_empty_optional.xhtml">EmptyOptional</a>()</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_backend_helper_8cpp_source.xhtml#l00658">658</a> of file <a class="el" href="_backend_helper_8cpp_source.xhtml">BackendHelper.cpp</a>.</p>

<p class="reference">References <a class="el" href="namespacearmnn.xhtml#a56943a0946e5f15e5e58054b8e7a04a4a324118a6721dd6b8a9b9f4e327df2bf5">armnn::Input</a>.</p>

<p class="reference">Referenced by <a class="el" href="_backend_helper_8hpp_source.xhtml#l00026">LayerSupportHandle::LayerSupportHandle()</a>.</p>
<div class="fragment"><div class="line"><a name="l00660"></a><span class="lineno">  660</span>&#160;{</div><div class="line"><a name="l00661"></a><span class="lineno">  661</span>&#160;    <a class="code" href="namespacearmnn.xhtml#a14275495042ea02d0348dd70eeaf3d68">TensorInfos</a> infos{input};</div><div class="line"><a name="l00662"></a><span class="lineno">  662</span>&#160;</div><div class="line"><a name="l00663"></a><span class="lineno">  663</span>&#160;    <span class="keywordflow">return</span> m_LayerSupport-&gt;IsLayerSupported(<a class="code" href="namespacearmnn.xhtml#a56943a0946e5f15e5e58054b8e7a04a4a324118a6721dd6b8a9b9f4e327df2bf5">LayerType::Input</a>,</div><div class="line"><a name="l00664"></a><span class="lineno">  664</span>&#160;                                            infos,</div><div class="line"><a name="l00665"></a><span class="lineno">  665</span>&#160;                                            BaseDescriptor(),</div><div class="line"><a name="l00666"></a><span class="lineno">  666</span>&#160;                                            EmptyOptional(),</div><div class="line"><a name="l00667"></a><span class="lineno">  667</span>&#160;                                            EmptyOptional(),</div><div class="line"><a name="l00668"></a><span class="lineno">  668</span>&#160;                                            reasonIfUnsupported);</div><div class="line"><a name="l00669"></a><span class="lineno">  669</span>&#160;}</div><div class="ttc" id="namespacearmnn_xhtml_a56943a0946e5f15e5e58054b8e7a04a4a324118a6721dd6b8a9b9f4e327df2bf5"><div class="ttname"><a href="namespacearmnn.xhtml#a56943a0946e5f15e5e58054b8e7a04a4a324118a6721dd6b8a9b9f4e327df2bf5">armnn::LayerType::Input</a></div></div>
<div class="ttc" id="namespacearmnn_xhtml_a14275495042ea02d0348dd70eeaf3d68"><div class="ttname"><a href="namespacearmnn.xhtml#a14275495042ea02d0348dd70eeaf3d68">armnn::TensorInfos</a></div><div class="ttdeci">std::vector&lt; TensorInfo &gt; TensorInfos</div><div class="ttdef"><b>Definition:</b> <a href="_backend_helper_8cpp_source.xhtml#l00151">BackendHelper.cpp:151</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="a600fd20ad10051fec52f2f6d80f0e456"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a600fd20ad10051fec52f2f6d80f0e456">&#9670;&nbsp;</a></span>IsInstanceNormalizationSupported()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool IsInstanceNormalizationSupported </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;&#160;</td>
          <td class="paramname"><em>input</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;&#160;</td>
          <td class="paramname"><em>output</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="structarmnn_1_1_instance_normalization_descriptor.xhtml">InstanceNormalizationDescriptor</a> &amp;&#160;</td>
          <td class="paramname"><em>descriptor</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="classarmnn_1_1_optional.xhtml">Optional</a>&lt; std::string &amp;&gt;&#160;</td>
          <td class="paramname"><em>reasonIfUnsupported</em> = <code><a class="el" href="structarmnn_1_1_empty_optional.xhtml">EmptyOptional</a>()</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_backend_helper_8cpp_source.xhtml#l00671">671</a> of file <a class="el" href="_backend_helper_8cpp_source.xhtml">BackendHelper.cpp</a>.</p>

<p class="reference">References <a class="el" href="namespacearmnn.xhtml#a56943a0946e5f15e5e58054b8e7a04a4a21baa4498161d195f5bb2e3627344ba4">armnn::InstanceNormalization</a>.</p>

<p class="reference">Referenced by <a class="el" href="_backend_helper_8hpp_source.xhtml#l00026">LayerSupportHandle::LayerSupportHandle()</a>.</p>
<div class="fragment"><div class="line"><a name="l00676"></a><span class="lineno">  676</span>&#160;{</div><div class="line"><a name="l00677"></a><span class="lineno">  677</span>&#160;    <a class="code" href="namespacearmnn.xhtml#a14275495042ea02d0348dd70eeaf3d68">TensorInfos</a> infos{input, output};</div><div class="line"><a name="l00678"></a><span class="lineno">  678</span>&#160;</div><div class="line"><a name="l00679"></a><span class="lineno">  679</span>&#160;    <span class="keywordflow">return</span> m_LayerSupport-&gt;IsLayerSupported(<a class="code" href="namespacearmnn.xhtml#a56943a0946e5f15e5e58054b8e7a04a4a21baa4498161d195f5bb2e3627344ba4">LayerType::InstanceNormalization</a>,</div><div class="line"><a name="l00680"></a><span class="lineno">  680</span>&#160;                                            infos,</div><div class="line"><a name="l00681"></a><span class="lineno">  681</span>&#160;                                            descriptor,</div><div class="line"><a name="l00682"></a><span class="lineno">  682</span>&#160;                                            EmptyOptional(),</div><div class="line"><a name="l00683"></a><span class="lineno">  683</span>&#160;                                            EmptyOptional(),</div><div class="line"><a name="l00684"></a><span class="lineno">  684</span>&#160;                                            reasonIfUnsupported);</div><div class="line"><a name="l00685"></a><span class="lineno">  685</span>&#160;}</div><div class="ttc" id="namespacearmnn_xhtml_a56943a0946e5f15e5e58054b8e7a04a4a21baa4498161d195f5bb2e3627344ba4"><div class="ttname"><a href="namespacearmnn.xhtml#a56943a0946e5f15e5e58054b8e7a04a4a21baa4498161d195f5bb2e3627344ba4">armnn::LayerType::InstanceNormalization</a></div></div>
<div class="ttc" id="namespacearmnn_xhtml_a14275495042ea02d0348dd70eeaf3d68"><div class="ttname"><a href="namespacearmnn.xhtml#a14275495042ea02d0348dd70eeaf3d68">armnn::TensorInfos</a></div><div class="ttdeci">std::vector&lt; TensorInfo &gt; TensorInfos</div><div class="ttdef"><b>Definition:</b> <a href="_backend_helper_8cpp_source.xhtml#l00151">BackendHelper.cpp:151</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="aa794c8d3acce8b0428ccca43ea010cef"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aa794c8d3acce8b0428ccca43ea010cef">&#9670;&nbsp;</a></span>IsL2NormalizationSupported()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool IsL2NormalizationSupported </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;&#160;</td>
          <td class="paramname"><em>input</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;&#160;</td>
          <td class="paramname"><em>output</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="structarmnn_1_1_l2_normalization_descriptor.xhtml">L2NormalizationDescriptor</a> &amp;&#160;</td>
          <td class="paramname"><em>descriptor</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="classarmnn_1_1_optional.xhtml">Optional</a>&lt; std::string &amp;&gt;&#160;</td>
          <td class="paramname"><em>reasonIfUnsupported</em> = <code><a class="el" href="structarmnn_1_1_empty_optional.xhtml">EmptyOptional</a>()</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_backend_helper_8cpp_source.xhtml#l00687">687</a> of file <a class="el" href="_backend_helper_8cpp_source.xhtml">BackendHelper.cpp</a>.</p>

<p class="reference">References <a class="el" href="namespacearmnn.xhtml#a56943a0946e5f15e5e58054b8e7a04a4a1189467870bc421ae59277e750263eb2">armnn::L2Normalization</a>.</p>

<p class="reference">Referenced by <a class="el" href="_backend_helper_8hpp_source.xhtml#l00026">LayerSupportHandle::LayerSupportHandle()</a>.</p>
<div class="fragment"><div class="line"><a name="l00691"></a><span class="lineno">  691</span>&#160;{</div><div class="line"><a name="l00692"></a><span class="lineno">  692</span>&#160;    <a class="code" href="namespacearmnn.xhtml#a14275495042ea02d0348dd70eeaf3d68">TensorInfos</a> infos{input, output};</div><div class="line"><a name="l00693"></a><span class="lineno">  693</span>&#160;</div><div class="line"><a name="l00694"></a><span class="lineno">  694</span>&#160;    <span class="keywordflow">return</span> m_LayerSupport-&gt;IsLayerSupported(<a class="code" href="namespacearmnn.xhtml#a56943a0946e5f15e5e58054b8e7a04a4a1189467870bc421ae59277e750263eb2">LayerType::L2Normalization</a>,</div><div class="line"><a name="l00695"></a><span class="lineno">  695</span>&#160;                                            infos,</div><div class="line"><a name="l00696"></a><span class="lineno">  696</span>&#160;                                            descriptor,</div><div class="line"><a name="l00697"></a><span class="lineno">  697</span>&#160;                                            EmptyOptional(),</div><div class="line"><a name="l00698"></a><span class="lineno">  698</span>&#160;                                            EmptyOptional(),</div><div class="line"><a name="l00699"></a><span class="lineno">  699</span>&#160;                                            reasonIfUnsupported);</div><div class="line"><a name="l00700"></a><span class="lineno">  700</span>&#160;}</div><div class="ttc" id="namespacearmnn_xhtml_a56943a0946e5f15e5e58054b8e7a04a4a1189467870bc421ae59277e750263eb2"><div class="ttname"><a href="namespacearmnn.xhtml#a56943a0946e5f15e5e58054b8e7a04a4a1189467870bc421ae59277e750263eb2">armnn::LayerType::L2Normalization</a></div></div>
<div class="ttc" id="namespacearmnn_xhtml_a14275495042ea02d0348dd70eeaf3d68"><div class="ttname"><a href="namespacearmnn.xhtml#a14275495042ea02d0348dd70eeaf3d68">armnn::TensorInfos</a></div><div class="ttdeci">std::vector&lt; TensorInfo &gt; TensorInfos</div><div class="ttdef"><b>Definition:</b> <a href="_backend_helper_8cpp_source.xhtml#l00151">BackendHelper.cpp:151</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="a0dc7c3cc5ba1b1c2e09630eea6f3e6ad"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a0dc7c3cc5ba1b1c2e09630eea6f3e6ad">&#9670;&nbsp;</a></span>IsLogicalBinarySupported()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool IsLogicalBinarySupported </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;&#160;</td>
          <td class="paramname"><em>input0</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;&#160;</td>
          <td class="paramname"><em>input1</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;&#160;</td>
          <td class="paramname"><em>output</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="structarmnn_1_1_logical_binary_descriptor.xhtml">LogicalBinaryDescriptor</a> &amp;&#160;</td>
          <td class="paramname"><em>descriptor</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="classarmnn_1_1_optional.xhtml">Optional</a>&lt; std::string &amp;&gt;&#160;</td>
          <td class="paramname"><em>reasonIfUnsupported</em> = <code><a class="el" href="structarmnn_1_1_empty_optional.xhtml">EmptyOptional</a>()</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_backend_helper_8cpp_source.xhtml#l00702">702</a> of file <a class="el" href="_backend_helper_8cpp_source.xhtml">BackendHelper.cpp</a>.</p>

<p class="reference">References <a class="el" href="namespacearmnn.xhtml#a56943a0946e5f15e5e58054b8e7a04a4af4f53c8297dc1cb53d4e6f8151070a30">armnn::LogicalBinary</a>.</p>

<p class="reference">Referenced by <a class="el" href="_backend_helper_8hpp_source.xhtml#l00026">LayerSupportHandle::LayerSupportHandle()</a>.</p>
<div class="fragment"><div class="line"><a name="l00707"></a><span class="lineno">  707</span>&#160;{</div><div class="line"><a name="l00708"></a><span class="lineno">  708</span>&#160;    <a class="code" href="namespacearmnn.xhtml#a14275495042ea02d0348dd70eeaf3d68">TensorInfos</a> infos{input0, input1, output};</div><div class="line"><a name="l00709"></a><span class="lineno">  709</span>&#160;</div><div class="line"><a name="l00710"></a><span class="lineno">  710</span>&#160;    <span class="keywordflow">return</span> m_LayerSupport-&gt;IsLayerSupported(<a class="code" href="namespacearmnn.xhtml#a56943a0946e5f15e5e58054b8e7a04a4af4f53c8297dc1cb53d4e6f8151070a30">LayerType::LogicalBinary</a>,</div><div class="line"><a name="l00711"></a><span class="lineno">  711</span>&#160;                                            infos,</div><div class="line"><a name="l00712"></a><span class="lineno">  712</span>&#160;                                            descriptor,</div><div class="line"><a name="l00713"></a><span class="lineno">  713</span>&#160;                                            EmptyOptional(),</div><div class="line"><a name="l00714"></a><span class="lineno">  714</span>&#160;                                            EmptyOptional(),</div><div class="line"><a name="l00715"></a><span class="lineno">  715</span>&#160;                                            reasonIfUnsupported);</div><div class="line"><a name="l00716"></a><span class="lineno">  716</span>&#160;}</div><div class="ttc" id="namespacearmnn_xhtml_a56943a0946e5f15e5e58054b8e7a04a4af4f53c8297dc1cb53d4e6f8151070a30"><div class="ttname"><a href="namespacearmnn.xhtml#a56943a0946e5f15e5e58054b8e7a04a4af4f53c8297dc1cb53d4e6f8151070a30">armnn::LayerType::LogicalBinary</a></div></div>
<div class="ttc" id="namespacearmnn_xhtml_a14275495042ea02d0348dd70eeaf3d68"><div class="ttname"><a href="namespacearmnn.xhtml#a14275495042ea02d0348dd70eeaf3d68">armnn::TensorInfos</a></div><div class="ttdeci">std::vector&lt; TensorInfo &gt; TensorInfos</div><div class="ttdef"><b>Definition:</b> <a href="_backend_helper_8cpp_source.xhtml#l00151">BackendHelper.cpp:151</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="a7626486dd961efa5d3a59aa5a57d3cda"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a7626486dd961efa5d3a59aa5a57d3cda">&#9670;&nbsp;</a></span>IsLogicalUnarySupported()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool IsLogicalUnarySupported </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;&#160;</td>
          <td class="paramname"><em>input</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;&#160;</td>
          <td class="paramname"><em>output</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="structarmnn_1_1_elementwise_unary_descriptor.xhtml">ElementwiseUnaryDescriptor</a> &amp;&#160;</td>
          <td class="paramname"><em>descriptor</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="classarmnn_1_1_optional.xhtml">Optional</a>&lt; std::string &amp;&gt;&#160;</td>
          <td class="paramname"><em>reasonIfUnsupported</em> = <code><a class="el" href="structarmnn_1_1_empty_optional.xhtml">EmptyOptional</a>()</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_backend_helper_8cpp_source.xhtml#l00718">718</a> of file <a class="el" href="_backend_helper_8cpp_source.xhtml">BackendHelper.cpp</a>.</p>

<p class="reference">References <a class="el" href="namespacearmnn.xhtml#a56943a0946e5f15e5e58054b8e7a04a4abcd30d7ea97ad20c2cddc0f47e6b70c7">armnn::ElementwiseUnary</a>.</p>

<p class="reference">Referenced by <a class="el" href="_backend_helper_8hpp_source.xhtml#l00026">LayerSupportHandle::LayerSupportHandle()</a>.</p>
<div class="fragment"><div class="line"><a name="l00722"></a><span class="lineno">  722</span>&#160;{</div><div class="line"><a name="l00723"></a><span class="lineno">  723</span>&#160;    <a class="code" href="namespacearmnn.xhtml#a14275495042ea02d0348dd70eeaf3d68">TensorInfos</a> infos{input, output};</div><div class="line"><a name="l00724"></a><span class="lineno">  724</span>&#160;</div><div class="line"><a name="l00725"></a><span class="lineno">  725</span>&#160;    <span class="keywordflow">return</span> m_LayerSupport-&gt;IsLayerSupported(<a class="code" href="namespacearmnn.xhtml#a56943a0946e5f15e5e58054b8e7a04a4abcd30d7ea97ad20c2cddc0f47e6b70c7">LayerType::ElementwiseUnary</a>,</div><div class="line"><a name="l00726"></a><span class="lineno">  726</span>&#160;                                            infos,</div><div class="line"><a name="l00727"></a><span class="lineno">  727</span>&#160;                                            descriptor,</div><div class="line"><a name="l00728"></a><span class="lineno">  728</span>&#160;                                            EmptyOptional(),</div><div class="line"><a name="l00729"></a><span class="lineno">  729</span>&#160;                                            EmptyOptional(),</div><div class="line"><a name="l00730"></a><span class="lineno">  730</span>&#160;                                            reasonIfUnsupported);</div><div class="line"><a name="l00731"></a><span class="lineno">  731</span>&#160;}</div><div class="ttc" id="namespacearmnn_xhtml_a56943a0946e5f15e5e58054b8e7a04a4abcd30d7ea97ad20c2cddc0f47e6b70c7"><div class="ttname"><a href="namespacearmnn.xhtml#a56943a0946e5f15e5e58054b8e7a04a4abcd30d7ea97ad20c2cddc0f47e6b70c7">armnn::LayerType::ElementwiseUnary</a></div></div>
<div class="ttc" id="namespacearmnn_xhtml_a14275495042ea02d0348dd70eeaf3d68"><div class="ttname"><a href="namespacearmnn.xhtml#a14275495042ea02d0348dd70eeaf3d68">armnn::TensorInfos</a></div><div class="ttdeci">std::vector&lt; TensorInfo &gt; TensorInfos</div><div class="ttdef"><b>Definition:</b> <a href="_backend_helper_8cpp_source.xhtml#l00151">BackendHelper.cpp:151</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="ae0c5654d5791afa7ae3b0e9d08b1cf11"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ae0c5654d5791afa7ae3b0e9d08b1cf11">&#9670;&nbsp;</a></span>IsLogSoftmaxSupported()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool IsLogSoftmaxSupported </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;&#160;</td>
          <td class="paramname"><em>input</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;&#160;</td>
          <td class="paramname"><em>output</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="namespacearmnn.xhtml#ac14705405cbcdd580df613de6766fe65">LogSoftmaxDescriptor</a> &amp;&#160;</td>
          <td class="paramname"><em>descriptor</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="classarmnn_1_1_optional.xhtml">Optional</a>&lt; std::string &amp;&gt;&#160;</td>
          <td class="paramname"><em>reasonIfUnsupported</em> = <code><a class="el" href="structarmnn_1_1_empty_optional.xhtml">EmptyOptional</a>()</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_backend_helper_8cpp_source.xhtml#l00733">733</a> of file <a class="el" href="_backend_helper_8cpp_source.xhtml">BackendHelper.cpp</a>.</p>

<p class="reference">References <a class="el" href="namespacearmnn.xhtml#a56943a0946e5f15e5e58054b8e7a04a4ac21dbda57d88c21ec9857f5d1522c488">armnn::LogSoftmax</a>.</p>

<p class="reference">Referenced by <a class="el" href="_backend_helper_8hpp_source.xhtml#l00026">LayerSupportHandle::LayerSupportHandle()</a>.</p>
<div class="fragment"><div class="line"><a name="l00737"></a><span class="lineno">  737</span>&#160;{</div><div class="line"><a name="l00738"></a><span class="lineno">  738</span>&#160;    <a class="code" href="namespacearmnn.xhtml#a14275495042ea02d0348dd70eeaf3d68">TensorInfos</a> infos{input, output};</div><div class="line"><a name="l00739"></a><span class="lineno">  739</span>&#160;</div><div class="line"><a name="l00740"></a><span class="lineno">  740</span>&#160;    <span class="keywordflow">return</span> m_LayerSupport-&gt;IsLayerSupported(<a class="code" href="namespacearmnn.xhtml#a56943a0946e5f15e5e58054b8e7a04a4ac21dbda57d88c21ec9857f5d1522c488">LayerType::LogSoftmax</a>,</div><div class="line"><a name="l00741"></a><span class="lineno">  741</span>&#160;                                            infos,</div><div class="line"><a name="l00742"></a><span class="lineno">  742</span>&#160;                                            descriptor,</div><div class="line"><a name="l00743"></a><span class="lineno">  743</span>&#160;                                            EmptyOptional(),</div><div class="line"><a name="l00744"></a><span class="lineno">  744</span>&#160;                                            EmptyOptional(),</div><div class="line"><a name="l00745"></a><span class="lineno">  745</span>&#160;                                            reasonIfUnsupported);</div><div class="line"><a name="l00746"></a><span class="lineno">  746</span>&#160;}</div><div class="ttc" id="namespacearmnn_xhtml_a56943a0946e5f15e5e58054b8e7a04a4ac21dbda57d88c21ec9857f5d1522c488"><div class="ttname"><a href="namespacearmnn.xhtml#a56943a0946e5f15e5e58054b8e7a04a4ac21dbda57d88c21ec9857f5d1522c488">armnn::LayerType::LogSoftmax</a></div></div>
<div class="ttc" id="namespacearmnn_xhtml_a14275495042ea02d0348dd70eeaf3d68"><div class="ttname"><a href="namespacearmnn.xhtml#a14275495042ea02d0348dd70eeaf3d68">armnn::TensorInfos</a></div><div class="ttdeci">std::vector&lt; TensorInfo &gt; TensorInfos</div><div class="ttdef"><b>Definition:</b> <a href="_backend_helper_8cpp_source.xhtml#l00151">BackendHelper.cpp:151</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="a5777f9daef547c3390a61a90218950f0"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a5777f9daef547c3390a61a90218950f0">&#9670;&nbsp;</a></span>IsLstmSupported()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool IsLstmSupported </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;&#160;</td>
          <td class="paramname"><em>input</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;&#160;</td>
          <td class="paramname"><em>outputStateIn</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;&#160;</td>
          <td class="paramname"><em>cellStateIn</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;&#160;</td>
          <td class="paramname"><em>scratchBuffer</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;&#160;</td>
          <td class="paramname"><em>outputStateOut</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;&#160;</td>
          <td class="paramname"><em>cellStateOut</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;&#160;</td>
          <td class="paramname"><em>output</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="structarmnn_1_1_lstm_descriptor.xhtml">LstmDescriptor</a> &amp;&#160;</td>
          <td class="paramname"><em>descriptor</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="structarmnn_1_1_lstm_input_params_info.xhtml">LstmInputParamsInfo</a> &amp;&#160;</td>
          <td class="paramname"><em>paramsInfo</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="classarmnn_1_1_optional.xhtml">Optional</a>&lt; std::string &amp;&gt;&#160;</td>
          <td class="paramname"><em>reasonIfUnsupported</em> = <code><a class="el" href="structarmnn_1_1_empty_optional.xhtml">EmptyOptional</a>()</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_backend_helper_8cpp_source.xhtml#l00748">748</a> of file <a class="el" href="_backend_helper_8cpp_source.xhtml">BackendHelper.cpp</a>.</p>

<p class="reference">References <a class="el" href="namespacearmnn.xhtml#a56943a0946e5f15e5e58054b8e7a04a4a06b091bc9aea697ba473c71f0bb55925">armnn::Lstm</a>.</p>

<p class="reference">Referenced by <a class="el" href="_backend_helper_8hpp_source.xhtml#l00026">LayerSupportHandle::LayerSupportHandle()</a>.</p>
<div class="fragment"><div class="line"><a name="l00758"></a><span class="lineno">  758</span>&#160;{</div><div class="line"><a name="l00759"></a><span class="lineno">  759</span>&#160;    <a class="code" href="namespacearmnn.xhtml#a14275495042ea02d0348dd70eeaf3d68">TensorInfos</a> infos{input, outputStateIn, cellStateIn, scratchBuffer, outputStateOut, cellStateOut, output};</div><div class="line"><a name="l00760"></a><span class="lineno">  760</span>&#160;</div><div class="line"><a name="l00761"></a><span class="lineno">  761</span>&#160;    <span class="keywordflow">return</span> m_LayerSupport-&gt;IsLayerSupported(<a class="code" href="namespacearmnn.xhtml#a56943a0946e5f15e5e58054b8e7a04a4a06b091bc9aea697ba473c71f0bb55925">LayerType::Lstm</a>,</div><div class="line"><a name="l00762"></a><span class="lineno">  762</span>&#160;                                            infos,</div><div class="line"><a name="l00763"></a><span class="lineno">  763</span>&#160;                                            descriptor,</div><div class="line"><a name="l00764"></a><span class="lineno">  764</span>&#160;                                            paramsInfo,</div><div class="line"><a name="l00765"></a><span class="lineno">  765</span>&#160;                                            EmptyOptional(),</div><div class="line"><a name="l00766"></a><span class="lineno">  766</span>&#160;                                            reasonIfUnsupported);</div><div class="line"><a name="l00767"></a><span class="lineno">  767</span>&#160;}</div><div class="ttc" id="namespacearmnn_xhtml_a56943a0946e5f15e5e58054b8e7a04a4a06b091bc9aea697ba473c71f0bb55925"><div class="ttname"><a href="namespacearmnn.xhtml#a56943a0946e5f15e5e58054b8e7a04a4a06b091bc9aea697ba473c71f0bb55925">armnn::LayerType::Lstm</a></div></div>
<div class="ttc" id="namespacearmnn_xhtml_a14275495042ea02d0348dd70eeaf3d68"><div class="ttname"><a href="namespacearmnn.xhtml#a14275495042ea02d0348dd70eeaf3d68">armnn::TensorInfos</a></div><div class="ttdeci">std::vector&lt; TensorInfo &gt; TensorInfos</div><div class="ttdef"><b>Definition:</b> <a href="_backend_helper_8cpp_source.xhtml#l00151">BackendHelper.cpp:151</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="a0963ad50672ab5f883568b1cdde31de0"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a0963ad50672ab5f883568b1cdde31de0">&#9670;&nbsp;</a></span>IsMaximumSupported()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool IsMaximumSupported </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;&#160;</td>
          <td class="paramname"><em>input0</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;&#160;</td>
          <td class="paramname"><em>input1</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;&#160;</td>
          <td class="paramname"><em>output</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="classarmnn_1_1_optional.xhtml">Optional</a>&lt; std::string &amp;&gt;&#160;</td>
          <td class="paramname"><em>reasonIfUnsupported</em> = <code><a class="el" href="structarmnn_1_1_empty_optional.xhtml">EmptyOptional</a>()</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_backend_helper_8cpp_source.xhtml#l00769">769</a> of file <a class="el" href="_backend_helper_8cpp_source.xhtml">BackendHelper.cpp</a>.</p>

<p class="reference">References <a class="el" href="namespacearmnn.xhtml#a56943a0946e5f15e5e58054b8e7a04a4a8321e79c278ec510f63675c040594892">armnn::Maximum</a>.</p>

<p class="reference">Referenced by <a class="el" href="_backend_helper_8hpp_source.xhtml#l00026">LayerSupportHandle::LayerSupportHandle()</a>.</p>
<div class="fragment"><div class="line"><a name="l00773"></a><span class="lineno">  773</span>&#160;{</div><div class="line"><a name="l00774"></a><span class="lineno">  774</span>&#160;    <a class="code" href="namespacearmnn.xhtml#a14275495042ea02d0348dd70eeaf3d68">TensorInfos</a> infos{input0, input1, output};</div><div class="line"><a name="l00775"></a><span class="lineno">  775</span>&#160;</div><div class="line"><a name="l00776"></a><span class="lineno">  776</span>&#160;    <span class="keywordflow">return</span> m_LayerSupport-&gt;IsLayerSupported(<a class="code" href="namespacearmnn.xhtml#a56943a0946e5f15e5e58054b8e7a04a4a8321e79c278ec510f63675c040594892">LayerType::Maximum</a>,</div><div class="line"><a name="l00777"></a><span class="lineno">  777</span>&#160;                                            infos,</div><div class="line"><a name="l00778"></a><span class="lineno">  778</span>&#160;                                            BaseDescriptor(),</div><div class="line"><a name="l00779"></a><span class="lineno">  779</span>&#160;                                            EmptyOptional(),</div><div class="line"><a name="l00780"></a><span class="lineno">  780</span>&#160;                                            EmptyOptional(),</div><div class="line"><a name="l00781"></a><span class="lineno">  781</span>&#160;                                            reasonIfUnsupported);</div><div class="line"><a name="l00782"></a><span class="lineno">  782</span>&#160;}</div><div class="ttc" id="namespacearmnn_xhtml_a56943a0946e5f15e5e58054b8e7a04a4a8321e79c278ec510f63675c040594892"><div class="ttname"><a href="namespacearmnn.xhtml#a56943a0946e5f15e5e58054b8e7a04a4a8321e79c278ec510f63675c040594892">armnn::LayerType::Maximum</a></div></div>
<div class="ttc" id="namespacearmnn_xhtml_a14275495042ea02d0348dd70eeaf3d68"><div class="ttname"><a href="namespacearmnn.xhtml#a14275495042ea02d0348dd70eeaf3d68">armnn::TensorInfos</a></div><div class="ttdeci">std::vector&lt; TensorInfo &gt; TensorInfos</div><div class="ttdef"><b>Definition:</b> <a href="_backend_helper_8cpp_source.xhtml#l00151">BackendHelper.cpp:151</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="a3fe3fbc49b88d59f4cd57b55ada2ceb8"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a3fe3fbc49b88d59f4cd57b55ada2ceb8">&#9670;&nbsp;</a></span>IsMeanSupported()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool IsMeanSupported </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;&#160;</td>
          <td class="paramname"><em>input</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;&#160;</td>
          <td class="paramname"><em>output</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="structarmnn_1_1_mean_descriptor.xhtml">MeanDescriptor</a> &amp;&#160;</td>
          <td class="paramname"><em>descriptor</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="classarmnn_1_1_optional.xhtml">Optional</a>&lt; std::string &amp;&gt;&#160;</td>
          <td class="paramname"><em>reasonIfUnsupported</em> = <code><a class="el" href="structarmnn_1_1_empty_optional.xhtml">EmptyOptional</a>()</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_backend_helper_8cpp_source.xhtml#l00784">784</a> of file <a class="el" href="_backend_helper_8cpp_source.xhtml">BackendHelper.cpp</a>.</p>

<p class="reference">References <a class="el" href="namespacearmnn.xhtml#abc05539fc6e7907f32ef0fb242e3b3b0a3d6c9ac08ada31c184094bbc67afe00d">armnn::Mean</a>.</p>

<p class="reference">Referenced by <a class="el" href="_backend_helper_8hpp_source.xhtml#l00026">LayerSupportHandle::LayerSupportHandle()</a>.</p>
<div class="fragment"><div class="line"><a name="l00788"></a><span class="lineno">  788</span>&#160;{</div><div class="line"><a name="l00789"></a><span class="lineno">  789</span>&#160;    <a class="code" href="namespacearmnn.xhtml#a14275495042ea02d0348dd70eeaf3d68">TensorInfos</a> infos{input, output};</div><div class="line"><a name="l00790"></a><span class="lineno">  790</span>&#160;</div><div class="line"><a name="l00791"></a><span class="lineno">  791</span>&#160;    <span class="keywordflow">return</span> m_LayerSupport-&gt;IsLayerSupported(<a class="code" href="namespacearmnn.xhtml#abc05539fc6e7907f32ef0fb242e3b3b0a3d6c9ac08ada31c184094bbc67afe00d">LayerType::Mean</a>,</div><div class="line"><a name="l00792"></a><span class="lineno">  792</span>&#160;                                            infos,</div><div class="line"><a name="l00793"></a><span class="lineno">  793</span>&#160;                                            descriptor,</div><div class="line"><a name="l00794"></a><span class="lineno">  794</span>&#160;                                            EmptyOptional(),</div><div class="line"><a name="l00795"></a><span class="lineno">  795</span>&#160;                                            EmptyOptional(),</div><div class="line"><a name="l00796"></a><span class="lineno">  796</span>&#160;                                            reasonIfUnsupported);</div><div class="line"><a name="l00797"></a><span class="lineno">  797</span>&#160;}</div><div class="ttc" id="namespacearmnn_xhtml_abc05539fc6e7907f32ef0fb242e3b3b0a3d6c9ac08ada31c184094bbc67afe00d"><div class="ttname"><a href="namespacearmnn.xhtml#abc05539fc6e7907f32ef0fb242e3b3b0a3d6c9ac08ada31c184094bbc67afe00d">armnn::ReduceOperation::Mean</a></div></div>
<div class="ttc" id="namespacearmnn_xhtml_a14275495042ea02d0348dd70eeaf3d68"><div class="ttname"><a href="namespacearmnn.xhtml#a14275495042ea02d0348dd70eeaf3d68">armnn::TensorInfos</a></div><div class="ttdeci">std::vector&lt; TensorInfo &gt; TensorInfos</div><div class="ttdef"><b>Definition:</b> <a href="_backend_helper_8cpp_source.xhtml#l00151">BackendHelper.cpp:151</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="a278c4eda4ee20810d1f38b9341b9304f"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a278c4eda4ee20810d1f38b9341b9304f">&#9670;&nbsp;</a></span>IsMemCopySupported()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool IsMemCopySupported </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;&#160;</td>
          <td class="paramname"><em>input</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;&#160;</td>
          <td class="paramname"><em>output</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="classarmnn_1_1_optional.xhtml">Optional</a>&lt; std::string &amp;&gt;&#160;</td>
          <td class="paramname"><em>reasonIfUnsupported</em> = <code><a class="el" href="structarmnn_1_1_empty_optional.xhtml">EmptyOptional</a>()</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_backend_helper_8cpp_source.xhtml#l00799">799</a> of file <a class="el" href="_backend_helper_8cpp_source.xhtml">BackendHelper.cpp</a>.</p>

<p class="reference">References <a class="el" href="namespacearmnn.xhtml#a56943a0946e5f15e5e58054b8e7a04a4a4dd48794eb3305a0f5aece88b111a97b">armnn::MemCopy</a>.</p>

<p class="reference">Referenced by <a class="el" href="_backend_helper_8hpp_source.xhtml#l00026">LayerSupportHandle::LayerSupportHandle()</a>.</p>
<div class="fragment"><div class="line"><a name="l00802"></a><span class="lineno">  802</span>&#160;{</div><div class="line"><a name="l00803"></a><span class="lineno">  803</span>&#160;    <a class="code" href="namespacearmnn.xhtml#a14275495042ea02d0348dd70eeaf3d68">TensorInfos</a> infos{input, output};</div><div class="line"><a name="l00804"></a><span class="lineno">  804</span>&#160;</div><div class="line"><a name="l00805"></a><span class="lineno">  805</span>&#160;    <span class="keywordflow">return</span> m_LayerSupport-&gt;IsLayerSupported(<a class="code" href="namespacearmnn.xhtml#a56943a0946e5f15e5e58054b8e7a04a4a4dd48794eb3305a0f5aece88b111a97b">LayerType::MemCopy</a>,</div><div class="line"><a name="l00806"></a><span class="lineno">  806</span>&#160;                                            infos,</div><div class="line"><a name="l00807"></a><span class="lineno">  807</span>&#160;                                            BaseDescriptor(),</div><div class="line"><a name="l00808"></a><span class="lineno">  808</span>&#160;                                            EmptyOptional(),</div><div class="line"><a name="l00809"></a><span class="lineno">  809</span>&#160;                                            EmptyOptional(),</div><div class="line"><a name="l00810"></a><span class="lineno">  810</span>&#160;                                            reasonIfUnsupported);</div><div class="line"><a name="l00811"></a><span class="lineno">  811</span>&#160;}</div><div class="ttc" id="namespacearmnn_xhtml_a56943a0946e5f15e5e58054b8e7a04a4a4dd48794eb3305a0f5aece88b111a97b"><div class="ttname"><a href="namespacearmnn.xhtml#a56943a0946e5f15e5e58054b8e7a04a4a4dd48794eb3305a0f5aece88b111a97b">armnn::LayerType::MemCopy</a></div></div>
<div class="ttc" id="namespacearmnn_xhtml_a14275495042ea02d0348dd70eeaf3d68"><div class="ttname"><a href="namespacearmnn.xhtml#a14275495042ea02d0348dd70eeaf3d68">armnn::TensorInfos</a></div><div class="ttdeci">std::vector&lt; TensorInfo &gt; TensorInfos</div><div class="ttdef"><b>Definition:</b> <a href="_backend_helper_8cpp_source.xhtml#l00151">BackendHelper.cpp:151</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="a3cd3b7667091df2efa67c398c155a9a2"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a3cd3b7667091df2efa67c398c155a9a2">&#9670;&nbsp;</a></span>IsMemImportSupported()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool IsMemImportSupported </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;&#160;</td>
          <td class="paramname"><em>input</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;&#160;</td>
          <td class="paramname"><em>output</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="classarmnn_1_1_optional.xhtml">Optional</a>&lt; std::string &amp;&gt;&#160;</td>
          <td class="paramname"><em>reasonIfUnsupported</em> = <code><a class="el" href="structarmnn_1_1_empty_optional.xhtml">EmptyOptional</a>()</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_backend_helper_8cpp_source.xhtml#l00813">813</a> of file <a class="el" href="_backend_helper_8cpp_source.xhtml">BackendHelper.cpp</a>.</p>

<p class="reference">References <a class="el" href="namespacearmnn.xhtml#a56943a0946e5f15e5e58054b8e7a04a4a115bfc5d633eae55c67f9588acdd2bf9">armnn::MemImport</a>.</p>

<p class="reference">Referenced by <a class="el" href="_backend_helper_8hpp_source.xhtml#l00026">LayerSupportHandle::LayerSupportHandle()</a>.</p>
<div class="fragment"><div class="line"><a name="l00816"></a><span class="lineno">  816</span>&#160;{</div><div class="line"><a name="l00817"></a><span class="lineno">  817</span>&#160;    <a class="code" href="namespacearmnn.xhtml#a14275495042ea02d0348dd70eeaf3d68">TensorInfos</a> infos{input, output};</div><div class="line"><a name="l00818"></a><span class="lineno">  818</span>&#160;</div><div class="line"><a name="l00819"></a><span class="lineno">  819</span>&#160;    <span class="keywordflow">return</span> m_LayerSupport-&gt;IsLayerSupported(<a class="code" href="namespacearmnn.xhtml#a56943a0946e5f15e5e58054b8e7a04a4a115bfc5d633eae55c67f9588acdd2bf9">LayerType::MemImport</a>,</div><div class="line"><a name="l00820"></a><span class="lineno">  820</span>&#160;                                            infos,</div><div class="line"><a name="l00821"></a><span class="lineno">  821</span>&#160;                                            BaseDescriptor(),</div><div class="line"><a name="l00822"></a><span class="lineno">  822</span>&#160;                                            EmptyOptional(),</div><div class="line"><a name="l00823"></a><span class="lineno">  823</span>&#160;                                            EmptyOptional(),</div><div class="line"><a name="l00824"></a><span class="lineno">  824</span>&#160;                                            reasonIfUnsupported);</div><div class="line"><a name="l00825"></a><span class="lineno">  825</span>&#160;}</div><div class="ttc" id="namespacearmnn_xhtml_a56943a0946e5f15e5e58054b8e7a04a4a115bfc5d633eae55c67f9588acdd2bf9"><div class="ttname"><a href="namespacearmnn.xhtml#a56943a0946e5f15e5e58054b8e7a04a4a115bfc5d633eae55c67f9588acdd2bf9">armnn::LayerType::MemImport</a></div></div>
<div class="ttc" id="namespacearmnn_xhtml_a14275495042ea02d0348dd70eeaf3d68"><div class="ttname"><a href="namespacearmnn.xhtml#a14275495042ea02d0348dd70eeaf3d68">armnn::TensorInfos</a></div><div class="ttdeci">std::vector&lt; TensorInfo &gt; TensorInfos</div><div class="ttdef"><b>Definition:</b> <a href="_backend_helper_8cpp_source.xhtml#l00151">BackendHelper.cpp:151</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="a776512d6109f9458f78844ae0bcf3e72"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a776512d6109f9458f78844ae0bcf3e72">&#9670;&nbsp;</a></span>IsMergeSupported()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool IsMergeSupported </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;&#160;</td>
          <td class="paramname"><em>input0</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;&#160;</td>
          <td class="paramname"><em>input1</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;&#160;</td>
          <td class="paramname"><em>output</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="classarmnn_1_1_optional.xhtml">Optional</a>&lt; std::string &amp;&gt;&#160;</td>
          <td class="paramname"><em>reasonIfUnsupported</em> = <code><a class="el" href="structarmnn_1_1_empty_optional.xhtml">EmptyOptional</a>()</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_backend_helper_8cpp_source.xhtml#l00827">827</a> of file <a class="el" href="_backend_helper_8cpp_source.xhtml">BackendHelper.cpp</a>.</p>

<p class="reference">References <a class="el" href="namespacearmnn.xhtml#a56943a0946e5f15e5e58054b8e7a04a4a68be4837f6c739877233e527a996dd00">armnn::Merge</a>.</p>

<p class="reference">Referenced by <a class="el" href="_backend_helper_8hpp_source.xhtml#l00026">LayerSupportHandle::LayerSupportHandle()</a>.</p>
<div class="fragment"><div class="line"><a name="l00831"></a><span class="lineno">  831</span>&#160;{</div><div class="line"><a name="l00832"></a><span class="lineno">  832</span>&#160;    <a class="code" href="namespacearmnn.xhtml#a14275495042ea02d0348dd70eeaf3d68">TensorInfos</a> infos{input0, input1, output};</div><div class="line"><a name="l00833"></a><span class="lineno">  833</span>&#160;</div><div class="line"><a name="l00834"></a><span class="lineno">  834</span>&#160;    <span class="keywordflow">return</span> m_LayerSupport-&gt;IsLayerSupported(<a class="code" href="namespacearmnn.xhtml#a56943a0946e5f15e5e58054b8e7a04a4a68be4837f6c739877233e527a996dd00">LayerType::Merge</a>,</div><div class="line"><a name="l00835"></a><span class="lineno">  835</span>&#160;                                            infos,</div><div class="line"><a name="l00836"></a><span class="lineno">  836</span>&#160;                                            BaseDescriptor(),</div><div class="line"><a name="l00837"></a><span class="lineno">  837</span>&#160;                                            EmptyOptional(),</div><div class="line"><a name="l00838"></a><span class="lineno">  838</span>&#160;                                            EmptyOptional(),</div><div class="line"><a name="l00839"></a><span class="lineno">  839</span>&#160;                                            reasonIfUnsupported);</div><div class="line"><a name="l00840"></a><span class="lineno">  840</span>&#160;}</div><div class="ttc" id="namespacearmnn_xhtml_a56943a0946e5f15e5e58054b8e7a04a4a68be4837f6c739877233e527a996dd00"><div class="ttname"><a href="namespacearmnn.xhtml#a56943a0946e5f15e5e58054b8e7a04a4a68be4837f6c739877233e527a996dd00">armnn::LayerType::Merge</a></div></div>
<div class="ttc" id="namespacearmnn_xhtml_a14275495042ea02d0348dd70eeaf3d68"><div class="ttname"><a href="namespacearmnn.xhtml#a14275495042ea02d0348dd70eeaf3d68">armnn::TensorInfos</a></div><div class="ttdeci">std::vector&lt; TensorInfo &gt; TensorInfos</div><div class="ttdef"><b>Definition:</b> <a href="_backend_helper_8cpp_source.xhtml#l00151">BackendHelper.cpp:151</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="a0ab9aec3ae42288e3020207d1e961661"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a0ab9aec3ae42288e3020207d1e961661">&#9670;&nbsp;</a></span>IsMinimumSupported()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool IsMinimumSupported </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;&#160;</td>
          <td class="paramname"><em>input0</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;&#160;</td>
          <td class="paramname"><em>input1</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;&#160;</td>
          <td class="paramname"><em>output</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="classarmnn_1_1_optional.xhtml">Optional</a>&lt; std::string &amp;&gt;&#160;</td>
          <td class="paramname"><em>reasonIfUnsupported</em> = <code><a class="el" href="structarmnn_1_1_empty_optional.xhtml">EmptyOptional</a>()</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_backend_helper_8cpp_source.xhtml#l00842">842</a> of file <a class="el" href="_backend_helper_8cpp_source.xhtml">BackendHelper.cpp</a>.</p>

<p class="reference">References <a class="el" href="namespacearmnn.xhtml#a56943a0946e5f15e5e58054b8e7a04a4aa1d0ec6d56f8833a078b5a7ac4caf2d4">armnn::Minimum</a>.</p>

<p class="reference">Referenced by <a class="el" href="_backend_helper_8hpp_source.xhtml#l00026">LayerSupportHandle::LayerSupportHandle()</a>.</p>
<div class="fragment"><div class="line"><a name="l00846"></a><span class="lineno">  846</span>&#160;{</div><div class="line"><a name="l00847"></a><span class="lineno">  847</span>&#160;    <a class="code" href="namespacearmnn.xhtml#a14275495042ea02d0348dd70eeaf3d68">TensorInfos</a> infos{input0, input1, output};</div><div class="line"><a name="l00848"></a><span class="lineno">  848</span>&#160;</div><div class="line"><a name="l00849"></a><span class="lineno">  849</span>&#160;    <span class="keywordflow">return</span> m_LayerSupport-&gt;IsLayerSupported(<a class="code" href="namespacearmnn.xhtml#a56943a0946e5f15e5e58054b8e7a04a4aa1d0ec6d56f8833a078b5a7ac4caf2d4">LayerType::Minimum</a>,</div><div class="line"><a name="l00850"></a><span class="lineno">  850</span>&#160;                                            infos,</div><div class="line"><a name="l00851"></a><span class="lineno">  851</span>&#160;                                            BaseDescriptor(),</div><div class="line"><a name="l00852"></a><span class="lineno">  852</span>&#160;                                            EmptyOptional(),</div><div class="line"><a name="l00853"></a><span class="lineno">  853</span>&#160;                                            EmptyOptional(),</div><div class="line"><a name="l00854"></a><span class="lineno">  854</span>&#160;                                            reasonIfUnsupported);</div><div class="line"><a name="l00855"></a><span class="lineno">  855</span>&#160;}</div><div class="ttc" id="namespacearmnn_xhtml_a56943a0946e5f15e5e58054b8e7a04a4aa1d0ec6d56f8833a078b5a7ac4caf2d4"><div class="ttname"><a href="namespacearmnn.xhtml#a56943a0946e5f15e5e58054b8e7a04a4aa1d0ec6d56f8833a078b5a7ac4caf2d4">armnn::LayerType::Minimum</a></div></div>
<div class="ttc" id="namespacearmnn_xhtml_a14275495042ea02d0348dd70eeaf3d68"><div class="ttname"><a href="namespacearmnn.xhtml#a14275495042ea02d0348dd70eeaf3d68">armnn::TensorInfos</a></div><div class="ttdeci">std::vector&lt; TensorInfo &gt; TensorInfos</div><div class="ttdef"><b>Definition:</b> <a href="_backend_helper_8cpp_source.xhtml#l00151">BackendHelper.cpp:151</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="a8176ea491b94f887e088d9bbf92489ae"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a8176ea491b94f887e088d9bbf92489ae">&#9670;&nbsp;</a></span>IsMultiplicationSupported()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool IsMultiplicationSupported </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;&#160;</td>
          <td class="paramname"><em>input0</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;&#160;</td>
          <td class="paramname"><em>input1</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;&#160;</td>
          <td class="paramname"><em>output</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="classarmnn_1_1_optional.xhtml">Optional</a>&lt; std::string &amp;&gt;&#160;</td>
          <td class="paramname"><em>reasonIfUnsupported</em> = <code><a class="el" href="structarmnn_1_1_empty_optional.xhtml">EmptyOptional</a>()</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_backend_helper_8cpp_source.xhtml#l00857">857</a> of file <a class="el" href="_backend_helper_8cpp_source.xhtml">BackendHelper.cpp</a>.</p>

<p class="reference">References <a class="el" href="namespacearmnn.xhtml#a56943a0946e5f15e5e58054b8e7a04a4a27d1a1f7b7c2180e5b20ce9e3d00e2dd">armnn::Multiplication</a>.</p>

<p class="reference">Referenced by <a class="el" href="_backend_helper_8hpp_source.xhtml#l00026">LayerSupportHandle::LayerSupportHandle()</a>.</p>
<div class="fragment"><div class="line"><a name="l00861"></a><span class="lineno">  861</span>&#160;{</div><div class="line"><a name="l00862"></a><span class="lineno">  862</span>&#160;    <a class="code" href="namespacearmnn.xhtml#a14275495042ea02d0348dd70eeaf3d68">TensorInfos</a> infos{input0, input1, output};</div><div class="line"><a name="l00863"></a><span class="lineno">  863</span>&#160;</div><div class="line"><a name="l00864"></a><span class="lineno">  864</span>&#160;    <span class="keywordflow">return</span> m_LayerSupport-&gt;IsLayerSupported(<a class="code" href="namespacearmnn.xhtml#a56943a0946e5f15e5e58054b8e7a04a4a27d1a1f7b7c2180e5b20ce9e3d00e2dd">LayerType::Multiplication</a>,</div><div class="line"><a name="l00865"></a><span class="lineno">  865</span>&#160;                                            infos,</div><div class="line"><a name="l00866"></a><span class="lineno">  866</span>&#160;                                            BaseDescriptor(),</div><div class="line"><a name="l00867"></a><span class="lineno">  867</span>&#160;                                            EmptyOptional(),</div><div class="line"><a name="l00868"></a><span class="lineno">  868</span>&#160;                                            EmptyOptional(),</div><div class="line"><a name="l00869"></a><span class="lineno">  869</span>&#160;                                            reasonIfUnsupported);</div><div class="line"><a name="l00870"></a><span class="lineno">  870</span>&#160;}</div><div class="ttc" id="namespacearmnn_xhtml_a56943a0946e5f15e5e58054b8e7a04a4a27d1a1f7b7c2180e5b20ce9e3d00e2dd"><div class="ttname"><a href="namespacearmnn.xhtml#a56943a0946e5f15e5e58054b8e7a04a4a27d1a1f7b7c2180e5b20ce9e3d00e2dd">armnn::LayerType::Multiplication</a></div></div>
<div class="ttc" id="namespacearmnn_xhtml_a14275495042ea02d0348dd70eeaf3d68"><div class="ttname"><a href="namespacearmnn.xhtml#a14275495042ea02d0348dd70eeaf3d68">armnn::TensorInfos</a></div><div class="ttdeci">std::vector&lt; TensorInfo &gt; TensorInfos</div><div class="ttdef"><b>Definition:</b> <a href="_backend_helper_8cpp_source.xhtml#l00151">BackendHelper.cpp:151</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="a6980df6695cb00d4a2478ebde2a35345"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a6980df6695cb00d4a2478ebde2a35345">&#9670;&nbsp;</a></span>IsNormalizationSupported()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool IsNormalizationSupported </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;&#160;</td>
          <td class="paramname"><em>input</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;&#160;</td>
          <td class="paramname"><em>output</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="structarmnn_1_1_normalization_descriptor.xhtml">NormalizationDescriptor</a> &amp;&#160;</td>
          <td class="paramname"><em>descriptor</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="classarmnn_1_1_optional.xhtml">Optional</a>&lt; std::string &amp;&gt;&#160;</td>
          <td class="paramname"><em>reasonIfUnsupported</em> = <code><a class="el" href="structarmnn_1_1_empty_optional.xhtml">EmptyOptional</a>()</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_backend_helper_8cpp_source.xhtml#l00872">872</a> of file <a class="el" href="_backend_helper_8cpp_source.xhtml">BackendHelper.cpp</a>.</p>

<p class="reference">References <a class="el" href="namespacearmnn.xhtml#a56943a0946e5f15e5e58054b8e7a04a4aac61f2e17250a818dee4d12b112aa88f">armnn::Normalization</a>.</p>

<p class="reference">Referenced by <a class="el" href="_backend_helper_8hpp_source.xhtml#l00026">LayerSupportHandle::LayerSupportHandle()</a>.</p>
<div class="fragment"><div class="line"><a name="l00876"></a><span class="lineno">  876</span>&#160;{</div><div class="line"><a name="l00877"></a><span class="lineno">  877</span>&#160;    <a class="code" href="namespacearmnn.xhtml#a14275495042ea02d0348dd70eeaf3d68">TensorInfos</a> infos{input, output};</div><div class="line"><a name="l00878"></a><span class="lineno">  878</span>&#160;</div><div class="line"><a name="l00879"></a><span class="lineno">  879</span>&#160;    <span class="keywordflow">return</span> m_LayerSupport-&gt;IsLayerSupported(<a class="code" href="namespacearmnn.xhtml#a56943a0946e5f15e5e58054b8e7a04a4aac61f2e17250a818dee4d12b112aa88f">LayerType::Normalization</a>,</div><div class="line"><a name="l00880"></a><span class="lineno">  880</span>&#160;                                            infos,</div><div class="line"><a name="l00881"></a><span class="lineno">  881</span>&#160;                                            descriptor,</div><div class="line"><a name="l00882"></a><span class="lineno">  882</span>&#160;                                            EmptyOptional(),</div><div class="line"><a name="l00883"></a><span class="lineno">  883</span>&#160;                                            EmptyOptional(),</div><div class="line"><a name="l00884"></a><span class="lineno">  884</span>&#160;                                            reasonIfUnsupported);</div><div class="line"><a name="l00885"></a><span class="lineno">  885</span>&#160;}</div><div class="ttc" id="namespacearmnn_xhtml_a56943a0946e5f15e5e58054b8e7a04a4aac61f2e17250a818dee4d12b112aa88f"><div class="ttname"><a href="namespacearmnn.xhtml#a56943a0946e5f15e5e58054b8e7a04a4aac61f2e17250a818dee4d12b112aa88f">armnn::LayerType::Normalization</a></div></div>
<div class="ttc" id="namespacearmnn_xhtml_a14275495042ea02d0348dd70eeaf3d68"><div class="ttname"><a href="namespacearmnn.xhtml#a14275495042ea02d0348dd70eeaf3d68">armnn::TensorInfos</a></div><div class="ttdeci">std::vector&lt; TensorInfo &gt; TensorInfos</div><div class="ttdef"><b>Definition:</b> <a href="_backend_helper_8cpp_source.xhtml#l00151">BackendHelper.cpp:151</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="a6d36cfb27f84220879e78efaacec5ed3"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a6d36cfb27f84220879e78efaacec5ed3">&#9670;&nbsp;</a></span>IsOutputSupported()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool IsOutputSupported </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;&#160;</td>
          <td class="paramname"><em>output</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="classarmnn_1_1_optional.xhtml">Optional</a>&lt; std::string &amp;&gt;&#160;</td>
          <td class="paramname"><em>reasonIfUnsupported</em> = <code><a class="el" href="structarmnn_1_1_empty_optional.xhtml">EmptyOptional</a>()</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_backend_helper_8cpp_source.xhtml#l00887">887</a> of file <a class="el" href="_backend_helper_8cpp_source.xhtml">BackendHelper.cpp</a>.</p>

<p class="reference">References <a class="el" href="namespacearmnn.xhtml#a56943a0946e5f15e5e58054b8e7a04a4a29c2c02a361c9d7028472e5d92cd4a54">armnn::Output</a>.</p>

<p class="reference">Referenced by <a class="el" href="_backend_helper_8hpp_source.xhtml#l00026">LayerSupportHandle::LayerSupportHandle()</a>.</p>
<div class="fragment"><div class="line"><a name="l00889"></a><span class="lineno">  889</span>&#160;{</div><div class="line"><a name="l00890"></a><span class="lineno">  890</span>&#160;    <a class="code" href="namespacearmnn.xhtml#a14275495042ea02d0348dd70eeaf3d68">TensorInfos</a> infos{output};</div><div class="line"><a name="l00891"></a><span class="lineno">  891</span>&#160;</div><div class="line"><a name="l00892"></a><span class="lineno">  892</span>&#160;    <span class="keywordflow">return</span> m_LayerSupport-&gt;IsLayerSupported(<a class="code" href="namespacearmnn.xhtml#a56943a0946e5f15e5e58054b8e7a04a4a29c2c02a361c9d7028472e5d92cd4a54">LayerType::Output</a>,</div><div class="line"><a name="l00893"></a><span class="lineno">  893</span>&#160;                                            infos,</div><div class="line"><a name="l00894"></a><span class="lineno">  894</span>&#160;                                            BaseDescriptor(),</div><div class="line"><a name="l00895"></a><span class="lineno">  895</span>&#160;                                            EmptyOptional(),</div><div class="line"><a name="l00896"></a><span class="lineno">  896</span>&#160;                                            EmptyOptional(),</div><div class="line"><a name="l00897"></a><span class="lineno">  897</span>&#160;                                            reasonIfUnsupported);</div><div class="line"><a name="l00898"></a><span class="lineno">  898</span>&#160;}</div><div class="ttc" id="namespacearmnn_xhtml_a56943a0946e5f15e5e58054b8e7a04a4a29c2c02a361c9d7028472e5d92cd4a54"><div class="ttname"><a href="namespacearmnn.xhtml#a56943a0946e5f15e5e58054b8e7a04a4a29c2c02a361c9d7028472e5d92cd4a54">armnn::LayerType::Output</a></div></div>
<div class="ttc" id="namespacearmnn_xhtml_a14275495042ea02d0348dd70eeaf3d68"><div class="ttname"><a href="namespacearmnn.xhtml#a14275495042ea02d0348dd70eeaf3d68">armnn::TensorInfos</a></div><div class="ttdeci">std::vector&lt; TensorInfo &gt; TensorInfos</div><div class="ttdef"><b>Definition:</b> <a href="_backend_helper_8cpp_source.xhtml#l00151">BackendHelper.cpp:151</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="abdb247c7edc76f8d61179ecf082a01de"></a>
<h2 class="memtitle"><span class="permalink"><a href="#abdb247c7edc76f8d61179ecf082a01de">&#9670;&nbsp;</a></span>IsPadSupported()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool IsPadSupported </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;&#160;</td>
          <td class="paramname"><em>input</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;&#160;</td>
          <td class="paramname"><em>output</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="structarmnn_1_1_pad_descriptor.xhtml">PadDescriptor</a> &amp;&#160;</td>
          <td class="paramname"><em>descriptor</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="classarmnn_1_1_optional.xhtml">Optional</a>&lt; std::string &amp;&gt;&#160;</td>
          <td class="paramname"><em>reasonIfUnsupported</em> = <code><a class="el" href="structarmnn_1_1_empty_optional.xhtml">EmptyOptional</a>()</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_backend_helper_8cpp_source.xhtml#l00900">900</a> of file <a class="el" href="_backend_helper_8cpp_source.xhtml">BackendHelper.cpp</a>.</p>

<p class="reference">References <a class="el" href="namespacearmnn.xhtml#a56943a0946e5f15e5e58054b8e7a04a4ade43468adaf6acb2c38ebc0c1176f82f">armnn::Pad</a>.</p>

<p class="reference">Referenced by <a class="el" href="_backend_helper_8hpp_source.xhtml#l00026">LayerSupportHandle::LayerSupportHandle()</a>.</p>
<div class="fragment"><div class="line"><a name="l00904"></a><span class="lineno">  904</span>&#160;{</div><div class="line"><a name="l00905"></a><span class="lineno">  905</span>&#160;    <a class="code" href="namespacearmnn.xhtml#a14275495042ea02d0348dd70eeaf3d68">TensorInfos</a> infos{input, output};</div><div class="line"><a name="l00906"></a><span class="lineno">  906</span>&#160;</div><div class="line"><a name="l00907"></a><span class="lineno">  907</span>&#160;    <span class="keywordflow">return</span> m_LayerSupport-&gt;IsLayerSupported(<a class="code" href="namespacearmnn.xhtml#a56943a0946e5f15e5e58054b8e7a04a4ade43468adaf6acb2c38ebc0c1176f82f">LayerType::Pad</a>,</div><div class="line"><a name="l00908"></a><span class="lineno">  908</span>&#160;                                            infos,</div><div class="line"><a name="l00909"></a><span class="lineno">  909</span>&#160;                                            descriptor,</div><div class="line"><a name="l00910"></a><span class="lineno">  910</span>&#160;                                            EmptyOptional(),</div><div class="line"><a name="l00911"></a><span class="lineno">  911</span>&#160;                                            EmptyOptional(),</div><div class="line"><a name="l00912"></a><span class="lineno">  912</span>&#160;                                            reasonIfUnsupported);</div><div class="line"><a name="l00913"></a><span class="lineno">  913</span>&#160;}</div><div class="ttc" id="namespacearmnn_xhtml_a56943a0946e5f15e5e58054b8e7a04a4ade43468adaf6acb2c38ebc0c1176f82f"><div class="ttname"><a href="namespacearmnn.xhtml#a56943a0946e5f15e5e58054b8e7a04a4ade43468adaf6acb2c38ebc0c1176f82f">armnn::LayerType::Pad</a></div></div>
<div class="ttc" id="namespacearmnn_xhtml_a14275495042ea02d0348dd70eeaf3d68"><div class="ttname"><a href="namespacearmnn.xhtml#a14275495042ea02d0348dd70eeaf3d68">armnn::TensorInfos</a></div><div class="ttdeci">std::vector&lt; TensorInfo &gt; TensorInfos</div><div class="ttdef"><b>Definition:</b> <a href="_backend_helper_8cpp_source.xhtml#l00151">BackendHelper.cpp:151</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="a3f6316e3e083fee8e5cb356a530e775f"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a3f6316e3e083fee8e5cb356a530e775f">&#9670;&nbsp;</a></span>IsPermuteSupported()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool IsPermuteSupported </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;&#160;</td>
          <td class="paramname"><em>input</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;&#160;</td>
          <td class="paramname"><em>output</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="structarmnn_1_1_permute_descriptor.xhtml">PermuteDescriptor</a> &amp;&#160;</td>
          <td class="paramname"><em>descriptor</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="classarmnn_1_1_optional.xhtml">Optional</a>&lt; std::string &amp;&gt;&#160;</td>
          <td class="paramname"><em>reasonIfUnsupported</em> = <code><a class="el" href="structarmnn_1_1_empty_optional.xhtml">EmptyOptional</a>()</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_backend_helper_8cpp_source.xhtml#l00915">915</a> of file <a class="el" href="_backend_helper_8cpp_source.xhtml">BackendHelper.cpp</a>.</p>

<p class="reference">References <a class="el" href="namespacearmnn.xhtml#a56943a0946e5f15e5e58054b8e7a04a4afa662c6eb71caef475b2b981ce8eccd7">armnn::Permute</a>.</p>

<p class="reference">Referenced by <a class="el" href="_backend_helper_8hpp_source.xhtml#l00026">LayerSupportHandle::LayerSupportHandle()</a>.</p>
<div class="fragment"><div class="line"><a name="l00919"></a><span class="lineno">  919</span>&#160;{</div><div class="line"><a name="l00920"></a><span class="lineno">  920</span>&#160;    <a class="code" href="namespacearmnn.xhtml#a14275495042ea02d0348dd70eeaf3d68">TensorInfos</a> infos{input, output};</div><div class="line"><a name="l00921"></a><span class="lineno">  921</span>&#160;</div><div class="line"><a name="l00922"></a><span class="lineno">  922</span>&#160;    <span class="keywordflow">return</span> m_LayerSupport-&gt;IsLayerSupported(<a class="code" href="namespacearmnn.xhtml#a56943a0946e5f15e5e58054b8e7a04a4afa662c6eb71caef475b2b981ce8eccd7">LayerType::Permute</a>,</div><div class="line"><a name="l00923"></a><span class="lineno">  923</span>&#160;                                            infos,</div><div class="line"><a name="l00924"></a><span class="lineno">  924</span>&#160;                                            descriptor,</div><div class="line"><a name="l00925"></a><span class="lineno">  925</span>&#160;                                            EmptyOptional(),</div><div class="line"><a name="l00926"></a><span class="lineno">  926</span>&#160;                                            EmptyOptional(),</div><div class="line"><a name="l00927"></a><span class="lineno">  927</span>&#160;                                            reasonIfUnsupported);</div><div class="line"><a name="l00928"></a><span class="lineno">  928</span>&#160;}</div><div class="ttc" id="namespacearmnn_xhtml_a56943a0946e5f15e5e58054b8e7a04a4afa662c6eb71caef475b2b981ce8eccd7"><div class="ttname"><a href="namespacearmnn.xhtml#a56943a0946e5f15e5e58054b8e7a04a4afa662c6eb71caef475b2b981ce8eccd7">armnn::LayerType::Permute</a></div></div>
<div class="ttc" id="namespacearmnn_xhtml_a14275495042ea02d0348dd70eeaf3d68"><div class="ttname"><a href="namespacearmnn.xhtml#a14275495042ea02d0348dd70eeaf3d68">armnn::TensorInfos</a></div><div class="ttdeci">std::vector&lt; TensorInfo &gt; TensorInfos</div><div class="ttdef"><b>Definition:</b> <a href="_backend_helper_8cpp_source.xhtml#l00151">BackendHelper.cpp:151</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="aec217515cd3dfb6d75562eccead88246"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aec217515cd3dfb6d75562eccead88246">&#9670;&nbsp;</a></span>IsPooling2dSupported()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool IsPooling2dSupported </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;&#160;</td>
          <td class="paramname"><em>input</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;&#160;</td>
          <td class="paramname"><em>output</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="structarmnn_1_1_pooling2d_descriptor.xhtml">Pooling2dDescriptor</a> &amp;&#160;</td>
          <td class="paramname"><em>descriptor</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="classarmnn_1_1_optional.xhtml">Optional</a>&lt; std::string &amp;&gt;&#160;</td>
          <td class="paramname"><em>reasonIfUnsupported</em> = <code><a class="el" href="structarmnn_1_1_empty_optional.xhtml">EmptyOptional</a>()</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_backend_helper_8cpp_source.xhtml#l00930">930</a> of file <a class="el" href="_backend_helper_8cpp_source.xhtml">BackendHelper.cpp</a>.</p>

<p class="reference">References <a class="el" href="namespacearmnn.xhtml#a56943a0946e5f15e5e58054b8e7a04a4ad662867a41bfb30b9f75dda2b5849001">armnn::Pooling2d</a>.</p>

<p class="reference">Referenced by <a class="el" href="_backend_helper_8hpp_source.xhtml#l00026">LayerSupportHandle::LayerSupportHandle()</a>.</p>
<div class="fragment"><div class="line"><a name="l00934"></a><span class="lineno">  934</span>&#160;{</div><div class="line"><a name="l00935"></a><span class="lineno">  935</span>&#160;    <a class="code" href="namespacearmnn.xhtml#a14275495042ea02d0348dd70eeaf3d68">TensorInfos</a> infos{input, output};</div><div class="line"><a name="l00936"></a><span class="lineno">  936</span>&#160;</div><div class="line"><a name="l00937"></a><span class="lineno">  937</span>&#160;    <span class="keywordflow">return</span> m_LayerSupport-&gt;IsLayerSupported(<a class="code" href="namespacearmnn.xhtml#a56943a0946e5f15e5e58054b8e7a04a4ad662867a41bfb30b9f75dda2b5849001">LayerType::Pooling2d</a>,</div><div class="line"><a name="l00938"></a><span class="lineno">  938</span>&#160;                                            infos,</div><div class="line"><a name="l00939"></a><span class="lineno">  939</span>&#160;                                            descriptor,</div><div class="line"><a name="l00940"></a><span class="lineno">  940</span>&#160;                                            EmptyOptional(),</div><div class="line"><a name="l00941"></a><span class="lineno">  941</span>&#160;                                            EmptyOptional(),</div><div class="line"><a name="l00942"></a><span class="lineno">  942</span>&#160;                                            reasonIfUnsupported);</div><div class="line"><a name="l00943"></a><span class="lineno">  943</span>&#160;}</div><div class="ttc" id="namespacearmnn_xhtml_a56943a0946e5f15e5e58054b8e7a04a4ad662867a41bfb30b9f75dda2b5849001"><div class="ttname"><a href="namespacearmnn.xhtml#a56943a0946e5f15e5e58054b8e7a04a4ad662867a41bfb30b9f75dda2b5849001">armnn::LayerType::Pooling2d</a></div></div>
<div class="ttc" id="namespacearmnn_xhtml_a14275495042ea02d0348dd70eeaf3d68"><div class="ttname"><a href="namespacearmnn.xhtml#a14275495042ea02d0348dd70eeaf3d68">armnn::TensorInfos</a></div><div class="ttdeci">std::vector&lt; TensorInfo &gt; TensorInfos</div><div class="ttdef"><b>Definition:</b> <a href="_backend_helper_8cpp_source.xhtml#l00151">BackendHelper.cpp:151</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="ada2164a21874acb3647cc9224b31a80a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ada2164a21874acb3647cc9224b31a80a">&#9670;&nbsp;</a></span>IsPooling3dSupported()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool IsPooling3dSupported </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;&#160;</td>
          <td class="paramname"><em>input</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;&#160;</td>
          <td class="paramname"><em>output</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="structarmnn_1_1_pooling3d_descriptor.xhtml">Pooling3dDescriptor</a> &amp;&#160;</td>
          <td class="paramname"><em>descriptor</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="classarmnn_1_1_optional.xhtml">Optional</a>&lt; std::string &amp;&gt;&#160;</td>
          <td class="paramname"><em>reasonIfUnsupported</em> = <code><a class="el" href="structarmnn_1_1_empty_optional.xhtml">EmptyOptional</a>()</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_backend_helper_8cpp_source.xhtml#l00945">945</a> of file <a class="el" href="_backend_helper_8cpp_source.xhtml">BackendHelper.cpp</a>.</p>

<p class="reference">References <a class="el" href="namespacearmnn.xhtml#a56943a0946e5f15e5e58054b8e7a04a4a2b3140dc366b9fcd25ed786a79d1817c">armnn::Pooling3d</a>.</p>

<p class="reference">Referenced by <a class="el" href="_backend_helper_8hpp_source.xhtml#l00026">LayerSupportHandle::LayerSupportHandle()</a>.</p>
<div class="fragment"><div class="line"><a name="l00949"></a><span class="lineno">  949</span>&#160;{</div><div class="line"><a name="l00950"></a><span class="lineno">  950</span>&#160;    <a class="code" href="namespacearmnn.xhtml#a14275495042ea02d0348dd70eeaf3d68">TensorInfos</a> infos{input, output};</div><div class="line"><a name="l00951"></a><span class="lineno">  951</span>&#160;</div><div class="line"><a name="l00952"></a><span class="lineno">  952</span>&#160;    <span class="keywordflow">return</span> m_LayerSupport-&gt;IsLayerSupported(<a class="code" href="namespacearmnn.xhtml#a56943a0946e5f15e5e58054b8e7a04a4a2b3140dc366b9fcd25ed786a79d1817c">LayerType::Pooling3d</a>,</div><div class="line"><a name="l00953"></a><span class="lineno">  953</span>&#160;                                            infos,</div><div class="line"><a name="l00954"></a><span class="lineno">  954</span>&#160;                                            descriptor,</div><div class="line"><a name="l00955"></a><span class="lineno">  955</span>&#160;                                            EmptyOptional(),</div><div class="line"><a name="l00956"></a><span class="lineno">  956</span>&#160;                                            EmptyOptional(),</div><div class="line"><a name="l00957"></a><span class="lineno">  957</span>&#160;                                            reasonIfUnsupported);</div><div class="line"><a name="l00958"></a><span class="lineno">  958</span>&#160;}</div><div class="ttc" id="namespacearmnn_xhtml_a56943a0946e5f15e5e58054b8e7a04a4a2b3140dc366b9fcd25ed786a79d1817c"><div class="ttname"><a href="namespacearmnn.xhtml#a56943a0946e5f15e5e58054b8e7a04a4a2b3140dc366b9fcd25ed786a79d1817c">armnn::LayerType::Pooling3d</a></div></div>
<div class="ttc" id="namespacearmnn_xhtml_a14275495042ea02d0348dd70eeaf3d68"><div class="ttname"><a href="namespacearmnn.xhtml#a14275495042ea02d0348dd70eeaf3d68">armnn::TensorInfos</a></div><div class="ttdeci">std::vector&lt; TensorInfo &gt; TensorInfos</div><div class="ttdef"><b>Definition:</b> <a href="_backend_helper_8cpp_source.xhtml#l00151">BackendHelper.cpp:151</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="a41c5f5cc4e157499a13862125806802d"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a41c5f5cc4e157499a13862125806802d">&#9670;&nbsp;</a></span>IsPreCompiledSupported()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool IsPreCompiledSupported </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;&#160;</td>
          <td class="paramname"><em>input</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="structarmnn_1_1_pre_compiled_descriptor.xhtml">PreCompiledDescriptor</a> &amp;&#160;</td>
          <td class="paramname"><em>descriptor</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="classarmnn_1_1_optional.xhtml">Optional</a>&lt; std::string &amp;&gt;&#160;</td>
          <td class="paramname"><em>reasonIfUnsupported</em> = <code><a class="el" href="structarmnn_1_1_empty_optional.xhtml">EmptyOptional</a>()</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_backend_helper_8cpp_source.xhtml#l00960">960</a> of file <a class="el" href="_backend_helper_8cpp_source.xhtml">BackendHelper.cpp</a>.</p>

<p class="reference">References <a class="el" href="namespacearmnn.xhtml#a56943a0946e5f15e5e58054b8e7a04a4a1ba143ebe524d46181a4b53470693278">armnn::PreCompiled</a>.</p>

<p class="reference">Referenced by <a class="el" href="_backend_helper_8hpp_source.xhtml#l00026">LayerSupportHandle::LayerSupportHandle()</a>.</p>
<div class="fragment"><div class="line"><a name="l00963"></a><span class="lineno">  963</span>&#160;{</div><div class="line"><a name="l00964"></a><span class="lineno">  964</span>&#160;    <a class="code" href="namespacearmnn.xhtml#a14275495042ea02d0348dd70eeaf3d68">TensorInfos</a> infos{input};</div><div class="line"><a name="l00965"></a><span class="lineno">  965</span>&#160;</div><div class="line"><a name="l00966"></a><span class="lineno">  966</span>&#160;    <span class="keywordflow">return</span> m_LayerSupport-&gt;IsLayerSupported(<a class="code" href="namespacearmnn.xhtml#a56943a0946e5f15e5e58054b8e7a04a4a1ba143ebe524d46181a4b53470693278">LayerType::PreCompiled</a>,</div><div class="line"><a name="l00967"></a><span class="lineno">  967</span>&#160;                                            infos,</div><div class="line"><a name="l00968"></a><span class="lineno">  968</span>&#160;                                            descriptor,</div><div class="line"><a name="l00969"></a><span class="lineno">  969</span>&#160;                                            EmptyOptional(),</div><div class="line"><a name="l00970"></a><span class="lineno">  970</span>&#160;                                            EmptyOptional(),</div><div class="line"><a name="l00971"></a><span class="lineno">  971</span>&#160;                                            reasonIfUnsupported);</div><div class="line"><a name="l00972"></a><span class="lineno">  972</span>&#160;}</div><div class="ttc" id="namespacearmnn_xhtml_a56943a0946e5f15e5e58054b8e7a04a4a1ba143ebe524d46181a4b53470693278"><div class="ttname"><a href="namespacearmnn.xhtml#a56943a0946e5f15e5e58054b8e7a04a4a1ba143ebe524d46181a4b53470693278">armnn::LayerType::PreCompiled</a></div></div>
<div class="ttc" id="namespacearmnn_xhtml_a14275495042ea02d0348dd70eeaf3d68"><div class="ttname"><a href="namespacearmnn.xhtml#a14275495042ea02d0348dd70eeaf3d68">armnn::TensorInfos</a></div><div class="ttdeci">std::vector&lt; TensorInfo &gt; TensorInfos</div><div class="ttdef"><b>Definition:</b> <a href="_backend_helper_8cpp_source.xhtml#l00151">BackendHelper.cpp:151</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="ac935a4773196263a3dbbcb936f06b763"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ac935a4773196263a3dbbcb936f06b763">&#9670;&nbsp;</a></span>IsPreluSupported()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool IsPreluSupported </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;&#160;</td>
          <td class="paramname"><em>input</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;&#160;</td>
          <td class="paramname"><em>alpha</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;&#160;</td>
          <td class="paramname"><em>output</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="classarmnn_1_1_optional.xhtml">Optional</a>&lt; std::string &amp;&gt;&#160;</td>
          <td class="paramname"><em>reasonIfUnsupported</em> = <code><a class="el" href="structarmnn_1_1_empty_optional.xhtml">EmptyOptional</a>()</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_backend_helper_8cpp_source.xhtml#l00974">974</a> of file <a class="el" href="_backend_helper_8cpp_source.xhtml">BackendHelper.cpp</a>.</p>

<p class="reference">References <a class="el" href="namespacearmnn.xhtml#a56943a0946e5f15e5e58054b8e7a04a4a0c5967f09e0669c840ebb1ed0da85e32">armnn::Prelu</a>.</p>

<p class="reference">Referenced by <a class="el" href="_backend_helper_8hpp_source.xhtml#l00026">LayerSupportHandle::LayerSupportHandle()</a>.</p>
<div class="fragment"><div class="line"><a name="l00978"></a><span class="lineno">  978</span>&#160;{</div><div class="line"><a name="l00979"></a><span class="lineno">  979</span>&#160;    <a class="code" href="namespacearmnn.xhtml#a14275495042ea02d0348dd70eeaf3d68">TensorInfos</a> infos{input, alpha, output};</div><div class="line"><a name="l00980"></a><span class="lineno">  980</span>&#160;</div><div class="line"><a name="l00981"></a><span class="lineno">  981</span>&#160;    <span class="keywordflow">return</span> m_LayerSupport-&gt;IsLayerSupported(<a class="code" href="namespacearmnn.xhtml#a56943a0946e5f15e5e58054b8e7a04a4a0c5967f09e0669c840ebb1ed0da85e32">LayerType::Prelu</a>,</div><div class="line"><a name="l00982"></a><span class="lineno">  982</span>&#160;                                            infos,</div><div class="line"><a name="l00983"></a><span class="lineno">  983</span>&#160;                                            BaseDescriptor(),</div><div class="line"><a name="l00984"></a><span class="lineno">  984</span>&#160;                                            EmptyOptional(),</div><div class="line"><a name="l00985"></a><span class="lineno">  985</span>&#160;                                            EmptyOptional(),</div><div class="line"><a name="l00986"></a><span class="lineno">  986</span>&#160;                                            reasonIfUnsupported);</div><div class="line"><a name="l00987"></a><span class="lineno">  987</span>&#160;}</div><div class="ttc" id="namespacearmnn_xhtml_a56943a0946e5f15e5e58054b8e7a04a4a0c5967f09e0669c840ebb1ed0da85e32"><div class="ttname"><a href="namespacearmnn.xhtml#a56943a0946e5f15e5e58054b8e7a04a4a0c5967f09e0669c840ebb1ed0da85e32">armnn::LayerType::Prelu</a></div></div>
<div class="ttc" id="namespacearmnn_xhtml_a14275495042ea02d0348dd70eeaf3d68"><div class="ttname"><a href="namespacearmnn.xhtml#a14275495042ea02d0348dd70eeaf3d68">armnn::TensorInfos</a></div><div class="ttdeci">std::vector&lt; TensorInfo &gt; TensorInfos</div><div class="ttdef"><b>Definition:</b> <a href="_backend_helper_8cpp_source.xhtml#l00151">BackendHelper.cpp:151</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="adc716767c268552145348f1247b47006"></a>
<h2 class="memtitle"><span class="permalink"><a href="#adc716767c268552145348f1247b47006">&#9670;&nbsp;</a></span>IsQLstmSupported()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool IsQLstmSupported </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;&#160;</td>
          <td class="paramname"><em>input</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;&#160;</td>
          <td class="paramname"><em>previousOutputIn</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;&#160;</td>
          <td class="paramname"><em>previousCellStateIn</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;&#160;</td>
          <td class="paramname"><em>outputStateOut</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;&#160;</td>
          <td class="paramname"><em>cellStateOut</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;&#160;</td>
          <td class="paramname"><em>output</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="structarmnn_1_1_q_lstm_descriptor.xhtml">QLstmDescriptor</a> &amp;&#160;</td>
          <td class="paramname"><em>descriptor</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="structarmnn_1_1_lstm_input_params_info.xhtml">LstmInputParamsInfo</a> &amp;&#160;</td>
          <td class="paramname"><em>paramsInfo</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="classarmnn_1_1_optional.xhtml">Optional</a>&lt; std::string &amp;&gt;&#160;</td>
          <td class="paramname"><em>reasonIfUnsupported</em> = <code><a class="el" href="structarmnn_1_1_empty_optional.xhtml">EmptyOptional</a>()</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_backend_helper_8cpp_source.xhtml#l01003">1003</a> of file <a class="el" href="_backend_helper_8cpp_source.xhtml">BackendHelper.cpp</a>.</p>

<p class="reference">References <a class="el" href="namespacearmnn.xhtml#a56943a0946e5f15e5e58054b8e7a04a4a91880b71ea6d007439b7bc7c320b5c25">armnn::QLstm</a>.</p>

<p class="reference">Referenced by <a class="el" href="_backend_helper_8hpp_source.xhtml#l00026">LayerSupportHandle::LayerSupportHandle()</a>.</p>
<div class="fragment"><div class="line"><a name="l01012"></a><span class="lineno"> 1012</span>&#160;{</div><div class="line"><a name="l01013"></a><span class="lineno"> 1013</span>&#160;    <a class="code" href="namespacearmnn.xhtml#a14275495042ea02d0348dd70eeaf3d68">TensorInfos</a> infos{input, previousOutputIn, previousCellStateIn, outputStateOut, cellStateOut, output};</div><div class="line"><a name="l01014"></a><span class="lineno"> 1014</span>&#160;</div><div class="line"><a name="l01015"></a><span class="lineno"> 1015</span>&#160;    <span class="keywordflow">return</span> m_LayerSupport-&gt;IsLayerSupported(<a class="code" href="namespacearmnn.xhtml#a56943a0946e5f15e5e58054b8e7a04a4a91880b71ea6d007439b7bc7c320b5c25">LayerType::QLstm</a>,</div><div class="line"><a name="l01016"></a><span class="lineno"> 1016</span>&#160;                                            infos,</div><div class="line"><a name="l01017"></a><span class="lineno"> 1017</span>&#160;                                            descriptor,</div><div class="line"><a name="l01018"></a><span class="lineno"> 1018</span>&#160;                                            paramsInfo,</div><div class="line"><a name="l01019"></a><span class="lineno"> 1019</span>&#160;                                            EmptyOptional(),</div><div class="line"><a name="l01020"></a><span class="lineno"> 1020</span>&#160;                                            reasonIfUnsupported);</div><div class="line"><a name="l01021"></a><span class="lineno"> 1021</span>&#160;}</div><div class="ttc" id="namespacearmnn_xhtml_a14275495042ea02d0348dd70eeaf3d68"><div class="ttname"><a href="namespacearmnn.xhtml#a14275495042ea02d0348dd70eeaf3d68">armnn::TensorInfos</a></div><div class="ttdeci">std::vector&lt; TensorInfo &gt; TensorInfos</div><div class="ttdef"><b>Definition:</b> <a href="_backend_helper_8cpp_source.xhtml#l00151">BackendHelper.cpp:151</a></div></div>
<div class="ttc" id="namespacearmnn_xhtml_a56943a0946e5f15e5e58054b8e7a04a4a91880b71ea6d007439b7bc7c320b5c25"><div class="ttname"><a href="namespacearmnn.xhtml#a56943a0946e5f15e5e58054b8e7a04a4a91880b71ea6d007439b7bc7c320b5c25">armnn::LayerType::QLstm</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="a169d56334714f8838d6483ac5becfa78"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a169d56334714f8838d6483ac5becfa78">&#9670;&nbsp;</a></span>IsQuantizedLstmSupported()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool IsQuantizedLstmSupported </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;&#160;</td>
          <td class="paramname"><em>input</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;&#160;</td>
          <td class="paramname"><em>previousCellStateIn</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;&#160;</td>
          <td class="paramname"><em>previousOutputIn</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;&#160;</td>
          <td class="paramname"><em>cellStateOut</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;&#160;</td>
          <td class="paramname"><em>output</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="structarmnn_1_1_quantized_lstm_input_params_info.xhtml">QuantizedLstmInputParamsInfo</a> &amp;&#160;</td>
          <td class="paramname"><em>paramsInfo</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="classarmnn_1_1_optional.xhtml">Optional</a>&lt; std::string &amp;&gt;&#160;</td>
          <td class="paramname"><em>reasonIfUnsupported</em> = <code><a class="el" href="structarmnn_1_1_empty_optional.xhtml">EmptyOptional</a>()</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_backend_helper_8cpp_source.xhtml#l01023">1023</a> of file <a class="el" href="_backend_helper_8cpp_source.xhtml">BackendHelper.cpp</a>.</p>

<p class="reference">References <a class="el" href="namespacearmnn.xhtml#a56943a0946e5f15e5e58054b8e7a04a4a890a37ff3bfe123414ba7e6f052b49f3">armnn::QuantizedLstm</a>.</p>

<p class="reference">Referenced by <a class="el" href="_backend_helper_8hpp_source.xhtml#l00026">LayerSupportHandle::LayerSupportHandle()</a>.</p>
<div class="fragment"><div class="line"><a name="l01030"></a><span class="lineno"> 1030</span>&#160;{</div><div class="line"><a name="l01031"></a><span class="lineno"> 1031</span>&#160;    <a class="code" href="namespacearmnn.xhtml#a14275495042ea02d0348dd70eeaf3d68">TensorInfos</a> infos{input, previousCellStateIn, previousOutputIn, cellStateOut, output};</div><div class="line"><a name="l01032"></a><span class="lineno"> 1032</span>&#160;</div><div class="line"><a name="l01033"></a><span class="lineno"> 1033</span>&#160;    <span class="keywordflow">return</span> m_LayerSupport-&gt;IsLayerSupported(<a class="code" href="namespacearmnn.xhtml#a56943a0946e5f15e5e58054b8e7a04a4a890a37ff3bfe123414ba7e6f052b49f3">LayerType::QuantizedLstm</a>,</div><div class="line"><a name="l01034"></a><span class="lineno"> 1034</span>&#160;                                            infos,</div><div class="line"><a name="l01035"></a><span class="lineno"> 1035</span>&#160;                                            BaseDescriptor(),</div><div class="line"><a name="l01036"></a><span class="lineno"> 1036</span>&#160;                                            EmptyOptional(),</div><div class="line"><a name="l01037"></a><span class="lineno"> 1037</span>&#160;                                            paramsInfo,</div><div class="line"><a name="l01038"></a><span class="lineno"> 1038</span>&#160;                                            reasonIfUnsupported);</div><div class="line"><a name="l01039"></a><span class="lineno"> 1039</span>&#160;}</div><div class="ttc" id="namespacearmnn_xhtml_a56943a0946e5f15e5e58054b8e7a04a4a890a37ff3bfe123414ba7e6f052b49f3"><div class="ttname"><a href="namespacearmnn.xhtml#a56943a0946e5f15e5e58054b8e7a04a4a890a37ff3bfe123414ba7e6f052b49f3">armnn::LayerType::QuantizedLstm</a></div></div>
<div class="ttc" id="namespacearmnn_xhtml_a14275495042ea02d0348dd70eeaf3d68"><div class="ttname"><a href="namespacearmnn.xhtml#a14275495042ea02d0348dd70eeaf3d68">armnn::TensorInfos</a></div><div class="ttdeci">std::vector&lt; TensorInfo &gt; TensorInfos</div><div class="ttdef"><b>Definition:</b> <a href="_backend_helper_8cpp_source.xhtml#l00151">BackendHelper.cpp:151</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="ae6eccff32da02f489e295908ebb2651a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ae6eccff32da02f489e295908ebb2651a">&#9670;&nbsp;</a></span>IsQuantizeSupported()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool IsQuantizeSupported </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;&#160;</td>
          <td class="paramname"><em>input</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;&#160;</td>
          <td class="paramname"><em>output</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="classarmnn_1_1_optional.xhtml">Optional</a>&lt; std::string &amp;&gt;&#160;</td>
          <td class="paramname"><em>reasonIfUnsupported</em> = <code><a class="el" href="structarmnn_1_1_empty_optional.xhtml">EmptyOptional</a>()</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_backend_helper_8cpp_source.xhtml#l00989">989</a> of file <a class="el" href="_backend_helper_8cpp_source.xhtml">BackendHelper.cpp</a>.</p>

<p class="reference">References <a class="el" href="namespacearmnn.xhtml#a56943a0946e5f15e5e58054b8e7a04a4aca39930e22f40d10155a57dba32240bb">armnn::Quantize</a>.</p>

<p class="reference">Referenced by <a class="el" href="_backend_helper_8hpp_source.xhtml#l00026">LayerSupportHandle::LayerSupportHandle()</a>.</p>
<div class="fragment"><div class="line"><a name="l00992"></a><span class="lineno">  992</span>&#160;{</div><div class="line"><a name="l00993"></a><span class="lineno">  993</span>&#160;    <a class="code" href="namespacearmnn.xhtml#a14275495042ea02d0348dd70eeaf3d68">TensorInfos</a> infos{input, output};</div><div class="line"><a name="l00994"></a><span class="lineno">  994</span>&#160;</div><div class="line"><a name="l00995"></a><span class="lineno">  995</span>&#160;    <span class="keywordflow">return</span> m_LayerSupport-&gt;IsLayerSupported(<a class="code" href="namespacearmnn.xhtml#a56943a0946e5f15e5e58054b8e7a04a4aca39930e22f40d10155a57dba32240bb">LayerType::Quantize</a>,</div><div class="line"><a name="l00996"></a><span class="lineno">  996</span>&#160;                                            infos,</div><div class="line"><a name="l00997"></a><span class="lineno">  997</span>&#160;                                            BaseDescriptor(),</div><div class="line"><a name="l00998"></a><span class="lineno">  998</span>&#160;                                            EmptyOptional(),</div><div class="line"><a name="l00999"></a><span class="lineno">  999</span>&#160;                                            EmptyOptional(),</div><div class="line"><a name="l01000"></a><span class="lineno"> 1000</span>&#160;                                            reasonIfUnsupported);</div><div class="line"><a name="l01001"></a><span class="lineno"> 1001</span>&#160;}</div><div class="ttc" id="namespacearmnn_xhtml_a56943a0946e5f15e5e58054b8e7a04a4aca39930e22f40d10155a57dba32240bb"><div class="ttname"><a href="namespacearmnn.xhtml#a56943a0946e5f15e5e58054b8e7a04a4aca39930e22f40d10155a57dba32240bb">armnn::LayerType::Quantize</a></div></div>
<div class="ttc" id="namespacearmnn_xhtml_a14275495042ea02d0348dd70eeaf3d68"><div class="ttname"><a href="namespacearmnn.xhtml#a14275495042ea02d0348dd70eeaf3d68">armnn::TensorInfos</a></div><div class="ttdeci">std::vector&lt; TensorInfo &gt; TensorInfos</div><div class="ttdef"><b>Definition:</b> <a href="_backend_helper_8cpp_source.xhtml#l00151">BackendHelper.cpp:151</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="a84e1baf46bd5fbf1c945c3eff8639f26"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a84e1baf46bd5fbf1c945c3eff8639f26">&#9670;&nbsp;</a></span>IsRankSupported()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool IsRankSupported </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;&#160;</td>
          <td class="paramname"><em>input</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;&#160;</td>
          <td class="paramname"><em>output</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="classarmnn_1_1_optional.xhtml">Optional</a>&lt; std::string &amp;&gt;&#160;</td>
          <td class="paramname"><em>reasonIfUnsupported</em> = <code><a class="el" href="structarmnn_1_1_empty_optional.xhtml">EmptyOptional</a>()</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_backend_helper_8cpp_source.xhtml#l01041">1041</a> of file <a class="el" href="_backend_helper_8cpp_source.xhtml">BackendHelper.cpp</a>.</p>

<p class="reference">References <a class="el" href="namespacearmnn.xhtml#a56943a0946e5f15e5e58054b8e7a04a4a021da1b20f73dc252361a54d80497ef3">armnn::Rank</a>.</p>

<p class="reference">Referenced by <a class="el" href="_backend_helper_8hpp_source.xhtml#l00026">LayerSupportHandle::LayerSupportHandle()</a>.</p>
<div class="fragment"><div class="line"><a name="l01044"></a><span class="lineno"> 1044</span>&#160;{</div><div class="line"><a name="l01045"></a><span class="lineno"> 1045</span>&#160;    <a class="code" href="namespacearmnn.xhtml#a14275495042ea02d0348dd70eeaf3d68">TensorInfos</a> infos{input, output};</div><div class="line"><a name="l01046"></a><span class="lineno"> 1046</span>&#160;</div><div class="line"><a name="l01047"></a><span class="lineno"> 1047</span>&#160;    <span class="keywordflow">return</span> m_LayerSupport-&gt;IsLayerSupported(<a class="code" href="namespacearmnn.xhtml#a56943a0946e5f15e5e58054b8e7a04a4a021da1b20f73dc252361a54d80497ef3">LayerType::Rank</a>,</div><div class="line"><a name="l01048"></a><span class="lineno"> 1048</span>&#160;                                            infos,</div><div class="line"><a name="l01049"></a><span class="lineno"> 1049</span>&#160;                                            BaseDescriptor(),</div><div class="line"><a name="l01050"></a><span class="lineno"> 1050</span>&#160;                                            EmptyOptional(),</div><div class="line"><a name="l01051"></a><span class="lineno"> 1051</span>&#160;                                            EmptyOptional(),</div><div class="line"><a name="l01052"></a><span class="lineno"> 1052</span>&#160;                                            reasonIfUnsupported);</div><div class="line"><a name="l01053"></a><span class="lineno"> 1053</span>&#160;}</div><div class="ttc" id="namespacearmnn_xhtml_a56943a0946e5f15e5e58054b8e7a04a4a021da1b20f73dc252361a54d80497ef3"><div class="ttname"><a href="namespacearmnn.xhtml#a56943a0946e5f15e5e58054b8e7a04a4a021da1b20f73dc252361a54d80497ef3">armnn::LayerType::Rank</a></div></div>
<div class="ttc" id="namespacearmnn_xhtml_a14275495042ea02d0348dd70eeaf3d68"><div class="ttname"><a href="namespacearmnn.xhtml#a14275495042ea02d0348dd70eeaf3d68">armnn::TensorInfos</a></div><div class="ttdeci">std::vector&lt; TensorInfo &gt; TensorInfos</div><div class="ttdef"><b>Definition:</b> <a href="_backend_helper_8cpp_source.xhtml#l00151">BackendHelper.cpp:151</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="a3cfc812d1149871d268ee8f22a8d560f"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a3cfc812d1149871d268ee8f22a8d560f">&#9670;&nbsp;</a></span>IsReduceSupported()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool IsReduceSupported </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;&#160;</td>
          <td class="paramname"><em>input</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;&#160;</td>
          <td class="paramname"><em>output</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="structarmnn_1_1_reduce_descriptor.xhtml">ReduceDescriptor</a> &amp;&#160;</td>
          <td class="paramname"><em>descriptor</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="classarmnn_1_1_optional.xhtml">Optional</a>&lt; std::string &amp;&gt;&#160;</td>
          <td class="paramname"><em>reasonIfUnsupported</em> = <code><a class="el" href="structarmnn_1_1_empty_optional.xhtml">EmptyOptional</a>()</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_backend_helper_8cpp_source.xhtml#l01055">1055</a> of file <a class="el" href="_backend_helper_8cpp_source.xhtml">BackendHelper.cpp</a>.</p>

<p class="reference">References <a class="el" href="namespacearmnn.xhtml#a56943a0946e5f15e5e58054b8e7a04a4aec4875f03ff0bb0b26cf76ac7f41e3c8">armnn::Reduce</a>.</p>

<p class="reference">Referenced by <a class="el" href="_backend_helper_8hpp_source.xhtml#l00026">LayerSupportHandle::LayerSupportHandle()</a>.</p>
<div class="fragment"><div class="line"><a name="l01059"></a><span class="lineno"> 1059</span>&#160;{</div><div class="line"><a name="l01060"></a><span class="lineno"> 1060</span>&#160;    <a class="code" href="namespacearmnn.xhtml#a14275495042ea02d0348dd70eeaf3d68">TensorInfos</a> infos{input, output};</div><div class="line"><a name="l01061"></a><span class="lineno"> 1061</span>&#160;</div><div class="line"><a name="l01062"></a><span class="lineno"> 1062</span>&#160;    <span class="keywordflow">return</span> m_LayerSupport-&gt;IsLayerSupported(<a class="code" href="namespacearmnn.xhtml#a56943a0946e5f15e5e58054b8e7a04a4aec4875f03ff0bb0b26cf76ac7f41e3c8">LayerType::Reduce</a>,</div><div class="line"><a name="l01063"></a><span class="lineno"> 1063</span>&#160;                                            infos,</div><div class="line"><a name="l01064"></a><span class="lineno"> 1064</span>&#160;                                            descriptor,</div><div class="line"><a name="l01065"></a><span class="lineno"> 1065</span>&#160;                                            EmptyOptional(),</div><div class="line"><a name="l01066"></a><span class="lineno"> 1066</span>&#160;                                            EmptyOptional(),</div><div class="line"><a name="l01067"></a><span class="lineno"> 1067</span>&#160;                                            reasonIfUnsupported);</div><div class="line"><a name="l01068"></a><span class="lineno"> 1068</span>&#160;}</div><div class="ttc" id="namespacearmnn_xhtml_a56943a0946e5f15e5e58054b8e7a04a4aec4875f03ff0bb0b26cf76ac7f41e3c8"><div class="ttname"><a href="namespacearmnn.xhtml#a56943a0946e5f15e5e58054b8e7a04a4aec4875f03ff0bb0b26cf76ac7f41e3c8">armnn::LayerType::Reduce</a></div></div>
<div class="ttc" id="namespacearmnn_xhtml_a14275495042ea02d0348dd70eeaf3d68"><div class="ttname"><a href="namespacearmnn.xhtml#a14275495042ea02d0348dd70eeaf3d68">armnn::TensorInfos</a></div><div class="ttdeci">std::vector&lt; TensorInfo &gt; TensorInfos</div><div class="ttdef"><b>Definition:</b> <a href="_backend_helper_8cpp_source.xhtml#l00151">BackendHelper.cpp:151</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="ab87665654c1814f2cca7b47144b7b10c"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ab87665654c1814f2cca7b47144b7b10c">&#9670;&nbsp;</a></span>IsReshapeSupported()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool IsReshapeSupported </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;&#160;</td>
          <td class="paramname"><em>input</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;&#160;</td>
          <td class="paramname"><em>output</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="structarmnn_1_1_reshape_descriptor.xhtml">ReshapeDescriptor</a> &amp;&#160;</td>
          <td class="paramname"><em>descriptor</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="classarmnn_1_1_optional.xhtml">Optional</a>&lt; std::string &amp;&gt;&#160;</td>
          <td class="paramname"><em>reasonIfUnsupported</em> = <code><a class="el" href="structarmnn_1_1_empty_optional.xhtml">EmptyOptional</a>()</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_backend_helper_8cpp_source.xhtml#l01070">1070</a> of file <a class="el" href="_backend_helper_8cpp_source.xhtml">BackendHelper.cpp</a>.</p>

<p class="reference">References <a class="el" href="namespacearmnn.xhtml#a56943a0946e5f15e5e58054b8e7a04a4aa7c59ccedc6a3bd90c17f3b990afefad">armnn::Reshape</a>.</p>

<p class="reference">Referenced by <a class="el" href="_backend_helper_8hpp_source.xhtml#l00026">LayerSupportHandle::LayerSupportHandle()</a>.</p>
<div class="fragment"><div class="line"><a name="l01074"></a><span class="lineno"> 1074</span>&#160;{</div><div class="line"><a name="l01075"></a><span class="lineno"> 1075</span>&#160;    <a class="code" href="namespacearmnn.xhtml#a14275495042ea02d0348dd70eeaf3d68">TensorInfos</a> infos{input, output};</div><div class="line"><a name="l01076"></a><span class="lineno"> 1076</span>&#160;</div><div class="line"><a name="l01077"></a><span class="lineno"> 1077</span>&#160;    <span class="keywordflow">return</span> m_LayerSupport-&gt;IsLayerSupported(<a class="code" href="namespacearmnn.xhtml#a56943a0946e5f15e5e58054b8e7a04a4aa7c59ccedc6a3bd90c17f3b990afefad">LayerType::Reshape</a>,</div><div class="line"><a name="l01078"></a><span class="lineno"> 1078</span>&#160;                                            infos,</div><div class="line"><a name="l01079"></a><span class="lineno"> 1079</span>&#160;                                            descriptor,</div><div class="line"><a name="l01080"></a><span class="lineno"> 1080</span>&#160;                                            EmptyOptional(),</div><div class="line"><a name="l01081"></a><span class="lineno"> 1081</span>&#160;                                            EmptyOptional(),</div><div class="line"><a name="l01082"></a><span class="lineno"> 1082</span>&#160;                                            reasonIfUnsupported);</div><div class="line"><a name="l01083"></a><span class="lineno"> 1083</span>&#160;}</div><div class="ttc" id="namespacearmnn_xhtml_a56943a0946e5f15e5e58054b8e7a04a4aa7c59ccedc6a3bd90c17f3b990afefad"><div class="ttname"><a href="namespacearmnn.xhtml#a56943a0946e5f15e5e58054b8e7a04a4aa7c59ccedc6a3bd90c17f3b990afefad">armnn::LayerType::Reshape</a></div></div>
<div class="ttc" id="namespacearmnn_xhtml_a14275495042ea02d0348dd70eeaf3d68"><div class="ttname"><a href="namespacearmnn.xhtml#a14275495042ea02d0348dd70eeaf3d68">armnn::TensorInfos</a></div><div class="ttdeci">std::vector&lt; TensorInfo &gt; TensorInfos</div><div class="ttdef"><b>Definition:</b> <a href="_backend_helper_8cpp_source.xhtml#l00151">BackendHelper.cpp:151</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="a17f237a80f496614d150b727e8d007c3"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a17f237a80f496614d150b727e8d007c3">&#9670;&nbsp;</a></span>IsResizeSupported()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool IsResizeSupported </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;&#160;</td>
          <td class="paramname"><em>input</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;&#160;</td>
          <td class="paramname"><em>output</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="structarmnn_1_1_resize_descriptor.xhtml">ResizeDescriptor</a> &amp;&#160;</td>
          <td class="paramname"><em>descriptor</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="classarmnn_1_1_optional.xhtml">Optional</a>&lt; std::string &amp;&gt;&#160;</td>
          <td class="paramname"><em>reasonIfUnsupported</em> = <code><a class="el" href="structarmnn_1_1_empty_optional.xhtml">EmptyOptional</a>()</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_backend_helper_8cpp_source.xhtml#l01085">1085</a> of file <a class="el" href="_backend_helper_8cpp_source.xhtml">BackendHelper.cpp</a>.</p>

<p class="reference">References <a class="el" href="namespacearmnn.xhtml#a56943a0946e5f15e5e58054b8e7a04a4a9d723d04c40bfd81835c0766a698cf63">armnn::Resize</a>.</p>

<p class="reference">Referenced by <a class="el" href="_backend_helper_8hpp_source.xhtml#l00026">LayerSupportHandle::LayerSupportHandle()</a>.</p>
<div class="fragment"><div class="line"><a name="l01089"></a><span class="lineno"> 1089</span>&#160;{</div><div class="line"><a name="l01090"></a><span class="lineno"> 1090</span>&#160;    <a class="code" href="namespacearmnn.xhtml#a14275495042ea02d0348dd70eeaf3d68">TensorInfos</a> infos{input, output};</div><div class="line"><a name="l01091"></a><span class="lineno"> 1091</span>&#160;</div><div class="line"><a name="l01092"></a><span class="lineno"> 1092</span>&#160;    <span class="keywordflow">return</span> m_LayerSupport-&gt;IsLayerSupported(<a class="code" href="namespacearmnn.xhtml#a56943a0946e5f15e5e58054b8e7a04a4a9d723d04c40bfd81835c0766a698cf63">LayerType::Resize</a>,</div><div class="line"><a name="l01093"></a><span class="lineno"> 1093</span>&#160;                                            infos,</div><div class="line"><a name="l01094"></a><span class="lineno"> 1094</span>&#160;                                            descriptor,</div><div class="line"><a name="l01095"></a><span class="lineno"> 1095</span>&#160;                                            EmptyOptional(),</div><div class="line"><a name="l01096"></a><span class="lineno"> 1096</span>&#160;                                            EmptyOptional(),</div><div class="line"><a name="l01097"></a><span class="lineno"> 1097</span>&#160;                                            reasonIfUnsupported);</div><div class="line"><a name="l01098"></a><span class="lineno"> 1098</span>&#160;}</div><div class="ttc" id="namespacearmnn_xhtml_a56943a0946e5f15e5e58054b8e7a04a4a9d723d04c40bfd81835c0766a698cf63"><div class="ttname"><a href="namespacearmnn.xhtml#a56943a0946e5f15e5e58054b8e7a04a4a9d723d04c40bfd81835c0766a698cf63">armnn::LayerType::Resize</a></div></div>
<div class="ttc" id="namespacearmnn_xhtml_a14275495042ea02d0348dd70eeaf3d68"><div class="ttname"><a href="namespacearmnn.xhtml#a14275495042ea02d0348dd70eeaf3d68">armnn::TensorInfos</a></div><div class="ttdeci">std::vector&lt; TensorInfo &gt; TensorInfos</div><div class="ttdef"><b>Definition:</b> <a href="_backend_helper_8cpp_source.xhtml#l00151">BackendHelper.cpp:151</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="a3de367077cfc29d43575b5a7501b0c9c"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a3de367077cfc29d43575b5a7501b0c9c">&#9670;&nbsp;</a></span>IsShapeSupported()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool IsShapeSupported </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;&#160;</td>
          <td class="paramname"><em>input</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;&#160;</td>
          <td class="paramname"><em>output</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="classarmnn_1_1_optional.xhtml">Optional</a>&lt; std::string &amp;&gt;&#160;</td>
          <td class="paramname"><em>reasonIfUnsupported</em> = <code><a class="el" href="structarmnn_1_1_empty_optional.xhtml">EmptyOptional</a>()</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_backend_helper_8cpp_source.xhtml#l01100">1100</a> of file <a class="el" href="_backend_helper_8cpp_source.xhtml">BackendHelper.cpp</a>.</p>

<p class="reference">References <a class="el" href="namespacearmnn.xhtml#a56943a0946e5f15e5e58054b8e7a04a4a880c1273b27d27cfc82004c3a4b205c9">armnn::Shape</a>.</p>

<p class="reference">Referenced by <a class="el" href="_backend_helper_8hpp_source.xhtml#l00026">LayerSupportHandle::LayerSupportHandle()</a>.</p>
<div class="fragment"><div class="line"><a name="l01103"></a><span class="lineno"> 1103</span>&#160;{</div><div class="line"><a name="l01104"></a><span class="lineno"> 1104</span>&#160;    <a class="code" href="namespacearmnn.xhtml#a14275495042ea02d0348dd70eeaf3d68">TensorInfos</a> infos{input, output};</div><div class="line"><a name="l01105"></a><span class="lineno"> 1105</span>&#160;</div><div class="line"><a name="l01106"></a><span class="lineno"> 1106</span>&#160;    <span class="keywordflow">return</span> m_LayerSupport-&gt;IsLayerSupported(<a class="code" href="namespacearmnn.xhtml#a56943a0946e5f15e5e58054b8e7a04a4a880c1273b27d27cfc82004c3a4b205c9">LayerType::Shape</a>,</div><div class="line"><a name="l01107"></a><span class="lineno"> 1107</span>&#160;                                            infos,</div><div class="line"><a name="l01108"></a><span class="lineno"> 1108</span>&#160;                                            BaseDescriptor(),</div><div class="line"><a name="l01109"></a><span class="lineno"> 1109</span>&#160;                                            EmptyOptional(),</div><div class="line"><a name="l01110"></a><span class="lineno"> 1110</span>&#160;                                            EmptyOptional(),</div><div class="line"><a name="l01111"></a><span class="lineno"> 1111</span>&#160;                                            reasonIfUnsupported);</div><div class="line"><a name="l01112"></a><span class="lineno"> 1112</span>&#160;}</div><div class="ttc" id="namespacearmnn_xhtml_a56943a0946e5f15e5e58054b8e7a04a4a880c1273b27d27cfc82004c3a4b205c9"><div class="ttname"><a href="namespacearmnn.xhtml#a56943a0946e5f15e5e58054b8e7a04a4a880c1273b27d27cfc82004c3a4b205c9">armnn::LayerType::Shape</a></div></div>
<div class="ttc" id="namespacearmnn_xhtml_a14275495042ea02d0348dd70eeaf3d68"><div class="ttname"><a href="namespacearmnn.xhtml#a14275495042ea02d0348dd70eeaf3d68">armnn::TensorInfos</a></div><div class="ttdeci">std::vector&lt; TensorInfo &gt; TensorInfos</div><div class="ttdef"><b>Definition:</b> <a href="_backend_helper_8cpp_source.xhtml#l00151">BackendHelper.cpp:151</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="a87aa9bc25667670215e5f6c5b774abee"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a87aa9bc25667670215e5f6c5b774abee">&#9670;&nbsp;</a></span>IsSliceSupported()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool IsSliceSupported </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;&#160;</td>
          <td class="paramname"><em>input</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;&#160;</td>
          <td class="paramname"><em>output</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="structarmnn_1_1_slice_descriptor.xhtml">SliceDescriptor</a> &amp;&#160;</td>
          <td class="paramname"><em>descriptor</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="classarmnn_1_1_optional.xhtml">Optional</a>&lt; std::string &amp;&gt;&#160;</td>
          <td class="paramname"><em>reasonIfUnsupported</em> = <code><a class="el" href="structarmnn_1_1_empty_optional.xhtml">EmptyOptional</a>()</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_backend_helper_8cpp_source.xhtml#l01114">1114</a> of file <a class="el" href="_backend_helper_8cpp_source.xhtml">BackendHelper.cpp</a>.</p>

<p class="reference">References <a class="el" href="namespacearmnn.xhtml#a56943a0946e5f15e5e58054b8e7a04a4ad140d37ad98c12ccd8e1c432f548bcdb">armnn::Slice</a>.</p>

<p class="reference">Referenced by <a class="el" href="_backend_helper_8hpp_source.xhtml#l00026">LayerSupportHandle::LayerSupportHandle()</a>.</p>
<div class="fragment"><div class="line"><a name="l01118"></a><span class="lineno"> 1118</span>&#160;{</div><div class="line"><a name="l01119"></a><span class="lineno"> 1119</span>&#160;    <a class="code" href="namespacearmnn.xhtml#a14275495042ea02d0348dd70eeaf3d68">TensorInfos</a> infos{input, output};</div><div class="line"><a name="l01120"></a><span class="lineno"> 1120</span>&#160;</div><div class="line"><a name="l01121"></a><span class="lineno"> 1121</span>&#160;    <span class="keywordflow">return</span> m_LayerSupport-&gt;IsLayerSupported(<a class="code" href="namespacearmnn.xhtml#a56943a0946e5f15e5e58054b8e7a04a4ad140d37ad98c12ccd8e1c432f548bcdb">LayerType::Slice</a>,</div><div class="line"><a name="l01122"></a><span class="lineno"> 1122</span>&#160;                                            infos,</div><div class="line"><a name="l01123"></a><span class="lineno"> 1123</span>&#160;                                            descriptor,</div><div class="line"><a name="l01124"></a><span class="lineno"> 1124</span>&#160;                                            EmptyOptional(),</div><div class="line"><a name="l01125"></a><span class="lineno"> 1125</span>&#160;                                            EmptyOptional(),</div><div class="line"><a name="l01126"></a><span class="lineno"> 1126</span>&#160;                                            reasonIfUnsupported);</div><div class="line"><a name="l01127"></a><span class="lineno"> 1127</span>&#160;}</div><div class="ttc" id="namespacearmnn_xhtml_a14275495042ea02d0348dd70eeaf3d68"><div class="ttname"><a href="namespacearmnn.xhtml#a14275495042ea02d0348dd70eeaf3d68">armnn::TensorInfos</a></div><div class="ttdeci">std::vector&lt; TensorInfo &gt; TensorInfos</div><div class="ttdef"><b>Definition:</b> <a href="_backend_helper_8cpp_source.xhtml#l00151">BackendHelper.cpp:151</a></div></div>
<div class="ttc" id="namespacearmnn_xhtml_a56943a0946e5f15e5e58054b8e7a04a4ad140d37ad98c12ccd8e1c432f548bcdb"><div class="ttname"><a href="namespacearmnn.xhtml#a56943a0946e5f15e5e58054b8e7a04a4ad140d37ad98c12ccd8e1c432f548bcdb">armnn::LayerType::Slice</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="a86c61459dbddc1dce1c386a4d8b04694"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a86c61459dbddc1dce1c386a4d8b04694">&#9670;&nbsp;</a></span>IsSoftmaxSupported()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool IsSoftmaxSupported </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;&#160;</td>
          <td class="paramname"><em>input</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;&#160;</td>
          <td class="paramname"><em>output</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="structarmnn_1_1_softmax_descriptor.xhtml">SoftmaxDescriptor</a> &amp;&#160;</td>
          <td class="paramname"><em>descriptor</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="classarmnn_1_1_optional.xhtml">Optional</a>&lt; std::string &amp;&gt;&#160;</td>
          <td class="paramname"><em>reasonIfUnsupported</em> = <code><a class="el" href="structarmnn_1_1_empty_optional.xhtml">EmptyOptional</a>()</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_backend_helper_8cpp_source.xhtml#l01129">1129</a> of file <a class="el" href="_backend_helper_8cpp_source.xhtml">BackendHelper.cpp</a>.</p>

<p class="reference">References <a class="el" href="namespacearmnn.xhtml#a56943a0946e5f15e5e58054b8e7a04a4a31d953b9d49a6b4378f45097047976d0">armnn::Softmax</a>.</p>

<p class="reference">Referenced by <a class="el" href="_backend_helper_8hpp_source.xhtml#l00026">LayerSupportHandle::LayerSupportHandle()</a>.</p>
<div class="fragment"><div class="line"><a name="l01133"></a><span class="lineno"> 1133</span>&#160;{</div><div class="line"><a name="l01134"></a><span class="lineno"> 1134</span>&#160;    <a class="code" href="namespacearmnn.xhtml#a14275495042ea02d0348dd70eeaf3d68">TensorInfos</a> infos{input, output};</div><div class="line"><a name="l01135"></a><span class="lineno"> 1135</span>&#160;</div><div class="line"><a name="l01136"></a><span class="lineno"> 1136</span>&#160;    <span class="keywordflow">return</span> m_LayerSupport-&gt;IsLayerSupported(<a class="code" href="namespacearmnn.xhtml#a56943a0946e5f15e5e58054b8e7a04a4a31d953b9d49a6b4378f45097047976d0">LayerType::Softmax</a>,</div><div class="line"><a name="l01137"></a><span class="lineno"> 1137</span>&#160;                                            infos,</div><div class="line"><a name="l01138"></a><span class="lineno"> 1138</span>&#160;                                            descriptor,</div><div class="line"><a name="l01139"></a><span class="lineno"> 1139</span>&#160;                                            EmptyOptional(),</div><div class="line"><a name="l01140"></a><span class="lineno"> 1140</span>&#160;                                            EmptyOptional(),</div><div class="line"><a name="l01141"></a><span class="lineno"> 1141</span>&#160;                                            reasonIfUnsupported);</div><div class="line"><a name="l01142"></a><span class="lineno"> 1142</span>&#160;}</div><div class="ttc" id="namespacearmnn_xhtml_a56943a0946e5f15e5e58054b8e7a04a4a31d953b9d49a6b4378f45097047976d0"><div class="ttname"><a href="namespacearmnn.xhtml#a56943a0946e5f15e5e58054b8e7a04a4a31d953b9d49a6b4378f45097047976d0">armnn::LayerType::Softmax</a></div></div>
<div class="ttc" id="namespacearmnn_xhtml_a14275495042ea02d0348dd70eeaf3d68"><div class="ttname"><a href="namespacearmnn.xhtml#a14275495042ea02d0348dd70eeaf3d68">armnn::TensorInfos</a></div><div class="ttdeci">std::vector&lt; TensorInfo &gt; TensorInfos</div><div class="ttdef"><b>Definition:</b> <a href="_backend_helper_8cpp_source.xhtml#l00151">BackendHelper.cpp:151</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="acb38e46aaba6f0296b7915ab5019abb0"></a>
<h2 class="memtitle"><span class="permalink"><a href="#acb38e46aaba6f0296b7915ab5019abb0">&#9670;&nbsp;</a></span>IsSpaceToBatchNdSupported()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool IsSpaceToBatchNdSupported </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;&#160;</td>
          <td class="paramname"><em>input</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;&#160;</td>
          <td class="paramname"><em>output</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="structarmnn_1_1_space_to_batch_nd_descriptor.xhtml">SpaceToBatchNdDescriptor</a> &amp;&#160;</td>
          <td class="paramname"><em>descriptor</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="classarmnn_1_1_optional.xhtml">Optional</a>&lt; std::string &amp;&gt;&#160;</td>
          <td class="paramname"><em>reasonIfUnsupported</em> = <code><a class="el" href="structarmnn_1_1_empty_optional.xhtml">EmptyOptional</a>()</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_backend_helper_8cpp_source.xhtml#l01144">1144</a> of file <a class="el" href="_backend_helper_8cpp_source.xhtml">BackendHelper.cpp</a>.</p>

<p class="reference">References <a class="el" href="namespacearmnn.xhtml#a56943a0946e5f15e5e58054b8e7a04a4a337c392144dca0d18290c6b4711a2279">armnn::SpaceToBatchNd</a>.</p>

<p class="reference">Referenced by <a class="el" href="_backend_helper_8hpp_source.xhtml#l00026">LayerSupportHandle::LayerSupportHandle()</a>.</p>
<div class="fragment"><div class="line"><a name="l01148"></a><span class="lineno"> 1148</span>&#160;{</div><div class="line"><a name="l01149"></a><span class="lineno"> 1149</span>&#160;    <a class="code" href="namespacearmnn.xhtml#a14275495042ea02d0348dd70eeaf3d68">TensorInfos</a> infos{input, output};</div><div class="line"><a name="l01150"></a><span class="lineno"> 1150</span>&#160;</div><div class="line"><a name="l01151"></a><span class="lineno"> 1151</span>&#160;    <span class="keywordflow">return</span> m_LayerSupport-&gt;IsLayerSupported(<a class="code" href="namespacearmnn.xhtml#a56943a0946e5f15e5e58054b8e7a04a4a337c392144dca0d18290c6b4711a2279">LayerType::SpaceToBatchNd</a>,</div><div class="line"><a name="l01152"></a><span class="lineno"> 1152</span>&#160;                                            infos,</div><div class="line"><a name="l01153"></a><span class="lineno"> 1153</span>&#160;                                            descriptor,</div><div class="line"><a name="l01154"></a><span class="lineno"> 1154</span>&#160;                                            EmptyOptional(),</div><div class="line"><a name="l01155"></a><span class="lineno"> 1155</span>&#160;                                            EmptyOptional(),</div><div class="line"><a name="l01156"></a><span class="lineno"> 1156</span>&#160;                                            reasonIfUnsupported);</div><div class="line"><a name="l01157"></a><span class="lineno"> 1157</span>&#160;}</div><div class="ttc" id="namespacearmnn_xhtml_a56943a0946e5f15e5e58054b8e7a04a4a337c392144dca0d18290c6b4711a2279"><div class="ttname"><a href="namespacearmnn.xhtml#a56943a0946e5f15e5e58054b8e7a04a4a337c392144dca0d18290c6b4711a2279">armnn::LayerType::SpaceToBatchNd</a></div></div>
<div class="ttc" id="namespacearmnn_xhtml_a14275495042ea02d0348dd70eeaf3d68"><div class="ttname"><a href="namespacearmnn.xhtml#a14275495042ea02d0348dd70eeaf3d68">armnn::TensorInfos</a></div><div class="ttdeci">std::vector&lt; TensorInfo &gt; TensorInfos</div><div class="ttdef"><b>Definition:</b> <a href="_backend_helper_8cpp_source.xhtml#l00151">BackendHelper.cpp:151</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="ab5a9e690f184d1ab36cd20f20771e361"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ab5a9e690f184d1ab36cd20f20771e361">&#9670;&nbsp;</a></span>IsSpaceToDepthSupported()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool IsSpaceToDepthSupported </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;&#160;</td>
          <td class="paramname"><em>input</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;&#160;</td>
          <td class="paramname"><em>output</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="structarmnn_1_1_space_to_depth_descriptor.xhtml">SpaceToDepthDescriptor</a> &amp;&#160;</td>
          <td class="paramname"><em>descriptor</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="classarmnn_1_1_optional.xhtml">Optional</a>&lt; std::string &amp;&gt;&#160;</td>
          <td class="paramname"><em>reasonIfUnsupported</em> = <code><a class="el" href="structarmnn_1_1_empty_optional.xhtml">EmptyOptional</a>()</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_backend_helper_8cpp_source.xhtml#l01159">1159</a> of file <a class="el" href="_backend_helper_8cpp_source.xhtml">BackendHelper.cpp</a>.</p>

<p class="reference">References <a class="el" href="namespacearmnn.xhtml#a56943a0946e5f15e5e58054b8e7a04a4a5e7ff12da912dc79e7e547281823fa4a">armnn::SpaceToDepth</a>.</p>

<p class="reference">Referenced by <a class="el" href="_backend_helper_8hpp_source.xhtml#l00026">LayerSupportHandle::LayerSupportHandle()</a>.</p>
<div class="fragment"><div class="line"><a name="l01163"></a><span class="lineno"> 1163</span>&#160;{</div><div class="line"><a name="l01164"></a><span class="lineno"> 1164</span>&#160;    <a class="code" href="namespacearmnn.xhtml#a14275495042ea02d0348dd70eeaf3d68">TensorInfos</a> infos{input, output};</div><div class="line"><a name="l01165"></a><span class="lineno"> 1165</span>&#160;</div><div class="line"><a name="l01166"></a><span class="lineno"> 1166</span>&#160;    <span class="keywordflow">return</span> m_LayerSupport-&gt;IsLayerSupported(<a class="code" href="namespacearmnn.xhtml#a56943a0946e5f15e5e58054b8e7a04a4a5e7ff12da912dc79e7e547281823fa4a">LayerType::SpaceToDepth</a>,</div><div class="line"><a name="l01167"></a><span class="lineno"> 1167</span>&#160;                                            infos,</div><div class="line"><a name="l01168"></a><span class="lineno"> 1168</span>&#160;                                            descriptor,</div><div class="line"><a name="l01169"></a><span class="lineno"> 1169</span>&#160;                                            EmptyOptional(),</div><div class="line"><a name="l01170"></a><span class="lineno"> 1170</span>&#160;                                            EmptyOptional(),</div><div class="line"><a name="l01171"></a><span class="lineno"> 1171</span>&#160;                                            reasonIfUnsupported);</div><div class="line"><a name="l01172"></a><span class="lineno"> 1172</span>&#160;}</div><div class="ttc" id="namespacearmnn_xhtml_a56943a0946e5f15e5e58054b8e7a04a4a5e7ff12da912dc79e7e547281823fa4a"><div class="ttname"><a href="namespacearmnn.xhtml#a56943a0946e5f15e5e58054b8e7a04a4a5e7ff12da912dc79e7e547281823fa4a">armnn::LayerType::SpaceToDepth</a></div></div>
<div class="ttc" id="namespacearmnn_xhtml_a14275495042ea02d0348dd70eeaf3d68"><div class="ttname"><a href="namespacearmnn.xhtml#a14275495042ea02d0348dd70eeaf3d68">armnn::TensorInfos</a></div><div class="ttdeci">std::vector&lt; TensorInfo &gt; TensorInfos</div><div class="ttdef"><b>Definition:</b> <a href="_backend_helper_8cpp_source.xhtml#l00151">BackendHelper.cpp:151</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="a11e30be6ad772860d59fbaa1d34bc415"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a11e30be6ad772860d59fbaa1d34bc415">&#9670;&nbsp;</a></span>IsSplitterSupported()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool IsSplitterSupported </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;&#160;</td>
          <td class="paramname"><em>input</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const std::vector&lt; std::reference_wrapper&lt; <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &gt;&gt; &amp;&#160;</td>
          <td class="paramname"><em>outputs</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="structarmnn_1_1_views_descriptor.xhtml">ViewsDescriptor</a> &amp;&#160;</td>
          <td class="paramname"><em>descriptor</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="classarmnn_1_1_optional.xhtml">Optional</a>&lt; std::string &amp;&gt;&#160;</td>
          <td class="paramname"><em>reasonIfUnsupported</em> = <code><a class="el" href="structarmnn_1_1_empty_optional.xhtml">EmptyOptional</a>()</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_backend_helper_8cpp_source.xhtml#l01174">1174</a> of file <a class="el" href="_backend_helper_8cpp_source.xhtml">BackendHelper.cpp</a>.</p>

<p class="reference">References <a class="el" href="namespacearmnn.xhtml#a56943a0946e5f15e5e58054b8e7a04a4a41cb9b797ebc6f6f6314e3ded935f4cf">armnn::Splitter</a>.</p>

<p class="reference">Referenced by <a class="el" href="_backend_helper_8hpp_source.xhtml#l00026">LayerSupportHandle::LayerSupportHandle()</a>.</p>
<div class="fragment"><div class="line"><a name="l01178"></a><span class="lineno"> 1178</span>&#160;{</div><div class="line"><a name="l01179"></a><span class="lineno"> 1179</span>&#160;    <a class="code" href="namespacearmnn.xhtml#a14275495042ea02d0348dd70eeaf3d68">TensorInfos</a> infos{input};</div><div class="line"><a name="l01180"></a><span class="lineno"> 1180</span>&#160;    <span class="keywordflow">for</span> (TensorInfo outInfo : outputs)</div><div class="line"><a name="l01181"></a><span class="lineno"> 1181</span>&#160;    {</div><div class="line"><a name="l01182"></a><span class="lineno"> 1182</span>&#160;        infos.push_back(outInfo);</div><div class="line"><a name="l01183"></a><span class="lineno"> 1183</span>&#160;    }</div><div class="line"><a name="l01184"></a><span class="lineno"> 1184</span>&#160;</div><div class="line"><a name="l01185"></a><span class="lineno"> 1185</span>&#160;    <span class="keywordflow">return</span> m_LayerSupport-&gt;IsLayerSupported(<a class="code" href="namespacearmnn.xhtml#a56943a0946e5f15e5e58054b8e7a04a4a41cb9b797ebc6f6f6314e3ded935f4cf">LayerType::Splitter</a>,</div><div class="line"><a name="l01186"></a><span class="lineno"> 1186</span>&#160;                                            infos,</div><div class="line"><a name="l01187"></a><span class="lineno"> 1187</span>&#160;                                            descriptor,</div><div class="line"><a name="l01188"></a><span class="lineno"> 1188</span>&#160;                                            EmptyOptional(),</div><div class="line"><a name="l01189"></a><span class="lineno"> 1189</span>&#160;                                            EmptyOptional(),</div><div class="line"><a name="l01190"></a><span class="lineno"> 1190</span>&#160;                                            reasonIfUnsupported);</div><div class="line"><a name="l01191"></a><span class="lineno"> 1191</span>&#160;}</div><div class="ttc" id="namespacearmnn_xhtml_a56943a0946e5f15e5e58054b8e7a04a4a41cb9b797ebc6f6f6314e3ded935f4cf"><div class="ttname"><a href="namespacearmnn.xhtml#a56943a0946e5f15e5e58054b8e7a04a4a41cb9b797ebc6f6f6314e3ded935f4cf">armnn::LayerType::Splitter</a></div></div>
<div class="ttc" id="namespacearmnn_xhtml_a14275495042ea02d0348dd70eeaf3d68"><div class="ttname"><a href="namespacearmnn.xhtml#a14275495042ea02d0348dd70eeaf3d68">armnn::TensorInfos</a></div><div class="ttdeci">std::vector&lt; TensorInfo &gt; TensorInfos</div><div class="ttdef"><b>Definition:</b> <a href="_backend_helper_8cpp_source.xhtml#l00151">BackendHelper.cpp:151</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="a4836fa8a1dcb24dc82fce4fa320287d2"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a4836fa8a1dcb24dc82fce4fa320287d2">&#9670;&nbsp;</a></span>IsStackSupported()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool IsStackSupported </td>
          <td>(</td>
          <td class="paramtype">const std::vector&lt; const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> *&gt; &amp;&#160;</td>
          <td class="paramname"><em>inputs</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;&#160;</td>
          <td class="paramname"><em>output</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="structarmnn_1_1_stack_descriptor.xhtml">StackDescriptor</a> &amp;&#160;</td>
          <td class="paramname"><em>descriptor</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="classarmnn_1_1_optional.xhtml">Optional</a>&lt; std::string &amp;&gt;&#160;</td>
          <td class="paramname"><em>reasonIfUnsupported</em> = <code><a class="el" href="structarmnn_1_1_empty_optional.xhtml">EmptyOptional</a>()</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_backend_helper_8cpp_source.xhtml#l01193">1193</a> of file <a class="el" href="_backend_helper_8cpp_source.xhtml">BackendHelper.cpp</a>.</p>

<p class="reference">References <a class="el" href="namespacearmnn.xhtml#a56943a0946e5f15e5e58054b8e7a04a4a2187e1021a911b3807cc1bea2eb1a9ca">armnn::Stack</a>.</p>

<p class="reference">Referenced by <a class="el" href="_backend_helper_8hpp_source.xhtml#l00026">LayerSupportHandle::LayerSupportHandle()</a>.</p>
<div class="fragment"><div class="line"><a name="l01197"></a><span class="lineno"> 1197</span>&#160;{</div><div class="line"><a name="l01198"></a><span class="lineno"> 1198</span>&#160;    <a class="code" href="namespacearmnn.xhtml#a14275495042ea02d0348dd70eeaf3d68">TensorInfos</a> infos;</div><div class="line"><a name="l01199"></a><span class="lineno"> 1199</span>&#160;    <span class="keywordflow">for</span> (<span class="keyword">const</span> TensorInfo* inputInfo : inputs)</div><div class="line"><a name="l01200"></a><span class="lineno"> 1200</span>&#160;    {</div><div class="line"><a name="l01201"></a><span class="lineno"> 1201</span>&#160;        infos.push_back(*inputInfo);</div><div class="line"><a name="l01202"></a><span class="lineno"> 1202</span>&#160;    }</div><div class="line"><a name="l01203"></a><span class="lineno"> 1203</span>&#160;    infos.push_back(output);</div><div class="line"><a name="l01204"></a><span class="lineno"> 1204</span>&#160;</div><div class="line"><a name="l01205"></a><span class="lineno"> 1205</span>&#160;    <span class="keywordflow">return</span> m_LayerSupport-&gt;IsLayerSupported(<a class="code" href="namespacearmnn.xhtml#a56943a0946e5f15e5e58054b8e7a04a4a2187e1021a911b3807cc1bea2eb1a9ca">LayerType::Stack</a>,</div><div class="line"><a name="l01206"></a><span class="lineno"> 1206</span>&#160;                                            infos,</div><div class="line"><a name="l01207"></a><span class="lineno"> 1207</span>&#160;                                            descriptor,</div><div class="line"><a name="l01208"></a><span class="lineno"> 1208</span>&#160;                                            EmptyOptional(),</div><div class="line"><a name="l01209"></a><span class="lineno"> 1209</span>&#160;                                            EmptyOptional(),</div><div class="line"><a name="l01210"></a><span class="lineno"> 1210</span>&#160;                                            reasonIfUnsupported);</div><div class="line"><a name="l01211"></a><span class="lineno"> 1211</span>&#160;}</div><div class="ttc" id="namespacearmnn_xhtml_a56943a0946e5f15e5e58054b8e7a04a4a2187e1021a911b3807cc1bea2eb1a9ca"><div class="ttname"><a href="namespacearmnn.xhtml#a56943a0946e5f15e5e58054b8e7a04a4a2187e1021a911b3807cc1bea2eb1a9ca">armnn::LayerType::Stack</a></div></div>
<div class="ttc" id="namespacearmnn_xhtml_a14275495042ea02d0348dd70eeaf3d68"><div class="ttname"><a href="namespacearmnn.xhtml#a14275495042ea02d0348dd70eeaf3d68">armnn::TensorInfos</a></div><div class="ttdeci">std::vector&lt; TensorInfo &gt; TensorInfos</div><div class="ttdef"><b>Definition:</b> <a href="_backend_helper_8cpp_source.xhtml#l00151">BackendHelper.cpp:151</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="a17de49aa96a88e439b29d009ca703116"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a17de49aa96a88e439b29d009ca703116">&#9670;&nbsp;</a></span>IsStandInSupported()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool IsStandInSupported </td>
          <td>(</td>
          <td class="paramtype">const std::vector&lt; const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> *&gt; &amp;&#160;</td>
          <td class="paramname"><em>inputs</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const std::vector&lt; const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> *&gt; &amp;&#160;</td>
          <td class="paramname"><em>outputs</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="structarmnn_1_1_stand_in_descriptor.xhtml">StandInDescriptor</a> &amp;&#160;</td>
          <td class="paramname"><em>descriptor</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="classarmnn_1_1_optional.xhtml">Optional</a>&lt; std::string &amp;&gt;&#160;</td>
          <td class="paramname"><em>reasonIfUnsupported</em> = <code><a class="el" href="structarmnn_1_1_empty_optional.xhtml">EmptyOptional</a>()</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_backend_helper_8cpp_source.xhtml#l01213">1213</a> of file <a class="el" href="_backend_helper_8cpp_source.xhtml">BackendHelper.cpp</a>.</p>

<p class="reference">References <a class="el" href="namespacearmnn.xhtml#a56943a0946e5f15e5e58054b8e7a04a4a93bca63ecbb003649425dd0e4ba79a99">armnn::StandIn</a>.</p>

<p class="reference">Referenced by <a class="el" href="_backend_helper_8hpp_source.xhtml#l00026">LayerSupportHandle::LayerSupportHandle()</a>.</p>
<div class="fragment"><div class="line"><a name="l01217"></a><span class="lineno"> 1217</span>&#160;{</div><div class="line"><a name="l01218"></a><span class="lineno"> 1218</span>&#160;    <a class="code" href="namespacearmnn.xhtml#a14275495042ea02d0348dd70eeaf3d68">TensorInfos</a> infos;</div><div class="line"><a name="l01219"></a><span class="lineno"> 1219</span>&#160;    <span class="keywordflow">for</span> (<span class="keyword">const</span> TensorInfo* inputInfo : inputs)</div><div class="line"><a name="l01220"></a><span class="lineno"> 1220</span>&#160;    {</div><div class="line"><a name="l01221"></a><span class="lineno"> 1221</span>&#160;        infos.push_back(*inputInfo);</div><div class="line"><a name="l01222"></a><span class="lineno"> 1222</span>&#160;    }</div><div class="line"><a name="l01223"></a><span class="lineno"> 1223</span>&#160;    <span class="keywordflow">for</span> (<span class="keyword">const</span> TensorInfo* outputInfo : outputs)</div><div class="line"><a name="l01224"></a><span class="lineno"> 1224</span>&#160;    {</div><div class="line"><a name="l01225"></a><span class="lineno"> 1225</span>&#160;        infos.push_back(*outputInfo);</div><div class="line"><a name="l01226"></a><span class="lineno"> 1226</span>&#160;    }</div><div class="line"><a name="l01227"></a><span class="lineno"> 1227</span>&#160;</div><div class="line"><a name="l01228"></a><span class="lineno"> 1228</span>&#160;    <span class="keywordflow">return</span> m_LayerSupport-&gt;IsLayerSupported(<a class="code" href="namespacearmnn.xhtml#a56943a0946e5f15e5e58054b8e7a04a4a93bca63ecbb003649425dd0e4ba79a99">LayerType::StandIn</a>,</div><div class="line"><a name="l01229"></a><span class="lineno"> 1229</span>&#160;                                            infos,</div><div class="line"><a name="l01230"></a><span class="lineno"> 1230</span>&#160;                                            descriptor,</div><div class="line"><a name="l01231"></a><span class="lineno"> 1231</span>&#160;                                            EmptyOptional(),</div><div class="line"><a name="l01232"></a><span class="lineno"> 1232</span>&#160;                                            EmptyOptional(),</div><div class="line"><a name="l01233"></a><span class="lineno"> 1233</span>&#160;                                            reasonIfUnsupported);</div><div class="line"><a name="l01234"></a><span class="lineno"> 1234</span>&#160;}</div><div class="ttc" id="namespacearmnn_xhtml_a56943a0946e5f15e5e58054b8e7a04a4a93bca63ecbb003649425dd0e4ba79a99"><div class="ttname"><a href="namespacearmnn.xhtml#a56943a0946e5f15e5e58054b8e7a04a4a93bca63ecbb003649425dd0e4ba79a99">armnn::LayerType::StandIn</a></div></div>
<div class="ttc" id="namespacearmnn_xhtml_a14275495042ea02d0348dd70eeaf3d68"><div class="ttname"><a href="namespacearmnn.xhtml#a14275495042ea02d0348dd70eeaf3d68">armnn::TensorInfos</a></div><div class="ttdeci">std::vector&lt; TensorInfo &gt; TensorInfos</div><div class="ttdef"><b>Definition:</b> <a href="_backend_helper_8cpp_source.xhtml#l00151">BackendHelper.cpp:151</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="aeb96849346b28e6b91b457a54277f831"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aeb96849346b28e6b91b457a54277f831">&#9670;&nbsp;</a></span>IsStridedSliceSupported()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool IsStridedSliceSupported </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;&#160;</td>
          <td class="paramname"><em>input</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;&#160;</td>
          <td class="paramname"><em>output</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="structarmnn_1_1_strided_slice_descriptor.xhtml">StridedSliceDescriptor</a> &amp;&#160;</td>
          <td class="paramname"><em>descriptor</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="classarmnn_1_1_optional.xhtml">Optional</a>&lt; std::string &amp;&gt;&#160;</td>
          <td class="paramname"><em>reasonIfUnsupported</em> = <code><a class="el" href="structarmnn_1_1_empty_optional.xhtml">EmptyOptional</a>()</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_backend_helper_8cpp_source.xhtml#l01237">1237</a> of file <a class="el" href="_backend_helper_8cpp_source.xhtml">BackendHelper.cpp</a>.</p>

<p class="reference">References <a class="el" href="namespacearmnn.xhtml#a56943a0946e5f15e5e58054b8e7a04a4aa31904f2b3479b5a00137fd985974b4d">armnn::StridedSlice</a>.</p>

<p class="reference">Referenced by <a class="el" href="_backend_helper_8hpp_source.xhtml#l00026">LayerSupportHandle::LayerSupportHandle()</a>.</p>
<div class="fragment"><div class="line"><a name="l01241"></a><span class="lineno"> 1241</span>&#160;{</div><div class="line"><a name="l01242"></a><span class="lineno"> 1242</span>&#160;    <a class="code" href="namespacearmnn.xhtml#a14275495042ea02d0348dd70eeaf3d68">TensorInfos</a> infos{input, output};</div><div class="line"><a name="l01243"></a><span class="lineno"> 1243</span>&#160;</div><div class="line"><a name="l01244"></a><span class="lineno"> 1244</span>&#160;    <span class="keywordflow">return</span> m_LayerSupport-&gt;IsLayerSupported(<a class="code" href="namespacearmnn.xhtml#a56943a0946e5f15e5e58054b8e7a04a4aa31904f2b3479b5a00137fd985974b4d">LayerType::StridedSlice</a>,</div><div class="line"><a name="l01245"></a><span class="lineno"> 1245</span>&#160;                                            infos,</div><div class="line"><a name="l01246"></a><span class="lineno"> 1246</span>&#160;                                            descriptor,</div><div class="line"><a name="l01247"></a><span class="lineno"> 1247</span>&#160;                                            EmptyOptional(),</div><div class="line"><a name="l01248"></a><span class="lineno"> 1248</span>&#160;                                            EmptyOptional(),</div><div class="line"><a name="l01249"></a><span class="lineno"> 1249</span>&#160;                                            reasonIfUnsupported);</div><div class="line"><a name="l01250"></a><span class="lineno"> 1250</span>&#160;}</div><div class="ttc" id="namespacearmnn_xhtml_a56943a0946e5f15e5e58054b8e7a04a4aa31904f2b3479b5a00137fd985974b4d"><div class="ttname"><a href="namespacearmnn.xhtml#a56943a0946e5f15e5e58054b8e7a04a4aa31904f2b3479b5a00137fd985974b4d">armnn::LayerType::StridedSlice</a></div></div>
<div class="ttc" id="namespacearmnn_xhtml_a14275495042ea02d0348dd70eeaf3d68"><div class="ttname"><a href="namespacearmnn.xhtml#a14275495042ea02d0348dd70eeaf3d68">armnn::TensorInfos</a></div><div class="ttdeci">std::vector&lt; TensorInfo &gt; TensorInfos</div><div class="ttdef"><b>Definition:</b> <a href="_backend_helper_8cpp_source.xhtml#l00151">BackendHelper.cpp:151</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="abb82febf90b89d04bb38d2f7bf25d438"></a>
<h2 class="memtitle"><span class="permalink"><a href="#abb82febf90b89d04bb38d2f7bf25d438">&#9670;&nbsp;</a></span>IsSubtractionSupported()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool IsSubtractionSupported </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;&#160;</td>
          <td class="paramname"><em>input0</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;&#160;</td>
          <td class="paramname"><em>input1</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;&#160;</td>
          <td class="paramname"><em>output</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="classarmnn_1_1_optional.xhtml">Optional</a>&lt; std::string &amp;&gt;&#160;</td>
          <td class="paramname"><em>reasonIfUnsupported</em> = <code><a class="el" href="structarmnn_1_1_empty_optional.xhtml">EmptyOptional</a>()</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_backend_helper_8cpp_source.xhtml#l01252">1252</a> of file <a class="el" href="_backend_helper_8cpp_source.xhtml">BackendHelper.cpp</a>.</p>

<p class="reference">References <a class="el" href="namespacearmnn.xhtml#a56943a0946e5f15e5e58054b8e7a04a4a6eb8b8b560161603402c0238b3a7d8b0">armnn::Subtraction</a>.</p>

<p class="reference">Referenced by <a class="el" href="_backend_helper_8hpp_source.xhtml#l00026">LayerSupportHandle::LayerSupportHandle()</a>.</p>
<div class="fragment"><div class="line"><a name="l01256"></a><span class="lineno"> 1256</span>&#160;{</div><div class="line"><a name="l01257"></a><span class="lineno"> 1257</span>&#160;    <a class="code" href="namespacearmnn.xhtml#a14275495042ea02d0348dd70eeaf3d68">TensorInfos</a> infos{input0, input1, output};</div><div class="line"><a name="l01258"></a><span class="lineno"> 1258</span>&#160;</div><div class="line"><a name="l01259"></a><span class="lineno"> 1259</span>&#160;    <span class="keywordflow">return</span> m_LayerSupport-&gt;IsLayerSupported(<a class="code" href="namespacearmnn.xhtml#a56943a0946e5f15e5e58054b8e7a04a4a6eb8b8b560161603402c0238b3a7d8b0">LayerType::Subtraction</a>,</div><div class="line"><a name="l01260"></a><span class="lineno"> 1260</span>&#160;                                            infos,</div><div class="line"><a name="l01261"></a><span class="lineno"> 1261</span>&#160;                                            BaseDescriptor(),</div><div class="line"><a name="l01262"></a><span class="lineno"> 1262</span>&#160;                                            EmptyOptional(),</div><div class="line"><a name="l01263"></a><span class="lineno"> 1263</span>&#160;                                            EmptyOptional(),</div><div class="line"><a name="l01264"></a><span class="lineno"> 1264</span>&#160;                                            reasonIfUnsupported);</div><div class="line"><a name="l01265"></a><span class="lineno"> 1265</span>&#160;}</div><div class="ttc" id="namespacearmnn_xhtml_a56943a0946e5f15e5e58054b8e7a04a4a6eb8b8b560161603402c0238b3a7d8b0"><div class="ttname"><a href="namespacearmnn.xhtml#a56943a0946e5f15e5e58054b8e7a04a4a6eb8b8b560161603402c0238b3a7d8b0">armnn::LayerType::Subtraction</a></div></div>
<div class="ttc" id="namespacearmnn_xhtml_a14275495042ea02d0348dd70eeaf3d68"><div class="ttname"><a href="namespacearmnn.xhtml#a14275495042ea02d0348dd70eeaf3d68">armnn::TensorInfos</a></div><div class="ttdeci">std::vector&lt; TensorInfo &gt; TensorInfos</div><div class="ttdef"><b>Definition:</b> <a href="_backend_helper_8cpp_source.xhtml#l00151">BackendHelper.cpp:151</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="aa49b47cfa52cd39dfb0559a2cace6c25"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aa49b47cfa52cd39dfb0559a2cace6c25">&#9670;&nbsp;</a></span>IsSwitchSupported()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool IsSwitchSupported </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;&#160;</td>
          <td class="paramname"><em>input0</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;&#160;</td>
          <td class="paramname"><em>input1</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;&#160;</td>
          <td class="paramname"><em>output0</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;&#160;</td>
          <td class="paramname"><em>output1</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="classarmnn_1_1_optional.xhtml">Optional</a>&lt; std::string &amp;&gt;&#160;</td>
          <td class="paramname"><em>reasonIfUnsupported</em> = <code><a class="el" href="structarmnn_1_1_empty_optional.xhtml">EmptyOptional</a>()</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_backend_helper_8cpp_source.xhtml#l01267">1267</a> of file <a class="el" href="_backend_helper_8cpp_source.xhtml">BackendHelper.cpp</a>.</p>

<p class="reference">References <a class="el" href="namespacearmnn.xhtml#a56943a0946e5f15e5e58054b8e7a04a4abbc155fb2b111bf61c4f5ff892915e6b">armnn::Switch</a>.</p>

<p class="reference">Referenced by <a class="el" href="_backend_helper_8hpp_source.xhtml#l00026">LayerSupportHandle::LayerSupportHandle()</a>.</p>
<div class="fragment"><div class="line"><a name="l01272"></a><span class="lineno"> 1272</span>&#160;{</div><div class="line"><a name="l01273"></a><span class="lineno"> 1273</span>&#160;    <a class="code" href="namespacearmnn.xhtml#a14275495042ea02d0348dd70eeaf3d68">TensorInfos</a> infos{input0, input1, output0, output1};</div><div class="line"><a name="l01274"></a><span class="lineno"> 1274</span>&#160;</div><div class="line"><a name="l01275"></a><span class="lineno"> 1275</span>&#160;    <span class="keywordflow">return</span> m_LayerSupport-&gt;IsLayerSupported(<a class="code" href="namespacearmnn.xhtml#a56943a0946e5f15e5e58054b8e7a04a4abbc155fb2b111bf61c4f5ff892915e6b">LayerType::Switch</a>,</div><div class="line"><a name="l01276"></a><span class="lineno"> 1276</span>&#160;                                            infos,</div><div class="line"><a name="l01277"></a><span class="lineno"> 1277</span>&#160;                                            BaseDescriptor(),</div><div class="line"><a name="l01278"></a><span class="lineno"> 1278</span>&#160;                                            EmptyOptional(),</div><div class="line"><a name="l01279"></a><span class="lineno"> 1279</span>&#160;                                            EmptyOptional(),</div><div class="line"><a name="l01280"></a><span class="lineno"> 1280</span>&#160;                                            reasonIfUnsupported);</div><div class="line"><a name="l01281"></a><span class="lineno"> 1281</span>&#160;}</div><div class="ttc" id="namespacearmnn_xhtml_a56943a0946e5f15e5e58054b8e7a04a4abbc155fb2b111bf61c4f5ff892915e6b"><div class="ttname"><a href="namespacearmnn.xhtml#a56943a0946e5f15e5e58054b8e7a04a4abbc155fb2b111bf61c4f5ff892915e6b">armnn::LayerType::Switch</a></div></div>
<div class="ttc" id="namespacearmnn_xhtml_a14275495042ea02d0348dd70eeaf3d68"><div class="ttname"><a href="namespacearmnn.xhtml#a14275495042ea02d0348dd70eeaf3d68">armnn::TensorInfos</a></div><div class="ttdeci">std::vector&lt; TensorInfo &gt; TensorInfos</div><div class="ttdef"><b>Definition:</b> <a href="_backend_helper_8cpp_source.xhtml#l00151">BackendHelper.cpp:151</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="a92b92441a54daa3e5b139a251114547d"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a92b92441a54daa3e5b139a251114547d">&#9670;&nbsp;</a></span>IsTransposeConvolution2dSupported()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool IsTransposeConvolution2dSupported </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;&#160;</td>
          <td class="paramname"><em>input</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;&#160;</td>
          <td class="paramname"><em>output</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="structarmnn_1_1_transpose_convolution2d_descriptor.xhtml">TransposeConvolution2dDescriptor</a> &amp;&#160;</td>
          <td class="paramname"><em>descriptor</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;&#160;</td>
          <td class="paramname"><em>weights</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_optional.xhtml">Optional</a>&lt; <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &gt; &amp;&#160;</td>
          <td class="paramname"><em>biases</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="classarmnn_1_1_optional.xhtml">Optional</a>&lt; std::string &amp;&gt;&#160;</td>
          <td class="paramname"><em>reasonIfUnsupported</em> = <code><a class="el" href="structarmnn_1_1_empty_optional.xhtml">EmptyOptional</a>()</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_backend_helper_8cpp_source.xhtml#l01283">1283</a> of file <a class="el" href="_backend_helper_8cpp_source.xhtml">BackendHelper.cpp</a>.</p>

<p class="reference">References <a class="el" href="_optional_8hpp_source.xhtml#l00053">OptionalBase::has_value()</a>, <a class="el" href="namespacearmnn.xhtml#a56943a0946e5f15e5e58054b8e7a04a4a71b23d26c0f5d20416d6c77754f9806a">armnn::TransposeConvolution2d</a>, and <a class="el" href="_optional_8hpp_source.xhtml#l00146">OptionalReferenceSwitch&lt; std::is_reference&lt; T &gt;::value, T &gt;::value()</a>.</p>

<p class="reference">Referenced by <a class="el" href="_backend_helper_8hpp_source.xhtml#l00026">LayerSupportHandle::LayerSupportHandle()</a>.</p>
<div class="fragment"><div class="line"><a name="l01290"></a><span class="lineno"> 1290</span>&#160;{</div><div class="line"><a name="l01291"></a><span class="lineno"> 1291</span>&#160;    TensorInfo biasesVal =  biases.has_value() ? biases.value() : TensorInfo();</div><div class="line"><a name="l01292"></a><span class="lineno"> 1292</span>&#160;    <a class="code" href="namespacearmnn.xhtml#a14275495042ea02d0348dd70eeaf3d68">TensorInfos</a> infos{input, output, weights, biasesVal};</div><div class="line"><a name="l01293"></a><span class="lineno"> 1293</span>&#160;</div><div class="line"><a name="l01294"></a><span class="lineno"> 1294</span>&#160;    <span class="keywordflow">return</span> m_LayerSupport-&gt;IsLayerSupported(<a class="code" href="namespacearmnn.xhtml#a56943a0946e5f15e5e58054b8e7a04a4a71b23d26c0f5d20416d6c77754f9806a">LayerType::TransposeConvolution2d</a>,</div><div class="line"><a name="l01295"></a><span class="lineno"> 1295</span>&#160;                                            infos,</div><div class="line"><a name="l01296"></a><span class="lineno"> 1296</span>&#160;                                            descriptor,</div><div class="line"><a name="l01297"></a><span class="lineno"> 1297</span>&#160;                                            EmptyOptional(),</div><div class="line"><a name="l01298"></a><span class="lineno"> 1298</span>&#160;                                            EmptyOptional(),</div><div class="line"><a name="l01299"></a><span class="lineno"> 1299</span>&#160;                                            reasonIfUnsupported);</div><div class="line"><a name="l01300"></a><span class="lineno"> 1300</span>&#160;}</div><div class="ttc" id="namespacearmnn_xhtml_a56943a0946e5f15e5e58054b8e7a04a4a71b23d26c0f5d20416d6c77754f9806a"><div class="ttname"><a href="namespacearmnn.xhtml#a56943a0946e5f15e5e58054b8e7a04a4a71b23d26c0f5d20416d6c77754f9806a">armnn::LayerType::TransposeConvolution2d</a></div></div>
<div class="ttc" id="namespacearmnn_xhtml_a14275495042ea02d0348dd70eeaf3d68"><div class="ttname"><a href="namespacearmnn.xhtml#a14275495042ea02d0348dd70eeaf3d68">armnn::TensorInfos</a></div><div class="ttdeci">std::vector&lt; TensorInfo &gt; TensorInfos</div><div class="ttdef"><b>Definition:</b> <a href="_backend_helper_8cpp_source.xhtml#l00151">BackendHelper.cpp:151</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="a141df11a09d4ec73c8bd6ed4cef58b96"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a141df11a09d4ec73c8bd6ed4cef58b96">&#9670;&nbsp;</a></span>IsTransposeSupported()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool IsTransposeSupported </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;&#160;</td>
          <td class="paramname"><em>input</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;&#160;</td>
          <td class="paramname"><em>output</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="structarmnn_1_1_transpose_descriptor.xhtml">TransposeDescriptor</a> &amp;&#160;</td>
          <td class="paramname"><em>descriptor</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="classarmnn_1_1_optional.xhtml">Optional</a>&lt; std::string &amp;&gt;&#160;</td>
          <td class="paramname"><em>reasonIfUnsupported</em> = <code><a class="el" href="structarmnn_1_1_empty_optional.xhtml">EmptyOptional</a>()</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_backend_helper_8cpp_source.xhtml#l01302">1302</a> of file <a class="el" href="_backend_helper_8cpp_source.xhtml">BackendHelper.cpp</a>.</p>

<p class="reference">References <a class="el" href="namespacearmnn.xhtml#a56943a0946e5f15e5e58054b8e7a04a4aaf70b1ac863830a4e1ce6268c8399f54">armnn::Transpose</a>.</p>

<p class="reference">Referenced by <a class="el" href="_backend_helper_8hpp_source.xhtml#l00026">LayerSupportHandle::LayerSupportHandle()</a>.</p>
<div class="fragment"><div class="line"><a name="l01306"></a><span class="lineno"> 1306</span>&#160;{</div><div class="line"><a name="l01307"></a><span class="lineno"> 1307</span>&#160;    <a class="code" href="namespacearmnn.xhtml#a14275495042ea02d0348dd70eeaf3d68">TensorInfos</a> infos{input, output};</div><div class="line"><a name="l01308"></a><span class="lineno"> 1308</span>&#160;</div><div class="line"><a name="l01309"></a><span class="lineno"> 1309</span>&#160;    <span class="keywordflow">return</span> m_LayerSupport-&gt;IsLayerSupported(<a class="code" href="namespacearmnn.xhtml#a56943a0946e5f15e5e58054b8e7a04a4aaf70b1ac863830a4e1ce6268c8399f54">LayerType::Transpose</a>,</div><div class="line"><a name="l01310"></a><span class="lineno"> 1310</span>&#160;                                            infos,</div><div class="line"><a name="l01311"></a><span class="lineno"> 1311</span>&#160;                                            descriptor,</div><div class="line"><a name="l01312"></a><span class="lineno"> 1312</span>&#160;                                            EmptyOptional(),</div><div class="line"><a name="l01313"></a><span class="lineno"> 1313</span>&#160;                                            EmptyOptional(),</div><div class="line"><a name="l01314"></a><span class="lineno"> 1314</span>&#160;                                            reasonIfUnsupported);</div><div class="line"><a name="l01315"></a><span class="lineno"> 1315</span>&#160;}</div><div class="ttc" id="namespacearmnn_xhtml_a14275495042ea02d0348dd70eeaf3d68"><div class="ttname"><a href="namespacearmnn.xhtml#a14275495042ea02d0348dd70eeaf3d68">armnn::TensorInfos</a></div><div class="ttdeci">std::vector&lt; TensorInfo &gt; TensorInfos</div><div class="ttdef"><b>Definition:</b> <a href="_backend_helper_8cpp_source.xhtml#l00151">BackendHelper.cpp:151</a></div></div>
<div class="ttc" id="namespacearmnn_xhtml_a56943a0946e5f15e5e58054b8e7a04a4aaf70b1ac863830a4e1ce6268c8399f54"><div class="ttname"><a href="namespacearmnn.xhtml#a56943a0946e5f15e5e58054b8e7a04a4aaf70b1ac863830a4e1ce6268c8399f54">armnn::LayerType::Transpose</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="a394e66cb93956fc094fb398904da0f3b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a394e66cb93956fc094fb398904da0f3b">&#9670;&nbsp;</a></span>IsUnidirectionalSequenceLstmSupported()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool IsUnidirectionalSequenceLstmSupported </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;&#160;</td>
          <td class="paramname"><em>input</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;&#160;</td>
          <td class="paramname"><em>outputStateIn</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;&#160;</td>
          <td class="paramname"><em>cellStateIn</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;&#160;</td>
          <td class="paramname"><em>output</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_optional.xhtml">Optional</a>&lt; <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &gt; &amp;&#160;</td>
          <td class="paramname"><em>hiddenStateOutput</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_optional.xhtml">Optional</a>&lt; <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &gt; &amp;&#160;</td>
          <td class="paramname"><em>cellStateOutput</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="structarmnn_1_1_lstm_descriptor.xhtml">LstmDescriptor</a> &amp;&#160;</td>
          <td class="paramname"><em>descriptor</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="structarmnn_1_1_lstm_input_params_info.xhtml">LstmInputParamsInfo</a> &amp;&#160;</td>
          <td class="paramname"><em>paramsInfo</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="classarmnn_1_1_optional.xhtml">Optional</a>&lt; std::string &amp;&gt;&#160;</td>
          <td class="paramname"><em>reasonIfUnsupported</em> = <code><a class="el" href="structarmnn_1_1_empty_optional.xhtml">EmptyOptional</a>()</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_backend_helper_8cpp_source.xhtml#l01317">1317</a> of file <a class="el" href="_backend_helper_8cpp_source.xhtml">BackendHelper.cpp</a>.</p>

<p class="reference">References <a class="el" href="_optional_8hpp_source.xhtml#l00053">OptionalBase::has_value()</a>, <a class="el" href="namespacearmnn.xhtml#a56943a0946e5f15e5e58054b8e7a04a4a300124b2433e0376ec4b19251ac3a9e5">armnn::UnidirectionalSequenceLstm</a>, and <a class="el" href="_optional_8hpp_source.xhtml#l00146">OptionalReferenceSwitch&lt; std::is_reference&lt; T &gt;::value, T &gt;::value()</a>.</p>

<p class="reference">Referenced by <a class="el" href="_backend_helper_8hpp_source.xhtml#l00026">LayerSupportHandle::LayerSupportHandle()</a>.</p>
<div class="fragment"><div class="line"><a name="l01326"></a><span class="lineno"> 1326</span>&#160;{</div><div class="line"><a name="l01327"></a><span class="lineno"> 1327</span>&#160;    TensorInfo hiddenStateOutputVal =  hiddenStateOutput.has_value() ? hiddenStateOutput.value() : TensorInfo();</div><div class="line"><a name="l01328"></a><span class="lineno"> 1328</span>&#160;    TensorInfo cellStateOutputVal   =  cellStateOutput.has_value() ? cellStateOutput.value() : TensorInfo();</div><div class="line"><a name="l01329"></a><span class="lineno"> 1329</span>&#160;    <a class="code" href="namespacearmnn.xhtml#a14275495042ea02d0348dd70eeaf3d68">TensorInfos</a> infos{input, outputStateIn, cellStateIn, hiddenStateOutputVal, cellStateOutputVal, output};</div><div class="line"><a name="l01330"></a><span class="lineno"> 1330</span>&#160;</div><div class="line"><a name="l01331"></a><span class="lineno"> 1331</span>&#160;    <span class="keywordflow">return</span> m_LayerSupport-&gt;IsLayerSupported(<a class="code" href="namespacearmnn.xhtml#a56943a0946e5f15e5e58054b8e7a04a4a300124b2433e0376ec4b19251ac3a9e5">LayerType::UnidirectionalSequenceLstm</a>,</div><div class="line"><a name="l01332"></a><span class="lineno"> 1332</span>&#160;                                            infos,</div><div class="line"><a name="l01333"></a><span class="lineno"> 1333</span>&#160;                                            descriptor,</div><div class="line"><a name="l01334"></a><span class="lineno"> 1334</span>&#160;                                            paramsInfo,</div><div class="line"><a name="l01335"></a><span class="lineno"> 1335</span>&#160;                                            EmptyOptional(),</div><div class="line"><a name="l01336"></a><span class="lineno"> 1336</span>&#160;                                            reasonIfUnsupported);</div><div class="line"><a name="l01337"></a><span class="lineno"> 1337</span>&#160;}</div><div class="ttc" id="namespacearmnn_xhtml_a14275495042ea02d0348dd70eeaf3d68"><div class="ttname"><a href="namespacearmnn.xhtml#a14275495042ea02d0348dd70eeaf3d68">armnn::TensorInfos</a></div><div class="ttdeci">std::vector&lt; TensorInfo &gt; TensorInfos</div><div class="ttdef"><b>Definition:</b> <a href="_backend_helper_8cpp_source.xhtml#l00151">BackendHelper.cpp:151</a></div></div>
<div class="ttc" id="namespacearmnn_xhtml_a56943a0946e5f15e5e58054b8e7a04a4a300124b2433e0376ec4b19251ac3a9e5"><div class="ttname"><a href="namespacearmnn.xhtml#a56943a0946e5f15e5e58054b8e7a04a4a300124b2433e0376ec4b19251ac3a9e5">armnn::LayerType::UnidirectionalSequenceLstm</a></div></div>
</div><!-- fragment -->
</div>
</div>
<hr/>The documentation for this class was generated from the following files:<ul>
<li>include/armnn/<a class="el" href="_backend_helper_8hpp_source.xhtml">BackendHelper.hpp</a></li>
<li>src/armnn/<a class="el" href="_backend_helper_8cpp_source.xhtml">BackendHelper.cpp</a></li>
</ul>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="namespacearmnn.xhtml">armnn</a></li><li class="navelem"><a class="el" href="classarmnn_1_1_layer_support_handle.xhtml">LayerSupportHandle</a></li>
    <li class="footer">Generated on Tue Feb 22 2022 11:39:47 for ArmNN by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.13 </li>
  </ul>
</div>
</body>
</html>
