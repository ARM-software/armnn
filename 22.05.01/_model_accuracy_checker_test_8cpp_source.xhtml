<!-- Copyright (c) 2020 ARM Limited. -->
<!--                                 -->
<!-- SPDX-License-Identifier: MIT    -->
<!--                                 -->
<!-- HTML header for doxygen 1.8.13-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.13"/>
<meta name="robots" content="NOINDEX, NOFOLLOW" />
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>ArmNN: src/armnn/test/ModelAccuracyCheckerTest.cpp Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script><script type="text/javascript" src="http://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="stylesheet.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <img alt="ArmNN" src="Arm_NN_horizontal_blue.png" style="max-width: 10rem; margin-top: .5rem; margin-left 10px"/>
  <td style="padding-left: 0.5em;">
   <div id="projectname">
   &#160;<span id="projectnumber">22.05.01</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.13 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
$(document).ready(function(){initNavTree('_model_accuracy_checker_test_8cpp_source.xhtml','');});
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="headertitle">
<div class="title">ModelAccuracyCheckerTest.cpp</div>  </div>
</div><!--header-->
<div class="contents">
<a href="_model_accuracy_checker_test_8cpp.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="comment">//</span></div><div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="comment">// Copyright Â© 2017 Arm Ltd. All rights reserved.</span></div><div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="comment">// SPDX-License-Identifier: MIT</span></div><div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="comment">//</span></div><div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_model_accuracy_checker_8hpp.xhtml">ModelAccuracyChecker.hpp</a>&quot;</span></div><div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="preprocessor">#include &lt;<a class="code" href="_t_container_8hpp.xhtml">armnnUtils/TContainer.hpp</a>&gt;</span></div><div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;</div><div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="preprocessor">#include &lt;doctest/doctest.h&gt;</span></div><div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;</div><div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="preprocessor">#include &lt;iostream&gt;</span></div><div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;<span class="preprocessor">#include &lt;string&gt;</span></div><div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;</div><div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;<span class="keyword">using namespace </span><a class="code" href="namespacearmnn_utils.xhtml">armnnUtils</a>;</div><div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;</div><div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;<span class="keyword">namespace </span>{</div><div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;<span class="keyword">struct </span>TestHelper</div><div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;{</div><div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;    <span class="keyword">const</span> std::map&lt;std::string, std::string&gt; GetValidationLabelSet()</div><div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;    {</div><div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;        std::map&lt;std::string, std::string&gt; validationLabelSet;</div><div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;        validationLabelSet.insert(std::make_pair(<span class="stringliteral">&quot;val_01.JPEG&quot;</span>, <span class="stringliteral">&quot;goldfinch&quot;</span>));</div><div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;        validationLabelSet.insert(std::make_pair(<span class="stringliteral">&quot;val_02.JPEG&quot;</span>, <span class="stringliteral">&quot;magpie&quot;</span>));</div><div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;        validationLabelSet.insert(std::make_pair(<span class="stringliteral">&quot;val_03.JPEG&quot;</span>, <span class="stringliteral">&quot;brambling&quot;</span>));</div><div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;        validationLabelSet.insert(std::make_pair(<span class="stringliteral">&quot;val_04.JPEG&quot;</span>, <span class="stringliteral">&quot;robin&quot;</span>));</div><div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;        validationLabelSet.insert(std::make_pair(<span class="stringliteral">&quot;val_05.JPEG&quot;</span>, <span class="stringliteral">&quot;indigo bird&quot;</span>));</div><div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;        validationLabelSet.insert(std::make_pair(<span class="stringliteral">&quot;val_06.JPEG&quot;</span>, <span class="stringliteral">&quot;ostrich&quot;</span>));</div><div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;        validationLabelSet.insert(std::make_pair(<span class="stringliteral">&quot;val_07.JPEG&quot;</span>, <span class="stringliteral">&quot;jay&quot;</span>));</div><div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;        validationLabelSet.insert(std::make_pair(<span class="stringliteral">&quot;val_08.JPEG&quot;</span>, <span class="stringliteral">&quot;snowbird&quot;</span>));</div><div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;        validationLabelSet.insert(std::make_pair(<span class="stringliteral">&quot;val_09.JPEG&quot;</span>, <span class="stringliteral">&quot;house finch&quot;</span>));</div><div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;        validationLabelSet.insert(std::make_pair(<span class="stringliteral">&quot;val_09.JPEG&quot;</span>, <span class="stringliteral">&quot;bulbul&quot;</span>));</div><div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;</div><div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;        <span class="keywordflow">return</span> validationLabelSet;</div><div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;    }</div><div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;    <span class="keyword">const</span> std::vector&lt;armnnUtils::LabelCategoryNames&gt; GetModelOutputLabels()</div><div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;    {</div><div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;        <span class="keyword">const</span> std::vector&lt;armnnUtils::LabelCategoryNames&gt; modelOutputLabels =</div><div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;        {</div><div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;            {<span class="stringliteral">&quot;ostrich&quot;</span>, <span class="stringliteral">&quot;Struthio camelus&quot;</span>},</div><div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;            {<span class="stringliteral">&quot;brambling&quot;</span>, <span class="stringliteral">&quot;Fringilla montifringilla&quot;</span>},</div><div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;            {<span class="stringliteral">&quot;goldfinch&quot;</span>, <span class="stringliteral">&quot;Carduelis carduelis&quot;</span>},</div><div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;            {<span class="stringliteral">&quot;house finch&quot;</span>, <span class="stringliteral">&quot;linnet&quot;</span>, <span class="stringliteral">&quot;Carpodacus mexicanus&quot;</span>},</div><div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;            {<span class="stringliteral">&quot;junco&quot;</span>, <span class="stringliteral">&quot;snowbird&quot;</span>},</div><div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;            {<span class="stringliteral">&quot;indigo bunting&quot;</span>, <span class="stringliteral">&quot;indigo finch&quot;</span>, <span class="stringliteral">&quot;indigo bird&quot;</span>, <span class="stringliteral">&quot;Passerina cyanea&quot;</span>},</div><div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;            {<span class="stringliteral">&quot;robin&quot;</span>, <span class="stringliteral">&quot;American robin&quot;</span>, <span class="stringliteral">&quot;Turdus migratorius&quot;</span>},</div><div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;            {<span class="stringliteral">&quot;bulbul&quot;</span>},</div><div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;            {<span class="stringliteral">&quot;jay&quot;</span>},</div><div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;            {<span class="stringliteral">&quot;magpie&quot;</span>}</div><div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;        };</div><div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;        <span class="keywordflow">return</span> modelOutputLabels;</div><div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;    }</div><div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;};</div><div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;}</div><div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;</div><div class="line"><a name="l00054"></a><span class="lineno"><a class="line" href="_model_accuracy_checker_test_8cpp.xhtml#a1f313a80d2b8774b99e11b8448d43dfa">   54</a></span>&#160;<a class="code" href="_model_accuracy_checker_test_8cpp.xhtml#a1f313a80d2b8774b99e11b8448d43dfa">TEST_SUITE</a>(<span class="stringliteral">&quot;ModelAccuracyCheckerTest&quot;</span>)</div><div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;{</div><div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;</div><div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;<a class="code" href="_mem_copy_tests_8cpp.xhtml#a3df1acc0ccc35bce0bd6c027e23e2c45">TEST_CASE_FIXTURE</a>(TestHelper, <span class="stringliteral">&quot;TestFloat32OutputTensorAccuracy&quot;</span>)</div><div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;{</div><div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;    <a class="code" href="classarmnn_utils_1_1_model_accuracy_checker.xhtml">ModelAccuracyChecker</a> checker(GetValidationLabelSet(), GetModelOutputLabels());</div><div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;</div><div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;    <span class="comment">// Add image 1 and check accuracy</span></div><div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;    std::vector&lt;float&gt; inferenceOutputVector1 = {0.05f, 0.10f, 0.70f, 0.15f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f};</div><div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;    <a class="code" href="namespacearmnn_utils.xhtml#ac7bd4ea667375c07718086368507ed44">armnnUtils::TContainer</a> inference1Container(inferenceOutputVector1);</div><div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;    std::vector&lt;armnnUtils::TContainer&gt; outputTensor1;</div><div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;    outputTensor1.push_back(inference1Container);</div><div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;</div><div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;    std::string imageName = <span class="stringliteral">&quot;val_01.JPEG&quot;</span>;</div><div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;    checker.<a class="code" href="classarmnn_utils_1_1_model_accuracy_checker.xhtml#a38d140dac29d228fdd1681e465507c29">AddImageResult</a>&lt;<a class="code" href="namespacearmnn_utils.xhtml#ac7bd4ea667375c07718086368507ed44">armnnUtils::TContainer</a>&gt;(imageName, outputTensor1);</div><div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;</div><div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;    <span class="comment">// Top 1 Accuracy</span></div><div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;    <span class="keywordtype">float</span> totalAccuracy = checker.<a class="code" href="classarmnn_utils_1_1_model_accuracy_checker.xhtml#ad6ddd3b77dd12eb33875d58a391b2412">GetAccuracy</a>(1);</div><div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;    CHECK(totalAccuracy == 100.0f);</div><div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;</div><div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;    <span class="comment">// Add image 2 and check accuracy</span></div><div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;    std::vector&lt;float&gt; inferenceOutputVector2 = {0.10f, 0.0f, 0.0f, 0.0f, 0.05f, 0.70f, 0.0f, 0.0f, 0.0f, 0.15f};</div><div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;    <a class="code" href="namespacearmnn_utils.xhtml#ac7bd4ea667375c07718086368507ed44">armnnUtils::TContainer</a> inference2Container(inferenceOutputVector2);</div><div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;    std::vector&lt;armnnUtils::TContainer&gt; outputTensor2;</div><div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;    outputTensor2.push_back(inference2Container);</div><div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;</div><div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;    imageName = <span class="stringliteral">&quot;val_02.JPEG&quot;</span>;</div><div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;    checker.<a class="code" href="classarmnn_utils_1_1_model_accuracy_checker.xhtml#a38d140dac29d228fdd1681e465507c29">AddImageResult</a>&lt;<a class="code" href="namespacearmnn_utils.xhtml#ac7bd4ea667375c07718086368507ed44">armnnUtils::TContainer</a>&gt;(imageName, outputTensor2);</div><div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;</div><div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;    <span class="comment">// Top 1 Accuracy</span></div><div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;    totalAccuracy = checker.<a class="code" href="classarmnn_utils_1_1_model_accuracy_checker.xhtml#ad6ddd3b77dd12eb33875d58a391b2412">GetAccuracy</a>(1);</div><div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;    CHECK(totalAccuracy == 50.0f);</div><div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;</div><div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;    <span class="comment">// Top 2 Accuracy</span></div><div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;    totalAccuracy = checker.<a class="code" href="classarmnn_utils_1_1_model_accuracy_checker.xhtml#ad6ddd3b77dd12eb33875d58a391b2412">GetAccuracy</a>(2);</div><div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;    CHECK(totalAccuracy == 100.0f);</div><div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;</div><div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;    <span class="comment">// Add image 3 and check accuracy</span></div><div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;    std::vector&lt;float&gt; inferenceOutputVector3 = {0.0f, 0.10f, 0.0f, 0.0f, 0.05f, 0.70f, 0.0f, 0.0f, 0.0f, 0.15f};</div><div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;    <a class="code" href="namespacearmnn_utils.xhtml#ac7bd4ea667375c07718086368507ed44">armnnUtils::TContainer</a> inference3Container(inferenceOutputVector3);</div><div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;    std::vector&lt;armnnUtils::TContainer&gt; outputTensor3;</div><div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;    outputTensor3.push_back(inference3Container);</div><div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;</div><div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;    imageName = <span class="stringliteral">&quot;val_03.JPEG&quot;</span>;</div><div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;    checker.<a class="code" href="classarmnn_utils_1_1_model_accuracy_checker.xhtml#a38d140dac29d228fdd1681e465507c29">AddImageResult</a>&lt;<a class="code" href="namespacearmnn_utils.xhtml#ac7bd4ea667375c07718086368507ed44">armnnUtils::TContainer</a>&gt;(imageName, outputTensor3);</div><div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;</div><div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;    <span class="comment">// Top 1 Accuracy</span></div><div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;    totalAccuracy = checker.<a class="code" href="classarmnn_utils_1_1_model_accuracy_checker.xhtml#ad6ddd3b77dd12eb33875d58a391b2412">GetAccuracy</a>(1);</div><div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;    CHECK(totalAccuracy == 33.3333321f);</div><div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;</div><div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;    <span class="comment">// Top 2 Accuracy</span></div><div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;    totalAccuracy = checker.<a class="code" href="classarmnn_utils_1_1_model_accuracy_checker.xhtml#ad6ddd3b77dd12eb33875d58a391b2412">GetAccuracy</a>(2);</div><div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;    CHECK(totalAccuracy == 66.6666641f);</div><div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;</div><div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;    <span class="comment">// Top 3 Accuracy</span></div><div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;    totalAccuracy = checker.<a class="code" href="classarmnn_utils_1_1_model_accuracy_checker.xhtml#ad6ddd3b77dd12eb33875d58a391b2412">GetAccuracy</a>(3);</div><div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;    CHECK(totalAccuracy == 100.0f);</div><div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;}</div><div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;</div><div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;}</div><div class="ttc" id="_model_accuracy_checker_8hpp_xhtml"><div class="ttname"><a href="_model_accuracy_checker_8hpp.xhtml">ModelAccuracyChecker.hpp</a></div></div>
<div class="ttc" id="classarmnn_utils_1_1_model_accuracy_checker_xhtml_ad6ddd3b77dd12eb33875d58a391b2412"><div class="ttname"><a href="classarmnn_utils_1_1_model_accuracy_checker.xhtml#ad6ddd3b77dd12eb33875d58a391b2412">armnnUtils::ModelAccuracyChecker::GetAccuracy</a></div><div class="ttdeci">float GetAccuracy(unsigned int k)</div><div class="ttdoc">Get Top K accuracy. </div><div class="ttdef"><b>Definition:</b> <a href="_model_accuracy_checker_8cpp_source.xhtml#l00022">ModelAccuracyChecker.cpp:22</a></div></div>
<div class="ttc" id="_model_accuracy_checker_test_8cpp_xhtml_a1f313a80d2b8774b99e11b8448d43dfa"><div class="ttname"><a href="_model_accuracy_checker_test_8cpp.xhtml#a1f313a80d2b8774b99e11b8448d43dfa">TEST_SUITE</a></div><div class="ttdeci">TEST_SUITE(&quot;ModelAccuracyCheckerTest&quot;)</div><div class="ttdef"><b>Definition:</b> <a href="_model_accuracy_checker_test_8cpp_source.xhtml#l00054">ModelAccuracyCheckerTest.cpp:54</a></div></div>
<div class="ttc" id="classarmnn_utils_1_1_model_accuracy_checker_xhtml_a38d140dac29d228fdd1681e465507c29"><div class="ttname"><a href="classarmnn_utils_1_1_model_accuracy_checker.xhtml#a38d140dac29d228fdd1681e465507c29">armnnUtils::ModelAccuracyChecker::AddImageResult</a></div><div class="ttdeci">void AddImageResult(const std::string &amp;imageName, std::vector&lt; TContainer &gt; outputTensor)</div><div class="ttdoc">Record the prediction result of an image. </div><div class="ttdef"><b>Definition:</b> <a href="_model_accuracy_checker_8hpp_source.xhtml#l00073">ModelAccuracyChecker.hpp:73</a></div></div>
<div class="ttc" id="_mem_copy_tests_8cpp_xhtml_a3df1acc0ccc35bce0bd6c027e23e2c45"><div class="ttname"><a href="_mem_copy_tests_8cpp.xhtml#a3df1acc0ccc35bce0bd6c027e23e2c45">TEST_CASE_FIXTURE</a></div><div class="ttdeci">TEST_CASE_FIXTURE(ClContextControlFixture, &quot;CopyBetweenNeonAndGpu&quot;)</div><div class="ttdef"><b>Definition:</b> <a href="_mem_copy_tests_8cpp_source.xhtml#l00089">MemCopyTests.cpp:89</a></div></div>
<div class="ttc" id="_t_container_8hpp_xhtml"><div class="ttname"><a href="_t_container_8hpp.xhtml">TContainer.hpp</a></div></div>
<div class="ttc" id="classarmnn_utils_1_1_model_accuracy_checker_xhtml"><div class="ttname"><a href="classarmnn_utils_1_1_model_accuracy_checker.xhtml">armnnUtils::ModelAccuracyChecker</a></div><div class="ttdef"><b>Definition:</b> <a href="_model_accuracy_checker_8hpp_source.xhtml#l00045">ModelAccuracyChecker.hpp:45</a></div></div>
<div class="ttc" id="namespacearmnn_utils_xhtml_ac7bd4ea667375c07718086368507ed44"><div class="ttname"><a href="namespacearmnn_utils.xhtml#ac7bd4ea667375c07718086368507ed44">armnnUtils::TContainer</a></div><div class="ttdeci">mapbox::util::variant&lt; std::vector&lt; float &gt;, std::vector&lt; int &gt;, std::vector&lt; unsigned char &gt;, std::vector&lt; int8_t &gt; &gt; TContainer</div><div class="ttdef"><b>Definition:</b> <a href="_t_container_8hpp_source.xhtml#l00018">TContainer.hpp:18</a></div></div>
<div class="ttc" id="namespacearmnn_utils_xhtml"><div class="ttname"><a href="namespacearmnn_utils.xhtml">armnnUtils</a></div><div class="ttdef"><b>Definition:</b> <a href="include_2armnn_utils_2_compatible_types_8hpp_source.xhtml#l00010">CompatibleTypes.hpp:10</a></div></div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="dir_68267d1309a1af8e8297ef4c3efbcdba.xhtml">src</a></li><li class="navelem"><a class="el" href="dir_e0a84d05c80a2ef4231141dcbbeac5c8.xhtml">armnn</a></li><li class="navelem"><a class="el" href="dir_9d86fd1fbecbedf5bdb69c7e7235fe5f.xhtml">test</a></li><li class="navelem"><a class="el" href="_model_accuracy_checker_test_8cpp.xhtml">ModelAccuracyCheckerTest.cpp</a></li>
    <li class="footer">Generated on Fri Jun 17 2022 13:19:42 for ArmNN by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.13 </li>
  </ul>
</div>
</body>
</html>
