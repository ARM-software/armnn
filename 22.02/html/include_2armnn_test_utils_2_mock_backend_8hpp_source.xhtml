<!-- Copyright (c) 2020 ARM Limited. -->
<!--                                 -->
<!-- SPDX-License-Identifier: MIT    -->
<!--                                 -->
<!-- HTML header for doxygen 1.8.13-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.13"/>
<meta name="robots" content="NOINDEX, NOFOLLOW" />
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>ArmNN: include/armnnTestUtils/MockBackend.hpp Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script><script type="text/javascript" src="http://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="stylesheet.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <img alt="ArmNN" src="Arm_NN_horizontal_blue.png" style="max-width: 10rem; margin-top: .5rem; margin-left 10px"/>
  <td style="padding-left: 0.5em;">
   <div id="projectname">
   &#160;<span id="projectnumber">22.02</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.13 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
$(document).ready(function(){initNavTree('include_2armnn_test_utils_2_mock_backend_8hpp_source.xhtml','');});
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="headertitle">
<div class="title">MockBackend.hpp</div>  </div>
</div><!--header-->
<div class="contents">
<a href="include_2armnn_test_utils_2_mock_backend_8hpp.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="comment">//</span></div><div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="comment">// Copyright Â© 2022 Arm Ltd and Contributors. All rights reserved.</span></div><div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="comment">// SPDX-License-Identifier: MIT</span></div><div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="comment">//</span></div><div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="preprocessor">#pragma once</span></div><div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;</div><div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="preprocessor">#include &lt;<a class="code" href="_i_backend_internal_8hpp.xhtml">armnn/backends/IBackendInternal.hpp</a>&gt;</span></div><div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="preprocessor">#include &lt;<a class="code" href="include_2armnn_2backends_2_mem_copy_workload_8hpp.xhtml">armnn/backends/MemCopyWorkload.hpp</a>&gt;</span></div><div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="preprocessor">#include &lt;<a class="code" href="_mock_tensor_handle_8hpp.xhtml">armnnTestUtils/MockTensorHandle.hpp</a>&gt;</span></div><div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;</div><div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;<span class="keyword">namespace </span><a class="code" href="namespacearmnn.xhtml">armnn</a></div><div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;{</div><div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;</div><div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;<span class="comment">// A bare bones Mock backend to enable unit testing of simple tensor manipulation features.</span></div><div class="line"><a name="l00015"></a><span class="lineno"><a class="line" href="classarmnn_1_1_mock_backend.xhtml">   15</a></span>&#160;<span class="keyword">class </span><a class="code" href="classarmnn_1_1_mock_backend.xhtml">MockBackend</a> : <span class="keyword">public</span> <a class="code" href="classarmnn_1_1_i_backend_internal.xhtml">IBackendInternal</a></div><div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;{</div><div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;<span class="keyword">public</span>:</div><div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;    <a class="code" href="classarmnn_1_1_mock_backend.xhtml#aa14555710b0db5c5752595415504511a">MockBackend</a>() = <span class="keywordflow">default</span>;</div><div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;</div><div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;    <a class="code" href="classarmnn_1_1_mock_backend.xhtml#a2904536c70c0959cc462089d4c51cd88">~MockBackend</a>() = <span class="keywordflow">default</span>;</div><div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;</div><div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;    <span class="keyword">static</span> <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_backend_id.xhtml">BackendId</a>&amp; <a class="code" href="classarmnn_1_1_mock_backend.xhtml#a177af502214bbc8123fbb4a3c4f0a1b8">GetIdStatic</a>();</div><div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;</div><div class="line"><a name="l00024"></a><span class="lineno"><a class="line" href="classarmnn_1_1_mock_backend.xhtml#a6c6c3d137a7792e264a89cc40ea94bb0">   24</a></span>&#160;    <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_backend_id.xhtml">BackendId</a>&amp; <a class="code" href="classarmnn_1_1_mock_backend.xhtml#a6c6c3d137a7792e264a89cc40ea94bb0">GetId</a>()<span class="keyword"> const override</span></div><div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;<span class="keyword">    </span>{</div><div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;        <span class="keywordflow">return</span> <a class="code" href="classarmnn_1_1_mock_backend.xhtml#a177af502214bbc8123fbb4a3c4f0a1b8">GetIdStatic</a>();</div><div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;    }</div><div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;    <a class="code" href="classarmnn_1_1_i_backend_internal.xhtml#a72ca1cf423bda4b0a9ffb789627126de">IBackendInternal::IWorkloadFactoryPtr</a></div><div class="line"><a name="l00029"></a><span class="lineno"><a class="line" href="classarmnn_1_1_mock_backend.xhtml#a8e19e275c8162e34e6d8d10a9245dbc9">   29</a></span>&#160;        <a class="code" href="classarmnn_1_1_mock_backend.xhtml#a8e19e275c8162e34e6d8d10a9245dbc9">CreateWorkloadFactory</a>(<span class="keyword">const</span> <a class="code" href="classarmnn_1_1_i_backend_internal.xhtml#a693b40e6b94e958836aeb0410ca186bd">IBackendInternal::IMemoryManagerSharedPtr</a>&amp; memoryManager = <span class="keyword">nullptr</span>)<span class="keyword"> const override</span></div><div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;<span class="keyword">    </span>{</div><div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;        <a class="code" href="namespacearmnn.xhtml#a44affeeb090c3c6a3062830562672e84">IgnoreUnused</a>(memoryManager);</div><div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;        <span class="keywordflow">return</span> <span class="keyword">nullptr</span>;</div><div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;    }</div><div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;</div><div class="line"><a name="l00035"></a><span class="lineno"><a class="line" href="classarmnn_1_1_mock_backend.xhtml#a93d4285a3ea5e4e3b35578484d889daa">   35</a></span>&#160;    <a class="code" href="classarmnn_1_1_i_backend_internal.xhtml#a11fa919c11fe46aad613b2e960fcfe90">IBackendInternal::ILayerSupportSharedPtr</a> <a class="code" href="classarmnn_1_1_mock_backend.xhtml#a93d4285a3ea5e4e3b35578484d889daa">GetLayerSupport</a>()<span class="keyword"> const override</span></div><div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;<span class="keyword">    </span>{</div><div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;        <span class="keywordflow">return</span> <span class="keyword">nullptr</span>;</div><div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;    };</div><div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;};</div><div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;</div><div class="line"><a name="l00041"></a><span class="lineno"><a class="line" href="classarmnn_1_1_mock_workload_factory.xhtml">   41</a></span>&#160;<span class="keyword">class </span><a class="code" href="classarmnn_1_1_mock_workload_factory.xhtml">MockWorkloadFactory</a> : <span class="keyword">public</span> <a class="code" href="classarmnn_1_1_i_workload_factory.xhtml">IWorkloadFactory</a></div><div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;{</div><div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;</div><div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;<span class="keyword">public</span>:</div><div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;    <span class="keyword">explicit</span> <a class="code" href="classarmnn_1_1_mock_workload_factory.xhtml">MockWorkloadFactory</a>(<span class="keyword">const</span> std::shared_ptr&lt;MockMemoryManager&gt;&amp; memoryManager);</div><div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;    <a class="code" href="classarmnn_1_1_mock_workload_factory.xhtml">MockWorkloadFactory</a>();</div><div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;</div><div class="line"><a name="l00048"></a><span class="lineno"><a class="line" href="classarmnn_1_1_mock_workload_factory.xhtml#a6a12ce754a2ca339d653dce3abfa8ae7">   48</a></span>&#160;    <a class="code" href="classarmnn_1_1_mock_workload_factory.xhtml#a6a12ce754a2ca339d653dce3abfa8ae7">~MockWorkloadFactory</a>()</div><div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;    {}</div><div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;</div><div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;    <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_backend_id.xhtml">BackendId</a>&amp; <a class="code" href="_test_dynamic_backend_8cpp.xhtml#adaff295134ed2825ae43a8e9281b6f2a">GetBackendId</a>() <span class="keyword">const override</span>;</div><div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;</div><div class="line"><a name="l00053"></a><span class="lineno"><a class="line" href="classarmnn_1_1_mock_workload_factory.xhtml#aed0a782f32856bde72bc10d9381dc11e">   53</a></span>&#160;    <span class="keywordtype">bool</span> <a class="code" href="classarmnn_1_1_mock_workload_factory.xhtml#aed0a782f32856bde72bc10d9381dc11e">SupportsSubTensors</a>()<span class="keyword"> const override</span></div><div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;<span class="keyword">    </span>{</div><div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;        <span class="keywordflow">return</span> <span class="keyword">false</span>;</div><div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;    }</div><div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;</div><div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;    <a class="code" href="_deprecated_8hpp.xhtml#a76fb13a018f8e01087a7ae0eb23509e1">ARMNN_DEPRECATED_MSG</a>(<span class="stringliteral">&quot;Use ITensorHandleFactory::CreateSubTensorHandle instead&quot;</span>)</div><div class="line"><a name="l00059"></a><span class="lineno"><a class="line" href="classarmnn_1_1_mock_workload_factory.xhtml#a99251f9711c087d7c1b5a08236ef0201">   59</a></span>&#160;    <a class="code" href="namespacestd.xhtml">std</a>::unique_ptr&lt;<a class="code" href="classarmnn_1_1_i_tensor_handle.xhtml">ITensorHandle</a>&gt; CreateSubTensorHandle(<a class="code" href="classarmnn_1_1_i_tensor_handle.xhtml">ITensorHandle</a>&amp;,</div><div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;                                                         <a class="code" href="classarmnn_1_1_tensor_shape.xhtml">TensorShape</a> const&amp;,</div><div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;                                                         <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> const*)<span class="keyword"> const override</span></div><div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;<span class="keyword">    </span>{</div><div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;        <span class="keywordflow">return</span> <span class="keyword">nullptr</span>;</div><div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;    }</div><div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;</div><div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;    <a class="code" href="_deprecated_8hpp.xhtml#a76fb13a018f8e01087a7ae0eb23509e1">ARMNN_DEPRECATED_MSG</a>(<span class="stringliteral">&quot;Use ITensorHandleFactory::CreateTensorHandle instead&quot;</span>)</div><div class="line"><a name="l00067"></a><span class="lineno"><a class="line" href="classarmnn_1_1_mock_workload_factory.xhtml#a7c3e7ce5582e4f815faefa91440b46e7">   67</a></span>&#160;    <a class="code" href="namespacestd.xhtml">std</a>::unique_ptr&lt;<a class="code" href="classarmnn_1_1_i_tensor_handle.xhtml">ITensorHandle</a>&gt; CreateTensorHandle(const <a class="code" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a>&amp; tensorInfo,</div><div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;                                                      const <span class="keywordtype">bool</span> IsMemoryManaged = true)<span class="keyword"> const override</span></div><div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;<span class="keyword">    </span>{</div><div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;        <a class="code" href="namespacearmnn.xhtml#a44affeeb090c3c6a3062830562672e84">IgnoreUnused</a>(IsMemoryManaged);</div><div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;        <span class="keywordflow">return</span> std::make_unique&lt;MockTensorHandle&gt;(tensorInfo, m_MemoryManager);</div><div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;    };</div><div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;</div><div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;    <a class="code" href="_deprecated_8hpp.xhtml#a76fb13a018f8e01087a7ae0eb23509e1">ARMNN_DEPRECATED_MSG</a>(<span class="stringliteral">&quot;Use ITensorHandleFactory::CreateTensorHandle instead&quot;</span>)</div><div class="line"><a name="l00075"></a><span class="lineno"><a class="line" href="classarmnn_1_1_mock_workload_factory.xhtml#a876bf6eff38691febe052578c337ebfe">   75</a></span>&#160;    <a class="code" href="namespacestd.xhtml">std</a>::unique_ptr&lt;<a class="code" href="classarmnn_1_1_i_tensor_handle.xhtml">ITensorHandle</a>&gt; CreateTensorHandle(const <a class="code" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a>&amp; tensorInfo,</div><div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;                                                      <a class="code" href="namespacearmnn.xhtml#ad1d5cce2d9e9a5d61c243e5c989112e0">DataLayout</a> dataLayout,</div><div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;                                                      const <span class="keywordtype">bool</span> IsMemoryManaged = true)<span class="keyword"> const override</span></div><div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;<span class="keyword">    </span>{</div><div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;        <a class="code" href="namespacearmnn.xhtml#a44affeeb090c3c6a3062830562672e84">IgnoreUnused</a>(dataLayout, IsMemoryManaged);</div><div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;        <span class="keywordflow">return</span> std::make_unique&lt;MockTensorHandle&gt;(tensorInfo, <span class="keyword">static_cast&lt;</span><span class="keywordtype">unsigned</span> <span class="keywordtype">int</span><span class="keyword">&gt;</span>(<a class="code" href="namespacearmnn.xhtml#a14fcd7f88d11cea0a018269dca5f9277a1131a914388fac73e5f07b0ba0aad523">MemorySource::Malloc</a>));</div><div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;    };</div><div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;</div><div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;    <a class="code" href="namespacearmnn.xhtml#adf15f9b51e289cd234206cc5112f0346">ARMNN_DEPRECATED_MSG_REMOVAL_DATE</a>(</div><div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;        <span class="stringliteral">&quot;Use ABI stable &quot;</span></div><div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;        <span class="stringliteral">&quot;CreateWorkload(LayerType, const QueueDescriptor&amp;, const WorkloadInfo&amp; info) instead.&quot;</span>,</div><div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;        <span class="stringliteral">&quot;22.11&quot;</span>)</div><div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;    std::unique_ptr&lt;IWorkload&gt; CreateInput(<span class="keyword">const</span> <a class="code" href="structarmnn_1_1_mem_copy_queue_descriptor.xhtml">InputQueueDescriptor</a>&amp; descriptor,</div><div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;                                           <span class="keyword">const</span> <a class="code" href="structarmnn_1_1_workload_info.xhtml">WorkloadInfo</a>&amp; <a class="code" href="namespacearmnn.xhtml#a4dc0adc6737b5944e7671bee71788407acaf9b6b99962bf5c2264824231d7a40c">info</a>)<span class="keyword"> const override</span></div><div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;<span class="keyword">    </span>{</div><div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;        <span class="keywordflow">if</span> (info.<a class="code" href="structarmnn_1_1_workload_info.xhtml#ac97905bfa0daab357b91df1347600309">m_InputTensorInfos</a>.empty())</div><div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;        {</div><div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;            <span class="keywordflow">throw</span> <a class="code" href="classarmnn_1_1_invalid_argument_exception.xhtml">InvalidArgumentException</a>(<span class="stringliteral">&quot;MockWorkloadFactory::CreateInput: Input cannot be zero length&quot;</span>);</div><div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;        }</div><div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;        <span class="keywordflow">if</span> (info.<a class="code" href="structarmnn_1_1_workload_info.xhtml#a67b178f8a836bc1e52b8de109760adfd">m_OutputTensorInfos</a>.empty())</div><div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;        {</div><div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;            <span class="keywordflow">throw</span> <a class="code" href="classarmnn_1_1_invalid_argument_exception.xhtml">InvalidArgumentException</a>(<span class="stringliteral">&quot;MockWorkloadFactory::CreateInput: Output cannot be zero length&quot;</span>);</div><div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;        }</div><div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;</div><div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;        <span class="keywordflow">if</span> (info.<a class="code" href="structarmnn_1_1_workload_info.xhtml#ac97905bfa0daab357b91df1347600309">m_InputTensorInfos</a>[0].GetNumBytes() != info.<a class="code" href="structarmnn_1_1_workload_info.xhtml#a67b178f8a836bc1e52b8de109760adfd">m_OutputTensorInfos</a>[0].GetNumBytes())</div><div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;        {</div><div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;            <span class="keywordflow">throw</span> <a class="code" href="classarmnn_1_1_invalid_argument_exception.xhtml">InvalidArgumentException</a>(</div><div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;                <span class="stringliteral">&quot;MockWorkloadFactory::CreateInput: data input and output differ in byte count.&quot;</span>);</div><div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;        }</div><div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;</div><div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;        <span class="keywordflow">return</span> std::make_unique&lt;CopyMemGenericWorkload&gt;(descriptor, <a class="code" href="namespacearmnn.xhtml#a4dc0adc6737b5944e7671bee71788407acaf9b6b99962bf5c2264824231d7a40c">info</a>);</div><div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;    };</div><div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;</div><div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;    std::unique_ptr&lt;IWorkload&gt;</div><div class="line"><a name="l00109"></a><span class="lineno"><a class="line" href="classarmnn_1_1_mock_workload_factory.xhtml#a739bcc341b89c98a5d38717370ebcaa6">  109</a></span>&#160;        <a class="code" href="classarmnn_1_1_mock_workload_factory.xhtml#a739bcc341b89c98a5d38717370ebcaa6">CreateWorkload</a>(<a class="code" href="namespacearmnn.xhtml#a56943a0946e5f15e5e58054b8e7a04a4">LayerType</a> type, <span class="keyword">const</span> <a class="code" href="structarmnn_1_1_queue_descriptor.xhtml">QueueDescriptor</a>&amp; descriptor, <span class="keyword">const</span> <a class="code" href="structarmnn_1_1_workload_info.xhtml">WorkloadInfo</a>&amp; info) <span class="keyword">const override</span>;</div><div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;</div><div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;<span class="keyword">private</span>:</div><div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;    <span class="keyword">mutable</span> std::shared_ptr&lt;MockMemoryManager&gt; m_MemoryManager;</div><div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;};</div><div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;</div><div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;}    <span class="comment">// namespace armnn</span></div><div class="ttc" id="classarmnn_1_1_mock_backend_xhtml"><div class="ttname"><a href="classarmnn_1_1_mock_backend.xhtml">armnn::MockBackend</a></div><div class="ttdef"><b>Definition:</b> <a href="include_2armnn_test_utils_2_mock_backend_8hpp_source.xhtml#l00015">MockBackend.hpp:15</a></div></div>
<div class="ttc" id="classarmnn_1_1_mock_workload_factory_xhtml_a739bcc341b89c98a5d38717370ebcaa6"><div class="ttname"><a href="classarmnn_1_1_mock_workload_factory.xhtml#a739bcc341b89c98a5d38717370ebcaa6">armnn::MockWorkloadFactory::CreateWorkload</a></div><div class="ttdeci">ARMNN_DEPRECATED_MSG_REMOVAL_DATE(&quot;Use ABI stable &quot; &quot;CreateWorkload(LayerType, const QueueDescriptor&amp;, const WorkloadInfo&amp; info) instead.&quot;, &quot;22.11&quot;) std std::unique_ptr&lt; IWorkload &gt; CreateWorkload(LayerType type, const QueueDescriptor &amp;descriptor, const WorkloadInfo &amp;info) const override</div><div class="ttdef"><b>Definition:</b> <a href="include_2armnn_test_utils_2_mock_backend_8hpp_source.xhtml#l00109">MockBackend.hpp:109</a></div></div>
<div class="ttc" id="classarmnn_1_1_mock_workload_factory_xhtml"><div class="ttname"><a href="classarmnn_1_1_mock_workload_factory.xhtml">armnn::MockWorkloadFactory</a></div><div class="ttdef"><b>Definition:</b> <a href="include_2armnn_test_utils_2_mock_backend_8hpp_source.xhtml#l00041">MockBackend.hpp:41</a></div></div>
<div class="ttc" id="classarmnn_1_1_i_backend_internal_xhtml_a72ca1cf423bda4b0a9ffb789627126de"><div class="ttname"><a href="classarmnn_1_1_i_backend_internal.xhtml#a72ca1cf423bda4b0a9ffb789627126de">armnn::IBackendInternal::IWorkloadFactoryPtr</a></div><div class="ttdeci">std::unique_ptr&lt; IWorkloadFactory &gt; IWorkloadFactoryPtr</div><div class="ttdef"><b>Definition:</b> <a href="_i_backend_internal_8hpp_source.xhtml#l00086">IBackendInternal.hpp:86</a></div></div>
<div class="ttc" id="classarmnn_1_1_mock_backend_xhtml_a2904536c70c0959cc462089d4c51cd88"><div class="ttname"><a href="classarmnn_1_1_mock_backend.xhtml#a2904536c70c0959cc462089d4c51cd88">armnn::MockBackend::~MockBackend</a></div><div class="ttdeci">~MockBackend()=default</div></div>
<div class="ttc" id="namespacearmnn_xhtml_ad1d5cce2d9e9a5d61c243e5c989112e0"><div class="ttname"><a href="namespacearmnn.xhtml#ad1d5cce2d9e9a5d61c243e5c989112e0">armnn::DataLayout</a></div><div class="ttdeci">DataLayout</div><div class="ttdef"><b>Definition:</b> <a href="_types_8hpp_source.xhtml#l00049">Types.hpp:49</a></div></div>
<div class="ttc" id="classarmnn_1_1_i_backend_internal_xhtml"><div class="ttname"><a href="classarmnn_1_1_i_backend_internal.xhtml">armnn::IBackendInternal</a></div><div class="ttdef"><b>Definition:</b> <a href="_i_backend_internal_8hpp_source.xhtml#l00074">IBackendInternal.hpp:74</a></div></div>
<div class="ttc" id="_i_backend_internal_8hpp_xhtml"><div class="ttname"><a href="_i_backend_internal_8hpp.xhtml">IBackendInternal.hpp</a></div></div>
<div class="ttc" id="classarmnn_1_1_tensor_info_xhtml"><div class="ttname"><a href="classarmnn_1_1_tensor_info.xhtml">armnn::TensorInfo</a></div><div class="ttdef"><b>Definition:</b> <a href="_tensor_8hpp_source.xhtml#l00152">Tensor.hpp:152</a></div></div>
<div class="ttc" id="classarmnn_1_1_i_workload_factory_xhtml"><div class="ttname"><a href="classarmnn_1_1_i_workload_factory.xhtml">armnn::IWorkloadFactory</a></div><div class="ttdef"><b>Definition:</b> <a href="include_2armnn_2backends_2_workload_factory_8hpp_source.xhtml#l00022">WorkloadFactory.hpp:22</a></div></div>
<div class="ttc" id="structarmnn_1_1_queue_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_queue_descriptor.xhtml">armnn::QueueDescriptor</a></div><div class="ttdef"><b>Definition:</b> <a href="include_2armnn_2backends_2_workload_data_8hpp_source.xhtml#l00024">WorkloadData.hpp:24</a></div></div>
<div class="ttc" id="classarmnn_1_1_mock_backend_xhtml_a8e19e275c8162e34e6d8d10a9245dbc9"><div class="ttname"><a href="classarmnn_1_1_mock_backend.xhtml#a8e19e275c8162e34e6d8d10a9245dbc9">armnn::MockBackend::CreateWorkloadFactory</a></div><div class="ttdeci">IBackendInternal::IWorkloadFactoryPtr CreateWorkloadFactory(const IBackendInternal::IMemoryManagerSharedPtr &amp;memoryManager=nullptr) const override</div><div class="ttdef"><b>Definition:</b> <a href="include_2armnn_test_utils_2_mock_backend_8hpp_source.xhtml#l00029">MockBackend.hpp:29</a></div></div>
<div class="ttc" id="classarmnn_1_1_mock_backend_xhtml_a93d4285a3ea5e4e3b35578484d889daa"><div class="ttname"><a href="classarmnn_1_1_mock_backend.xhtml#a93d4285a3ea5e4e3b35578484d889daa">armnn::MockBackend::GetLayerSupport</a></div><div class="ttdeci">IBackendInternal::ILayerSupportSharedPtr GetLayerSupport() const override</div><div class="ttdef"><b>Definition:</b> <a href="include_2armnn_test_utils_2_mock_backend_8hpp_source.xhtml#l00035">MockBackend.hpp:35</a></div></div>
<div class="ttc" id="namespacearmnn_xhtml"><div class="ttname"><a href="namespacearmnn.xhtml">armnn</a></div><div class="ttdoc">Copyright (c) 2021 ARM Limited and Contributors. </div><div class="ttdef"><b>Definition:</b> <a href="01__00__quick__start_8dox_source.xhtml#l00006">01_00_quick_start.dox:6</a></div></div>
<div class="ttc" id="namespacearmnn_xhtml_a44affeeb090c3c6a3062830562672e84"><div class="ttname"><a href="namespacearmnn.xhtml#a44affeeb090c3c6a3062830562672e84">armnn::IgnoreUnused</a></div><div class="ttdeci">void IgnoreUnused(Ts &amp;&amp;...)</div><div class="ttdef"><b>Definition:</b> <a href="_ignore_unused_8hpp_source.xhtml#l00014">IgnoreUnused.hpp:14</a></div></div>
<div class="ttc" id="classarmnn_1_1_tensor_shape_xhtml"><div class="ttname"><a href="classarmnn_1_1_tensor_shape.xhtml">armnn::TensorShape</a></div><div class="ttdef"><b>Definition:</b> <a href="_tensor_8hpp_source.xhtml#l00020">Tensor.hpp:20</a></div></div>
<div class="ttc" id="classarmnn_1_1_mock_backend_xhtml_a6c6c3d137a7792e264a89cc40ea94bb0"><div class="ttname"><a href="classarmnn_1_1_mock_backend.xhtml#a6c6c3d137a7792e264a89cc40ea94bb0">armnn::MockBackend::GetId</a></div><div class="ttdeci">const BackendId &amp; GetId() const override</div><div class="ttdef"><b>Definition:</b> <a href="include_2armnn_test_utils_2_mock_backend_8hpp_source.xhtml#l00024">MockBackend.hpp:24</a></div></div>
<div class="ttc" id="namespacestd_xhtml"><div class="ttname"><a href="namespacestd.xhtml">std</a></div><div class="ttdef"><b>Definition:</b> <a href="_backend_id_8hpp_source.xhtml#l00149">BackendId.hpp:149</a></div></div>
<div class="ttc" id="structarmnn_1_1_workload_info_xhtml_ac97905bfa0daab357b91df1347600309"><div class="ttname"><a href="structarmnn_1_1_workload_info.xhtml#ac97905bfa0daab357b91df1347600309">armnn::WorkloadInfo::m_InputTensorInfos</a></div><div class="ttdeci">std::vector&lt; TensorInfo &gt; m_InputTensorInfos</div><div class="ttdef"><b>Definition:</b> <a href="include_2armnn_2backends_2_workload_info_8hpp_source.xhtml#l00018">WorkloadInfo.hpp:18</a></div></div>
<div class="ttc" id="_test_dynamic_backend_8cpp_xhtml_adaff295134ed2825ae43a8e9281b6f2a"><div class="ttname"><a href="_test_dynamic_backend_8cpp.xhtml#adaff295134ed2825ae43a8e9281b6f2a">GetBackendId</a></div><div class="ttdeci">const char * GetBackendId()</div><div class="ttdef"><b>Definition:</b> <a href="_test_dynamic_backend_8cpp_source.xhtml#l00080">TestDynamicBackend.cpp:80</a></div></div>
<div class="ttc" id="classarmnn_1_1_mock_backend_xhtml_aa14555710b0db5c5752595415504511a"><div class="ttname"><a href="classarmnn_1_1_mock_backend.xhtml#aa14555710b0db5c5752595415504511a">armnn::MockBackend::MockBackend</a></div><div class="ttdeci">MockBackend()=default</div></div>
<div class="ttc" id="classarmnn_1_1_i_backend_internal_xhtml_a693b40e6b94e958836aeb0410ca186bd"><div class="ttname"><a href="classarmnn_1_1_i_backend_internal.xhtml#a693b40e6b94e958836aeb0410ca186bd">armnn::IBackendInternal::IMemoryManagerSharedPtr</a></div><div class="ttdeci">std::shared_ptr&lt; IMemoryManager &gt; IMemoryManagerSharedPtr</div><div class="ttdef"><b>Definition:</b> <a href="_i_backend_internal_8hpp_source.xhtml#l00096">IBackendInternal.hpp:96</a></div></div>
<div class="ttc" id="classarmnn_1_1_mock_backend_xhtml_a177af502214bbc8123fbb4a3c4f0a1b8"><div class="ttname"><a href="classarmnn_1_1_mock_backend.xhtml#a177af502214bbc8123fbb4a3c4f0a1b8">armnn::MockBackend::GetIdStatic</a></div><div class="ttdeci">static const BackendId &amp; GetIdStatic()</div><div class="ttdef"><b>Definition:</b> <a href="armnn_test_utils_2_mock_backend_8cpp_source.xhtml#l00018">MockBackend.cpp:18</a></div></div>
<div class="ttc" id="classarmnn_1_1_i_tensor_handle_xhtml"><div class="ttname"><a href="classarmnn_1_1_i_tensor_handle.xhtml">armnn::ITensorHandle</a></div><div class="ttdef"><b>Definition:</b> <a href="include_2armnn_2backends_2_i_tensor_handle_8hpp_source.xhtml#l00015">ITensorHandle.hpp:15</a></div></div>
<div class="ttc" id="namespacearmnn_xhtml_adf15f9b51e289cd234206cc5112f0346"><div class="ttname"><a href="namespacearmnn.xhtml#adf15f9b51e289cd234206cc5112f0346">armnn::ARMNN_DEPRECATED_MSG_REMOVAL_DATE</a></div><div class="ttdeci">ARMNN_NO_DEPRECATE_WARN_BEGIN struct ARMNN_DEPRECATED_MSG_REMOVAL_DATE(&quot;ResizeBilinearQueueDescriptor is deprecated use ResizeQueueDescriptor instead&quot;, &quot;22.08&quot;) ResizeBilinearQueueDescriptor</div><div class="ttdef"><b>Definition:</b> <a href="include_2armnn_2backends_2_workload_data_8hpp_source.xhtml#l00346">WorkloadData.hpp:346</a></div></div>
<div class="ttc" id="structarmnn_1_1_workload_info_xhtml_a67b178f8a836bc1e52b8de109760adfd"><div class="ttname"><a href="structarmnn_1_1_workload_info.xhtml#a67b178f8a836bc1e52b8de109760adfd">armnn::WorkloadInfo::m_OutputTensorInfos</a></div><div class="ttdeci">std::vector&lt; TensorInfo &gt; m_OutputTensorInfos</div><div class="ttdef"><b>Definition:</b> <a href="include_2armnn_2backends_2_workload_info_8hpp_source.xhtml#l00019">WorkloadInfo.hpp:19</a></div></div>
<div class="ttc" id="namespacearmnn_xhtml_a14fcd7f88d11cea0a018269dca5f9277a1131a914388fac73e5f07b0ba0aad523"><div class="ttname"><a href="namespacearmnn.xhtml#a14fcd7f88d11cea0a018269dca5f9277a1131a914388fac73e5f07b0ba0aad523">armnn::MemorySource::Malloc</a></div></div>
<div class="ttc" id="classarmnn_1_1_invalid_argument_exception_xhtml"><div class="ttname"><a href="classarmnn_1_1_invalid_argument_exception.xhtml">armnn::InvalidArgumentException</a></div><div class="ttdef"><b>Definition:</b> <a href="_exceptions_8hpp_source.xhtml#l00080">Exceptions.hpp:80</a></div></div>
<div class="ttc" id="structarmnn_1_1_mem_copy_queue_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_mem_copy_queue_descriptor.xhtml">armnn::MemCopyQueueDescriptor</a></div><div class="ttdef"><b>Definition:</b> <a href="include_2armnn_2backends_2_workload_data_8hpp_source.xhtml#l00074">WorkloadData.hpp:74</a></div></div>
<div class="ttc" id="classarmnn_1_1_i_backend_internal_xhtml_a11fa919c11fe46aad613b2e960fcfe90"><div class="ttname"><a href="classarmnn_1_1_i_backend_internal.xhtml#a11fa919c11fe46aad613b2e960fcfe90">armnn::IBackendInternal::ILayerSupportSharedPtr</a></div><div class="ttdeci">std::shared_ptr&lt; ILayerSupport &gt; ILayerSupportSharedPtr</div><div class="ttdef"><b>Definition:</b> <a href="_i_backend_internal_8hpp_source.xhtml#l00091">IBackendInternal.hpp:91</a></div></div>
<div class="ttc" id="namespacearmnn_xhtml_a4dc0adc6737b5944e7671bee71788407acaf9b6b99962bf5c2264824231d7a40c"><div class="ttname"><a href="namespacearmnn.xhtml#a4dc0adc6737b5944e7671bee71788407acaf9b6b99962bf5c2264824231d7a40c">armnn::BoostLogSeverityMapping::info</a></div></div>
<div class="ttc" id="include_2armnn_2backends_2_mem_copy_workload_8hpp_xhtml"><div class="ttname"><a href="include_2armnn_2backends_2_mem_copy_workload_8hpp.xhtml">MemCopyWorkload.hpp</a></div></div>
<div class="ttc" id="structarmnn_1_1_workload_info_xhtml"><div class="ttname"><a href="structarmnn_1_1_workload_info.xhtml">armnn::WorkloadInfo</a></div><div class="ttdoc">Contains information about TensorInfos of a layer. </div><div class="ttdef"><b>Definition:</b> <a href="include_2armnn_2backends_2_workload_info_8hpp_source.xhtml#l00016">WorkloadInfo.hpp:16</a></div></div>
<div class="ttc" id="_deprecated_8hpp_xhtml_a76fb13a018f8e01087a7ae0eb23509e1"><div class="ttname"><a href="_deprecated_8hpp.xhtml#a76fb13a018f8e01087a7ae0eb23509e1">ARMNN_DEPRECATED_MSG</a></div><div class="ttdeci">#define ARMNN_DEPRECATED_MSG(message)</div><div class="ttdef"><b>Definition:</b> <a href="_deprecated_8hpp_source.xhtml#l00043">Deprecated.hpp:43</a></div></div>
<div class="ttc" id="_mock_tensor_handle_8hpp_xhtml"><div class="ttname"><a href="_mock_tensor_handle_8hpp.xhtml">MockTensorHandle.hpp</a></div></div>
<div class="ttc" id="classarmnn_1_1_mock_workload_factory_xhtml_a6a12ce754a2ca339d653dce3abfa8ae7"><div class="ttname"><a href="classarmnn_1_1_mock_workload_factory.xhtml#a6a12ce754a2ca339d653dce3abfa8ae7">armnn::MockWorkloadFactory::~MockWorkloadFactory</a></div><div class="ttdeci">~MockWorkloadFactory()</div><div class="ttdef"><b>Definition:</b> <a href="include_2armnn_test_utils_2_mock_backend_8hpp_source.xhtml#l00048">MockBackend.hpp:48</a></div></div>
<div class="ttc" id="classarmnn_1_1_mock_workload_factory_xhtml_aed0a782f32856bde72bc10d9381dc11e"><div class="ttname"><a href="classarmnn_1_1_mock_workload_factory.xhtml#aed0a782f32856bde72bc10d9381dc11e">armnn::MockWorkloadFactory::SupportsSubTensors</a></div><div class="ttdeci">bool SupportsSubTensors() const override</div><div class="ttdef"><b>Definition:</b> <a href="include_2armnn_test_utils_2_mock_backend_8hpp_source.xhtml#l00053">MockBackend.hpp:53</a></div></div>
<div class="ttc" id="namespacearmnn_xhtml_a56943a0946e5f15e5e58054b8e7a04a4"><div class="ttname"><a href="namespacearmnn.xhtml#a56943a0946e5f15e5e58054b8e7a04a4">armnn::LayerType</a></div><div class="ttdeci">LayerType</div><div class="ttdoc">When adding a new layer, adapt also the LastLayer enum value in the enum class LayerType below...</div><div class="ttdef"><b>Definition:</b> <a href="_types_8hpp_source.xhtml#l00458">Types.hpp:458</a></div></div>
<div class="ttc" id="classarmnn_1_1_backend_id_xhtml"><div class="ttname"><a href="classarmnn_1_1_backend_id.xhtml">armnn::BackendId</a></div><div class="ttdef"><b>Definition:</b> <a href="_backend_id_8hpp_source.xhtml#l00075">BackendId.hpp:75</a></div></div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="dir_d44c64559bbebec7f509842c48db8b23.xhtml">include</a></li><li class="navelem"><a class="el" href="dir_63bab6e14293bb0757c6313c233a04b6.xhtml">armnnTestUtils</a></li><li class="navelem"><a class="el" href="include_2armnn_test_utils_2_mock_backend_8hpp.xhtml">MockBackend.hpp</a></li>
    <li class="footer">Generated on Tue Feb 22 2022 11:38:54 for ArmNN by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.13 </li>
  </ul>
</div>
</body>
</html>
