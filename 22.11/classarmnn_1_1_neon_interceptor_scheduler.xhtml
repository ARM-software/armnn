<!-- Copyright (c) 2020 ARM Limited. -->
<!--                                 -->
<!-- SPDX-License-Identifier: MIT    -->
<!--                                 -->
<!-- HTML header for doxygen 1.8.13-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.13"/>
<meta name="robots" content="NOINDEX, NOFOLLOW" />
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>ArmNN: NeonInterceptorScheduler Class Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script><script type="text/javascript" src="http://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="stylesheet.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <img alt="ArmNN" src="Arm_NN_horizontal_blue.png" style="max-width: 10rem; margin-top: .5rem; margin-left 10px"/>
  <td style="padding-left: 0.5em;">
   <div id="projectname">
   &#160;<span id="projectnumber">22.11</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.13 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
$(document).ready(function(){initNavTree('classarmnn_1_1_neon_interceptor_scheduler.xhtml','');});
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="summary">
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="classarmnn_1_1_neon_interceptor_scheduler-members.xhtml">List of all members</a>  </div>
  <div class="headertitle">
<div class="title">NeonInterceptorScheduler Class Reference</div>  </div>
</div><!--header-->
<div class="contents">

<p><code>#include &lt;<a class="el" href="_neon_interceptor_scheduler_8hpp_source.xhtml">NeonInterceptorScheduler.hpp</a>&gt;</code></p>
<div class="dynheader">
Inheritance diagram for NeonInterceptorScheduler:</div>
<div class="dyncontent">
 <div class="center">
  <img src="classarmnn_1_1_neon_interceptor_scheduler.png" usemap="#NeonInterceptorScheduler_map" alt=""/>
  <map id="NeonInterceptorScheduler_map" name="NeonInterceptorScheduler_map">
</map>
 </div></div>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:a54394a4d67b6c4e7878cdf36ace0b9a8"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_neon_interceptor_scheduler.xhtml#a54394a4d67b6c4e7878cdf36ace0b9a8">NeonInterceptorScheduler</a> (arm_compute::IScheduler &amp;realScheduler)</td></tr>
<tr class="separator:a54394a4d67b6c4e7878cdf36ace0b9a8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a896550e0f6cf5c9d7fa652e04529a06e"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_neon_interceptor_scheduler.xhtml#a896550e0f6cf5c9d7fa652e04529a06e">~NeonInterceptorScheduler</a> ()=default</td></tr>
<tr class="separator:a896550e0f6cf5c9d7fa652e04529a06e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad0debf97bd7013d6aadba6db2fd0dc14"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_neon_interceptor_scheduler.xhtml#ad0debf97bd7013d6aadba6db2fd0dc14">set_num_threads</a> (unsigned int numThreads) override</td></tr>
<tr class="separator:ad0debf97bd7013d6aadba6db2fd0dc14"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0da94220ee1e0f4928aa31ed0d4b30f7"><td class="memItemLeft" align="right" valign="top">unsigned int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_neon_interceptor_scheduler.xhtml#a0da94220ee1e0f4928aa31ed0d4b30f7">num_threads</a> () const override</td></tr>
<tr class="separator:a0da94220ee1e0f4928aa31ed0d4b30f7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae5ed8b38eb9777881ee7c7e56025b5cb"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_neon_interceptor_scheduler.xhtml#ae5ed8b38eb9777881ee7c7e56025b5cb">schedule</a> (arm_compute::ICPPKernel *kernel, const Hints &amp;hints) override</td></tr>
<tr class="separator:ae5ed8b38eb9777881ee7c7e56025b5cb"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:acbe7dbaeedd9d2cf45f50a4c1c4260c3"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_neon_interceptor_scheduler.xhtml#acbe7dbaeedd9d2cf45f50a4c1c4260c3">run_workloads</a> (std::vector&lt; Workload &gt; &amp;workloads) override</td></tr>
<tr class="separator:acbe7dbaeedd9d2cf45f50a4c1c4260c3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a666fa6ef79ac975094aaf8844ffee914"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_neon_interceptor_scheduler.xhtml#a666fa6ef79ac975094aaf8844ffee914">run_tagged_workloads</a> (std::vector&lt; Workload &gt; &amp;workloads, const char *tag) override</td></tr>
<tr class="separator:a666fa6ef79ac975094aaf8844ffee914"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a263bc4fda3d6b99de64681a2ae5661ef"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_neon_interceptor_scheduler.xhtml#a263bc4fda3d6b99de64681a2ae5661ef">SetKernels</a> (<a class="el" href="classarmnn_1_1_neon_timer.xhtml#a278b62df38ce93dfb6de3fa2a711f5bb">NeonTimer::KernelMeasurements</a> *kernels)</td></tr>
<tr class="separator:a263bc4fda3d6b99de64681a2ae5661ef"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac050f766763f2140578363b25f324617"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classarmnn_1_1_neon_timer.xhtml#a278b62df38ce93dfb6de3fa2a711f5bb">NeonTimer::KernelMeasurements</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_neon_interceptor_scheduler.xhtml#ac050f766763f2140578363b25f324617">GetKernels</a> ()</td></tr>
<tr class="separator:ac050f766763f2140578363b25f324617"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aaace9a11bd4824ee1f2b40488da0064d"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_neon_interceptor_scheduler.xhtml#aaace9a11bd4824ee1f2b40488da0064d">schedule_op</a> (arm_compute::ICPPKernel *kernel, const Hints &amp;hints, const arm_compute::Window &amp;window, arm_compute::ITensorPack &amp;tensors) override</td></tr>
<tr class="separator:aaace9a11bd4824ee1f2b40488da0064d"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock">
<p class="definition">Definition at line <a class="el" href="_neon_interceptor_scheduler_8hpp_source.xhtml#l00017">17</a> of file <a class="el" href="_neon_interceptor_scheduler_8hpp_source.xhtml">NeonInterceptorScheduler.hpp</a>.</p>
</div><h2 class="groupheader">Constructor &amp; Destructor Documentation</h2>
<a id="a54394a4d67b6c4e7878cdf36ace0b9a8"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a54394a4d67b6c4e7878cdf36ace0b9a8">&#9670;&nbsp;</a></span>NeonInterceptorScheduler()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarmnn_1_1_neon_interceptor_scheduler.xhtml">NeonInterceptorScheduler</a> </td>
          <td>(</td>
          <td class="paramtype">arm_compute::IScheduler &amp;&#160;</td>
          <td class="paramname"><em>realScheduler</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_neon_interceptor_scheduler_8cpp_source.xhtml#l00010">10</a> of file <a class="el" href="_neon_interceptor_scheduler_8cpp_source.xhtml">NeonInterceptorScheduler.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;        : m_Kernels(<span class="keyword">nullptr</span>), m_RealScheduler(realScheduler)</div><div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;{</div><div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;}</div></div><!-- fragment -->
</div>
</div>
<a id="a896550e0f6cf5c9d7fa652e04529a06e"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a896550e0f6cf5c9d7fa652e04529a06e">&#9670;&nbsp;</a></span>~NeonInterceptorScheduler()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">~<a class="el" href="classarmnn_1_1_neon_interceptor_scheduler.xhtml">NeonInterceptorScheduler</a> </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">default</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<h2 class="groupheader">Member Function Documentation</h2>
<a id="ac050f766763f2140578363b25f324617"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ac050f766763f2140578363b25f324617">&#9670;&nbsp;</a></span>GetKernels()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarmnn_1_1_neon_timer.xhtml#a278b62df38ce93dfb6de3fa2a711f5bb">NeonTimer::KernelMeasurements</a>* GetKernels </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_neon_interceptor_scheduler_8hpp_source.xhtml#l00034">34</a> of file <a class="el" href="_neon_interceptor_scheduler_8hpp_source.xhtml">NeonInterceptorScheduler.hpp</a>.</p>

<p class="reference">References <a class="el" href="_neon_interceptor_scheduler_8cpp_source.xhtml#l00055">NeonInterceptorScheduler::schedule_op()</a>.</p>
<div class="fragment"><div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;{ <span class="keywordflow">return</span> m_Kernels; }</div></div><!-- fragment -->
</div>
</div>
<a id="a0da94220ee1e0f4928aa31ed0d4b30f7"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a0da94220ee1e0f4928aa31ed0d4b30f7">&#9670;&nbsp;</a></span>num_threads()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">unsigned int num_threads </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">override</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_neon_interceptor_scheduler_8cpp_source.xhtml#l00020">20</a> of file <a class="el" href="_neon_interceptor_scheduler_8cpp_source.xhtml">NeonInterceptorScheduler.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;{</div><div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;    <span class="keywordflow">return</span> m_RealScheduler.num_threads();</div><div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;}</div></div><!-- fragment -->
</div>
</div>
<a id="a666fa6ef79ac975094aaf8844ffee914"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a666fa6ef79ac975094aaf8844ffee914">&#9670;&nbsp;</a></span>run_tagged_workloads()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void run_tagged_workloads </td>
          <td>(</td>
          <td class="paramtype">std::vector&lt; Workload &gt; &amp;&#160;</td>
          <td class="paramname"><em>workloads</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>tag</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">override</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_neon_interceptor_scheduler_8cpp_source.xhtml#l00045">45</a> of file <a class="el" href="_neon_interceptor_scheduler_8cpp_source.xhtml">NeonInterceptorScheduler.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;{</div><div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;    WallClockTimer::clock::time_point startTime = WallClockTimer::clock::now();</div><div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;    m_RealScheduler.run_tagged_workloads(workloads, tag);</div><div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;    WallClockTimer::clock::time_point stopTime = WallClockTimer::clock::now();</div><div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;</div><div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;    <span class="keyword">const</span> <span class="keyword">auto</span> delta       = std::chrono::duration&lt;double, std::micro&gt;(stopTime - startTime);</div><div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;    m_Kernels-&gt;emplace_back(std::string(tag != <span class="keyword">nullptr</span> ? tag : <span class="stringliteral">&quot;Unknown&quot;</span>), delta.count(), Measurement::Unit::TIME_US);</div><div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;}</div></div><!-- fragment -->
</div>
</div>
<a id="acbe7dbaeedd9d2cf45f50a4c1c4260c3"></a>
<h2 class="memtitle"><span class="permalink"><a href="#acbe7dbaeedd9d2cf45f50a4c1c4260c3">&#9670;&nbsp;</a></span>run_workloads()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void run_workloads </td>
          <td>(</td>
          <td class="paramtype">std::vector&lt; Workload &gt; &amp;&#160;</td>
          <td class="paramname"><em>workloads</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">override</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_neon_interceptor_scheduler_8cpp_source.xhtml#l00035">35</a> of file <a class="el" href="_neon_interceptor_scheduler_8cpp_source.xhtml">NeonInterceptorScheduler.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;{</div><div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;    WallClockTimer::clock::time_point startTime = WallClockTimer::clock::now();</div><div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;    m_RealScheduler.run_tagged_workloads(workloads, <span class="keyword">nullptr</span>);</div><div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;    WallClockTimer::clock::time_point stopTime = WallClockTimer::clock::now();</div><div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;</div><div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;    <span class="keyword">const</span> <span class="keyword">auto</span> delta       = std::chrono::duration&lt;double, std::micro&gt;(stopTime - startTime);</div><div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;    m_Kernels-&gt;emplace_back(std::string(<span class="stringliteral">&quot;Workload&quot;</span>), delta.count(), Measurement::Unit::TIME_US);</div><div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;}</div></div><!-- fragment -->
</div>
</div>
<a id="ae5ed8b38eb9777881ee7c7e56025b5cb"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ae5ed8b38eb9777881ee7c7e56025b5cb">&#9670;&nbsp;</a></span>schedule()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void schedule </td>
          <td>(</td>
          <td class="paramtype">arm_compute::ICPPKernel *&#160;</td>
          <td class="paramname"><em>kernel</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const Hints &amp;&#160;</td>
          <td class="paramname"><em>hints</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">override</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_neon_interceptor_scheduler_8cpp_source.xhtml#l00025">25</a> of file <a class="el" href="_neon_interceptor_scheduler_8cpp_source.xhtml">NeonInterceptorScheduler.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;{</div><div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;    WallClockTimer::clock::time_point startTime = WallClockTimer::clock::now();</div><div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;    m_RealScheduler.schedule(kernel, hints.split_dimension());</div><div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;    WallClockTimer::clock::time_point stopTime = WallClockTimer::clock::now();</div><div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;</div><div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;    <span class="keyword">const</span> <span class="keyword">auto</span> delta       = std::chrono::duration&lt;double, std::micro&gt;(stopTime - startTime);</div><div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;    m_Kernels-&gt;emplace_back(kernel-&gt;name(), delta.count(), Measurement::Unit::TIME_US);</div><div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;}</div></div><!-- fragment -->
</div>
</div>
<a id="aaace9a11bd4824ee1f2b40488da0064d"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aaace9a11bd4824ee1f2b40488da0064d">&#9670;&nbsp;</a></span>schedule_op()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void schedule_op </td>
          <td>(</td>
          <td class="paramtype">arm_compute::ICPPKernel *&#160;</td>
          <td class="paramname"><em>kernel</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const Hints &amp;&#160;</td>
          <td class="paramname"><em>hints</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const arm_compute::Window &amp;&#160;</td>
          <td class="paramname"><em>window</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">arm_compute::ITensorPack &amp;&#160;</td>
          <td class="paramname"><em>tensors</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">override</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_neon_interceptor_scheduler_8cpp_source.xhtml#l00055">55</a> of file <a class="el" href="_neon_interceptor_scheduler_8cpp_source.xhtml">NeonInterceptorScheduler.cpp</a>.</p>

<p class="reference">Referenced by <a class="el" href="_neon_interceptor_scheduler_8hpp_source.xhtml#l00034">NeonInterceptorScheduler::GetKernels()</a>.</p>
<div class="fragment"><div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;{</div><div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;</div><div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;    WallClockTimer::clock::time_point startTime = WallClockTimer::clock::now();</div><div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;    m_RealScheduler.schedule_op(kernel, hints, window, tensors);</div><div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;    WallClockTimer::clock::time_point stopTime = WallClockTimer::clock::now();</div><div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;</div><div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;    <span class="keyword">const</span> <span class="keyword">auto</span> delta       = std::chrono::duration&lt;double, std::micro&gt;(stopTime - startTime);</div><div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;    m_Kernels-&gt;emplace_back(kernel-&gt;name(), delta.count(), Measurement::Unit::TIME_US);</div><div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;}</div></div><!-- fragment -->
</div>
</div>
<a id="ad0debf97bd7013d6aadba6db2fd0dc14"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ad0debf97bd7013d6aadba6db2fd0dc14">&#9670;&nbsp;</a></span>set_num_threads()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void set_num_threads </td>
          <td>(</td>
          <td class="paramtype">unsigned int&#160;</td>
          <td class="paramname"><em>numThreads</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">override</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_neon_interceptor_scheduler_8cpp_source.xhtml#l00015">15</a> of file <a class="el" href="_neon_interceptor_scheduler_8cpp_source.xhtml">NeonInterceptorScheduler.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;{</div><div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;    m_RealScheduler.set_num_threads(numThreads);</div><div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;}</div></div><!-- fragment -->
</div>
</div>
<a id="a263bc4fda3d6b99de64681a2ae5661ef"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a263bc4fda3d6b99de64681a2ae5661ef">&#9670;&nbsp;</a></span>SetKernels()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void SetKernels </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classarmnn_1_1_neon_timer.xhtml#a278b62df38ce93dfb6de3fa2a711f5bb">NeonTimer::KernelMeasurements</a> *&#160;</td>
          <td class="paramname"><em>kernels</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_neon_interceptor_scheduler_8hpp_source.xhtml#l00033">33</a> of file <a class="el" href="_neon_interceptor_scheduler_8hpp_source.xhtml">NeonInterceptorScheduler.hpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;{ m_Kernels = kernels; }</div></div><!-- fragment -->
</div>
</div>
<hr/>The documentation for this class was generated from the following files:<ul>
<li>src/backends/neon/<a class="el" href="_neon_interceptor_scheduler_8hpp_source.xhtml">NeonInterceptorScheduler.hpp</a></li>
<li>src/backends/neon/<a class="el" href="_neon_interceptor_scheduler_8cpp_source.xhtml">NeonInterceptorScheduler.cpp</a></li>
</ul>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="namespacearmnn.xhtml">armnn</a></li><li class="navelem"><a class="el" href="classarmnn_1_1_neon_interceptor_scheduler.xhtml">NeonInterceptorScheduler</a></li>
    <li class="footer">Generated on Wed Nov 23 2022 10:57:41 for ArmNN by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.13 </li>
  </ul>
</div>
</body>
</html>
