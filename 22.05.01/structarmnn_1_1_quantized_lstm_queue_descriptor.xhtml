<!-- Copyright (c) 2020 ARM Limited. -->
<!--                                 -->
<!-- SPDX-License-Identifier: MIT    -->
<!--                                 -->
<!-- HTML header for doxygen 1.8.13-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.13"/>
<meta name="robots" content="NOINDEX, NOFOLLOW" />
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>ArmNN: QuantizedLstmQueueDescriptor Struct Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script><script type="text/javascript" src="http://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="stylesheet.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <img alt="ArmNN" src="Arm_NN_horizontal_blue.png" style="max-width: 10rem; margin-top: .5rem; margin-left 10px"/>
  <td style="padding-left: 0.5em;">
   <div id="projectname">
   &#160;<span id="projectnumber">22.05.01</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.13 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
$(document).ready(function(){initNavTree('structarmnn_1_1_quantized_lstm_queue_descriptor.xhtml','');});
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="summary">
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="#pub-attribs">Public Attributes</a> &#124;
<a href="structarmnn_1_1_quantized_lstm_queue_descriptor-members.xhtml">List of all members</a>  </div>
  <div class="headertitle">
<div class="title">QuantizedLstmQueueDescriptor Struct Reference</div>  </div>
</div><!--header-->
<div class="contents">

<p><code>#include &lt;<a class="el" href="include_2armnn_2backends_2_workload_data_8hpp_source.xhtml">WorkloadData.hpp</a>&gt;</code></p>
<div class="dynheader">
Inheritance diagram for QuantizedLstmQueueDescriptor:</div>
<div class="dyncontent">
 <div class="center">
  <img src="structarmnn_1_1_quantized_lstm_queue_descriptor.png" usemap="#QuantizedLstmQueueDescriptor_map" alt=""/>
  <map id="QuantizedLstmQueueDescriptor_map" name="QuantizedLstmQueueDescriptor_map">
<area href="structarmnn_1_1_queue_descriptor.xhtml" alt="QueueDescriptor" shape="rect" coords="0,0,191,24"/>
</map>
 </div></div>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:aafdc5119a81b0104cd742401cec60f3a"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structarmnn_1_1_quantized_lstm_queue_descriptor.xhtml#aafdc5119a81b0104cd742401cec60f3a">QuantizedLstmQueueDescriptor</a> ()</td></tr>
<tr class="separator:aafdc5119a81b0104cd742401cec60f3a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a041e495449e22774a34d92b0904c10bf"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structarmnn_1_1_quantized_lstm_queue_descriptor.xhtml#a041e495449e22774a34d92b0904c10bf">Validate</a> (const <a class="el" href="structarmnn_1_1_workload_info.xhtml">WorkloadInfo</a> &amp;workloadInfo) const</td></tr>
<tr class="separator:a041e495449e22774a34d92b0904c10bf"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pub_methods_structarmnn_1_1_queue_descriptor"><td colspan="2" onclick="javascript:toggleInherit('pub_methods_structarmnn_1_1_queue_descriptor')"><img src="closed.png" alt="-"/>&#160;Public Member Functions inherited from <a class="el" href="structarmnn_1_1_queue_descriptor.xhtml">QueueDescriptor</a></td></tr>
<tr class="memitem:a4cb2ebdad75dcaac215c8a1a3d62f315 inherit pub_methods_structarmnn_1_1_queue_descriptor"><td class="memItemLeft" align="right" valign="top">virtual&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structarmnn_1_1_queue_descriptor.xhtml#a4cb2ebdad75dcaac215c8a1a3d62f315">~QueueDescriptor</a> ()=default</td></tr>
<tr class="separator:a4cb2ebdad75dcaac215c8a1a3d62f315 inherit pub_methods_structarmnn_1_1_queue_descriptor"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a089f647d882d65f657d7984e5f505f7c inherit pub_methods_structarmnn_1_1_queue_descriptor"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structarmnn_1_1_queue_descriptor.xhtml#a089f647d882d65f657d7984e5f505f7c">ValidateTensorNumDimensions</a> (const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;tensor, std::string const &amp;descName, unsigned int numDimensions, std::string const &amp;tensorName) const</td></tr>
<tr class="separator:a089f647d882d65f657d7984e5f505f7c inherit pub_methods_structarmnn_1_1_queue_descriptor"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8a30194ce14c088a2625ccc8c3e9d155 inherit pub_methods_structarmnn_1_1_queue_descriptor"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structarmnn_1_1_queue_descriptor.xhtml#a8a30194ce14c088a2625ccc8c3e9d155">ValidateTensorNumDimNumElem</a> (const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> &amp;tensorInfo, unsigned int numDimension, unsigned int numElements, std::string const &amp;tensorName) const</td></tr>
<tr class="separator:a8a30194ce14c088a2625ccc8c3e9d155 inherit pub_methods_structarmnn_1_1_queue_descriptor"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a765d2cee4ccce5b9467e0c2b6d25b84a inherit pub_methods_structarmnn_1_1_queue_descriptor"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structarmnn_1_1_queue_descriptor.xhtml#a765d2cee4ccce5b9467e0c2b6d25b84a">ValidateInputsOutputs</a> (const std::string &amp;descName, unsigned int numExpectedIn, unsigned int numExpectedOut) const</td></tr>
<tr class="separator:a765d2cee4ccce5b9467e0c2b6d25b84a inherit pub_methods_structarmnn_1_1_queue_descriptor"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0428f0a7927f8c29264d9c9a287840da inherit pub_methods_structarmnn_1_1_queue_descriptor"><td class="memTemplParams" colspan="2">template&lt;typename T &gt; </td></tr>
<tr class="memitem:a0428f0a7927f8c29264d9c9a287840da inherit pub_methods_structarmnn_1_1_queue_descriptor"><td class="memTemplItemLeft" align="right" valign="top">const T *&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="structarmnn_1_1_queue_descriptor.xhtml#a0428f0a7927f8c29264d9c9a287840da">GetAdditionalInformation</a> () const</td></tr>
<tr class="separator:a0428f0a7927f8c29264d9c9a287840da inherit pub_methods_structarmnn_1_1_queue_descriptor"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-attribs"></a>
Public Attributes</h2></td></tr>
<tr class="memitem:ab160eba2493d5fe52185c0986dcb190c"><td class="memItemLeft" align="right" valign="top">const <a class="el" href="classarmnn_1_1_const_tensor_handle.xhtml">ConstTensorHandle</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structarmnn_1_1_quantized_lstm_queue_descriptor.xhtml#ab160eba2493d5fe52185c0986dcb190c">m_InputToInputWeights</a></td></tr>
<tr class="separator:ab160eba2493d5fe52185c0986dcb190c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aab77f54a037658ca9b2bf9cc8a1fadf1"><td class="memItemLeft" align="right" valign="top">const <a class="el" href="classarmnn_1_1_const_tensor_handle.xhtml">ConstTensorHandle</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structarmnn_1_1_quantized_lstm_queue_descriptor.xhtml#aab77f54a037658ca9b2bf9cc8a1fadf1">m_InputToForgetWeights</a></td></tr>
<tr class="separator:aab77f54a037658ca9b2bf9cc8a1fadf1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a841439e3b8dc157a7368b19c9ecb7d03"><td class="memItemLeft" align="right" valign="top">const <a class="el" href="classarmnn_1_1_const_tensor_handle.xhtml">ConstTensorHandle</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structarmnn_1_1_quantized_lstm_queue_descriptor.xhtml#a841439e3b8dc157a7368b19c9ecb7d03">m_InputToCellWeights</a></td></tr>
<tr class="separator:a841439e3b8dc157a7368b19c9ecb7d03"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a17ba1c8bcc71a55a95b2a3913f8cb203"><td class="memItemLeft" align="right" valign="top">const <a class="el" href="classarmnn_1_1_const_tensor_handle.xhtml">ConstTensorHandle</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structarmnn_1_1_quantized_lstm_queue_descriptor.xhtml#a17ba1c8bcc71a55a95b2a3913f8cb203">m_InputToOutputWeights</a></td></tr>
<tr class="separator:a17ba1c8bcc71a55a95b2a3913f8cb203"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a299587d4f3fca029492700f3e2585bd8"><td class="memItemLeft" align="right" valign="top">const <a class="el" href="classarmnn_1_1_const_tensor_handle.xhtml">ConstTensorHandle</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structarmnn_1_1_quantized_lstm_queue_descriptor.xhtml#a299587d4f3fca029492700f3e2585bd8">m_RecurrentToInputWeights</a></td></tr>
<tr class="separator:a299587d4f3fca029492700f3e2585bd8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:adf8571dd1867ee91082bd005f94f2610"><td class="memItemLeft" align="right" valign="top">const <a class="el" href="classarmnn_1_1_const_tensor_handle.xhtml">ConstTensorHandle</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structarmnn_1_1_quantized_lstm_queue_descriptor.xhtml#adf8571dd1867ee91082bd005f94f2610">m_RecurrentToForgetWeights</a></td></tr>
<tr class="separator:adf8571dd1867ee91082bd005f94f2610"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac18c8b8b2039267d8282e91b4162d8aa"><td class="memItemLeft" align="right" valign="top">const <a class="el" href="classarmnn_1_1_const_tensor_handle.xhtml">ConstTensorHandle</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structarmnn_1_1_quantized_lstm_queue_descriptor.xhtml#ac18c8b8b2039267d8282e91b4162d8aa">m_RecurrentToCellWeights</a></td></tr>
<tr class="separator:ac18c8b8b2039267d8282e91b4162d8aa"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4c27716f61bb68e8ea0bd4e8389ba01a"><td class="memItemLeft" align="right" valign="top">const <a class="el" href="classarmnn_1_1_const_tensor_handle.xhtml">ConstTensorHandle</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structarmnn_1_1_quantized_lstm_queue_descriptor.xhtml#a4c27716f61bb68e8ea0bd4e8389ba01a">m_RecurrentToOutputWeights</a></td></tr>
<tr class="separator:a4c27716f61bb68e8ea0bd4e8389ba01a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a44eb7524badcca9b2073359e3814c98b"><td class="memItemLeft" align="right" valign="top">const <a class="el" href="classarmnn_1_1_const_tensor_handle.xhtml">ConstTensorHandle</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structarmnn_1_1_quantized_lstm_queue_descriptor.xhtml#a44eb7524badcca9b2073359e3814c98b">m_InputGateBias</a></td></tr>
<tr class="separator:a44eb7524badcca9b2073359e3814c98b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a29fa293fffbf9c6f00cd75db1dc0a52a"><td class="memItemLeft" align="right" valign="top">const <a class="el" href="classarmnn_1_1_const_tensor_handle.xhtml">ConstTensorHandle</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structarmnn_1_1_quantized_lstm_queue_descriptor.xhtml#a29fa293fffbf9c6f00cd75db1dc0a52a">m_ForgetGateBias</a></td></tr>
<tr class="separator:a29fa293fffbf9c6f00cd75db1dc0a52a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6e9593869b82984de198fed27f72cdcf"><td class="memItemLeft" align="right" valign="top">const <a class="el" href="classarmnn_1_1_const_tensor_handle.xhtml">ConstTensorHandle</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structarmnn_1_1_quantized_lstm_queue_descriptor.xhtml#a6e9593869b82984de198fed27f72cdcf">m_CellBias</a></td></tr>
<tr class="separator:a6e9593869b82984de198fed27f72cdcf"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5ff4158b1b363b898d0da04c42d37ce0"><td class="memItemLeft" align="right" valign="top">const <a class="el" href="classarmnn_1_1_const_tensor_handle.xhtml">ConstTensorHandle</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structarmnn_1_1_quantized_lstm_queue_descriptor.xhtml#a5ff4158b1b363b898d0da04c42d37ce0">m_OutputGateBias</a></td></tr>
<tr class="separator:a5ff4158b1b363b898d0da04c42d37ce0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pub_attribs_structarmnn_1_1_queue_descriptor"><td colspan="2" onclick="javascript:toggleInherit('pub_attribs_structarmnn_1_1_queue_descriptor')"><img src="closed.png" alt="-"/>&#160;Public Attributes inherited from <a class="el" href="structarmnn_1_1_queue_descriptor.xhtml">QueueDescriptor</a></td></tr>
<tr class="memitem:a4b50e46a6810018f3edecfb68b2a76b3 inherit pub_attribs_structarmnn_1_1_queue_descriptor"><td class="memItemLeft" align="right" valign="top">std::vector&lt; <a class="el" href="classarmnn_1_1_i_tensor_handle.xhtml">ITensorHandle</a> * &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structarmnn_1_1_queue_descriptor.xhtml#a4b50e46a6810018f3edecfb68b2a76b3">m_Inputs</a></td></tr>
<tr class="separator:a4b50e46a6810018f3edecfb68b2a76b3 inherit pub_attribs_structarmnn_1_1_queue_descriptor"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6abd491bb99ffe88bd472c1ae5a1ed1a inherit pub_attribs_structarmnn_1_1_queue_descriptor"><td class="memItemLeft" align="right" valign="top">std::vector&lt; <a class="el" href="classarmnn_1_1_i_tensor_handle.xhtml">ITensorHandle</a> * &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structarmnn_1_1_queue_descriptor.xhtml#a6abd491bb99ffe88bd472c1ae5a1ed1a">m_Outputs</a></td></tr>
<tr class="separator:a6abd491bb99ffe88bd472c1ae5a1ed1a inherit pub_attribs_structarmnn_1_1_queue_descriptor"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2f2e6134cabedfc58aa53fe38a2b8a67 inherit pub_attribs_structarmnn_1_1_queue_descriptor"><td class="memItemLeft" align="right" valign="top">void *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structarmnn_1_1_queue_descriptor.xhtml#a2f2e6134cabedfc58aa53fe38a2b8a67">m_AdditionalInfoObject</a></td></tr>
<tr class="separator:a2f2e6134cabedfc58aa53fe38a2b8a67 inherit pub_attribs_structarmnn_1_1_queue_descriptor"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9ef8ddbeee4b869e4c68eb2ed278b8d9 inherit pub_attribs_structarmnn_1_1_queue_descriptor"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structarmnn_1_1_queue_descriptor.xhtml#a9ef8ddbeee4b869e4c68eb2ed278b8d9">m_AllowExpandedDims</a> = false</td></tr>
<tr class="separator:a9ef8ddbeee4b869e4c68eb2ed278b8d9 inherit pub_attribs_structarmnn_1_1_queue_descriptor"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="inherited"></a>
Additional Inherited Members</h2></td></tr>
<tr class="inherit_header pro_methods_structarmnn_1_1_queue_descriptor"><td colspan="2" onclick="javascript:toggleInherit('pro_methods_structarmnn_1_1_queue_descriptor')"><img src="closed.png" alt="-"/>&#160;Protected Member Functions inherited from <a class="el" href="structarmnn_1_1_queue_descriptor.xhtml">QueueDescriptor</a></td></tr>
<tr class="memitem:ab088ef357662bcea45cbd49674ad0ff7 inherit pro_methods_structarmnn_1_1_queue_descriptor"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structarmnn_1_1_queue_descriptor.xhtml#ab088ef357662bcea45cbd49674ad0ff7">QueueDescriptor</a> ()</td></tr>
<tr class="separator:ab088ef357662bcea45cbd49674ad0ff7 inherit pro_methods_structarmnn_1_1_queue_descriptor"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a75d3b85e1e50b1dff74ee84a593d089e inherit pro_methods_structarmnn_1_1_queue_descriptor"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structarmnn_1_1_queue_descriptor.xhtml#a75d3b85e1e50b1dff74ee84a593d089e">QueueDescriptor</a> (<a class="el" href="structarmnn_1_1_queue_descriptor.xhtml">QueueDescriptor</a> const &amp;)=default</td></tr>
<tr class="separator:a75d3b85e1e50b1dff74ee84a593d089e inherit pro_methods_structarmnn_1_1_queue_descriptor"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1c928b975a0de05cf2536c721ba6b521 inherit pro_methods_structarmnn_1_1_queue_descriptor"><td class="memItemLeft" align="right" valign="top"><a class="el" href="structarmnn_1_1_queue_descriptor.xhtml">QueueDescriptor</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structarmnn_1_1_queue_descriptor.xhtml#a1c928b975a0de05cf2536c721ba6b521">operator=</a> (<a class="el" href="structarmnn_1_1_queue_descriptor.xhtml">QueueDescriptor</a> const &amp;)=default</td></tr>
<tr class="separator:a1c928b975a0de05cf2536c721ba6b521 inherit pro_methods_structarmnn_1_1_queue_descriptor"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock">
<p class="definition">Definition at line <a class="el" href="include_2armnn_2backends_2_workload_data_8hpp_source.xhtml#l00654">654</a> of file <a class="el" href="include_2armnn_2backends_2_workload_data_8hpp_source.xhtml">WorkloadData.hpp</a>.</p>
</div><h2 class="groupheader">Constructor &amp; Destructor Documentation</h2>
<a id="aafdc5119a81b0104cd742401cec60f3a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aafdc5119a81b0104cd742401cec60f3a">&#9670;&nbsp;</a></span>QuantizedLstmQueueDescriptor()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="structarmnn_1_1_quantized_lstm_queue_descriptor.xhtml">QuantizedLstmQueueDescriptor</a> </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="include_2armnn_2backends_2_workload_data_8hpp_source.xhtml#l00656">656</a> of file <a class="el" href="include_2armnn_2backends_2_workload_data_8hpp_source.xhtml">WorkloadData.hpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00657"></a><span class="lineno">  657</span>&#160;        : <a class="code" href="structarmnn_1_1_quantized_lstm_queue_descriptor.xhtml#ab160eba2493d5fe52185c0986dcb190c">m_InputToInputWeights</a>(<span class="keyword">nullptr</span>)</div><div class="line"><a name="l00658"></a><span class="lineno">  658</span>&#160;        , <a class="code" href="structarmnn_1_1_quantized_lstm_queue_descriptor.xhtml#aab77f54a037658ca9b2bf9cc8a1fadf1">m_InputToForgetWeights</a>(<span class="keyword">nullptr</span>)</div><div class="line"><a name="l00659"></a><span class="lineno">  659</span>&#160;        , <a class="code" href="structarmnn_1_1_quantized_lstm_queue_descriptor.xhtml#a841439e3b8dc157a7368b19c9ecb7d03">m_InputToCellWeights</a>(<span class="keyword">nullptr</span>)</div><div class="line"><a name="l00660"></a><span class="lineno">  660</span>&#160;        , <a class="code" href="structarmnn_1_1_quantized_lstm_queue_descriptor.xhtml#a17ba1c8bcc71a55a95b2a3913f8cb203">m_InputToOutputWeights</a>(<span class="keyword">nullptr</span>)</div><div class="line"><a name="l00661"></a><span class="lineno">  661</span>&#160;</div><div class="line"><a name="l00662"></a><span class="lineno">  662</span>&#160;        , <a class="code" href="structarmnn_1_1_quantized_lstm_queue_descriptor.xhtml#a299587d4f3fca029492700f3e2585bd8">m_RecurrentToInputWeights</a>(<span class="keyword">nullptr</span>)</div><div class="line"><a name="l00663"></a><span class="lineno">  663</span>&#160;        , <a class="code" href="structarmnn_1_1_quantized_lstm_queue_descriptor.xhtml#adf8571dd1867ee91082bd005f94f2610">m_RecurrentToForgetWeights</a>(<span class="keyword">nullptr</span>)</div><div class="line"><a name="l00664"></a><span class="lineno">  664</span>&#160;        , <a class="code" href="structarmnn_1_1_quantized_lstm_queue_descriptor.xhtml#ac18c8b8b2039267d8282e91b4162d8aa">m_RecurrentToCellWeights</a>(<span class="keyword">nullptr</span>)</div><div class="line"><a name="l00665"></a><span class="lineno">  665</span>&#160;        , <a class="code" href="structarmnn_1_1_quantized_lstm_queue_descriptor.xhtml#a4c27716f61bb68e8ea0bd4e8389ba01a">m_RecurrentToOutputWeights</a>(<span class="keyword">nullptr</span>)</div><div class="line"><a name="l00666"></a><span class="lineno">  666</span>&#160;</div><div class="line"><a name="l00667"></a><span class="lineno">  667</span>&#160;        , <a class="code" href="structarmnn_1_1_quantized_lstm_queue_descriptor.xhtml#a44eb7524badcca9b2073359e3814c98b">m_InputGateBias</a>(<span class="keyword">nullptr</span>)</div><div class="line"><a name="l00668"></a><span class="lineno">  668</span>&#160;        , <a class="code" href="structarmnn_1_1_quantized_lstm_queue_descriptor.xhtml#a29fa293fffbf9c6f00cd75db1dc0a52a">m_ForgetGateBias</a>(<span class="keyword">nullptr</span>)</div><div class="line"><a name="l00669"></a><span class="lineno">  669</span>&#160;        , <a class="code" href="structarmnn_1_1_quantized_lstm_queue_descriptor.xhtml#a6e9593869b82984de198fed27f72cdcf">m_CellBias</a>(<span class="keyword">nullptr</span>)</div><div class="line"><a name="l00670"></a><span class="lineno">  670</span>&#160;        , <a class="code" href="structarmnn_1_1_quantized_lstm_queue_descriptor.xhtml#a5ff4158b1b363b898d0da04c42d37ce0">m_OutputGateBias</a>(<span class="keyword">nullptr</span>)</div><div class="line"><a name="l00671"></a><span class="lineno">  671</span>&#160;    {}</div><div class="ttc" id="structarmnn_1_1_quantized_lstm_queue_descriptor_xhtml_a44eb7524badcca9b2073359e3814c98b"><div class="ttname"><a href="structarmnn_1_1_quantized_lstm_queue_descriptor.xhtml#a44eb7524badcca9b2073359e3814c98b">armnn::QuantizedLstmQueueDescriptor::m_InputGateBias</a></div><div class="ttdeci">const ConstTensorHandle * m_InputGateBias</div><div class="ttdef"><b>Definition:</b> <a href="include_2armnn_2backends_2_workload_data_8hpp_source.xhtml#l00683">WorkloadData.hpp:683</a></div></div>
<div class="ttc" id="structarmnn_1_1_quantized_lstm_queue_descriptor_xhtml_a299587d4f3fca029492700f3e2585bd8"><div class="ttname"><a href="structarmnn_1_1_quantized_lstm_queue_descriptor.xhtml#a299587d4f3fca029492700f3e2585bd8">armnn::QuantizedLstmQueueDescriptor::m_RecurrentToInputWeights</a></div><div class="ttdeci">const ConstTensorHandle * m_RecurrentToInputWeights</div><div class="ttdef"><b>Definition:</b> <a href="include_2armnn_2backends_2_workload_data_8hpp_source.xhtml#l00678">WorkloadData.hpp:678</a></div></div>
<div class="ttc" id="structarmnn_1_1_quantized_lstm_queue_descriptor_xhtml_aab77f54a037658ca9b2bf9cc8a1fadf1"><div class="ttname"><a href="structarmnn_1_1_quantized_lstm_queue_descriptor.xhtml#aab77f54a037658ca9b2bf9cc8a1fadf1">armnn::QuantizedLstmQueueDescriptor::m_InputToForgetWeights</a></div><div class="ttdeci">const ConstTensorHandle * m_InputToForgetWeights</div><div class="ttdef"><b>Definition:</b> <a href="include_2armnn_2backends_2_workload_data_8hpp_source.xhtml#l00674">WorkloadData.hpp:674</a></div></div>
<div class="ttc" id="structarmnn_1_1_quantized_lstm_queue_descriptor_xhtml_ac18c8b8b2039267d8282e91b4162d8aa"><div class="ttname"><a href="structarmnn_1_1_quantized_lstm_queue_descriptor.xhtml#ac18c8b8b2039267d8282e91b4162d8aa">armnn::QuantizedLstmQueueDescriptor::m_RecurrentToCellWeights</a></div><div class="ttdeci">const ConstTensorHandle * m_RecurrentToCellWeights</div><div class="ttdef"><b>Definition:</b> <a href="include_2armnn_2backends_2_workload_data_8hpp_source.xhtml#l00680">WorkloadData.hpp:680</a></div></div>
<div class="ttc" id="structarmnn_1_1_quantized_lstm_queue_descriptor_xhtml_a29fa293fffbf9c6f00cd75db1dc0a52a"><div class="ttname"><a href="structarmnn_1_1_quantized_lstm_queue_descriptor.xhtml#a29fa293fffbf9c6f00cd75db1dc0a52a">armnn::QuantizedLstmQueueDescriptor::m_ForgetGateBias</a></div><div class="ttdeci">const ConstTensorHandle * m_ForgetGateBias</div><div class="ttdef"><b>Definition:</b> <a href="include_2armnn_2backends_2_workload_data_8hpp_source.xhtml#l00684">WorkloadData.hpp:684</a></div></div>
<div class="ttc" id="structarmnn_1_1_quantized_lstm_queue_descriptor_xhtml_a4c27716f61bb68e8ea0bd4e8389ba01a"><div class="ttname"><a href="structarmnn_1_1_quantized_lstm_queue_descriptor.xhtml#a4c27716f61bb68e8ea0bd4e8389ba01a">armnn::QuantizedLstmQueueDescriptor::m_RecurrentToOutputWeights</a></div><div class="ttdeci">const ConstTensorHandle * m_RecurrentToOutputWeights</div><div class="ttdef"><b>Definition:</b> <a href="include_2armnn_2backends_2_workload_data_8hpp_source.xhtml#l00681">WorkloadData.hpp:681</a></div></div>
<div class="ttc" id="structarmnn_1_1_quantized_lstm_queue_descriptor_xhtml_a5ff4158b1b363b898d0da04c42d37ce0"><div class="ttname"><a href="structarmnn_1_1_quantized_lstm_queue_descriptor.xhtml#a5ff4158b1b363b898d0da04c42d37ce0">armnn::QuantizedLstmQueueDescriptor::m_OutputGateBias</a></div><div class="ttdeci">const ConstTensorHandle * m_OutputGateBias</div><div class="ttdef"><b>Definition:</b> <a href="include_2armnn_2backends_2_workload_data_8hpp_source.xhtml#l00686">WorkloadData.hpp:686</a></div></div>
<div class="ttc" id="structarmnn_1_1_quantized_lstm_queue_descriptor_xhtml_adf8571dd1867ee91082bd005f94f2610"><div class="ttname"><a href="structarmnn_1_1_quantized_lstm_queue_descriptor.xhtml#adf8571dd1867ee91082bd005f94f2610">armnn::QuantizedLstmQueueDescriptor::m_RecurrentToForgetWeights</a></div><div class="ttdeci">const ConstTensorHandle * m_RecurrentToForgetWeights</div><div class="ttdef"><b>Definition:</b> <a href="include_2armnn_2backends_2_workload_data_8hpp_source.xhtml#l00679">WorkloadData.hpp:679</a></div></div>
<div class="ttc" id="structarmnn_1_1_quantized_lstm_queue_descriptor_xhtml_a17ba1c8bcc71a55a95b2a3913f8cb203"><div class="ttname"><a href="structarmnn_1_1_quantized_lstm_queue_descriptor.xhtml#a17ba1c8bcc71a55a95b2a3913f8cb203">armnn::QuantizedLstmQueueDescriptor::m_InputToOutputWeights</a></div><div class="ttdeci">const ConstTensorHandle * m_InputToOutputWeights</div><div class="ttdef"><b>Definition:</b> <a href="include_2armnn_2backends_2_workload_data_8hpp_source.xhtml#l00676">WorkloadData.hpp:676</a></div></div>
<div class="ttc" id="structarmnn_1_1_quantized_lstm_queue_descriptor_xhtml_ab160eba2493d5fe52185c0986dcb190c"><div class="ttname"><a href="structarmnn_1_1_quantized_lstm_queue_descriptor.xhtml#ab160eba2493d5fe52185c0986dcb190c">armnn::QuantizedLstmQueueDescriptor::m_InputToInputWeights</a></div><div class="ttdeci">const ConstTensorHandle * m_InputToInputWeights</div><div class="ttdef"><b>Definition:</b> <a href="include_2armnn_2backends_2_workload_data_8hpp_source.xhtml#l00673">WorkloadData.hpp:673</a></div></div>
<div class="ttc" id="structarmnn_1_1_quantized_lstm_queue_descriptor_xhtml_a6e9593869b82984de198fed27f72cdcf"><div class="ttname"><a href="structarmnn_1_1_quantized_lstm_queue_descriptor.xhtml#a6e9593869b82984de198fed27f72cdcf">armnn::QuantizedLstmQueueDescriptor::m_CellBias</a></div><div class="ttdeci">const ConstTensorHandle * m_CellBias</div><div class="ttdef"><b>Definition:</b> <a href="include_2armnn_2backends_2_workload_data_8hpp_source.xhtml#l00685">WorkloadData.hpp:685</a></div></div>
<div class="ttc" id="structarmnn_1_1_quantized_lstm_queue_descriptor_xhtml_a841439e3b8dc157a7368b19c9ecb7d03"><div class="ttname"><a href="structarmnn_1_1_quantized_lstm_queue_descriptor.xhtml#a841439e3b8dc157a7368b19c9ecb7d03">armnn::QuantizedLstmQueueDescriptor::m_InputToCellWeights</a></div><div class="ttdeci">const ConstTensorHandle * m_InputToCellWeights</div><div class="ttdef"><b>Definition:</b> <a href="include_2armnn_2backends_2_workload_data_8hpp_source.xhtml#l00675">WorkloadData.hpp:675</a></div></div>
</div><!-- fragment -->
</div>
</div>
<h2 class="groupheader">Member Function Documentation</h2>
<a id="a041e495449e22774a34d92b0904c10bf"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a041e495449e22774a34d92b0904c10bf">&#9670;&nbsp;</a></span>Validate()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void Validate </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="structarmnn_1_1_workload_info.xhtml">WorkloadInfo</a> &amp;&#160;</td>
          <td class="paramname"><em>workloadInfo</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_workload_data_8cpp_source.xhtml#l03434">3434</a> of file <a class="el" href="_workload_data_8cpp_source.xhtml">WorkloadData.cpp</a>.</p>

<p class="reference">References <a class="el" href="include_2armnn_2backends_2_workload_info_8hpp_source.xhtml#l00018">WorkloadInfo::m_InputTensorInfos</a>, <a class="el" href="include_2armnn_2backends_2_workload_info_8hpp_source.xhtml#l00019">WorkloadInfo::m_OutputTensorInfos</a>, <a class="el" href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a0a3f57c876f5a230244c38e1453a8a6e">armnn::QAsymmU8</a>, <a class="el" href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a053c769dcf82d66ef326c86980c02ba7">armnn::QSymmS16</a>, <a class="el" href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6accedffbc6e5308e33d3843e8bdc0dad7">armnn::Signed32</a>, and <a class="el" href="_workload_data_8cpp_source.xhtml#l00463">QueueDescriptor::ValidateTensorNumDimNumElem()</a>.</p>
<div class="fragment"><div class="line"><a name="l03435"></a><span class="lineno"> 3435</span>&#160;{</div><div class="line"><a name="l03436"></a><span class="lineno"> 3436</span>&#160;    <span class="keyword">const</span> std::string descriptorName{<span class="stringliteral">&quot;QuantizedLstmQueueDescriptor&quot;</span>};</div><div class="line"><a name="l03437"></a><span class="lineno"> 3437</span>&#160;</div><div class="line"><a name="l03438"></a><span class="lineno"> 3438</span>&#160;    <span class="comment">// Validate number of inputs/outputs</span></div><div class="line"><a name="l03439"></a><span class="lineno"> 3439</span>&#160;    ValidateNumInputs(workloadInfo,  descriptorName, 3);</div><div class="line"><a name="l03440"></a><span class="lineno"> 3440</span>&#160;    ValidateNumOutputs(workloadInfo, descriptorName, 2);</div><div class="line"><a name="l03441"></a><span class="lineno"> 3441</span>&#160;</div><div class="line"><a name="l03442"></a><span class="lineno"> 3442</span>&#160;    <span class="comment">// Input/output tensor infos</span></div><div class="line"><a name="l03443"></a><span class="lineno"> 3443</span>&#160;    <span class="keyword">auto</span> inputInfo = workloadInfo.<a class="code" href="structarmnn_1_1_workload_info.xhtml#ac97905bfa0daab357b91df1347600309">m_InputTensorInfos</a>[0];</div><div class="line"><a name="l03444"></a><span class="lineno"> 3444</span>&#160;    <span class="keyword">auto</span> cellStateInInfo = workloadInfo.<a class="code" href="structarmnn_1_1_workload_info.xhtml#ac97905bfa0daab357b91df1347600309">m_InputTensorInfos</a>[1];</div><div class="line"><a name="l03445"></a><span class="lineno"> 3445</span>&#160;    <span class="keyword">auto</span> outputStateInInfo = workloadInfo.<a class="code" href="structarmnn_1_1_workload_info.xhtml#ac97905bfa0daab357b91df1347600309">m_InputTensorInfos</a>[2];</div><div class="line"><a name="l03446"></a><span class="lineno"> 3446</span>&#160;</div><div class="line"><a name="l03447"></a><span class="lineno"> 3447</span>&#160;    <span class="keyword">auto</span> cellStateOutInfo = workloadInfo.<a class="code" href="structarmnn_1_1_workload_info.xhtml#a67b178f8a836bc1e52b8de109760adfd">m_OutputTensorInfos</a>[0];</div><div class="line"><a name="l03448"></a><span class="lineno"> 3448</span>&#160;    <span class="keyword">auto</span> outputStateOutInfo = workloadInfo.<a class="code" href="structarmnn_1_1_workload_info.xhtml#a67b178f8a836bc1e52b8de109760adfd">m_OutputTensorInfos</a>[1];</div><div class="line"><a name="l03449"></a><span class="lineno"> 3449</span>&#160;</div><div class="line"><a name="l03450"></a><span class="lineno"> 3450</span>&#160;    std::vector&lt;DataType&gt; inputOutputSupportedTypes =</div><div class="line"><a name="l03451"></a><span class="lineno"> 3451</span>&#160;    {</div><div class="line"><a name="l03452"></a><span class="lineno"> 3452</span>&#160;        <a class="code" href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a0a3f57c876f5a230244c38e1453a8a6e">DataType::QAsymmU8</a></div><div class="line"><a name="l03453"></a><span class="lineno"> 3453</span>&#160;    };</div><div class="line"><a name="l03454"></a><span class="lineno"> 3454</span>&#160;</div><div class="line"><a name="l03455"></a><span class="lineno"> 3455</span>&#160;    std::vector&lt;DataType&gt; cellStateSupportedTypes =</div><div class="line"><a name="l03456"></a><span class="lineno"> 3456</span>&#160;    {</div><div class="line"><a name="l03457"></a><span class="lineno"> 3457</span>&#160;        <a class="code" href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a053c769dcf82d66ef326c86980c02ba7">DataType::QSymmS16</a></div><div class="line"><a name="l03458"></a><span class="lineno"> 3458</span>&#160;    };</div><div class="line"><a name="l03459"></a><span class="lineno"> 3459</span>&#160;</div><div class="line"><a name="l03460"></a><span class="lineno"> 3460</span>&#160;    std::vector&lt;DataType&gt; weightsSupportedTypes =</div><div class="line"><a name="l03461"></a><span class="lineno"> 3461</span>&#160;    {</div><div class="line"><a name="l03462"></a><span class="lineno"> 3462</span>&#160;        <a class="code" href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a0a3f57c876f5a230244c38e1453a8a6e">DataType::QAsymmU8</a></div><div class="line"><a name="l03463"></a><span class="lineno"> 3463</span>&#160;    };</div><div class="line"><a name="l03464"></a><span class="lineno"> 3464</span>&#160;</div><div class="line"><a name="l03465"></a><span class="lineno"> 3465</span>&#160;    std::vector&lt;DataType&gt; biasSupportedTypes =</div><div class="line"><a name="l03466"></a><span class="lineno"> 3466</span>&#160;    {</div><div class="line"><a name="l03467"></a><span class="lineno"> 3467</span>&#160;        <a class="code" href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6accedffbc6e5308e33d3843e8bdc0dad7">DataType::Signed32</a></div><div class="line"><a name="l03468"></a><span class="lineno"> 3468</span>&#160;    };</div><div class="line"><a name="l03469"></a><span class="lineno"> 3469</span>&#160;</div><div class="line"><a name="l03470"></a><span class="lineno"> 3470</span>&#160;    <span class="comment">// Validate types of input/output tensors</span></div><div class="line"><a name="l03471"></a><span class="lineno"> 3471</span>&#160;    ValidateDataTypes(inputInfo, inputOutputSupportedTypes, descriptorName);</div><div class="line"><a name="l03472"></a><span class="lineno"> 3472</span>&#160;    ValidateDataTypes(cellStateInInfo, cellStateSupportedTypes, descriptorName);</div><div class="line"><a name="l03473"></a><span class="lineno"> 3473</span>&#160;    ValidateDataTypes(outputStateInInfo, inputOutputSupportedTypes, descriptorName);</div><div class="line"><a name="l03474"></a><span class="lineno"> 3474</span>&#160;</div><div class="line"><a name="l03475"></a><span class="lineno"> 3475</span>&#160;    ValidateDataTypes(cellStateOutInfo, cellStateSupportedTypes, descriptorName);</div><div class="line"><a name="l03476"></a><span class="lineno"> 3476</span>&#160;    ValidateDataTypes(outputStateOutInfo, inputOutputSupportedTypes, descriptorName);</div><div class="line"><a name="l03477"></a><span class="lineno"> 3477</span>&#160;</div><div class="line"><a name="l03478"></a><span class="lineno"> 3478</span>&#160;    <span class="comment">// Validate matching types of input/output tensors</span></div><div class="line"><a name="l03479"></a><span class="lineno"> 3479</span>&#160;    ValidateTensorDataTypesMatch(inputInfo, outputStateInInfo, descriptorName, <span class="stringliteral">&quot;input&quot;</span>, <span class="stringliteral">&quot;outputStateIn&quot;</span>);</div><div class="line"><a name="l03480"></a><span class="lineno"> 3480</span>&#160;    ValidateTensorDataTypesMatch(outputStateInInfo, outputStateOutInfo, descriptorName,</div><div class="line"><a name="l03481"></a><span class="lineno"> 3481</span>&#160;                                 <span class="stringliteral">&quot;outputStateIn&quot;</span>, <span class="stringliteral">&quot;outputStateOut&quot;</span>);</div><div class="line"><a name="l03482"></a><span class="lineno"> 3482</span>&#160;    ValidateTensorDataTypesMatch(cellStateInInfo, cellStateOutInfo, descriptorName, <span class="stringliteral">&quot;cellStateIn&quot;</span>, <span class="stringliteral">&quot;cellStateOut&quot;</span>);</div><div class="line"><a name="l03483"></a><span class="lineno"> 3483</span>&#160;</div><div class="line"><a name="l03484"></a><span class="lineno"> 3484</span>&#160;    <span class="comment">// Validate matching quantization info for input/output tensors</span></div><div class="line"><a name="l03485"></a><span class="lineno"> 3485</span>&#160;    ValidateTensorQuantizationSpace(inputInfo, outputStateInInfo, descriptorName, <span class="stringliteral">&quot;input&quot;</span>, <span class="stringliteral">&quot;outputStateIn&quot;</span>);</div><div class="line"><a name="l03486"></a><span class="lineno"> 3486</span>&#160;    ValidateTensorQuantizationSpace(inputInfo, outputStateOutInfo, descriptorName, <span class="stringliteral">&quot;input&quot;</span>, <span class="stringliteral">&quot;outputStateOut&quot;</span>);</div><div class="line"><a name="l03487"></a><span class="lineno"> 3487</span>&#160;    ValidateTensorQuantizationSpace(cellStateInInfo, cellStateOutInfo, descriptorName, <span class="stringliteral">&quot;cellStateIn&quot;</span>, <span class="stringliteral">&quot;cellStateOut&quot;</span>);</div><div class="line"><a name="l03488"></a><span class="lineno"> 3488</span>&#160;</div><div class="line"><a name="l03489"></a><span class="lineno"> 3489</span>&#160;    <span class="comment">// Infer number of batches, input size and output size from tensor dimensions</span></div><div class="line"><a name="l03490"></a><span class="lineno"> 3490</span>&#160;    <span class="keyword">const</span> uint32_t numBatches = inputInfo.GetShape()[0];</div><div class="line"><a name="l03491"></a><span class="lineno"> 3491</span>&#160;    <span class="keyword">const</span> uint32_t inputSize  = inputInfo.GetShape()[1];</div><div class="line"><a name="l03492"></a><span class="lineno"> 3492</span>&#160;    <span class="keyword">const</span> uint32_t outputSize = cellStateInInfo.GetShape()[1];</div><div class="line"><a name="l03493"></a><span class="lineno"> 3493</span>&#160;</div><div class="line"><a name="l03494"></a><span class="lineno"> 3494</span>&#160;    <span class="comment">// Validate number of dimensions and number of elements for input/output tensors</span></div><div class="line"><a name="l03495"></a><span class="lineno"> 3495</span>&#160;    <a class="code" href="structarmnn_1_1_queue_descriptor.xhtml#a8a30194ce14c088a2625ccc8c3e9d155">ValidateTensorNumDimNumElem</a>(inputInfo, 2, (numBatches * inputSize), descriptorName + <span class="stringliteral">&quot; input&quot;</span>);</div><div class="line"><a name="l03496"></a><span class="lineno"> 3496</span>&#160;    <a class="code" href="structarmnn_1_1_queue_descriptor.xhtml#a8a30194ce14c088a2625ccc8c3e9d155">ValidateTensorNumDimNumElem</a>(cellStateInInfo, 2, (numBatches * outputSize), descriptorName + <span class="stringliteral">&quot; cellStateIn&quot;</span>);</div><div class="line"><a name="l03497"></a><span class="lineno"> 3497</span>&#160;    <a class="code" href="structarmnn_1_1_queue_descriptor.xhtml#a8a30194ce14c088a2625ccc8c3e9d155">ValidateTensorNumDimNumElem</a>(outputStateInInfo, 2, (numBatches * outputSize), descriptorName + <span class="stringliteral">&quot; outputStateIn&quot;</span>);</div><div class="line"><a name="l03498"></a><span class="lineno"> 3498</span>&#160;    <a class="code" href="structarmnn_1_1_queue_descriptor.xhtml#a8a30194ce14c088a2625ccc8c3e9d155">ValidateTensorNumDimNumElem</a>(cellStateOutInfo, 2, (numBatches * outputSize), descriptorName + <span class="stringliteral">&quot; cellStateOut&quot;</span>);</div><div class="line"><a name="l03499"></a><span class="lineno"> 3499</span>&#160;    <a class="code" href="structarmnn_1_1_queue_descriptor.xhtml#a8a30194ce14c088a2625ccc8c3e9d155">ValidateTensorNumDimNumElem</a>(outputStateOutInfo, 2, (numBatches * outputSize), descriptorName + <span class="stringliteral">&quot; outputStateOut&quot;</span>);</div><div class="line"><a name="l03500"></a><span class="lineno"> 3500</span>&#160;</div><div class="line"><a name="l03501"></a><span class="lineno"> 3501</span>&#160;    <span class="comment">// Validate number of dimensions and number of elements for weights tensors</span></div><div class="line"><a name="l03502"></a><span class="lineno"> 3502</span>&#160;    ValidatePointer(<a class="code" href="structarmnn_1_1_quantized_lstm_queue_descriptor.xhtml#ab160eba2493d5fe52185c0986dcb190c">m_InputToInputWeights</a>, descriptorName, <span class="stringliteral">&quot;InputToInputWeights&quot;</span>);</div><div class="line"><a name="l03503"></a><span class="lineno"> 3503</span>&#160;    <span class="keyword">auto</span> inputToInputWeightsInfo = <a class="code" href="structarmnn_1_1_quantized_lstm_queue_descriptor.xhtml#ab160eba2493d5fe52185c0986dcb190c">m_InputToInputWeights</a>-&gt;<a class="code" href="classarmnn_1_1_const_tensor_handle.xhtml#a66e8f43a5b42b500871ed96e15419567">GetTensorInfo</a>();</div><div class="line"><a name="l03504"></a><span class="lineno"> 3504</span>&#160;    <a class="code" href="structarmnn_1_1_queue_descriptor.xhtml#a8a30194ce14c088a2625ccc8c3e9d155">ValidateTensorNumDimNumElem</a>(inputToInputWeightsInfo, 2, (outputSize * inputSize), <span class="stringliteral">&quot; InputToInputWeights&quot;</span>);</div><div class="line"><a name="l03505"></a><span class="lineno"> 3505</span>&#160;</div><div class="line"><a name="l03506"></a><span class="lineno"> 3506</span>&#160;    ValidatePointer(<a class="code" href="structarmnn_1_1_quantized_lstm_queue_descriptor.xhtml#aab77f54a037658ca9b2bf9cc8a1fadf1">m_InputToForgetWeights</a>, descriptorName, <span class="stringliteral">&quot;InputToForgetWeights&quot;</span>);</div><div class="line"><a name="l03507"></a><span class="lineno"> 3507</span>&#160;    <span class="keyword">auto</span> inputToForgetWeightsInfo = <a class="code" href="structarmnn_1_1_quantized_lstm_queue_descriptor.xhtml#aab77f54a037658ca9b2bf9cc8a1fadf1">m_InputToForgetWeights</a>-&gt;<a class="code" href="classarmnn_1_1_const_tensor_handle.xhtml#a66e8f43a5b42b500871ed96e15419567">GetTensorInfo</a>();</div><div class="line"><a name="l03508"></a><span class="lineno"> 3508</span>&#160;    <a class="code" href="structarmnn_1_1_queue_descriptor.xhtml#a8a30194ce14c088a2625ccc8c3e9d155">ValidateTensorNumDimNumElem</a>(inputToForgetWeightsInfo, 2, (outputSize * inputSize), <span class="stringliteral">&quot; InputToForgetWeights&quot;</span>);</div><div class="line"><a name="l03509"></a><span class="lineno"> 3509</span>&#160;</div><div class="line"><a name="l03510"></a><span class="lineno"> 3510</span>&#160;    ValidatePointer(<a class="code" href="structarmnn_1_1_quantized_lstm_queue_descriptor.xhtml#a841439e3b8dc157a7368b19c9ecb7d03">m_InputToCellWeights</a>, descriptorName, <span class="stringliteral">&quot;InputToCellWeights&quot;</span>);</div><div class="line"><a name="l03511"></a><span class="lineno"> 3511</span>&#160;    <span class="keyword">auto</span> inputToCellWeightsInfo = <a class="code" href="structarmnn_1_1_quantized_lstm_queue_descriptor.xhtml#a841439e3b8dc157a7368b19c9ecb7d03">m_InputToCellWeights</a>-&gt;<a class="code" href="classarmnn_1_1_const_tensor_handle.xhtml#a66e8f43a5b42b500871ed96e15419567">GetTensorInfo</a>();</div><div class="line"><a name="l03512"></a><span class="lineno"> 3512</span>&#160;    <a class="code" href="structarmnn_1_1_queue_descriptor.xhtml#a8a30194ce14c088a2625ccc8c3e9d155">ValidateTensorNumDimNumElem</a>(inputToCellWeightsInfo, 2, (outputSize * inputSize), <span class="stringliteral">&quot; InputToCellWeights&quot;</span>);</div><div class="line"><a name="l03513"></a><span class="lineno"> 3513</span>&#160;</div><div class="line"><a name="l03514"></a><span class="lineno"> 3514</span>&#160;    ValidatePointer(<a class="code" href="structarmnn_1_1_quantized_lstm_queue_descriptor.xhtml#a17ba1c8bcc71a55a95b2a3913f8cb203">m_InputToOutputWeights</a>, descriptorName, <span class="stringliteral">&quot;InputToOutputWeights&quot;</span>);</div><div class="line"><a name="l03515"></a><span class="lineno"> 3515</span>&#160;    <span class="keyword">auto</span> inputToOutputWeightsInfo = <a class="code" href="structarmnn_1_1_quantized_lstm_queue_descriptor.xhtml#a17ba1c8bcc71a55a95b2a3913f8cb203">m_InputToOutputWeights</a>-&gt;<a class="code" href="classarmnn_1_1_const_tensor_handle.xhtml#a66e8f43a5b42b500871ed96e15419567">GetTensorInfo</a>();</div><div class="line"><a name="l03516"></a><span class="lineno"> 3516</span>&#160;    <a class="code" href="structarmnn_1_1_queue_descriptor.xhtml#a8a30194ce14c088a2625ccc8c3e9d155">ValidateTensorNumDimNumElem</a>(inputToOutputWeightsInfo, 2, (outputSize * inputSize), <span class="stringliteral">&quot; InputToOutputWeights&quot;</span>);</div><div class="line"><a name="l03517"></a><span class="lineno"> 3517</span>&#160;</div><div class="line"><a name="l03518"></a><span class="lineno"> 3518</span>&#160;    ValidatePointer(<a class="code" href="structarmnn_1_1_quantized_lstm_queue_descriptor.xhtml#a299587d4f3fca029492700f3e2585bd8">m_RecurrentToInputWeights</a>, descriptorName, <span class="stringliteral">&quot;RecurrentToInputWeights&quot;</span>);</div><div class="line"><a name="l03519"></a><span class="lineno"> 3519</span>&#160;    <span class="keyword">auto</span> recurrentToInputWeightsInfo = <a class="code" href="structarmnn_1_1_quantized_lstm_queue_descriptor.xhtml#a299587d4f3fca029492700f3e2585bd8">m_RecurrentToInputWeights</a>-&gt;<a class="code" href="classarmnn_1_1_const_tensor_handle.xhtml#a66e8f43a5b42b500871ed96e15419567">GetTensorInfo</a>();</div><div class="line"><a name="l03520"></a><span class="lineno"> 3520</span>&#160;    <a class="code" href="structarmnn_1_1_queue_descriptor.xhtml#a8a30194ce14c088a2625ccc8c3e9d155">ValidateTensorNumDimNumElem</a>(recurrentToInputWeightsInfo, 2, (outputSize * outputSize), <span class="stringliteral">&quot; RecurrentToInputWeights&quot;</span>);</div><div class="line"><a name="l03521"></a><span class="lineno"> 3521</span>&#160;</div><div class="line"><a name="l03522"></a><span class="lineno"> 3522</span>&#160;    ValidatePointer(<a class="code" href="structarmnn_1_1_quantized_lstm_queue_descriptor.xhtml#adf8571dd1867ee91082bd005f94f2610">m_RecurrentToForgetWeights</a>, descriptorName, <span class="stringliteral">&quot;RecurrentToForgetWeights&quot;</span>);</div><div class="line"><a name="l03523"></a><span class="lineno"> 3523</span>&#160;    <span class="keyword">auto</span> recurrentToForgetWeightsInfo = <a class="code" href="structarmnn_1_1_quantized_lstm_queue_descriptor.xhtml#adf8571dd1867ee91082bd005f94f2610">m_RecurrentToForgetWeights</a>-&gt;<a class="code" href="classarmnn_1_1_const_tensor_handle.xhtml#a66e8f43a5b42b500871ed96e15419567">GetTensorInfo</a>();</div><div class="line"><a name="l03524"></a><span class="lineno"> 3524</span>&#160;    <a class="code" href="structarmnn_1_1_queue_descriptor.xhtml#a8a30194ce14c088a2625ccc8c3e9d155">ValidateTensorNumDimNumElem</a>(recurrentToForgetWeightsInfo, 2, (outputSize * outputSize),</div><div class="line"><a name="l03525"></a><span class="lineno"> 3525</span>&#160;                                <span class="stringliteral">&quot; RecurrentToForgetWeights&quot;</span>);</div><div class="line"><a name="l03526"></a><span class="lineno"> 3526</span>&#160;</div><div class="line"><a name="l03527"></a><span class="lineno"> 3527</span>&#160;    ValidatePointer(<a class="code" href="structarmnn_1_1_quantized_lstm_queue_descriptor.xhtml#ac18c8b8b2039267d8282e91b4162d8aa">m_RecurrentToCellWeights</a>, descriptorName, <span class="stringliteral">&quot;RecurrentToCellWeights&quot;</span>);</div><div class="line"><a name="l03528"></a><span class="lineno"> 3528</span>&#160;    <span class="keyword">auto</span> recurrentToCellWeightsInfo = <a class="code" href="structarmnn_1_1_quantized_lstm_queue_descriptor.xhtml#ac18c8b8b2039267d8282e91b4162d8aa">m_RecurrentToCellWeights</a>-&gt;<a class="code" href="classarmnn_1_1_const_tensor_handle.xhtml#a66e8f43a5b42b500871ed96e15419567">GetTensorInfo</a>();</div><div class="line"><a name="l03529"></a><span class="lineno"> 3529</span>&#160;    <a class="code" href="structarmnn_1_1_queue_descriptor.xhtml#a8a30194ce14c088a2625ccc8c3e9d155">ValidateTensorNumDimNumElem</a>(recurrentToCellWeightsInfo, 2, (outputSize * outputSize), <span class="stringliteral">&quot; RecurrentToCellWeights&quot;</span>);</div><div class="line"><a name="l03530"></a><span class="lineno"> 3530</span>&#160;</div><div class="line"><a name="l03531"></a><span class="lineno"> 3531</span>&#160;    ValidatePointer(<a class="code" href="structarmnn_1_1_quantized_lstm_queue_descriptor.xhtml#a4c27716f61bb68e8ea0bd4e8389ba01a">m_RecurrentToOutputWeights</a>, descriptorName, <span class="stringliteral">&quot;RecurrentToOutputWeights&quot;</span>);</div><div class="line"><a name="l03532"></a><span class="lineno"> 3532</span>&#160;    <span class="keyword">auto</span> recurrentToOutputWeightsInfo = <a class="code" href="structarmnn_1_1_quantized_lstm_queue_descriptor.xhtml#a4c27716f61bb68e8ea0bd4e8389ba01a">m_RecurrentToOutputWeights</a>-&gt;<a class="code" href="classarmnn_1_1_const_tensor_handle.xhtml#a66e8f43a5b42b500871ed96e15419567">GetTensorInfo</a>();</div><div class="line"><a name="l03533"></a><span class="lineno"> 3533</span>&#160;    <a class="code" href="structarmnn_1_1_queue_descriptor.xhtml#a8a30194ce14c088a2625ccc8c3e9d155">ValidateTensorNumDimNumElem</a>(recurrentToOutputWeightsInfo, 2, (outputSize * outputSize), <span class="stringliteral">&quot; RecurrentToCellWeights&quot;</span>);</div><div class="line"><a name="l03534"></a><span class="lineno"> 3534</span>&#160;</div><div class="line"><a name="l03535"></a><span class="lineno"> 3535</span>&#160;    <span class="comment">// Validate data types for weights tensors (all should match each other)</span></div><div class="line"><a name="l03536"></a><span class="lineno"> 3536</span>&#160;    ValidateDataTypes(inputToInputWeightsInfo, weightsSupportedTypes, descriptorName);</div><div class="line"><a name="l03537"></a><span class="lineno"> 3537</span>&#160;</div><div class="line"><a name="l03538"></a><span class="lineno"> 3538</span>&#160;    ValidateTensorDataTypesMatch(inputToInputWeightsInfo, inputToForgetWeightsInfo, descriptorName,</div><div class="line"><a name="l03539"></a><span class="lineno"> 3539</span>&#160;                                 <span class="stringliteral">&quot;inputToInputWeights&quot;</span>, <span class="stringliteral">&quot;inputToForgetWeights&quot;</span>);</div><div class="line"><a name="l03540"></a><span class="lineno"> 3540</span>&#160;    ValidateTensorDataTypesMatch(inputToInputWeightsInfo, inputToCellWeightsInfo, descriptorName,</div><div class="line"><a name="l03541"></a><span class="lineno"> 3541</span>&#160;                                 <span class="stringliteral">&quot;inputToInputWeights&quot;</span>, <span class="stringliteral">&quot;inputToCellWeights&quot;</span>);</div><div class="line"><a name="l03542"></a><span class="lineno"> 3542</span>&#160;    ValidateTensorDataTypesMatch(inputToInputWeightsInfo, inputToOutputWeightsInfo, descriptorName,</div><div class="line"><a name="l03543"></a><span class="lineno"> 3543</span>&#160;                                 <span class="stringliteral">&quot;inputToInputWeights&quot;</span>, <span class="stringliteral">&quot;inputToOutputWeights&quot;</span>);</div><div class="line"><a name="l03544"></a><span class="lineno"> 3544</span>&#160;</div><div class="line"><a name="l03545"></a><span class="lineno"> 3545</span>&#160;    ValidateTensorDataTypesMatch(inputToInputWeightsInfo, recurrentToInputWeightsInfo, descriptorName,</div><div class="line"><a name="l03546"></a><span class="lineno"> 3546</span>&#160;                                 <span class="stringliteral">&quot;inputToInputWeights&quot;</span>, <span class="stringliteral">&quot;recurrentToInputWeights&quot;</span>);</div><div class="line"><a name="l03547"></a><span class="lineno"> 3547</span>&#160;    ValidateTensorDataTypesMatch(inputToInputWeightsInfo, recurrentToForgetWeightsInfo, descriptorName,</div><div class="line"><a name="l03548"></a><span class="lineno"> 3548</span>&#160;                                 <span class="stringliteral">&quot;inputToInputWeights&quot;</span>, <span class="stringliteral">&quot;recurrentToForgeteights&quot;</span>);</div><div class="line"><a name="l03549"></a><span class="lineno"> 3549</span>&#160;    ValidateTensorDataTypesMatch(inputToInputWeightsInfo, recurrentToCellWeightsInfo, descriptorName,</div><div class="line"><a name="l03550"></a><span class="lineno"> 3550</span>&#160;                                 <span class="stringliteral">&quot;inputToInputWeights&quot;</span>, <span class="stringliteral">&quot;recurrentToCellWeights&quot;</span>);</div><div class="line"><a name="l03551"></a><span class="lineno"> 3551</span>&#160;    ValidateTensorDataTypesMatch(inputToInputWeightsInfo, recurrentToOutputWeightsInfo, descriptorName,</div><div class="line"><a name="l03552"></a><span class="lineno"> 3552</span>&#160;                                 <span class="stringliteral">&quot;inputToInputWeights&quot;</span>, <span class="stringliteral">&quot;recurrentToOutputWeights&quot;</span>);</div><div class="line"><a name="l03553"></a><span class="lineno"> 3553</span>&#160;</div><div class="line"><a name="l03554"></a><span class="lineno"> 3554</span>&#160;    <span class="comment">// Validate matching quantization info for weight tensors (all should match each other)</span></div><div class="line"><a name="l03555"></a><span class="lineno"> 3555</span>&#160;    ValidateTensorQuantizationSpace(inputToInputWeightsInfo, inputToForgetWeightsInfo,</div><div class="line"><a name="l03556"></a><span class="lineno"> 3556</span>&#160;                                    descriptorName, <span class="stringliteral">&quot;inputToInputWeights&quot;</span>, <span class="stringliteral">&quot;inputToForgetWeights&quot;</span>);</div><div class="line"><a name="l03557"></a><span class="lineno"> 3557</span>&#160;    ValidateTensorQuantizationSpace(inputToInputWeightsInfo, inputToCellWeightsInfo,</div><div class="line"><a name="l03558"></a><span class="lineno"> 3558</span>&#160;                                    descriptorName, <span class="stringliteral">&quot;inputToInputWeights&quot;</span>, <span class="stringliteral">&quot;inputToCellWeights&quot;</span>);</div><div class="line"><a name="l03559"></a><span class="lineno"> 3559</span>&#160;    ValidateTensorQuantizationSpace(inputToInputWeightsInfo, inputToOutputWeightsInfo,</div><div class="line"><a name="l03560"></a><span class="lineno"> 3560</span>&#160;                                    descriptorName, <span class="stringliteral">&quot;inputToInputWeights&quot;</span>, <span class="stringliteral">&quot;inputToOutputWeights&quot;</span>);</div><div class="line"><a name="l03561"></a><span class="lineno"> 3561</span>&#160;</div><div class="line"><a name="l03562"></a><span class="lineno"> 3562</span>&#160;    ValidateTensorQuantizationSpace(inputToInputWeightsInfo, recurrentToInputWeightsInfo,</div><div class="line"><a name="l03563"></a><span class="lineno"> 3563</span>&#160;                                    descriptorName, <span class="stringliteral">&quot;inputToInputWeights&quot;</span>, <span class="stringliteral">&quot;recurrentToInputWeights&quot;</span>);</div><div class="line"><a name="l03564"></a><span class="lineno"> 3564</span>&#160;    ValidateTensorQuantizationSpace(inputToInputWeightsInfo, recurrentToForgetWeightsInfo,</div><div class="line"><a name="l03565"></a><span class="lineno"> 3565</span>&#160;                                    descriptorName, <span class="stringliteral">&quot;inputToInputWeights&quot;</span>, <span class="stringliteral">&quot;recurrentToForgetWeights&quot;</span>);</div><div class="line"><a name="l03566"></a><span class="lineno"> 3566</span>&#160;    ValidateTensorQuantizationSpace(inputToInputWeightsInfo, recurrentToCellWeightsInfo,</div><div class="line"><a name="l03567"></a><span class="lineno"> 3567</span>&#160;                                    descriptorName, <span class="stringliteral">&quot;inputToInputWeights&quot;</span>, <span class="stringliteral">&quot;recurrentToCellWeights&quot;</span>);</div><div class="line"><a name="l03568"></a><span class="lineno"> 3568</span>&#160;    ValidateTensorQuantizationSpace(inputToInputWeightsInfo, recurrentToOutputWeightsInfo,</div><div class="line"><a name="l03569"></a><span class="lineno"> 3569</span>&#160;                                    descriptorName, <span class="stringliteral">&quot;inputToInputWeights&quot;</span>, <span class="stringliteral">&quot;recurrentToOutputWeights&quot;</span>);</div><div class="line"><a name="l03570"></a><span class="lineno"> 3570</span>&#160;</div><div class="line"><a name="l03571"></a><span class="lineno"> 3571</span>&#160;    <span class="comment">// Validate number of dimensions and number of elements in bias tensors</span></div><div class="line"><a name="l03572"></a><span class="lineno"> 3572</span>&#160;    ValidatePointer(<a class="code" href="structarmnn_1_1_quantized_lstm_queue_descriptor.xhtml#a44eb7524badcca9b2073359e3814c98b">m_InputGateBias</a>, descriptorName, <span class="stringliteral">&quot;InputGateBias&quot;</span>);</div><div class="line"><a name="l03573"></a><span class="lineno"> 3573</span>&#160;    <span class="keyword">auto</span> inputGateBiasInfo = <a class="code" href="structarmnn_1_1_quantized_lstm_queue_descriptor.xhtml#a44eb7524badcca9b2073359e3814c98b">m_InputGateBias</a>-&gt;<a class="code" href="classarmnn_1_1_const_tensor_handle.xhtml#a66e8f43a5b42b500871ed96e15419567">GetTensorInfo</a>();</div><div class="line"><a name="l03574"></a><span class="lineno"> 3574</span>&#160;    <a class="code" href="structarmnn_1_1_queue_descriptor.xhtml#a8a30194ce14c088a2625ccc8c3e9d155">ValidateTensorNumDimNumElem</a>(inputGateBiasInfo, 1, outputSize, <span class="stringliteral">&quot; InputGateBias&quot;</span>);</div><div class="line"><a name="l03575"></a><span class="lineno"> 3575</span>&#160;</div><div class="line"><a name="l03576"></a><span class="lineno"> 3576</span>&#160;    ValidatePointer(<a class="code" href="structarmnn_1_1_quantized_lstm_queue_descriptor.xhtml#a29fa293fffbf9c6f00cd75db1dc0a52a">m_ForgetGateBias</a>, descriptorName, <span class="stringliteral">&quot;ForgetGateBias&quot;</span>);</div><div class="line"><a name="l03577"></a><span class="lineno"> 3577</span>&#160;    <span class="keyword">auto</span> forgetGateBiasInfo = <a class="code" href="structarmnn_1_1_quantized_lstm_queue_descriptor.xhtml#a29fa293fffbf9c6f00cd75db1dc0a52a">m_ForgetGateBias</a>-&gt;<a class="code" href="classarmnn_1_1_const_tensor_handle.xhtml#a66e8f43a5b42b500871ed96e15419567">GetTensorInfo</a>();</div><div class="line"><a name="l03578"></a><span class="lineno"> 3578</span>&#160;    <a class="code" href="structarmnn_1_1_queue_descriptor.xhtml#a8a30194ce14c088a2625ccc8c3e9d155">ValidateTensorNumDimNumElem</a>(forgetGateBiasInfo, 1, outputSize, <span class="stringliteral">&quot; ForgetGateBias&quot;</span>);</div><div class="line"><a name="l03579"></a><span class="lineno"> 3579</span>&#160;</div><div class="line"><a name="l03580"></a><span class="lineno"> 3580</span>&#160;    ValidatePointer(<a class="code" href="structarmnn_1_1_quantized_lstm_queue_descriptor.xhtml#a6e9593869b82984de198fed27f72cdcf">m_CellBias</a>, descriptorName, <span class="stringliteral">&quot;CellBias&quot;</span>);</div><div class="line"><a name="l03581"></a><span class="lineno"> 3581</span>&#160;    <span class="keyword">auto</span> cellBiasInfo = <a class="code" href="structarmnn_1_1_quantized_lstm_queue_descriptor.xhtml#a6e9593869b82984de198fed27f72cdcf">m_CellBias</a>-&gt;<a class="code" href="classarmnn_1_1_const_tensor_handle.xhtml#a66e8f43a5b42b500871ed96e15419567">GetTensorInfo</a>();</div><div class="line"><a name="l03582"></a><span class="lineno"> 3582</span>&#160;    <a class="code" href="structarmnn_1_1_queue_descriptor.xhtml#a8a30194ce14c088a2625ccc8c3e9d155">ValidateTensorNumDimNumElem</a>(cellBiasInfo, 1, outputSize, <span class="stringliteral">&quot; CellBias&quot;</span>);</div><div class="line"><a name="l03583"></a><span class="lineno"> 3583</span>&#160;</div><div class="line"><a name="l03584"></a><span class="lineno"> 3584</span>&#160;    ValidatePointer(<a class="code" href="structarmnn_1_1_quantized_lstm_queue_descriptor.xhtml#a5ff4158b1b363b898d0da04c42d37ce0">m_OutputGateBias</a>, descriptorName, <span class="stringliteral">&quot;OutputGateBias&quot;</span>);</div><div class="line"><a name="l03585"></a><span class="lineno"> 3585</span>&#160;    <span class="keyword">auto</span> outputGateBiasInfo = <a class="code" href="structarmnn_1_1_quantized_lstm_queue_descriptor.xhtml#a5ff4158b1b363b898d0da04c42d37ce0">m_OutputGateBias</a>-&gt;<a class="code" href="classarmnn_1_1_const_tensor_handle.xhtml#a66e8f43a5b42b500871ed96e15419567">GetTensorInfo</a>();</div><div class="line"><a name="l03586"></a><span class="lineno"> 3586</span>&#160;    <a class="code" href="structarmnn_1_1_queue_descriptor.xhtml#a8a30194ce14c088a2625ccc8c3e9d155">ValidateTensorNumDimNumElem</a>(outputGateBiasInfo, 1, outputSize, <span class="stringliteral">&quot; OutputGateBias&quot;</span>);</div><div class="line"><a name="l03587"></a><span class="lineno"> 3587</span>&#160;</div><div class="line"><a name="l03588"></a><span class="lineno"> 3588</span>&#160;    <span class="comment">// Validate data types for bias tensors (all should match each other)</span></div><div class="line"><a name="l03589"></a><span class="lineno"> 3589</span>&#160;    ValidateDataTypes(inputGateBiasInfo, biasSupportedTypes, descriptorName);</div><div class="line"><a name="l03590"></a><span class="lineno"> 3590</span>&#160;</div><div class="line"><a name="l03591"></a><span class="lineno"> 3591</span>&#160;    ValidateTensorDataTypesMatch(inputGateBiasInfo, forgetGateBiasInfo, descriptorName,</div><div class="line"><a name="l03592"></a><span class="lineno"> 3592</span>&#160;                                 <span class="stringliteral">&quot;inputGateBias&quot;</span>, <span class="stringliteral">&quot;forgetGateBias&quot;</span>);</div><div class="line"><a name="l03593"></a><span class="lineno"> 3593</span>&#160;    ValidateTensorDataTypesMatch(inputGateBiasInfo, cellBiasInfo, descriptorName,</div><div class="line"><a name="l03594"></a><span class="lineno"> 3594</span>&#160;                                 <span class="stringliteral">&quot;inputGateBias&quot;</span>, <span class="stringliteral">&quot;cellBias&quot;</span>);</div><div class="line"><a name="l03595"></a><span class="lineno"> 3595</span>&#160;    ValidateTensorDataTypesMatch(inputGateBiasInfo, outputGateBiasInfo, descriptorName,</div><div class="line"><a name="l03596"></a><span class="lineno"> 3596</span>&#160;                                 <span class="stringliteral">&quot;inputGateBias&quot;</span>, <span class="stringliteral">&quot;outputGateBias&quot;</span>);</div><div class="line"><a name="l03597"></a><span class="lineno"> 3597</span>&#160;</div><div class="line"><a name="l03598"></a><span class="lineno"> 3598</span>&#160;    <span class="comment">// Validate bias tensor quantization info</span></div><div class="line"><a name="l03599"></a><span class="lineno"> 3599</span>&#160;    ValidateBiasTensorQuantization(inputGateBiasInfo, inputInfo, inputToInputWeightsInfo, descriptorName);</div><div class="line"><a name="l03600"></a><span class="lineno"> 3600</span>&#160;    ValidateBiasTensorQuantization(forgetGateBiasInfo, inputInfo, inputToInputWeightsInfo, descriptorName);</div><div class="line"><a name="l03601"></a><span class="lineno"> 3601</span>&#160;    ValidateBiasTensorQuantization(cellBiasInfo, inputInfo, inputToInputWeightsInfo, descriptorName);</div><div class="line"><a name="l03602"></a><span class="lineno"> 3602</span>&#160;    ValidateBiasTensorQuantization(outputGateBiasInfo, inputInfo, inputToInputWeightsInfo, descriptorName);</div><div class="line"><a name="l03603"></a><span class="lineno"> 3603</span>&#160;}</div><div class="ttc" id="namespacearmnn_xhtml_ad8ed01ff3ff33333d8e19db4d2818bb6accedffbc6e5308e33d3843e8bdc0dad7"><div class="ttname"><a href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6accedffbc6e5308e33d3843e8bdc0dad7">armnn::DataType::Signed32</a></div></div>
<div class="ttc" id="structarmnn_1_1_queue_descriptor_xhtml_a8a30194ce14c088a2625ccc8c3e9d155"><div class="ttname"><a href="structarmnn_1_1_queue_descriptor.xhtml#a8a30194ce14c088a2625ccc8c3e9d155">armnn::QueueDescriptor::ValidateTensorNumDimNumElem</a></div><div class="ttdeci">void ValidateTensorNumDimNumElem(const TensorInfo &amp;tensorInfo, unsigned int numDimension, unsigned int numElements, std::string const &amp;tensorName) const</div><div class="ttdef"><b>Definition:</b> <a href="_workload_data_8cpp_source.xhtml#l00463">WorkloadData.cpp:463</a></div></div>
<div class="ttc" id="structarmnn_1_1_quantized_lstm_queue_descriptor_xhtml_a44eb7524badcca9b2073359e3814c98b"><div class="ttname"><a href="structarmnn_1_1_quantized_lstm_queue_descriptor.xhtml#a44eb7524badcca9b2073359e3814c98b">armnn::QuantizedLstmQueueDescriptor::m_InputGateBias</a></div><div class="ttdeci">const ConstTensorHandle * m_InputGateBias</div><div class="ttdef"><b>Definition:</b> <a href="include_2armnn_2backends_2_workload_data_8hpp_source.xhtml#l00683">WorkloadData.hpp:683</a></div></div>
<div class="ttc" id="namespacearmnn_xhtml_ad8ed01ff3ff33333d8e19db4d2818bb6a053c769dcf82d66ef326c86980c02ba7"><div class="ttname"><a href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a053c769dcf82d66ef326c86980c02ba7">armnn::DataType::QSymmS16</a></div></div>
<div class="ttc" id="structarmnn_1_1_quantized_lstm_queue_descriptor_xhtml_a299587d4f3fca029492700f3e2585bd8"><div class="ttname"><a href="structarmnn_1_1_quantized_lstm_queue_descriptor.xhtml#a299587d4f3fca029492700f3e2585bd8">armnn::QuantizedLstmQueueDescriptor::m_RecurrentToInputWeights</a></div><div class="ttdeci">const ConstTensorHandle * m_RecurrentToInputWeights</div><div class="ttdef"><b>Definition:</b> <a href="include_2armnn_2backends_2_workload_data_8hpp_source.xhtml#l00678">WorkloadData.hpp:678</a></div></div>
<div class="ttc" id="classarmnn_1_1_const_tensor_handle_xhtml_a66e8f43a5b42b500871ed96e15419567"><div class="ttname"><a href="classarmnn_1_1_const_tensor_handle.xhtml#a66e8f43a5b42b500871ed96e15419567">armnn::ConstTensorHandle::GetTensorInfo</a></div><div class="ttdeci">const TensorInfo &amp; GetTensorInfo() const</div><div class="ttdef"><b>Definition:</b> <a href="include_2armnn_2backends_2_tensor_handle_8hpp_source.xhtml#l00040">TensorHandle.hpp:40</a></div></div>
<div class="ttc" id="structarmnn_1_1_workload_info_xhtml_ac97905bfa0daab357b91df1347600309"><div class="ttname"><a href="structarmnn_1_1_workload_info.xhtml#ac97905bfa0daab357b91df1347600309">armnn::WorkloadInfo::m_InputTensorInfos</a></div><div class="ttdeci">std::vector&lt; TensorInfo &gt; m_InputTensorInfos</div><div class="ttdef"><b>Definition:</b> <a href="include_2armnn_2backends_2_workload_info_8hpp_source.xhtml#l00018">WorkloadInfo.hpp:18</a></div></div>
<div class="ttc" id="structarmnn_1_1_quantized_lstm_queue_descriptor_xhtml_aab77f54a037658ca9b2bf9cc8a1fadf1"><div class="ttname"><a href="structarmnn_1_1_quantized_lstm_queue_descriptor.xhtml#aab77f54a037658ca9b2bf9cc8a1fadf1">armnn::QuantizedLstmQueueDescriptor::m_InputToForgetWeights</a></div><div class="ttdeci">const ConstTensorHandle * m_InputToForgetWeights</div><div class="ttdef"><b>Definition:</b> <a href="include_2armnn_2backends_2_workload_data_8hpp_source.xhtml#l00674">WorkloadData.hpp:674</a></div></div>
<div class="ttc" id="namespacearmnn_xhtml_ad8ed01ff3ff33333d8e19db4d2818bb6a0a3f57c876f5a230244c38e1453a8a6e"><div class="ttname"><a href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a0a3f57c876f5a230244c38e1453a8a6e">armnn::DataType::QAsymmU8</a></div></div>
<div class="ttc" id="structarmnn_1_1_quantized_lstm_queue_descriptor_xhtml_ac18c8b8b2039267d8282e91b4162d8aa"><div class="ttname"><a href="structarmnn_1_1_quantized_lstm_queue_descriptor.xhtml#ac18c8b8b2039267d8282e91b4162d8aa">armnn::QuantizedLstmQueueDescriptor::m_RecurrentToCellWeights</a></div><div class="ttdeci">const ConstTensorHandle * m_RecurrentToCellWeights</div><div class="ttdef"><b>Definition:</b> <a href="include_2armnn_2backends_2_workload_data_8hpp_source.xhtml#l00680">WorkloadData.hpp:680</a></div></div>
<div class="ttc" id="structarmnn_1_1_quantized_lstm_queue_descriptor_xhtml_a29fa293fffbf9c6f00cd75db1dc0a52a"><div class="ttname"><a href="structarmnn_1_1_quantized_lstm_queue_descriptor.xhtml#a29fa293fffbf9c6f00cd75db1dc0a52a">armnn::QuantizedLstmQueueDescriptor::m_ForgetGateBias</a></div><div class="ttdeci">const ConstTensorHandle * m_ForgetGateBias</div><div class="ttdef"><b>Definition:</b> <a href="include_2armnn_2backends_2_workload_data_8hpp_source.xhtml#l00684">WorkloadData.hpp:684</a></div></div>
<div class="ttc" id="structarmnn_1_1_workload_info_xhtml_a67b178f8a836bc1e52b8de109760adfd"><div class="ttname"><a href="structarmnn_1_1_workload_info.xhtml#a67b178f8a836bc1e52b8de109760adfd">armnn::WorkloadInfo::m_OutputTensorInfos</a></div><div class="ttdeci">std::vector&lt; TensorInfo &gt; m_OutputTensorInfos</div><div class="ttdef"><b>Definition:</b> <a href="include_2armnn_2backends_2_workload_info_8hpp_source.xhtml#l00019">WorkloadInfo.hpp:19</a></div></div>
<div class="ttc" id="structarmnn_1_1_quantized_lstm_queue_descriptor_xhtml_a4c27716f61bb68e8ea0bd4e8389ba01a"><div class="ttname"><a href="structarmnn_1_1_quantized_lstm_queue_descriptor.xhtml#a4c27716f61bb68e8ea0bd4e8389ba01a">armnn::QuantizedLstmQueueDescriptor::m_RecurrentToOutputWeights</a></div><div class="ttdeci">const ConstTensorHandle * m_RecurrentToOutputWeights</div><div class="ttdef"><b>Definition:</b> <a href="include_2armnn_2backends_2_workload_data_8hpp_source.xhtml#l00681">WorkloadData.hpp:681</a></div></div>
<div class="ttc" id="structarmnn_1_1_quantized_lstm_queue_descriptor_xhtml_a5ff4158b1b363b898d0da04c42d37ce0"><div class="ttname"><a href="structarmnn_1_1_quantized_lstm_queue_descriptor.xhtml#a5ff4158b1b363b898d0da04c42d37ce0">armnn::QuantizedLstmQueueDescriptor::m_OutputGateBias</a></div><div class="ttdeci">const ConstTensorHandle * m_OutputGateBias</div><div class="ttdef"><b>Definition:</b> <a href="include_2armnn_2backends_2_workload_data_8hpp_source.xhtml#l00686">WorkloadData.hpp:686</a></div></div>
<div class="ttc" id="structarmnn_1_1_quantized_lstm_queue_descriptor_xhtml_adf8571dd1867ee91082bd005f94f2610"><div class="ttname"><a href="structarmnn_1_1_quantized_lstm_queue_descriptor.xhtml#adf8571dd1867ee91082bd005f94f2610">armnn::QuantizedLstmQueueDescriptor::m_RecurrentToForgetWeights</a></div><div class="ttdeci">const ConstTensorHandle * m_RecurrentToForgetWeights</div><div class="ttdef"><b>Definition:</b> <a href="include_2armnn_2backends_2_workload_data_8hpp_source.xhtml#l00679">WorkloadData.hpp:679</a></div></div>
<div class="ttc" id="structarmnn_1_1_quantized_lstm_queue_descriptor_xhtml_a17ba1c8bcc71a55a95b2a3913f8cb203"><div class="ttname"><a href="structarmnn_1_1_quantized_lstm_queue_descriptor.xhtml#a17ba1c8bcc71a55a95b2a3913f8cb203">armnn::QuantizedLstmQueueDescriptor::m_InputToOutputWeights</a></div><div class="ttdeci">const ConstTensorHandle * m_InputToOutputWeights</div><div class="ttdef"><b>Definition:</b> <a href="include_2armnn_2backends_2_workload_data_8hpp_source.xhtml#l00676">WorkloadData.hpp:676</a></div></div>
<div class="ttc" id="structarmnn_1_1_quantized_lstm_queue_descriptor_xhtml_ab160eba2493d5fe52185c0986dcb190c"><div class="ttname"><a href="structarmnn_1_1_quantized_lstm_queue_descriptor.xhtml#ab160eba2493d5fe52185c0986dcb190c">armnn::QuantizedLstmQueueDescriptor::m_InputToInputWeights</a></div><div class="ttdeci">const ConstTensorHandle * m_InputToInputWeights</div><div class="ttdef"><b>Definition:</b> <a href="include_2armnn_2backends_2_workload_data_8hpp_source.xhtml#l00673">WorkloadData.hpp:673</a></div></div>
<div class="ttc" id="structarmnn_1_1_quantized_lstm_queue_descriptor_xhtml_a6e9593869b82984de198fed27f72cdcf"><div class="ttname"><a href="structarmnn_1_1_quantized_lstm_queue_descriptor.xhtml#a6e9593869b82984de198fed27f72cdcf">armnn::QuantizedLstmQueueDescriptor::m_CellBias</a></div><div class="ttdeci">const ConstTensorHandle * m_CellBias</div><div class="ttdef"><b>Definition:</b> <a href="include_2armnn_2backends_2_workload_data_8hpp_source.xhtml#l00685">WorkloadData.hpp:685</a></div></div>
<div class="ttc" id="structarmnn_1_1_quantized_lstm_queue_descriptor_xhtml_a841439e3b8dc157a7368b19c9ecb7d03"><div class="ttname"><a href="structarmnn_1_1_quantized_lstm_queue_descriptor.xhtml#a841439e3b8dc157a7368b19c9ecb7d03">armnn::QuantizedLstmQueueDescriptor::m_InputToCellWeights</a></div><div class="ttdeci">const ConstTensorHandle * m_InputToCellWeights</div><div class="ttdef"><b>Definition:</b> <a href="include_2armnn_2backends_2_workload_data_8hpp_source.xhtml#l00675">WorkloadData.hpp:675</a></div></div>
</div><!-- fragment -->
</div>
</div>
<h2 class="groupheader">Member Data Documentation</h2>
<a id="a6e9593869b82984de198fed27f72cdcf"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a6e9593869b82984de198fed27f72cdcf">&#9670;&nbsp;</a></span>m_CellBias</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">const <a class="el" href="classarmnn_1_1_const_tensor_handle.xhtml">ConstTensorHandle</a>* m_CellBias</td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="include_2armnn_2backends_2_workload_data_8hpp_source.xhtml#l00685">685</a> of file <a class="el" href="include_2armnn_2backends_2_workload_data_8hpp_source.xhtml">WorkloadData.hpp</a>.</p>

<p class="reference">Referenced by <a class="el" href="_quantized_lstm_layer_8cpp_source.xhtml#l00022">QuantizedLstmLayer::CreateWorkload()</a>.</p>

</div>
</div>
<a id="a29fa293fffbf9c6f00cd75db1dc0a52a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a29fa293fffbf9c6f00cd75db1dc0a52a">&#9670;&nbsp;</a></span>m_ForgetGateBias</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">const <a class="el" href="classarmnn_1_1_const_tensor_handle.xhtml">ConstTensorHandle</a>* m_ForgetGateBias</td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="include_2armnn_2backends_2_workload_data_8hpp_source.xhtml#l00684">684</a> of file <a class="el" href="include_2armnn_2backends_2_workload_data_8hpp_source.xhtml">WorkloadData.hpp</a>.</p>

<p class="reference">Referenced by <a class="el" href="_quantized_lstm_layer_8cpp_source.xhtml#l00022">QuantizedLstmLayer::CreateWorkload()</a>.</p>

</div>
</div>
<a id="a44eb7524badcca9b2073359e3814c98b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a44eb7524badcca9b2073359e3814c98b">&#9670;&nbsp;</a></span>m_InputGateBias</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">const <a class="el" href="classarmnn_1_1_const_tensor_handle.xhtml">ConstTensorHandle</a>* m_InputGateBias</td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="include_2armnn_2backends_2_workload_data_8hpp_source.xhtml#l00683">683</a> of file <a class="el" href="include_2armnn_2backends_2_workload_data_8hpp_source.xhtml">WorkloadData.hpp</a>.</p>

<p class="reference">Referenced by <a class="el" href="_quantized_lstm_layer_8cpp_source.xhtml#l00022">QuantizedLstmLayer::CreateWorkload()</a>.</p>

</div>
</div>
<a id="a841439e3b8dc157a7368b19c9ecb7d03"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a841439e3b8dc157a7368b19c9ecb7d03">&#9670;&nbsp;</a></span>m_InputToCellWeights</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">const <a class="el" href="classarmnn_1_1_const_tensor_handle.xhtml">ConstTensorHandle</a>* m_InputToCellWeights</td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="include_2armnn_2backends_2_workload_data_8hpp_source.xhtml#l00675">675</a> of file <a class="el" href="include_2armnn_2backends_2_workload_data_8hpp_source.xhtml">WorkloadData.hpp</a>.</p>

<p class="reference">Referenced by <a class="el" href="_quantized_lstm_layer_8cpp_source.xhtml#l00022">QuantizedLstmLayer::CreateWorkload()</a>.</p>

</div>
</div>
<a id="aab77f54a037658ca9b2bf9cc8a1fadf1"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aab77f54a037658ca9b2bf9cc8a1fadf1">&#9670;&nbsp;</a></span>m_InputToForgetWeights</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">const <a class="el" href="classarmnn_1_1_const_tensor_handle.xhtml">ConstTensorHandle</a>* m_InputToForgetWeights</td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="include_2armnn_2backends_2_workload_data_8hpp_source.xhtml#l00674">674</a> of file <a class="el" href="include_2armnn_2backends_2_workload_data_8hpp_source.xhtml">WorkloadData.hpp</a>.</p>

<p class="reference">Referenced by <a class="el" href="_quantized_lstm_layer_8cpp_source.xhtml#l00022">QuantizedLstmLayer::CreateWorkload()</a>.</p>

</div>
</div>
<a id="ab160eba2493d5fe52185c0986dcb190c"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ab160eba2493d5fe52185c0986dcb190c">&#9670;&nbsp;</a></span>m_InputToInputWeights</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">const <a class="el" href="classarmnn_1_1_const_tensor_handle.xhtml">ConstTensorHandle</a>* m_InputToInputWeights</td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="include_2armnn_2backends_2_workload_data_8hpp_source.xhtml#l00673">673</a> of file <a class="el" href="include_2armnn_2backends_2_workload_data_8hpp_source.xhtml">WorkloadData.hpp</a>.</p>

<p class="reference">Referenced by <a class="el" href="_quantized_lstm_layer_8cpp_source.xhtml#l00022">QuantizedLstmLayer::CreateWorkload()</a>.</p>

</div>
</div>
<a id="a17ba1c8bcc71a55a95b2a3913f8cb203"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a17ba1c8bcc71a55a95b2a3913f8cb203">&#9670;&nbsp;</a></span>m_InputToOutputWeights</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">const <a class="el" href="classarmnn_1_1_const_tensor_handle.xhtml">ConstTensorHandle</a>* m_InputToOutputWeights</td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="include_2armnn_2backends_2_workload_data_8hpp_source.xhtml#l00676">676</a> of file <a class="el" href="include_2armnn_2backends_2_workload_data_8hpp_source.xhtml">WorkloadData.hpp</a>.</p>

<p class="reference">Referenced by <a class="el" href="_quantized_lstm_layer_8cpp_source.xhtml#l00022">QuantizedLstmLayer::CreateWorkload()</a>.</p>

</div>
</div>
<a id="a5ff4158b1b363b898d0da04c42d37ce0"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a5ff4158b1b363b898d0da04c42d37ce0">&#9670;&nbsp;</a></span>m_OutputGateBias</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">const <a class="el" href="classarmnn_1_1_const_tensor_handle.xhtml">ConstTensorHandle</a>* m_OutputGateBias</td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="include_2armnn_2backends_2_workload_data_8hpp_source.xhtml#l00686">686</a> of file <a class="el" href="include_2armnn_2backends_2_workload_data_8hpp_source.xhtml">WorkloadData.hpp</a>.</p>

<p class="reference">Referenced by <a class="el" href="_quantized_lstm_layer_8cpp_source.xhtml#l00022">QuantizedLstmLayer::CreateWorkload()</a>.</p>

</div>
</div>
<a id="ac18c8b8b2039267d8282e91b4162d8aa"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ac18c8b8b2039267d8282e91b4162d8aa">&#9670;&nbsp;</a></span>m_RecurrentToCellWeights</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">const <a class="el" href="classarmnn_1_1_const_tensor_handle.xhtml">ConstTensorHandle</a>* m_RecurrentToCellWeights</td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="include_2armnn_2backends_2_workload_data_8hpp_source.xhtml#l00680">680</a> of file <a class="el" href="include_2armnn_2backends_2_workload_data_8hpp_source.xhtml">WorkloadData.hpp</a>.</p>

<p class="reference">Referenced by <a class="el" href="_quantized_lstm_layer_8cpp_source.xhtml#l00022">QuantizedLstmLayer::CreateWorkload()</a>.</p>

</div>
</div>
<a id="adf8571dd1867ee91082bd005f94f2610"></a>
<h2 class="memtitle"><span class="permalink"><a href="#adf8571dd1867ee91082bd005f94f2610">&#9670;&nbsp;</a></span>m_RecurrentToForgetWeights</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">const <a class="el" href="classarmnn_1_1_const_tensor_handle.xhtml">ConstTensorHandle</a>* m_RecurrentToForgetWeights</td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="include_2armnn_2backends_2_workload_data_8hpp_source.xhtml#l00679">679</a> of file <a class="el" href="include_2armnn_2backends_2_workload_data_8hpp_source.xhtml">WorkloadData.hpp</a>.</p>

<p class="reference">Referenced by <a class="el" href="_quantized_lstm_layer_8cpp_source.xhtml#l00022">QuantizedLstmLayer::CreateWorkload()</a>.</p>

</div>
</div>
<a id="a299587d4f3fca029492700f3e2585bd8"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a299587d4f3fca029492700f3e2585bd8">&#9670;&nbsp;</a></span>m_RecurrentToInputWeights</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">const <a class="el" href="classarmnn_1_1_const_tensor_handle.xhtml">ConstTensorHandle</a>* m_RecurrentToInputWeights</td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="include_2armnn_2backends_2_workload_data_8hpp_source.xhtml#l00678">678</a> of file <a class="el" href="include_2armnn_2backends_2_workload_data_8hpp_source.xhtml">WorkloadData.hpp</a>.</p>

<p class="reference">Referenced by <a class="el" href="_quantized_lstm_layer_8cpp_source.xhtml#l00022">QuantizedLstmLayer::CreateWorkload()</a>.</p>

</div>
</div>
<a id="a4c27716f61bb68e8ea0bd4e8389ba01a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a4c27716f61bb68e8ea0bd4e8389ba01a">&#9670;&nbsp;</a></span>m_RecurrentToOutputWeights</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">const <a class="el" href="classarmnn_1_1_const_tensor_handle.xhtml">ConstTensorHandle</a>* m_RecurrentToOutputWeights</td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="include_2armnn_2backends_2_workload_data_8hpp_source.xhtml#l00681">681</a> of file <a class="el" href="include_2armnn_2backends_2_workload_data_8hpp_source.xhtml">WorkloadData.hpp</a>.</p>

<p class="reference">Referenced by <a class="el" href="_quantized_lstm_layer_8cpp_source.xhtml#l00022">QuantizedLstmLayer::CreateWorkload()</a>.</p>

</div>
</div>
<hr/>The documentation for this struct was generated from the following files:<ul>
<li>include/armnn/backends/<a class="el" href="include_2armnn_2backends_2_workload_data_8hpp_source.xhtml">WorkloadData.hpp</a></li>
<li>src/backends/backendsCommon/<a class="el" href="_workload_data_8cpp_source.xhtml">WorkloadData.cpp</a></li>
</ul>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="namespacearmnn.xhtml">armnn</a></li><li class="navelem"><a class="el" href="structarmnn_1_1_quantized_lstm_queue_descriptor.xhtml">QuantizedLstmQueueDescriptor</a></li>
    <li class="footer">Generated on Fri Jun 17 2022 13:20:34 for ArmNN by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.13 </li>
  </ul>
</div>
</body>
</html>
