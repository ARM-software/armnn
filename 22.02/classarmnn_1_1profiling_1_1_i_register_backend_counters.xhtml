<!-- Copyright (c) 2020 ARM Limited. -->
<!--                                 -->
<!-- SPDX-License-Identifier: MIT    -->
<!--                                 -->
<!-- HTML header for doxygen 1.8.13-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.13"/>
<meta name="robots" content="NOINDEX, NOFOLLOW" />
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>ArmNN: IRegisterBackendCounters Class Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script><script type="text/javascript" src="http://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="stylesheet.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <img alt="ArmNN" src="Arm_NN_horizontal_blue.png" style="max-width: 10rem; margin-top: .5rem; margin-left 10px"/>
  <td style="padding-left: 0.5em;">
   <div id="projectname">
   &#160;<span id="projectnumber">22.02</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.13 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
$(document).ready(function(){initNavTree('classarmnn_1_1profiling_1_1_i_register_backend_counters.xhtml','');});
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="summary">
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="classarmnn_1_1profiling_1_1_i_register_backend_counters-members.xhtml">List of all members</a>  </div>
  <div class="headertitle">
<div class="title">IRegisterBackendCounters Class Reference<span class="mlabels"><span class="mlabel">abstract</span></span></div>  </div>
</div><!--header-->
<div class="contents">

<p><code>#include &lt;<a class="el" href="_i_backend_profiling_8hpp_source.xhtml">IBackendProfiling.hpp</a>&gt;</code></p>
<div class="dynheader">
Inheritance diagram for IRegisterBackendCounters:</div>
<div class="dyncontent">
 <div class="center">
  <img src="classarmnn_1_1profiling_1_1_i_register_backend_counters.png" usemap="#IRegisterBackendCounters_map" alt=""/>
  <map id="IRegisterBackendCounters_map" name="IRegisterBackendCounters_map">
<area href="classarmnn_1_1profiling_1_1_register_backend_counters.xhtml" alt="RegisterBackendCounters" shape="rect" coords="0,56,161,80"/>
</map>
 </div></div>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:a745a18d2d50f88ae616af5e3fe67892f"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1profiling_1_1_i_register_backend_counters.xhtml#a745a18d2d50f88ae616af5e3fe67892f">RegisterCategory</a> (const std::string &amp;categoryName)=0</td></tr>
<tr class="separator:a745a18d2d50f88ae616af5e3fe67892f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1e48221e1b2a005b133f0043c8ed7190"><td class="memItemLeft" align="right" valign="top">virtual uint16_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1profiling_1_1_i_register_backend_counters.xhtml#a1e48221e1b2a005b133f0043c8ed7190">RegisterDevice</a> (const std::string &amp;deviceName, uint16_t cores=0, const <a class="el" href="classarmnn_1_1_optional.xhtml">Optional</a>&lt; std::string &gt; &amp;parentCategoryName=<a class="el" href="structarmnn_1_1_empty_optional.xhtml">EmptyOptional</a>())=0</td></tr>
<tr class="separator:a1e48221e1b2a005b133f0043c8ed7190"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9c9fb969e907ab6e67d5b605ff019489"><td class="memItemLeft" align="right" valign="top">virtual uint16_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1profiling_1_1_i_register_backend_counters.xhtml#a9c9fb969e907ab6e67d5b605ff019489">RegisterCounterSet</a> (const std::string &amp;counterSetName, uint16_t count=0, const <a class="el" href="classarmnn_1_1_optional.xhtml">Optional</a>&lt; std::string &gt; &amp;parentCategoryName=<a class="el" href="structarmnn_1_1_empty_optional.xhtml">EmptyOptional</a>())=0</td></tr>
<tr class="separator:a9c9fb969e907ab6e67d5b605ff019489"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9bd077ffa9adfaedd89b83505a1da115"><td class="memItemLeft" align="right" valign="top">virtual uint16_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1profiling_1_1_i_register_backend_counters.xhtml#a9bd077ffa9adfaedd89b83505a1da115">RegisterCounter</a> (const uint16_t uid, const std::string &amp;parentCategoryName, uint16_t counterClass, uint16_t interpolation, double multiplier, const std::string &amp;name, const std::string &amp;description, const <a class="el" href="classarmnn_1_1_optional.xhtml">Optional</a>&lt; std::string &gt; &amp;units=<a class="el" href="structarmnn_1_1_empty_optional.xhtml">EmptyOptional</a>(), const <a class="el" href="classarmnn_1_1_optional.xhtml">Optional</a>&lt; uint16_t &gt; &amp;numberOfCores=<a class="el" href="structarmnn_1_1_empty_optional.xhtml">EmptyOptional</a>(), const <a class="el" href="classarmnn_1_1_optional.xhtml">Optional</a>&lt; uint16_t &gt; &amp;deviceUid=<a class="el" href="structarmnn_1_1_empty_optional.xhtml">EmptyOptional</a>(), const <a class="el" href="classarmnn_1_1_optional.xhtml">Optional</a>&lt; uint16_t &gt; &amp;counterSetUid=<a class="el" href="structarmnn_1_1_empty_optional.xhtml">EmptyOptional</a>())=0</td></tr>
<tr class="separator:a9bd077ffa9adfaedd89b83505a1da115"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1df38f206d3d114ab5c98624a74595e7"><td class="memItemLeft" align="right" valign="top">virtual&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1profiling_1_1_i_register_backend_counters.xhtml#a1df38f206d3d114ab5c98624a74595e7">~IRegisterBackendCounters</a> ()</td></tr>
<tr class="separator:a1df38f206d3d114ab5c98624a74595e7"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock">
<p class="definition">Definition at line <a class="el" href="_i_backend_profiling_8hpp_source.xhtml#l00051">51</a> of file <a class="el" href="_i_backend_profiling_8hpp_source.xhtml">IBackendProfiling.hpp</a>.</p>
</div><h2 class="groupheader">Constructor &amp; Destructor Documentation</h2>
<a id="a1df38f206d3d114ab5c98624a74595e7"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a1df38f206d3d114ab5c98624a74595e7">&#9670;&nbsp;</a></span>~IRegisterBackendCounters()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual ~<a class="el" href="classarmnn_1_1profiling_1_1_i_register_backend_counters.xhtml">IRegisterBackendCounters</a> </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_i_backend_profiling_8hpp_source.xhtml#l00076">76</a> of file <a class="el" href="_i_backend_profiling_8hpp_source.xhtml">IBackendProfiling.hpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;{}</div></div><!-- fragment -->
</div>
</div>
<h2 class="groupheader">Member Function Documentation</h2>
<a id="a745a18d2d50f88ae616af5e3fe67892f"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a745a18d2d50f88ae616af5e3fe67892f">&#9670;&nbsp;</a></span>RegisterCategory()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual void RegisterCategory </td>
          <td>(</td>
          <td class="paramtype">const std::string &amp;&#160;</td>
          <td class="paramname"><em>categoryName</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Implemented in <a class="el" href="classarmnn_1_1profiling_1_1_register_backend_counters.xhtml#a547f56db3e9e8c6f5b6ac7b7d3194bfe">RegisterBackendCounters</a>.</p>

</div>
</div>
<a id="a9bd077ffa9adfaedd89b83505a1da115"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a9bd077ffa9adfaedd89b83505a1da115">&#9670;&nbsp;</a></span>RegisterCounter()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual uint16_t RegisterCounter </td>
          <td>(</td>
          <td class="paramtype">const uint16_t&#160;</td>
          <td class="paramname"><em>uid</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const std::string &amp;&#160;</td>
          <td class="paramname"><em>parentCategoryName</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint16_t&#160;</td>
          <td class="paramname"><em>counterClass</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint16_t&#160;</td>
          <td class="paramname"><em>interpolation</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">double&#160;</td>
          <td class="paramname"><em>multiplier</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const std::string &amp;&#160;</td>
          <td class="paramname"><em>name</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const std::string &amp;&#160;</td>
          <td class="paramname"><em>description</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_optional.xhtml">Optional</a>&lt; std::string &gt; &amp;&#160;</td>
          <td class="paramname"><em>units</em> = <code><a class="el" href="structarmnn_1_1_empty_optional.xhtml">EmptyOptional</a>()</code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_optional.xhtml">Optional</a>&lt; uint16_t &gt; &amp;&#160;</td>
          <td class="paramname"><em>numberOfCores</em> = <code><a class="el" href="structarmnn_1_1_empty_optional.xhtml">EmptyOptional</a>()</code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_optional.xhtml">Optional</a>&lt; uint16_t &gt; &amp;&#160;</td>
          <td class="paramname"><em>deviceUid</em> = <code><a class="el" href="structarmnn_1_1_empty_optional.xhtml">EmptyOptional</a>()</code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_optional.xhtml">Optional</a>&lt; uint16_t &gt; &amp;&#160;</td>
          <td class="paramname"><em>counterSetUid</em> = <code><a class="el" href="structarmnn_1_1_empty_optional.xhtml">EmptyOptional</a>()</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Implemented in <a class="el" href="classarmnn_1_1profiling_1_1_register_backend_counters.xhtml#a380988b279ec147ed405cc86d4436975">RegisterBackendCounters</a>.</p>

</div>
</div>
<a id="a9c9fb969e907ab6e67d5b605ff019489"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a9c9fb969e907ab6e67d5b605ff019489">&#9670;&nbsp;</a></span>RegisterCounterSet()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual uint16_t RegisterCounterSet </td>
          <td>(</td>
          <td class="paramtype">const std::string &amp;&#160;</td>
          <td class="paramname"><em>counterSetName</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint16_t&#160;</td>
          <td class="paramname"><em>count</em> = <code>0</code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_optional.xhtml">Optional</a>&lt; std::string &gt; &amp;&#160;</td>
          <td class="paramname"><em>parentCategoryName</em> = <code><a class="el" href="structarmnn_1_1_empty_optional.xhtml">EmptyOptional</a>()</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Implemented in <a class="el" href="classarmnn_1_1profiling_1_1_register_backend_counters.xhtml#a3760d7378ebc54c779f5032662890154">RegisterBackendCounters</a>.</p>

</div>
</div>
<a id="a1e48221e1b2a005b133f0043c8ed7190"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a1e48221e1b2a005b133f0043c8ed7190">&#9670;&nbsp;</a></span>RegisterDevice()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual uint16_t RegisterDevice </td>
          <td>(</td>
          <td class="paramtype">const std::string &amp;&#160;</td>
          <td class="paramname"><em>deviceName</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint16_t&#160;</td>
          <td class="paramname"><em>cores</em> = <code>0</code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_optional.xhtml">Optional</a>&lt; std::string &gt; &amp;&#160;</td>
          <td class="paramname"><em>parentCategoryName</em> = <code><a class="el" href="structarmnn_1_1_empty_optional.xhtml">EmptyOptional</a>()</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Implemented in <a class="el" href="classarmnn_1_1profiling_1_1_register_backend_counters.xhtml#aa59f702553e07454e57b7d75294ded25">RegisterBackendCounters</a>.</p>

</div>
</div>
<hr/>The documentation for this class was generated from the following file:<ul>
<li>include/armnn/backends/profiling/<a class="el" href="_i_backend_profiling_8hpp_source.xhtml">IBackendProfiling.hpp</a></li>
</ul>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="namespacearmnn.xhtml">armnn</a></li><li class="navelem"><a class="el" href="namespacearmnn_1_1profiling.xhtml">profiling</a></li><li class="navelem"><a class="el" href="classarmnn_1_1profiling_1_1_i_register_backend_counters.xhtml">IRegisterBackendCounters</a></li>
    <li class="footer">Generated on Wed Mar 9 2022 12:01:25 for ArmNN by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.13 </li>
  </ul>
</div>
</body>
</html>
