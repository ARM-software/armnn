<!-- Copyright (c) 2020 ARM Limited. -->
<!--                                 -->
<!-- SPDX-License-Identifier: MIT    -->
<!--                                 -->
<!-- HTML header for doxygen 1.8.13-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.13"/>
<meta name="robots" content="NOINDEX, NOFOLLOW" />
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>ArmNN: src/armnn/Profiling.hpp File Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script><script type="text/javascript" src="http://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="stylesheet.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <img alt="ArmNN" src="Arm_NN_horizontal_blue.png" style="max-width: 10rem; margin-top: .5rem; margin-left 10px"/>
  <td style="padding-left: 0.5em;">
   <div id="projectname">
   &#160;<span id="projectnumber">22.05</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.13 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
$(document).ready(function(){initNavTree('_profiling_8hpp.xhtml','');});
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="summary">
<a href="#nested-classes">Classes</a> &#124;
<a href="#namespaces">Namespaces</a> &#124;
<a href="#define-members">Macros</a> &#124;
<a href="#func-members">Functions</a>  </div>
  <div class="headertitle">
<div class="title">Profiling.hpp File Reference</div>  </div>
</div><!--header-->
<div class="contents">
<div class="textblock"><code>#include &lt;common/include/ProfilingGuid.hpp&gt;</code><br />
<code>#include &quot;<a class="el" href="_profiling_event_8hpp_source.xhtml">ProfilingEvent.hpp</a>&quot;</code><br />
<code>#include &quot;<a class="el" href="_profiling_details_8hpp_source.xhtml">ProfilingDetails.hpp</a>&quot;</code><br />
<code>#include &quot;<a class="el" href="_i_profiler_8hpp_source.xhtml">armnn/IProfiler.hpp</a>&quot;</code><br />
<code>#include &lt;<a class="el" href="_optional_8hpp_source.xhtml">armnn/Optional.hpp</a>&gt;</code><br />
<code>#include &lt;<a class="el" href="_ignore_unused_8hpp_source.xhtml">armnn/utility/IgnoreUnused.hpp</a>&gt;</code><br />
<code>#include &quot;<a class="el" href="_wall_clock_timer_8hpp_source.xhtml">WallClockTimer.hpp</a>&quot;</code><br />
<code>#include &lt;chrono&gt;</code><br />
<code>#include &lt;iosfwd&gt;</code><br />
<code>#include &lt;ctime&gt;</code><br />
<code>#include &lt;vector&gt;</code><br />
<code>#include &lt;stack&gt;</code><br />
<code>#include &lt;map&gt;</code><br />
</div>
<p><a href="_profiling_8hpp_source.xhtml">Go to the source code of this file.</a></p>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="nested-classes"></a>
Classes</h2></td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_profiler_impl.xhtml">ProfilerImpl</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structarmnn_1_1_profiler_impl_1_1_marker.xhtml">ProfilerImpl::Marker</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structarmnn_1_1_profiler_impl_1_1_profiling_event_stats.xhtml">ProfilerImpl::ProfilingEventStats</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_profiler_manager.xhtml">ProfilerManager</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_scoped_profiling_event.xhtml">ScopedProfilingEvent</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="namespaces"></a>
Namespaces</h2></td></tr>
<tr class="memitem:namespacearmnn"><td class="memItemLeft" align="right" valign="top"> &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearmnn.xhtml">armnn</a></td></tr>
<tr class="memdesc:namespacearmnn"><td class="mdescLeft">&#160;</td><td class="mdescRight">Copyright (c) 2021 ARM Limited and Contributors. <br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="define-members"></a>
Macros</h2></td></tr>
<tr class="memitem:a4cdafc65083cb710486a87b7eb07ad49"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_profiling_8hpp.xhtml#a4cdafc65083cb710486a87b7eb07ad49">ARMNN_SCOPED_PROFILING_EVENT_WITH_INSTRUMENTS_UNIQUE_LOC_INNER</a>(lineNumber,  backendId,  guid, ...)&#160;&#160;&#160;<a class="el" href="classarmnn_1_1_scoped_profiling_event.xhtml">armnn::ScopedProfilingEvent</a> e_ ## lineNumber(backendId, guid, /*name,*/ __VA_ARGS__);</td></tr>
<tr class="separator:a4cdafc65083cb710486a87b7eb07ad49"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a42a0735f9160bf902380fa61de31c36e"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_profiling_8hpp.xhtml#a42a0735f9160bf902380fa61de31c36e">ARMNN_SCOPED_PROFILING_EVENT_WITH_INSTRUMENTS_UNIQUE_LOC</a>(lineNumber,  backendId,  guid, ...)&#160;&#160;&#160;<a class="el" href="_profiling_8hpp.xhtml#a4cdafc65083cb710486a87b7eb07ad49">ARMNN_SCOPED_PROFILING_EVENT_WITH_INSTRUMENTS_UNIQUE_LOC_INNER</a>(lineNumber, backendId, guid, /*name,*/ __VA_ARGS__)</td></tr>
<tr class="separator:a42a0735f9160bf902380fa61de31c36e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1d6c14f3b73fa7a440ebaf53afa53266"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_profiling_8hpp.xhtml#a1d6c14f3b73fa7a440ebaf53afa53266">ARMNN_SCOPED_PROFILING_EVENT_WITH_INSTRUMENTS</a>(backendId,  guid, ...)&#160;&#160;&#160;<a class="el" href="_profiling_8hpp.xhtml#a42a0735f9160bf902380fa61de31c36e">ARMNN_SCOPED_PROFILING_EVENT_WITH_INSTRUMENTS_UNIQUE_LOC</a>(__LINE__,backendId, guid, /*name,*/ __VA_ARGS__)</td></tr>
<tr class="separator:a1d6c14f3b73fa7a440ebaf53afa53266"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5ccc65e2c464ac05ce311fdae7ede03a"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_profiling_8hpp.xhtml#a5ccc65e2c464ac05ce311fdae7ede03a">ARMNN_SCOPED_PROFILING_EVENT</a>(backendId,  name)&#160;&#160;&#160;<a class="el" href="_profiling_8hpp.xhtml#a1d6c14f3b73fa7a440ebaf53afa53266">ARMNN_SCOPED_PROFILING_EVENT_WITH_INSTRUMENTS</a>(backendId, <a class="el" href="structarmnn_1_1_empty_optional.xhtml">armnn::EmptyOptional</a>(), name, <a class="el" href="classarmnn_1_1_wall_clock_timer.xhtml">armnn::WallClockTimer</a>())</td></tr>
<tr class="separator:a5ccc65e2c464ac05ce311fdae7ede03a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a20704df665aaf54d02d1aa477f5fc956"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_profiling_8hpp.xhtml#a20704df665aaf54d02d1aa477f5fc956">ARMNN_SCOPED_PROFILING_EVENT_GUID</a>(backendId,  name,  guid)&#160;&#160;&#160;<a class="el" href="_profiling_8hpp.xhtml#a1d6c14f3b73fa7a440ebaf53afa53266">ARMNN_SCOPED_PROFILING_EVENT_WITH_INSTRUMENTS</a>(backendId, guid, name, <a class="el" href="classarmnn_1_1_wall_clock_timer.xhtml">armnn::WallClockTimer</a>())</td></tr>
<tr class="separator:a20704df665aaf54d02d1aa477f5fc956"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a786492a3881a4c760ab1eec2149f4aba"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_profiling_8hpp.xhtml#a786492a3881a4c760ab1eec2149f4aba">ARMNN_REPORT_PROFILING_WORKLOAD_DESC</a>(name,  desc,  infos,  guid)&#160;&#160;&#160;<a class="el" href="namespacearmnn.xhtml#a2386397752b62040e3b0647e8bc4dc70">armnn::ProfilingUpdateDescriptions</a>(name, desc, infos, guid);</td></tr>
<tr class="separator:a786492a3881a4c760ab1eec2149f4aba"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="func-members"></a>
Functions</h2></td></tr>
<tr class="memitem:a2386397752b62040e3b0647e8bc4dc70"><td class="memTemplParams" colspan="2">template&lt;typename DescriptorType &gt; </td></tr>
<tr class="memitem:a2386397752b62040e3b0647e8bc4dc70"><td class="memTemplItemLeft" align="right" valign="top">void&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="namespacearmnn.xhtml#a2386397752b62040e3b0647e8bc4dc70">ProfilingUpdateDescriptions</a> (const std::string &amp;name, const DescriptorType &amp;desc, const WorkloadInfo &amp;infos, const arm::pipe::ProfilingGuid guid)</td></tr>
<tr class="separator:a2386397752b62040e3b0647e8bc4dc70"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<h2 class="groupheader">Macro Definition Documentation</h2>
<a id="a786492a3881a4c760ab1eec2149f4aba"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a786492a3881a4c760ab1eec2149f4aba">&#9670;&nbsp;</a></span>ARMNN_REPORT_PROFILING_WORKLOAD_DESC</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define ARMNN_REPORT_PROFILING_WORKLOAD_DESC</td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">name, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">desc, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">infos, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">guid&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td>&#160;&#160;&#160;<a class="el" href="namespacearmnn.xhtml#a2386397752b62040e3b0647e8bc4dc70">armnn::ProfilingUpdateDescriptions</a>(name, desc, infos, guid);</td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_profiling_8hpp_source.xhtml#l00227">227</a> of file <a class="el" href="_profiling_8hpp_source.xhtml">Profiling.hpp</a>.</p>

<p class="reference">Referenced by <a class="el" href="_cl_activation_workload_8cpp_source.xhtml#l00032">ClActivationWorkload::ClActivationWorkload()</a>, <a class="el" href="_cl_arg_min_max_workload_8cpp_source.xhtml#l00055">ClArgMinMaxWorkload::ClArgMinMaxWorkload()</a>, <a class="el" href="_cl_batch_normalization_float_workload_8cpp_source.xhtml#l00054">ClBatchNormalizationFloatWorkload::ClBatchNormalizationFloatWorkload()</a>, <a class="el" href="_cl_batch_to_space_nd_workload_8cpp_source.xhtml#l00020">ClBatchToSpaceNdWorkload::ClBatchToSpaceNdWorkload()</a>, <a class="el" href="_cl_channel_shuffle_workload_8cpp_source.xhtml#l00054">ClChannelShuffleWorkload::ClChannelShuffleWorkload()</a>, <a class="el" href="_cl_comparison_workload_8cpp_source.xhtml#l00042">ClComparisonWorkload::ClComparisonWorkload()</a>, <a class="el" href="_cl_concat_workload_8cpp_source.xhtml#l00048">ClConcatWorkload::ClConcatWorkload()</a>, <a class="el" href="_cl_depth_to_space_workload_8cpp_source.xhtml#l00039">ClDepthToSpaceWorkload::ClDepthToSpaceWorkload()</a>, <a class="el" href="_cl_depthwise_convolution_workload_8cpp_source.xhtml#l00097">ClDepthwiseConvolutionWorkload::ClDepthwiseConvolutionWorkload()</a>, <a class="el" href="_cl_exp_workload_8cpp_source.xhtml#l00026">ClExpWorkload::ClExpWorkload()</a>, <a class="el" href="_cl_fill_workload_8cpp_source.xhtml#l00018">ClFillWorkload::ClFillWorkload()</a>, <a class="el" href="_cl_fully_connected_workload_8cpp_source.xhtml#l00064">ClFullyConnectedWorkload::ClFullyConnectedWorkload()</a>, <a class="el" href="_cl_gather_workload_8cpp_source.xhtml#l00029">ClGatherWorkload::ClGatherWorkload()</a>, <a class="el" href="_cl_instance_normalization_workload_8cpp_source.xhtml#l00032">ClInstanceNormalizationWorkload::ClInstanceNormalizationWorkload()</a>, <a class="el" href="_cl_l2_normalization_float_workload_8cpp_source.xhtml#l00029">ClL2NormalizationFloatWorkload::ClL2NormalizationFloatWorkload()</a>, <a class="el" href="_cl_logical_and_workload_8cpp_source.xhtml#l00034">ClLogicalAndWorkload::ClLogicalAndWorkload()</a>, <a class="el" href="_cl_logical_not_workload_8cpp_source.xhtml#l00031">ClLogicalNotWorkload::ClLogicalNotWorkload()</a>, <a class="el" href="_cl_logical_or_workload_8cpp_source.xhtml#l00034">ClLogicalOrWorkload::ClLogicalOrWorkload()</a>, <a class="el" href="_cl_log_softmax_workload_8cpp_source.xhtml#l00028">ClLogSoftmaxWorkload::ClLogSoftmaxWorkload()</a>, <a class="el" href="_cl_lstm_float_workload_8cpp_source.xhtml#l00023">ClLstmFloatWorkload::ClLstmFloatWorkload()</a>, <a class="el" href="_cl_mean_workload_8cpp_source.xhtml#l00031">ClMeanWorkload::ClMeanWorkload()</a>, <a class="el" href="_cl_normalization_float_workload_8cpp_source.xhtml#l00031">ClNormalizationFloatWorkload::ClNormalizationFloatWorkload()</a>, <a class="el" href="_cl_pad_workload_8cpp_source.xhtml#l00019">ClPadWorkload::ClPadWorkload()</a>, <a class="el" href="_cl_permute_workload_8cpp_source.xhtml#l00029">ClPermuteWorkload::ClPermuteWorkload()</a>, <a class="el" href="_cl_pooling2d_workload_8cpp_source.xhtml#l00030">ClPooling2dWorkload::ClPooling2dWorkload()</a>, <a class="el" href="_cl_pooling3d_workload_8cpp_source.xhtml#l00030">ClPooling3dWorkload::ClPooling3dWorkload()</a>, <a class="el" href="_cl_q_lstm_workload_8cpp_source.xhtml#l00017">ClQLstmWorkload::ClQLstmWorkload()</a>, <a class="el" href="_cl_reduce_workload_8cpp_source.xhtml#l00046">ClReduceWorkload::ClReduceWorkload()</a>, <a class="el" href="_cl_resize_workload_8cpp_source.xhtml#l00049">ClResizeWorkload::ClResizeWorkload()</a>, <a class="el" href="_cl_slice_workload_8cpp_source.xhtml#l00033">ClSliceWorkload::ClSliceWorkload()</a>, <a class="el" href="_cl_softmax_workload_8cpp_source.xhtml#l00028">ClSoftmaxWorkload::ClSoftmaxWorkload()</a>, <a class="el" href="_cl_space_to_batch_nd_workload_8cpp_source.xhtml#l00047">ClSpaceToBatchNdWorkload::ClSpaceToBatchNdWorkload()</a>, <a class="el" href="_cl_space_to_depth_workload_8cpp_source.xhtml#l00020">ClSpaceToDepthWorkload::ClSpaceToDepthWorkload()</a>, <a class="el" href="_cl_splitter_workload_8cpp_source.xhtml#l00055">ClSplitterWorkload::ClSplitterWorkload()</a>, <a class="el" href="_cl_sqrt_workload_8cpp_source.xhtml#l00032">ClSqrtWorkload::ClSqrtWorkload()</a>, <a class="el" href="_cl_stack_workload_8cpp_source.xhtml#l00047">ClStackWorkload::ClStackWorkload()</a>, <a class="el" href="_cl_strided_slice_workload_8cpp_source.xhtml#l00055">ClStridedSliceWorkload::ClStridedSliceWorkload()</a>, <a class="el" href="_cl_transpose_convolution2d_workload_8cpp_source.xhtml#l00056">ClTransposeConvolution2dWorkload::ClTransposeConvolution2dWorkload()</a>, <a class="el" href="_cl_transpose_workload_8cpp_source.xhtml#l00029">ClTransposeWorkload::ClTransposeWorkload()</a>, <a class="el" href="_cl_unidirectional_sequence_lstm_float_workload_8cpp_source.xhtml#l00032">ClUnidirectionalSequenceLstmFloatWorkload::ClUnidirectionalSequenceLstmFloatWorkload()</a>, <a class="el" href="_neon_activation_workload_8cpp_source.xhtml#l00032">NeonActivationWorkload::NeonActivationWorkload()</a>, <a class="el" href="_neon_arg_min_max_workload_8cpp_source.xhtml#l00055">NeonArgMinMaxWorkload::NeonArgMinMaxWorkload()</a>, <a class="el" href="_neon_batch_normalization_workload_8cpp_source.xhtml#l00059">NeonBatchNormalizationWorkload::NeonBatchNormalizationWorkload()</a>, <a class="el" href="_neon_batch_to_space_nd_workload_8cpp_source.xhtml#l00038">NeonBatchToSpaceNdWorkload::NeonBatchToSpaceNdWorkload()</a>, <a class="el" href="_neon_channel_shuffle_workload_8cpp_source.xhtml#l00051">NeonChannelShuffleWorkload::NeonChannelShuffleWorkload()</a>, <a class="el" href="_neon_comparison_workload_8cpp_source.xhtml#l00034">NeonComparisonWorkload::NeonComparisonWorkload()</a>, <a class="el" href="_neon_concat_workload_8cpp_source.xhtml#l00049">NeonConcatWorkload::NeonConcatWorkload()</a>, <a class="el" href="_neon_depth_to_space_workload_8cpp_source.xhtml#l00032">NeonDepthToSpaceWorkload::NeonDepthToSpaceWorkload()</a>, <a class="el" href="_neon_detection_post_process_workload_8cpp_source.xhtml#l00075">NeonDetectionPostProcessWorkload::NeonDetectionPostProcessWorkload()</a>, <a class="el" href="_neon_exp_workload_8cpp_source.xhtml#l00025">NeonExpWorkload::NeonExpWorkload()</a>, <a class="el" href="_neon_fill_workload_8cpp_source.xhtml#l00019">NeonFillWorkload::NeonFillWorkload()</a>, <a class="el" href="_neon_gather_workload_8cpp_source.xhtml#l00027">NeonGatherWorkload::NeonGatherWorkload()</a>, <a class="el" href="_neon_instance_normalization_workload_8cpp_source.xhtml#l00033">NeonInstanceNormalizationWorkload::NeonInstanceNormalizationWorkload()</a>, <a class="el" href="_neon_l2_normalization_float_workload_8cpp_source.xhtml#l00031">NeonL2NormalizationFloatWorkload::NeonL2NormalizationFloatWorkload()</a>, <a class="el" href="_neon_logical_and_workload_8cpp_source.xhtml#l00032">NeonLogicalAndWorkload::NeonLogicalAndWorkload()</a>, <a class="el" href="_neon_logical_not_workload_8cpp_source.xhtml#l00030">NeonLogicalNotWorkload::NeonLogicalNotWorkload()</a>, <a class="el" href="_neon_logical_or_workload_8cpp_source.xhtml#l00032">NeonLogicalOrWorkload::NeonLogicalOrWorkload()</a>, <a class="el" href="_neon_log_softmax_workload_8cpp_source.xhtml#l00033">NeonLogSoftmaxWorkload::NeonLogSoftmaxWorkload()</a>, <a class="el" href="_neon_lstm_float_workload_8cpp_source.xhtml#l00020">NeonLstmFloatWorkload::NeonLstmFloatWorkload()</a>, <a class="el" href="_neon_mean_workload_8cpp_source.xhtml#l00032">NeonMeanWorkload::NeonMeanWorkload()</a>, <a class="el" href="_neon_normalization_float_workload_8cpp_source.xhtml#l00061">NeonNormalizationFloatWorkload::NeonNormalizationFloatWorkload()</a>, <a class="el" href="_neon_pad_workload_8cpp_source.xhtml#l00020">NeonPadWorkload::NeonPadWorkload()</a>, <a class="el" href="_neon_permute_workload_8cpp_source.xhtml#l00027">NeonPermuteWorkload::NeonPermuteWorkload()</a>, <a class="el" href="_neon_pooling2d_workload_8cpp_source.xhtml#l00036">NeonPooling2dWorkload::NeonPooling2dWorkload()</a>, <a class="el" href="_neon_pooling3d_workload_8cpp_source.xhtml#l00025">NeonPooling3dWorkload::NeonPooling3dWorkload()</a>, <a class="el" href="_neon_q_lstm_workload_8cpp_source.xhtml#l00017">NeonQLstmWorkload::NeonQLstmWorkload()</a>, <a class="el" href="_neon_reduce_workload_8cpp_source.xhtml#l00047">NeonReduceWorkload::NeonReduceWorkload()</a>, <a class="el" href="_neon_resize_workload_8cpp_source.xhtml#l00052">NeonResizeWorkload::NeonResizeWorkload()</a>, <a class="el" href="_neon_slice_workload_8cpp_source.xhtml#l00036">NeonSliceWorkload::NeonSliceWorkload()</a>, <a class="el" href="_neon_softmax_workload_8cpp_source.xhtml#l00033">NeonSoftmaxWorkload::NeonSoftmaxWorkload()</a>, <a class="el" href="_neon_space_to_batch_nd_workload_8cpp_source.xhtml#l00044">NeonSpaceToBatchNdWorkload::NeonSpaceToBatchNdWorkload()</a>, <a class="el" href="_neon_space_to_depth_workload_8cpp_source.xhtml#l00032">NeonSpaceToDepthWorkload::NeonSpaceToDepthWorkload()</a>, <a class="el" href="_neon_splitter_workload_8cpp_source.xhtml#l00056">NeonSplitterWorkload::NeonSplitterWorkload()</a>, <a class="el" href="_neon_sqrt_workload_8cpp_source.xhtml#l00031">NeonSqrtWorkload::NeonSqrtWorkload()</a>, <a class="el" href="_neon_stack_workload_8cpp_source.xhtml#l00049">NeonStackWorkload::NeonStackWorkload()</a>, <a class="el" href="_neon_strided_slice_workload_8cpp_source.xhtml#l00049">NeonStridedSliceWorkload::NeonStridedSliceWorkload()</a>, <a class="el" href="_neon_transpose_workload_8cpp_source.xhtml#l00027">NeonTransposeWorkload::NeonTransposeWorkload()</a>, <a class="el" href="_neon_unidirectional_sequence_lstm_float_workload_8cpp_source.xhtml#l00032">NeonUnidirectionalSequenceLstmFloatWorkload::NeonUnidirectionalSequenceLstmFloatWorkload()</a>, <a class="el" href="_neon_unidirectional_sequence_lstm_workload_8cpp_source.xhtml#l00033">NeonUnidirectionalSequenceLstmWorkload::NeonUnidirectionalSequenceLstmWorkload()</a>, <a class="el" href="_ref_convolution3d_workload_8cpp_source.xhtml#l00015">RefConvolution3dWorkload::RefConvolution3dWorkload()</a>, and <a class="el" href="_ref_depthwise_convolution2d_workload_8cpp_source.xhtml#l00018">RefDepthwiseConvolution2dWorkload::RefDepthwiseConvolution2dWorkload()</a>.</p>

</div>
</div>
<a id="a5ccc65e2c464ac05ce311fdae7ede03a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a5ccc65e2c464ac05ce311fdae7ede03a">&#9670;&nbsp;</a></span>ARMNN_SCOPED_PROFILING_EVENT</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define ARMNN_SCOPED_PROFILING_EVENT</td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">backendId, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">name&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td>&#160;&#160;&#160;<a class="el" href="_profiling_8hpp.xhtml#a1d6c14f3b73fa7a440ebaf53afa53266">ARMNN_SCOPED_PROFILING_EVENT_WITH_INSTRUMENTS</a>(backendId, <a class="el" href="structarmnn_1_1_empty_optional.xhtml">armnn::EmptyOptional</a>(), name, <a class="el" href="classarmnn_1_1_wall_clock_timer.xhtml">armnn::WallClockTimer</a>())</td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_profiling_8hpp_source.xhtml#l00220">220</a> of file <a class="el" href="_profiling_8hpp_source.xhtml">Profiling.hpp</a>.</p>

<p class="reference">Referenced by <a class="el" href="_graph_8cpp_source.xhtml#l00181">Graph::AllocateDynamicBuffers()</a>, <a class="el" href="_network_8cpp_source.xhtml#l01139">armnn::ApplyBackendOptimizations()</a>, <a class="el" href="_network_8cpp_source.xhtml#l01018">armnn::AssignBackends()</a>, <a class="el" href="_cl_abs_workload_8cpp_source.xhtml#l00027">ClAbsWorkload::ClAbsWorkload()</a>, <a class="el" href="_cl_activation_workload_8cpp_source.xhtml#l00032">ClActivationWorkload::ClActivationWorkload()</a>, <a class="el" href="_cl_addition_workload_8cpp_source.xhtml#l00021">ClAdditionWorkload::ClAdditionWorkload()</a>, <a class="el" href="_cl_arg_min_max_workload_8cpp_source.xhtml#l00055">ClArgMinMaxWorkload::ClArgMinMaxWorkload()</a>, <a class="el" href="_cl_cast_workload_8cpp_source.xhtml#l00028">ClCastWorkload::ClCastWorkload()</a>, <a class="el" href="_cl_comparison_workload_8cpp_source.xhtml#l00042">ClComparisonWorkload::ClComparisonWorkload()</a>, <a class="el" href="_cl_concat_workload_8cpp_source.xhtml#l00048">ClConcatWorkload::ClConcatWorkload()</a>, <a class="el" href="_cl_convert_fp16_to_fp32_workload_8cpp_source.xhtml#l00017">ClConvertFp16ToFp32Workload::ClConvertFp16ToFp32Workload()</a>, <a class="el" href="_cl_convert_fp32_to_fp16_workload_8cpp_source.xhtml#l00017">ClConvertFp32ToFp16Workload::ClConvertFp32ToFp16Workload()</a>, <a class="el" href="_cl_convolution2d_workload_8cpp_source.xhtml#l00081">ClConvolution2dWorkload::ClConvolution2dWorkload()</a>, <a class="el" href="_cl_dequantize_workload_8cpp_source.xhtml#l00030">ClDequantizeWorkload::ClDequantizeWorkload()</a>, <a class="el" href="_cl_division_workload_8cpp_source.xhtml#l00034">ClDivisionWorkload::ClDivisionWorkload()</a>, <a class="el" href="_cl_exp_workload_8cpp_source.xhtml#l00026">ClExpWorkload::ClExpWorkload()</a>, <a class="el" href="_cl_floor_float_workload_8cpp_source.xhtml#l00023">ClFloorFloatWorkload::ClFloorFloatWorkload()</a>, <a class="el" href="_cl_fully_connected_workload_8cpp_source.xhtml#l00064">ClFullyConnectedWorkload::ClFullyConnectedWorkload()</a>, <a class="el" href="_cl_gather_workload_8cpp_source.xhtml#l00029">ClGatherWorkload::ClGatherWorkload()</a>, <a class="el" href="_cl_logical_and_workload_8cpp_source.xhtml#l00034">ClLogicalAndWorkload::ClLogicalAndWorkload()</a>, <a class="el" href="_cl_logical_not_workload_8cpp_source.xhtml#l00031">ClLogicalNotWorkload::ClLogicalNotWorkload()</a>, <a class="el" href="_cl_logical_or_workload_8cpp_source.xhtml#l00034">ClLogicalOrWorkload::ClLogicalOrWorkload()</a>, <a class="el" href="_cl_log_softmax_workload_8cpp_source.xhtml#l00028">ClLogSoftmaxWorkload::ClLogSoftmaxWorkload()</a>, <a class="el" href="_cl_log_workload_8cpp_source.xhtml#l00026">ClLogWorkload::ClLogWorkload()</a>, <a class="el" href="_cl_maximum_workload_8cpp_source.xhtml#l00039">ClMaximumWorkload::ClMaximumWorkload()</a>, <a class="el" href="_cl_minimum_workload_8cpp_source.xhtml#l00039">ClMinimumWorkload::ClMinimumWorkload()</a>, <a class="el" href="_cl_multiplication_workload_8cpp_source.xhtml#l00047">ClMultiplicationWorkload::ClMultiplicationWorkload()</a>, <a class="el" href="_cl_neg_workload_8cpp_source.xhtml#l00026">ClNegWorkload::ClNegWorkload()</a>, <a class="el" href="_cl_prelu_workload_8cpp_source.xhtml#l00029">ClPreluWorkload::ClPreluWorkload()</a>, <a class="el" href="_cl_quantize_workload_8cpp_source.xhtml#l00032">ClQuantizeWorkload::ClQuantizeWorkload()</a>, <a class="el" href="_cl_reshape_workload_8cpp_source.xhtml#l00024">ClReshapeWorkload::ClReshapeWorkload()</a>, <a class="el" href="_cl_rsqrt_workload_8cpp_source.xhtml#l00026">ClRsqrtWorkload::ClRsqrtWorkload()</a>, <a class="el" href="_cl_sin_workload_8cpp_source.xhtml#l00026">ClSinWorkload::ClSinWorkload()</a>, <a class="el" href="_cl_slice_workload_8cpp_source.xhtml#l00033">ClSliceWorkload::ClSliceWorkload()</a>, <a class="el" href="_cl_softmax_workload_8cpp_source.xhtml#l00028">ClSoftmaxWorkload::ClSoftmaxWorkload()</a>, <a class="el" href="_cl_splitter_workload_8cpp_source.xhtml#l00055">ClSplitterWorkload::ClSplitterWorkload()</a>, <a class="el" href="_cl_sqrt_workload_8cpp_source.xhtml#l00032">ClSqrtWorkload::ClSqrtWorkload()</a>, <a class="el" href="_cl_stack_workload_8cpp_source.xhtml#l00047">ClStackWorkload::ClStackWorkload()</a>, <a class="el" href="_cl_subtraction_workload_8cpp_source.xhtml#l00021">ClSubtractionWorkload::ClSubtractionWorkload()</a>, <a class="el" href="_cl_transpose_workload_8cpp_source.xhtml#l00029">ClTransposeWorkload::ClTransposeWorkload()</a>, <a class="el" href="_workload_utils_8hpp_source.xhtml#l00046">armnn::CopyTensorContentsGeneric()</a>, <a class="el" href="_runtime_8cpp_source.xhtml#l00721">RuntimeImpl::CreateWorkingMemHandle()</a>, <a class="el" href="_convolution2d_layer_8cpp_source.xhtml#l00049">Convolution2dLayer::CreateWorkload()</a>, <a class="el" href="_runtime_8cpp_source.xhtml#l00630">RuntimeImpl::EnqueueWorkload()</a>, <a class="el" href="_loaded_network_8cpp_source.xhtml#l00755">LoadedNetwork::EnqueueWorkload()</a>, <a class="el" href="_mem_copy_workload_8cpp_source.xhtml#l00051">CopyMemGenericWorkload::Execute()</a>, <a class="el" href="_mem_import_workload_8cpp_source.xhtml#l00023">ImportMemGenericWorkload::Execute()</a>, <a class="el" href="_mem_sync_workload_8cpp_source.xhtml#l00023">SyncMemGenericWorkload::Execute()</a>, <a class="el" href="_loaded_network_8cpp_source.xhtml#l01628">LoadedNetwork::Execute()</a>, <a class="el" href="_runtime_8cpp_source.xhtml#l00682">RuntimeImpl::Execute()</a>, <a class="el" href="_ref_depth_to_space_workload_8cpp_source.xhtml#l00019">RefDepthToSpaceWorkload::ExecuteAsync()</a>, <a class="el" href="_ref_strided_slice_workload_8cpp_source.xhtml#l00023">RefStridedSliceWorkload::ExecuteAsync()</a>, <a class="el" href="_ref_gather_nd_workload_8cpp_source.xhtml#l00021">RefGatherNdWorkload::ExecuteAsync()</a>, <a class="el" href="_ref_channel_shuffle_workload_8cpp_source.xhtml#l00021">RefChannelShuffleWorkload::ExecuteAsync()</a>, <a class="el" href="_ref_concat_workload_8cpp_source.xhtml#l00020">RefConcatWorkload::ExecuteAsync()</a>, <a class="el" href="_ref_convert_bf16_to_fp32_workload_8cpp_source.xhtml#l00021">RefConvertBf16ToFp32Workload::ExecuteAsync()</a>, <a class="el" href="_ref_convert_fp16_to_fp32_workload_8cpp_source.xhtml#l00021">RefConvertFp16ToFp32Workload::ExecuteAsync()</a>, <a class="el" href="_ref_convert_fp32_to_bf16_workload_8cpp_source.xhtml#l00021">RefConvertFp32ToBf16Workload::ExecuteAsync()</a>, <a class="el" href="_ref_pad_workload_8cpp_source.xhtml#l00021">RefPadWorkload::ExecuteAsync()</a>, <a class="el" href="_ref_fake_quantization_float32_workload_8cpp_source.xhtml#l00034">RefFakeQuantizationFloat32Workload::ExecuteAsync()</a>, <a class="el" href="_ref_fill_workload_8cpp_source.xhtml#l00022">RefFillWorkload::ExecuteAsync()</a>, <a class="el" href="_ref_floor_workload_8cpp_source.xhtml#l00021">RefFloorWorkload::ExecuteAsync()</a>, <a class="el" href="_ref_log_softmax_workload_8cpp_source.xhtml#l00025">RefLogSoftmaxWorkload::ExecuteAsync()</a>, <a class="el" href="_ref_space_to_batch_nd_workload_8cpp_source.xhtml#l00020">RefSpaceToBatchNdWorkload::ExecuteAsync()</a>, <a class="el" href="_ref_reshape_workload_8cpp_source.xhtml#l00020">RefReshapeWorkload::ExecuteAsync()</a>, <a class="el" href="_ref_space_to_depth_workload_8cpp_source.xhtml#l00020">RefSpaceToDepthWorkload::ExecuteAsync()</a>, <a class="el" href="_ref_convert_fp32_to_fp16_workload_8cpp_source.xhtml#l00022">RefConvertFp32ToFp16Workload::ExecuteAsync()</a>, <a class="el" href="_ref_softmax_workload_8cpp_source.xhtml#l00025">RefSoftmaxWorkload::ExecuteAsync()</a>, <a class="el" href="_ref_activation_workload_8cpp_source.xhtml#l00023">RefActivationWorkload::ExecuteAsync()</a>, <a class="el" href="_ref_resize_workload_8cpp_source.xhtml#l00025">RefResizeWorkload::ExecuteAsync()</a>, <a class="el" href="_ref_batch_to_space_nd_workload_8cpp_source.xhtml#l00019">RefBatchToSpaceNdWorkload::ExecuteAsync()</a>, <a class="el" href="_ref_depthwise_convolution2d_workload_8cpp_source.xhtml#l00044">RefDepthwiseConvolution2dWorkload::ExecuteAsync()</a>, <a class="el" href="_ref_dequantize_workload_8cpp_source.xhtml#l00020">RefDequantizeWorkload::ExecuteAsync()</a>, <a class="el" href="_ref_instance_normalization_workload_8cpp_source.xhtml#l00026">RefInstanceNormalizationWorkload::ExecuteAsync()</a>, <a class="el" href="_ref_batch_normalization_workload_8cpp_source.xhtml#l00030">RefBatchNormalizationWorkload::ExecuteAsync()</a>, <a class="el" href="_ref_prelu_workload_8cpp_source.xhtml#l00026">RefPreluWorkload::ExecuteAsync()</a>, <a class="el" href="_mem_copy_workload_8cpp_source.xhtml#l00066">CopyMemGenericWorkload::ExecuteAsync()</a>, <a class="el" href="_ref_detection_post_process_workload_8cpp_source.xhtml#l00026">RefDetectionPostProcessWorkload::ExecuteAsync()</a>, <a class="el" href="_ref_stack_workload_8cpp_source.xhtml#l00026">RefStackWorkload::ExecuteAsync()</a>, <a class="el" href="_ref_arg_min_max_workload_8cpp_source.xhtml#l00027">RefArgMinMaxWorkload::ExecuteAsync()</a>, <a class="el" href="_ref_slice_workload_8cpp_source.xhtml#l00021">RefSliceWorkload::ExecuteAsync()</a>, <a class="el" href="_ref_splitter_workload_8cpp_source.xhtml#l00019">RefSplitterWorkload::ExecuteAsync()</a>, <a class="el" href="_ref_cast_workload_8cpp_source.xhtml#l00034">RefCastWorkload::ExecuteAsync()</a>, <a class="el" href="_ref_l2_normalization_workload_8cpp_source.xhtml#l00032">RefL2NormalizationWorkload::ExecuteAsync()</a>, <a class="el" href="_ref_normalization_workload_8cpp_source.xhtml#l00169">RefNormalizationWorkload::ExecuteAsync()</a>, <a class="el" href="_ref_reduce_workload_8cpp_source.xhtml#l00026">RefReduceWorkload::ExecuteAsync()</a>, <a class="el" href="_ref_mean_workload_8cpp_source.xhtml#l00026">RefMeanWorkload::ExecuteAsync()</a>, <a class="el" href="_ref_pooling3d_workload_8cpp_source.xhtml#l00021">RefPooling3dWorkload::ExecuteAsync()</a>, <a class="el" href="_mem_sync_workload_8cpp_source.xhtml#l00030">SyncMemGenericWorkload::ExecuteAsync()</a>, <a class="el" href="_ref_pooling2d_workload_8cpp_source.xhtml#l00021">RefPooling2dWorkload::ExecuteAsync()</a>, <a class="el" href="_ref_logical_binary_workload_8cpp_source.xhtml#l00030">RefLogicalBinaryWorkload::ExecuteAsync()</a>, <a class="el" href="_ref_elementwise_unary_workload_8cpp_source.xhtml#l00038">RefElementwiseUnaryWorkload::ExecuteAsync()</a>, <a class="el" href="_ref_constant_workload_8cpp_source.xhtml#l00028">RefConstantWorkload::ExecuteAsync()</a>, <a class="el" href="_ref_logical_unary_workload_8cpp_source.xhtml#l00030">RefLogicalUnaryWorkload::ExecuteAsync()</a>, <a class="el" href="_ref_comparison_workload_8cpp_source.xhtml#l00050">RefComparisonWorkload::ExecuteAsync()</a>, <a class="el" href="_ref_gather_workload_8cpp_source.xhtml#l00021">RefGatherWorkload::ExecuteAsync()</a>, <a class="el" href="_ref_fully_connected_workload_8cpp_source.xhtml#l00042">RefFullyConnectedWorkload::ExecuteAsync()</a>, <a class="el" href="_ref_transpose_convolution2d_workload_8cpp_source.xhtml#l00041">RefTransposeConvolution2dWorkload::ExecuteAsync()</a>, <a class="el" href="_ref_transpose_workload_8cpp_source.xhtml#l00023">RefTransposeWorkload&lt; DataType &gt;::ExecuteAsync()</a>, <a class="el" href="_ref_permute_workload_8cpp_source.xhtml#l00023">RefPermuteWorkload&lt; DataType &gt;::ExecuteAsync()</a>, <a class="el" href="_ref_elementwise_workload_8cpp_source.xhtml#l00035">RefElementwiseWorkload&lt; Functor, ParentDescriptor, DebugString &gt;::ExecuteAsync()</a>, <a class="el" href="_ref_debug_workload_8cpp_source.xhtml#l00024">RefDebugWorkload&lt; DataType &gt;::ExecuteAsync()</a>, <a class="el" href="_loaded_network_8cpp_source.xhtml#l00087">LoadedNetwork::MakeLoadedNetwork()</a>, <a class="el" href="_network_8cpp_source.xhtml#l01670">armnn::Optimize()</a>, <a class="el" href="_optimizer_8cpp_source.xhtml#l00016">Optimizer::Pass()</a>, <a class="el" href="_network_8cpp_source.xhtml#l01601">armnn::SelectTensorHandleStrategy()</a>, <a class="el" href="_loaded_network_8cpp_source.xhtml#l00563">LoadedNetwork::SendNetworkStructure()</a>, and <a class="el" href="_profiler_tests_8cpp_source.xhtml#l00062">TEST_SUITE()</a>.</p>

</div>
</div>
<a id="a20704df665aaf54d02d1aa477f5fc956"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a20704df665aaf54d02d1aa477f5fc956">&#9670;&nbsp;</a></span>ARMNN_SCOPED_PROFILING_EVENT_GUID</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define ARMNN_SCOPED_PROFILING_EVENT_GUID</td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">backendId, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">name, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">guid&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td>&#160;&#160;&#160;<a class="el" href="_profiling_8hpp.xhtml#a1d6c14f3b73fa7a440ebaf53afa53266">ARMNN_SCOPED_PROFILING_EVENT_WITH_INSTRUMENTS</a>(backendId, guid, name, <a class="el" href="classarmnn_1_1_wall_clock_timer.xhtml">armnn::WallClockTimer</a>())</td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_profiling_8hpp_source.xhtml#l00223">223</a> of file <a class="el" href="_profiling_8hpp_source.xhtml">Profiling.hpp</a>.</p>

<p class="reference">Referenced by <a class="el" href="_ref_convolution2d_workload_8cpp_source.xhtml#l00038">RefConvolution2dWorkload::ExecuteAsync()</a>, and <a class="el" href="_ref_convolution3d_workload_8cpp_source.xhtml#l00040">RefConvolution3dWorkload::ExecuteAsync()</a>.</p>

</div>
</div>
<a id="a1d6c14f3b73fa7a440ebaf53afa53266"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a1d6c14f3b73fa7a440ebaf53afa53266">&#9670;&nbsp;</a></span>ARMNN_SCOPED_PROFILING_EVENT_WITH_INSTRUMENTS</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define ARMNN_SCOPED_PROFILING_EVENT_WITH_INSTRUMENTS</td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">backendId, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">guid, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname"><em>...</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td>&#160;&#160;&#160;<a class="el" href="_profiling_8hpp.xhtml#a42a0735f9160bf902380fa61de31c36e">ARMNN_SCOPED_PROFILING_EVENT_WITH_INSTRUMENTS_UNIQUE_LOC</a>(__LINE__,backendId, guid, /*name,*/ __VA_ARGS__)</td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_profiling_8hpp_source.xhtml#l00217">217</a> of file <a class="el" href="_profiling_8hpp_source.xhtml">Profiling.hpp</a>.</p>

<p class="reference">Referenced by <a class="el" href="_profiler_tests_8cpp_source.xhtml#l00062">TEST_SUITE()</a>.</p>

</div>
</div>
<a id="a42a0735f9160bf902380fa61de31c36e"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a42a0735f9160bf902380fa61de31c36e">&#9670;&nbsp;</a></span>ARMNN_SCOPED_PROFILING_EVENT_WITH_INSTRUMENTS_UNIQUE_LOC</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define ARMNN_SCOPED_PROFILING_EVENT_WITH_INSTRUMENTS_UNIQUE_LOC</td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">lineNumber, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">backendId, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">guid, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname"><em>...</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td>&#160;&#160;&#160;<a class="el" href="_profiling_8hpp.xhtml#a4cdafc65083cb710486a87b7eb07ad49">ARMNN_SCOPED_PROFILING_EVENT_WITH_INSTRUMENTS_UNIQUE_LOC_INNER</a>(lineNumber, backendId, guid, /*name,*/ __VA_ARGS__)</td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_profiling_8hpp_source.xhtml#l00207">207</a> of file <a class="el" href="_profiling_8hpp_source.xhtml">Profiling.hpp</a>.</p>

</div>
</div>
<a id="a4cdafc65083cb710486a87b7eb07ad49"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a4cdafc65083cb710486a87b7eb07ad49">&#9670;&nbsp;</a></span>ARMNN_SCOPED_PROFILING_EVENT_WITH_INSTRUMENTS_UNIQUE_LOC_INNER</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define ARMNN_SCOPED_PROFILING_EVENT_WITH_INSTRUMENTS_UNIQUE_LOC_INNER</td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">lineNumber, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">backendId, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">guid, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname"><em>...</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td>&#160;&#160;&#160;<a class="el" href="classarmnn_1_1_scoped_profiling_event.xhtml">armnn::ScopedProfilingEvent</a> e_ ## lineNumber(backendId, guid, /*name,*/ __VA_ARGS__);</td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_profiling_8hpp_source.xhtml#l00204">204</a> of file <a class="el" href="_profiling_8hpp_source.xhtml">Profiling.hpp</a>.</p>

</div>
</div>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="dir_68267d1309a1af8e8297ef4c3efbcdba.xhtml">src</a></li><li class="navelem"><a class="el" href="dir_e0a84d05c80a2ef4231141dcbbeac5c8.xhtml">armnn</a></li><li class="navelem"><a class="el" href="_profiling_8hpp.xhtml">Profiling.hpp</a></li>
    <li class="footer">Generated on Tue May 24 2022 11:27:15 for ArmNN by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.13 </li>
  </ul>
</div>
</body>
</html>
