<!-- Copyright (c) 2020 ARM Limited. -->
<!--                                 -->
<!-- SPDX-License-Identifier: MIT    -->
<!--                                 -->
<!-- HTML header for doxygen 1.8.13-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.13"/>
<meta name="robots" content="NOINDEX, NOFOLLOW" />
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>ArmNN: src/profiling/TimelineUtilityMethods.cpp Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script><script type="text/javascript" src="http://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="stylesheet.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <img alt="ArmNN" src="Arm_NN_horizontal_blue.png" style="max-width: 10rem; margin-top: .5rem; margin-left 10px"/>
  <td style="padding-left: 0.5em;">
   <div id="projectname">
   &#160;<span id="projectnumber">22.02</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.13 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
$(document).ready(function(){initNavTree('_timeline_utility_methods_8cpp_source.xhtml','');});
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="headertitle">
<div class="title">TimelineUtilityMethods.cpp</div>  </div>
</div><!--header-->
<div class="contents">
<a href="_timeline_utility_methods_8cpp.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="comment">//</span></div><div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="comment">// Copyright Â© 2019 Arm Ltd and Contributors. All rights reserved.</span></div><div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="comment">// SPDX-License-Identifier: MIT</span></div><div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="comment">//</span></div><div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_timeline_utility_methods_8hpp.xhtml">TimelineUtilityMethods.hpp</a>&quot;</span></div><div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;</div><div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="preprocessor">#include &lt;common/include/LabelsAndEventClasses.hpp&gt;</span></div><div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;</div><div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;</div><div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="preprocessor">#include &lt;<a class="code" href="_threads_8hpp.xhtml">armnnUtils/Threads.hpp</a>&gt;</span></div><div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;</div><div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;<span class="keyword">namespace </span><a class="code" href="namespacearmnn.xhtml">armnn</a></div><div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;{</div><div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;</div><div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;<span class="keyword">namespace </span>profiling</div><div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;{</div><div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;</div><div class="line"><a name="l00018"></a><span class="lineno"><a class="line" href="classarmnn_1_1profiling_1_1_timeline_utility_methods.xhtml#a0e5c863245b8d7dc5e874c0c66eebae1">   18</a></span>&#160;std::unique_ptr&lt;TimelineUtilityMethods&gt; <a class="code" href="classarmnn_1_1profiling_1_1_timeline_utility_methods.xhtml#a0e5c863245b8d7dc5e874c0c66eebae1">TimelineUtilityMethods::GetTimelineUtils</a>(<a class="code" href="classarmnn_1_1profiling_1_1_profiling_service.xhtml">ProfilingService</a>&amp; profilingService)</div><div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;{</div><div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;    <span class="keywordflow">if</span> (profilingService.<a class="code" href="classarmnn_1_1profiling_1_1_profiling_service.xhtml#ad8d263669817cf577760710ff6c96bb9">GetCurrentState</a>() == <a class="code" href="namespacearmnn_1_1profiling.xhtml#acb0c054138599582d5a5f537e9798806a4d3d769b812b6faa6b76e1a8abaece2d">ProfilingState::Active</a> &amp;&amp; profilingService.<a class="code" href="classarmnn_1_1profiling_1_1_profiling_service.xhtml#a8c2670ec96f23799ba3c4b5620e06b66">IsTimelineReportingEnabled</a>())</div><div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;    {</div><div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;        std::unique_ptr&lt;ISendTimelinePacket&gt; sendTimelinepacket = profilingService.<a class="code" href="classarmnn_1_1profiling_1_1_profiling_service.xhtml#a71c4eb6e11d491f84df504cf7f5a6337">GetSendTimelinePacket</a>();</div><div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;        <span class="keywordflow">return</span> std::make_unique&lt;TimelineUtilityMethods&gt;(sendTimelinepacket);</div><div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;    }</div><div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;    <span class="keywordflow">else</span></div><div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;    {</div><div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;        std::unique_ptr&lt;TimelineUtilityMethods&gt; empty;</div><div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;        <span class="keywordflow">return</span> empty;</div><div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;    }</div><div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;}</div><div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;</div><div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;</div><div class="line"><a name="l00033"></a><span class="lineno"><a class="line" href="classarmnn_1_1profiling_1_1_timeline_utility_methods.xhtml#a1c3dd40f5b8c4b878f783addf7d08e2f">   33</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="classarmnn_1_1profiling_1_1_timeline_utility_methods.xhtml#a1c3dd40f5b8c4b878f783addf7d08e2f">TimelineUtilityMethods::SendWellKnownLabelsAndEventClasses</a>(<a class="code" href="classarmnn_1_1profiling_1_1_i_send_timeline_packet.xhtml">ISendTimelinePacket</a>&amp; timelinePacket)</div><div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;{</div><div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;    <span class="comment">// Send the &quot;name&quot; label, this call throws in case of error</span></div><div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;    timelinePacket.<a class="code" href="classarmnn_1_1profiling_1_1_i_send_timeline_packet.xhtml#a0426a9f8bc2789012477f08c3e03a532">SendTimelineLabelBinaryPacket</a>(LabelsAndEventClasses::NAME_GUID,</div><div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;                                                 LabelsAndEventClasses::NAME_LABEL);</div><div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;</div><div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;    <span class="comment">// Send the &quot;type&quot; label, this call throws in case of error</span></div><div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;    timelinePacket.<a class="code" href="classarmnn_1_1profiling_1_1_i_send_timeline_packet.xhtml#a0426a9f8bc2789012477f08c3e03a532">SendTimelineLabelBinaryPacket</a>(LabelsAndEventClasses::TYPE_GUID,</div><div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;                                                 LabelsAndEventClasses::TYPE_LABEL);</div><div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;</div><div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;    <span class="comment">// Send the &quot;index&quot; label, this call throws in case of error</span></div><div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;    timelinePacket.<a class="code" href="classarmnn_1_1profiling_1_1_i_send_timeline_packet.xhtml#a0426a9f8bc2789012477f08c3e03a532">SendTimelineLabelBinaryPacket</a>(LabelsAndEventClasses::INDEX_GUID,</div><div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;                                                 LabelsAndEventClasses::INDEX_LABEL);</div><div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;</div><div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;    <span class="comment">// Send the &quot;backendId&quot; label, this call throws in case of error</span></div><div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;    timelinePacket.<a class="code" href="classarmnn_1_1profiling_1_1_i_send_timeline_packet.xhtml#a0426a9f8bc2789012477f08c3e03a532">SendTimelineLabelBinaryPacket</a>(LabelsAndEventClasses::BACKENDID_GUID,</div><div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;                                                 LabelsAndEventClasses::BACKENDID_LABEL);</div><div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;</div><div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;    <span class="comment">// Send the &quot;child&quot; label, this call throws in case of error</span></div><div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;    timelinePacket.<a class="code" href="classarmnn_1_1profiling_1_1_i_send_timeline_packet.xhtml#a0426a9f8bc2789012477f08c3e03a532">SendTimelineLabelBinaryPacket</a>(LabelsAndEventClasses::CHILD_GUID,</div><div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;                                                 LabelsAndEventClasses::CHILD_LABEL);</div><div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;</div><div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;    <span class="comment">// Send the &quot;execution_of&quot; label, this call throws in case of error</span></div><div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;    timelinePacket.<a class="code" href="classarmnn_1_1profiling_1_1_i_send_timeline_packet.xhtml#a0426a9f8bc2789012477f08c3e03a532">SendTimelineLabelBinaryPacket</a>(LabelsAndEventClasses::EXECUTION_OF_GUID,</div><div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;                                                 LabelsAndEventClasses::EXECUTION_OF_LABEL);</div><div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;</div><div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;    <span class="comment">// Send the &quot;process_id&quot; label, this call throws in case of error</span></div><div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;    timelinePacket.<a class="code" href="classarmnn_1_1profiling_1_1_i_send_timeline_packet.xhtml#a0426a9f8bc2789012477f08c3e03a532">SendTimelineLabelBinaryPacket</a>(LabelsAndEventClasses::PROCESS_ID_GUID,</div><div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;                                                 LabelsAndEventClasses::PROCESS_ID_LABEL);</div><div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;</div><div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;    <span class="comment">// Send the &quot;layer&quot; label, this call throws in case of error</span></div><div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;    timelinePacket.<a class="code" href="classarmnn_1_1profiling_1_1_i_send_timeline_packet.xhtml#a0426a9f8bc2789012477f08c3e03a532">SendTimelineLabelBinaryPacket</a>(LabelsAndEventClasses::LAYER_GUID,</div><div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;                                                 LabelsAndEventClasses::LAYER);</div><div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;</div><div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;    <span class="comment">// Send the &quot;workload&quot; label, this call throws in case of error</span></div><div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;    timelinePacket.<a class="code" href="classarmnn_1_1profiling_1_1_i_send_timeline_packet.xhtml#a0426a9f8bc2789012477f08c3e03a532">SendTimelineLabelBinaryPacket</a>(LabelsAndEventClasses::WORKLOAD_GUID,</div><div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;                                                 LabelsAndEventClasses::WORKLOAD);</div><div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;</div><div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;    <span class="comment">// Send the &quot;network&quot; label, this call throws in case of error</span></div><div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;    timelinePacket.<a class="code" href="classarmnn_1_1profiling_1_1_i_send_timeline_packet.xhtml#a0426a9f8bc2789012477f08c3e03a532">SendTimelineLabelBinaryPacket</a>(LabelsAndEventClasses::NETWORK_GUID,</div><div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;                                                 LabelsAndEventClasses::NETWORK);</div><div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;</div><div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;    <span class="comment">// Send the &quot;connection&quot; label, this call throws in case of error</span></div><div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;    timelinePacket.<a class="code" href="classarmnn_1_1profiling_1_1_i_send_timeline_packet.xhtml#a0426a9f8bc2789012477f08c3e03a532">SendTimelineLabelBinaryPacket</a>(LabelsAndEventClasses::CONNECTION_GUID,</div><div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;                                                 LabelsAndEventClasses::CONNECTION);</div><div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;</div><div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;    <span class="comment">// Send the &quot;inference&quot; label, this call throws in case of error</span></div><div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;    timelinePacket.<a class="code" href="classarmnn_1_1profiling_1_1_i_send_timeline_packet.xhtml#a0426a9f8bc2789012477f08c3e03a532">SendTimelineLabelBinaryPacket</a>(LabelsAndEventClasses::INFERENCE_GUID,</div><div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;                                                 LabelsAndEventClasses::INFERENCE);</div><div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;</div><div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;    <span class="comment">// Send the &quot;workload_execution&quot; label, this call throws in case of error</span></div><div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;    timelinePacket.<a class="code" href="classarmnn_1_1profiling_1_1_i_send_timeline_packet.xhtml#a0426a9f8bc2789012477f08c3e03a532">SendTimelineLabelBinaryPacket</a>(LabelsAndEventClasses::WORKLOAD_EXECUTION_GUID,</div><div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;                                                 LabelsAndEventClasses::WORKLOAD_EXECUTION);</div><div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;</div><div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;    <span class="comment">// Send the &quot;start of life&quot; event class, this call throws in case of error</span></div><div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;    timelinePacket.<a class="code" href="classarmnn_1_1profiling_1_1_i_send_timeline_packet.xhtml#a0426a9f8bc2789012477f08c3e03a532">SendTimelineLabelBinaryPacket</a>(LabelsAndEventClasses::ARMNN_PROFILING_SOL_EVENT_CLASS_NAME_GUID,</div><div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;                                                 LabelsAndEventClasses::ARMNN_PROFILING_SOL_EVENT_CLASS_NAME);</div><div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;    timelinePacket.<a class="code" href="classarmnn_1_1profiling_1_1_i_send_timeline_packet.xhtml#a03cfe74e636be82dcf63bc90de194519">SendTimelineEventClassBinaryPacket</a>(LabelsAndEventClasses::ARMNN_PROFILING_SOL_EVENT_CLASS,</div><div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;                                                      LabelsAndEventClasses::ARMNN_PROFILING_SOL_EVENT_CLASS_NAME_GUID);</div><div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;</div><div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;    <span class="comment">// Send the &quot;end of life&quot; event class, this call throws in case of error</span></div><div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;    timelinePacket.<a class="code" href="classarmnn_1_1profiling_1_1_i_send_timeline_packet.xhtml#a0426a9f8bc2789012477f08c3e03a532">SendTimelineLabelBinaryPacket</a>(LabelsAndEventClasses::ARMNN_PROFILING_EOL_EVENT_CLASS_NAME_GUID,</div><div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;                                                 LabelsAndEventClasses::ARMNN_PROFILING_EOL_EVENT_CLASS_NAME);</div><div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;    timelinePacket.<a class="code" href="classarmnn_1_1profiling_1_1_i_send_timeline_packet.xhtml#a03cfe74e636be82dcf63bc90de194519">SendTimelineEventClassBinaryPacket</a>(LabelsAndEventClasses::ARMNN_PROFILING_EOL_EVENT_CLASS,</div><div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;                                                      LabelsAndEventClasses::ARMNN_PROFILING_EOL_EVENT_CLASS_NAME_GUID);</div><div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;</div><div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;    timelinePacket.<a class="code" href="classarmnn_1_1profiling_1_1_i_send_timeline_packet.xhtml#afa8522a76e7102e41d7c73a34fe493d4">Commit</a>();</div><div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;}</div><div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;</div><div class="line"><a name="l00102"></a><span class="lineno"><a class="line" href="classarmnn_1_1profiling_1_1_timeline_utility_methods.xhtml#a4eee08ab6a4941622b7e42ada1f6aaea">  102</a></span>&#160;ProfilingDynamicGuid <a class="code" href="classarmnn_1_1profiling_1_1_timeline_utility_methods.xhtml#a4eee08ab6a4941622b7e42ada1f6aaea">TimelineUtilityMethods::CreateNamedTypedEntity</a>(<span class="keyword">const</span> std::string&amp; name, <span class="keyword">const</span> std::string&amp; type)</div><div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;{</div><div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;    <span class="comment">// Check that the entity name is valid</span></div><div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;    <span class="keywordflow">if</span> (name.empty())</div><div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;    {</div><div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;        <span class="keywordflow">throw</span> <a class="code" href="classarmnn_1_1_invalid_argument_exception.xhtml">InvalidArgumentException</a>(<span class="stringliteral">&quot;Invalid entity name, the entity name cannot be empty&quot;</span>);</div><div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;    }</div><div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;</div><div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;    <span class="comment">// Check that the entity type is valid</span></div><div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;    <span class="keywordflow">if</span> (type.empty())</div><div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;    {</div><div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;        <span class="keywordflow">throw</span> <a class="code" href="classarmnn_1_1_invalid_argument_exception.xhtml">InvalidArgumentException</a>(<span class="stringliteral">&quot;Invalid entity type, the entity type cannot be empty&quot;</span>);</div><div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;    }</div><div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;</div><div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;    <span class="comment">// Generate dynamic GUID of the entity</span></div><div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;    ProfilingDynamicGuid entityGuid = <a class="code" href="classarmnn_1_1profiling_1_1_profiling_service.xhtml#ad6a0ab3d6679dded1eb2e1838becf79e">profiling::ProfilingService::GetNextGuid</a>();</div><div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;</div><div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;    <a class="code" href="classarmnn_1_1profiling_1_1_timeline_utility_methods.xhtml#a4eee08ab6a4941622b7e42ada1f6aaea">CreateNamedTypedEntity</a>(entityGuid, name, type);</div><div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;</div><div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;    <span class="keywordflow">return</span> entityGuid;</div><div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;}</div><div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;</div><div class="line"><a name="l00124"></a><span class="lineno"><a class="line" href="classarmnn_1_1profiling_1_1_timeline_utility_methods.xhtml#a382751186896ec1e6e3508ffdfe1be77">  124</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="classarmnn_1_1profiling_1_1_timeline_utility_methods.xhtml#a4eee08ab6a4941622b7e42ada1f6aaea">TimelineUtilityMethods::CreateNamedTypedEntity</a>(ProfilingGuid entityGuid,</div><div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;                                                    <span class="keyword">const</span> std::string&amp; name,</div><div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;                                                    <span class="keyword">const</span> std::string&amp; type)</div><div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;{</div><div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;    <span class="comment">// Check that the entity name is valid</span></div><div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;    <span class="keywordflow">if</span> (name.empty())</div><div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;    {</div><div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;        <span class="keywordflow">throw</span> <a class="code" href="classarmnn_1_1_invalid_argument_exception.xhtml">InvalidArgumentException</a>(<span class="stringliteral">&quot;Invalid entity name, the entity name cannot be empty&quot;</span>);</div><div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;    }</div><div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;</div><div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;    <span class="comment">// Check that the entity type is valid</span></div><div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;    <span class="keywordflow">if</span> (type.empty())</div><div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;    {</div><div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;        <span class="keywordflow">throw</span> <a class="code" href="classarmnn_1_1_invalid_argument_exception.xhtml">InvalidArgumentException</a>(<span class="stringliteral">&quot;Invalid entity type, the entity type cannot be empty&quot;</span>);</div><div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;    }</div><div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;</div><div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;    <span class="comment">// Send Entity Binary Packet of the entity to the external profiling service</span></div><div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;    m_SendTimelinePacket-&gt;SendTimelineEntityBinaryPacket(entityGuid);</div><div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;</div><div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;    <span class="comment">// Create name entity and send the relationship of the entity with the given name</span></div><div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;    <a class="code" href="classarmnn_1_1profiling_1_1_timeline_utility_methods.xhtml#aa4dd5c1a285f1438e9be275c635fbefa">NameEntity</a>(entityGuid, name);</div><div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;</div><div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;    <span class="comment">// Create type entity and send the relationship of the entity with the given type</span></div><div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;    <a class="code" href="classarmnn_1_1profiling_1_1_timeline_utility_methods.xhtml#ae8c2d2f76cfa5291e0abad620e5ec864">TypeEntity</a>(entityGuid, type);</div><div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;}</div><div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;</div><div class="line"><a name="l00150"></a><span class="lineno"><a class="line" href="classarmnn_1_1profiling_1_1_timeline_utility_methods.xhtml#acd4291c5ca9117844566e8fccbabcef4">  150</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="classarmnn_1_1profiling_1_1_timeline_utility_methods.xhtml#a4eee08ab6a4941622b7e42ada1f6aaea">TimelineUtilityMethods::CreateNamedTypedEntity</a>(ProfilingGuid entityGuid,</div><div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;                                                    <span class="keyword">const</span> std::string&amp; name,</div><div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;                                                    ProfilingStaticGuid typeGuid)</div><div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;{</div><div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;    <span class="comment">// Check that the entity name is valid</span></div><div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;    <span class="keywordflow">if</span> (name.empty())</div><div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;    {</div><div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160;        <span class="keywordflow">throw</span> <a class="code" href="classarmnn_1_1_invalid_argument_exception.xhtml">InvalidArgumentException</a>(<span class="stringliteral">&quot;Invalid entity name, the entity name cannot be empty&quot;</span>);</div><div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;    }</div><div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160;</div><div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160;    <span class="comment">// Send Entity Binary Packet of the entity to the external profiling service</span></div><div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160;    m_SendTimelinePacket-&gt;SendTimelineEntityBinaryPacket(entityGuid);</div><div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160;</div><div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160;    <span class="comment">// Create name entity and send the relationship of the entity with the given name</span></div><div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;    <a class="code" href="classarmnn_1_1profiling_1_1_timeline_utility_methods.xhtml#aa4dd5c1a285f1438e9be275c635fbefa">NameEntity</a>(entityGuid, name);</div><div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160;</div><div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160;    <span class="comment">// Create type entity and send the relationship of the entity with the given type</span></div><div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160;    <a class="code" href="classarmnn_1_1profiling_1_1_timeline_utility_methods.xhtml#a25e5f1346081cbe38177d5d0869e200a">MarkEntityWithType</a>(entityGuid, typeGuid);</div><div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160;}</div><div class="line"><a name="l00169"></a><span class="lineno">  169</span>&#160;</div><div class="line"><a name="l00170"></a><span class="lineno"><a class="line" href="classarmnn_1_1profiling_1_1_timeline_utility_methods.xhtml#af92e501555c05c5f56c59ecfd4ffd06e">  170</a></span>&#160;ProfilingStaticGuid <a class="code" href="classarmnn_1_1profiling_1_1_timeline_utility_methods.xhtml#af92e501555c05c5f56c59ecfd4ffd06e">TimelineUtilityMethods::DeclareLabel</a>(<span class="keyword">const</span> std::string&amp; labelName)</div><div class="line"><a name="l00171"></a><span class="lineno">  171</span>&#160;{</div><div class="line"><a name="l00172"></a><span class="lineno">  172</span>&#160;    <span class="comment">// Check that the label name is valid</span></div><div class="line"><a name="l00173"></a><span class="lineno">  173</span>&#160;    <span class="keywordflow">if</span> (labelName.empty())</div><div class="line"><a name="l00174"></a><span class="lineno">  174</span>&#160;    {</div><div class="line"><a name="l00175"></a><span class="lineno">  175</span>&#160;        <span class="comment">// The label name is invalid</span></div><div class="line"><a name="l00176"></a><span class="lineno">  176</span>&#160;        <span class="keywordflow">throw</span> <a class="code" href="classarmnn_1_1_invalid_argument_exception.xhtml">InvalidArgumentException</a>(<span class="stringliteral">&quot;Invalid label name, the label name cannot be empty&quot;</span>);</div><div class="line"><a name="l00177"></a><span class="lineno">  177</span>&#160;    }</div><div class="line"><a name="l00178"></a><span class="lineno">  178</span>&#160;</div><div class="line"><a name="l00179"></a><span class="lineno">  179</span>&#160;    <span class="comment">// Generate a static GUID for the given label name</span></div><div class="line"><a name="l00180"></a><span class="lineno">  180</span>&#160;    ProfilingStaticGuid labelGuid = <a class="code" href="classarmnn_1_1profiling_1_1_profiling_service.xhtml#a881aa03d7b35e6d0acd783f2aaa22ac9">profiling::ProfilingService::GetStaticId</a>(labelName);</div><div class="line"><a name="l00181"></a><span class="lineno">  181</span>&#160;</div><div class="line"><a name="l00182"></a><span class="lineno">  182</span>&#160;    <span class="comment">// Send the new label to the external profiling service, this call throws in case of error</span></div><div class="line"><a name="l00183"></a><span class="lineno">  183</span>&#160;    m_SendTimelinePacket-&gt;SendTimelineLabelBinaryPacket(labelGuid, labelName);</div><div class="line"><a name="l00184"></a><span class="lineno">  184</span>&#160;</div><div class="line"><a name="l00185"></a><span class="lineno">  185</span>&#160;    <span class="keywordflow">return</span> labelGuid;</div><div class="line"><a name="l00186"></a><span class="lineno">  186</span>&#160;}</div><div class="line"><a name="l00187"></a><span class="lineno">  187</span>&#160;</div><div class="line"><a name="l00188"></a><span class="lineno"><a class="line" href="classarmnn_1_1profiling_1_1_timeline_utility_methods.xhtml#af8e3c53181977ef3941575b1a218a0a1">  188</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="classarmnn_1_1profiling_1_1_timeline_utility_methods.xhtml#af8e3c53181977ef3941575b1a218a0a1">TimelineUtilityMethods::MarkEntityWithLabel</a>(ProfilingGuid entityGuid,</div><div class="line"><a name="l00189"></a><span class="lineno">  189</span>&#160;                                                 <span class="keyword">const</span> std::string&amp; labelName,</div><div class="line"><a name="l00190"></a><span class="lineno">  190</span>&#160;                                                 ProfilingStaticGuid labelTypeGuid)</div><div class="line"><a name="l00191"></a><span class="lineno">  191</span>&#160;{</div><div class="line"><a name="l00192"></a><span class="lineno">  192</span>&#160;    <span class="comment">// Check that the label name is valid</span></div><div class="line"><a name="l00193"></a><span class="lineno">  193</span>&#160;    <span class="keywordflow">if</span> (labelName.empty())</div><div class="line"><a name="l00194"></a><span class="lineno">  194</span>&#160;    {</div><div class="line"><a name="l00195"></a><span class="lineno">  195</span>&#160;        <span class="comment">// The label name is invalid</span></div><div class="line"><a name="l00196"></a><span class="lineno">  196</span>&#160;        <span class="keywordflow">throw</span> <a class="code" href="classarmnn_1_1_invalid_argument_exception.xhtml">InvalidArgumentException</a>(<span class="stringliteral">&quot;Invalid entity name, the entity name cannot be empty&quot;</span>);</div><div class="line"><a name="l00197"></a><span class="lineno">  197</span>&#160;    }</div><div class="line"><a name="l00198"></a><span class="lineno">  198</span>&#160;</div><div class="line"><a name="l00199"></a><span class="lineno">  199</span>&#160;    <span class="comment">// Declare a label with the label&#39;s name, this call throws in case of error</span></div><div class="line"><a name="l00200"></a><span class="lineno">  200</span>&#160;    ProfilingStaticGuid labelGuid = <a class="code" href="classarmnn_1_1profiling_1_1_timeline_utility_methods.xhtml#af92e501555c05c5f56c59ecfd4ffd06e">DeclareLabel</a>(labelName);</div><div class="line"><a name="l00201"></a><span class="lineno">  201</span>&#160;</div><div class="line"><a name="l00202"></a><span class="lineno">  202</span>&#160;    <span class="comment">// Generate a GUID for the label relationship</span></div><div class="line"><a name="l00203"></a><span class="lineno">  203</span>&#160;    ProfilingDynamicGuid relationshipGuid = <a class="code" href="classarmnn_1_1profiling_1_1_profiling_service.xhtml#ad6a0ab3d6679dded1eb2e1838becf79e">profiling::ProfilingService::GetNextGuid</a>();</div><div class="line"><a name="l00204"></a><span class="lineno">  204</span>&#160;</div><div class="line"><a name="l00205"></a><span class="lineno">  205</span>&#160;    <span class="comment">// Send the new label link to the external profiling service, this call throws in case of error</span></div><div class="line"><a name="l00206"></a><span class="lineno">  206</span>&#160;    m_SendTimelinePacket-&gt;SendTimelineRelationshipBinaryPacket(<a class="code" href="namespacearmnn_1_1profiling.xhtml#ab805f5aa9f101e7f6d971daba044c3c2a47d6c060a0aa40c6fd018f12b7c96f1f">ProfilingRelationshipType::LabelLink</a>,</div><div class="line"><a name="l00207"></a><span class="lineno">  207</span>&#160;                                                               relationshipGuid,</div><div class="line"><a name="l00208"></a><span class="lineno">  208</span>&#160;                                                               entityGuid,</div><div class="line"><a name="l00209"></a><span class="lineno">  209</span>&#160;                                                               labelGuid,</div><div class="line"><a name="l00210"></a><span class="lineno">  210</span>&#160;                                                               labelTypeGuid);</div><div class="line"><a name="l00211"></a><span class="lineno">  211</span>&#160;}</div><div class="line"><a name="l00212"></a><span class="lineno">  212</span>&#160;</div><div class="line"><a name="l00213"></a><span class="lineno"><a class="line" href="classarmnn_1_1profiling_1_1_timeline_utility_methods.xhtml#a25e5f1346081cbe38177d5d0869e200a">  213</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="classarmnn_1_1profiling_1_1_timeline_utility_methods.xhtml#a25e5f1346081cbe38177d5d0869e200a">TimelineUtilityMethods::MarkEntityWithType</a>(ProfilingGuid entityGuid,</div><div class="line"><a name="l00214"></a><span class="lineno">  214</span>&#160;                                                ProfilingStaticGuid typeNameGuid)</div><div class="line"><a name="l00215"></a><span class="lineno">  215</span>&#160;{</div><div class="line"><a name="l00216"></a><span class="lineno">  216</span>&#160;    <span class="comment">// Generate a GUID for the label relationship</span></div><div class="line"><a name="l00217"></a><span class="lineno">  217</span>&#160;    ProfilingDynamicGuid relationshipGuid = <a class="code" href="classarmnn_1_1profiling_1_1_profiling_service.xhtml#ad6a0ab3d6679dded1eb2e1838becf79e">profiling::ProfilingService::GetNextGuid</a>();</div><div class="line"><a name="l00218"></a><span class="lineno">  218</span>&#160;</div><div class="line"><a name="l00219"></a><span class="lineno">  219</span>&#160;    <span class="comment">// Send the new label link to the external profiling service, this call throws in case of error</span></div><div class="line"><a name="l00220"></a><span class="lineno">  220</span>&#160;    m_SendTimelinePacket-&gt;SendTimelineRelationshipBinaryPacket(<a class="code" href="namespacearmnn_1_1profiling.xhtml#ab805f5aa9f101e7f6d971daba044c3c2a47d6c060a0aa40c6fd018f12b7c96f1f">ProfilingRelationshipType::LabelLink</a>,</div><div class="line"><a name="l00221"></a><span class="lineno">  221</span>&#160;                                                               relationshipGuid,</div><div class="line"><a name="l00222"></a><span class="lineno">  222</span>&#160;                                                               entityGuid,</div><div class="line"><a name="l00223"></a><span class="lineno">  223</span>&#160;                                                               typeNameGuid,</div><div class="line"><a name="l00224"></a><span class="lineno">  224</span>&#160;                                                               LabelsAndEventClasses::TYPE_GUID);</div><div class="line"><a name="l00225"></a><span class="lineno">  225</span>&#160;}</div><div class="line"><a name="l00226"></a><span class="lineno">  226</span>&#160;</div><div class="line"><a name="l00227"></a><span class="lineno"><a class="line" href="classarmnn_1_1profiling_1_1_timeline_utility_methods.xhtml#aa4dd5c1a285f1438e9be275c635fbefa">  227</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="classarmnn_1_1profiling_1_1_timeline_utility_methods.xhtml#aa4dd5c1a285f1438e9be275c635fbefa">TimelineUtilityMethods::NameEntity</a>(ProfilingGuid entityGuid, <span class="keyword">const</span> std::string&amp; name)</div><div class="line"><a name="l00228"></a><span class="lineno">  228</span>&#160;{</div><div class="line"><a name="l00229"></a><span class="lineno">  229</span>&#160;    <a class="code" href="classarmnn_1_1profiling_1_1_timeline_utility_methods.xhtml#af8e3c53181977ef3941575b1a218a0a1">MarkEntityWithLabel</a>(entityGuid, name, LabelsAndEventClasses::NAME_GUID);</div><div class="line"><a name="l00230"></a><span class="lineno">  230</span>&#160;}</div><div class="line"><a name="l00231"></a><span class="lineno">  231</span>&#160;</div><div class="line"><a name="l00232"></a><span class="lineno"><a class="line" href="classarmnn_1_1profiling_1_1_timeline_utility_methods.xhtml#ae8c2d2f76cfa5291e0abad620e5ec864">  232</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="classarmnn_1_1profiling_1_1_timeline_utility_methods.xhtml#ae8c2d2f76cfa5291e0abad620e5ec864">TimelineUtilityMethods::TypeEntity</a>(ProfilingGuid entityGuid, <span class="keyword">const</span> std::string&amp; type)</div><div class="line"><a name="l00233"></a><span class="lineno">  233</span>&#160;{</div><div class="line"><a name="l00234"></a><span class="lineno">  234</span>&#160;    <a class="code" href="classarmnn_1_1profiling_1_1_timeline_utility_methods.xhtml#af8e3c53181977ef3941575b1a218a0a1">MarkEntityWithLabel</a>(entityGuid, type, LabelsAndEventClasses::TYPE_GUID);</div><div class="line"><a name="l00235"></a><span class="lineno">  235</span>&#160;}</div><div class="line"><a name="l00236"></a><span class="lineno">  236</span>&#160;</div><div class="line"><a name="l00237"></a><span class="lineno"><a class="line" href="classarmnn_1_1profiling_1_1_timeline_utility_methods.xhtml#a17fb755aaf109f832eef0874f0c5254f">  237</a></span>&#160;ProfilingDynamicGuid <a class="code" href="classarmnn_1_1profiling_1_1_timeline_utility_methods.xhtml#a17fb755aaf109f832eef0874f0c5254f">TimelineUtilityMethods::CreateNamedTypedChildEntity</a>(ProfilingGuid parentEntityGuid,</div><div class="line"><a name="l00238"></a><span class="lineno">  238</span>&#160;                                                                         <span class="keyword">const</span> std::string&amp; entityName,</div><div class="line"><a name="l00239"></a><span class="lineno">  239</span>&#160;                                                                         <span class="keyword">const</span> std::string&amp; entityType)</div><div class="line"><a name="l00240"></a><span class="lineno">  240</span>&#160;{</div><div class="line"><a name="l00241"></a><span class="lineno">  241</span>&#160;    <span class="comment">// Check that the entity name is valid</span></div><div class="line"><a name="l00242"></a><span class="lineno">  242</span>&#160;    <span class="keywordflow">if</span> (entityName.empty())</div><div class="line"><a name="l00243"></a><span class="lineno">  243</span>&#160;    {</div><div class="line"><a name="l00244"></a><span class="lineno">  244</span>&#160;        <span class="comment">// The entity name is invalid</span></div><div class="line"><a name="l00245"></a><span class="lineno">  245</span>&#160;        <span class="keywordflow">throw</span> <a class="code" href="classarmnn_1_1_invalid_argument_exception.xhtml">InvalidArgumentException</a>(<span class="stringliteral">&quot;Invalid entity name, the entity name cannot be empty&quot;</span>);</div><div class="line"><a name="l00246"></a><span class="lineno">  246</span>&#160;    }</div><div class="line"><a name="l00247"></a><span class="lineno">  247</span>&#160;</div><div class="line"><a name="l00248"></a><span class="lineno">  248</span>&#160;    <span class="comment">// Check that the entity type is valid</span></div><div class="line"><a name="l00249"></a><span class="lineno">  249</span>&#160;    <span class="keywordflow">if</span> (entityType.empty())</div><div class="line"><a name="l00250"></a><span class="lineno">  250</span>&#160;    {</div><div class="line"><a name="l00251"></a><span class="lineno">  251</span>&#160;        <span class="comment">// The entity type is invalid</span></div><div class="line"><a name="l00252"></a><span class="lineno">  252</span>&#160;        <span class="keywordflow">throw</span> <a class="code" href="classarmnn_1_1_invalid_argument_exception.xhtml">InvalidArgumentException</a>(<span class="stringliteral">&quot;Invalid entity type, the entity type cannot be empty&quot;</span>);</div><div class="line"><a name="l00253"></a><span class="lineno">  253</span>&#160;    }</div><div class="line"><a name="l00254"></a><span class="lineno">  254</span>&#160;</div><div class="line"><a name="l00255"></a><span class="lineno">  255</span>&#160;    <span class="comment">// Create a named type entity from the given name and type, this call throws in case of error</span></div><div class="line"><a name="l00256"></a><span class="lineno">  256</span>&#160;    ProfilingDynamicGuid childEntityGuid = <a class="code" href="classarmnn_1_1profiling_1_1_timeline_utility_methods.xhtml#a4eee08ab6a4941622b7e42ada1f6aaea">CreateNamedTypedEntity</a>(entityName, entityType);</div><div class="line"><a name="l00257"></a><span class="lineno">  257</span>&#160;</div><div class="line"><a name="l00258"></a><span class="lineno">  258</span>&#160;    <span class="comment">// Generate a GUID for the retention link relationship</span></div><div class="line"><a name="l00259"></a><span class="lineno">  259</span>&#160;    ProfilingDynamicGuid retentionLinkGuid = <a class="code" href="classarmnn_1_1profiling_1_1_profiling_service.xhtml#ad6a0ab3d6679dded1eb2e1838becf79e">profiling::ProfilingService::GetNextGuid</a>();</div><div class="line"><a name="l00260"></a><span class="lineno">  260</span>&#160;</div><div class="line"><a name="l00261"></a><span class="lineno">  261</span>&#160;    <span class="comment">// Send the new retention link to the external profiling service, this call throws in case of error</span></div><div class="line"><a name="l00262"></a><span class="lineno">  262</span>&#160;    m_SendTimelinePacket-&gt;SendTimelineRelationshipBinaryPacket(<a class="code" href="namespacearmnn_1_1profiling.xhtml#ab805f5aa9f101e7f6d971daba044c3c2afc04d023850b425f3b9c62b3a55dc110">ProfilingRelationshipType::RetentionLink</a>,</div><div class="line"><a name="l00263"></a><span class="lineno">  263</span>&#160;                                                               retentionLinkGuid,</div><div class="line"><a name="l00264"></a><span class="lineno">  264</span>&#160;                                                               parentEntityGuid,</div><div class="line"><a name="l00265"></a><span class="lineno">  265</span>&#160;                                                               childEntityGuid,</div><div class="line"><a name="l00266"></a><span class="lineno">  266</span>&#160;                                                               LabelsAndEventClasses::EMPTY_GUID);</div><div class="line"><a name="l00267"></a><span class="lineno">  267</span>&#160;</div><div class="line"><a name="l00268"></a><span class="lineno">  268</span>&#160;    <span class="keywordflow">return</span> childEntityGuid;</div><div class="line"><a name="l00269"></a><span class="lineno">  269</span>&#160;}</div><div class="line"><a name="l00270"></a><span class="lineno">  270</span>&#160;</div><div class="line"><a name="l00271"></a><span class="lineno"><a class="line" href="classarmnn_1_1profiling_1_1_timeline_utility_methods.xhtml#ac809ad30bb849818aeee9e2a542419f3">  271</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="classarmnn_1_1profiling_1_1_timeline_utility_methods.xhtml#a17fb755aaf109f832eef0874f0c5254f">TimelineUtilityMethods::CreateNamedTypedChildEntity</a>(ProfilingGuid childEntityGuid,</div><div class="line"><a name="l00272"></a><span class="lineno">  272</span>&#160;                                                         ProfilingGuid parentEntityGuid,</div><div class="line"><a name="l00273"></a><span class="lineno">  273</span>&#160;                                                         <span class="keyword">const</span> std::string&amp; entityName,</div><div class="line"><a name="l00274"></a><span class="lineno">  274</span>&#160;                                                         <span class="keyword">const</span> std::string&amp; entityType)</div><div class="line"><a name="l00275"></a><span class="lineno">  275</span>&#160;{</div><div class="line"><a name="l00276"></a><span class="lineno">  276</span>&#160;    <span class="comment">// Check that the entity name is valid</span></div><div class="line"><a name="l00277"></a><span class="lineno">  277</span>&#160;    <span class="keywordflow">if</span> (entityName.empty())</div><div class="line"><a name="l00278"></a><span class="lineno">  278</span>&#160;    {</div><div class="line"><a name="l00279"></a><span class="lineno">  279</span>&#160;        <span class="comment">// The entity name is invalid</span></div><div class="line"><a name="l00280"></a><span class="lineno">  280</span>&#160;        <span class="keywordflow">throw</span> <a class="code" href="classarmnn_1_1_invalid_argument_exception.xhtml">InvalidArgumentException</a>(<span class="stringliteral">&quot;Invalid entity name, the entity name cannot be empty&quot;</span>);</div><div class="line"><a name="l00281"></a><span class="lineno">  281</span>&#160;    }</div><div class="line"><a name="l00282"></a><span class="lineno">  282</span>&#160;</div><div class="line"><a name="l00283"></a><span class="lineno">  283</span>&#160;    <span class="comment">// Check that the entity type is valid</span></div><div class="line"><a name="l00284"></a><span class="lineno">  284</span>&#160;    <span class="keywordflow">if</span> (entityType.empty())</div><div class="line"><a name="l00285"></a><span class="lineno">  285</span>&#160;    {</div><div class="line"><a name="l00286"></a><span class="lineno">  286</span>&#160;        <span class="comment">// The entity type is invalid</span></div><div class="line"><a name="l00287"></a><span class="lineno">  287</span>&#160;        <span class="keywordflow">throw</span> <a class="code" href="classarmnn_1_1_invalid_argument_exception.xhtml">InvalidArgumentException</a>(<span class="stringliteral">&quot;Invalid entity type, the entity type cannot be empty&quot;</span>);</div><div class="line"><a name="l00288"></a><span class="lineno">  288</span>&#160;    }</div><div class="line"><a name="l00289"></a><span class="lineno">  289</span>&#160;</div><div class="line"><a name="l00290"></a><span class="lineno">  290</span>&#160;    <span class="comment">// Create a named type entity from the given guid, name and type, this call throws in case of error</span></div><div class="line"><a name="l00291"></a><span class="lineno">  291</span>&#160;    <a class="code" href="classarmnn_1_1profiling_1_1_timeline_utility_methods.xhtml#a4eee08ab6a4941622b7e42ada1f6aaea">CreateNamedTypedEntity</a>(childEntityGuid, entityName, entityType);</div><div class="line"><a name="l00292"></a><span class="lineno">  292</span>&#160;</div><div class="line"><a name="l00293"></a><span class="lineno">  293</span>&#160;    <span class="comment">// Generate a GUID for the retention link relationship</span></div><div class="line"><a name="l00294"></a><span class="lineno">  294</span>&#160;    ProfilingDynamicGuid retentionLinkGuid = <a class="code" href="classarmnn_1_1profiling_1_1_profiling_service.xhtml#ad6a0ab3d6679dded1eb2e1838becf79e">profiling::ProfilingService::GetNextGuid</a>();</div><div class="line"><a name="l00295"></a><span class="lineno">  295</span>&#160;</div><div class="line"><a name="l00296"></a><span class="lineno">  296</span>&#160;    <span class="comment">// Send the new retention link to the external profiling service, this call throws in case of error</span></div><div class="line"><a name="l00297"></a><span class="lineno">  297</span>&#160;    m_SendTimelinePacket-&gt;SendTimelineRelationshipBinaryPacket(<a class="code" href="namespacearmnn_1_1profiling.xhtml#ab805f5aa9f101e7f6d971daba044c3c2afc04d023850b425f3b9c62b3a55dc110">ProfilingRelationshipType::RetentionLink</a>,</div><div class="line"><a name="l00298"></a><span class="lineno">  298</span>&#160;                                                               retentionLinkGuid,</div><div class="line"><a name="l00299"></a><span class="lineno">  299</span>&#160;                                                               parentEntityGuid,</div><div class="line"><a name="l00300"></a><span class="lineno">  300</span>&#160;                                                               childEntityGuid,</div><div class="line"><a name="l00301"></a><span class="lineno">  301</span>&#160;                                                               LabelsAndEventClasses::CHILD_GUID);</div><div class="line"><a name="l00302"></a><span class="lineno">  302</span>&#160;}</div><div class="line"><a name="l00303"></a><span class="lineno">  303</span>&#160;</div><div class="line"><a name="l00304"></a><span class="lineno"><a class="line" href="classarmnn_1_1profiling_1_1_timeline_utility_methods.xhtml#a138b36f259fe5fdc602e144c672ecaf6">  304</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="classarmnn_1_1profiling_1_1_timeline_utility_methods.xhtml#a17fb755aaf109f832eef0874f0c5254f">TimelineUtilityMethods::CreateNamedTypedChildEntity</a>(ProfilingGuid childEntityGuid,</div><div class="line"><a name="l00305"></a><span class="lineno">  305</span>&#160;                                                         ProfilingGuid parentEntityGuid,</div><div class="line"><a name="l00306"></a><span class="lineno">  306</span>&#160;                                                         <span class="keyword">const</span> std::string&amp; entityName,</div><div class="line"><a name="l00307"></a><span class="lineno">  307</span>&#160;                                                         ProfilingStaticGuid typeGuid)</div><div class="line"><a name="l00308"></a><span class="lineno">  308</span>&#160;{</div><div class="line"><a name="l00309"></a><span class="lineno">  309</span>&#160;    <span class="comment">// Check that the entity name is valid</span></div><div class="line"><a name="l00310"></a><span class="lineno">  310</span>&#160;    <span class="keywordflow">if</span> (entityName.empty())</div><div class="line"><a name="l00311"></a><span class="lineno">  311</span>&#160;    {</div><div class="line"><a name="l00312"></a><span class="lineno">  312</span>&#160;        <span class="comment">// The entity name is invalid</span></div><div class="line"><a name="l00313"></a><span class="lineno">  313</span>&#160;        <span class="keywordflow">throw</span> <a class="code" href="classarmnn_1_1_invalid_argument_exception.xhtml">InvalidArgumentException</a>(<span class="stringliteral">&quot;Invalid entity name, the entity name cannot be empty&quot;</span>);</div><div class="line"><a name="l00314"></a><span class="lineno">  314</span>&#160;    }</div><div class="line"><a name="l00315"></a><span class="lineno">  315</span>&#160;</div><div class="line"><a name="l00316"></a><span class="lineno">  316</span>&#160;    <span class="comment">// Create a named type entity from the given guid, name and type, this call throws in case of error</span></div><div class="line"><a name="l00317"></a><span class="lineno">  317</span>&#160;    <a class="code" href="classarmnn_1_1profiling_1_1_timeline_utility_methods.xhtml#a4eee08ab6a4941622b7e42ada1f6aaea">CreateNamedTypedEntity</a>(childEntityGuid, entityName, typeGuid);</div><div class="line"><a name="l00318"></a><span class="lineno">  318</span>&#160;</div><div class="line"><a name="l00319"></a><span class="lineno">  319</span>&#160;    <span class="comment">// Generate a GUID for the retention link relationship</span></div><div class="line"><a name="l00320"></a><span class="lineno">  320</span>&#160;    ProfilingDynamicGuid retentionLinkGuid = <a class="code" href="classarmnn_1_1profiling_1_1_profiling_service.xhtml#ad6a0ab3d6679dded1eb2e1838becf79e">profiling::ProfilingService::GetNextGuid</a>();</div><div class="line"><a name="l00321"></a><span class="lineno">  321</span>&#160;</div><div class="line"><a name="l00322"></a><span class="lineno">  322</span>&#160;    <span class="comment">// Send the new retention link to the external profiling service, this call throws in case of error</span></div><div class="line"><a name="l00323"></a><span class="lineno">  323</span>&#160;    m_SendTimelinePacket-&gt;SendTimelineRelationshipBinaryPacket(<a class="code" href="namespacearmnn_1_1profiling.xhtml#ab805f5aa9f101e7f6d971daba044c3c2afc04d023850b425f3b9c62b3a55dc110">ProfilingRelationshipType::RetentionLink</a>,</div><div class="line"><a name="l00324"></a><span class="lineno">  324</span>&#160;                                                               retentionLinkGuid,</div><div class="line"><a name="l00325"></a><span class="lineno">  325</span>&#160;                                                               parentEntityGuid,</div><div class="line"><a name="l00326"></a><span class="lineno">  326</span>&#160;                                                               childEntityGuid,</div><div class="line"><a name="l00327"></a><span class="lineno">  327</span>&#160;                                                               LabelsAndEventClasses::CHILD_GUID);</div><div class="line"><a name="l00328"></a><span class="lineno">  328</span>&#160;}</div><div class="line"><a name="l00329"></a><span class="lineno">  329</span>&#160;</div><div class="line"><a name="l00330"></a><span class="lineno"><a class="line" href="classarmnn_1_1profiling_1_1_timeline_utility_methods.xhtml#abb58ed74830f7cd7bc2264fa6f1ebcc5">  330</a></span>&#160;ProfilingDynamicGuid <a class="code" href="classarmnn_1_1profiling_1_1_timeline_utility_methods.xhtml#abb58ed74830f7cd7bc2264fa6f1ebcc5">TimelineUtilityMethods::CreateRelationship</a>(<a class="code" href="namespacearmnn_1_1profiling.xhtml#ab805f5aa9f101e7f6d971daba044c3c2">ProfilingRelationshipType</a> relationshipType,</div><div class="line"><a name="l00331"></a><span class="lineno">  331</span>&#160;                                                                ProfilingGuid headGuid,</div><div class="line"><a name="l00332"></a><span class="lineno">  332</span>&#160;                                                                ProfilingGuid tailGuid,</div><div class="line"><a name="l00333"></a><span class="lineno">  333</span>&#160;                                                                ProfilingGuid relationshipCategory)</div><div class="line"><a name="l00334"></a><span class="lineno">  334</span>&#160;{</div><div class="line"><a name="l00335"></a><span class="lineno">  335</span>&#160;    <span class="comment">// Generate a GUID for the relationship</span></div><div class="line"><a name="l00336"></a><span class="lineno">  336</span>&#160;    ProfilingDynamicGuid relationshipGuid = <a class="code" href="classarmnn_1_1profiling_1_1_profiling_service.xhtml#ad6a0ab3d6679dded1eb2e1838becf79e">profiling::ProfilingService::GetNextGuid</a>();</div><div class="line"><a name="l00337"></a><span class="lineno">  337</span>&#160;</div><div class="line"><a name="l00338"></a><span class="lineno">  338</span>&#160;    <span class="comment">// Send the new retention link to the external profiling service, this call throws in case of error</span></div><div class="line"><a name="l00339"></a><span class="lineno">  339</span>&#160;    m_SendTimelinePacket-&gt;SendTimelineRelationshipBinaryPacket(relationshipType,</div><div class="line"><a name="l00340"></a><span class="lineno">  340</span>&#160;                                                               relationshipGuid,</div><div class="line"><a name="l00341"></a><span class="lineno">  341</span>&#160;                                                               headGuid,</div><div class="line"><a name="l00342"></a><span class="lineno">  342</span>&#160;                                                               tailGuid,</div><div class="line"><a name="l00343"></a><span class="lineno">  343</span>&#160;                                                               relationshipCategory);</div><div class="line"><a name="l00344"></a><span class="lineno">  344</span>&#160;    <span class="keywordflow">return</span> relationshipGuid;</div><div class="line"><a name="l00345"></a><span class="lineno">  345</span>&#160;}</div><div class="line"><a name="l00346"></a><span class="lineno">  346</span>&#160;</div><div class="line"><a name="l00347"></a><span class="lineno"><a class="line" href="classarmnn_1_1profiling_1_1_timeline_utility_methods.xhtml#a26eb17879c4c1e70ab32091f1f3f7603">  347</a></span>&#160;ProfilingDynamicGuid <a class="code" href="classarmnn_1_1profiling_1_1_timeline_utility_methods.xhtml#a26eb17879c4c1e70ab32091f1f3f7603">TimelineUtilityMethods::CreateConnectionRelationship</a>(<a class="code" href="namespacearmnn_1_1profiling.xhtml#ab805f5aa9f101e7f6d971daba044c3c2">ProfilingRelationshipType</a> relationshipType,</div><div class="line"><a name="l00348"></a><span class="lineno">  348</span>&#160;                                                                          ProfilingGuid headGuid,</div><div class="line"><a name="l00349"></a><span class="lineno">  349</span>&#160;                                                                          ProfilingGuid tailGuid)</div><div class="line"><a name="l00350"></a><span class="lineno">  350</span>&#160;{</div><div class="line"><a name="l00351"></a><span class="lineno">  351</span>&#160;    <span class="comment">// Generate a GUID for the relationship</span></div><div class="line"><a name="l00352"></a><span class="lineno">  352</span>&#160;    ProfilingDynamicGuid relationshipGuid = <a class="code" href="classarmnn_1_1profiling_1_1_profiling_service.xhtml#ad6a0ab3d6679dded1eb2e1838becf79e">profiling::ProfilingService::GetNextGuid</a>();</div><div class="line"><a name="l00353"></a><span class="lineno">  353</span>&#160;</div><div class="line"><a name="l00354"></a><span class="lineno">  354</span>&#160;    <span class="comment">// Send the new retention link to the external profiling service, this call throws in case of error</span></div><div class="line"><a name="l00355"></a><span class="lineno">  355</span>&#160;    m_SendTimelinePacket-&gt;SendTimelineRelationshipBinaryPacket(relationshipType,</div><div class="line"><a name="l00356"></a><span class="lineno">  356</span>&#160;                                                               relationshipGuid,</div><div class="line"><a name="l00357"></a><span class="lineno">  357</span>&#160;                                                               headGuid,</div><div class="line"><a name="l00358"></a><span class="lineno">  358</span>&#160;                                                               tailGuid,</div><div class="line"><a name="l00359"></a><span class="lineno">  359</span>&#160;                                                               LabelsAndEventClasses::CONNECTION_GUID);</div><div class="line"><a name="l00360"></a><span class="lineno">  360</span>&#160;    <span class="keywordflow">return</span> relationshipGuid;</div><div class="line"><a name="l00361"></a><span class="lineno">  361</span>&#160;}</div><div class="line"><a name="l00362"></a><span class="lineno">  362</span>&#160;</div><div class="line"><a name="l00363"></a><span class="lineno"><a class="line" href="classarmnn_1_1profiling_1_1_timeline_utility_methods.xhtml#adf509c448cac724f0d10deea70bad439">  363</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="classarmnn_1_1profiling_1_1_timeline_utility_methods.xhtml#adf509c448cac724f0d10deea70bad439">TimelineUtilityMethods::CreateTypedEntity</a>(ProfilingGuid entityGuid, ProfilingStaticGuid entityTypeGuid)</div><div class="line"><a name="l00364"></a><span class="lineno">  364</span>&#160;{</div><div class="line"><a name="l00365"></a><span class="lineno">  365</span>&#160;    <span class="comment">// Send Entity Binary Packet of the entity to the external profiling service</span></div><div class="line"><a name="l00366"></a><span class="lineno">  366</span>&#160;    m_SendTimelinePacket-&gt;SendTimelineEntityBinaryPacket(entityGuid);</div><div class="line"><a name="l00367"></a><span class="lineno">  367</span>&#160;</div><div class="line"><a name="l00368"></a><span class="lineno">  368</span>&#160;    <span class="comment">// Create type entity and send the relationship of the entity with the given type</span></div><div class="line"><a name="l00369"></a><span class="lineno">  369</span>&#160;    <a class="code" href="classarmnn_1_1profiling_1_1_timeline_utility_methods.xhtml#a25e5f1346081cbe38177d5d0869e200a">MarkEntityWithType</a>(entityGuid, entityTypeGuid);</div><div class="line"><a name="l00370"></a><span class="lineno">  370</span>&#160;}</div><div class="line"><a name="l00371"></a><span class="lineno">  371</span>&#160;</div><div class="line"><a name="l00372"></a><span class="lineno"><a class="line" href="classarmnn_1_1profiling_1_1_timeline_utility_methods.xhtml#ac4c885d17f21b2642a88130fa2ee9dc9">  372</a></span>&#160;ProfilingDynamicGuid <a class="code" href="classarmnn_1_1profiling_1_1_timeline_utility_methods.xhtml#ac4c885d17f21b2642a88130fa2ee9dc9">TimelineUtilityMethods::RecordEvent</a>(ProfilingGuid entityGuid, ProfilingStaticGuid eventClassGuid)</div><div class="line"><a name="l00373"></a><span class="lineno">  373</span>&#160;{</div><div class="line"><a name="l00374"></a><span class="lineno">  374</span>&#160;    <span class="comment">// Take a timestamp</span></div><div class="line"><a name="l00375"></a><span class="lineno">  375</span>&#160;    uint64_t timestamp = <a class="code" href="namespacearmnn_1_1profiling.xhtml#a77a41a7625d3134c0cccdf11d169acb4">GetTimestamp</a>();</div><div class="line"><a name="l00376"></a><span class="lineno">  376</span>&#160;</div><div class="line"><a name="l00377"></a><span class="lineno">  377</span>&#160;    <span class="comment">// Get the thread id</span></div><div class="line"><a name="l00378"></a><span class="lineno">  378</span>&#160;    <span class="keywordtype">int</span> threadId = <a class="code" href="namespacearmnn_utils_1_1_threads.xhtml#af0dcc5dda372a6f517e0930720219297">armnnUtils::Threads::GetCurrentThreadId</a>();</div><div class="line"><a name="l00379"></a><span class="lineno">  379</span>&#160;</div><div class="line"><a name="l00380"></a><span class="lineno">  380</span>&#160;    <span class="comment">// Generate a GUID for the event</span></div><div class="line"><a name="l00381"></a><span class="lineno">  381</span>&#160;    ProfilingDynamicGuid eventGuid = <a class="code" href="classarmnn_1_1profiling_1_1_profiling_service.xhtml#ad6a0ab3d6679dded1eb2e1838becf79e">profiling::ProfilingService::GetNextGuid</a>();</div><div class="line"><a name="l00382"></a><span class="lineno">  382</span>&#160;</div><div class="line"><a name="l00383"></a><span class="lineno">  383</span>&#160;    <span class="comment">// Send the new timeline event to the external profiling service, this call throws in case of error</span></div><div class="line"><a name="l00384"></a><span class="lineno">  384</span>&#160;    m_SendTimelinePacket-&gt;SendTimelineEventBinaryPacket(timestamp, threadId, eventGuid);</div><div class="line"><a name="l00385"></a><span class="lineno">  385</span>&#160;</div><div class="line"><a name="l00386"></a><span class="lineno">  386</span>&#160;    <span class="comment">// Generate a GUID for the execution link</span></div><div class="line"><a name="l00387"></a><span class="lineno">  387</span>&#160;    ProfilingDynamicGuid executionLinkId = <a class="code" href="classarmnn_1_1profiling_1_1_profiling_service.xhtml#ad6a0ab3d6679dded1eb2e1838becf79e">profiling::ProfilingService::GetNextGuid</a>();</div><div class="line"><a name="l00388"></a><span class="lineno">  388</span>&#160;</div><div class="line"><a name="l00389"></a><span class="lineno">  389</span>&#160;    <span class="comment">// Send the new execution link to the external profiling service, this call throws in case of error</span></div><div class="line"><a name="l00390"></a><span class="lineno">  390</span>&#160;    m_SendTimelinePacket-&gt;SendTimelineRelationshipBinaryPacket(<a class="code" href="namespacearmnn_1_1profiling.xhtml#ab805f5aa9f101e7f6d971daba044c3c2a5265db1a79410fbe447a3faa98e7b914">ProfilingRelationshipType::ExecutionLink</a>,</div><div class="line"><a name="l00391"></a><span class="lineno">  391</span>&#160;                                                               executionLinkId,</div><div class="line"><a name="l00392"></a><span class="lineno">  392</span>&#160;                                                               entityGuid,</div><div class="line"><a name="l00393"></a><span class="lineno">  393</span>&#160;                                                               eventGuid,</div><div class="line"><a name="l00394"></a><span class="lineno">  394</span>&#160;                                                               eventClassGuid);</div><div class="line"><a name="l00395"></a><span class="lineno">  395</span>&#160;</div><div class="line"><a name="l00396"></a><span class="lineno">  396</span>&#160;    <span class="keywordflow">return</span> eventGuid;</div><div class="line"><a name="l00397"></a><span class="lineno">  397</span>&#160;}</div><div class="line"><a name="l00398"></a><span class="lineno">  398</span>&#160;</div><div class="line"><a name="l00399"></a><span class="lineno"><a class="line" href="classarmnn_1_1profiling_1_1_timeline_utility_methods.xhtml#adfe02b1d64832a66f4c0da282ba1e6a1">  399</a></span>&#160;ProfilingDynamicGuid <a class="code" href="classarmnn_1_1profiling_1_1_timeline_utility_methods.xhtml#adfe02b1d64832a66f4c0da282ba1e6a1">TimelineUtilityMethods::RecordWorkloadInferenceAndStartOfLifeEvent</a>(ProfilingGuid workloadGuid,</div><div class="line"><a name="l00400"></a><span class="lineno">  400</span>&#160;                                                                                        ProfilingGuid inferenceGuid)</div><div class="line"><a name="l00401"></a><span class="lineno">  401</span>&#160;{</div><div class="line"><a name="l00402"></a><span class="lineno">  402</span>&#160;    ProfilingDynamicGuid workloadInferenceGuid = <a class="code" href="classarmnn_1_1profiling_1_1_profiling_service.xhtml#ad6a0ab3d6679dded1eb2e1838becf79e">profiling::ProfilingService::GetNextGuid</a>();</div><div class="line"><a name="l00403"></a><span class="lineno">  403</span>&#160;    <a class="code" href="classarmnn_1_1profiling_1_1_timeline_utility_methods.xhtml#adf509c448cac724f0d10deea70bad439">CreateTypedEntity</a>(workloadInferenceGuid, LabelsAndEventClasses::WORKLOAD_EXECUTION_GUID);</div><div class="line"><a name="l00404"></a><span class="lineno">  404</span>&#160;    <a class="code" href="classarmnn_1_1profiling_1_1_timeline_utility_methods.xhtml#abb58ed74830f7cd7bc2264fa6f1ebcc5">CreateRelationship</a>(<a class="code" href="namespacearmnn_1_1profiling.xhtml#ab805f5aa9f101e7f6d971daba044c3c2afc04d023850b425f3b9c62b3a55dc110">ProfilingRelationshipType::RetentionLink</a>,</div><div class="line"><a name="l00405"></a><span class="lineno">  405</span>&#160;                       inferenceGuid,</div><div class="line"><a name="l00406"></a><span class="lineno">  406</span>&#160;                       workloadInferenceGuid,</div><div class="line"><a name="l00407"></a><span class="lineno">  407</span>&#160;                       LabelsAndEventClasses::CHILD_GUID);</div><div class="line"><a name="l00408"></a><span class="lineno">  408</span>&#160;    <a class="code" href="classarmnn_1_1profiling_1_1_timeline_utility_methods.xhtml#abb58ed74830f7cd7bc2264fa6f1ebcc5">CreateRelationship</a>(<a class="code" href="namespacearmnn_1_1profiling.xhtml#ab805f5aa9f101e7f6d971daba044c3c2afc04d023850b425f3b9c62b3a55dc110">ProfilingRelationshipType::RetentionLink</a>,</div><div class="line"><a name="l00409"></a><span class="lineno">  409</span>&#160;                       workloadGuid,</div><div class="line"><a name="l00410"></a><span class="lineno">  410</span>&#160;                       workloadInferenceGuid,</div><div class="line"><a name="l00411"></a><span class="lineno">  411</span>&#160;                       LabelsAndEventClasses::EXECUTION_OF_GUID);</div><div class="line"><a name="l00412"></a><span class="lineno">  412</span>&#160;    <a class="code" href="classarmnn_1_1profiling_1_1_timeline_utility_methods.xhtml#ac4c885d17f21b2642a88130fa2ee9dc9">RecordEvent</a>(workloadInferenceGuid, LabelsAndEventClasses::ARMNN_PROFILING_SOL_EVENT_CLASS);</div><div class="line"><a name="l00413"></a><span class="lineno">  413</span>&#160;    <span class="keywordflow">return</span> workloadInferenceGuid;</div><div class="line"><a name="l00414"></a><span class="lineno">  414</span>&#160;}</div><div class="line"><a name="l00415"></a><span class="lineno">  415</span>&#160;</div><div class="line"><a name="l00416"></a><span class="lineno"><a class="line" href="classarmnn_1_1profiling_1_1_timeline_utility_methods.xhtml#a3431e92f1626dfcdd2e124ab9aeddd5a">  416</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="classarmnn_1_1profiling_1_1_timeline_utility_methods.xhtml#a3431e92f1626dfcdd2e124ab9aeddd5a">TimelineUtilityMethods::RecordEndOfLifeEvent</a>(ProfilingGuid entityGuid)</div><div class="line"><a name="l00417"></a><span class="lineno">  417</span>&#160;{</div><div class="line"><a name="l00418"></a><span class="lineno">  418</span>&#160;    <a class="code" href="classarmnn_1_1profiling_1_1_timeline_utility_methods.xhtml#ac4c885d17f21b2642a88130fa2ee9dc9">RecordEvent</a>(entityGuid, LabelsAndEventClasses::ARMNN_PROFILING_EOL_EVENT_CLASS);</div><div class="line"><a name="l00419"></a><span class="lineno">  419</span>&#160;}</div><div class="line"><a name="l00420"></a><span class="lineno">  420</span>&#160;</div><div class="line"><a name="l00421"></a><span class="lineno">  421</span>&#160;} <span class="comment">// namespace profiling</span></div><div class="line"><a name="l00422"></a><span class="lineno">  422</span>&#160;</div><div class="line"><a name="l00423"></a><span class="lineno">  423</span>&#160;} <span class="comment">// namespace armnn</span></div><div class="ttc" id="classarmnn_1_1profiling_1_1_timeline_utility_methods_xhtml_adfe02b1d64832a66f4c0da282ba1e6a1"><div class="ttname"><a href="classarmnn_1_1profiling_1_1_timeline_utility_methods.xhtml#adfe02b1d64832a66f4c0da282ba1e6a1">armnn::profiling::TimelineUtilityMethods::RecordWorkloadInferenceAndStartOfLifeEvent</a></div><div class="ttdeci">ProfilingDynamicGuid RecordWorkloadInferenceAndStartOfLifeEvent(ProfilingGuid workloadGuid, ProfilingGuid inferenceGuid)</div><div class="ttdef"><b>Definition:</b> <a href="_timeline_utility_methods_8cpp_source.xhtml#l00399">TimelineUtilityMethods.cpp:399</a></div></div>
<div class="ttc" id="classarmnn_1_1profiling_1_1_timeline_utility_methods_xhtml_a3431e92f1626dfcdd2e124ab9aeddd5a"><div class="ttname"><a href="classarmnn_1_1profiling_1_1_timeline_utility_methods.xhtml#a3431e92f1626dfcdd2e124ab9aeddd5a">armnn::profiling::TimelineUtilityMethods::RecordEndOfLifeEvent</a></div><div class="ttdeci">void RecordEndOfLifeEvent(ProfilingGuid entityGuid)</div><div class="ttdef"><b>Definition:</b> <a href="_timeline_utility_methods_8cpp_source.xhtml#l00416">TimelineUtilityMethods.cpp:416</a></div></div>
<div class="ttc" id="classarmnn_1_1profiling_1_1_profiling_service_xhtml_ad8d263669817cf577760710ff6c96bb9"><div class="ttname"><a href="classarmnn_1_1profiling_1_1_profiling_service.xhtml#ad8d263669817cf577760710ff6c96bb9">armnn::profiling::ProfilingService::GetCurrentState</a></div><div class="ttdeci">ProfilingState GetCurrentState() const</div><div class="ttdef"><b>Definition:</b> <a href="_profiling_service_8cpp_source.xhtml#l00232">ProfilingService.cpp:232</a></div></div>
<div class="ttc" id="classarmnn_1_1profiling_1_1_timeline_utility_methods_xhtml_a0e5c863245b8d7dc5e874c0c66eebae1"><div class="ttname"><a href="classarmnn_1_1profiling_1_1_timeline_utility_methods.xhtml#a0e5c863245b8d7dc5e874c0c66eebae1">armnn::profiling::TimelineUtilityMethods::GetTimelineUtils</a></div><div class="ttdeci">static std::unique_ptr&lt; TimelineUtilityMethods &gt; GetTimelineUtils(ProfilingService &amp;profilingService)</div><div class="ttdef"><b>Definition:</b> <a href="_timeline_utility_methods_8cpp_source.xhtml#l00018">TimelineUtilityMethods.cpp:18</a></div></div>
<div class="ttc" id="namespacearmnn_utils_1_1_threads_xhtml_af0dcc5dda372a6f517e0930720219297"><div class="ttname"><a href="namespacearmnn_utils_1_1_threads.xhtml#af0dcc5dda372a6f517e0930720219297">armnnUtils::Threads::GetCurrentThreadId</a></div><div class="ttdeci">int GetCurrentThreadId()</div><div class="ttdef"><b>Definition:</b> <a href="_threads_8cpp_source.xhtml#l00027">Threads.cpp:27</a></div></div>
<div class="ttc" id="classarmnn_1_1profiling_1_1_timeline_utility_methods_xhtml_a26eb17879c4c1e70ab32091f1f3f7603"><div class="ttname"><a href="classarmnn_1_1profiling_1_1_timeline_utility_methods.xhtml#a26eb17879c4c1e70ab32091f1f3f7603">armnn::profiling::TimelineUtilityMethods::CreateConnectionRelationship</a></div><div class="ttdeci">ProfilingDynamicGuid CreateConnectionRelationship(ProfilingRelationshipType relationshipType, ProfilingGuid headGuid, ProfilingGuid tailGuid)</div><div class="ttdef"><b>Definition:</b> <a href="_timeline_utility_methods_8cpp_source.xhtml#l00347">TimelineUtilityMethods.cpp:347</a></div></div>
<div class="ttc" id="classarmnn_1_1profiling_1_1_i_send_timeline_packet_xhtml_a0426a9f8bc2789012477f08c3e03a532"><div class="ttname"><a href="classarmnn_1_1profiling_1_1_i_send_timeline_packet.xhtml#a0426a9f8bc2789012477f08c3e03a532">armnn::profiling::ISendTimelinePacket::SendTimelineLabelBinaryPacket</a></div><div class="ttdeci">virtual void SendTimelineLabelBinaryPacket(uint64_t profilingGuid, const std::string &amp;label)=0</div><div class="ttdoc">Create and write a TimelineLabelBinaryPacket from the parameters to the buffer. </div></div>
<div class="ttc" id="namespacearmnn_1_1profiling_xhtml_ab805f5aa9f101e7f6d971daba044c3c2a5265db1a79410fbe447a3faa98e7b914"><div class="ttname"><a href="namespacearmnn_1_1profiling.xhtml#ab805f5aa9f101e7f6d971daba044c3c2a5265db1a79410fbe447a3faa98e7b914">armnn::profiling::ProfilingRelationshipType::ExecutionLink</a></div><div class="ttdoc">Head retains(parents) Tail. </div></div>
<div class="ttc" id="classarmnn_1_1profiling_1_1_i_send_timeline_packet_xhtml"><div class="ttname"><a href="classarmnn_1_1profiling_1_1_i_send_timeline_packet.xhtml">armnn::profiling::ISendTimelinePacket</a></div><div class="ttdef"><b>Definition:</b> <a href="_i_send_timeline_packet_8hpp_source.xhtml#l00026">ISendTimelinePacket.hpp:26</a></div></div>
<div class="ttc" id="namespacearmnn_xhtml"><div class="ttname"><a href="namespacearmnn.xhtml">armnn</a></div><div class="ttdoc">Copyright (c) 2021 ARM Limited and Contributors. </div><div class="ttdef"><b>Definition:</b> <a href="01__00__quick__start_8dox_source.xhtml#l00006">01_00_quick_start.dox:6</a></div></div>
<div class="ttc" id="classarmnn_1_1profiling_1_1_timeline_utility_methods_xhtml_a4eee08ab6a4941622b7e42ada1f6aaea"><div class="ttname"><a href="classarmnn_1_1profiling_1_1_timeline_utility_methods.xhtml#a4eee08ab6a4941622b7e42ada1f6aaea">armnn::profiling::TimelineUtilityMethods::CreateNamedTypedEntity</a></div><div class="ttdeci">ProfilingDynamicGuid CreateNamedTypedEntity(const std::string &amp;name, const std::string &amp;type)</div><div class="ttdef"><b>Definition:</b> <a href="_timeline_utility_methods_8cpp_source.xhtml#l00102">TimelineUtilityMethods.cpp:102</a></div></div>
<div class="ttc" id="namespacearmnn_1_1profiling_xhtml_ab805f5aa9f101e7f6d971daba044c3c2a47d6c060a0aa40c6fd018f12b7c96f1f"><div class="ttname"><a href="namespacearmnn_1_1profiling.xhtml#ab805f5aa9f101e7f6d971daba044c3c2a47d6c060a0aa40c6fd018f12b7c96f1f">armnn::profiling::ProfilingRelationshipType::LabelLink</a></div><div class="ttdoc">Head uses data of Tail. </div></div>
<div class="ttc" id="classarmnn_1_1profiling_1_1_i_send_timeline_packet_xhtml_afa8522a76e7102e41d7c73a34fe493d4"><div class="ttname"><a href="classarmnn_1_1profiling_1_1_i_send_timeline_packet.xhtml#afa8522a76e7102e41d7c73a34fe493d4">armnn::profiling::ISendTimelinePacket::Commit</a></div><div class="ttdeci">virtual void Commit()=0</div><div class="ttdoc">Commits the current buffer and reset the member variables. </div></div>
<div class="ttc" id="classarmnn_1_1profiling_1_1_timeline_utility_methods_xhtml_a17fb755aaf109f832eef0874f0c5254f"><div class="ttname"><a href="classarmnn_1_1profiling_1_1_timeline_utility_methods.xhtml#a17fb755aaf109f832eef0874f0c5254f">armnn::profiling::TimelineUtilityMethods::CreateNamedTypedChildEntity</a></div><div class="ttdeci">ProfilingDynamicGuid CreateNamedTypedChildEntity(ProfilingGuid parentEntityGuid, const std::string &amp;entityName, const std::string &amp;entityType)</div><div class="ttdef"><b>Definition:</b> <a href="_timeline_utility_methods_8cpp_source.xhtml#l00237">TimelineUtilityMethods.cpp:237</a></div></div>
<div class="ttc" id="classarmnn_1_1profiling_1_1_profiling_service_xhtml_a881aa03d7b35e6d0acd783f2aaa22ac9"><div class="ttname"><a href="classarmnn_1_1profiling_1_1_profiling_service.xhtml#a881aa03d7b35e6d0acd783f2aaa22ac9">armnn::profiling::ProfilingService::GetStaticId</a></div><div class="ttdeci">static ProfilingStaticGuid GetStaticId(const std::string &amp;str)</div><div class="ttdef"><b>Definition:</b> <a href="_profiling_service_8cpp_source.xhtml#l00031">ProfilingService.cpp:31</a></div></div>
<div class="ttc" id="classarmnn_1_1profiling_1_1_timeline_utility_methods_xhtml_aa4dd5c1a285f1438e9be275c635fbefa"><div class="ttname"><a href="classarmnn_1_1profiling_1_1_timeline_utility_methods.xhtml#aa4dd5c1a285f1438e9be275c635fbefa">armnn::profiling::TimelineUtilityMethods::NameEntity</a></div><div class="ttdeci">void NameEntity(ProfilingGuid entityGuid, const std::string &amp;name)</div><div class="ttdef"><b>Definition:</b> <a href="_timeline_utility_methods_8cpp_source.xhtml#l00227">TimelineUtilityMethods.cpp:227</a></div></div>
<div class="ttc" id="namespacearmnn_1_1profiling_xhtml_acb0c054138599582d5a5f537e9798806a4d3d769b812b6faa6b76e1a8abaece2d"><div class="ttname"><a href="namespacearmnn_1_1profiling.xhtml#acb0c054138599582d5a5f537e9798806a4d3d769b812b6faa6b76e1a8abaece2d">armnn::profiling::ProfilingState::Active</a></div></div>
<div class="ttc" id="classarmnn_1_1profiling_1_1_timeline_utility_methods_xhtml_adf509c448cac724f0d10deea70bad439"><div class="ttname"><a href="classarmnn_1_1profiling_1_1_timeline_utility_methods.xhtml#adf509c448cac724f0d10deea70bad439">armnn::profiling::TimelineUtilityMethods::CreateTypedEntity</a></div><div class="ttdeci">void CreateTypedEntity(ProfilingGuid entityGuid, ProfilingStaticGuid typeGuid)</div><div class="ttdef"><b>Definition:</b> <a href="_timeline_utility_methods_8cpp_source.xhtml#l00363">TimelineUtilityMethods.cpp:363</a></div></div>
<div class="ttc" id="classarmnn_1_1profiling_1_1_profiling_service_xhtml_a71c4eb6e11d491f84df504cf7f5a6337"><div class="ttname"><a href="classarmnn_1_1profiling_1_1_profiling_service.xhtml#a71c4eb6e11d491f84df504cf7f5a6337">armnn::profiling::ProfilingService::GetSendTimelinePacket</a></div><div class="ttdeci">std::unique_ptr&lt; ISendTimelinePacket &gt; GetSendTimelinePacket() const override</div><div class="ttdef"><b>Definition:</b> <a href="_profiling_service_8cpp_source.xhtml#l00329">ProfilingService.cpp:329</a></div></div>
<div class="ttc" id="classarmnn_1_1profiling_1_1_timeline_utility_methods_xhtml_ac4c885d17f21b2642a88130fa2ee9dc9"><div class="ttname"><a href="classarmnn_1_1profiling_1_1_timeline_utility_methods.xhtml#ac4c885d17f21b2642a88130fa2ee9dc9">armnn::profiling::TimelineUtilityMethods::RecordEvent</a></div><div class="ttdeci">ProfilingDynamicGuid RecordEvent(ProfilingGuid entityGuid, ProfilingStaticGuid eventClassGuid)</div><div class="ttdef"><b>Definition:</b> <a href="_timeline_utility_methods_8cpp_source.xhtml#l00372">TimelineUtilityMethods.cpp:372</a></div></div>
<div class="ttc" id="namespacearmnn_1_1profiling_xhtml_ab805f5aa9f101e7f6d971daba044c3c2"><div class="ttname"><a href="namespacearmnn_1_1profiling.xhtml#ab805f5aa9f101e7f6d971daba044c3c2">armnn::profiling::ProfilingRelationshipType</a></div><div class="ttdeci">ProfilingRelationshipType</div><div class="ttdef"><b>Definition:</b> <a href="_i_send_timeline_packet_8hpp_source.xhtml#l00018">ISendTimelinePacket.hpp:18</a></div></div>
<div class="ttc" id="_threads_8hpp_xhtml"><div class="ttname"><a href="_threads_8hpp.xhtml">Threads.hpp</a></div></div>
<div class="ttc" id="classarmnn_1_1_invalid_argument_exception_xhtml"><div class="ttname"><a href="classarmnn_1_1_invalid_argument_exception.xhtml">armnn::InvalidArgumentException</a></div><div class="ttdef"><b>Definition:</b> <a href="_exceptions_8hpp_source.xhtml#l00080">Exceptions.hpp:80</a></div></div>
<div class="ttc" id="namespacearmnn_1_1profiling_xhtml_ab805f5aa9f101e7f6d971daba044c3c2afc04d023850b425f3b9c62b3a55dc110"><div class="ttname"><a href="namespacearmnn_1_1profiling.xhtml#ab805f5aa9f101e7f6d971daba044c3c2afc04d023850b425f3b9c62b3a55dc110">armnn::profiling::ProfilingRelationshipType::RetentionLink</a></div></div>
<div class="ttc" id="classarmnn_1_1profiling_1_1_profiling_service_xhtml_a8c2670ec96f23799ba3c4b5620e06b66"><div class="ttname"><a href="classarmnn_1_1profiling_1_1_profiling_service.xhtml#a8c2670ec96f23799ba3c4b5620e06b66">armnn::profiling::ProfilingService::IsTimelineReportingEnabled</a></div><div class="ttdeci">bool IsTimelineReportingEnabled()</div><div class="ttdef"><b>Definition:</b> <a href="_profiling_service_8hpp_source.xhtml#l00215">ProfilingService.hpp:215</a></div></div>
<div class="ttc" id="classarmnn_1_1profiling_1_1_timeline_utility_methods_xhtml_af8e3c53181977ef3941575b1a218a0a1"><div class="ttname"><a href="classarmnn_1_1profiling_1_1_timeline_utility_methods.xhtml#af8e3c53181977ef3941575b1a218a0a1">armnn::profiling::TimelineUtilityMethods::MarkEntityWithLabel</a></div><div class="ttdeci">void MarkEntityWithLabel(ProfilingGuid entityGuid, const std::string &amp;labelName, ProfilingStaticGuid labelLinkGuid)</div><div class="ttdef"><b>Definition:</b> <a href="_timeline_utility_methods_8cpp_source.xhtml#l00188">TimelineUtilityMethods.cpp:188</a></div></div>
<div class="ttc" id="classarmnn_1_1profiling_1_1_timeline_utility_methods_xhtml_ae8c2d2f76cfa5291e0abad620e5ec864"><div class="ttname"><a href="classarmnn_1_1profiling_1_1_timeline_utility_methods.xhtml#ae8c2d2f76cfa5291e0abad620e5ec864">armnn::profiling::TimelineUtilityMethods::TypeEntity</a></div><div class="ttdeci">void TypeEntity(ProfilingGuid entityGuid, const std::string &amp;type)</div><div class="ttdef"><b>Definition:</b> <a href="_timeline_utility_methods_8cpp_source.xhtml#l00232">TimelineUtilityMethods.cpp:232</a></div></div>
<div class="ttc" id="classarmnn_1_1profiling_1_1_profiling_service_xhtml"><div class="ttname"><a href="classarmnn_1_1profiling_1_1_profiling_service.xhtml">armnn::profiling::ProfilingService</a></div><div class="ttdef"><b>Definition:</b> <a href="_profiling_service_8hpp_source.xhtml#l00050">ProfilingService.hpp:50</a></div></div>
<div class="ttc" id="classarmnn_1_1profiling_1_1_timeline_utility_methods_xhtml_af92e501555c05c5f56c59ecfd4ffd06e"><div class="ttname"><a href="classarmnn_1_1profiling_1_1_timeline_utility_methods.xhtml#af92e501555c05c5f56c59ecfd4ffd06e">armnn::profiling::TimelineUtilityMethods::DeclareLabel</a></div><div class="ttdeci">ProfilingStaticGuid DeclareLabel(const std::string &amp;labelName)</div><div class="ttdef"><b>Definition:</b> <a href="_timeline_utility_methods_8cpp_source.xhtml#l00170">TimelineUtilityMethods.cpp:170</a></div></div>
<div class="ttc" id="_timeline_utility_methods_8hpp_xhtml"><div class="ttname"><a href="_timeline_utility_methods_8hpp.xhtml">TimelineUtilityMethods.hpp</a></div></div>
<div class="ttc" id="classarmnn_1_1profiling_1_1_profiling_service_xhtml_ad6a0ab3d6679dded1eb2e1838becf79e"><div class="ttname"><a href="classarmnn_1_1profiling_1_1_profiling_service.xhtml#ad6a0ab3d6679dded1eb2e1838becf79e">armnn::profiling::ProfilingService::GetNextGuid</a></div><div class="ttdeci">static ProfilingDynamicGuid GetNextGuid()</div><div class="ttdef"><b>Definition:</b> <a href="_profiling_service_8cpp_source.xhtml#l00026">ProfilingService.cpp:26</a></div></div>
<div class="ttc" id="classarmnn_1_1profiling_1_1_timeline_utility_methods_xhtml_a1c3dd40f5b8c4b878f783addf7d08e2f"><div class="ttname"><a href="classarmnn_1_1profiling_1_1_timeline_utility_methods.xhtml#a1c3dd40f5b8c4b878f783addf7d08e2f">armnn::profiling::TimelineUtilityMethods::SendWellKnownLabelsAndEventClasses</a></div><div class="ttdeci">static void SendWellKnownLabelsAndEventClasses(ISendTimelinePacket &amp;timelinePacket)</div><div class="ttdef"><b>Definition:</b> <a href="_timeline_utility_methods_8cpp_source.xhtml#l00033">TimelineUtilityMethods.cpp:33</a></div></div>
<div class="ttc" id="classarmnn_1_1profiling_1_1_i_send_timeline_packet_xhtml_a03cfe74e636be82dcf63bc90de194519"><div class="ttname"><a href="classarmnn_1_1profiling_1_1_i_send_timeline_packet.xhtml#a03cfe74e636be82dcf63bc90de194519">armnn::profiling::ISendTimelinePacket::SendTimelineEventClassBinaryPacket</a></div><div class="ttdeci">virtual void SendTimelineEventClassBinaryPacket(uint64_t profilingGuid, uint64_t nameGuid)=0</div><div class="ttdoc">Create and write a TimelineEventClassBinaryPacket from the parameters to the buffer. </div></div>
<div class="ttc" id="namespacearmnn_1_1profiling_xhtml_a77a41a7625d3134c0cccdf11d169acb4"><div class="ttname"><a href="namespacearmnn_1_1profiling.xhtml#a77a41a7625d3134c0cccdf11d169acb4">armnn::profiling::GetTimestamp</a></div><div class="ttdeci">uint64_t GetTimestamp()</div><div class="ttdef"><b>Definition:</b> <a href="_profiling_utils_8cpp_source.xhtml#l00904">ProfilingUtils.cpp:904</a></div></div>
<div class="ttc" id="classarmnn_1_1profiling_1_1_timeline_utility_methods_xhtml_abb58ed74830f7cd7bc2264fa6f1ebcc5"><div class="ttname"><a href="classarmnn_1_1profiling_1_1_timeline_utility_methods.xhtml#abb58ed74830f7cd7bc2264fa6f1ebcc5">armnn::profiling::TimelineUtilityMethods::CreateRelationship</a></div><div class="ttdeci">ProfilingDynamicGuid CreateRelationship(ProfilingRelationshipType relationshipType, ProfilingGuid headGuid, ProfilingGuid tailGuid, ProfilingGuid relationshipCategory)</div><div class="ttdef"><b>Definition:</b> <a href="_timeline_utility_methods_8cpp_source.xhtml#l00330">TimelineUtilityMethods.cpp:330</a></div></div>
<div class="ttc" id="classarmnn_1_1profiling_1_1_timeline_utility_methods_xhtml_a25e5f1346081cbe38177d5d0869e200a"><div class="ttname"><a href="classarmnn_1_1profiling_1_1_timeline_utility_methods.xhtml#a25e5f1346081cbe38177d5d0869e200a">armnn::profiling::TimelineUtilityMethods::MarkEntityWithType</a></div><div class="ttdeci">void MarkEntityWithType(ProfilingGuid entityGuid, ProfilingStaticGuid typeNameGuid)</div><div class="ttdef"><b>Definition:</b> <a href="_timeline_utility_methods_8cpp_source.xhtml#l00213">TimelineUtilityMethods.cpp:213</a></div></div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="dir_68267d1309a1af8e8297ef4c3efbcdba.xhtml">src</a></li><li class="navelem"><a class="el" href="dir_637c692f14729569dd2eac0c18e2a54a.xhtml">profiling</a></li><li class="navelem"><a class="el" href="_timeline_utility_methods_8cpp.xhtml">TimelineUtilityMethods.cpp</a></li>
    <li class="footer">Generated on Wed Mar 9 2022 12:01:00 for ArmNN by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.13 </li>
  </ul>
</div>
</body>
</html>
