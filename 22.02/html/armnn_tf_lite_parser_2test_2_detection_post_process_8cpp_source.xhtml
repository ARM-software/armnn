<!-- Copyright (c) 2020 ARM Limited. -->
<!--                                 -->
<!-- SPDX-License-Identifier: MIT    -->
<!--                                 -->
<!-- HTML header for doxygen 1.8.13-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.13"/>
<meta name="robots" content="NOINDEX, NOFOLLOW" />
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>ArmNN: src/armnnTfLiteParser/test/DetectionPostProcess.cpp Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script><script type="text/javascript" src="http://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="stylesheet.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <img alt="ArmNN" src="Arm_NN_horizontal_blue.png" style="max-width: 10rem; margin-top: .5rem; margin-left 10px"/>
  <td style="padding-left: 0.5em;">
   <div id="projectname">
   &#160;<span id="projectnumber">22.02</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.13 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
$(document).ready(function(){initNavTree('armnn_tf_lite_parser_2test_2_detection_post_process_8cpp_source.xhtml','');});
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="headertitle">
<div class="title">DetectionPostProcess.cpp</div>  </div>
</div><!--header-->
<div class="contents">
<a href="armnn_tf_lite_parser_2test_2_detection_post_process_8cpp.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="comment">//</span></div><div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="comment">// Copyright Â© 2017 Arm Ltd and Contributors. All rights reserved.</span></div><div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="comment">// SPDX-License-Identifier: MIT</span></div><div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="comment">//</span></div><div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;</div><div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_parser_flatbuffers_fixture_8hpp.xhtml">ParserFlatbuffersFixture.hpp</a>&quot;</span></div><div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_parser_prototxt_fixture_8hpp.xhtml">ParserPrototxtFixture.hpp</a>&quot;</span></div><div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_parser_helper_8hpp.xhtml">ParserHelper.hpp</a>&quot;</span></div><div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="preprocessor">#include &lt;GraphUtils.hpp&gt;</span></div><div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;</div><div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;<span class="preprocessor">#include &lt;<a class="code" href="_polymorphic_downcast_8hpp.xhtml">armnn/utility/PolymorphicDowncast.hpp</a>&gt;</span></div><div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;<span class="preprocessor">#include &lt;<a class="code" href="_quantize_helper_8hpp.xhtml">armnnUtils/QuantizeHelper.hpp</a>&gt;</span></div><div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;</div><div class="line"><a name="l00014"></a><span class="lineno"><a class="line" href="armnn_tf_lite_parser_2test_2_detection_post_process_8cpp.xhtml#ad65209cbd698e125235373d218cf6b41">   14</a></span>&#160;<a class="code" href="armnn_tf_lite_parser_2test_2_detection_post_process_8cpp.xhtml#ad65209cbd698e125235373d218cf6b41">TEST_SUITE</a>(<span class="stringliteral">&quot;TensorflowLiteParser_DetectionPostProcess&quot;</span>)</div><div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;{</div><div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;<span class="keyword">struct </span>DetectionPostProcessFixture : <a class="code" href="struct_parser_flatbuffers_fixture.xhtml">ParserFlatbuffersFixture</a></div><div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;{</div><div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;    <span class="keyword">explicit</span> DetectionPostProcessFixture(<span class="keyword">const</span> std::string&amp; custom_options)</div><div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;    {</div><div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;        <span class="comment">/*</span></div><div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;<span class="comment">            The following values were used for the custom_options:</span></div><div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;<span class="comment">            use_regular_nms = true</span></div><div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;<span class="comment">            max_classes_per_detection = 1</span></div><div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;<span class="comment">            detections_per_class = 1</span></div><div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;<span class="comment">            nms_score_threshold = 0.0</span></div><div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;<span class="comment">            nms_iou_threshold = 0.5</span></div><div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;<span class="comment">            max_detections = 3</span></div><div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;<span class="comment">            max_detections = 3</span></div><div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;<span class="comment">            num_classes = 2</span></div><div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;<span class="comment">            h_scale = 5</span></div><div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;<span class="comment">            w_scale = 5</span></div><div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;<span class="comment">            x_scale = 10</span></div><div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;<span class="comment">            y_scale = 10</span></div><div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;<span class="comment">        */</span></div><div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;        m_JsonString = R<span class="stringliteral">&quot;(</span></div><div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;<span class="stringliteral">            {</span></div><div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;<span class="stringliteral">                &quot;version&quot;: 3,</span></div><div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;<span class="stringliteral">                &quot;operator_codes&quot;: [{</span></div><div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;<span class="stringliteral">                    &quot;builtin_code&quot;: &quot;CUSTOM&quot;,</span></div><div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;<span class="stringliteral">                    &quot;custom_code&quot;: &quot;TFLite_Detection_PostProcess&quot;</span></div><div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;<span class="stringliteral">                }],</span></div><div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;<span class="stringliteral">                &quot;subgraphs&quot;: [{</span></div><div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;<span class="stringliteral">                    &quot;tensors&quot;: [{</span></div><div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;<span class="stringliteral">                            &quot;shape&quot;: [1, 6, 4],</span></div><div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;<span class="stringliteral">                            &quot;type&quot;: &quot;UINT8&quot;,</span></div><div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;<span class="stringliteral">                            &quot;buffer&quot;: 0,</span></div><div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;<span class="stringliteral">                            &quot;name&quot;: &quot;box_encodings&quot;,</span></div><div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;<span class="stringliteral">                            &quot;quantization&quot;: {</span></div><div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;<span class="stringliteral">                                &quot;min&quot;: [0.0],</span></div><div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;<span class="stringliteral">                                &quot;max&quot;: [255.0],</span></div><div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;<span class="stringliteral">                                &quot;scale&quot;: [1.0],</span></div><div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;<span class="stringliteral">                                &quot;zero_point&quot;: [ 1 ]</span></div><div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;<span class="stringliteral">                            }</span></div><div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;<span class="stringliteral">                        },</span></div><div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;<span class="stringliteral">                        {</span></div><div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;<span class="stringliteral">                            &quot;shape&quot;: [1, 6, 3],</span></div><div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;<span class="stringliteral">                            &quot;type&quot;: &quot;UINT8&quot;,</span></div><div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;<span class="stringliteral">                            &quot;buffer&quot;: 1,</span></div><div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;<span class="stringliteral">                            &quot;name&quot;: &quot;scores&quot;,</span></div><div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;<span class="stringliteral">                            &quot;quantization&quot;: {</span></div><div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;<span class="stringliteral">                                &quot;min&quot;: [0.0],</span></div><div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;<span class="stringliteral">                                &quot;max&quot;: [255.0],</span></div><div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;<span class="stringliteral">                                &quot;scale&quot;: [0.01],</span></div><div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;<span class="stringliteral">                                &quot;zero_point&quot;: [0]</span></div><div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;<span class="stringliteral">                            }</span></div><div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;<span class="stringliteral">                        },</span></div><div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;<span class="stringliteral">                        {</span></div><div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;<span class="stringliteral">                            &quot;shape&quot;: [6, 4],</span></div><div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;<span class="stringliteral">                            &quot;type&quot;: &quot;UINT8&quot;,</span></div><div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;<span class="stringliteral">                            &quot;buffer&quot;: 2,</span></div><div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;<span class="stringliteral">                            &quot;name&quot;: &quot;anchors&quot;,</span></div><div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;<span class="stringliteral">                            &quot;quantization&quot;: {</span></div><div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;<span class="stringliteral">                                &quot;min&quot;: [0.0],</span></div><div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;<span class="stringliteral">                                &quot;max&quot;: [255.0],</span></div><div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;<span class="stringliteral">                                &quot;scale&quot;: [0.5],</span></div><div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;<span class="stringliteral">                                &quot;zero_point&quot;: [0]</span></div><div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;<span class="stringliteral">                            }</span></div><div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;<span class="stringliteral">                        },</span></div><div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;<span class="stringliteral">                        {</span></div><div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;<span class="stringliteral">                            &quot;type&quot;: &quot;FLOAT32&quot;,</span></div><div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;<span class="stringliteral">                            &quot;buffer&quot;: 3,</span></div><div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;<span class="stringliteral">                            &quot;name&quot;: &quot;detection_boxes&quot;,</span></div><div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;<span class="stringliteral">                            &quot;quantization&quot;: {}</span></div><div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;<span class="stringliteral">                        },</span></div><div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;<span class="stringliteral">                        {</span></div><div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;<span class="stringliteral">                            &quot;type&quot;: &quot;FLOAT32&quot;,</span></div><div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;<span class="stringliteral">                            &quot;buffer&quot;: 4,</span></div><div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;<span class="stringliteral">                            &quot;name&quot;: &quot;detection_classes&quot;,</span></div><div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;<span class="stringliteral">                            &quot;quantization&quot;: {}</span></div><div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;<span class="stringliteral">                        },</span></div><div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;<span class="stringliteral">                        {</span></div><div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;<span class="stringliteral">                            &quot;type&quot;: &quot;FLOAT32&quot;,</span></div><div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;<span class="stringliteral">                            &quot;buffer&quot;: 5,</span></div><div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;<span class="stringliteral">                            &quot;name&quot;: &quot;detection_scores&quot;,</span></div><div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;<span class="stringliteral">                            &quot;quantization&quot;: {}</span></div><div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;<span class="stringliteral">                        },</span></div><div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;<span class="stringliteral">                        {</span></div><div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;<span class="stringliteral">                            &quot;type&quot;: &quot;FLOAT32&quot;,</span></div><div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;<span class="stringliteral">                            &quot;buffer&quot;: 6,</span></div><div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;<span class="stringliteral">                            &quot;name&quot;: &quot;num_detections&quot;,</span></div><div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;<span class="stringliteral">                            &quot;quantization&quot;: {}</span></div><div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;<span class="stringliteral">                        }</span></div><div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;<span class="stringliteral">                    ],</span></div><div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;<span class="stringliteral">                    &quot;inputs&quot;: [0, 1, 2],</span></div><div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;<span class="stringliteral">                    &quot;outputs&quot;: [3, 4, 5, 6],</span></div><div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;<span class="stringliteral">                    &quot;operators&quot;: [{</span></div><div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;<span class="stringliteral">                        &quot;opcode_index&quot;: 0,</span></div><div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;<span class="stringliteral">                        &quot;inputs&quot;: [0, 1, 2],</span></div><div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;<span class="stringliteral">                        &quot;outputs&quot;: [3, 4, 5, 6],</span></div><div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;<span class="stringliteral">                        &quot;builtin_options_type&quot;: 0,</span></div><div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;<span class="stringliteral">                        &quot;custom_options&quot;: [)&quot; + custom_options + R</span><span class="stringliteral">&quot;(],</span></div><div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;<span class="stringliteral">                        &quot;custom_options_format&quot;: &quot;FLEXBUFFERS&quot;</span></div><div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;<span class="stringliteral">                    }]</span></div><div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;<span class="stringliteral">                }],</span></div><div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;<span class="stringliteral">                &quot;buffers&quot;: [{},</span></div><div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;<span class="stringliteral">                    {},</span></div><div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;<span class="stringliteral">                    { &quot;data&quot;: [ 1, 1,   2, 2,</span></div><div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;<span class="stringliteral">                                1, 1,   2, 2,</span></div><div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;<span class="stringliteral">                                1, 1,   2, 2,</span></div><div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;<span class="stringliteral">                                1, 21,  2, 2,</span></div><div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;<span class="stringliteral">                                1, 21,  2, 2,</span></div><div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;<span class="stringliteral">                                1, 201, 2, 2]},</span></div><div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;<span class="stringliteral">                    {},</span></div><div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;<span class="stringliteral">                    {},</span></div><div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;<span class="stringliteral">                    {},</span></div><div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;<span class="stringliteral">                    {},</span></div><div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;<span class="stringliteral">                ]</span></div><div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;<span class="stringliteral">            }</span></div><div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;<span class="stringliteral">        )&quot;;</span></div><div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;<span class="stringliteral">    }</span></div><div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;<span class="stringliteral">};</span></div><div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;<span class="stringliteral"></span></div><div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;<span class="stringliteral"></span><span class="keyword">struct </span>ParseDetectionPostProcessCustomOptions : DetectionPostProcessFixture</div><div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;{</div><div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;<span class="keyword">private</span>:</div><div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;    <span class="keyword">static</span> <a class="code" href="structarmnn_1_1_detection_post_process_descriptor.xhtml">armnn::DetectionPostProcessDescriptor</a> GenerateDescriptor()</div><div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;    {</div><div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;        <span class="keyword">static</span> <a class="code" href="structarmnn_1_1_detection_post_process_descriptor.xhtml">armnn::DetectionPostProcessDescriptor</a> descriptor;</div><div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;        descriptor.<a class="code" href="structarmnn_1_1_detection_post_process_descriptor.xhtml#a7ed9bc7c26df67d274d5dd4cd83adf0f">m_UseRegularNms</a>          = <span class="keyword">true</span>;</div><div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;        descriptor.<a class="code" href="structarmnn_1_1_detection_post_process_descriptor.xhtml#ae72089bcab60ac175557f4241b16a014">m_MaxDetections</a>          = 3u;</div><div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;        descriptor.<a class="code" href="structarmnn_1_1_detection_post_process_descriptor.xhtml#a9ae2c9796692ebeafe19a4d3f09c8ea8">m_MaxClassesPerDetection</a> = 1u;</div><div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;        descriptor.<a class="code" href="structarmnn_1_1_detection_post_process_descriptor.xhtml#a7e2f87544b8bc7e497e1dec8d3ca4055">m_DetectionsPerClass</a>     = 1u;</div><div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;        descriptor.<a class="code" href="structarmnn_1_1_detection_post_process_descriptor.xhtml#a3a04b0ccee4bb2f21721ee5045e83df4">m_NumClasses</a>             = 2u;</div><div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;        descriptor.<a class="code" href="structarmnn_1_1_detection_post_process_descriptor.xhtml#a4392dd6b4862cc9cf95ae8f1001ba592">m_NmsScoreThreshold</a>      = 0.0f;</div><div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;        descriptor.<a class="code" href="structarmnn_1_1_detection_post_process_descriptor.xhtml#a53c8a7f33a40e1e240256bcfcf41b101">m_NmsIouThreshold</a>        = 0.5f;</div><div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;        descriptor.<a class="code" href="structarmnn_1_1_detection_post_process_descriptor.xhtml#aa61510cbd529870182e918ac6e8b9d72">m_ScaleH</a>                 = 5.0f;</div><div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;        descriptor.<a class="code" href="structarmnn_1_1_detection_post_process_descriptor.xhtml#ab509802c659de19929f18bad14a35c58">m_ScaleW</a>                 = 5.0f;</div><div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;        descriptor.<a class="code" href="structarmnn_1_1_detection_post_process_descriptor.xhtml#ae64523937ea910030ad66fee6fddd51f">m_ScaleX</a>                 = 10.0f;</div><div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;        descriptor.<a class="code" href="structarmnn_1_1_detection_post_process_descriptor.xhtml#a7a2156ec7d9c012ce00bbcc6afcb9028">m_ScaleY</a>                 = 10.0f;</div><div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;</div><div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;        <span class="keywordflow">return</span> descriptor;</div><div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;    }</div><div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;</div><div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;<span class="keyword">public</span>:</div><div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;    ParseDetectionPostProcessCustomOptions()</div><div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;        : DetectionPostProcessFixture(</div><div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160;            GenerateDetectionPostProcessJsonString(GenerateDescriptor()))</div><div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;    {}</div><div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160;};</div><div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160;</div><div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160;<a class="code" href="_mem_copy_tests_8cpp.xhtml#a3df1acc0ccc35bce0bd6c027e23e2c45">TEST_CASE_FIXTURE</a>(ParseDetectionPostProcessCustomOptions, <span class="stringliteral">&quot;ParseDetectionPostProcess&quot;</span>)</div><div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160;{</div><div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160;    Setup();</div><div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;</div><div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160;    <span class="comment">// Inputs</span></div><div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160;    <span class="keyword">using</span> UnquantizedContainer = std::vector&lt;float&gt;;</div><div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160;    UnquantizedContainer boxEncodings =</div><div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160;    {</div><div class="line"><a name="l00169"></a><span class="lineno">  169</span>&#160;        0.0f,  0.0f, 0.0f, 0.0f,</div><div class="line"><a name="l00170"></a><span class="lineno">  170</span>&#160;        0.0f,  1.0f, 0.0f, 0.0f,</div><div class="line"><a name="l00171"></a><span class="lineno">  171</span>&#160;        0.0f, -1.0f, 0.0f, 0.0f,</div><div class="line"><a name="l00172"></a><span class="lineno">  172</span>&#160;        0.0f,  0.0f, 0.0f, 0.0f,</div><div class="line"><a name="l00173"></a><span class="lineno">  173</span>&#160;        0.0f,  1.0f, 0.0f, 0.0f,</div><div class="line"><a name="l00174"></a><span class="lineno">  174</span>&#160;        0.0f,  0.0f, 0.0f, 0.0f</div><div class="line"><a name="l00175"></a><span class="lineno">  175</span>&#160;    };</div><div class="line"><a name="l00176"></a><span class="lineno">  176</span>&#160;</div><div class="line"><a name="l00177"></a><span class="lineno">  177</span>&#160;    UnquantizedContainer scores =</div><div class="line"><a name="l00178"></a><span class="lineno">  178</span>&#160;    {</div><div class="line"><a name="l00179"></a><span class="lineno">  179</span>&#160;        0.0f, 0.9f,  0.8f,</div><div class="line"><a name="l00180"></a><span class="lineno">  180</span>&#160;        0.0f, 0.75f, 0.72f,</div><div class="line"><a name="l00181"></a><span class="lineno">  181</span>&#160;        0.0f, 0.6f,  0.5f,</div><div class="line"><a name="l00182"></a><span class="lineno">  182</span>&#160;        0.0f, 0.93f, 0.95f,</div><div class="line"><a name="l00183"></a><span class="lineno">  183</span>&#160;        0.0f, 0.5f,  0.4f,</div><div class="line"><a name="l00184"></a><span class="lineno">  184</span>&#160;        0.0f, 0.3f,  0.2f</div><div class="line"><a name="l00185"></a><span class="lineno">  185</span>&#160;    };</div><div class="line"><a name="l00186"></a><span class="lineno">  186</span>&#160;</div><div class="line"><a name="l00187"></a><span class="lineno">  187</span>&#160;    <span class="comment">// Outputs</span></div><div class="line"><a name="l00188"></a><span class="lineno">  188</span>&#160;    UnquantizedContainer detectionBoxes =</div><div class="line"><a name="l00189"></a><span class="lineno">  189</span>&#160;    {</div><div class="line"><a name="l00190"></a><span class="lineno">  190</span>&#160;        0.0f, 10.0f, 1.0f, 11.0f,</div><div class="line"><a name="l00191"></a><span class="lineno">  191</span>&#160;        0.0f, 10.0f, 1.0f, 11.0f,</div><div class="line"><a name="l00192"></a><span class="lineno">  192</span>&#160;        0.0f, 0.0f,  0.0f, 0.0f</div><div class="line"><a name="l00193"></a><span class="lineno">  193</span>&#160;    };</div><div class="line"><a name="l00194"></a><span class="lineno">  194</span>&#160;</div><div class="line"><a name="l00195"></a><span class="lineno">  195</span>&#160;    UnquantizedContainer detectionClasses = { 1.0f,  0.0f,  0.0f };</div><div class="line"><a name="l00196"></a><span class="lineno">  196</span>&#160;    UnquantizedContainer detectionScores  = { 0.95f, 0.93f, 0.0f };</div><div class="line"><a name="l00197"></a><span class="lineno">  197</span>&#160;</div><div class="line"><a name="l00198"></a><span class="lineno">  198</span>&#160;    UnquantizedContainer numDetections    = { 2.0f };</div><div class="line"><a name="l00199"></a><span class="lineno">  199</span>&#160;</div><div class="line"><a name="l00200"></a><span class="lineno">  200</span>&#160;    <span class="comment">// Quantize inputs and outputs</span></div><div class="line"><a name="l00201"></a><span class="lineno">  201</span>&#160;    <span class="keyword">using</span> QuantizedContainer = std::vector&lt;uint8_t&gt;;</div><div class="line"><a name="l00202"></a><span class="lineno">  202</span>&#160;</div><div class="line"><a name="l00203"></a><span class="lineno">  203</span>&#160;    QuantizedContainer quantBoxEncodings = armnnUtils::QuantizedVector&lt;uint8_t&gt;(boxEncodings, 1.00f, 1);</div><div class="line"><a name="l00204"></a><span class="lineno">  204</span>&#160;    QuantizedContainer quantScores       = armnnUtils::QuantizedVector&lt;uint8_t&gt;(scores,       0.01f, 0);</div><div class="line"><a name="l00205"></a><span class="lineno">  205</span>&#160;</div><div class="line"><a name="l00206"></a><span class="lineno">  206</span>&#160;    std::map&lt;std::string, QuantizedContainer&gt; input =</div><div class="line"><a name="l00207"></a><span class="lineno">  207</span>&#160;    {</div><div class="line"><a name="l00208"></a><span class="lineno">  208</span>&#160;        { <span class="stringliteral">&quot;box_encodings&quot;</span>, quantBoxEncodings },</div><div class="line"><a name="l00209"></a><span class="lineno">  209</span>&#160;        { <span class="stringliteral">&quot;scores&quot;</span>, quantScores }</div><div class="line"><a name="l00210"></a><span class="lineno">  210</span>&#160;    };</div><div class="line"><a name="l00211"></a><span class="lineno">  211</span>&#160;</div><div class="line"><a name="l00212"></a><span class="lineno">  212</span>&#160;    std::map&lt;std::string, UnquantizedContainer&gt; output =</div><div class="line"><a name="l00213"></a><span class="lineno">  213</span>&#160;    {</div><div class="line"><a name="l00214"></a><span class="lineno">  214</span>&#160;        { <span class="stringliteral">&quot;detection_boxes&quot;</span>, detectionBoxes},</div><div class="line"><a name="l00215"></a><span class="lineno">  215</span>&#160;        { <span class="stringliteral">&quot;detection_classes&quot;</span>, detectionClasses},</div><div class="line"><a name="l00216"></a><span class="lineno">  216</span>&#160;        { <span class="stringliteral">&quot;detection_scores&quot;</span>, detectionScores},</div><div class="line"><a name="l00217"></a><span class="lineno">  217</span>&#160;        { <span class="stringliteral">&quot;num_detections&quot;</span>, numDetections}</div><div class="line"><a name="l00218"></a><span class="lineno">  218</span>&#160;    };</div><div class="line"><a name="l00219"></a><span class="lineno">  219</span>&#160;</div><div class="line"><a name="l00220"></a><span class="lineno">  220</span>&#160;    RunTest&lt;armnn::DataType::QAsymmU8, armnn::DataType::Float32&gt;(0, input, output);</div><div class="line"><a name="l00221"></a><span class="lineno">  221</span>&#160;}</div><div class="line"><a name="l00222"></a><span class="lineno">  222</span>&#160;</div><div class="line"><a name="l00223"></a><span class="lineno">  223</span>&#160;<a class="code" href="_mem_copy_tests_8cpp.xhtml#a3df1acc0ccc35bce0bd6c027e23e2c45">TEST_CASE_FIXTURE</a>(ParseDetectionPostProcessCustomOptions, <span class="stringliteral">&quot;DetectionPostProcessGraphStructureTest&quot;</span>)</div><div class="line"><a name="l00224"></a><span class="lineno">  224</span>&#160;{</div><div class="line"><a name="l00225"></a><span class="lineno">  225</span>&#160;    <span class="comment">/*</span></div><div class="line"><a name="l00226"></a><span class="lineno">  226</span>&#160;<span class="comment">       Inputs:            box_encodings  scores</span></div><div class="line"><a name="l00227"></a><span class="lineno">  227</span>&#160;<span class="comment">                               \          /</span></div><div class="line"><a name="l00228"></a><span class="lineno">  228</span>&#160;<span class="comment">                            DetectionPostProcess</span></div><div class="line"><a name="l00229"></a><span class="lineno">  229</span>&#160;<span class="comment">                          /        /     \       \</span></div><div class="line"><a name="l00230"></a><span class="lineno">  230</span>&#160;<span class="comment">                         /        /       \       \</span></div><div class="line"><a name="l00231"></a><span class="lineno">  231</span>&#160;<span class="comment">       Outputs:     detection detection detection num_detections</span></div><div class="line"><a name="l00232"></a><span class="lineno">  232</span>&#160;<span class="comment">                    boxes     classes   scores</span></div><div class="line"><a name="l00233"></a><span class="lineno">  233</span>&#160;<span class="comment">    */</span></div><div class="line"><a name="l00234"></a><span class="lineno">  234</span>&#160;</div><div class="line"><a name="l00235"></a><span class="lineno">  235</span>&#160;    ReadStringToBinary();</div><div class="line"><a name="l00236"></a><span class="lineno">  236</span>&#160;</div><div class="line"><a name="l00237"></a><span class="lineno">  237</span>&#160;    <a class="code" href="namespacearmnn.xhtml#ace74f6f9feb95a964a49d79458232703">armnn::INetworkPtr</a> network = m_Parser-&gt;CreateNetworkFromBinary(m_GraphBinary);</div><div class="line"><a name="l00238"></a><span class="lineno">  238</span>&#160;</div><div class="line"><a name="l00239"></a><span class="lineno">  239</span>&#160;    <span class="keyword">auto</span> optimized = <a class="code" href="namespacearmnn.xhtml#a82e98ef05fd67036d1195ba17174d685">Optimize</a>(*network, { <a class="code" href="namespacearmnn.xhtml#ae2f04a162585c0a5222a537efd5456aea83c2c4e9b658ccafbcbe6309c5d84c64">armnn::Compute::CpuRef</a> }, m_Runtime-&gt;GetDeviceSpec());</div><div class="line"><a name="l00240"></a><span class="lineno">  240</span>&#160;</div><div class="line"><a name="l00241"></a><span class="lineno">  241</span>&#160;    <a class="code" href="classarmnn_1_1_graph.xhtml">armnn::Graph</a>&amp; graph = <a class="code" href="namespacearmnn.xhtml#a6a2659750d6161b693d0e51616791959">GetGraphForTesting</a>(optimized.get());</div><div class="line"><a name="l00242"></a><span class="lineno">  242</span>&#160;</div><div class="line"><a name="l00243"></a><span class="lineno">  243</span>&#160;    <span class="comment">// Check the number of layers in the graph</span></div><div class="line"><a name="l00244"></a><span class="lineno">  244</span>&#160;    CHECK((graph.GetNumInputs() == 2));</div><div class="line"><a name="l00245"></a><span class="lineno">  245</span>&#160;    CHECK((graph.GetNumOutputs() == 4));</div><div class="line"><a name="l00246"></a><span class="lineno">  246</span>&#160;    CHECK((graph.GetNumLayers() == 7));</div><div class="line"><a name="l00247"></a><span class="lineno">  247</span>&#160;</div><div class="line"><a name="l00248"></a><span class="lineno">  248</span>&#160;    <span class="comment">// Input layers</span></div><div class="line"><a name="l00249"></a><span class="lineno">  249</span>&#160;    <a class="code" href="classarmnn_1_1_layer.xhtml">armnn::Layer</a>* boxEncodingLayer = <a class="code" href="_graph_utils_8cpp.xhtml#a5f17e02e0054dac0a691685a0464ed36">GetFirstLayerWithName</a>(graph, <span class="stringliteral">&quot;box_encodings&quot;</span>);</div><div class="line"><a name="l00250"></a><span class="lineno">  250</span>&#160;    CHECK((boxEncodingLayer-&gt;<a class="code" href="classarmnn_1_1_layer.xhtml#ad8e15c530c929ab823d89ae9fd2d3f11">GetType</a>() == <a class="code" href="namespacearmnn.xhtml#a56943a0946e5f15e5e58054b8e7a04a4a324118a6721dd6b8a9b9f4e327df2bf5">armnn::LayerType::Input</a>));</div><div class="line"><a name="l00251"></a><span class="lineno">  251</span>&#160;    CHECK(<a class="code" href="_graph_utils_8cpp.xhtml#a4c04337db4d5f380219a005657a8223b">CheckNumberOfInputSlot</a>(boxEncodingLayer, 0));</div><div class="line"><a name="l00252"></a><span class="lineno">  252</span>&#160;    CHECK(<a class="code" href="_graph_utils_8cpp.xhtml#aada2e27f100807f5786eecb03390ba58">CheckNumberOfOutputSlot</a>(boxEncodingLayer, 1));</div><div class="line"><a name="l00253"></a><span class="lineno">  253</span>&#160;</div><div class="line"><a name="l00254"></a><span class="lineno">  254</span>&#160;    <a class="code" href="classarmnn_1_1_layer.xhtml">armnn::Layer</a>* scoresLayer = <a class="code" href="_graph_utils_8cpp.xhtml#a5f17e02e0054dac0a691685a0464ed36">GetFirstLayerWithName</a>(graph, <span class="stringliteral">&quot;scores&quot;</span>);</div><div class="line"><a name="l00255"></a><span class="lineno">  255</span>&#160;    CHECK((scoresLayer-&gt;<a class="code" href="classarmnn_1_1_layer.xhtml#ad8e15c530c929ab823d89ae9fd2d3f11">GetType</a>() == <a class="code" href="namespacearmnn.xhtml#a56943a0946e5f15e5e58054b8e7a04a4a324118a6721dd6b8a9b9f4e327df2bf5">armnn::LayerType::Input</a>));</div><div class="line"><a name="l00256"></a><span class="lineno">  256</span>&#160;    CHECK(<a class="code" href="_graph_utils_8cpp.xhtml#a4c04337db4d5f380219a005657a8223b">CheckNumberOfInputSlot</a>(scoresLayer, 0));</div><div class="line"><a name="l00257"></a><span class="lineno">  257</span>&#160;    CHECK(<a class="code" href="_graph_utils_8cpp.xhtml#aada2e27f100807f5786eecb03390ba58">CheckNumberOfOutputSlot</a>(scoresLayer, 1));</div><div class="line"><a name="l00258"></a><span class="lineno">  258</span>&#160;</div><div class="line"><a name="l00259"></a><span class="lineno">  259</span>&#160;    <span class="comment">// DetectionPostProcess layer</span></div><div class="line"><a name="l00260"></a><span class="lineno">  260</span>&#160;    <a class="code" href="classarmnn_1_1_layer.xhtml">armnn::Layer</a>* detectionPostProcessLayer = <a class="code" href="_graph_utils_8cpp.xhtml#a5f17e02e0054dac0a691685a0464ed36">GetFirstLayerWithName</a>(graph, <span class="stringliteral">&quot;DetectionPostProcess:0:0&quot;</span>);</div><div class="line"><a name="l00261"></a><span class="lineno">  261</span>&#160;    CHECK((detectionPostProcessLayer-&gt;<a class="code" href="classarmnn_1_1_layer.xhtml#ad8e15c530c929ab823d89ae9fd2d3f11">GetType</a>() == <a class="code" href="namespacearmnn.xhtml#a56943a0946e5f15e5e58054b8e7a04a4a1db19222ac424bd7162142ddf929fd2a">armnn::LayerType::DetectionPostProcess</a>));</div><div class="line"><a name="l00262"></a><span class="lineno">  262</span>&#160;    CHECK(<a class="code" href="_graph_utils_8cpp.xhtml#a4c04337db4d5f380219a005657a8223b">CheckNumberOfInputSlot</a>(detectionPostProcessLayer, 2));</div><div class="line"><a name="l00263"></a><span class="lineno">  263</span>&#160;    CHECK(<a class="code" href="_graph_utils_8cpp.xhtml#aada2e27f100807f5786eecb03390ba58">CheckNumberOfOutputSlot</a>(detectionPostProcessLayer, 4));</div><div class="line"><a name="l00264"></a><span class="lineno">  264</span>&#160;</div><div class="line"><a name="l00265"></a><span class="lineno">  265</span>&#160;    <span class="comment">// Output layers</span></div><div class="line"><a name="l00266"></a><span class="lineno">  266</span>&#160;    <a class="code" href="classarmnn_1_1_layer.xhtml">armnn::Layer</a>* detectionBoxesLayer = <a class="code" href="_graph_utils_8cpp.xhtml#a5f17e02e0054dac0a691685a0464ed36">GetFirstLayerWithName</a>(graph, <span class="stringliteral">&quot;detection_boxes&quot;</span>);</div><div class="line"><a name="l00267"></a><span class="lineno">  267</span>&#160;    CHECK((detectionBoxesLayer-&gt;<a class="code" href="classarmnn_1_1_layer.xhtml#ad8e15c530c929ab823d89ae9fd2d3f11">GetType</a>() == <a class="code" href="namespacearmnn.xhtml#a56943a0946e5f15e5e58054b8e7a04a4a29c2c02a361c9d7028472e5d92cd4a54">armnn::LayerType::Output</a>));</div><div class="line"><a name="l00268"></a><span class="lineno">  268</span>&#160;    CHECK(<a class="code" href="_graph_utils_8cpp.xhtml#a4c04337db4d5f380219a005657a8223b">CheckNumberOfInputSlot</a>(detectionBoxesLayer, 1));</div><div class="line"><a name="l00269"></a><span class="lineno">  269</span>&#160;    CHECK(<a class="code" href="_graph_utils_8cpp.xhtml#aada2e27f100807f5786eecb03390ba58">CheckNumberOfOutputSlot</a>(detectionBoxesLayer, 0));</div><div class="line"><a name="l00270"></a><span class="lineno">  270</span>&#160;</div><div class="line"><a name="l00271"></a><span class="lineno">  271</span>&#160;    <a class="code" href="classarmnn_1_1_layer.xhtml">armnn::Layer</a>* detectionClassesLayer = <a class="code" href="_graph_utils_8cpp.xhtml#a5f17e02e0054dac0a691685a0464ed36">GetFirstLayerWithName</a>(graph, <span class="stringliteral">&quot;detection_classes&quot;</span>);</div><div class="line"><a name="l00272"></a><span class="lineno">  272</span>&#160;    CHECK((detectionClassesLayer-&gt;<a class="code" href="classarmnn_1_1_layer.xhtml#ad8e15c530c929ab823d89ae9fd2d3f11">GetType</a>() == <a class="code" href="namespacearmnn.xhtml#a56943a0946e5f15e5e58054b8e7a04a4a29c2c02a361c9d7028472e5d92cd4a54">armnn::LayerType::Output</a>));</div><div class="line"><a name="l00273"></a><span class="lineno">  273</span>&#160;    CHECK(<a class="code" href="_graph_utils_8cpp.xhtml#a4c04337db4d5f380219a005657a8223b">CheckNumberOfInputSlot</a>(detectionClassesLayer, 1));</div><div class="line"><a name="l00274"></a><span class="lineno">  274</span>&#160;    CHECK(<a class="code" href="_graph_utils_8cpp.xhtml#aada2e27f100807f5786eecb03390ba58">CheckNumberOfOutputSlot</a>(detectionClassesLayer, 0));</div><div class="line"><a name="l00275"></a><span class="lineno">  275</span>&#160;</div><div class="line"><a name="l00276"></a><span class="lineno">  276</span>&#160;    <a class="code" href="classarmnn_1_1_layer.xhtml">armnn::Layer</a>* detectionScoresLayer = <a class="code" href="_graph_utils_8cpp.xhtml#a5f17e02e0054dac0a691685a0464ed36">GetFirstLayerWithName</a>(graph, <span class="stringliteral">&quot;detection_scores&quot;</span>);</div><div class="line"><a name="l00277"></a><span class="lineno">  277</span>&#160;    CHECK((detectionScoresLayer-&gt;<a class="code" href="classarmnn_1_1_layer.xhtml#ad8e15c530c929ab823d89ae9fd2d3f11">GetType</a>() == <a class="code" href="namespacearmnn.xhtml#a56943a0946e5f15e5e58054b8e7a04a4a29c2c02a361c9d7028472e5d92cd4a54">armnn::LayerType::Output</a>));</div><div class="line"><a name="l00278"></a><span class="lineno">  278</span>&#160;    CHECK(<a class="code" href="_graph_utils_8cpp.xhtml#a4c04337db4d5f380219a005657a8223b">CheckNumberOfInputSlot</a>(detectionScoresLayer, 1));</div><div class="line"><a name="l00279"></a><span class="lineno">  279</span>&#160;    CHECK(<a class="code" href="_graph_utils_8cpp.xhtml#aada2e27f100807f5786eecb03390ba58">CheckNumberOfOutputSlot</a>(detectionScoresLayer, 0));</div><div class="line"><a name="l00280"></a><span class="lineno">  280</span>&#160;</div><div class="line"><a name="l00281"></a><span class="lineno">  281</span>&#160;    <a class="code" href="classarmnn_1_1_layer.xhtml">armnn::Layer</a>* numDetectionsLayer = <a class="code" href="_graph_utils_8cpp.xhtml#a5f17e02e0054dac0a691685a0464ed36">GetFirstLayerWithName</a>(graph, <span class="stringliteral">&quot;num_detections&quot;</span>);</div><div class="line"><a name="l00282"></a><span class="lineno">  282</span>&#160;    CHECK((numDetectionsLayer-&gt;<a class="code" href="classarmnn_1_1_layer.xhtml#ad8e15c530c929ab823d89ae9fd2d3f11">GetType</a>() == <a class="code" href="namespacearmnn.xhtml#a56943a0946e5f15e5e58054b8e7a04a4a29c2c02a361c9d7028472e5d92cd4a54">armnn::LayerType::Output</a>));</div><div class="line"><a name="l00283"></a><span class="lineno">  283</span>&#160;    CHECK(<a class="code" href="_graph_utils_8cpp.xhtml#a4c04337db4d5f380219a005657a8223b">CheckNumberOfInputSlot</a>(numDetectionsLayer, 1));</div><div class="line"><a name="l00284"></a><span class="lineno">  284</span>&#160;    CHECK(<a class="code" href="_graph_utils_8cpp.xhtml#aada2e27f100807f5786eecb03390ba58">CheckNumberOfOutputSlot</a>(numDetectionsLayer, 0));</div><div class="line"><a name="l00285"></a><span class="lineno">  285</span>&#160;</div><div class="line"><a name="l00286"></a><span class="lineno">  286</span>&#160;    <span class="comment">// Check the connections</span></div><div class="line"><a name="l00287"></a><span class="lineno">  287</span>&#160;    <a class="code" href="classarmnn_1_1_tensor_info.xhtml">armnn::TensorInfo</a> boxEncodingTensor(<a class="code" href="classarmnn_1_1_tensor_shape.xhtml">armnn::TensorShape</a>({ 1, 6, 4 }), <a class="code" href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a0a3f57c876f5a230244c38e1453a8a6e">armnn::DataType::QAsymmU8</a>, 1, 1);</div><div class="line"><a name="l00288"></a><span class="lineno">  288</span>&#160;    <a class="code" href="classarmnn_1_1_tensor_info.xhtml">armnn::TensorInfo</a> scoresTensor(<a class="code" href="classarmnn_1_1_tensor_shape.xhtml">armnn::TensorShape</a>({ 1, 6, 3 }), <a class="code" href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a0a3f57c876f5a230244c38e1453a8a6e">armnn::DataType::QAsymmU8</a>,</div><div class="line"><a name="l00289"></a><span class="lineno">  289</span>&#160;                                                      0.00999999978f, 0);</div><div class="line"><a name="l00290"></a><span class="lineno">  290</span>&#160;</div><div class="line"><a name="l00291"></a><span class="lineno">  291</span>&#160;    <a class="code" href="classarmnn_1_1_tensor_info.xhtml">armnn::TensorInfo</a> detectionBoxesTensor(<a class="code" href="classarmnn_1_1_tensor_shape.xhtml">armnn::TensorShape</a>({ 1, 3, 4 }), <a class="code" href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a166495adc0d0f53bee6baecc577f5204">armnn::DataType::Float32</a>, 0, 0);</div><div class="line"><a name="l00292"></a><span class="lineno">  292</span>&#160;    <a class="code" href="classarmnn_1_1_tensor_info.xhtml">armnn::TensorInfo</a> detectionClassesTensor(<a class="code" href="classarmnn_1_1_tensor_shape.xhtml">armnn::TensorShape</a>({ 1, 3 }), <a class="code" href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a166495adc0d0f53bee6baecc577f5204">armnn::DataType::Float32</a>, 0, 0);</div><div class="line"><a name="l00293"></a><span class="lineno">  293</span>&#160;    <a class="code" href="classarmnn_1_1_tensor_info.xhtml">armnn::TensorInfo</a> detectionScoresTensor(<a class="code" href="classarmnn_1_1_tensor_shape.xhtml">armnn::TensorShape</a>({ 1, 3 }), <a class="code" href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a166495adc0d0f53bee6baecc577f5204">armnn::DataType::Float32</a>, 0, 0);</div><div class="line"><a name="l00294"></a><span class="lineno">  294</span>&#160;    <a class="code" href="classarmnn_1_1_tensor_info.xhtml">armnn::TensorInfo</a> numDetectionsTensor(<a class="code" href="classarmnn_1_1_tensor_shape.xhtml">armnn::TensorShape</a>({ 1} ), <a class="code" href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a166495adc0d0f53bee6baecc577f5204">armnn::DataType::Float32</a>, 0, 0);</div><div class="line"><a name="l00295"></a><span class="lineno">  295</span>&#160;</div><div class="line"><a name="l00296"></a><span class="lineno">  296</span>&#160;    CHECK(<a class="code" href="_graph_utils_8cpp.xhtml#afd518dba3d52728670459e4ad3bed5e1">IsConnected</a>(boxEncodingLayer, detectionPostProcessLayer, 0, 0, boxEncodingTensor));</div><div class="line"><a name="l00297"></a><span class="lineno">  297</span>&#160;    CHECK(<a class="code" href="_graph_utils_8cpp.xhtml#afd518dba3d52728670459e4ad3bed5e1">IsConnected</a>(scoresLayer, detectionPostProcessLayer, 0, 1, scoresTensor));</div><div class="line"><a name="l00298"></a><span class="lineno">  298</span>&#160;    CHECK(<a class="code" href="_graph_utils_8cpp.xhtml#afd518dba3d52728670459e4ad3bed5e1">IsConnected</a>(detectionPostProcessLayer, detectionBoxesLayer, 0, 0, detectionBoxesTensor));</div><div class="line"><a name="l00299"></a><span class="lineno">  299</span>&#160;    CHECK(<a class="code" href="_graph_utils_8cpp.xhtml#afd518dba3d52728670459e4ad3bed5e1">IsConnected</a>(detectionPostProcessLayer, detectionClassesLayer, 1, 0, detectionClassesTensor));</div><div class="line"><a name="l00300"></a><span class="lineno">  300</span>&#160;    CHECK(<a class="code" href="_graph_utils_8cpp.xhtml#afd518dba3d52728670459e4ad3bed5e1">IsConnected</a>(detectionPostProcessLayer, detectionScoresLayer, 2, 0, detectionScoresTensor));</div><div class="line"><a name="l00301"></a><span class="lineno">  301</span>&#160;    CHECK(<a class="code" href="_graph_utils_8cpp.xhtml#afd518dba3d52728670459e4ad3bed5e1">IsConnected</a>(detectionPostProcessLayer, numDetectionsLayer, 3, 0, numDetectionsTensor));</div><div class="line"><a name="l00302"></a><span class="lineno">  302</span>&#160;}</div><div class="line"><a name="l00303"></a><span class="lineno">  303</span>&#160;</div><div class="line"><a name="l00304"></a><span class="lineno">  304</span>&#160;}</div><div class="ttc" id="structarmnn_1_1_detection_post_process_descriptor_xhtml_ab509802c659de19929f18bad14a35c58"><div class="ttname"><a href="structarmnn_1_1_detection_post_process_descriptor.xhtml#ab509802c659de19929f18bad14a35c58">armnn::DetectionPostProcessDescriptor::m_ScaleW</a></div><div class="ttdeci">float m_ScaleW</div><div class="ttdoc">Center size encoding scale weight. </div><div class="ttdef"><b>Definition:</b> <a href="_descriptors_8hpp_source.xhtml#l00723">Descriptors.hpp:723</a></div></div>
<div class="ttc" id="namespacearmnn_xhtml_ae2f04a162585c0a5222a537efd5456aea83c2c4e9b658ccafbcbe6309c5d84c64"><div class="ttname"><a href="namespacearmnn.xhtml#ae2f04a162585c0a5222a537efd5456aea83c2c4e9b658ccafbcbe6309c5d84c64">armnn::Compute::CpuRef</a></div><div class="ttdoc">CPU Execution: Reference C++ kernels. </div></div>
<div class="ttc" id="_graph_utils_8cpp_xhtml_a5f17e02e0054dac0a691685a0464ed36"><div class="ttname"><a href="_graph_utils_8cpp.xhtml#a5f17e02e0054dac0a691685a0464ed36">GetFirstLayerWithName</a></div><div class="ttdeci">armnn::Layer * GetFirstLayerWithName(armnn::Graph &amp;graph, const std::string &amp;name)</div><div class="ttdef"><b>Definition:</b> <a href="_graph_utils_8cpp_source.xhtml#l00022">GraphUtils.cpp:22</a></div></div>
<div class="ttc" id="classarmnn_1_1_tensor_info_xhtml"><div class="ttname"><a href="classarmnn_1_1_tensor_info.xhtml">armnn::TensorInfo</a></div><div class="ttdef"><b>Definition:</b> <a href="_tensor_8hpp_source.xhtml#l00152">Tensor.hpp:152</a></div></div>
<div class="ttc" id="_quantize_helper_8hpp_xhtml"><div class="ttname"><a href="_quantize_helper_8hpp.xhtml">QuantizeHelper.hpp</a></div></div>
<div class="ttc" id="structarmnn_1_1_detection_post_process_descriptor_xhtml_ae64523937ea910030ad66fee6fddd51f"><div class="ttname"><a href="structarmnn_1_1_detection_post_process_descriptor.xhtml#ae64523937ea910030ad66fee6fddd51f">armnn::DetectionPostProcessDescriptor::m_ScaleX</a></div><div class="ttdeci">float m_ScaleX</div><div class="ttdoc">Center size encoding scale x. </div><div class="ttdef"><b>Definition:</b> <a href="_descriptors_8hpp_source.xhtml#l00719">Descriptors.hpp:719</a></div></div>
<div class="ttc" id="namespacearmnn_xhtml_a56943a0946e5f15e5e58054b8e7a04a4a29c2c02a361c9d7028472e5d92cd4a54"><div class="ttname"><a href="namespacearmnn.xhtml#a56943a0946e5f15e5e58054b8e7a04a4a29c2c02a361c9d7028472e5d92cd4a54">armnn::LayerType::Output</a></div></div>
<div class="ttc" id="structarmnn_1_1_detection_post_process_descriptor_xhtml_a7e2f87544b8bc7e497e1dec8d3ca4055"><div class="ttname"><a href="structarmnn_1_1_detection_post_process_descriptor.xhtml#a7e2f87544b8bc7e497e1dec8d3ca4055">armnn::DetectionPostProcessDescriptor::m_DetectionsPerClass</a></div><div class="ttdeci">uint32_t m_DetectionsPerClass</div><div class="ttdoc">Detections per classes, used in Regular NMS. </div><div class="ttdef"><b>Definition:</b> <a href="_descriptors_8hpp_source.xhtml#l00709">Descriptors.hpp:709</a></div></div>
<div class="ttc" id="armnn_tf_lite_parser_2test_2_detection_post_process_8cpp_xhtml_ad65209cbd698e125235373d218cf6b41"><div class="ttname"><a href="armnn_tf_lite_parser_2test_2_detection_post_process_8cpp.xhtml#ad65209cbd698e125235373d218cf6b41">TEST_SUITE</a></div><div class="ttdeci">TEST_SUITE(&quot;TensorflowLiteParser_DetectionPostProcess&quot;)</div><div class="ttdef"><b>Definition:</b> <a href="armnn_tf_lite_parser_2test_2_detection_post_process_8cpp_source.xhtml#l00014">DetectionPostProcess.cpp:14</a></div></div>
<div class="ttc" id="struct_parser_flatbuffers_fixture_xhtml"><div class="ttname"><a href="struct_parser_flatbuffers_fixture.xhtml">ParserFlatbuffersFixture</a></div><div class="ttdef"><b>Definition:</b> <a href="_parser_flatbuffers_fixture_8hpp_source.xhtml#l00035">ParserFlatbuffersFixture.hpp:35</a></div></div>
<div class="ttc" id="classarmnn_1_1_tensor_shape_xhtml"><div class="ttname"><a href="classarmnn_1_1_tensor_shape.xhtml">armnn::TensorShape</a></div><div class="ttdef"><b>Definition:</b> <a href="_tensor_8hpp_source.xhtml#l00020">Tensor.hpp:20</a></div></div>
<div class="ttc" id="structarmnn_1_1_detection_post_process_descriptor_xhtml_a9ae2c9796692ebeafe19a4d3f09c8ea8"><div class="ttname"><a href="structarmnn_1_1_detection_post_process_descriptor.xhtml#a9ae2c9796692ebeafe19a4d3f09c8ea8">armnn::DetectionPostProcessDescriptor::m_MaxClassesPerDetection</a></div><div class="ttdeci">uint32_t m_MaxClassesPerDetection</div><div class="ttdoc">Maximum numbers of classes per detection, used in Fast NMS. </div><div class="ttdef"><b>Definition:</b> <a href="_descriptors_8hpp_source.xhtml#l00707">Descriptors.hpp:707</a></div></div>
<div class="ttc" id="_polymorphic_downcast_8hpp_xhtml"><div class="ttname"><a href="_polymorphic_downcast_8hpp.xhtml">PolymorphicDowncast.hpp</a></div></div>
<div class="ttc" id="structarmnn_1_1_detection_post_process_descriptor_xhtml_ae72089bcab60ac175557f4241b16a014"><div class="ttname"><a href="structarmnn_1_1_detection_post_process_descriptor.xhtml#ae72089bcab60ac175557f4241b16a014">armnn::DetectionPostProcessDescriptor::m_MaxDetections</a></div><div class="ttdeci">uint32_t m_MaxDetections</div><div class="ttdoc">Maximum numbers of detections. </div><div class="ttdef"><b>Definition:</b> <a href="_descriptors_8hpp_source.xhtml#l00705">Descriptors.hpp:705</a></div></div>
<div class="ttc" id="_mem_copy_tests_8cpp_xhtml_a3df1acc0ccc35bce0bd6c027e23e2c45"><div class="ttname"><a href="_mem_copy_tests_8cpp.xhtml#a3df1acc0ccc35bce0bd6c027e23e2c45">TEST_CASE_FIXTURE</a></div><div class="ttdeci">TEST_CASE_FIXTURE(ClContextControlFixture, &quot;CopyBetweenNeonAndGpu&quot;)</div><div class="ttdef"><b>Definition:</b> <a href="_mem_copy_tests_8cpp_source.xhtml#l00089">MemCopyTests.cpp:89</a></div></div>
<div class="ttc" id="namespacearmnn_xhtml_a56943a0946e5f15e5e58054b8e7a04a4a1db19222ac424bd7162142ddf929fd2a"><div class="ttname"><a href="namespacearmnn.xhtml#a56943a0946e5f15e5e58054b8e7a04a4a1db19222ac424bd7162142ddf929fd2a">armnn::LayerType::DetectionPostProcess</a></div></div>
<div class="ttc" id="structarmnn_1_1_detection_post_process_descriptor_xhtml_a53c8a7f33a40e1e240256bcfcf41b101"><div class="ttname"><a href="structarmnn_1_1_detection_post_process_descriptor.xhtml#a53c8a7f33a40e1e240256bcfcf41b101">armnn::DetectionPostProcessDescriptor::m_NmsIouThreshold</a></div><div class="ttdeci">float m_NmsIouThreshold</div><div class="ttdoc">Intersection over union threshold. </div><div class="ttdef"><b>Definition:</b> <a href="_descriptors_8hpp_source.xhtml#l00713">Descriptors.hpp:713</a></div></div>
<div class="ttc" id="namespacearmnn_xhtml_a82e98ef05fd67036d1195ba17174d685"><div class="ttname"><a href="namespacearmnn.xhtml#a82e98ef05fd67036d1195ba17174d685">armnn::Optimize</a></div><div class="ttdeci">IOptimizedNetworkPtr Optimize(const INetwork &amp;network, const std::vector&lt; BackendId &gt; &amp;backendPreferences, const IDeviceSpec &amp;deviceSpec, const OptimizerOptions &amp;options=OptimizerOptions(), Optional&lt; std::vector&lt; std::string &gt; &amp;&gt; messages=EmptyOptional())</div><div class="ttdoc">Create an optimized version of the network. </div><div class="ttdef"><b>Definition:</b> <a href="_network_8cpp_source.xhtml#l01680">Network.cpp:1680</a></div></div>
<div class="ttc" id="namespacearmnn_xhtml_ad8ed01ff3ff33333d8e19db4d2818bb6a0a3f57c876f5a230244c38e1453a8a6e"><div class="ttname"><a href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a0a3f57c876f5a230244c38e1453a8a6e">armnn::DataType::QAsymmU8</a></div></div>
<div class="ttc" id="classarmnn_1_1_layer_xhtml_ad8e15c530c929ab823d89ae9fd2d3f11"><div class="ttname"><a href="classarmnn_1_1_layer.xhtml#ad8e15c530c929ab823d89ae9fd2d3f11">armnn::Layer::GetType</a></div><div class="ttdeci">LayerType GetType() const override</div><div class="ttdoc">Returns the armnn::LayerType of this layer. </div><div class="ttdef"><b>Definition:</b> <a href="_layer_8hpp_source.xhtml#l00270">Layer.hpp:270</a></div></div>
<div class="ttc" id="structarmnn_1_1_detection_post_process_descriptor_xhtml_a3a04b0ccee4bb2f21721ee5045e83df4"><div class="ttname"><a href="structarmnn_1_1_detection_post_process_descriptor.xhtml#a3a04b0ccee4bb2f21721ee5045e83df4">armnn::DetectionPostProcessDescriptor::m_NumClasses</a></div><div class="ttdeci">uint32_t m_NumClasses</div><div class="ttdoc">Number of classes. </div><div class="ttdef"><b>Definition:</b> <a href="_descriptors_8hpp_source.xhtml#l00715">Descriptors.hpp:715</a></div></div>
<div class="ttc" id="_parser_prototxt_fixture_8hpp_xhtml"><div class="ttname"><a href="_parser_prototxt_fixture_8hpp.xhtml">ParserPrototxtFixture.hpp</a></div></div>
<div class="ttc" id="structarmnn_1_1_detection_post_process_descriptor_xhtml_a7ed9bc7c26df67d274d5dd4cd83adf0f"><div class="ttname"><a href="structarmnn_1_1_detection_post_process_descriptor.xhtml#a7ed9bc7c26df67d274d5dd4cd83adf0f">armnn::DetectionPostProcessDescriptor::m_UseRegularNms</a></div><div class="ttdeci">bool m_UseRegularNms</div><div class="ttdoc">Use Regular NMS. </div><div class="ttdef"><b>Definition:</b> <a href="_descriptors_8hpp_source.xhtml#l00717">Descriptors.hpp:717</a></div></div>
<div class="ttc" id="classarmnn_1_1_graph_xhtml"><div class="ttname"><a href="classarmnn_1_1_graph.xhtml">armnn::Graph</a></div><div class="ttdef"><b>Definition:</b> <a href="_graph_8hpp_source.xhtml#l00030">Graph.hpp:30</a></div></div>
<div class="ttc" id="_parser_helper_8hpp_xhtml"><div class="ttname"><a href="_parser_helper_8hpp.xhtml">ParserHelper.hpp</a></div></div>
<div class="ttc" id="_graph_utils_8cpp_xhtml_afd518dba3d52728670459e4ad3bed5e1"><div class="ttname"><a href="_graph_utils_8cpp.xhtml#afd518dba3d52728670459e4ad3bed5e1">IsConnected</a></div><div class="ttdeci">bool IsConnected(armnn::Layer *srcLayer, armnn::Layer *destLayer, unsigned int srcSlot, unsigned int destSlot, const armnn::TensorInfo &amp;expectedTensorInfo)</div><div class="ttdef"><b>Definition:</b> <a href="_graph_utils_8cpp_source.xhtml#l00044">GraphUtils.cpp:44</a></div></div>
<div class="ttc" id="_parser_flatbuffers_fixture_8hpp_xhtml"><div class="ttname"><a href="_parser_flatbuffers_fixture_8hpp.xhtml">ParserFlatbuffersFixture.hpp</a></div></div>
<div class="ttc" id="structarmnn_1_1_detection_post_process_descriptor_xhtml_aa61510cbd529870182e918ac6e8b9d72"><div class="ttname"><a href="structarmnn_1_1_detection_post_process_descriptor.xhtml#aa61510cbd529870182e918ac6e8b9d72">armnn::DetectionPostProcessDescriptor::m_ScaleH</a></div><div class="ttdeci">float m_ScaleH</div><div class="ttdoc">Center size encoding scale height. </div><div class="ttdef"><b>Definition:</b> <a href="_descriptors_8hpp_source.xhtml#l00725">Descriptors.hpp:725</a></div></div>
<div class="ttc" id="namespacearmnn_xhtml_a6a2659750d6161b693d0e51616791959"><div class="ttname"><a href="namespacearmnn.xhtml#a6a2659750d6161b693d0e51616791959">armnn::GetGraphForTesting</a></div><div class="ttdeci">Graph &amp; GetGraphForTesting(IOptimizedNetwork *optNet)</div><div class="ttdef"><b>Definition:</b> <a href="_test_utils_8cpp_source.xhtml#l00047">TestUtils.cpp:47</a></div></div>
<div class="ttc" id="namespacearmnn_xhtml_a56943a0946e5f15e5e58054b8e7a04a4a324118a6721dd6b8a9b9f4e327df2bf5"><div class="ttname"><a href="namespacearmnn.xhtml#a56943a0946e5f15e5e58054b8e7a04a4a324118a6721dd6b8a9b9f4e327df2bf5">armnn::LayerType::Input</a></div></div>
<div class="ttc" id="namespacearmnn_xhtml_ad8ed01ff3ff33333d8e19db4d2818bb6a166495adc0d0f53bee6baecc577f5204"><div class="ttname"><a href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a166495adc0d0f53bee6baecc577f5204">armnn::DataType::Float32</a></div></div>
<div class="ttc" id="_graph_utils_8cpp_xhtml_a4c04337db4d5f380219a005657a8223b"><div class="ttname"><a href="_graph_utils_8cpp.xhtml#a4c04337db4d5f380219a005657a8223b">CheckNumberOfInputSlot</a></div><div class="ttdeci">bool CheckNumberOfInputSlot(armnn::Layer *layer, unsigned int num)</div><div class="ttdef"><b>Definition:</b> <a href="_graph_utils_8cpp_source.xhtml#l00034">GraphUtils.cpp:34</a></div></div>
<div class="ttc" id="_graph_utils_8cpp_xhtml_aada2e27f100807f5786eecb03390ba58"><div class="ttname"><a href="_graph_utils_8cpp.xhtml#aada2e27f100807f5786eecb03390ba58">CheckNumberOfOutputSlot</a></div><div class="ttdeci">bool CheckNumberOfOutputSlot(armnn::Layer *layer, unsigned int num)</div><div class="ttdef"><b>Definition:</b> <a href="_graph_utils_8cpp_source.xhtml#l00039">GraphUtils.cpp:39</a></div></div>
<div class="ttc" id="structarmnn_1_1_detection_post_process_descriptor_xhtml_a7a2156ec7d9c012ce00bbcc6afcb9028"><div class="ttname"><a href="structarmnn_1_1_detection_post_process_descriptor.xhtml#a7a2156ec7d9c012ce00bbcc6afcb9028">armnn::DetectionPostProcessDescriptor::m_ScaleY</a></div><div class="ttdeci">float m_ScaleY</div><div class="ttdoc">Center size encoding scale y. </div><div class="ttdef"><b>Definition:</b> <a href="_descriptors_8hpp_source.xhtml#l00721">Descriptors.hpp:721</a></div></div>
<div class="ttc" id="structarmnn_1_1_detection_post_process_descriptor_xhtml_a4392dd6b4862cc9cf95ae8f1001ba592"><div class="ttname"><a href="structarmnn_1_1_detection_post_process_descriptor.xhtml#a4392dd6b4862cc9cf95ae8f1001ba592">armnn::DetectionPostProcessDescriptor::m_NmsScoreThreshold</a></div><div class="ttdeci">float m_NmsScoreThreshold</div><div class="ttdoc">NMS score threshold. </div><div class="ttdef"><b>Definition:</b> <a href="_descriptors_8hpp_source.xhtml#l00711">Descriptors.hpp:711</a></div></div>
<div class="ttc" id="namespacearmnn_xhtml_ace74f6f9feb95a964a49d79458232703"><div class="ttname"><a href="namespacearmnn.xhtml#ace74f6f9feb95a964a49d79458232703">armnn::INetworkPtr</a></div><div class="ttdeci">std::unique_ptr&lt; INetwork, void(*)(INetwork *network)&gt; INetworkPtr</div><div class="ttdef"><b>Definition:</b> <a href="_i_network_8hpp_source.xhtml#l00241">INetwork.hpp:241</a></div></div>
<div class="ttc" id="structarmnn_1_1_detection_post_process_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_detection_post_process_descriptor.xhtml">armnn::DetectionPostProcessDescriptor</a></div><div class="ttdef"><b>Definition:</b> <a href="_descriptors_8hpp_source.xhtml#l00673">Descriptors.hpp:673</a></div></div>
<div class="ttc" id="classarmnn_1_1_layer_xhtml"><div class="ttname"><a href="classarmnn_1_1_layer.xhtml">armnn::Layer</a></div><div class="ttdef"><b>Definition:</b> <a href="_layer_8hpp_source.xhtml#l00215">Layer.hpp:215</a></div></div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="dir_68267d1309a1af8e8297ef4c3efbcdba.xhtml">src</a></li><li class="navelem"><a class="el" href="dir_510324e450b9df55f9aac2d01fae83d8.xhtml">armnnTfLiteParser</a></li><li class="navelem"><a class="el" href="dir_6d8d07609c57029a35488d2120e28fbd.xhtml">test</a></li><li class="navelem"><a class="el" href="armnn_tf_lite_parser_2test_2_detection_post_process_8cpp.xhtml">DetectionPostProcess.cpp</a></li>
    <li class="footer">Generated on Tue Feb 22 2022 11:39:31 for ArmNN by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.13 </li>
  </ul>
</div>
</body>
</html>
