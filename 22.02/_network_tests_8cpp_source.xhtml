<!-- Copyright (c) 2020 ARM Limited. -->
<!--                                 -->
<!-- SPDX-License-Identifier: MIT    -->
<!--                                 -->
<!-- HTML header for doxygen 1.8.13-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.13"/>
<meta name="robots" content="NOINDEX, NOFOLLOW" />
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>ArmNN: src/armnn/test/NetworkTests.cpp Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script><script type="text/javascript" src="http://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="stylesheet.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <img alt="ArmNN" src="Arm_NN_horizontal_blue.png" style="max-width: 10rem; margin-top: .5rem; margin-left 10px"/>
  <td style="padding-left: 0.5em;">
   <div id="projectname">
   &#160;<span id="projectnumber">22.02</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.13 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
$(document).ready(function(){initNavTree('_network_tests_8cpp_source.xhtml','');});
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="headertitle">
<div class="title">NetworkTests.cpp</div>  </div>
</div><!--header-->
<div class="contents">
<a href="_network_tests_8cpp.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="comment">//</span></div><div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="comment">// Copyright Â© 2017 Arm Ltd. All rights reserved.</span></div><div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="comment">// SPDX-License-Identifier: MIT</span></div><div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="comment">//</span></div><div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;</div><div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="preprocessor">#include &lt;<a class="code" href="test_2_graph_utils_8hpp.xhtml">GraphUtils.hpp</a>&gt;</span></div><div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;</div><div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="preprocessor">#include &lt;<a class="code" href="_layer_visitor_base_8hpp.xhtml">armnn/LayerVisitorBase.hpp</a>&gt;</span></div><div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;</div><div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="preprocessor">#include &lt;<a class="code" href="_network_8hpp.xhtml">Network.hpp</a>&gt;</span></div><div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;</div><div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;<span class="preprocessor">#include &lt;doctest/doctest.h&gt;</span></div><div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;</div><div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;<span class="keyword">namespace</span></div><div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;{</div><div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;</div><div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;<span class="keywordtype">bool</span> AreAllLayerInputSlotsConnected(<span class="keyword">const</span> <a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml">armnn::IConnectableLayer</a>&amp; layer)</div><div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;{</div><div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;    <span class="keywordtype">bool</span> allConnected = <span class="keyword">true</span>;</div><div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;    <span class="keywordflow">for</span> (<span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> i = 0; i &lt; layer.<a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml#a9c2cba04b6d7ace4fc2a2436b82a5a63">GetNumInputSlots</a>(); ++i)</div><div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;    {</div><div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;        <span class="keyword">const</span> <span class="keywordtype">bool</span> inputConnected = layer.<a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml#a6ec9e0eb66d7d6a01240492a0b18104c">GetInputSlot</a>(i).<a class="code" href="classarmnn_1_1_i_input_slot.xhtml#a81fbf6103761e55061b62ba989b00f10">GetConnection</a>() != <span class="keyword">nullptr</span>;</div><div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;        allConnected &amp;= inputConnected;</div><div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;    }</div><div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;    <span class="keywordflow">return</span> allConnected;</div><div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;}</div><div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;</div><div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;}</div><div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;</div><div class="line"><a name="l00030"></a><span class="lineno"><a class="line" href="_network_tests_8cpp.xhtml#a7d3b66e70c2891a6c725e0955301a19a">   30</a></span>&#160;<a class="code" href="_network_tests_8cpp.xhtml#a7d3b66e70c2891a6c725e0955301a19a">TEST_SUITE</a>(<span class="stringliteral">&quot;Network&quot;</span>)</div><div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;{</div><div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;TEST_CASE(<span class="stringliteral">&quot;LayerGuids&quot;</span>)</div><div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;{</div><div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;    <a class="code" href="classarmnn_1_1_network_impl.xhtml">armnn::NetworkImpl</a> net;</div><div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;    <a class="code" href="namespacearmnn.xhtml#afad4088a9a058114ee5f87246f87bf49">armnn::LayerGuid</a> inputId = net.<a class="code" href="classarmnn_1_1_network_impl.xhtml#aa6c1c42ea44777302e87ce0fad5ac510">AddInputLayer</a>(0)-&gt;<a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml#afb5e65c770f6cee222db8af7581541a6">GetGuid</a>();</div><div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;    <a class="code" href="namespacearmnn.xhtml#afad4088a9a058114ee5f87246f87bf49">armnn::LayerGuid</a> addId = net.<a class="code" href="classarmnn_1_1_network_impl.xhtml#a39f1b38d89c4de186742eafcbb3b1319">AddAdditionLayer</a>()-&gt;<a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml#afb5e65c770f6cee222db8af7581541a6">GetGuid</a>();</div><div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;    <a class="code" href="namespacearmnn.xhtml#afad4088a9a058114ee5f87246f87bf49">armnn::LayerGuid</a> outputId = net.<a class="code" href="classarmnn_1_1_network_impl.xhtml#af5790069aa11fd1c5bb2e17cecb06528">AddOutputLayer</a>(0)-&gt;<a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml#afb5e65c770f6cee222db8af7581541a6">GetGuid</a>();</div><div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;</div><div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;    CHECK(inputId != addId);</div><div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;    CHECK(addId != outputId);</div><div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;    CHECK(inputId != outputId);</div><div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;}</div><div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;</div><div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;TEST_CASE(<span class="stringliteral">&quot;NetworkBasic&quot;</span>)</div><div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;{</div><div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;    <a class="code" href="classarmnn_1_1_network_impl.xhtml">armnn::NetworkImpl</a> net;</div><div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;    CHECK(net.<a class="code" href="classarmnn_1_1_network_impl.xhtml#aff3fde909d22ed157046682e70129259">PrintGraph</a>() == <a class="code" href="namespacearmnn.xhtml#a67a0db04d321a74b7e7fcfd3f1a3f70ba505a83f220c02df2f85c3810cd9ceb38">armnn::Status::Success</a>);</div><div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;}</div><div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;</div><div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;TEST_CASE(<span class="stringliteral">&quot;LayerNamesAreOptionalForINetwork&quot;</span>)</div><div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;{</div><div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;    <a class="code" href="namespacearmnn.xhtml#ace74f6f9feb95a964a49d79458232703">armnn::INetworkPtr</a> inet(<a class="code" href="classarmnn_1_1_i_network.xhtml#a464f0ff87b1aabf71febaa71321dd40b">armnn::INetwork::Create</a>());</div><div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;    inet-&gt;AddInputLayer(0);</div><div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;    inet-&gt;AddAdditionLayer();</div><div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;    inet-&gt;AddActivationLayer(<a class="code" href="structarmnn_1_1_activation_descriptor.xhtml">armnn::ActivationDescriptor</a>());</div><div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;    inet-&gt;AddOutputLayer(0);</div><div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;}</div><div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;</div><div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;TEST_CASE(<span class="stringliteral">&quot;LayerNamesAreOptionalForNetwork&quot;</span>)</div><div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;{</div><div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;    <a class="code" href="classarmnn_1_1_network_impl.xhtml">armnn::NetworkImpl</a> net;</div><div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;    net.<a class="code" href="classarmnn_1_1_network_impl.xhtml#aa6c1c42ea44777302e87ce0fad5ac510">AddInputLayer</a>(0);</div><div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;    net.<a class="code" href="classarmnn_1_1_network_impl.xhtml#a39f1b38d89c4de186742eafcbb3b1319">AddAdditionLayer</a>();</div><div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;    net.<a class="code" href="classarmnn_1_1_network_impl.xhtml#aa51350bdd4976f3dd5a4e9d00a906b2c">AddActivationLayer</a>(<a class="code" href="structarmnn_1_1_activation_descriptor.xhtml">armnn::ActivationDescriptor</a>());</div><div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;    net.<a class="code" href="classarmnn_1_1_network_impl.xhtml#af5790069aa11fd1c5bb2e17cecb06528">AddOutputLayer</a>(0);</div><div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;}</div><div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;</div><div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;TEST_CASE(<span class="stringliteral">&quot;NetworkModification&quot;</span>)</div><div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;{</div><div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;    <a class="code" href="classarmnn_1_1_network_impl.xhtml">armnn::NetworkImpl</a> net;</div><div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;</div><div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;    <a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml">armnn::IConnectableLayer</a>* <span class="keyword">const</span> inputLayer = net.<a class="code" href="classarmnn_1_1_network_impl.xhtml#aa6c1c42ea44777302e87ce0fad5ac510">AddInputLayer</a>(0, <span class="stringliteral">&quot;input layer&quot;</span>);</div><div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;    CHECK(inputLayer);</div><div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;</div><div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;    <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> dims[] = { 10,1,1,1 };</div><div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;    std::vector&lt;float&gt; convWeightsData(10);</div><div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;    <a class="code" href="classarmnn_1_1_const_tensor.xhtml">armnn::ConstTensor</a> weights(<a class="code" href="classarmnn_1_1_tensor_info.xhtml">armnn::TensorInfo</a>(4, dims, <a class="code" href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a166495adc0d0f53bee6baecc577f5204">armnn::DataType::Float32</a>, 0.0f, 0, <span class="keyword">true</span>), convWeightsData);</div><div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;</div><div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;    <a class="code" href="structarmnn_1_1_convolution2d_descriptor.xhtml">armnn::Convolution2dDescriptor</a> convDesc2d;</div><div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;    <a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml">armnn::IConnectableLayer</a>* <span class="keyword">const</span> convLayer = net.<a class="code" href="classarmnn_1_1_network_impl.xhtml#a178a72bbf254eff34a807a5ca27cb61f">AddConvolution2dLayer</a>(convDesc2d,</div><div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;                                                                          weights,</div><div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;                                                                          <a class="code" href="structarmnn_1_1_empty_optional.xhtml">armnn::EmptyOptional</a>(),</div><div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;                                                                          <span class="stringliteral">&quot;conv layer&quot;</span>);</div><div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;    CHECK(convLayer);</div><div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;</div><div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;    inputLayer-&gt;<a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml#a80ac4eda2e7f2757ec9dd96fc96dbd16">GetOutputSlot</a>(0).<a class="code" href="classarmnn_1_1_i_output_slot.xhtml#ac1835f8756a9f03c02fcf9664e3a0fce">Connect</a>(convLayer-&gt;<a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml#a6ec9e0eb66d7d6a01240492a0b18104c">GetInputSlot</a>(0));</div><div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;</div><div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;    <a class="code" href="structarmnn_1_1_fully_connected_descriptor.xhtml">armnn::FullyConnectedDescriptor</a> fullyConnectedDesc;</div><div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;</div><div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;    <span class="comment">// Constant layer that now holds weights data for FullyConnected</span></div><div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;    <a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml">armnn::IConnectableLayer</a>* <span class="keyword">const</span> constantWeightsLayer = net.<a class="code" href="classarmnn_1_1_network_impl.xhtml#a1aa567f46c30960851c02847dc7b4215">AddConstantLayer</a>(weights, <span class="stringliteral">&quot;const weights&quot;</span>);</div><div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;    <a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml">armnn::IConnectableLayer</a>* <span class="keyword">const</span> fullyConnectedLayer = net.<a class="code" href="classarmnn_1_1_network_impl.xhtml#a471991a84030eb3ae601da2bee757870">AddFullyConnectedLayer</a>(fullyConnectedDesc,</div><div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;                                                                                     <span class="stringliteral">&quot;fully connected&quot;</span>);</div><div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;    CHECK(constantWeightsLayer);</div><div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;    CHECK(fullyConnectedLayer);</div><div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;</div><div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;    constantWeightsLayer-&gt;<a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml#a80ac4eda2e7f2757ec9dd96fc96dbd16">GetOutputSlot</a>(0).<a class="code" href="classarmnn_1_1_i_output_slot.xhtml#ac1835f8756a9f03c02fcf9664e3a0fce">Connect</a>(fullyConnectedLayer-&gt;<a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml#a6ec9e0eb66d7d6a01240492a0b18104c">GetInputSlot</a>(1));</div><div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;    convLayer-&gt;<a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml#a80ac4eda2e7f2757ec9dd96fc96dbd16">GetOutputSlot</a>(0).<a class="code" href="classarmnn_1_1_i_output_slot.xhtml#ac1835f8756a9f03c02fcf9664e3a0fce">Connect</a>(fullyConnectedLayer-&gt;<a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml#a6ec9e0eb66d7d6a01240492a0b18104c">GetInputSlot</a>(0));</div><div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;</div><div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;    <a class="code" href="structarmnn_1_1_pooling2d_descriptor.xhtml">armnn::Pooling2dDescriptor</a> pooling2dDesc;</div><div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;    <a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml">armnn::IConnectableLayer</a>* <span class="keyword">const</span> poolingLayer = net.<a class="code" href="classarmnn_1_1_network_impl.xhtml#ae913b4351b7027f37eb5657dd7867733">AddPooling2dLayer</a>(pooling2dDesc, <span class="stringliteral">&quot;pooling2d&quot;</span>);</div><div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;    CHECK(poolingLayer);</div><div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;</div><div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;    fullyConnectedLayer-&gt;<a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml#a80ac4eda2e7f2757ec9dd96fc96dbd16">GetOutputSlot</a>(0).<a class="code" href="classarmnn_1_1_i_output_slot.xhtml#ac1835f8756a9f03c02fcf9664e3a0fce">Connect</a>(poolingLayer-&gt;<a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml#a6ec9e0eb66d7d6a01240492a0b18104c">GetInputSlot</a>(0));</div><div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;</div><div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;    <a class="code" href="structarmnn_1_1_activation_descriptor.xhtml">armnn::ActivationDescriptor</a> activationDesc;</div><div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;    <a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml">armnn::IConnectableLayer</a>* <span class="keyword">const</span> activationLayer = net.<a class="code" href="classarmnn_1_1_network_impl.xhtml#aa51350bdd4976f3dd5a4e9d00a906b2c">AddActivationLayer</a>(activationDesc, <span class="stringliteral">&quot;activation&quot;</span>);</div><div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;    CHECK(activationLayer);</div><div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;</div><div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;    poolingLayer-&gt;<a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml#a80ac4eda2e7f2757ec9dd96fc96dbd16">GetOutputSlot</a>(0).<a class="code" href="classarmnn_1_1_i_output_slot.xhtml#ac1835f8756a9f03c02fcf9664e3a0fce">Connect</a>(activationLayer-&gt;<a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml#a6ec9e0eb66d7d6a01240492a0b18104c">GetInputSlot</a>(0));</div><div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;</div><div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;    <a class="code" href="structarmnn_1_1_normalization_descriptor.xhtml">armnn::NormalizationDescriptor</a> normalizationDesc;</div><div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;    <a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml">armnn::IConnectableLayer</a>* <span class="keyword">const</span> normalizationLayer = net.<a class="code" href="classarmnn_1_1_network_impl.xhtml#a6c5376053e1f875776d7bc36fd0b7d45">AddNormalizationLayer</a>(normalizationDesc, <span class="stringliteral">&quot;normalization&quot;</span>);</div><div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;    CHECK(normalizationLayer);</div><div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;</div><div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;    activationLayer-&gt;<a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml#a80ac4eda2e7f2757ec9dd96fc96dbd16">GetOutputSlot</a>(0).<a class="code" href="classarmnn_1_1_i_output_slot.xhtml#ac1835f8756a9f03c02fcf9664e3a0fce">Connect</a>(normalizationLayer-&gt;<a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml#a6ec9e0eb66d7d6a01240492a0b18104c">GetInputSlot</a>(0));</div><div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;</div><div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;    <a class="code" href="structarmnn_1_1_softmax_descriptor.xhtml">armnn::SoftmaxDescriptor</a> softmaxDesc;</div><div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;    <a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml">armnn::IConnectableLayer</a>* <span class="keyword">const</span> softmaxLayer = net.<a class="code" href="classarmnn_1_1_network_impl.xhtml#a30528a3bd85a0dba158bd14e252bd68a">AddSoftmaxLayer</a>(softmaxDesc, <span class="stringliteral">&quot;softmax&quot;</span>);</div><div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;    CHECK(softmaxLayer);</div><div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;</div><div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;    normalizationLayer-&gt;<a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml#a80ac4eda2e7f2757ec9dd96fc96dbd16">GetOutputSlot</a>(0).<a class="code" href="classarmnn_1_1_i_output_slot.xhtml#ac1835f8756a9f03c02fcf9664e3a0fce">Connect</a>(softmaxLayer-&gt;<a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml#a6ec9e0eb66d7d6a01240492a0b18104c">GetInputSlot</a>(0));</div><div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;</div><div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;    <a class="code" href="structarmnn_1_1_batch_normalization_descriptor.xhtml">armnn::BatchNormalizationDescriptor</a> batchNormDesc;</div><div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;</div><div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;    <a class="code" href="classarmnn_1_1_tensor_info.xhtml">armnn::TensorInfo</a> tensorInfo({ 1 }, <a class="code" href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a166495adc0d0f53bee6baecc577f5204">armnn::DataType::Float32</a>, 0.0f, 0, <span class="keyword">true</span>);</div><div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;    std::vector&lt;float&gt; data(tensorInfo.GetNumBytes() / <span class="keyword">sizeof</span>(float));</div><div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;    <a class="code" href="classarmnn_1_1_const_tensor.xhtml">armnn::ConstTensor</a> invalidTensor(tensorInfo, data);</div><div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;</div><div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;    <a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml">armnn::IConnectableLayer</a>* <span class="keyword">const</span> batchNormalizationLayer = net.<a class="code" href="classarmnn_1_1_network_impl.xhtml#a8f798e19187ac7ae6ae6153ee64ab645">AddBatchNormalizationLayer</a>(batchNormDesc,</div><div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;        invalidTensor,</div><div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;        invalidTensor,</div><div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;        invalidTensor,</div><div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;        invalidTensor,</div><div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;        <span class="stringliteral">&quot;batch norm&quot;</span>);</div><div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;    CHECK(batchNormalizationLayer);</div><div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;</div><div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;    softmaxLayer-&gt;<a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml#a80ac4eda2e7f2757ec9dd96fc96dbd16">GetOutputSlot</a>(0).<a class="code" href="classarmnn_1_1_i_output_slot.xhtml#ac1835f8756a9f03c02fcf9664e3a0fce">Connect</a>(batchNormalizationLayer-&gt;<a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml#a6ec9e0eb66d7d6a01240492a0b18104c">GetInputSlot</a>(0));</div><div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;</div><div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;    <a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml">armnn::IConnectableLayer</a>* <span class="keyword">const</span> additionLayer = net.<a class="code" href="classarmnn_1_1_network_impl.xhtml#a39f1b38d89c4de186742eafcbb3b1319">AddAdditionLayer</a>(<span class="stringliteral">&quot;addition&quot;</span>);</div><div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;    CHECK(additionLayer);</div><div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;</div><div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;    batchNormalizationLayer-&gt;<a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml#a80ac4eda2e7f2757ec9dd96fc96dbd16">GetOutputSlot</a>(0).<a class="code" href="classarmnn_1_1_i_output_slot.xhtml#ac1835f8756a9f03c02fcf9664e3a0fce">Connect</a>(additionLayer-&gt;<a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml#a6ec9e0eb66d7d6a01240492a0b18104c">GetInputSlot</a>(0));</div><div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;    batchNormalizationLayer-&gt;<a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml#a80ac4eda2e7f2757ec9dd96fc96dbd16">GetOutputSlot</a>(0).<a class="code" href="classarmnn_1_1_i_output_slot.xhtml#ac1835f8756a9f03c02fcf9664e3a0fce">Connect</a>(additionLayer-&gt;<a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml#a6ec9e0eb66d7d6a01240492a0b18104c">GetInputSlot</a>(1));</div><div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;</div><div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;    <a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml">armnn::IConnectableLayer</a>* <span class="keyword">const</span> multiplicationLayer = net.<a class="code" href="classarmnn_1_1_network_impl.xhtml#abb59f6ba9988dae88e0f48e68d87fc32">AddMultiplicationLayer</a>(<span class="stringliteral">&quot;multiplication&quot;</span>);</div><div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;    CHECK(multiplicationLayer);</div><div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;</div><div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;    additionLayer-&gt;<a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml#a80ac4eda2e7f2757ec9dd96fc96dbd16">GetOutputSlot</a>(0).<a class="code" href="classarmnn_1_1_i_output_slot.xhtml#ac1835f8756a9f03c02fcf9664e3a0fce">Connect</a>(multiplicationLayer-&gt;<a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml#a6ec9e0eb66d7d6a01240492a0b18104c">GetInputSlot</a>(0));</div><div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;    additionLayer-&gt;<a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml#a80ac4eda2e7f2757ec9dd96fc96dbd16">GetOutputSlot</a>(0).<a class="code" href="classarmnn_1_1_i_output_slot.xhtml#ac1835f8756a9f03c02fcf9664e3a0fce">Connect</a>(multiplicationLayer-&gt;<a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml#a6ec9e0eb66d7d6a01240492a0b18104c">GetInputSlot</a>(1));</div><div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;</div><div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;    <a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml">armnn::IConnectableLayer</a>* <span class="keyword">const</span> outputLayer = net.<a class="code" href="classarmnn_1_1_network_impl.xhtml#af5790069aa11fd1c5bb2e17cecb06528">AddOutputLayer</a>(0, <span class="stringliteral">&quot;output layer&quot;</span>);</div><div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;    CHECK(outputLayer);</div><div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;</div><div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;    multiplicationLayer-&gt;<a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml#a80ac4eda2e7f2757ec9dd96fc96dbd16">GetOutputSlot</a>(0).<a class="code" href="classarmnn_1_1_i_output_slot.xhtml#ac1835f8756a9f03c02fcf9664e3a0fce">Connect</a>(outputLayer-&gt;<a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml#a6ec9e0eb66d7d6a01240492a0b18104c">GetInputSlot</a>(0));</div><div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;</div><div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160;    <span class="comment">//Tests that all layers are present in the graph.</span></div><div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;    CHECK(net.<a class="code" href="classarmnn_1_1_network_impl.xhtml#afe0a4f719f9752a405e71878da7012ba">GetGraph</a>().<a class="code" href="classarmnn_1_1_graph.xhtml#afdf8eb85585a798ad0e936bde884d87b">GetNumLayers</a>() == 12);</div><div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160;</div><div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160;    <span class="comment">//Tests that the vertices exist and have correct names.</span></div><div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160;    CHECK(<a class="code" href="_graph_utils_8cpp.xhtml#ac73a43305233b7e5f70debdb2d14a8d3">GraphHasNamedLayer</a>(net.<a class="code" href="classarmnn_1_1_network_impl.xhtml#afe0a4f719f9752a405e71878da7012ba">GetGraph</a>(), <span class="stringliteral">&quot;input layer&quot;</span>));</div><div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160;    CHECK(<a class="code" href="_graph_utils_8cpp.xhtml#ac73a43305233b7e5f70debdb2d14a8d3">GraphHasNamedLayer</a>(net.<a class="code" href="classarmnn_1_1_network_impl.xhtml#afe0a4f719f9752a405e71878da7012ba">GetGraph</a>(), <span class="stringliteral">&quot;conv layer&quot;</span>));</div><div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160;    CHECK(<a class="code" href="_graph_utils_8cpp.xhtml#ac73a43305233b7e5f70debdb2d14a8d3">GraphHasNamedLayer</a>(net.<a class="code" href="classarmnn_1_1_network_impl.xhtml#afe0a4f719f9752a405e71878da7012ba">GetGraph</a>(), <span class="stringliteral">&quot;const weights&quot;</span>));</div><div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;    CHECK(<a class="code" href="_graph_utils_8cpp.xhtml#ac73a43305233b7e5f70debdb2d14a8d3">GraphHasNamedLayer</a>(net.<a class="code" href="classarmnn_1_1_network_impl.xhtml#afe0a4f719f9752a405e71878da7012ba">GetGraph</a>(), <span class="stringliteral">&quot;fully connected&quot;</span>));</div><div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160;    CHECK(<a class="code" href="_graph_utils_8cpp.xhtml#ac73a43305233b7e5f70debdb2d14a8d3">GraphHasNamedLayer</a>(net.<a class="code" href="classarmnn_1_1_network_impl.xhtml#afe0a4f719f9752a405e71878da7012ba">GetGraph</a>(), <span class="stringliteral">&quot;pooling2d&quot;</span>));</div><div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160;    CHECK(<a class="code" href="_graph_utils_8cpp.xhtml#ac73a43305233b7e5f70debdb2d14a8d3">GraphHasNamedLayer</a>(net.<a class="code" href="classarmnn_1_1_network_impl.xhtml#afe0a4f719f9752a405e71878da7012ba">GetGraph</a>(), <span class="stringliteral">&quot;activation&quot;</span>));</div><div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160;    CHECK(<a class="code" href="_graph_utils_8cpp.xhtml#ac73a43305233b7e5f70debdb2d14a8d3">GraphHasNamedLayer</a>(net.<a class="code" href="classarmnn_1_1_network_impl.xhtml#afe0a4f719f9752a405e71878da7012ba">GetGraph</a>(), <span class="stringliteral">&quot;normalization&quot;</span>));</div><div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160;    CHECK(<a class="code" href="_graph_utils_8cpp.xhtml#ac73a43305233b7e5f70debdb2d14a8d3">GraphHasNamedLayer</a>(net.<a class="code" href="classarmnn_1_1_network_impl.xhtml#afe0a4f719f9752a405e71878da7012ba">GetGraph</a>(), <span class="stringliteral">&quot;softmax&quot;</span>));</div><div class="line"><a name="l00169"></a><span class="lineno">  169</span>&#160;    CHECK(<a class="code" href="_graph_utils_8cpp.xhtml#ac73a43305233b7e5f70debdb2d14a8d3">GraphHasNamedLayer</a>(net.<a class="code" href="classarmnn_1_1_network_impl.xhtml#afe0a4f719f9752a405e71878da7012ba">GetGraph</a>(), <span class="stringliteral">&quot;batch norm&quot;</span>));</div><div class="line"><a name="l00170"></a><span class="lineno">  170</span>&#160;    CHECK(<a class="code" href="_graph_utils_8cpp.xhtml#ac73a43305233b7e5f70debdb2d14a8d3">GraphHasNamedLayer</a>(net.<a class="code" href="classarmnn_1_1_network_impl.xhtml#afe0a4f719f9752a405e71878da7012ba">GetGraph</a>(), <span class="stringliteral">&quot;addition&quot;</span>));</div><div class="line"><a name="l00171"></a><span class="lineno">  171</span>&#160;    CHECK(<a class="code" href="_graph_utils_8cpp.xhtml#ac73a43305233b7e5f70debdb2d14a8d3">GraphHasNamedLayer</a>(net.<a class="code" href="classarmnn_1_1_network_impl.xhtml#afe0a4f719f9752a405e71878da7012ba">GetGraph</a>(), <span class="stringliteral">&quot;multiplication&quot;</span>));</div><div class="line"><a name="l00172"></a><span class="lineno">  172</span>&#160;    CHECK(<a class="code" href="_graph_utils_8cpp.xhtml#ac73a43305233b7e5f70debdb2d14a8d3">GraphHasNamedLayer</a>(net.<a class="code" href="classarmnn_1_1_network_impl.xhtml#afe0a4f719f9752a405e71878da7012ba">GetGraph</a>(), <span class="stringliteral">&quot;output layer&quot;</span>));</div><div class="line"><a name="l00173"></a><span class="lineno">  173</span>&#160;</div><div class="line"><a name="l00174"></a><span class="lineno">  174</span>&#160;    <span class="keyword">auto</span> checkOneOutputToOneInputConnection = []</div><div class="line"><a name="l00175"></a><span class="lineno">  175</span>&#160;        (<span class="keyword">const</span> <a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml">armnn::IConnectableLayer</a>* <span class="keyword">const</span> srcLayer,</div><div class="line"><a name="l00176"></a><span class="lineno">  176</span>&#160;         <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml">armnn::IConnectableLayer</a>* <span class="keyword">const</span> tgtLayer,</div><div class="line"><a name="l00177"></a><span class="lineno">  177</span>&#160;         <span class="keywordtype">int</span> expectedSrcNumInputs = 1,</div><div class="line"><a name="l00178"></a><span class="lineno">  178</span>&#160;         <span class="keywordtype">int</span> expectedDstNumOutputs = 1)</div><div class="line"><a name="l00179"></a><span class="lineno">  179</span>&#160;        {</div><div class="line"><a name="l00180"></a><span class="lineno">  180</span>&#160;            CHECK(srcLayer-&gt;<a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml#a9c2cba04b6d7ace4fc2a2436b82a5a63">GetNumInputSlots</a>() == expectedSrcNumInputs);</div><div class="line"><a name="l00181"></a><span class="lineno">  181</span>&#160;            CHECK(srcLayer-&gt;<a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml#ac2dac3b61c94de52093616be4ab17f8d">GetNumOutputSlots</a>() == 1);</div><div class="line"><a name="l00182"></a><span class="lineno">  182</span>&#160;            CHECK(tgtLayer-&gt;GetNumInputSlots() == 1);</div><div class="line"><a name="l00183"></a><span class="lineno">  183</span>&#160;            CHECK(tgtLayer-&gt;GetNumOutputSlots() == expectedDstNumOutputs);</div><div class="line"><a name="l00184"></a><span class="lineno">  184</span>&#160;</div><div class="line"><a name="l00185"></a><span class="lineno">  185</span>&#160;            CHECK(srcLayer-&gt;<a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml#a80ac4eda2e7f2757ec9dd96fc96dbd16">GetOutputSlot</a>(0).<a class="code" href="classarmnn_1_1_i_output_slot.xhtml#aab97b09d9ee85a105883949abcae52f3">GetNumConnections</a>() == 1);</div><div class="line"><a name="l00186"></a><span class="lineno">  186</span>&#160;            CHECK(srcLayer-&gt;<a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml#a80ac4eda2e7f2757ec9dd96fc96dbd16">GetOutputSlot</a>(0).<a class="code" href="classarmnn_1_1_i_output_slot.xhtml#a9fffb92dc6d2edd5258d574a5862fc83">GetConnection</a>(0) == &amp;tgtLayer-&gt;GetInputSlot(0));</div><div class="line"><a name="l00187"></a><span class="lineno">  187</span>&#160;            CHECK(&amp;srcLayer-&gt;<a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml#a80ac4eda2e7f2757ec9dd96fc96dbd16">GetOutputSlot</a>(0) == tgtLayer-&gt;GetInputSlot(0).<a class="code" href="classarmnn_1_1_i_output_slot.xhtml#a9fffb92dc6d2edd5258d574a5862fc83">GetConnection</a>());</div><div class="line"><a name="l00188"></a><span class="lineno">  188</span>&#160;        };</div><div class="line"><a name="l00189"></a><span class="lineno">  189</span>&#160;    <span class="keyword">auto</span> checkOneOutputToTwoInputsConnections = []</div><div class="line"><a name="l00190"></a><span class="lineno">  190</span>&#160;        (<span class="keyword">const</span> <a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml">armnn::IConnectableLayer</a>* <span class="keyword">const</span> srcLayer,</div><div class="line"><a name="l00191"></a><span class="lineno">  191</span>&#160;         <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml">armnn::IConnectableLayer</a>* <span class="keyword">const</span> tgtLayer,</div><div class="line"><a name="l00192"></a><span class="lineno">  192</span>&#160;         <span class="keywordtype">int</span> expectedSrcNumInputs,</div><div class="line"><a name="l00193"></a><span class="lineno">  193</span>&#160;         <span class="keywordtype">int</span> expectedDstNumOutputs = 1)</div><div class="line"><a name="l00194"></a><span class="lineno">  194</span>&#160;        {</div><div class="line"><a name="l00195"></a><span class="lineno">  195</span>&#160;            CHECK(srcLayer-&gt;<a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml#a9c2cba04b6d7ace4fc2a2436b82a5a63">GetNumInputSlots</a>() == expectedSrcNumInputs);</div><div class="line"><a name="l00196"></a><span class="lineno">  196</span>&#160;            CHECK(srcLayer-&gt;<a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml#ac2dac3b61c94de52093616be4ab17f8d">GetNumOutputSlots</a>() == 1);</div><div class="line"><a name="l00197"></a><span class="lineno">  197</span>&#160;            CHECK(tgtLayer-&gt;GetNumInputSlots() == 2);</div><div class="line"><a name="l00198"></a><span class="lineno">  198</span>&#160;            CHECK(tgtLayer-&gt;GetNumOutputSlots() == expectedDstNumOutputs);</div><div class="line"><a name="l00199"></a><span class="lineno">  199</span>&#160;</div><div class="line"><a name="l00200"></a><span class="lineno">  200</span>&#160;            CHECK(srcLayer-&gt;<a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml#a80ac4eda2e7f2757ec9dd96fc96dbd16">GetOutputSlot</a>(0).<a class="code" href="classarmnn_1_1_i_output_slot.xhtml#aab97b09d9ee85a105883949abcae52f3">GetNumConnections</a>() == 2);</div><div class="line"><a name="l00201"></a><span class="lineno">  201</span>&#160;            <span class="keywordflow">for</span> (<span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> i = 0; i &lt; srcLayer-&gt;<a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml#a80ac4eda2e7f2757ec9dd96fc96dbd16">GetOutputSlot</a>(0).<a class="code" href="classarmnn_1_1_i_output_slot.xhtml#aab97b09d9ee85a105883949abcae52f3">GetNumConnections</a>(); ++i)</div><div class="line"><a name="l00202"></a><span class="lineno">  202</span>&#160;            {</div><div class="line"><a name="l00203"></a><span class="lineno">  203</span>&#160;                CHECK(srcLayer-&gt;<a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml#a80ac4eda2e7f2757ec9dd96fc96dbd16">GetOutputSlot</a>(0).<a class="code" href="classarmnn_1_1_i_output_slot.xhtml#a9fffb92dc6d2edd5258d574a5862fc83">GetConnection</a>(i) == &amp;tgtLayer-&gt;GetInputSlot(i));</div><div class="line"><a name="l00204"></a><span class="lineno">  204</span>&#160;                CHECK(&amp;srcLayer-&gt;<a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml#a80ac4eda2e7f2757ec9dd96fc96dbd16">GetOutputSlot</a>(0) == tgtLayer-&gt;GetInputSlot(i).<a class="code" href="classarmnn_1_1_i_output_slot.xhtml#a9fffb92dc6d2edd5258d574a5862fc83">GetConnection</a>());</div><div class="line"><a name="l00205"></a><span class="lineno">  205</span>&#160;            }</div><div class="line"><a name="l00206"></a><span class="lineno">  206</span>&#160;        };</div><div class="line"><a name="l00207"></a><span class="lineno">  207</span>&#160;    <span class="keyword">auto</span> checkOneOutputToTwoInputConnectionForTwoDifferentLayers = []</div><div class="line"><a name="l00208"></a><span class="lineno">  208</span>&#160;        (<span class="keyword">const</span> <a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml">armnn::IConnectableLayer</a>* <span class="keyword">const</span> srcLayer1,</div><div class="line"><a name="l00209"></a><span class="lineno">  209</span>&#160;         <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml">armnn::IConnectableLayer</a>* <span class="keyword">const</span> srcLayer2,</div><div class="line"><a name="l00210"></a><span class="lineno">  210</span>&#160;         <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml">armnn::IConnectableLayer</a>* <span class="keyword">const</span> tgtLayer,</div><div class="line"><a name="l00211"></a><span class="lineno">  211</span>&#160;         <span class="keywordtype">int</span> expectedSrcNumInputs1 = 1,</div><div class="line"><a name="l00212"></a><span class="lineno">  212</span>&#160;         <span class="keywordtype">int</span> expectedSrcNumInputs2 = 1,</div><div class="line"><a name="l00213"></a><span class="lineno">  213</span>&#160;         <span class="keywordtype">int</span> expectedDstNumOutputs = 1)</div><div class="line"><a name="l00214"></a><span class="lineno">  214</span>&#160;        {</div><div class="line"><a name="l00215"></a><span class="lineno">  215</span>&#160;            CHECK(srcLayer1-&gt;<a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml#a9c2cba04b6d7ace4fc2a2436b82a5a63">GetNumInputSlots</a>() == expectedSrcNumInputs1);</div><div class="line"><a name="l00216"></a><span class="lineno">  216</span>&#160;            CHECK(srcLayer1-&gt;<a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml#ac2dac3b61c94de52093616be4ab17f8d">GetNumOutputSlots</a>() == 1);</div><div class="line"><a name="l00217"></a><span class="lineno">  217</span>&#160;            CHECK(srcLayer2-&gt;GetNumInputSlots() == expectedSrcNumInputs2);</div><div class="line"><a name="l00218"></a><span class="lineno">  218</span>&#160;            CHECK(srcLayer2-&gt;GetNumOutputSlots() == 1);</div><div class="line"><a name="l00219"></a><span class="lineno">  219</span>&#160;            CHECK(tgtLayer-&gt;GetNumInputSlots() == 2);</div><div class="line"><a name="l00220"></a><span class="lineno">  220</span>&#160;            CHECK(tgtLayer-&gt;GetNumOutputSlots() == expectedDstNumOutputs);</div><div class="line"><a name="l00221"></a><span class="lineno">  221</span>&#160;</div><div class="line"><a name="l00222"></a><span class="lineno">  222</span>&#160;            CHECK(srcLayer1-&gt;<a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml#a80ac4eda2e7f2757ec9dd96fc96dbd16">GetOutputSlot</a>(0).<a class="code" href="classarmnn_1_1_i_output_slot.xhtml#aab97b09d9ee85a105883949abcae52f3">GetNumConnections</a>() == 1);</div><div class="line"><a name="l00223"></a><span class="lineno">  223</span>&#160;            CHECK(srcLayer2-&gt;GetOutputSlot(0).GetNumConnections() == 1);</div><div class="line"><a name="l00224"></a><span class="lineno">  224</span>&#160;            CHECK(srcLayer1-&gt;<a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml#a80ac4eda2e7f2757ec9dd96fc96dbd16">GetOutputSlot</a>(0).<a class="code" href="classarmnn_1_1_i_output_slot.xhtml#a9fffb92dc6d2edd5258d574a5862fc83">GetConnection</a>(0) == &amp;tgtLayer-&gt;GetInputSlot(0));</div><div class="line"><a name="l00225"></a><span class="lineno">  225</span>&#160;            CHECK(srcLayer2-&gt;GetOutputSlot(0).GetConnection(0) == &amp;tgtLayer-&gt;GetInputSlot(1));</div><div class="line"><a name="l00226"></a><span class="lineno">  226</span>&#160;            CHECK(&amp;srcLayer1-&gt;<a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml#a80ac4eda2e7f2757ec9dd96fc96dbd16">GetOutputSlot</a>(0) == tgtLayer-&gt;GetInputSlot(0).<a class="code" href="classarmnn_1_1_i_output_slot.xhtml#a9fffb92dc6d2edd5258d574a5862fc83">GetConnection</a>());</div><div class="line"><a name="l00227"></a><span class="lineno">  227</span>&#160;            CHECK(&amp;srcLayer2-&gt;GetOutputSlot(0) == tgtLayer-&gt;GetInputSlot(1).GetConnection());</div><div class="line"><a name="l00228"></a><span class="lineno">  228</span>&#160;        };</div><div class="line"><a name="l00229"></a><span class="lineno">  229</span>&#160;</div><div class="line"><a name="l00230"></a><span class="lineno">  230</span>&#160;    CHECK(AreAllLayerInputSlotsConnected(*convLayer));</div><div class="line"><a name="l00231"></a><span class="lineno">  231</span>&#160;    CHECK(AreAllLayerInputSlotsConnected(*fullyConnectedLayer));</div><div class="line"><a name="l00232"></a><span class="lineno">  232</span>&#160;    CHECK(AreAllLayerInputSlotsConnected(*poolingLayer));</div><div class="line"><a name="l00233"></a><span class="lineno">  233</span>&#160;    CHECK(AreAllLayerInputSlotsConnected(*activationLayer));</div><div class="line"><a name="l00234"></a><span class="lineno">  234</span>&#160;    CHECK(AreAllLayerInputSlotsConnected(*normalizationLayer));</div><div class="line"><a name="l00235"></a><span class="lineno">  235</span>&#160;    CHECK(AreAllLayerInputSlotsConnected(*softmaxLayer));</div><div class="line"><a name="l00236"></a><span class="lineno">  236</span>&#160;    CHECK(AreAllLayerInputSlotsConnected(*batchNormalizationLayer));</div><div class="line"><a name="l00237"></a><span class="lineno">  237</span>&#160;    CHECK(AreAllLayerInputSlotsConnected(*additionLayer));</div><div class="line"><a name="l00238"></a><span class="lineno">  238</span>&#160;    CHECK(AreAllLayerInputSlotsConnected(*multiplicationLayer));</div><div class="line"><a name="l00239"></a><span class="lineno">  239</span>&#160;    CHECK(AreAllLayerInputSlotsConnected(*outputLayer));</div><div class="line"><a name="l00240"></a><span class="lineno">  240</span>&#160;</div><div class="line"><a name="l00241"></a><span class="lineno">  241</span>&#160;    <span class="comment">// Checks connectivity.</span></div><div class="line"><a name="l00242"></a><span class="lineno">  242</span>&#160;    checkOneOutputToOneInputConnection(inputLayer, convLayer, 0);</div><div class="line"><a name="l00243"></a><span class="lineno">  243</span>&#160;    checkOneOutputToTwoInputConnectionForTwoDifferentLayers(convLayer, constantWeightsLayer, fullyConnectedLayer, 1, 0);</div><div class="line"><a name="l00244"></a><span class="lineno">  244</span>&#160;    checkOneOutputToOneInputConnection(fullyConnectedLayer, poolingLayer, 2, 1);</div><div class="line"><a name="l00245"></a><span class="lineno">  245</span>&#160;    checkOneOutputToOneInputConnection(poolingLayer, activationLayer);</div><div class="line"><a name="l00246"></a><span class="lineno">  246</span>&#160;    checkOneOutputToOneInputConnection(activationLayer, normalizationLayer);</div><div class="line"><a name="l00247"></a><span class="lineno">  247</span>&#160;    checkOneOutputToOneInputConnection(normalizationLayer, softmaxLayer);</div><div class="line"><a name="l00248"></a><span class="lineno">  248</span>&#160;    checkOneOutputToOneInputConnection(softmaxLayer, batchNormalizationLayer);</div><div class="line"><a name="l00249"></a><span class="lineno">  249</span>&#160;    checkOneOutputToTwoInputsConnections(batchNormalizationLayer, additionLayer, 1);</div><div class="line"><a name="l00250"></a><span class="lineno">  250</span>&#160;    checkOneOutputToTwoInputsConnections(additionLayer, multiplicationLayer, 2);</div><div class="line"><a name="l00251"></a><span class="lineno">  251</span>&#160;    checkOneOutputToOneInputConnection(multiplicationLayer, outputLayer, 2, 0);</div><div class="line"><a name="l00252"></a><span class="lineno">  252</span>&#160;}</div><div class="line"><a name="l00253"></a><span class="lineno">  253</span>&#160;</div><div class="line"><a name="l00254"></a><span class="lineno">  254</span>&#160;TEST_CASE(<span class="stringliteral">&quot;NetworkModification_SplitterConcat&quot;</span>)</div><div class="line"><a name="l00255"></a><span class="lineno">  255</span>&#160;{</div><div class="line"><a name="l00256"></a><span class="lineno">  256</span>&#160;    <a class="code" href="classarmnn_1_1_network_impl.xhtml">armnn::NetworkImpl</a> net;</div><div class="line"><a name="l00257"></a><span class="lineno">  257</span>&#160;</div><div class="line"><a name="l00258"></a><span class="lineno">  258</span>&#160;    <span class="comment">// Adds an input layer and an input tensor descriptor.</span></div><div class="line"><a name="l00259"></a><span class="lineno">  259</span>&#160;    <a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml">armnn::IConnectableLayer</a>* inputLayer = net.<a class="code" href="classarmnn_1_1_network_impl.xhtml#aa6c1c42ea44777302e87ce0fad5ac510">AddInputLayer</a>(0, <span class="stringliteral">&quot;input layer&quot;</span>);</div><div class="line"><a name="l00260"></a><span class="lineno">  260</span>&#160;    CHECK(inputLayer);</div><div class="line"><a name="l00261"></a><span class="lineno">  261</span>&#160;</div><div class="line"><a name="l00262"></a><span class="lineno">  262</span>&#160;    <span class="comment">// Adds a splitter layer.</span></div><div class="line"><a name="l00263"></a><span class="lineno">  263</span>&#160;    <a class="code" href="structarmnn_1_1_views_descriptor.xhtml">armnn::ViewsDescriptor</a> splitterDesc(2,4);</div><div class="line"><a name="l00264"></a><span class="lineno">  264</span>&#160;</div><div class="line"><a name="l00265"></a><span class="lineno">  265</span>&#160;    <a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml">armnn::IConnectableLayer</a>* splitterLayer = net.<a class="code" href="classarmnn_1_1_network_impl.xhtml#a6f6d81d8a4f1f85f3616e8306760061c">AddSplitterLayer</a>(splitterDesc, <span class="stringliteral">&quot;splitter layer&quot;</span>);</div><div class="line"><a name="l00266"></a><span class="lineno">  266</span>&#160;    CHECK(splitterLayer);</div><div class="line"><a name="l00267"></a><span class="lineno">  267</span>&#160;</div><div class="line"><a name="l00268"></a><span class="lineno">  268</span>&#160;    inputLayer-&gt;<a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml#a80ac4eda2e7f2757ec9dd96fc96dbd16">GetOutputSlot</a>(0).<a class="code" href="classarmnn_1_1_i_output_slot.xhtml#ac1835f8756a9f03c02fcf9664e3a0fce">Connect</a>(splitterLayer-&gt;<a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml#a6ec9e0eb66d7d6a01240492a0b18104c">GetInputSlot</a>(0));</div><div class="line"><a name="l00269"></a><span class="lineno">  269</span>&#160;</div><div class="line"><a name="l00270"></a><span class="lineno">  270</span>&#160;    <span class="comment">// Adds a softmax layer 1.</span></div><div class="line"><a name="l00271"></a><span class="lineno">  271</span>&#160;    <a class="code" href="structarmnn_1_1_softmax_descriptor.xhtml">armnn::SoftmaxDescriptor</a> softmaxDescriptor;</div><div class="line"><a name="l00272"></a><span class="lineno">  272</span>&#160;    <a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml">armnn::IConnectableLayer</a>* softmaxLayer1 = net.<a class="code" href="classarmnn_1_1_network_impl.xhtml#a30528a3bd85a0dba158bd14e252bd68a">AddSoftmaxLayer</a>(softmaxDescriptor, <span class="stringliteral">&quot;softmax_1&quot;</span>);</div><div class="line"><a name="l00273"></a><span class="lineno">  273</span>&#160;    CHECK(softmaxLayer1);</div><div class="line"><a name="l00274"></a><span class="lineno">  274</span>&#160;</div><div class="line"><a name="l00275"></a><span class="lineno">  275</span>&#160;    splitterLayer-&gt;<a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml#a80ac4eda2e7f2757ec9dd96fc96dbd16">GetOutputSlot</a>(0).<a class="code" href="classarmnn_1_1_i_output_slot.xhtml#ac1835f8756a9f03c02fcf9664e3a0fce">Connect</a>(softmaxLayer1-&gt;<a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml#a6ec9e0eb66d7d6a01240492a0b18104c">GetInputSlot</a>(0));</div><div class="line"><a name="l00276"></a><span class="lineno">  276</span>&#160;</div><div class="line"><a name="l00277"></a><span class="lineno">  277</span>&#160;    <span class="comment">// Adds a softmax layer 2.</span></div><div class="line"><a name="l00278"></a><span class="lineno">  278</span>&#160;    <a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml">armnn::IConnectableLayer</a>* softmaxLayer2 = net.<a class="code" href="classarmnn_1_1_network_impl.xhtml#a30528a3bd85a0dba158bd14e252bd68a">AddSoftmaxLayer</a>(softmaxDescriptor, <span class="stringliteral">&quot;softmax_2&quot;</span>);</div><div class="line"><a name="l00279"></a><span class="lineno">  279</span>&#160;    CHECK(softmaxLayer2);</div><div class="line"><a name="l00280"></a><span class="lineno">  280</span>&#160;</div><div class="line"><a name="l00281"></a><span class="lineno">  281</span>&#160;    splitterLayer-&gt;<a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml#a80ac4eda2e7f2757ec9dd96fc96dbd16">GetOutputSlot</a>(1).<a class="code" href="classarmnn_1_1_i_output_slot.xhtml#ac1835f8756a9f03c02fcf9664e3a0fce">Connect</a>(softmaxLayer2-&gt;<a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml#a6ec9e0eb66d7d6a01240492a0b18104c">GetInputSlot</a>(0));</div><div class="line"><a name="l00282"></a><span class="lineno">  282</span>&#160;</div><div class="line"><a name="l00283"></a><span class="lineno">  283</span>&#160;    <span class="comment">// Adds a concat layer.</span></div><div class="line"><a name="l00284"></a><span class="lineno">  284</span>&#160;    <a class="code" href="structarmnn_1_1_origins_descriptor.xhtml">armnn::OriginsDescriptor</a> concatDesc(2, 4);</div><div class="line"><a name="l00285"></a><span class="lineno">  285</span>&#160;</div><div class="line"><a name="l00286"></a><span class="lineno">  286</span>&#160;    <a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml">armnn::IConnectableLayer</a>* concatLayer = net.<a class="code" href="classarmnn_1_1_network_impl.xhtml#aea1059833739d3dccebb3a03ec35a1e6">AddConcatLayer</a>(concatDesc, <span class="stringliteral">&quot;concat layer&quot;</span>);</div><div class="line"><a name="l00287"></a><span class="lineno">  287</span>&#160;    CHECK(concatLayer);</div><div class="line"><a name="l00288"></a><span class="lineno">  288</span>&#160;</div><div class="line"><a name="l00289"></a><span class="lineno">  289</span>&#160;    softmaxLayer1-&gt;<a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml#a80ac4eda2e7f2757ec9dd96fc96dbd16">GetOutputSlot</a>(0).<a class="code" href="classarmnn_1_1_i_output_slot.xhtml#ac1835f8756a9f03c02fcf9664e3a0fce">Connect</a>(concatLayer-&gt;<a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml#a6ec9e0eb66d7d6a01240492a0b18104c">GetInputSlot</a>(0));</div><div class="line"><a name="l00290"></a><span class="lineno">  290</span>&#160;    softmaxLayer2-&gt;<a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml#a80ac4eda2e7f2757ec9dd96fc96dbd16">GetOutputSlot</a>(0).<a class="code" href="classarmnn_1_1_i_output_slot.xhtml#ac1835f8756a9f03c02fcf9664e3a0fce">Connect</a>(concatLayer-&gt;<a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml#a6ec9e0eb66d7d6a01240492a0b18104c">GetInputSlot</a>(1));</div><div class="line"><a name="l00291"></a><span class="lineno">  291</span>&#160;</div><div class="line"><a name="l00292"></a><span class="lineno">  292</span>&#160;    <span class="comment">// Adds an output layer.</span></div><div class="line"><a name="l00293"></a><span class="lineno">  293</span>&#160;    <a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml">armnn::IConnectableLayer</a>* outputLayer = net.<a class="code" href="classarmnn_1_1_network_impl.xhtml#af5790069aa11fd1c5bb2e17cecb06528">AddOutputLayer</a>(0, <span class="stringliteral">&quot;output layer&quot;</span>);</div><div class="line"><a name="l00294"></a><span class="lineno">  294</span>&#160;    CHECK(outputLayer);</div><div class="line"><a name="l00295"></a><span class="lineno">  295</span>&#160;</div><div class="line"><a name="l00296"></a><span class="lineno">  296</span>&#160;    concatLayer-&gt;<a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml#a80ac4eda2e7f2757ec9dd96fc96dbd16">GetOutputSlot</a>(0).<a class="code" href="classarmnn_1_1_i_output_slot.xhtml#ac1835f8756a9f03c02fcf9664e3a0fce">Connect</a>(outputLayer-&gt;<a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml#a6ec9e0eb66d7d6a01240492a0b18104c">GetInputSlot</a>(0));</div><div class="line"><a name="l00297"></a><span class="lineno">  297</span>&#160;</div><div class="line"><a name="l00298"></a><span class="lineno">  298</span>&#160;    CHECK(splitterLayer-&gt;<a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml#ac2dac3b61c94de52093616be4ab17f8d">GetNumOutputSlots</a>() == 2);</div><div class="line"><a name="l00299"></a><span class="lineno">  299</span>&#160;    CHECK(splitterLayer-&gt;<a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml#a80ac4eda2e7f2757ec9dd96fc96dbd16">GetOutputSlot</a>(0).<a class="code" href="classarmnn_1_1_i_output_slot.xhtml#a9fffb92dc6d2edd5258d574a5862fc83">GetConnection</a>(0) == &amp;softmaxLayer1-&gt;<a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml#a6ec9e0eb66d7d6a01240492a0b18104c">GetInputSlot</a>(0));</div><div class="line"><a name="l00300"></a><span class="lineno">  300</span>&#160;    CHECK(&amp;splitterLayer-&gt;<a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml#a80ac4eda2e7f2757ec9dd96fc96dbd16">GetOutputSlot</a>(0) == softmaxLayer1-&gt;<a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml#a6ec9e0eb66d7d6a01240492a0b18104c">GetInputSlot</a>(0).<a class="code" href="classarmnn_1_1_i_input_slot.xhtml#a81fbf6103761e55061b62ba989b00f10">GetConnection</a>());</div><div class="line"><a name="l00301"></a><span class="lineno">  301</span>&#160;    CHECK(splitterLayer-&gt;<a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml#a80ac4eda2e7f2757ec9dd96fc96dbd16">GetOutputSlot</a>(1).<a class="code" href="classarmnn_1_1_i_output_slot.xhtml#a9fffb92dc6d2edd5258d574a5862fc83">GetConnection</a>(0) == &amp;softmaxLayer2-&gt;<a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml#a6ec9e0eb66d7d6a01240492a0b18104c">GetInputSlot</a>(0));</div><div class="line"><a name="l00302"></a><span class="lineno">  302</span>&#160;    CHECK(&amp;splitterLayer-&gt;<a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml#a80ac4eda2e7f2757ec9dd96fc96dbd16">GetOutputSlot</a>(1) == softmaxLayer2-&gt;<a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml#a6ec9e0eb66d7d6a01240492a0b18104c">GetInputSlot</a>(0).<a class="code" href="classarmnn_1_1_i_input_slot.xhtml#a81fbf6103761e55061b62ba989b00f10">GetConnection</a>());</div><div class="line"><a name="l00303"></a><span class="lineno">  303</span>&#160;</div><div class="line"><a name="l00304"></a><span class="lineno">  304</span>&#160;    CHECK(concatLayer-&gt;<a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml#a9c2cba04b6d7ace4fc2a2436b82a5a63">GetNumInputSlots</a>() == 2);</div><div class="line"><a name="l00305"></a><span class="lineno">  305</span>&#160;    CHECK(softmaxLayer1-&gt;<a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml#a80ac4eda2e7f2757ec9dd96fc96dbd16">GetOutputSlot</a>(0).<a class="code" href="classarmnn_1_1_i_output_slot.xhtml#a9fffb92dc6d2edd5258d574a5862fc83">GetConnection</a>(0) == &amp;concatLayer-&gt;<a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml#a6ec9e0eb66d7d6a01240492a0b18104c">GetInputSlot</a>(0));</div><div class="line"><a name="l00306"></a><span class="lineno">  306</span>&#160;    CHECK(&amp;softmaxLayer1-&gt;<a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml#a80ac4eda2e7f2757ec9dd96fc96dbd16">GetOutputSlot</a>(0) == concatLayer-&gt;<a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml#a6ec9e0eb66d7d6a01240492a0b18104c">GetInputSlot</a>(0).<a class="code" href="classarmnn_1_1_i_input_slot.xhtml#a81fbf6103761e55061b62ba989b00f10">GetConnection</a>());</div><div class="line"><a name="l00307"></a><span class="lineno">  307</span>&#160;    CHECK(softmaxLayer2-&gt;<a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml#a80ac4eda2e7f2757ec9dd96fc96dbd16">GetOutputSlot</a>(0).<a class="code" href="classarmnn_1_1_i_output_slot.xhtml#a9fffb92dc6d2edd5258d574a5862fc83">GetConnection</a>(0) == &amp;concatLayer-&gt;<a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml#a6ec9e0eb66d7d6a01240492a0b18104c">GetInputSlot</a>(1));</div><div class="line"><a name="l00308"></a><span class="lineno">  308</span>&#160;    CHECK(&amp;softmaxLayer2-&gt;<a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml#a80ac4eda2e7f2757ec9dd96fc96dbd16">GetOutputSlot</a>(0) == concatLayer-&gt;<a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml#a6ec9e0eb66d7d6a01240492a0b18104c">GetInputSlot</a>(1).<a class="code" href="classarmnn_1_1_i_input_slot.xhtml#a81fbf6103761e55061b62ba989b00f10">GetConnection</a>());</div><div class="line"><a name="l00309"></a><span class="lineno">  309</span>&#160;}</div><div class="line"><a name="l00310"></a><span class="lineno">  310</span>&#160;</div><div class="line"><a name="l00311"></a><span class="lineno">  311</span>&#160;TEST_CASE(<span class="stringliteral">&quot;NetworkModification_SplitterAddition&quot;</span>)</div><div class="line"><a name="l00312"></a><span class="lineno">  312</span>&#160;{</div><div class="line"><a name="l00313"></a><span class="lineno">  313</span>&#160;    <a class="code" href="classarmnn_1_1_network_impl.xhtml">armnn::NetworkImpl</a> net;</div><div class="line"><a name="l00314"></a><span class="lineno">  314</span>&#160;</div><div class="line"><a name="l00315"></a><span class="lineno">  315</span>&#160;    <span class="comment">// Adds an input layer and an input tensor descriptor.</span></div><div class="line"><a name="l00316"></a><span class="lineno">  316</span>&#160;    <a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml">armnn::IConnectableLayer</a>* layer = net.<a class="code" href="classarmnn_1_1_network_impl.xhtml#aa6c1c42ea44777302e87ce0fad5ac510">AddInputLayer</a>(0, <span class="stringliteral">&quot;input layer&quot;</span>);</div><div class="line"><a name="l00317"></a><span class="lineno">  317</span>&#160;    CHECK(layer);</div><div class="line"><a name="l00318"></a><span class="lineno">  318</span>&#160;</div><div class="line"><a name="l00319"></a><span class="lineno">  319</span>&#160;    <span class="comment">// Adds a splitter layer.</span></div><div class="line"><a name="l00320"></a><span class="lineno">  320</span>&#160;    <a class="code" href="structarmnn_1_1_views_descriptor.xhtml">armnn::ViewsDescriptor</a> splitterDesc(2,4);</div><div class="line"><a name="l00321"></a><span class="lineno">  321</span>&#160;</div><div class="line"><a name="l00322"></a><span class="lineno">  322</span>&#160;    <a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml">armnn::IConnectableLayer</a>* <span class="keyword">const</span> splitterLayer = net.<a class="code" href="classarmnn_1_1_network_impl.xhtml#a6f6d81d8a4f1f85f3616e8306760061c">AddSplitterLayer</a>(splitterDesc, <span class="stringliteral">&quot;splitter layer&quot;</span>);</div><div class="line"><a name="l00323"></a><span class="lineno">  323</span>&#160;    CHECK(splitterLayer);</div><div class="line"><a name="l00324"></a><span class="lineno">  324</span>&#160;</div><div class="line"><a name="l00325"></a><span class="lineno">  325</span>&#160;    layer-&gt;<a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml#a80ac4eda2e7f2757ec9dd96fc96dbd16">GetOutputSlot</a>(0).<a class="code" href="classarmnn_1_1_i_output_slot.xhtml#ac1835f8756a9f03c02fcf9664e3a0fce">Connect</a>(splitterLayer-&gt;<a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml#a6ec9e0eb66d7d6a01240492a0b18104c">GetInputSlot</a>(0));</div><div class="line"><a name="l00326"></a><span class="lineno">  326</span>&#160;</div><div class="line"><a name="l00327"></a><span class="lineno">  327</span>&#160;    <span class="comment">// Adds a softmax layer 1.</span></div><div class="line"><a name="l00328"></a><span class="lineno">  328</span>&#160;    <a class="code" href="structarmnn_1_1_softmax_descriptor.xhtml">armnn::SoftmaxDescriptor</a> softmaxDescriptor;</div><div class="line"><a name="l00329"></a><span class="lineno">  329</span>&#160;    <a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml">armnn::IConnectableLayer</a>* <span class="keyword">const</span> softmax1Layer = net.<a class="code" href="classarmnn_1_1_network_impl.xhtml#a30528a3bd85a0dba158bd14e252bd68a">AddSoftmaxLayer</a>(softmaxDescriptor, <span class="stringliteral">&quot;softmax_1&quot;</span>);</div><div class="line"><a name="l00330"></a><span class="lineno">  330</span>&#160;    CHECK(softmax1Layer);</div><div class="line"><a name="l00331"></a><span class="lineno">  331</span>&#160;</div><div class="line"><a name="l00332"></a><span class="lineno">  332</span>&#160;    splitterLayer-&gt;<a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml#a80ac4eda2e7f2757ec9dd96fc96dbd16">GetOutputSlot</a>(0).<a class="code" href="classarmnn_1_1_i_output_slot.xhtml#ac1835f8756a9f03c02fcf9664e3a0fce">Connect</a>(softmax1Layer-&gt;<a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml#a6ec9e0eb66d7d6a01240492a0b18104c">GetInputSlot</a>(0));</div><div class="line"><a name="l00333"></a><span class="lineno">  333</span>&#160;</div><div class="line"><a name="l00334"></a><span class="lineno">  334</span>&#160;    <span class="comment">// Adds a softmax layer 2.</span></div><div class="line"><a name="l00335"></a><span class="lineno">  335</span>&#160;    <a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml">armnn::IConnectableLayer</a>* <span class="keyword">const</span> softmax2Layer = net.<a class="code" href="classarmnn_1_1_network_impl.xhtml#a30528a3bd85a0dba158bd14e252bd68a">AddSoftmaxLayer</a>(softmaxDescriptor, <span class="stringliteral">&quot;softmax_2&quot;</span>);</div><div class="line"><a name="l00336"></a><span class="lineno">  336</span>&#160;    CHECK(softmax2Layer);</div><div class="line"><a name="l00337"></a><span class="lineno">  337</span>&#160;</div><div class="line"><a name="l00338"></a><span class="lineno">  338</span>&#160;    splitterLayer-&gt;<a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml#a80ac4eda2e7f2757ec9dd96fc96dbd16">GetOutputSlot</a>(1).<a class="code" href="classarmnn_1_1_i_output_slot.xhtml#ac1835f8756a9f03c02fcf9664e3a0fce">Connect</a>(softmax2Layer-&gt;<a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml#a6ec9e0eb66d7d6a01240492a0b18104c">GetInputSlot</a>(0));</div><div class="line"><a name="l00339"></a><span class="lineno">  339</span>&#160;</div><div class="line"><a name="l00340"></a><span class="lineno">  340</span>&#160;    <span class="comment">// Adds addition layer.</span></div><div class="line"><a name="l00341"></a><span class="lineno">  341</span>&#160;    layer = net.<a class="code" href="classarmnn_1_1_network_impl.xhtml#a39f1b38d89c4de186742eafcbb3b1319">AddAdditionLayer</a>(<span class="stringliteral">&quot;add layer&quot;</span>);</div><div class="line"><a name="l00342"></a><span class="lineno">  342</span>&#160;    CHECK(layer);</div><div class="line"><a name="l00343"></a><span class="lineno">  343</span>&#160;</div><div class="line"><a name="l00344"></a><span class="lineno">  344</span>&#160;    softmax1Layer-&gt;<a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml#a80ac4eda2e7f2757ec9dd96fc96dbd16">GetOutputSlot</a>(0).<a class="code" href="classarmnn_1_1_i_output_slot.xhtml#ac1835f8756a9f03c02fcf9664e3a0fce">Connect</a>(layer-&gt;<a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml#a6ec9e0eb66d7d6a01240492a0b18104c">GetInputSlot</a>(0));</div><div class="line"><a name="l00345"></a><span class="lineno">  345</span>&#160;    softmax2Layer-&gt;<a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml#a80ac4eda2e7f2757ec9dd96fc96dbd16">GetOutputSlot</a>(0).<a class="code" href="classarmnn_1_1_i_output_slot.xhtml#ac1835f8756a9f03c02fcf9664e3a0fce">Connect</a>(layer-&gt;<a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml#a6ec9e0eb66d7d6a01240492a0b18104c">GetInputSlot</a>(1));</div><div class="line"><a name="l00346"></a><span class="lineno">  346</span>&#160;</div><div class="line"><a name="l00347"></a><span class="lineno">  347</span>&#160;    <span class="comment">// Adds an output layer.</span></div><div class="line"><a name="l00348"></a><span class="lineno">  348</span>&#160;    <a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml">armnn::IConnectableLayer</a>* prevLayer = layer;</div><div class="line"><a name="l00349"></a><span class="lineno">  349</span>&#160;    layer = net.<a class="code" href="classarmnn_1_1_network_impl.xhtml#af5790069aa11fd1c5bb2e17cecb06528">AddOutputLayer</a>(0, <span class="stringliteral">&quot;output layer&quot;</span>);</div><div class="line"><a name="l00350"></a><span class="lineno">  350</span>&#160;</div><div class="line"><a name="l00351"></a><span class="lineno">  351</span>&#160;    prevLayer-&gt;<a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml#a80ac4eda2e7f2757ec9dd96fc96dbd16">GetOutputSlot</a>(0).<a class="code" href="classarmnn_1_1_i_output_slot.xhtml#ac1835f8756a9f03c02fcf9664e3a0fce">Connect</a>(layer-&gt;<a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml#a6ec9e0eb66d7d6a01240492a0b18104c">GetInputSlot</a>(0));</div><div class="line"><a name="l00352"></a><span class="lineno">  352</span>&#160;</div><div class="line"><a name="l00353"></a><span class="lineno">  353</span>&#160;    CHECK(layer);</div><div class="line"><a name="l00354"></a><span class="lineno">  354</span>&#160;}</div><div class="line"><a name="l00355"></a><span class="lineno">  355</span>&#160;</div><div class="line"><a name="l00356"></a><span class="lineno">  356</span>&#160;TEST_CASE(<span class="stringliteral">&quot;NetworkModification_SplitterMultiplication&quot;</span>)</div><div class="line"><a name="l00357"></a><span class="lineno">  357</span>&#160;{</div><div class="line"><a name="l00358"></a><span class="lineno">  358</span>&#160;    <a class="code" href="classarmnn_1_1_network_impl.xhtml">armnn::NetworkImpl</a> net;</div><div class="line"><a name="l00359"></a><span class="lineno">  359</span>&#160;</div><div class="line"><a name="l00360"></a><span class="lineno">  360</span>&#160;    <span class="comment">// Adds an input layer and an input tensor descriptor.</span></div><div class="line"><a name="l00361"></a><span class="lineno">  361</span>&#160;    <a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml">armnn::IConnectableLayer</a>* layer = net.<a class="code" href="classarmnn_1_1_network_impl.xhtml#aa6c1c42ea44777302e87ce0fad5ac510">AddInputLayer</a>(0, <span class="stringliteral">&quot;input layer&quot;</span>);</div><div class="line"><a name="l00362"></a><span class="lineno">  362</span>&#160;    CHECK(layer);</div><div class="line"><a name="l00363"></a><span class="lineno">  363</span>&#160;</div><div class="line"><a name="l00364"></a><span class="lineno">  364</span>&#160;    <span class="comment">// Adds a splitter layer.</span></div><div class="line"><a name="l00365"></a><span class="lineno">  365</span>&#160;    <a class="code" href="structarmnn_1_1_views_descriptor.xhtml">armnn::ViewsDescriptor</a> splitterDesc(2,4);</div><div class="line"><a name="l00366"></a><span class="lineno">  366</span>&#160;    <a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml">armnn::IConnectableLayer</a>* <span class="keyword">const</span> splitterLayer = net.<a class="code" href="classarmnn_1_1_network_impl.xhtml#a6f6d81d8a4f1f85f3616e8306760061c">AddSplitterLayer</a>(splitterDesc, <span class="stringliteral">&quot;splitter layer&quot;</span>);</div><div class="line"><a name="l00367"></a><span class="lineno">  367</span>&#160;    CHECK(splitterLayer);</div><div class="line"><a name="l00368"></a><span class="lineno">  368</span>&#160;</div><div class="line"><a name="l00369"></a><span class="lineno">  369</span>&#160;    layer-&gt;<a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml#a80ac4eda2e7f2757ec9dd96fc96dbd16">GetOutputSlot</a>(0).<a class="code" href="classarmnn_1_1_i_output_slot.xhtml#ac1835f8756a9f03c02fcf9664e3a0fce">Connect</a>(splitterLayer-&gt;<a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml#a6ec9e0eb66d7d6a01240492a0b18104c">GetInputSlot</a>(0));</div><div class="line"><a name="l00370"></a><span class="lineno">  370</span>&#160;</div><div class="line"><a name="l00371"></a><span class="lineno">  371</span>&#160;    <span class="comment">// Adds a softmax layer 1.</span></div><div class="line"><a name="l00372"></a><span class="lineno">  372</span>&#160;    <a class="code" href="structarmnn_1_1_softmax_descriptor.xhtml">armnn::SoftmaxDescriptor</a> softmaxDescriptor;</div><div class="line"><a name="l00373"></a><span class="lineno">  373</span>&#160;    <a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml">armnn::IConnectableLayer</a>* <span class="keyword">const</span> softmax1Layer = net.<a class="code" href="classarmnn_1_1_network_impl.xhtml#a30528a3bd85a0dba158bd14e252bd68a">AddSoftmaxLayer</a>(softmaxDescriptor, <span class="stringliteral">&quot;softmax_1&quot;</span>);</div><div class="line"><a name="l00374"></a><span class="lineno">  374</span>&#160;    CHECK(softmax1Layer);</div><div class="line"><a name="l00375"></a><span class="lineno">  375</span>&#160;</div><div class="line"><a name="l00376"></a><span class="lineno">  376</span>&#160;    splitterLayer-&gt;<a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml#a80ac4eda2e7f2757ec9dd96fc96dbd16">GetOutputSlot</a>(0).<a class="code" href="classarmnn_1_1_i_output_slot.xhtml#ac1835f8756a9f03c02fcf9664e3a0fce">Connect</a>(softmax1Layer-&gt;<a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml#a6ec9e0eb66d7d6a01240492a0b18104c">GetInputSlot</a>(0));</div><div class="line"><a name="l00377"></a><span class="lineno">  377</span>&#160;</div><div class="line"><a name="l00378"></a><span class="lineno">  378</span>&#160;    <span class="comment">// Adds a softmax layer 2.</span></div><div class="line"><a name="l00379"></a><span class="lineno">  379</span>&#160;    <a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml">armnn::IConnectableLayer</a>* <span class="keyword">const</span> softmax2Layer = net.<a class="code" href="classarmnn_1_1_network_impl.xhtml#a30528a3bd85a0dba158bd14e252bd68a">AddSoftmaxLayer</a>(softmaxDescriptor, <span class="stringliteral">&quot;softmax_2&quot;</span>);</div><div class="line"><a name="l00380"></a><span class="lineno">  380</span>&#160;    CHECK(softmax2Layer);</div><div class="line"><a name="l00381"></a><span class="lineno">  381</span>&#160;</div><div class="line"><a name="l00382"></a><span class="lineno">  382</span>&#160;    splitterLayer-&gt;<a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml#a80ac4eda2e7f2757ec9dd96fc96dbd16">GetOutputSlot</a>(1).<a class="code" href="classarmnn_1_1_i_output_slot.xhtml#ac1835f8756a9f03c02fcf9664e3a0fce">Connect</a>(softmax2Layer-&gt;<a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml#a6ec9e0eb66d7d6a01240492a0b18104c">GetInputSlot</a>(0));</div><div class="line"><a name="l00383"></a><span class="lineno">  383</span>&#160;</div><div class="line"><a name="l00384"></a><span class="lineno">  384</span>&#160;    <span class="comment">// Adds multiplication layer.</span></div><div class="line"><a name="l00385"></a><span class="lineno">  385</span>&#160;    layer = net.<a class="code" href="classarmnn_1_1_network_impl.xhtml#abb59f6ba9988dae88e0f48e68d87fc32">AddMultiplicationLayer</a>(<span class="stringliteral">&quot;multiplication layer&quot;</span>);</div><div class="line"><a name="l00386"></a><span class="lineno">  386</span>&#160;    CHECK(layer);</div><div class="line"><a name="l00387"></a><span class="lineno">  387</span>&#160;</div><div class="line"><a name="l00388"></a><span class="lineno">  388</span>&#160;    softmax1Layer-&gt;<a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml#a80ac4eda2e7f2757ec9dd96fc96dbd16">GetOutputSlot</a>(0).<a class="code" href="classarmnn_1_1_i_output_slot.xhtml#ac1835f8756a9f03c02fcf9664e3a0fce">Connect</a>(layer-&gt;<a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml#a6ec9e0eb66d7d6a01240492a0b18104c">GetInputSlot</a>(0));</div><div class="line"><a name="l00389"></a><span class="lineno">  389</span>&#160;    softmax2Layer-&gt;<a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml#a80ac4eda2e7f2757ec9dd96fc96dbd16">GetOutputSlot</a>(0).<a class="code" href="classarmnn_1_1_i_output_slot.xhtml#ac1835f8756a9f03c02fcf9664e3a0fce">Connect</a>(layer-&gt;<a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml#a6ec9e0eb66d7d6a01240492a0b18104c">GetInputSlot</a>(1));</div><div class="line"><a name="l00390"></a><span class="lineno">  390</span>&#160;</div><div class="line"><a name="l00391"></a><span class="lineno">  391</span>&#160;    <span class="comment">// Adds an output layer.</span></div><div class="line"><a name="l00392"></a><span class="lineno">  392</span>&#160;    <a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml">armnn::IConnectableLayer</a>* prevLayer = layer;</div><div class="line"><a name="l00393"></a><span class="lineno">  393</span>&#160;    layer = net.<a class="code" href="classarmnn_1_1_network_impl.xhtml#af5790069aa11fd1c5bb2e17cecb06528">AddOutputLayer</a>(0, <span class="stringliteral">&quot;output layer&quot;</span>);</div><div class="line"><a name="l00394"></a><span class="lineno">  394</span>&#160;    CHECK(layer);</div><div class="line"><a name="l00395"></a><span class="lineno">  395</span>&#160;</div><div class="line"><a name="l00396"></a><span class="lineno">  396</span>&#160;    prevLayer-&gt;<a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml#a80ac4eda2e7f2757ec9dd96fc96dbd16">GetOutputSlot</a>(0).<a class="code" href="classarmnn_1_1_i_output_slot.xhtml#ac1835f8756a9f03c02fcf9664e3a0fce">Connect</a>(layer-&gt;<a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml#a6ec9e0eb66d7d6a01240492a0b18104c">GetInputSlot</a>(0));</div><div class="line"><a name="l00397"></a><span class="lineno">  397</span>&#160;}</div><div class="line"><a name="l00398"></a><span class="lineno">  398</span>&#160;</div><div class="line"><a name="l00399"></a><span class="lineno">  399</span>&#160;TEST_CASE(<span class="stringliteral">&quot;Network_AddQuantize&quot;</span>)</div><div class="line"><a name="l00400"></a><span class="lineno">  400</span>&#160;{</div><div class="line"><a name="l00401"></a><span class="lineno">  401</span>&#160;    <span class="keyword">struct </span>Test : <span class="keyword">public</span> <a class="code" href="classarmnn_1_1_i_strategy.xhtml">armnn::IStrategy</a></div><div class="line"><a name="l00402"></a><span class="lineno">  402</span>&#160;    {</div><div class="line"><a name="l00403"></a><span class="lineno">  403</span>&#160;        <span class="keywordtype">void</span> <a class="code" href="classarmnn_1_1_i_strategy.xhtml#aad5bb4d8050fd428ff03ae6d81e3014c">ExecuteStrategy</a>(<span class="keyword">const</span> <a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml">armnn::IConnectableLayer</a>* layer,</div><div class="line"><a name="l00404"></a><span class="lineno">  404</span>&#160;                             <span class="keyword">const</span> <a class="code" href="structarmnn_1_1_base_descriptor.xhtml">armnn::BaseDescriptor</a>&amp; descriptor,</div><div class="line"><a name="l00405"></a><span class="lineno">  405</span>&#160;                             <span class="keyword">const</span> std::vector&lt;armnn::ConstTensor&gt;&amp; constants,</div><div class="line"><a name="l00406"></a><span class="lineno">  406</span>&#160;                             <span class="keyword">const</span> <span class="keywordtype">char</span>* name,</div><div class="line"><a name="l00407"></a><span class="lineno">  407</span>&#160;                             <span class="keyword">const</span> <a class="code" href="namespacearmnn.xhtml#ab8cf8f9fb6792e654c2d8d8382f6f01b">armnn::LayerBindingId</a> <span class="keywordtype">id</span> = 0)<span class="keyword"> override</span></div><div class="line"><a name="l00408"></a><span class="lineno">  408</span>&#160;<span class="keyword">        </span>{</div><div class="line"><a name="l00409"></a><span class="lineno">  409</span>&#160;            <a class="code" href="namespacearmnn.xhtml#a44affeeb090c3c6a3062830562672e84">armnn::IgnoreUnused</a>(descriptor, constants, <span class="keywordtype">id</span>);</div><div class="line"><a name="l00410"></a><span class="lineno">  410</span>&#160;            <span class="keywordflow">switch</span> (layer-&gt;<a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml#adceb04ae84c524e4d01881e3754a4d59">GetType</a>())</div><div class="line"><a name="l00411"></a><span class="lineno">  411</span>&#160;            {</div><div class="line"><a name="l00412"></a><span class="lineno">  412</span>&#160;                <span class="keywordflow">case</span> <a class="code" href="namespacearmnn.xhtml#a56943a0946e5f15e5e58054b8e7a04a4a324118a6721dd6b8a9b9f4e327df2bf5">armnn::LayerType::Input</a>: <span class="keywordflow">break</span>;</div><div class="line"><a name="l00413"></a><span class="lineno">  413</span>&#160;                <span class="keywordflow">case</span> <a class="code" href="namespacearmnn.xhtml#a56943a0946e5f15e5e58054b8e7a04a4a29c2c02a361c9d7028472e5d92cd4a54">armnn::LayerType::Output</a>: <span class="keywordflow">break</span>;</div><div class="line"><a name="l00414"></a><span class="lineno">  414</span>&#160;                <span class="keywordflow">case</span> <a class="code" href="namespacearmnn.xhtml#a56943a0946e5f15e5e58054b8e7a04a4aca39930e22f40d10155a57dba32240bb">armnn::LayerType::Quantize</a>:</div><div class="line"><a name="l00415"></a><span class="lineno">  415</span>&#160;                {</div><div class="line"><a name="l00416"></a><span class="lineno">  416</span>&#160;                    m_Visited = <span class="keyword">true</span>;</div><div class="line"><a name="l00417"></a><span class="lineno">  417</span>&#160;</div><div class="line"><a name="l00418"></a><span class="lineno">  418</span>&#160;                    CHECK(layer);</div><div class="line"><a name="l00419"></a><span class="lineno">  419</span>&#160;</div><div class="line"><a name="l00420"></a><span class="lineno">  420</span>&#160;                    std::string expectedName = std::string(<span class="stringliteral">&quot;quantize&quot;</span>);</div><div class="line"><a name="l00421"></a><span class="lineno">  421</span>&#160;                    CHECK(std::string(layer-&gt;<a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml#afcc1c3a20bd2860e0ddd21674389246f">GetName</a>()) == expectedName);</div><div class="line"><a name="l00422"></a><span class="lineno">  422</span>&#160;                    CHECK(std::string(name) == expectedName);</div><div class="line"><a name="l00423"></a><span class="lineno">  423</span>&#160;</div><div class="line"><a name="l00424"></a><span class="lineno">  424</span>&#160;                    CHECK(layer-&gt;<a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml#a9c2cba04b6d7ace4fc2a2436b82a5a63">GetNumInputSlots</a>() == 1);</div><div class="line"><a name="l00425"></a><span class="lineno">  425</span>&#160;                    CHECK(layer-&gt;<a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml#ac2dac3b61c94de52093616be4ab17f8d">GetNumOutputSlots</a>() == 1);</div><div class="line"><a name="l00426"></a><span class="lineno">  426</span>&#160;</div><div class="line"><a name="l00427"></a><span class="lineno">  427</span>&#160;                    <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_info.xhtml">armnn::TensorInfo</a>&amp; infoIn = layer-&gt;<a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml#a6ec9e0eb66d7d6a01240492a0b18104c">GetInputSlot</a>(0).<a class="code" href="classarmnn_1_1_i_input_slot.xhtml#a81fbf6103761e55061b62ba989b00f10">GetConnection</a>()-&gt;<a class="code" href="classarmnn_1_1_i_output_slot.xhtml#a9943775a364fc4ab53b85ac88f311886">GetTensorInfo</a>();</div><div class="line"><a name="l00428"></a><span class="lineno">  428</span>&#160;                    CHECK((infoIn.GetDataType() == <a class="code" href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a166495adc0d0f53bee6baecc577f5204">armnn::DataType::Float32</a>));</div><div class="line"><a name="l00429"></a><span class="lineno">  429</span>&#160;</div><div class="line"><a name="l00430"></a><span class="lineno">  430</span>&#160;                    <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_info.xhtml">armnn::TensorInfo</a>&amp; infoOut = layer-&gt;<a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml#a80ac4eda2e7f2757ec9dd96fc96dbd16">GetOutputSlot</a>(0).<a class="code" href="classarmnn_1_1_i_output_slot.xhtml#a9943775a364fc4ab53b85ac88f311886">GetTensorInfo</a>();</div><div class="line"><a name="l00431"></a><span class="lineno">  431</span>&#160;                    CHECK((infoOut.<a class="code" href="classarmnn_1_1_tensor_info.xhtml#aea909c7327109228ef618d459015def3">GetDataType</a>() == <a class="code" href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a0a3f57c876f5a230244c38e1453a8a6e">armnn::DataType::QAsymmU8</a>));</div><div class="line"><a name="l00432"></a><span class="lineno">  432</span>&#160;                    <span class="keywordflow">break</span>;</div><div class="line"><a name="l00433"></a><span class="lineno">  433</span>&#160;                }</div><div class="line"><a name="l00434"></a><span class="lineno">  434</span>&#160;                <span class="keywordflow">default</span>:</div><div class="line"><a name="l00435"></a><span class="lineno">  435</span>&#160;                {</div><div class="line"><a name="l00436"></a><span class="lineno">  436</span>&#160;                    <span class="comment">// nothing</span></div><div class="line"><a name="l00437"></a><span class="lineno">  437</span>&#160;                }</div><div class="line"><a name="l00438"></a><span class="lineno">  438</span>&#160;            }</div><div class="line"><a name="l00439"></a><span class="lineno">  439</span>&#160;        }</div><div class="line"><a name="l00440"></a><span class="lineno">  440</span>&#160;</div><div class="line"><a name="l00441"></a><span class="lineno">  441</span>&#160;        <span class="keywordtype">bool</span> m_Visited = <span class="keyword">false</span>;</div><div class="line"><a name="l00442"></a><span class="lineno">  442</span>&#160;    };</div><div class="line"><a name="l00443"></a><span class="lineno">  443</span>&#160;</div><div class="line"><a name="l00444"></a><span class="lineno">  444</span>&#160;</div><div class="line"><a name="l00445"></a><span class="lineno">  445</span>&#160;    <span class="keyword">auto</span> graph = <a class="code" href="classarmnn_1_1_i_network.xhtml#a464f0ff87b1aabf71febaa71321dd40b">armnn::INetwork::Create</a>();</div><div class="line"><a name="l00446"></a><span class="lineno">  446</span>&#160;</div><div class="line"><a name="l00447"></a><span class="lineno">  447</span>&#160;    <span class="keyword">auto</span> input = graph-&gt;AddInputLayer(0, <span class="stringliteral">&quot;input&quot;</span>);</div><div class="line"><a name="l00448"></a><span class="lineno">  448</span>&#160;    <span class="keyword">auto</span> quantize = graph-&gt;AddQuantizeLayer(<span class="stringliteral">&quot;quantize&quot;</span>);</div><div class="line"><a name="l00449"></a><span class="lineno">  449</span>&#160;    <span class="keyword">auto</span> output = graph-&gt;AddOutputLayer(1, <span class="stringliteral">&quot;output&quot;</span>);</div><div class="line"><a name="l00450"></a><span class="lineno">  450</span>&#160;</div><div class="line"><a name="l00451"></a><span class="lineno">  451</span>&#160;    input-&gt;GetOutputSlot(0).Connect(quantize-&gt;GetInputSlot(0));</div><div class="line"><a name="l00452"></a><span class="lineno">  452</span>&#160;    quantize-&gt;GetOutputSlot(0).Connect(output-&gt;GetInputSlot(0));</div><div class="line"><a name="l00453"></a><span class="lineno">  453</span>&#160;</div><div class="line"><a name="l00454"></a><span class="lineno">  454</span>&#160;    <a class="code" href="classarmnn_1_1_tensor_info.xhtml">armnn::TensorInfo</a> infoIn({3,1}, <a class="code" href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a166495adc0d0f53bee6baecc577f5204">armnn::DataType::Float32</a>);</div><div class="line"><a name="l00455"></a><span class="lineno">  455</span>&#160;    input-&gt;GetOutputSlot(0).SetTensorInfo(infoIn);</div><div class="line"><a name="l00456"></a><span class="lineno">  456</span>&#160;</div><div class="line"><a name="l00457"></a><span class="lineno">  457</span>&#160;    <a class="code" href="classarmnn_1_1_tensor_info.xhtml">armnn::TensorInfo</a> infoOut({3,1}, <a class="code" href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a0a3f57c876f5a230244c38e1453a8a6e">armnn::DataType::QAsymmU8</a>);</div><div class="line"><a name="l00458"></a><span class="lineno">  458</span>&#160;    quantize-&gt;GetOutputSlot(0).SetTensorInfo(infoOut);</div><div class="line"><a name="l00459"></a><span class="lineno">  459</span>&#160;</div><div class="line"><a name="l00460"></a><span class="lineno">  460</span>&#160;    Test testQuantize;</div><div class="line"><a name="l00461"></a><span class="lineno">  461</span>&#160;    graph-&gt;ExecuteStrategy(testQuantize);</div><div class="line"><a name="l00462"></a><span class="lineno">  462</span>&#160;</div><div class="line"><a name="l00463"></a><span class="lineno">  463</span>&#160;    CHECK(testQuantize.m_Visited == <span class="keyword">true</span>);</div><div class="line"><a name="l00464"></a><span class="lineno">  464</span>&#160;</div><div class="line"><a name="l00465"></a><span class="lineno">  465</span>&#160;}</div><div class="line"><a name="l00466"></a><span class="lineno">  466</span>&#160;</div><div class="line"><a name="l00467"></a><span class="lineno">  467</span>&#160;TEST_CASE(<span class="stringliteral">&quot;Network_AddMerge&quot;</span>)</div><div class="line"><a name="l00468"></a><span class="lineno">  468</span>&#160;{</div><div class="line"><a name="l00469"></a><span class="lineno">  469</span>&#160;    <span class="keyword">struct </span>Test : <span class="keyword">public</span> <a class="code" href="classarmnn_1_1_i_strategy.xhtml">armnn::IStrategy</a></div><div class="line"><a name="l00470"></a><span class="lineno">  470</span>&#160;    {</div><div class="line"><a name="l00471"></a><span class="lineno">  471</span>&#160;        <span class="keywordtype">void</span> <a class="code" href="classarmnn_1_1_i_strategy.xhtml#aad5bb4d8050fd428ff03ae6d81e3014c">ExecuteStrategy</a>(<span class="keyword">const</span> <a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml">armnn::IConnectableLayer</a>* layer,</div><div class="line"><a name="l00472"></a><span class="lineno">  472</span>&#160;                             <span class="keyword">const</span> <a class="code" href="structarmnn_1_1_base_descriptor.xhtml">armnn::BaseDescriptor</a>&amp; descriptor,</div><div class="line"><a name="l00473"></a><span class="lineno">  473</span>&#160;                             <span class="keyword">const</span> std::vector&lt;armnn::ConstTensor&gt;&amp; constants,</div><div class="line"><a name="l00474"></a><span class="lineno">  474</span>&#160;                             <span class="keyword">const</span> <span class="keywordtype">char</span>* name,</div><div class="line"><a name="l00475"></a><span class="lineno">  475</span>&#160;                             <span class="keyword">const</span> <a class="code" href="namespacearmnn.xhtml#ab8cf8f9fb6792e654c2d8d8382f6f01b">armnn::LayerBindingId</a> <span class="keywordtype">id</span> = 0)<span class="keyword"> override</span></div><div class="line"><a name="l00476"></a><span class="lineno">  476</span>&#160;<span class="keyword">        </span>{</div><div class="line"><a name="l00477"></a><span class="lineno">  477</span>&#160;            <a class="code" href="namespacearmnn.xhtml#a44affeeb090c3c6a3062830562672e84">armnn::IgnoreUnused</a>(descriptor, constants, <span class="keywordtype">id</span>);</div><div class="line"><a name="l00478"></a><span class="lineno">  478</span>&#160;            <span class="keywordflow">switch</span> (layer-&gt;<a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml#adceb04ae84c524e4d01881e3754a4d59">GetType</a>())</div><div class="line"><a name="l00479"></a><span class="lineno">  479</span>&#160;            {</div><div class="line"><a name="l00480"></a><span class="lineno">  480</span>&#160;                <span class="keywordflow">case</span> <a class="code" href="namespacearmnn.xhtml#a56943a0946e5f15e5e58054b8e7a04a4a324118a6721dd6b8a9b9f4e327df2bf5">armnn::LayerType::Input</a>: <span class="keywordflow">break</span>;</div><div class="line"><a name="l00481"></a><span class="lineno">  481</span>&#160;                <span class="keywordflow">case</span> <a class="code" href="namespacearmnn.xhtml#a56943a0946e5f15e5e58054b8e7a04a4a29c2c02a361c9d7028472e5d92cd4a54">armnn::LayerType::Output</a>: <span class="keywordflow">break</span>;</div><div class="line"><a name="l00482"></a><span class="lineno">  482</span>&#160;                <span class="keywordflow">case</span> <a class="code" href="namespacearmnn.xhtml#a56943a0946e5f15e5e58054b8e7a04a4a68be4837f6c739877233e527a996dd00">armnn::LayerType::Merge</a>:</div><div class="line"><a name="l00483"></a><span class="lineno">  483</span>&#160;                {</div><div class="line"><a name="l00484"></a><span class="lineno">  484</span>&#160;                    m_Visited = <span class="keyword">true</span>;</div><div class="line"><a name="l00485"></a><span class="lineno">  485</span>&#160;</div><div class="line"><a name="l00486"></a><span class="lineno">  486</span>&#160;                    CHECK(layer);</div><div class="line"><a name="l00487"></a><span class="lineno">  487</span>&#160;</div><div class="line"><a name="l00488"></a><span class="lineno">  488</span>&#160;                    std::string expectedName = std::string(<span class="stringliteral">&quot;merge&quot;</span>);</div><div class="line"><a name="l00489"></a><span class="lineno">  489</span>&#160;                    CHECK(std::string(layer-&gt;<a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml#afcc1c3a20bd2860e0ddd21674389246f">GetName</a>()) == expectedName);</div><div class="line"><a name="l00490"></a><span class="lineno">  490</span>&#160;                    CHECK(std::string(name) == expectedName);</div><div class="line"><a name="l00491"></a><span class="lineno">  491</span>&#160;</div><div class="line"><a name="l00492"></a><span class="lineno">  492</span>&#160;                    CHECK(layer-&gt;<a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml#a9c2cba04b6d7ace4fc2a2436b82a5a63">GetNumInputSlots</a>() == 2);</div><div class="line"><a name="l00493"></a><span class="lineno">  493</span>&#160;                    CHECK(layer-&gt;<a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml#ac2dac3b61c94de52093616be4ab17f8d">GetNumOutputSlots</a>() == 1);</div><div class="line"><a name="l00494"></a><span class="lineno">  494</span>&#160;</div><div class="line"><a name="l00495"></a><span class="lineno">  495</span>&#160;                    <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_info.xhtml">armnn::TensorInfo</a>&amp; infoIn0 = layer-&gt;<a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml#a6ec9e0eb66d7d6a01240492a0b18104c">GetInputSlot</a>(0).<a class="code" href="classarmnn_1_1_i_input_slot.xhtml#a81fbf6103761e55061b62ba989b00f10">GetConnection</a>()-&gt;<a class="code" href="classarmnn_1_1_i_output_slot.xhtml#a9943775a364fc4ab53b85ac88f311886">GetTensorInfo</a>();</div><div class="line"><a name="l00496"></a><span class="lineno">  496</span>&#160;                    CHECK((infoIn0.GetDataType() == <a class="code" href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a166495adc0d0f53bee6baecc577f5204">armnn::DataType::Float32</a>));</div><div class="line"><a name="l00497"></a><span class="lineno">  497</span>&#160;</div><div class="line"><a name="l00498"></a><span class="lineno">  498</span>&#160;                    <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_info.xhtml">armnn::TensorInfo</a>&amp; infoIn1 = layer-&gt;<a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml#a6ec9e0eb66d7d6a01240492a0b18104c">GetInputSlot</a>(1).<a class="code" href="classarmnn_1_1_i_input_slot.xhtml#a81fbf6103761e55061b62ba989b00f10">GetConnection</a>()-&gt;<a class="code" href="classarmnn_1_1_i_output_slot.xhtml#a9943775a364fc4ab53b85ac88f311886">GetTensorInfo</a>();</div><div class="line"><a name="l00499"></a><span class="lineno">  499</span>&#160;                    CHECK((infoIn1.<a class="code" href="classarmnn_1_1_tensor_info.xhtml#aea909c7327109228ef618d459015def3">GetDataType</a>() == <a class="code" href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a166495adc0d0f53bee6baecc577f5204">armnn::DataType::Float32</a>));</div><div class="line"><a name="l00500"></a><span class="lineno">  500</span>&#160;</div><div class="line"><a name="l00501"></a><span class="lineno">  501</span>&#160;                    <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_info.xhtml">armnn::TensorInfo</a>&amp; infoOut = layer-&gt;<a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml#a80ac4eda2e7f2757ec9dd96fc96dbd16">GetOutputSlot</a>(0).<a class="code" href="classarmnn_1_1_i_output_slot.xhtml#a9943775a364fc4ab53b85ac88f311886">GetTensorInfo</a>();</div><div class="line"><a name="l00502"></a><span class="lineno">  502</span>&#160;                    CHECK((infoOut.<a class="code" href="classarmnn_1_1_tensor_info.xhtml#aea909c7327109228ef618d459015def3">GetDataType</a>() == <a class="code" href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a166495adc0d0f53bee6baecc577f5204">armnn::DataType::Float32</a>));</div><div class="line"><a name="l00503"></a><span class="lineno">  503</span>&#160;                    <span class="keywordflow">break</span>;</div><div class="line"><a name="l00504"></a><span class="lineno">  504</span>&#160;                }</div><div class="line"><a name="l00505"></a><span class="lineno">  505</span>&#160;                <span class="keywordflow">default</span>:</div><div class="line"><a name="l00506"></a><span class="lineno">  506</span>&#160;                {</div><div class="line"><a name="l00507"></a><span class="lineno">  507</span>&#160;                    <span class="comment">// nothing</span></div><div class="line"><a name="l00508"></a><span class="lineno">  508</span>&#160;                }</div><div class="line"><a name="l00509"></a><span class="lineno">  509</span>&#160;            }</div><div class="line"><a name="l00510"></a><span class="lineno">  510</span>&#160;        }</div><div class="line"><a name="l00511"></a><span class="lineno">  511</span>&#160;</div><div class="line"><a name="l00512"></a><span class="lineno">  512</span>&#160;        <span class="keywordtype">bool</span> m_Visited = <span class="keyword">false</span>;</div><div class="line"><a name="l00513"></a><span class="lineno">  513</span>&#160;    };</div><div class="line"><a name="l00514"></a><span class="lineno">  514</span>&#160;</div><div class="line"><a name="l00515"></a><span class="lineno">  515</span>&#160;    <a class="code" href="namespacearmnn.xhtml#ace74f6f9feb95a964a49d79458232703">armnn::INetworkPtr</a> network = <a class="code" href="classarmnn_1_1_i_network.xhtml#a464f0ff87b1aabf71febaa71321dd40b">armnn::INetwork::Create</a>();</div><div class="line"><a name="l00516"></a><span class="lineno">  516</span>&#160;</div><div class="line"><a name="l00517"></a><span class="lineno">  517</span>&#160;    <a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml">armnn::IConnectableLayer</a>* input0 = network-&gt;AddInputLayer(0);</div><div class="line"><a name="l00518"></a><span class="lineno">  518</span>&#160;    <a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml">armnn::IConnectableLayer</a>* input1 = network-&gt;AddInputLayer(1);</div><div class="line"><a name="l00519"></a><span class="lineno">  519</span>&#160;    <a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml">armnn::IConnectableLayer</a>* merge = network-&gt;AddMergeLayer(<span class="stringliteral">&quot;merge&quot;</span>);</div><div class="line"><a name="l00520"></a><span class="lineno">  520</span>&#160;    <a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml">armnn::IConnectableLayer</a>* output = network-&gt;AddOutputLayer(0);</div><div class="line"><a name="l00521"></a><span class="lineno">  521</span>&#160;</div><div class="line"><a name="l00522"></a><span class="lineno">  522</span>&#160;    input0-&gt;<a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml#a80ac4eda2e7f2757ec9dd96fc96dbd16">GetOutputSlot</a>(0).<a class="code" href="classarmnn_1_1_i_output_slot.xhtml#ac1835f8756a9f03c02fcf9664e3a0fce">Connect</a>(merge-&gt;<a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml#a6ec9e0eb66d7d6a01240492a0b18104c">GetInputSlot</a>(0));</div><div class="line"><a name="l00523"></a><span class="lineno">  523</span>&#160;    input1-&gt;<a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml#a80ac4eda2e7f2757ec9dd96fc96dbd16">GetOutputSlot</a>(0).<a class="code" href="classarmnn_1_1_i_output_slot.xhtml#ac1835f8756a9f03c02fcf9664e3a0fce">Connect</a>(merge-&gt;<a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml#a6ec9e0eb66d7d6a01240492a0b18104c">GetInputSlot</a>(1));</div><div class="line"><a name="l00524"></a><span class="lineno">  524</span>&#160;    merge-&gt;<a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml#a80ac4eda2e7f2757ec9dd96fc96dbd16">GetOutputSlot</a>(0).<a class="code" href="classarmnn_1_1_i_output_slot.xhtml#ac1835f8756a9f03c02fcf9664e3a0fce">Connect</a>(output-&gt;<a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml#a6ec9e0eb66d7d6a01240492a0b18104c">GetInputSlot</a>(0));</div><div class="line"><a name="l00525"></a><span class="lineno">  525</span>&#160;</div><div class="line"><a name="l00526"></a><span class="lineno">  526</span>&#160;    <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_info.xhtml">armnn::TensorInfo</a> <a class="code" href="namespacearmnn.xhtml#a4dc0adc6737b5944e7671bee71788407acaf9b6b99962bf5c2264824231d7a40c">info</a>({3,1}, <a class="code" href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a166495adc0d0f53bee6baecc577f5204">armnn::DataType::Float32</a>);</div><div class="line"><a name="l00527"></a><span class="lineno">  527</span>&#160;    input0-&gt;<a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml#a80ac4eda2e7f2757ec9dd96fc96dbd16">GetOutputSlot</a>(0).<a class="code" href="classarmnn_1_1_i_output_slot.xhtml#a5ee4a6c9a2481245487b1b1a70d20fd0">SetTensorInfo</a>(info);</div><div class="line"><a name="l00528"></a><span class="lineno">  528</span>&#160;    input1-&gt;<a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml#a80ac4eda2e7f2757ec9dd96fc96dbd16">GetOutputSlot</a>(0).<a class="code" href="classarmnn_1_1_i_output_slot.xhtml#a5ee4a6c9a2481245487b1b1a70d20fd0">SetTensorInfo</a>(info);</div><div class="line"><a name="l00529"></a><span class="lineno">  529</span>&#160;    merge-&gt;<a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml#a80ac4eda2e7f2757ec9dd96fc96dbd16">GetOutputSlot</a>(0).<a class="code" href="classarmnn_1_1_i_output_slot.xhtml#a5ee4a6c9a2481245487b1b1a70d20fd0">SetTensorInfo</a>(info);</div><div class="line"><a name="l00530"></a><span class="lineno">  530</span>&#160;</div><div class="line"><a name="l00531"></a><span class="lineno">  531</span>&#160;    Test testMerge;</div><div class="line"><a name="l00532"></a><span class="lineno">  532</span>&#160;    network-&gt;ExecuteStrategy(testMerge);</div><div class="line"><a name="l00533"></a><span class="lineno">  533</span>&#160;</div><div class="line"><a name="l00534"></a><span class="lineno">  534</span>&#160;    CHECK(testMerge.m_Visited == <span class="keyword">true</span>);</div><div class="line"><a name="l00535"></a><span class="lineno">  535</span>&#160;}</div><div class="line"><a name="l00536"></a><span class="lineno">  536</span>&#160;</div><div class="line"><a name="l00537"></a><span class="lineno">  537</span>&#160;TEST_CASE(<span class="stringliteral">&quot;StandInLayerNetworkTest&quot;</span>)</div><div class="line"><a name="l00538"></a><span class="lineno">  538</span>&#160;{</div><div class="line"><a name="l00539"></a><span class="lineno">  539</span>&#160;    <span class="comment">// Create a simple network with a StandIn some place in it.</span></div><div class="line"><a name="l00540"></a><span class="lineno">  540</span>&#160;    <a class="code" href="classarmnn_1_1_network_impl.xhtml">armnn::NetworkImpl</a> net;</div><div class="line"><a name="l00541"></a><span class="lineno">  541</span>&#160;    <span class="keyword">auto</span> input = net.<a class="code" href="classarmnn_1_1_network_impl.xhtml#aa6c1c42ea44777302e87ce0fad5ac510">AddInputLayer</a>(0);</div><div class="line"><a name="l00542"></a><span class="lineno">  542</span>&#160;</div><div class="line"><a name="l00543"></a><span class="lineno">  543</span>&#160;    <span class="comment">// Add some valid layer.</span></div><div class="line"><a name="l00544"></a><span class="lineno">  544</span>&#160;    <span class="keyword">auto</span> floor = net.<a class="code" href="classarmnn_1_1_network_impl.xhtml#a435ea88480b8645026dd45fd692663a1">AddFloorLayer</a>(<span class="stringliteral">&quot;Floor&quot;</span>);</div><div class="line"><a name="l00545"></a><span class="lineno">  545</span>&#160;</div><div class="line"><a name="l00546"></a><span class="lineno">  546</span>&#160;    <span class="comment">// Add a standin layer</span></div><div class="line"><a name="l00547"></a><span class="lineno">  547</span>&#160;    <a class="code" href="structarmnn_1_1_stand_in_descriptor.xhtml">armnn::StandInDescriptor</a> standInDescriptor;</div><div class="line"><a name="l00548"></a><span class="lineno">  548</span>&#160;    standInDescriptor.<a class="code" href="structarmnn_1_1_stand_in_descriptor.xhtml#aed6086070440ceb94129bef06f70173f">m_NumInputs</a>  = 1;</div><div class="line"><a name="l00549"></a><span class="lineno">  549</span>&#160;    standInDescriptor.<a class="code" href="structarmnn_1_1_stand_in_descriptor.xhtml#abb8a2d2bb8cc594c26aaa70c820ac5cc">m_NumOutputs</a> = 1;</div><div class="line"><a name="l00550"></a><span class="lineno">  550</span>&#160;    <span class="keyword">auto</span> standIn = net.<a class="code" href="classarmnn_1_1_network_impl.xhtml#a74894d085e78ff80f45fc09dd2381f08">AddStandInLayer</a>(standInDescriptor, <span class="stringliteral">&quot;StandIn&quot;</span>);</div><div class="line"><a name="l00551"></a><span class="lineno">  551</span>&#160;</div><div class="line"><a name="l00552"></a><span class="lineno">  552</span>&#160;    <span class="comment">// Finally the output.</span></div><div class="line"><a name="l00553"></a><span class="lineno">  553</span>&#160;    <span class="keyword">auto</span> output = net.<a class="code" href="classarmnn_1_1_network_impl.xhtml#af5790069aa11fd1c5bb2e17cecb06528">AddOutputLayer</a>(0);</div><div class="line"><a name="l00554"></a><span class="lineno">  554</span>&#160;</div><div class="line"><a name="l00555"></a><span class="lineno">  555</span>&#160;    <span class="comment">// Connect up the layers</span></div><div class="line"><a name="l00556"></a><span class="lineno">  556</span>&#160;    input-&gt;<a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml#a80ac4eda2e7f2757ec9dd96fc96dbd16">GetOutputSlot</a>(0).<a class="code" href="classarmnn_1_1_i_output_slot.xhtml#ac1835f8756a9f03c02fcf9664e3a0fce">Connect</a>(floor-&gt;GetInputSlot(0));</div><div class="line"><a name="l00557"></a><span class="lineno">  557</span>&#160;</div><div class="line"><a name="l00558"></a><span class="lineno">  558</span>&#160;    floor-&gt;GetOutputSlot(0).Connect(standIn-&gt;GetInputSlot(0));</div><div class="line"><a name="l00559"></a><span class="lineno">  559</span>&#160;</div><div class="line"><a name="l00560"></a><span class="lineno">  560</span>&#160;    standIn-&gt;GetOutputSlot(0).Connect(output-&gt;GetInputSlot(0));</div><div class="line"><a name="l00561"></a><span class="lineno">  561</span>&#160;</div><div class="line"><a name="l00562"></a><span class="lineno">  562</span>&#160;    <span class="comment">// Check that the layer is there.</span></div><div class="line"><a name="l00563"></a><span class="lineno">  563</span>&#160;    CHECK(<a class="code" href="_graph_utils_8cpp.xhtml#ac73a43305233b7e5f70debdb2d14a8d3">GraphHasNamedLayer</a>(net.<a class="code" href="classarmnn_1_1_network_impl.xhtml#afe0a4f719f9752a405e71878da7012ba">GetGraph</a>(), <span class="stringliteral">&quot;StandIn&quot;</span>));</div><div class="line"><a name="l00564"></a><span class="lineno">  564</span>&#160;    <span class="comment">// Check that it is connected as expected.</span></div><div class="line"><a name="l00565"></a><span class="lineno">  565</span>&#160;    CHECK(input-&gt;GetOutputSlot(0).GetConnection(0) == &amp;floor-&gt;GetInputSlot(0));</div><div class="line"><a name="l00566"></a><span class="lineno">  566</span>&#160;    CHECK(floor-&gt;GetOutputSlot(0).GetConnection(0) == &amp;standIn-&gt;GetInputSlot(0));</div><div class="line"><a name="l00567"></a><span class="lineno">  567</span>&#160;    CHECK(standIn-&gt;GetOutputSlot(0).GetConnection(0) == &amp;output-&gt;GetInputSlot(0));</div><div class="line"><a name="l00568"></a><span class="lineno">  568</span>&#160;}</div><div class="line"><a name="l00569"></a><span class="lineno">  569</span>&#160;</div><div class="line"><a name="l00570"></a><span class="lineno">  570</span>&#160;TEST_CASE(<span class="stringliteral">&quot;StandInLayerSingleInputMultipleOutputsNetworkTest&quot;</span>)</div><div class="line"><a name="l00571"></a><span class="lineno">  571</span>&#160;{</div><div class="line"><a name="l00572"></a><span class="lineno">  572</span>&#160;    <span class="comment">// Another test with one input and two outputs on the StandIn layer.</span></div><div class="line"><a name="l00573"></a><span class="lineno">  573</span>&#160;    <a class="code" href="classarmnn_1_1_network_impl.xhtml">armnn::NetworkImpl</a> net;</div><div class="line"><a name="l00574"></a><span class="lineno">  574</span>&#160;</div><div class="line"><a name="l00575"></a><span class="lineno">  575</span>&#160;    <span class="comment">// Create the input.</span></div><div class="line"><a name="l00576"></a><span class="lineno">  576</span>&#160;    <span class="keyword">auto</span> input = net.<a class="code" href="classarmnn_1_1_network_impl.xhtml#aa6c1c42ea44777302e87ce0fad5ac510">AddInputLayer</a>(0);</div><div class="line"><a name="l00577"></a><span class="lineno">  577</span>&#160;</div><div class="line"><a name="l00578"></a><span class="lineno">  578</span>&#160;    <span class="comment">// Add a standin layer</span></div><div class="line"><a name="l00579"></a><span class="lineno">  579</span>&#160;    <a class="code" href="structarmnn_1_1_stand_in_descriptor.xhtml">armnn::StandInDescriptor</a> standInDescriptor;</div><div class="line"><a name="l00580"></a><span class="lineno">  580</span>&#160;    standInDescriptor.<a class="code" href="structarmnn_1_1_stand_in_descriptor.xhtml#aed6086070440ceb94129bef06f70173f">m_NumInputs</a>  = 1;</div><div class="line"><a name="l00581"></a><span class="lineno">  581</span>&#160;    standInDescriptor.<a class="code" href="structarmnn_1_1_stand_in_descriptor.xhtml#abb8a2d2bb8cc594c26aaa70c820ac5cc">m_NumOutputs</a> = 2;</div><div class="line"><a name="l00582"></a><span class="lineno">  582</span>&#160;    <span class="keyword">auto</span> standIn = net.<a class="code" href="classarmnn_1_1_network_impl.xhtml#a74894d085e78ff80f45fc09dd2381f08">AddStandInLayer</a>(standInDescriptor, <span class="stringliteral">&quot;StandIn&quot;</span>);</div><div class="line"><a name="l00583"></a><span class="lineno">  583</span>&#160;</div><div class="line"><a name="l00584"></a><span class="lineno">  584</span>&#160;    <span class="comment">// Add two outputs.</span></div><div class="line"><a name="l00585"></a><span class="lineno">  585</span>&#160;    <span class="keyword">auto</span> output0 = net.<a class="code" href="classarmnn_1_1_network_impl.xhtml#af5790069aa11fd1c5bb2e17cecb06528">AddOutputLayer</a>(0);</div><div class="line"><a name="l00586"></a><span class="lineno">  586</span>&#160;    <span class="keyword">auto</span> output1 = net.<a class="code" href="classarmnn_1_1_network_impl.xhtml#af5790069aa11fd1c5bb2e17cecb06528">AddOutputLayer</a>(1);</div><div class="line"><a name="l00587"></a><span class="lineno">  587</span>&#160;</div><div class="line"><a name="l00588"></a><span class="lineno">  588</span>&#160;    <span class="comment">// Connect up the layers</span></div><div class="line"><a name="l00589"></a><span class="lineno">  589</span>&#160;    input-&gt;<a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml#a80ac4eda2e7f2757ec9dd96fc96dbd16">GetOutputSlot</a>(0).<a class="code" href="classarmnn_1_1_i_output_slot.xhtml#ac1835f8756a9f03c02fcf9664e3a0fce">Connect</a>(standIn-&gt;GetInputSlot(0));</div><div class="line"><a name="l00590"></a><span class="lineno">  590</span>&#160;</div><div class="line"><a name="l00591"></a><span class="lineno">  591</span>&#160;    <span class="comment">// Connect the two outputs of the Standin to the two outputs.</span></div><div class="line"><a name="l00592"></a><span class="lineno">  592</span>&#160;    standIn-&gt;GetOutputSlot(0).Connect(output0-&gt;GetInputSlot(0));</div><div class="line"><a name="l00593"></a><span class="lineno">  593</span>&#160;    standIn-&gt;GetOutputSlot(1).Connect(output1-&gt;GetInputSlot(0));</div><div class="line"><a name="l00594"></a><span class="lineno">  594</span>&#160;</div><div class="line"><a name="l00595"></a><span class="lineno">  595</span>&#160;    <span class="comment">// Check that the layer is there.</span></div><div class="line"><a name="l00596"></a><span class="lineno">  596</span>&#160;    CHECK(<a class="code" href="_graph_utils_8cpp.xhtml#ac73a43305233b7e5f70debdb2d14a8d3">GraphHasNamedLayer</a>(net.<a class="code" href="classarmnn_1_1_network_impl.xhtml#afe0a4f719f9752a405e71878da7012ba">GetGraph</a>(), <span class="stringliteral">&quot;StandIn&quot;</span>));</div><div class="line"><a name="l00597"></a><span class="lineno">  597</span>&#160;    <span class="comment">// Check that it is connected as expected.</span></div><div class="line"><a name="l00598"></a><span class="lineno">  598</span>&#160;    CHECK(input-&gt;GetOutputSlot(0).GetConnection(0) == &amp;standIn-&gt;GetInputSlot(0));</div><div class="line"><a name="l00599"></a><span class="lineno">  599</span>&#160;    CHECK(standIn-&gt;GetOutputSlot(0).GetConnection(0) == &amp;output0-&gt;GetInputSlot(0));</div><div class="line"><a name="l00600"></a><span class="lineno">  600</span>&#160;    CHECK(standIn-&gt;GetOutputSlot(1).GetConnection(0) == &amp;output1-&gt;GetInputSlot(0));</div><div class="line"><a name="l00601"></a><span class="lineno">  601</span>&#160;}</div><div class="line"><a name="l00602"></a><span class="lineno">  602</span>&#160;</div><div class="line"><a name="l00603"></a><span class="lineno">  603</span>&#160;TEST_CASE(<span class="stringliteral">&quot;ObtainConv2DDescriptorFromIConnectableLayer&quot;</span>)</div><div class="line"><a name="l00604"></a><span class="lineno">  604</span>&#160;{</div><div class="line"><a name="l00605"></a><span class="lineno">  605</span>&#160;    <a class="code" href="classarmnn_1_1_network_impl.xhtml">armnn::NetworkImpl</a> net;</div><div class="line"><a name="l00606"></a><span class="lineno">  606</span>&#160;</div><div class="line"><a name="l00607"></a><span class="lineno">  607</span>&#160;    <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> dims[] = { 10,1,1,1 };</div><div class="line"><a name="l00608"></a><span class="lineno">  608</span>&#160;    std::vector&lt;float&gt; convWeightsData(10);</div><div class="line"><a name="l00609"></a><span class="lineno">  609</span>&#160;    <a class="code" href="classarmnn_1_1_const_tensor.xhtml">armnn::ConstTensor</a> weights(<a class="code" href="classarmnn_1_1_tensor_info.xhtml">armnn::TensorInfo</a>(4, dims, <a class="code" href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a166495adc0d0f53bee6baecc577f5204">armnn::DataType::Float32</a>, 0.0f, 0, <span class="keyword">true</span>), convWeightsData);</div><div class="line"><a name="l00610"></a><span class="lineno">  610</span>&#160;</div><div class="line"><a name="l00611"></a><span class="lineno">  611</span>&#160;    <a class="code" href="structarmnn_1_1_convolution2d_descriptor.xhtml">armnn::Convolution2dDescriptor</a> convDesc2d;</div><div class="line"><a name="l00612"></a><span class="lineno">  612</span>&#160;    convDesc2d.<a class="code" href="structarmnn_1_1_convolution2d_descriptor.xhtml#ac18546ebbebbb32fe0a03baa9bf2c600">m_PadLeft</a> = 2;</div><div class="line"><a name="l00613"></a><span class="lineno">  613</span>&#160;    convDesc2d.<a class="code" href="structarmnn_1_1_convolution2d_descriptor.xhtml#a002bc30e590d78cbb4f4d12171055ca7">m_PadRight</a> = 3;</div><div class="line"><a name="l00614"></a><span class="lineno">  614</span>&#160;    convDesc2d.<a class="code" href="structarmnn_1_1_convolution2d_descriptor.xhtml#a56b51f56cef50cdfa554258eecdab046">m_PadTop</a> = 4;</div><div class="line"><a name="l00615"></a><span class="lineno">  615</span>&#160;    convDesc2d.<a class="code" href="structarmnn_1_1_convolution2d_descriptor.xhtml#aa9e49717ebdb741e8c767741647fc618">m_PadBottom</a> = 5;</div><div class="line"><a name="l00616"></a><span class="lineno">  616</span>&#160;    convDesc2d.<a class="code" href="structarmnn_1_1_convolution2d_descriptor.xhtml#afe6a3377c4531315354def9023c8fdda">m_StrideX</a> = 2;</div><div class="line"><a name="l00617"></a><span class="lineno">  617</span>&#160;    convDesc2d.<a class="code" href="structarmnn_1_1_convolution2d_descriptor.xhtml#ac1fe174bbadfb39a2b636940c2e647c8">m_StrideY</a> = 1;</div><div class="line"><a name="l00618"></a><span class="lineno">  618</span>&#160;    convDesc2d.<a class="code" href="structarmnn_1_1_convolution2d_descriptor.xhtml#aa3c6a77a963a98ccb8ea7b8fd008a8c1">m_DilationX</a> = 3;</div><div class="line"><a name="l00619"></a><span class="lineno">  619</span>&#160;    convDesc2d.<a class="code" href="structarmnn_1_1_convolution2d_descriptor.xhtml#a302b688d88dd73cde0fb1faef6679907">m_DilationY</a> = 3;</div><div class="line"><a name="l00620"></a><span class="lineno">  620</span>&#160;    convDesc2d.<a class="code" href="structarmnn_1_1_convolution2d_descriptor.xhtml#aea202e14d8874cefd9a0f778022b7e25">m_BiasEnabled</a> = <span class="keyword">false</span>;</div><div class="line"><a name="l00621"></a><span class="lineno">  621</span>&#160;    convDesc2d.<a class="code" href="structarmnn_1_1_convolution2d_descriptor.xhtml#a6089e1ca91914015777ea780a513131a">m_DataLayout</a> = <a class="code" href="namespacearmnn.xhtml#ad1d5cce2d9e9a5d61c243e5c989112e0a6b99f356fe3b30a2a850b5ea897c289f">armnn::DataLayout::NCHW</a>;</div><div class="line"><a name="l00622"></a><span class="lineno">  622</span>&#160;    <a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml">armnn::IConnectableLayer</a>* <span class="keyword">const</span> convLayer = net.<a class="code" href="classarmnn_1_1_network_impl.xhtml#a178a72bbf254eff34a807a5ca27cb61f">AddConvolution2dLayer</a>(convDesc2d,</div><div class="line"><a name="l00623"></a><span class="lineno">  623</span>&#160;                                                                          weights,</div><div class="line"><a name="l00624"></a><span class="lineno">  624</span>&#160;                                                                          <a class="code" href="structarmnn_1_1_empty_optional.xhtml">armnn::EmptyOptional</a>(),</div><div class="line"><a name="l00625"></a><span class="lineno">  625</span>&#160;                                                                          <span class="stringliteral">&quot;conv layer&quot;</span>);</div><div class="line"><a name="l00626"></a><span class="lineno">  626</span>&#160;    CHECK(convLayer);</div><div class="line"><a name="l00627"></a><span class="lineno">  627</span>&#160;</div><div class="line"><a name="l00628"></a><span class="lineno">  628</span>&#160;    <span class="keyword">const</span> <a class="code" href="structarmnn_1_1_base_descriptor.xhtml">armnn::BaseDescriptor</a>&amp; descriptor = convLayer-&gt;<a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml#a7ce723f9ed0cba4430ec1fc11daa4ce9">GetParameters</a>();</div><div class="line"><a name="l00629"></a><span class="lineno">  629</span>&#160;    CHECK(descriptor.<a class="code" href="structarmnn_1_1_base_descriptor.xhtml#ac618666b3c6d65d2c88bcbb7abeed343">IsNull</a>() == <span class="keyword">false</span>);</div><div class="line"><a name="l00630"></a><span class="lineno">  630</span>&#160;    <span class="keyword">const</span> <a class="code" href="structarmnn_1_1_convolution2d_descriptor.xhtml">armnn::Convolution2dDescriptor</a>&amp; originalDescriptor =</div><div class="line"><a name="l00631"></a><span class="lineno">  631</span>&#160;        <span class="keyword">static_cast&lt;</span><span class="keyword">const </span><a class="code" href="structarmnn_1_1_convolution2d_descriptor.xhtml">armnn::Convolution2dDescriptor</a>&amp;<span class="keyword">&gt;</span>(descriptor);</div><div class="line"><a name="l00632"></a><span class="lineno">  632</span>&#160;    CHECK(originalDescriptor.m_PadLeft == 2);</div><div class="line"><a name="l00633"></a><span class="lineno">  633</span>&#160;    CHECK(originalDescriptor.m_PadRight == 3);</div><div class="line"><a name="l00634"></a><span class="lineno">  634</span>&#160;    CHECK(originalDescriptor.m_PadTop == 4);</div><div class="line"><a name="l00635"></a><span class="lineno">  635</span>&#160;    CHECK(originalDescriptor.m_PadBottom == 5);</div><div class="line"><a name="l00636"></a><span class="lineno">  636</span>&#160;    CHECK(originalDescriptor.m_StrideX == 2);</div><div class="line"><a name="l00637"></a><span class="lineno">  637</span>&#160;    CHECK(originalDescriptor.m_StrideY == 1);</div><div class="line"><a name="l00638"></a><span class="lineno">  638</span>&#160;    CHECK(originalDescriptor.m_DilationX == 3);</div><div class="line"><a name="l00639"></a><span class="lineno">  639</span>&#160;    CHECK(originalDescriptor.m_DilationY == 3);</div><div class="line"><a name="l00640"></a><span class="lineno">  640</span>&#160;    CHECK(originalDescriptor.m_BiasEnabled == <span class="keyword">false</span>);</div><div class="line"><a name="l00641"></a><span class="lineno">  641</span>&#160;    CHECK(originalDescriptor.m_DataLayout == <a class="code" href="namespacearmnn.xhtml#ad1d5cce2d9e9a5d61c243e5c989112e0a6b99f356fe3b30a2a850b5ea897c289f">armnn::DataLayout::NCHW</a>);</div><div class="line"><a name="l00642"></a><span class="lineno">  642</span>&#160;}</div><div class="line"><a name="l00643"></a><span class="lineno">  643</span>&#160;</div><div class="line"><a name="l00644"></a><span class="lineno">  644</span>&#160;TEST_CASE(<span class="stringliteral">&quot;CheckNullDescriptor&quot;</span>)</div><div class="line"><a name="l00645"></a><span class="lineno">  645</span>&#160;{</div><div class="line"><a name="l00646"></a><span class="lineno">  646</span>&#160;    <a class="code" href="classarmnn_1_1_network_impl.xhtml">armnn::NetworkImpl</a> net;</div><div class="line"><a name="l00647"></a><span class="lineno">  647</span>&#160;    <a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml">armnn::IConnectableLayer</a>* <span class="keyword">const</span> addLayer = net.<a class="code" href="classarmnn_1_1_network_impl.xhtml#a39f1b38d89c4de186742eafcbb3b1319">AddAdditionLayer</a>();</div><div class="line"><a name="l00648"></a><span class="lineno">  648</span>&#160;</div><div class="line"><a name="l00649"></a><span class="lineno">  649</span>&#160;    CHECK(addLayer);</div><div class="line"><a name="l00650"></a><span class="lineno">  650</span>&#160;</div><div class="line"><a name="l00651"></a><span class="lineno">  651</span>&#160;    <span class="keyword">const</span> <a class="code" href="structarmnn_1_1_base_descriptor.xhtml">armnn::BaseDescriptor</a>&amp; descriptor = addLayer-&gt;<a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml#a7ce723f9ed0cba4430ec1fc11daa4ce9">GetParameters</a>();</div><div class="line"><a name="l00652"></a><span class="lineno">  652</span>&#160;    <span class="comment">// additional layer has no descriptor so a NullDescriptor will be returned</span></div><div class="line"><a name="l00653"></a><span class="lineno">  653</span>&#160;    CHECK(descriptor.<a class="code" href="structarmnn_1_1_base_descriptor.xhtml#ac618666b3c6d65d2c88bcbb7abeed343">IsNull</a>() == <span class="keyword">true</span>);</div><div class="line"><a name="l00654"></a><span class="lineno">  654</span>&#160;}</div><div class="line"><a name="l00655"></a><span class="lineno">  655</span>&#160;</div><div class="line"><a name="l00656"></a><span class="lineno">  656</span>&#160;}</div><div class="ttc" id="structarmnn_1_1_convolution2d_descriptor_xhtml_aa9e49717ebdb741e8c767741647fc618"><div class="ttname"><a href="structarmnn_1_1_convolution2d_descriptor.xhtml#aa9e49717ebdb741e8c767741647fc618">armnn::Convolution2dDescriptor::m_PadBottom</a></div><div class="ttdeci">uint32_t m_PadBottom</div><div class="ttdoc">Padding bottom value in the height dimension. </div><div class="ttdef"><b>Definition:</b> <a href="_descriptors_8hpp_source.xhtml#l00535">Descriptors.hpp:535</a></div></div>
<div class="ttc" id="structarmnn_1_1_convolution2d_descriptor_xhtml_aea202e14d8874cefd9a0f778022b7e25"><div class="ttname"><a href="structarmnn_1_1_convolution2d_descriptor.xhtml#aea202e14d8874cefd9a0f778022b7e25">armnn::Convolution2dDescriptor::m_BiasEnabled</a></div><div class="ttdeci">bool m_BiasEnabled</div><div class="ttdoc">Enable/disable bias. </div><div class="ttdef"><b>Definition:</b> <a href="_descriptors_8hpp_source.xhtml#l00545">Descriptors.hpp:545</a></div></div>
<div class="ttc" id="classarmnn_1_1_i_connectable_layer_xhtml_ac2dac3b61c94de52093616be4ab17f8d"><div class="ttname"><a href="classarmnn_1_1_i_connectable_layer.xhtml#ac2dac3b61c94de52093616be4ab17f8d">armnn::IConnectableLayer::GetNumOutputSlots</a></div><div class="ttdeci">virtual unsigned int GetNumOutputSlots() const =0</div><div class="ttdoc">Returns the number of connectable output slots. </div></div>
<div class="ttc" id="structarmnn_1_1_convolution2d_descriptor_xhtml_a6089e1ca91914015777ea780a513131a"><div class="ttname"><a href="structarmnn_1_1_convolution2d_descriptor.xhtml#a6089e1ca91914015777ea780a513131a">armnn::Convolution2dDescriptor::m_DataLayout</a></div><div class="ttdeci">DataLayout m_DataLayout</div><div class="ttdoc">The data layout to be used (NCHW, NHWC). </div><div class="ttdef"><b>Definition:</b> <a href="_descriptors_8hpp_source.xhtml#l00547">Descriptors.hpp:547</a></div></div>
<div class="ttc" id="structarmnn_1_1_views_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_views_descriptor.xhtml">armnn::ViewsDescriptor</a></div><div class="ttdoc">A ViewsDescriptor for the SplitterLayer. </div><div class="ttdef"><b>Definition:</b> <a href="_descriptors_8hpp_source.xhtml#l00217">Descriptors.hpp:217</a></div></div>
<div class="ttc" id="classarmnn_1_1_i_connectable_layer_xhtml"><div class="ttname"><a href="classarmnn_1_1_i_connectable_layer.xhtml">armnn::IConnectableLayer</a></div><div class="ttdoc">Interface for a layer that is connectable to other layers via InputSlots and OutputSlots. </div><div class="ttdef"><b>Definition:</b> <a href="_i_network_8hpp_source.xhtml#l00066">INetwork.hpp:66</a></div></div>
<div class="ttc" id="classarmnn_1_1_i_connectable_layer_xhtml_a9c2cba04b6d7ace4fc2a2436b82a5a63"><div class="ttname"><a href="classarmnn_1_1_i_connectable_layer.xhtml#a9c2cba04b6d7ace4fc2a2436b82a5a63">armnn::IConnectableLayer::GetNumInputSlots</a></div><div class="ttdeci">virtual unsigned int GetNumInputSlots() const =0</div><div class="ttdoc">Returns the number of connectable input slots. </div></div>
<div class="ttc" id="classarmnn_1_1_network_impl_xhtml_a39f1b38d89c4de186742eafcbb3b1319"><div class="ttname"><a href="classarmnn_1_1_network_impl.xhtml#a39f1b38d89c4de186742eafcbb3b1319">armnn::NetworkImpl::AddAdditionLayer</a></div><div class="ttdeci">IConnectableLayer * AddAdditionLayer(const char *name=nullptr)</div><div class="ttdef"><b>Definition:</b> <a href="_network_8cpp_source.xhtml#l02165">Network.cpp:2165</a></div></div>
<div class="ttc" id="classarmnn_1_1_tensor_info_xhtml"><div class="ttname"><a href="classarmnn_1_1_tensor_info.xhtml">armnn::TensorInfo</a></div><div class="ttdef"><b>Definition:</b> <a href="_tensor_8hpp_source.xhtml#l00152">Tensor.hpp:152</a></div></div>
<div class="ttc" id="classarmnn_1_1_network_impl_xhtml_ae913b4351b7027f37eb5657dd7867733"><div class="ttname"><a href="classarmnn_1_1_network_impl.xhtml#ae913b4351b7027f37eb5657dd7867733">armnn::NetworkImpl::AddPooling2dLayer</a></div><div class="ttdeci">IConnectableLayer * AddPooling2dLayer(const Pooling2dDescriptor &amp;pooling2dDescriptor, const char *name=nullptr)</div><div class="ttdef"><b>Definition:</b> <a href="_network_8cpp_source.xhtml#l02107">Network.cpp:2107</a></div></div>
<div class="ttc" id="structarmnn_1_1_convolution2d_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_convolution2d_descriptor.xhtml">armnn::Convolution2dDescriptor</a></div><div class="ttdoc">A Convolution2dDescriptor for the Convolution2dLayer. </div><div class="ttdef"><b>Definition:</b> <a href="_descriptors_8hpp_source.xhtml#l00499">Descriptors.hpp:499</a></div></div>
<div class="ttc" id="classarmnn_1_1_i_strategy_xhtml_aad5bb4d8050fd428ff03ae6d81e3014c"><div class="ttname"><a href="classarmnn_1_1_i_strategy.xhtml#aad5bb4d8050fd428ff03ae6d81e3014c">armnn::IStrategy::ExecuteStrategy</a></div><div class="ttdeci">virtual void ExecuteStrategy(const armnn::IConnectableLayer *layer, const armnn::BaseDescriptor &amp;descriptor, const std::vector&lt; armnn::ConstTensor &gt; &amp;constants, const char *name, const armnn::LayerBindingId id=0)=0</div></div>
<div class="ttc" id="classarmnn_1_1_network_impl_xhtml_a1aa567f46c30960851c02847dc7b4215"><div class="ttname"><a href="classarmnn_1_1_network_impl.xhtml#a1aa567f46c30960851c02847dc7b4215">armnn::NetworkImpl::AddConstantLayer</a></div><div class="ttdeci">IConnectableLayer * AddConstantLayer(const ConstTensor &amp;input, const char *name=nullptr)</div><div class="ttdef"><b>Definition:</b> <a href="_network_8cpp_source.xhtml#l02236">Network.cpp:2236</a></div></div>
<div class="ttc" id="namespacearmnn_xhtml_a56943a0946e5f15e5e58054b8e7a04a4a29c2c02a361c9d7028472e5d92cd4a54"><div class="ttname"><a href="namespacearmnn.xhtml#a56943a0946e5f15e5e58054b8e7a04a4a29c2c02a361c9d7028472e5d92cd4a54">armnn::LayerType::Output</a></div></div>
<div class="ttc" id="classarmnn_1_1_network_impl_xhtml_a6c5376053e1f875776d7bc36fd0b7d45"><div class="ttname"><a href="classarmnn_1_1_network_impl.xhtml#a6c5376053e1f875776d7bc36fd0b7d45">armnn::NetworkImpl::AddNormalizationLayer</a></div><div class="ttdeci">IConnectableLayer * AddNormalizationLayer(const NormalizationDescriptor &amp;normalizationDescriptor, const char *name=nullptr)</div><div class="ttdef"><b>Definition:</b> <a href="_network_8cpp_source.xhtml#l02131">Network.cpp:2131</a></div></div>
<div class="ttc" id="classarmnn_1_1_network_impl_xhtml_aff3fde909d22ed157046682e70129259"><div class="ttname"><a href="classarmnn_1_1_network_impl.xhtml#aff3fde909d22ed157046682e70129259">armnn::NetworkImpl::PrintGraph</a></div><div class="ttdeci">Status PrintGraph()</div><div class="ttdef"><b>Definition:</b> <a href="_network_8cpp_source.xhtml#l01867">Network.cpp:1867</a></div></div>
<div class="ttc" id="_graph_utils_8cpp_xhtml_ac73a43305233b7e5f70debdb2d14a8d3"><div class="ttname"><a href="_graph_utils_8cpp.xhtml#ac73a43305233b7e5f70debdb2d14a8d3">GraphHasNamedLayer</a></div><div class="ttdeci">bool GraphHasNamedLayer(const armnn::Graph &amp;graph, const std::string &amp;name)</div><div class="ttdef"><b>Definition:</b> <a href="_graph_utils_8cpp_source.xhtml#l00010">GraphUtils.cpp:10</a></div></div>
<div class="ttc" id="structarmnn_1_1_convolution2d_descriptor_xhtml_a002bc30e590d78cbb4f4d12171055ca7"><div class="ttname"><a href="structarmnn_1_1_convolution2d_descriptor.xhtml#a002bc30e590d78cbb4f4d12171055ca7">armnn::Convolution2dDescriptor::m_PadRight</a></div><div class="ttdeci">uint32_t m_PadRight</div><div class="ttdoc">Padding right value in the width dimension. </div><div class="ttdef"><b>Definition:</b> <a href="_descriptors_8hpp_source.xhtml#l00531">Descriptors.hpp:531</a></div></div>
<div class="ttc" id="classarmnn_1_1_network_impl_xhtml_aa51350bdd4976f3dd5a4e9d00a906b2c"><div class="ttname"><a href="classarmnn_1_1_network_impl.xhtml#aa51350bdd4976f3dd5a4e9d00a906b2c">armnn::NetworkImpl::AddActivationLayer</a></div><div class="ttdeci">IConnectableLayer * AddActivationLayer(const ActivationDescriptor &amp;activationDescriptor, const char *name=nullptr)</div><div class="ttdef"><b>Definition:</b> <a href="_network_8cpp_source.xhtml#l02119">Network.cpp:2119</a></div></div>
<div class="ttc" id="classarmnn_1_1_i_connectable_layer_xhtml_a7ce723f9ed0cba4430ec1fc11daa4ce9"><div class="ttname"><a href="classarmnn_1_1_i_connectable_layer.xhtml#a7ce723f9ed0cba4430ec1fc11daa4ce9">armnn::IConnectableLayer::GetParameters</a></div><div class="ttdeci">virtual const BaseDescriptor &amp; GetParameters() const =0</div><div class="ttdoc">If the layer has a descriptor return it. </div></div>
<div class="ttc" id="namespacearmnn_xhtml_a44affeeb090c3c6a3062830562672e84"><div class="ttname"><a href="namespacearmnn.xhtml#a44affeeb090c3c6a3062830562672e84">armnn::IgnoreUnused</a></div><div class="ttdeci">void IgnoreUnused(Ts &amp;&amp;...)</div><div class="ttdef"><b>Definition:</b> <a href="_ignore_unused_8hpp_source.xhtml#l00014">IgnoreUnused.hpp:14</a></div></div>
<div class="ttc" id="classarmnn_1_1_i_output_slot_xhtml_a9fffb92dc6d2edd5258d574a5862fc83"><div class="ttname"><a href="classarmnn_1_1_i_output_slot.xhtml#a9fffb92dc6d2edd5258d574a5862fc83">armnn::IOutputSlot::GetConnection</a></div><div class="ttdeci">virtual const IInputSlot * GetConnection(unsigned int index) const =0</div></div>
<div class="ttc" id="structarmnn_1_1_convolution2d_descriptor_xhtml_a302b688d88dd73cde0fb1faef6679907"><div class="ttname"><a href="structarmnn_1_1_convolution2d_descriptor.xhtml#a302b688d88dd73cde0fb1faef6679907">armnn::Convolution2dDescriptor::m_DilationY</a></div><div class="ttdeci">uint32_t m_DilationY</div><div class="ttdoc">Dilation along y axis. </div><div class="ttdef"><b>Definition:</b> <a href="_descriptors_8hpp_source.xhtml#l00543">Descriptors.hpp:543</a></div></div>
<div class="ttc" id="namespacearmnn_xhtml_a56943a0946e5f15e5e58054b8e7a04a4a68be4837f6c739877233e527a996dd00"><div class="ttname"><a href="namespacearmnn.xhtml#a56943a0946e5f15e5e58054b8e7a04a4a68be4837f6c739877233e527a996dd00">armnn::LayerType::Merge</a></div></div>
<div class="ttc" id="classarmnn_1_1_network_impl_xhtml"><div class="ttname"><a href="classarmnn_1_1_network_impl.xhtml">armnn::NetworkImpl</a></div><div class="ttdoc">Private implementation of INetwork. </div><div class="ttdef"><b>Definition:</b> <a href="_network_8hpp_source.xhtml#l00031">Network.hpp:31</a></div></div>
<div class="ttc" id="namespacearmnn_xhtml_ab8cf8f9fb6792e654c2d8d8382f6f01b"><div class="ttname"><a href="namespacearmnn.xhtml#ab8cf8f9fb6792e654c2d8d8382f6f01b">armnn::LayerBindingId</a></div><div class="ttdeci">int LayerBindingId</div><div class="ttdoc">Type of identifiers for bindable layers (inputs, outputs). </div><div class="ttdef"><b>Definition:</b> <a href="_types_8hpp_source.xhtml#l00277">Types.hpp:277</a></div></div>
<div class="ttc" id="classarmnn_1_1_i_output_slot_xhtml_a5ee4a6c9a2481245487b1b1a70d20fd0"><div class="ttname"><a href="classarmnn_1_1_i_output_slot.xhtml#a5ee4a6c9a2481245487b1b1a70d20fd0">armnn::IOutputSlot::SetTensorInfo</a></div><div class="ttdeci">virtual void SetTensorInfo(const TensorInfo &amp;tensorInfo)=0</div></div>
<div class="ttc" id="structarmnn_1_1_stand_in_descriptor_xhtml_abb8a2d2bb8cc594c26aaa70c820ac5cc"><div class="ttname"><a href="structarmnn_1_1_stand_in_descriptor.xhtml#abb8a2d2bb8cc594c26aaa70c820ac5cc">armnn::StandInDescriptor::m_NumOutputs</a></div><div class="ttdeci">uint32_t m_NumOutputs</div><div class="ttdoc">Number of output tensors. </div><div class="ttdef"><b>Definition:</b> <a href="_descriptors_8hpp_source.xhtml#l01251">Descriptors.hpp:1251</a></div></div>
<div class="ttc" id="structarmnn_1_1_base_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_base_descriptor.xhtml">armnn::BaseDescriptor</a></div><div class="ttdoc">Base class for all descriptors. </div><div class="ttdef"><b>Definition:</b> <a href="_descriptors_8hpp_source.xhtml#l00022">Descriptors.hpp:22</a></div></div>
<div class="ttc" id="namespacearmnn_xhtml_a56943a0946e5f15e5e58054b8e7a04a4aca39930e22f40d10155a57dba32240bb"><div class="ttname"><a href="namespacearmnn.xhtml#a56943a0946e5f15e5e58054b8e7a04a4aca39930e22f40d10155a57dba32240bb">armnn::LayerType::Quantize</a></div></div>
<div class="ttc" id="classarmnn_1_1_i_strategy_xhtml"><div class="ttname"><a href="classarmnn_1_1_i_strategy.xhtml">armnn::IStrategy</a></div><div class="ttdef"><b>Definition:</b> <a href="_i_strategy_8hpp_source.xhtml#l00013">IStrategy.hpp:13</a></div></div>
<div class="ttc" id="classarmnn_1_1_network_impl_xhtml_a435ea88480b8645026dd45fd692663a1"><div class="ttname"><a href="classarmnn_1_1_network_impl.xhtml#a435ea88480b8645026dd45fd692663a1">armnn::NetworkImpl::AddFloorLayer</a></div><div class="ttdeci">IConnectableLayer * AddFloorLayer(const char *name=nullptr)</div><div class="ttdef"><b>Definition:</b> <a href="_network_8cpp_source.xhtml#l02263">Network.cpp:2263</a></div></div>
<div class="ttc" id="structarmnn_1_1_convolution2d_descriptor_xhtml_a56b51f56cef50cdfa554258eecdab046"><div class="ttname"><a href="structarmnn_1_1_convolution2d_descriptor.xhtml#a56b51f56cef50cdfa554258eecdab046">armnn::Convolution2dDescriptor::m_PadTop</a></div><div class="ttdeci">uint32_t m_PadTop</div><div class="ttdoc">Padding top value in the height dimension. </div><div class="ttdef"><b>Definition:</b> <a href="_descriptors_8hpp_source.xhtml#l00533">Descriptors.hpp:533</a></div></div>
<div class="ttc" id="classarmnn_1_1_network_impl_xhtml_abb59f6ba9988dae88e0f48e68d87fc32"><div class="ttname"><a href="classarmnn_1_1_network_impl.xhtml#abb59f6ba9988dae88e0f48e68d87fc32">armnn::NetworkImpl::AddMultiplicationLayer</a></div><div class="ttdeci">IConnectableLayer * AddMultiplicationLayer(const char *name=nullptr)</div><div class="ttdef"><b>Definition:</b> <a href="_network_8cpp_source.xhtml#l02170">Network.cpp:2170</a></div></div>
<div class="ttc" id="_network_tests_8cpp_xhtml_a7d3b66e70c2891a6c725e0955301a19a"><div class="ttname"><a href="_network_tests_8cpp.xhtml#a7d3b66e70c2891a6c725e0955301a19a">TEST_SUITE</a></div><div class="ttdeci">TEST_SUITE(&quot;Network&quot;)</div><div class="ttdef"><b>Definition:</b> <a href="_network_tests_8cpp_source.xhtml#l00030">NetworkTests.cpp:30</a></div></div>
<div class="ttc" id="structarmnn_1_1_convolution2d_descriptor_xhtml_afe6a3377c4531315354def9023c8fdda"><div class="ttname"><a href="structarmnn_1_1_convolution2d_descriptor.xhtml#afe6a3377c4531315354def9023c8fdda">armnn::Convolution2dDescriptor::m_StrideX</a></div><div class="ttdeci">uint32_t m_StrideX</div><div class="ttdoc">Stride value when proceeding through input for the width dimension. </div><div class="ttdef"><b>Definition:</b> <a href="_descriptors_8hpp_source.xhtml#l00537">Descriptors.hpp:537</a></div></div>
<div class="ttc" id="namespacearmnn_xhtml_a67a0db04d321a74b7e7fcfd3f1a3f70ba505a83f220c02df2f85c3810cd9ceb38"><div class="ttname"><a href="namespacearmnn.xhtml#a67a0db04d321a74b7e7fcfd3f1a3f70ba505a83f220c02df2f85c3810cd9ceb38">armnn::Status::Success</a></div></div>
<div class="ttc" id="classarmnn_1_1_network_impl_xhtml_aa6c1c42ea44777302e87ce0fad5ac510"><div class="ttname"><a href="classarmnn_1_1_network_impl.xhtml#aa6c1c42ea44777302e87ce0fad5ac510">armnn::NetworkImpl::AddInputLayer</a></div><div class="ttdeci">IConnectableLayer * AddInputLayer(LayerBindingId id, const char *name=nullptr)</div><div class="ttdef"><b>Definition:</b> <a href="_network_8cpp_source.xhtml#l01873">Network.cpp:1873</a></div></div>
<div class="ttc" id="classarmnn_1_1_tensor_info_xhtml_aea909c7327109228ef618d459015def3"><div class="ttname"><a href="classarmnn_1_1_tensor_info.xhtml#aea909c7327109228ef618d459015def3">armnn::TensorInfo::GetDataType</a></div><div class="ttdeci">DataType GetDataType() const</div><div class="ttdef"><b>Definition:</b> <a href="_tensor_8hpp_source.xhtml#l00198">Tensor.hpp:198</a></div></div>
<div class="ttc" id="structarmnn_1_1_origins_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_origins_descriptor.xhtml">armnn::OriginsDescriptor</a></div><div class="ttdoc">An OriginsDescriptor for the ConcatLayer. </div><div class="ttdef"><b>Definition:</b> <a href="_descriptors_8hpp_source.xhtml#l00174">Descriptors.hpp:174</a></div></div>
<div class="ttc" id="namespacearmnn_xhtml_ad8ed01ff3ff33333d8e19db4d2818bb6a0a3f57c876f5a230244c38e1453a8a6e"><div class="ttname"><a href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a0a3f57c876f5a230244c38e1453a8a6e">armnn::DataType::QAsymmU8</a></div></div>
<div class="ttc" id="structarmnn_1_1_fully_connected_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_fully_connected_descriptor.xhtml">armnn::FullyConnectedDescriptor</a></div><div class="ttdoc">A FullyConnectedDescriptor for the FullyConnectedLayer. </div><div class="ttdef"><b>Definition:</b> <a href="_descriptors_8hpp_source.xhtml#l00468">Descriptors.hpp:468</a></div></div>
<div class="ttc" id="classarmnn_1_1_i_connectable_layer_xhtml_afb5e65c770f6cee222db8af7581541a6"><div class="ttname"><a href="classarmnn_1_1_i_connectable_layer.xhtml#afb5e65c770f6cee222db8af7581541a6">armnn::IConnectableLayer::GetGuid</a></div><div class="ttdeci">virtual LayerGuid GetGuid() const =0</div><div class="ttdoc">Returns the unique id of the layer. </div></div>
<div class="ttc" id="classarmnn_1_1_const_tensor_xhtml"><div class="ttname"><a href="classarmnn_1_1_const_tensor.xhtml">armnn::ConstTensor</a></div><div class="ttdoc">A tensor defined by a TensorInfo (shape and data type) and an immutable backing store. </div><div class="ttdef"><b>Definition:</b> <a href="_tensor_8hpp_source.xhtml#l00327">Tensor.hpp:327</a></div></div>
<div class="ttc" id="classarmnn_1_1_network_impl_xhtml_af5790069aa11fd1c5bb2e17cecb06528"><div class="ttname"><a href="classarmnn_1_1_network_impl.xhtml#af5790069aa11fd1c5bb2e17cecb06528">armnn::NetworkImpl::AddOutputLayer</a></div><div class="ttdeci">IConnectableLayer * AddOutputLayer(LayerBindingId id, const char *name=nullptr)</div><div class="ttdef"><b>Definition:</b> <a href="_network_8cpp_source.xhtml#l02175">Network.cpp:2175</a></div></div>
<div class="ttc" id="classarmnn_1_1_network_impl_xhtml_aea1059833739d3dccebb3a03ec35a1e6"><div class="ttname"><a href="classarmnn_1_1_network_impl.xhtml#aea1059833739d3dccebb3a03ec35a1e6">armnn::NetworkImpl::AddConcatLayer</a></div><div class="ttdeci">IConnectableLayer * AddConcatLayer(const ConcatDescriptor &amp;concatDescriptor, const char *name=nullptr)</div><div class="ttdef"><b>Definition:</b> <a href="_network_8cpp_source.xhtml#l01994">Network.cpp:1994</a></div></div>
<div class="ttc" id="structarmnn_1_1_stand_in_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_stand_in_descriptor.xhtml">armnn::StandInDescriptor</a></div><div class="ttdoc">A StandInDescriptor for the StandIn layer. </div><div class="ttdef"><b>Definition:</b> <a href="_descriptors_8hpp_source.xhtml#l01233">Descriptors.hpp:1233</a></div></div>
<div class="ttc" id="structarmnn_1_1_activation_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_activation_descriptor.xhtml">armnn::ActivationDescriptor</a></div><div class="ttdoc">An ActivationDescriptor for the ActivationLayer. </div><div class="ttdef"><b>Definition:</b> <a href="_descriptors_8hpp_source.xhtml#l00036">Descriptors.hpp:36</a></div></div>
<div class="ttc" id="structarmnn_1_1_convolution2d_descriptor_xhtml_ac1fe174bbadfb39a2b636940c2e647c8"><div class="ttname"><a href="structarmnn_1_1_convolution2d_descriptor.xhtml#ac1fe174bbadfb39a2b636940c2e647c8">armnn::Convolution2dDescriptor::m_StrideY</a></div><div class="ttdeci">uint32_t m_StrideY</div><div class="ttdoc">Stride value when proceeding through input for the height dimension. </div><div class="ttdef"><b>Definition:</b> <a href="_descriptors_8hpp_source.xhtml#l00539">Descriptors.hpp:539</a></div></div>
<div class="ttc" id="classarmnn_1_1_network_impl_xhtml_a74894d085e78ff80f45fc09dd2381f08"><div class="ttname"><a href="classarmnn_1_1_network_impl.xhtml#a74894d085e78ff80f45fc09dd2381f08">armnn::NetworkImpl::AddStandInLayer</a></div><div class="ttdeci">IConnectableLayer * AddStandInLayer(const StandInDescriptor &amp;descriptor, const char *name=nullptr)</div><div class="ttdef"><b>Definition:</b> <a href="_network_8cpp_source.xhtml#l02501">Network.cpp:2501</a></div></div>
<div class="ttc" id="classarmnn_1_1_i_connectable_layer_xhtml_adceb04ae84c524e4d01881e3754a4d59"><div class="ttname"><a href="classarmnn_1_1_i_connectable_layer.xhtml#adceb04ae84c524e4d01881e3754a4d59">armnn::IConnectableLayer::GetType</a></div><div class="ttdeci">virtual LayerType GetType() const =0</div><div class="ttdoc">Returns the armnn::LayerType of this layer. </div></div>
<div class="ttc" id="structarmnn_1_1_convolution2d_descriptor_xhtml_aa3c6a77a963a98ccb8ea7b8fd008a8c1"><div class="ttname"><a href="structarmnn_1_1_convolution2d_descriptor.xhtml#aa3c6a77a963a98ccb8ea7b8fd008a8c1">armnn::Convolution2dDescriptor::m_DilationX</a></div><div class="ttdeci">uint32_t m_DilationX</div><div class="ttdoc">Dilation along x axis. </div><div class="ttdef"><b>Definition:</b> <a href="_descriptors_8hpp_source.xhtml#l00541">Descriptors.hpp:541</a></div></div>
<div class="ttc" id="structarmnn_1_1_empty_optional_xhtml"><div class="ttname"><a href="structarmnn_1_1_empty_optional.xhtml">armnn::EmptyOptional</a></div><div class="ttdoc">EmptyOptional is used to initialize the Optional class in case we want to have default value for an O...</div><div class="ttdef"><b>Definition:</b> <a href="_optional_8hpp_source.xhtml#l00032">Optional.hpp:32</a></div></div>
<div class="ttc" id="classarmnn_1_1_network_impl_xhtml_a471991a84030eb3ae601da2bee757870"><div class="ttname"><a href="classarmnn_1_1_network_impl.xhtml#a471991a84030eb3ae601da2bee757870">armnn::NetworkImpl::AddFullyConnectedLayer</a></div><div class="ttdeci">IConnectableLayer * AddFullyConnectedLayer(const FullyConnectedDescriptor &amp;fullyConnectedDescriptor, const char *name=nullptr)</div><div class="ttdef"><b>Definition:</b> <a href="_network_8cpp_source.xhtml#l01912">Network.cpp:1912</a></div></div>
<div class="ttc" id="namespacearmnn_xhtml_a4dc0adc6737b5944e7671bee71788407acaf9b6b99962bf5c2264824231d7a40c"><div class="ttname"><a href="namespacearmnn.xhtml#a4dc0adc6737b5944e7671bee71788407acaf9b6b99962bf5c2264824231d7a40c">armnn::BoostLogSeverityMapping::info</a></div></div>
<div class="ttc" id="classarmnn_1_1_network_impl_xhtml_a30528a3bd85a0dba158bd14e252bd68a"><div class="ttname"><a href="classarmnn_1_1_network_impl.xhtml#a30528a3bd85a0dba158bd14e252bd68a">armnn::NetworkImpl::AddSoftmaxLayer</a></div><div class="ttdeci">IConnectableLayer * AddSoftmaxLayer(const SoftmaxDescriptor &amp;softmaxDescriptor, const char *name=nullptr)</div><div class="ttdef"><b>Definition:</b> <a href="_network_8cpp_source.xhtml#l02143">Network.cpp:2143</a></div></div>
<div class="ttc" id="structarmnn_1_1_stand_in_descriptor_xhtml_aed6086070440ceb94129bef06f70173f"><div class="ttname"><a href="structarmnn_1_1_stand_in_descriptor.xhtml#aed6086070440ceb94129bef06f70173f">armnn::StandInDescriptor::m_NumInputs</a></div><div class="ttdeci">uint32_t m_NumInputs</div><div class="ttdoc">Number of input tensors. </div><div class="ttdef"><b>Definition:</b> <a href="_descriptors_8hpp_source.xhtml#l01249">Descriptors.hpp:1249</a></div></div>
<div class="ttc" id="_network_8hpp_xhtml"><div class="ttname"><a href="_network_8hpp.xhtml">Network.hpp</a></div></div>
<div class="ttc" id="classarmnn_1_1_network_impl_xhtml_afe0a4f719f9752a405e71878da7012ba"><div class="ttname"><a href="classarmnn_1_1_network_impl.xhtml#afe0a4f719f9752a405e71878da7012ba">armnn::NetworkImpl::GetGraph</a></div><div class="ttdeci">const Graph &amp; GetGraph() const</div><div class="ttdef"><b>Definition:</b> <a href="_network_8hpp_source.xhtml#l00037">Network.hpp:37</a></div></div>
<div class="ttc" id="namespacearmnn_xhtml_afad4088a9a058114ee5f87246f87bf49"><div class="ttname"><a href="namespacearmnn.xhtml#afad4088a9a058114ee5f87246f87bf49">armnn::LayerGuid</a></div><div class="ttdeci">profiling::ProfilingGuid LayerGuid</div><div class="ttdoc">Define LayerGuid type. </div><div class="ttdef"><b>Definition:</b> <a href="_types_8hpp_source.xhtml#l00363">Types.hpp:363</a></div></div>
<div class="ttc" id="namespacearmnn_xhtml_a56943a0946e5f15e5e58054b8e7a04a4a324118a6721dd6b8a9b9f4e327df2bf5"><div class="ttname"><a href="namespacearmnn.xhtml#a56943a0946e5f15e5e58054b8e7a04a4a324118a6721dd6b8a9b9f4e327df2bf5">armnn::LayerType::Input</a></div></div>
<div class="ttc" id="classarmnn_1_1_i_connectable_layer_xhtml_a6ec9e0eb66d7d6a01240492a0b18104c"><div class="ttname"><a href="classarmnn_1_1_i_connectable_layer.xhtml#a6ec9e0eb66d7d6a01240492a0b18104c">armnn::IConnectableLayer::GetInputSlot</a></div><div class="ttdeci">virtual const IInputSlot &amp; GetInputSlot(unsigned int index) const =0</div><div class="ttdoc">Get a const input slot handle by slot index. </div></div>
<div class="ttc" id="classarmnn_1_1_i_input_slot_xhtml_a81fbf6103761e55061b62ba989b00f10"><div class="ttname"><a href="classarmnn_1_1_i_input_slot.xhtml#a81fbf6103761e55061b62ba989b00f10">armnn::IInputSlot::GetConnection</a></div><div class="ttdeci">virtual const IOutputSlot * GetConnection() const =0</div></div>
<div class="ttc" id="namespacearmnn_xhtml_ad8ed01ff3ff33333d8e19db4d2818bb6a166495adc0d0f53bee6baecc577f5204"><div class="ttname"><a href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a166495adc0d0f53bee6baecc577f5204">armnn::DataType::Float32</a></div></div>
<div class="ttc" id="classarmnn_1_1_i_output_slot_xhtml_a9943775a364fc4ab53b85ac88f311886"><div class="ttname"><a href="classarmnn_1_1_i_output_slot.xhtml#a9943775a364fc4ab53b85ac88f311886">armnn::IOutputSlot::GetTensorInfo</a></div><div class="ttdeci">virtual const TensorInfo &amp; GetTensorInfo() const =0</div></div>
<div class="ttc" id="classarmnn_1_1_i_connectable_layer_xhtml_a80ac4eda2e7f2757ec9dd96fc96dbd16"><div class="ttname"><a href="classarmnn_1_1_i_connectable_layer.xhtml#a80ac4eda2e7f2757ec9dd96fc96dbd16">armnn::IConnectableLayer::GetOutputSlot</a></div><div class="ttdeci">virtual const IOutputSlot &amp; GetOutputSlot(unsigned int index) const =0</div><div class="ttdoc">Get the const output slot handle by slot index. </div></div>
<div class="ttc" id="classarmnn_1_1_i_output_slot_xhtml_aab97b09d9ee85a105883949abcae52f3"><div class="ttname"><a href="classarmnn_1_1_i_output_slot.xhtml#aab97b09d9ee85a105883949abcae52f3">armnn::IOutputSlot::GetNumConnections</a></div><div class="ttdeci">virtual unsigned int GetNumConnections() const =0</div></div>
<div class="ttc" id="classarmnn_1_1_i_connectable_layer_xhtml_afcc1c3a20bd2860e0ddd21674389246f"><div class="ttname"><a href="classarmnn_1_1_i_connectable_layer.xhtml#afcc1c3a20bd2860e0ddd21674389246f">armnn::IConnectableLayer::GetName</a></div><div class="ttdeci">virtual const char * GetName() const =0</div><div class="ttdoc">Returns the name of the layer. </div></div>
<div class="ttc" id="_layer_visitor_base_8hpp_xhtml"><div class="ttname"><a href="_layer_visitor_base_8hpp.xhtml">LayerVisitorBase.hpp</a></div></div>
<div class="ttc" id="namespacearmnn_xhtml_ace74f6f9feb95a964a49d79458232703"><div class="ttname"><a href="namespacearmnn.xhtml#ace74f6f9feb95a964a49d79458232703">armnn::INetworkPtr</a></div><div class="ttdeci">std::unique_ptr&lt; INetwork, void(*)(INetwork *network)&gt; INetworkPtr</div><div class="ttdef"><b>Definition:</b> <a href="_i_network_8hpp_source.xhtml#l00241">INetwork.hpp:241</a></div></div>
<div class="ttc" id="classarmnn_1_1_network_impl_xhtml_a8f798e19187ac7ae6ae6153ee64ab645"><div class="ttname"><a href="classarmnn_1_1_network_impl.xhtml#a8f798e19187ac7ae6ae6153ee64ab645">armnn::NetworkImpl::AddBatchNormalizationLayer</a></div><div class="ttdeci">IConnectableLayer * AddBatchNormalizationLayer(const BatchNormalizationDescriptor &amp;desc, const ConstTensor &amp;mean, const ConstTensor &amp;variance, const ConstTensor &amp;beta, const ConstTensor &amp;gamma, const char *name=nullptr)</div><div class="ttdef"><b>Definition:</b> <a href="_network_8cpp_source.xhtml#l02180">Network.cpp:2180</a></div></div>
<div class="ttc" id="classarmnn_1_1_i_output_slot_xhtml_ac1835f8756a9f03c02fcf9664e3a0fce"><div class="ttname"><a href="classarmnn_1_1_i_output_slot.xhtml#ac1835f8756a9f03c02fcf9664e3a0fce">armnn::IOutputSlot::Connect</a></div><div class="ttdeci">virtual int Connect(IInputSlot &amp;destination)=0</div></div>
<div class="ttc" id="namespacearmnn_xhtml_ad1d5cce2d9e9a5d61c243e5c989112e0a6b99f356fe3b30a2a850b5ea897c289f"><div class="ttname"><a href="namespacearmnn.xhtml#ad1d5cce2d9e9a5d61c243e5c989112e0a6b99f356fe3b30a2a850b5ea897c289f">armnn::DataLayout::NCHW</a></div></div>
<div class="ttc" id="structarmnn_1_1_pooling2d_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_pooling2d_descriptor.xhtml">armnn::Pooling2dDescriptor</a></div><div class="ttdoc">A Pooling2dDescriptor for the Pooling2dLayer. </div><div class="ttdef"><b>Definition:</b> <a href="_descriptors_8hpp_source.xhtml#l00332">Descriptors.hpp:332</a></div></div>
<div class="ttc" id="structarmnn_1_1_normalization_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_normalization_descriptor.xhtml">armnn::NormalizationDescriptor</a></div><div class="ttdoc">A NormalizationDescriptor for the NormalizationLayer. </div><div class="ttdef"><b>Definition:</b> <a href="_descriptors_8hpp_source.xhtml#l00729">Descriptors.hpp:729</a></div></div>
<div class="ttc" id="classarmnn_1_1_graph_xhtml_afdf8eb85585a798ad0e936bde884d87b"><div class="ttname"><a href="classarmnn_1_1_graph.xhtml#afdf8eb85585a798ad0e936bde884d87b">armnn::Graph::GetNumLayers</a></div><div class="ttdeci">size_t GetNumLayers() const</div><div class="ttdef"><b>Definition:</b> <a href="_graph_8hpp_source.xhtml#l00196">Graph.hpp:196</a></div></div>
<div class="ttc" id="test_2_graph_utils_8hpp_xhtml"><div class="ttname"><a href="test_2_graph_utils_8hpp.xhtml">GraphUtils.hpp</a></div></div>
<div class="ttc" id="classarmnn_1_1_network_impl_xhtml_a178a72bbf254eff34a807a5ca27cb61f"><div class="ttname"><a href="classarmnn_1_1_network_impl.xhtml#a178a72bbf254eff34a807a5ca27cb61f">armnn::NetworkImpl::AddConvolution2dLayer</a></div><div class="ttdeci">IConnectableLayer * AddConvolution2dLayer(const Convolution2dDescriptor &amp;convolution2dDescriptor, const ConstTensor &amp;weights, const Optional&lt; ConstTensor &gt; &amp;biases, const char *name=nullptr)</div><div class="ttdef"><b>Definition:</b> <a href="_network_8cpp_source.xhtml#l02022">Network.cpp:2022</a></div></div>
<div class="ttc" id="classarmnn_1_1_network_impl_xhtml_a6f6d81d8a4f1f85f3616e8306760061c"><div class="ttname"><a href="classarmnn_1_1_network_impl.xhtml#a6f6d81d8a4f1f85f3616e8306760061c">armnn::NetworkImpl::AddSplitterLayer</a></div><div class="ttdeci">IConnectableLayer * AddSplitterLayer(const ViewsDescriptor &amp;splitterDescriptor, const char *name=nullptr)</div><div class="ttdef"><b>Definition:</b> <a href="_network_8cpp_source.xhtml#l02149">Network.cpp:2149</a></div></div>
<div class="ttc" id="classarmnn_1_1_i_network_xhtml_a464f0ff87b1aabf71febaa71321dd40b"><div class="ttname"><a href="classarmnn_1_1_i_network.xhtml#a464f0ff87b1aabf71febaa71321dd40b">armnn::INetwork::Create</a></div><div class="ttdeci">static INetworkPtr Create(NetworkOptions networkOptions={})</div><div class="ttdef"><b>Definition:</b> <a href="_network_8cpp_source.xhtml#l00492">Network.cpp:492</a></div></div>
<div class="ttc" id="structarmnn_1_1_softmax_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_softmax_descriptor.xhtml">armnn::SoftmaxDescriptor</a></div><div class="ttdoc">A SoftmaxDescriptor for the SoftmaxLayer. </div><div class="ttdef"><b>Definition:</b> <a href="_descriptors_8hpp_source.xhtml#l00150">Descriptors.hpp:150</a></div></div>
<div class="ttc" id="structarmnn_1_1_base_descriptor_xhtml_ac618666b3c6d65d2c88bcbb7abeed343"><div class="ttname"><a href="structarmnn_1_1_base_descriptor.xhtml#ac618666b3c6d65d2c88bcbb7abeed343">armnn::BaseDescriptor::IsNull</a></div><div class="ttdeci">virtual bool IsNull() const</div><div class="ttdef"><b>Definition:</b> <a href="_descriptors_8hpp_source.xhtml#l00024">Descriptors.hpp:24</a></div></div>
<div class="ttc" id="structarmnn_1_1_batch_normalization_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_batch_normalization_descriptor.xhtml">armnn::BatchNormalizationDescriptor</a></div><div class="ttdoc">A BatchNormalizationDescriptor for the BatchNormalizationLayer. </div><div class="ttdef"><b>Definition:</b> <a href="_descriptors_8hpp_source.xhtml#l00788">Descriptors.hpp:788</a></div></div>
<div class="ttc" id="structarmnn_1_1_convolution2d_descriptor_xhtml_ac18546ebbebbb32fe0a03baa9bf2c600"><div class="ttname"><a href="structarmnn_1_1_convolution2d_descriptor.xhtml#ac18546ebbebbb32fe0a03baa9bf2c600">armnn::Convolution2dDescriptor::m_PadLeft</a></div><div class="ttdeci">uint32_t m_PadLeft</div><div class="ttdoc">Padding left value in the width dimension. </div><div class="ttdef"><b>Definition:</b> <a href="_descriptors_8hpp_source.xhtml#l00529">Descriptors.hpp:529</a></div></div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="dir_68267d1309a1af8e8297ef4c3efbcdba.xhtml">src</a></li><li class="navelem"><a class="el" href="dir_e0a84d05c80a2ef4231141dcbbeac5c8.xhtml">armnn</a></li><li class="navelem"><a class="el" href="dir_9d86fd1fbecbedf5bdb69c7e7235fe5f.xhtml">test</a></li><li class="navelem"><a class="el" href="_network_tests_8cpp.xhtml">NetworkTests.cpp</a></li>
    <li class="footer">Generated on Wed Mar 9 2022 12:00:07 for ArmNN by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.13 </li>
  </ul>
</div>
</body>
</html>
