<!-- Copyright (c) 2020 ARM Limited. -->
<!--                                 -->
<!-- SPDX-License-Identifier: MIT    -->
<!--                                 -->
<!-- HTML header for doxygen 1.8.13-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.13"/>
<meta name="robots" content="NOINDEX, NOFOLLOW" />
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>ArmNN: FileOnlyProfilingConnection Class Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script><script type="text/javascript" src="http://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="stylesheet.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <img alt="ArmNN" src="Arm_NN_horizontal_blue.png" style="max-width: 10rem; margin-top: .5rem; margin-left 10px"/>
  <td style="padding-left: 0.5em;">
   <div id="projectname">
   &#160;<span id="projectnumber">22.02</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.13 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
$(document).ready(function(){initNavTree('classarmnn_1_1profiling_1_1_file_only_profiling_connection.xhtml','');});
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="summary">
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="classarmnn_1_1profiling_1_1_file_only_profiling_connection-members.xhtml">List of all members</a>  </div>
  <div class="headertitle">
<div class="title">FileOnlyProfilingConnection Class Reference</div>  </div>
</div><!--header-->
<div class="contents">

<p><code>#include &lt;<a class="el" href="_file_only_profiling_connection_8hpp_source.xhtml">FileOnlyProfilingConnection.hpp</a>&gt;</code></p>
<div class="dynheader">
Inheritance diagram for FileOnlyProfilingConnection:</div>
<div class="dyncontent">
 <div class="center">
  <img src="classarmnn_1_1profiling_1_1_file_only_profiling_connection.png" usemap="#FileOnlyProfilingConnection_map" alt=""/>
  <map id="FileOnlyProfilingConnection_map" name="FileOnlyProfilingConnection_map">
<area href="classarmnn_1_1profiling_1_1_i_profiling_connection.xhtml" alt="IProfilingConnection" shape="rect" coords="0,0,171,24"/>
<area href="classarmnn_1_1profiling_1_1_i_internal_profiling_connection.xhtml" alt="IInternalProfilingConnection" shape="rect" coords="181,0,352,24"/>
</map>
 </div></div>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:ad23cb5e261f5aedf241aa830ad513644"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1profiling_1_1_file_only_profiling_connection.xhtml#ad23cb5e261f5aedf241aa830ad513644">FileOnlyProfilingConnection</a> (const <a class="el" href="structarmnn_1_1_i_runtime_1_1_creation_options_1_1_external_profiling_options.xhtml">IRuntime::CreationOptions::ExternalProfilingOptions</a> &amp;options)</td></tr>
<tr class="separator:ad23cb5e261f5aedf241aa830ad513644"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8da509c653de8c6b1809cae4372c8dfd"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1profiling_1_1_file_only_profiling_connection.xhtml#a8da509c653de8c6b1809cae4372c8dfd">~FileOnlyProfilingConnection</a> () override</td></tr>
<tr class="separator:a8da509c653de8c6b1809cae4372c8dfd"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a91bdc9d5497d47f5d707418beb83b140"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1profiling_1_1_file_only_profiling_connection.xhtml#a91bdc9d5497d47f5d707418beb83b140">IsOpen</a> () const override</td></tr>
<tr class="separator:a91bdc9d5497d47f5d707418beb83b140"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0f9aecd570c4e5e6d41337f0e2f1adf5"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1profiling_1_1_file_only_profiling_connection.xhtml#a0f9aecd570c4e5e6d41337f0e2f1adf5">Close</a> () override</td></tr>
<tr class="separator:a0f9aecd570c4e5e6d41337f0e2f1adf5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a42eb542b5a1d73d00c4ce474140bb78c"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1profiling_1_1_file_only_profiling_connection.xhtml#a42eb542b5a1d73d00c4ce474140bb78c">WritePacket</a> (const unsigned char *buffer, uint32_t length) override</td></tr>
<tr class="separator:a42eb542b5a1d73d00c4ce474140bb78c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a47c113357d105d4f7a549a058e5661ab"><td class="memItemLeft" align="right" valign="top">arm::pipe::Packet&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1profiling_1_1_file_only_profiling_connection.xhtml#a47c113357d105d4f7a549a058e5661ab">ReadPacket</a> (uint32_t timeout) override</td></tr>
<tr class="separator:a47c113357d105d4f7a549a058e5661ab"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5b284c8cac3d0df5b4b0790505ff1a26"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1profiling_1_1_file_only_profiling_connection.xhtml#a5b284c8cac3d0df5b4b0790505ff1a26">SetEndianess</a> (const <a class="el" href="namespacearmnn_1_1profiling.xhtml#a006732ecc1f16712db06bf622eb79651">TargetEndianness</a> &amp;endianness) override</td></tr>
<tr class="separator:a5b284c8cac3d0df5b4b0790505ff1a26"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a81d13569688277c3264c5cd039a1bb45"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1profiling_1_1_file_only_profiling_connection.xhtml#a81d13569688277c3264c5cd039a1bb45">ReturnPacket</a> (arm::pipe::Packet &amp;packet) override</td></tr>
<tr class="separator:a81d13569688277c3264c5cd039a1bb45"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pub_methods_classarmnn_1_1profiling_1_1_i_profiling_connection"><td colspan="2" onclick="javascript:toggleInherit('pub_methods_classarmnn_1_1profiling_1_1_i_profiling_connection')"><img src="closed.png" alt="-"/>&#160;Public Member Functions inherited from <a class="el" href="classarmnn_1_1profiling_1_1_i_profiling_connection.xhtml">IProfilingConnection</a></td></tr>
<tr class="memitem:a8c5a75b8ee005a7aa9391f3991480d74 inherit pub_methods_classarmnn_1_1profiling_1_1_i_profiling_connection"><td class="memItemLeft" align="right" valign="top">virtual&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1profiling_1_1_i_profiling_connection.xhtml#a8c5a75b8ee005a7aa9391f3991480d74">~IProfilingConnection</a> ()</td></tr>
<tr class="separator:a8c5a75b8ee005a7aa9391f3991480d74 inherit pub_methods_classarmnn_1_1profiling_1_1_i_profiling_connection"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pub_methods_classarmnn_1_1profiling_1_1_i_internal_profiling_connection"><td colspan="2" onclick="javascript:toggleInherit('pub_methods_classarmnn_1_1profiling_1_1_i_internal_profiling_connection')"><img src="closed.png" alt="-"/>&#160;Public Member Functions inherited from <a class="el" href="classarmnn_1_1profiling_1_1_i_internal_profiling_connection.xhtml">IInternalProfilingConnection</a></td></tr>
<tr class="memitem:adad8de7565579a2206d9f71125c8a032 inherit pub_methods_classarmnn_1_1profiling_1_1_i_internal_profiling_connection"><td class="memItemLeft" align="right" valign="top">virtual&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1profiling_1_1_i_internal_profiling_connection.xhtml#adad8de7565579a2206d9f71125c8a032">~IInternalProfilingConnection</a> ()</td></tr>
<tr class="separator:adad8de7565579a2206d9f71125c8a032 inherit pub_methods_classarmnn_1_1profiling_1_1_i_internal_profiling_connection"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock">
<p class="definition">Definition at line <a class="el" href="_file_only_profiling_connection_8hpp_source.xhtml#l00050">50</a> of file <a class="el" href="_file_only_profiling_connection_8hpp_source.xhtml">FileOnlyProfilingConnection.hpp</a>.</p>
</div><h2 class="groupheader">Constructor &amp; Destructor Documentation</h2>
<a id="ad23cb5e261f5aedf241aa830ad513644"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ad23cb5e261f5aedf241aa830ad513644">&#9670;&nbsp;</a></span>FileOnlyProfilingConnection()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarmnn_1_1profiling_1_1_file_only_profiling_connection.xhtml">FileOnlyProfilingConnection</a> </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="structarmnn_1_1_i_runtime_1_1_creation_options_1_1_external_profiling_options.xhtml">IRuntime::CreationOptions::ExternalProfilingOptions</a> &amp;&#160;</td>
          <td class="paramname"><em>options</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">explicit</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_file_only_profiling_connection_8hpp_source.xhtml#l00053">53</a> of file <a class="el" href="_file_only_profiling_connection_8hpp_source.xhtml">FileOnlyProfilingConnection.hpp</a>.</p>

<p class="reference">References <a class="el" href="_i_runtime_8hpp_source.xhtml#l00149">IRuntime::CreationOptions::ExternalProfilingOptions::m_LocalPacketHandlers</a>.</p>
<div class="fragment"><div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;        : m_Options(options)</div><div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;        , m_Endianness(<a class="code" href="namespacearmnn_1_1profiling.xhtml#a006732ecc1f16712db06bf622eb79651ab2db365e5027e9a57988c7054e9bd6b7">TargetEndianness::LeWire</a>)    <span class="comment">// Set a sensible default.</span></div><div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;                                                    <span class="comment">// StreamMetaDataProcessor will set a real value.</span></div><div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;        , m_IsRunning(<span class="keyword">false</span>)</div><div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;        , m_KeepRunning(<span class="keyword">false</span>)</div><div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;        , m_Timeout(1000)</div><div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;    {</div><div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;        <span class="comment">// add the StreamMetaDataProcessor</span></div><div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;        <span class="keyword">auto</span> streamMetaDataProcessor = std::make_shared&lt;StreamMetaDataProcessor&gt;(<span class="keyword">this</span>);</div><div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;        AddLocalPacketHandler(streamMetaDataProcessor);</div><div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;        <span class="comment">// and any additional ones added by the users</span></div><div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;        <span class="keywordflow">for</span> (<span class="keyword">const</span> <a class="code" href="namespacearmnn_1_1profiling.xhtml#a96b0827ffefa36d7ec2b4ac34a922d12">ILocalPacketHandlerSharedPtr</a>&amp; localPacketHandler : options.m_LocalPacketHandlers)</div><div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;        {</div><div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;            AddLocalPacketHandler(localPacketHandler);</div><div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;        }</div><div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;        <span class="keywordflow">if</span> (!m_PacketHandlers.empty())</div><div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;        {</div><div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;            StartProcessingThread();</div><div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;        }</div><div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;        <span class="comment">// NOTE: could add timeout to the external profiling options</span></div><div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;    };</div><div class="ttc" id="namespacearmnn_1_1profiling_xhtml_a96b0827ffefa36d7ec2b4ac34a922d12"><div class="ttname"><a href="namespacearmnn_1_1profiling.xhtml#a96b0827ffefa36d7ec2b4ac34a922d12">armnn::profiling::ILocalPacketHandlerSharedPtr</a></div><div class="ttdeci">std::shared_ptr&lt; ILocalPacketHandler &gt; ILocalPacketHandlerSharedPtr</div><div class="ttdef"><b>Definition:</b> <a href="_i_local_packet_handler_8hpp_source.xhtml#l00074">ILocalPacketHandler.hpp:74</a></div></div>
<div class="ttc" id="namespacearmnn_1_1profiling_xhtml_a006732ecc1f16712db06bf622eb79651ab2db365e5027e9a57988c7054e9bd6b7"><div class="ttname"><a href="namespacearmnn_1_1profiling.xhtml#a006732ecc1f16712db06bf622eb79651ab2db365e5027e9a57988c7054e9bd6b7">armnn::profiling::TargetEndianness::LeWire</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="a8da509c653de8c6b1809cae4372c8dfd"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a8da509c653de8c6b1809cae4372c8dfd">&#9670;&nbsp;</a></span>~FileOnlyProfilingConnection()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">~<a class="el" href="classarmnn_1_1profiling_1_1_file_only_profiling_connection.xhtml">FileOnlyProfilingConnection</a> </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">override</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_file_only_profiling_connection_8cpp_source.xhtml#l00073">73</a> of file <a class="el" href="_file_only_profiling_connection_8cpp_source.xhtml">FileOnlyProfilingConnection.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;{</div><div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;    <span class="keywordflow">try</span></div><div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;    {</div><div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;        <a class="code" href="classarmnn_1_1profiling_1_1_file_only_profiling_connection.xhtml#a0f9aecd570c4e5e6d41337f0e2f1adf5">Close</a>();</div><div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;    }</div><div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;    <span class="keywordflow">catch</span> (...)</div><div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;    {</div><div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;        <span class="comment">// do nothing</span></div><div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;    }</div><div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;}</div><div class="ttc" id="classarmnn_1_1profiling_1_1_file_only_profiling_connection_xhtml_a0f9aecd570c4e5e6d41337f0e2f1adf5"><div class="ttname"><a href="classarmnn_1_1profiling_1_1_file_only_profiling_connection.xhtml#a0f9aecd570c4e5e6d41337f0e2f1adf5">armnn::profiling::FileOnlyProfilingConnection::Close</a></div><div class="ttdeci">void Close() override</div><div class="ttdef"><b>Definition:</b> <a href="_file_only_profiling_connection_8cpp_source.xhtml#l00091">FileOnlyProfilingConnection.cpp:91</a></div></div>
</div><!-- fragment -->
</div>
</div>
<h2 class="groupheader">Member Function Documentation</h2>
<a id="a0f9aecd570c4e5e6d41337f0e2f1adf5"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a0f9aecd570c4e5e6d41337f0e2f1adf5">&#9670;&nbsp;</a></span>Close()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void Close </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Implements <a class="el" href="classarmnn_1_1profiling_1_1_i_internal_profiling_connection.xhtml#aacb6d0e5e6d570cdc2b0da14c3921ff0">IInternalProfilingConnection</a>.</p>

<p class="definition">Definition at line <a class="el" href="_file_only_profiling_connection_8cpp_source.xhtml#l00091">91</a> of file <a class="el" href="_file_only_profiling_connection_8cpp_source.xhtml">FileOnlyProfilingConnection.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;{</div><div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;    <span class="comment">// Dump any unread packets out of the queue.</span></div><div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;    <span class="keywordtype">size_t</span> initialSize = m_PacketQueue.size();</div><div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;    <span class="keywordflow">for</span> (<span class="keywordtype">size_t</span> i = 0; i &lt; initialSize; ++i)</div><div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;    {</div><div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;        m_PacketQueue.pop();</div><div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;    }</div><div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;    <span class="comment">// dispose of the processing thread</span></div><div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;    m_KeepRunning.store(<span class="keyword">false</span>);</div><div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;    <span class="keywordflow">if</span> (m_LocalHandlersThread.joinable())</div><div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;    {</div><div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;        <span class="comment">// make sure the thread wakes up and sees it has to stop</span></div><div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;        m_ConditionPacketReadable.notify_one();</div><div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;        m_LocalHandlersThread.join();</div><div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;    }</div><div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;}</div></div><!-- fragment -->
</div>
</div>
<a id="a91bdc9d5497d47f5d707418beb83b140"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a91bdc9d5497d47f5d707418beb83b140">&#9670;&nbsp;</a></span>IsOpen()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool IsOpen </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Implements <a class="el" href="classarmnn_1_1profiling_1_1_i_profiling_connection.xhtml#a8a3511046982c64efa3e3833d749e5ef">IProfilingConnection</a>.</p>

<p class="definition">Definition at line <a class="el" href="_file_only_profiling_connection_8cpp_source.xhtml#l00085">85</a> of file <a class="el" href="_file_only_profiling_connection_8cpp_source.xhtml">FileOnlyProfilingConnection.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;{</div><div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;    <span class="comment">// This type of connection is always open.</span></div><div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;    <span class="keywordflow">return</span> <span class="keyword">true</span>;</div><div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;}</div></div><!-- fragment -->
</div>
</div>
<a id="a47c113357d105d4f7a549a058e5661ab"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a47c113357d105d4f7a549a058e5661ab">&#9670;&nbsp;</a></span>ReadPacket()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">arm::pipe::Packet ReadPacket </td>
          <td>(</td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>timeout</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Implements <a class="el" href="classarmnn_1_1profiling_1_1_i_profiling_connection.xhtml#a5247de645666d82d97c2b047835404ee">IProfilingConnection</a>.</p>

<p class="definition">Definition at line <a class="el" href="_file_only_profiling_connection_8cpp_source.xhtml#l00126">126</a> of file <a class="el" href="_file_only_profiling_connection_8cpp_source.xhtml">FileOnlyProfilingConnection.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;{</div><div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;    std::unique_lock&lt;std::mutex&gt; lck(m_PacketAvailableMutex);</div><div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;</div><div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;    <span class="comment">// Here we are using m_PacketQueue.empty() as a predicate variable</span></div><div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;    <span class="comment">// The conditional variable will wait until packetQueue is not empty or until a timeout</span></div><div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;    <span class="keywordflow">if</span> (!m_ConditionPacketAvailable.wait_for(lck,</div><div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;                                             std::chrono::milliseconds(timeout),</div><div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;                                             [&amp;]{return !m_PacketQueue.empty();}))</div><div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;    {</div><div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;        arm::pipe::Packet empty;</div><div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;        <span class="keywordflow">return</span> empty;</div><div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;    }</div><div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;</div><div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;    arm::pipe::Packet returnedPacket = std::move(m_PacketQueue.front());</div><div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;    m_PacketQueue.pop();</div><div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;    <span class="keywordflow">return</span> returnedPacket;</div><div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;}</div></div><!-- fragment -->
</div>
</div>
<a id="a81d13569688277c3264c5cd039a1bb45"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a81d13569688277c3264c5cd039a1bb45">&#9670;&nbsp;</a></span>ReturnPacket()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void ReturnPacket </td>
          <td>(</td>
          <td class="paramtype">arm::pipe::Packet &amp;&#160;</td>
          <td class="paramname"><em>packet</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Implements <a class="el" href="classarmnn_1_1profiling_1_1_i_internal_profiling_connection.xhtml#a640392c7ef7693fdbc3895f388d89bc5">IInternalProfilingConnection</a>.</p>

<p class="definition">Definition at line <a class="el" href="_file_only_profiling_connection_8cpp_source.xhtml#l00117">117</a> of file <a class="el" href="_file_only_profiling_connection_8cpp_source.xhtml">FileOnlyProfilingConnection.cpp</a>.</p>

<p class="reference">Referenced by <a class="el" href="_file_only_profiling_connection_8cpp_source.xhtml#l00030">StreamMetaDataProcessor::HandlePacket()</a>.</p>
<div class="fragment"><div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;{</div><div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;    {</div><div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;        std::lock_guard&lt;std::mutex&gt; lck(m_PacketAvailableMutex);</div><div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;        m_PacketQueue.push(std::move(packet));</div><div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;    }</div><div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;    m_ConditionPacketAvailable.notify_one();</div><div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;}</div></div><!-- fragment -->
</div>
</div>
<a id="a5b284c8cac3d0df5b4b0790505ff1a26"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a5b284c8cac3d0df5b4b0790505ff1a26">&#9670;&nbsp;</a></span>SetEndianess()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void SetEndianess </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="namespacearmnn_1_1profiling.xhtml#a006732ecc1f16712db06bf622eb79651">TargetEndianness</a> &amp;&#160;</td>
          <td class="paramname"><em>endianness</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Implements <a class="el" href="classarmnn_1_1profiling_1_1_i_internal_profiling_connection.xhtml#a5bbbbe879cd3acb8942edd4a7953e9e0">IInternalProfilingConnection</a>.</p>

<p class="definition">Definition at line <a class="el" href="_file_only_profiling_connection_8hpp_source.xhtml#l00088">88</a> of file <a class="el" href="_file_only_profiling_connection_8hpp_source.xhtml">FileOnlyProfilingConnection.hpp</a>.</p>

<p class="reference">Referenced by <a class="el" href="_file_only_profiling_connection_8cpp_source.xhtml#l00030">StreamMetaDataProcessor::HandlePacket()</a>.</p>
<div class="fragment"><div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;    {</div><div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;        m_Endianness = endianness;</div><div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;    }</div></div><!-- fragment -->
</div>
</div>
<a id="a42eb542b5a1d73d00c4ce474140bb78c"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a42eb542b5a1d73d00c4ce474140bb78c">&#9670;&nbsp;</a></span>WritePacket()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool WritePacket </td>
          <td>(</td>
          <td class="paramtype">const unsigned char *&#160;</td>
          <td class="paramname"><em>buffer</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>length</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Implements <a class="el" href="classarmnn_1_1profiling_1_1_i_profiling_connection.xhtml#ac78c6bd1a545934a805c88194214b09d">IProfilingConnection</a>.</p>

<p class="definition">Definition at line <a class="el" href="_file_only_profiling_connection_8cpp_source.xhtml#l00109">109</a> of file <a class="el" href="_file_only_profiling_connection_8cpp_source.xhtml">FileOnlyProfilingConnection.cpp</a>.</p>

<p class="reference">References <a class="el" href="_assert_8hpp_source.xhtml#l00014">ARMNN_ASSERT</a>, and <a class="el" href="_profiling_utils_8cpp_source.xhtml#l00918">armnn::profiling::ReceivePacket()</a>.</p>
<div class="fragment"><div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;{</div><div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;    <a class="code" href="_assert_8hpp.xhtml#a5698be69cbd5dfe6c28fcd9867e8cbed">ARMNN_ASSERT</a>(buffer);</div><div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;    arm::pipe::Packet packet = <a class="code" href="namespacearmnn_1_1profiling.xhtml#a68dc7d3158eb3d4ed9cade6b8893d7c0">ReceivePacket</a>(buffer, length);</div><div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;    ForwardPacketToHandlers(packet);</div><div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;    <span class="keywordflow">return</span> <span class="keyword">true</span>;</div><div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;}</div><div class="ttc" id="namespacearmnn_1_1profiling_xhtml_a68dc7d3158eb3d4ed9cade6b8893d7c0"><div class="ttname"><a href="namespacearmnn_1_1profiling.xhtml#a68dc7d3158eb3d4ed9cade6b8893d7c0">armnn::profiling::ReceivePacket</a></div><div class="ttdeci">arm::pipe::Packet ReceivePacket(const unsigned char *buffer, uint32_t length)</div><div class="ttdef"><b>Definition:</b> <a href="_profiling_utils_8cpp_source.xhtml#l00918">ProfilingUtils.cpp:918</a></div></div>
<div class="ttc" id="_assert_8hpp_xhtml_a5698be69cbd5dfe6c28fcd9867e8cbed"><div class="ttname"><a href="_assert_8hpp.xhtml#a5698be69cbd5dfe6c28fcd9867e8cbed">ARMNN_ASSERT</a></div><div class="ttdeci">#define ARMNN_ASSERT(COND)</div><div class="ttdef"><b>Definition:</b> <a href="_assert_8hpp_source.xhtml#l00014">Assert.hpp:14</a></div></div>
</div><!-- fragment -->
</div>
</div>
<hr/>The documentation for this class was generated from the following files:<ul>
<li>src/profiling/<a class="el" href="_file_only_profiling_connection_8hpp_source.xhtml">FileOnlyProfilingConnection.hpp</a></li>
<li>src/profiling/<a class="el" href="_file_only_profiling_connection_8cpp_source.xhtml">FileOnlyProfilingConnection.cpp</a></li>
</ul>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="namespacearmnn.xhtml">armnn</a></li><li class="navelem"><a class="el" href="namespacearmnn_1_1profiling.xhtml">profiling</a></li><li class="navelem"><a class="el" href="classarmnn_1_1profiling_1_1_file_only_profiling_connection.xhtml">FileOnlyProfilingConnection</a></li>
    <li class="footer">Generated on Tue Feb 22 2022 11:39:52 for ArmNN by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.13 </li>
  </ul>
</div>
</body>
</html>
