<!-- Copyright (c) 2020 ARM Limited. -->
<!--                                 -->
<!-- SPDX-License-Identifier: MIT    -->
<!--                                 -->
<!-- HTML header for doxygen 1.8.13-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.13"/>
<meta name="robots" content="NOINDEX, NOFOLLOW" />
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>ArmNN: LayerTestResult&lt; T, n &gt; Struct Template Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script><script type="text/javascript" src="http://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="stylesheet.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <img alt="ArmNN" src="Arm_NN_horizontal_blue.png" style="max-width: 10rem; margin-top: .5rem; margin-left 10px"/>
  <td style="padding-left: 0.5em;">
   <div id="projectname">
   &#160;<span id="projectnumber">22.05</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.13 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
$(document).ready(function(){initNavTree('struct_layer_test_result.xhtml','');});
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="summary">
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="#pub-attribs">Public Attributes</a> &#124;
<a href="struct_layer_test_result-members.xhtml">List of all members</a>  </div>
  <div class="headertitle">
<div class="title">LayerTestResult&lt; T, n &gt; Struct Template Reference</div>  </div>
</div><!--header-->
<div class="contents">

<p><code>#include &lt;<a class="el" href="include_2armnn_test_utils_2_layer_test_result_8hpp_source.xhtml">LayerTestResult.hpp</a>&gt;</code></p>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:a0ff3d1ccdaff4db423043d2f758c08da"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="struct_layer_test_result.xhtml#a0ff3d1ccdaff4db423043d2f758c08da">LayerTestResult</a> (const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">armnn::TensorInfo</a> &amp;outputInfo)</td></tr>
<tr class="separator:a0ff3d1ccdaff4db423043d2f758c08da"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab0fab7ff2636faa1b9becd3ede336c5e"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="struct_layer_test_result.xhtml#ab0fab7ff2636faa1b9becd3ede336c5e">LayerTestResult</a> (const std::vector&lt; T &gt; &amp;actualData, const std::vector&lt; T &gt; &amp;expectedData, const <a class="el" href="classarmnn_1_1_tensor_shape.xhtml">armnn::TensorShape</a> &amp;actualShape, const <a class="el" href="classarmnn_1_1_tensor_shape.xhtml">armnn::TensorShape</a> &amp;expectedShape)</td></tr>
<tr class="separator:ab0fab7ff2636faa1b9becd3ede336c5e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a78b7c3e02e8f5b2cfa2839f7175e482a"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="struct_layer_test_result.xhtml#a78b7c3e02e8f5b2cfa2839f7175e482a">LayerTestResult</a> (const std::vector&lt; T &gt; &amp;actualData, const std::vector&lt; T &gt; &amp;expectedData, const <a class="el" href="classarmnn_1_1_tensor_shape.xhtml">armnn::TensorShape</a> &amp;actualShape, const <a class="el" href="classarmnn_1_1_tensor_shape.xhtml">armnn::TensorShape</a> &amp;expectedShape, const bool compareBoolean)</td></tr>
<tr class="separator:a78b7c3e02e8f5b2cfa2839f7175e482a"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-attribs"></a>
Public Attributes</h2></td></tr>
<tr class="memitem:a744f7791c7f88a945817d375cd754061"><td class="memItemLeft" align="right" valign="top">std::vector&lt; T &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="struct_layer_test_result.xhtml#a744f7791c7f88a945817d375cd754061">m_ActualData</a></td></tr>
<tr class="separator:a744f7791c7f88a945817d375cd754061"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:afe2a527d7250fb113121b70e29c6bed5"><td class="memItemLeft" align="right" valign="top">std::vector&lt; T &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="struct_layer_test_result.xhtml#afe2a527d7250fb113121b70e29c6bed5">m_ExpectedData</a></td></tr>
<tr class="separator:afe2a527d7250fb113121b70e29c6bed5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a74a0abe714f3fe5b9ca7023409833fb5"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classarmnn_1_1_tensor_shape.xhtml">armnn::TensorShape</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="struct_layer_test_result.xhtml#a74a0abe714f3fe5b9ca7023409833fb5">m_ActualShape</a></td></tr>
<tr class="separator:a74a0abe714f3fe5b9ca7023409833fb5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:acd2a9d8ba7ceee9a10e3f2826cca22c1"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classarmnn_1_1_tensor_shape.xhtml">armnn::TensorShape</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="struct_layer_test_result.xhtml#acd2a9d8ba7ceee9a10e3f2826cca22c1">m_ExpectedShape</a></td></tr>
<tr class="separator:acd2a9d8ba7ceee9a10e3f2826cca22c1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a803952d7c2fd093757ed85279063ab2a"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="struct_layer_test_result.xhtml#a803952d7c2fd093757ed85279063ab2a">m_Supported</a></td></tr>
<tr class="separator:a803952d7c2fd093757ed85279063ab2a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a81f7c8835f58879cff48641c8f533e27"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="struct_layer_test_result.xhtml#a81f7c8835f58879cff48641c8f533e27">m_CompareBoolean</a></td></tr>
<tr class="separator:a81f7c8835f58879cff48641c8f533e27"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><h3>template&lt;typename T, std::size_t n&gt;<br />
struct LayerTestResult&lt; T, n &gt;</h3>


<p class="definition">Definition at line <a class="el" href="include_2armnn_test_utils_2_layer_test_result_8hpp_source.xhtml#l00015">15</a> of file <a class="el" href="include_2armnn_test_utils_2_layer_test_result_8hpp_source.xhtml">LayerTestResult.hpp</a>.</p>
</div><h2 class="groupheader">Constructor &amp; Destructor Documentation</h2>
<a id="a0ff3d1ccdaff4db423043d2f758c08da"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a0ff3d1ccdaff4db423043d2f758c08da">&#9670;&nbsp;</a></span>LayerTestResult() <span class="overload">[1/3]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="struct_layer_test_result.xhtml">LayerTestResult</a> </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_tensor_info.xhtml">armnn::TensorInfo</a> &amp;&#160;</td>
          <td class="paramname"><em>outputInfo</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="include_2armnn_test_utils_2_layer_test_result_8hpp_source.xhtml#l00017">17</a> of file <a class="el" href="include_2armnn_test_utils_2_layer_test_result_8hpp_source.xhtml">LayerTestResult.hpp</a>.</p>

<p class="reference">References <a class="el" href="_tensor_8hpp_source.xhtml#l00196">TensorInfo::GetNumElements()</a>, <a class="el" href="_tensor_8hpp_source.xhtml#l00191">TensorInfo::GetShape()</a>, <a class="el" href="include_2armnn_test_utils_2_layer_test_result_8hpp_source.xhtml#l00052">LayerTestResult&lt; T, n &gt;::m_ActualData</a>, <a class="el" href="include_2armnn_test_utils_2_layer_test_result_8hpp_source.xhtml#l00054">LayerTestResult&lt; T, n &gt;::m_ActualShape</a>, <a class="el" href="include_2armnn_test_utils_2_layer_test_result_8hpp_source.xhtml#l00053">LayerTestResult&lt; T, n &gt;::m_ExpectedData</a>, and <a class="el" href="include_2armnn_test_utils_2_layer_test_result_8hpp_source.xhtml#l00055">LayerTestResult&lt; T, n &gt;::m_ExpectedShape</a>.</p>
<div class="fragment"><div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;        : <a class="code" href="struct_layer_test_result.xhtml#a803952d7c2fd093757ed85279063ab2a">m_Supported</a>(<span class="keyword">true</span>)</div><div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;        , <a class="code" href="struct_layer_test_result.xhtml#a81f7c8835f58879cff48641c8f533e27">m_CompareBoolean</a>(<span class="keyword">false</span>)</div><div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;    {</div><div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;        <a class="code" href="struct_layer_test_result.xhtml#a744f7791c7f88a945817d375cd754061">m_ActualData</a>.reserve(outputInfo.<a class="code" href="classarmnn_1_1_tensor_info.xhtml#a8846406ac37fbd2204f0be16ee05d5b7">GetNumElements</a>());</div><div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;        <a class="code" href="struct_layer_test_result.xhtml#afe2a527d7250fb113121b70e29c6bed5">m_ExpectedData</a>.reserve(outputInfo.<a class="code" href="classarmnn_1_1_tensor_info.xhtml#a8846406ac37fbd2204f0be16ee05d5b7">GetNumElements</a>());</div><div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;        <a class="code" href="struct_layer_test_result.xhtml#a74a0abe714f3fe5b9ca7023409833fb5">m_ActualShape</a> = outputInfo.<a class="code" href="classarmnn_1_1_tensor_info.xhtml#a8b5d0f8a24e9d9238f412260a552acf8">GetShape</a>();</div><div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;        <a class="code" href="struct_layer_test_result.xhtml#acd2a9d8ba7ceee9a10e3f2826cca22c1">m_ExpectedShape</a> = outputInfo.<a class="code" href="classarmnn_1_1_tensor_info.xhtml#a8b5d0f8a24e9d9238f412260a552acf8">GetShape</a>();</div><div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;    }</div><div class="ttc" id="struct_layer_test_result_xhtml_acd2a9d8ba7ceee9a10e3f2826cca22c1"><div class="ttname"><a href="struct_layer_test_result.xhtml#acd2a9d8ba7ceee9a10e3f2826cca22c1">LayerTestResult::m_ExpectedShape</a></div><div class="ttdeci">armnn::TensorShape m_ExpectedShape</div><div class="ttdef"><b>Definition:</b> <a href="include_2armnn_test_utils_2_layer_test_result_8hpp_source.xhtml#l00055">LayerTestResult.hpp:55</a></div></div>
<div class="ttc" id="struct_layer_test_result_xhtml_a81f7c8835f58879cff48641c8f533e27"><div class="ttname"><a href="struct_layer_test_result.xhtml#a81f7c8835f58879cff48641c8f533e27">LayerTestResult::m_CompareBoolean</a></div><div class="ttdeci">bool m_CompareBoolean</div><div class="ttdef"><b>Definition:</b> <a href="include_2armnn_test_utils_2_layer_test_result_8hpp_source.xhtml#l00058">LayerTestResult.hpp:58</a></div></div>
<div class="ttc" id="classarmnn_1_1_tensor_info_xhtml_a8b5d0f8a24e9d9238f412260a552acf8"><div class="ttname"><a href="classarmnn_1_1_tensor_info.xhtml#a8b5d0f8a24e9d9238f412260a552acf8">armnn::TensorInfo::GetShape</a></div><div class="ttdeci">const TensorShape &amp; GetShape() const</div><div class="ttdef"><b>Definition:</b> <a href="_tensor_8hpp_source.xhtml#l00191">Tensor.hpp:191</a></div></div>
<div class="ttc" id="struct_layer_test_result_xhtml_afe2a527d7250fb113121b70e29c6bed5"><div class="ttname"><a href="struct_layer_test_result.xhtml#afe2a527d7250fb113121b70e29c6bed5">LayerTestResult::m_ExpectedData</a></div><div class="ttdeci">std::vector&lt; T &gt; m_ExpectedData</div><div class="ttdef"><b>Definition:</b> <a href="include_2armnn_test_utils_2_layer_test_result_8hpp_source.xhtml#l00053">LayerTestResult.hpp:53</a></div></div>
<div class="ttc" id="struct_layer_test_result_xhtml_a803952d7c2fd093757ed85279063ab2a"><div class="ttname"><a href="struct_layer_test_result.xhtml#a803952d7c2fd093757ed85279063ab2a">LayerTestResult::m_Supported</a></div><div class="ttdeci">bool m_Supported</div><div class="ttdef"><b>Definition:</b> <a href="include_2armnn_test_utils_2_layer_test_result_8hpp_source.xhtml#l00057">LayerTestResult.hpp:57</a></div></div>
<div class="ttc" id="struct_layer_test_result_xhtml_a744f7791c7f88a945817d375cd754061"><div class="ttname"><a href="struct_layer_test_result.xhtml#a744f7791c7f88a945817d375cd754061">LayerTestResult::m_ActualData</a></div><div class="ttdeci">std::vector&lt; T &gt; m_ActualData</div><div class="ttdef"><b>Definition:</b> <a href="include_2armnn_test_utils_2_layer_test_result_8hpp_source.xhtml#l00052">LayerTestResult.hpp:52</a></div></div>
<div class="ttc" id="struct_layer_test_result_xhtml_a74a0abe714f3fe5b9ca7023409833fb5"><div class="ttname"><a href="struct_layer_test_result.xhtml#a74a0abe714f3fe5b9ca7023409833fb5">LayerTestResult::m_ActualShape</a></div><div class="ttdeci">armnn::TensorShape m_ActualShape</div><div class="ttdef"><b>Definition:</b> <a href="include_2armnn_test_utils_2_layer_test_result_8hpp_source.xhtml#l00054">LayerTestResult.hpp:54</a></div></div>
<div class="ttc" id="classarmnn_1_1_tensor_info_xhtml_a8846406ac37fbd2204f0be16ee05d5b7"><div class="ttname"><a href="classarmnn_1_1_tensor_info.xhtml#a8846406ac37fbd2204f0be16ee05d5b7">armnn::TensorInfo::GetNumElements</a></div><div class="ttdeci">unsigned int GetNumElements() const</div><div class="ttdef"><b>Definition:</b> <a href="_tensor_8hpp_source.xhtml#l00196">Tensor.hpp:196</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="ab0fab7ff2636faa1b9becd3ede336c5e"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ab0fab7ff2636faa1b9becd3ede336c5e">&#9670;&nbsp;</a></span>LayerTestResult() <span class="overload">[2/3]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="struct_layer_test_result.xhtml">LayerTestResult</a> </td>
          <td>(</td>
          <td class="paramtype">const std::vector&lt; T &gt; &amp;&#160;</td>
          <td class="paramname"><em>actualData</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const std::vector&lt; T &gt; &amp;&#160;</td>
          <td class="paramname"><em>expectedData</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_tensor_shape.xhtml">armnn::TensorShape</a> &amp;&#160;</td>
          <td class="paramname"><em>actualShape</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_tensor_shape.xhtml">armnn::TensorShape</a> &amp;&#160;</td>
          <td class="paramname"><em>expectedShape</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="include_2armnn_test_utils_2_layer_test_result_8hpp_source.xhtml#l00027">27</a> of file <a class="el" href="include_2armnn_test_utils_2_layer_test_result_8hpp_source.xhtml">LayerTestResult.hpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;        : <a class="code" href="struct_layer_test_result.xhtml#a744f7791c7f88a945817d375cd754061">m_ActualData</a>(actualData)</div><div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;        , <a class="code" href="struct_layer_test_result.xhtml#afe2a527d7250fb113121b70e29c6bed5">m_ExpectedData</a>(expectedData)</div><div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;        , <a class="code" href="struct_layer_test_result.xhtml#a74a0abe714f3fe5b9ca7023409833fb5">m_ActualShape</a>(actualShape)</div><div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;        , <a class="code" href="struct_layer_test_result.xhtml#acd2a9d8ba7ceee9a10e3f2826cca22c1">m_ExpectedShape</a>(expectedShape)</div><div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;        , <a class="code" href="struct_layer_test_result.xhtml#a803952d7c2fd093757ed85279063ab2a">m_Supported</a>(<span class="keyword">true</span>)</div><div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;        , <a class="code" href="struct_layer_test_result.xhtml#a81f7c8835f58879cff48641c8f533e27">m_CompareBoolean</a>(<span class="keyword">false</span>)</div><div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;    {}</div><div class="ttc" id="struct_layer_test_result_xhtml_acd2a9d8ba7ceee9a10e3f2826cca22c1"><div class="ttname"><a href="struct_layer_test_result.xhtml#acd2a9d8ba7ceee9a10e3f2826cca22c1">LayerTestResult::m_ExpectedShape</a></div><div class="ttdeci">armnn::TensorShape m_ExpectedShape</div><div class="ttdef"><b>Definition:</b> <a href="include_2armnn_test_utils_2_layer_test_result_8hpp_source.xhtml#l00055">LayerTestResult.hpp:55</a></div></div>
<div class="ttc" id="struct_layer_test_result_xhtml_a81f7c8835f58879cff48641c8f533e27"><div class="ttname"><a href="struct_layer_test_result.xhtml#a81f7c8835f58879cff48641c8f533e27">LayerTestResult::m_CompareBoolean</a></div><div class="ttdeci">bool m_CompareBoolean</div><div class="ttdef"><b>Definition:</b> <a href="include_2armnn_test_utils_2_layer_test_result_8hpp_source.xhtml#l00058">LayerTestResult.hpp:58</a></div></div>
<div class="ttc" id="struct_layer_test_result_xhtml_afe2a527d7250fb113121b70e29c6bed5"><div class="ttname"><a href="struct_layer_test_result.xhtml#afe2a527d7250fb113121b70e29c6bed5">LayerTestResult::m_ExpectedData</a></div><div class="ttdeci">std::vector&lt; T &gt; m_ExpectedData</div><div class="ttdef"><b>Definition:</b> <a href="include_2armnn_test_utils_2_layer_test_result_8hpp_source.xhtml#l00053">LayerTestResult.hpp:53</a></div></div>
<div class="ttc" id="struct_layer_test_result_xhtml_a803952d7c2fd093757ed85279063ab2a"><div class="ttname"><a href="struct_layer_test_result.xhtml#a803952d7c2fd093757ed85279063ab2a">LayerTestResult::m_Supported</a></div><div class="ttdeci">bool m_Supported</div><div class="ttdef"><b>Definition:</b> <a href="include_2armnn_test_utils_2_layer_test_result_8hpp_source.xhtml#l00057">LayerTestResult.hpp:57</a></div></div>
<div class="ttc" id="struct_layer_test_result_xhtml_a744f7791c7f88a945817d375cd754061"><div class="ttname"><a href="struct_layer_test_result.xhtml#a744f7791c7f88a945817d375cd754061">LayerTestResult::m_ActualData</a></div><div class="ttdeci">std::vector&lt; T &gt; m_ActualData</div><div class="ttdef"><b>Definition:</b> <a href="include_2armnn_test_utils_2_layer_test_result_8hpp_source.xhtml#l00052">LayerTestResult.hpp:52</a></div></div>
<div class="ttc" id="struct_layer_test_result_xhtml_a74a0abe714f3fe5b9ca7023409833fb5"><div class="ttname"><a href="struct_layer_test_result.xhtml#a74a0abe714f3fe5b9ca7023409833fb5">LayerTestResult::m_ActualShape</a></div><div class="ttdeci">armnn::TensorShape m_ActualShape</div><div class="ttdef"><b>Definition:</b> <a href="include_2armnn_test_utils_2_layer_test_result_8hpp_source.xhtml#l00054">LayerTestResult.hpp:54</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="a78b7c3e02e8f5b2cfa2839f7175e482a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a78b7c3e02e8f5b2cfa2839f7175e482a">&#9670;&nbsp;</a></span>LayerTestResult() <span class="overload">[3/3]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="struct_layer_test_result.xhtml">LayerTestResult</a> </td>
          <td>(</td>
          <td class="paramtype">const std::vector&lt; T &gt; &amp;&#160;</td>
          <td class="paramname"><em>actualData</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const std::vector&lt; T &gt; &amp;&#160;</td>
          <td class="paramname"><em>expectedData</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_tensor_shape.xhtml">armnn::TensorShape</a> &amp;&#160;</td>
          <td class="paramname"><em>actualShape</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_tensor_shape.xhtml">armnn::TensorShape</a> &amp;&#160;</td>
          <td class="paramname"><em>expectedShape</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const bool&#160;</td>
          <td class="paramname"><em>compareBoolean</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="include_2armnn_test_utils_2_layer_test_result_8hpp_source.xhtml#l00039">39</a> of file <a class="el" href="include_2armnn_test_utils_2_layer_test_result_8hpp_source.xhtml">LayerTestResult.hpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;        : <a class="code" href="struct_layer_test_result.xhtml#a744f7791c7f88a945817d375cd754061">m_ActualData</a>(actualData)</div><div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;        , <a class="code" href="struct_layer_test_result.xhtml#afe2a527d7250fb113121b70e29c6bed5">m_ExpectedData</a>(expectedData)</div><div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;        , <a class="code" href="struct_layer_test_result.xhtml#a74a0abe714f3fe5b9ca7023409833fb5">m_ActualShape</a>(actualShape)</div><div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;        , <a class="code" href="struct_layer_test_result.xhtml#acd2a9d8ba7ceee9a10e3f2826cca22c1">m_ExpectedShape</a>(expectedShape)</div><div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;        , <a class="code" href="struct_layer_test_result.xhtml#a803952d7c2fd093757ed85279063ab2a">m_Supported</a>(<span class="keyword">true</span>)</div><div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;        , <a class="code" href="struct_layer_test_result.xhtml#a81f7c8835f58879cff48641c8f533e27">m_CompareBoolean</a>(compareBoolean)</div><div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;    {}</div><div class="ttc" id="struct_layer_test_result_xhtml_acd2a9d8ba7ceee9a10e3f2826cca22c1"><div class="ttname"><a href="struct_layer_test_result.xhtml#acd2a9d8ba7ceee9a10e3f2826cca22c1">LayerTestResult::m_ExpectedShape</a></div><div class="ttdeci">armnn::TensorShape m_ExpectedShape</div><div class="ttdef"><b>Definition:</b> <a href="include_2armnn_test_utils_2_layer_test_result_8hpp_source.xhtml#l00055">LayerTestResult.hpp:55</a></div></div>
<div class="ttc" id="struct_layer_test_result_xhtml_a81f7c8835f58879cff48641c8f533e27"><div class="ttname"><a href="struct_layer_test_result.xhtml#a81f7c8835f58879cff48641c8f533e27">LayerTestResult::m_CompareBoolean</a></div><div class="ttdeci">bool m_CompareBoolean</div><div class="ttdef"><b>Definition:</b> <a href="include_2armnn_test_utils_2_layer_test_result_8hpp_source.xhtml#l00058">LayerTestResult.hpp:58</a></div></div>
<div class="ttc" id="struct_layer_test_result_xhtml_afe2a527d7250fb113121b70e29c6bed5"><div class="ttname"><a href="struct_layer_test_result.xhtml#afe2a527d7250fb113121b70e29c6bed5">LayerTestResult::m_ExpectedData</a></div><div class="ttdeci">std::vector&lt; T &gt; m_ExpectedData</div><div class="ttdef"><b>Definition:</b> <a href="include_2armnn_test_utils_2_layer_test_result_8hpp_source.xhtml#l00053">LayerTestResult.hpp:53</a></div></div>
<div class="ttc" id="struct_layer_test_result_xhtml_a803952d7c2fd093757ed85279063ab2a"><div class="ttname"><a href="struct_layer_test_result.xhtml#a803952d7c2fd093757ed85279063ab2a">LayerTestResult::m_Supported</a></div><div class="ttdeci">bool m_Supported</div><div class="ttdef"><b>Definition:</b> <a href="include_2armnn_test_utils_2_layer_test_result_8hpp_source.xhtml#l00057">LayerTestResult.hpp:57</a></div></div>
<div class="ttc" id="struct_layer_test_result_xhtml_a744f7791c7f88a945817d375cd754061"><div class="ttname"><a href="struct_layer_test_result.xhtml#a744f7791c7f88a945817d375cd754061">LayerTestResult::m_ActualData</a></div><div class="ttdeci">std::vector&lt; T &gt; m_ActualData</div><div class="ttdef"><b>Definition:</b> <a href="include_2armnn_test_utils_2_layer_test_result_8hpp_source.xhtml#l00052">LayerTestResult.hpp:52</a></div></div>
<div class="ttc" id="struct_layer_test_result_xhtml_a74a0abe714f3fe5b9ca7023409833fb5"><div class="ttname"><a href="struct_layer_test_result.xhtml#a74a0abe714f3fe5b9ca7023409833fb5">LayerTestResult::m_ActualShape</a></div><div class="ttdeci">armnn::TensorShape m_ActualShape</div><div class="ttdef"><b>Definition:</b> <a href="include_2armnn_test_utils_2_layer_test_result_8hpp_source.xhtml#l00054">LayerTestResult.hpp:54</a></div></div>
</div><!-- fragment -->
</div>
</div>
<h2 class="groupheader">Member Data Documentation</h2>
<a id="a744f7791c7f88a945817d375cd754061"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a744f7791c7f88a945817d375cd754061">&#9670;&nbsp;</a></span>m_ActualData</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">std::vector&lt;T&gt; m_ActualData</td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="include_2armnn_test_utils_2_layer_test_result_8hpp_source.xhtml#l00052">52</a> of file <a class="el" href="include_2armnn_test_utils_2_layer_test_result_8hpp_source.xhtml">LayerTestResult.hpp</a>.</p>

<p class="reference">Referenced by <a class="el" href="_activation_test_impl_8cpp_source.xhtml#l00290">CompareBoundedReLuTest()</a>, <a class="el" href="est_utils_2_unit_tests_8hpp_source.xhtml#l00043">CompareTestResultIfSupported()</a>, <a class="el" href="include_2armnn_test_utils_2_layer_test_result_8hpp_source.xhtml#l00017">LayerTestResult&lt; T, n &gt;::LayerTestResult()</a>, <a class="el" href="_fully_connected_test_impl_8cpp_source.xhtml#l00024">SimpleFullyConnectedTestImpl()</a>, <a class="el" href="_mem_copy_tests_8cpp_source.xhtml#l00089">TEST_CASE_FIXTURE()</a>, and <a class="el" href="_cl_mem_copy_tests_8cpp_source.xhtml#l00036">TEST_SUITE()</a>.</p>

</div>
</div>
<a id="a74a0abe714f3fe5b9ca7023409833fb5"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a74a0abe714f3fe5b9ca7023409833fb5">&#9670;&nbsp;</a></span>m_ActualShape</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarmnn_1_1_tensor_shape.xhtml">armnn::TensorShape</a> m_ActualShape</td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="include_2armnn_test_utils_2_layer_test_result_8hpp_source.xhtml#l00054">54</a> of file <a class="el" href="include_2armnn_test_utils_2_layer_test_result_8hpp_source.xhtml">LayerTestResult.hpp</a>.</p>

<p class="reference">Referenced by <a class="el" href="est_utils_2_unit_tests_8hpp_source.xhtml#l00043">CompareTestResultIfSupported()</a>, <a class="el" href="include_2armnn_test_utils_2_layer_test_result_8hpp_source.xhtml#l00017">LayerTestResult&lt; T, n &gt;::LayerTestResult()</a>, <a class="el" href="_mem_copy_tests_8cpp_source.xhtml#l00089">TEST_CASE_FIXTURE()</a>, and <a class="el" href="_cl_mem_copy_tests_8cpp_source.xhtml#l00036">TEST_SUITE()</a>.</p>

</div>
</div>
<a id="a81f7c8835f58879cff48641c8f533e27"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a81f7c8835f58879cff48641c8f533e27">&#9670;&nbsp;</a></span>m_CompareBoolean</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool m_CompareBoolean</td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="include_2armnn_test_utils_2_layer_test_result_8hpp_source.xhtml#l00058">58</a> of file <a class="el" href="include_2armnn_test_utils_2_layer_test_result_8hpp_source.xhtml">LayerTestResult.hpp</a>.</p>

<p class="reference">Referenced by <a class="el" href="est_utils_2_unit_tests_8hpp_source.xhtml#l00043">CompareTestResultIfSupported()</a>.</p>

</div>
</div>
<a id="afe2a527d7250fb113121b70e29c6bed5"></a>
<h2 class="memtitle"><span class="permalink"><a href="#afe2a527d7250fb113121b70e29c6bed5">&#9670;&nbsp;</a></span>m_ExpectedData</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">std::vector&lt;T&gt; m_ExpectedData</td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="include_2armnn_test_utils_2_layer_test_result_8hpp_source.xhtml#l00053">53</a> of file <a class="el" href="include_2armnn_test_utils_2_layer_test_result_8hpp_source.xhtml">LayerTestResult.hpp</a>.</p>

<p class="reference">Referenced by <a class="el" href="_activation_test_impl_8cpp_source.xhtml#l00290">CompareBoundedReLuTest()</a>, <a class="el" href="est_utils_2_unit_tests_8hpp_source.xhtml#l00043">CompareTestResultIfSupported()</a>, <a class="el" href="_concat_test_impl_8cpp_source.xhtml#l00648">Concat2dDim0TestImpl()</a>, <a class="el" href="_concat_test_impl_8cpp_source.xhtml#l00686">Concat2dDim1TestImpl()</a>, <a class="el" href="_concat_test_impl_8cpp_source.xhtml#l00955">Concat3dDim0TestImpl()</a>, <a class="el" href="_concat_test_impl_8cpp_source.xhtml#l01029">Concat3dDim1TestImpl()</a>, <a class="el" href="_concat_test_impl_8cpp_source.xhtml#l01103">Concat3dDim2TestImpl()</a>, <a class="el" href="_concat_test_impl_8cpp_source.xhtml#l01616">Concat4dDim0TestImpl()</a>, <a class="el" href="_concat_test_impl_8cpp_source.xhtml#l01657">Concat4dDim1TestImpl()</a>, <a class="el" href="_concat_test_impl_8cpp_source.xhtml#l01698">Concat4dDim2TestImpl()</a>, <a class="el" href="_concat_test_impl_8cpp_source.xhtml#l01739">Concat4dDim3TestImpl()</a>, <a class="el" href="_fully_connected_test_impl_8cpp_source.xhtml#l00280">FullyConnectedFloat32Test()</a>, <a class="el" href="_fully_connected_test_impl_8cpp_source.xhtml#l00179">FullyConnectedLargeTestCommon()</a>, <a class="el" href="_fully_connected_test_impl_8cpp_source.xhtml#l00097">FullyConnectedTest()</a>, <a class="el" href="include_2armnn_test_utils_2_layer_test_result_8hpp_source.xhtml#l00017">LayerTestResult&lt; T, n &gt;::LayerTestResult()</a>, <a class="el" href="_mem_copy_tests_8cpp_source.xhtml#l00089">TEST_CASE_FIXTURE()</a>, and <a class="el" href="_cl_mem_copy_tests_8cpp_source.xhtml#l00036">TEST_SUITE()</a>.</p>

</div>
</div>
<a id="acd2a9d8ba7ceee9a10e3f2826cca22c1"></a>
<h2 class="memtitle"><span class="permalink"><a href="#acd2a9d8ba7ceee9a10e3f2826cca22c1">&#9670;&nbsp;</a></span>m_ExpectedShape</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarmnn_1_1_tensor_shape.xhtml">armnn::TensorShape</a> m_ExpectedShape</td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="include_2armnn_test_utils_2_layer_test_result_8hpp_source.xhtml#l00055">55</a> of file <a class="el" href="include_2armnn_test_utils_2_layer_test_result_8hpp_source.xhtml">LayerTestResult.hpp</a>.</p>

<p class="reference">Referenced by <a class="el" href="est_utils_2_unit_tests_8hpp_source.xhtml#l00043">CompareTestResultIfSupported()</a>, <a class="el" href="include_2armnn_test_utils_2_layer_test_result_8hpp_source.xhtml#l00017">LayerTestResult&lt; T, n &gt;::LayerTestResult()</a>, <a class="el" href="_mem_copy_tests_8cpp_source.xhtml#l00089">TEST_CASE_FIXTURE()</a>, and <a class="el" href="_cl_mem_copy_tests_8cpp_source.xhtml#l00036">TEST_SUITE()</a>.</p>

</div>
</div>
<a id="a803952d7c2fd093757ed85279063ab2a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a803952d7c2fd093757ed85279063ab2a">&#9670;&nbsp;</a></span>m_Supported</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool m_Supported</td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="include_2armnn_test_utils_2_layer_test_result_8hpp_source.xhtml#l00057">57</a> of file <a class="el" href="include_2armnn_test_utils_2_layer_test_result_8hpp_source.xhtml">LayerTestResult.hpp</a>.</p>

<p class="reference">Referenced by <a class="el" href="est_utils_2_unit_tests_8hpp_source.xhtml#l00043">CompareTestResultIfSupported()</a>.</p>

</div>
</div>
<hr/>The documentation for this struct was generated from the following file:<ul>
<li>include/armnnTestUtils/<a class="el" href="include_2armnn_test_utils_2_layer_test_result_8hpp_source.xhtml">LayerTestResult.hpp</a></li>
</ul>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="struct_layer_test_result.xhtml">LayerTestResult</a></li>
    <li class="footer">Generated on Tue May 24 2022 11:27:20 for ArmNN by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.13 </li>
  </ul>
</div>
</body>
</html>
