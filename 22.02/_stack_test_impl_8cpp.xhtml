<!-- Copyright (c) 2020 ARM Limited. -->
<!--                                 -->
<!-- SPDX-License-Identifier: MIT    -->
<!--                                 -->
<!-- HTML header for doxygen 1.8.13-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.13"/>
<meta name="robots" content="NOINDEX, NOFOLLOW" />
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>ArmNN: src/backends/backendsCommon/test/layerTests/StackTestImpl.cpp File Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script><script type="text/javascript" src="http://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="stylesheet.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <img alt="ArmNN" src="Arm_NN_horizontal_blue.png" style="max-width: 10rem; margin-top: .5rem; margin-left 10px"/>
  <td style="padding-left: 0.5em;">
   <div id="projectname">
   &#160;<span id="projectnumber">22.02</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.13 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
$(document).ready(function(){initNavTree('_stack_test_impl_8cpp.xhtml','');});
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="summary">
<a href="#func-members">Functions</a>  </div>
  <div class="headertitle">
<div class="title">StackTestImpl.cpp File Reference</div>  </div>
</div><!--header-->
<div class="contents">
<div class="textblock"><code>#include &quot;<a class="el" href="_stack_test_impl_8hpp_source.xhtml">StackTestImpl.hpp</a>&quot;</code><br />
<code>#include &lt;<a class="el" href="include_2armnn_test_utils_2_layer_test_result_8hpp_source.xhtml">armnnTestUtils/LayerTestResult.hpp</a>&gt;</code><br />
<code>#include &lt;<a class="el" href="_resolve_type_8hpp_source.xhtml">ResolveType.hpp</a>&gt;</code><br />
<code>#include &lt;<a class="el" href="_i_backend_internal_8hpp_source.xhtml">armnn/backends/IBackendInternal.hpp</a>&gt;</code><br />
<code>#include &lt;<a class="el" href="include_2armnn_2backends_2_workload_factory_8hpp_source.xhtml">armnn/backends/WorkloadFactory.hpp</a>&gt;</code><br />
<code>#include &lt;<a class="el" href="include_2armnn_test_utils_2_tensor_copy_utils_8hpp_source.xhtml">armnnTestUtils/TensorCopyUtils.hpp</a>&gt;</code><br />
<code>#include &lt;<a class="el" href="include_2armnn_test_utils_2_workload_test_utils_8hpp_source.xhtml">armnnTestUtils/WorkloadTestUtils.hpp</a>&gt;</code><br />
<code>#include &lt;<a class="el" href="include_2armnn_test_utils_2_tensor_helpers_8hpp_source.xhtml">armnnTestUtils/TensorHelpers.hpp</a>&gt;</code><br />
</div>
<p><a href="_stack_test_impl_8cpp_source.xhtml">Go to the source code of this file.</a></p>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="func-members"></a>
Functions</h2></td></tr>
<tr class="memitem:a0c69a1a7923839f98d8528d55f9da3d5"><td class="memTemplParams" colspan="2">template&lt;armnn::DataType ArmnnType, typename T  = armnn::ResolveType&lt;ArmnnType&gt;&gt; </td></tr>
<tr class="memitem:a0c69a1a7923839f98d8528d55f9da3d5"><td class="memTemplItemLeft" align="right" valign="top"><a class="el" href="struct_layer_test_result.xhtml">LayerTestResult</a>&lt; T, 4 &gt;&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="_stack_test_impl_8cpp.xhtml#a0c69a1a7923839f98d8528d55f9da3d5">StackAxis0TestImpl</a> (<a class="el" href="classarmnn_1_1_i_workload_factory.xhtml">armnn::IWorkloadFactory</a> &amp;workloadFactory, const <a class="el" href="classarmnn_1_1_i_backend_internal.xhtml#a693b40e6b94e958836aeb0410ca186bd">armnn::IBackendInternal::IMemoryManagerSharedPtr</a> &amp;memoryManager, const <a class="el" href="classarmnn_1_1_i_tensor_handle_factory.xhtml">armnn::ITensorHandleFactory</a> &amp;tensorHandleFactory)</td></tr>
<tr class="separator:a0c69a1a7923839f98d8528d55f9da3d5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a46f7153df5d1c0256b8caff36a20f543"><td class="memTemplParams" colspan="2">template&lt;armnn::DataType ArmnnType, typename T  = armnn::ResolveType&lt;ArmnnType&gt;&gt; </td></tr>
<tr class="memitem:a46f7153df5d1c0256b8caff36a20f543"><td class="memTemplItemLeft" align="right" valign="top"><a class="el" href="struct_layer_test_result.xhtml">LayerTestResult</a>&lt; T, 4 &gt;&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="_stack_test_impl_8cpp.xhtml#a46f7153df5d1c0256b8caff36a20f543">StackOutput4DAxis1TestImpl</a> (<a class="el" href="classarmnn_1_1_i_workload_factory.xhtml">armnn::IWorkloadFactory</a> &amp;workloadFactory, const <a class="el" href="classarmnn_1_1_i_backend_internal.xhtml#a693b40e6b94e958836aeb0410ca186bd">armnn::IBackendInternal::IMemoryManagerSharedPtr</a> &amp;memoryManager, const <a class="el" href="classarmnn_1_1_i_tensor_handle_factory.xhtml">armnn::ITensorHandleFactory</a> &amp;tensorHandleFactory)</td></tr>
<tr class="separator:a46f7153df5d1c0256b8caff36a20f543"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a347abac52a2996998429be987be8565b"><td class="memTemplParams" colspan="2">template&lt;armnn::DataType ArmnnType, typename T  = armnn::ResolveType&lt;ArmnnType&gt;&gt; </td></tr>
<tr class="memitem:a347abac52a2996998429be987be8565b"><td class="memTemplItemLeft" align="right" valign="top"><a class="el" href="struct_layer_test_result.xhtml">LayerTestResult</a>&lt; T, 4 &gt;&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="_stack_test_impl_8cpp.xhtml#a347abac52a2996998429be987be8565b">StackOutput4DAxis2TestImpl</a> (<a class="el" href="classarmnn_1_1_i_workload_factory.xhtml">armnn::IWorkloadFactory</a> &amp;workloadFactory, const <a class="el" href="classarmnn_1_1_i_backend_internal.xhtml#a693b40e6b94e958836aeb0410ca186bd">armnn::IBackendInternal::IMemoryManagerSharedPtr</a> &amp;memoryManager, const <a class="el" href="classarmnn_1_1_i_tensor_handle_factory.xhtml">armnn::ITensorHandleFactory</a> &amp;tensorHandleFactory)</td></tr>
<tr class="separator:a347abac52a2996998429be987be8565b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a10e4fe92167c11a2539405d5a006bf84"><td class="memTemplParams" colspan="2">template&lt;armnn::DataType ArmnnType, typename T  = armnn::ResolveType&lt;ArmnnType&gt;&gt; </td></tr>
<tr class="memitem:a10e4fe92167c11a2539405d5a006bf84"><td class="memTemplItemLeft" align="right" valign="top"><a class="el" href="struct_layer_test_result.xhtml">LayerTestResult</a>&lt; T, 4 &gt;&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="_stack_test_impl_8cpp.xhtml#a10e4fe92167c11a2539405d5a006bf84">StackOutput4DAxis3TestImpl</a> (<a class="el" href="classarmnn_1_1_i_workload_factory.xhtml">armnn::IWorkloadFactory</a> &amp;workloadFactory, const <a class="el" href="classarmnn_1_1_i_backend_internal.xhtml#a693b40e6b94e958836aeb0410ca186bd">armnn::IBackendInternal::IMemoryManagerSharedPtr</a> &amp;memoryManager, const <a class="el" href="classarmnn_1_1_i_tensor_handle_factory.xhtml">armnn::ITensorHandleFactory</a> &amp;tensorHandleFactory)</td></tr>
<tr class="separator:a10e4fe92167c11a2539405d5a006bf84"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a10e9aa6527f51a4c18042f648d8e3be4"><td class="memTemplParams" colspan="2">template&lt;armnn::DataType ArmnnType, typename T  = armnn::ResolveType&lt;ArmnnType&gt;&gt; </td></tr>
<tr class="memitem:a10e9aa6527f51a4c18042f648d8e3be4"><td class="memTemplItemLeft" align="right" valign="top"><a class="el" href="struct_layer_test_result.xhtml">LayerTestResult</a>&lt; T, 3 &gt;&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="_stack_test_impl_8cpp.xhtml#a10e9aa6527f51a4c18042f648d8e3be4">StackOutput3DInputs3TestImpl</a> (<a class="el" href="classarmnn_1_1_i_workload_factory.xhtml">armnn::IWorkloadFactory</a> &amp;workloadFactory, const <a class="el" href="classarmnn_1_1_i_backend_internal.xhtml#a693b40e6b94e958836aeb0410ca186bd">armnn::IBackendInternal::IMemoryManagerSharedPtr</a> &amp;memoryManager, const <a class="el" href="classarmnn_1_1_i_tensor_handle_factory.xhtml">armnn::ITensorHandleFactory</a> &amp;tensorHandleFactory)</td></tr>
<tr class="separator:a10e9aa6527f51a4c18042f648d8e3be4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5182b0d4d4fd8dbfd562146c06065e59"><td class="memTemplParams" colspan="2">template&lt;armnn::DataType ArmnnType, typename T  = armnn::ResolveType&lt;ArmnnType&gt;&gt; </td></tr>
<tr class="memitem:a5182b0d4d4fd8dbfd562146c06065e59"><td class="memTemplItemLeft" align="right" valign="top"><a class="el" href="struct_layer_test_result.xhtml">LayerTestResult</a>&lt; T, 5 &gt;&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="_stack_test_impl_8cpp.xhtml#a5182b0d4d4fd8dbfd562146c06065e59">StackOutput5DTestImpl</a> (<a class="el" href="classarmnn_1_1_i_workload_factory.xhtml">armnn::IWorkloadFactory</a> &amp;workloadFactory, const <a class="el" href="classarmnn_1_1_i_backend_internal.xhtml#a693b40e6b94e958836aeb0410ca186bd">armnn::IBackendInternal::IMemoryManagerSharedPtr</a> &amp;memoryManager, const <a class="el" href="classarmnn_1_1_i_tensor_handle_factory.xhtml">armnn::ITensorHandleFactory</a> &amp;tensorHandleFactory)</td></tr>
<tr class="separator:a5182b0d4d4fd8dbfd562146c06065e59"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:adfe7aa108b8822b9ecbd89c19181d453"><td class="memItemLeft" align="right" valign="top"><a class="el" href="struct_layer_test_result.xhtml">LayerTestResult</a>&lt; float, 4 &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_stack_test_impl_8cpp.xhtml#adfe7aa108b8822b9ecbd89c19181d453">StackAxis0Float32Test</a> (<a class="el" href="classarmnn_1_1_i_workload_factory.xhtml">armnn::IWorkloadFactory</a> &amp;workloadFactory, const <a class="el" href="classarmnn_1_1_i_backend_internal.xhtml#a693b40e6b94e958836aeb0410ca186bd">armnn::IBackendInternal::IMemoryManagerSharedPtr</a> &amp;memoryManager, const <a class="el" href="classarmnn_1_1_i_tensor_handle_factory.xhtml">armnn::ITensorHandleFactory</a> &amp;tensorHandleFactory)</td></tr>
<tr class="separator:adfe7aa108b8822b9ecbd89c19181d453"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad49417dc85c34867037162e3343a84b2"><td class="memItemLeft" align="right" valign="top"><a class="el" href="struct_layer_test_result.xhtml">LayerTestResult</a>&lt; float, 4 &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_stack_test_impl_8cpp.xhtml#ad49417dc85c34867037162e3343a84b2">StackOutput4DAxis1Float32Test</a> (<a class="el" href="classarmnn_1_1_i_workload_factory.xhtml">armnn::IWorkloadFactory</a> &amp;workloadFactory, const <a class="el" href="classarmnn_1_1_i_backend_internal.xhtml#a693b40e6b94e958836aeb0410ca186bd">armnn::IBackendInternal::IMemoryManagerSharedPtr</a> &amp;memoryManager, const <a class="el" href="classarmnn_1_1_i_tensor_handle_factory.xhtml">armnn::ITensorHandleFactory</a> &amp;tensorHandleFactory)</td></tr>
<tr class="separator:ad49417dc85c34867037162e3343a84b2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:acd8d3e699b4f15f0ee82d5bdef47dccf"><td class="memItemLeft" align="right" valign="top"><a class="el" href="struct_layer_test_result.xhtml">LayerTestResult</a>&lt; float, 4 &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_stack_test_impl_8cpp.xhtml#acd8d3e699b4f15f0ee82d5bdef47dccf">StackOutput4DAxis2Float32Test</a> (<a class="el" href="classarmnn_1_1_i_workload_factory.xhtml">armnn::IWorkloadFactory</a> &amp;workloadFactory, const <a class="el" href="classarmnn_1_1_i_backend_internal.xhtml#a693b40e6b94e958836aeb0410ca186bd">armnn::IBackendInternal::IMemoryManagerSharedPtr</a> &amp;memoryManager, const <a class="el" href="classarmnn_1_1_i_tensor_handle_factory.xhtml">armnn::ITensorHandleFactory</a> &amp;tensorHandleFactory)</td></tr>
<tr class="separator:acd8d3e699b4f15f0ee82d5bdef47dccf"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2d9926a44fde4b3bd4596b1996ec9c45"><td class="memItemLeft" align="right" valign="top"><a class="el" href="struct_layer_test_result.xhtml">LayerTestResult</a>&lt; float, 4 &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_stack_test_impl_8cpp.xhtml#a2d9926a44fde4b3bd4596b1996ec9c45">StackOutput4DAxis3Float32Test</a> (<a class="el" href="classarmnn_1_1_i_workload_factory.xhtml">armnn::IWorkloadFactory</a> &amp;workloadFactory, const <a class="el" href="classarmnn_1_1_i_backend_internal.xhtml#a693b40e6b94e958836aeb0410ca186bd">armnn::IBackendInternal::IMemoryManagerSharedPtr</a> &amp;memoryManager, const <a class="el" href="classarmnn_1_1_i_tensor_handle_factory.xhtml">armnn::ITensorHandleFactory</a> &amp;tensorHandleFactory)</td></tr>
<tr class="separator:a2d9926a44fde4b3bd4596b1996ec9c45"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3b4b3f173b6a4527f576a2ade7eb8458"><td class="memItemLeft" align="right" valign="top"><a class="el" href="struct_layer_test_result.xhtml">LayerTestResult</a>&lt; float, 3 &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_stack_test_impl_8cpp.xhtml#a3b4b3f173b6a4527f576a2ade7eb8458">StackOutput3DInputs3Float32Test</a> (<a class="el" href="classarmnn_1_1_i_workload_factory.xhtml">armnn::IWorkloadFactory</a> &amp;workloadFactory, const <a class="el" href="classarmnn_1_1_i_backend_internal.xhtml#a693b40e6b94e958836aeb0410ca186bd">armnn::IBackendInternal::IMemoryManagerSharedPtr</a> &amp;memoryManager, const <a class="el" href="classarmnn_1_1_i_tensor_handle_factory.xhtml">armnn::ITensorHandleFactory</a> &amp;tensorHandleFactory)</td></tr>
<tr class="separator:a3b4b3f173b6a4527f576a2ade7eb8458"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac1d2db6153cebd24e1b0a7abec6b6796"><td class="memItemLeft" align="right" valign="top"><a class="el" href="struct_layer_test_result.xhtml">LayerTestResult</a>&lt; float, 5 &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_stack_test_impl_8cpp.xhtml#ac1d2db6153cebd24e1b0a7abec6b6796">StackOutput5DFloat32Test</a> (<a class="el" href="classarmnn_1_1_i_workload_factory.xhtml">armnn::IWorkloadFactory</a> &amp;workloadFactory, const <a class="el" href="classarmnn_1_1_i_backend_internal.xhtml#a693b40e6b94e958836aeb0410ca186bd">armnn::IBackendInternal::IMemoryManagerSharedPtr</a> &amp;memoryManager, const <a class="el" href="classarmnn_1_1_i_tensor_handle_factory.xhtml">armnn::ITensorHandleFactory</a> &amp;tensorHandleFactory)</td></tr>
<tr class="separator:ac1d2db6153cebd24e1b0a7abec6b6796"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad17f60bbe58795f68f60815f5f12a317"><td class="memItemLeft" align="right" valign="top"><a class="el" href="struct_layer_test_result.xhtml">LayerTestResult</a>&lt; <a class="el" href="namespacearmnn.xhtml#a0f38fa92b2468d5378258a2b074c1a31">armnn::Half</a>, 4 &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_stack_test_impl_8cpp.xhtml#ad17f60bbe58795f68f60815f5f12a317">StackFloat16Test</a> (<a class="el" href="classarmnn_1_1_i_workload_factory.xhtml">armnn::IWorkloadFactory</a> &amp;workloadFactory, const <a class="el" href="classarmnn_1_1_i_backend_internal.xhtml#a693b40e6b94e958836aeb0410ca186bd">armnn::IBackendInternal::IMemoryManagerSharedPtr</a> &amp;memoryManager, const <a class="el" href="classarmnn_1_1_i_tensor_handle_factory.xhtml">armnn::ITensorHandleFactory</a> &amp;tensorHandleFactory)</td></tr>
<tr class="separator:ad17f60bbe58795f68f60815f5f12a317"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab25958866877d2285ce296ae633a11fd"><td class="memItemLeft" align="right" valign="top"><a class="el" href="struct_layer_test_result.xhtml">LayerTestResult</a>&lt; int32_t, 4 &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_stack_test_impl_8cpp.xhtml#ab25958866877d2285ce296ae633a11fd">StackInt32Test</a> (<a class="el" href="classarmnn_1_1_i_workload_factory.xhtml">armnn::IWorkloadFactory</a> &amp;workloadFactory, const <a class="el" href="classarmnn_1_1_i_backend_internal.xhtml#a693b40e6b94e958836aeb0410ca186bd">armnn::IBackendInternal::IMemoryManagerSharedPtr</a> &amp;memoryManager, const <a class="el" href="classarmnn_1_1_i_tensor_handle_factory.xhtml">armnn::ITensorHandleFactory</a> &amp;tensorHandleFactory)</td></tr>
<tr class="separator:ab25958866877d2285ce296ae633a11fd"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<h2 class="groupheader">Function Documentation</h2>
<a id="adfe7aa108b8822b9ecbd89c19181d453"></a>
<h2 class="memtitle"><span class="permalink"><a href="#adfe7aa108b8822b9ecbd89c19181d453">&#9670;&nbsp;</a></span>StackAxis0Float32Test()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="struct_layer_test_result.xhtml">LayerTestResult</a>&lt;float, 4&gt; StackAxis0Float32Test </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classarmnn_1_1_i_workload_factory.xhtml">armnn::IWorkloadFactory</a> &amp;&#160;</td>
          <td class="paramname"><em>workloadFactory</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_i_backend_internal.xhtml#a693b40e6b94e958836aeb0410ca186bd">armnn::IBackendInternal::IMemoryManagerSharedPtr</a> &amp;&#160;</td>
          <td class="paramname"><em>memoryManager</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_i_tensor_handle_factory.xhtml">armnn::ITensorHandleFactory</a> &amp;&#160;</td>
          <td class="paramname"><em>tensorHandleFactory</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_stack_test_impl_8cpp_source.xhtml#l00521">521</a> of file <a class="el" href="_stack_test_impl_8cpp_source.xhtml">StackTestImpl.cpp</a>.</p>

<p class="reference">Referenced by <a class="el" href="_cl_layer_tests_8cpp_source.xhtml#l00027">TEST_SUITE()</a>.</p>
<div class="fragment"><div class="line"><a name="l00525"></a><span class="lineno">  525</span>&#160;{</div><div class="line"><a name="l00526"></a><span class="lineno">  526</span>&#160;    <span class="keywordflow">return</span> StackAxis0TestImpl&lt;armnn::DataType::Float32&gt;(workloadFactory, memoryManager, tensorHandleFactory);</div><div class="line"><a name="l00527"></a><span class="lineno">  527</span>&#160;}</div></div><!-- fragment -->
</div>
</div>
<a id="a0c69a1a7923839f98d8528d55f9da3d5"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a0c69a1a7923839f98d8528d55f9da3d5">&#9670;&nbsp;</a></span>StackAxis0TestImpl()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="struct_layer_test_result.xhtml">LayerTestResult</a>&lt;T, 4&gt; StackAxis0TestImpl </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classarmnn_1_1_i_workload_factory.xhtml">armnn::IWorkloadFactory</a> &amp;&#160;</td>
          <td class="paramname"><em>workloadFactory</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_i_backend_internal.xhtml#a693b40e6b94e958836aeb0410ca186bd">armnn::IBackendInternal::IMemoryManagerSharedPtr</a> &amp;&#160;</td>
          <td class="paramname"><em>memoryManager</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_i_tensor_handle_factory.xhtml">armnn::ITensorHandleFactory</a> &amp;&#160;</td>
          <td class="paramname"><em>tensorHandleFactory</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_stack_test_impl_8cpp_source.xhtml#l00089">89</a> of file <a class="el" href="_stack_test_impl_8cpp_source.xhtml">StackTestImpl.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;{</div><div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;    <a class="code" href="classarmnn_1_1_tensor_info.xhtml">armnn::TensorInfo</a> inputTensorInfo ({ 3, 2, 3 }, ArmnnType);</div><div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;    <a class="code" href="classarmnn_1_1_tensor_info.xhtml">armnn::TensorInfo</a> outputTensorInfo({ 2, 3, 2, 3 }, ArmnnType);</div><div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;</div><div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;    std::vector&lt;std::vector&lt;T&gt;&gt; inputData;</div><div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;</div><div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;    inputData.push_back(</div><div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;    {</div><div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;        1, 2, 3,</div><div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;        4, 5, 6,</div><div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;</div><div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;        7, 8, 9,</div><div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;        10, 11, 12,</div><div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;</div><div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;        13, 14, 15,</div><div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;        16, 17, 18</div><div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;    });</div><div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;</div><div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;    inputData.push_back(</div><div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;    {</div><div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;        19, 20, 21,</div><div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;        22, 23, 24,</div><div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;</div><div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;        25, 26, 27,</div><div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;        28, 29, 30,</div><div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;</div><div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;        31, 32, 33,</div><div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;        34, 35, 36</div><div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;    });</div><div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;</div><div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;    std::vector&lt;T&gt; outputExpectedData =</div><div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;    {</div><div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;        1, 2, 3,</div><div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;        4, 5, 6,</div><div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;</div><div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;        7, 8, 9,</div><div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;        10, 11, 12,</div><div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;</div><div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;        13, 14, 15,</div><div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;        16, 17, 18,</div><div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;</div><div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;</div><div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;        19, 20, 21,</div><div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;        22, 23, 24,</div><div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;</div><div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;        25, 26, 27,</div><div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;        28, 29, 30,</div><div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;</div><div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;        31, 32, 33,</div><div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;        34, 35, 36</div><div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;    };</div><div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;</div><div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;    <span class="keywordflow">return</span> StackTestHelper&lt;ArmnnType, T, 4&gt;(</div><div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;        workloadFactory,</div><div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;        memoryManager,</div><div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;        tensorHandleFactory,</div><div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;        inputTensorInfo,</div><div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;        outputTensorInfo,</div><div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;        0U,</div><div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;        inputData,</div><div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;        outputExpectedData</div><div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;    );</div><div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;}</div><div class="ttc" id="classarmnn_1_1_tensor_info_xhtml"><div class="ttname"><a href="classarmnn_1_1_tensor_info.xhtml">armnn::TensorInfo</a></div><div class="ttdef"><b>Definition:</b> <a href="_tensor_8hpp_source.xhtml#l00152">Tensor.hpp:152</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="ad17f60bbe58795f68f60815f5f12a317"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ad17f60bbe58795f68f60815f5f12a317">&#9670;&nbsp;</a></span>StackFloat16Test()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="struct_layer_test_result.xhtml">LayerTestResult</a>&lt;<a class="el" href="namespacearmnn.xhtml#a0f38fa92b2468d5378258a2b074c1a31">armnn::Half</a>, 4&gt; StackFloat16Test </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classarmnn_1_1_i_workload_factory.xhtml">armnn::IWorkloadFactory</a> &amp;&#160;</td>
          <td class="paramname"><em>workloadFactory</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_i_backend_internal.xhtml#a693b40e6b94e958836aeb0410ca186bd">armnn::IBackendInternal::IMemoryManagerSharedPtr</a> &amp;&#160;</td>
          <td class="paramname"><em>memoryManager</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_i_tensor_handle_factory.xhtml">armnn::ITensorHandleFactory</a> &amp;&#160;</td>
          <td class="paramname"><em>tensorHandleFactory</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_stack_test_impl_8cpp_source.xhtml#l00569">569</a> of file <a class="el" href="_stack_test_impl_8cpp_source.xhtml">StackTestImpl.cpp</a>.</p>

<p class="reference">References <a class="el" href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a26e6ed77470c6f2f830ecf874e6c0d55">armnn::Float16</a>.</p>

<p class="reference">Referenced by <a class="el" href="_cl_layer_tests_8cpp_source.xhtml#l00027">TEST_SUITE()</a>.</p>
<div class="fragment"><div class="line"><a name="l00573"></a><span class="lineno">  573</span>&#160;{</div><div class="line"><a name="l00574"></a><span class="lineno">  574</span>&#160;    <span class="keyword">using namespace </span>half_float::literal;</div><div class="line"><a name="l00575"></a><span class="lineno">  575</span>&#160;</div><div class="line"><a name="l00576"></a><span class="lineno">  576</span>&#160;    <a class="code" href="classarmnn_1_1_tensor_info.xhtml">armnn::TensorInfo</a> inputTensorInfo ({ 3, 2, 3 }, <a class="code" href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a26e6ed77470c6f2f830ecf874e6c0d55">armnn::DataType::Float16</a>);</div><div class="line"><a name="l00577"></a><span class="lineno">  577</span>&#160;    <a class="code" href="classarmnn_1_1_tensor_info.xhtml">armnn::TensorInfo</a> outputTensorInfo({ 3, 2, 2, 3 }, <a class="code" href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a26e6ed77470c6f2f830ecf874e6c0d55">armnn::DataType::Float16</a>);</div><div class="line"><a name="l00578"></a><span class="lineno">  578</span>&#160;</div><div class="line"><a name="l00579"></a><span class="lineno">  579</span>&#160;    std::vector&lt;std::vector&lt;armnn::Half&gt;&gt; inputData;</div><div class="line"><a name="l00580"></a><span class="lineno">  580</span>&#160;</div><div class="line"><a name="l00581"></a><span class="lineno">  581</span>&#160;    inputData.push_back(</div><div class="line"><a name="l00582"></a><span class="lineno">  582</span>&#160;    {</div><div class="line"><a name="l00583"></a><span class="lineno">  583</span>&#160;        1.0_h,  2.0_h,  3.0_h,</div><div class="line"><a name="l00584"></a><span class="lineno">  584</span>&#160;        4.0_h,  5.0_h,  6.0_h,</div><div class="line"><a name="l00585"></a><span class="lineno">  585</span>&#160;</div><div class="line"><a name="l00586"></a><span class="lineno">  586</span>&#160;        7.0_h,  8.0_h,  9.0_h,</div><div class="line"><a name="l00587"></a><span class="lineno">  587</span>&#160;        10.0_h, 11.0_h, 12.0_h,</div><div class="line"><a name="l00588"></a><span class="lineno">  588</span>&#160;</div><div class="line"><a name="l00589"></a><span class="lineno">  589</span>&#160;        13.0_h, 14.0_h, 15.0_h,</div><div class="line"><a name="l00590"></a><span class="lineno">  590</span>&#160;        16.0_h, 17.0_h, 18.0_h</div><div class="line"><a name="l00591"></a><span class="lineno">  591</span>&#160;    });</div><div class="line"><a name="l00592"></a><span class="lineno">  592</span>&#160;</div><div class="line"><a name="l00593"></a><span class="lineno">  593</span>&#160;    inputData.push_back(</div><div class="line"><a name="l00594"></a><span class="lineno">  594</span>&#160;    {</div><div class="line"><a name="l00595"></a><span class="lineno">  595</span>&#160;        19.0_h, 20.0_h, 21.0_h,</div><div class="line"><a name="l00596"></a><span class="lineno">  596</span>&#160;        22.0_h, 23.0_h, 24.0_h,</div><div class="line"><a name="l00597"></a><span class="lineno">  597</span>&#160;</div><div class="line"><a name="l00598"></a><span class="lineno">  598</span>&#160;        25.0_h, 26.0_h, 27.0_h,</div><div class="line"><a name="l00599"></a><span class="lineno">  599</span>&#160;        28.0_h, 29.0_h, 30.0_h,</div><div class="line"><a name="l00600"></a><span class="lineno">  600</span>&#160;</div><div class="line"><a name="l00601"></a><span class="lineno">  601</span>&#160;        31.0_h, 32.0_h, 33.0_h,</div><div class="line"><a name="l00602"></a><span class="lineno">  602</span>&#160;        34.0_h, 35.0_h, 36.0_h</div><div class="line"><a name="l00603"></a><span class="lineno">  603</span>&#160;    });</div><div class="line"><a name="l00604"></a><span class="lineno">  604</span>&#160;</div><div class="line"><a name="l00605"></a><span class="lineno">  605</span>&#160;    std::vector&lt;armnn::Half&gt; outputExpectedData =</div><div class="line"><a name="l00606"></a><span class="lineno">  606</span>&#160;    {</div><div class="line"><a name="l00607"></a><span class="lineno">  607</span>&#160;        1.0_h,  2.0_h,  3.0_h,</div><div class="line"><a name="l00608"></a><span class="lineno">  608</span>&#160;        19.0_h, 20.0_h, 21.0_h,</div><div class="line"><a name="l00609"></a><span class="lineno">  609</span>&#160;</div><div class="line"><a name="l00610"></a><span class="lineno">  610</span>&#160;        4.0_h,  5.0_h,  6.0_h,</div><div class="line"><a name="l00611"></a><span class="lineno">  611</span>&#160;        22.0_h, 23.0_h, 24.0_h,</div><div class="line"><a name="l00612"></a><span class="lineno">  612</span>&#160;</div><div class="line"><a name="l00613"></a><span class="lineno">  613</span>&#160;        7.0_h,  8.0_h,  9.0_h,</div><div class="line"><a name="l00614"></a><span class="lineno">  614</span>&#160;        25.0_h, 26.0_h, 27.0_h,</div><div class="line"><a name="l00615"></a><span class="lineno">  615</span>&#160;</div><div class="line"><a name="l00616"></a><span class="lineno">  616</span>&#160;        10.0_h, 11.0_h, 12.0_h,</div><div class="line"><a name="l00617"></a><span class="lineno">  617</span>&#160;        28.0_h, 29.0_h, 30.0_h,</div><div class="line"><a name="l00618"></a><span class="lineno">  618</span>&#160;</div><div class="line"><a name="l00619"></a><span class="lineno">  619</span>&#160;        13.0_h, 14.0_h, 15.0_h,</div><div class="line"><a name="l00620"></a><span class="lineno">  620</span>&#160;        31.0_h, 32.0_h, 33.0_h,</div><div class="line"><a name="l00621"></a><span class="lineno">  621</span>&#160;</div><div class="line"><a name="l00622"></a><span class="lineno">  622</span>&#160;        16.0_h, 17.0_h, 18.0_h,</div><div class="line"><a name="l00623"></a><span class="lineno">  623</span>&#160;        34.0_h, 35.0_h, 36.0_h</div><div class="line"><a name="l00624"></a><span class="lineno">  624</span>&#160;    };</div><div class="line"><a name="l00625"></a><span class="lineno">  625</span>&#160;</div><div class="line"><a name="l00626"></a><span class="lineno">  626</span>&#160;    <span class="keywordflow">return</span> StackTestHelper&lt;armnn::DataType::Float16, armnn::Half, 4&gt;(</div><div class="line"><a name="l00627"></a><span class="lineno">  627</span>&#160;        workloadFactory,</div><div class="line"><a name="l00628"></a><span class="lineno">  628</span>&#160;        memoryManager,</div><div class="line"><a name="l00629"></a><span class="lineno">  629</span>&#160;        tensorHandleFactory,</div><div class="line"><a name="l00630"></a><span class="lineno">  630</span>&#160;        inputTensorInfo,</div><div class="line"><a name="l00631"></a><span class="lineno">  631</span>&#160;        outputTensorInfo,</div><div class="line"><a name="l00632"></a><span class="lineno">  632</span>&#160;        2U,</div><div class="line"><a name="l00633"></a><span class="lineno">  633</span>&#160;        inputData,</div><div class="line"><a name="l00634"></a><span class="lineno">  634</span>&#160;        outputExpectedData</div><div class="line"><a name="l00635"></a><span class="lineno">  635</span>&#160;    );</div><div class="line"><a name="l00636"></a><span class="lineno">  636</span>&#160;}</div><div class="ttc" id="classarmnn_1_1_tensor_info_xhtml"><div class="ttname"><a href="classarmnn_1_1_tensor_info.xhtml">armnn::TensorInfo</a></div><div class="ttdef"><b>Definition:</b> <a href="_tensor_8hpp_source.xhtml#l00152">Tensor.hpp:152</a></div></div>
<div class="ttc" id="namespacearmnn_xhtml_ad8ed01ff3ff33333d8e19db4d2818bb6a26e6ed77470c6f2f830ecf874e6c0d55"><div class="ttname"><a href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6a26e6ed77470c6f2f830ecf874e6c0d55">armnn::DataType::Float16</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="ab25958866877d2285ce296ae633a11fd"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ab25958866877d2285ce296ae633a11fd">&#9670;&nbsp;</a></span>StackInt32Test()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="struct_layer_test_result.xhtml">LayerTestResult</a>&lt;int32_t, 4&gt; StackInt32Test </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classarmnn_1_1_i_workload_factory.xhtml">armnn::IWorkloadFactory</a> &amp;&#160;</td>
          <td class="paramname"><em>workloadFactory</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_i_backend_internal.xhtml#a693b40e6b94e958836aeb0410ca186bd">armnn::IBackendInternal::IMemoryManagerSharedPtr</a> &amp;&#160;</td>
          <td class="paramname"><em>memoryManager</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_i_tensor_handle_factory.xhtml">armnn::ITensorHandleFactory</a> &amp;&#160;</td>
          <td class="paramname"><em>tensorHandleFactory</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_stack_test_impl_8cpp_source.xhtml#l00638">638</a> of file <a class="el" href="_stack_test_impl_8cpp_source.xhtml">StackTestImpl.cpp</a>.</p>

<p class="reference">Referenced by <a class="el" href="_ref_layer_tests_8cpp_source.xhtml#l00014">TEST_SUITE()</a>.</p>
<div class="fragment"><div class="line"><a name="l00642"></a><span class="lineno">  642</span>&#160;{</div><div class="line"><a name="l00643"></a><span class="lineno">  643</span>&#160;    <span class="keywordflow">return</span> StackAxis0TestImpl&lt;armnn::DataType::Signed32&gt;(workloadFactory, memoryManager, tensorHandleFactory);</div><div class="line"><a name="l00644"></a><span class="lineno">  644</span>&#160;}</div></div><!-- fragment -->
</div>
</div>
<a id="a3b4b3f173b6a4527f576a2ade7eb8458"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a3b4b3f173b6a4527f576a2ade7eb8458">&#9670;&nbsp;</a></span>StackOutput3DInputs3Float32Test()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="struct_layer_test_result.xhtml">LayerTestResult</a>&lt;float, 3&gt; StackOutput3DInputs3Float32Test </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classarmnn_1_1_i_workload_factory.xhtml">armnn::IWorkloadFactory</a> &amp;&#160;</td>
          <td class="paramname"><em>workloadFactory</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_i_backend_internal.xhtml#a693b40e6b94e958836aeb0410ca186bd">armnn::IBackendInternal::IMemoryManagerSharedPtr</a> &amp;&#160;</td>
          <td class="paramname"><em>memoryManager</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_i_tensor_handle_factory.xhtml">armnn::ITensorHandleFactory</a> &amp;&#160;</td>
          <td class="paramname"><em>tensorHandleFactory</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_stack_test_impl_8cpp_source.xhtml#l00553">553</a> of file <a class="el" href="_stack_test_impl_8cpp_source.xhtml">StackTestImpl.cpp</a>.</p>

<p class="reference">Referenced by <a class="el" href="_cl_layer_tests_8cpp_source.xhtml#l00027">TEST_SUITE()</a>.</p>
<div class="fragment"><div class="line"><a name="l00557"></a><span class="lineno">  557</span>&#160;{</div><div class="line"><a name="l00558"></a><span class="lineno">  558</span>&#160;    <span class="keywordflow">return</span> StackOutput3DInputs3TestImpl&lt;armnn::DataType::Float32&gt;(workloadFactory, memoryManager, tensorHandleFactory);</div><div class="line"><a name="l00559"></a><span class="lineno">  559</span>&#160;}</div></div><!-- fragment -->
</div>
</div>
<a id="a10e9aa6527f51a4c18042f648d8e3be4"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a10e9aa6527f51a4c18042f648d8e3be4">&#9670;&nbsp;</a></span>StackOutput3DInputs3TestImpl()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="struct_layer_test_result.xhtml">LayerTestResult</a>&lt;T, 3&gt; StackOutput3DInputs3TestImpl </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classarmnn_1_1_i_workload_factory.xhtml">armnn::IWorkloadFactory</a> &amp;&#160;</td>
          <td class="paramname"><em>workloadFactory</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_i_backend_internal.xhtml#a693b40e6b94e958836aeb0410ca186bd">armnn::IBackendInternal::IMemoryManagerSharedPtr</a> &amp;&#160;</td>
          <td class="paramname"><em>memoryManager</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_i_tensor_handle_factory.xhtml">armnn::ITensorHandleFactory</a> &amp;&#160;</td>
          <td class="paramname"><em>tensorHandleFactory</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_stack_test_impl_8cpp_source.xhtml#l00372">372</a> of file <a class="el" href="_stack_test_impl_8cpp_source.xhtml">StackTestImpl.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00376"></a><span class="lineno">  376</span>&#160;{</div><div class="line"><a name="l00377"></a><span class="lineno">  377</span>&#160;    <a class="code" href="classarmnn_1_1_tensor_info.xhtml">armnn::TensorInfo</a> inputTensorInfo ({ 3, 3 }, ArmnnType);</div><div class="line"><a name="l00378"></a><span class="lineno">  378</span>&#160;    <a class="code" href="classarmnn_1_1_tensor_info.xhtml">armnn::TensorInfo</a> outputTensorInfo({ 3, 3, 3 }, ArmnnType);</div><div class="line"><a name="l00379"></a><span class="lineno">  379</span>&#160;</div><div class="line"><a name="l00380"></a><span class="lineno">  380</span>&#160;    std::vector&lt;std::vector&lt;T&gt;&gt; inputData;</div><div class="line"><a name="l00381"></a><span class="lineno">  381</span>&#160;</div><div class="line"><a name="l00382"></a><span class="lineno">  382</span>&#160;    inputData.push_back(</div><div class="line"><a name="l00383"></a><span class="lineno">  383</span>&#160;    {</div><div class="line"><a name="l00384"></a><span class="lineno">  384</span>&#160;        1, 2, 3,</div><div class="line"><a name="l00385"></a><span class="lineno">  385</span>&#160;        4, 5, 6,</div><div class="line"><a name="l00386"></a><span class="lineno">  386</span>&#160;        7, 8, 9</div><div class="line"><a name="l00387"></a><span class="lineno">  387</span>&#160;    });</div><div class="line"><a name="l00388"></a><span class="lineno">  388</span>&#160;</div><div class="line"><a name="l00389"></a><span class="lineno">  389</span>&#160;    inputData.push_back(</div><div class="line"><a name="l00390"></a><span class="lineno">  390</span>&#160;    {</div><div class="line"><a name="l00391"></a><span class="lineno">  391</span>&#160;        10, 11, 12,</div><div class="line"><a name="l00392"></a><span class="lineno">  392</span>&#160;        13, 14, 15,</div><div class="line"><a name="l00393"></a><span class="lineno">  393</span>&#160;        16, 17, 18</div><div class="line"><a name="l00394"></a><span class="lineno">  394</span>&#160;    });</div><div class="line"><a name="l00395"></a><span class="lineno">  395</span>&#160;</div><div class="line"><a name="l00396"></a><span class="lineno">  396</span>&#160;    inputData.push_back(</div><div class="line"><a name="l00397"></a><span class="lineno">  397</span>&#160;    {</div><div class="line"><a name="l00398"></a><span class="lineno">  398</span>&#160;        19, 20, 21,</div><div class="line"><a name="l00399"></a><span class="lineno">  399</span>&#160;        22, 23, 24,</div><div class="line"><a name="l00400"></a><span class="lineno">  400</span>&#160;        25, 26, 27</div><div class="line"><a name="l00401"></a><span class="lineno">  401</span>&#160;    });</div><div class="line"><a name="l00402"></a><span class="lineno">  402</span>&#160;</div><div class="line"><a name="l00403"></a><span class="lineno">  403</span>&#160;    std::vector&lt;T&gt; outputExpectedData =</div><div class="line"><a name="l00404"></a><span class="lineno">  404</span>&#160;    {</div><div class="line"><a name="l00405"></a><span class="lineno">  405</span>&#160;        1, 2, 3,</div><div class="line"><a name="l00406"></a><span class="lineno">  406</span>&#160;        10, 11, 12,</div><div class="line"><a name="l00407"></a><span class="lineno">  407</span>&#160;        19, 20, 21,</div><div class="line"><a name="l00408"></a><span class="lineno">  408</span>&#160;</div><div class="line"><a name="l00409"></a><span class="lineno">  409</span>&#160;        4, 5, 6,</div><div class="line"><a name="l00410"></a><span class="lineno">  410</span>&#160;        13, 14, 15,</div><div class="line"><a name="l00411"></a><span class="lineno">  411</span>&#160;        22, 23, 24,</div><div class="line"><a name="l00412"></a><span class="lineno">  412</span>&#160;</div><div class="line"><a name="l00413"></a><span class="lineno">  413</span>&#160;        7, 8, 9,</div><div class="line"><a name="l00414"></a><span class="lineno">  414</span>&#160;        16, 17, 18,</div><div class="line"><a name="l00415"></a><span class="lineno">  415</span>&#160;        25, 26, 27</div><div class="line"><a name="l00416"></a><span class="lineno">  416</span>&#160;    };</div><div class="line"><a name="l00417"></a><span class="lineno">  417</span>&#160;</div><div class="line"><a name="l00418"></a><span class="lineno">  418</span>&#160;    <span class="keywordflow">return</span> StackTestHelper&lt;ArmnnType, T, 3&gt;(</div><div class="line"><a name="l00419"></a><span class="lineno">  419</span>&#160;        workloadFactory,</div><div class="line"><a name="l00420"></a><span class="lineno">  420</span>&#160;        memoryManager,</div><div class="line"><a name="l00421"></a><span class="lineno">  421</span>&#160;        tensorHandleFactory,</div><div class="line"><a name="l00422"></a><span class="lineno">  422</span>&#160;        inputTensorInfo,</div><div class="line"><a name="l00423"></a><span class="lineno">  423</span>&#160;        outputTensorInfo,</div><div class="line"><a name="l00424"></a><span class="lineno">  424</span>&#160;        1U,</div><div class="line"><a name="l00425"></a><span class="lineno">  425</span>&#160;        inputData,</div><div class="line"><a name="l00426"></a><span class="lineno">  426</span>&#160;        outputExpectedData</div><div class="line"><a name="l00427"></a><span class="lineno">  427</span>&#160;    );</div><div class="line"><a name="l00428"></a><span class="lineno">  428</span>&#160;}</div><div class="ttc" id="classarmnn_1_1_tensor_info_xhtml"><div class="ttname"><a href="classarmnn_1_1_tensor_info.xhtml">armnn::TensorInfo</a></div><div class="ttdef"><b>Definition:</b> <a href="_tensor_8hpp_source.xhtml#l00152">Tensor.hpp:152</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="ad49417dc85c34867037162e3343a84b2"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ad49417dc85c34867037162e3343a84b2">&#9670;&nbsp;</a></span>StackOutput4DAxis1Float32Test()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="struct_layer_test_result.xhtml">LayerTestResult</a>&lt;float, 4&gt; StackOutput4DAxis1Float32Test </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classarmnn_1_1_i_workload_factory.xhtml">armnn::IWorkloadFactory</a> &amp;&#160;</td>
          <td class="paramname"><em>workloadFactory</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_i_backend_internal.xhtml#a693b40e6b94e958836aeb0410ca186bd">armnn::IBackendInternal::IMemoryManagerSharedPtr</a> &amp;&#160;</td>
          <td class="paramname"><em>memoryManager</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_i_tensor_handle_factory.xhtml">armnn::ITensorHandleFactory</a> &amp;&#160;</td>
          <td class="paramname"><em>tensorHandleFactory</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_stack_test_impl_8cpp_source.xhtml#l00529">529</a> of file <a class="el" href="_stack_test_impl_8cpp_source.xhtml">StackTestImpl.cpp</a>.</p>

<p class="reference">Referenced by <a class="el" href="_cl_layer_tests_8cpp_source.xhtml#l00027">TEST_SUITE()</a>.</p>
<div class="fragment"><div class="line"><a name="l00533"></a><span class="lineno">  533</span>&#160;{</div><div class="line"><a name="l00534"></a><span class="lineno">  534</span>&#160;    <span class="keywordflow">return</span> StackOutput4DAxis1TestImpl&lt;armnn::DataType::Float32&gt;(workloadFactory, memoryManager, tensorHandleFactory);</div><div class="line"><a name="l00535"></a><span class="lineno">  535</span>&#160;}</div></div><!-- fragment -->
</div>
</div>
<a id="a46f7153df5d1c0256b8caff36a20f543"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a46f7153df5d1c0256b8caff36a20f543">&#9670;&nbsp;</a></span>StackOutput4DAxis1TestImpl()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="struct_layer_test_result.xhtml">LayerTestResult</a>&lt;T, 4&gt; StackOutput4DAxis1TestImpl </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classarmnn_1_1_i_workload_factory.xhtml">armnn::IWorkloadFactory</a> &amp;&#160;</td>
          <td class="paramname"><em>workloadFactory</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_i_backend_internal.xhtml#a693b40e6b94e958836aeb0410ca186bd">armnn::IBackendInternal::IMemoryManagerSharedPtr</a> &amp;&#160;</td>
          <td class="paramname"><em>memoryManager</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_i_tensor_handle_factory.xhtml">armnn::ITensorHandleFactory</a> &amp;&#160;</td>
          <td class="paramname"><em>tensorHandleFactory</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_stack_test_impl_8cpp_source.xhtml#l00158">158</a> of file <a class="el" href="_stack_test_impl_8cpp_source.xhtml">StackTestImpl.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160;{</div><div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160;    <a class="code" href="classarmnn_1_1_tensor_info.xhtml">armnn::TensorInfo</a> inputTensorInfo ({ 3, 2, 3 }, ArmnnType);</div><div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;    <a class="code" href="classarmnn_1_1_tensor_info.xhtml">armnn::TensorInfo</a> outputTensorInfo({ 3, 2, 2, 3 }, ArmnnType);</div><div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160;</div><div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160;    std::vector&lt;std::vector&lt;T&gt;&gt; inputData;</div><div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160;</div><div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160;    inputData.push_back(</div><div class="line"><a name="l00169"></a><span class="lineno">  169</span>&#160;    {</div><div class="line"><a name="l00170"></a><span class="lineno">  170</span>&#160;        1, 2, 3,</div><div class="line"><a name="l00171"></a><span class="lineno">  171</span>&#160;        4, 5, 6,</div><div class="line"><a name="l00172"></a><span class="lineno">  172</span>&#160;</div><div class="line"><a name="l00173"></a><span class="lineno">  173</span>&#160;        7, 8, 9,</div><div class="line"><a name="l00174"></a><span class="lineno">  174</span>&#160;        10, 11, 12,</div><div class="line"><a name="l00175"></a><span class="lineno">  175</span>&#160;</div><div class="line"><a name="l00176"></a><span class="lineno">  176</span>&#160;        13, 14, 15,</div><div class="line"><a name="l00177"></a><span class="lineno">  177</span>&#160;        16, 17, 18</div><div class="line"><a name="l00178"></a><span class="lineno">  178</span>&#160;    });</div><div class="line"><a name="l00179"></a><span class="lineno">  179</span>&#160;</div><div class="line"><a name="l00180"></a><span class="lineno">  180</span>&#160;    inputData.push_back(</div><div class="line"><a name="l00181"></a><span class="lineno">  181</span>&#160;    {</div><div class="line"><a name="l00182"></a><span class="lineno">  182</span>&#160;        19, 20, 21,</div><div class="line"><a name="l00183"></a><span class="lineno">  183</span>&#160;        22, 23, 24,</div><div class="line"><a name="l00184"></a><span class="lineno">  184</span>&#160;</div><div class="line"><a name="l00185"></a><span class="lineno">  185</span>&#160;        25, 26, 27,</div><div class="line"><a name="l00186"></a><span class="lineno">  186</span>&#160;        28, 29, 30,</div><div class="line"><a name="l00187"></a><span class="lineno">  187</span>&#160;</div><div class="line"><a name="l00188"></a><span class="lineno">  188</span>&#160;        31, 32, 33,</div><div class="line"><a name="l00189"></a><span class="lineno">  189</span>&#160;        34, 35, 36</div><div class="line"><a name="l00190"></a><span class="lineno">  190</span>&#160;    });</div><div class="line"><a name="l00191"></a><span class="lineno">  191</span>&#160;</div><div class="line"><a name="l00192"></a><span class="lineno">  192</span>&#160;    std::vector&lt;T&gt; outputExpectedData =</div><div class="line"><a name="l00193"></a><span class="lineno">  193</span>&#160;    {</div><div class="line"><a name="l00194"></a><span class="lineno">  194</span>&#160;        1, 2, 3,</div><div class="line"><a name="l00195"></a><span class="lineno">  195</span>&#160;        4, 5, 6,</div><div class="line"><a name="l00196"></a><span class="lineno">  196</span>&#160;</div><div class="line"><a name="l00197"></a><span class="lineno">  197</span>&#160;        19, 20, 21,</div><div class="line"><a name="l00198"></a><span class="lineno">  198</span>&#160;        22, 23, 24,</div><div class="line"><a name="l00199"></a><span class="lineno">  199</span>&#160;</div><div class="line"><a name="l00200"></a><span class="lineno">  200</span>&#160;</div><div class="line"><a name="l00201"></a><span class="lineno">  201</span>&#160;        7, 8, 9,</div><div class="line"><a name="l00202"></a><span class="lineno">  202</span>&#160;        10, 11, 12,</div><div class="line"><a name="l00203"></a><span class="lineno">  203</span>&#160;</div><div class="line"><a name="l00204"></a><span class="lineno">  204</span>&#160;        25, 26, 27,</div><div class="line"><a name="l00205"></a><span class="lineno">  205</span>&#160;        28, 29, 30,</div><div class="line"><a name="l00206"></a><span class="lineno">  206</span>&#160;</div><div class="line"><a name="l00207"></a><span class="lineno">  207</span>&#160;</div><div class="line"><a name="l00208"></a><span class="lineno">  208</span>&#160;        13, 14, 15,</div><div class="line"><a name="l00209"></a><span class="lineno">  209</span>&#160;        16, 17, 18,</div><div class="line"><a name="l00210"></a><span class="lineno">  210</span>&#160;</div><div class="line"><a name="l00211"></a><span class="lineno">  211</span>&#160;        31, 32, 33,</div><div class="line"><a name="l00212"></a><span class="lineno">  212</span>&#160;        34, 35, 36</div><div class="line"><a name="l00213"></a><span class="lineno">  213</span>&#160;    };</div><div class="line"><a name="l00214"></a><span class="lineno">  214</span>&#160;</div><div class="line"><a name="l00215"></a><span class="lineno">  215</span>&#160;    <span class="keywordflow">return</span> StackTestHelper&lt;ArmnnType, T, 4&gt;(</div><div class="line"><a name="l00216"></a><span class="lineno">  216</span>&#160;        workloadFactory,</div><div class="line"><a name="l00217"></a><span class="lineno">  217</span>&#160;        memoryManager,</div><div class="line"><a name="l00218"></a><span class="lineno">  218</span>&#160;        tensorHandleFactory,</div><div class="line"><a name="l00219"></a><span class="lineno">  219</span>&#160;        inputTensorInfo,</div><div class="line"><a name="l00220"></a><span class="lineno">  220</span>&#160;        outputTensorInfo,</div><div class="line"><a name="l00221"></a><span class="lineno">  221</span>&#160;        1U,</div><div class="line"><a name="l00222"></a><span class="lineno">  222</span>&#160;        inputData,</div><div class="line"><a name="l00223"></a><span class="lineno">  223</span>&#160;        outputExpectedData</div><div class="line"><a name="l00224"></a><span class="lineno">  224</span>&#160;    );</div><div class="line"><a name="l00225"></a><span class="lineno">  225</span>&#160;}</div><div class="ttc" id="classarmnn_1_1_tensor_info_xhtml"><div class="ttname"><a href="classarmnn_1_1_tensor_info.xhtml">armnn::TensorInfo</a></div><div class="ttdef"><b>Definition:</b> <a href="_tensor_8hpp_source.xhtml#l00152">Tensor.hpp:152</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="acd8d3e699b4f15f0ee82d5bdef47dccf"></a>
<h2 class="memtitle"><span class="permalink"><a href="#acd8d3e699b4f15f0ee82d5bdef47dccf">&#9670;&nbsp;</a></span>StackOutput4DAxis2Float32Test()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="struct_layer_test_result.xhtml">LayerTestResult</a>&lt;float, 4&gt; StackOutput4DAxis2Float32Test </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classarmnn_1_1_i_workload_factory.xhtml">armnn::IWorkloadFactory</a> &amp;&#160;</td>
          <td class="paramname"><em>workloadFactory</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_i_backend_internal.xhtml#a693b40e6b94e958836aeb0410ca186bd">armnn::IBackendInternal::IMemoryManagerSharedPtr</a> &amp;&#160;</td>
          <td class="paramname"><em>memoryManager</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_i_tensor_handle_factory.xhtml">armnn::ITensorHandleFactory</a> &amp;&#160;</td>
          <td class="paramname"><em>tensorHandleFactory</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_stack_test_impl_8cpp_source.xhtml#l00537">537</a> of file <a class="el" href="_stack_test_impl_8cpp_source.xhtml">StackTestImpl.cpp</a>.</p>

<p class="reference">Referenced by <a class="el" href="_cl_layer_tests_8cpp_source.xhtml#l00027">TEST_SUITE()</a>.</p>
<div class="fragment"><div class="line"><a name="l00541"></a><span class="lineno">  541</span>&#160;{</div><div class="line"><a name="l00542"></a><span class="lineno">  542</span>&#160;    <span class="keywordflow">return</span> StackOutput4DAxis2TestImpl&lt;armnn::DataType::Float32&gt;(workloadFactory, memoryManager, tensorHandleFactory);</div><div class="line"><a name="l00543"></a><span class="lineno">  543</span>&#160;}</div></div><!-- fragment -->
</div>
</div>
<a id="a347abac52a2996998429be987be8565b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a347abac52a2996998429be987be8565b">&#9670;&nbsp;</a></span>StackOutput4DAxis2TestImpl()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="struct_layer_test_result.xhtml">LayerTestResult</a>&lt;T, 4&gt; StackOutput4DAxis2TestImpl </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classarmnn_1_1_i_workload_factory.xhtml">armnn::IWorkloadFactory</a> &amp;&#160;</td>
          <td class="paramname"><em>workloadFactory</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_i_backend_internal.xhtml#a693b40e6b94e958836aeb0410ca186bd">armnn::IBackendInternal::IMemoryManagerSharedPtr</a> &amp;&#160;</td>
          <td class="paramname"><em>memoryManager</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_i_tensor_handle_factory.xhtml">armnn::ITensorHandleFactory</a> &amp;&#160;</td>
          <td class="paramname"><em>tensorHandleFactory</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_stack_test_impl_8cpp_source.xhtml#l00228">228</a> of file <a class="el" href="_stack_test_impl_8cpp_source.xhtml">StackTestImpl.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00232"></a><span class="lineno">  232</span>&#160;{</div><div class="line"><a name="l00233"></a><span class="lineno">  233</span>&#160;    <a class="code" href="classarmnn_1_1_tensor_info.xhtml">armnn::TensorInfo</a> inputTensorInfo ({ 3, 2, 3 }, ArmnnType);</div><div class="line"><a name="l00234"></a><span class="lineno">  234</span>&#160;    <a class="code" href="classarmnn_1_1_tensor_info.xhtml">armnn::TensorInfo</a> outputTensorInfo({ 3, 2, 2, 3 }, ArmnnType);</div><div class="line"><a name="l00235"></a><span class="lineno">  235</span>&#160;</div><div class="line"><a name="l00236"></a><span class="lineno">  236</span>&#160;    std::vector&lt;std::vector&lt;T&gt;&gt; inputData;</div><div class="line"><a name="l00237"></a><span class="lineno">  237</span>&#160;</div><div class="line"><a name="l00238"></a><span class="lineno">  238</span>&#160;    inputData.push_back(</div><div class="line"><a name="l00239"></a><span class="lineno">  239</span>&#160;    {</div><div class="line"><a name="l00240"></a><span class="lineno">  240</span>&#160;        1, 2, 3,</div><div class="line"><a name="l00241"></a><span class="lineno">  241</span>&#160;        4, 5, 6,</div><div class="line"><a name="l00242"></a><span class="lineno">  242</span>&#160;</div><div class="line"><a name="l00243"></a><span class="lineno">  243</span>&#160;        7, 8, 9,</div><div class="line"><a name="l00244"></a><span class="lineno">  244</span>&#160;        10, 11, 12,</div><div class="line"><a name="l00245"></a><span class="lineno">  245</span>&#160;</div><div class="line"><a name="l00246"></a><span class="lineno">  246</span>&#160;        13, 14, 15,</div><div class="line"><a name="l00247"></a><span class="lineno">  247</span>&#160;        16, 17, 18</div><div class="line"><a name="l00248"></a><span class="lineno">  248</span>&#160;    });</div><div class="line"><a name="l00249"></a><span class="lineno">  249</span>&#160;</div><div class="line"><a name="l00250"></a><span class="lineno">  250</span>&#160;    inputData.push_back(</div><div class="line"><a name="l00251"></a><span class="lineno">  251</span>&#160;    {</div><div class="line"><a name="l00252"></a><span class="lineno">  252</span>&#160;        19, 20, 21,</div><div class="line"><a name="l00253"></a><span class="lineno">  253</span>&#160;        22, 23, 24,</div><div class="line"><a name="l00254"></a><span class="lineno">  254</span>&#160;</div><div class="line"><a name="l00255"></a><span class="lineno">  255</span>&#160;        25, 26, 27,</div><div class="line"><a name="l00256"></a><span class="lineno">  256</span>&#160;        28, 29, 30,</div><div class="line"><a name="l00257"></a><span class="lineno">  257</span>&#160;</div><div class="line"><a name="l00258"></a><span class="lineno">  258</span>&#160;        31, 32, 33,</div><div class="line"><a name="l00259"></a><span class="lineno">  259</span>&#160;        34, 35, 36</div><div class="line"><a name="l00260"></a><span class="lineno">  260</span>&#160;    });</div><div class="line"><a name="l00261"></a><span class="lineno">  261</span>&#160;</div><div class="line"><a name="l00262"></a><span class="lineno">  262</span>&#160;    std::vector&lt;T&gt; outputExpectedData =</div><div class="line"><a name="l00263"></a><span class="lineno">  263</span>&#160;    {</div><div class="line"><a name="l00264"></a><span class="lineno">  264</span>&#160;        1, 2, 3,</div><div class="line"><a name="l00265"></a><span class="lineno">  265</span>&#160;        19, 20, 21,</div><div class="line"><a name="l00266"></a><span class="lineno">  266</span>&#160;</div><div class="line"><a name="l00267"></a><span class="lineno">  267</span>&#160;        4, 5, 6,</div><div class="line"><a name="l00268"></a><span class="lineno">  268</span>&#160;        22, 23, 24,</div><div class="line"><a name="l00269"></a><span class="lineno">  269</span>&#160;</div><div class="line"><a name="l00270"></a><span class="lineno">  270</span>&#160;        7, 8, 9,</div><div class="line"><a name="l00271"></a><span class="lineno">  271</span>&#160;        25, 26, 27,</div><div class="line"><a name="l00272"></a><span class="lineno">  272</span>&#160;</div><div class="line"><a name="l00273"></a><span class="lineno">  273</span>&#160;        10, 11, 12,</div><div class="line"><a name="l00274"></a><span class="lineno">  274</span>&#160;        28, 29, 30,</div><div class="line"><a name="l00275"></a><span class="lineno">  275</span>&#160;</div><div class="line"><a name="l00276"></a><span class="lineno">  276</span>&#160;        13, 14, 15,</div><div class="line"><a name="l00277"></a><span class="lineno">  277</span>&#160;        31, 32, 33,</div><div class="line"><a name="l00278"></a><span class="lineno">  278</span>&#160;</div><div class="line"><a name="l00279"></a><span class="lineno">  279</span>&#160;        16, 17, 18,</div><div class="line"><a name="l00280"></a><span class="lineno">  280</span>&#160;        34, 35, 36</div><div class="line"><a name="l00281"></a><span class="lineno">  281</span>&#160;    };</div><div class="line"><a name="l00282"></a><span class="lineno">  282</span>&#160;</div><div class="line"><a name="l00283"></a><span class="lineno">  283</span>&#160;    <span class="keywordflow">return</span> StackTestHelper&lt;ArmnnType, T, 4&gt;(</div><div class="line"><a name="l00284"></a><span class="lineno">  284</span>&#160;        workloadFactory,</div><div class="line"><a name="l00285"></a><span class="lineno">  285</span>&#160;        memoryManager,</div><div class="line"><a name="l00286"></a><span class="lineno">  286</span>&#160;        tensorHandleFactory,</div><div class="line"><a name="l00287"></a><span class="lineno">  287</span>&#160;        inputTensorInfo,</div><div class="line"><a name="l00288"></a><span class="lineno">  288</span>&#160;        outputTensorInfo,</div><div class="line"><a name="l00289"></a><span class="lineno">  289</span>&#160;        2U,</div><div class="line"><a name="l00290"></a><span class="lineno">  290</span>&#160;        inputData,</div><div class="line"><a name="l00291"></a><span class="lineno">  291</span>&#160;        outputExpectedData</div><div class="line"><a name="l00292"></a><span class="lineno">  292</span>&#160;    );</div><div class="line"><a name="l00293"></a><span class="lineno">  293</span>&#160;}</div><div class="ttc" id="classarmnn_1_1_tensor_info_xhtml"><div class="ttname"><a href="classarmnn_1_1_tensor_info.xhtml">armnn::TensorInfo</a></div><div class="ttdef"><b>Definition:</b> <a href="_tensor_8hpp_source.xhtml#l00152">Tensor.hpp:152</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="a2d9926a44fde4b3bd4596b1996ec9c45"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a2d9926a44fde4b3bd4596b1996ec9c45">&#9670;&nbsp;</a></span>StackOutput4DAxis3Float32Test()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="struct_layer_test_result.xhtml">LayerTestResult</a>&lt;float, 4&gt; StackOutput4DAxis3Float32Test </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classarmnn_1_1_i_workload_factory.xhtml">armnn::IWorkloadFactory</a> &amp;&#160;</td>
          <td class="paramname"><em>workloadFactory</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_i_backend_internal.xhtml#a693b40e6b94e958836aeb0410ca186bd">armnn::IBackendInternal::IMemoryManagerSharedPtr</a> &amp;&#160;</td>
          <td class="paramname"><em>memoryManager</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_i_tensor_handle_factory.xhtml">armnn::ITensorHandleFactory</a> &amp;&#160;</td>
          <td class="paramname"><em>tensorHandleFactory</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_stack_test_impl_8cpp_source.xhtml#l00545">545</a> of file <a class="el" href="_stack_test_impl_8cpp_source.xhtml">StackTestImpl.cpp</a>.</p>

<p class="reference">Referenced by <a class="el" href="_cl_layer_tests_8cpp_source.xhtml#l00027">TEST_SUITE()</a>.</p>
<div class="fragment"><div class="line"><a name="l00549"></a><span class="lineno">  549</span>&#160;{</div><div class="line"><a name="l00550"></a><span class="lineno">  550</span>&#160;    <span class="keywordflow">return</span> StackOutput4DAxis3TestImpl&lt;armnn::DataType::Float32&gt;(workloadFactory, memoryManager, tensorHandleFactory);</div><div class="line"><a name="l00551"></a><span class="lineno">  551</span>&#160;}</div></div><!-- fragment -->
</div>
</div>
<a id="a10e4fe92167c11a2539405d5a006bf84"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a10e4fe92167c11a2539405d5a006bf84">&#9670;&nbsp;</a></span>StackOutput4DAxis3TestImpl()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="struct_layer_test_result.xhtml">LayerTestResult</a>&lt;T, 4&gt; StackOutput4DAxis3TestImpl </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classarmnn_1_1_i_workload_factory.xhtml">armnn::IWorkloadFactory</a> &amp;&#160;</td>
          <td class="paramname"><em>workloadFactory</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_i_backend_internal.xhtml#a693b40e6b94e958836aeb0410ca186bd">armnn::IBackendInternal::IMemoryManagerSharedPtr</a> &amp;&#160;</td>
          <td class="paramname"><em>memoryManager</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_i_tensor_handle_factory.xhtml">armnn::ITensorHandleFactory</a> &amp;&#160;</td>
          <td class="paramname"><em>tensorHandleFactory</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_stack_test_impl_8cpp_source.xhtml#l00296">296</a> of file <a class="el" href="_stack_test_impl_8cpp_source.xhtml">StackTestImpl.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00300"></a><span class="lineno">  300</span>&#160;{</div><div class="line"><a name="l00301"></a><span class="lineno">  301</span>&#160;    <a class="code" href="classarmnn_1_1_tensor_info.xhtml">armnn::TensorInfo</a> inputTensorInfo ({ 3, 2, 3 }, ArmnnType);</div><div class="line"><a name="l00302"></a><span class="lineno">  302</span>&#160;    <a class="code" href="classarmnn_1_1_tensor_info.xhtml">armnn::TensorInfo</a> outputTensorInfo({ 3, 2, 3, 2 }, ArmnnType);</div><div class="line"><a name="l00303"></a><span class="lineno">  303</span>&#160;</div><div class="line"><a name="l00304"></a><span class="lineno">  304</span>&#160;    std::vector&lt;std::vector&lt;T&gt;&gt; inputData;</div><div class="line"><a name="l00305"></a><span class="lineno">  305</span>&#160;</div><div class="line"><a name="l00306"></a><span class="lineno">  306</span>&#160;    inputData.push_back(</div><div class="line"><a name="l00307"></a><span class="lineno">  307</span>&#160;    {</div><div class="line"><a name="l00308"></a><span class="lineno">  308</span>&#160;        1, 2, 3,</div><div class="line"><a name="l00309"></a><span class="lineno">  309</span>&#160;        4, 5, 6,</div><div class="line"><a name="l00310"></a><span class="lineno">  310</span>&#160;</div><div class="line"><a name="l00311"></a><span class="lineno">  311</span>&#160;        7, 8, 9,</div><div class="line"><a name="l00312"></a><span class="lineno">  312</span>&#160;        10, 11, 12,</div><div class="line"><a name="l00313"></a><span class="lineno">  313</span>&#160;</div><div class="line"><a name="l00314"></a><span class="lineno">  314</span>&#160;        13, 14, 15,</div><div class="line"><a name="l00315"></a><span class="lineno">  315</span>&#160;        16, 17, 18</div><div class="line"><a name="l00316"></a><span class="lineno">  316</span>&#160;    });</div><div class="line"><a name="l00317"></a><span class="lineno">  317</span>&#160;</div><div class="line"><a name="l00318"></a><span class="lineno">  318</span>&#160;    inputData.push_back(</div><div class="line"><a name="l00319"></a><span class="lineno">  319</span>&#160;    {</div><div class="line"><a name="l00320"></a><span class="lineno">  320</span>&#160;        19, 20, 21,</div><div class="line"><a name="l00321"></a><span class="lineno">  321</span>&#160;        22, 23, 24,</div><div class="line"><a name="l00322"></a><span class="lineno">  322</span>&#160;</div><div class="line"><a name="l00323"></a><span class="lineno">  323</span>&#160;        25, 26, 27,</div><div class="line"><a name="l00324"></a><span class="lineno">  324</span>&#160;        28, 29, 30,</div><div class="line"><a name="l00325"></a><span class="lineno">  325</span>&#160;</div><div class="line"><a name="l00326"></a><span class="lineno">  326</span>&#160;        31, 32, 33,</div><div class="line"><a name="l00327"></a><span class="lineno">  327</span>&#160;        34, 35, 36</div><div class="line"><a name="l00328"></a><span class="lineno">  328</span>&#160;    });</div><div class="line"><a name="l00329"></a><span class="lineno">  329</span>&#160;</div><div class="line"><a name="l00330"></a><span class="lineno">  330</span>&#160;    std::vector&lt;T&gt; outputExpectedData =</div><div class="line"><a name="l00331"></a><span class="lineno">  331</span>&#160;    {</div><div class="line"><a name="l00332"></a><span class="lineno">  332</span>&#160;        1, 19,</div><div class="line"><a name="l00333"></a><span class="lineno">  333</span>&#160;        2, 20,</div><div class="line"><a name="l00334"></a><span class="lineno">  334</span>&#160;        3, 21,</div><div class="line"><a name="l00335"></a><span class="lineno">  335</span>&#160;</div><div class="line"><a name="l00336"></a><span class="lineno">  336</span>&#160;        4, 22,</div><div class="line"><a name="l00337"></a><span class="lineno">  337</span>&#160;        5, 23,</div><div class="line"><a name="l00338"></a><span class="lineno">  338</span>&#160;        6, 24,</div><div class="line"><a name="l00339"></a><span class="lineno">  339</span>&#160;</div><div class="line"><a name="l00340"></a><span class="lineno">  340</span>&#160;</div><div class="line"><a name="l00341"></a><span class="lineno">  341</span>&#160;        7, 25,</div><div class="line"><a name="l00342"></a><span class="lineno">  342</span>&#160;        8, 26,</div><div class="line"><a name="l00343"></a><span class="lineno">  343</span>&#160;        9, 27,</div><div class="line"><a name="l00344"></a><span class="lineno">  344</span>&#160;</div><div class="line"><a name="l00345"></a><span class="lineno">  345</span>&#160;        10, 28,</div><div class="line"><a name="l00346"></a><span class="lineno">  346</span>&#160;        11, 29,</div><div class="line"><a name="l00347"></a><span class="lineno">  347</span>&#160;        12, 30,</div><div class="line"><a name="l00348"></a><span class="lineno">  348</span>&#160;</div><div class="line"><a name="l00349"></a><span class="lineno">  349</span>&#160;</div><div class="line"><a name="l00350"></a><span class="lineno">  350</span>&#160;        13, 31,</div><div class="line"><a name="l00351"></a><span class="lineno">  351</span>&#160;        14, 32,</div><div class="line"><a name="l00352"></a><span class="lineno">  352</span>&#160;        15, 33,</div><div class="line"><a name="l00353"></a><span class="lineno">  353</span>&#160;</div><div class="line"><a name="l00354"></a><span class="lineno">  354</span>&#160;        16, 34,</div><div class="line"><a name="l00355"></a><span class="lineno">  355</span>&#160;        17, 35,</div><div class="line"><a name="l00356"></a><span class="lineno">  356</span>&#160;        18, 36</div><div class="line"><a name="l00357"></a><span class="lineno">  357</span>&#160;    };</div><div class="line"><a name="l00358"></a><span class="lineno">  358</span>&#160;</div><div class="line"><a name="l00359"></a><span class="lineno">  359</span>&#160;    <span class="keywordflow">return</span> StackTestHelper&lt;ArmnnType, T, 4&gt;(</div><div class="line"><a name="l00360"></a><span class="lineno">  360</span>&#160;        workloadFactory,</div><div class="line"><a name="l00361"></a><span class="lineno">  361</span>&#160;        memoryManager,</div><div class="line"><a name="l00362"></a><span class="lineno">  362</span>&#160;        tensorHandleFactory,</div><div class="line"><a name="l00363"></a><span class="lineno">  363</span>&#160;        inputTensorInfo,</div><div class="line"><a name="l00364"></a><span class="lineno">  364</span>&#160;        outputTensorInfo,</div><div class="line"><a name="l00365"></a><span class="lineno">  365</span>&#160;        3U,</div><div class="line"><a name="l00366"></a><span class="lineno">  366</span>&#160;        inputData,</div><div class="line"><a name="l00367"></a><span class="lineno">  367</span>&#160;        outputExpectedData</div><div class="line"><a name="l00368"></a><span class="lineno">  368</span>&#160;    );</div><div class="line"><a name="l00369"></a><span class="lineno">  369</span>&#160;}</div><div class="ttc" id="classarmnn_1_1_tensor_info_xhtml"><div class="ttname"><a href="classarmnn_1_1_tensor_info.xhtml">armnn::TensorInfo</a></div><div class="ttdef"><b>Definition:</b> <a href="_tensor_8hpp_source.xhtml#l00152">Tensor.hpp:152</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="ac1d2db6153cebd24e1b0a7abec6b6796"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ac1d2db6153cebd24e1b0a7abec6b6796">&#9670;&nbsp;</a></span>StackOutput5DFloat32Test()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="struct_layer_test_result.xhtml">LayerTestResult</a>&lt;float, 5&gt; StackOutput5DFloat32Test </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classarmnn_1_1_i_workload_factory.xhtml">armnn::IWorkloadFactory</a> &amp;&#160;</td>
          <td class="paramname"><em>workloadFactory</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_i_backend_internal.xhtml#a693b40e6b94e958836aeb0410ca186bd">armnn::IBackendInternal::IMemoryManagerSharedPtr</a> &amp;&#160;</td>
          <td class="paramname"><em>memoryManager</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_i_tensor_handle_factory.xhtml">armnn::ITensorHandleFactory</a> &amp;&#160;</td>
          <td class="paramname"><em>tensorHandleFactory</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_stack_test_impl_8cpp_source.xhtml#l00561">561</a> of file <a class="el" href="_stack_test_impl_8cpp_source.xhtml">StackTestImpl.cpp</a>.</p>

<p class="reference">Referenced by <a class="el" href="_cl_layer_tests_8cpp_source.xhtml#l00027">TEST_SUITE()</a>.</p>
<div class="fragment"><div class="line"><a name="l00565"></a><span class="lineno">  565</span>&#160;{</div><div class="line"><a name="l00566"></a><span class="lineno">  566</span>&#160;    <span class="keywordflow">return</span> StackOutput5DTestImpl&lt;armnn::DataType::Float32&gt;(workloadFactory, memoryManager, tensorHandleFactory);</div><div class="line"><a name="l00567"></a><span class="lineno">  567</span>&#160;}</div></div><!-- fragment -->
</div>
</div>
<a id="a5182b0d4d4fd8dbfd562146c06065e59"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a5182b0d4d4fd8dbfd562146c06065e59">&#9670;&nbsp;</a></span>StackOutput5DTestImpl()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="struct_layer_test_result.xhtml">LayerTestResult</a>&lt;T, 5&gt; StackOutput5DTestImpl </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classarmnn_1_1_i_workload_factory.xhtml">armnn::IWorkloadFactory</a> &amp;&#160;</td>
          <td class="paramname"><em>workloadFactory</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_i_backend_internal.xhtml#a693b40e6b94e958836aeb0410ca186bd">armnn::IBackendInternal::IMemoryManagerSharedPtr</a> &amp;&#160;</td>
          <td class="paramname"><em>memoryManager</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_i_tensor_handle_factory.xhtml">armnn::ITensorHandleFactory</a> &amp;&#160;</td>
          <td class="paramname"><em>tensorHandleFactory</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_stack_test_impl_8cpp_source.xhtml#l00431">431</a> of file <a class="el" href="_stack_test_impl_8cpp_source.xhtml">StackTestImpl.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00435"></a><span class="lineno">  435</span>&#160;{</div><div class="line"><a name="l00436"></a><span class="lineno">  436</span>&#160;    <a class="code" href="classarmnn_1_1_tensor_info.xhtml">armnn::TensorInfo</a> inputTensorInfo ({ 2, 2, 2, 3 }, ArmnnType);</div><div class="line"><a name="l00437"></a><span class="lineno">  437</span>&#160;    <a class="code" href="classarmnn_1_1_tensor_info.xhtml">armnn::TensorInfo</a> outputTensorInfo({ 2, 2, 2, 2, 3 }, ArmnnType);</div><div class="line"><a name="l00438"></a><span class="lineno">  438</span>&#160;</div><div class="line"><a name="l00439"></a><span class="lineno">  439</span>&#160;    std::vector&lt;std::vector&lt;T&gt;&gt; inputData;</div><div class="line"><a name="l00440"></a><span class="lineno">  440</span>&#160;</div><div class="line"><a name="l00441"></a><span class="lineno">  441</span>&#160;    inputData.push_back(</div><div class="line"><a name="l00442"></a><span class="lineno">  442</span>&#160;    {</div><div class="line"><a name="l00443"></a><span class="lineno">  443</span>&#160;        1, 2, 3,</div><div class="line"><a name="l00444"></a><span class="lineno">  444</span>&#160;        4, 5, 6,</div><div class="line"><a name="l00445"></a><span class="lineno">  445</span>&#160;</div><div class="line"><a name="l00446"></a><span class="lineno">  446</span>&#160;        7, 8, 9,</div><div class="line"><a name="l00447"></a><span class="lineno">  447</span>&#160;        10, 11, 12,</div><div class="line"><a name="l00448"></a><span class="lineno">  448</span>&#160;</div><div class="line"><a name="l00449"></a><span class="lineno">  449</span>&#160;</div><div class="line"><a name="l00450"></a><span class="lineno">  450</span>&#160;        13, 14, 15,</div><div class="line"><a name="l00451"></a><span class="lineno">  451</span>&#160;        16, 17, 18,</div><div class="line"><a name="l00452"></a><span class="lineno">  452</span>&#160;</div><div class="line"><a name="l00453"></a><span class="lineno">  453</span>&#160;        19, 20, 21,</div><div class="line"><a name="l00454"></a><span class="lineno">  454</span>&#160;        22, 23, 24</div><div class="line"><a name="l00455"></a><span class="lineno">  455</span>&#160;    });</div><div class="line"><a name="l00456"></a><span class="lineno">  456</span>&#160;</div><div class="line"><a name="l00457"></a><span class="lineno">  457</span>&#160;    inputData.push_back(</div><div class="line"><a name="l00458"></a><span class="lineno">  458</span>&#160;    {</div><div class="line"><a name="l00459"></a><span class="lineno">  459</span>&#160;        25, 26, 27,</div><div class="line"><a name="l00460"></a><span class="lineno">  460</span>&#160;        28, 29, 30,</div><div class="line"><a name="l00461"></a><span class="lineno">  461</span>&#160;</div><div class="line"><a name="l00462"></a><span class="lineno">  462</span>&#160;        31, 32, 33,</div><div class="line"><a name="l00463"></a><span class="lineno">  463</span>&#160;        34, 35, 36,</div><div class="line"><a name="l00464"></a><span class="lineno">  464</span>&#160;</div><div class="line"><a name="l00465"></a><span class="lineno">  465</span>&#160;</div><div class="line"><a name="l00466"></a><span class="lineno">  466</span>&#160;        37, 38, 39,</div><div class="line"><a name="l00467"></a><span class="lineno">  467</span>&#160;        40, 41, 42,</div><div class="line"><a name="l00468"></a><span class="lineno">  468</span>&#160;</div><div class="line"><a name="l00469"></a><span class="lineno">  469</span>&#160;        43, 44, 45,</div><div class="line"><a name="l00470"></a><span class="lineno">  470</span>&#160;        46, 47, 48</div><div class="line"><a name="l00471"></a><span class="lineno">  471</span>&#160;    });</div><div class="line"><a name="l00472"></a><span class="lineno">  472</span>&#160;</div><div class="line"><a name="l00473"></a><span class="lineno">  473</span>&#160;    std::vector&lt;T&gt; outputExpectedData =</div><div class="line"><a name="l00474"></a><span class="lineno">  474</span>&#160;    {</div><div class="line"><a name="l00475"></a><span class="lineno">  475</span>&#160;        1, 2, 3,</div><div class="line"><a name="l00476"></a><span class="lineno">  476</span>&#160;        4, 5, 6,</div><div class="line"><a name="l00477"></a><span class="lineno">  477</span>&#160;</div><div class="line"><a name="l00478"></a><span class="lineno">  478</span>&#160;        7, 8, 9,</div><div class="line"><a name="l00479"></a><span class="lineno">  479</span>&#160;        10, 11, 12,</div><div class="line"><a name="l00480"></a><span class="lineno">  480</span>&#160;</div><div class="line"><a name="l00481"></a><span class="lineno">  481</span>&#160;</div><div class="line"><a name="l00482"></a><span class="lineno">  482</span>&#160;        25, 26, 27,</div><div class="line"><a name="l00483"></a><span class="lineno">  483</span>&#160;        28, 29, 30,</div><div class="line"><a name="l00484"></a><span class="lineno">  484</span>&#160;</div><div class="line"><a name="l00485"></a><span class="lineno">  485</span>&#160;        31, 32, 33,</div><div class="line"><a name="l00486"></a><span class="lineno">  486</span>&#160;        34, 35, 36,</div><div class="line"><a name="l00487"></a><span class="lineno">  487</span>&#160;</div><div class="line"><a name="l00488"></a><span class="lineno">  488</span>&#160;</div><div class="line"><a name="l00489"></a><span class="lineno">  489</span>&#160;</div><div class="line"><a name="l00490"></a><span class="lineno">  490</span>&#160;        13, 14, 15,</div><div class="line"><a name="l00491"></a><span class="lineno">  491</span>&#160;        16, 17, 18,</div><div class="line"><a name="l00492"></a><span class="lineno">  492</span>&#160;</div><div class="line"><a name="l00493"></a><span class="lineno">  493</span>&#160;        19, 20, 21,</div><div class="line"><a name="l00494"></a><span class="lineno">  494</span>&#160;        22, 23, 24,</div><div class="line"><a name="l00495"></a><span class="lineno">  495</span>&#160;</div><div class="line"><a name="l00496"></a><span class="lineno">  496</span>&#160;</div><div class="line"><a name="l00497"></a><span class="lineno">  497</span>&#160;        37, 38, 39,</div><div class="line"><a name="l00498"></a><span class="lineno">  498</span>&#160;        40, 41, 42,</div><div class="line"><a name="l00499"></a><span class="lineno">  499</span>&#160;</div><div class="line"><a name="l00500"></a><span class="lineno">  500</span>&#160;        43, 44, 45,</div><div class="line"><a name="l00501"></a><span class="lineno">  501</span>&#160;        46, 47, 48</div><div class="line"><a name="l00502"></a><span class="lineno">  502</span>&#160;</div><div class="line"><a name="l00503"></a><span class="lineno">  503</span>&#160;    };</div><div class="line"><a name="l00504"></a><span class="lineno">  504</span>&#160;</div><div class="line"><a name="l00505"></a><span class="lineno">  505</span>&#160;    <span class="keywordflow">return</span> StackTestHelper&lt;ArmnnType, T, 5&gt;(</div><div class="line"><a name="l00506"></a><span class="lineno">  506</span>&#160;        workloadFactory,</div><div class="line"><a name="l00507"></a><span class="lineno">  507</span>&#160;        memoryManager,</div><div class="line"><a name="l00508"></a><span class="lineno">  508</span>&#160;        tensorHandleFactory,</div><div class="line"><a name="l00509"></a><span class="lineno">  509</span>&#160;        inputTensorInfo,</div><div class="line"><a name="l00510"></a><span class="lineno">  510</span>&#160;        outputTensorInfo,</div><div class="line"><a name="l00511"></a><span class="lineno">  511</span>&#160;        1U,</div><div class="line"><a name="l00512"></a><span class="lineno">  512</span>&#160;        inputData,</div><div class="line"><a name="l00513"></a><span class="lineno">  513</span>&#160;        outputExpectedData</div><div class="line"><a name="l00514"></a><span class="lineno">  514</span>&#160;    );</div><div class="line"><a name="l00515"></a><span class="lineno">  515</span>&#160;}</div><div class="ttc" id="classarmnn_1_1_tensor_info_xhtml"><div class="ttname"><a href="classarmnn_1_1_tensor_info.xhtml">armnn::TensorInfo</a></div><div class="ttdef"><b>Definition:</b> <a href="_tensor_8hpp_source.xhtml#l00152">Tensor.hpp:152</a></div></div>
</div><!-- fragment -->
</div>
</div>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="dir_68267d1309a1af8e8297ef4c3efbcdba.xhtml">src</a></li><li class="navelem"><a class="el" href="dir_0f3cdec46afbc61a1ded8e1687c9c9a0.xhtml">backends</a></li><li class="navelem"><a class="el" href="dir_797a213d7d01b98ef12d53b0820ea64e.xhtml">backendsCommon</a></li><li class="navelem"><a class="el" href="dir_28bfe507f7e135bdae07c2a6b7f66696.xhtml">test</a></li><li class="navelem"><a class="el" href="dir_99a30439342d160875b21dac3498ad7f.xhtml">layerTests</a></li><li class="navelem"><a class="el" href="_stack_test_impl_8cpp.xhtml">StackTestImpl.cpp</a></li>
    <li class="footer">Generated on Wed Mar 9 2022 12:01:06 for ArmNN by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.13 </li>
  </ul>
</div>
</body>
</html>
