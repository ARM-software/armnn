<!-- Copyright (c) 2020 ARM Limited. -->
<!--                                 -->
<!-- SPDX-License-Identifier: MIT    -->
<!--                                 -->
<!-- HTML header for doxygen 1.8.13-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.13"/>
<meta name="robots" content="NOINDEX, NOFOLLOW" />
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>ArmNN: tests/TfLiteMobileNetQuantizedSoftmax-Armnn/TfLiteMobileNetQuantizedSoftmax-Armnn.cpp File Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script><script type="text/javascript" src="http://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="stylesheet.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <img alt="ArmNN" src="Arm_NN_horizontal_blue.png" style="max-width: 10rem; margin-top: .5rem; margin-left 10px"/>
  <td style="padding-left: 0.5em;">
   <div id="projectname">
   &#160;<span id="projectnumber">22.05</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.13 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
$(document).ready(function(){initNavTree('_tf_lite_mobile_net_quantized_softmax-_armnn_8cpp.xhtml','');});
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="summary">
<a href="#func-members">Functions</a>  </div>
  <div class="headertitle">
<div class="title">TfLiteMobileNetQuantizedSoftmax-Armnn.cpp File Reference</div>  </div>
</div><!--header-->
<div class="contents">
<div class="textblock"><code>#include &quot;<a class="el" href="_inference_test_8hpp_source.xhtml">../InferenceTest.hpp</a>&quot;</code><br />
<code>#include &quot;<a class="el" href="_image_preprocessor_8hpp_source.xhtml">../ImagePreprocessor.hpp</a>&quot;</code><br />
<code>#include &quot;<a class="el" href="_i_tf_lite_parser_8hpp_source.xhtml">armnnTfLiteParser/ITfLiteParser.hpp</a>&quot;</code><br />
</div>
<p><a href="_tf_lite_mobile_net_quantized_softmax-_armnn_8cpp_source.xhtml">Go to the source code of this file.</a></p>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="func-members"></a>
Functions</h2></td></tr>
<tr class="memitem:a0ddf1224851353fc92bfbff6f499fa97"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_tf_lite_mobile_net_quantized_softmax-_armnn_8cpp.xhtml#a0ddf1224851353fc92bfbff6f499fa97">main</a> (int argc, char *argv[])</td></tr>
<tr class="separator:a0ddf1224851353fc92bfbff6f499fa97"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<h2 class="groupheader">Function Documentation</h2>
<a id="a0ddf1224851353fc92bfbff6f499fa97"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a0ddf1224851353fc92bfbff6f499fa97">&#9670;&nbsp;</a></span>main()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int main </td>
          <td>(</td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>argc</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">char *&#160;</td>
          <td class="paramname"><em>argv</em>[]&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_tf_lite_mobile_net_quantized_softmax-_armnn_8cpp_source.xhtml#l00011">11</a> of file <a class="el" href="_tf_lite_mobile_net_quantized_softmax-_armnn_8cpp_source.xhtml">TfLiteMobileNetQuantizedSoftmax-Armnn.cpp</a>.</p>

<p class="reference">References <a class="el" href="_inference_test_8inl_source.xhtml#l00362">armnn::test::ClassifierInferenceTestMain()</a>.</p>
<div class="fragment"><div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;{</div><div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;    <span class="keywordtype">int</span> retVal = EXIT_FAILURE;</div><div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;    <span class="keywordflow">try</span></div><div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;    {</div><div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;        <span class="comment">// Coverity fix: The following code may throw an exception of type std::length_error.</span></div><div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;        <span class="comment">// The model we are using incorrectly classifies the images</span></div><div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;        <span class="comment">// But can still be used for benchmarking the layers.</span></div><div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;        std::vector&lt;ImageSet&gt; imageSet =</div><div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;                {</div><div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;                        {<span class="stringliteral">&quot;Dog.jpg&quot;</span>, 789},</div><div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;                        {<span class="stringliteral">&quot;Cat.jpg&quot;</span>, 592},</div><div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;                        {<span class="stringliteral">&quot;shark.jpg&quot;</span>, 755},</div><div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;                };</div><div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;</div><div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;        <a class="code" href="classarmnn_1_1_tensor_shape.xhtml">armnn::TensorShape</a> inputTensorShape({ 1, 128, 128, 3 });</div><div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;</div><div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;        <span class="keyword">using</span> <a class="code" href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6">DataType</a> = uint8_t;</div><div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;        <span class="keyword">using</span> DatabaseType = <a class="code" href="class_image_preprocessor.xhtml">ImagePreprocessor&lt;DataType&gt;</a>;</div><div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;        <span class="keyword">using</span> ParserType = <a class="code" href="classarmnn_tf_lite_parser_1_1_i_tf_lite_parser.xhtml">armnnTfLiteParser::ITfLiteParser</a>;</div><div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;        <span class="keyword">using</span> ModelType = <a class="code" href="class_inference_model.xhtml">InferenceModel&lt;ParserType, DataType&gt;</a>;</div><div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;</div><div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;        <span class="comment">// Coverity fix: ClassifierInferenceTestMain() may throw uncaught exceptions.</span></div><div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;        retVal = <a class="code" href="namespacearmnn_1_1test.xhtml#a47dfae02e22fcca1b6b784873b0328d9">armnn::test::ClassifierInferenceTestMain</a>&lt;DatabaseType,</div><div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;                ParserType&gt;(</div><div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;                argc, argv,</div><div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;                <span class="stringliteral">&quot;mobilenet_v1_0.25_128_quant.tflite&quot;</span>, <span class="comment">// model name</span></div><div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;                <span class="keyword">true</span>,                      <span class="comment">// model is binary</span></div><div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;                <span class="stringliteral">&quot;input&quot;</span>,      <span class="comment">// input tensor name</span></div><div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;                <span class="stringliteral">&quot;MobilenetV1/Predictions/Reshape_1&quot;</span>,        <span class="comment">// output tensor name</span></div><div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;                { 0, 1, 2 },               <span class="comment">// test images to test with as above</span></div><div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;                [&amp;imageSet](<span class="keyword">const</span> <span class="keywordtype">char</span>* dataDir, <span class="keyword">const</span> ModelType &amp;) {</div><div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;                    <span class="comment">// we need to get the input quantization parameters from</span></div><div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;                    <span class="comment">// the parsed model</span></div><div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;                    <span class="keywordflow">return</span> DatabaseType(</div><div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;                            dataDir,</div><div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;                            128,</div><div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;                            128,</div><div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;                            imageSet,</div><div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;                            1,</div><div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;                            {{0, 0, 0}},</div><div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;                            {{1, 1, 1}},</div><div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;                            DatabaseType::DataFormat::NCHW,</div><div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;                            1);</div><div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;                },</div><div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;                &amp;inputTensorShape);</div><div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;    }</div><div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;    <span class="keywordflow">catch</span> (<span class="keyword">const</span> std::exception&amp; e)</div><div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;    {</div><div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;        <span class="comment">// Coverity fix: BOOST_LOG_TRIVIAL (typically used to report errors) may throw an</span></div><div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;        <span class="comment">// exception of type std::length_error.</span></div><div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;        <span class="comment">// Using stderr instead in this context as there is no point in nesting try-catch blocks here.</span></div><div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;        std::cerr &lt;&lt; <span class="stringliteral">&quot;WARNING: &quot;</span> &lt;&lt; *argv &lt;&lt; <span class="stringliteral">&quot;: An error has occurred when running &quot;</span></div><div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;                                             <span class="stringliteral">&quot;the classifier inference tests: &quot;</span> &lt;&lt; e.what() &lt;&lt; std::endl;</div><div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;    }</div><div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;    <span class="keywordflow">return</span> retVal;</div><div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;}</div><div class="ttc" id="class_inference_model_xhtml"><div class="ttname"><a href="class_inference_model.xhtml">InferenceModel</a></div><div class="ttdef"><b>Definition:</b> <a href="_inference_model_8hpp_source.xhtml#l00377">InferenceModel.hpp:377</a></div></div>
<div class="ttc" id="classarmnn_tf_lite_parser_1_1_i_tf_lite_parser_xhtml"><div class="ttname"><a href="classarmnn_tf_lite_parser_1_1_i_tf_lite_parser.xhtml">armnnTfLiteParser::ITfLiteParser</a></div><div class="ttdef"><b>Definition:</b> <a href="_i_tf_lite_parser_8hpp_source.xhtml#l00026">ITfLiteParser.hpp:26</a></div></div>
<div class="ttc" id="classarmnn_1_1_tensor_shape_xhtml"><div class="ttname"><a href="classarmnn_1_1_tensor_shape.xhtml">armnn::TensorShape</a></div><div class="ttdef"><b>Definition:</b> <a href="_tensor_8hpp_source.xhtml#l00020">Tensor.hpp:20</a></div></div>
<div class="ttc" id="namespacearmnn_xhtml_ad8ed01ff3ff33333d8e19db4d2818bb6"><div class="ttname"><a href="namespacearmnn.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6">armnn::DataType</a></div><div class="ttdeci">DataType</div><div class="ttdef"><b>Definition:</b> <a href="_types_8hpp_source.xhtml#l00048">Types.hpp:48</a></div></div>
<div class="ttc" id="namespacearmnn_1_1test_xhtml_a47dfae02e22fcca1b6b784873b0328d9"><div class="ttname"><a href="namespacearmnn_1_1test.xhtml#a47dfae02e22fcca1b6b784873b0328d9">armnn::test::ClassifierInferenceTestMain</a></div><div class="ttdeci">int ClassifierInferenceTestMain(int argc, char *argv[], const char *modelFilename, bool isModelBinary, const char *inputBindingName, const char *outputBindingName, const std::vector&lt; unsigned int &gt; &amp;defaultTestCaseIds, TConstructDatabaseCallable constructDatabase, const armnn::TensorShape *inputTensorShape=nullptr)</div><div class="ttdef"><b>Definition:</b> <a href="_inference_test_8inl_source.xhtml#l00362">InferenceTest.inl:362</a></div></div>
<div class="ttc" id="class_image_preprocessor_xhtml"><div class="ttname"><a href="class_image_preprocessor.xhtml">ImagePreprocessor</a></div><div class="ttdef"><b>Definition:</b> <a href="_image_preprocessor_8hpp_source.xhtml#l00020">ImagePreprocessor.hpp:20</a></div></div>
</div><!-- fragment -->
</div>
</div>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="dir_59425e443f801f1f2fd8bbe4959a3ccf.xhtml">tests</a></li><li class="navelem"><a class="el" href="dir_5b37c868d8ac40f3f76299adcfed0b6d.xhtml">TfLiteMobileNetQuantizedSoftmax-Armnn</a></li><li class="navelem"><a class="el" href="_tf_lite_mobile_net_quantized_softmax-_armnn_8cpp.xhtml">TfLiteMobileNetQuantizedSoftmax-Armnn.cpp</a></li>
    <li class="footer">Generated on Tue May 24 2022 11:27:20 for ArmNN by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.13 </li>
  </ul>
</div>
</body>
</html>
