<!-- Copyright (c) 2020 ARM Limited. -->
<!--                                 -->
<!-- SPDX-License-Identifier: MIT    -->
<!--                                 -->
<!-- HTML header for doxygen 1.8.13-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.13"/>
<meta name="robots" content="NOINDEX, NOFOLLOW" />
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>ArmNN: src/armnn/test/ProfilingEventTest.cpp File Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script><script type="text/javascript" src="http://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="stylesheet.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <img alt="ArmNN" src="Arm_NN_horizontal_blue.png" style="max-width: 10rem; margin-top: .5rem; margin-left 10px"/>
  <td style="padding-left: 0.5em;">
   <div id="projectname">
   &#160;<span id="projectnumber">22.08</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.13 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
$(document).ready(function(){initNavTree('_profiling_event_test_8cpp.xhtml','');});
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="summary">
<a href="#func-members">Functions</a>  </div>
  <div class="headertitle">
<div class="title">ProfilingEventTest.cpp File Reference</div>  </div>
</div><!--header-->
<div class="contents">
<div class="textblock"><code>#include &lt;doctest/doctest.h&gt;</code><br />
<code>#include &quot;<a class="el" href="_profiling_event_8hpp_source.xhtml">ProfilingEvent.hpp</a>&quot;</code><br />
<code>#include &quot;<a class="el" href="_profiling_8hpp_source.xhtml">Profiling.hpp</a>&quot;</code><br />
<code>#include &lt;thread&gt;</code><br />
</div>
<p><a href="_profiling_event_test_8cpp_source.xhtml">Go to the source code of this file.</a></p>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="func-members"></a>
Functions</h2></td></tr>
<tr class="memitem:a65e8efbb5e893c295e43b4a483bba1f2"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="_profiling_event_test_8cpp.xhtml#a65e8efbb5e893c295e43b4a483bba1f2">TEST_SUITE</a> (&quot;ProfilingEvent&quot;)</td></tr>
<tr class="separator:a65e8efbb5e893c295e43b4a483bba1f2"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<h2 class="groupheader">Function Documentation</h2>
<a id="a65e8efbb5e893c295e43b4a483bba1f2"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a65e8efbb5e893c295e43b4a483bba1f2">&#9670;&nbsp;</a></span>TEST_SUITE()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">TEST_SUITE </td>
          <td>(</td>
          <td class="paramtype">&quot;ProfilingEvent&quot;&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_profiling_event_test_8cpp_source.xhtml#l00015">15</a> of file <a class="el" href="_profiling_event_test_8cpp_source.xhtml">ProfilingEventTest.cpp</a>.</p>

<p class="reference">References <a class="el" href="namespacearmnn.xhtml#ae2f04a162585c0a5222a537efd5456aea39f8662ca778258e9c6a14f26fec5ec1">armnn::CpuAcc</a>, <a class="el" href="_profiling_8cpp_source.xhtml#l00572">ProfilerManager::GetInstance()</a>, <a class="el" href="_profiling_event_8cpp_source.xhtml#l00056">Event::GetMeasurements()</a>, <a class="el" href="_profiling_event_8cpp_source.xhtml#l00069">Event::GetName()</a>, <a class="el" href="_profiling_event_8cpp_source.xhtml#l00079">Event::GetParentEvent()</a>, <a class="el" href="_profiling_8cpp_source.xhtml#l00584">ProfilerManager::GetProfiler()</a>, <a class="el" href="namespacearmnn.xhtml#ae2f04a162585c0a5222a537efd5456aeafaa4524e3df19ada32643ce9a222362b">armnn::GpuAcc</a>, <a class="el" href="_profiling_event_8cpp_source.xhtml#l00040">Event::Start()</a>, and <a class="el" href="_profiling_event_8cpp_source.xhtml#l00048">Event::Stop()</a>.</p>
<div class="fragment"><div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;{</div><div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;TEST_CASE(<span class="stringliteral">&quot;ProfilingEventTest&quot;</span>)</div><div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;{</div><div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;    <span class="comment">// Get a reference to the profiler manager.</span></div><div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;    <a class="code" href="classarmnn_1_1_profiler_manager.xhtml">armnn::ProfilerManager</a>&amp; profileManager = <a class="code" href="classarmnn_1_1_profiler_manager.xhtml#a93857080c2523bf3395e7aa7e6024d5c">armnn::ProfilerManager::GetInstance</a>();</div><div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;</div><div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">char</span>* eventName = <span class="stringliteral">&quot;EventName&quot;</span>;</div><div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;</div><div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;    <a class="code" href="classarmnn_1_1_event.xhtml#a6e9642e693a4c5b8f1b8259844ef4feb">Event::Instruments</a> insts1;</div><div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;    insts1.emplace_back(std::make_unique&lt;WallClockTimer&gt;());</div><div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;    <a class="code" href="classarmnn_1_1_event.xhtml">Event</a> testEvent(eventName,</div><div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;                    <span class="keyword">nullptr</span>,</div><div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;                    <span class="keyword">nullptr</span>,</div><div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;                    <a class="code" href="classarmnn_1_1_backend_id.xhtml">BackendId</a>(),</div><div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;                    std::move(insts1),</div><div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;                    <a class="code" href="structarmnn_1_1_empty_optional.xhtml">EmptyOptional</a>());</div><div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;</div><div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;    CHECK_EQ(testEvent.GetName(), <span class="stringliteral">&quot;EventName&quot;</span>);</div><div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;</div><div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;    <span class="comment">// start the timer - outer</span></div><div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;    testEvent.Start();</div><div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;</div><div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;    <span class="comment">// wait for 10 microseconds</span></div><div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;    std::this_thread::sleep_for(std::chrono::microseconds(10));</div><div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;</div><div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;    <span class="comment">// stop the timer - outer</span></div><div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;    testEvent.Stop();</div><div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;</div><div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;    CHECK_GE(testEvent.GetMeasurements().front().m_Value, 10.0);</div><div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;</div><div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;    <span class="comment">// create a sub event with CpuAcc</span></div><div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;    <a class="code" href="classarmnn_1_1_backend_id.xhtml">BackendId</a> cpuAccBackendId(Compute::CpuAcc);</div><div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;    <a class="code" href="classarmnn_1_1_event.xhtml#a6e9642e693a4c5b8f1b8259844ef4feb">Event::Instruments</a> insts2;</div><div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;    insts2.emplace_back(std::make_unique&lt;WallClockTimer&gt;());</div><div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;    <a class="code" href="classarmnn_1_1_event.xhtml">Event</a> testEvent2(eventName,</div><div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;                     profileManager.<a class="code" href="classarmnn_1_1_profiler_manager.xhtml#a3756986bc88b9b212d3f983c70c5c129">GetProfiler</a>(),</div><div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;                     &amp;testEvent,</div><div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;                     cpuAccBackendId,</div><div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;                     std::move(insts2),</div><div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;                     <a class="code" href="structarmnn_1_1_empty_optional.xhtml">EmptyOptional</a>());</div><div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;</div><div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;    CHECK_EQ(&amp;testEvent, testEvent2.GetParentEvent());</div><div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;    CHECK_EQ(profileManager.<a class="code" href="classarmnn_1_1_profiler_manager.xhtml#a3756986bc88b9b212d3f983c70c5c129">GetProfiler</a>(), testEvent2.GetProfiler());</div><div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;    CHECK(cpuAccBackendId == testEvent2.GetBackendId());</div><div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;}</div><div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;</div><div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;TEST_CASE(<span class="stringliteral">&quot;ProfilingEventTestOnGpuAcc&quot;</span>)</div><div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;{</div><div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;    <span class="comment">// Get a reference to the profiler manager.</span></div><div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;    <a class="code" href="classarmnn_1_1_profiler_manager.xhtml">armnn::ProfilerManager</a>&amp; profileManager = <a class="code" href="classarmnn_1_1_profiler_manager.xhtml#a93857080c2523bf3395e7aa7e6024d5c">armnn::ProfilerManager::GetInstance</a>();</div><div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;</div><div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">char</span>* eventName = <span class="stringliteral">&quot;GPUEvent&quot;</span>;</div><div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;</div><div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;    <a class="code" href="classarmnn_1_1_event.xhtml#a6e9642e693a4c5b8f1b8259844ef4feb">Event::Instruments</a> insts1;</div><div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;    insts1.emplace_back(std::make_unique&lt;WallClockTimer&gt;());</div><div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;    <a class="code" href="classarmnn_1_1_event.xhtml">Event</a> testEvent(eventName,</div><div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;                    <span class="keyword">nullptr</span>,</div><div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;                    <span class="keyword">nullptr</span>,</div><div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;                    <a class="code" href="classarmnn_1_1_backend_id.xhtml">BackendId</a>(),</div><div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;                    std::move(insts1),</div><div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;                    <a class="code" href="structarmnn_1_1_empty_optional.xhtml">EmptyOptional</a>());</div><div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;</div><div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;    CHECK_EQ(testEvent.GetName(), <span class="stringliteral">&quot;GPUEvent&quot;</span>);</div><div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;</div><div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;    <span class="comment">// start the timer - outer</span></div><div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;    testEvent.Start();</div><div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;</div><div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;    <span class="comment">// wait for 10 microseconds</span></div><div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;    std::this_thread::sleep_for(std::chrono::microseconds(10));</div><div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;</div><div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;    <span class="comment">// stop the timer - outer</span></div><div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;    testEvent.Stop();</div><div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;</div><div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;    CHECK_GE(testEvent.GetMeasurements().front().m_Value, 10.0);</div><div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;</div><div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;    <span class="comment">// create a sub event</span></div><div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;    <a class="code" href="classarmnn_1_1_backend_id.xhtml">BackendId</a> gpuAccBackendId(Compute::GpuAcc);</div><div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;    <a class="code" href="classarmnn_1_1_event.xhtml#a6e9642e693a4c5b8f1b8259844ef4feb">Event::Instruments</a> insts2;</div><div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;    insts2.emplace_back(std::make_unique&lt;WallClockTimer&gt;());</div><div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;    <a class="code" href="classarmnn_1_1_event.xhtml">Event</a> testEvent2(eventName,</div><div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;                     profileManager.<a class="code" href="classarmnn_1_1_profiler_manager.xhtml#a3756986bc88b9b212d3f983c70c5c129">GetProfiler</a>(),</div><div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;                     &amp;testEvent,</div><div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;                     gpuAccBackendId,</div><div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;                     std::move(insts2),</div><div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;                     <a class="code" href="structarmnn_1_1_empty_optional.xhtml">EmptyOptional</a>());</div><div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;</div><div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;    CHECK_EQ(&amp;testEvent, testEvent2.GetParentEvent());</div><div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;    CHECK_EQ(profileManager.<a class="code" href="classarmnn_1_1_profiler_manager.xhtml#a3756986bc88b9b212d3f983c70c5c129">GetProfiler</a>(), testEvent2.GetProfiler());</div><div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;    CHECK(gpuAccBackendId == testEvent2.GetBackendId());</div><div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;}</div><div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;</div><div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;}</div><div class="ttc" id="classarmnn_1_1_event_xhtml"><div class="ttname"><a href="classarmnn_1_1_event.xhtml">armnn::Event</a></div><div class="ttdoc">Event class records measurements reported by BeginEvent()/EndEvent() and returns measurements when Ev...</div><div class="ttdef"><b>Definition:</b> <a href="_profiling_event_8hpp_source.xhtml#l00027">ProfilingEvent.hpp:27</a></div></div>
<div class="ttc" id="classarmnn_1_1_profiler_manager_xhtml_a93857080c2523bf3395e7aa7e6024d5c"><div class="ttname"><a href="classarmnn_1_1_profiler_manager.xhtml#a93857080c2523bf3395e7aa7e6024d5c">armnn::ProfilerManager::GetInstance</a></div><div class="ttdeci">static ProfilerManager &amp; GetInstance()</div><div class="ttdef"><b>Definition:</b> <a href="_profiling_8cpp_source.xhtml#l00572">Profiling.cpp:572</a></div></div>
<div class="ttc" id="classarmnn_1_1_event_xhtml_a6e9642e693a4c5b8f1b8259844ef4feb"><div class="ttname"><a href="classarmnn_1_1_event.xhtml#a6e9642e693a4c5b8f1b8259844ef4feb">armnn::Event::Instruments</a></div><div class="ttdeci">std::vector&lt; InstrumentPtr &gt; Instruments</div><div class="ttdef"><b>Definition:</b> <a href="_profiling_event_8hpp_source.xhtml#l00031">ProfilingEvent.hpp:31</a></div></div>
<div class="ttc" id="classarmnn_1_1_profiler_manager_xhtml_a3756986bc88b9b212d3f983c70c5c129"><div class="ttname"><a href="classarmnn_1_1_profiler_manager.xhtml#a3756986bc88b9b212d3f983c70c5c129">armnn::ProfilerManager::GetProfiler</a></div><div class="ttdeci">IProfiler * GetProfiler()</div><div class="ttdef"><b>Definition:</b> <a href="_profiling_8cpp_source.xhtml#l00584">Profiling.cpp:584</a></div></div>
<div class="ttc" id="classarmnn_1_1_profiler_manager_xhtml"><div class="ttname"><a href="classarmnn_1_1_profiler_manager.xhtml">armnn::ProfilerManager</a></div><div class="ttdef"><b>Definition:</b> <a href="_profiling_8hpp_source.xhtml#l00111">Profiling.hpp:111</a></div></div>
<div class="ttc" id="structarmnn_1_1_empty_optional_xhtml"><div class="ttname"><a href="structarmnn_1_1_empty_optional.xhtml">armnn::EmptyOptional</a></div><div class="ttdoc">EmptyOptional is used to initialize the Optional class in case we want to have default value for an O...</div><div class="ttdef"><b>Definition:</b> <a href="_optional_8hpp_source.xhtml#l00032">Optional.hpp:32</a></div></div>
<div class="ttc" id="classarmnn_1_1_backend_id_xhtml"><div class="ttname"><a href="classarmnn_1_1_backend_id.xhtml">armnn::BackendId</a></div><div class="ttdef"><b>Definition:</b> <a href="_backend_id_8hpp_source.xhtml#l00075">BackendId.hpp:75</a></div></div>
</div><!-- fragment -->
</div>
</div>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="dir_68267d1309a1af8e8297ef4c3efbcdba.xhtml">src</a></li><li class="navelem"><a class="el" href="dir_e0a84d05c80a2ef4231141dcbbeac5c8.xhtml">armnn</a></li><li class="navelem"><a class="el" href="dir_9d86fd1fbecbedf5bdb69c7e7235fe5f.xhtml">test</a></li><li class="navelem"><a class="el" href="_profiling_event_test_8cpp.xhtml">ProfilingEventTest.cpp</a></li>
    <li class="footer">Generated on Fri Aug 19 2022 14:38:31 for ArmNN by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.13 </li>
  </ul>
</div>
</body>
</html>
