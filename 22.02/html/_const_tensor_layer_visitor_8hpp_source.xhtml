<!-- Copyright (c) 2020 ARM Limited. -->
<!--                                 -->
<!-- SPDX-License-Identifier: MIT    -->
<!--                                 -->
<!-- HTML header for doxygen 1.8.13-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.13"/>
<meta name="robots" content="NOINDEX, NOFOLLOW" />
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>ArmNN: src/armnn/test/ConstTensorLayerVisitor.hpp Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script><script type="text/javascript" src="http://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="stylesheet.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <img alt="ArmNN" src="Arm_NN_horizontal_blue.png" style="max-width: 10rem; margin-top: .5rem; margin-left 10px"/>
  <td style="padding-left: 0.5em;">
   <div id="projectname">
   &#160;<span id="projectnumber">22.02</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.13 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
$(document).ready(function(){initNavTree('_const_tensor_layer_visitor_8hpp_source.xhtml','');});
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="headertitle">
<div class="title">ConstTensorLayerVisitor.hpp</div>  </div>
</div><!--header-->
<div class="contents">
<a href="_const_tensor_layer_visitor_8hpp.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="comment">//</span></div><div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="comment">// Copyright Â© 2017 Arm Ltd. All rights reserved.</span></div><div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="comment">// SPDX-License-Identifier: MIT</span></div><div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="comment">//</span></div><div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="preprocessor">#pragma once</span></div><div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;</div><div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_test_layer_visitor_8hpp.xhtml">TestLayerVisitor.hpp</a>&quot;</span></div><div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_layers_fwd_8hpp.xhtml">LayersFwd.hpp</a>&quot;</span></div><div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="preprocessor">#include &lt;<a class="code" href="_descriptors_8hpp.xhtml">armnn/Descriptors.hpp</a>&gt;</span></div><div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="preprocessor">#include &lt;<a class="code" href="_lstm_params_8hpp.xhtml">armnn/LstmParams.hpp</a>&gt;</span></div><div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;<span class="preprocessor">#include &lt;<a class="code" href="_quantized_lstm_params_8hpp.xhtml">armnn/QuantizedLstmParams.hpp</a>&gt;</span></div><div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;<span class="preprocessor">#include &lt;<a class="code" href="_polymorphic_downcast_8hpp.xhtml">armnn/utility/PolymorphicDowncast.hpp</a>&gt;</span></div><div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;<span class="preprocessor">#include &lt;<a class="code" href="include_2armnn_2backends_2_tensor_handle_8hpp.xhtml">armnn/backends/TensorHandle.hpp</a>&gt;</span></div><div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;</div><div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;<span class="preprocessor">#include &lt;doctest/doctest.h&gt;</span></div><div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;</div><div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;<span class="keyword">namespace </span><a class="code" href="namespacearmnn.xhtml">armnn</a></div><div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;{</div><div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;</div><div class="line"><a name="l00020"></a><span class="lineno"><a class="line" href="classarmnn_1_1_test_convolution2d_layer_visitor.xhtml">   20</a></span>&#160;<span class="keyword">class </span><a class="code" href="classarmnn_1_1_test_convolution2d_layer_visitor.xhtml">TestConvolution2dLayerVisitor</a> : <span class="keyword">public</span> <a class="code" href="classarmnn_1_1_test_layer_visitor.xhtml">TestLayerVisitor</a></div><div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;{</div><div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;<span class="keyword">public</span>:</div><div class="line"><a name="l00023"></a><span class="lineno"><a class="line" href="classarmnn_1_1_test_convolution2d_layer_visitor.xhtml#aaf33927bcb93fa77d08e4bd547c481d9">   23</a></span>&#160;    <span class="keyword">explicit</span> <a class="code" href="classarmnn_1_1_test_convolution2d_layer_visitor.xhtml#aaf33927bcb93fa77d08e4bd547c481d9">TestConvolution2dLayerVisitor</a>(<span class="keyword">const</span> <a class="code" href="structarmnn_1_1_convolution2d_descriptor.xhtml">Convolution2dDescriptor</a>&amp; convolution2dDescriptor,</div><div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;                                           <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_const_tensor.xhtml">ConstTensor</a>&amp; weights,</div><div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;                                           <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_optional.xhtml">Optional&lt;ConstTensor&gt;</a>&amp; biases,</div><div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;                                           <span class="keyword">const</span> <span class="keywordtype">char</span>* name = <span class="keyword">nullptr</span>)</div><div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;        : <a class="code" href="classarmnn_1_1_test_layer_visitor.xhtml">TestLayerVisitor</a>(name)</div><div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;        , m_Descriptor(convolution2dDescriptor)</div><div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;        , m_Weights(weights)</div><div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;        , m_Biases(biases)</div><div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;    {}</div><div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;</div><div class="line"><a name="l00033"></a><span class="lineno"><a class="line" href="classarmnn_1_1_test_convolution2d_layer_visitor.xhtml#a4695ae76f4755027c44036cb10d8705c">   33</a></span>&#160;    <span class="keyword">virtual</span> <a class="code" href="classarmnn_1_1_test_convolution2d_layer_visitor.xhtml#a4695ae76f4755027c44036cb10d8705c">~TestConvolution2dLayerVisitor</a>() {}</div><div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;</div><div class="line"><a name="l00035"></a><span class="lineno"><a class="line" href="classarmnn_1_1_test_convolution2d_layer_visitor.xhtml#a49f7f1098adb86fd2197d9aee3924de2">   35</a></span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classarmnn_1_1_test_convolution2d_layer_visitor.xhtml#a49f7f1098adb86fd2197d9aee3924de2">ExecuteStrategy</a>(<span class="keyword">const</span> <a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml">armnn::IConnectableLayer</a>* layer,</div><div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;                             <span class="keyword">const</span> <a class="code" href="structarmnn_1_1_base_descriptor.xhtml">armnn::BaseDescriptor</a>&amp; descriptor,</div><div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;                             <span class="keyword">const</span> std::vector&lt;armnn::ConstTensor&gt;&amp; constants,</div><div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;                             <span class="keyword">const</span> <span class="keywordtype">char</span>* name,</div><div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;                             <span class="keyword">const</span> <a class="code" href="namespacearmnn.xhtml#ab8cf8f9fb6792e654c2d8d8382f6f01b">armnn::LayerBindingId</a> <span class="keywordtype">id</span> = 0)<span class="keyword"> override</span></div><div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;<span class="keyword">    </span>{</div><div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;        <a class="code" href="namespacearmnn.xhtml#a44affeeb090c3c6a3062830562672e84">armnn::IgnoreUnused</a>(descriptor, constants, <span class="keywordtype">id</span>);</div><div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;        <span class="keywordflow">switch</span> (layer-&gt;<a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml#adceb04ae84c524e4d01881e3754a4d59">GetType</a>())</div><div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;        {</div><div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;            <span class="keywordflow">case</span> <a class="code" href="namespacearmnn.xhtml#a56943a0946e5f15e5e58054b8e7a04a4adb033d2f81b68f9a17e8f62de69fed4a">armnn::LayerType::Convolution2d</a>:</div><div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;            {</div><div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;                <a class="code" href="classarmnn_1_1_test_layer_visitor.xhtml#a3fb243351836fe2feebd36e7e3869154">CheckLayerPointer</a>(layer);</div><div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;                <a class="code" href="classarmnn_1_1_test_layer_visitor.xhtml#a50d9ed2d05fac25795824c880f0eee6b">CheckLayerName</a>(name);</div><div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;                <a class="code" href="classarmnn_1_1_test_convolution2d_layer_visitor.xhtml#ac8b078bb166c52b45f04cae3e74557ad">CheckDescriptor</a>(static_cast&lt;const armnn::Convolution2dDescriptor&amp;&gt;(descriptor));</div><div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;                <a class="code" href="classarmnn_1_1_test_layer_visitor.xhtml#ab49c9a185af94e39ae9cd81aa8ec926c">CheckConstTensors</a>(m_Weights, constants[0]);</div><div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;                <span class="keywordflow">if</span> (m_Biases.has_value())</div><div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;                {</div><div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;                    CHECK(constants.size() == 2);</div><div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;                    <a class="code" href="classarmnn_1_1_test_layer_visitor.xhtml#ab49c9a185af94e39ae9cd81aa8ec926c">CheckConstTensors</a>(m_Biases.value(), constants[1]);</div><div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;                }</div><div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;                <span class="keywordflow">break</span>;</div><div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;            }</div><div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;            <span class="keywordflow">default</span>:</div><div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;            {</div><div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;                <a class="code" href="classarmnn_1_1_strategy_base.xhtml#a9a0391eb40693be520f3092c130c2a57">m_DefaultStrategy</a>.<a class="code" href="structarmnn_1_1_no_throw_strategy.xhtml#a2aca18ff985599b0b917abb4292b8a91">Apply</a>(<a class="code" href="namespacearmnn.xhtml#addb6b14dd1b632263ffe77430259a7c4">GetLayerTypeAsCString</a>(layer-&gt;<a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml#adceb04ae84c524e4d01881e3754a4d59">GetType</a>()));</div><div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;            }</div><div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;        }</div><div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;    }</div><div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;</div><div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;<span class="keyword">protected</span>:</div><div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classarmnn_1_1_test_convolution2d_layer_visitor.xhtml#ac8b078bb166c52b45f04cae3e74557ad">CheckDescriptor</a>(<span class="keyword">const</span> <a class="code" href="structarmnn_1_1_convolution2d_descriptor.xhtml">Convolution2dDescriptor</a>&amp; convolution2dDescriptor);</div><div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;</div><div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;<span class="keyword">private</span>:</div><div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;    <a class="code" href="structarmnn_1_1_convolution2d_descriptor.xhtml">Convolution2dDescriptor</a> m_Descriptor;</div><div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;    <a class="code" href="classarmnn_1_1_const_tensor.xhtml">ConstTensor</a> m_Weights;</div><div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;    <a class="code" href="classarmnn_1_1_optional.xhtml">Optional&lt;ConstTensor&gt;</a> m_Biases;</div><div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;};</div><div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;</div><div class="line"><a name="l00073"></a><span class="lineno"><a class="line" href="classarmnn_1_1_test_depthwise_convolution2d_layer_visitor.xhtml">   73</a></span>&#160;<span class="keyword">class </span><a class="code" href="classarmnn_1_1_test_depthwise_convolution2d_layer_visitor.xhtml">TestDepthwiseConvolution2dLayerVisitor</a> : <span class="keyword">public</span> <a class="code" href="classarmnn_1_1_test_layer_visitor.xhtml">TestLayerVisitor</a></div><div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;{</div><div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;<span class="keyword">public</span>:</div><div class="line"><a name="l00076"></a><span class="lineno"><a class="line" href="classarmnn_1_1_test_depthwise_convolution2d_layer_visitor.xhtml#a4b830ea7321e27826a2d2c5c3e9e0105">   76</a></span>&#160;    <span class="keyword">explicit</span> <a class="code" href="classarmnn_1_1_test_depthwise_convolution2d_layer_visitor.xhtml#a4b830ea7321e27826a2d2c5c3e9e0105">TestDepthwiseConvolution2dLayerVisitor</a>(<span class="keyword">const</span> <a class="code" href="structarmnn_1_1_depthwise_convolution2d_descriptor.xhtml">DepthwiseConvolution2dDescriptor</a>&amp; descriptor,</div><div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;                                                    <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_const_tensor.xhtml">ConstTensor</a>&amp; weights,</div><div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;                                                    <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_optional.xhtml">Optional&lt;ConstTensor&gt;</a>&amp; biases,</div><div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;                                                    <span class="keyword">const</span> <span class="keywordtype">char</span>* name = <span class="keyword">nullptr</span>)</div><div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;        : <a class="code" href="classarmnn_1_1_test_layer_visitor.xhtml">TestLayerVisitor</a>(name)</div><div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;        , m_Descriptor(descriptor)</div><div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;        , m_Weights(weights)</div><div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;        , m_Biases(biases)</div><div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;    {}</div><div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;</div><div class="line"><a name="l00086"></a><span class="lineno"><a class="line" href="classarmnn_1_1_test_depthwise_convolution2d_layer_visitor.xhtml#a3d4d903af45c0c69dfc39d4f193824a0">   86</a></span>&#160;    <span class="keyword">virtual</span> <a class="code" href="classarmnn_1_1_test_depthwise_convolution2d_layer_visitor.xhtml#a3d4d903af45c0c69dfc39d4f193824a0">~TestDepthwiseConvolution2dLayerVisitor</a>() {}</div><div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;</div><div class="line"><a name="l00088"></a><span class="lineno"><a class="line" href="classarmnn_1_1_test_depthwise_convolution2d_layer_visitor.xhtml#a49f7f1098adb86fd2197d9aee3924de2">   88</a></span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classarmnn_1_1_test_depthwise_convolution2d_layer_visitor.xhtml#a49f7f1098adb86fd2197d9aee3924de2">ExecuteStrategy</a>(<span class="keyword">const</span> <a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml">armnn::IConnectableLayer</a>* layer,</div><div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;                         <span class="keyword">const</span> <a class="code" href="structarmnn_1_1_base_descriptor.xhtml">armnn::BaseDescriptor</a>&amp; descriptor,</div><div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;                         <span class="keyword">const</span> std::vector&lt;armnn::ConstTensor&gt;&amp; constants,</div><div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;                         <span class="keyword">const</span> <span class="keywordtype">char</span>* name,</div><div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;                         <span class="keyword">const</span> <a class="code" href="namespacearmnn.xhtml#ab8cf8f9fb6792e654c2d8d8382f6f01b">armnn::LayerBindingId</a> <span class="keywordtype">id</span> = 0)<span class="keyword"> override</span></div><div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;<span class="keyword">    </span>{</div><div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;        <a class="code" href="namespacearmnn.xhtml#a44affeeb090c3c6a3062830562672e84">armnn::IgnoreUnused</a>(descriptor, constants, <span class="keywordtype">id</span>);</div><div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;        <span class="keywordflow">switch</span> (layer-&gt;<a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml#adceb04ae84c524e4d01881e3754a4d59">GetType</a>())</div><div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;        {</div><div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;            <span class="keywordflow">case</span> <a class="code" href="namespacearmnn.xhtml#a56943a0946e5f15e5e58054b8e7a04a4af97adbfc88b7012a0243215b1076e7e7">armnn::LayerType::DepthwiseConvolution2d</a>:</div><div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;            {</div><div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;                <a class="code" href="classarmnn_1_1_test_layer_visitor.xhtml#a3fb243351836fe2feebd36e7e3869154">CheckLayerPointer</a>(layer);</div><div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;                <a class="code" href="classarmnn_1_1_test_layer_visitor.xhtml#a50d9ed2d05fac25795824c880f0eee6b">CheckLayerName</a>(name);</div><div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;                <a class="code" href="classarmnn_1_1_test_convolution2d_layer_visitor.xhtml#ac8b078bb166c52b45f04cae3e74557ad">CheckDescriptor</a>(static_cast&lt;const armnn::DepthwiseConvolution2dDescriptor&amp;&gt;(descriptor));</div><div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;                <a class="code" href="classarmnn_1_1_test_layer_visitor.xhtml#ab49c9a185af94e39ae9cd81aa8ec926c">CheckConstTensors</a>(m_Weights, constants[0]);</div><div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;                <span class="keywordflow">if</span> (m_Biases.has_value())</div><div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;                {</div><div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;                    CHECK(constants.size() == 2);</div><div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;                    <a class="code" href="classarmnn_1_1_test_layer_visitor.xhtml#ab49c9a185af94e39ae9cd81aa8ec926c">CheckConstTensors</a>(m_Biases.value(), constants[1]);</div><div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;                }</div><div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;                <span class="keywordflow">break</span>;</div><div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;            }</div><div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;            <span class="keywordflow">default</span>:</div><div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;            {</div><div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;                <a class="code" href="classarmnn_1_1_strategy_base.xhtml#a9a0391eb40693be520f3092c130c2a57">m_DefaultStrategy</a>.<a class="code" href="structarmnn_1_1_no_throw_strategy.xhtml#a2aca18ff985599b0b917abb4292b8a91">Apply</a>(<a class="code" href="namespacearmnn.xhtml#addb6b14dd1b632263ffe77430259a7c4">GetLayerTypeAsCString</a>(layer-&gt;<a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml#adceb04ae84c524e4d01881e3754a4d59">GetType</a>()));</div><div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;            }</div><div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;        }</div><div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;    }</div><div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;</div><div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;<span class="keyword">protected</span>:</div><div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classarmnn_1_1_test_convolution2d_layer_visitor.xhtml#ac8b078bb166c52b45f04cae3e74557ad">CheckDescriptor</a>(<span class="keyword">const</span> <a class="code" href="structarmnn_1_1_depthwise_convolution2d_descriptor.xhtml">DepthwiseConvolution2dDescriptor</a>&amp; convolution2dDescriptor);</div><div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;</div><div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;<span class="keyword">private</span>:</div><div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;    <a class="code" href="structarmnn_1_1_depthwise_convolution2d_descriptor.xhtml">DepthwiseConvolution2dDescriptor</a> m_Descriptor;</div><div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;    <a class="code" href="classarmnn_1_1_const_tensor.xhtml">ConstTensor</a> m_Weights;</div><div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;    <a class="code" href="classarmnn_1_1_optional.xhtml">Optional&lt;ConstTensor&gt;</a> m_Biases;</div><div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;};</div><div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;</div><div class="line"><a name="l00126"></a><span class="lineno"><a class="line" href="classarmnn_1_1_test_fully_connected_layer_vistor.xhtml">  126</a></span>&#160;<span class="keyword">class </span><a class="code" href="classarmnn_1_1_test_fully_connected_layer_vistor.xhtml">TestFullyConnectedLayerVistor</a> : <span class="keyword">public</span> <a class="code" href="classarmnn_1_1_test_layer_visitor.xhtml">TestLayerVisitor</a></div><div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;{</div><div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;<span class="keyword">public</span>:</div><div class="line"><a name="l00129"></a><span class="lineno"><a class="line" href="classarmnn_1_1_test_fully_connected_layer_vistor.xhtml#a324dca4ce8f4e24698c9c64bb9df447e">  129</a></span>&#160;    <span class="keyword">explicit</span> <a class="code" href="classarmnn_1_1_test_fully_connected_layer_vistor.xhtml#a324dca4ce8f4e24698c9c64bb9df447e">TestFullyConnectedLayerVistor</a>(<span class="keyword">const</span> <a class="code" href="structarmnn_1_1_fully_connected_descriptor.xhtml">FullyConnectedDescriptor</a>&amp; descriptor,</div><div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;                                           <span class="keyword">const</span> <span class="keywordtype">char</span>* name = <span class="keyword">nullptr</span>)</div><div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;        : <a class="code" href="classarmnn_1_1_test_layer_visitor.xhtml">TestLayerVisitor</a>(name)</div><div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;        , m_Descriptor(descriptor)</div><div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;    {}</div><div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;</div><div class="line"><a name="l00135"></a><span class="lineno"><a class="line" href="classarmnn_1_1_test_fully_connected_layer_vistor.xhtml#a02ff0e9c7746d68985fae379fd6f1dfa">  135</a></span>&#160;    <span class="keyword">virtual</span> <a class="code" href="classarmnn_1_1_test_fully_connected_layer_vistor.xhtml#a02ff0e9c7746d68985fae379fd6f1dfa">~TestFullyConnectedLayerVistor</a>() {}</div><div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;</div><div class="line"><a name="l00137"></a><span class="lineno"><a class="line" href="classarmnn_1_1_test_fully_connected_layer_vistor.xhtml#a49f7f1098adb86fd2197d9aee3924de2">  137</a></span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classarmnn_1_1_test_fully_connected_layer_vistor.xhtml#a49f7f1098adb86fd2197d9aee3924de2">ExecuteStrategy</a>(<span class="keyword">const</span> <a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml">armnn::IConnectableLayer</a>* layer,</div><div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;                         <span class="keyword">const</span> <a class="code" href="structarmnn_1_1_base_descriptor.xhtml">armnn::BaseDescriptor</a>&amp; descriptor,</div><div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;                         <span class="keyword">const</span> std::vector&lt;armnn::ConstTensor&gt;&amp; constants,</div><div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;                         <span class="keyword">const</span> <span class="keywordtype">char</span>* name,</div><div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;                         <span class="keyword">const</span> <a class="code" href="namespacearmnn.xhtml#ab8cf8f9fb6792e654c2d8d8382f6f01b">armnn::LayerBindingId</a> <span class="keywordtype">id</span> = 0)<span class="keyword"> override</span></div><div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;<span class="keyword">    </span>{</div><div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;        <a class="code" href="namespacearmnn.xhtml#a44affeeb090c3c6a3062830562672e84">armnn::IgnoreUnused</a>(descriptor, constants, <span class="keywordtype">id</span>);</div><div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;        <span class="keywordflow">switch</span> (layer-&gt;<a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml#adceb04ae84c524e4d01881e3754a4d59">GetType</a>())</div><div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;        {</div><div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;            <span class="keywordflow">case</span> <a class="code" href="namespacearmnn.xhtml#a56943a0946e5f15e5e58054b8e7a04a4acab78faff25393e9defd1911cb58133e">armnn::LayerType::FullyConnected</a>:</div><div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;            {</div><div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;                <a class="code" href="classarmnn_1_1_test_layer_visitor.xhtml#a3fb243351836fe2feebd36e7e3869154">CheckLayerPointer</a>(layer);</div><div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;                <a class="code" href="classarmnn_1_1_test_layer_visitor.xhtml#a50d9ed2d05fac25795824c880f0eee6b">CheckLayerName</a>(name);</div><div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;                <a class="code" href="classarmnn_1_1_test_convolution2d_layer_visitor.xhtml#ac8b078bb166c52b45f04cae3e74557ad">CheckDescriptor</a>(static_cast&lt;const armnn::FullyConnectedDescriptor&amp;&gt;(descriptor));</div><div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;                <span class="keywordflow">break</span>;</div><div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;            }</div><div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;            <span class="keywordflow">default</span>:</div><div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;            {</div><div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;                <a class="code" href="classarmnn_1_1_strategy_base.xhtml#a9a0391eb40693be520f3092c130c2a57">m_DefaultStrategy</a>.<a class="code" href="structarmnn_1_1_no_throw_strategy.xhtml#a2aca18ff985599b0b917abb4292b8a91">Apply</a>(<a class="code" href="namespacearmnn.xhtml#addb6b14dd1b632263ffe77430259a7c4">GetLayerTypeAsCString</a>(layer-&gt;<a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml#adceb04ae84c524e4d01881e3754a4d59">GetType</a>()));</div><div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;            }</div><div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160;        }</div><div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;    }</div><div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160;</div><div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160;<span class="keyword">protected</span>:</div><div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classarmnn_1_1_test_convolution2d_layer_visitor.xhtml#ac8b078bb166c52b45f04cae3e74557ad">CheckDescriptor</a>(<span class="keyword">const</span> <a class="code" href="structarmnn_1_1_fully_connected_descriptor.xhtml">FullyConnectedDescriptor</a>&amp; descriptor);</div><div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160;<span class="keyword">private</span>:</div><div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160;    <a class="code" href="structarmnn_1_1_fully_connected_descriptor.xhtml">FullyConnectedDescriptor</a> m_Descriptor;</div><div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;};</div><div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160;</div><div class="line"><a name="l00166"></a><span class="lineno"><a class="line" href="classarmnn_1_1_test_batch_normalization_layer_visitor.xhtml">  166</a></span>&#160;<span class="keyword">class </span><a class="code" href="classarmnn_1_1_test_batch_normalization_layer_visitor.xhtml">TestBatchNormalizationLayerVisitor</a> : <span class="keyword">public</span> <a class="code" href="classarmnn_1_1_test_layer_visitor.xhtml">TestLayerVisitor</a></div><div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160;{</div><div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160;<span class="keyword">public</span>:</div><div class="line"><a name="l00169"></a><span class="lineno"><a class="line" href="classarmnn_1_1_test_batch_normalization_layer_visitor.xhtml#ac22fdba4058911b3b322e7382203973a">  169</a></span>&#160;    <a class="code" href="classarmnn_1_1_test_batch_normalization_layer_visitor.xhtml#ac22fdba4058911b3b322e7382203973a">TestBatchNormalizationLayerVisitor</a>(<span class="keyword">const</span> <a class="code" href="structarmnn_1_1_batch_normalization_descriptor.xhtml">BatchNormalizationDescriptor</a>&amp; descriptor,</div><div class="line"><a name="l00170"></a><span class="lineno">  170</span>&#160;                                       <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_const_tensor.xhtml">ConstTensor</a>&amp; mean,</div><div class="line"><a name="l00171"></a><span class="lineno">  171</span>&#160;                                       <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_const_tensor.xhtml">ConstTensor</a>&amp; variance,</div><div class="line"><a name="l00172"></a><span class="lineno">  172</span>&#160;                                       <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_const_tensor.xhtml">ConstTensor</a>&amp; beta,</div><div class="line"><a name="l00173"></a><span class="lineno">  173</span>&#160;                                       <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_const_tensor.xhtml">ConstTensor</a>&amp; gamma,</div><div class="line"><a name="l00174"></a><span class="lineno">  174</span>&#160;                                       <span class="keyword">const</span> <span class="keywordtype">char</span>* name = <span class="keyword">nullptr</span>)</div><div class="line"><a name="l00175"></a><span class="lineno">  175</span>&#160;        : <a class="code" href="classarmnn_1_1_test_layer_visitor.xhtml">TestLayerVisitor</a>(name)</div><div class="line"><a name="l00176"></a><span class="lineno">  176</span>&#160;        , m_Descriptor(descriptor)</div><div class="line"><a name="l00177"></a><span class="lineno">  177</span>&#160;        , m_Mean(mean)</div><div class="line"><a name="l00178"></a><span class="lineno">  178</span>&#160;        , m_Variance(variance)</div><div class="line"><a name="l00179"></a><span class="lineno">  179</span>&#160;        , m_Beta(beta)</div><div class="line"><a name="l00180"></a><span class="lineno">  180</span>&#160;        , m_Gamma(gamma)</div><div class="line"><a name="l00181"></a><span class="lineno">  181</span>&#160;    {}</div><div class="line"><a name="l00182"></a><span class="lineno">  182</span>&#160;</div><div class="line"><a name="l00183"></a><span class="lineno"><a class="line" href="classarmnn_1_1_test_batch_normalization_layer_visitor.xhtml#a49f7f1098adb86fd2197d9aee3924de2">  183</a></span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classarmnn_1_1_test_batch_normalization_layer_visitor.xhtml#a49f7f1098adb86fd2197d9aee3924de2">ExecuteStrategy</a>(<span class="keyword">const</span> <a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml">armnn::IConnectableLayer</a>* layer,</div><div class="line"><a name="l00184"></a><span class="lineno">  184</span>&#160;                         <span class="keyword">const</span> <a class="code" href="structarmnn_1_1_base_descriptor.xhtml">armnn::BaseDescriptor</a>&amp; descriptor,</div><div class="line"><a name="l00185"></a><span class="lineno">  185</span>&#160;                         <span class="keyword">const</span> std::vector&lt;armnn::ConstTensor&gt;&amp; constants,</div><div class="line"><a name="l00186"></a><span class="lineno">  186</span>&#160;                         <span class="keyword">const</span> <span class="keywordtype">char</span>* name,</div><div class="line"><a name="l00187"></a><span class="lineno">  187</span>&#160;                         <span class="keyword">const</span> <a class="code" href="namespacearmnn.xhtml#ab8cf8f9fb6792e654c2d8d8382f6f01b">armnn::LayerBindingId</a> <span class="keywordtype">id</span> = 0)<span class="keyword"> override</span></div><div class="line"><a name="l00188"></a><span class="lineno">  188</span>&#160;<span class="keyword">    </span>{</div><div class="line"><a name="l00189"></a><span class="lineno">  189</span>&#160;        <a class="code" href="namespacearmnn.xhtml#a44affeeb090c3c6a3062830562672e84">armnn::IgnoreUnused</a>(descriptor, constants, <span class="keywordtype">id</span>);</div><div class="line"><a name="l00190"></a><span class="lineno">  190</span>&#160;        <span class="keywordflow">switch</span> (layer-&gt;<a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml#adceb04ae84c524e4d01881e3754a4d59">GetType</a>())</div><div class="line"><a name="l00191"></a><span class="lineno">  191</span>&#160;        {</div><div class="line"><a name="l00192"></a><span class="lineno">  192</span>&#160;            <span class="keywordflow">case</span> <a class="code" href="namespacearmnn.xhtml#a56943a0946e5f15e5e58054b8e7a04a4ae4743c3ec15d1d84169b17264634692e">armnn::LayerType::BatchNormalization</a>:</div><div class="line"><a name="l00193"></a><span class="lineno">  193</span>&#160;            {</div><div class="line"><a name="l00194"></a><span class="lineno">  194</span>&#160;                <a class="code" href="classarmnn_1_1_test_layer_visitor.xhtml#a3fb243351836fe2feebd36e7e3869154">CheckLayerPointer</a>(layer);</div><div class="line"><a name="l00195"></a><span class="lineno">  195</span>&#160;                <a class="code" href="classarmnn_1_1_test_layer_visitor.xhtml#a50d9ed2d05fac25795824c880f0eee6b">CheckLayerName</a>(name);</div><div class="line"><a name="l00196"></a><span class="lineno">  196</span>&#160;                <a class="code" href="classarmnn_1_1_test_convolution2d_layer_visitor.xhtml#ac8b078bb166c52b45f04cae3e74557ad">CheckDescriptor</a>(static_cast&lt;const armnn::BatchNormalizationDescriptor&amp;&gt;(descriptor));</div><div class="line"><a name="l00197"></a><span class="lineno">  197</span>&#160;                <a class="code" href="classarmnn_1_1_test_layer_visitor.xhtml#ab49c9a185af94e39ae9cd81aa8ec926c">CheckConstTensors</a>(m_Mean,     constants[0]);</div><div class="line"><a name="l00198"></a><span class="lineno">  198</span>&#160;                <a class="code" href="classarmnn_1_1_test_layer_visitor.xhtml#ab49c9a185af94e39ae9cd81aa8ec926c">CheckConstTensors</a>(m_Variance, constants[1]);</div><div class="line"><a name="l00199"></a><span class="lineno">  199</span>&#160;                <a class="code" href="classarmnn_1_1_test_layer_visitor.xhtml#ab49c9a185af94e39ae9cd81aa8ec926c">CheckConstTensors</a>(m_Beta,     constants[2]);</div><div class="line"><a name="l00200"></a><span class="lineno">  200</span>&#160;                <a class="code" href="classarmnn_1_1_test_layer_visitor.xhtml#ab49c9a185af94e39ae9cd81aa8ec926c">CheckConstTensors</a>(m_Gamma,    constants[3]);</div><div class="line"><a name="l00201"></a><span class="lineno">  201</span>&#160;                <span class="keywordflow">break</span>;</div><div class="line"><a name="l00202"></a><span class="lineno">  202</span>&#160;            }</div><div class="line"><a name="l00203"></a><span class="lineno">  203</span>&#160;            <span class="keywordflow">default</span>:</div><div class="line"><a name="l00204"></a><span class="lineno">  204</span>&#160;            {</div><div class="line"><a name="l00205"></a><span class="lineno">  205</span>&#160;                <a class="code" href="classarmnn_1_1_strategy_base.xhtml#a9a0391eb40693be520f3092c130c2a57">m_DefaultStrategy</a>.<a class="code" href="structarmnn_1_1_no_throw_strategy.xhtml#a2aca18ff985599b0b917abb4292b8a91">Apply</a>(<a class="code" href="namespacearmnn.xhtml#addb6b14dd1b632263ffe77430259a7c4">GetLayerTypeAsCString</a>(layer-&gt;<a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml#adceb04ae84c524e4d01881e3754a4d59">GetType</a>()));</div><div class="line"><a name="l00206"></a><span class="lineno">  206</span>&#160;            }</div><div class="line"><a name="l00207"></a><span class="lineno">  207</span>&#160;        }</div><div class="line"><a name="l00208"></a><span class="lineno">  208</span>&#160;    }</div><div class="line"><a name="l00209"></a><span class="lineno">  209</span>&#160;</div><div class="line"><a name="l00210"></a><span class="lineno">  210</span>&#160;<span class="keyword">protected</span>:</div><div class="line"><a name="l00211"></a><span class="lineno">  211</span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classarmnn_1_1_test_convolution2d_layer_visitor.xhtml#ac8b078bb166c52b45f04cae3e74557ad">CheckDescriptor</a>(<span class="keyword">const</span> <a class="code" href="structarmnn_1_1_batch_normalization_descriptor.xhtml">BatchNormalizationDescriptor</a>&amp; descriptor);</div><div class="line"><a name="l00212"></a><span class="lineno">  212</span>&#160;</div><div class="line"><a name="l00213"></a><span class="lineno">  213</span>&#160;<span class="keyword">private</span>:</div><div class="line"><a name="l00214"></a><span class="lineno">  214</span>&#160;    <a class="code" href="structarmnn_1_1_batch_normalization_descriptor.xhtml">BatchNormalizationDescriptor</a> m_Descriptor;</div><div class="line"><a name="l00215"></a><span class="lineno">  215</span>&#160;    <a class="code" href="classarmnn_1_1_const_tensor.xhtml">ConstTensor</a> m_Mean;</div><div class="line"><a name="l00216"></a><span class="lineno">  216</span>&#160;    <a class="code" href="classarmnn_1_1_const_tensor.xhtml">ConstTensor</a> m_Variance;</div><div class="line"><a name="l00217"></a><span class="lineno">  217</span>&#160;    <a class="code" href="classarmnn_1_1_const_tensor.xhtml">ConstTensor</a> m_Beta;</div><div class="line"><a name="l00218"></a><span class="lineno">  218</span>&#160;    <a class="code" href="classarmnn_1_1_const_tensor.xhtml">ConstTensor</a> m_Gamma;</div><div class="line"><a name="l00219"></a><span class="lineno">  219</span>&#160;};</div><div class="line"><a name="l00220"></a><span class="lineno">  220</span>&#160;</div><div class="line"><a name="l00221"></a><span class="lineno"><a class="line" href="classarmnn_1_1_test_constant_layer_visitor.xhtml">  221</a></span>&#160;<span class="keyword">class </span><a class="code" href="classarmnn_1_1_test_constant_layer_visitor.xhtml">TestConstantLayerVisitor</a> : <span class="keyword">public</span> <a class="code" href="classarmnn_1_1_test_layer_visitor.xhtml">TestLayerVisitor</a></div><div class="line"><a name="l00222"></a><span class="lineno">  222</span>&#160;{</div><div class="line"><a name="l00223"></a><span class="lineno">  223</span>&#160;<span class="keyword">public</span>:</div><div class="line"><a name="l00224"></a><span class="lineno"><a class="line" href="classarmnn_1_1_test_constant_layer_visitor.xhtml#acdb9da3b37ea3265b7ffdf1b5ff3b342">  224</a></span>&#160;    <span class="keyword">explicit</span> <a class="code" href="classarmnn_1_1_test_constant_layer_visitor.xhtml#acdb9da3b37ea3265b7ffdf1b5ff3b342">TestConstantLayerVisitor</a>(<span class="keyword">const</span> <a class="code" href="classarmnn_1_1_const_tensor.xhtml">ConstTensor</a>&amp; input,</div><div class="line"><a name="l00225"></a><span class="lineno">  225</span>&#160;                                      <span class="keyword">const</span> <span class="keywordtype">char</span>* name = <span class="keyword">nullptr</span>)</div><div class="line"><a name="l00226"></a><span class="lineno">  226</span>&#160;        : <a class="code" href="classarmnn_1_1_test_layer_visitor.xhtml">TestLayerVisitor</a>(name)</div><div class="line"><a name="l00227"></a><span class="lineno">  227</span>&#160;        , m_Input(input)</div><div class="line"><a name="l00228"></a><span class="lineno">  228</span>&#160;    {}</div><div class="line"><a name="l00229"></a><span class="lineno">  229</span>&#160;</div><div class="line"><a name="l00230"></a><span class="lineno"><a class="line" href="classarmnn_1_1_test_constant_layer_visitor.xhtml#a49f7f1098adb86fd2197d9aee3924de2">  230</a></span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classarmnn_1_1_test_constant_layer_visitor.xhtml#a49f7f1098adb86fd2197d9aee3924de2">ExecuteStrategy</a>(<span class="keyword">const</span> <a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml">armnn::IConnectableLayer</a>* layer,</div><div class="line"><a name="l00231"></a><span class="lineno">  231</span>&#160;                         <span class="keyword">const</span> <a class="code" href="structarmnn_1_1_base_descriptor.xhtml">armnn::BaseDescriptor</a>&amp; descriptor,</div><div class="line"><a name="l00232"></a><span class="lineno">  232</span>&#160;                         <span class="keyword">const</span> std::vector&lt;armnn::ConstTensor&gt;&amp; constants,</div><div class="line"><a name="l00233"></a><span class="lineno">  233</span>&#160;                         <span class="keyword">const</span> <span class="keywordtype">char</span>* name,</div><div class="line"><a name="l00234"></a><span class="lineno">  234</span>&#160;                         <span class="keyword">const</span> <a class="code" href="namespacearmnn.xhtml#ab8cf8f9fb6792e654c2d8d8382f6f01b">armnn::LayerBindingId</a> <span class="keywordtype">id</span> = 0)<span class="keyword"> override</span></div><div class="line"><a name="l00235"></a><span class="lineno">  235</span>&#160;<span class="keyword">    </span>{</div><div class="line"><a name="l00236"></a><span class="lineno">  236</span>&#160;        <a class="code" href="namespacearmnn.xhtml#a44affeeb090c3c6a3062830562672e84">armnn::IgnoreUnused</a>(descriptor, constants, <span class="keywordtype">id</span>);</div><div class="line"><a name="l00237"></a><span class="lineno">  237</span>&#160;        <span class="keywordflow">switch</span> (layer-&gt;<a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml#adceb04ae84c524e4d01881e3754a4d59">GetType</a>())</div><div class="line"><a name="l00238"></a><span class="lineno">  238</span>&#160;        {</div><div class="line"><a name="l00239"></a><span class="lineno">  239</span>&#160;            <span class="keywordflow">case</span> <a class="code" href="namespacearmnn.xhtml#a14d24d90ab4ba2956e92e27890ba4c91acb17869fe51048b5a5c4c6106551a255">armnn::LayerType::Constant</a>:</div><div class="line"><a name="l00240"></a><span class="lineno">  240</span>&#160;            {</div><div class="line"><a name="l00241"></a><span class="lineno">  241</span>&#160;                <a class="code" href="classarmnn_1_1_test_layer_visitor.xhtml#a3fb243351836fe2feebd36e7e3869154">CheckLayerPointer</a>(layer);</div><div class="line"><a name="l00242"></a><span class="lineno">  242</span>&#160;                <a class="code" href="classarmnn_1_1_test_layer_visitor.xhtml#a50d9ed2d05fac25795824c880f0eee6b">CheckLayerName</a>(name);</div><div class="line"><a name="l00243"></a><span class="lineno">  243</span>&#160;                <a class="code" href="classarmnn_1_1_test_layer_visitor.xhtml#ab49c9a185af94e39ae9cd81aa8ec926c">CheckConstTensors</a>(m_Input, constants[0]);</div><div class="line"><a name="l00244"></a><span class="lineno">  244</span>&#160;                <span class="keywordflow">break</span>;</div><div class="line"><a name="l00245"></a><span class="lineno">  245</span>&#160;            }</div><div class="line"><a name="l00246"></a><span class="lineno">  246</span>&#160;            <span class="keywordflow">default</span>:</div><div class="line"><a name="l00247"></a><span class="lineno">  247</span>&#160;            {</div><div class="line"><a name="l00248"></a><span class="lineno">  248</span>&#160;                <a class="code" href="classarmnn_1_1_strategy_base.xhtml#a9a0391eb40693be520f3092c130c2a57">m_DefaultStrategy</a>.<a class="code" href="structarmnn_1_1_no_throw_strategy.xhtml#a2aca18ff985599b0b917abb4292b8a91">Apply</a>(<a class="code" href="namespacearmnn.xhtml#addb6b14dd1b632263ffe77430259a7c4">GetLayerTypeAsCString</a>(layer-&gt;<a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml#adceb04ae84c524e4d01881e3754a4d59">GetType</a>()));</div><div class="line"><a name="l00249"></a><span class="lineno">  249</span>&#160;            }</div><div class="line"><a name="l00250"></a><span class="lineno">  250</span>&#160;        }</div><div class="line"><a name="l00251"></a><span class="lineno">  251</span>&#160;    }</div><div class="line"><a name="l00252"></a><span class="lineno">  252</span>&#160;</div><div class="line"><a name="l00253"></a><span class="lineno">  253</span>&#160;<span class="keyword">private</span>:</div><div class="line"><a name="l00254"></a><span class="lineno">  254</span>&#160;    <a class="code" href="classarmnn_1_1_const_tensor.xhtml">ConstTensor</a> m_Input;</div><div class="line"><a name="l00255"></a><span class="lineno">  255</span>&#160;};</div><div class="line"><a name="l00256"></a><span class="lineno">  256</span>&#160;</div><div class="line"><a name="l00257"></a><span class="lineno">  257</span>&#160;<span class="comment">// Used to supply utility functions to the actual lstm test visitors</span></div><div class="line"><a name="l00258"></a><span class="lineno"><a class="line" href="classarmnn_1_1_lstm_visitor.xhtml">  258</a></span>&#160;<span class="keyword">class </span><a class="code" href="classarmnn_1_1_lstm_visitor.xhtml">LstmVisitor</a> : <span class="keyword">public</span> <a class="code" href="classarmnn_1_1_test_layer_visitor.xhtml">TestLayerVisitor</a></div><div class="line"><a name="l00259"></a><span class="lineno">  259</span>&#160;{</div><div class="line"><a name="l00260"></a><span class="lineno">  260</span>&#160;<span class="keyword">public</span>:</div><div class="line"><a name="l00261"></a><span class="lineno"><a class="line" href="classarmnn_1_1_lstm_visitor.xhtml#a799315dab21d2631808bad70168df81e">  261</a></span>&#160;    <span class="keyword">explicit</span> <a class="code" href="classarmnn_1_1_lstm_visitor.xhtml#a799315dab21d2631808bad70168df81e">LstmVisitor</a>(<span class="keyword">const</span> <a class="code" href="structarmnn_1_1_lstm_input_params.xhtml">LstmInputParams</a>&amp; params,</div><div class="line"><a name="l00262"></a><span class="lineno">  262</span>&#160;                         <span class="keyword">const</span> <span class="keywordtype">char</span>* name = <span class="keyword">nullptr</span>)</div><div class="line"><a name="l00263"></a><span class="lineno">  263</span>&#160;         : <a class="code" href="classarmnn_1_1_test_layer_visitor.xhtml">TestLayerVisitor</a>(name)</div><div class="line"><a name="l00264"></a><span class="lineno">  264</span>&#160;         , m_InputParams(params) {}</div><div class="line"><a name="l00265"></a><span class="lineno">  265</span>&#160;</div><div class="line"><a name="l00266"></a><span class="lineno">  266</span>&#160;<span class="keyword">protected</span>:</div><div class="line"><a name="l00267"></a><span class="lineno">  267</span>&#160;    <span class="keyword">template</span>&lt;<span class="keyword">typename</span> LayerType&gt;</div><div class="line"><a name="l00268"></a><span class="lineno">  268</span>&#160;    <span class="keywordtype">void</span> CheckInputParameters(<span class="keyword">const</span> <a class="code" href="namespacearmnn.xhtml#a56943a0946e5f15e5e58054b8e7a04a4">LayerType</a>* layer, <span class="keyword">const</span> <a class="code" href="structarmnn_1_1_lstm_input_params.xhtml">LstmInputParams</a>&amp; inputParams);</div><div class="line"><a name="l00269"></a><span class="lineno">  269</span>&#160;</div><div class="line"><a name="l00270"></a><span class="lineno"><a class="line" href="classarmnn_1_1_lstm_visitor.xhtml#a25ff1c2dd56d7b0d46fee306e45834b7">  270</a></span>&#160;    <a class="code" href="structarmnn_1_1_lstm_input_params.xhtml">LstmInputParams</a> <a class="code" href="classarmnn_1_1_lstm_visitor.xhtml#a25ff1c2dd56d7b0d46fee306e45834b7">m_InputParams</a>;</div><div class="line"><a name="l00271"></a><span class="lineno">  271</span>&#160;};</div><div class="line"><a name="l00272"></a><span class="lineno">  272</span>&#160;</div><div class="line"><a name="l00273"></a><span class="lineno">  273</span>&#160;<span class="keyword">template</span>&lt;<span class="keyword">typename</span> LayerType&gt;</div><div class="line"><a name="l00274"></a><span class="lineno"><a class="line" href="classarmnn_1_1_lstm_visitor.xhtml#a630ee7a34dcdff98c6815676d2c55f33">  274</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="classarmnn_1_1_lstm_visitor.xhtml#a630ee7a34dcdff98c6815676d2c55f33">LstmVisitor::CheckInputParameters</a>(<span class="keyword">const</span> <a class="code" href="namespacearmnn.xhtml#a56943a0946e5f15e5e58054b8e7a04a4">LayerType</a>* layer, <span class="keyword">const</span> <a class="code" href="structarmnn_1_1_lstm_input_params.xhtml">LstmInputParams</a>&amp; inputParams)</div><div class="line"><a name="l00275"></a><span class="lineno">  275</span>&#160;{</div><div class="line"><a name="l00276"></a><span class="lineno">  276</span>&#160;    <a class="code" href="classarmnn_1_1_test_layer_visitor.xhtml#ac45b7720c3156ab1004a904da7d42b44">CheckConstTensorPtrs</a>(<span class="stringliteral">&quot;OutputGateBias&quot;</span>,</div><div class="line"><a name="l00277"></a><span class="lineno">  277</span>&#160;                         inputParams.<a class="code" href="structarmnn_1_1_lstm_input_params.xhtml#a8c0f6d48705f40c5590dde09be262222">m_OutputGateBias</a>,</div><div class="line"><a name="l00278"></a><span class="lineno">  278</span>&#160;                         layer-&gt;m_BasicParameters.m_OutputGateBias);</div><div class="line"><a name="l00279"></a><span class="lineno">  279</span>&#160;    <a class="code" href="classarmnn_1_1_test_layer_visitor.xhtml#ac45b7720c3156ab1004a904da7d42b44">CheckConstTensorPtrs</a>(<span class="stringliteral">&quot;InputToForgetWeights&quot;</span>,</div><div class="line"><a name="l00280"></a><span class="lineno">  280</span>&#160;                         inputParams.<a class="code" href="structarmnn_1_1_lstm_input_params.xhtml#a31da1ead6794dd64571afdd0b6efc771">m_InputToForgetWeights</a>,</div><div class="line"><a name="l00281"></a><span class="lineno">  281</span>&#160;                         layer-&gt;m_BasicParameters.m_InputToForgetWeights);</div><div class="line"><a name="l00282"></a><span class="lineno">  282</span>&#160;    <a class="code" href="classarmnn_1_1_test_layer_visitor.xhtml#ac45b7720c3156ab1004a904da7d42b44">CheckConstTensorPtrs</a>(<span class="stringliteral">&quot;InputToCellWeights&quot;</span>,</div><div class="line"><a name="l00283"></a><span class="lineno">  283</span>&#160;                         inputParams.<a class="code" href="structarmnn_1_1_lstm_input_params.xhtml#a49e11acda22742cbaf6f1b259ead0d84">m_InputToCellWeights</a>,</div><div class="line"><a name="l00284"></a><span class="lineno">  284</span>&#160;                         layer-&gt;m_BasicParameters.m_InputToCellWeights);</div><div class="line"><a name="l00285"></a><span class="lineno">  285</span>&#160;    <a class="code" href="classarmnn_1_1_test_layer_visitor.xhtml#ac45b7720c3156ab1004a904da7d42b44">CheckConstTensorPtrs</a>(<span class="stringliteral">&quot;InputToOutputWeights&quot;</span>,</div><div class="line"><a name="l00286"></a><span class="lineno">  286</span>&#160;                         inputParams.<a class="code" href="structarmnn_1_1_lstm_input_params.xhtml#a6e30c7b3451da3ea9cf4259fb602e6e6">m_InputToOutputWeights</a>,</div><div class="line"><a name="l00287"></a><span class="lineno">  287</span>&#160;                         layer-&gt;m_BasicParameters.m_InputToOutputWeights);</div><div class="line"><a name="l00288"></a><span class="lineno">  288</span>&#160;    <a class="code" href="classarmnn_1_1_test_layer_visitor.xhtml#ac45b7720c3156ab1004a904da7d42b44">CheckConstTensorPtrs</a>(<span class="stringliteral">&quot;RecurrentToForgetWeights&quot;</span>,</div><div class="line"><a name="l00289"></a><span class="lineno">  289</span>&#160;                         inputParams.<a class="code" href="structarmnn_1_1_lstm_input_params.xhtml#ae83131e16df1cace69395a5f99bc5ecb">m_RecurrentToForgetWeights</a>,</div><div class="line"><a name="l00290"></a><span class="lineno">  290</span>&#160;                         layer-&gt;m_BasicParameters.m_RecurrentToForgetWeights);</div><div class="line"><a name="l00291"></a><span class="lineno">  291</span>&#160;    <a class="code" href="classarmnn_1_1_test_layer_visitor.xhtml#ac45b7720c3156ab1004a904da7d42b44">CheckConstTensorPtrs</a>(<span class="stringliteral">&quot;RecurrentToCellWeights&quot;</span>,</div><div class="line"><a name="l00292"></a><span class="lineno">  292</span>&#160;                         inputParams.<a class="code" href="structarmnn_1_1_lstm_input_params.xhtml#a1759754ccb88ecc9af44f3aae6e244ee">m_RecurrentToCellWeights</a>,</div><div class="line"><a name="l00293"></a><span class="lineno">  293</span>&#160;                         layer-&gt;m_BasicParameters.m_RecurrentToCellWeights);</div><div class="line"><a name="l00294"></a><span class="lineno">  294</span>&#160;    <a class="code" href="classarmnn_1_1_test_layer_visitor.xhtml#ac45b7720c3156ab1004a904da7d42b44">CheckConstTensorPtrs</a>(<span class="stringliteral">&quot;RecurrentToOutputWeights&quot;</span>,</div><div class="line"><a name="l00295"></a><span class="lineno">  295</span>&#160;                         inputParams.<a class="code" href="structarmnn_1_1_lstm_input_params.xhtml#a56b81ca8ba4b4937e0787e4951f043fc">m_RecurrentToOutputWeights</a>,</div><div class="line"><a name="l00296"></a><span class="lineno">  296</span>&#160;                         layer-&gt;m_BasicParameters.m_RecurrentToOutputWeights);</div><div class="line"><a name="l00297"></a><span class="lineno">  297</span>&#160;    <a class="code" href="classarmnn_1_1_test_layer_visitor.xhtml#ac45b7720c3156ab1004a904da7d42b44">CheckConstTensorPtrs</a>(<span class="stringliteral">&quot;ForgetGateBias&quot;</span>,</div><div class="line"><a name="l00298"></a><span class="lineno">  298</span>&#160;                         inputParams.<a class="code" href="structarmnn_1_1_lstm_input_params.xhtml#ace7a1f1f1041b412b7d8ef82b95ff352">m_ForgetGateBias</a>,</div><div class="line"><a name="l00299"></a><span class="lineno">  299</span>&#160;                         layer-&gt;m_BasicParameters.m_ForgetGateBias);</div><div class="line"><a name="l00300"></a><span class="lineno">  300</span>&#160;    <a class="code" href="classarmnn_1_1_test_layer_visitor.xhtml#ac45b7720c3156ab1004a904da7d42b44">CheckConstTensorPtrs</a>(<span class="stringliteral">&quot;CellBias&quot;</span>,</div><div class="line"><a name="l00301"></a><span class="lineno">  301</span>&#160;                         inputParams.<a class="code" href="structarmnn_1_1_lstm_input_params.xhtml#a4a9d678146f572808a361dbdc5489f38">m_CellBias</a>,</div><div class="line"><a name="l00302"></a><span class="lineno">  302</span>&#160;                         layer-&gt;m_BasicParameters.m_CellBias);</div><div class="line"><a name="l00303"></a><span class="lineno">  303</span>&#160;</div><div class="line"><a name="l00304"></a><span class="lineno">  304</span>&#160;    <a class="code" href="classarmnn_1_1_test_layer_visitor.xhtml#ac45b7720c3156ab1004a904da7d42b44">CheckConstTensorPtrs</a>(<span class="stringliteral">&quot;InputToInputWeights&quot;</span>,</div><div class="line"><a name="l00305"></a><span class="lineno">  305</span>&#160;                         inputParams.<a class="code" href="structarmnn_1_1_lstm_input_params.xhtml#affcee5f4ab5994a21bee3b78b4e43de3">m_InputToInputWeights</a>,</div><div class="line"><a name="l00306"></a><span class="lineno">  306</span>&#160;                         layer-&gt;m_CifgParameters.m_InputToInputWeights);</div><div class="line"><a name="l00307"></a><span class="lineno">  307</span>&#160;    <a class="code" href="classarmnn_1_1_test_layer_visitor.xhtml#ac45b7720c3156ab1004a904da7d42b44">CheckConstTensorPtrs</a>(<span class="stringliteral">&quot;RecurrentToInputWeights&quot;</span>,</div><div class="line"><a name="l00308"></a><span class="lineno">  308</span>&#160;                         inputParams.<a class="code" href="structarmnn_1_1_lstm_input_params.xhtml#a435d3651482bbfcc11263b4e4e0c900f">m_RecurrentToInputWeights</a>,</div><div class="line"><a name="l00309"></a><span class="lineno">  309</span>&#160;                         layer-&gt;m_CifgParameters.m_RecurrentToInputWeights);</div><div class="line"><a name="l00310"></a><span class="lineno">  310</span>&#160;    <a class="code" href="classarmnn_1_1_test_layer_visitor.xhtml#ac45b7720c3156ab1004a904da7d42b44">CheckConstTensorPtrs</a>(<span class="stringliteral">&quot;InputGateBias&quot;</span>,</div><div class="line"><a name="l00311"></a><span class="lineno">  311</span>&#160;                         inputParams.<a class="code" href="structarmnn_1_1_lstm_input_params.xhtml#a9e081a9b94defb30d1558dc912507e0e">m_InputGateBias</a>,</div><div class="line"><a name="l00312"></a><span class="lineno">  312</span>&#160;                         layer-&gt;m_CifgParameters.m_InputGateBias);</div><div class="line"><a name="l00313"></a><span class="lineno">  313</span>&#160;</div><div class="line"><a name="l00314"></a><span class="lineno">  314</span>&#160;    <a class="code" href="classarmnn_1_1_test_layer_visitor.xhtml#ac45b7720c3156ab1004a904da7d42b44">CheckConstTensorPtrs</a>(<span class="stringliteral">&quot;ProjectionBias&quot;</span>,</div><div class="line"><a name="l00315"></a><span class="lineno">  315</span>&#160;                         inputParams.<a class="code" href="structarmnn_1_1_lstm_input_params.xhtml#a44b0e6b16708df7f0d2bbab141688aaa">m_ProjectionBias</a>,</div><div class="line"><a name="l00316"></a><span class="lineno">  316</span>&#160;                         layer-&gt;m_ProjectionParameters.m_ProjectionBias);</div><div class="line"><a name="l00317"></a><span class="lineno">  317</span>&#160;    <a class="code" href="classarmnn_1_1_test_layer_visitor.xhtml#ac45b7720c3156ab1004a904da7d42b44">CheckConstTensorPtrs</a>(<span class="stringliteral">&quot;ProjectionWeights&quot;</span>,</div><div class="line"><a name="l00318"></a><span class="lineno">  318</span>&#160;                         inputParams.<a class="code" href="structarmnn_1_1_lstm_input_params.xhtml#ab03e6e1514f74427916c892f473fe04c">m_ProjectionWeights</a>,</div><div class="line"><a name="l00319"></a><span class="lineno">  319</span>&#160;                         layer-&gt;m_ProjectionParameters.m_ProjectionWeights);</div><div class="line"><a name="l00320"></a><span class="lineno">  320</span>&#160;</div><div class="line"><a name="l00321"></a><span class="lineno">  321</span>&#160;    <a class="code" href="classarmnn_1_1_test_layer_visitor.xhtml#ac45b7720c3156ab1004a904da7d42b44">CheckConstTensorPtrs</a>(<span class="stringliteral">&quot;CellToInputWeights&quot;</span>,</div><div class="line"><a name="l00322"></a><span class="lineno">  322</span>&#160;                         inputParams.<a class="code" href="structarmnn_1_1_lstm_input_params.xhtml#a484bafa2f8453a7c5a4a00b92a61b006">m_CellToInputWeights</a>,</div><div class="line"><a name="l00323"></a><span class="lineno">  323</span>&#160;                         layer-&gt;m_PeepholeParameters.m_CellToInputWeights);</div><div class="line"><a name="l00324"></a><span class="lineno">  324</span>&#160;    <a class="code" href="classarmnn_1_1_test_layer_visitor.xhtml#ac45b7720c3156ab1004a904da7d42b44">CheckConstTensorPtrs</a>(<span class="stringliteral">&quot;CellToForgetWeights&quot;</span>,</div><div class="line"><a name="l00325"></a><span class="lineno">  325</span>&#160;                         inputParams.<a class="code" href="structarmnn_1_1_lstm_input_params.xhtml#a35b112e30c3eb153806a2a8c16d178e3">m_CellToForgetWeights</a>,</div><div class="line"><a name="l00326"></a><span class="lineno">  326</span>&#160;                         layer-&gt;m_PeepholeParameters.m_CellToForgetWeights);</div><div class="line"><a name="l00327"></a><span class="lineno">  327</span>&#160;    <a class="code" href="classarmnn_1_1_test_layer_visitor.xhtml#ac45b7720c3156ab1004a904da7d42b44">CheckConstTensorPtrs</a>(<span class="stringliteral">&quot;CellToOutputWeights&quot;</span>,</div><div class="line"><a name="l00328"></a><span class="lineno">  328</span>&#160;                         inputParams.<a class="code" href="structarmnn_1_1_lstm_input_params.xhtml#afe204ca375b74e9a72640c9227918d0a">m_CellToOutputWeights</a>,</div><div class="line"><a name="l00329"></a><span class="lineno">  329</span>&#160;                         layer-&gt;m_PeepholeParameters.m_CellToOutputWeights);</div><div class="line"><a name="l00330"></a><span class="lineno">  330</span>&#160;</div><div class="line"><a name="l00331"></a><span class="lineno">  331</span>&#160;    <a class="code" href="classarmnn_1_1_test_layer_visitor.xhtml#ac45b7720c3156ab1004a904da7d42b44">CheckConstTensorPtrs</a>(<span class="stringliteral">&quot;InputLayerNormWeights&quot;</span>,</div><div class="line"><a name="l00332"></a><span class="lineno">  332</span>&#160;                         inputParams.<a class="code" href="structarmnn_1_1_lstm_input_params.xhtml#a0cd848f65ec31778d708852f0042fe37">m_InputLayerNormWeights</a>,</div><div class="line"><a name="l00333"></a><span class="lineno">  333</span>&#160;                         layer-&gt;m_LayerNormParameters.m_InputLayerNormWeights);</div><div class="line"><a name="l00334"></a><span class="lineno">  334</span>&#160;    <a class="code" href="classarmnn_1_1_test_layer_visitor.xhtml#ac45b7720c3156ab1004a904da7d42b44">CheckConstTensorPtrs</a>(<span class="stringliteral">&quot;ForgetLayerNormWeights&quot;</span>,</div><div class="line"><a name="l00335"></a><span class="lineno">  335</span>&#160;                         inputParams.<a class="code" href="structarmnn_1_1_lstm_input_params.xhtml#af0f796fba1a2be9c56b4c9ee534577ee">m_ForgetLayerNormWeights</a>,</div><div class="line"><a name="l00336"></a><span class="lineno">  336</span>&#160;                         layer-&gt;m_LayerNormParameters.m_ForgetLayerNormWeights);</div><div class="line"><a name="l00337"></a><span class="lineno">  337</span>&#160;    <a class="code" href="classarmnn_1_1_test_layer_visitor.xhtml#ac45b7720c3156ab1004a904da7d42b44">CheckConstTensorPtrs</a>(<span class="stringliteral">&quot;CellLayerNormWeights&quot;</span>,</div><div class="line"><a name="l00338"></a><span class="lineno">  338</span>&#160;                         inputParams.<a class="code" href="structarmnn_1_1_lstm_input_params.xhtml#ad0b8c32bb5381f4cc999093ba3b98b43">m_CellLayerNormWeights</a>,</div><div class="line"><a name="l00339"></a><span class="lineno">  339</span>&#160;                         layer-&gt;m_LayerNormParameters.m_CellLayerNormWeights);</div><div class="line"><a name="l00340"></a><span class="lineno">  340</span>&#160;    <a class="code" href="classarmnn_1_1_test_layer_visitor.xhtml#ac45b7720c3156ab1004a904da7d42b44">CheckConstTensorPtrs</a>(<span class="stringliteral">&quot;OutputLayerNormWeights&quot;</span>,</div><div class="line"><a name="l00341"></a><span class="lineno">  341</span>&#160;                         inputParams.<a class="code" href="structarmnn_1_1_lstm_input_params.xhtml#a9b18daea2e9f42386055326fd016519a">m_OutputLayerNormWeights</a>,</div><div class="line"><a name="l00342"></a><span class="lineno">  342</span>&#160;                         layer-&gt;m_LayerNormParameters.m_OutputLayerNormWeights);</div><div class="line"><a name="l00343"></a><span class="lineno">  343</span>&#160;}</div><div class="line"><a name="l00344"></a><span class="lineno">  344</span>&#160;</div><div class="line"><a name="l00345"></a><span class="lineno"><a class="line" href="classarmnn_1_1_test_lstm_layer_visitor.xhtml">  345</a></span>&#160;<span class="keyword">class </span><a class="code" href="classarmnn_1_1_test_lstm_layer_visitor.xhtml">TestLstmLayerVisitor</a> : <span class="keyword">public</span> <a class="code" href="classarmnn_1_1_lstm_visitor.xhtml">LstmVisitor</a></div><div class="line"><a name="l00346"></a><span class="lineno">  346</span>&#160;{</div><div class="line"><a name="l00347"></a><span class="lineno">  347</span>&#160;<span class="keyword">public</span>:</div><div class="line"><a name="l00348"></a><span class="lineno"><a class="line" href="classarmnn_1_1_test_lstm_layer_visitor.xhtml#a8dc5d172f9d6f4740aceddf9041282e2">  348</a></span>&#160;    <span class="keyword">explicit</span> <a class="code" href="classarmnn_1_1_test_lstm_layer_visitor.xhtml#a8dc5d172f9d6f4740aceddf9041282e2">TestLstmLayerVisitor</a>(<span class="keyword">const</span> <a class="code" href="structarmnn_1_1_lstm_descriptor.xhtml">LstmDescriptor</a>&amp; descriptor,</div><div class="line"><a name="l00349"></a><span class="lineno">  349</span>&#160;                                  <span class="keyword">const</span> <a class="code" href="structarmnn_1_1_lstm_input_params.xhtml">LstmInputParams</a>&amp; params,</div><div class="line"><a name="l00350"></a><span class="lineno">  350</span>&#160;                                  <span class="keyword">const</span> <span class="keywordtype">char</span>* name = <span class="keyword">nullptr</span>)</div><div class="line"><a name="l00351"></a><span class="lineno">  351</span>&#160;        : <a class="code" href="classarmnn_1_1_lstm_visitor.xhtml">LstmVisitor</a>(params, name)</div><div class="line"><a name="l00352"></a><span class="lineno">  352</span>&#160;        , m_Descriptor(descriptor)</div><div class="line"><a name="l00353"></a><span class="lineno">  353</span>&#160;    {}</div><div class="line"><a name="l00354"></a><span class="lineno">  354</span>&#160;</div><div class="line"><a name="l00355"></a><span class="lineno"><a class="line" href="classarmnn_1_1_test_lstm_layer_visitor.xhtml#a49f7f1098adb86fd2197d9aee3924de2">  355</a></span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classarmnn_1_1_test_lstm_layer_visitor.xhtml#a49f7f1098adb86fd2197d9aee3924de2">ExecuteStrategy</a>(<span class="keyword">const</span> <a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml">armnn::IConnectableLayer</a>* layer,</div><div class="line"><a name="l00356"></a><span class="lineno">  356</span>&#160;                         <span class="keyword">const</span> <a class="code" href="structarmnn_1_1_base_descriptor.xhtml">armnn::BaseDescriptor</a>&amp; descriptor,</div><div class="line"><a name="l00357"></a><span class="lineno">  357</span>&#160;                         <span class="keyword">const</span> std::vector&lt;armnn::ConstTensor&gt;&amp; constants,</div><div class="line"><a name="l00358"></a><span class="lineno">  358</span>&#160;                         <span class="keyword">const</span> <span class="keywordtype">char</span>* name,</div><div class="line"><a name="l00359"></a><span class="lineno">  359</span>&#160;                         <span class="keyword">const</span> <a class="code" href="namespacearmnn.xhtml#ab8cf8f9fb6792e654c2d8d8382f6f01b">armnn::LayerBindingId</a> <span class="keywordtype">id</span> = 0)<span class="keyword"> override</span></div><div class="line"><a name="l00360"></a><span class="lineno">  360</span>&#160;<span class="keyword">    </span>{</div><div class="line"><a name="l00361"></a><span class="lineno">  361</span>&#160;        <a class="code" href="namespacearmnn.xhtml#a44affeeb090c3c6a3062830562672e84">armnn::IgnoreUnused</a>(descriptor, constants, <span class="keywordtype">id</span>);</div><div class="line"><a name="l00362"></a><span class="lineno">  362</span>&#160;        <span class="keywordflow">switch</span> (layer-&gt;<a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml#adceb04ae84c524e4d01881e3754a4d59">GetType</a>())</div><div class="line"><a name="l00363"></a><span class="lineno">  363</span>&#160;        {</div><div class="line"><a name="l00364"></a><span class="lineno">  364</span>&#160;            <span class="keywordflow">case</span> <a class="code" href="namespacearmnn.xhtml#a56943a0946e5f15e5e58054b8e7a04a4a06b091bc9aea697ba473c71f0bb55925">armnn::LayerType::Lstm</a>:</div><div class="line"><a name="l00365"></a><span class="lineno">  365</span>&#160;            {</div><div class="line"><a name="l00366"></a><span class="lineno">  366</span>&#160;                <a class="code" href="classarmnn_1_1_test_layer_visitor.xhtml#a3fb243351836fe2feebd36e7e3869154">CheckLayerPointer</a>(layer);</div><div class="line"><a name="l00367"></a><span class="lineno">  367</span>&#160;                <a class="code" href="classarmnn_1_1_test_layer_visitor.xhtml#a50d9ed2d05fac25795824c880f0eee6b">CheckLayerName</a>(name);</div><div class="line"><a name="l00368"></a><span class="lineno">  368</span>&#160;                <a class="code" href="classarmnn_1_1_test_convolution2d_layer_visitor.xhtml#ac8b078bb166c52b45f04cae3e74557ad">CheckDescriptor</a>(static_cast&lt;const armnn::LstmDescriptor&amp;&gt;(descriptor));</div><div class="line"><a name="l00369"></a><span class="lineno">  369</span>&#160;                CheckInputParameters&lt;const LstmLayer&gt;(PolymorphicDowncast&lt;const LstmLayer*&gt;(layer), m_InputParams);</div><div class="line"><a name="l00370"></a><span class="lineno">  370</span>&#160;                <span class="keywordflow">break</span>;</div><div class="line"><a name="l00371"></a><span class="lineno">  371</span>&#160;            }</div><div class="line"><a name="l00372"></a><span class="lineno">  372</span>&#160;            <span class="keywordflow">default</span>:</div><div class="line"><a name="l00373"></a><span class="lineno">  373</span>&#160;            {</div><div class="line"><a name="l00374"></a><span class="lineno">  374</span>&#160;                <a class="code" href="classarmnn_1_1_strategy_base.xhtml#a9a0391eb40693be520f3092c130c2a57">m_DefaultStrategy</a>.<a class="code" href="structarmnn_1_1_no_throw_strategy.xhtml#a2aca18ff985599b0b917abb4292b8a91">Apply</a>(<a class="code" href="namespacearmnn.xhtml#addb6b14dd1b632263ffe77430259a7c4">GetLayerTypeAsCString</a>(layer-&gt;<a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml#adceb04ae84c524e4d01881e3754a4d59">GetType</a>()));</div><div class="line"><a name="l00375"></a><span class="lineno">  375</span>&#160;            }</div><div class="line"><a name="l00376"></a><span class="lineno">  376</span>&#160;        }</div><div class="line"><a name="l00377"></a><span class="lineno">  377</span>&#160;    }</div><div class="line"><a name="l00378"></a><span class="lineno">  378</span>&#160;</div><div class="line"><a name="l00379"></a><span class="lineno">  379</span>&#160;<span class="keyword">protected</span>:</div><div class="line"><a name="l00380"></a><span class="lineno">  380</span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classarmnn_1_1_test_convolution2d_layer_visitor.xhtml#ac8b078bb166c52b45f04cae3e74557ad">CheckDescriptor</a>(<span class="keyword">const</span> <a class="code" href="structarmnn_1_1_lstm_descriptor.xhtml">LstmDescriptor</a>&amp; descriptor);</div><div class="line"><a name="l00381"></a><span class="lineno">  381</span>&#160;</div><div class="line"><a name="l00382"></a><span class="lineno">  382</span>&#160;<span class="keyword">private</span>:</div><div class="line"><a name="l00383"></a><span class="lineno">  383</span>&#160;    <a class="code" href="structarmnn_1_1_lstm_descriptor.xhtml">LstmDescriptor</a> m_Descriptor;</div><div class="line"><a name="l00384"></a><span class="lineno">  384</span>&#160;};</div><div class="line"><a name="l00385"></a><span class="lineno">  385</span>&#160;</div><div class="line"><a name="l00386"></a><span class="lineno"><a class="line" href="classarmnn_1_1_test_q_lstm_layer_visitor.xhtml">  386</a></span>&#160;<span class="keyword">class </span><a class="code" href="classarmnn_1_1_test_q_lstm_layer_visitor.xhtml">TestQLstmLayerVisitor</a> : <span class="keyword">public</span> <a class="code" href="classarmnn_1_1_lstm_visitor.xhtml">LstmVisitor</a></div><div class="line"><a name="l00387"></a><span class="lineno">  387</span>&#160;{</div><div class="line"><a name="l00388"></a><span class="lineno">  388</span>&#160;<span class="keyword">public</span>:</div><div class="line"><a name="l00389"></a><span class="lineno"><a class="line" href="classarmnn_1_1_test_q_lstm_layer_visitor.xhtml#a1c9f427927208da2660adcfd3cd67aed">  389</a></span>&#160;    <span class="keyword">explicit</span> <a class="code" href="classarmnn_1_1_test_q_lstm_layer_visitor.xhtml#a1c9f427927208da2660adcfd3cd67aed">TestQLstmLayerVisitor</a>(<span class="keyword">const</span> <a class="code" href="structarmnn_1_1_q_lstm_descriptor.xhtml">QLstmDescriptor</a>&amp; descriptor,</div><div class="line"><a name="l00390"></a><span class="lineno">  390</span>&#160;                                   <span class="keyword">const</span> <a class="code" href="structarmnn_1_1_lstm_input_params.xhtml">LstmInputParams</a>&amp; params,</div><div class="line"><a name="l00391"></a><span class="lineno">  391</span>&#160;                                   <span class="keyword">const</span> <span class="keywordtype">char</span>* name = <span class="keyword">nullptr</span>)</div><div class="line"><a name="l00392"></a><span class="lineno">  392</span>&#160;            : <a class="code" href="classarmnn_1_1_lstm_visitor.xhtml">LstmVisitor</a>(params, name)</div><div class="line"><a name="l00393"></a><span class="lineno">  393</span>&#160;            , m_Descriptor(descriptor)</div><div class="line"><a name="l00394"></a><span class="lineno">  394</span>&#160;    {}</div><div class="line"><a name="l00395"></a><span class="lineno">  395</span>&#160;</div><div class="line"><a name="l00396"></a><span class="lineno"><a class="line" href="classarmnn_1_1_test_q_lstm_layer_visitor.xhtml#a49f7f1098adb86fd2197d9aee3924de2">  396</a></span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classarmnn_1_1_test_q_lstm_layer_visitor.xhtml#a49f7f1098adb86fd2197d9aee3924de2">ExecuteStrategy</a>(<span class="keyword">const</span> <a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml">armnn::IConnectableLayer</a>* layer,</div><div class="line"><a name="l00397"></a><span class="lineno">  397</span>&#160;                         <span class="keyword">const</span> <a class="code" href="structarmnn_1_1_base_descriptor.xhtml">armnn::BaseDescriptor</a>&amp; descriptor,</div><div class="line"><a name="l00398"></a><span class="lineno">  398</span>&#160;                         <span class="keyword">const</span> std::vector&lt;armnn::ConstTensor&gt;&amp; constants,</div><div class="line"><a name="l00399"></a><span class="lineno">  399</span>&#160;                         <span class="keyword">const</span> <span class="keywordtype">char</span>* name,</div><div class="line"><a name="l00400"></a><span class="lineno">  400</span>&#160;                         <span class="keyword">const</span> <a class="code" href="namespacearmnn.xhtml#ab8cf8f9fb6792e654c2d8d8382f6f01b">armnn::LayerBindingId</a> <span class="keywordtype">id</span> = 0)<span class="keyword"> override</span></div><div class="line"><a name="l00401"></a><span class="lineno">  401</span>&#160;<span class="keyword">    </span>{</div><div class="line"><a name="l00402"></a><span class="lineno">  402</span>&#160;        <a class="code" href="namespacearmnn.xhtml#a44affeeb090c3c6a3062830562672e84">armnn::IgnoreUnused</a>(descriptor, constants, <span class="keywordtype">id</span>);</div><div class="line"><a name="l00403"></a><span class="lineno">  403</span>&#160;        <span class="keywordflow">switch</span> (layer-&gt;<a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml#adceb04ae84c524e4d01881e3754a4d59">GetType</a>())</div><div class="line"><a name="l00404"></a><span class="lineno">  404</span>&#160;        {</div><div class="line"><a name="l00405"></a><span class="lineno">  405</span>&#160;            <span class="keywordflow">case</span> <a class="code" href="namespacearmnn.xhtml#a56943a0946e5f15e5e58054b8e7a04a4a91880b71ea6d007439b7bc7c320b5c25">armnn::LayerType::QLstm</a>:</div><div class="line"><a name="l00406"></a><span class="lineno">  406</span>&#160;            {</div><div class="line"><a name="l00407"></a><span class="lineno">  407</span>&#160;                <a class="code" href="classarmnn_1_1_test_layer_visitor.xhtml#a3fb243351836fe2feebd36e7e3869154">CheckLayerPointer</a>(layer);</div><div class="line"><a name="l00408"></a><span class="lineno">  408</span>&#160;                <a class="code" href="classarmnn_1_1_test_layer_visitor.xhtml#a50d9ed2d05fac25795824c880f0eee6b">CheckLayerName</a>(name);</div><div class="line"><a name="l00409"></a><span class="lineno">  409</span>&#160;                <a class="code" href="classarmnn_1_1_test_convolution2d_layer_visitor.xhtml#ac8b078bb166c52b45f04cae3e74557ad">CheckDescriptor</a>(static_cast&lt;const armnn::QLstmDescriptor&amp;&gt;(descriptor));</div><div class="line"><a name="l00410"></a><span class="lineno">  410</span>&#160;                CheckInputParameters&lt;const QLstmLayer&gt;(PolymorphicDowncast&lt;const QLstmLayer*&gt;(layer), m_InputParams);</div><div class="line"><a name="l00411"></a><span class="lineno">  411</span>&#160;                <span class="keywordflow">break</span>;</div><div class="line"><a name="l00412"></a><span class="lineno">  412</span>&#160;            }</div><div class="line"><a name="l00413"></a><span class="lineno">  413</span>&#160;            <span class="keywordflow">default</span>:</div><div class="line"><a name="l00414"></a><span class="lineno">  414</span>&#160;            {</div><div class="line"><a name="l00415"></a><span class="lineno">  415</span>&#160;                <a class="code" href="classarmnn_1_1_strategy_base.xhtml#a9a0391eb40693be520f3092c130c2a57">m_DefaultStrategy</a>.<a class="code" href="structarmnn_1_1_no_throw_strategy.xhtml#a2aca18ff985599b0b917abb4292b8a91">Apply</a>(<a class="code" href="namespacearmnn.xhtml#addb6b14dd1b632263ffe77430259a7c4">GetLayerTypeAsCString</a>(layer-&gt;<a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml#adceb04ae84c524e4d01881e3754a4d59">GetType</a>()));</div><div class="line"><a name="l00416"></a><span class="lineno">  416</span>&#160;            }</div><div class="line"><a name="l00417"></a><span class="lineno">  417</span>&#160;        }</div><div class="line"><a name="l00418"></a><span class="lineno">  418</span>&#160;    }</div><div class="line"><a name="l00419"></a><span class="lineno">  419</span>&#160;</div><div class="line"><a name="l00420"></a><span class="lineno">  420</span>&#160;<span class="keyword">protected</span>:</div><div class="line"><a name="l00421"></a><span class="lineno">  421</span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classarmnn_1_1_test_convolution2d_layer_visitor.xhtml#ac8b078bb166c52b45f04cae3e74557ad">CheckDescriptor</a>(<span class="keyword">const</span> <a class="code" href="structarmnn_1_1_q_lstm_descriptor.xhtml">QLstmDescriptor</a>&amp; descriptor);</div><div class="line"><a name="l00422"></a><span class="lineno">  422</span>&#160;</div><div class="line"><a name="l00423"></a><span class="lineno">  423</span>&#160;<span class="keyword">private</span>:</div><div class="line"><a name="l00424"></a><span class="lineno">  424</span>&#160;    <a class="code" href="structarmnn_1_1_q_lstm_descriptor.xhtml">QLstmDescriptor</a> m_Descriptor;</div><div class="line"><a name="l00425"></a><span class="lineno">  425</span>&#160;};</div><div class="line"><a name="l00426"></a><span class="lineno">  426</span>&#160;</div><div class="line"><a name="l00427"></a><span class="lineno">  427</span>&#160;</div><div class="line"><a name="l00428"></a><span class="lineno"><a class="line" href="classarmnn_1_1_test_quantized_lstm_layer_visitor.xhtml">  428</a></span>&#160;<span class="keyword">class </span><a class="code" href="classarmnn_1_1_test_quantized_lstm_layer_visitor.xhtml">TestQuantizedLstmLayerVisitor</a> : <span class="keyword">public</span> <a class="code" href="classarmnn_1_1_test_layer_visitor.xhtml">TestLayerVisitor</a></div><div class="line"><a name="l00429"></a><span class="lineno">  429</span>&#160;{</div><div class="line"><a name="l00430"></a><span class="lineno">  430</span>&#160;<span class="keyword">public</span>:</div><div class="line"><a name="l00431"></a><span class="lineno"><a class="line" href="classarmnn_1_1_test_quantized_lstm_layer_visitor.xhtml#a1d72b0f4a1516fc85b2c04789d562392">  431</a></span>&#160;    <span class="keyword">explicit</span> <a class="code" href="classarmnn_1_1_test_quantized_lstm_layer_visitor.xhtml#a1d72b0f4a1516fc85b2c04789d562392">TestQuantizedLstmLayerVisitor</a>(<span class="keyword">const</span> <a class="code" href="structarmnn_1_1_quantized_lstm_input_params.xhtml">QuantizedLstmInputParams</a>&amp; params,</div><div class="line"><a name="l00432"></a><span class="lineno">  432</span>&#160;                                           <span class="keyword">const</span> <span class="keywordtype">char</span>* name = <span class="keyword">nullptr</span>)</div><div class="line"><a name="l00433"></a><span class="lineno">  433</span>&#160;        : <a class="code" href="classarmnn_1_1_test_layer_visitor.xhtml">TestLayerVisitor</a>(name)</div><div class="line"><a name="l00434"></a><span class="lineno">  434</span>&#160;        , m_InputParams(params)</div><div class="line"><a name="l00435"></a><span class="lineno">  435</span>&#160;    {}</div><div class="line"><a name="l00436"></a><span class="lineno">  436</span>&#160;</div><div class="line"><a name="l00437"></a><span class="lineno"><a class="line" href="classarmnn_1_1_test_quantized_lstm_layer_visitor.xhtml#a49f7f1098adb86fd2197d9aee3924de2">  437</a></span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classarmnn_1_1_test_quantized_lstm_layer_visitor.xhtml#a49f7f1098adb86fd2197d9aee3924de2">ExecuteStrategy</a>(<span class="keyword">const</span> <a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml">armnn::IConnectableLayer</a>* layer,</div><div class="line"><a name="l00438"></a><span class="lineno">  438</span>&#160;                         <span class="keyword">const</span> <a class="code" href="structarmnn_1_1_base_descriptor.xhtml">armnn::BaseDescriptor</a>&amp; descriptor,</div><div class="line"><a name="l00439"></a><span class="lineno">  439</span>&#160;                         <span class="keyword">const</span> std::vector&lt;armnn::ConstTensor&gt;&amp; constants,</div><div class="line"><a name="l00440"></a><span class="lineno">  440</span>&#160;                         <span class="keyword">const</span> <span class="keywordtype">char</span>* name,</div><div class="line"><a name="l00441"></a><span class="lineno">  441</span>&#160;                         <span class="keyword">const</span> <a class="code" href="namespacearmnn.xhtml#ab8cf8f9fb6792e654c2d8d8382f6f01b">armnn::LayerBindingId</a> <span class="keywordtype">id</span> = 0)<span class="keyword"> override</span></div><div class="line"><a name="l00442"></a><span class="lineno">  442</span>&#160;<span class="keyword">    </span>{</div><div class="line"><a name="l00443"></a><span class="lineno">  443</span>&#160;        <a class="code" href="namespacearmnn.xhtml#a44affeeb090c3c6a3062830562672e84">armnn::IgnoreUnused</a>(descriptor, constants, <span class="keywordtype">id</span>);</div><div class="line"><a name="l00444"></a><span class="lineno">  444</span>&#160;        <span class="keywordflow">switch</span> (layer-&gt;<a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml#adceb04ae84c524e4d01881e3754a4d59">GetType</a>())</div><div class="line"><a name="l00445"></a><span class="lineno">  445</span>&#160;        {</div><div class="line"><a name="l00446"></a><span class="lineno">  446</span>&#160;            <span class="keywordflow">case</span> <a class="code" href="namespacearmnn.xhtml#a56943a0946e5f15e5e58054b8e7a04a4a890a37ff3bfe123414ba7e6f052b49f3">armnn::LayerType::QuantizedLstm</a>:</div><div class="line"><a name="l00447"></a><span class="lineno">  447</span>&#160;            {</div><div class="line"><a name="l00448"></a><span class="lineno">  448</span>&#160;                <a class="code" href="classarmnn_1_1_test_layer_visitor.xhtml#a3fb243351836fe2feebd36e7e3869154">CheckLayerPointer</a>(layer);</div><div class="line"><a name="l00449"></a><span class="lineno">  449</span>&#160;                <a class="code" href="classarmnn_1_1_test_layer_visitor.xhtml#a50d9ed2d05fac25795824c880f0eee6b">CheckLayerName</a>(name);</div><div class="line"><a name="l00450"></a><span class="lineno">  450</span>&#160;                CheckInputParameters(m_InputParams);</div><div class="line"><a name="l00451"></a><span class="lineno">  451</span>&#160;                <span class="keywordflow">break</span>;</div><div class="line"><a name="l00452"></a><span class="lineno">  452</span>&#160;            }</div><div class="line"><a name="l00453"></a><span class="lineno">  453</span>&#160;            <span class="keywordflow">default</span>:</div><div class="line"><a name="l00454"></a><span class="lineno">  454</span>&#160;            {</div><div class="line"><a name="l00455"></a><span class="lineno">  455</span>&#160;                <a class="code" href="classarmnn_1_1_strategy_base.xhtml#a9a0391eb40693be520f3092c130c2a57">m_DefaultStrategy</a>.<a class="code" href="structarmnn_1_1_no_throw_strategy.xhtml#a2aca18ff985599b0b917abb4292b8a91">Apply</a>(<a class="code" href="namespacearmnn.xhtml#addb6b14dd1b632263ffe77430259a7c4">GetLayerTypeAsCString</a>(layer-&gt;<a class="code" href="classarmnn_1_1_i_connectable_layer.xhtml#adceb04ae84c524e4d01881e3754a4d59">GetType</a>()));</div><div class="line"><a name="l00456"></a><span class="lineno">  456</span>&#160;            }</div><div class="line"><a name="l00457"></a><span class="lineno">  457</span>&#160;        }</div><div class="line"><a name="l00458"></a><span class="lineno">  458</span>&#160;    }</div><div class="line"><a name="l00459"></a><span class="lineno">  459</span>&#160;</div><div class="line"><a name="l00460"></a><span class="lineno">  460</span>&#160;<span class="keyword">protected</span>:</div><div class="line"><a name="l00461"></a><span class="lineno">  461</span>&#160;    <span class="keywordtype">void</span> CheckInputParameters(<span class="keyword">const</span> <a class="code" href="structarmnn_1_1_quantized_lstm_input_params.xhtml">QuantizedLstmInputParams</a>&amp; params);</div><div class="line"><a name="l00462"></a><span class="lineno">  462</span>&#160;</div><div class="line"><a name="l00463"></a><span class="lineno">  463</span>&#160;<span class="keyword">private</span>:</div><div class="line"><a name="l00464"></a><span class="lineno">  464</span>&#160;    <a class="code" href="structarmnn_1_1_quantized_lstm_input_params.xhtml">QuantizedLstmInputParams</a> m_InputParams;</div><div class="line"><a name="l00465"></a><span class="lineno">  465</span>&#160;};</div><div class="line"><a name="l00466"></a><span class="lineno">  466</span>&#160;</div><div class="line"><a name="l00467"></a><span class="lineno">  467</span>&#160;</div><div class="line"><a name="l00468"></a><span class="lineno">  468</span>&#160;} <span class="comment">// namespace armnn</span></div><div class="ttc" id="classarmnn_1_1_test_layer_visitor_xhtml"><div class="ttname"><a href="classarmnn_1_1_test_layer_visitor.xhtml">armnn::TestLayerVisitor</a></div><div class="ttdef"><b>Definition:</b> <a href="_test_layer_visitor_8hpp_source.xhtml#l00014">TestLayerVisitor.hpp:14</a></div></div>
<div class="ttc" id="classarmnn_1_1_test_depthwise_convolution2d_layer_visitor_xhtml_a49f7f1098adb86fd2197d9aee3924de2"><div class="ttname"><a href="classarmnn_1_1_test_depthwise_convolution2d_layer_visitor.xhtml#a49f7f1098adb86fd2197d9aee3924de2">armnn::TestDepthwiseConvolution2dLayerVisitor::ExecuteStrategy</a></div><div class="ttdeci">void ExecuteStrategy(const armnn::IConnectableLayer *layer, const armnn::BaseDescriptor &amp;descriptor, const std::vector&lt; armnn::ConstTensor &gt; &amp;constants, const char *name, const armnn::LayerBindingId id=0) override</div><div class="ttdef"><b>Definition:</b> <a href="_const_tensor_layer_visitor_8hpp_source.xhtml#l00088">ConstTensorLayerVisitor.hpp:88</a></div></div>
<div class="ttc" id="classarmnn_1_1_test_layer_visitor_xhtml_a50d9ed2d05fac25795824c880f0eee6b"><div class="ttname"><a href="classarmnn_1_1_test_layer_visitor.xhtml#a50d9ed2d05fac25795824c880f0eee6b">armnn::TestLayerVisitor::CheckLayerName</a></div><div class="ttdeci">void CheckLayerName(const char *name)</div><div class="ttdef"><b>Definition:</b> <a href="_test_layer_visitor_8cpp_source.xhtml#l00013">TestLayerVisitor.cpp:13</a></div></div>
<div class="ttc" id="_test_layer_visitor_8hpp_xhtml"><div class="ttname"><a href="_test_layer_visitor_8hpp.xhtml">TestLayerVisitor.hpp</a></div></div>
<div class="ttc" id="structarmnn_1_1_lstm_input_params_xhtml_ab03e6e1514f74427916c892f473fe04c"><div class="ttname"><a href="structarmnn_1_1_lstm_input_params.xhtml#ab03e6e1514f74427916c892f473fe04c">armnn::LstmInputParams::m_ProjectionWeights</a></div><div class="ttdeci">const ConstTensor * m_ProjectionWeights</div><div class="ttdef"><b>Definition:</b> <a href="_lstm_params_8hpp_source.xhtml#l00055">LstmParams.hpp:55</a></div></div>
<div class="ttc" id="classarmnn_1_1_test_fully_connected_layer_vistor_xhtml"><div class="ttname"><a href="classarmnn_1_1_test_fully_connected_layer_vistor.xhtml">armnn::TestFullyConnectedLayerVistor</a></div><div class="ttdef"><b>Definition:</b> <a href="_const_tensor_layer_visitor_8hpp_source.xhtml#l00126">ConstTensorLayerVisitor.hpp:126</a></div></div>
<div class="ttc" id="classarmnn_1_1_test_batch_normalization_layer_visitor_xhtml"><div class="ttname"><a href="classarmnn_1_1_test_batch_normalization_layer_visitor.xhtml">armnn::TestBatchNormalizationLayerVisitor</a></div><div class="ttdef"><b>Definition:</b> <a href="_const_tensor_layer_visitor_8hpp_source.xhtml#l00166">ConstTensorLayerVisitor.hpp:166</a></div></div>
<div class="ttc" id="classarmnn_1_1_i_connectable_layer_xhtml"><div class="ttname"><a href="classarmnn_1_1_i_connectable_layer.xhtml">armnn::IConnectableLayer</a></div><div class="ttdoc">Interface for a layer that is connectable to other layers via InputSlots and OutputSlots. </div><div class="ttdef"><b>Definition:</b> <a href="_i_network_8hpp_source.xhtml#l00066">INetwork.hpp:66</a></div></div>
<div class="ttc" id="structarmnn_1_1_lstm_input_params_xhtml_a4a9d678146f572808a361dbdc5489f38"><div class="ttname"><a href="structarmnn_1_1_lstm_input_params.xhtml#a4a9d678146f572808a361dbdc5489f38">armnn::LstmInputParams::m_CellBias</a></div><div class="ttdeci">const ConstTensor * m_CellBias</div><div class="ttdef"><b>Definition:</b> <a href="_lstm_params_8hpp_source.xhtml#l00053">LstmParams.hpp:53</a></div></div>
<div class="ttc" id="classarmnn_1_1_optional_xhtml"><div class="ttname"><a href="classarmnn_1_1_optional.xhtml">armnn::Optional</a></div><div class="ttdef"><b>Definition:</b> <a href="_optional_8hpp_source.xhtml#l00270">Optional.hpp:270</a></div></div>
<div class="ttc" id="structarmnn_1_1_lstm_input_params_xhtml_afe204ca375b74e9a72640c9227918d0a"><div class="ttname"><a href="structarmnn_1_1_lstm_input_params.xhtml#afe204ca375b74e9a72640c9227918d0a">armnn::LstmInputParams::m_CellToOutputWeights</a></div><div class="ttdeci">const ConstTensor * m_CellToOutputWeights</div><div class="ttdef"><b>Definition:</b> <a href="_lstm_params_8hpp_source.xhtml#l00050">LstmParams.hpp:50</a></div></div>
<div class="ttc" id="classarmnn_1_1_test_fully_connected_layer_vistor_xhtml_a49f7f1098adb86fd2197d9aee3924de2"><div class="ttname"><a href="classarmnn_1_1_test_fully_connected_layer_vistor.xhtml#a49f7f1098adb86fd2197d9aee3924de2">armnn::TestFullyConnectedLayerVistor::ExecuteStrategy</a></div><div class="ttdeci">void ExecuteStrategy(const armnn::IConnectableLayer *layer, const armnn::BaseDescriptor &amp;descriptor, const std::vector&lt; armnn::ConstTensor &gt; &amp;constants, const char *name, const armnn::LayerBindingId id=0) override</div><div class="ttdef"><b>Definition:</b> <a href="_const_tensor_layer_visitor_8hpp_source.xhtml#l00137">ConstTensorLayerVisitor.hpp:137</a></div></div>
<div class="ttc" id="classarmnn_1_1_test_depthwise_convolution2d_layer_visitor_xhtml"><div class="ttname"><a href="classarmnn_1_1_test_depthwise_convolution2d_layer_visitor.xhtml">armnn::TestDepthwiseConvolution2dLayerVisitor</a></div><div class="ttdef"><b>Definition:</b> <a href="_const_tensor_layer_visitor_8hpp_source.xhtml#l00073">ConstTensorLayerVisitor.hpp:73</a></div></div>
<div class="ttc" id="structarmnn_1_1_convolution2d_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_convolution2d_descriptor.xhtml">armnn::Convolution2dDescriptor</a></div><div class="ttdoc">A Convolution2dDescriptor for the Convolution2dLayer. </div><div class="ttdef"><b>Definition:</b> <a href="_descriptors_8hpp_source.xhtml#l00499">Descriptors.hpp:499</a></div></div>
<div class="ttc" id="structarmnn_1_1_lstm_input_params_xhtml_a484bafa2f8453a7c5a4a00b92a61b006"><div class="ttname"><a href="structarmnn_1_1_lstm_input_params.xhtml#a484bafa2f8453a7c5a4a00b92a61b006">armnn::LstmInputParams::m_CellToInputWeights</a></div><div class="ttdeci">const ConstTensor * m_CellToInputWeights</div><div class="ttdef"><b>Definition:</b> <a href="_lstm_params_8hpp_source.xhtml#l00048">LstmParams.hpp:48</a></div></div>
<div class="ttc" id="classarmnn_1_1_lstm_visitor_xhtml_a25ff1c2dd56d7b0d46fee306e45834b7"><div class="ttname"><a href="classarmnn_1_1_lstm_visitor.xhtml#a25ff1c2dd56d7b0d46fee306e45834b7">armnn::LstmVisitor::m_InputParams</a></div><div class="ttdeci">LstmInputParams m_InputParams</div><div class="ttdef"><b>Definition:</b> <a href="_const_tensor_layer_visitor_8hpp_source.xhtml#l00270">ConstTensorLayerVisitor.hpp:270</a></div></div>
<div class="ttc" id="classarmnn_1_1_test_layer_visitor_xhtml_a3fb243351836fe2feebd36e7e3869154"><div class="ttname"><a href="classarmnn_1_1_test_layer_visitor.xhtml#a3fb243351836fe2feebd36e7e3869154">armnn::TestLayerVisitor::CheckLayerPointer</a></div><div class="ttdeci">void CheckLayerPointer(const IConnectableLayer *layer)</div><div class="ttdef"><b>Definition:</b> <a href="_test_layer_visitor_8cpp_source.xhtml#l00029">TestLayerVisitor.cpp:29</a></div></div>
<div class="ttc" id="_quantized_lstm_params_8hpp_xhtml"><div class="ttname"><a href="_quantized_lstm_params_8hpp.xhtml">QuantizedLstmParams.hpp</a></div></div>
<div class="ttc" id="structarmnn_1_1_lstm_input_params_xhtml_a9e081a9b94defb30d1558dc912507e0e"><div class="ttname"><a href="structarmnn_1_1_lstm_input_params.xhtml#a9e081a9b94defb30d1558dc912507e0e">armnn::LstmInputParams::m_InputGateBias</a></div><div class="ttdeci">const ConstTensor * m_InputGateBias</div><div class="ttdef"><b>Definition:</b> <a href="_lstm_params_8hpp_source.xhtml#l00051">LstmParams.hpp:51</a></div></div>
<div class="ttc" id="namespacearmnn_xhtml_a56943a0946e5f15e5e58054b8e7a04a4acab78faff25393e9defd1911cb58133e"><div class="ttname"><a href="namespacearmnn.xhtml#a56943a0946e5f15e5e58054b8e7a04a4acab78faff25393e9defd1911cb58133e">armnn::LayerType::FullyConnected</a></div></div>
<div class="ttc" id="structarmnn_1_1_lstm_input_params_xhtml_a1759754ccb88ecc9af44f3aae6e244ee"><div class="ttname"><a href="structarmnn_1_1_lstm_input_params.xhtml#a1759754ccb88ecc9af44f3aae6e244ee">armnn::LstmInputParams::m_RecurrentToCellWeights</a></div><div class="ttdeci">const ConstTensor * m_RecurrentToCellWeights</div><div class="ttdef"><b>Definition:</b> <a href="_lstm_params_8hpp_source.xhtml#l00046">LstmParams.hpp:46</a></div></div>
<div class="ttc" id="classarmnn_1_1_test_lstm_layer_visitor_xhtml"><div class="ttname"><a href="classarmnn_1_1_test_lstm_layer_visitor.xhtml">armnn::TestLstmLayerVisitor</a></div><div class="ttdef"><b>Definition:</b> <a href="_const_tensor_layer_visitor_8hpp_source.xhtml#l00345">ConstTensorLayerVisitor.hpp:345</a></div></div>
<div class="ttc" id="classarmnn_1_1_test_batch_normalization_layer_visitor_xhtml_a49f7f1098adb86fd2197d9aee3924de2"><div class="ttname"><a href="classarmnn_1_1_test_batch_normalization_layer_visitor.xhtml#a49f7f1098adb86fd2197d9aee3924de2">armnn::TestBatchNormalizationLayerVisitor::ExecuteStrategy</a></div><div class="ttdeci">void ExecuteStrategy(const armnn::IConnectableLayer *layer, const armnn::BaseDescriptor &amp;descriptor, const std::vector&lt; armnn::ConstTensor &gt; &amp;constants, const char *name, const armnn::LayerBindingId id=0) override</div><div class="ttdef"><b>Definition:</b> <a href="_const_tensor_layer_visitor_8hpp_source.xhtml#l00183">ConstTensorLayerVisitor.hpp:183</a></div></div>
<div class="ttc" id="structarmnn_1_1_lstm_input_params_xhtml_af0f796fba1a2be9c56b4c9ee534577ee"><div class="ttname"><a href="structarmnn_1_1_lstm_input_params.xhtml#af0f796fba1a2be9c56b4c9ee534577ee">armnn::LstmInputParams::m_ForgetLayerNormWeights</a></div><div class="ttdeci">const ConstTensor * m_ForgetLayerNormWeights</div><div class="ttdef"><b>Definition:</b> <a href="_lstm_params_8hpp_source.xhtml#l00058">LstmParams.hpp:58</a></div></div>
<div class="ttc" id="structarmnn_1_1_lstm_input_params_xhtml_a35b112e30c3eb153806a2a8c16d178e3"><div class="ttname"><a href="structarmnn_1_1_lstm_input_params.xhtml#a35b112e30c3eb153806a2a8c16d178e3">armnn::LstmInputParams::m_CellToForgetWeights</a></div><div class="ttdeci">const ConstTensor * m_CellToForgetWeights</div><div class="ttdef"><b>Definition:</b> <a href="_lstm_params_8hpp_source.xhtml#l00049">LstmParams.hpp:49</a></div></div>
<div class="ttc" id="namespacearmnn_xhtml"><div class="ttname"><a href="namespacearmnn.xhtml">armnn</a></div><div class="ttdoc">Copyright (c) 2021 ARM Limited and Contributors. </div><div class="ttdef"><b>Definition:</b> <a href="01__00__quick__start_8dox_source.xhtml#l00006">01_00_quick_start.dox:6</a></div></div>
<div class="ttc" id="namespacearmnn_xhtml_a44affeeb090c3c6a3062830562672e84"><div class="ttname"><a href="namespacearmnn.xhtml#a44affeeb090c3c6a3062830562672e84">armnn::IgnoreUnused</a></div><div class="ttdeci">void IgnoreUnused(Ts &amp;&amp;...)</div><div class="ttdef"><b>Definition:</b> <a href="_ignore_unused_8hpp_source.xhtml#l00014">IgnoreUnused.hpp:14</a></div></div>
<div class="ttc" id="structarmnn_1_1_quantized_lstm_input_params_xhtml"><div class="ttname"><a href="structarmnn_1_1_quantized_lstm_input_params.xhtml">armnn::QuantizedLstmInputParams</a></div><div class="ttdef"><b>Definition:</b> <a href="_quantized_lstm_params_8hpp_source.xhtml#l00013">QuantizedLstmParams.hpp:13</a></div></div>
<div class="ttc" id="classarmnn_1_1_test_constant_layer_visitor_xhtml_a49f7f1098adb86fd2197d9aee3924de2"><div class="ttname"><a href="classarmnn_1_1_test_constant_layer_visitor.xhtml#a49f7f1098adb86fd2197d9aee3924de2">armnn::TestConstantLayerVisitor::ExecuteStrategy</a></div><div class="ttdeci">void ExecuteStrategy(const armnn::IConnectableLayer *layer, const armnn::BaseDescriptor &amp;descriptor, const std::vector&lt; armnn::ConstTensor &gt; &amp;constants, const char *name, const armnn::LayerBindingId id=0) override</div><div class="ttdef"><b>Definition:</b> <a href="_const_tensor_layer_visitor_8hpp_source.xhtml#l00230">ConstTensorLayerVisitor.hpp:230</a></div></div>
<div class="ttc" id="classarmnn_1_1_lstm_visitor_xhtml_a630ee7a34dcdff98c6815676d2c55f33"><div class="ttname"><a href="classarmnn_1_1_lstm_visitor.xhtml#a630ee7a34dcdff98c6815676d2c55f33">armnn::LstmVisitor::CheckInputParameters</a></div><div class="ttdeci">void CheckInputParameters(const LayerType *layer, const LstmInputParams &amp;inputParams)</div><div class="ttdef"><b>Definition:</b> <a href="_const_tensor_layer_visitor_8hpp_source.xhtml#l00274">ConstTensorLayerVisitor.hpp:274</a></div></div>
<div class="ttc" id="_lstm_params_8hpp_xhtml"><div class="ttname"><a href="_lstm_params_8hpp.xhtml">LstmParams.hpp</a></div></div>
<div class="ttc" id="classarmnn_1_1_test_depthwise_convolution2d_layer_visitor_xhtml_a4b830ea7321e27826a2d2c5c3e9e0105"><div class="ttname"><a href="classarmnn_1_1_test_depthwise_convolution2d_layer_visitor.xhtml#a4b830ea7321e27826a2d2c5c3e9e0105">armnn::TestDepthwiseConvolution2dLayerVisitor::TestDepthwiseConvolution2dLayerVisitor</a></div><div class="ttdeci">TestDepthwiseConvolution2dLayerVisitor(const DepthwiseConvolution2dDescriptor &amp;descriptor, const ConstTensor &amp;weights, const Optional&lt; ConstTensor &gt; &amp;biases, const char *name=nullptr)</div><div class="ttdef"><b>Definition:</b> <a href="_const_tensor_layer_visitor_8hpp_source.xhtml#l00076">ConstTensorLayerVisitor.hpp:76</a></div></div>
<div class="ttc" id="namespacearmnn_xhtml_ab8cf8f9fb6792e654c2d8d8382f6f01b"><div class="ttname"><a href="namespacearmnn.xhtml#ab8cf8f9fb6792e654c2d8d8382f6f01b">armnn::LayerBindingId</a></div><div class="ttdeci">int LayerBindingId</div><div class="ttdoc">Type of identifiers for bindable layers (inputs, outputs). </div><div class="ttdef"><b>Definition:</b> <a href="_types_8hpp_source.xhtml#l00277">Types.hpp:277</a></div></div>
<div class="ttc" id="structarmnn_1_1_lstm_input_params_xhtml_a8c0f6d48705f40c5590dde09be262222"><div class="ttname"><a href="structarmnn_1_1_lstm_input_params.xhtml#a8c0f6d48705f40c5590dde09be262222">armnn::LstmInputParams::m_OutputGateBias</a></div><div class="ttdeci">const ConstTensor * m_OutputGateBias</div><div class="ttdef"><b>Definition:</b> <a href="_lstm_params_8hpp_source.xhtml#l00054">LstmParams.hpp:54</a></div></div>
<div class="ttc" id="classarmnn_1_1_lstm_visitor_xhtml"><div class="ttname"><a href="classarmnn_1_1_lstm_visitor.xhtml">armnn::LstmVisitor</a></div><div class="ttdef"><b>Definition:</b> <a href="_const_tensor_layer_visitor_8hpp_source.xhtml#l00258">ConstTensorLayerVisitor.hpp:258</a></div></div>
<div class="ttc" id="classarmnn_1_1_test_layer_visitor_xhtml_ab49c9a185af94e39ae9cd81aa8ec926c"><div class="ttname"><a href="classarmnn_1_1_test_layer_visitor.xhtml#ab49c9a185af94e39ae9cd81aa8ec926c">armnn::TestLayerVisitor::CheckConstTensors</a></div><div class="ttdeci">void CheckConstTensors(const ConstTensor &amp;expected, const ConstTensor &amp;actual)</div><div class="ttdef"><b>Definition:</b> <a href="_test_layer_visitor_8cpp_source.xhtml#l00034">TestLayerVisitor.cpp:34</a></div></div>
<div class="ttc" id="structarmnn_1_1_base_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_base_descriptor.xhtml">armnn::BaseDescriptor</a></div><div class="ttdoc">Base class for all descriptors. </div><div class="ttdef"><b>Definition:</b> <a href="_descriptors_8hpp_source.xhtml#l00022">Descriptors.hpp:22</a></div></div>
<div class="ttc" id="_polymorphic_downcast_8hpp_xhtml"><div class="ttname"><a href="_polymorphic_downcast_8hpp.xhtml">PolymorphicDowncast.hpp</a></div></div>
<div class="ttc" id="classarmnn_1_1_test_batch_normalization_layer_visitor_xhtml_ac22fdba4058911b3b322e7382203973a"><div class="ttname"><a href="classarmnn_1_1_test_batch_normalization_layer_visitor.xhtml#ac22fdba4058911b3b322e7382203973a">armnn::TestBatchNormalizationLayerVisitor::TestBatchNormalizationLayerVisitor</a></div><div class="ttdeci">TestBatchNormalizationLayerVisitor(const BatchNormalizationDescriptor &amp;descriptor, const ConstTensor &amp;mean, const ConstTensor &amp;variance, const ConstTensor &amp;beta, const ConstTensor &amp;gamma, const char *name=nullptr)</div><div class="ttdef"><b>Definition:</b> <a href="_const_tensor_layer_visitor_8hpp_source.xhtml#l00169">ConstTensorLayerVisitor.hpp:169</a></div></div>
<div class="ttc" id="structarmnn_1_1_lstm_input_params_xhtml_a0cd848f65ec31778d708852f0042fe37"><div class="ttname"><a href="structarmnn_1_1_lstm_input_params.xhtml#a0cd848f65ec31778d708852f0042fe37">armnn::LstmInputParams::m_InputLayerNormWeights</a></div><div class="ttdeci">const ConstTensor * m_InputLayerNormWeights</div><div class="ttdef"><b>Definition:</b> <a href="_lstm_params_8hpp_source.xhtml#l00057">LstmParams.hpp:57</a></div></div>
<div class="ttc" id="classarmnn_1_1_strategy_base_xhtml_a9a0391eb40693be520f3092c130c2a57"><div class="ttname"><a href="classarmnn_1_1_strategy_base.xhtml#a9a0391eb40693be520f3092c130c2a57">armnn::StrategyBase&lt; NoThrowStrategy &gt;::m_DefaultStrategy</a></div><div class="ttdeci">NoThrowStrategy m_DefaultStrategy</div><div class="ttdef"><b>Definition:</b> <a href="_strategy_base_8hpp_source.xhtml#l00050">StrategyBase.hpp:50</a></div></div>
<div class="ttc" id="structarmnn_1_1_lstm_input_params_xhtml_a56b81ca8ba4b4937e0787e4951f043fc"><div class="ttname"><a href="structarmnn_1_1_lstm_input_params.xhtml#a56b81ca8ba4b4937e0787e4951f043fc">armnn::LstmInputParams::m_RecurrentToOutputWeights</a></div><div class="ttdeci">const ConstTensor * m_RecurrentToOutputWeights</div><div class="ttdef"><b>Definition:</b> <a href="_lstm_params_8hpp_source.xhtml#l00047">LstmParams.hpp:47</a></div></div>
<div class="ttc" id="structarmnn_1_1_lstm_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_lstm_descriptor.xhtml">armnn::LstmDescriptor</a></div><div class="ttdoc">An LstmDescriptor for the LstmLayer. </div><div class="ttdef"><b>Definition:</b> <a href="_descriptors_8hpp_source.xhtml#l01078">Descriptors.hpp:1078</a></div></div>
<div class="ttc" id="classarmnn_1_1_test_fully_connected_layer_vistor_xhtml_a324dca4ce8f4e24698c9c64bb9df447e"><div class="ttname"><a href="classarmnn_1_1_test_fully_connected_layer_vistor.xhtml#a324dca4ce8f4e24698c9c64bb9df447e">armnn::TestFullyConnectedLayerVistor::TestFullyConnectedLayerVistor</a></div><div class="ttdeci">TestFullyConnectedLayerVistor(const FullyConnectedDescriptor &amp;descriptor, const char *name=nullptr)</div><div class="ttdef"><b>Definition:</b> <a href="_const_tensor_layer_visitor_8hpp_source.xhtml#l00129">ConstTensorLayerVisitor.hpp:129</a></div></div>
<div class="ttc" id="structarmnn_1_1_lstm_input_params_xhtml_a44b0e6b16708df7f0d2bbab141688aaa"><div class="ttname"><a href="structarmnn_1_1_lstm_input_params.xhtml#a44b0e6b16708df7f0d2bbab141688aaa">armnn::LstmInputParams::m_ProjectionBias</a></div><div class="ttdeci">const ConstTensor * m_ProjectionBias</div><div class="ttdef"><b>Definition:</b> <a href="_lstm_params_8hpp_source.xhtml#l00056">LstmParams.hpp:56</a></div></div>
<div class="ttc" id="structarmnn_1_1_fully_connected_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_fully_connected_descriptor.xhtml">armnn::FullyConnectedDescriptor</a></div><div class="ttdoc">A FullyConnectedDescriptor for the FullyConnectedLayer. </div><div class="ttdef"><b>Definition:</b> <a href="_descriptors_8hpp_source.xhtml#l00468">Descriptors.hpp:468</a></div></div>
<div class="ttc" id="classarmnn_1_1_const_tensor_xhtml"><div class="ttname"><a href="classarmnn_1_1_const_tensor.xhtml">armnn::ConstTensor</a></div><div class="ttdoc">A tensor defined by a TensorInfo (shape and data type) and an immutable backing store. </div><div class="ttdef"><b>Definition:</b> <a href="_tensor_8hpp_source.xhtml#l00327">Tensor.hpp:327</a></div></div>
<div class="ttc" id="structarmnn_1_1_lstm_input_params_xhtml"><div class="ttname"><a href="structarmnn_1_1_lstm_input_params.xhtml">armnn::LstmInputParams</a></div><div class="ttdef"><b>Definition:</b> <a href="_lstm_params_8hpp_source.xhtml#l00013">LstmParams.hpp:13</a></div></div>
<div class="ttc" id="classarmnn_1_1_test_quantized_lstm_layer_visitor_xhtml_a49f7f1098adb86fd2197d9aee3924de2"><div class="ttname"><a href="classarmnn_1_1_test_quantized_lstm_layer_visitor.xhtml#a49f7f1098adb86fd2197d9aee3924de2">armnn::TestQuantizedLstmLayerVisitor::ExecuteStrategy</a></div><div class="ttdeci">void ExecuteStrategy(const armnn::IConnectableLayer *layer, const armnn::BaseDescriptor &amp;descriptor, const std::vector&lt; armnn::ConstTensor &gt; &amp;constants, const char *name, const armnn::LayerBindingId id=0) override</div><div class="ttdef"><b>Definition:</b> <a href="_const_tensor_layer_visitor_8hpp_source.xhtml#l00437">ConstTensorLayerVisitor.hpp:437</a></div></div>
<div class="ttc" id="namespacearmnn_xhtml_a56943a0946e5f15e5e58054b8e7a04a4adb033d2f81b68f9a17e8f62de69fed4a"><div class="ttname"><a href="namespacearmnn.xhtml#a56943a0946e5f15e5e58054b8e7a04a4adb033d2f81b68f9a17e8f62de69fed4a">armnn::LayerType::Convolution2d</a></div></div>
<div class="ttc" id="classarmnn_1_1_test_convolution2d_layer_visitor_xhtml_aaf33927bcb93fa77d08e4bd547c481d9"><div class="ttname"><a href="classarmnn_1_1_test_convolution2d_layer_visitor.xhtml#aaf33927bcb93fa77d08e4bd547c481d9">armnn::TestConvolution2dLayerVisitor::TestConvolution2dLayerVisitor</a></div><div class="ttdeci">TestConvolution2dLayerVisitor(const Convolution2dDescriptor &amp;convolution2dDescriptor, const ConstTensor &amp;weights, const Optional&lt; ConstTensor &gt; &amp;biases, const char *name=nullptr)</div><div class="ttdef"><b>Definition:</b> <a href="_const_tensor_layer_visitor_8hpp_source.xhtml#l00023">ConstTensorLayerVisitor.hpp:23</a></div></div>
<div class="ttc" id="classarmnn_1_1_test_constant_layer_visitor_xhtml_acdb9da3b37ea3265b7ffdf1b5ff3b342"><div class="ttname"><a href="classarmnn_1_1_test_constant_layer_visitor.xhtml#acdb9da3b37ea3265b7ffdf1b5ff3b342">armnn::TestConstantLayerVisitor::TestConstantLayerVisitor</a></div><div class="ttdeci">TestConstantLayerVisitor(const ConstTensor &amp;input, const char *name=nullptr)</div><div class="ttdef"><b>Definition:</b> <a href="_const_tensor_layer_visitor_8hpp_source.xhtml#l00224">ConstTensorLayerVisitor.hpp:224</a></div></div>
<div class="ttc" id="classarmnn_1_1_test_convolution2d_layer_visitor_xhtml_ac8b078bb166c52b45f04cae3e74557ad"><div class="ttname"><a href="classarmnn_1_1_test_convolution2d_layer_visitor.xhtml#ac8b078bb166c52b45f04cae3e74557ad">armnn::TestConvolution2dLayerVisitor::CheckDescriptor</a></div><div class="ttdeci">void CheckDescriptor(const Convolution2dDescriptor &amp;convolution2dDescriptor)</div><div class="ttdef"><b>Definition:</b> <a href="_const_tensor_layer_visitor_8cpp_source.xhtml#l00014">ConstTensorLayerVisitor.cpp:14</a></div></div>
<div class="ttc" id="structarmnn_1_1_q_lstm_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_q_lstm_descriptor.xhtml">armnn::QLstmDescriptor</a></div><div class="ttdoc">A QLstmDescriptor for the QLstmLayer. </div><div class="ttdef"><b>Definition:</b> <a href="_descriptors_8hpp_source.xhtml#l01332">Descriptors.hpp:1332</a></div></div>
<div class="ttc" id="include_2armnn_2backends_2_tensor_handle_8hpp_xhtml"><div class="ttname"><a href="include_2armnn_2backends_2_tensor_handle_8hpp.xhtml">TensorHandle.hpp</a></div></div>
<div class="ttc" id="structarmnn_1_1_no_throw_strategy_xhtml_a2aca18ff985599b0b917abb4292b8a91"><div class="ttname"><a href="structarmnn_1_1_no_throw_strategy.xhtml#a2aca18ff985599b0b917abb4292b8a91">armnn::NoThrowStrategy::Apply</a></div><div class="ttdeci">void Apply(const std::string &amp;)</div><div class="ttdef"><b>Definition:</b> <a href="_strategy_base_8hpp_source.xhtml#l00022">StrategyBase.hpp:22</a></div></div>
<div class="ttc" id="classarmnn_1_1_test_quantized_lstm_layer_visitor_xhtml"><div class="ttname"><a href="classarmnn_1_1_test_quantized_lstm_layer_visitor.xhtml">armnn::TestQuantizedLstmLayerVisitor</a></div><div class="ttdef"><b>Definition:</b> <a href="_const_tensor_layer_visitor_8hpp_source.xhtml#l00428">ConstTensorLayerVisitor.hpp:428</a></div></div>
<div class="ttc" id="classarmnn_1_1_test_q_lstm_layer_visitor_xhtml"><div class="ttname"><a href="classarmnn_1_1_test_q_lstm_layer_visitor.xhtml">armnn::TestQLstmLayerVisitor</a></div><div class="ttdef"><b>Definition:</b> <a href="_const_tensor_layer_visitor_8hpp_source.xhtml#l00386">ConstTensorLayerVisitor.hpp:386</a></div></div>
<div class="ttc" id="classarmnn_1_1_i_connectable_layer_xhtml_adceb04ae84c524e4d01881e3754a4d59"><div class="ttname"><a href="classarmnn_1_1_i_connectable_layer.xhtml#adceb04ae84c524e4d01881e3754a4d59">armnn::IConnectableLayer::GetType</a></div><div class="ttdeci">virtual LayerType GetType() const =0</div><div class="ttdoc">Returns the armnn::LayerType of this layer. </div></div>
<div class="ttc" id="classarmnn_1_1_test_convolution2d_layer_visitor_xhtml_a49f7f1098adb86fd2197d9aee3924de2"><div class="ttname"><a href="classarmnn_1_1_test_convolution2d_layer_visitor.xhtml#a49f7f1098adb86fd2197d9aee3924de2">armnn::TestConvolution2dLayerVisitor::ExecuteStrategy</a></div><div class="ttdeci">void ExecuteStrategy(const armnn::IConnectableLayer *layer, const armnn::BaseDescriptor &amp;descriptor, const std::vector&lt; armnn::ConstTensor &gt; &amp;constants, const char *name, const armnn::LayerBindingId id=0) override</div><div class="ttdef"><b>Definition:</b> <a href="_const_tensor_layer_visitor_8hpp_source.xhtml#l00035">ConstTensorLayerVisitor.hpp:35</a></div></div>
<div class="ttc" id="namespacearmnn_xhtml_a56943a0946e5f15e5e58054b8e7a04a4af97adbfc88b7012a0243215b1076e7e7"><div class="ttname"><a href="namespacearmnn.xhtml#a56943a0946e5f15e5e58054b8e7a04a4af97adbfc88b7012a0243215b1076e7e7">armnn::LayerType::DepthwiseConvolution2d</a></div></div>
<div class="ttc" id="classarmnn_1_1_test_constant_layer_visitor_xhtml"><div class="ttname"><a href="classarmnn_1_1_test_constant_layer_visitor.xhtml">armnn::TestConstantLayerVisitor</a></div><div class="ttdef"><b>Definition:</b> <a href="_const_tensor_layer_visitor_8hpp_source.xhtml#l00221">ConstTensorLayerVisitor.hpp:221</a></div></div>
<div class="ttc" id="structarmnn_1_1_lstm_input_params_xhtml_ad0b8c32bb5381f4cc999093ba3b98b43"><div class="ttname"><a href="structarmnn_1_1_lstm_input_params.xhtml#ad0b8c32bb5381f4cc999093ba3b98b43">armnn::LstmInputParams::m_CellLayerNormWeights</a></div><div class="ttdeci">const ConstTensor * m_CellLayerNormWeights</div><div class="ttdef"><b>Definition:</b> <a href="_lstm_params_8hpp_source.xhtml#l00059">LstmParams.hpp:59</a></div></div>
<div class="ttc" id="structarmnn_1_1_lstm_input_params_xhtml_ace7a1f1f1041b412b7d8ef82b95ff352"><div class="ttname"><a href="structarmnn_1_1_lstm_input_params.xhtml#ace7a1f1f1041b412b7d8ef82b95ff352">armnn::LstmInputParams::m_ForgetGateBias</a></div><div class="ttdeci">const ConstTensor * m_ForgetGateBias</div><div class="ttdef"><b>Definition:</b> <a href="_lstm_params_8hpp_source.xhtml#l00052">LstmParams.hpp:52</a></div></div>
<div class="ttc" id="structarmnn_1_1_lstm_input_params_xhtml_a49e11acda22742cbaf6f1b259ead0d84"><div class="ttname"><a href="structarmnn_1_1_lstm_input_params.xhtml#a49e11acda22742cbaf6f1b259ead0d84">armnn::LstmInputParams::m_InputToCellWeights</a></div><div class="ttdeci">const ConstTensor * m_InputToCellWeights</div><div class="ttdef"><b>Definition:</b> <a href="_lstm_params_8hpp_source.xhtml#l00042">LstmParams.hpp:42</a></div></div>
<div class="ttc" id="classarmnn_1_1_test_depthwise_convolution2d_layer_visitor_xhtml_a3d4d903af45c0c69dfc39d4f193824a0"><div class="ttname"><a href="classarmnn_1_1_test_depthwise_convolution2d_layer_visitor.xhtml#a3d4d903af45c0c69dfc39d4f193824a0">armnn::TestDepthwiseConvolution2dLayerVisitor::~TestDepthwiseConvolution2dLayerVisitor</a></div><div class="ttdeci">virtual ~TestDepthwiseConvolution2dLayerVisitor()</div><div class="ttdef"><b>Definition:</b> <a href="_const_tensor_layer_visitor_8hpp_source.xhtml#l00086">ConstTensorLayerVisitor.hpp:86</a></div></div>
<div class="ttc" id="classarmnn_1_1_test_convolution2d_layer_visitor_xhtml"><div class="ttname"><a href="classarmnn_1_1_test_convolution2d_layer_visitor.xhtml">armnn::TestConvolution2dLayerVisitor</a></div><div class="ttdef"><b>Definition:</b> <a href="_const_tensor_layer_visitor_8hpp_source.xhtml#l00020">ConstTensorLayerVisitor.hpp:20</a></div></div>
<div class="ttc" id="structarmnn_1_1_lstm_input_params_xhtml_a6e30c7b3451da3ea9cf4259fb602e6e6"><div class="ttname"><a href="structarmnn_1_1_lstm_input_params.xhtml#a6e30c7b3451da3ea9cf4259fb602e6e6">armnn::LstmInputParams::m_InputToOutputWeights</a></div><div class="ttdeci">const ConstTensor * m_InputToOutputWeights</div><div class="ttdef"><b>Definition:</b> <a href="_lstm_params_8hpp_source.xhtml#l00043">LstmParams.hpp:43</a></div></div>
<div class="ttc" id="classarmnn_1_1_test_fully_connected_layer_vistor_xhtml_a02ff0e9c7746d68985fae379fd6f1dfa"><div class="ttname"><a href="classarmnn_1_1_test_fully_connected_layer_vistor.xhtml#a02ff0e9c7746d68985fae379fd6f1dfa">armnn::TestFullyConnectedLayerVistor::~TestFullyConnectedLayerVistor</a></div><div class="ttdeci">virtual ~TestFullyConnectedLayerVistor()</div><div class="ttdef"><b>Definition:</b> <a href="_const_tensor_layer_visitor_8hpp_source.xhtml#l00135">ConstTensorLayerVisitor.hpp:135</a></div></div>
<div class="ttc" id="classarmnn_1_1_test_layer_visitor_xhtml_ac45b7720c3156ab1004a904da7d42b44"><div class="ttname"><a href="classarmnn_1_1_test_layer_visitor.xhtml#ac45b7720c3156ab1004a904da7d42b44">armnn::TestLayerVisitor::CheckConstTensorPtrs</a></div><div class="ttdeci">void CheckConstTensorPtrs(const std::string &amp;name, const ConstTensor *expected, const ConstTensor *actual)</div><div class="ttdef"><b>Definition:</b> <a href="_test_layer_visitor_8cpp_source.xhtml#l00090">TestLayerVisitor.cpp:90</a></div></div>
<div class="ttc" id="classarmnn_1_1_lstm_visitor_xhtml_a799315dab21d2631808bad70168df81e"><div class="ttname"><a href="classarmnn_1_1_lstm_visitor.xhtml#a799315dab21d2631808bad70168df81e">armnn::LstmVisitor::LstmVisitor</a></div><div class="ttdeci">LstmVisitor(const LstmInputParams &amp;params, const char *name=nullptr)</div><div class="ttdef"><b>Definition:</b> <a href="_const_tensor_layer_visitor_8hpp_source.xhtml#l00261">ConstTensorLayerVisitor.hpp:261</a></div></div>
<div class="ttc" id="structarmnn_1_1_lstm_input_params_xhtml_ae83131e16df1cace69395a5f99bc5ecb"><div class="ttname"><a href="structarmnn_1_1_lstm_input_params.xhtml#ae83131e16df1cace69395a5f99bc5ecb">armnn::LstmInputParams::m_RecurrentToForgetWeights</a></div><div class="ttdeci">const ConstTensor * m_RecurrentToForgetWeights</div><div class="ttdef"><b>Definition:</b> <a href="_lstm_params_8hpp_source.xhtml#l00045">LstmParams.hpp:45</a></div></div>
<div class="ttc" id="_descriptors_8hpp_xhtml"><div class="ttname"><a href="_descriptors_8hpp.xhtml">Descriptors.hpp</a></div></div>
<div class="ttc" id="namespacearmnn_xhtml_a56943a0946e5f15e5e58054b8e7a04a4a890a37ff3bfe123414ba7e6f052b49f3"><div class="ttname"><a href="namespacearmnn.xhtml#a56943a0946e5f15e5e58054b8e7a04a4a890a37ff3bfe123414ba7e6f052b49f3">armnn::LayerType::QuantizedLstm</a></div></div>
<div class="ttc" id="structarmnn_1_1_lstm_input_params_xhtml_a435d3651482bbfcc11263b4e4e0c900f"><div class="ttname"><a href="structarmnn_1_1_lstm_input_params.xhtml#a435d3651482bbfcc11263b4e4e0c900f">armnn::LstmInputParams::m_RecurrentToInputWeights</a></div><div class="ttdeci">const ConstTensor * m_RecurrentToInputWeights</div><div class="ttdef"><b>Definition:</b> <a href="_lstm_params_8hpp_source.xhtml#l00044">LstmParams.hpp:44</a></div></div>
<div class="ttc" id="classarmnn_1_1_test_lstm_layer_visitor_xhtml_a8dc5d172f9d6f4740aceddf9041282e2"><div class="ttname"><a href="classarmnn_1_1_test_lstm_layer_visitor.xhtml#a8dc5d172f9d6f4740aceddf9041282e2">armnn::TestLstmLayerVisitor::TestLstmLayerVisitor</a></div><div class="ttdeci">TestLstmLayerVisitor(const LstmDescriptor &amp;descriptor, const LstmInputParams &amp;params, const char *name=nullptr)</div><div class="ttdef"><b>Definition:</b> <a href="_const_tensor_layer_visitor_8hpp_source.xhtml#l00348">ConstTensorLayerVisitor.hpp:348</a></div></div>
<div class="ttc" id="namespacearmnn_xhtml_a56943a0946e5f15e5e58054b8e7a04a4a06b091bc9aea697ba473c71f0bb55925"><div class="ttname"><a href="namespacearmnn.xhtml#a56943a0946e5f15e5e58054b8e7a04a4a06b091bc9aea697ba473c71f0bb55925">armnn::LayerType::Lstm</a></div></div>
<div class="ttc" id="namespacearmnn_xhtml_a56943a0946e5f15e5e58054b8e7a04a4ae4743c3ec15d1d84169b17264634692e"><div class="ttname"><a href="namespacearmnn.xhtml#a56943a0946e5f15e5e58054b8e7a04a4ae4743c3ec15d1d84169b17264634692e">armnn::LayerType::BatchNormalization</a></div></div>
<div class="ttc" id="_layers_fwd_8hpp_xhtml"><div class="ttname"><a href="_layers_fwd_8hpp.xhtml">LayersFwd.hpp</a></div></div>
<div class="ttc" id="classarmnn_1_1_test_convolution2d_layer_visitor_xhtml_a4695ae76f4755027c44036cb10d8705c"><div class="ttname"><a href="classarmnn_1_1_test_convolution2d_layer_visitor.xhtml#a4695ae76f4755027c44036cb10d8705c">armnn::TestConvolution2dLayerVisitor::~TestConvolution2dLayerVisitor</a></div><div class="ttdeci">virtual ~TestConvolution2dLayerVisitor()</div><div class="ttdef"><b>Definition:</b> <a href="_const_tensor_layer_visitor_8hpp_source.xhtml#l00033">ConstTensorLayerVisitor.hpp:33</a></div></div>
<div class="ttc" id="structarmnn_1_1_lstm_input_params_xhtml_a9b18daea2e9f42386055326fd016519a"><div class="ttname"><a href="structarmnn_1_1_lstm_input_params.xhtml#a9b18daea2e9f42386055326fd016519a">armnn::LstmInputParams::m_OutputLayerNormWeights</a></div><div class="ttdeci">const ConstTensor * m_OutputLayerNormWeights</div><div class="ttdef"><b>Definition:</b> <a href="_lstm_params_8hpp_source.xhtml#l00060">LstmParams.hpp:60</a></div></div>
<div class="ttc" id="classarmnn_1_1_test_q_lstm_layer_visitor_xhtml_a1c9f427927208da2660adcfd3cd67aed"><div class="ttname"><a href="classarmnn_1_1_test_q_lstm_layer_visitor.xhtml#a1c9f427927208da2660adcfd3cd67aed">armnn::TestQLstmLayerVisitor::TestQLstmLayerVisitor</a></div><div class="ttdeci">TestQLstmLayerVisitor(const QLstmDescriptor &amp;descriptor, const LstmInputParams &amp;params, const char *name=nullptr)</div><div class="ttdef"><b>Definition:</b> <a href="_const_tensor_layer_visitor_8hpp_source.xhtml#l00389">ConstTensorLayerVisitor.hpp:389</a></div></div>
<div class="ttc" id="classarmnn_1_1_test_quantized_lstm_layer_visitor_xhtml_a1d72b0f4a1516fc85b2c04789d562392"><div class="ttname"><a href="classarmnn_1_1_test_quantized_lstm_layer_visitor.xhtml#a1d72b0f4a1516fc85b2c04789d562392">armnn::TestQuantizedLstmLayerVisitor::TestQuantizedLstmLayerVisitor</a></div><div class="ttdeci">TestQuantizedLstmLayerVisitor(const QuantizedLstmInputParams &amp;params, const char *name=nullptr)</div><div class="ttdef"><b>Definition:</b> <a href="_const_tensor_layer_visitor_8hpp_source.xhtml#l00431">ConstTensorLayerVisitor.hpp:431</a></div></div>
<div class="ttc" id="namespacearmnn_xhtml_a14d24d90ab4ba2956e92e27890ba4c91acb17869fe51048b5a5c4c6106551a255"><div class="ttname"><a href="namespacearmnn.xhtml#a14d24d90ab4ba2956e92e27890ba4c91acb17869fe51048b5a5c4c6106551a255">armnn::PaddingMode::Constant</a></div></div>
<div class="ttc" id="classarmnn_1_1_test_q_lstm_layer_visitor_xhtml_a49f7f1098adb86fd2197d9aee3924de2"><div class="ttname"><a href="classarmnn_1_1_test_q_lstm_layer_visitor.xhtml#a49f7f1098adb86fd2197d9aee3924de2">armnn::TestQLstmLayerVisitor::ExecuteStrategy</a></div><div class="ttdeci">void ExecuteStrategy(const armnn::IConnectableLayer *layer, const armnn::BaseDescriptor &amp;descriptor, const std::vector&lt; armnn::ConstTensor &gt; &amp;constants, const char *name, const armnn::LayerBindingId id=0) override</div><div class="ttdef"><b>Definition:</b> <a href="_const_tensor_layer_visitor_8hpp_source.xhtml#l00396">ConstTensorLayerVisitor.hpp:396</a></div></div>
<div class="ttc" id="classarmnn_1_1_test_lstm_layer_visitor_xhtml_a49f7f1098adb86fd2197d9aee3924de2"><div class="ttname"><a href="classarmnn_1_1_test_lstm_layer_visitor.xhtml#a49f7f1098adb86fd2197d9aee3924de2">armnn::TestLstmLayerVisitor::ExecuteStrategy</a></div><div class="ttdeci">void ExecuteStrategy(const armnn::IConnectableLayer *layer, const armnn::BaseDescriptor &amp;descriptor, const std::vector&lt; armnn::ConstTensor &gt; &amp;constants, const char *name, const armnn::LayerBindingId id=0) override</div><div class="ttdef"><b>Definition:</b> <a href="_const_tensor_layer_visitor_8hpp_source.xhtml#l00355">ConstTensorLayerVisitor.hpp:355</a></div></div>
<div class="ttc" id="namespacearmnn_xhtml_addb6b14dd1b632263ffe77430259a7c4"><div class="ttname"><a href="namespacearmnn.xhtml#addb6b14dd1b632263ffe77430259a7c4">armnn::GetLayerTypeAsCString</a></div><div class="ttdeci">const char * GetLayerTypeAsCString(LayerType type)</div><div class="ttdef"><b>Definition:</b> <a href="_internal_types_8cpp_source.xhtml#l00013">InternalTypes.cpp:13</a></div></div>
<div class="ttc" id="structarmnn_1_1_depthwise_convolution2d_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_depthwise_convolution2d_descriptor.xhtml">armnn::DepthwiseConvolution2dDescriptor</a></div><div class="ttdoc">A DepthwiseConvolution2dDescriptor for the DepthwiseConvolution2dLayer. </div><div class="ttdef"><b>Definition:</b> <a href="_descriptors_8hpp_source.xhtml#l00622">Descriptors.hpp:622</a></div></div>
<div class="ttc" id="structarmnn_1_1_batch_normalization_descriptor_xhtml"><div class="ttname"><a href="structarmnn_1_1_batch_normalization_descriptor.xhtml">armnn::BatchNormalizationDescriptor</a></div><div class="ttdoc">A BatchNormalizationDescriptor for the BatchNormalizationLayer. </div><div class="ttdef"><b>Definition:</b> <a href="_descriptors_8hpp_source.xhtml#l00788">Descriptors.hpp:788</a></div></div>
<div class="ttc" id="structarmnn_1_1_lstm_input_params_xhtml_a31da1ead6794dd64571afdd0b6efc771"><div class="ttname"><a href="structarmnn_1_1_lstm_input_params.xhtml#a31da1ead6794dd64571afdd0b6efc771">armnn::LstmInputParams::m_InputToForgetWeights</a></div><div class="ttdeci">const ConstTensor * m_InputToForgetWeights</div><div class="ttdef"><b>Definition:</b> <a href="_lstm_params_8hpp_source.xhtml#l00041">LstmParams.hpp:41</a></div></div>
<div class="ttc" id="namespacearmnn_xhtml_a56943a0946e5f15e5e58054b8e7a04a4"><div class="ttname"><a href="namespacearmnn.xhtml#a56943a0946e5f15e5e58054b8e7a04a4">armnn::LayerType</a></div><div class="ttdeci">LayerType</div><div class="ttdoc">When adding a new layer, adapt also the LastLayer enum value in the enum class LayerType below...</div><div class="ttdef"><b>Definition:</b> <a href="_types_8hpp_source.xhtml#l00458">Types.hpp:458</a></div></div>
<div class="ttc" id="namespacearmnn_xhtml_a56943a0946e5f15e5e58054b8e7a04a4a91880b71ea6d007439b7bc7c320b5c25"><div class="ttname"><a href="namespacearmnn.xhtml#a56943a0946e5f15e5e58054b8e7a04a4a91880b71ea6d007439b7bc7c320b5c25">armnn::LayerType::QLstm</a></div></div>
<div class="ttc" id="structarmnn_1_1_lstm_input_params_xhtml_affcee5f4ab5994a21bee3b78b4e43de3"><div class="ttname"><a href="structarmnn_1_1_lstm_input_params.xhtml#affcee5f4ab5994a21bee3b78b4e43de3">armnn::LstmInputParams::m_InputToInputWeights</a></div><div class="ttdeci">const ConstTensor * m_InputToInputWeights</div><div class="ttdef"><b>Definition:</b> <a href="_lstm_params_8hpp_source.xhtml#l00040">LstmParams.hpp:40</a></div></div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="dir_68267d1309a1af8e8297ef4c3efbcdba.xhtml">src</a></li><li class="navelem"><a class="el" href="dir_e0a84d05c80a2ef4231141dcbbeac5c8.xhtml">armnn</a></li><li class="navelem"><a class="el" href="dir_9d86fd1fbecbedf5bdb69c7e7235fe5f.xhtml">test</a></li><li class="navelem"><a class="el" href="_const_tensor_layer_visitor_8hpp.xhtml">ConstTensorLayerVisitor.hpp</a></li>
    <li class="footer">Generated on Tue Feb 22 2022 11:38:55 for ArmNN by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.13 </li>
  </ul>
</div>
</body>
</html>
