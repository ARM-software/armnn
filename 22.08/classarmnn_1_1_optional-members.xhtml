<!-- Copyright (c) 2020 ARM Limited. -->
<!--                                 -->
<!-- SPDX-License-Identifier: MIT    -->
<!--                                 -->
<!-- HTML header for doxygen 1.8.13-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.13"/>
<meta name="robots" content="NOINDEX, NOFOLLOW" />
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>ArmNN: Member List</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script><script type="text/javascript" src="http://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="stylesheet.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <img alt="ArmNN" src="Arm_NN_horizontal_blue.png" style="max-width: 10rem; margin-top: .5rem; margin-left 10px"/>
  <td style="padding-left: 0.5em;">
   <div id="projectname">
   &#160;<span id="projectnumber">22.08</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.13 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
$(document).ready(function(){initNavTree('classarmnn_1_1_optional.xhtml','');});
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="headertitle">
<div class="title">Optional&lt; T &gt; Member List</div>  </div>
</div><!--header-->
<div class="contents">

<p>This is the complete list of members for <a class="el" href="classarmnn_1_1_optional.xhtml">Optional&lt; T &gt;</a>, including all inherited members.</p>
<table class="directory">
  <tr class="even"><td class="entry"><a class="el" href="classarmnn_1_1_optional_reference_switch.xhtml#a13da864f1d4a5e3957ba70473f8fbf8d">Base</a> typedef</td><td class="entry"><a class="el" href="classarmnn_1_1_optional_reference_switch.xhtml">OptionalReferenceSwitch&lt; std::is_reference&lt; T &gt;::value, T &gt;</a></td><td class="entry"></td></tr>
  <tr><td class="entry"><a class="el" href="classarmnn_1_1_optional.xhtml#ad10f4d634fc3080d680a3a7a004e098f">BaseSwitch</a> typedef</td><td class="entry"><a class="el" href="classarmnn_1_1_optional.xhtml">Optional&lt; T &gt;</a></td><td class="entry"></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classarmnn_1_1_optional_base.xhtml#a86b749ce2c4bc627fa8a1fcfaf0e314f">has_value</a>() const noexcept</td><td class="entry"><a class="el" href="classarmnn_1_1_optional_base.xhtml">OptionalBase</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr><td class="entry"><a class="el" href="classarmnn_1_1_optional_base.xhtml#a53e87efb7e1b2df3dc4420dafaf2ee7e">m_HasValue</a></td><td class="entry"><a class="el" href="classarmnn_1_1_optional_base.xhtml">OptionalBase</a></td><td class="entry"><span class="mlabel">protected</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classarmnn_1_1_optional_base.xhtml#a420e60e9788bfa3b52aa3aab72ea3a5e">operator bool</a>() const noexcept</td><td class="entry"><a class="el" href="classarmnn_1_1_optional_base.xhtml">OptionalBase</a></td><td class="entry"><span class="mlabel">inline</span><span class="mlabel">explicit</span></td></tr>
  <tr><td class="entry"><a class="el" href="classarmnn_1_1_optional.xhtml#a27ea92da9f8129f5abfabc4ef53091c9">operator=</a>(const Optional &amp;other)=default</td><td class="entry"><a class="el" href="classarmnn_1_1_optional.xhtml">Optional&lt; T &gt;</a></td><td class="entry"></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classarmnn_1_1_optional_reference_switch.xhtml#abe5947e3f9acc0738b3ef2ee4cf3547d">OptionalReferenceSwitch&lt; std::is_reference&lt; T &gt;::value, T &gt;::operator=</a>(const T &amp;value)</td><td class="entry"><a class="el" href="classarmnn_1_1_optional_reference_switch.xhtml">OptionalReferenceSwitch&lt; std::is_reference&lt; T &gt;::value, T &gt;</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr><td class="entry"><a class="el" href="classarmnn_1_1_optional_reference_switch.xhtml#afcdbef8eae7fb1de8ea387da20dd369c">OptionalReferenceSwitch&lt; std::is_reference&lt; T &gt;::value, T &gt;::operator=</a>(const OptionalReferenceSwitch &amp;other)</td><td class="entry"><a class="el" href="classarmnn_1_1_optional_reference_switch.xhtml">OptionalReferenceSwitch&lt; std::is_reference&lt; T &gt;::value, T &gt;</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classarmnn_1_1_optional_reference_switch.xhtml#affce7d7dd75fd7b406f5112bd54ac7d8">OptionalReferenceSwitch&lt; std::is_reference&lt; T &gt;::value, T &gt;::operator=</a>(EmptyOptional)</td><td class="entry"><a class="el" href="classarmnn_1_1_optional_reference_switch.xhtml">OptionalReferenceSwitch&lt; std::is_reference&lt; T &gt;::value, T &gt;</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr><td class="entry"><a class="el" href="classarmnn_1_1_optional.xhtml#aa68a881b2258017440f00f1bf3cd0e74">operator==</a>(const Optional&lt; T &gt; &amp;rhs) const</td><td class="entry"><a class="el" href="classarmnn_1_1_optional.xhtml">Optional&lt; T &gt;</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classarmnn_1_1_optional.xhtml#a0ba66c8e63acad2362782737bdc1e50a">Optional</a>() noexcept</td><td class="entry"><a class="el" href="classarmnn_1_1_optional.xhtml">Optional&lt; T &gt;</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr><td class="entry"><a class="el" href="classarmnn_1_1_optional.xhtml#ad821ad3ce9685b41025f5f70481ec2d7">Optional</a>(const T &amp;value)</td><td class="entry"><a class="el" href="classarmnn_1_1_optional.xhtml">Optional&lt; T &gt;</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classarmnn_1_1_optional.xhtml#a5569b19b8dc99204c286f32c2c979eb6">Optional</a>(EmptyOptional empty)</td><td class="entry"><a class="el" href="classarmnn_1_1_optional.xhtml">Optional&lt; T &gt;</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr><td class="entry"><a class="el" href="classarmnn_1_1_optional.xhtml#ab71d669cf5dc14eb564c64345be02198">Optional</a>(const Optional &amp;other)</td><td class="entry"><a class="el" href="classarmnn_1_1_optional.xhtml">Optional&lt; T &gt;</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classarmnn_1_1_optional.xhtml#ad6bb5bce1d9fcc1ea1d672543c75db4e">Optional</a>(const BaseSwitch &amp;other)</td><td class="entry"><a class="el" href="classarmnn_1_1_optional.xhtml">Optional&lt; T &gt;</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr><td class="entry"><a class="el" href="classarmnn_1_1_optional.xhtml#a2e14620644d695df278fc6a84c8a63dc">Optional</a>(ConstructInPlace, Args &amp;&amp;... args)</td><td class="entry"><a class="el" href="classarmnn_1_1_optional.xhtml">Optional&lt; T &gt;</a></td><td class="entry"><span class="mlabel">inline</span><span class="mlabel">explicit</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classarmnn_1_1_optional_base.xhtml#ac2bde2f7113f72440ad3638eeb4d06f6">OptionalBase</a>() noexcept</td><td class="entry"><a class="el" href="classarmnn_1_1_optional_base.xhtml">OptionalBase</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr><td class="entry"><a class="el" href="classarmnn_1_1_optional_base.xhtml#a50b53f38c96fdf12c90890d2dfbb8719">OptionalBase</a>(bool hasValue) noexcept</td><td class="entry"><a class="el" href="classarmnn_1_1_optional_base.xhtml">OptionalBase</a></td><td class="entry"><span class="mlabel">inline</span><span class="mlabel">protected</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classarmnn_1_1_optional_reference_switch.xhtml#ae0e39323497d71182ed4ff2c15f1e565">OptionalReferenceSwitch</a>() noexcept</td><td class="entry"><a class="el" href="classarmnn_1_1_optional_reference_switch.xhtml">OptionalReferenceSwitch&lt; std::is_reference&lt; T &gt;::value, T &gt;</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr><td class="entry"><a class="el" href="classarmnn_1_1_optional_reference_switch.xhtml#a13961a32b21df02dad8c66e11995f006">OptionalReferenceSwitch</a>(EmptyOptional) noexcept</td><td class="entry"><a class="el" href="classarmnn_1_1_optional_reference_switch.xhtml">OptionalReferenceSwitch&lt; std::is_reference&lt; T &gt;::value, T &gt;</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classarmnn_1_1_optional_reference_switch.xhtml#a6beefcffe9bf038690c90acd176c2263">OptionalReferenceSwitch</a>(const T &amp;value)</td><td class="entry"><a class="el" href="classarmnn_1_1_optional_reference_switch.xhtml">OptionalReferenceSwitch&lt; std::is_reference&lt; T &gt;::value, T &gt;</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr><td class="entry"><a class="el" href="classarmnn_1_1_optional_reference_switch.xhtml#a4f012dc9cb58d868dc77bb3b4ba3a76d">OptionalReferenceSwitch</a>(ConstructInPlace, Args &amp;&amp;... args)</td><td class="entry"><a class="el" href="classarmnn_1_1_optional_reference_switch.xhtml">OptionalReferenceSwitch&lt; std::is_reference&lt; T &gt;::value, T &gt;</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classarmnn_1_1_optional_reference_switch.xhtml#a66ffe2beacf3f0e66c2ccb21fcfba30f">OptionalReferenceSwitch</a>(const OptionalReferenceSwitch &amp;other)</td><td class="entry"><a class="el" href="classarmnn_1_1_optional_reference_switch.xhtml">OptionalReferenceSwitch&lt; std::is_reference&lt; T &gt;::value, T &gt;</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr><td class="entry"><a class="el" href="classarmnn_1_1_optional_reference_switch.xhtml#ad20897c5c8bd47f5d4005989bead0e55">reset</a>()</td><td class="entry"><a class="el" href="classarmnn_1_1_optional_reference_switch.xhtml">OptionalReferenceSwitch&lt; std::is_reference&lt; T &gt;::value, T &gt;</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classarmnn_1_1_optional_reference_switch.xhtml#a77c7d528ac063d870b8c8426ec81c1c3">value</a>() const</td><td class="entry"><a class="el" href="classarmnn_1_1_optional_reference_switch.xhtml">OptionalReferenceSwitch&lt; std::is_reference&lt; T &gt;::value, T &gt;</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr><td class="entry"><a class="el" href="classarmnn_1_1_optional_reference_switch.xhtml#a464298ad7afeafebbb149f566ecabbab">value</a>()</td><td class="entry"><a class="el" href="classarmnn_1_1_optional_reference_switch.xhtml">OptionalReferenceSwitch&lt; std::is_reference&lt; T &gt;::value, T &gt;</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classarmnn_1_1_optional_reference_switch.xhtml#abf0cbbed2029d141b8a8f1b39c7028f9">~OptionalReferenceSwitch</a>()</td><td class="entry"><a class="el" href="classarmnn_1_1_optional_reference_switch.xhtml">OptionalReferenceSwitch&lt; std::is_reference&lt; T &gt;::value, T &gt;</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
</table></div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="footer">Generated on Fri Aug 19 2022 14:38:41 for ArmNN by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.13 </li>
  </ul>
</div>
</body>
</html>
