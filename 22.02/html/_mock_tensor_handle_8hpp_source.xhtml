<!-- Copyright (c) 2020 ARM Limited. -->
<!--                                 -->
<!-- SPDX-License-Identifier: MIT    -->
<!--                                 -->
<!-- HTML header for doxygen 1.8.13-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.13"/>
<meta name="robots" content="NOINDEX, NOFOLLOW" />
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>ArmNN: include/armnnTestUtils/MockTensorHandle.hpp Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script><script type="text/javascript" src="http://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="stylesheet.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <img alt="ArmNN" src="Arm_NN_horizontal_blue.png" style="max-width: 10rem; margin-top: .5rem; margin-left 10px"/>
  <td style="padding-left: 0.5em;">
   <div id="projectname">
   &#160;<span id="projectnumber">22.02</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.13 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
$(document).ready(function(){initNavTree('_mock_tensor_handle_8hpp_source.xhtml','');});
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="headertitle">
<div class="title">MockTensorHandle.hpp</div>  </div>
</div><!--header-->
<div class="contents">
<a href="_mock_tensor_handle_8hpp.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="comment">//</span></div><div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="comment">// Copyright Â© 2022 Arm Ltd and Contributors. All rights reserved.</span></div><div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="comment">// SPDX-License-Identifier: MIT</span></div><div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="comment">//</span></div><div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="preprocessor">#pragma once</span></div><div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;</div><div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_mock_memory_manager_8hpp.xhtml">MockMemoryManager.hpp</a>&quot;</span></div><div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="preprocessor">#include &lt;<a class="code" href="include_2armnn_2backends_2_tensor_handle_8hpp.xhtml">armnn/backends/TensorHandle.hpp</a>&gt;</span></div><div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;</div><div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="keyword">namespace </span><a class="code" href="namespacearmnn.xhtml">armnn</a></div><div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;{</div><div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;</div><div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;<span class="comment">// An implementation of ITensorHandle with simple &quot;bump the pointer&quot; memory-management behaviour</span></div><div class="line"><a name="l00014"></a><span class="lineno"><a class="line" href="classarmnn_1_1_mock_tensor_handle.xhtml">   14</a></span>&#160;<span class="keyword">class </span><a class="code" href="classarmnn_1_1_mock_tensor_handle.xhtml">MockTensorHandle</a> : <span class="keyword">public</span> <a class="code" href="classarmnn_1_1_i_tensor_handle.xhtml">ITensorHandle</a></div><div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;{</div><div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;<span class="keyword">public</span>:</div><div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;    <a class="code" href="classarmnn_1_1_mock_tensor_handle.xhtml#abf07a7fe6ae807e01c7124ed0766c3ee">MockTensorHandle</a>(<span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a>&amp; tensorInfo, std::shared_ptr&lt;MockMemoryManager&gt;&amp; memoryManager);</div><div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;</div><div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;    <a class="code" href="classarmnn_1_1_mock_tensor_handle.xhtml#abf07a7fe6ae807e01c7124ed0766c3ee">MockTensorHandle</a>(<span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a>&amp; tensorInfo, <a class="code" href="namespacearmnn.xhtml#a5b05f3b7208ec7cea3338e30057c0bac">MemorySourceFlags</a> importFlags);</div><div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;</div><div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;    <a class="code" href="classarmnn_1_1_mock_tensor_handle.xhtml#a8eaa56c83ee1e9031e76b6316b362325">~MockTensorHandle</a>() <span class="keyword">override</span>;</div><div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;</div><div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classarmnn_1_1_mock_tensor_handle.xhtml#aca21728cdaa75f9d656d25ae7200ade5">Manage</a>() <span class="keyword">override</span>;</div><div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;</div><div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classarmnn_1_1_mock_tensor_handle.xhtml#a8518772c5d692e334a76617582b10b92">Allocate</a>() <span class="keyword">override</span>;</div><div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;</div><div class="line"><a name="l00027"></a><span class="lineno"><a class="line" href="classarmnn_1_1_mock_tensor_handle.xhtml#ae9077a2f3929fb23b3e203c3425243dd">   27</a></span>&#160;    <a class="code" href="classarmnn_1_1_i_tensor_handle.xhtml">ITensorHandle</a>* <a class="code" href="classarmnn_1_1_mock_tensor_handle.xhtml#ae9077a2f3929fb23b3e203c3425243dd">GetParent</a>()<span class="keyword"> const override</span></div><div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;<span class="keyword">    </span>{</div><div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;        <span class="keywordflow">return</span> <span class="keyword">nullptr</span>;</div><div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;    }</div><div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;</div><div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">void</span>* <a class="code" href="classarmnn_1_1_mock_tensor_handle.xhtml#adc70d69d2748d1432e4999d4af361f3b">Map</a>(<span class="keywordtype">bool</span> <span class="comment">/* blocking = true */</span>) <span class="keyword">const override</span>;</div><div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;    <span class="keyword">using</span> <a class="code" href="classarmnn_1_1_i_tensor_handle.xhtml#a9afbc055a017adf1bc38ee137bca6e90">ITensorHandle::Map</a>;</div><div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;</div><div class="line"><a name="l00035"></a><span class="lineno"><a class="line" href="classarmnn_1_1_mock_tensor_handle.xhtml#a7beb3b92eb88119b6078696b6793d75f">   35</a></span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classarmnn_1_1_mock_tensor_handle.xhtml#a7beb3b92eb88119b6078696b6793d75f">Unmap</a>()<span class="keyword"> const override</span></div><div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;<span class="keyword">    </span>{}</div><div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;</div><div class="line"><a name="l00038"></a><span class="lineno"><a class="line" href="classarmnn_1_1_mock_tensor_handle.xhtml#a967f220393d291f71dabce0c06bf9b6c">   38</a></span>&#160;    <a class="code" href="classarmnn_1_1_tensor_shape.xhtml">TensorShape</a> <a class="code" href="classarmnn_1_1_mock_tensor_handle.xhtml#a967f220393d291f71dabce0c06bf9b6c">GetStrides</a>()<span class="keyword"> const override</span></div><div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;<span class="keyword">    </span>{</div><div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;        <span class="keywordflow">return</span> <a class="code" href="namespacearmnn.xhtml#a36e8f52330a21eeab3cc7c4e030f3583">GetUnpaddedTensorStrides</a>(m_TensorInfo);</div><div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;    }</div><div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;</div><div class="line"><a name="l00043"></a><span class="lineno"><a class="line" href="classarmnn_1_1_mock_tensor_handle.xhtml#a8e8d2fbabcac19f9e12779080ddff54e">   43</a></span>&#160;    <a class="code" href="classarmnn_1_1_tensor_shape.xhtml">TensorShape</a> <a class="code" href="classarmnn_1_1_mock_tensor_handle.xhtml#a8e8d2fbabcac19f9e12779080ddff54e">GetShape</a>()<span class="keyword"> const override</span></div><div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;<span class="keyword">    </span>{</div><div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;        <span class="keywordflow">return</span> m_TensorInfo.<a class="code" href="classarmnn_1_1_tensor_info.xhtml#a8b5d0f8a24e9d9238f412260a552acf8">GetShape</a>();</div><div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;    }</div><div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;</div><div class="line"><a name="l00048"></a><span class="lineno"><a class="line" href="classarmnn_1_1_mock_tensor_handle.xhtml#a66e8f43a5b42b500871ed96e15419567">   48</a></span>&#160;    <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a>&amp; <a class="code" href="classarmnn_1_1_mock_tensor_handle.xhtml#a66e8f43a5b42b500871ed96e15419567">GetTensorInfo</a>()<span class="keyword"> const</span></div><div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;<span class="keyword">    </span>{</div><div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;        <span class="keywordflow">return</span> m_TensorInfo;</div><div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;    }</div><div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;</div><div class="line"><a name="l00053"></a><span class="lineno"><a class="line" href="classarmnn_1_1_mock_tensor_handle.xhtml#aa1d3334a17a9f136fe65ed833fbf68b4">   53</a></span>&#160;    <a class="code" href="namespacearmnn.xhtml#a5b05f3b7208ec7cea3338e30057c0bac">MemorySourceFlags</a> <a class="code" href="classarmnn_1_1_mock_tensor_handle.xhtml#aa1d3334a17a9f136fe65ed833fbf68b4">GetImportFlags</a>()<span class="keyword"> const override</span></div><div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;<span class="keyword">    </span>{</div><div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;        <span class="keywordflow">return</span> m_ImportFlags;</div><div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;    }</div><div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;</div><div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;    <span class="keywordtype">bool</span> <a class="code" href="classarmnn_1_1_mock_tensor_handle.xhtml#ab1766bd9f6a7902c5806178f3fd68f0b">Import</a>(<span class="keywordtype">void</span>* memory, <a class="code" href="namespacearmnn.xhtml#a14fcd7f88d11cea0a018269dca5f9277">MemorySource</a> source) <span class="keyword">override</span>;</div><div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;    <span class="keywordtype">bool</span> <a class="code" href="classarmnn_1_1_mock_tensor_handle.xhtml#ae69aed5d7a4cc5deb4488dc6841b2096">CanBeImported</a>(<span class="keywordtype">void</span>* memory, <a class="code" href="namespacearmnn.xhtml#a14fcd7f88d11cea0a018269dca5f9277">MemorySource</a> source) <span class="keyword">override</span>;</div><div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;</div><div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;<span class="keyword">private</span>:</div><div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;    <span class="comment">// Only used for testing</span></div><div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;    <span class="keywordtype">void</span> CopyOutTo(<span class="keywordtype">void</span>*) <span class="keyword">const override</span>;</div><div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;    <span class="keywordtype">void</span> CopyInFrom(<span class="keyword">const</span> <span class="keywordtype">void</span>*) <span class="keyword">override</span>;</div><div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;</div><div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;    <span class="keywordtype">void</span>* GetPointer() <span class="keyword">const</span>;</div><div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;</div><div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;    <a class="code" href="classarmnn_1_1_mock_tensor_handle.xhtml#abf07a7fe6ae807e01c7124ed0766c3ee">MockTensorHandle</a>(<span class="keyword">const</span> <a class="code" href="classarmnn_1_1_mock_tensor_handle.xhtml">MockTensorHandle</a>&amp; other) = <span class="keyword">delete</span>;               <span class="comment">// noncopyable</span></div><div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;    <a class="code" href="classarmnn_1_1_mock_tensor_handle.xhtml">MockTensorHandle</a>&amp; operator=(<span class="keyword">const</span> <a class="code" href="classarmnn_1_1_mock_tensor_handle.xhtml">MockTensorHandle</a>&amp; other) = <span class="keyword">delete</span>;    <span class="comment">//noncopyable</span></div><div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;</div><div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;    <a class="code" href="classarmnn_1_1_tensor_info.xhtml">TensorInfo</a> m_TensorInfo;</div><div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;</div><div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;    std::shared_ptr&lt;MockMemoryManager&gt; m_MemoryManager;</div><div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;    <a class="code" href="classarmnn_1_1_mock_memory_manager_1_1_pool.xhtml">MockMemoryManager::Pool</a>* m_Pool;</div><div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;    <span class="keyword">mutable</span> <span class="keywordtype">void</span>* m_UnmanagedMemory;</div><div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;    <a class="code" href="namespacearmnn.xhtml#a5b05f3b7208ec7cea3338e30057c0bac">MemorySourceFlags</a> m_ImportFlags;</div><div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;    <span class="keywordtype">bool</span> m_Imported;</div><div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;    <span class="keywordtype">bool</span> m_IsImportEnabled;</div><div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;};</div><div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;</div><div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;}    <span class="comment">// namespace armnn</span></div><div class="ttc" id="classarmnn_1_1_tensor_info_xhtml_a8b5d0f8a24e9d9238f412260a552acf8"><div class="ttname"><a href="classarmnn_1_1_tensor_info.xhtml#a8b5d0f8a24e9d9238f412260a552acf8">armnn::TensorInfo::GetShape</a></div><div class="ttdeci">const TensorShape &amp; GetShape() const</div><div class="ttdef"><b>Definition:</b> <a href="_tensor_8hpp_source.xhtml#l00191">Tensor.hpp:191</a></div></div>
<div class="ttc" id="classarmnn_1_1_mock_tensor_handle_xhtml_a8eaa56c83ee1e9031e76b6316b362325"><div class="ttname"><a href="classarmnn_1_1_mock_tensor_handle.xhtml#a8eaa56c83ee1e9031e76b6316b362325">armnn::MockTensorHandle::~MockTensorHandle</a></div><div class="ttdeci">~MockTensorHandle() override</div><div class="ttdef"><b>Definition:</b> <a href="_mock_tensor_handle_8cpp_source.xhtml#l00030">MockTensorHandle.cpp:30</a></div></div>
<div class="ttc" id="_mock_memory_manager_8hpp_xhtml"><div class="ttname"><a href="_mock_memory_manager_8hpp.xhtml">MockMemoryManager.hpp</a></div></div>
<div class="ttc" id="classarmnn_1_1_tensor_info_xhtml"><div class="ttname"><a href="classarmnn_1_1_tensor_info.xhtml">armnn::TensorInfo</a></div><div class="ttdef"><b>Definition:</b> <a href="_tensor_8hpp_source.xhtml#l00152">Tensor.hpp:152</a></div></div>
<div class="ttc" id="classarmnn_1_1_mock_tensor_handle_xhtml_abf07a7fe6ae807e01c7124ed0766c3ee"><div class="ttname"><a href="classarmnn_1_1_mock_tensor_handle.xhtml#abf07a7fe6ae807e01c7124ed0766c3ee">armnn::MockTensorHandle::MockTensorHandle</a></div><div class="ttdeci">MockTensorHandle(const TensorInfo &amp;tensorInfo, std::shared_ptr&lt; MockMemoryManager &gt; &amp;memoryManager)</div><div class="ttdef"><b>Definition:</b> <a href="_mock_tensor_handle_8cpp_source.xhtml#l00011">MockTensorHandle.cpp:11</a></div></div>
<div class="ttc" id="namespacearmnn_xhtml_a5b05f3b7208ec7cea3338e30057c0bac"><div class="ttname"><a href="namespacearmnn.xhtml#a5b05f3b7208ec7cea3338e30057c0bac">armnn::MemorySourceFlags</a></div><div class="ttdeci">unsigned int MemorySourceFlags</div><div class="ttdef"><b>Definition:</b> <a href="_memory_sources_8hpp_source.xhtml#l00015">MemorySources.hpp:15</a></div></div>
<div class="ttc" id="namespacearmnn_xhtml"><div class="ttname"><a href="namespacearmnn.xhtml">armnn</a></div><div class="ttdoc">Copyright (c) 2021 ARM Limited and Contributors. </div><div class="ttdef"><b>Definition:</b> <a href="01__00__quick__start_8dox_source.xhtml#l00006">01_00_quick_start.dox:6</a></div></div>
<div class="ttc" id="classarmnn_1_1_mock_tensor_handle_xhtml_ae69aed5d7a4cc5deb4488dc6841b2096"><div class="ttname"><a href="classarmnn_1_1_mock_tensor_handle.xhtml#ae69aed5d7a4cc5deb4488dc6841b2096">armnn::MockTensorHandle::CanBeImported</a></div><div class="ttdeci">bool CanBeImported(void *memory, MemorySource source) override</div><div class="ttdoc">Implementations must determine if this memory block can be imported. </div><div class="ttdef"><b>Definition:</b> <a href="_mock_tensor_handle_8cpp_source.xhtml#l00158">MockTensorHandle.cpp:158</a></div></div>
<div class="ttc" id="classarmnn_1_1_tensor_shape_xhtml"><div class="ttname"><a href="classarmnn_1_1_tensor_shape.xhtml">armnn::TensorShape</a></div><div class="ttdef"><b>Definition:</b> <a href="_tensor_8hpp_source.xhtml#l00020">Tensor.hpp:20</a></div></div>
<div class="ttc" id="classarmnn_1_1_mock_tensor_handle_xhtml_aa1d3334a17a9f136fe65ed833fbf68b4"><div class="ttname"><a href="classarmnn_1_1_mock_tensor_handle.xhtml#aa1d3334a17a9f136fe65ed833fbf68b4">armnn::MockTensorHandle::GetImportFlags</a></div><div class="ttdeci">MemorySourceFlags GetImportFlags() const override</div><div class="ttdoc">Get flags describing supported import sources. </div><div class="ttdef"><b>Definition:</b> <a href="_mock_tensor_handle_8hpp_source.xhtml#l00053">MockTensorHandle.hpp:53</a></div></div>
<div class="ttc" id="classarmnn_1_1_mock_tensor_handle_xhtml_adc70d69d2748d1432e4999d4af361f3b"><div class="ttname"><a href="classarmnn_1_1_mock_tensor_handle.xhtml#adc70d69d2748d1432e4999d4af361f3b">armnn::MockTensorHandle::Map</a></div><div class="ttdeci">const void * Map(bool) const override</div><div class="ttdoc">Map the tensor data for access. </div><div class="ttdef"><b>Definition:</b> <a href="_mock_tensor_handle_8cpp_source.xhtml#l00079">MockTensorHandle.cpp:79</a></div></div>
<div class="ttc" id="classarmnn_1_1_mock_tensor_handle_xhtml_ae9077a2f3929fb23b3e203c3425243dd"><div class="ttname"><a href="classarmnn_1_1_mock_tensor_handle.xhtml#ae9077a2f3929fb23b3e203c3425243dd">armnn::MockTensorHandle::GetParent</a></div><div class="ttdeci">ITensorHandle * GetParent() const override</div><div class="ttdoc">Get the parent tensor if this is a subtensor. </div><div class="ttdef"><b>Definition:</b> <a href="_mock_tensor_handle_8hpp_source.xhtml#l00027">MockTensorHandle.hpp:27</a></div></div>
<div class="ttc" id="classarmnn_1_1_i_tensor_handle_xhtml"><div class="ttname"><a href="classarmnn_1_1_i_tensor_handle.xhtml">armnn::ITensorHandle</a></div><div class="ttdef"><b>Definition:</b> <a href="include_2armnn_2backends_2_i_tensor_handle_8hpp_source.xhtml#l00015">ITensorHandle.hpp:15</a></div></div>
<div class="ttc" id="include_2armnn_2backends_2_tensor_handle_8hpp_xhtml"><div class="ttname"><a href="include_2armnn_2backends_2_tensor_handle_8hpp.xhtml">TensorHandle.hpp</a></div></div>
<div class="ttc" id="classarmnn_1_1_mock_tensor_handle_xhtml"><div class="ttname"><a href="classarmnn_1_1_mock_tensor_handle.xhtml">armnn::MockTensorHandle</a></div><div class="ttdef"><b>Definition:</b> <a href="_mock_tensor_handle_8hpp_source.xhtml#l00014">MockTensorHandle.hpp:14</a></div></div>
<div class="ttc" id="namespacearmnn_xhtml_a36e8f52330a21eeab3cc7c4e030f3583"><div class="ttname"><a href="namespacearmnn.xhtml#a36e8f52330a21eeab3cc7c4e030f3583">armnn::GetUnpaddedTensorStrides</a></div><div class="ttdeci">TensorShape GetUnpaddedTensorStrides(const TensorInfo &amp;tensorInfo)</div><div class="ttdef"><b>Definition:</b> <a href="_tensor_handle_8cpp_source.xhtml#l00015">TensorHandle.cpp:15</a></div></div>
<div class="ttc" id="classarmnn_1_1_mock_tensor_handle_xhtml_a8518772c5d692e334a76617582b10b92"><div class="ttname"><a href="classarmnn_1_1_mock_tensor_handle.xhtml#a8518772c5d692e334a76617582b10b92">armnn::MockTensorHandle::Allocate</a></div><div class="ttdeci">void Allocate() override</div><div class="ttdoc">Indicate to the memory manager that this resource is no longer active. </div><div class="ttdef"><b>Definition:</b> <a href="_mock_tensor_handle_8cpp_source.xhtml#l00053">MockTensorHandle.cpp:53</a></div></div>
<div class="ttc" id="classarmnn_1_1_i_tensor_handle_xhtml_a9afbc055a017adf1bc38ee137bca6e90"><div class="ttname"><a href="classarmnn_1_1_i_tensor_handle.xhtml#a9afbc055a017adf1bc38ee137bca6e90">armnn::ITensorHandle::Map</a></div><div class="ttdeci">virtual const void * Map(bool blocking=true) const =0</div><div class="ttdoc">Map the tensor data for access. </div></div>
<div class="ttc" id="namespacearmnn_xhtml_a14fcd7f88d11cea0a018269dca5f9277"><div class="ttname"><a href="namespacearmnn.xhtml#a14fcd7f88d11cea0a018269dca5f9277">armnn::MemorySource</a></div><div class="ttdeci">MemorySource</div><div class="ttdoc">Define the Memory Source to reduce copies. </div><div class="ttdef"><b>Definition:</b> <a href="_types_8hpp_source.xhtml#l00217">Types.hpp:217</a></div></div>
<div class="ttc" id="classarmnn_1_1_mock_memory_manager_1_1_pool_xhtml"><div class="ttname"><a href="classarmnn_1_1_mock_memory_manager_1_1_pool.xhtml">armnn::MockMemoryManager::Pool</a></div><div class="ttdef"><b>Definition:</b> <a href="_mock_memory_manager_8hpp_source.xhtml#l00033">MockMemoryManager.hpp:33</a></div></div>
<div class="ttc" id="classarmnn_1_1_mock_tensor_handle_xhtml_a967f220393d291f71dabce0c06bf9b6c"><div class="ttname"><a href="classarmnn_1_1_mock_tensor_handle.xhtml#a967f220393d291f71dabce0c06bf9b6c">armnn::MockTensorHandle::GetStrides</a></div><div class="ttdeci">TensorShape GetStrides() const override</div><div class="ttdoc">Get the strides for each dimension ordered from largest to smallest where the smallest value is the s...</div><div class="ttdef"><b>Definition:</b> <a href="_mock_tensor_handle_8hpp_source.xhtml#l00038">MockTensorHandle.hpp:38</a></div></div>
<div class="ttc" id="classarmnn_1_1_mock_tensor_handle_xhtml_a8e8d2fbabcac19f9e12779080ddff54e"><div class="ttname"><a href="classarmnn_1_1_mock_tensor_handle.xhtml#a8e8d2fbabcac19f9e12779080ddff54e">armnn::MockTensorHandle::GetShape</a></div><div class="ttdeci">TensorShape GetShape() const override</div><div class="ttdoc">Get the number of elements for each dimension ordered from slowest iterating dimension to fastest ite...</div><div class="ttdef"><b>Definition:</b> <a href="_mock_tensor_handle_8hpp_source.xhtml#l00043">MockTensorHandle.hpp:43</a></div></div>
<div class="ttc" id="classarmnn_1_1_mock_tensor_handle_xhtml_ab1766bd9f6a7902c5806178f3fd68f0b"><div class="ttname"><a href="classarmnn_1_1_mock_tensor_handle.xhtml#ab1766bd9f6a7902c5806178f3fd68f0b">armnn::MockTensorHandle::Import</a></div><div class="ttdeci">bool Import(void *memory, MemorySource source) override</div><div class="ttdoc">Import externally allocated memory. </div><div class="ttdef"><b>Definition:</b> <a href="_mock_tensor_handle_8cpp_source.xhtml#l00114">MockTensorHandle.cpp:114</a></div></div>
<div class="ttc" id="classarmnn_1_1_mock_tensor_handle_xhtml_a7beb3b92eb88119b6078696b6793d75f"><div class="ttname"><a href="classarmnn_1_1_mock_tensor_handle.xhtml#a7beb3b92eb88119b6078696b6793d75f">armnn::MockTensorHandle::Unmap</a></div><div class="ttdeci">void Unmap() const override</div><div class="ttdoc">Unmap the tensor data. </div><div class="ttdef"><b>Definition:</b> <a href="_mock_tensor_handle_8hpp_source.xhtml#l00035">MockTensorHandle.hpp:35</a></div></div>
<div class="ttc" id="classarmnn_1_1_mock_tensor_handle_xhtml_aca21728cdaa75f9d656d25ae7200ade5"><div class="ttname"><a href="classarmnn_1_1_mock_tensor_handle.xhtml#aca21728cdaa75f9d656d25ae7200ade5">armnn::MockTensorHandle::Manage</a></div><div class="ttdeci">void Manage() override</div><div class="ttdoc">Indicate to the memory manager that this resource is active. </div><div class="ttdef"><b>Definition:</b> <a href="_mock_tensor_handle_8cpp_source.xhtml#l00042">MockTensorHandle.cpp:42</a></div></div>
<div class="ttc" id="classarmnn_1_1_mock_tensor_handle_xhtml_a66e8f43a5b42b500871ed96e15419567"><div class="ttname"><a href="classarmnn_1_1_mock_tensor_handle.xhtml#a66e8f43a5b42b500871ed96e15419567">armnn::MockTensorHandle::GetTensorInfo</a></div><div class="ttdeci">const TensorInfo &amp; GetTensorInfo() const</div><div class="ttdef"><b>Definition:</b> <a href="_mock_tensor_handle_8hpp_source.xhtml#l00048">MockTensorHandle.hpp:48</a></div></div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="dir_d44c64559bbebec7f509842c48db8b23.xhtml">include</a></li><li class="navelem"><a class="el" href="dir_63bab6e14293bb0757c6313c233a04b6.xhtml">armnnTestUtils</a></li><li class="navelem"><a class="el" href="_mock_tensor_handle_8hpp.xhtml">MockTensorHandle.hpp</a></li>
    <li class="footer">Generated on Tue Feb 22 2022 11:38:54 for ArmNN by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.13 </li>
  </ul>
</div>
</body>
</html>
