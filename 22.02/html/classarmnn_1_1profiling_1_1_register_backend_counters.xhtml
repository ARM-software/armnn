<!-- Copyright (c) 2020 ARM Limited. -->
<!--                                 -->
<!-- SPDX-License-Identifier: MIT    -->
<!--                                 -->
<!-- HTML header for doxygen 1.8.13-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.13"/>
<meta name="robots" content="NOINDEX, NOFOLLOW" />
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>ArmNN: RegisterBackendCounters Class Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script><script type="text/javascript" src="http://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="stylesheet.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <img alt="ArmNN" src="Arm_NN_horizontal_blue.png" style="max-width: 10rem; margin-top: .5rem; margin-left 10px"/>
  <td style="padding-left: 0.5em;">
   <div id="projectname">
   &#160;<span id="projectnumber">22.02</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.13 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
$(document).ready(function(){initNavTree('classarmnn_1_1profiling_1_1_register_backend_counters.xhtml','');});
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="summary">
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="classarmnn_1_1profiling_1_1_register_backend_counters-members.xhtml">List of all members</a>  </div>
  <div class="headertitle">
<div class="title">RegisterBackendCounters Class Reference</div>  </div>
</div><!--header-->
<div class="contents">

<p><code>#include &lt;<a class="el" href="_register_backend_counters_8hpp_source.xhtml">RegisterBackendCounters.hpp</a>&gt;</code></p>
<div class="dynheader">
Inheritance diagram for RegisterBackendCounters:</div>
<div class="dyncontent">
 <div class="center">
  <img src="classarmnn_1_1profiling_1_1_register_backend_counters.png" usemap="#RegisterBackendCounters_map" alt=""/>
  <map id="RegisterBackendCounters_map" name="RegisterBackendCounters_map">
<area href="classarmnn_1_1profiling_1_1_i_register_backend_counters.xhtml" alt="IRegisterBackendCounters" shape="rect" coords="0,0,161,24"/>
</map>
 </div></div>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:af2e1a4053ead057d20e33d4453c67fe1"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1profiling_1_1_register_backend_counters.xhtml#af2e1a4053ead057d20e33d4453c67fe1">RegisterBackendCounters</a> (uint16_t currentMaxGlobalCounterID, const <a class="el" href="classarmnn_1_1_backend_id.xhtml">BackendId</a> &amp;backendId, <a class="el" href="classarmnn_1_1profiling_1_1_profiling_service.xhtml">ProfilingService</a> &amp;profilingService)</td></tr>
<tr class="separator:af2e1a4053ead057d20e33d4453c67fe1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac388ab1e8ba5bf4b0b9abddac2f0a0dc"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1profiling_1_1_register_backend_counters.xhtml#ac388ab1e8ba5bf4b0b9abddac2f0a0dc">~RegisterBackendCounters</a> ()=default</td></tr>
<tr class="separator:ac388ab1e8ba5bf4b0b9abddac2f0a0dc"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a547f56db3e9e8c6f5b6ac7b7d3194bfe"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1profiling_1_1_register_backend_counters.xhtml#a547f56db3e9e8c6f5b6ac7b7d3194bfe">RegisterCategory</a> (const std::string &amp;categoryName) override</td></tr>
<tr class="separator:a547f56db3e9e8c6f5b6ac7b7d3194bfe"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa59f702553e07454e57b7d75294ded25"><td class="memItemLeft" align="right" valign="top">uint16_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1profiling_1_1_register_backend_counters.xhtml#aa59f702553e07454e57b7d75294ded25">RegisterDevice</a> (const std::string &amp;deviceName, uint16_t cores=0, const <a class="el" href="classarmnn_1_1_optional.xhtml">Optional</a>&lt; std::string &gt; &amp;parentCategoryName=<a class="el" href="structarmnn_1_1_empty_optional.xhtml">EmptyOptional</a>()) override</td></tr>
<tr class="separator:aa59f702553e07454e57b7d75294ded25"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3760d7378ebc54c779f5032662890154"><td class="memItemLeft" align="right" valign="top">uint16_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1profiling_1_1_register_backend_counters.xhtml#a3760d7378ebc54c779f5032662890154">RegisterCounterSet</a> (const std::string &amp;counterSetName, uint16_t count=0, const <a class="el" href="classarmnn_1_1_optional.xhtml">Optional</a>&lt; std::string &gt; &amp;parentCategoryName=<a class="el" href="structarmnn_1_1_empty_optional.xhtml">EmptyOptional</a>()) override</td></tr>
<tr class="separator:a3760d7378ebc54c779f5032662890154"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a380988b279ec147ed405cc86d4436975"><td class="memItemLeft" align="right" valign="top">uint16_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1profiling_1_1_register_backend_counters.xhtml#a380988b279ec147ed405cc86d4436975">RegisterCounter</a> (const uint16_t uid, const std::string &amp;parentCategoryName, uint16_t counterClass, uint16_t interpolation, double multiplier, const std::string &amp;name, const std::string &amp;description, const <a class="el" href="classarmnn_1_1_optional.xhtml">Optional</a>&lt; std::string &gt; &amp;units=<a class="el" href="structarmnn_1_1_empty_optional.xhtml">EmptyOptional</a>(), const <a class="el" href="classarmnn_1_1_optional.xhtml">Optional</a>&lt; uint16_t &gt; &amp;numberOfCores=<a class="el" href="structarmnn_1_1_empty_optional.xhtml">EmptyOptional</a>(), const <a class="el" href="classarmnn_1_1_optional.xhtml">Optional</a>&lt; uint16_t &gt; &amp;deviceUid=<a class="el" href="structarmnn_1_1_empty_optional.xhtml">EmptyOptional</a>(), const <a class="el" href="classarmnn_1_1_optional.xhtml">Optional</a>&lt; uint16_t &gt; &amp;counterSetUid=<a class="el" href="structarmnn_1_1_empty_optional.xhtml">EmptyOptional</a>()) override</td></tr>
<tr class="separator:a380988b279ec147ed405cc86d4436975"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pub_methods_classarmnn_1_1profiling_1_1_i_register_backend_counters"><td colspan="2" onclick="javascript:toggleInherit('pub_methods_classarmnn_1_1profiling_1_1_i_register_backend_counters')"><img src="closed.png" alt="-"/>&#160;Public Member Functions inherited from <a class="el" href="classarmnn_1_1profiling_1_1_i_register_backend_counters.xhtml">IRegisterBackendCounters</a></td></tr>
<tr class="memitem:a1df38f206d3d114ab5c98624a74595e7 inherit pub_methods_classarmnn_1_1profiling_1_1_i_register_backend_counters"><td class="memItemLeft" align="right" valign="top">virtual&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1profiling_1_1_i_register_backend_counters.xhtml#a1df38f206d3d114ab5c98624a74595e7">~IRegisterBackendCounters</a> ()</td></tr>
<tr class="separator:a1df38f206d3d114ab5c98624a74595e7 inherit pub_methods_classarmnn_1_1profiling_1_1_i_register_backend_counters"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock">
<p class="definition">Definition at line <a class="el" href="_register_backend_counters_8hpp_source.xhtml#l00019">19</a> of file <a class="el" href="_register_backend_counters_8hpp_source.xhtml">RegisterBackendCounters.hpp</a>.</p>
</div><h2 class="groupheader">Constructor &amp; Destructor Documentation</h2>
<a id="af2e1a4053ead057d20e33d4453c67fe1"></a>
<h2 class="memtitle"><span class="permalink"><a href="#af2e1a4053ead057d20e33d4453c67fe1">&#9670;&nbsp;</a></span>RegisterBackendCounters()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarmnn_1_1profiling_1_1_register_backend_counters.xhtml">RegisterBackendCounters</a> </td>
          <td>(</td>
          <td class="paramtype">uint16_t&#160;</td>
          <td class="paramname"><em>currentMaxGlobalCounterID</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_backend_id.xhtml">BackendId</a> &amp;&#160;</td>
          <td class="paramname"><em>backendId</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="classarmnn_1_1profiling_1_1_profiling_service.xhtml">ProfilingService</a> &amp;&#160;</td>
          <td class="paramname"><em>profilingService</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_register_backend_counters_8hpp_source.xhtml#l00023">23</a> of file <a class="el" href="_register_backend_counters_8hpp_source.xhtml">RegisterBackendCounters.hpp</a>.</p>

<p class="reference">References <a class="el" href="_register_backend_counters_8cpp_source.xhtml#l00014">RegisterBackendCounters::RegisterCategory()</a>, <a class="el" href="_register_backend_counters_8cpp_source.xhtml#l00035">RegisterBackendCounters::RegisterCounter()</a>, <a class="el" href="_register_backend_counters_8cpp_source.xhtml#l00027">RegisterBackendCounters::RegisterCounterSet()</a>, <a class="el" href="_register_backend_counters_8cpp_source.xhtml#l00019">RegisterBackendCounters::RegisterDevice()</a>, and <a class="el" href="classarmnn_1_1profiling_1_1_register_backend_counters.xhtml#ac388ab1e8ba5bf4b0b9abddac2f0a0dc">RegisterBackendCounters::~RegisterBackendCounters()</a>.</p>
<div class="fragment"><div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;        : m_CurrentMaxGlobalCounterID(currentMaxGlobalCounterID),</div><div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;          m_BackendId(backendId),</div><div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;          m_ProfilingService(profilingService),</div><div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;          m_CounterDirectory(m_ProfilingService.<a class="code" href="classarmnn_1_1profiling_1_1_profiling_service.xhtml#ad5fffd20c7356754964d06ae73f72293">GetCounterRegistry</a>()) {}</div><div class="ttc" id="classarmnn_1_1profiling_1_1_profiling_service_xhtml_ad5fffd20c7356754964d06ae73f72293"><div class="ttname"><a href="classarmnn_1_1profiling_1_1_profiling_service.xhtml#ad5fffd20c7356754964d06ae73f72293">armnn::profiling::ProfilingService::GetCounterRegistry</a></div><div class="ttdeci">ICounterRegistry &amp; GetCounterRegistry()</div><div class="ttdef"><b>Definition:</b> <a href="_profiling_service_8cpp_source.xhtml#l00227">ProfilingService.cpp:227</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="ac388ab1e8ba5bf4b0b9abddac2f0a0dc"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ac388ab1e8ba5bf4b0b9abddac2f0a0dc">&#9670;&nbsp;</a></span>~RegisterBackendCounters()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">~<a class="el" href="classarmnn_1_1profiling_1_1_register_backend_counters.xhtml">RegisterBackendCounters</a> </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">default</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="reference">Referenced by <a class="el" href="_register_backend_counters_8hpp_source.xhtml#l00023">RegisterBackendCounters::RegisterBackendCounters()</a>.</p>

</div>
</div>
<h2 class="groupheader">Member Function Documentation</h2>
<a id="a547f56db3e9e8c6f5b6ac7b7d3194bfe"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a547f56db3e9e8c6f5b6ac7b7d3194bfe">&#9670;&nbsp;</a></span>RegisterCategory()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void RegisterCategory </td>
          <td>(</td>
          <td class="paramtype">const std::string &amp;&#160;</td>
          <td class="paramname"><em>categoryName</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Implements <a class="el" href="classarmnn_1_1profiling_1_1_i_register_backend_counters.xhtml#a745a18d2d50f88ae616af5e3fe67892f">IRegisterBackendCounters</a>.</p>

<p class="definition">Definition at line <a class="el" href="_register_backend_counters_8cpp_source.xhtml#l00014">14</a> of file <a class="el" href="_register_backend_counters_8cpp_source.xhtml">RegisterBackendCounters.cpp</a>.</p>

<p class="reference">References <a class="el" href="classarmnn_1_1profiling_1_1_i_counter_registry.xhtml#aefa3b1cd8c21711b682a9291c0203a8f">ICounterRegistry::RegisterCategory()</a>.</p>

<p class="reference">Referenced by <a class="el" href="_register_backend_counters_8hpp_source.xhtml#l00023">RegisterBackendCounters::RegisterBackendCounters()</a>.</p>
<div class="fragment"><div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;{</div><div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;     m_CounterDirectory.<a class="code" href="classarmnn_1_1profiling_1_1_i_counter_registry.xhtml#aefa3b1cd8c21711b682a9291c0203a8f">RegisterCategory</a>(categoryName);</div><div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;}</div><div class="ttc" id="classarmnn_1_1profiling_1_1_i_counter_registry_xhtml_aefa3b1cd8c21711b682a9291c0203a8f"><div class="ttname"><a href="classarmnn_1_1profiling_1_1_i_counter_registry.xhtml#aefa3b1cd8c21711b682a9291c0203a8f">armnn::profiling::ICounterRegistry::RegisterCategory</a></div><div class="ttdeci">virtual const Category * RegisterCategory(const std::string &amp;categoryName)=0</div></div>
</div><!-- fragment -->
</div>
</div>
<a id="a380988b279ec147ed405cc86d4436975"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a380988b279ec147ed405cc86d4436975">&#9670;&nbsp;</a></span>RegisterCounter()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">uint16_t RegisterCounter </td>
          <td>(</td>
          <td class="paramtype">const uint16_t&#160;</td>
          <td class="paramname"><em>uid</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const std::string &amp;&#160;</td>
          <td class="paramname"><em>parentCategoryName</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint16_t&#160;</td>
          <td class="paramname"><em>counterClass</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint16_t&#160;</td>
          <td class="paramname"><em>interpolation</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">double&#160;</td>
          <td class="paramname"><em>multiplier</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const std::string &amp;&#160;</td>
          <td class="paramname"><em>name</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const std::string &amp;&#160;</td>
          <td class="paramname"><em>description</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_optional.xhtml">Optional</a>&lt; std::string &gt; &amp;&#160;</td>
          <td class="paramname"><em>units</em> = <code><a class="el" href="structarmnn_1_1_empty_optional.xhtml">EmptyOptional</a>()</code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_optional.xhtml">Optional</a>&lt; uint16_t &gt; &amp;&#160;</td>
          <td class="paramname"><em>numberOfCores</em> = <code><a class="el" href="structarmnn_1_1_empty_optional.xhtml">EmptyOptional</a>()</code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_optional.xhtml">Optional</a>&lt; uint16_t &gt; &amp;&#160;</td>
          <td class="paramname"><em>deviceUid</em> = <code><a class="el" href="structarmnn_1_1_empty_optional.xhtml">EmptyOptional</a>()</code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_optional.xhtml">Optional</a>&lt; uint16_t &gt; &amp;&#160;</td>
          <td class="paramname"><em>counterSetUid</em> = <code><a class="el" href="structarmnn_1_1_empty_optional.xhtml">EmptyOptional</a>()</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Implements <a class="el" href="classarmnn_1_1profiling_1_1_i_register_backend_counters.xhtml#a9bd077ffa9adfaedd89b83505a1da115">IRegisterBackendCounters</a>.</p>

<p class="definition">Definition at line <a class="el" href="_register_backend_counters_8cpp_source.xhtml#l00035">35</a> of file <a class="el" href="_register_backend_counters_8cpp_source.xhtml">RegisterBackendCounters.cpp</a>.</p>

<p class="reference">References <a class="el" href="_profiling_service_8cpp_source.xhtml#l00270">ProfilingService::GetCounterMappingRegistry()</a>, <a class="el" href="_i_counter_directory_8hpp_source.xhtml#l00124">Counter::m_MaxCounterUid</a>, <a class="el" href="_i_counter_directory_8hpp_source.xhtml#l00123">Counter::m_Uid</a>, <a class="el" href="classarmnn_1_1profiling_1_1_i_counter_registry.xhtml#a1d4c2bc2310f063afdf3691f3228012f">ICounterRegistry::RegisterCounter()</a>, and <a class="el" href="classarmnn_1_1profiling_1_1_i_register_counter_mapping.xhtml#ae8ae959752e05d110a66f590dfb18faa">IRegisterCounterMapping::RegisterMapping()</a>.</p>

<p class="reference">Referenced by <a class="el" href="_register_backend_counters_8hpp_source.xhtml#l00023">RegisterBackendCounters::RegisterBackendCounters()</a>.</p>
<div class="fragment"><div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;{</div><div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;    ++m_CurrentMaxGlobalCounterID;</div><div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;    <span class="keyword">const</span> Counter* counterPtr = m_CounterDirectory.<a class="code" href="classarmnn_1_1profiling_1_1_i_counter_registry.xhtml#a1d4c2bc2310f063afdf3691f3228012f">RegisterCounter</a>(m_BackendId,</div><div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;                                                                   m_CurrentMaxGlobalCounterID,</div><div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;                                                                   parentCategoryName,</div><div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;                                                                   counterClass,</div><div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;                                                                   interpolation,</div><div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;                                                                   multiplier,</div><div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;                                                                   name,</div><div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;                                                                   description,</div><div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;                                                                   units,</div><div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;                                                                   numberOfCores,</div><div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;                                                                   deviceUid,</div><div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;                                                                   counterSetUid);</div><div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;    m_CurrentMaxGlobalCounterID = counterPtr-&gt;m_MaxCounterUid;</div><div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;    <span class="comment">// register mappings</span></div><div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;    IRegisterCounterMapping&amp; counterIdMap = m_ProfilingService.<a class="code" href="classarmnn_1_1profiling_1_1_profiling_service.xhtml#a04f78379965ef10275613dd265fd0607">GetCounterMappingRegistry</a>();</div><div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;    uint16_t globalCounterId = counterPtr-&gt;m_Uid;</div><div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;    <span class="keywordflow">if</span> (globalCounterId == counterPtr-&gt;m_MaxCounterUid)</div><div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;    {</div><div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;        counterIdMap.<a class="code" href="classarmnn_1_1profiling_1_1_i_register_counter_mapping.xhtml#ae8ae959752e05d110a66f590dfb18faa">RegisterMapping</a>(globalCounterId, uid, m_BackendId);</div><div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;    }</div><div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;    <span class="keywordflow">else</span></div><div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;    {</div><div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;        uint16_t backendCounterId = uid;</div><div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;        <span class="keywordflow">while</span> (globalCounterId &lt;= counterPtr-&gt;m_MaxCounterUid)</div><div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;        {</div><div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;            <span class="comment">// register mapping</span></div><div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;            <span class="comment">// globalCounterId -&gt; backendCounterId, m_BackendId</span></div><div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;            counterIdMap.RegisterMapping(globalCounterId, backendCounterId, m_BackendId);</div><div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;            ++globalCounterId;</div><div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;            ++backendCounterId;</div><div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;        }</div><div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;    }</div><div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;    <span class="keywordflow">return</span> m_CurrentMaxGlobalCounterID;</div><div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;}</div><div class="ttc" id="classarmnn_1_1profiling_1_1_i_register_counter_mapping_xhtml_ae8ae959752e05d110a66f590dfb18faa"><div class="ttname"><a href="classarmnn_1_1profiling_1_1_i_register_counter_mapping.xhtml#ae8ae959752e05d110a66f590dfb18faa">armnn::profiling::IRegisterCounterMapping::RegisterMapping</a></div><div class="ttdeci">virtual void RegisterMapping(uint16_t globalCounterId, uint16_t backendCounterId, const armnn::BackendId &amp;backendId)=0</div></div>
<div class="ttc" id="classarmnn_1_1profiling_1_1_i_counter_registry_xhtml_a1d4c2bc2310f063afdf3691f3228012f"><div class="ttname"><a href="classarmnn_1_1profiling_1_1_i_counter_registry.xhtml#a1d4c2bc2310f063afdf3691f3228012f">armnn::profiling::ICounterRegistry::RegisterCounter</a></div><div class="ttdeci">virtual const Counter * RegisterCounter(const BackendId &amp;backendId, const uint16_t uid, const std::string &amp;parentCategoryName, uint16_t counterClass, uint16_t interpolation, double multiplier, const std::string &amp;name, const std::string &amp;description, const Optional&lt; std::string &gt; &amp;units, const Optional&lt; uint16_t &gt; &amp;numberOfCores, const Optional&lt; uint16_t &gt; &amp;deviceUid, const Optional&lt; uint16_t &gt; &amp;counterSetUid)=0</div></div>
<div class="ttc" id="classarmnn_1_1profiling_1_1_profiling_service_xhtml_a04f78379965ef10275613dd265fd0607"><div class="ttname"><a href="classarmnn_1_1profiling_1_1_profiling_service.xhtml#a04f78379965ef10275613dd265fd0607">armnn::profiling::ProfilingService::GetCounterMappingRegistry</a></div><div class="ttdeci">IRegisterCounterMapping &amp; GetCounterMappingRegistry()</div><div class="ttdef"><b>Definition:</b> <a href="_profiling_service_8cpp_source.xhtml#l00270">ProfilingService.cpp:270</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="a3760d7378ebc54c779f5032662890154"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a3760d7378ebc54c779f5032662890154">&#9670;&nbsp;</a></span>RegisterCounterSet()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">uint16_t RegisterCounterSet </td>
          <td>(</td>
          <td class="paramtype">const std::string &amp;&#160;</td>
          <td class="paramname"><em>counterSetName</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint16_t&#160;</td>
          <td class="paramname"><em>count</em> = <code>0</code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_optional.xhtml">Optional</a>&lt; std::string &gt; &amp;&#160;</td>
          <td class="paramname"><em>parentCategoryName</em> = <code><a class="el" href="structarmnn_1_1_empty_optional.xhtml">EmptyOptional</a>()</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Implements <a class="el" href="classarmnn_1_1profiling_1_1_i_register_backend_counters.xhtml#a9c9fb969e907ab6e67d5b605ff019489">IRegisterBackendCounters</a>.</p>

<p class="definition">Definition at line <a class="el" href="_register_backend_counters_8cpp_source.xhtml#l00027">27</a> of file <a class="el" href="_register_backend_counters_8cpp_source.xhtml">RegisterBackendCounters.cpp</a>.</p>

<p class="reference">References <a class="el" href="_i_counter_directory_8hpp_source.xhtml#l00088">CounterSet::m_Uid</a>, and <a class="el" href="classarmnn_1_1profiling_1_1_i_counter_registry.xhtml#a0338e5b744c9c2d08143cf70d319940f">ICounterRegistry::RegisterCounterSet()</a>.</p>

<p class="reference">Referenced by <a class="el" href="_register_backend_counters_8hpp_source.xhtml#l00023">RegisterBackendCounters::RegisterBackendCounters()</a>.</p>
<div class="fragment"><div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;{</div><div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;    <span class="keyword">const</span> CounterSet* counterSetPtr = m_CounterDirectory.<a class="code" href="classarmnn_1_1profiling_1_1_i_counter_registry.xhtml#a0338e5b744c9c2d08143cf70d319940f">RegisterCounterSet</a>(counterSetName, count, parentCategoryName);</div><div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;    <span class="keywordflow">return</span> counterSetPtr-&gt;<a class="code" href="classarmnn_1_1profiling_1_1_counter_set.xhtml#a58ce26007b307f7e6200e4af7fbf601d">m_Uid</a>;</div><div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;}</div><div class="ttc" id="classarmnn_1_1profiling_1_1_counter_set_xhtml_a58ce26007b307f7e6200e4af7fbf601d"><div class="ttname"><a href="classarmnn_1_1profiling_1_1_counter_set.xhtml#a58ce26007b307f7e6200e4af7fbf601d">armnn::profiling::CounterSet::m_Uid</a></div><div class="ttdeci">uint16_t m_Uid</div><div class="ttdef"><b>Definition:</b> <a href="_i_counter_directory_8hpp_source.xhtml#l00088">ICounterDirectory.hpp:88</a></div></div>
<div class="ttc" id="classarmnn_1_1profiling_1_1_i_counter_registry_xhtml_a0338e5b744c9c2d08143cf70d319940f"><div class="ttname"><a href="classarmnn_1_1profiling_1_1_i_counter_registry.xhtml#a0338e5b744c9c2d08143cf70d319940f">armnn::profiling::ICounterRegistry::RegisterCounterSet</a></div><div class="ttdeci">virtual const CounterSet * RegisterCounterSet(const std::string &amp;counterSetName, uint16_t count, const Optional&lt; std::string &gt; &amp;parentCategoryName)=0</div></div>
</div><!-- fragment -->
</div>
</div>
<a id="aa59f702553e07454e57b7d75294ded25"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aa59f702553e07454e57b7d75294ded25">&#9670;&nbsp;</a></span>RegisterDevice()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">uint16_t RegisterDevice </td>
          <td>(</td>
          <td class="paramtype">const std::string &amp;&#160;</td>
          <td class="paramname"><em>deviceName</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint16_t&#160;</td>
          <td class="paramname"><em>cores</em> = <code>0</code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_optional.xhtml">Optional</a>&lt; std::string &gt; &amp;&#160;</td>
          <td class="paramname"><em>parentCategoryName</em> = <code><a class="el" href="structarmnn_1_1_empty_optional.xhtml">EmptyOptional</a>()</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Implements <a class="el" href="classarmnn_1_1profiling_1_1_i_register_backend_counters.xhtml#a1e48221e1b2a005b133f0043c8ed7190">IRegisterBackendCounters</a>.</p>

<p class="definition">Definition at line <a class="el" href="_register_backend_counters_8cpp_source.xhtml#l00019">19</a> of file <a class="el" href="_register_backend_counters_8cpp_source.xhtml">RegisterBackendCounters.cpp</a>.</p>

<p class="reference">References <a class="el" href="_i_counter_directory_8hpp_source.xhtml#l00072">Device::m_Uid</a>, and <a class="el" href="classarmnn_1_1profiling_1_1_i_counter_registry.xhtml#a552c43eab6a2ba99f68f98802631db8e">ICounterRegistry::RegisterDevice()</a>.</p>

<p class="reference">Referenced by <a class="el" href="_register_backend_counters_8hpp_source.xhtml#l00023">RegisterBackendCounters::RegisterBackendCounters()</a>.</p>
<div class="fragment"><div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;{</div><div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;    <span class="keyword">const</span> Device* devicePtr = m_CounterDirectory.<a class="code" href="classarmnn_1_1profiling_1_1_i_counter_registry.xhtml#a552c43eab6a2ba99f68f98802631db8e">RegisterDevice</a>(deviceName, cores, parentCategoryName);</div><div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;    <span class="keywordflow">return</span> devicePtr-&gt;<a class="code" href="classarmnn_1_1profiling_1_1_device.xhtml#a58ce26007b307f7e6200e4af7fbf601d">m_Uid</a>;</div><div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;}</div><div class="ttc" id="classarmnn_1_1profiling_1_1_i_counter_registry_xhtml_a552c43eab6a2ba99f68f98802631db8e"><div class="ttname"><a href="classarmnn_1_1profiling_1_1_i_counter_registry.xhtml#a552c43eab6a2ba99f68f98802631db8e">armnn::profiling::ICounterRegistry::RegisterDevice</a></div><div class="ttdeci">virtual const Device * RegisterDevice(const std::string &amp;deviceName, uint16_t cores, const Optional&lt; std::string &gt; &amp;parentCategoryName)=0</div></div>
<div class="ttc" id="classarmnn_1_1profiling_1_1_device_xhtml_a58ce26007b307f7e6200e4af7fbf601d"><div class="ttname"><a href="classarmnn_1_1profiling_1_1_device.xhtml#a58ce26007b307f7e6200e4af7fbf601d">armnn::profiling::Device::m_Uid</a></div><div class="ttdeci">uint16_t m_Uid</div><div class="ttdef"><b>Definition:</b> <a href="_i_counter_directory_8hpp_source.xhtml#l00072">ICounterDirectory.hpp:72</a></div></div>
</div><!-- fragment -->
</div>
</div>
<hr/>The documentation for this class was generated from the following files:<ul>
<li>src/profiling/<a class="el" href="_register_backend_counters_8hpp_source.xhtml">RegisterBackendCounters.hpp</a></li>
<li>src/profiling/<a class="el" href="_register_backend_counters_8cpp_source.xhtml">RegisterBackendCounters.cpp</a></li>
</ul>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="namespacearmnn.xhtml">armnn</a></li><li class="navelem"><a class="el" href="namespacearmnn_1_1profiling.xhtml">profiling</a></li><li class="navelem"><a class="el" href="classarmnn_1_1profiling_1_1_register_backend_counters.xhtml">RegisterBackendCounters</a></li>
    <li class="footer">Generated on Tue Feb 22 2022 11:39:53 for ArmNN by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.13 </li>
  </ul>
</div>
</body>
</html>
