<!-- Copyright (c) 2020 ARM Limited. -->
<!--                                 -->
<!-- SPDX-License-Identifier: MIT    -->
<!--                                 -->
<!-- HTML header for doxygen 1.8.13-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.13"/>
<meta name="robots" content="NOINDEX, NOFOLLOW" />
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>ArmNN: Member List</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script><script type="text/javascript" src="http://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="stylesheet.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <img alt="ArmNN" src="Arm_NN_horizontal_blue.png" style="max-width: 10rem; margin-top: .5rem; margin-left 10px"/>
  <td style="padding-left: 0.5em;">
   <div id="projectname">
   &#160;<span id="projectnumber">22.02</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.13 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
$(document).ready(function(){initNavTree('classarmnn_1_1_elementwise_base_layer.xhtml','');});
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="headertitle">
<div class="title">ElementwiseBaseLayer Member List</div>  </div>
</div><!--header-->
<div class="contents">

<p>This is the complete list of members for <a class="el" href="classarmnn_1_1_elementwise_base_layer.xhtml">ElementwiseBaseLayer</a>, including all inherited members.</p>
<table class="directory">
  <tr class="even"><td class="entry"><a class="el" href="classarmnn_1_1_layer.xhtml#a339248d89d5e21534ecf74b4393ed4d2">AddRelatedLayerName</a>(const std::string layerName)</td><td class="entry"><a class="el" href="classarmnn_1_1_layer.xhtml">Layer</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr><td class="entry"><a class="el" href="classarmnn_1_1_i_connectable_layer.xhtml#a16f13e50f6de375ddf35d7b97d3f9728">ARMNN_DEPRECATED_MSG_REMOVAL_DATE</a>(&quot;Accept is deprecated. The ILayerVisitor that works in conjunction with this &quot; &quot;Accept function is deprecated. Use IStrategy in combination with &quot; &quot;ExecuteStrategy instead, which is an ABI/API stable version of the &quot; &quot;visitor pattern.&quot;, &quot;22.05&quot;) virtual void Accept(ILayerVisitor &amp;visitor) const =0</td><td class="entry"><a class="el" href="classarmnn_1_1_i_connectable_layer.xhtml">IConnectableLayer</a></td><td class="entry"><span class="mlabel">pure virtual</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classarmnn_1_1_layer.xhtml#a43a46eafee5c08787ab17b4342730c20">BackendSelectionHint</a>(Optional&lt; BackendId &gt; backend) final</td><td class="entry"><a class="el" href="classarmnn_1_1_layer.xhtml">Layer</a></td><td class="entry"><span class="mlabel">inline</span><span class="mlabel">virtual</span></td></tr>
  <tr><td class="entry"><a class="el" href="classarmnn_1_1_layer.xhtml#af6cb8de21ef0da269ec9b67755ae92a0">BeginInputSlots</a>()</td><td class="entry"><a class="el" href="classarmnn_1_1_layer.xhtml">Layer</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classarmnn_1_1_layer.xhtml#a817d4be6dd88f532d36f51748ec14185">BeginOutputSlots</a>()</td><td class="entry"><a class="el" href="classarmnn_1_1_layer.xhtml">Layer</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr><td class="entry"><a class="el" href="classarmnn_1_1_layer.xhtml#ae89ff455503aa106d00bf34103d2f2e0">Clone</a>(Graph &amp;graph) const =0</td><td class="entry"><a class="el" href="classarmnn_1_1_layer.xhtml">Layer</a></td><td class="entry"><span class="mlabel">pure virtual</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classarmnn_1_1_layer.xhtml#aa10fd205c3f5469a9ecb2aa2a3ffd101">CloneBase</a>(Graph &amp;graph, Params &amp;&amp;... params) const</td><td class="entry"><a class="el" href="classarmnn_1_1_layer.xhtml">Layer</a></td><td class="entry"><span class="mlabel">protected</span></td></tr>
  <tr><td class="entry"><a class="el" href="classarmnn_1_1_layer.xhtml#afc3239f5fc116259bf5451964e803646">CollectQueueDescriptorInputs</a>(QueueDescriptor &amp;descriptor, WorkloadInfo &amp;info) const</td><td class="entry"><a class="el" href="classarmnn_1_1_layer.xhtml">Layer</a></td><td class="entry"><span class="mlabel">inline</span><span class="mlabel">protected</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classarmnn_1_1_layer.xhtml#a499ca5a94d0174ed21786b6994b2cd8c">CollectQueueDescriptorOutputs</a>(QueueDescriptor &amp;descriptor, WorkloadInfo &amp;info) const</td><td class="entry"><a class="el" href="classarmnn_1_1_layer.xhtml">Layer</a></td><td class="entry"><span class="mlabel">inline</span><span class="mlabel">protected</span></td></tr>
  <tr><td class="entry"><a class="el" href="classarmnn_1_1_i_connectable_layer.xhtml#af978f897fb7e115a901cb7ed95f8e532">ConstantTensors</a> typedef</td><td class="entry"><a class="el" href="classarmnn_1_1_i_connectable_layer.xhtml">IConnectableLayer</a></td><td class="entry"></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classarmnn_1_1_layer.xhtml#a3ff62126ec713a2708e5fbaa6146a7de">CreateTensorHandles</a>(const TensorHandleFactoryRegistry &amp;registry, const IWorkloadFactory &amp;factory, const bool IsMemoryManaged=true)</td><td class="entry"><a class="el" href="classarmnn_1_1_layer.xhtml">Layer</a></td><td class="entry"><span class="mlabel">virtual</span></td></tr>
  <tr><td class="entry"><a class="el" href="classarmnn_1_1_layer.xhtml#a08d1e10a45f15cd0bd02557be35a3864">CreateWorkload</a>(const IWorkloadFactory &amp;factory) const =0</td><td class="entry"><a class="el" href="classarmnn_1_1_layer.xhtml">Layer</a></td><td class="entry"><span class="mlabel">pure virtual</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classarmnn_1_1_elementwise_base_layer.xhtml#a6aa67447c0f7d3aa62124c535e5b550b">ElementwiseBaseLayer</a>(unsigned int numInputSlots, unsigned int numOutputSlots, LayerType type, const char *name)</td><td class="entry"><a class="el" href="classarmnn_1_1_elementwise_base_layer.xhtml">ElementwiseBaseLayer</a></td><td class="entry"><span class="mlabel">protected</span></td></tr>
  <tr><td class="entry"><a class="el" href="classarmnn_1_1_layer.xhtml#a9752e12d6b79e18da1a25f76159d2a72">EndInputSlots</a>()</td><td class="entry"><a class="el" href="classarmnn_1_1_layer.xhtml">Layer</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classarmnn_1_1_layer.xhtml#a55f76d98fcd2f5cdac3e2b14536cb7ab">EndOutputSlots</a>()</td><td class="entry"><a class="el" href="classarmnn_1_1_layer.xhtml">Layer</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr><td class="entry"><a class="el" href="classarmnn_1_1_elementwise_base_layer.xhtml#a46fc3fdd4b2a5dd6d184e57983cf20bc">ExecuteStrategy</a>(IStrategy &amp;strategy) const override</td><td class="entry"><a class="el" href="classarmnn_1_1_elementwise_base_layer.xhtml">ElementwiseBaseLayer</a></td><td class="entry"><span class="mlabel">virtual</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classarmnn_1_1_layer.xhtml#aefb14147290b6b928c5fc924ba035acc">GetAdditionalInformation</a>() const</td><td class="entry"><a class="el" href="classarmnn_1_1_layer.xhtml">Layer</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr><td class="entry"><a class="el" href="classarmnn_1_1_layer.xhtml#a6ff80e440308295056b57e2adaa42888">GetBackendHint</a>() const</td><td class="entry"><a class="el" href="classarmnn_1_1_layer.xhtml">Layer</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classarmnn_1_1_layer.xhtml#afdb1d37740e7a083b625d669588b6a0e">GetBackendId</a>() const</td><td class="entry"><a class="el" href="classarmnn_1_1_layer.xhtml">Layer</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr><td class="entry"><a class="el" href="classarmnn_1_1_layer.xhtml#a160bcee27e0c160959073bea90c98092">GetConstantTensorsByRef</a>() override</td><td class="entry"><a class="el" href="classarmnn_1_1_layer.xhtml">Layer</a></td><td class="entry"><span class="mlabel">inline</span><span class="mlabel">protected</span><span class="mlabel">virtual</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classarmnn_1_1_layer.xhtml#aea909c7327109228ef618d459015def3">GetDataType</a>() const</td><td class="entry"><a class="el" href="classarmnn_1_1_layer.xhtml">Layer</a></td><td class="entry"></td></tr>
  <tr><td class="entry"><a class="el" href="classarmnn_1_1_layer.xhtml#a8dc12f0ee5b232d397bd18ced1a72a64">GetGuid</a>() const final</td><td class="entry"><a class="el" href="classarmnn_1_1_layer.xhtml">Layer</a></td><td class="entry"><span class="mlabel">inline</span><span class="mlabel">virtual</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classarmnn_1_1_layer.xhtml#acf8b8e23bf647836592982f97088d375">GetInputSlot</a>(unsigned int index) const override</td><td class="entry"><a class="el" href="classarmnn_1_1_layer.xhtml">Layer</a></td><td class="entry"><span class="mlabel">inline</span><span class="mlabel">virtual</span></td></tr>
  <tr><td class="entry"><a class="el" href="classarmnn_1_1_layer.xhtml#a1b50eb1358cdf382f4bc3fc8849f8e8e">GetInputSlot</a>(unsigned int index) override</td><td class="entry"><a class="el" href="classarmnn_1_1_layer.xhtml">Layer</a></td><td class="entry"><span class="mlabel">inline</span><span class="mlabel">virtual</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classarmnn_1_1_layer.xhtml#af5f530544d09a44d726f24702b67b35b">GetInputSlots</a>() const</td><td class="entry"><a class="el" href="classarmnn_1_1_layer.xhtml">Layer</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr><td class="entry"><a class="el" href="classarmnn_1_1_layer.xhtml#a7ddf0cf6f620d59c10e63495ace795d0">GetName</a>() const override</td><td class="entry"><a class="el" href="classarmnn_1_1_layer.xhtml">Layer</a></td><td class="entry"><span class="mlabel">inline</span><span class="mlabel">virtual</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classarmnn_1_1_layer.xhtml#a9a97cb6d32661a57fc33bd29b8e41ff4">GetNameStr</a>() const</td><td class="entry"><a class="el" href="classarmnn_1_1_layer.xhtml">Layer</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr><td class="entry"><a class="el" href="classarmnn_1_1_layer.xhtml#abc0660dc440c8a285b456c9ef6383c26">GetNumInputSlots</a>() const override</td><td class="entry"><a class="el" href="classarmnn_1_1_layer.xhtml">Layer</a></td><td class="entry"><span class="mlabel">inline</span><span class="mlabel">virtual</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classarmnn_1_1_layer.xhtml#a1594bddc87d6477df300317658f566bb">GetNumOutputSlots</a>() const override</td><td class="entry"><a class="el" href="classarmnn_1_1_layer.xhtml">Layer</a></td><td class="entry"><span class="mlabel">inline</span><span class="mlabel">virtual</span></td></tr>
  <tr><td class="entry"><a class="el" href="classarmnn_1_1_layer.xhtml#af2c0edc7ea62a8baaec4d3d9b2b09256">GetOutputHandler</a>(unsigned int i=0) const</td><td class="entry"><a class="el" href="classarmnn_1_1_layer.xhtml">Layer</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classarmnn_1_1_layer.xhtml#a1d4e05c17647232c514cfe58ca80744a">GetOutputHandler</a>(unsigned int i=0)</td><td class="entry"><a class="el" href="classarmnn_1_1_layer.xhtml">Layer</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr><td class="entry"><a class="el" href="classarmnn_1_1_layer.xhtml#a0e36688a43c35668d8db5257274c68fe">GetOutputSlot</a>(unsigned int index=0) const override</td><td class="entry"><a class="el" href="classarmnn_1_1_layer.xhtml">Layer</a></td><td class="entry"><span class="mlabel">inline</span><span class="mlabel">virtual</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classarmnn_1_1_layer.xhtml#abbd71844785bb2f00a81baca30ea5ff0">GetOutputSlot</a>(unsigned int index=0) override</td><td class="entry"><a class="el" href="classarmnn_1_1_layer.xhtml">Layer</a></td><td class="entry"><span class="mlabel">inline</span><span class="mlabel">virtual</span></td></tr>
  <tr><td class="entry"><a class="el" href="classarmnn_1_1_layer.xhtml#a98cdff4e0b45f4c80bfcedaf926e16e0">GetOutputSlots</a>() const</td><td class="entry"><a class="el" href="classarmnn_1_1_layer.xhtml">Layer</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classarmnn_1_1_layer.xhtml#a94a487f29157eeec10e2f9a372487bcc">GetParameters</a>() const override</td><td class="entry"><a class="el" href="classarmnn_1_1_layer.xhtml">Layer</a></td><td class="entry"><span class="mlabel">inline</span><span class="mlabel">virtual</span></td></tr>
  <tr><td class="entry"><a class="el" href="classarmnn_1_1_layer.xhtml#af97a07195a67a638605b3c325763c2dd">GetPriority</a>() const</td><td class="entry"><a class="el" href="classarmnn_1_1_layer.xhtml">Layer</a></td><td class="entry"></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classarmnn_1_1_layer.xhtml#a5e5520194ea4042fe07b0bf53c28f634">GetRelatedLayerNames</a>()</td><td class="entry"><a class="el" href="classarmnn_1_1_layer.xhtml">Layer</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr><td class="entry"><a class="el" href="classarmnn_1_1_layer.xhtml#a3560e0733f829e5194887d014a133144">GetShapeInferenceMethod</a>() const</td><td class="entry"><a class="el" href="classarmnn_1_1_layer.xhtml">Layer</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classarmnn_1_1_layer.xhtml#ad8e15c530c929ab823d89ae9fd2d3f11">GetType</a>() const override</td><td class="entry"><a class="el" href="classarmnn_1_1_layer.xhtml">Layer</a></td><td class="entry"><span class="mlabel">inline</span><span class="mlabel">virtual</span></td></tr>
  <tr><td class="entry"><a class="el" href="classarmnn_1_1_elementwise_base_layer.xhtml#a65ca562c882ad619684445a1402f415a">InferOutputShapes</a>(const std::vector&lt; TensorShape &gt; &amp;inputShapes) const override</td><td class="entry"><a class="el" href="classarmnn_1_1_elementwise_base_layer.xhtml">ElementwiseBaseLayer</a></td><td class="entry"><span class="mlabel">virtual</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classarmnn_1_1_layer.xhtml#a22485f444124128940e798a42f0b76d9">IsOutputUnconnected</a>()</td><td class="entry"><a class="el" href="classarmnn_1_1_layer.xhtml">Layer</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr><td class="entry"><a class="el" href="classarmnn_1_1_layer.xhtml#a5e5ae420d199a0bccae5139d38c30205">Layer</a>(unsigned int numInputSlots, unsigned int numOutputSlots, LayerType type, const char *name)</td><td class="entry"><a class="el" href="classarmnn_1_1_layer.xhtml">Layer</a></td><td class="entry"></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classarmnn_1_1_layer.xhtml#a395d070748c18d903705799360088e80">Layer</a>(unsigned int numInputSlots, unsigned int numOutputSlots, LayerType type, DataLayout layout, const char *name)</td><td class="entry"><a class="el" href="classarmnn_1_1_layer.xhtml">Layer</a></td><td class="entry"></td></tr>
  <tr><td class="entry"><a class="el" href="classarmnn_1_1_layer.xhtml#ac7170f79bd0eadb1b6153e359c023cc0">m_AdditionalInfoObject</a></td><td class="entry"><a class="el" href="classarmnn_1_1_layer.xhtml">Layer</a></td><td class="entry"><span class="mlabel">protected</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classarmnn_1_1_layer.xhtml#aa44d91037bba52ba0dec6577509ade3b">m_OutputHandlers</a></td><td class="entry"><a class="el" href="classarmnn_1_1_layer.xhtml">Layer</a></td><td class="entry"><span class="mlabel">protected</span></td></tr>
  <tr><td class="entry"><a class="el" href="classarmnn_1_1_layer.xhtml#afe508761cc8318b15329ba4acf7fbfec">m_ShapeInferenceMethod</a></td><td class="entry"><a class="el" href="classarmnn_1_1_layer.xhtml">Layer</a></td><td class="entry"><span class="mlabel">protected</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classarmnn_1_1_layer.xhtml#a386acff5f8430245239ce58d00ba7576">OperateOnConstantTensors</a>(Op op)</td><td class="entry"><a class="el" href="classarmnn_1_1_layer.xhtml">Layer</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr><td class="entry"><a class="el" href="classarmnn_1_1_layer.xhtml#a30a858b2b26d651a066537e499fbf40d">PrepInfoAndDesc</a>(QueueDescriptor &amp;descriptor) const</td><td class="entry"><a class="el" href="classarmnn_1_1_layer.xhtml">Layer</a></td><td class="entry"><span class="mlabel">inline</span><span class="mlabel">protected</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classarmnn_1_1_layer.xhtml#a339bef86bc340c3d1393ed83950fe8af">ReleaseConstantData</a>()</td><td class="entry"><a class="el" href="classarmnn_1_1_layer.xhtml">Layer</a></td><td class="entry"><span class="mlabel">virtual</span></td></tr>
  <tr><td class="entry"><a class="el" href="classarmnn_1_1_layer.xhtml#a72b18e4c5a403bc3fe2fecf20135c8d6">Reparent</a>(Graph &amp;dest, std::list&lt; Layer *&gt;::const_iterator iterator)=0</td><td class="entry"><a class="el" href="classarmnn_1_1_layer.xhtml">Layer</a></td><td class="entry"><span class="mlabel">pure virtual</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classarmnn_1_1_layer.xhtml#aac329cade047e952621b59a51a5d5f49">ResetPriority</a>() const</td><td class="entry"><a class="el" href="classarmnn_1_1_layer.xhtml">Layer</a></td><td class="entry"></td></tr>
  <tr><td class="entry"><a class="el" href="classarmnn_1_1_layer.xhtml#ac04cd8de9b9185756eb02463ffd432b1">SerializeLayerParameters</a>(ParameterStringifyFunction &amp;fn) const</td><td class="entry"><a class="el" href="classarmnn_1_1_layer.xhtml">Layer</a></td><td class="entry"><span class="mlabel">virtual</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classarmnn_1_1_layer.xhtml#af7f0460d32511de0da525f1817d13e8c">SetAdditionalInfo</a>(QueueDescriptor &amp;descriptor) const</td><td class="entry"><a class="el" href="classarmnn_1_1_layer.xhtml">Layer</a></td><td class="entry"><span class="mlabel">protected</span></td></tr>
  <tr><td class="entry"><a class="el" href="classarmnn_1_1_layer.xhtml#aea1c8483ebeabc0dcbd9090b4f648f1d">SetAdditionalInfoForObject</a>(const AdditionalInfoObjectPtr &amp;additionalInfo)</td><td class="entry"><a class="el" href="classarmnn_1_1_layer.xhtml">Layer</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classarmnn_1_1_layer.xhtml#a3f6ad59212fa8a47c9265162fff8a274">SetBackendId</a>(const BackendId &amp;id)</td><td class="entry"><a class="el" href="classarmnn_1_1_layer.xhtml">Layer</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr><td class="entry"><a class="el" href="classarmnn_1_1_layer.xhtml#a6d1024208b672a87ef2c1bfaf93d2b9f">SetGuid</a>(LayerGuid guid)</td><td class="entry"><a class="el" href="classarmnn_1_1_layer.xhtml">Layer</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classarmnn_1_1_layer.xhtml#a429abdfa769f4d48268938dcaea00904">SetShapeInferenceMethod</a>(ShapeInferenceMethod shapeInferenceMethod)</td><td class="entry"><a class="el" href="classarmnn_1_1_layer.xhtml">Layer</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr><td class="entry"><a class="el" href="classarmnn_1_1_layer.xhtml#aeb2d638cc0e02c10075e015100996f2d">ValidateAndCopyShape</a>(const TensorShape &amp;outputShape, const TensorShape &amp;inferredShape, const ShapeInferenceMethod shapeInferenceMethod, const std::string &amp;layerName, const unsigned int outputSlotIndex=0)</td><td class="entry"><a class="el" href="classarmnn_1_1_layer.xhtml">Layer</a></td><td class="entry"><span class="mlabel">protected</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classarmnn_1_1_elementwise_base_layer.xhtml#a8c8f543d7e9729362c266d12ec169966">ValidateTensorShapesFromInputs</a>() override</td><td class="entry"><a class="el" href="classarmnn_1_1_elementwise_base_layer.xhtml">ElementwiseBaseLayer</a></td><td class="entry"><span class="mlabel">virtual</span></td></tr>
  <tr><td class="entry"><a class="el" href="classarmnn_1_1_layer.xhtml#a0607e36e88f38c34c71c663164b76776">VerifyLayerConnections</a>(unsigned int expectedConnections, const CheckLocation &amp;location) const</td><td class="entry"><a class="el" href="classarmnn_1_1_layer.xhtml">Layer</a></td><td class="entry"></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classarmnn_1_1_layer.xhtml#a448afc716fda85394df1e8e5b7d530e8">VerifyShapeInferenceType</a>(const TensorShape &amp;outputShape, ShapeInferenceMethod shapeInferenceMethod)</td><td class="entry"><a class="el" href="classarmnn_1_1_layer.xhtml">Layer</a></td><td class="entry"><span class="mlabel">protected</span></td></tr>
  <tr><td class="entry"><a class="el" href="classarmnn_1_1_elementwise_base_layer.xhtml#a70745c21e09e36c3a83aff0c9848514c">~ElementwiseBaseLayer</a>()=default</td><td class="entry"><a class="el" href="classarmnn_1_1_elementwise_base_layer.xhtml">ElementwiseBaseLayer</a></td><td class="entry"><span class="mlabel">protected</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classarmnn_1_1_i_connectable_layer.xhtml#a8c7faf37c1d965431aaa02ae934d67ee">~IConnectableLayer</a>()</td><td class="entry"><a class="el" href="classarmnn_1_1_i_connectable_layer.xhtml">IConnectableLayer</a></td><td class="entry"><span class="mlabel">inline</span><span class="mlabel">protected</span></td></tr>
  <tr><td class="entry"><a class="el" href="classarmnn_1_1_layer.xhtml#aacfb208d750bdfce1bbd423e5cac76e2">~Layer</a>()=default</td><td class="entry"><a class="el" href="classarmnn_1_1_layer.xhtml">Layer</a></td><td class="entry"><span class="mlabel">protected</span><span class="mlabel">virtual</span></td></tr>
</table></div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="footer">Generated on Tue Feb 22 2022 11:39:46 for ArmNN by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.13 </li>
  </ul>
</div>
</body>
</html>
