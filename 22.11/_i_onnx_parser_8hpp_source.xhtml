<!-- Copyright (c) 2020 ARM Limited. -->
<!--                                 -->
<!-- SPDX-License-Identifier: MIT    -->
<!--                                 -->
<!-- HTML header for doxygen 1.8.13-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.13"/>
<meta name="robots" content="NOINDEX, NOFOLLOW" />
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>ArmNN: include/armnnOnnxParser/IOnnxParser.hpp Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script><script type="text/javascript" src="http://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="stylesheet.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <img alt="ArmNN" src="Arm_NN_horizontal_blue.png" style="max-width: 10rem; margin-top: .5rem; margin-left 10px"/>
  <td style="padding-left: 0.5em;">
   <div id="projectname">
   &#160;<span id="projectnumber">22.11</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.13 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
$(document).ready(function(){initNavTree('_i_onnx_parser_8hpp_source.xhtml','');});
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="headertitle">
<div class="title">IOnnxParser.hpp</div>  </div>
</div><!--header-->
<div class="contents">
<a href="_i_onnx_parser_8hpp.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="comment">//</span></div><div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="comment">// Copyright Â© 2017 Arm Ltd. All rights reserved.</span></div><div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="comment">// SPDX-License-Identifier: MIT</span></div><div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="comment">//</span></div><div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="preprocessor">#pragma once</span></div><div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;</div><div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="preprocessor">#include &lt;<a class="code" href="_i_network_8hpp.xhtml">armnn/INetwork.hpp</a>&gt;</span></div><div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="preprocessor">#include &lt;<a class="code" href="_tensor_8hpp.xhtml">armnn/Tensor.hpp</a>&gt;</span></div><div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;</div><div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="preprocessor">#include &lt;memory&gt;</span></div><div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;<span class="preprocessor">#include &lt;vector&gt;</span></div><div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;<span class="preprocessor">#include &lt;map&gt;</span></div><div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;</div><div class="line"><a name="l00014"></a><span class="lineno"><a class="line" href="namespacearmnn_onnx_parser.xhtml">   14</a></span>&#160;<span class="keyword">namespace </span><a class="code" href="namespacearmnn_onnx_parser.xhtml">armnnOnnxParser</a></div><div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;{</div><div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;</div><div class="line"><a name="l00017"></a><span class="lineno"><a class="line" href="namespacearmnn_onnx_parser.xhtml#a9084adbf804022c874039ad40d1939e9">   17</a></span>&#160;<span class="keyword">using</span> <a class="code" href="namespacearmnn_onnx_parser.xhtml#a9084adbf804022c874039ad40d1939e9">BindingPointInfo</a> = <a class="code" href="namespacearmnn.xhtml#a280670a263dc4fd40491f6d0a2737f44">armnn::BindingPointInfo</a>;</div><div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;</div><div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;<span class="keyword">class </span><a class="code" href="classarmnn_onnx_parser_1_1_onnx_parser_impl.xhtml">OnnxParserImpl</a>;</div><div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;<span class="keyword">class </span><a class="code" href="classarmnn_onnx_parser_1_1_i_onnx_parser.xhtml">IOnnxParser</a>;</div><div class="line"><a name="l00021"></a><span class="lineno"><a class="line" href="namespacearmnn_onnx_parser.xhtml#ac7dfccab29feeb5f33f1ec0183c1e123">   21</a></span>&#160;<span class="keyword">using</span> <a class="code" href="namespacearmnn_onnx_parser.xhtml#ac7dfccab29feeb5f33f1ec0183c1e123">IOnnxParserPtr</a> = std::unique_ptr&lt;IOnnxParser, void(*)(IOnnxParser* parser)&gt;;</div><div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;</div><div class="line"><a name="l00023"></a><span class="lineno"><a class="line" href="classarmnn_onnx_parser_1_1_i_onnx_parser.xhtml">   23</a></span>&#160;<span class="keyword">class </span><a class="code" href="classarmnn_onnx_parser_1_1_i_onnx_parser.xhtml">IOnnxParser</a></div><div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;{</div><div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;<span class="keyword">public</span>:</div><div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;    <span class="keyword">static</span> <a class="code" href="classarmnn_onnx_parser_1_1_i_onnx_parser.xhtml">IOnnxParser</a>* <a class="code" href="classarmnn_onnx_parser_1_1_i_onnx_parser.xhtml#a1ae1d4dfe89d26b84d371439d6815bfb">CreateRaw</a>();</div><div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;    <span class="keyword">static</span> <a class="code" href="namespacearmnn_onnx_parser.xhtml#ac7dfccab29feeb5f33f1ec0183c1e123">IOnnxParserPtr</a> <a class="code" href="classarmnn_onnx_parser_1_1_i_onnx_parser.xhtml#af9b9254fb8a084f0db4f7deff0498b20">Create</a>();</div><div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;    <span class="keyword">static</span> <span class="keywordtype">void</span> <a class="code" href="classarmnn_onnx_parser_1_1_i_onnx_parser.xhtml#a793da4fa60bf13f128c20d8def32c291">Destroy</a>(<a class="code" href="classarmnn_onnx_parser_1_1_i_onnx_parser.xhtml">IOnnxParser</a>* parser);</div><div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;<span class="comment">    /// Create the network from a protobuf binary file on disk</span></div><div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;<span class="comment"></span>    <a class="code" href="namespacearmnn.xhtml#ace74f6f9feb95a964a49d79458232703">armnn::INetworkPtr</a> <a class="code" href="classarmnn_onnx_parser_1_1_i_onnx_parser.xhtml#a6bf5861864c8828e59df24a7868c5439">CreateNetworkFromBinaryFile</a>(<span class="keyword">const</span> <span class="keywordtype">char</span>* graphFile);</div><div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;<span class="comment">    /// Create the network from a protobuf text file on disk</span></div><div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;<span class="comment"></span>    <a class="code" href="namespacearmnn.xhtml#ace74f6f9feb95a964a49d79458232703">armnn::INetworkPtr</a> <a class="code" href="classarmnn_onnx_parser_1_1_i_onnx_parser.xhtml#ae6e0c06fbaab2070091357ca9ed52d0c">CreateNetworkFromTextFile</a>(<span class="keyword">const</span> <span class="keywordtype">char</span>* graphFile);</div><div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;<span class="comment">    /// Create the network directly from protobuf text in a string. Useful for debugging/testing</span></div><div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;<span class="comment"></span>    <a class="code" href="namespacearmnn.xhtml#ace74f6f9feb95a964a49d79458232703">armnn::INetworkPtr</a> <a class="code" href="classarmnn_onnx_parser_1_1_i_onnx_parser.xhtml#a7a50b3c283b44956158e43db2e0111d0">CreateNetworkFromString</a>(<span class="keyword">const</span> std::string&amp; protoText);</div><div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;<span class="comment">    /// Create the network from a protobuf binary file on disk, with inputShapes specified</span></div><div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;<span class="comment"></span>    <a class="code" href="namespacearmnn.xhtml#ace74f6f9feb95a964a49d79458232703">armnn::INetworkPtr</a> <a class="code" href="classarmnn_onnx_parser_1_1_i_onnx_parser.xhtml#a6bf5861864c8828e59df24a7868c5439">CreateNetworkFromBinaryFile</a>(<span class="keyword">const</span> <span class="keywordtype">char</span>* graphFile,</div><div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;                                                   <span class="keyword">const</span> std::map&lt;std::string, armnn::TensorShape&gt;&amp; inputShapes);</div><div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;<span class="comment">    /// Create the network from a protobuf text file on disk, with inputShapes specified</span></div><div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;<span class="comment"></span>    <a class="code" href="namespacearmnn.xhtml#ace74f6f9feb95a964a49d79458232703">armnn::INetworkPtr</a> <a class="code" href="classarmnn_onnx_parser_1_1_i_onnx_parser.xhtml#ae6e0c06fbaab2070091357ca9ed52d0c">CreateNetworkFromTextFile</a>(<span class="keyword">const</span> <span class="keywordtype">char</span>* graphFile,</div><div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;                                                 <span class="keyword">const</span> std::map&lt;std::string, armnn::TensorShape&gt;&amp; inputShapes);</div><div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;<span class="comment">     /// Create the network directly from protobuf text in a string, with inputShapes specified.</span></div><div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;<span class="comment">     /// Useful for debugging/testing</span></div><div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;<span class="comment"></span>    <a class="code" href="namespacearmnn.xhtml#ace74f6f9feb95a964a49d79458232703">armnn::INetworkPtr</a> <a class="code" href="classarmnn_onnx_parser_1_1_i_onnx_parser.xhtml#a7a50b3c283b44956158e43db2e0111d0">CreateNetworkFromString</a>(<span class="keyword">const</span> std::string&amp; protoText,</div><div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;                                               <span class="keyword">const</span> std::map&lt;std::string, armnn::TensorShape&gt;&amp; inputShapes);</div><div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;<span class="comment">    /// Retrieve binding info (layer id and tensor info) for the network input identified by the given layer name</span></div><div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;<span class="comment"></span>    <a class="code" href="namespacearmnn_onnx_parser.xhtml#a9084adbf804022c874039ad40d1939e9">BindingPointInfo</a> <a class="code" href="classarmnn_onnx_parser_1_1_i_onnx_parser.xhtml#a8b053a6c449d0814cc831c916c126668">GetNetworkInputBindingInfo</a>(<span class="keyword">const</span> std::string&amp; name) <span class="keyword">const</span>;</div><div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;<span class="comment"></span></div><div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;<span class="comment">    /// Retrieve binding info (layer id and tensor info) for the network output identified by the given layer name</span></div><div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;<span class="comment"></span>    <a class="code" href="namespacearmnn_onnx_parser.xhtml#a9084adbf804022c874039ad40d1939e9">BindingPointInfo</a> <a class="code" href="classarmnn_onnx_parser_1_1_i_onnx_parser.xhtml#a4b1fdcb1985af12dd1848a9ffa5d3271">GetNetworkOutputBindingInfo</a>(<span class="keyword">const</span> std::string&amp; name) <span class="keyword">const</span>;</div><div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;</div><div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;<span class="keyword">private</span>:</div><div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;    <a class="code" href="classarmnn_onnx_parser_1_1_i_onnx_parser.xhtml">IOnnxParser</a>();</div><div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;    ~<a class="code" href="classarmnn_onnx_parser_1_1_i_onnx_parser.xhtml">IOnnxParser</a>();</div><div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;</div><div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;    std::unique_ptr&lt;OnnxParserImpl&gt; pOnnxParserImpl;</div><div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;  };</div><div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;</div><div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;  }</div><div class="ttc" id="_tensor_8hpp_xhtml"><div class="ttname"><a href="_tensor_8hpp.xhtml">Tensor.hpp</a></div></div>
<div class="ttc" id="classarmnn_onnx_parser_1_1_i_onnx_parser_xhtml_a1ae1d4dfe89d26b84d371439d6815bfb"><div class="ttname"><a href="classarmnn_onnx_parser_1_1_i_onnx_parser.xhtml#a1ae1d4dfe89d26b84d371439d6815bfb">armnnOnnxParser::IOnnxParser::CreateRaw</a></div><div class="ttdeci">static IOnnxParser * CreateRaw()</div><div class="ttdef"><b>Definition:</b> <a href="_onnx_parser_8cpp_source.xhtml#l00033">OnnxParser.cpp:33</a></div></div>
<div class="ttc" id="classarmnn_onnx_parser_1_1_onnx_parser_impl_xhtml"><div class="ttname"><a href="classarmnn_onnx_parser_1_1_onnx_parser_impl.xhtml">armnnOnnxParser::OnnxParserImpl</a></div><div class="ttdef"><b>Definition:</b> <a href="_onnx_parser_8hpp_source.xhtml#l00025">OnnxParser.hpp:25</a></div></div>
<div class="ttc" id="classarmnn_onnx_parser_1_1_i_onnx_parser_xhtml_a7a50b3c283b44956158e43db2e0111d0"><div class="ttname"><a href="classarmnn_onnx_parser_1_1_i_onnx_parser.xhtml#a7a50b3c283b44956158e43db2e0111d0">armnnOnnxParser::IOnnxParser::CreateNetworkFromString</a></div><div class="ttdeci">armnn::INetworkPtr CreateNetworkFromString(const std::string &amp;protoText)</div><div class="ttdoc">Create the network directly from protobuf text in a string. Useful for debugging/testing. </div><div class="ttdef"><b>Definition:</b> <a href="_onnx_parser_8cpp_source.xhtml#l00058">OnnxParser.cpp:58</a></div></div>
<div class="ttc" id="classarmnn_onnx_parser_1_1_i_onnx_parser_xhtml_a8b053a6c449d0814cc831c916c126668"><div class="ttname"><a href="classarmnn_onnx_parser_1_1_i_onnx_parser.xhtml#a8b053a6c449d0814cc831c916c126668">armnnOnnxParser::IOnnxParser::GetNetworkInputBindingInfo</a></div><div class="ttdeci">BindingPointInfo GetNetworkInputBindingInfo(const std::string &amp;name) const</div><div class="ttdoc">Retrieve binding info (layer id and tensor info) for the network input identified by the given layer ...</div><div class="ttdef"><b>Definition:</b> <a href="_onnx_parser_8cpp_source.xhtml#l00082">OnnxParser.cpp:82</a></div></div>
<div class="ttc" id="classarmnn_onnx_parser_1_1_i_onnx_parser_xhtml_a6bf5861864c8828e59df24a7868c5439"><div class="ttname"><a href="classarmnn_onnx_parser_1_1_i_onnx_parser.xhtml#a6bf5861864c8828e59df24a7868c5439">armnnOnnxParser::IOnnxParser::CreateNetworkFromBinaryFile</a></div><div class="ttdeci">armnn::INetworkPtr CreateNetworkFromBinaryFile(const char *graphFile)</div><div class="ttdoc">Create the network from a protobuf binary file on disk. </div><div class="ttdef"><b>Definition:</b> <a href="_onnx_parser_8cpp_source.xhtml#l00048">OnnxParser.cpp:48</a></div></div>
<div class="ttc" id="classarmnn_onnx_parser_1_1_i_onnx_parser_xhtml_ae6e0c06fbaab2070091357ca9ed52d0c"><div class="ttname"><a href="classarmnn_onnx_parser_1_1_i_onnx_parser.xhtml#ae6e0c06fbaab2070091357ca9ed52d0c">armnnOnnxParser::IOnnxParser::CreateNetworkFromTextFile</a></div><div class="ttdeci">armnn::INetworkPtr CreateNetworkFromTextFile(const char *graphFile)</div><div class="ttdoc">Create the network from a protobuf text file on disk. </div><div class="ttdef"><b>Definition:</b> <a href="_onnx_parser_8cpp_source.xhtml#l00053">OnnxParser.cpp:53</a></div></div>
<div class="ttc" id="classarmnn_onnx_parser_1_1_i_onnx_parser_xhtml"><div class="ttname"><a href="classarmnn_onnx_parser_1_1_i_onnx_parser.xhtml">armnnOnnxParser::IOnnxParser</a></div><div class="ttdef"><b>Definition:</b> <a href="_i_onnx_parser_8hpp_source.xhtml#l00023">IOnnxParser.hpp:23</a></div></div>
<div class="ttc" id="classarmnn_onnx_parser_1_1_i_onnx_parser_xhtml_a793da4fa60bf13f128c20d8def32c291"><div class="ttname"><a href="classarmnn_onnx_parser_1_1_i_onnx_parser.xhtml#a793da4fa60bf13f128c20d8def32c291">armnnOnnxParser::IOnnxParser::Destroy</a></div><div class="ttdeci">static void Destroy(IOnnxParser *parser)</div><div class="ttdef"><b>Definition:</b> <a href="_onnx_parser_8cpp_source.xhtml#l00043">OnnxParser.cpp:43</a></div></div>
<div class="ttc" id="_i_network_8hpp_xhtml"><div class="ttname"><a href="_i_network_8hpp.xhtml">INetwork.hpp</a></div></div>
<div class="ttc" id="namespacearmnn_onnx_parser_xhtml"><div class="ttname"><a href="namespacearmnn_onnx_parser.xhtml">armnnOnnxParser</a></div><div class="ttdef"><b>Definition:</b> <a href="_i_onnx_parser_8hpp_source.xhtml#l00014">IOnnxParser.hpp:14</a></div></div>
<div class="ttc" id="namespacearmnn_xhtml_a280670a263dc4fd40491f6d0a2737f44"><div class="ttname"><a href="namespacearmnn.xhtml#a280670a263dc4fd40491f6d0a2737f44">armnn::BindingPointInfo</a></div><div class="ttdeci">std::pair&lt; armnn::LayerBindingId, armnn::TensorInfo &gt; BindingPointInfo</div><div class="ttdef"><b>Definition:</b> <a href="_tensor_8hpp_source.xhtml#l00274">Tensor.hpp:274</a></div></div>
<div class="ttc" id="classarmnn_onnx_parser_1_1_i_onnx_parser_xhtml_af9b9254fb8a084f0db4f7deff0498b20"><div class="ttname"><a href="classarmnn_onnx_parser_1_1_i_onnx_parser.xhtml#af9b9254fb8a084f0db4f7deff0498b20">armnnOnnxParser::IOnnxParser::Create</a></div><div class="ttdeci">static IOnnxParserPtr Create()</div><div class="ttdef"><b>Definition:</b> <a href="_onnx_parser_8cpp_source.xhtml#l00038">OnnxParser.cpp:38</a></div></div>
<div class="ttc" id="classarmnn_onnx_parser_1_1_i_onnx_parser_xhtml_a4b1fdcb1985af12dd1848a9ffa5d3271"><div class="ttname"><a href="classarmnn_onnx_parser_1_1_i_onnx_parser.xhtml#a4b1fdcb1985af12dd1848a9ffa5d3271">armnnOnnxParser::IOnnxParser::GetNetworkOutputBindingInfo</a></div><div class="ttdeci">BindingPointInfo GetNetworkOutputBindingInfo(const std::string &amp;name) const</div><div class="ttdoc">Retrieve binding info (layer id and tensor info) for the network output identified by the given layer...</div><div class="ttdef"><b>Definition:</b> <a href="_onnx_parser_8cpp_source.xhtml#l00087">OnnxParser.cpp:87</a></div></div>
<div class="ttc" id="namespacearmnn_xhtml_ace74f6f9feb95a964a49d79458232703"><div class="ttname"><a href="namespacearmnn.xhtml#ace74f6f9feb95a964a49d79458232703">armnn::INetworkPtr</a></div><div class="ttdeci">std::unique_ptr&lt; INetwork, void(*)(INetwork *network)&gt; INetworkPtr</div><div class="ttdef"><b>Definition:</b> <a href="_i_network_8hpp_source.xhtml#l00253">INetwork.hpp:253</a></div></div>
<div class="ttc" id="namespacearmnn_onnx_parser_xhtml_a9084adbf804022c874039ad40d1939e9"><div class="ttname"><a href="namespacearmnn_onnx_parser.xhtml#a9084adbf804022c874039ad40d1939e9">armnnOnnxParser::BindingPointInfo</a></div><div class="ttdeci">armnn::BindingPointInfo BindingPointInfo</div><div class="ttdef"><b>Definition:</b> <a href="_i_onnx_parser_8hpp_source.xhtml#l00017">IOnnxParser.hpp:17</a></div></div>
<div class="ttc" id="namespacearmnn_onnx_parser_xhtml_ac7dfccab29feeb5f33f1ec0183c1e123"><div class="ttname"><a href="namespacearmnn_onnx_parser.xhtml#ac7dfccab29feeb5f33f1ec0183c1e123">armnnOnnxParser::IOnnxParserPtr</a></div><div class="ttdeci">std::unique_ptr&lt; IOnnxParser, void(*)(IOnnxParser *parser)&gt; IOnnxParserPtr</div><div class="ttdef"><b>Definition:</b> <a href="_i_onnx_parser_8hpp_source.xhtml#l00021">IOnnxParser.hpp:21</a></div></div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="dir_d44c64559bbebec7f509842c48db8b23.xhtml">include</a></li><li class="navelem"><a class="el" href="dir_35b8a8e2169e1915ab55c4d59871f115.xhtml">armnnOnnxParser</a></li><li class="navelem"><a class="el" href="_i_onnx_parser_8hpp.xhtml">IOnnxParser.hpp</a></li>
    <li class="footer">Generated on Wed Nov 23 2022 10:57:36 for ArmNN by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.13 </li>
  </ul>
</div>
</body>
</html>
