<!-- Copyright (c) 2020 ARM Limited. -->
<!--                                 -->
<!-- SPDX-License-Identifier: MIT    -->
<!--                                 -->
<!-- HTML header for doxygen 1.8.13-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.13"/>
<meta name="robots" content="NOINDEX, NOFOLLOW" />
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>ArmNN: src/backends/cl/test/ClMemCopyTests.cpp Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script><script type="text/javascript" src="http://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="stylesheet.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <img alt="ArmNN" src="Arm_NN_horizontal_blue.png" style="max-width: 10rem; margin-top: .5rem; margin-left 10px"/>
  <td style="padding-left: 0.5em;">
   <div id="projectname">
   &#160;<span id="projectnumber">22.05</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.13 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
$(document).ready(function(){initNavTree('_cl_mem_copy_tests_8cpp_source.xhtml','');});
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="headertitle">
<div class="title">ClMemCopyTests.cpp</div>  </div>
</div><!--header-->
<div class="contents">
<a href="_cl_mem_copy_tests_8cpp.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="comment">//</span></div><div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="comment">// Copyright Â© 2017 Arm Ltd. All rights reserved.</span></div><div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="comment">// SPDX-License-Identifier: MIT</span></div><div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="comment">//</span></div><div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;</div><div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="preprocessor">#include &lt;<a class="code" href="include_2armnn_test_utils_2_layer_test_result_8hpp.xhtml">armnnTestUtils/LayerTestResult.hpp</a>&gt;</span></div><div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="preprocessor">#include &lt;<a class="code" href="include_2armnn_test_utils_2_mem_copy_test_impl_8hpp.xhtml">armnnTestUtils/MemCopyTestImpl.hpp</a>&gt;</span></div><div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="preprocessor">#include &lt;<a class="code" href="_mock_backend_8hpp.xhtml">armnnTestUtils/MockBackend.hpp</a>&gt;</span></div><div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="preprocessor">#include &lt;<a class="code" href="_cl_workload_factory_8hpp.xhtml">cl/ClWorkloadFactory.hpp</a>&gt;</span></div><div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="preprocessor">#include &lt;<a class="code" href="_cl_backend_8hpp.xhtml">cl/ClBackend.hpp</a>&gt;</span></div><div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;<span class="preprocessor">#include &lt;doctest/doctest.h&gt;</span></div><div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;</div><div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;<span class="keyword">namespace</span></div><div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;{</div><div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;</div><div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;<span class="keyword">template</span> &lt;&gt;</div><div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;<span class="keyword">struct </span>MemCopyTestHelper&lt;<a class="code" href="namespacearmnn.xhtml">armnn</a>::ClWorkloadFactory&gt;</div><div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;{</div><div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;    <span class="keyword">static</span> <a class="code" href="classarmnn_1_1_i_backend_internal.xhtml#a693b40e6b94e958836aeb0410ca186bd">armnn::IBackendInternal::IMemoryManagerSharedPtr</a> GetMemoryManager()</div><div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;    {</div><div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;        <a class="code" href="classarmnn_1_1_cl_backend.xhtml">armnn::ClBackend</a> backend;</div><div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;        <span class="keywordflow">return</span> backend.<a class="code" href="classarmnn_1_1_cl_backend.xhtml#a93fcb3bff141d8c77b53466a44b58eee">CreateMemoryManager</a>();</div><div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;    }</div><div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;</div><div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;    <span class="keyword">static</span> <a class="code" href="classarmnn_1_1_cl_workload_factory.xhtml">armnn::ClWorkloadFactory</a> GetFactory(</div><div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;        <span class="keyword">const</span> <a class="code" href="classarmnn_1_1_i_backend_internal.xhtml#a693b40e6b94e958836aeb0410ca186bd">armnn::IBackendInternal::IMemoryManagerSharedPtr</a>&amp; memoryManager,</div><div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;        <span class="keyword">const</span> <a class="code" href="namespacearmnn.xhtml#a5b6893cda5b69359a4244c06054da18f">armnn::ModelOptions</a>&amp; modelOptions = {})</div><div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;    {</div><div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;        <a class="code" href="classarmnn_1_1_cl_backend.xhtml">armnn::ClBackend</a> backend;</div><div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;        <span class="keywordflow">return</span> <a class="code" href="classarmnn_1_1_cl_workload_factory.xhtml">armnn::ClWorkloadFactory</a>(armnn::PolymorphicPointerDowncast&lt;armnn::ClMemoryManager&gt;(memoryManager),</div><div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;                                        backend.<a class="code" href="classarmnn_1_1_cl_backend.xhtml#a2482b4a7d5bde88e9b963be08017ce2b">CreateBackendSpecificModelContext</a>(modelOptions));</div><div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;    }</div><div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;};</div><div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;}    <span class="comment">// namespace</span></div><div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;</div><div class="line"><a name="l00036"></a><span class="lineno"><a class="line" href="_cl_mem_copy_tests_8cpp.xhtml#a4213c1993a33a34e81d4cb2fbbaa56ce">   36</a></span>&#160;<a class="code" href="_cl_mem_copy_tests_8cpp.xhtml#a4213c1993a33a34e81d4cb2fbbaa56ce">TEST_SUITE</a>(<span class="stringliteral">&quot;ClMemCopy&quot;</span>)</div><div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;{</div><div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;TEST_CASE(<span class="stringliteral">&quot;CopyBetweenCpuAndGpu&quot;</span>)</div><div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;{</div><div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;    <a class="code" href="struct_layer_test_result.xhtml">LayerTestResult&lt;float, 4&gt;</a> result =</div><div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;        MemCopyTest&lt;armnn::MockWorkloadFactory, armnn::ClWorkloadFactory, armnn::DataType::Float32&gt;(<span class="keyword">false</span>);</div><div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;    <span class="keyword">auto</span> predResult = <a class="code" href="include_2armnn_test_utils_2_tensor_helpers_8hpp.xhtml#a5fea88a1c3398e303fb83b6db155ff2d">CompareTensors</a>(result.<a class="code" href="struct_layer_test_result.xhtml#a744f7791c7f88a945817d375cd754061">m_ActualData</a>,  result.<a class="code" href="struct_layer_test_result.xhtml#afe2a527d7250fb113121b70e29c6bed5">m_ExpectedData</a>,</div><div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;                                     result.<a class="code" href="struct_layer_test_result.xhtml#a74a0abe714f3fe5b9ca7023409833fb5">m_ActualShape</a>, result.<a class="code" href="struct_layer_test_result.xhtml#acd2a9d8ba7ceee9a10e3f2826cca22c1">m_ExpectedShape</a>);</div><div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;    CHECK_MESSAGE(predResult.m_Result, predResult.m_Message.str());</div><div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;}</div><div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;</div><div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;TEST_CASE(<span class="stringliteral">&quot;CopyBetweenGpuAndCpu&quot;</span>)</div><div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;{</div><div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;    <a class="code" href="struct_layer_test_result.xhtml">LayerTestResult&lt;float, 4&gt;</a> result =</div><div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;        MemCopyTest&lt;armnn::ClWorkloadFactory, armnn::MockWorkloadFactory, armnn::DataType::Float32&gt;(<span class="keyword">false</span>);</div><div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;    <span class="keyword">auto</span> predResult = <a class="code" href="include_2armnn_test_utils_2_tensor_helpers_8hpp.xhtml#a5fea88a1c3398e303fb83b6db155ff2d">CompareTensors</a>(result.<a class="code" href="struct_layer_test_result.xhtml#a744f7791c7f88a945817d375cd754061">m_ActualData</a>,  result.<a class="code" href="struct_layer_test_result.xhtml#afe2a527d7250fb113121b70e29c6bed5">m_ExpectedData</a>,</div><div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;                                     result.<a class="code" href="struct_layer_test_result.xhtml#a74a0abe714f3fe5b9ca7023409833fb5">m_ActualShape</a>, result.<a class="code" href="struct_layer_test_result.xhtml#acd2a9d8ba7ceee9a10e3f2826cca22c1">m_ExpectedShape</a>);</div><div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;    CHECK_MESSAGE(predResult.m_Result, predResult.m_Message.str());</div><div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;}</div><div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;</div><div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;TEST_CASE(<span class="stringliteral">&quot;CopyBetweenCpuAndGpuWithSubtensors&quot;</span>)</div><div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;{</div><div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;    <a class="code" href="struct_layer_test_result.xhtml">LayerTestResult&lt;float, 4&gt;</a> result =</div><div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;        MemCopyTest&lt;armnn::MockWorkloadFactory, armnn::ClWorkloadFactory, armnn::DataType::Float32&gt;(<span class="keyword">true</span>);</div><div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;    <span class="keyword">auto</span> predResult = <a class="code" href="include_2armnn_test_utils_2_tensor_helpers_8hpp.xhtml#a5fea88a1c3398e303fb83b6db155ff2d">CompareTensors</a>(result.<a class="code" href="struct_layer_test_result.xhtml#a744f7791c7f88a945817d375cd754061">m_ActualData</a>,  result.<a class="code" href="struct_layer_test_result.xhtml#afe2a527d7250fb113121b70e29c6bed5">m_ExpectedData</a>,</div><div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;                                     result.<a class="code" href="struct_layer_test_result.xhtml#a74a0abe714f3fe5b9ca7023409833fb5">m_ActualShape</a>, result.<a class="code" href="struct_layer_test_result.xhtml#acd2a9d8ba7ceee9a10e3f2826cca22c1">m_ExpectedShape</a>);</div><div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;    CHECK_MESSAGE(predResult.m_Result, predResult.m_Message.str());</div><div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;}</div><div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;</div><div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;TEST_CASE(<span class="stringliteral">&quot;CopyBetweenGpuAndCpuWithSubtensors&quot;</span>)</div><div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;{</div><div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;    <a class="code" href="struct_layer_test_result.xhtml">LayerTestResult&lt;float, 4&gt;</a> result =</div><div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;        MemCopyTest&lt;armnn::ClWorkloadFactory, armnn::MockWorkloadFactory, armnn::DataType::Float32&gt;(<span class="keyword">true</span>);</div><div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;    <span class="keyword">auto</span> predResult = <a class="code" href="include_2armnn_test_utils_2_tensor_helpers_8hpp.xhtml#a5fea88a1c3398e303fb83b6db155ff2d">CompareTensors</a>(result.<a class="code" href="struct_layer_test_result.xhtml#a744f7791c7f88a945817d375cd754061">m_ActualData</a>,  result.<a class="code" href="struct_layer_test_result.xhtml#afe2a527d7250fb113121b70e29c6bed5">m_ExpectedData</a>,</div><div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;                                     result.<a class="code" href="struct_layer_test_result.xhtml#a74a0abe714f3fe5b9ca7023409833fb5">m_ActualShape</a>, result.<a class="code" href="struct_layer_test_result.xhtml#acd2a9d8ba7ceee9a10e3f2826cca22c1">m_ExpectedShape</a>);</div><div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;    CHECK_MESSAGE(predResult.m_Result, predResult.m_Message.str());</div><div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;}</div><div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;</div><div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;}</div><div class="ttc" id="classarmnn_1_1_cl_workload_factory_xhtml"><div class="ttname"><a href="classarmnn_1_1_cl_workload_factory.xhtml">armnn::ClWorkloadFactory</a></div><div class="ttdef"><b>Definition:</b> <a href="_cl_workload_factory_8hpp_source.xhtml#l00021">ClWorkloadFactory.hpp:21</a></div></div>
<div class="ttc" id="struct_layer_test_result_xhtml_acd2a9d8ba7ceee9a10e3f2826cca22c1"><div class="ttname"><a href="struct_layer_test_result.xhtml#acd2a9d8ba7ceee9a10e3f2826cca22c1">LayerTestResult::m_ExpectedShape</a></div><div class="ttdeci">armnn::TensorShape m_ExpectedShape</div><div class="ttdef"><b>Definition:</b> <a href="include_2armnn_test_utils_2_layer_test_result_8hpp_source.xhtml#l00055">LayerTestResult.hpp:55</a></div></div>
<div class="ttc" id="include_2armnn_test_utils_2_layer_test_result_8hpp_xhtml"><div class="ttname"><a href="include_2armnn_test_utils_2_layer_test_result_8hpp.xhtml">LayerTestResult.hpp</a></div></div>
<div class="ttc" id="namespacearmnn_xhtml_a5b6893cda5b69359a4244c06054da18f"><div class="ttname"><a href="namespacearmnn.xhtml#a5b6893cda5b69359a4244c06054da18f">armnn::ModelOptions</a></div><div class="ttdeci">std::vector&lt; BackendOptions &gt; ModelOptions</div><div class="ttdef"><b>Definition:</b> <a href="_backend_options_8hpp_source.xhtml#l00018">BackendOptions.hpp:18</a></div></div>
<div class="ttc" id="_mock_backend_8hpp_xhtml"><div class="ttname"><a href="_mock_backend_8hpp.xhtml">MockBackend.hpp</a></div></div>
<div class="ttc" id="_cl_workload_factory_8hpp_xhtml"><div class="ttname"><a href="_cl_workload_factory_8hpp.xhtml">ClWorkloadFactory.hpp</a></div></div>
<div class="ttc" id="namespacearmnn_xhtml"><div class="ttname"><a href="namespacearmnn.xhtml">armnn</a></div><div class="ttdoc">Copyright (c) 2021 ARM Limited and Contributors. </div><div class="ttdef"><b>Definition:</b> <a href="01__00__quick__start_8dox_source.xhtml#l00006">01_00_quick_start.dox:6</a></div></div>
<div class="ttc" id="classarmnn_1_1_cl_backend_xhtml_a93fcb3bff141d8c77b53466a44b58eee"><div class="ttname"><a href="classarmnn_1_1_cl_backend.xhtml#a93fcb3bff141d8c77b53466a44b58eee">armnn::ClBackend::CreateMemoryManager</a></div><div class="ttdeci">IBackendInternal::IMemoryManagerUniquePtr CreateMemoryManager() const override</div><div class="ttdef"><b>Definition:</b> <a href="_cl_backend_8cpp_source.xhtml#l00051">ClBackend.cpp:51</a></div></div>
<div class="ttc" id="_cl_backend_8hpp_xhtml"><div class="ttname"><a href="_cl_backend_8hpp.xhtml">ClBackend.hpp</a></div></div>
<div class="ttc" id="classarmnn_1_1_cl_backend_xhtml_a2482b4a7d5bde88e9b963be08017ce2b"><div class="ttname"><a href="classarmnn_1_1_cl_backend.xhtml#a2482b4a7d5bde88e9b963be08017ce2b">armnn::ClBackend::CreateBackendSpecificModelContext</a></div><div class="ttdeci">IBackendInternal::IBackendSpecificModelContextPtr CreateBackendSpecificModelContext(const ModelOptions &amp;modelOptions) const override</div><div class="ttdef"><b>Definition:</b> <a href="_cl_backend_8cpp_source.xhtml#l00247">ClBackend.cpp:247</a></div></div>
<div class="ttc" id="classarmnn_1_1_i_backend_internal_xhtml_a693b40e6b94e958836aeb0410ca186bd"><div class="ttname"><a href="classarmnn_1_1_i_backend_internal.xhtml#a693b40e6b94e958836aeb0410ca186bd">armnn::IBackendInternal::IMemoryManagerSharedPtr</a></div><div class="ttdeci">std::shared_ptr&lt; IMemoryManager &gt; IMemoryManagerSharedPtr</div><div class="ttdef"><b>Definition:</b> <a href="_i_backend_internal_8hpp_source.xhtml#l00097">IBackendInternal.hpp:97</a></div></div>
<div class="ttc" id="struct_layer_test_result_xhtml_afe2a527d7250fb113121b70e29c6bed5"><div class="ttname"><a href="struct_layer_test_result.xhtml#afe2a527d7250fb113121b70e29c6bed5">LayerTestResult::m_ExpectedData</a></div><div class="ttdeci">std::vector&lt; T &gt; m_ExpectedData</div><div class="ttdef"><b>Definition:</b> <a href="include_2armnn_test_utils_2_layer_test_result_8hpp_source.xhtml#l00053">LayerTestResult.hpp:53</a></div></div>
<div class="ttc" id="include_2armnn_test_utils_2_tensor_helpers_8hpp_xhtml_a5fea88a1c3398e303fb83b6db155ff2d"><div class="ttname"><a href="include_2armnn_test_utils_2_tensor_helpers_8hpp.xhtml#a5fea88a1c3398e303fb83b6db155ff2d">CompareTensors</a></div><div class="ttdeci">armnn::PredicateResult CompareTensors(const std::vector&lt; T &gt; &amp;actualData, const std::vector&lt; T &gt; &amp;expectedData, const armnn::TensorShape &amp;actualShape, const armnn::TensorShape &amp;expectedShape, bool compareBoolean=false, bool isDynamic=false)</div><div class="ttdef"><b>Definition:</b> <a href="include_2armnn_test_utils_2_tensor_helpers_8hpp_source.xhtml#l00073">TensorHelpers.hpp:73</a></div></div>
<div class="ttc" id="_cl_mem_copy_tests_8cpp_xhtml_a4213c1993a33a34e81d4cb2fbbaa56ce"><div class="ttname"><a href="_cl_mem_copy_tests_8cpp.xhtml#a4213c1993a33a34e81d4cb2fbbaa56ce">TEST_SUITE</a></div><div class="ttdeci">TEST_SUITE(&quot;ClMemCopy&quot;)</div><div class="ttdef"><b>Definition:</b> <a href="_cl_mem_copy_tests_8cpp_source.xhtml#l00036">ClMemCopyTests.cpp:36</a></div></div>
<div class="ttc" id="classarmnn_1_1_cl_backend_xhtml"><div class="ttname"><a href="classarmnn_1_1_cl_backend.xhtml">armnn::ClBackend</a></div><div class="ttdef"><b>Definition:</b> <a href="_cl_backend_8hpp_source.xhtml#l00037">ClBackend.hpp:37</a></div></div>
<div class="ttc" id="struct_layer_test_result_xhtml_a744f7791c7f88a945817d375cd754061"><div class="ttname"><a href="struct_layer_test_result.xhtml#a744f7791c7f88a945817d375cd754061">LayerTestResult::m_ActualData</a></div><div class="ttdeci">std::vector&lt; T &gt; m_ActualData</div><div class="ttdef"><b>Definition:</b> <a href="include_2armnn_test_utils_2_layer_test_result_8hpp_source.xhtml#l00052">LayerTestResult.hpp:52</a></div></div>
<div class="ttc" id="struct_layer_test_result_xhtml_a74a0abe714f3fe5b9ca7023409833fb5"><div class="ttname"><a href="struct_layer_test_result.xhtml#a74a0abe714f3fe5b9ca7023409833fb5">LayerTestResult::m_ActualShape</a></div><div class="ttdeci">armnn::TensorShape m_ActualShape</div><div class="ttdef"><b>Definition:</b> <a href="include_2armnn_test_utils_2_layer_test_result_8hpp_source.xhtml#l00054">LayerTestResult.hpp:54</a></div></div>
<div class="ttc" id="struct_layer_test_result_xhtml"><div class="ttname"><a href="struct_layer_test_result.xhtml">LayerTestResult</a></div><div class="ttdef"><b>Definition:</b> <a href="include_2armnn_test_utils_2_layer_test_result_8hpp_source.xhtml#l00015">LayerTestResult.hpp:15</a></div></div>
<div class="ttc" id="include_2armnn_test_utils_2_mem_copy_test_impl_8hpp_xhtml"><div class="ttname"><a href="include_2armnn_test_utils_2_mem_copy_test_impl_8hpp.xhtml">MemCopyTestImpl.hpp</a></div></div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="dir_68267d1309a1af8e8297ef4c3efbcdba.xhtml">src</a></li><li class="navelem"><a class="el" href="dir_0f3cdec46afbc61a1ded8e1687c9c9a0.xhtml">backends</a></li><li class="navelem"><a class="el" href="dir_1ad86c6d39ab715a831555571b9e98a5.xhtml">cl</a></li><li class="navelem"><a class="el" href="dir_02bab2737bbb2fb3882a0be567244fbf.xhtml">test</a></li><li class="navelem"><a class="el" href="_cl_mem_copy_tests_8cpp.xhtml">ClMemCopyTests.cpp</a></li>
    <li class="footer">Generated on Tue May 24 2022 11:27:13 for ArmNN by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.13 </li>
  </ul>
</div>
</body>
</html>
