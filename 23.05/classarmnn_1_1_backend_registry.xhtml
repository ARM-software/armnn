<!-- Copyright (c) 2020 ARM Limited. -->
<!--                                 -->
<!-- SPDX-License-Identifier: MIT    -->
<!--                                 -->
<!-- HTML header for doxygen 1.8.13-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.17"/>
<meta name="robots" content="NOINDEX, NOFOLLOW" />
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>ArmNN: BackendRegistry Class Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script>
<script type="text/javascript" async="async" src="http://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="stylesheet.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <img alt="ArmNN" src="Arm_NN_horizontal_blue.png" style="max-width: 10rem; margin-top: .5rem; margin-left 10px"/>
  <td style="padding-left: 0.5em;">
   <div id="projectname">
   &#160;<span id="projectnumber">23.05</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.17 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "search",false,'Search');
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(document).ready(function(){initNavTree('classarmnn_1_1_backend_registry.xhtml',''); initResizable(); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="summary">
<a href="#nested-classes">Classes</a> &#124;
<a href="#pub-types">Public Types</a> &#124;
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="#pro-types">Protected Types</a> &#124;
<a href="#pro-static-methods">Static Protected Member Functions</a> &#124;
<a href="classarmnn_1_1_backend_registry-members.xhtml">List of all members</a>  </div>
  <div class="headertitle">
<div class="title">BackendRegistry Class Reference</div>  </div>
</div><!--header-->
<div class="contents">

<p><code>#include &lt;<a class="el" href="_backend_registry_8hpp_source.xhtml">BackendRegistry.hpp</a>&gt;</code></p>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="nested-classes"></a>
Classes</h2></td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structarmnn_1_1_backend_registry_1_1_static_registry_initializer.xhtml">StaticRegistryInitializer</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-types"></a>
Public Types</h2></td></tr>
<tr class="memitem:adca0bb66bf529263ce4ff10875d70f34"><td class="memItemLeft" align="right" valign="top">using&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_backend_registry.xhtml#adca0bb66bf529263ce4ff10875d70f34">PointerType</a> = <a class="el" href="namespacearmnn.xhtml#ade0af9dacaa52cafdd701bef2e901c77">IBackendInternalUniquePtr</a></td></tr>
<tr class="separator:adca0bb66bf529263ce4ff10875d70f34"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa33ac375677ee8436456a585dd6f68d9"><td class="memItemLeft" align="right" valign="top">using&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_backend_registry.xhtml#aa33ac375677ee8436456a585dd6f68d9">FactoryFunction</a> = std::function&lt; <a class="el" href="classarmnn_1_1_backend_registry.xhtml#adca0bb66bf529263ce4ff10875d70f34">PointerType</a>()&gt;</td></tr>
<tr class="separator:aa33ac375677ee8436456a585dd6f68d9"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:a0318ffa738b798986c4347ea9fe5ab37"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_backend_registry.xhtml#a0318ffa738b798986c4347ea9fe5ab37">Register</a> (const <a class="el" href="classarmnn_1_1_backend_id.xhtml">BackendId</a> &amp;id, <a class="el" href="classarmnn_1_1_backend_registry.xhtml#aa33ac375677ee8436456a585dd6f68d9">FactoryFunction</a> factory)</td></tr>
<tr class="separator:a0318ffa738b798986c4347ea9fe5ab37"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a34fad4b6d0db8ebfad2f9178f0a90816"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_backend_registry.xhtml#a34fad4b6d0db8ebfad2f9178f0a90816">IsBackendRegistered</a> (const <a class="el" href="classarmnn_1_1_backend_id.xhtml">BackendId</a> &amp;id) const</td></tr>
<tr class="separator:a34fad4b6d0db8ebfad2f9178f0a90816"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:afc0c63ca8db8957b58826f6d7bd231b2"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classarmnn_1_1_backend_registry.xhtml#aa33ac375677ee8436456a585dd6f68d9">FactoryFunction</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_backend_registry.xhtml#afc0c63ca8db8957b58826f6d7bd231b2">GetFactory</a> (const <a class="el" href="classarmnn_1_1_backend_id.xhtml">BackendId</a> &amp;id) const</td></tr>
<tr class="separator:afc0c63ca8db8957b58826f6d7bd231b2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a58f4b9e873b7c1c7d512bd9f7d1489d8"><td class="memItemLeft" align="right" valign="top">size_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_backend_registry.xhtml#a58f4b9e873b7c1c7d512bd9f7d1489d8">Size</a> () const</td></tr>
<tr class="separator:a58f4b9e873b7c1c7d512bd9f7d1489d8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a570cb1835ec73000a7954ba75257904f"><td class="memItemLeft" align="right" valign="top"><a class="el" href="namespacearmnn.xhtml#a1854d9cda81304325664363c1fd0fb27">BackendIdSet</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_backend_registry.xhtml#a570cb1835ec73000a7954ba75257904f">GetBackendIds</a> () const</td></tr>
<tr class="separator:a570cb1835ec73000a7954ba75257904f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae1de2f7ca1db17f45f97155e239b8b45"><td class="memItemLeft" align="right" valign="top">std::string&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_backend_registry.xhtml#ae1de2f7ca1db17f45f97155e239b8b45">GetBackendIdsAsString</a> () const</td></tr>
<tr class="separator:ae1de2f7ca1db17f45f97155e239b8b45"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a56879f6e669f40cdd980b54bd458e17c"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_backend_registry.xhtml#a56879f6e669f40cdd980b54bd458e17c">SetProfilingService</a> (<a class="el" href="classarmnn_1_1_optional.xhtml">armnn::Optional</a>&lt; arm::pipe::IProfilingService &amp; &gt; profilingService)</td></tr>
<tr class="separator:a56879f6e669f40cdd980b54bd458e17c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a89e24dab4e47d8080ce0665f737a00e6"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_backend_registry.xhtml#a89e24dab4e47d8080ce0665f737a00e6">RegisterAllocator</a> (const <a class="el" href="classarmnn_1_1_backend_id.xhtml">BackendId</a> &amp;id, std::shared_ptr&lt; <a class="el" href="classarmnn_1_1_i_custom_allocator.xhtml">ICustomAllocator</a> &gt; alloc)</td></tr>
<tr class="separator:a89e24dab4e47d8080ce0665f737a00e6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6dea5df9078a3e9b44176175043237f6"><td class="memItemLeft" align="right" valign="top">std::unordered_map&lt; <a class="el" href="classarmnn_1_1_backend_id.xhtml">BackendId</a>, std::shared_ptr&lt; <a class="el" href="classarmnn_1_1_i_custom_allocator.xhtml">ICustomAllocator</a> &gt; &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_backend_registry.xhtml#a6dea5df9078a3e9b44176175043237f6">GetAllocators</a> ()</td></tr>
<tr class="separator:a6dea5df9078a3e9b44176175043237f6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad02fbefe5c0f3ec53059dd630f1d5117"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_backend_registry.xhtml#ad02fbefe5c0f3ec53059dd630f1d5117">RegisterMemoryOptimizerStrategy</a> (const <a class="el" href="classarmnn_1_1_backend_id.xhtml">BackendId</a> &amp;id, std::shared_ptr&lt; <a class="el" href="classarmnn_1_1_i_memory_optimizer_strategy.xhtml">IMemoryOptimizerStrategy</a> &gt; strategy)</td></tr>
<tr class="separator:ad02fbefe5c0f3ec53059dd630f1d5117"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8a7a14a6f1f1078e1b9d31c60d09e007"><td class="memItemLeft" align="right" valign="top"><a class="el" href="namespacearmnn.xhtml#abb25db39e8d7f30b3736701b65ce514b">MemoryOptimizerStrategiesMapRef</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_backend_registry.xhtml#a8a7a14a6f1f1078e1b9d31c60d09e007">GetMemoryOptimizerStrategies</a> ()</td></tr>
<tr class="separator:a8a7a14a6f1f1078e1b9d31c60d09e007"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a08cbb268cb7650ae38520297ed1501ba"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_backend_registry.xhtml#a08cbb268cb7650ae38520297ed1501ba">BackendRegistry</a> ()</td></tr>
<tr class="separator:a08cbb268cb7650ae38520297ed1501ba"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8786f3428c374a1f2b08cabde9ffa687"><td class="memItemLeft" align="right" valign="top">virtual&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_backend_registry.xhtml#a8786f3428c374a1f2b08cabde9ffa687">~BackendRegistry</a> ()</td></tr>
<tr class="separator:a8786f3428c374a1f2b08cabde9ffa687"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a41895cd60f4b1bfd0b88571a8773ff1c"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_backend_registry.xhtml#a41895cd60f4b1bfd0b88571a8773ff1c">Deregister</a> (const <a class="el" href="classarmnn_1_1_backend_id.xhtml">BackendId</a> &amp;id)</td></tr>
<tr class="separator:a41895cd60f4b1bfd0b88571a8773ff1c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af0cb2a0745525e13eb5bb10a1064ff52"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_backend_registry.xhtml#af0cb2a0745525e13eb5bb10a1064ff52">DeregisterAllocator</a> (const <a class="el" href="classarmnn_1_1_backend_id.xhtml">BackendId</a> &amp;id)</td></tr>
<tr class="separator:af0cb2a0745525e13eb5bb10a1064ff52"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a111c0290eef45eab28155c3b9bd84788"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_backend_registry.xhtml#a111c0290eef45eab28155c3b9bd84788">DeregisterMemoryOptimizerStrategy</a> (const <a class="el" href="classarmnn_1_1_backend_id.xhtml">BackendId</a> &amp;id)</td></tr>
<tr class="separator:a111c0290eef45eab28155c3b9bd84788"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pro-types"></a>
Protected Types</h2></td></tr>
<tr class="memitem:a20fb10b59fccc99291e7fe993cd814bb"><td class="memItemLeft" align="right" valign="top">using&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_backend_registry.xhtml#a20fb10b59fccc99291e7fe993cd814bb">FactoryStorage</a> = std::unordered_map&lt; <a class="el" href="classarmnn_1_1_backend_id.xhtml">BackendId</a>, <a class="el" href="classarmnn_1_1_backend_registry.xhtml#aa33ac375677ee8436456a585dd6f68d9">FactoryFunction</a> &gt;</td></tr>
<tr class="separator:a20fb10b59fccc99291e7fe993cd814bb"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pro-static-methods"></a>
Static Protected Member Functions</h2></td></tr>
<tr class="memitem:a55a68d31e716a63a8b38998649a07b3c"><td class="memItemLeft" align="right" valign="top">static void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarmnn_1_1_backend_registry.xhtml#a55a68d31e716a63a8b38998649a07b3c">Swap</a> (<a class="el" href="classarmnn_1_1_backend_registry.xhtml">BackendRegistry</a> &amp;instance, <a class="el" href="classarmnn_1_1_backend_registry.xhtml#a20fb10b59fccc99291e7fe993cd814bb">FactoryStorage</a> &amp;other)</td></tr>
<tr class="memdesc:a55a68d31e716a63a8b38998649a07b3c"><td class="mdescLeft">&#160;</td><td class="mdescRight">For testing only.  <a href="classarmnn_1_1_backend_registry.xhtml#a55a68d31e716a63a8b38998649a07b3c">More...</a><br /></td></tr>
<tr class="separator:a55a68d31e716a63a8b38998649a07b3c"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock">
<p class="definition">Definition at line <a class="el" href="_backend_registry_8hpp_source.xhtml#l00035">35</a> of file <a class="el" href="_backend_registry_8hpp_source.xhtml">BackendRegistry.hpp</a>.</p>
</div><h2 class="groupheader">Member Typedef Documentation</h2>
<a id="aa33ac375677ee8436456a585dd6f68d9"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aa33ac375677ee8436456a585dd6f68d9">&#9670;&nbsp;</a></span>FactoryFunction</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">using <a class="el" href="classarmnn_1_1_backend_registry.xhtml#aa33ac375677ee8436456a585dd6f68d9">FactoryFunction</a> =  std::function&lt;<a class="el" href="classarmnn_1_1_backend_registry.xhtml#adca0bb66bf529263ce4ff10875d70f34">PointerType</a>()&gt;</td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_backend_registry_8hpp_source.xhtml#l00039">39</a> of file <a class="el" href="_backend_registry_8hpp_source.xhtml">BackendRegistry.hpp</a>.</p>

</div>
</div>
<a id="a20fb10b59fccc99291e7fe993cd814bb"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a20fb10b59fccc99291e7fe993cd814bb">&#9670;&nbsp;</a></span>FactoryStorage</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">using <a class="el" href="classarmnn_1_1_backend_registry.xhtml#a20fb10b59fccc99291e7fe993cd814bb">FactoryStorage</a> =  std::unordered_map&lt;<a class="el" href="classarmnn_1_1_backend_id.xhtml">BackendId</a>, <a class="el" href="classarmnn_1_1_backend_registry.xhtml#aa33ac375677ee8436456a585dd6f68d9">FactoryFunction</a>&gt;</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_backend_registry_8hpp_source.xhtml#l00071">71</a> of file <a class="el" href="_backend_registry_8hpp_source.xhtml">BackendRegistry.hpp</a>.</p>

</div>
</div>
<a id="adca0bb66bf529263ce4ff10875d70f34"></a>
<h2 class="memtitle"><span class="permalink"><a href="#adca0bb66bf529263ce4ff10875d70f34">&#9670;&nbsp;</a></span>PointerType</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">using <a class="el" href="classarmnn_1_1_backend_registry.xhtml#adca0bb66bf529263ce4ff10875d70f34">PointerType</a> =  <a class="el" href="namespacearmnn.xhtml#ade0af9dacaa52cafdd701bef2e901c77">IBackendInternalUniquePtr</a></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_backend_registry_8hpp_source.xhtml#l00038">38</a> of file <a class="el" href="_backend_registry_8hpp_source.xhtml">BackendRegistry.hpp</a>.</p>

</div>
</div>
<h2 class="groupheader">Constructor &amp; Destructor Documentation</h2>
<a id="a08cbb268cb7650ae38520297ed1501ba"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a08cbb268cb7650ae38520297ed1501ba">&#9670;&nbsp;</a></span>BackendRegistry()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarmnn_1_1_backend_registry.xhtml">BackendRegistry</a> </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_backend_registry_8hpp_source.xhtml#l00053">53</a> of file <a class="el" href="_backend_registry_8hpp_source.xhtml">BackendRegistry.hpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;{}</div>
</div><!-- fragment -->
</div>
</div>
<a id="a8786f3428c374a1f2b08cabde9ffa687"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a8786f3428c374a1f2b08cabde9ffa687">&#9670;&nbsp;</a></span>~BackendRegistry()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual ~<a class="el" href="classarmnn_1_1_backend_registry.xhtml">BackendRegistry</a> </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_backend_registry_8hpp_source.xhtml#l00054">54</a> of file <a class="el" href="_backend_registry_8hpp_source.xhtml">BackendRegistry.hpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;{}</div>
</div><!-- fragment -->
</div>
</div>
<h2 class="groupheader">Member Function Documentation</h2>
<a id="a41895cd60f4b1bfd0b88571a8773ff1c"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a41895cd60f4b1bfd0b88571a8773ff1c">&#9670;&nbsp;</a></span>Deregister()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void Deregister </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_backend_id.xhtml">BackendId</a> &amp;&#160;</td>
          <td class="paramname"><em>id</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_backend_registry_8cpp_source.xhtml#l00041">41</a> of file <a class="el" href="_backend_registry_8cpp_source.xhtml">BackendRegistry.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;{</div>
<div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;    m_Factories.erase(<span class="keywordtype">id</span>);</div>
<div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;    <a class="code" href="classarmnn_1_1_backend_registry.xhtml#af0cb2a0745525e13eb5bb10a1064ff52">DeregisterAllocator</a>(<span class="keywordtype">id</span>);</div>
<div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160; </div>
<div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;    <span class="keywordflow">if</span> (m_ProfilingService.<a class="code" href="classarmnn_1_1_optional_base.xhtml#a86b749ce2c4bc627fa8a1fcfaf0e314f">has_value</a>() &amp;&amp; m_ProfilingService.<a class="code" href="classarmnn_1_1_optional_reference_switch.xhtml#a77c7d528ac063d870b8c8426ec81c1c3">value</a>().IsProfilingEnabled())</div>
<div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;    {</div>
<div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;        m_ProfilingService.<a class="code" href="classarmnn_1_1_optional_reference_switch.xhtml#a77c7d528ac063d870b8c8426ec81c1c3">value</a>().IncrementCounterValue(arm::pipe::UNREGISTERED_BACKENDS);</div>
<div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;    }</div>
<div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;}</div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="_backend_registry_8cpp_source.xhtml#l00123">BackendRegistry::DeregisterAllocator()</a>, <a class="el" href="_optional_8hpp_source.xhtml#l00053">OptionalBase::has_value()</a>, and <a class="el" href="_optional_8hpp_source.xhtml#l00146">OptionalReferenceSwitch&lt; IsReference, T &gt;::value()</a>.</p>

<p class="reference">Referenced by <a class="el" href="_dynamic_backend_utils_8cpp_source.xhtml#l00320">DynamicBackendUtils::DeregisterDynamicBackends()</a>.</p>

</div>
</div>
<a id="af0cb2a0745525e13eb5bb10a1064ff52"></a>
<h2 class="memtitle"><span class="permalink"><a href="#af0cb2a0745525e13eb5bb10a1064ff52">&#9670;&nbsp;</a></span>DeregisterAllocator()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void DeregisterAllocator </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_backend_id.xhtml">BackendId</a> &amp;&#160;</td>
          <td class="paramname"><em>id</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_backend_registry_8cpp_source.xhtml#l00123">123</a> of file <a class="el" href="_backend_registry_8cpp_source.xhtml">BackendRegistry.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;{</div>
<div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;    m_CustomMemoryAllocatorMap.erase(<span class="keywordtype">id</span>);</div>
<div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;}</div>
</div><!-- fragment -->
<p class="reference">Referenced by <a class="el" href="_backend_registry_8cpp_source.xhtml#l00041">BackendRegistry::Deregister()</a>.</p>

</div>
</div>
<a id="a111c0290eef45eab28155c3b9bd84788"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a111c0290eef45eab28155c3b9bd84788">&#9670;&nbsp;</a></span>DeregisterMemoryOptimizerStrategy()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void DeregisterMemoryOptimizerStrategy </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_backend_id.xhtml">BackendId</a> &amp;&#160;</td>
          <td class="paramname"><em>id</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_backend_registry_8cpp_source.xhtml#l00145">145</a> of file <a class="el" href="_backend_registry_8cpp_source.xhtml">BackendRegistry.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;{</div>
<div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;    m_MemoryOptimizerStrategyMap.erase(<span class="keywordtype">id</span>);</div>
<div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;}</div>
</div><!-- fragment -->
</div>
</div>
<a id="a6dea5df9078a3e9b44176175043237f6"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a6dea5df9078a3e9b44176175043237f6">&#9670;&nbsp;</a></span>GetAllocators()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">std::unordered_map&lt; <a class="el" href="classarmnn_1_1_backend_id.xhtml">BackendId</a>, std::shared_ptr&lt; <a class="el" href="classarmnn_1_1_i_custom_allocator.xhtml">ICustomAllocator</a> &gt; &gt; GetAllocators </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_backend_registry_8cpp_source.xhtml#l00128">128</a> of file <a class="el" href="_backend_registry_8cpp_source.xhtml">BackendRegistry.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;{</div>
<div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;    <span class="keywordflow">return</span> m_CustomMemoryAllocatorMap;</div>
<div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;}</div>
</div><!-- fragment -->
</div>
</div>
<a id="a570cb1835ec73000a7954ba75257904f"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a570cb1835ec73000a7954ba75257904f">&#9670;&nbsp;</a></span>GetBackendIds()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="namespacearmnn.xhtml#a1854d9cda81304325664363c1fd0fb27">BackendIdSet</a> GetBackendIds </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_backend_registry_8cpp_source.xhtml#l00075">75</a> of file <a class="el" href="_backend_registry_8cpp_source.xhtml">BackendRegistry.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;{</div>
<div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;    <a class="code" href="namespacearmnn.xhtml#a1854d9cda81304325664363c1fd0fb27">BackendIdSet</a> result;</div>
<div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;    <span class="keywordflow">for</span> (<span class="keyword">const</span> <span class="keyword">auto</span>&amp; it : m_Factories)</div>
<div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;    {</div>
<div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;        result.insert(it.first);</div>
<div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;    }</div>
<div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;    <span class="keywordflow">return</span> result;</div>
<div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;}</div>
</div><!-- fragment -->
<p class="reference">Referenced by <a class="el" href="_backend_registry_8cpp_source.xhtml#l00085">BackendRegistry::GetBackendIdsAsString()</a>.</p>

</div>
</div>
<a id="ae1de2f7ca1db17f45f97155e239b8b45"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ae1de2f7ca1db17f45f97155e239b8b45">&#9670;&nbsp;</a></span>GetBackendIdsAsString()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">std::string GetBackendIdsAsString </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_backend_registry_8cpp_source.xhtml#l00085">85</a> of file <a class="el" href="_backend_registry_8cpp_source.xhtml">BackendRegistry.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;{</div>
<div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;    <span class="keyword">static</span> <span class="keyword">const</span> std::string delimitator = <span class="stringliteral">&quot;, &quot;</span>;</div>
<div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160; </div>
<div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;    std::stringstream output;</div>
<div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;    <span class="keywordflow">for</span> (<span class="keyword">auto</span>&amp; backendId : <a class="code" href="classarmnn_1_1_backend_registry.xhtml#a570cb1835ec73000a7954ba75257904f">GetBackendIds</a>())</div>
<div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;    {</div>
<div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;        <span class="keywordflow">if</span> (output.tellp() != std::streampos(0))</div>
<div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;        {</div>
<div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;            output &lt;&lt; delimitator;</div>
<div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;        }</div>
<div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;        output &lt;&lt; backendId;</div>
<div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;    }</div>
<div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160; </div>
<div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;    <span class="keywordflow">return</span> output.str();</div>
<div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;}</div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="_backend_registry_8cpp_source.xhtml#l00075">BackendRegistry::GetBackendIds()</a>.</p>

</div>
</div>
<a id="afc0c63ca8db8957b58826f6d7bd231b2"></a>
<h2 class="memtitle"><span class="permalink"><a href="#afc0c63ca8db8957b58826f6d7bd231b2">&#9670;&nbsp;</a></span>GetFactory()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarmnn_1_1_backend_registry.xhtml#aa33ac375677ee8436456a585dd6f68d9">BackendRegistry::FactoryFunction</a> GetFactory </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_backend_id.xhtml">BackendId</a> &amp;&#160;</td>
          <td class="paramname"><em>id</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_backend_registry_8cpp_source.xhtml#l00057">57</a> of file <a class="el" href="_backend_registry_8cpp_source.xhtml">BackendRegistry.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;{</div>
<div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;    <span class="keyword">auto</span> it = m_Factories.find(<span class="keywordtype">id</span>);</div>
<div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;    <span class="keywordflow">if</span> (it == m_Factories.end())</div>
<div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;    {</div>
<div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;        <span class="keywordflow">throw</span> InvalidArgumentException(</div>
<div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;            std::string(<span class="keywordtype">id</span>) + <span class="stringliteral">&quot; has no IBackend factory registered&quot;</span>,</div>
<div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;            <a class="code" href="_exceptions_8hpp.xhtml#aa3be76aec4ce713822a5ea1ecbb7bc61">CHECK_LOCATION</a>());</div>
<div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;    }</div>
<div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160; </div>
<div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;    <span class="keywordflow">return</span> it-&gt;second;</div>
<div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;}</div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="_exceptions_8hpp_source.xhtml#l00203">CHECK_LOCATION</a>.</p>

<p class="reference">Referenced by <a class="el" href="_backend_helper_8cpp_source.xhtml#l00023">armnn::GetILayerSupportByBackendId()</a>, and <a class="el" href="_runtime_8cpp_source.xhtml#l00323">RuntimeImpl::RuntimeImpl()</a>.</p>

</div>
</div>
<a id="a8a7a14a6f1f1078e1b9d31c60d09e007"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a8a7a14a6f1f1078e1b9d31c60d09e007">&#9670;&nbsp;</a></span>GetMemoryOptimizerStrategies()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="namespacearmnn.xhtml#abb25db39e8d7f30b3736701b65ce514b">MemoryOptimizerStrategiesMapRef</a> GetMemoryOptimizerStrategies </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_backend_registry_8cpp_source.xhtml#l00150">150</a> of file <a class="el" href="_backend_registry_8cpp_source.xhtml">BackendRegistry.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;{</div>
<div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;    <span class="keywordflow">return</span> m_MemoryOptimizerStrategyMap;</div>
<div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;}</div>
</div><!-- fragment -->
</div>
</div>
<a id="a34fad4b6d0db8ebfad2f9178f0a90816"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a34fad4b6d0db8ebfad2f9178f0a90816">&#9670;&nbsp;</a></span>IsBackendRegistered()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool IsBackendRegistered </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_backend_id.xhtml">BackendId</a> &amp;&#160;</td>
          <td class="paramname"><em>id</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_backend_registry_8cpp_source.xhtml#l00052">52</a> of file <a class="el" href="_backend_registry_8cpp_source.xhtml">BackendRegistry.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;{</div>
<div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;    <span class="keywordflow">return</span> (m_Factories.find(<span class="keywordtype">id</span>) != m_Factories.end());</div>
<div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;}</div>
</div><!-- fragment -->
<p class="reference">Referenced by <a class="el" href="_backend_helper_8cpp_source.xhtml#l00023">armnn::GetILayerSupportByBackendId()</a>, and <a class="el" href="_dynamic_backend_utils_8cpp_source.xhtml#l00341">DynamicBackendUtils::RegisterDynamicBackendsImpl()</a>.</p>

</div>
</div>
<a id="a0318ffa738b798986c4347ea9fe5ab37"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a0318ffa738b798986c4347ea9fe5ab37">&#9670;&nbsp;</a></span>Register()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void Register </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_backend_id.xhtml">BackendId</a> &amp;&#160;</td>
          <td class="paramname"><em>id</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="classarmnn_1_1_backend_registry.xhtml#aa33ac375677ee8436456a585dd6f68d9">BackendRegistry::FactoryFunction</a>&#160;</td>
          <td class="paramname"><em>factory</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_backend_registry_8cpp_source.xhtml#l00021">21</a> of file <a class="el" href="_backend_registry_8cpp_source.xhtml">BackendRegistry.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;{</div>
<div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;    <span class="keywordflow">if</span> (m_Factories.find(<span class="keywordtype">id</span>) != m_Factories.end())</div>
<div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;    {</div>
<div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;        <span class="keywordflow">throw</span> InvalidArgumentException(</div>
<div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;            std::string(<span class="keywordtype">id</span>) + <span class="stringliteral">&quot; already registered as IBackend factory&quot;</span>,</div>
<div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;            <a class="code" href="_exceptions_8hpp.xhtml#aa3be76aec4ce713822a5ea1ecbb7bc61">CHECK_LOCATION</a>());</div>
<div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;    }</div>
<div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;    m_Factories[id] = factory;</div>
<div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160; </div>
<div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;    <span class="keywordflow">if</span> (m_ProfilingService.<a class="code" href="classarmnn_1_1_optional_base.xhtml#a86b749ce2c4bc627fa8a1fcfaf0e314f">has_value</a>())</div>
<div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;    {</div>
<div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;        <span class="keywordflow">if</span> (m_ProfilingService.<a class="code" href="classarmnn_1_1_optional_base.xhtml#a86b749ce2c4bc627fa8a1fcfaf0e314f">has_value</a>() &amp;&amp; m_ProfilingService.<a class="code" href="classarmnn_1_1_optional_reference_switch.xhtml#a77c7d528ac063d870b8c8426ec81c1c3">value</a>().IsProfilingEnabled())</div>
<div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;        {</div>
<div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;            m_ProfilingService.<a class="code" href="classarmnn_1_1_optional_reference_switch.xhtml#a77c7d528ac063d870b8c8426ec81c1c3">value</a>().IncrementCounterValue(arm::pipe::REGISTERED_BACKENDS);</div>
<div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;        }</div>
<div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;    }</div>
<div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160; </div>
<div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;}</div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="_exceptions_8hpp_source.xhtml#l00203">CHECK_LOCATION</a>, <a class="el" href="_optional_8hpp_source.xhtml#l00053">OptionalBase::has_value()</a>, and <a class="el" href="_optional_8hpp_source.xhtml#l00146">OptionalReferenceSwitch&lt; IsReference, T &gt;::value()</a>.</p>

<p class="reference">Referenced by <a class="el" href="_dynamic_backend_utils_8cpp_source.xhtml#l00341">DynamicBackendUtils::RegisterDynamicBackendsImpl()</a>, and <a class="el" href="_backend_registry_8hpp_source.xhtml#l00058">BackendRegistry::StaticRegistryInitializer::StaticRegistryInitializer()</a>.</p>

</div>
</div>
<a id="a89e24dab4e47d8080ce0665f737a00e6"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a89e24dab4e47d8080ce0665f737a00e6">&#9670;&nbsp;</a></span>RegisterAllocator()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void RegisterAllocator </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_backend_id.xhtml">BackendId</a> &amp;&#160;</td>
          <td class="paramname"><em>id</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">std::shared_ptr&lt; <a class="el" href="classarmnn_1_1_i_custom_allocator.xhtml">ICustomAllocator</a> &gt;&#160;</td>
          <td class="paramname"><em>alloc</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_backend_registry_8cpp_source.xhtml#l00112">112</a> of file <a class="el" href="_backend_registry_8cpp_source.xhtml">BackendRegistry.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;{</div>
<div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;    <span class="keywordflow">if</span> (m_CustomMemoryAllocatorMap.find(<span class="keywordtype">id</span>) != m_CustomMemoryAllocatorMap.end())</div>
<div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;    {</div>
<div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;        <span class="keywordflow">throw</span> InvalidArgumentException(</div>
<div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;            std::string(<span class="keywordtype">id</span>) + <span class="stringliteral">&quot; already has an allocator associated with it&quot;</span>,</div>
<div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;            <a class="code" href="_exceptions_8hpp.xhtml#aa3be76aec4ce713822a5ea1ecbb7bc61">CHECK_LOCATION</a>());</div>
<div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;    }</div>
<div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;    m_CustomMemoryAllocatorMap[id] = alloc;</div>
<div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;}</div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="_exceptions_8hpp_source.xhtml#l00203">CHECK_LOCATION</a>.</p>

<p class="reference">Referenced by <a class="el" href="_runtime_8cpp_source.xhtml#l00323">RuntimeImpl::RuntimeImpl()</a>.</p>

</div>
</div>
<a id="ad02fbefe5c0f3ec53059dd630f1d5117"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ad02fbefe5c0f3ec53059dd630f1d5117">&#9670;&nbsp;</a></span>RegisterMemoryOptimizerStrategy()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void RegisterMemoryOptimizerStrategy </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classarmnn_1_1_backend_id.xhtml">BackendId</a> &amp;&#160;</td>
          <td class="paramname"><em>id</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">std::shared_ptr&lt; <a class="el" href="classarmnn_1_1_i_memory_optimizer_strategy.xhtml">IMemoryOptimizerStrategy</a> &gt;&#160;</td>
          <td class="paramname"><em>strategy</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_backend_registry_8cpp_source.xhtml#l00133">133</a> of file <a class="el" href="_backend_registry_8cpp_source.xhtml">BackendRegistry.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;{</div>
<div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;    <span class="keywordflow">if</span> (m_MemoryOptimizerStrategyMap.find(<span class="keywordtype">id</span>) != m_MemoryOptimizerStrategyMap.end())</div>
<div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;    {</div>
<div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;        <span class="keywordflow">throw</span> InvalidArgumentException(</div>
<div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;            std::string(<span class="keywordtype">id</span>) + <span class="stringliteral">&quot; already has an memory optimizer strategy associated with it&quot;</span>,</div>
<div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;            <a class="code" href="_exceptions_8hpp.xhtml#aa3be76aec4ce713822a5ea1ecbb7bc61">CHECK_LOCATION</a>());</div>
<div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;    }</div>
<div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;    m_MemoryOptimizerStrategyMap[id] = strategy;</div>
<div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;}</div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="_exceptions_8hpp_source.xhtml#l00203">CHECK_LOCATION</a>.</p>

<p class="reference">Referenced by <a class="el" href="_runtime_8cpp_source.xhtml#l00323">RuntimeImpl::RuntimeImpl()</a>.</p>

</div>
</div>
<a id="a56879f6e669f40cdd980b54bd458e17c"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a56879f6e669f40cdd980b54bd458e17c">&#9670;&nbsp;</a></span>SetProfilingService()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void SetProfilingService </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classarmnn_1_1_optional.xhtml">armnn::Optional</a>&lt; arm::pipe::IProfilingService &amp; &gt;&#160;</td>
          <td class="paramname"><em>profilingService</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_backend_registry_8cpp_source.xhtml#l00107">107</a> of file <a class="el" href="_backend_registry_8cpp_source.xhtml">BackendRegistry.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;{</div>
<div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;    m_ProfilingService = profilingService;</div>
<div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;}</div>
</div><!-- fragment -->
<p class="reference">Referenced by <a class="el" href="_runtime_8cpp_source.xhtml#l00548">RuntimeImpl::~RuntimeImpl()</a>.</p>

</div>
</div>
<a id="a58f4b9e873b7c1c7d512bd9f7d1489d8"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a58f4b9e873b7c1c7d512bd9f7d1489d8">&#9670;&nbsp;</a></span>Size()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">size_t Size </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_backend_registry_8cpp_source.xhtml#l00070">70</a> of file <a class="el" href="_backend_registry_8cpp_source.xhtml">BackendRegistry.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;{</div>
<div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;    <span class="keywordflow">return</span> m_Factories.size();</div>
<div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;}</div>
</div><!-- fragment -->
</div>
</div>
<a id="a55a68d31e716a63a8b38998649a07b3c"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a55a68d31e716a63a8b38998649a07b3c">&#9670;&nbsp;</a></span>Swap()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void Swap </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classarmnn_1_1_backend_registry.xhtml">BackendRegistry</a> &amp;&#160;</td>
          <td class="paramname"><em>instance</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="classarmnn_1_1_backend_registry.xhtml#a20fb10b59fccc99291e7fe993cd814bb">BackendRegistry::FactoryStorage</a> &amp;&#160;</td>
          <td class="paramname"><em>other</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>For testing only. </p>

<p class="definition">Definition at line <a class="el" href="_backend_registry_8cpp_source.xhtml#l00102">102</a> of file <a class="el" href="_backend_registry_8cpp_source.xhtml">BackendRegistry.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;{</div>
<div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;    <a class="code" href="namespacearmnn.xhtml#a14d7f180bf51e86850305965c3707e07">std::swap</a>(instance.m_Factories, other);</div>
<div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;}</div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="_descriptors_8cpp_source.xhtml#l00350">armnn::swap()</a>.</p>

</div>
</div>
<hr/>The documentation for this class was generated from the following files:<ul>
<li>include/armnn/<a class="el" href="_backend_registry_8hpp_source.xhtml">BackendRegistry.hpp</a></li>
<li>src/armnn/<a class="el" href="_backend_registry_8cpp_source.xhtml">BackendRegistry.cpp</a></li>
</ul>
</div><!-- contents -->
</div><!-- doc-content -->
<div class="ttc" id="a_exceptions_8hpp_xhtml_aa3be76aec4ce713822a5ea1ecbb7bc61"><div class="ttname"><a href="_exceptions_8hpp.xhtml#aa3be76aec4ce713822a5ea1ecbb7bc61">CHECK_LOCATION</a></div><div class="ttdeci">#define CHECK_LOCATION()</div><div class="ttdef"><b>Definition:</b> <a href="_exceptions_8hpp_source.xhtml#l00203">Exceptions.hpp:203</a></div></div>
<div class="ttc" id="aclassarmnn_1_1_backend_registry_xhtml_af0cb2a0745525e13eb5bb10a1064ff52"><div class="ttname"><a href="classarmnn_1_1_backend_registry.xhtml#af0cb2a0745525e13eb5bb10a1064ff52">armnn::BackendRegistry::DeregisterAllocator</a></div><div class="ttdeci">void DeregisterAllocator(const BackendId &amp;id)</div><div class="ttdef"><b>Definition:</b> <a href="_backend_registry_8cpp_source.xhtml#l00123">BackendRegistry.cpp:123</a></div></div>
<div class="ttc" id="aclassarmnn_1_1_backend_registry_xhtml_a570cb1835ec73000a7954ba75257904f"><div class="ttname"><a href="classarmnn_1_1_backend_registry.xhtml#a570cb1835ec73000a7954ba75257904f">armnn::BackendRegistry::GetBackendIds</a></div><div class="ttdeci">BackendIdSet GetBackendIds() const</div><div class="ttdef"><b>Definition:</b> <a href="_backend_registry_8cpp_source.xhtml#l00075">BackendRegistry.cpp:75</a></div></div>
<div class="ttc" id="aclassarmnn_1_1_optional_reference_switch_xhtml_a77c7d528ac063d870b8c8426ec81c1c3"><div class="ttname"><a href="classarmnn_1_1_optional_reference_switch.xhtml#a77c7d528ac063d870b8c8426ec81c1c3">armnn::OptionalReferenceSwitch::value</a></div><div class="ttdeci">const T &amp; value() const</div><div class="ttdef"><b>Definition:</b> <a href="_optional_8hpp_source.xhtml#l00146">Optional.hpp:146</a></div></div>
<div class="ttc" id="anamespacearmnn_xhtml_a14d7f180bf51e86850305965c3707e07"><div class="ttname"><a href="namespacearmnn.xhtml#a14d7f180bf51e86850305965c3707e07">armnn::swap</a></div><div class="ttdeci">void swap(OriginsDescriptor &amp;first, OriginsDescriptor &amp;second)</div><div class="ttdef"><b>Definition:</b> <a href="_descriptors_8cpp_source.xhtml#l00350">Descriptors.cpp:350</a></div></div>
<div class="ttc" id="aclassarmnn_1_1_optional_base_xhtml_a86b749ce2c4bc627fa8a1fcfaf0e314f"><div class="ttname"><a href="classarmnn_1_1_optional_base.xhtml#a86b749ce2c4bc627fa8a1fcfaf0e314f">armnn::OptionalBase::has_value</a></div><div class="ttdeci">bool has_value() const noexcept</div><div class="ttdef"><b>Definition:</b> <a href="_optional_8hpp_source.xhtml#l00053">Optional.hpp:53</a></div></div>
<div class="ttc" id="anamespacearmnn_xhtml_a1854d9cda81304325664363c1fd0fb27"><div class="ttname"><a href="namespacearmnn.xhtml#a1854d9cda81304325664363c1fd0fb27">armnn::BackendIdSet</a></div><div class="ttdeci">std::unordered_set&lt; BackendId &gt; BackendIdSet</div><div class="ttdef"><b>Definition:</b> <a href="_backend_id_8hpp_source.xhtml#l00193">BackendId.hpp:193</a></div></div>
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="namespacearmnn.xhtml">armnn</a></li><li class="navelem"><a class="el" href="classarmnn_1_1_backend_registry.xhtml">BackendRegistry</a></li>
    <li class="footer">Generated on Thu May 18 2023 10:35:45 for ArmNN by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.17 </li>
  </ul>
</div>
</body>
</html>
